AFTER: BEFORE_BEAUTIFY_LOOPS
    0  Root  === 0 37 1735 76 1723 960 947 858 2224 201 990 1760 917 867 501 513 522 531 544 556 565 574 627 824 2167 657 670 815 1748 700 849 837 794 806 1587 1599 1612 1624 2155 2236  [[ 0 1 3 23 24 32 39 55 60 71 82 93 110 119 261 135 139 145 183 184 706 708 1058 1063 1090 1109 1111 1146 1227 1229 1232 1237 1248 1251 1283 1338 1429 1431 1434 1439 1449 1456 1494 1504 1511 1514 1661 1826 1828 1831 1833 1843 1875 1931 2017 2019 2022 2027 2034 2039 2042 2085 2086 2144 2240 2242 2245 2250 2257 2262 2265 2315 2317 2322 2327 ]] 
    1  Con  === 0  [[ ]]  #top
    3  Start  === 3 0  [[ 3 5 6 7 8 9 10 11 12 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:int[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact:not_flat *, 6:int[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact:not_flat *, 7:int}
    5  Parm  === 3  [[ 29 ]] Control !jvms: loop_structure::micro @ bci:-1 (line 6)
    6  Parm  === 3  [[ 201 33 72 ]] I_O !orig=[196] !jvms: loop_structure::micro @ bci:-1 (line 6)
    7  Parm  === 3  [[ 198 160 347 880 592 33 72 41 18 346 219 182 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[102] !jvms: loop_structure::micro @ bci:-1 (line 6)
    8  Parm  === 3  [[ 201 824 806 815 37 33 867 1760 2155 76 72 2224 2236 837 917 858 849 501 513 522 531 544 556 565 574 627 1735 657 670 1748 700 1723 947 960 794 990 2167 1587 1599 1612 1624 ]] FramePtr !orig=[251] !jvms: loop_structure::micro @ bci:-1 (line 6)
    9  Parm  === 3  [[ 201 72 33 ]] ReturnAdr !jvms: loop_structure::micro @ bci:-1 (line 6)
   10  Parm  === 3  [[ 38 25 ]] Parm0: int[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact:not_flat * !jvms: loop_structure::micro @ bci:-1 (line 6)
   11  Parm  === 3  [[ 158 146 72 ]] Parm1: int[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact:not_flat * !jvms: loop_structure::micro @ bci:-1 (line 6)
   12  Parm  === 3  [[ 218 72 345 111 ]] Parm2: int !jvms: loop_structure::micro @ bci:-1 (line 6)
   18  MergeMem  === _ 1 7 1 1 198  [[ 201 ]]  { - - N198:int[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
   23  ConI  === 0  [[ 882 591 72 72 47 305 214 344 ]]  #int:0
   24  ConP  === 0  [[ 25 33 146 ]]  #null
   25  CmpP  === _ 10 24  [[ 26 ]]  !jvms: loop_structure::micro @ bci:4 (line 6)
   26  Bool  === _ 25  [[ 29 ]] [ne] !jvms: loop_structure::micro @ bci:4 (line 6)
   29  If  === 5 26  [[ 30 31 ]] P=0.999999, C=-1.000000 !jvms: loop_structure::micro @ bci:4 (line 6)
   30  IfTrue  === 29  [[ 49 38 ]] #1 !jvms: loop_structure::micro @ bci:4 (line 6)
   31  IfFalse  === 29  [[ 33 ]] #0 !jvms: loop_structure::micro @ bci:4 (line 6)
   32  ConI  === 0  [[ 33 ]]  #int:-10
   33  CallStaticJava  === 31 6 7 8 9 (32 1 1 1 1 1 24 ) [[ 34 ]] # Static uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_structure::micro @ bci:4 (line 6) !jvms: loop_structure::micro @ bci:4 (line 6)
   34  Proj  === 33  [[ 37 ]] #0 !jvms: loop_structure::micro @ bci:4 (line 6)
   37  Halt  === 34 1 1 8 1  [[ 0 ]]  !jvms: loop_structure::micro @ bci:4 (line 6)
   38  CastPP  === 30 10  [[ 218 40 40 2326 2119 72 2119 1515 1301 345 467 470 470 582 585 585 2319 1552 1554 1554 1636 2320 2319 1900 1902 2320 2326 2323 2323 2102 2103 2104 2104 2110 2111 2111 2113 2114 2114 ]]  #int[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact:not_flat * !jvms: loop_structure::micro @ bci:4 (line 6)
   39  ConL  === 0  [[ 40 159 ]]  #long:12
   40  AddP  === _ 38 38 39  [[ 41 ]]  !jvms: loop_structure::micro @ bci:4 (line 6)
   41  LoadRange  === _ 7 40  [[ 1435 852 860 47 1753 72 1742 983 262 228 954 994 463 486 538 549 559 567 704 693 664 2246 2160 842 759 779 831 1538 1606 1617 2229 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=4; #int:>=0 !orig=[1060] !jvms: loop_structure::micro @ bci:4 (line 6)
   47  CmpU  === _ 41 23  [[ 48 ]]  !orig=[255],[220] !jvms: loop_structure::micro @ bci:5 (line 6)
   48  Bool  === _ 47  [[ 49 ]] [le] !orig=[257] !jvms: loop_structure::micro @ bci:5 (line 6)
   49  If  === 30 48  [[ 50 51 ]] P=0.000975, C=263571.000000 !jvms: loop_structure::micro @ bci:5 (line 6)
   50  IfTrue  === 49  [[ 54 ]] #1 !jvms: loop_structure::micro @ bci:5 (line 6)
   51  IfFalse  === 49  [[ 230 ]] #0 !orig=[66] !jvms: loop_structure::micro @ bci:5 (line 6)
   54  Region  === 54 349 50  [[ 54 201 198 ]] #reducible  !jvms: loop_structure::micro @ bci:32 (line 12)
   55  ConI  === 0  [[ 579 491 464 827 1079 784 760 1057 534 872 ]]  #int:1
   71  ConI  === 0  [[ 72 ]]  #int:-66
   72  CallStaticJava  === 222 6 7 8 9 (71 38 11 12 23 23 41 ) [[ 73 ]] # Static uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_structure::micro @ bci:5 (line 6) reexecute !jvms: loop_structure::micro @ bci:5 (line 6)
   73  Proj  === 72  [[ 76 ]] #0 !jvms: loop_structure::micro @ bci:5 (line 6)
   76  Halt  === 73 1 1 8 1  [[ 0 ]]  !jvms: loop_structure::micro @ bci:5 (line 6)
  110  ConI  === 0  [[ 111 ]]  #int:10000
  111  CmpI  === _ 12 110  [[ 112 ]]  !jvms: loop_structure::micro @ bci:12 (line 7)
  112  Bool  === _ 111  [[ 317 ]] [le] !jvms: loop_structure::micro @ bci:12 (line 7)
  119  ConI  === 0  [[ 1527 466 581 ]]  #int:10
  135  ConL  === 0  [[ 2101 874 762 467 468 582 583 1689 2102 1551 1552 2179 ]]  #long:16
  139  ConI  === 0  [[ 876 1518 471 586 2305 764 1534 2261 1555 2303 1691 2294 2309 2307 2292 2290 2107 2112 2117 2120 2182 2185 2188 2190 ]]  #int:2
  145  ConI  === 0  [[ 873 761 465 580 1543 ]]  #int:204
  146  CmpP  === _ 11 24  [[ 147 ]]  !jvms: loop_structure::micro @ bci:25 (line 10)
  147  Bool  === _ 146  [[ 268 ]] [ne] !jvms: loop_structure::micro @ bci:25 (line 10)
  158  CastPP  === 269 11  [[ 1373 218 159 159 875 2324 1531 2264 2321 345 468 469 469 583 584 584 1302 875 2264 762 763 763 874 1551 1553 1553 1635 2321 2318 1689 1690 1690 1770 2311 2316 1901 1904 2302 2325 2316 2324 1964 1965 2325 2302 2318 2311 2101 2105 2106 2106 2108 2109 2109 2115 2116 2116 2118 2118 2179 2180 2181 2181 2183 2184 2184 2186 2187 2187 2189 2189 ]]  #int[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact:not_flat * !jvms: loop_structure::micro @ bci:25 (line 10)
  159  AddP  === _ 158 158 39  [[ 160 ]]  !orig=[271],... !jvms: loop_structure::micro @ bci:25 (line 10)
  160  LoadRange  === _ 7 159  [[ 305 1728 817 279 911 940 495 506 516 524 621 799 2217 650 809 788 1581 1592 2148 1717 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=4; #int:>=0 !orig=[272],... !jvms: loop_structure::micro @ bci:25 (line 10)
  180  AddI  === _ 2199 2144  [[ 1762 210 2199 1712 1737 1705 218 1707 ]]  !orig=[209],... !jvms: loop_structure::micro @ bci:26 (line 6)
  182  MergeMem  === _ 1 7 1 1 1544  [[ 218 ]]  { - - N1544:int[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_structure::micro @ bci:29 (line 6)
  183  ThreadLocal  === 0  [[ 185 ]]  !jvms: loop_structure::micro @ bci:29 (line 6)
  184  ConL  === 0  [[ 185 2113 2186 2115 ]]  #long:48
  185  AddP  === _ 1 183 184  [[ 219 347 ]]  !jvms: loop_structure::micro @ bci:29 (line 6)
  192  IfTrue  === 212  [[ 2192 ]] #1 !jvms: loop_structure::micro @ bci:5 (line 6)
  198  Phi  === 54 351 7  [[ 18 ]]  #memory  Memory: @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=5; !orig=[197] !jvms: loop_structure::micro @ bci:5 (line 6)
  201  Return  === 54 6 18 8 9  [[ 0 ]] 
  210  CmpI  === _ 180 2246  [[ 211 ]]  !orig=[189] !jvms: loop_structure::micro @ bci:5 (line 6)
  211  Bool  === _ 210  [[ 212 ]] [lt] !orig=[190] !jvms: loop_structure::micro @ bci:5 (line 6)
  212  CountedLoopEnd  === 2192 211  [[ 2203 192 ]] [lt] P=0.999025, C=263314.000000 !orig=[191] !jvms: loop_structure::micro @ bci:5 (line 6)
  214  OuterStripMinedLoopEnd  === 218 23  [[ 215 1706 ]] P=0.999025, C=263314.000000
  215  IfTrue  === 214  [[ 216 ]] #1
  216  OuterStripMinedLoop  === 216 2225 215  [[ 216 2192 ]] 
  218  SafePoint  === 2203 1 182 1 1 219 38 158 12 180  [[ 214 ]]  SafePoint  !orig=181 !jvms: loop_structure::micro @ bci:29 (line 6)
  219  LoadP  === 2203 7 185  [[ 218 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[186] !jvms: loop_structure::micro @ bci:29 (line 6)
  222  Region  === 222 283 310 232 270  [[ 222 72 ]]  !orig=[68] !jvms: loop_structure::micro @ bci:5 (line 6)
  228  CmpU  === _ 262 41  [[ 229 ]] 
  229  Bool  === _ 228  [[ 230 ]] [lt]
  230  RangeCheck  === 51 229  [[ 231 232 ]] P=0.999999, C=-1.000000
  231  IfTrue  === 230  [[ 268 ]] #1 !orig=[241]
  232  IfFalse  === 230  [[ 222 ]] #0
  261  ConI  === 0  [[ 262 830 910 663 953 494 620 537 787 1545 1546 1580 1741 1605 1716 ]]  #int:-1
  262  AddI  === _ 41 261  [[ 228 279 ]]  !orig=[227]
  268  If  === 231 147  [[ 269 270 ]] P=0.999999, C=-1.000000
  269  IfTrue  === 268  [[ 308 158 ]] #1
  270  IfFalse  === 268  [[ 222 ]] #0
  279  CmpU  === _ 262 160  [[ 280 ]] 
  280  Bool  === _ 279  [[ 281 ]] [lt]
  281  RangeCheck  === 309 280  [[ 282 283 ]] P=0.999999, C=-1.000000
  282  IfTrue  === 281  [[ 317 ]] #1 !orig=[292],[304] !jvms: loop_structure::micro @ bci:5 (line 6)
  283  IfFalse  === 281  [[ 222 ]] #0
  305  CmpU  === _ 160 23  [[ 307 ]]  !orig=[273]
  307  Bool  === _ 305  [[ 308 ]] [le]
  308  RangeCheck  === 269 307  [[ 309 310 ]] P=0.000001, C=-1.000000 !orig=[275]
  309  IfFalse  === 308  [[ 281 ]] #0 !orig=[276]
  310  IfTrue  === 308  [[ 222 ]] #1 !orig=[277]
  317  If  === 282 112  [[ 318 319 ]] P=0.857778, C=263314.000000
  318  IfTrue  === 317  [[ 877 ]] #1 !orig=[457],[444],[422]
  319  IfFalse  === 317  [[ 587 ]] #0 !orig=[460],[453],[435]
  320  Bool  === _ 321  [[ 338 ]] [lt] !orig=211,[190] !jvms: loop_structure::micro @ bci:5 (line 6)
  321  CmpI  === _ 322 2246  [[ 320 ]]  !orig=210,[189] !jvms: loop_structure::micro @ bci:5 (line 6)
  322  AddI  === _ 2130 2144  [[ 321 2130 1626 1576 1601 1569 345 1571 ]]  !orig=180,... !jvms: loop_structure::micro @ bci:26 (line 6)
  338  CountedLoopEnd  === 2122 320  [[ 339 2133 ]] [lt] P=0.999025, C=263314.000000 !orig=212,[191] !jvms: loop_structure::micro @ bci:5 (line 6)
  339  IfTrue  === 338  [[ 2122 ]] #1 !orig=192 !jvms: loop_structure::micro @ bci:5 (line 6)
  342  OuterStripMinedLoop  === 342 2156 343  [[ 342 2122 ]]  !orig=216
  343  IfTrue  === 344  [[ 342 ]] #1 !orig=215
  344  OuterStripMinedLoopEnd  === 345 23  [[ 343 1570 ]] P=0.999025, C=263314.000000 !orig=214
  345  SafePoint  === 2133 1 346 1 1 347 38 158 12 322  [[ 344 ]]  SafePoint  !orig=218,181 !jvms: loop_structure::micro @ bci:29 (line 6)
  346  MergeMem  === _ 1 7 1 1 1530  [[ 345 ]]  { - - N1530:int[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=182 !jvms: loop_structure::micro @ bci:29 (line 6)
  347  LoadP  === 2133 7 185  [[ 345 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=219,[186] !jvms: loop_structure::micro @ bci:29 (line 6)
  349  Region  === 349 481 774  [[ 349 54 351 ]]  !orig=[193] !jvms: loop_structure::micro @ bci:5 (line 6)
  351  Phi  === 349 483 776  [[ 198 ]]  #memory  Memory: @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=5;
  462  Bool  === _ 463  [[ 473 ]] [lt] !orig=320,211,[190] !jvms: loop_structure::micro @ bci:5 (line 6)
  463  CmpI  === _ 464 41  [[ 462 ]]  !orig=321,210,[189] !jvms: loop_structure::micro @ bci:5 (line 6)
  464  AddI  === _ 476 55  [[ 463 476 ]]  !orig=322,... !jvms: loop_structure::micro @ bci:26 (line 6)
  465  StoreI  === 472 466 468 145  [[ 477 483 ]]  @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=5;  Memory: @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact:not_flat+any *, idx=5; !orig=[324],[179],1017 !jvms: loop_structure::micro @ bci:25 (line 10)
  466  StoreI  === 472 477 467 119  [[ 465 ]]  @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=5;  Memory: @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact:not_flat+any *, idx=5; !orig=[323],143 !jvms: loop_structure::micro @ bci:19 (line 8)
  467  AddP  === _ 38 470 135  [[ 466 ]]  !orig=[326],[141] !jvms: loop_structure::micro @ bci:19 (line 8)
  468  AddP  === _ 158 469 135  [[ 465 ]]  !orig=[325],[177] !jvms: loop_structure::micro @ bci:25 (line 10)
  469  AddP  === _ 158 158 471  [[ 468 ]]  !orig=[327],[178] !jvms: loop_structure::micro @ bci:25 (line 10)
  470  AddP  === _ 38 38 471  [[ 467 ]]  !orig=[328],[142] !jvms: loop_structure::micro @ bci:19 (line 8)
  471  LShiftL  === _ 475 139  [[ 469 470 ]]  !orig=[329],[176],[140] !jvms: loop_structure::micro @ bci:25 (line 10)
  472  CountedLoop  === 472 514 474  [[ 465 466 472 473 476 477 ]] inner stride: 1 post of N330 !orig=[330],[217],[208],[104] !jvms: loop_structure::micro @ bci:8 (line 7)
  473  CountedLoopEnd  === 472 462  [[ 474 478 ]] [lt] P=0.500000, C=263314.000000 !orig=338,212,[191] !jvms: loop_structure::micro @ bci:5 (line 6)
  474  IfTrue  === 473  [[ 472 ]] #1 !orig=339,192 !jvms: loop_structure::micro @ bci:5 (line 6)
  475  ConvI2L  === _ 476  [[ 471 ]]  #long:0..maxint-1, widen: 3 !orig=[333],[175],[138] !jvms: loop_structure::micro @ bci:25 (line 10)
  476  Phi  === 472 576 464  [[ 464 475 ]]  #int:0..maxint-1, widen: 3 #tripcount !orig=334,107,[174] !jvms: loop_structure::micro @ bci:8 (line 7)
  477  Phi  === 472 608 465  [[ 466 ]]  #memory  Memory: @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=5; !orig=331,[204],[202],[106] !jvms: loop_structure::micro @ bci:8 (line 7)
  478  IfFalse  === 473  [[ 481 ]] #0 !orig=[341],[213],[193] !jvms: loop_structure::micro @ bci:5 (line 6)
  481  Region  === 481 478 482  [[ 481 349 483 ]]  !orig=[348],[193] !jvms: loop_structure::micro @ bci:5 (line 6)
  482  IfFalse  === 488  [[ 481 ]] #0 !orig=[348],[193] !jvms: loop_structure::micro @ bci:5 (line 6)
  483  Phi  === 481 465 608  [[ 351 ]]  #memory  Memory: @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=5;
  485  OpaqueZeroTripGuard  === _ 598  [[ 486 ]] 
  486  CmpI  === _ 485 41  [[ 487 ]] 
  487  Bool  === _ 486  [[ 488 ]] [lt]
  488  If  === 596 487  [[ 482 489 ]] P=0.500000, C=-1.000000
  489  IfTrue  === 488  [[ 562 493 536 576 ]] #1
  490  OpaqueLoopInit  === _ 598  [[ 492 ]] 
  491  OpaqueLoopStride  === _ 55  [[ 492 ]]  !orig=[380],[293]
  492  AddI  === _ 490 491  [[ 493 ]]  !orig=[381],[313],[312],[294]
  493  CastII  === 489 492  [[ 494 ]]  #int:>=1, widen: 3 !orig=[382],[314],[296]
  494  AddI  === _ 493 261  [[ 495 ]]  !orig=[383],[316],[296]
  495  CmpU  === _ 494 160  [[ 496 ]]  !orig=[384],[297]
  496  Bool  === _ 495  [[ 497 ]] [lt] !orig=[385],[298]
  497  OpaqueTemplateAssertionPredicate  === _ 496  [[ 498 ]] loop_idx=472 
  498  RangeCheck  === 532 497  [[ 499 502 ]] #Last Value Assertion Predicate  P=0.999999, C=-1.000000
  499  IfFalse  === 498  [[ 501 ]] #0
  501  Halt  === 499 1 1 8 1  [[ 0 ]] 
  502  IfTrue  === 498  [[ 510 ]] #1
  506  CmpU  === _ 1046 160  [[ 507 ]]  !orig=[384],[297]
  507  Bool  === _ 506  [[ 509 ]] [lt] !orig=[385],[298]
  509  OpaqueInitializedAssertionPredicate  === _ 507  [[ 510 ]] 
  510  RangeCheck  === 502 509  [[ 511 514 ]] #Last Value Assertion Predicate  P=0.999999, C=-1.000000
  511  IfFalse  === 510  [[ 513 ]] #0
  513  Halt  === 511 1 1 8 1  [[ 0 ]] 
  514  IfTrue  === 510  [[ 472 ]] #1
  515  OpaqueLoopInit  === _ 598  [[ 516 ]] 
  516  CmpU  === _ 515 160  [[ 517 ]]  !orig=[402],[285]
  517  Bool  === _ 516  [[ 518 ]] [lt] !orig=[403],[286]
  518  OpaqueTemplateAssertionPredicate  === _ 517  [[ 519 ]] loop_idx=472 
  519  RangeCheck  === 557 518  [[ 520 523 ]] #Init Value Assertion Predicate  P=0.999999, C=-1.000000
  520  IfFalse  === 519  [[ 522 ]] #0
  522  Halt  === 520 1 1 8 1  [[ 0 ]] 
  523  IfTrue  === 519  [[ 528 ]] #1
  524  CmpU  === _ 598 160  [[ 525 ]]  !orig=[402],[285]
  525  Bool  === _ 524  [[ 527 ]] [lt] !orig=[403],[286]
  527  OpaqueInitializedAssertionPredicate  === _ 525  [[ 528 ]] 
  528  RangeCheck  === 523 527  [[ 529 532 ]] #Init Value Assertion Predicate  P=0.999999, C=-1.000000
  529  IfFalse  === 528  [[ 531 ]] #0
  531  Halt  === 529 1 1 8 1  [[ 0 ]] 
  532  IfTrue  === 528  [[ 498 ]] #1
  533  OpaqueLoopInit  === _ 598  [[ 535 ]] 
  534  OpaqueLoopStride  === _ 55  [[ 535 ]]  !orig=[424],[242]
  535  AddI  === _ 533 534  [[ 536 ]]  !orig=[425],[264],[263],[243]
  536  CastII  === 489 535  [[ 537 ]]  #int:>=1, widen: 3 !orig=[426],[265],[245]
  537  AddI  === _ 536 261  [[ 538 ]]  !orig=[427],[267],[245]
  538  CmpU  === _ 537 41  [[ 539 ]]  !orig=[428],[246]
  539  Bool  === _ 538  [[ 540 ]] [lt] !orig=[429],[247]
  540  OpaqueTemplateAssertionPredicate  === _ 539  [[ 541 ]] loop_idx=472 
  541  RangeCheck  === 575 540  [[ 542 545 ]] #Last Value Assertion Predicate  P=0.999999, C=-1.000000
  542  IfFalse  === 541  [[ 544 ]] #0
  544  Halt  === 542 1 1 8 1  [[ 0 ]] 
  545  IfTrue  === 541  [[ 1046 553 ]] #1
  549  CmpU  === _ 1046 41  [[ 550 ]]  !orig=[428],[246]
  550  Bool  === _ 549  [[ 552 ]] [lt] !orig=[429],[247]
  552  OpaqueInitializedAssertionPredicate  === _ 550  [[ 553 ]] 
  553  RangeCheck  === 545 552  [[ 554 557 ]] #Last Value Assertion Predicate  P=0.999999, C=-1.000000
  554  IfFalse  === 553  [[ 556 ]] #0
  556  Halt  === 554 1 1 8 1  [[ 0 ]] 
  557  IfTrue  === 553  [[ 519 ]] #1
  558  OpaqueLoopInit  === _ 598  [[ 559 ]] 
  559  CmpU  === _ 558 41  [[ 560 ]]  !orig=[446],[234]
  560  Bool  === _ 559  [[ 561 ]] [lt] !orig=[447],[235]
  561  OpaqueTemplateAssertionPredicate  === _ 560  [[ 562 ]] loop_idx=472 
  562  RangeCheck  === 489 561  [[ 563 566 ]] #Init Value Assertion Predicate  P=0.999999, C=-1.000000
  563  IfFalse  === 562  [[ 565 ]] #0
  565  Halt  === 563 1 1 8 1  [[ 0 ]] 
  566  IfTrue  === 562  [[ 571 ]] #1
  567  CmpU  === _ 598 41  [[ 568 ]]  !orig=[446],[234]
  568  Bool  === _ 567  [[ 570 ]] [lt] !orig=[447],[235]
  570  OpaqueInitializedAssertionPredicate  === _ 568  [[ 571 ]] 
  571  RangeCheck  === 566 570  [[ 572 575 ]] #Init Value Assertion Predicate  P=0.999999, C=-1.000000
  572  IfFalse  === 571  [[ 574 ]] #0
  574  Halt  === 572 1 1 8 1  [[ 0 ]] 
  575  IfTrue  === 571  [[ 541 ]] #1
  576  CastII  === 489 598  [[ 476 ]]  #int unconditional dependency
  577  Bool  === _ 578  [[ 588 ]] [lt] !orig=320,211,[190] !jvms: loop_structure::micro @ bci:5 (line 6)
  578  CmpI  === _ 579 704  [[ 577 ]]  !orig=321,210,[189] !jvms: loop_structure::micro @ bci:5 (line 6)
  579  AddI  === _ 591 55  [[ 578 591 598 612 693 616 659 650 ]]  !orig=322,... !jvms: loop_structure::micro @ bci:26 (line 6)
  580  StoreI  === 587 581 583 145  [[ 592 2125 608 ]]  @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=5;  Memory: @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact:not_flat+any *, idx=5; !orig=[324],[179],1017 !jvms: loop_structure::micro @ bci:25 (line 10)
  581  StoreI  === 587 592 582 119  [[ 580 ]]  @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=5;  Memory: @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact:not_flat+any *, idx=5; !orig=[323],143 !jvms: loop_structure::micro @ bci:19 (line 8)
  582  AddP  === _ 38 585 135  [[ 581 ]]  !orig=[326],[141] !jvms: loop_structure::micro @ bci:19 (line 8)
  583  AddP  === _ 158 584 135  [[ 580 ]]  !orig=[325],[177] !jvms: loop_structure::micro @ bci:25 (line 10)
  584  AddP  === _ 158 158 586  [[ 583 ]]  !orig=[327],[178] !jvms: loop_structure::micro @ bci:25 (line 10)
  585  AddP  === _ 38 38 586  [[ 582 ]]  !orig=[328],[142] !jvms: loop_structure::micro @ bci:19 (line 8)
  586  LShiftL  === _ 590 139  [[ 584 585 ]]  !orig=[329],[176],[140] !jvms: loop_structure::micro @ bci:25 (line 10)
  587  CountedLoop  === 587 319 589  [[ 580 581 587 588 591 592 ]] inner stride: 1 pre of N330 !orig=[330],[217],[208],[104] !jvms: loop_structure::micro @ bci:8 (line 7)
  588  CountedLoopEnd  === 587 577  [[ 589 610 ]] [lt] P=0.500000, C=263314.000000 !orig=338,212,[191] !jvms: loop_structure::micro @ bci:5 (line 6)
  589  IfTrue  === 588  [[ 587 ]] #1 !orig=339,192 !jvms: loop_structure::micro @ bci:5 (line 6)
  590  ConvI2L  === _ 591  [[ 586 ]]  #long:0..maxint-1, widen: 3 !orig=[333],[175],[138] !jvms: loop_structure::micro @ bci:25 (line 10)
  591  Phi  === 587 23 579  [[ 579 590 2279 1055 ]]  #int:0..maxint-1, widen: 3 #tripcount !orig=334,107,[174] !jvms: loop_structure::micro @ bci:8 (line 7)
  592  Phi  === 587 7 580  [[ 581 ]]  #memory  Memory: @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=5; !orig=331,[204],[202],[106] !jvms: loop_structure::micro @ bci:8 (line 7)
  593  IfFalse  === 614  [[ 596 ]] #0 !orig=[341],[213],[193] !jvms: loop_structure::micro @ bci:5 (line 6)
  596  Region  === 596 593 1566  [[ 596 488 598 608 ]]  !orig=[484]
  598  Phi  === 596 579 1569  [[ 567 558 1046 533 524 515 485 490 576 ]]  #int
  608  Phi  === 596 580 1568  [[ 477 483 ]]  #memory  Memory: @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=5;
  610  IfFalse  === 588  [[ 614 ]] #0
  611  OpaqueZeroTripGuard  === _ 2246  [[ 612 ]] 
  612  CmpI  === _ 579 611  [[ 613 ]] 
  613  Bool  === _ 612  [[ 614 ]] [lt]
  614  If  === 610 613  [[ 593 615 ]] P=0.999999, C=-1.000000
  615  IfTrue  === 614  [[ 697 619 662 1055 ]] #1 !orig=[692]
  616  OpaqueLoopInit  === _ 579  [[ 618 ]] 
  617  OpaqueLoopStride  === _ 2144  [[ 618 ]]  !orig=[380],[293]
  618  AddI  === _ 616 617  [[ 619 ]]  !orig=[381],[313],[312],[294]
  619  CastII  === 615 618  [[ 620 ]]  #int:>=1, widen: 3 !orig=[382],[314],[296]
  620  AddI  === _ 619 261  [[ 621 ]]  !orig=[383],[316],[296]
  621  CmpU  === _ 620 160  [[ 622 ]]  !orig=[384],[297]
  622  Bool  === _ 621  [[ 623 ]] [lt] !orig=[385],[298]
  623  OpaqueTemplateAssertionPredicate  === _ 622  [[ 624 ]] loop_idx=2122 
  624  RangeCheck  === 658 623  [[ 625 628 ]] #Last Value Assertion Predicate  P=0.999999, C=-1.000000
  625  IfFalse  === 624  [[ 627 ]] #0
  627  Halt  === 625 1 1 8 1  [[ 0 ]] 
  628  IfTrue  === 624  [[ 2152 ]] #1
  650  CmpU  === _ 579 160  [[ 651 ]]  !orig=[402],[285]
  651  Bool  === _ 650  [[ 653 ]] [lt] !orig=[403],[286]
  653  OpaqueInitializedAssertionPredicate  === _ 651  [[ 654 ]] 
  654  RangeCheck  === 2168 653  [[ 655 658 ]] #Init Value Assertion Predicate  P=0.999999, C=-1.000000
  655  IfFalse  === 654  [[ 657 ]] #0
  657  Halt  === 655 1 1 8 1  [[ 0 ]] 
  658  IfTrue  === 654  [[ 624 ]] #1
  659  OpaqueLoopInit  === _ 579  [[ 661 ]] 
  660  OpaqueLoopStride  === _ 2144  [[ 661 ]]  !orig=[424],[242]
  661  AddI  === _ 659 660  [[ 662 ]]  !orig=[425],[264],[263],[243]
  662  CastII  === 615 661  [[ 663 ]]  #int:>=1, widen: 3 !orig=[426],[265],[245]
  663  AddI  === _ 662 261  [[ 664 ]]  !orig=[427],[267],[245]
  664  CmpU  === _ 663 41  [[ 665 ]]  !orig=[428],[246]
  665  Bool  === _ 664  [[ 666 ]] [lt] !orig=[429],[247]
  666  OpaqueTemplateAssertionPredicate  === _ 665  [[ 667 ]] loop_idx=2122 
  667  RangeCheck  === 701 666  [[ 668 671 ]] #Last Value Assertion Predicate  P=0.999999, C=-1.000000
  668  IfFalse  === 667  [[ 670 ]] #0
  670  Halt  === 668 1 1 8 1  [[ 0 ]] 
  671  IfTrue  === 667  [[ 2279 2164 ]] #1
  693  CmpU  === _ 579 41  [[ 694 ]]  !orig=[446],[234]
  694  Bool  === _ 693  [[ 696 ]] [lt] !orig=[447],[235]
  696  OpaqueInitializedAssertionPredicate  === _ 694  [[ 697 ]] 
  697  RangeCheck  === 615 696  [[ 698 701 ]] #Init Value Assertion Predicate  P=0.999999, C=-1.000000
  698  IfFalse  === 697  [[ 700 ]] #0
  700  Halt  === 698 1 1 8 1  [[ 0 ]] 
  701  IfTrue  === 697  [[ 667 ]] #1
  704  Opaque1  === _ 1526 41  [[ 578 ]] 
  706  ConL  === 0  [[ 1540 1524 ]]  #long:1
  758  Bool  === _ 759  [[ 766 ]] [lt] !orig=211,[190] !jvms: loop_structure::micro @ bci:5 (line 6)
  759  CmpI  === _ 760 41  [[ 758 ]]  !orig=210,[189] !jvms: loop_structure::micro @ bci:5 (line 6)
  760  AddI  === _ 770 55  [[ 759 770 ]]  !orig=180,... !jvms: loop_structure::micro @ bci:26 (line 6)
  761  StoreI  === 765 768 762 145  [[ 768 776 ]]  @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=5;  Memory: @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact:not_flat+any *, idx=5; !orig=[179],1017 !jvms: loop_structure::micro @ bci:25 (line 10)
  762  AddP  === _ 158 763 135  [[ 761 ]]  !orig=[177] !jvms: loop_structure::micro @ bci:25 (line 10)
  763  AddP  === _ 158 158 764  [[ 762 ]]  !orig=[178] !jvms: loop_structure::micro @ bci:25 (line 10)
  764  LShiftL  === _ 769 139  [[ 763 ]]  !orig=[176],[140] !jvms: loop_structure::micro @ bci:25 (line 10)
  765  CountedLoop  === 765 807 767  [[ 761 765 766 768 770 ]] inner stride: 1 post of N217 !orig=[217],[208],[104] !jvms: loop_structure::micro @ bci:8 (line 7)
  766  CountedLoopEnd  === 765 758  [[ 767 771 ]] [lt] P=0.500000, C=263314.000000 !orig=212,[191] !jvms: loop_structure::micro @ bci:5 (line 6)
  767  IfTrue  === 766  [[ 765 ]] #1 !orig=192 !jvms: loop_structure::micro @ bci:5 (line 6)
  768  Phi  === 765 898 761  [[ 761 ]]  #memory  Memory: @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=5; !orig=[204],[202],[106] !jvms: loop_structure::micro @ bci:8 (line 7)
  769  ConvI2L  === _ 770  [[ 764 ]]  #long:0..maxint-1, widen: 3 !orig=[175],[138] !jvms: loop_structure::micro @ bci:25 (line 10)
  770  Phi  === 765 869 760  [[ 760 769 ]]  #int:0..maxint-1, widen: 3 #tripcount !orig=107,[174] !jvms: loop_structure::micro @ bci:8 (line 7)
  771  IfFalse  === 766  [[ 774 ]] #0 !orig=[213],[193] !jvms: loop_structure::micro @ bci:5 (line 6)
  774  Region  === 774 771 775  [[ 774 349 776 ]]  !orig=[350],[193] !jvms: loop_structure::micro @ bci:5 (line 6)
  775  IfFalse  === 781  [[ 774 ]] #0 !orig=[350],[193] !jvms: loop_structure::micro @ bci:5 (line 6)
  776  Phi  === 774 761 898  [[ 351 ]]  #memory  Memory: @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=5;
  778  OpaqueZeroTripGuard  === _ 888  [[ 779 ]] 
  779  CmpI  === _ 778 41  [[ 780 ]] 
  780  Bool  === _ 779  [[ 781 ]] [lt]
  781  If  === 886 780  [[ 775 782 ]] P=0.500000, C=-1.000000
  782  IfTrue  === 781  [[ 855 786 829 869 ]] #1
  783  OpaqueLoopInit  === _ 888  [[ 785 ]] 
  784  OpaqueLoopStride  === _ 55  [[ 785 ]]  !orig=[367],[293]
  785  AddI  === _ 783 784  [[ 786 ]]  !orig=[368],[313],[312],[294]
  786  CastII  === 782 785  [[ 787 ]]  #int:>=1, widen: 3 !orig=[369],[314],[296]
  787  AddI  === _ 786 261  [[ 788 ]]  !orig=[370],[316],[296]
  788  CmpU  === _ 787 160  [[ 789 ]]  !orig=[371],[297]
  789  Bool  === _ 788  [[ 790 ]] [lt] !orig=[372],[298]
  790  OpaqueTemplateAssertionPredicate  === _ 789  [[ 791 ]] loop_idx=765 
  791  RangeCheck  === 825 790  [[ 792 795 ]] #Last Value Assertion Predicate  P=0.999999, C=-1.000000
  792  IfFalse  === 791  [[ 794 ]] #0
  794  Halt  === 792 1 1 8 1  [[ 0 ]] 
  795  IfTrue  === 791  [[ 803 ]] #1
  799  CmpU  === _ 1103 160  [[ 800 ]]  !orig=[371],[297]
  800  Bool  === _ 799  [[ 802 ]] [lt] !orig=[372],[298]
  802  OpaqueInitializedAssertionPredicate  === _ 800  [[ 803 ]] 
  803  RangeCheck  === 795 802  [[ 804 807 ]] #Last Value Assertion Predicate  P=0.999999, C=-1.000000
  804  IfFalse  === 803  [[ 806 ]] #0
  806  Halt  === 804 1 1 8 1  [[ 0 ]] 
  807  IfTrue  === 803  [[ 765 ]] #1
  808  OpaqueLoopInit  === _ 888  [[ 809 ]] 
  809  CmpU  === _ 808 160  [[ 810 ]]  !orig=[393],[285]
  810  Bool  === _ 809  [[ 811 ]] [lt] !orig=[394],[286]
  811  OpaqueTemplateAssertionPredicate  === _ 810  [[ 812 ]] loop_idx=765 
  812  RangeCheck  === 850 811  [[ 813 816 ]] #Init Value Assertion Predicate  P=0.999999, C=-1.000000
  813  IfFalse  === 812  [[ 815 ]] #0
  815  Halt  === 813 1 1 8 1  [[ 0 ]] 
  816  IfTrue  === 812  [[ 821 ]] #1
  817  CmpU  === _ 888 160  [[ 818 ]]  !orig=[393],[285]
  818  Bool  === _ 817  [[ 820 ]] [lt] !orig=[394],[286]
  820  OpaqueInitializedAssertionPredicate  === _ 818  [[ 821 ]] 
  821  RangeCheck  === 816 820  [[ 822 825 ]] #Init Value Assertion Predicate  P=0.999999, C=-1.000000
  822  IfFalse  === 821  [[ 824 ]] #0
  824  Halt  === 822 1 1 8 1  [[ 0 ]] 
  825  IfTrue  === 821  [[ 791 ]] #1
  826  OpaqueLoopInit  === _ 888  [[ 828 ]] 
  827  OpaqueLoopStride  === _ 55  [[ 828 ]]  !orig=[411],[242]
  828  AddI  === _ 826 827  [[ 829 ]]  !orig=[412],[264],[263],[243]
  829  CastII  === 782 828  [[ 830 ]]  #int:>=1, widen: 3 !orig=[413],[265],[245]
  830  AddI  === _ 829 261  [[ 831 ]]  !orig=[414],[267],[245]
  831  CmpU  === _ 830 41  [[ 832 ]]  !orig=[415],[246]
  832  Bool  === _ 831  [[ 833 ]] [lt] !orig=[416],[247]
  833  OpaqueTemplateAssertionPredicate  === _ 832  [[ 834 ]] loop_idx=765 
  834  RangeCheck  === 868 833  [[ 835 838 ]] #Last Value Assertion Predicate  P=0.999999, C=-1.000000
  835  IfFalse  === 834  [[ 837 ]] #0
  837  Halt  === 835 1 1 8 1  [[ 0 ]] 
  838  IfTrue  === 834  [[ 1103 846 ]] #1
  842  CmpU  === _ 1103 41  [[ 843 ]]  !orig=[415],[246]
  843  Bool  === _ 842  [[ 845 ]] [lt] !orig=[416],[247]
  845  OpaqueInitializedAssertionPredicate  === _ 843  [[ 846 ]] 
  846  RangeCheck  === 838 845  [[ 847 850 ]] #Last Value Assertion Predicate  P=0.999999, C=-1.000000
  847  IfFalse  === 846  [[ 849 ]] #0
  849  Halt  === 847 1 1 8 1  [[ 0 ]] 
  850  IfTrue  === 846  [[ 812 ]] #1
  851  OpaqueLoopInit  === _ 888  [[ 852 ]] 
  852  CmpU  === _ 851 41  [[ 853 ]]  !orig=[437],[234]
  853  Bool  === _ 852  [[ 854 ]] [lt] !orig=[438],[235]
  854  OpaqueTemplateAssertionPredicate  === _ 853  [[ 855 ]] loop_idx=765 
  855  RangeCheck  === 782 854  [[ 856 859 ]] #Init Value Assertion Predicate  P=0.999999, C=-1.000000
  856  IfFalse  === 855  [[ 858 ]] #0
  858  Halt  === 856 1 1 8 1  [[ 0 ]] 
  859  IfTrue  === 855  [[ 864 ]] #1
  860  CmpU  === _ 888 41  [[ 861 ]]  !orig=[437],[234]
  861  Bool  === _ 860  [[ 863 ]] [lt] !orig=[438],[235]
  863  OpaqueInitializedAssertionPredicate  === _ 861  [[ 864 ]] 
  864  RangeCheck  === 859 863  [[ 865 868 ]] #Init Value Assertion Predicate  P=0.999999, C=-1.000000
  865  IfFalse  === 864  [[ 867 ]] #0
  867  Halt  === 865 1 1 8 1  [[ 0 ]] 
  868  IfTrue  === 864  [[ 834 ]] #1
  869  CastII  === 782 888  [[ 770 ]]  #int unconditional dependency
  870  Bool  === _ 871  [[ 878 ]] [lt] !orig=211,[190] !jvms: loop_structure::micro @ bci:5 (line 6)
  871  CmpI  === _ 872 994  [[ 870 ]]  !orig=210,[189] !jvms: loop_structure::micro @ bci:5 (line 6)
  872  AddI  === _ 882 55  [[ 871 882 888 902 940 906 983 949 ]]  !orig=180,... !jvms: loop_structure::micro @ bci:26 (line 6)
  873  StoreI  === 877 880 874 145  [[ 880 2200 898 ]]  @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=5;  Memory: @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact:not_flat+any *, idx=5; !orig=[179],1017 !jvms: loop_structure::micro @ bci:25 (line 10)
  874  AddP  === _ 158 875 135  [[ 873 ]]  !orig=[177] !jvms: loop_structure::micro @ bci:25 (line 10)
  875  AddP  === _ 158 158 876  [[ 874 ]]  !orig=[178] !jvms: loop_structure::micro @ bci:25 (line 10)
  876  LShiftL  === _ 881 139  [[ 875 ]]  !orig=[176],[140] !jvms: loop_structure::micro @ bci:25 (line 10)
  877  CountedLoop  === 877 318 879  [[ 873 877 878 880 882 ]] inner stride: 1 pre of N217 !orig=[217],[208],[104] !jvms: loop_structure::micro @ bci:8 (line 7)
  878  CountedLoopEnd  === 877 870  [[ 879 900 ]] [lt] P=0.500000, C=263314.000000 !orig=212,[191] !jvms: loop_structure::micro @ bci:5 (line 6)
  879  IfTrue  === 878  [[ 877 ]] #1 !orig=192 !jvms: loop_structure::micro @ bci:5 (line 6)
  880  Phi  === 877 7 873  [[ 873 ]]  #memory  Memory: @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=5; !orig=[204],[202],[106] !jvms: loop_structure::micro @ bci:8 (line 7)
  881  ConvI2L  === _ 882  [[ 876 ]]  #long:0..maxint-1, widen: 3 !orig=[175],[138] !jvms: loop_structure::micro @ bci:25 (line 10)
  882  Phi  === 877 23 872  [[ 872 881 1077 2273 ]]  #int:0..maxint-1, widen: 3 #tripcount !orig=107,[174] !jvms: loop_structure::micro @ bci:8 (line 7)
  883  IfFalse  === 904  [[ 886 ]] #0 !orig=[213],[193] !jvms: loop_structure::micro @ bci:5 (line 6)
  886  Region  === 886 883 1702  [[ 886 781 888 898 ]]  !orig=[777]
  888  Phi  === 886 872 1705  [[ 860 851 1103 826 817 808 778 783 869 ]]  #int
  898  Phi  === 886 873 1704  [[ 768 776 ]]  #memory  Memory: @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=5;
  900  IfFalse  === 878  [[ 904 ]] #0
  901  OpaqueZeroTripGuard  === _ 2246  [[ 902 ]] 
  902  CmpI  === _ 872 901  [[ 903 ]] 
  903  Bool  === _ 902  [[ 904 ]] [lt]
  904  If  === 900 903  [[ 883 905 ]] P=0.999999, C=-1.000000
  905  IfTrue  === 904  [[ 987 909 952 1077 ]] #1 !orig=[982]
  906  OpaqueLoopInit  === _ 872  [[ 908 ]] 
  907  OpaqueLoopStride  === _ 2144  [[ 908 ]]  !orig=[367],[293]
  908  AddI  === _ 906 907  [[ 909 ]]  !orig=[368],[313],[312],[294]
  909  CastII  === 905 908  [[ 910 ]]  #int:>=1, widen: 3 !orig=[369],[314],[296]
  910  AddI  === _ 909 261  [[ 911 ]]  !orig=[370],[316],[296]
  911  CmpU  === _ 910 160  [[ 912 ]]  !orig=[371],[297]
  912  Bool  === _ 911  [[ 913 ]] [lt] !orig=[372],[298]
  913  OpaqueTemplateAssertionPredicate  === _ 912  [[ 914 ]] loop_idx=2192 
  914  RangeCheck  === 948 913  [[ 915 918 ]] #Last Value Assertion Predicate  P=0.999999, C=-1.000000
  915  IfFalse  === 914  [[ 917 ]] #0
  917  Halt  === 915 1 1 8 1  [[ 0 ]] 
  918  IfTrue  === 914  [[ 2221 ]] #1
  940  CmpU  === _ 872 160  [[ 941 ]]  !orig=[393],[285]
  941  Bool  === _ 940  [[ 943 ]] [lt] !orig=[394],[286]
  943  OpaqueInitializedAssertionPredicate  === _ 941  [[ 944 ]] 
  944  RangeCheck  === 2237 943  [[ 945 948 ]] #Init Value Assertion Predicate  P=0.999999, C=-1.000000
  945  IfFalse  === 944  [[ 947 ]] #0
  947  Halt  === 945 1 1 8 1  [[ 0 ]] 
  948  IfTrue  === 944  [[ 914 ]] #1
  949  OpaqueLoopInit  === _ 872  [[ 951 ]] 
  950  OpaqueLoopStride  === _ 2144  [[ 951 ]]  !orig=[411],[242]
  951  AddI  === _ 949 950  [[ 952 ]]  !orig=[412],[264],[263],[243]
  952  CastII  === 905 951  [[ 953 ]]  #int:>=1, widen: 3 !orig=[413],[265],[245]
  953  AddI  === _ 952 261  [[ 954 ]]  !orig=[414],[267],[245]
  954  CmpU  === _ 953 41  [[ 955 ]]  !orig=[415],[246]
  955  Bool  === _ 954  [[ 956 ]] [lt] !orig=[416],[247]
  956  OpaqueTemplateAssertionPredicate  === _ 955  [[ 957 ]] loop_idx=2192 
  957  RangeCheck  === 991 956  [[ 958 961 ]] #Last Value Assertion Predicate  P=0.999999, C=-1.000000
  958  IfFalse  === 957  [[ 960 ]] #0
  960  Halt  === 958 1 1 8 1  [[ 0 ]] 
  961  IfTrue  === 957  [[ 2273 2233 ]] #1
  983  CmpU  === _ 872 41  [[ 984 ]]  !orig=[437],[234]
  984  Bool  === _ 983  [[ 986 ]] [lt] !orig=[438],[235]
  986  OpaqueInitializedAssertionPredicate  === _ 984  [[ 987 ]] 
  987  RangeCheck  === 905 986  [[ 988 991 ]] #Init Value Assertion Predicate  P=0.999999, C=-1.000000
  988  IfFalse  === 987  [[ 990 ]] #0
  990  Halt  === 988 1 1 8 1  [[ 0 ]] 
  991  IfTrue  === 987  [[ 957 ]] #1
  994  Opaque1  === _ 1542 41  [[ 871 ]] 
 1046  CastII  === 545 598  [[ 506 549 ]]  #int:0..maxint-1, widen: 3 !orig=[547],[426],[265],[245]
 1055  CastII  === 615 591  [[ 1057 ]]  #int:0..maxint-1, widen: 3 unconditional dependency !orig=[702]
 1057  AddI  === _ 1055 55  [[ 2130 ]]  !orig=[702]
 1077  CastII  === 905 882  [[ 1079 ]]  #int:0..maxint-1, widen: 3 unconditional dependency !orig=[992]
 1079  AddI  === _ 1077 55  [[ 2199 ]]  !orig=[992]
 1103  CastII  === 838 888  [[ 842 799 ]]  #int:0..maxint-1, widen: 3 !orig=[840],[413],[265],[245]
 1301  AddP  === _ 38 2320 2265  [[ 1529 ]]  !orig=[1121],[716],[326],[141] !jvms: loop_structure::micro @ bci:19 (line 8)
 1302  AddP  === _ 158 2321 2265  [[ 1530 ]]  !orig=[1122],[717],[325],[177] !jvms: loop_structure::micro @ bci:25 (line 10)
 1338  ConI  === 0  [[ 1577 1738 1602 1713 1556 1692 ]]  #int:8
 1373  AddP  === _ 158 2264 2265  [[ 1544 ]]  !orig=[1179],[1003],[177] !jvms: loop_structure::micro @ bci:25 (line 10)
 1434  ConI  === 0  [[ 1435 ]]  #int:-7
 1435  AddI  === _ 41 1434  [[ 1687 1572 1548 1708 ]]  !orig=[1290]
 1449  ConI  === 0  [[ 1520 1536 ]]  #int:7
 1514  ConI  === 0  [[ 1517 1533 ]]  #int:-16
 1515  CastP2X  === _ 38  [[ 1516 ]] 
 1516  ConvL2I  === _ 1515  [[ 1517 ]]  #int
 1517  SubI  === _ 1514 1516  [[ 1518 ]] 
 1518  URShiftI  === _ 1517 139  [[ 1546 ]] 
 1520  AndI  === _ 1546 1449  [[ 1523 ]] 
 1523  ConvI2L  === _ 1520  [[ 1524 ]]  #long:0..7, widen: 3
 1524  AddL  === _ 1523 706  [[ 1525 ]] 
 1525  MinL  === _ 1524 1538  [[ 1526 ]] 
 1526  ConvL2I  === _ 1525  [[ 704 ]]  #int:0..8, widen: 3
 1527  Replicate  === _ 119  [[ 1529 1550 1634 1897 1899 2094 2096 2098 2100 ]]  #vectory<I,8>
 1529  StoreVector  === 2122 1633 1301 1527  [[ 1530 ]]  @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact:not_flat+any *, idx=5; mismatched  Memory: @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact:not_flat+any *, idx=5; !orig=[1300],[1120],[715],[323],143 !jvms: loop_structure::micro @ bci:19 (line 8)
 1530  StoreVector  === 2122 1529 1302 1543  [[ 2125 1568 346 1558 ]]  @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact:not_flat+any *, idx=5; mismatched  Memory: @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact:not_flat+any *, idx=5; !orig=[1299],[1119],[714],[324],[179],1017 !jvms: loop_structure::micro @ bci:25 (line 10)
 1531  CastP2X  === _ 158  [[ 1532 ]] 
 1532  ConvL2I  === _ 1531  [[ 1533 ]]  #int
 1533  SubI  === _ 1514 1532  [[ 1534 ]] 
 1534  URShiftI  === _ 1533 139  [[ 1545 ]] 
 1536  AndI  === _ 1545 1449  [[ 1539 ]] 
 1538  ConvI2L  === _ 41  [[ 1541 1525 ]]  #long:>=0 !orig=[1522]
 1539  ConvI2L  === _ 1536  [[ 1540 ]]  #long:0..7, widen: 3
 1540  AddL  === _ 1539 706  [[ 1541 ]] 
 1541  MinL  === _ 1538 1540  [[ 1542 ]] 
 1542  ConvL2I  === _ 1541  [[ 994 ]]  #int:0..8, widen: 3
 1543  Replicate  === _ 145  [[ 1544 1530 1549 1633 1688 1769 1896 1898 1962 1963 2093 2095 2097 2099 2175 2176 2177 2178 ]]  #vectory<I,8> !orig=[1528]
 1544  StoreVector  === 2192 1769 1373 1543  [[ 2200 182 1704 1696 ]]  @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact:not_flat+any *, idx=5; mismatched  Memory: @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact:not_flat+any *, idx=5; !orig=[1372],[1178],[1002],[179],1017 !jvms: loop_structure::micro @ bci:25 (line 10)
 1545  AddI  === _ 1534 261  [[ 1536 ]]  !orig=[1535]
 1546  AddI  === _ 1518 261  [[ 1520 ]]  !orig=[1519]
 1547  Bool  === _ 1548  [[ 1559 ]] [lt] !orig=320,211,[190] !jvms: loop_structure::micro @ bci:5 (line 6)
 1548  CmpI  === _ 1556 1435  [[ 1547 ]]  !orig=321,210,[189] !jvms: loop_structure::micro @ bci:5 (line 6)
 1549  StoreVector  === 1557 1550 1551 1543  [[ 1558 1568 ]]  @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact:not_flat+any *, idx=5; mismatched  Memory: @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact:not_flat+any *, idx=5; !orig=1530,[1299],[1119],[714],[324],[179],1017 !jvms: loop_structure::micro @ bci:25 (line 10)
 1550  StoreVector  === 1557 1558 1552 1527  [[ 1549 ]]  @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact:not_flat+any *, idx=5; mismatched  Memory: @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact:not_flat+any *, idx=5; !orig=1529,[1300],[1120],[715],[323],143 !jvms: loop_structure::micro @ bci:19 (line 8)
 1551  AddP  === _ 158 1553 135  [[ 1549 ]]  !orig=1302,[1122],[717],[325],[177] !jvms: loop_structure::micro @ bci:25 (line 10)
 1552  AddP  === _ 38 1554 135  [[ 1550 ]]  !orig=1301,[1121],[716],[326],[141] !jvms: loop_structure::micro @ bci:19 (line 8)
 1553  AddP  === _ 158 158 1555  [[ 1551 ]]  !orig=[1318],[1128],[718],[327],[178] !jvms: loop_structure::micro @ bci:25 (line 10)
 1554  AddP  === _ 38 38 1555  [[ 1552 ]]  !orig=[1319],[1129],[719],[328],[142] !jvms: loop_structure::micro @ bci:19 (line 8)
 1555  LShiftL  === _ 1561 139  [[ 1553 1554 ]]  !orig=[1320],[1130],[720],[329],[176],[140] !jvms: loop_structure::micro @ bci:25 (line 10)
 1556  AddI  === _ 1562 1338  [[ 1548 1562 1569 ]]  !orig=322,... !jvms: loop_structure::micro @ bci:26 (line 6)
 1557  CountedLoop  === 1557 1600 1560  [[ 1549 1550 1557 1558 1559 1562 ]] inner stride: 8 post of N1322 !orig=[1322],[1132],[721],[330],[217],[208],[104] !jvms: loop_structure::micro @ bci:8 (line 7)
 1558  Phi  === 1557 1530 1549  [[ 1550 ]]  #memory  Memory: @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=5; !orig=1330,1135,726,331,[204],[202],[106] !jvms: loop_structure::micro @ bci:8 (line 7)
 1559  CountedLoopEnd  === 1557 1547  [[ 1560 1563 ]] [lt] P=0.500000, C=263314.000000 !orig=338,212,[191] !jvms: loop_structure::micro @ bci:5 (line 6)
 1560  IfTrue  === 1559  [[ 1557 ]] #1 !orig=339,192 !jvms: loop_structure::micro @ bci:5 (line 6)
 1561  ConvI2L  === _ 1562  [[ 1555 ]]  #long:1..maxint-1, widen: 3 !orig=[1327],[1137],[724],[333],[175],[138] !jvms: loop_structure::micro @ bci:25 (line 10)
 1562  Phi  === 1557 1626 1556  [[ 1556 1561 ]]  #int:1..maxint-1, widen: 3 #tripcount !orig=1329,1138,725,334,107,[174] !jvms: loop_structure::micro @ bci:8 (line 7)
 1563  IfFalse  === 1559  [[ 1566 ]] #0 !orig=[1333],[1141],[729],[341],[213],[193] !jvms: loop_structure::micro @ bci:5 (line 6)
 1566  Region  === 1566 1563 1567  [[ 1566 596 1568 1569 ]]  !orig=[597],[484]
 1567  IfFalse  === 1574  [[ 1566 ]] #0 !orig=[597],[484]
 1568  Phi  === 1566 1549 1530  [[ 608 ]]  #memory  Memory: @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=5;
 1569  Phi  === 1566 1556 322  [[ 598 ]]  #int
 1570  IfFalse  === 344  [[ 1574 ]] #0
 1571  OpaqueZeroTripGuard  === _ 322  [[ 1572 ]] 
 1572  CmpI  === _ 1571 1435  [[ 1573 ]] 
 1573  Bool  === _ 1572  [[ 1574 ]] [lt]
 1574  If  === 1570 1573  [[ 1567 1575 ]] P=0.500000, C=-1.000000
 1575  IfTrue  === 1574  [[ 1609 1579 1604 1626 ]] #1
 1576  OpaqueLoopInit  === _ 322  [[ 1578 ]] 
 1577  OpaqueLoopStride  === _ 1338  [[ 1578 ]]  !orig=617,[380],[293]
 1578  AddI  === _ 1576 1577  [[ 1579 ]]  !orig=618,[381],[313],[312],[294]
 1579  CastII  === 1575 1578  [[ 1580 ]]  #int:>=1, widen: 3 !orig=619,[382],[314],[296]
 1580  AddI  === _ 1579 261  [[ 1581 ]]  !orig=620,[383],[316],[296]
 1581  CmpU  === _ 1580 160  [[ 1582 ]]  !orig=621,[384],[297]
 1582  Bool  === _ 1581  [[ 1583 ]] [lt] !orig=622,[385],[298]
 1583  OpaqueTemplateAssertionPredicate  === _ 1582  [[ 1584 ]] loop_idx=1557 
 1584  RangeCheck  === 1625 1583  [[ 1585 1588 ]] #Last Value Assertion Predicate  P=0.999999, C=-1.000000
 1585  IfFalse  === 1584  [[ 1587 ]] #0
 1587  Halt  === 1585 1 1 8 1  [[ 0 ]] 
 1588  IfTrue  === 1584  [[ 1596 ]] #1
 1592  CmpU  === _ 1616 160  [[ 1593 ]]  !orig=621,[384],[297]
 1593  Bool  === _ 1592  [[ 1595 ]] [lt] !orig=622,[385],[298]
 1595  OpaqueInitializedAssertionPredicate  === _ 1593  [[ 1596 ]] 
 1596  RangeCheck  === 1588 1595  [[ 1597 1600 ]] #Last Value Assertion Predicate  P=0.999999, C=-1.000000
 1597  IfFalse  === 1596  [[ 1599 ]] #0
 1599  Halt  === 1597 1 1 8 1  [[ 0 ]] 
 1600  IfTrue  === 1596  [[ 1557 ]] #1
 1601  OpaqueLoopInit  === _ 322  [[ 1603 ]] 
 1602  OpaqueLoopStride  === _ 1338  [[ 1603 ]]  !orig=660,[424],[242]
 1603  AddI  === _ 1601 1602  [[ 1604 ]]  !orig=661,[425],[264],[263],[243]
 1604  CastII  === 1575 1603  [[ 1605 ]]  #int:>=1, widen: 3 !orig=662,[426],[265],[245]
 1605  AddI  === _ 1604 261  [[ 1606 ]]  !orig=663,[427],[267],[245]
 1606  CmpU  === _ 1605 41  [[ 1607 ]]  !orig=664,[428],[246]
 1607  Bool  === _ 1606  [[ 1608 ]] [lt] !orig=665,[429],[247]
 1608  OpaqueTemplateAssertionPredicate  === _ 1607  [[ 1609 ]] loop_idx=1557 
 1609  RangeCheck  === 1575 1608  [[ 1610 1613 ]] #Last Value Assertion Predicate  P=0.999999, C=-1.000000
 1610  IfFalse  === 1609  [[ 1612 ]] #0
 1612  Halt  === 1610 1 1 8 1  [[ 0 ]] 
 1613  IfTrue  === 1609  [[ 2296 1621 ]] #1
 1616  AddI  === _ 2296 2317  [[ 1617 1592 ]]  !orig=663,[427],[267],[245]
 1617  CmpU  === _ 1616 41  [[ 1618 ]]  !orig=664,[428],[246]
 1618  Bool  === _ 1617  [[ 1620 ]] [lt] !orig=665,[429],[247]
 1620  OpaqueInitializedAssertionPredicate  === _ 1618  [[ 1621 ]] 
 1621  RangeCheck  === 1613 1620  [[ 1622 1625 ]] #Last Value Assertion Predicate  P=0.999999, C=-1.000000
 1622  IfFalse  === 1621  [[ 1624 ]] #0
 1624  Halt  === 1622 1 1 8 1  [[ 0 ]] 
 1625  IfTrue  === 1621  [[ 1584 ]] #1
 1626  CastII  === 1575 322  [[ 1562 ]]  #int unconditional dependency
 1633  StoreVector  === 2122 1634 1635 1543  [[ 1529 ]]  @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact:not_flat+any *, idx=5; mismatched  Memory: @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact:not_flat+any *, idx=5; !orig=1530,[1299],[1119],[714],[324],[179],1017 !jvms: loop_structure::micro @ bci:25 (line 10)
 1634  StoreVector  === 2122 1896 1636 1527  [[ 1633 ]]  @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact:not_flat+any *, idx=5; mismatched  Memory: @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact:not_flat+any *, idx=5; !orig=1529,[1300],[1120],[715],[323],143 !jvms: loop_structure::micro @ bci:19 (line 8)
 1635  AddP  === _ 158 2318 2322  [[ 1633 ]]  !orig=1302,[1122],[717],[325],[177] !jvms: loop_structure::micro @ bci:25 (line 10)
 1636  AddP  === _ 38 2319 2322  [[ 1634 ]]  !orig=1301,[1121],[716],[326],[141] !jvms: loop_structure::micro @ bci:19 (line 8)
 1686  Bool  === _ 1687  [[ 1697 ]] [lt] !orig=211,[190] !jvms: loop_structure::micro @ bci:5 (line 6)
 1687  CmpI  === _ 1692 1435  [[ 1686 ]]  !orig=210,[189] !jvms: loop_structure::micro @ bci:5 (line 6)
 1688  StoreVector  === 1693 1696 1689 1543  [[ 1696 1704 ]]  @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact:not_flat+any *, idx=5; mismatched  Memory: @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact:not_flat+any *, idx=5; !orig=1544,[1372],[1178],[1002],[179],1017 !jvms: loop_structure::micro @ bci:25 (line 10)
 1689  AddP  === _ 158 1690 135  [[ 1688 ]]  !orig=1373,[1179],[1003],[177] !jvms: loop_structure::micro @ bci:25 (line 10)
 1690  AddP  === _ 158 158 1691  [[ 1689 ]]  !orig=[1377],[1183],[1004],[178] !jvms: loop_structure::micro @ bci:25 (line 10)
 1691  LShiftL  === _ 1694 139  [[ 1690 ]]  !orig=[1378],[1184],[1005],[176],[140] !jvms: loop_structure::micro @ bci:25 (line 10)
 1692  AddI  === _ 1695 1338  [[ 1687 1695 1705 ]]  !orig=180,... !jvms: loop_structure::micro @ bci:26 (line 6)
 1693  CountedLoop  === 1693 1736 1698  [[ 1688 1693 1695 1696 1697 ]] inner stride: 8 post of N1391 !orig=[1391],[1186],[1006],[217],[208],[104] !jvms: loop_structure::micro @ bci:8 (line 7)
 1694  ConvI2L  === _ 1695  [[ 1691 ]]  #long:1..maxint-1, widen: 3 !orig=[1388],[1190],[1010],[175],[138] !jvms: loop_structure::micro @ bci:25 (line 10)
 1695  Phi  === 1693 1762 1692  [[ 1692 1694 ]]  #int:1..maxint-1, widen: 3 #tripcount !orig=1390,1191,1011,107,[174] !jvms: loop_structure::micro @ bci:8 (line 7)
 1696  Phi  === 1693 1544 1688  [[ 1688 ]]  #memory  Memory: @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=5; !orig=[1394],[1192],[1009],[204],[202],[106] !jvms: loop_structure::micro @ bci:8 (line 7)
 1697  CountedLoopEnd  === 1693 1686  [[ 1698 1699 ]] [lt] P=0.500000, C=263314.000000 !orig=212,[191] !jvms: loop_structure::micro @ bci:5 (line 6)
 1698  IfTrue  === 1697  [[ 1693 ]] #1 !orig=192 !jvms: loop_structure::micro @ bci:5 (line 6)
 1699  IfFalse  === 1697  [[ 1702 ]] #0 !orig=[1397],[1195],[1014],[213],[193] !jvms: loop_structure::micro @ bci:5 (line 6)
 1702  Region  === 1702 1699 1703  [[ 1702 886 1704 1705 ]]  !orig=[887],[777]
 1703  IfFalse  === 1710  [[ 1702 ]] #0 !orig=[887],[777]
 1704  Phi  === 1702 1688 1544  [[ 898 ]]  #memory  Memory: @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=5;
 1705  Phi  === 1702 1692 180  [[ 888 ]]  #int
 1706  IfFalse  === 214  [[ 1710 ]] #0
 1707  OpaqueZeroTripGuard  === _ 180  [[ 1708 ]] 
 1708  CmpI  === _ 1707 1435  [[ 1709 ]] 
 1709  Bool  === _ 1708  [[ 1710 ]] [lt]
 1710  If  === 1706 1709  [[ 1703 1711 ]] P=0.500000, C=-1.000000
 1711  IfTrue  === 1710  [[ 1745 1715 1740 1762 ]] #1
 1712  OpaqueLoopInit  === _ 180  [[ 1714 ]] 
 1713  OpaqueLoopStride  === _ 1338  [[ 1714 ]]  !orig=907,[367],[293]
 1714  AddI  === _ 1712 1713  [[ 1715 ]]  !orig=908,[368],[313],[312],[294]
 1715  CastII  === 1711 1714  [[ 1716 ]]  #int:>=1, widen: 3 !orig=909,[369],[314],[296]
 1716  AddI  === _ 1715 261  [[ 1717 ]]  !orig=910,[370],[316],[296]
 1717  CmpU  === _ 1716 160  [[ 1718 ]]  !orig=911,[371],[297]
 1718  Bool  === _ 1717  [[ 1719 ]] [lt] !orig=912,[372],[298]
 1719  OpaqueTemplateAssertionPredicate  === _ 1718  [[ 1720 ]] loop_idx=1693 
 1720  RangeCheck  === 1761 1719  [[ 1721 1724 ]] #Last Value Assertion Predicate  P=0.999999, C=-1.000000
 1721  IfFalse  === 1720  [[ 1723 ]] #0
 1723  Halt  === 1721 1 1 8 1  [[ 0 ]] 
 1724  IfTrue  === 1720  [[ 1732 ]] #1
 1727  AddI  === _ 2312 2317  [[ 1728 1753 ]]  !orig=910,[370],[316],[296]
 1728  CmpU  === _ 1727 160  [[ 1729 ]]  !orig=911,[371],[297]
 1729  Bool  === _ 1728  [[ 1731 ]] [lt] !orig=912,[372],[298]
 1731  OpaqueInitializedAssertionPredicate  === _ 1729  [[ 1732 ]] 
 1732  RangeCheck  === 1724 1731  [[ 1733 1736 ]] #Last Value Assertion Predicate  P=0.999999, C=-1.000000
 1733  IfFalse  === 1732  [[ 1735 ]] #0
 1735  Halt  === 1733 1 1 8 1  [[ 0 ]] 
 1736  IfTrue  === 1732  [[ 1693 ]] #1
 1737  OpaqueLoopInit  === _ 180  [[ 1739 ]] 
 1738  OpaqueLoopStride  === _ 1338  [[ 1739 ]]  !orig=950,[411],[242]
 1739  AddI  === _ 1737 1738  [[ 1740 ]]  !orig=951,[412],[264],[263],[243]
 1740  CastII  === 1711 1739  [[ 1741 ]]  #int:>=1, widen: 3 !orig=952,[413],[265],[245]
 1741  AddI  === _ 1740 261  [[ 1742 ]]  !orig=953,[414],[267],[245]
 1742  CmpU  === _ 1741 41  [[ 1743 ]]  !orig=954,[415],[246]
 1743  Bool  === _ 1742  [[ 1744 ]] [lt] !orig=955,[416],[247]
 1744  OpaqueTemplateAssertionPredicate  === _ 1743  [[ 1745 ]] loop_idx=1693 
 1745  RangeCheck  === 1711 1744  [[ 1746 1749 ]] #Last Value Assertion Predicate  P=0.999999, C=-1.000000
 1746  IfFalse  === 1745  [[ 1748 ]] #0
 1748  Halt  === 1746 1 1 8 1  [[ 0 ]] 
 1749  IfTrue  === 1745  [[ 2312 1757 ]] #1
 1753  CmpU  === _ 1727 41  [[ 1754 ]]  !orig=954,[415],[246]
 1754  Bool  === _ 1753  [[ 1756 ]] [lt] !orig=955,[416],[247]
 1756  OpaqueInitializedAssertionPredicate  === _ 1754  [[ 1757 ]] 
 1757  RangeCheck  === 1749 1756  [[ 1758 1761 ]] #Last Value Assertion Predicate  P=0.999999, C=-1.000000
 1758  IfFalse  === 1757  [[ 1760 ]] #0
 1760  Halt  === 1758 1 1 8 1  [[ 0 ]] 
 1761  IfTrue  === 1757  [[ 1720 ]] #1
 1762  CastII  === 1711 180  [[ 1695 ]]  #int unconditional dependency
 1769  StoreVector  === 2192 1962 1770 1543  [[ 1544 ]]  @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact:not_flat+any *, idx=5; mismatched  Memory: @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact:not_flat+any *, idx=5; !orig=1544,[1372],[1178],[1002],[179],1017 !jvms: loop_structure::micro @ bci:25 (line 10)
 1770  AddP  === _ 158 2316 2322  [[ 1769 ]]  !orig=1373,[1179],[1003],[177] !jvms: loop_structure::micro @ bci:25 (line 10)
 1896  StoreVector  === 2122 1897 1904 1543  [[ 1634 ]]  @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact:not_flat+any *, idx=5; mismatched  Memory: @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact:not_flat+any *, idx=5; !orig=1530,[1299],[1119],[714],[324],[179],1017 !jvms: loop_structure::micro @ bci:25 (line 10)
 1897  StoreVector  === 2122 1898 1902 1527  [[ 1896 ]]  @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact:not_flat+any *, idx=5; mismatched  Memory: @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact:not_flat+any *, idx=5; !orig=1529,[1300],[1120],[715],[323],143 !jvms: loop_structure::micro @ bci:19 (line 8)
 1898  StoreVector  === 2122 1899 1901 1543  [[ 1897 ]]  @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact:not_flat+any *, idx=5; mismatched  Memory: @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact:not_flat+any *, idx=5; !orig=1633,1530,[1299],[1119],[714],[324],[179],1017 !jvms: loop_structure::micro @ bci:25 (line 10)
 1899  StoreVector  === 2122 2093 1900 1527  [[ 1898 ]]  @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact:not_flat+any *, idx=5; mismatched  Memory: @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact:not_flat+any *, idx=5; !orig=1634,1529,[1300],[1120],[715],[323],143 !jvms: loop_structure::micro @ bci:19 (line 8)
 1900  AddP  === _ 38 2323 2327  [[ 1899 ]]  !orig=1636,1301,[1121],[716],[326],[141] !jvms: loop_structure::micro @ bci:19 (line 8)
 1901  AddP  === _ 158 2324 2327  [[ 1898 ]]  !orig=1635,1302,[1122],[717],[325],[177] !jvms: loop_structure::micro @ bci:25 (line 10)
 1902  AddP  === _ 38 2326 2315  [[ 1897 ]]  !orig=1301,[1121],[716],[326],[141] !jvms: loop_structure::micro @ bci:19 (line 8)
 1904  AddP  === _ 158 2325 2315  [[ 1896 ]]  !orig=1302,[1122],[717],[325],[177] !jvms: loop_structure::micro @ bci:25 (line 10)
 1962  StoreVector  === 2192 1963 1965 1543  [[ 1769 ]]  @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact:not_flat+any *, idx=5; mismatched  Memory: @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact:not_flat+any *, idx=5; !orig=1544,[1372],[1178],[1002],[179],1017 !jvms: loop_structure::micro @ bci:25 (line 10)
 1963  StoreVector  === 2192 2175 1964 1543  [[ 1962 ]]  @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact:not_flat+any *, idx=5; mismatched  Memory: @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact:not_flat+any *, idx=5; !orig=1769,1544,[1372],[1178],[1002],[179],1017 !jvms: loop_structure::micro @ bci:25 (line 10)
 1964  AddP  === _ 158 2311 2327  [[ 1963 ]]  !orig=1770,1373,[1179],[1003],[177] !jvms: loop_structure::micro @ bci:25 (line 10)
 1965  AddP  === _ 158 2302 2315  [[ 1962 ]]  !orig=1373,[1179],[1003],[177] !jvms: loop_structure::micro @ bci:25 (line 10)
 2042  ConL  === 0  [[ 2108 2183 2110 ]]  #long:80
 2085  ConL  === 0  [[ 2180 2103 2105 ]]  #long:112
 2093  StoreVector  === 2122 2094 2105 1543  [[ 1899 ]]  @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact:not_flat+any *, idx=5; mismatched  Memory: @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact:not_flat+any *, idx=5; !orig=1530,[1299],[1119],[714],[324],[179],1017 !jvms: loop_structure::micro @ bci:25 (line 10)
 2094  StoreVector  === 2122 2095 2103 1527  [[ 2093 ]]  @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact:not_flat+any *, idx=5; mismatched  Memory: @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact:not_flat+any *, idx=5; !orig=1529,[1300],[1120],[715],[323],143 !jvms: loop_structure::micro @ bci:19 (line 8)
 2095  StoreVector  === 2122 2096 2108 1543  [[ 2094 ]]  @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact:not_flat+any *, idx=5; mismatched  Memory: @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact:not_flat+any *, idx=5; !orig=1633,1530,[1299],[1119],[714],[324],[179],1017 !jvms: loop_structure::micro @ bci:25 (line 10)
 2096  StoreVector  === 2122 2097 2110 1527  [[ 2095 ]]  @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact:not_flat+any *, idx=5; mismatched  Memory: @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact:not_flat+any *, idx=5; !orig=1634,1529,[1300],[1120],[715],[323],143 !jvms: loop_structure::micro @ bci:19 (line 8)
 2097  StoreVector  === 2122 2098 2115 1543  [[ 2096 ]]  @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact:not_flat+any *, idx=5; mismatched  Memory: @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact:not_flat+any *, idx=5; !orig=1896,1530,[1299],[1119],[714],[324],[179],1017 !jvms: loop_structure::micro @ bci:25 (line 10)
 2098  StoreVector  === 2122 2099 2113 1527  [[ 2097 ]]  @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact:not_flat+any *, idx=5; mismatched  Memory: @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact:not_flat+any *, idx=5; !orig=1897,1529,[1300],[1120],[715],[323],143 !jvms: loop_structure::micro @ bci:19 (line 8)
 2099  StoreVector  === 2122 2100 2101 1543  [[ 2098 ]]  @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact:not_flat+any *, idx=5; mismatched  Memory: @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact:not_flat+any *, idx=5; !orig=1898,1633,1530,[1299],[1119],[714],[324],[179],1017 !jvms: loop_structure::micro @ bci:25 (line 10)
 2100  StoreVector  === 2122 2125 2102 1527  [[ 2099 ]]  @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact:not_flat+any *, idx=5; mismatched  Memory: @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact:not_flat+any *, idx=5; !orig=1899,1634,1529,[1300],[1120],[715],[323],143 !jvms: loop_structure::micro @ bci:19 (line 8)
 2101  AddP  === _ 158 2118 135  [[ 2099 ]]  !orig=1901,1635,1302,[1122],[717],[325],[177] !jvms: loop_structure::micro @ bci:25 (line 10)
 2102  AddP  === _ 38 2119 135  [[ 2100 ]]  !orig=1900,1636,1301,[1121],[716],[326],[141] !jvms: loop_structure::micro @ bci:19 (line 8)
 2103  AddP  === _ 38 2104 2085  [[ 2094 ]]  !orig=1301,[1121],[716],[326],[141] !jvms: loop_structure::micro @ bci:19 (line 8)
 2104  AddP  === _ 38 38 2107  [[ 2103 ]]  !orig=[2083]
 2105  AddP  === _ 158 2106 2085  [[ 2093 ]]  !orig=1302,[1122],[717],[325],[177] !jvms: loop_structure::micro @ bci:25 (line 10)
 2106  AddP  === _ 158 158 2107  [[ 2105 ]]  !orig=[2082]
 2107  LShiftL  === _ 2128 139  [[ 2104 2106 ]]  !orig=[2075]
 2108  AddP  === _ 158 2109 2042  [[ 2095 ]]  !orig=1635,1302,[1122],[717],[325],[177] !jvms: loop_structure::micro @ bci:25 (line 10)
 2109  AddP  === _ 158 158 2112  [[ 2108 ]]  !orig=[2084]
 2110  AddP  === _ 38 2111 2042  [[ 2096 ]]  !orig=1636,1301,[1121],[716],[326],[141] !jvms: loop_structure::micro @ bci:19 (line 8)
 2111  AddP  === _ 38 38 2112  [[ 2110 ]]  !orig=[2081]
 2112  LShiftL  === _ 2129 139  [[ 2109 2111 ]]  !orig=[2073]
 2113  AddP  === _ 38 2114 184  [[ 2098 ]]  !orig=1902,1301,[1121],[716],[326],[141] !jvms: loop_structure::micro @ bci:19 (line 8)
 2114  AddP  === _ 38 38 2117  [[ 2113 ]]  !orig=[1903],[1888]
 2115  AddP  === _ 158 2116 184  [[ 2097 ]]  !orig=1904,1302,[1122],[717],[325],[177] !jvms: loop_structure::micro @ bci:25 (line 10)
 2116  AddP  === _ 158 158 2117  [[ 2115 ]]  !orig=[1905],[1881]
 2117  LShiftL  === _ 2126 139  [[ 2114 2116 ]]  !orig=[1906],[1870]
 2118  AddP  === _ 158 158 2120  [[ 2101 ]]  !orig=[1907],[1637],[1318],[1128],[718],[327],[178] !jvms: loop_structure::micro @ bci:25 (line 10)
 2119  AddP  === _ 38 38 2120  [[ 2102 ]]  !orig=[1908],[1638],[1319],[1129],[719],[328],[142] !jvms: loop_structure::micro @ bci:19 (line 8)
 2120  LShiftL  === _ 2127 139  [[ 2118 2119 ]]  !orig=[1909],[1639],[1320],[1130],[720],[329],[176],[140] !jvms: loop_structure::micro @ bci:25 (line 10)
 2122  CountedLoop  === 2122 342 339  [[ 2093 2094 2095 2096 2097 2098 2099 2100 2122 1896 2125 2130 1897 1898 1899 338 1633 1529 1530 1634 ]] inner stride: 64 main of N2122 strip mined !orig=[1911],[1641],[1322],[1132],[721],[330],[217],[208],[104] !jvms: loop_structure::micro @ bci:8 (line 7)
 2125  Phi  === 2122 580 1530  [[ 2100 ]]  #memory  Memory: @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=5; !orig=1917,1642,1330,1135,726,331,[204],[202],[106] !jvms: loop_structure::micro @ bci:8 (line 7)
 2126  ConvI2L  === _ 2130  [[ 2117 ]]  #long:1..maxint-9, widen: 3 !orig=[1914],[1849]
 2127  ConvI2L  === _ 2130  [[ 2120 ]]  #long:1..maxint-1, widen: 3 !orig=[1915],[1645],[1327],[1137],[724],[333],[175],[138] !jvms: loop_structure::micro @ bci:25 (line 10)
 2128  ConvI2L  === _ 2130  [[ 2107 ]]  #long:1..maxint-25, widen: 3 !orig=[2058]
 2129  ConvI2L  === _ 2130  [[ 2112 ]]  #long:1..maxint-17, widen: 3 !orig=[2060]
 2130  Phi  === 2122 1057 322  [[ 2296 2126 2127 2128 2129 322 2282 2284 2286 2288 ]]  #int:1..maxint-1, widen: 3 #tripcount !orig=1916,1646,1329,1138,725,334,107,[174] !jvms: loop_structure::micro @ bci:8 (line 7)
 2133  IfFalse  === 338  [[ 345 347 ]] #0 !orig=[1920],[1649],[1333],[1141],[729],[341],[213],[193] !jvms: loop_structure::micro @ bci:5 (line 6)
 2144  ConI  === 0  [[ 617 322 660 180 907 2228 950 2159 ]]  #int:64
 2148  CmpU  === _ 2159 160  [[ 2149 ]]  !orig=621,[384],[297]
 2149  Bool  === _ 2148  [[ 2151 ]] [lt] !orig=622,[385],[298]
 2151  OpaqueInitializedAssertionPredicate  === _ 2149  [[ 2152 ]] 
 2152  RangeCheck  === 628 2151  [[ 2153 2156 ]] #Last Value Assertion Predicate  P=0.999999, C=-1.000000
 2153  IfFalse  === 2152  [[ 2155 ]] #0
 2155  Halt  === 2153 1 1 8 1  [[ 0 ]] 
 2156  IfTrue  === 2152  [[ 342 ]] #1 !orig=[1943],[1673],[1350],[1158],[745],[640]
 2159  AddI  === _ 2279 2144  [[ 2160 2148 ]]  !orig=663,[427],[267],[245]
 2160  CmpU  === _ 2159 41  [[ 2161 ]]  !orig=664,[428],[246]
 2161  Bool  === _ 2160  [[ 2163 ]] [lt] !orig=665,[429],[247]
 2163  OpaqueInitializedAssertionPredicate  === _ 2161  [[ 2164 ]] 
 2164  RangeCheck  === 671 2163  [[ 2165 2168 ]] #Last Value Assertion Predicate  P=0.999999, C=-1.000000
 2165  IfFalse  === 2164  [[ 2167 ]] #0
 2167  Halt  === 2165 1 1 8 1  [[ 0 ]] 
 2168  IfTrue  === 2164  [[ 654 ]] #1 !orig=[1955],[1685],[1362],[1170],[757],[683]
 2175  StoreVector  === 2192 2176 2180 1543  [[ 1963 ]]  @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact:not_flat+any *, idx=5; mismatched  Memory: @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact:not_flat+any *, idx=5; !orig=1544,[1372],[1178],[1002],[179],1017 !jvms: loop_structure::micro @ bci:25 (line 10)
 2176  StoreVector  === 2192 2177 2183 1543  [[ 2175 ]]  @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact:not_flat+any *, idx=5; mismatched  Memory: @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact:not_flat+any *, idx=5; !orig=1769,1544,[1372],[1178],[1002],[179],1017 !jvms: loop_structure::micro @ bci:25 (line 10)
 2177  StoreVector  === 2192 2178 2186 1543  [[ 2176 ]]  @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact:not_flat+any *, idx=5; mismatched  Memory: @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact:not_flat+any *, idx=5; !orig=1962,1544,[1372],[1178],[1002],[179],1017 !jvms: loop_structure::micro @ bci:25 (line 10)
 2178  StoreVector  === 2192 2200 2179 1543  [[ 2177 ]]  @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact:not_flat+any *, idx=5; mismatched  Memory: @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact:not_flat+any *, idx=5; !orig=1963,1769,1544,[1372],[1178],[1002],[179],1017 !jvms: loop_structure::micro @ bci:25 (line 10)
 2179  AddP  === _ 158 2189 135  [[ 2178 ]]  !orig=1964,1770,1373,[1179],[1003],[177] !jvms: loop_structure::micro @ bci:25 (line 10)
 2180  AddP  === _ 158 2181 2085  [[ 2175 ]]  !orig=1373,[1179],[1003],[177] !jvms: loop_structure::micro @ bci:25 (line 10)
 2181  AddP  === _ 158 158 2182  [[ 2180 ]]  !orig=[2077]
 2182  LShiftL  === _ 2197 139  [[ 2181 ]]  !orig=[2068]
 2183  AddP  === _ 158 2184 2042  [[ 2176 ]]  !orig=1770,1373,[1179],[1003],[177] !jvms: loop_structure::micro @ bci:25 (line 10)
 2184  AddP  === _ 158 158 2185  [[ 2183 ]]  !orig=[2041]
 2185  LShiftL  === _ 2198 139  [[ 2184 ]]  !orig=[2038]
 2186  AddP  === _ 158 2187 184  [[ 2177 ]]  !orig=1965,1373,[1179],[1003],[177] !jvms: loop_structure::micro @ bci:25 (line 10)
 2187  AddP  === _ 158 158 2188  [[ 2186 ]]  !orig=[1966],[1889]
 2188  LShiftL  === _ 2196 139  [[ 2187 ]]  !orig=[1967],[1879]
 2189  AddP  === _ 158 158 2190  [[ 2179 ]]  !orig=[1968],[1771],[1377],[1183],[1004],[178] !jvms: loop_structure::micro @ bci:25 (line 10)
 2190  LShiftL  === _ 2195 139  [[ 2189 ]]  !orig=[1969],[1772],[1378],[1184],[1005],[176],[140] !jvms: loop_structure::micro @ bci:25 (line 10)
 2192  CountedLoop  === 2192 216 192  [[ 2175 2176 2177 2178 2192 1962 2199 2200 1963 212 1769 1544 ]] inner stride: 64 main of N2192 strip mined !orig=[1971],[1774],[1391],[1186],[1006],[217],[208],[104] !jvms: loop_structure::micro @ bci:8 (line 7)
 2195  ConvI2L  === _ 2199  [[ 2190 ]]  #long:1..maxint-1, widen: 3 !orig=[1975],[1775],[1388],[1190],[1010],[175],[138] !jvms: loop_structure::micro @ bci:25 (line 10)
 2196  ConvI2L  === _ 2199  [[ 2188 ]]  #long:1..maxint-9, widen: 3 !orig=[1976],[1872]
 2197  ConvI2L  === _ 2199  [[ 2182 ]]  #long:1..maxint-25, widen: 3 !orig=[2043]
 2198  ConvI2L  === _ 2199  [[ 2185 ]]  #long:1..maxint-17, widen: 3 !orig=[2024]
 2199  Phi  === 2192 1079 180  [[ 2312 2195 2196 2197 2198 2271 2247 180 2266 2269 ]]  #int:1..maxint-1, widen: 3 #tripcount !orig=1977,1776,1390,1191,1011,107,[174] !jvms: loop_structure::micro @ bci:8 (line 7)
 2200  Phi  === 2192 873 1544  [[ 2178 ]]  #memory  Memory: @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=5; !orig=[1974],[1777],[1394],[1192],[1009],[204],[202],[106] !jvms: loop_structure::micro @ bci:8 (line 7)
 2203  IfFalse  === 212  [[ 218 219 ]] #0 !orig=[1980],[1782],[1397],[1195],[1014],[213],[193] !jvms: loop_structure::micro @ bci:5 (line 6)
 2217  CmpU  === _ 2228 160  [[ 2218 ]]  !orig=911,[371],[297]
 2218  Bool  === _ 2217  [[ 2220 ]] [lt] !orig=912,[372],[298]
 2220  OpaqueInitializedAssertionPredicate  === _ 2218  [[ 2221 ]] 
 2221  RangeCheck  === 918 2220  [[ 2222 2225 ]] #Last Value Assertion Predicate  P=0.999999, C=-1.000000
 2222  IfFalse  === 2221  [[ 2224 ]] #0
 2224  Halt  === 2222 1 1 8 1  [[ 0 ]] 
 2225  IfTrue  === 2221  [[ 216 ]] #1 !orig=[2002],[1805],[1413],[1211],[1030],[930]
 2228  AddI  === _ 2273 2144  [[ 2229 2217 ]]  !orig=953,[414],[267],[245]
 2229  CmpU  === _ 2228 41  [[ 2230 ]]  !orig=954,[415],[246]
 2230  Bool  === _ 2229  [[ 2232 ]] [lt] !orig=955,[416],[247]
 2232  OpaqueInitializedAssertionPredicate  === _ 2230  [[ 2233 ]] 
 2233  RangeCheck  === 961 2232  [[ 2234 2237 ]] #Last Value Assertion Predicate  P=0.999999, C=-1.000000
 2234  IfFalse  === 2233  [[ 2236 ]] #0
 2236  Halt  === 2234 1 1 8 1  [[ 0 ]] 
 2237  IfTrue  === 2233  [[ 944 ]] #1 !orig=[2014],[1817],[1425],[1223],[1042],[973]
 2245  ConI  === 0  [[ 2246 ]]  #int:-63
 2246  AddI  === _ 41 2245  [[ 321 611 210 901 ]]  !orig=[2090]
 2247  ConvI2L  === _ 2199  [[ 2261 ]]  #long:1..maxint-57, widen: 3
 2261  LShiftL  === _ 2247 139  [[ 2264 ]] 
 2264  AddP  === _ 158 158 2261  [[ 1373 ]] 
 2265  ConL  === 0  [[ 1373 1301 1302 ]]  #long:240
 2266  ConvI2L  === _ 2199  [[ 2294 ]]  #long:1..maxint-49, widen: 3
 2269  ConvI2L  === _ 2199  [[ 2292 ]]  #long:1..maxint-41, widen: 3
 2271  ConvI2L  === _ 2199  [[ 2290 ]]  #long:1..maxint-33, widen: 3
 2273  CastII  === 961 882  [[ 2228 ]]  #int:0..maxint-65, widen: 3 !orig=[2254],[2227],952,[413],[265],[245]
 2279  CastII  === 671 591  [[ 2159 ]]  #int:0..maxint-65, widen: 3 !orig=[2158],662,[426],[265],[245]
 2282  ConvI2L  === _ 2130  [[ 2309 ]]  #long:1..maxint-41, widen: 3
 2284  ConvI2L  === _ 2130  [[ 2307 ]]  #long:1..maxint-33, widen: 3
 2286  ConvI2L  === _ 2130  [[ 2305 ]]  #long:1..maxint-57, widen: 3
 2288  ConvI2L  === _ 2130  [[ 2303 ]]  #long:1..maxint-49, widen: 3
 2290  LShiftL  === _ 2271 139  [[ 2311 ]] 
 2292  LShiftL  === _ 2269 139  [[ 2302 ]] 
 2294  LShiftL  === _ 2266 139  [[ 2316 ]] 
 2296  CastII  === 1613 2130  [[ 1616 ]]  #int:1..maxint-72, widen: 3 !orig=[2070],[1861],[1821],[1615],662,[426],[265],[245]
 2302  AddP  === _ 158 158 2292  [[ 1965 ]] 
 2303  LShiftL  === _ 2288 139  [[ 2319 2318 ]] 
 2305  LShiftL  === _ 2286 139  [[ 2321 2320 ]] 
 2307  LShiftL  === _ 2284 139  [[ 2324 2323 ]] 
 2309  LShiftL  === _ 2282 139  [[ 2326 2325 ]] 
 2311  AddP  === _ 158 158 2290  [[ 1964 ]] 
 2312  CastII  === 1749 2199  [[ 1727 ]]  #int:1..maxint-72, widen: 3 !orig=[2078],[1885],[1852],[1751],952,[413],[265],[245]
 2315  ConL  === 0  [[ 1965 1902 1904 ]]  #long:176
 2316  AddP  === _ 158 158 2294  [[ 1770 ]] 
 2317  ConI  === 0  [[ 1616 1727 ]]  #int:71
 2318  AddP  === _ 158 158 2303  [[ 1635 ]] 
 2319  AddP  === _ 38 38 2303  [[ 1636 ]] 
 2320  AddP  === _ 38 38 2305  [[ 1301 ]] 
 2321  AddP  === _ 158 158 2305  [[ 1302 ]] 
 2322  ConL  === 0  [[ 1636 1635 1770 ]]  #long:208
 2323  AddP  === _ 38 38 2307  [[ 1900 ]] 
 2324  AddP  === _ 158 158 2307  [[ 1901 ]] 
 2325  AddP  === _ 158 158 2309  [[ 1904 ]] 
 2326  AddP  === _ 38 38 2309  [[ 1902 ]] 
 2327  ConL  === 0  [[ 1964 1900 1901 ]]  #long:144
[res] [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10]
[res] [204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204]
