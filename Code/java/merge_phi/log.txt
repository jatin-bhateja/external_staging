
Performing flow analysis on method
<ciMethod name=descriptor holder=java/lang/module/ModuleReference signature=()Ljava/lang/module/ModuleDescriptor; loaded=true arg_size=1 flags=public,final ident=1411 address=0x00007fadac050560>
   0 nofast_aload_0
   1 nofast_getfield 15 <java/lang/module/ModuleReference.descriptor:Ljava/lang/module/ModuleDescriptor;> 
   4 areturn
Initial CI Blocks
********************************************************
TypeFlow for descriptor  5 bytes
--------------------------------------------------------
ciBlock [0 - 5) control : 4:areturn
  No Blocks
--------------------------------------------------------

********************************************************

>> Requesting block for 0/{ }
>> Created new block
  ====================================================  
  [0 - 5) Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [0 - 5)
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  

>> ANALYZING BLOCK : 
  ====================================================  
  #0  [0 - 5) Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/module/ModuleReference
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Computing exceptions for block #0  [0 - 5)
>> Interpreting bytecode 0:aload_0
  State : locals 1, stack 1, monitors 0
    local  0 : java/lang/module/ModuleReference
    stack  0 : java/lang/module/ModuleReference
>> Interpreting bytecode 1:getfield
  State : locals 1, stack 1, monitors 0
    local  0 : java/lang/module/ModuleReference
    stack  0 : java/lang/module/ModuleDescriptor
>> Computing successors for block #0  [0 - 5)
>> Interpreting bytecode 4:areturn
  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/module/ModuleReference

Loop tree
0<-0  defs: { }
********************************************************
TypeFlow for descriptor  5 bytes
  ====================================================  
  #0  rpo#0  [0 - 5) Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/module/ModuleReference
  Successors : 0
  No predecessor information
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

********************************************************


Performing flow analysis on method
<ciMethod name=name holder=java/lang/module/ModuleDescriptor signature=()Ljava/lang/String; loaded=true arg_size=1 flags=public ident=1410 address=0x00007fadac022960>
   0 nofast_aload_0
   1 nofast_getfield 16 <java/lang/module/ModuleDescriptor.name:Ljava/lang/String;> 
   4 areturn
Initial CI Blocks
********************************************************
TypeFlow for name  5 bytes
--------------------------------------------------------
ciBlock [0 - 5) control : 4:areturn
  No Blocks
--------------------------------------------------------

********************************************************

>> Requesting block for 0/{ }
>> Created new block
  ====================================================  
  [0 - 5) Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [0 - 5)
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  

>> ANALYZING BLOCK : 
  ====================================================  
  #0  [0 - 5) Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/module/ModuleDescriptor
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Computing exceptions for block #0  [0 - 5)
>> Interpreting bytecode 0:aload_0
  State : locals 1, stack 1, monitors 0
    local  0 : java/lang/module/ModuleDescriptor
    stack  0 : java/lang/module/ModuleDescriptor
>> Interpreting bytecode 1:getfield
  State : locals 1, stack 1, monitors 0
    local  0 : java/lang/module/ModuleDescriptor
    stack  0 : java/lang/String
>> Computing successors for block #0  [0 - 5)
>> Interpreting bytecode 4:areturn
  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/module/ModuleDescriptor

Loop tree
0<-0  defs: { }
********************************************************
TypeFlow for name  5 bytes
  ====================================================  
  #0  rpo#0  [0 - 5) Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/module/ModuleDescriptor
  Successors : 0
  No predecessor information
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

********************************************************


Performing flow analysis on method
<ciMethod name=source holder=java/lang/module/ModuleDescriptor$Exports signature=()Ljava/lang/String; loaded=true arg_size=1 flags=public ident=1410 address=0x00007fadac038530>
   0 nofast_aload_0
   1 nofast_getfield 19 <java/lang/module/ModuleDescriptor$Exports.source:Ljava/lang/String;> 
   4 areturn
Initial CI Blocks
********************************************************
TypeFlow for source  5 bytes
--------------------------------------------------------
ciBlock [0 - 5) control : 4:areturn
  No Blocks
--------------------------------------------------------

********************************************************

>> Requesting block for 0/{ }
>> Created new block
  ====================================================  
  [0 - 5) Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [0 - 5)
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  

>> ANALYZING BLOCK : 
  ====================================================  
  #0  [0 - 5) Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/module/ModuleDescriptor$Exports
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Computing exceptions for block #0  [0 - 5)
>> Interpreting bytecode 0:aload_0
  State : locals 1, stack 1, monitors 0
    local  0 : java/lang/module/ModuleDescriptor$Exports
    stack  0 : java/lang/module/ModuleDescriptor$Exports
>> Interpreting bytecode 1:getfield
  State : locals 1, stack 1, monitors 0
    local  0 : java/lang/module/ModuleDescriptor$Exports
    stack  0 : java/lang/String
>> Computing successors for block #0  [0 - 5)
>> Interpreting bytecode 4:areturn
  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/module/ModuleDescriptor$Exports

Loop tree
0<-0  defs: { }
********************************************************
TypeFlow for source  5 bytes
  ====================================================  
  #0  rpo#0  [0 - 5) Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/module/ModuleDescriptor$Exports
  Successors : 0
  No predecessor information
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

********************************************************


Performing flow analysis on method
<ciMethod name=reference holder=java/lang/module/ResolvedModule signature=()Ljava/lang/module/ModuleReference; loaded=true arg_size=1 flags=public ident=1411 address=0x00007fadac040540>
   0 nofast_aload_0
   1 nofast_getfield 23 <java/lang/module/ResolvedModule.mref:Ljava/lang/module/ModuleReference;> 
   4 areturn
Initial CI Blocks
********************************************************
TypeFlow for reference  5 bytes
--------------------------------------------------------
ciBlock [0 - 5) control : 4:areturn
  No Blocks
--------------------------------------------------------

********************************************************

>> Requesting block for 0/{ }
>> Created new block
  ====================================================  
  [0 - 5) Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [0 - 5)
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  

>> ANALYZING BLOCK : 
  ====================================================  
  #0  [0 - 5) Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/module/ResolvedModule
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Computing exceptions for block #0  [0 - 5)
>> Interpreting bytecode 0:aload_0
  State : locals 1, stack 1, monitors 0
    local  0 : java/lang/module/ResolvedModule
    stack  0 : java/lang/module/ResolvedModule
>> Interpreting bytecode 1:getfield
  State : locals 1, stack 1, monitors 0
    local  0 : java/lang/module/ResolvedModule
    stack  0 : java/lang/module/ModuleReference
>> Computing successors for block #0  [0 - 5)
>> Interpreting bytecode 4:areturn
  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/module/ResolvedModule

Loop tree
0<-0  defs: { }
********************************************************
TypeFlow for reference  5 bytes
  ====================================================  
  #0  rpo#0  [0 - 5) Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/module/ResolvedModule
  Successors : 0
  No predecessor information
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

********************************************************


Performing flow analysis on method
<ciMethod name=isAutomatic holder=java/lang/module/ModuleDescriptor signature=()Z loaded=true arg_size=1 flags=public ident=1410 address=0x00007fadac048550>
   0 nofast_aload_0
   1 nofast_getfield 53 <java/lang/module/ModuleDescriptor.automatic:Z> 
   4 ireturn
Initial CI Blocks
********************************************************
TypeFlow for isAutomatic  5 bytes
--------------------------------------------------------
ciBlock [0 - 5) control : 4:ireturn
  No Blocks
--------------------------------------------------------

********************************************************

>> Requesting block for 0/{ }
>> Created new block
  ====================================================  
  [0 - 5) Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [0 - 5)
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  

>> ANALYZING BLOCK : 
  ====================================================  
  #0  [0 - 5) Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/module/ModuleDescriptor
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Computing exceptions for block #0  [0 - 5)
>> Interpreting bytecode 0:aload_0
  State : locals 1, stack 1, monitors 0
    local  0 : java/lang/module/ModuleDescriptor
    stack  0 : java/lang/module/ModuleDescriptor
>> Interpreting bytecode 1:getfield
  State : locals 1, stack 1, monitors 0
    local  0 : java/lang/module/ModuleDescriptor
    stack  0 : int
>> Computing successors for block #0  [0 - 5)
>> Interpreting bytecode 4:ireturn
  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/module/ModuleDescriptor

Loop tree
0<-0  defs: { }
********************************************************
TypeFlow for isAutomatic  5 bytes
  ====================================================  
  #0  rpo#0  [0 - 5) Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/module/ModuleDescriptor
  Successors : 0
  No predecessor information
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

********************************************************


Performing flow analysis on method
<ciMethod name=targets holder=java/lang/module/ModuleDescriptor$Exports signature=()Ljava/util/Set; loaded=true arg_size=1 flags=public ident=1411 address=0x00007fadac06b1b0>
   0 nofast_aload_0
   1 nofast_getfield 23 <java/lang/module/ModuleDescriptor$Exports.targets:Ljava/util/Set;> 
   4 areturn
Initial CI Blocks
********************************************************
TypeFlow for targets  5 bytes
--------------------------------------------------------
ciBlock [0 - 5) control : 4:areturn
  No Blocks
--------------------------------------------------------

********************************************************

>> Requesting block for 0/{ }
>> Created new block
  ====================================================  
  [0 - 5) Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [0 - 5)
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  

>> ANALYZING BLOCK : 
  ====================================================  
  #0  [0 - 5) Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/module/ModuleDescriptor$Exports
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Computing exceptions for block #0  [0 - 5)
>> Interpreting bytecode 0:aload_0
  State : locals 1, stack 1, monitors 0
    local  0 : java/lang/module/ModuleDescriptor$Exports
    stack  0 : java/lang/module/ModuleDescriptor$Exports
>> Interpreting bytecode 1:getfield
  State : locals 1, stack 1, monitors 0
    local  0 : java/lang/module/ModuleDescriptor$Exports
    stack  0 : java/util/Set
>> Computing successors for block #0  [0 - 5)
>> Interpreting bytecode 4:areturn
  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/module/ModuleDescriptor$Exports

Loop tree
0<-0  defs: { }
********************************************************
TypeFlow for targets  5 bytes
  ====================================================  
  #0  rpo#0  [0 - 5) Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/module/ModuleDescriptor$Exports
  Successors : 0
  No predecessor information
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

********************************************************


Performing flow analysis on method
<ciMethod name=configuration holder=java/lang/module/ResolvedModule signature=()Ljava/lang/module/Configuration; loaded=true arg_size=1 flags=public ident=1411 address=0x00007fadac050560>
   0 nofast_aload_0
   1 nofast_getfield 15 <java/lang/module/ResolvedModule.cf:Ljava/lang/module/Configuration;> 
   4 areturn
Initial CI Blocks
********************************************************
TypeFlow for configuration  5 bytes
--------------------------------------------------------
ciBlock [0 - 5) control : 4:areturn
  No Blocks
--------------------------------------------------------

********************************************************

>> Requesting block for 0/{ }
>> Created new block
  ====================================================  
  [0 - 5) Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [0 - 5)
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  

>> ANALYZING BLOCK : 
  ====================================================  
  #0  [0 - 5) Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/module/ResolvedModule
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Computing exceptions for block #0  [0 - 5)
>> Interpreting bytecode 0:aload_0
  State : locals 1, stack 1, monitors 0
    local  0 : java/lang/module/ResolvedModule
    stack  0 : java/lang/module/ResolvedModule
>> Interpreting bytecode 1:getfield
  State : locals 1, stack 1, monitors 0
    local  0 : java/lang/module/ResolvedModule
    stack  0 : java/lang/module/Configuration
>> Computing successors for block #0  [0 - 5)
>> Interpreting bytecode 4:areturn
  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/module/ResolvedModule

Loop tree
0<-0  defs: { }
********************************************************
TypeFlow for configuration  5 bytes
  ====================================================  
  #0  rpo#0  [0 - 5) Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/module/ResolvedModule
  Successors : 0
  No predecessor information
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

********************************************************


Performing flow analysis on method
<ciMethod name=isEmpty holder=java/util/ImmutableCollections$Set12 signature=()Z loaded=true arg_size=1 flags=public ident=1410 address=0x00007fadac022960>
   0 iconst_0
   1 ireturn
Initial CI Blocks
********************************************************
TypeFlow for isEmpty  2 bytes
--------------------------------------------------------
ciBlock [0 - 2) control : 1:ireturn
  No Blocks
--------------------------------------------------------

********************************************************

>> Requesting block for 0/{ }
>> Created new block
  ====================================================  
  [0 - 2) Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [0 - 2)
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  

>> ANALYZING BLOCK : 
  ====================================================  
  #0  [0 - 2) Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/util/ImmutableCollections$Set12
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Computing exceptions for block #0  [0 - 2)
>> Interpreting bytecode 0:iconst_0
  State : locals 1, stack 1, monitors 0
    local  0 : java/util/ImmutableCollections$Set12
    stack  0 : int
>> Computing successors for block #0  [0 - 2)
>> Interpreting bytecode 1:ireturn
  State : locals 1, stack 0, monitors 0
    local  0 : java/util/ImmutableCollections$Set12

Loop tree
0<-0  defs: { }
********************************************************
TypeFlow for isEmpty  2 bytes
  ====================================================  
  #0  rpo#0  [0 - 2) Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/util/ImmutableCollections$Set12
  Successors : 0
  No predecessor information
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

********************************************************


Performing flow analysis on method
<ciMethod name=ordinal holder=java/lang/Enum signature=()I loaded=true arg_size=1 flags=public,final ident=1409 address=0x00007fadac038480>
   0 nofast_aload_0
   1 nofast_getfield 7 <java/lang/Enum.ordinal:I> 
   4 ireturn
Initial CI Blocks
********************************************************
TypeFlow for ordinal  5 bytes
--------------------------------------------------------
ciBlock [0 - 5) control : 4:ireturn
  No Blocks
--------------------------------------------------------

********************************************************

>> Requesting block for 0/{ }
>> Created new block
  ====================================================  
  [0 - 5) Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [0 - 5)
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  

>> ANALYZING BLOCK : 
  ====================================================  
  #0  [0 - 5) Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/Enum
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Computing exceptions for block #0  [0 - 5)
>> Interpreting bytecode 0:aload_0
  State : locals 1, stack 1, monitors 0
    local  0 : java/lang/Enum
    stack  0 : java/lang/Enum
>> Interpreting bytecode 1:getfield
  State : locals 1, stack 1, monitors 0
    local  0 : java/lang/Enum
    stack  0 : int
>> Computing successors for block #0  [0 - 5)
>> Interpreting bytecode 4:ireturn
  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/Enum

Loop tree
0<-0  defs: { }
********************************************************
TypeFlow for ordinal  5 bytes
  ====================================================  
  #0  rpo#0  [0 - 5) Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/Enum
  Successors : 0
  No predecessor information
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

********************************************************


Performing flow analysis on method
<ciMethod name=get holder=jdk/internal/util/StrongReferenceKey signature=()Ljava/lang/Object; loaded=true arg_size=1 flags=public ident=1410 address=0x00007fadac040540>
   0 nofast_aload_0
   1 nofast_getfield 7 <jdk/internal/util/StrongReferenceKey.key:Ljava/lang/Object;> 
   4 areturn
Initial CI Blocks
********************************************************
TypeFlow for get  5 bytes
--------------------------------------------------------
ciBlock [0 - 5) control : 4:areturn
  No Blocks
--------------------------------------------------------

********************************************************

>> Requesting block for 0/{ }
>> Created new block
  ====================================================  
  [0 - 5) Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [0 - 5)
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  

>> ANALYZING BLOCK : 
  ====================================================  
  #0  [0 - 5) Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : jdk/internal/util/StrongReferenceKey
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Computing exceptions for block #0  [0 - 5)
>> Interpreting bytecode 0:aload_0
  State : locals 1, stack 1, monitors 0
    local  0 : jdk/internal/util/StrongReferenceKey
    stack  0 : jdk/internal/util/StrongReferenceKey
>> Interpreting bytecode 1:getfield
  State : locals 1, stack 1, monitors 0
    local  0 : jdk/internal/util/StrongReferenceKey
    stack  0 : java/lang/Object
>> Computing successors for block #0  [0 - 5)
>> Interpreting bytecode 4:areturn
  State : locals 1, stack 0, monitors 0
    local  0 : jdk/internal/util/StrongReferenceKey

Loop tree
0<-0  defs: { }
********************************************************
TypeFlow for get  5 bytes
  ====================================================  
  #0  rpo#0  [0 - 5) Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : jdk/internal/util/StrongReferenceKey
  Successors : 0
  No predecessor information
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

********************************************************


Performing flow analysis on method
<ciMethod name=returnType holder=java/lang/invoke/MethodType signature=()Ljava/lang/Class; loaded=true arg_size=1 flags=public ident=1409 address=0x00007fadac0484a0>
   0 nofast_aload_0
   1 nofast_getfield 9 <java/lang/invoke/MethodType.rtype:Ljava/lang/Class;> 
   4 areturn
Initial CI Blocks
********************************************************
TypeFlow for returnType  5 bytes
--------------------------------------------------------
ciBlock [0 - 5) control : 4:areturn
  No Blocks
--------------------------------------------------------

********************************************************

>> Requesting block for 0/{ }
>> Created new block
  ====================================================  
  [0 - 5) Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [0 - 5)
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  

>> ANALYZING BLOCK : 
  ====================================================  
  #0  [0 - 5) Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/invoke/MethodType
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Computing exceptions for block #0  [0 - 5)
>> Interpreting bytecode 0:aload_0
  State : locals 1, stack 1, monitors 0
    local  0 : java/lang/invoke/MethodType
    stack  0 : java/lang/invoke/MethodType
>> Interpreting bytecode 1:getfield
  State : locals 1, stack 1, monitors 0
    local  0 : java/lang/invoke/MethodType
    stack  0 : java/lang/Class
>> Computing successors for block #0  [0 - 5)
>> Interpreting bytecode 4:areturn
  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/invoke/MethodType

Loop tree
0<-0  defs: { }
********************************************************
TypeFlow for returnType  5 bytes
  ====================================================  
  #0  rpo#0  [0 - 5) Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/invoke/MethodType
  Successors : 0
  No predecessor information
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

********************************************************


Performing flow analysis on method
<ciMethod name=getUnsafe holder=jdk/internal/misc/Unsafe signature=()Ljdk/internal/misc/Unsafe; loaded=true arg_size=0 flags=public,static ident=1409 address=0x00007fae6029d3d0>
   0 getstatic 7 <jdk/internal/misc/Unsafe.theUnsafe:Ljdk/internal/misc/Unsafe;> 
   3 areturn
Initial CI Blocks
********************************************************
TypeFlow for getUnsafe  4 bytes
--------------------------------------------------------
ciBlock [0 - 4) control : 3:areturn
  No Blocks
--------------------------------------------------------

********************************************************

>> Requesting block for 0/{ }
>> Created new block
  ====================================================  
  [0 - 4) Stored locals: { }

  State : locals 0, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [0 - 4)
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 0, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 0, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  

>> ANALYZING BLOCK : 
  ====================================================  
  #0  [0 - 4) Stored locals: { }

  State : locals 0, stack 0, monitors 0
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Computing exceptions for block #0  [0 - 4)
>> Interpreting bytecode 0:getstatic
  State : locals 0, stack 1, monitors 0
    stack  0 : jdk/internal/misc/Unsafe
>> Computing successors for block #0  [0 - 4)
>> Interpreting bytecode 3:areturn
  State : locals 0, stack 0, monitors 0

Loop tree
0<-0  defs: { }
********************************************************
TypeFlow for getUnsafe  4 bytes
  ====================================================  
  #0  rpo#0  [0 - 4) Stored locals: { }

  State : locals 0, stack 0, monitors 0
  Successors : 0
  No predecessor information
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

********************************************************


Performing flow analysis on method
<ciMethod name=helper holder=unsafe_bug signature=([D[Z)Qunsafe_bug$Pair; loaded=true arg_size=2 flags=public,static ident=1411 address=0x00007fadac048550>
   0 invokestatic 7 <jdk/internal/misc/Unsafe.getUnsafe()Ljdk/internal/misc/Unsafe;> 
  0    bci: 0    CounterData        count(3473)
   3 aconst_init 13 <unsafe_bug$Pair>
   6 checkcast 2 <java/lang/Object>
  16   bci: 6    ReceiverTypeData   count(0) nonprofiled_count(0) entries(1)
                                    'unsafe_bug$Pair'(3476 1.00)
   9 invokevirtual 15 <jdk/internal/misc/Unsafe.makePrivateBuffer(Ljava/lang/Object;)Ljava/lang/Object;> 
  72   bci: 9    VirtualCallData    count(3477) nonprofiled_count(0) entries(0)
  12 checkcast 19 <Qunsafe_bug$Pair;>
  128  bci: 12   ReceiverTypeData   count(0) nonprofiled_count(0) entries(1)
                                    'unsafe_bug$Pair'(3478 1.00)
  15 astore_2
  16 iconst_0
  17 istore_3
  18 iload_3
  19 getstatic 21 <unsafe_bug.OFFSETS:[J> 
  22 arraylength
  23 if_icmpge 56
  184  bci: 23   BranchData         taken(3480) displacement(240)
                                    not taken(6960)
  26 aload_1
  27 iload_3
  28 baload
  29 ifeq 50
  216  bci: 29   BranchData         taken(3481) displacement(184)
                                    not taken(3482)
  32 invokestatic 7 <jdk/internal/misc/Unsafe.getUnsafe()Ljdk/internal/misc/Unsafe;> 
  248  bci: 32   CounterData        count(3483)
  35 aload_2
  36 checkcast 2 <java/lang/Object>
  264  bci: 36   ReceiverTypeData   count(0) nonprofiled_count(0) entries(1)
                                    'unsafe_bug$Pair'(3485 1.00)
  39 getstatic 21 <unsafe_bug.OFFSETS:[J> 
  42 iload_3
  43 laload
  44 fast_aload_0
  45 iload_3
  46 daload
  47 invokevirtual 27 <jdk/internal/misc/Unsafe.putDouble(Ljava/lang/Object;JD)V> 
  320  bci: 47   VirtualCallData    count(3487) nonprofiled_count(0) entries(0)
                argument types      0: stack(1) 'unsafe_bug$Pair'
  50 iinc #3 1
  53 goto 18
  400  bci: 53   JumpData           taken(6978) displacement(-216)
  56 invokestatic 7 <jdk/internal/misc/Unsafe.getUnsafe()Ljdk/internal/misc/Unsafe;> 
  424  bci: 56   CounterData        count(3490)
  59 aload_2
  60 checkcast 2 <java/lang/Object>
  440  bci: 60   ReceiverTypeData   count(0) nonprofiled_count(0) entries(1)
                                    'unsafe_bug$Pair'(3492 1.00)
  63 invokevirtual 31 <jdk/internal/misc/Unsafe.finishPrivateBuffer(Ljava/lang/Object;)Ljava/lang/Object;> 
  496  bci: 63   VirtualCallData    count(3493) nonprofiled_count(0) entries(0)
  66 checkcast 19 <Qunsafe_bug$Pair;>
  552  bci: 66   ReceiverTypeData   count(0) nonprofiled_count(0) entries(1)
                                    'unsafe_bug$Pair'(3495 1.00)
  69 areturn
Initial CI Blocks
********************************************************
TypeFlow for helper  70 bytes
--------------------------------------------------------
ciBlock [0 - 18) control : 18:fall through
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [18 - 26) control : 23:if_icmpge
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [26 - 32) control : 29:ifeq
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [32 - 50) control : 50:fall through
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [50 - 56) control : 53:goto
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [56 - 70) control : 69:areturn
  No Blocks
--------------------------------------------------------

********************************************************

>> Requesting block for 0/{ }
>> Created new block
  ====================================================  
  [0 - 18) Stored locals: { }

  State : locals 4, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [0 - 18)
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 4, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 4, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  

>> ANALYZING BLOCK : 
  ====================================================  
  #0  [0 - 18) Stored locals: { }

  State : locals 4, stack 0, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : bottom
    local  3 : bottom
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Computing exceptions for block #0  [0 - 18)
>> Interpreting bytecode 0:invokestatic
  State : locals 4, stack 1, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : bottom
    local  3 : bottom
    stack  0 : jdk/internal/misc/Unsafe
>> Interpreting bytecode 3:aconst_init
  State : locals 4, stack 2, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : bottom
    local  3 : bottom
    stack  0 : jdk/internal/misc/Unsafe
    stack  1 : unsafe_bug$Pair
>> Interpreting bytecode 6:checkcast
  State : locals 4, stack 2, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : bottom
    local  3 : bottom
    stack  0 : jdk/internal/misc/Unsafe
    stack  1 : unsafe_bug$Pair
>> Interpreting bytecode 9:invokevirtual
  State : locals 4, stack 1, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : bottom
    local  3 : bottom
    stack  0 : java/lang/Object
>> Interpreting bytecode 12:checkcast
  State : locals 4, stack 1, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : bottom
    local  3 : bottom
    stack  0 : unsafe_bug$Pair
>> Interpreting bytecode 15:astore_2
  State : locals 4, stack 0, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : bottom
>> Interpreting bytecode 16:iconst_0
  State : locals 4, stack 1, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : bottom
    stack  0 : int
>> Interpreting bytecode 17:istore_3
  State : locals 4, stack 0, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
>> Computing successors for block #0  [0 - 18)
>> Requesting block for 18/{ }
>> Created new block
  ====================================================  
  [18 - 26) Stored locals: { }

  State : locals 4, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [18 - 26)

>> ANALYZING BLOCK : 
  ====================================================  
  #1  [18 - 26) Stored locals: { }

  State : locals 4, stack 0, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
  No successor information
  Predecessors : 1
    #0  [0 - 18)
  No exception information
  ====================================================  
>> Computing exceptions for block #1  [18 - 26)
>> Interpreting bytecode 18:iload_3
  State : locals 4, stack 1, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
    stack  0 : int
>> Interpreting bytecode 19:getstatic
  State : locals 4, stack 2, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
    stack  0 : int
    stack  1 : [J
>> Interpreting bytecode 22:arraylength
  State : locals 4, stack 2, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
    stack  0 : int
    stack  1 : int
>> Computing successors for block #1  [18 - 26)
>> Requesting block for 26/{ }
>> Created new block
  ====================================================  
  [26 - 32) Stored locals: { }

  State : locals 4, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [26 - 32)
>> Requesting block for 56/{ }
>> Created new block
  ====================================================  
  [56 - 70) Stored locals: { }

  State : locals 4, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [56 - 70)
>> Interpreting bytecode 23:if_icmpge
  State : locals 4, stack 0, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int

>> ANALYZING BLOCK : 
  ====================================================  
  #2  [56 - 70) Stored locals: { }

  State : locals 4, stack 0, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
  No successor information
  Predecessors : 1
    #1  [18 - 26)
  No exception information
  ====================================================  
>> Computing exceptions for block #2  [56 - 70)
>> Interpreting bytecode 56:invokestatic
  State : locals 4, stack 1, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
    stack  0 : jdk/internal/misc/Unsafe
>> Interpreting bytecode 59:aload_2
  State : locals 4, stack 2, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
    stack  0 : jdk/internal/misc/Unsafe
    stack  1 : unsafe_bug$Pair
>> Interpreting bytecode 60:checkcast
  State : locals 4, stack 2, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
    stack  0 : jdk/internal/misc/Unsafe
    stack  1 : unsafe_bug$Pair
>> Interpreting bytecode 63:invokevirtual
  State : locals 4, stack 1, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
    stack  0 : java/lang/Object
>> Interpreting bytecode 66:checkcast
  State : locals 4, stack 1, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
    stack  0 : unsafe_bug$Pair
>> Computing successors for block #2  [56 - 70)
>> Interpreting bytecode 69:areturn
  State : locals 4, stack 0, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int

>> ANALYZING BLOCK : 
  ====================================================  
  #3  [26 - 32) Stored locals: { }

  State : locals 4, stack 0, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
  No successor information
  Predecessors : 1
    #1  [18 - 26)
  No exception information
  ====================================================  
>> Computing exceptions for block #3  [26 - 32)
>> Interpreting bytecode 26:aload_1
  State : locals 4, stack 1, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
    stack  0 : [Z
>> Interpreting bytecode 27:iload_3
  State : locals 4, stack 2, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
    stack  0 : [Z
    stack  1 : int
>> Interpreting bytecode 28:baload
  State : locals 4, stack 1, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
    stack  0 : int
>> Computing successors for block #3  [26 - 32)
>> Requesting block for 32/{ }
>> Created new block
  ====================================================  
  [32 - 50) Stored locals: { }

  State : locals 4, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [32 - 50)
>> Requesting block for 50/{ }
>> Created new block
  ====================================================  
  [50 - 56) Stored locals: { }

  State : locals 4, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [50 - 56)
>> Interpreting bytecode 29:ifeq
  State : locals 4, stack 0, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int

>> ANALYZING BLOCK : 
  ====================================================  
  #4  [50 - 56) Stored locals: { }

  State : locals 4, stack 0, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
  No successor information
  Predecessors : 1
    #3  [26 - 32)
  No exception information
  ====================================================  
>> Computing exceptions for block #4  [50 - 56)
>> Interpreting bytecode 50:iinc
  State : locals 4, stack 0, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
>> Computing successors for block #4  [50 - 56)
>> Requesting block for 18/{ }
>> Found block #1  [18 - 26)
>> Interpreting bytecode 53:goto
  State : locals 4, stack 0, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int

>> ANALYZING BLOCK : 
  ====================================================  
  #5  [32 - 50) Stored locals: { }

  State : locals 4, stack 0, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
  No successor information
  Predecessors : 1
    #3  [26 - 32)
  No exception information
  ====================================================  
>> Computing exceptions for block #5  [32 - 50)
>> Interpreting bytecode 32:invokestatic
  State : locals 4, stack 1, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
    stack  0 : jdk/internal/misc/Unsafe
>> Interpreting bytecode 35:aload_2
  State : locals 4, stack 2, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
    stack  0 : jdk/internal/misc/Unsafe
    stack  1 : unsafe_bug$Pair
>> Interpreting bytecode 36:checkcast
  State : locals 4, stack 2, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
    stack  0 : jdk/internal/misc/Unsafe
    stack  1 : unsafe_bug$Pair
>> Interpreting bytecode 39:getstatic
  State : locals 4, stack 3, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
    stack  0 : jdk/internal/misc/Unsafe
    stack  1 : unsafe_bug$Pair
    stack  2 : [J
>> Interpreting bytecode 42:iload_3
  State : locals 4, stack 4, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
    stack  0 : jdk/internal/misc/Unsafe
    stack  1 : unsafe_bug$Pair
    stack  2 : [J
    stack  3 : int
>> Interpreting bytecode 43:laload
  State : locals 4, stack 4, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
    stack  0 : jdk/internal/misc/Unsafe
    stack  1 : unsafe_bug$Pair
    stack  2 : long
    stack  3 : long2
>> Interpreting bytecode 44:aload_0
  State : locals 4, stack 5, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
    stack  0 : jdk/internal/misc/Unsafe
    stack  1 : unsafe_bug$Pair
    stack  2 : long
    stack  3 : long2
    stack  4 : [D
>> Interpreting bytecode 45:iload_3
  State : locals 4, stack 6, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
    stack  0 : jdk/internal/misc/Unsafe
    stack  1 : unsafe_bug$Pair
    stack  2 : long
    stack  3 : long2
    stack  4 : [D
    stack  5 : int
>> Interpreting bytecode 46:daload
  State : locals 4, stack 6, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
    stack  0 : jdk/internal/misc/Unsafe
    stack  1 : unsafe_bug$Pair
    stack  2 : long
    stack  3 : long2
    stack  4 : double
    stack  5 : double2
>> Interpreting bytecode 47:invokevirtual
  State : locals 4, stack 0, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
>> Computing successors for block #5  [32 - 50)
>> Requesting block for 50/{ }
>> Found block #4  [50 - 56)
>> Adding block #1  [18 - 26) lphd to the work list : 

>> Requesting clone of loop head #1  [18 - 26) lphd  for predecessor #4  [50 - 56)
>> Requesting block for 18/{ }
>> Created new block
  ====================================================  
  [18 - 26) Stored locals: { }

  State : locals 4, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [18 - 26)/backedge_copy

>> ANALYZING BLOCK : 
  ====================================================  
  #4  [50 - 56) Stored locals: { 3 }
 loops: 1<-4
  State : locals 4, stack 0, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
  Successors : 1
    #6  [18 - 26)/backedge_copy
  Predecessors : 2
    #3  [26 - 32)
    #5  [32 - 50)
  Exceptions : 0
  ====================================================  
>> Interpreting bytecode 50:iinc
  State : locals 4, stack 0, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
>> Interpreting bytecode 53:goto
  State : locals 4, stack 0, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int

>> ANALYZING BLOCK : 
  ====================================================  
  #6  [18 - 26)/backedge_copy Stored locals: { }

  State : locals 4, stack 0, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
  No successor information
  Predecessors : 1
    #4  [50 - 56)
  No exception information
  ====================================================  
>> Computing exceptions for block #6  [18 - 26)/backedge_copy
>> Interpreting bytecode 18:iload_3
  State : locals 4, stack 1, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
    stack  0 : int
>> Interpreting bytecode 19:getstatic
  State : locals 4, stack 2, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
    stack  0 : int
    stack  1 : [J
>> Interpreting bytecode 22:arraylength
  State : locals 4, stack 2, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
    stack  0 : int
    stack  1 : int
>> Computing successors for block #6  [18 - 26)/backedge_copy
>> Requesting block for 26/{ }
>> Found block #3  [26 - 32)
>> Requesting block for 56/{ }
>> Found block #2  [56 - 70)
>> Interpreting bytecode 23:if_icmpge
  State : locals 4, stack 0, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 4, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 4, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Adding block #3  [26 - 32) lphd to the work list : 


Loop tree
0<-0  defs: { 2 3 }
  3<-5  defs: { 3 }

>> ANALYZING BLOCK : 
  ====================================================  
  #3  [26 - 32) lphd Stored locals: { }
 loops: 3<-5
  State : locals 4, stack 0, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
  Successors : 2
    #6  [32 - 50)
    #4  [50 - 56)
  Predecessors : 2
    #1  [18 - 26)
    #5  [18 - 26)/backedge_copy
  Exceptions : 0
  ====================================================  
>> Interpreting bytecode 26:aload_1
  State : locals 4, stack 1, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
    stack  0 : [Z
>> Interpreting bytecode 27:iload_3
  State : locals 4, stack 2, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
    stack  0 : [Z
    stack  1 : int
>> Interpreting bytecode 28:baload
  State : locals 4, stack 1, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
    stack  0 : int
>> Interpreting bytecode 29:ifeq
  State : locals 4, stack 0, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int

>> ANALYZING BLOCK : 
  ====================================================  
  #1  [18 - 26) Stored locals: { }

  State : locals 4, stack 0, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
  Successors : 2
    #3  [26 - 32) lphd
    #2  [56 - 70)
  Predecessors : 1
    #0  [0 - 18)
  Exceptions : 0
  ====================================================  
>> Interpreting bytecode 18:iload_3
  State : locals 4, stack 1, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
    stack  0 : int
>> Interpreting bytecode 19:getstatic
  State : locals 4, stack 2, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
    stack  0 : int
    stack  1 : [J
>> Interpreting bytecode 22:arraylength
  State : locals 4, stack 2, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
    stack  0 : int
    stack  1 : int
>> Interpreting bytecode 23:if_icmpge
  State : locals 4, stack 0, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
********************************************************
TypeFlow for helper  70 bytes
  ====================================================  
  #0  rpo#0  [0 - 18) Stored locals: { 2 3 }

  State : locals 4, stack 0, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : bottom
    local  3 : bottom
  Successors : 1
    #1  rpo#1  [18 - 26)
  No predecessor information
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #1  rpo#1  [18 - 26) Stored locals: { }

  State : locals 4, stack 0, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
  Successors : 2
    #3  rpo#2  [26 - 32) lphd
    #2  rpo#6  [56 - 70)
  Predecessors : 1
    #0  rpo#0  [0 - 18)
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #3  rpo#2  [26 - 32) lphd Stored locals: { }
 loops: 3<-5
  State : locals 4, stack 0, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
  Successors : 2
    #6  rpo#3  [32 - 50)
    #4  rpo#4  [50 - 56)
  Predecessors : 2
    #1  rpo#1  [18 - 26)
    #5  rpo#5  [18 - 26)/backedge_copy
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #6  rpo#3  [32 - 50) Stored locals: { }
 loops: 3<-5
  State : locals 4, stack 0, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
  Successors : 1
    #4  rpo#4  [50 - 56)
  Predecessors : 1
    #3  rpo#2  [26 - 32) lphd
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #4  rpo#4  [50 - 56) Stored locals: { 3 }
 loops: 3<-5
  State : locals 4, stack 0, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
  Successors : 1
    #5  rpo#5  [18 - 26)/backedge_copy
  Predecessors : 2
    #3  rpo#2  [26 - 32) lphd
    #6  rpo#3  [32 - 50)
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #5  rpo#5  [18 - 26)/backedge_copy Stored locals: { }
 loops: 3<-5
  State : locals 4, stack 0, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
  Successors : 2
    #3  rpo#2  [26 - 32) lphd
    #2  rpo#6  [56 - 70)
  Predecessors : 1
    #4  rpo#4  [50 - 56)
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #2  rpo#6  [56 - 70) Stored locals: { }

  State : locals 4, stack 0, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
  Successors : 0
  Predecessors : 2
    #1  rpo#1  [18 - 26)
    #5  rpo#5  [18 - 26)/backedge_copy
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

********************************************************


Performing flow analysis on method
<ciMethod name=getUnsafe holder=jdk/internal/misc/Unsafe signature=()Ljdk/internal/misc/Unsafe; loaded=true arg_size=0 flags=public,static ident=1413 address=0x00007fadac04a558>
   0 getstatic 7 <jdk/internal/misc/Unsafe.theUnsafe:Ljdk/internal/misc/Unsafe;> 
   3 areturn
Initial CI Blocks
********************************************************
TypeFlow for getUnsafe  4 bytes
--------------------------------------------------------
ciBlock [0 - 4) control : 3:areturn
  No Blocks
--------------------------------------------------------

********************************************************

>> Requesting block for 0/{ }
>> Created new block
  ====================================================  
  [0 - 4) Stored locals: { }

  State : locals 0, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [0 - 4)
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 0, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 0, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  

>> ANALYZING BLOCK : 
  ====================================================  
  #0  [0 - 4) Stored locals: { }

  State : locals 0, stack 0, monitors 0
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Computing exceptions for block #0  [0 - 4)
>> Interpreting bytecode 0:getstatic
  State : locals 0, stack 1, monitors 0
    stack  0 : jdk/internal/misc/Unsafe
>> Computing successors for block #0  [0 - 4)
>> Interpreting bytecode 3:areturn
  State : locals 0, stack 0, monitors 0

Loop tree
0<-0  defs: { }
********************************************************
TypeFlow for getUnsafe  4 bytes
  ====================================================  
  #0  rpo#0  [0 - 4) Stored locals: { }

  State : locals 0, stack 0, monitors 0
  Successors : 0
  No predecessor information
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

********************************************************


Performing flow analysis on method
<ciMethod name=test holder=unsafe_bug signature=([D[Z)D loaded=true arg_size=2 flags=public,static ident=1410 address=0x00007fadac0d4c40>
   0 fast_aload_0
   1 aload_1
   2 invokestatic 34 <unsafe_bug.helper([D[Z)Qunsafe_bug$Pair;> 
  0    bci: 2    CounterData        count(7296)
   5 astore_2
   6 aload_2
   7 fast_dgetfield 38 <unsafe_bug$Pair.d1:D> 
  10 aload_2
  11 fast_dgetfield 42 <unsafe_bug$Pair.d2:D> 
  14 dadd
  15 dreturn
Initial CI Blocks
********************************************************
TypeFlow for test  16 bytes
--------------------------------------------------------
ciBlock [0 - 16) control : 15:dreturn
  No Blocks
--------------------------------------------------------

********************************************************

>> Requesting block for 0/{ }
>> Created new block
  ====================================================  
  [0 - 16) Stored locals: { }

  State : locals 3, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [0 - 16)
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 3, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 3, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  

>> ANALYZING BLOCK : 
  ====================================================  
  #0  [0 - 16) Stored locals: { }

  State : locals 3, stack 0, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : bottom
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Computing exceptions for block #0  [0 - 16)
>> Interpreting bytecode 0:aload_0
  State : locals 3, stack 1, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : bottom
    stack  0 : [D
>> Interpreting bytecode 1:aload_1
  State : locals 3, stack 2, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : bottom
    stack  0 : [D
    stack  1 : [Z
>> Interpreting bytecode 2:invokestatic
  State : locals 3, stack 1, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : bottom
    stack  0 : unsafe_bug$Pair
>> Interpreting bytecode 5:astore_2
  State : locals 3, stack 0, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
>> Interpreting bytecode 6:aload_2
  State : locals 3, stack 1, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    stack  0 : unsafe_bug$Pair
>> Interpreting bytecode 7:getfield
  State : locals 3, stack 2, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    stack  0 : double
    stack  1 : double2
>> Interpreting bytecode 10:aload_2
  State : locals 3, stack 3, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    stack  0 : double
    stack  1 : double2
    stack  2 : unsafe_bug$Pair
>> Interpreting bytecode 11:getfield
  State : locals 3, stack 4, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    stack  0 : double
    stack  1 : double2
    stack  2 : double
    stack  3 : double2
>> Interpreting bytecode 14:dadd
  State : locals 3, stack 2, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    stack  0 : double
    stack  1 : double2
>> Computing successors for block #0  [0 - 16)
>> Interpreting bytecode 15:dreturn
  State : locals 3, stack 0, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair

Loop tree
0<-0  defs: { }
********************************************************
TypeFlow for test  16 bytes
  ====================================================  
  #0  rpo#0  [0 - 16) Stored locals: { 2 }

  State : locals 3, stack 0, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : bottom
  Successors : 0
  No predecessor information
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

********************************************************


Performing flow analysis on method
<ciMethod name=helper holder=unsafe_bug signature=([D[Z)Qunsafe_bug$Pair; loaded=true arg_size=2 flags=public,static ident=1413 address=0x00007fadac0d62f8>
   0 invokestatic 7 <jdk/internal/misc/Unsafe.getUnsafe()Ljdk/internal/misc/Unsafe;> 
  0    bci: 0    CounterData        count(4550)
   3 aconst_init 13 <unsafe_bug$Pair>
   6 checkcast 2 <java/lang/Object>
  16   bci: 6    ReceiverTypeData   count(0) nonprofiled_count(0) entries(1)
                                    'unsafe_bug$Pair'(4550 1.00)
   9 invokevirtual 15 <jdk/internal/misc/Unsafe.makePrivateBuffer(Ljava/lang/Object;)Ljava/lang/Object;> 
  72   bci: 9    VirtualCallData    count(4550) nonprofiled_count(0) entries(0)
  12 checkcast 19 <Qunsafe_bug$Pair;>
  128  bci: 12   ReceiverTypeData   count(0) nonprofiled_count(0) entries(1)
                                    'unsafe_bug$Pair'(4550 1.00)
  15 astore_2
  16 iconst_0
  17 istore_3
  18 iload_3
  19 getstatic 21 <unsafe_bug.OFFSETS:[J> 
  22 arraylength
  23 if_icmpge 56
  184  bci: 23   BranchData         taken(4550) displacement(240)
                                    not taken(9100)
  26 aload_1
  27 iload_3
  28 baload
  29 ifeq 50
  216  bci: 29   BranchData         taken(4550) displacement(184)
                                    not taken(4550)
  32 invokestatic 7 <jdk/internal/misc/Unsafe.getUnsafe()Ljdk/internal/misc/Unsafe;> 
  248  bci: 32   CounterData        count(4550)
  35 aload_2
  36 checkcast 2 <java/lang/Object>
  264  bci: 36   ReceiverTypeData   count(0) nonprofiled_count(0) entries(1)
                                    'unsafe_bug$Pair'(4550 1.00)
  39 getstatic 21 <unsafe_bug.OFFSETS:[J> 
  42 iload_3
  43 laload
  44 fast_aload_0
  45 iload_3
  46 daload
  47 invokevirtual 27 <jdk/internal/misc/Unsafe.putDouble(Ljava/lang/Object;JD)V> 
  320  bci: 47   VirtualCallData    count(4550) nonprofiled_count(0) entries(0)
                argument types      0: stack(1) 'unsafe_bug$Pair'
  50 iinc #3 1
  53 goto 18
  400  bci: 53   JumpData           taken(9100) displacement(-216)
  56 invokestatic 7 <jdk/internal/misc/Unsafe.getUnsafe()Ljdk/internal/misc/Unsafe;> 
  424  bci: 56   CounterData        count(4550)
  59 aload_2
  60 checkcast 2 <java/lang/Object>
  440  bci: 60   ReceiverTypeData   count(0) nonprofiled_count(0) entries(1)
                                    'unsafe_bug$Pair'(4550 1.00)
  63 invokevirtual 31 <jdk/internal/misc/Unsafe.finishPrivateBuffer(Ljava/lang/Object;)Ljava/lang/Object;> 
  496  bci: 63   VirtualCallData    count(4550) nonprofiled_count(0) entries(0)
  66 checkcast 19 <Qunsafe_bug$Pair;>
  552  bci: 66   ReceiverTypeData   count(0) nonprofiled_count(0) entries(1)
                                    'unsafe_bug$Pair'(4550 1.00)
  69 areturn
Initial CI Blocks
********************************************************
TypeFlow for helper  70 bytes
--------------------------------------------------------
ciBlock [0 - 18) control : 18:fall through
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [18 - 26) control : 23:if_icmpge
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [26 - 32) control : 29:ifeq
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [32 - 50) control : 50:fall through
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [50 - 56) control : 53:goto
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [56 - 70) control : 69:areturn
  No Blocks
--------------------------------------------------------

********************************************************

>> Requesting block for 0/{ }
>> Created new block
  ====================================================  
  [0 - 18) Stored locals: { }

  State : locals 4, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [0 - 18)
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 4, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 4, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  

>> ANALYZING BLOCK : 
  ====================================================  
  #0  [0 - 18) Stored locals: { }

  State : locals 4, stack 0, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : bottom
    local  3 : bottom
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Computing exceptions for block #0  [0 - 18)
>> Interpreting bytecode 0:invokestatic
  State : locals 4, stack 1, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : bottom
    local  3 : bottom
    stack  0 : jdk/internal/misc/Unsafe
>> Interpreting bytecode 3:aconst_init
  State : locals 4, stack 2, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : bottom
    local  3 : bottom
    stack  0 : jdk/internal/misc/Unsafe
    stack  1 : unsafe_bug$Pair
>> Interpreting bytecode 6:checkcast
  State : locals 4, stack 2, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : bottom
    local  3 : bottom
    stack  0 : jdk/internal/misc/Unsafe
    stack  1 : unsafe_bug$Pair
>> Interpreting bytecode 9:invokevirtual
  State : locals 4, stack 1, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : bottom
    local  3 : bottom
    stack  0 : java/lang/Object
>> Interpreting bytecode 12:checkcast
  State : locals 4, stack 1, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : bottom
    local  3 : bottom
    stack  0 : unsafe_bug$Pair
>> Interpreting bytecode 15:astore_2
  State : locals 4, stack 0, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : bottom
>> Interpreting bytecode 16:iconst_0
  State : locals 4, stack 1, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : bottom
    stack  0 : int
>> Interpreting bytecode 17:istore_3
  State : locals 4, stack 0, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
>> Computing successors for block #0  [0 - 18)
>> Requesting block for 18/{ }
>> Created new block
  ====================================================  
  [18 - 26) Stored locals: { }

  State : locals 4, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [18 - 26)

>> ANALYZING BLOCK : 
  ====================================================  
  #1  [18 - 26) Stored locals: { }

  State : locals 4, stack 0, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
  No successor information
  Predecessors : 1
    #0  [0 - 18)
  No exception information
  ====================================================  
>> Computing exceptions for block #1  [18 - 26)
>> Interpreting bytecode 18:iload_3
  State : locals 4, stack 1, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
    stack  0 : int
>> Interpreting bytecode 19:getstatic
  State : locals 4, stack 2, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
    stack  0 : int
    stack  1 : [J
>> Interpreting bytecode 22:arraylength
  State : locals 4, stack 2, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
    stack  0 : int
    stack  1 : int
>> Computing successors for block #1  [18 - 26)
>> Requesting block for 26/{ }
>> Created new block
  ====================================================  
  [26 - 32) Stored locals: { }

  State : locals 4, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [26 - 32)
>> Requesting block for 56/{ }
>> Created new block
  ====================================================  
  [56 - 70) Stored locals: { }

  State : locals 4, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [56 - 70)
>> Interpreting bytecode 23:if_icmpge
  State : locals 4, stack 0, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int

>> ANALYZING BLOCK : 
  ====================================================  
  #2  [56 - 70) Stored locals: { }

  State : locals 4, stack 0, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
  No successor information
  Predecessors : 1
    #1  [18 - 26)
  No exception information
  ====================================================  
>> Computing exceptions for block #2  [56 - 70)
>> Interpreting bytecode 56:invokestatic
  State : locals 4, stack 1, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
    stack  0 : jdk/internal/misc/Unsafe
>> Interpreting bytecode 59:aload_2
  State : locals 4, stack 2, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
    stack  0 : jdk/internal/misc/Unsafe
    stack  1 : unsafe_bug$Pair
>> Interpreting bytecode 60:checkcast
  State : locals 4, stack 2, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
    stack  0 : jdk/internal/misc/Unsafe
    stack  1 : unsafe_bug$Pair
>> Interpreting bytecode 63:invokevirtual
  State : locals 4, stack 1, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
    stack  0 : java/lang/Object
>> Interpreting bytecode 66:checkcast
  State : locals 4, stack 1, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
    stack  0 : unsafe_bug$Pair
>> Computing successors for block #2  [56 - 70)
>> Interpreting bytecode 69:areturn
  State : locals 4, stack 0, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int

>> ANALYZING BLOCK : 
  ====================================================  
  #3  [26 - 32) Stored locals: { }

  State : locals 4, stack 0, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
  No successor information
  Predecessors : 1
    #1  [18 - 26)
  No exception information
  ====================================================  
>> Computing exceptions for block #3  [26 - 32)
>> Interpreting bytecode 26:aload_1
  State : locals 4, stack 1, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
    stack  0 : [Z
>> Interpreting bytecode 27:iload_3
  State : locals 4, stack 2, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
    stack  0 : [Z
    stack  1 : int
>> Interpreting bytecode 28:baload
  State : locals 4, stack 1, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
    stack  0 : int
>> Computing successors for block #3  [26 - 32)
>> Requesting block for 32/{ }
>> Created new block
  ====================================================  
  [32 - 50) Stored locals: { }

  State : locals 4, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [32 - 50)
>> Requesting block for 50/{ }
>> Created new block
  ====================================================  
  [50 - 56) Stored locals: { }

  State : locals 4, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [50 - 56)
>> Interpreting bytecode 29:ifeq
  State : locals 4, stack 0, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int

>> ANALYZING BLOCK : 
  ====================================================  
  #4  [50 - 56) Stored locals: { }

  State : locals 4, stack 0, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
  No successor information
  Predecessors : 1
    #3  [26 - 32)
  No exception information
  ====================================================  
>> Computing exceptions for block #4  [50 - 56)
>> Interpreting bytecode 50:iinc
  State : locals 4, stack 0, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
>> Computing successors for block #4  [50 - 56)
>> Requesting block for 18/{ }
>> Found block #1  [18 - 26)
>> Interpreting bytecode 53:goto
  State : locals 4, stack 0, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int

>> ANALYZING BLOCK : 
  ====================================================  
  #5  [32 - 50) Stored locals: { }

  State : locals 4, stack 0, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
  No successor information
  Predecessors : 1
    #3  [26 - 32)
  No exception information
  ====================================================  
>> Computing exceptions for block #5  [32 - 50)
>> Interpreting bytecode 32:invokestatic
  State : locals 4, stack 1, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
    stack  0 : jdk/internal/misc/Unsafe
>> Interpreting bytecode 35:aload_2
  State : locals 4, stack 2, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
    stack  0 : jdk/internal/misc/Unsafe
    stack  1 : unsafe_bug$Pair
>> Interpreting bytecode 36:checkcast
  State : locals 4, stack 2, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
    stack  0 : jdk/internal/misc/Unsafe
    stack  1 : unsafe_bug$Pair
>> Interpreting bytecode 39:getstatic
  State : locals 4, stack 3, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
    stack  0 : jdk/internal/misc/Unsafe
    stack  1 : unsafe_bug$Pair
    stack  2 : [J
>> Interpreting bytecode 42:iload_3
  State : locals 4, stack 4, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
    stack  0 : jdk/internal/misc/Unsafe
    stack  1 : unsafe_bug$Pair
    stack  2 : [J
    stack  3 : int
>> Interpreting bytecode 43:laload
  State : locals 4, stack 4, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
    stack  0 : jdk/internal/misc/Unsafe
    stack  1 : unsafe_bug$Pair
    stack  2 : long
    stack  3 : long2
>> Interpreting bytecode 44:aload_0
  State : locals 4, stack 5, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
    stack  0 : jdk/internal/misc/Unsafe
    stack  1 : unsafe_bug$Pair
    stack  2 : long
    stack  3 : long2
    stack  4 : [D
>> Interpreting bytecode 45:iload_3
  State : locals 4, stack 6, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
    stack  0 : jdk/internal/misc/Unsafe
    stack  1 : unsafe_bug$Pair
    stack  2 : long
    stack  3 : long2
    stack  4 : [D
    stack  5 : int
>> Interpreting bytecode 46:daload
  State : locals 4, stack 6, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
    stack  0 : jdk/internal/misc/Unsafe
    stack  1 : unsafe_bug$Pair
    stack  2 : long
    stack  3 : long2
    stack  4 : double
    stack  5 : double2
>> Interpreting bytecode 47:invokevirtual
  State : locals 4, stack 0, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
>> Computing successors for block #5  [32 - 50)
>> Requesting block for 50/{ }
>> Found block #4  [50 - 56)
>> Adding block #1  [18 - 26) lphd to the work list : 

>> Requesting clone of loop head #1  [18 - 26) lphd  for predecessor #4  [50 - 56)
>> Requesting block for 18/{ }
>> Created new block
  ====================================================  
  [18 - 26) Stored locals: { }

  State : locals 4, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [18 - 26)/backedge_copy

>> ANALYZING BLOCK : 
  ====================================================  
  #4  [50 - 56) Stored locals: { 3 }
 loops: 1<-4
  State : locals 4, stack 0, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
  Successors : 1
    #6  [18 - 26)/backedge_copy
  Predecessors : 2
    #3  [26 - 32)
    #5  [32 - 50)
  Exceptions : 0
  ====================================================  
>> Interpreting bytecode 50:iinc
  State : locals 4, stack 0, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
>> Interpreting bytecode 53:goto
  State : locals 4, stack 0, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int

>> ANALYZING BLOCK : 
  ====================================================  
  #6  [18 - 26)/backedge_copy Stored locals: { }

  State : locals 4, stack 0, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
  No successor information
  Predecessors : 1
    #4  [50 - 56)
  No exception information
  ====================================================  
>> Computing exceptions for block #6  [18 - 26)/backedge_copy
>> Interpreting bytecode 18:iload_3
  State : locals 4, stack 1, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
    stack  0 : int
>> Interpreting bytecode 19:getstatic
  State : locals 4, stack 2, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
    stack  0 : int
    stack  1 : [J
>> Interpreting bytecode 22:arraylength
  State : locals 4, stack 2, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
    stack  0 : int
    stack  1 : int
>> Computing successors for block #6  [18 - 26)/backedge_copy
>> Requesting block for 26/{ }
>> Found block #3  [26 - 32)
>> Requesting block for 56/{ }
>> Found block #2  [56 - 70)
>> Interpreting bytecode 23:if_icmpge
  State : locals 4, stack 0, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 4, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 4, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Adding block #3  [26 - 32) lphd to the work list : 


Loop tree
0<-0  defs: { 2 3 }
  3<-5  defs: { 3 }

>> ANALYZING BLOCK : 
  ====================================================  
  #3  [26 - 32) lphd Stored locals: { }
 loops: 3<-5
  State : locals 4, stack 0, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
  Successors : 2
    #6  [32 - 50)
    #4  [50 - 56)
  Predecessors : 2
    #1  [18 - 26)
    #5  [18 - 26)/backedge_copy
  Exceptions : 0
  ====================================================  
>> Interpreting bytecode 26:aload_1
  State : locals 4, stack 1, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
    stack  0 : [Z
>> Interpreting bytecode 27:iload_3
  State : locals 4, stack 2, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
    stack  0 : [Z
    stack  1 : int
>> Interpreting bytecode 28:baload
  State : locals 4, stack 1, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
    stack  0 : int
>> Interpreting bytecode 29:ifeq
  State : locals 4, stack 0, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int

>> ANALYZING BLOCK : 
  ====================================================  
  #1  [18 - 26) Stored locals: { }

  State : locals 4, stack 0, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
  Successors : 2
    #3  [26 - 32) lphd
    #2  [56 - 70)
  Predecessors : 1
    #0  [0 - 18)
  Exceptions : 0
  ====================================================  
>> Interpreting bytecode 18:iload_3
  State : locals 4, stack 1, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
    stack  0 : int
>> Interpreting bytecode 19:getstatic
  State : locals 4, stack 2, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
    stack  0 : int
    stack  1 : [J
>> Interpreting bytecode 22:arraylength
  State : locals 4, stack 2, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
    stack  0 : int
    stack  1 : int
>> Interpreting bytecode 23:if_icmpge
  State : locals 4, stack 0, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
********************************************************
TypeFlow for helper  70 bytes
  ====================================================  
  #0  rpo#0  [0 - 18) Stored locals: { 2 3 }

  State : locals 4, stack 0, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : bottom
    local  3 : bottom
  Successors : 1
    #1  rpo#1  [18 - 26)
  No predecessor information
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #1  rpo#1  [18 - 26) Stored locals: { }

  State : locals 4, stack 0, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
  Successors : 2
    #3  rpo#2  [26 - 32) lphd
    #2  rpo#6  [56 - 70)
  Predecessors : 1
    #0  rpo#0  [0 - 18)
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #3  rpo#2  [26 - 32) lphd Stored locals: { }
 loops: 3<-5
  State : locals 4, stack 0, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
  Successors : 2
    #6  rpo#3  [32 - 50)
    #4  rpo#4  [50 - 56)
  Predecessors : 2
    #1  rpo#1  [18 - 26)
    #5  rpo#5  [18 - 26)/backedge_copy
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #6  rpo#3  [32 - 50) Stored locals: { }
 loops: 3<-5
  State : locals 4, stack 0, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
  Successors : 1
    #4  rpo#4  [50 - 56)
  Predecessors : 1
    #3  rpo#2  [26 - 32) lphd
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #4  rpo#4  [50 - 56) Stored locals: { 3 }
 loops: 3<-5
  State : locals 4, stack 0, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
  Successors : 1
    #5  rpo#5  [18 - 26)/backedge_copy
  Predecessors : 2
    #3  rpo#2  [26 - 32) lphd
    #6  rpo#3  [32 - 50)
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #5  rpo#5  [18 - 26)/backedge_copy Stored locals: { }
 loops: 3<-5
  State : locals 4, stack 0, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
  Successors : 2
    #3  rpo#2  [26 - 32) lphd
    #2  rpo#6  [56 - 70)
  Predecessors : 1
    #4  rpo#4  [50 - 56)
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #2  rpo#6  [56 - 70) Stored locals: { }

  State : locals 4, stack 0, monitors 0
    local  0 : [D
    local  1 : [Z
    local  2 : unsafe_bug$Pair
    local  3 : int
  Successors : 0
  Predecessors : 2
    #1  rpo#1  [18 - 26)
    #5  rpo#5  [18 - 26)/backedge_copy
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

********************************************************


Performing flow analysis on method
<ciMethod name=getUnsafe holder=jdk/internal/misc/Unsafe signature=()Ljdk/internal/misc/Unsafe; loaded=true arg_size=0 flags=public,static ident=1415 address=0x00007fadac0d76a0>
   0 getstatic 7 <jdk/internal/misc/Unsafe.theUnsafe:Ljdk/internal/misc/Unsafe;> 
   3 areturn
Initial CI Blocks
********************************************************
TypeFlow for getUnsafe  4 bytes
--------------------------------------------------------
ciBlock [0 - 4) control : 3:areturn
  No Blocks
--------------------------------------------------------

********************************************************

>> Requesting block for 0/{ }
>> Created new block
  ====================================================  
  [0 - 4) Stored locals: { }

  State : locals 0, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [0 - 4)
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 0, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 0, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  

>> ANALYZING BLOCK : 
  ====================================================  
  #0  [0 - 4) Stored locals: { }

  State : locals 0, stack 0, monitors 0
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Computing exceptions for block #0  [0 - 4)
>> Interpreting bytecode 0:getstatic
  State : locals 0, stack 1, monitors 0
    stack  0 : jdk/internal/misc/Unsafe
>> Computing successors for block #0  [0 - 4)
>> Interpreting bytecode 3:areturn
  State : locals 0, stack 0, monitors 0

Loop tree
0<-0  defs: { }
********************************************************
TypeFlow for getUnsafe  4 bytes
  ====================================================  
  #0  rpo#0  [0 - 4) Stored locals: { }

  State : locals 0, stack 0, monitors 0
  Successors : 0
  No predecessor information
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

********************************************************


Performing flow analysis on method
<ciMethod name=ptypes holder=java/lang/invoke/MethodType signature=()[Ljava/lang/Class; loaded=true arg_size=1 flags=DEFAULT_ACCESS ident=1410 address=0x00007fadac0a4b30>
   0 nofast_aload_0
   1 nofast_getfield 13 <java/lang/invoke/MethodType.ptypes:[Ljava/lang/Class;> 
   4 areturn
Initial CI Blocks
********************************************************
TypeFlow for ptypes  5 bytes
--------------------------------------------------------
ciBlock [0 - 5) control : 4:areturn
  No Blocks
--------------------------------------------------------

********************************************************

>> Requesting block for 0/{ }

Performing flow analysis on method
>> Created new block
  ====================================================  
  [0 - 5)<ciMethod name= Stored locals: {getDeclaringClass holder= }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
java/lang/invoke/MemberName signature=()Ljava/lang/Class; loaded=true arg_size=1>> Found block [0 - 5)
 flags=public>> Created new block
  ====================================================  
   ident=1409 address=0x00007fadac081090>
   0 nofast_aload_0
   1 nofast_getfield 7 <java/lang/invoke/MemberName.clazz:Ljava/lang/Class;> 
   4 areturn
Initial CI Blocks
********************************************************
TypeFlow for [0 - -1) Stored locals: { }
getDeclaringClass
  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  5 bytes
--------------------------------------------------------
ciBlock [0 - 5) control : 4:areturn
  No Blocks
--------------------------------------------------------
  No exception information
  ====================================================  
>> Created new block
  ====================================================  
  
********************************************************

[0 - -1)>> Requesting block for 0/{ }
 Stored locals: { }
>> Created new block
  ====================================================  
  
  State : locals 1, stack -1, monitors -1
  No successor information
[0 - 5) Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No predecessor information
  No exception information
  ====================================================  

>> ANALYZING BLOCK : 
  No exception information
  ====================================================  
>> Found block [0 - 5)
  ====================================================  
  #0  [0 - 5) Stored locals: >> Created new block
  ====================================================  
  { }
[0 - -1) Stored locals: {
  State : locals 1, stack 0, monitors 0
    local  0 :  }

java/lang/invoke/MethodType
  No successor information
  No predecessor information
  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  No exception information
  ====================================================  
>> Computing exceptions for block #0  [0 - 5)
  ====================================================  
>> Created new block
  ====================================================  
  >> Interpreting bytecode 0:aload_0
  State : locals 1, stack 1, monitors 0
    local  0 : [0 - -1) Stored locals: {java/lang/invoke/MethodType
    stack  0 :  }

java/lang/invoke/MethodType
>> Interpreting bytecode 1:getfield
  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  

>> ANALYZING BLOCK : 
  ====================================================  
  #0  [0 - 5) Stored locals: {  State : locals 1, stack 1, monitors 0
    local  0 :  }

java/lang/invoke/MethodType
    stack  0 : [Ljava/lang/Class;
>> Computing successors for block #0  [0 - 5)
  State : locals 1, stack 0, monitors 0
    local  0 : >> Interpreting bytecode 4:areturn
  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/invoke/MethodType

Loop tree
0<-0  defs: {java/lang/invoke/MemberName
  No successor information
  No predecessor information
 }
  No exception information
  ====================================================  
>> Computing exceptions for block #0  [0 - 5)
********************************************************
>> Interpreting bytecode 0:aload_0
  State : locals 1, stack 1, monitors 0
    local  0 : TypeFlow for java/lang/invoke/MemberName
    stack  0 : java/lang/invoke/MemberName
>> Interpreting bytecode 1:getfield
ptypes  5 bytes
  ====================================================  
  #0  rpo#0  [0 - 5) Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 :   State : locals 1, stack 1, monitors 0
    local  0 : java/lang/invoke/MethodType
  Successors : 0
  No predecessor information
java/lang/invoke/MemberName
    stack  0 : java/lang/Class
>> Computing successors for block #0  [0 - 5)
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

********************************************************

>> Interpreting bytecode 4:areturn
  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/invoke/MemberName

Loop tree
0<-0  defs: { }
********************************************************
TypeFlow for getDeclaringClass  5 bytes
  ====================================================  
  #0  rpo#0  [0 - 5) Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/invoke/MemberName
  Successors : 0
  No predecessor information
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

********************************************************


Performing flow analysis on method
<ciMethod name=form holder=java/lang/invoke/MethodType signature=()Ljava/lang/invoke/MethodTypeForm; loaded=true arg_size=1 flags=DEFAULT_ACCESS ident=1410 address=0x00007fadac06b100>
   0 nofast_aload_0
   1 nofast_getfield 17 <java/lang/invoke/MethodType.form:Ljava/lang/invoke/MethodTypeForm;> 
   4 areturn
Initial CI Blocks
********************************************************
TypeFlow for form  5 bytes
--------------------------------------------------------
ciBlock [0 - 5) control : 4:areturn
  No Blocks
--------------------------------------------------------

********************************************************

>> Requesting block for 0/{ }
>> Created new block
  ====================================================  
  [0 - 5) Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [0 - 5)
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  

>> ANALYZING BLOCK : 
  ====================================================  
  #0  [0 - 5) Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/invoke/MethodType
  No successor information
  No predecessor information
  No exception information
  ====================================================  

Performing flow analysis on method
<ciMethod>> Computing exceptions for block #0   name=[0 - 5)
hashCode holder=jdk/internal/util/WeakReferenceKey signature=>> Interpreting bytecode 0:aload_0
  State : locals 1, stack 1, monitors 0
()I loaded=true    local  0 :  arg_size=1 flags=java/lang/invoke/MethodType
    stack  0 : public ident=1410 address=0x00007fadac0d4c40>
java/lang/invoke/MethodType
>> Interpreting bytecode 1:getfield
   0 nofast_aload_0
   1 nofast_getfield 13 <jdk/internal/util/WeakReferenceKey.hashcode:I> 
   4 ireturn
Initial CI Blocks
********************************************************
TypeFlow for   State : locals 1, stack 1, monitors 0
    local  0 : hashCodejava/lang/invoke/MethodType
    stack  0 :   5 bytes
--------------------------------------------------------
ciBlock [0 - 5) control : 4:ireturn
  No Blocks
java/lang/invoke/MethodTypeForm
>> Computing successors for block #0  [0 - 5)--------------------------------------------------------


>> Interpreting bytecode 4:areturn
  State : locals 1, stack 0, monitors 0
    local  0 : ********************************************************

>> Requesting block for 0/{ }java/lang/invoke/MethodType


Loop tree
0<-0  defs: >> Created new block
  ====================================================  
  { }
********************************************************
TypeFlow for [0 - 5) Stored locals: {form  5 bytes
  ====================================================  
   }

#0  rpo#0  [0 - 5) Stored locals: { }
  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [0 - 5)
  State : locals 1, stack 0, monitors 0
    local  0 : 
java/lang/invoke/MethodType>> Created new block
  ====================================================  
  
  Successors : 0
  No predecessor information
  Exceptions : 0
  ====================================================  
[0 - -1) Stored locals: {--------------------------------------------------------

 }

********************************************************

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  

>> ANALYZING BLOCK : 
  ====================================================  
  #0  [0 - 5) Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : jdk/internal/util/WeakReferenceKey
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Computing exceptions for block #0  [0 - 5)
>> Interpreting bytecode 0:aload_0
  State : locals 1, stack 1, monitors 0
    local  0 : jdk/internal/util/WeakReferenceKey
    stack  0 : jdk/internal/util/WeakReferenceKey
>> Interpreting bytecode 1:getfield
  State : locals 1, stack 1, monitors 0
    local  0 : jdk/internal/util/WeakReferenceKey
    stack  0 : int
>> Computing successors for block #0  [0 - 5)
>> Interpreting bytecode 4:ireturn
  State : locals 1, stack 0, monitors 0
    local  0 : jdk/internal/util/WeakReferenceKey

Loop tree
0<-0  defs: { }
********************************************************
TypeFlow for hashCode  5 bytes
  ====================================================  
  #0  rpo#0  [0 - 5) Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : jdk/internal/util/WeakReferenceKey
  Successors : 0
  No predecessor information
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

********************************************************

test: 
Performing flow analysis on method
<ciMethod name=getLanguage holder=sun/util/locale/BaseLocale signature=()Ljava/lang/String; loaded=true arg_size=1 flags=public ident=1410 address=0x00007fadac038530>
   0 nofast_aload_0
   1 nofast_getfield 19 <sun/util/locale/BaseLocale.language:Ljava/lang/String;> 
   4 areturn
Initial CI Blocks
********************************************************
TypeFlow for getLanguage  5 bytes
--------------------------------------------------------
ciBlock [0 - 5) control : 4:areturn
  No Blocks
--------------------------------------------------------

********************************************************

>> Requesting block for 0/{ }
>> Created new block
  ====================================================  
  [0 - 5) Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [0 - 5)
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  

>> ANALYZING BLOCK : 
  ====================================================  
  #0  [0 - 5) Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : sun/util/locale/BaseLocale
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Computing exceptions for block #0  [0 - 5)
>> Interpreting bytecode 0:aload_0
  State : locals 1, stack 1, monitors 0
    local  0 : sun/util/locale/BaseLocale
    stack  0 : sun/util/locale/BaseLocale
>> Interpreting bytecode 1:getfield
  State : locals 1, stack 1, monitors 0
    local  0 : sun/util/locale/BaseLocale
    stack  0 : java/lang/String
>> Computing successors for block #0  [0 - 5)
>> Interpreting bytecode 4:areturn
  State : locals 1, stack 0, monitors 0
    local  0 : sun/util/locale/BaseLocale

Loop tree
0<-0  defs: { }
********************************************************
TypeFlow for getLanguage  5 bytes
  ====================================================  
  #0  rpo#0  [0 - 5) Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : sun/util/locale/BaseLocale
  Successors : 0
  No predecessor information
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

********************************************************


Performing flow analysis on method
<ciMethod name=<init> holder=java/lang/Object signature=()V loaded=true arg_size=1 flags=public ident=1409 address=0x00007fadac0484a0>
   0 return_register_finalizer
Initial CI Blocks
********************************************************
TypeFlow for <init>  1 bytes
--------------------------------------------------------
ciBlock [0 - 1) control : 0:return
  No Blocks
--------------------------------------------------------

********************************************************

>> Requesting block for 0/{ }
>> Created new block
  ====================================================  
  [0 - 1) Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [0 - 1)
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  

>> ANALYZING BLOCK : 
  ====================================================  
  #0  [0 - 1) Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/Object
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Computing exceptions for block #0  [0 - 1)
>> Computing successors for block #0  [0 - 1)
>> Interpreting bytecode 0:return
  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/Object

Loop tree
0<-0  defs: { }
********************************************************
TypeFlow for <init>  1 bytes
  ====================================================  
  #0  rpo#0  [0 - 1) Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/Object
  Successors : 0
  No predecessor information
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

********************************************************


Performing flow analysis on method
<ciMethod name=isLatin1 holder=java/lang/String signature=()Z loaded=true arg_size=1 flags=DEFAULT_ACCESS ident=1409 address=0x00007fadac0e2aa0>
   0 getstatic 38 <java/lang/String.COMPACT_STRINGS:Z> 
   3 ifeq 17
  0    bci: 3    BranchData         taken(0) displacement(88)
                                    not taken(5216)
   6 nofast_aload_0
   7 nofast_getfield 15 <java/lang/String.coder:B> 
  10 ifne 17
  32   bci: 10   BranchData         taken(0) displacement(56)
                                    not taken(5232)
  13 iconst_1
  14 goto 18
  64   bci: 14   JumpData           taken(5234) displacement(24)
  17 iconst_0
  18 ireturn
Initial CI Blocks
********************************************************
TypeFlow for isLatin1  19 bytes
--------------------------------------------------------
ciBlock [0 - 6) control : 3:ifeq
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [6 - 13) control : 10:ifne
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [13 - 17) control : 14:goto
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [17 - 18) control : 18:fall through
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [18 - 19) control : 18:ireturn
  No Blocks
--------------------------------------------------------

********************************************************

>> Requesting block for 0/{ }
>> Created new block
  ====================================================  
  [0 - 6) Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [0 - 6)
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  

>> ANALYZING BLOCK : 
  ====================================================  
  #0  [0 - 6) Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/String
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Computing exceptions for block #0  [0 - 6)
>> Interpreting bytecode 0:getstatic
  State : locals 1, stack 1, monitors 0
    local  0 : java/lang/String
    stack  0 : int
>> Computing successors for block #0  [0 - 6)
>> Requesting block for 6/{ }
>> Created new block
  ====================================================  
  [6 - 13) Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [6 - 13)
>> Requesting block for 17/{ }
>> Created new block
  ====================================================  
  [17 - 18) Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [17 - 18)
>> Interpreting bytecode 3:ifeq
  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/String

>> ANALYZING BLOCK : 
  ====================================================  
  #1  [17 - 18) Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/String
  No successor information
  Predecessors : 1
    #0  [0 - 6)
  No exception information
  ====================================================  
>> Computing exceptions for block #1  [17 - 18)
>> Interpreting bytecode 17:iconst_0
  State : locals 1, stack 1, monitors 0
    local  0 : java/lang/String
    stack  0 : int
>> Computing successors for block #1  [17 - 18)
>> Requesting block for 18/{ }
>> Created new block
  ====================================================  
  [18 - 19) Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [18 - 19)

>> ANALYZING BLOCK : 
  ====================================================  
  #2  [18 - 19) Stored locals: { }

  State : locals 1, stack 1, monitors 0
    local  0 : java/lang/String
    stack  0 : int
  No successor information
  Predecessors : 1
    #1  [17 - 18)
  No exception information
  ====================================================  
>> Computing exceptions for block #2  [18 - 19)
>> Computing successors for block #2  [18 - 19)
>> Interpreting bytecode 18:ireturn
  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/String

>> ANALYZING BLOCK : 
  ====================================================  
  #3  [6 - 13) Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/String
  No successor information
  Predecessors : 1
    #0  [0 - 6)
  No exception information
  ====================================================  
>> Computing exceptions for block #3  [6 - 13)
>> Interpreting bytecode 6:aload_0
  State : locals 1, stack 1, monitors 0
    local  0 : java/lang/String
    stack  0 : java/lang/String
>> Interpreting bytecode 7:getfield
  State : locals 1, stack 1, monitors 0
    local  0 : java/lang/String
    stack  0 : int
>> Computing successors for block #3  [6 - 13)
>> Requesting block for 13/{ }
>> Created new block
  ====================================================  
  [13 - 17) Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [13 - 17)
>> Requesting block for 17/{ }
>> Found block #1  [17 - 18)
>> Interpreting bytecode 10:ifne
  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/String

>> ANALYZING BLOCK : 
  ====================================================  
  #4  [13 - 17) Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/String
  No successor information
  Predecessors : 1
    #3  [6 - 13)
  No exception information
  ====================================================  
>> Computing exceptions for block #4  [13 - 17)
>> Interpreting bytecode 13:iconst_1
  State : locals 1, stack 1, monitors 0
    local  0 : java/lang/String
    stack  0 : int
>> Computing successors for block #4  [13 - 17)
>> Requesting block for 18/{ }
>> Found block #2  [18 - 19)
>> Interpreting bytecode 14:goto
  State : locals 1, stack 1, monitors 0
    local  0 : java/lang/String
    stack  0 : int

Loop tree
0<-0  defs: { }
********************************************************
TypeFlow for isLatin1  19 bytes
  ====================================================  
  #0  rpo#0  [0 - 6) Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/String
  Successors : 2
    #3  rpo#1  [6 - 13)
    #1  rpo#3  [17 - 18)
  No predecessor information
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #3  rpo#1  [6 - 13) Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/String
  Successors : 2
    #4  rpo#2  [13 - 17)
    #1  rpo#3  [17 - 18)
  Predecessors : 1
    #0  rpo#0  [0 - 6)
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #4  rpo#2  [13 - 17) Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/String
  Successors : 1
    #2  rpo#4  [18 - 19)
  Predecessors : 1
    #3  rpo#1  [6 - 13)
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #1  rpo#3  [17 - 18) Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/String
  Successors : 1
    #2  rpo#4  [18 - 19)
  Predecessors : 2
    #0  rpo#0  [0 - 6)
    #3  rpo#1  [6 - 13)
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #2  rpo#4  [18 - 19) Stored locals: { }

  State : locals 1, stack 1, monitors 0
    local  0 : java/lang/String
    stack  0 : int
  Successors : 0
  Predecessors : 2
    #1  rpo#3  [17 - 18)
    #4  rpo#2  [13 - 17)
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

********************************************************


Performing flow analysis on method
<ciMethod name=checkIndex holder=jdk/internal/util/Preconditions signature=(IILjava/util/function/BiFunction;)I loaded=true arg_size=3 flags=public,static ident=1411 address=0x00007fadac0c4c00>
   0 iload_0
   1 iflt 9
  0    bci: 1    BranchData         taken(0) displacement(64)
                                    not taken(5222)
   4 iload_0
   5 iload_1
   6 if_icmplt 16
  32   bci: 6    BranchData         taken(5229) displacement(48)
                                    not taken(0)
   9 aload_2
  10 iload_0
  11 iload_1
  12 invokestatic 95 <jdk/internal/util/Preconditions.outOfBoundsCheckIndex(Ljava/util/function/BiFunction;II)Ljava/lang/RuntimeException;> 
  64   bci: 12   CounterData        count(0)
  15 athrow
  16 iload_0
  17 ireturn
Initial CI Blocks
********************************************************
TypeFlow for checkIndex  18 bytes
--------------------------------------------------------
ciBlock [0 - 4) control : 1:iflt
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [4 - 9) control : 6:if_icmplt
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [9 - 16) control : 15:athrow
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [16 - 18) control : 17:ireturn
  No Blocks
--------------------------------------------------------

********************************************************

>> Requesting block for 0/{ }
>> Created new block
  ====================================================  
  [0 - 4) Stored locals: { }

  State : locals 3, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [0 - 4)
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 3, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 3, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  

>> ANALYZING BLOCK : 
  ====================================================  
  #0  [0 - 4) Stored locals: { }

  State : locals 3, stack 0, monitors 0
    local  0 : int
    local  1 : int
    local  2 : java/util/function/BiFunction
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Computing exceptions for block #0  [0 - 4)
>> Interpreting bytecode 0:iload_0
  State : locals 3, stack 1, monitors 0
    local  0 : int

Performing flow analysis on method
<ciMethod    local  1 : int name=
    local  2 : checkIndexjava/util/function/BiFunction
    stack  0 : int
 holder=java/lang/String signature=>> Computing successors for block #0  [0 - 4)
(II)V loaded=true>> Requesting block for 4/{  arg_size=2 flags=DEFAULT_ACCESS,static ident=1409 address=0x00007fadac06b100>
   0 iload_0
   1 iload_1
   2 getstatic 1048 <jdk/internal/util/Preconditions.SIOOBE_FORMATTER:Ljava/util/function/BiFunction;> 
   5 invokestatic 1054 <jdk/internal/util/Preconditions.checkIndex(IILjava/util/function/BiFunction;)I> 
  0    bci: 5    CounterData        count(5179)
   8 pop
   9 return
Initial CI Blocks
}
********************************************************
TypeFlow for >> Created new block
  ====================================================  
  checkIndex  10 bytes
--------------------------------------------------------
ciBlock [0 - 10) control : 9:return
  No Blocks
--------------------------------------------------------

[4 - 9) Stored locals: {********************************************************

 }

>> Requesting block for 0/{ }  State : locals 3, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information

  ====================================================  
>> Found block [4 - 9)
>> Created new block
  ====================================================  
  [0 - 10)>> Requesting block for 9/{ }
 Stored locals: { }
>> Created new block
  ====================================================  
  [9 - 16) Stored locals: 
  State : locals 2, stack -1, monitors -1
  No successor information
  No predecessor information
{ }
  No exception information
  ====================================================  
>> Found block [0 - 10)

>> Created new block
  ====================================================  
  [0 - -1) Stored locals: {  State : locals 3, stack -1, monitors -1
  No successor information
  No predecessor information
 }
  No exception information
  ====================================================  
>> Found block [9 - 16)

  State : locals 2, stack -1, monitors -1
  No successor information
  No predecessor information
>> Interpreting bytecode 1:iflt
  State : locals 3, stack 0, monitors 0
    local  0 : int  No exception information
  ====================================================  
>> Created new block
  ====================================================  
  
    local  1 : int[0 - -1) Stored locals: {
    local  2 :  }

java/util/function/BiFunction
  State : locals 2, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information

>> ANALYZING BLOCK : 
  ====================================================  
  ====================================================  

>> ANALYZING BLOCK : 
  ====================================================  
  #1  [9 - 16) Stored locals:   #0  [0 - 10) Stored locals: { }
{ }


  State : locals 3, stack 0, monitors 0
    local  0 :   State : locals 2, stack 0, monitors 0
    local  0 : intint

    local  1 : int
  No successor information
  No predecessor information
  No exception information
    local  1 : int
  ====================================================  
>> Computing exceptions for block #0  [0 - 10)    local  2 : 
java/util/function/BiFunction
  No successor information
  Predecessors : 1
    >> Interpreting bytecode 0:iload_0
  State : locals 2, stack 1, monitors 0
    local  0 : int#0  [0 - 4)
  No exception information

    local  1 : int  ====================================================  
>> Computing exceptions for block #1  [9 - 16)

    stack  0 : int>> Interpreting bytecode 9:aload_2
  State : locals 3, stack 1, monitors 0
    local  0 : int

>> Interpreting bytecode 1:iload_1
  State : locals 2, stack 2, monitors 0
    local  0 : int    local  1 : int

    local  1 : int    local  2 : 
    stack  0 : int
    stack  1 : intjava/util/function/BiFunction
    stack  0 : 
>> Interpreting bytecode 2:getstatic
java/util/function/BiFunction
>> Interpreting bytecode 10:iload_0
  State : locals 3, stack 2, monitors 0
    local  0 : int
    local  1 : int  State : locals 2, stack 3, monitors 0
    local  0 : int
    local  1 : int
    local  2 : 
    stack  0 : java/util/function/BiFunction
    stack  0 : int
    stack  1 : java/util/function/BiFunction
    stack  1 : int
int
    stack  2 : >> Interpreting bytecode 11:iload_1
java/util/function/BiFunction
>> Interpreting bytecode 5:invokestatic
  State : locals 3, stack 3, monitors 0
    local  0 : int
    local  1 : int
    local  2 : java/util/function/BiFunction
    stack  0 :   State : locals 2, stack 1, monitors 0
    local  0 : int
java/util/function/BiFunction
    stack  1 :     local  1 : int
int
    stack  2 :     stack  0 : int
int
>> Interpreting bytecode 12:invokestatic
>> Interpreting bytecode 8:pop
  State : locals 2, stack 0, monitors 0
    local  0 : int
    local  1 : int
>> Computing successors for block #0  [0 - 10)
>> Interpreting bytecode 9:return
  State : locals 2, stack 0, monitors 0
    local  0 :   State : locals 3, stack 1, monitors 0
    local  0 : int
int
    local  1 : int
    local  2 :     local  1 : java/util/function/BiFunction
    stack  0 : int
java/lang/RuntimeException
>> Computing successors for block #1  [9 - 16)
>> Interpreting bytecode 15:athrow
  State : locals 3, stack 0, monitors 0
    local  0 : int
Loop tree
0<-0  defs: {
    local  1 :  }
********************************************************
TypeFlow for int
    local  2 : checkIndexjava/util/function/BiFunction

>> ANALYZING BLOCK : 
  10 bytes
  ====================================================  
    ====================================================  
  #0  rpo#0  #2  [4 - 9) Stored locals: [0 - 10) Stored locals: { }{ }



  State : locals 2, stack 0, monitors 0
    local  0 : int  State : locals 3, stack 0, monitors 0
    local  0 : int

    local  1 : int
  Successors : 0
  No predecessor information
  Exceptions : 0
    local  1 : int
    local  2 :   ====================================================  
--------------------------------------------------------

java/util/function/BiFunction
  No successor information
  Predecessors : 1
    ********************************************************

#0  [0 - 4)
  No exception information
  ====================================================  
>> Computing exceptions for block #2  [4 - 9)
>> Interpreting bytecode 4:iload_0
  State : locals 3, stack 1, monitors 0
    local  0 : int
    local  1 : int
    local  2 : java/util/function/BiFunction
    stack  0 : int
>> Interpreting bytecode 5:iload_1
  State : locals 3, stack 2, monitors 0
    local  0 : int
    local  1 : int
    local  2 : java/util/function/BiFunction
    stack  0 : int
    stack  1 : int
>> Computing successors for block #2  [4 - 9)
>> Requesting block for 9/{ }
>> Found block #1  [9 - 16)
>> Requesting block for 16/{ }
>> Created new block
  ====================================================  
  [16 - 18) Stored locals: { }

  State : locals 3, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [16 - 18)
>> Interpreting bytecode 6:if_icmplt
  State : locals 3, stack 0, monitors 0
    local  0 : int
    local  1 : int
    local  2 : java/util/function/BiFunction

>> ANALYZING BLOCK : 
  ====================================================  
  #3  [16 - 18) Stored locals: { }

  State : locals 3, stack 0, monitors 0
    local  0 : int
    local  1 : int
    local  2 : java/util/function/BiFunction
  No successor information
  Predecessors : 1
    #2  [4 - 9)
  No exception information
  ====================================================  
>> Computing exceptions for block #3  [16 - 18)
>> Interpreting bytecode 16:iload_0
  State : locals 3, stack 1, monitors 0
    local  0 : int
    local  1 : int
    local  2 : java/util/function/BiFunction
    stack  0 : int
>> Computing successors for block #3  [16 - 18)
>> Interpreting bytecode 17:ireturn
  State : locals 3, stack 0, monitors 0
    local  0 : int
    local  1 : int
    local  2 : java/util/function/BiFunction

Loop tree
0<-0  defs: { }
********************************************************
TypeFlow for checkIndex  18 bytes
  ====================================================  
  #0  rpo#0  [0 - 4) Stored locals: { }

  State : locals 3, stack 0, monitors 0
    local  0 : int
    local  1 : int
    local  2 : java/util/function/BiFunction
  Successors : 2
    #2  rpo#1  [4 - 9)
    #1  rpo#3  [9 - 16)
  No predecessor information
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #2  rpo#1  [4 - 9) Stored locals: { }

  State : locals 3, stack 0, monitors 0
    local  0 : int
    local  1 : int
    local  2 : java/util/function/BiFunction
  Successors : 2
    #1  rpo#3  [9 - 16)
    #3  rpo#2  [16 - 18)
  Predecessors : 1
    #0  rpo#0  [0 - 4)
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #3  rpo#2  [16 - 18) Stored locals: { }

  State : locals 3, stack 0, monitors 0
    local  0 : int
    local  1 : int
    local  2 : java/util/function/BiFunction
  Successors : 0
  Predecessors : 1
    #2  rpo#1  [4 - 9)
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #1  rpo#3  [9 - 16) Stored locals: { }

  State : locals 3, stack 0, monitors 0
    local  0 : int
    local  1 : int
    local  2 : java/util/function/BiFunction
  Successors : 0
  Predecessors : 2
    #0  rpo#0  [0 - 4)
    #2  rpo#1  [4 - 9)
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

********************************************************


Performing flow analysis on method
<ciMethod name=charAt holder=java/lang/String signature=(I)C loaded=true arg_size=2 flags=public ident=1409 address=0x00007fadac0a4b30>
   0 nofast_aload_0
   1 invokevirtual 487 <java/lang/String.isLatin1()Z> 
  0    bci: 1    VirtualCallData    count(6289) nonprofiled_count(0) entries(0)
   4 ifeq 16
  56   bci: 4    BranchData         taken(0) displacement(48)
                                    not taken(6293)
   7 nofast_aload_0
   8 nofast_getfield 9 <java/lang/String.value:[B> 
  11 iload_1
  12 invokestatic 490 <java/lang/StringLatin1.charAt([BI)C> 
  88   bci: 12   CounterData        count(6300)
  15 ireturn
  16 nofast_aload_0
  17 nofast_getfield 9 <java/lang/String.value:[B> 
  20 iload_1
  21 invokestatic 493 <java/lang/StringUTF16.charAt([BI)C> 
  104  bci: 21   CounterData        count(0)
  24 ireturn
Initial CI Blocks
********************************************************
TypeFlow for charAt  25 bytes
--------------------------------------------------------
ciBlock [0 - 7) control : 4:ifeq
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [7 - 16) control : 15:ireturn
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [16 - 25) control : 24:ireturn
  No Blocks
--------------------------------------------------------

********************************************************

>> Requesting block for 0/{ }
>> Created new block
  ====================================================  
  [0 - 7) Stored locals: { }

  State : locals 2, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [0 - 7)
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 2, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 2, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  

>> ANALYZING BLOCK : 
  ====================================================  
  #0  [0 - 7) Stored locals: { }

  State : locals 2, stack 0, monitors 0
    local  0 : java/lang/String
    local  1 : int
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Computing exceptions for block #0  [0 - 7)
>> Interpreting bytecode 0:aload_0
  State : locals 2, stack 1, monitors 0
    local  0 : java/lang/String
    local  1 : int
    stack  0 : java/lang/String
>> Interpreting bytecode 1:invokevirtual
  State : locals 2, stack 1, monitors 0
    local  0 : java/lang/String
    local  1 : int
    stack  0 : int
>> Computing successors for block #0  [0 - 7)
>> Requesting block for 7/{ }
>> Created new block
  ====================================================  
  [7 - 16) Stored locals: { }

  State : locals 2, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [7 - 16)
>> Requesting block for 16/{ }
>> Created new block
  ====================================================  
  [16 - 25) Stored locals: { }

  State : locals 2, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [16 - 25)
>> Interpreting bytecode 4:ifeq
  State : locals 2, stack 0, monitors 0
    local  0 : java/lang/String
    local  1 : int

>> ANALYZING BLOCK : 
  ====================================================  
  #1  [16 - 25) Stored locals: { }

  State : locals 2, stack 0, monitors 0
    local  0 : java/lang/String
    local  1 : int
  No successor information
  Predecessors : 1
    #0  [0 - 7)
  No exception information
  ====================================================  
>> Computing exceptions for block #1  [16 - 25)
>> Interpreting bytecode 16:aload_0
  State : locals 2, stack 1, monitors 0
    local  0 : 
Performing flow analysis on method
<ciMethod name=java/lang/String
    local  1 : intcharAt holder=
    stack  0 : java/lang/StringLatin1 signature=([BI)C loaded=true arg_size=2 flags=publicjava/lang/String
>> Interpreting bytecode 17:getfield
,static ident=1410 address=0x00007fadac09cbb0>
   0 iload_1
   1 nofast_aload_0
   2 arraylength
   3 invokestatic 9 <java/lang/String.checkIndex(II)V> 
  0    bci: 3    CounterData        count(6523)
   6 nofast_aload_0
   7 iload_1
   8 baload
   9 sipush 255
  12 iand
  13 i2c
  14 ireturn
Initial CI Blocks
********************************************************
TypeFlow for   State : locals 2, stack 1, monitors 0
    local  0 : charAt  15 bytes
--------------------------------------------------------
java/lang/String
    local  1 : int
    stack  0 : ciBlock [0 - 15) control : 14:ireturn
  No Blocks
[B
>> Interpreting bytecode 20:iload_1
  State : locals 2, stack 2, monitors 0
    local  0 : --------------------------------------------------------

********************************************************

java/lang/String
    local  1 : int
    stack  0 : >> Requesting block for 0/{ }[B
    stack  1 : int

>> Interpreting bytecode 21:invokestatic
>> Created new block
  ====================================================  
  [0 - 15) Stored locals: { }

  State : locals 2, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
  State : locals 2, stack 1, monitors 0
    local  0 : >> Found block [0 - 15)
java/lang/String
    local  1 : int
    stack  0 : int>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }
>> Computing successors for block #1  [16 - 25)


  State : locals 2, stack -1, monitors -1
  No successor information
>> Interpreting bytecode 24:ireturn
  State : locals 2, stack 0, monitors 0
    local  0 :   No predecessor information
  No exception information
  ====================================================  
>> Created new block
  ====================================================  
  java/lang/String
    local  1 : int[0 - -1) Stored locals: {

>> ANALYZING BLOCK : 
 }

  ====================================================  
  #2    State : locals 2, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
[7 - 16) Stored locals: { }
  ====================================================  

>> ANALYZING BLOCK : 
  ====================================================  
  
  State : locals 2, stack 0, monitors 0
    local  0 : #0  [0 - 15)java/lang/String
    local  1 : int Stored locals: { }


  No successor information
  Predecessors : 1
      State : locals 2, stack 0, monitors 0
    local  0 : #0  [0 - 7)
  No exception information
  ====================================================  
[B>> Computing exceptions for block #2  [7 - 16)

    local  1 : int
>> Interpreting bytecode 7:aload_0
  State : locals 2, stack 1, monitors 0
    local  0 :   No successor information
  No predecessor information
  No exception information
java/lang/String
    local  1 : int
    stack  0 :   ====================================================  
>> Computing exceptions for block #0  [0 - 15)java/lang/String
>> Interpreting bytecode 8:getfield

>> Interpreting bytecode 0:iload_1
  State : locals 2, stack 1, monitors 0
    local  0 :   State : locals 2, stack 1, monitors 0
    local  0 : [B
    local  1 : intjava/lang/String
    local  1 : int
    stack  0 : 
    stack  0 : int
[B
>> Interpreting bytecode 11:iload_1
  State : locals 2, stack 2, monitors 0
    local  0 : >> Interpreting bytecode 1:aload_0
  State : locals 2, stack 2, monitors 0
    local  0 : java/lang/String
    local  1 : int
    stack  0 : [B
    local  1 : int[B
    stack  1 : int
    stack  0 : int

>> Interpreting bytecode 12:invokestatic
    stack  1 : [B
>> Interpreting bytecode 2:arraylength
  State : locals 2, stack 2, monitors 0
    local  0 : [B
    local  1 : int
  State : locals 2, stack 1, monitors 0
    local  0 :     stack  0 : int
    stack  1 : int
java/lang/String
    local  1 : int>> Interpreting bytecode 3:invokestatic

    stack  0 : int
>> Computing successors for block #2  [7 - 16)
>> Interpreting bytecode 15:ireturn
  State : locals 2, stack 0, monitors 0
    local  0 :   State : locals 2, stack 0, monitors 0
    local  0 : java/lang/String
    local  1 : int
[B
    local  1 : int

Loop tree
0<-0  defs: >> Interpreting bytecode 6:aload_0
  State : locals 2, stack 1, monitors 0
    local  0 : [B
    local  1 : int{ }

    stack  0 : ********************************************************
TypeFlow for charAt  25 bytes
  ====================================================  
  #0  [B
>> Interpreting bytecode 7:iload_1
  State : locals 2, stack 2, monitors 0
    local  0 : [B
    local  1 : intrpo#0  [0 - 7) Stored locals: 
    stack  0 : [B
    stack  1 : int
{ }>> Interpreting bytecode 8:baload
  State : locals 2, stack 1, monitors 0
    local  0 : [B
    local  1 : int

  State : locals 2, stack 0, monitors 0

    stack  0 : int
>> Interpreting bytecode 9:sipush
  State : locals 2, stack 2, monitors 0
    local  0 :     local  0 : [B
    local  1 : int
java/lang/String
    local  1 : int
  Successors : 2
    #2      stack  0 : int
rpo#1  [7 - 16)    stack  1 : int

    #1  rpo#2  >> Interpreting bytecode 12:iand
  State : locals 2, stack 1, monitors 0
    local  0 : [16 - 25)
  No predecessor information
[B
    local  1 : int  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #2  
    stack  0 : intrpo#1  [7 - 16) Stored locals: {
>> Interpreting bytecode 13:i2c
  State : locals 2, stack 1, monitors 0
    local  0 : [B
    local  1 : int }

    stack  0 : int
  State : locals 2, stack 0, monitors 0
    local  0 : 
>> Computing successors for block #0  [0 - 15)
>> Interpreting bytecode 14:ireturn
  State : locals 2, stack 0, monitors 0
    local  0 : java/lang/String
    local  1 : int
[B
    local  1 : int  Successors : 0
  Predecessors : 1
    
#0  rpo#0  [0 - 7)

Loop tree
0<-0  defs: {  Exceptions : 0
  ====================================================  
--------------------------------------------------------
 }

  ====================================================  
  #1  ********************************************************
TypeFlow for rpo#2  [16 - 25) Stored locals: {charAt }

  15 bytes
  ====================================================  
    State : locals 2, stack 0, monitors 0
    local  0 : #0  rpo#0  [0 - 15) Stored locals: {java/lang/String
    local  1 :  }

int
  Successors : 0
  State : locals 2, stack 0, monitors 0
    local  0 :   Predecessors : 1
    #0  [B
    local  1 : intrpo#0  [0 - 7)

  Successors : 0
  No predecessor information
  Exceptions : 0
  Exceptions : 0
  ====================================================  
--------------------------------------------------------
  ====================================================  
--------------------------------------------------------

********************************************************

********************************************************



Performing flow analysis on method
<ciMethod name=isLatin1 holder=java/lang/String signature=()Z loaded=true arg_size=1 flags=DEFAULT_ACCESS ident=1411 address=0x00007fadac0a6278>
   0 getstatic 38 <java/lang/String.COMPACT_STRINGS:Z> 
   3 ifeq 17
  0    bci: 3    BranchData         taken(0) displacement(88)
                                    not taken(6190)
   6 nofast_aload_0
   7 nofast_getfield 15 <java/lang/String.coder:B> 
  10 ifne 17
  32   bci: 10   BranchData         taken(0) displacement(56)
                                    not taken(6190)
  13 iconst_1
  14 goto 18
  64   bci: 14   JumpData           taken(6190) displacement(24)
  17 iconst_0
  18 ireturn
Initial CI Blocks
********************************************************
TypeFlow for isLatin1  19 bytes

Performing flow analysis on method
<ciMethod name=--------------------------------------------------------
ciBlock [0 - 6) control : checkIndex3:ifeq
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [6 - 13) control :  holder=10:ifne
  No Blocks
--------------------------------------------------------
java/lang/String signature=(II)V loaded=true arg_size=2 flags=DEFAULT_ACCESS
--------------------------------------------------------
ciBlock [13 - 17) control : ,static14:goto
  No Blocks
--------------------------------------------------------
 ident=1412 address=0x00007fadac09e1a0>
   0 iload_0
   1 iload_1
   2 getstatic 1048 <jdk/internal/util/Preconditions.SIOOBE_FORMATTER:Ljava/util/function/BiFunction;> 
   5 invokestatic 1054 <jdk/internal/util/Preconditions.checkIndex(IILjava/util/function/BiFunction;)I> 
  0    bci: 5    CounterData        count(6270)
   8 pop
   9 return
Initial CI Blocks
********************************************************

--------------------------------------------------------
ciBlock [17 - 18) control : TypeFlow for 18:fall through
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [18 - 19) control : 18:ireturn
checkIndex  10 bytes
--------------------------------------------------------
ciBlock [0 - 10) control : 9:return
  No Blocks
--------------------------------------------------------
  No Blocks
--------------------------------------------------------


********************************************************

********************************************************

>> Requesting block for 0/{ >> Requesting block for 0/{ }}

>> Created new block
  ====================================================  
  >> Created new block
  ====================================================  
  [0 - 10) Stored locals: [0 - 6) Stored locals: {{ }

  State : locals 2, stack -1, monitors -1
  No successor information
  No predecessor information
 }
  No exception information
  ====================================================  
>> Found block [0 - 10)

>> Created new block
  ====================================================  
    State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
[0 - -1) Stored locals: {  ====================================================  
>> Found block [0 - 6)
 }

>> Created new block
  ====================================================  
    State : locals 2, stack -1, monitors -1
  No successor information
  No predecessor information
[0 - -1) Stored locals: { }  No exception information
  ====================================================  
>> Created new block
  ====================================================  


  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  [0 - -1) Stored locals:   ====================================================  
>> Created new block
  ====================================================  
  { }
[0 - -1) Stored locals: {
  State : locals 2, stack -1, monitors -1
  No successor information
 }

  No predecessor information
  No exception information
  ====================================================  

>> ANALYZING BLOCK : 
  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  ====================================================  
    No exception information
  ====================================================  

>> ANALYZING BLOCK : 
#0  [0 - 10) Stored locals:   ====================================================  
  { }
#0  [0 - 6) Stored locals: 
  State : locals 2, stack 0, monitors 0
    local  0 : int
{ }
    local  1 : int

  State : locals 1, stack 0, monitors 0
    local  0 :   No successor information
  No predecessor information
  No exception information
java/lang/String
  No successor information
  No predecessor information
  ====================================================  
>> Computing exceptions for block #0  [0 - 10)  No exception information
  ====================================================  
>> Computing exceptions for block #0  
[0 - 6)
>> Interpreting bytecode 0:iload_0
  State : locals 2, stack 1, monitors 0
    local  0 : int>> Interpreting bytecode 0:getstatic

    local  1 : int
    stack  0 : int
>> Interpreting bytecode 1:iload_1
  State : locals 2, stack 2, monitors 0
    local  0 : int
  State : locals 1, stack 1, monitors 0
    local  0 :     local  1 : int
java/lang/String
    stack  0 : int    stack  0 : int

>> Computing successors for block #0  [0 - 6)    stack  1 : int

>> Interpreting bytecode 2:getstatic
>> Requesting block for 6/{ }
>> Created new block
  ====================================================  
  [6 - 13) Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  State : locals 2, stack 3, monitors 0
    local  0 : int  No exception information
  ====================================================  
>> Found block [6 - 13)
    local  1 : int

>> Requesting block for 17/{ }    stack  0 : int
    stack  1 : 
int
    stack  2 : >> Created new block
  ====================================================  
  [17 - 18)java/util/function/BiFunction Stored locals: { }
>> Interpreting bytecode 5:invokestatic


  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [17 - 18)
>> Interpreting bytecode 3:ifeq
  State : locals 1, stack 0, monitors 0
    local  0 :   State : locals 2, stack 1, monitors 0
    local  0 : int
java/lang/String

>> ANALYZING BLOCK : 
  ====================================================  
      local  1 : int
    stack  0 : int#1  [17 - 18) Stored locals: 
>> Interpreting bytecode 8:pop
  State : locals 2, stack 0, monitors 0
    local  0 : int{ }

    local  1 : 
  State : locals 1, stack 0, monitors 0
    local  0 : int
>> Computing successors for block #0  [0 - 10)
>> Interpreting bytecode 9:return
  State : locals 2, stack 0, monitors 0
    local  0 : intjava/lang/String
  No successor information
  Predecessors : 1

    local  1 : int

Loop tree
0<-0  defs: { }
    #0  [0 - 6)********************************************************
TypeFlow for 
checkIndex  No exception information
  ====================================================  
>> Computing exceptions for block #1  [17 - 18)
  10 bytes
  ====================================================  
  #0  rpo#0  [0 - 10) Stored locals: { }>> Interpreting bytecode 17:iconst_0
  State : locals 1, stack 1, monitors 0
    local  0 : 

java/lang/String
    stack  0 : int
>> Computing successors for block #1  [17 - 18)  State : locals 2, stack 0, monitors 0
    local  0 : int
>> Requesting block for 18/{ 
    local  1 : int}

  Successors : 0
  No predecessor information
  Exceptions : 0
>> Created new block
  ====================================================  
    ====================================================  
--------------------------------------------------------

[18 - 19) Stored locals: {********************************************************

 }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [18 - 19)

>> ANALYZING BLOCK : 
  ====================================================  
  #2  [18 - 19) Stored locals: { }

  State : locals 1, stack 1, monitors 0
    local  0 : java/lang/String
    stack  0 : int
  No successor information
  Predecessors : 1
    #1  [17 - 18)
  No exception information
  ====================================================  
>> Computing exceptions for block #2  [18 - 19)
>> Computing successors for block #2  [18 - 19)
>> Interpreting bytecode 18:ireturn
  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/String

>> ANALYZING BLOCK : 
  ====================================================  
  #3  [6 - 13) Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/String
  No successor information
  Predecessors : 1
    #0  [0 - 6)
  No exception information
  ====================================================  
>> Computing exceptions for block #3  [6 - 13)
>> Interpreting bytecode 6:aload_0
  State : locals 1, stack 1, monitors 0
    local  0 : java/lang/String
    stack  0 : java/lang/String
>> Interpreting bytecode 7:getfield
  State : locals 1, stack 1, monitors 0
    local  0 : java/lang/String
    stack  0 : int
>> Computing successors for block #3  [6 - 13)
>> Requesting block for 13/{ }
>> Created new block
  ====================================================  
  [13 - 17) Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [13 - 17)
>> Requesting block for 17/{ }
>> Found block #1  [17 - 18)
>> Interpreting bytecode 10:ifne
  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/String

>> ANALYZING BLOCK : 
  ====================================================  
  #4  [13 - 17) Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/String
  No successor information
  Predecessors : 1
    #3  [6 - 13)
  No exception information
  ====================================================  
>> Computing exceptions for block #4  [13 - 17)
>> Interpreting bytecode 13:iconst_1
  State : locals 1, stack 1, monitors 0
    local  0 : java/lang/String
    stack  0 : int
>> Computing successors for block #4  [13 - 17)
>> Requesting block for 18/{ }
>> Found block #2  [18 - 19)
>> Interpreting bytecode 14:goto
  State : locals 1, stack 1, monitors 0
    local  0 : java/lang/String
    stack  0 : int

Loop tree
0<-0  defs: { }
********************************************************
TypeFlow for isLatin1  19 bytes
  ====================================================  
  #0  rpo#0  [0 - 6) Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/String
  Successors : 2
    #3  rpo#1  [6 - 13)
    #1  rpo#3  [17 - 18)
  No predecessor information
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #3  rpo#1  [6 - 13) Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/String
  Successors : 2
    #4  rpo#2  [13 - 17)
    #1  rpo#3  [17 - 18)
  Predecessors : 1
    #0  rpo#0  [0 - 6)
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #4  rpo#2  [13 - 17) Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/String
  Successors : 1
    #2  rpo#4  [18 - 19)
  Predecessors : 1
    #3  rpo#1  [6 - 13)
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #1  rpo#3  [17 - 18) Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/String
  Successors : 1
    #2  rpo#4  [18 - 19)
  Predecessors : 2
    #0  rpo#0  [0 - 6)
    #3  rpo#1  [6 - 13)
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #2  rpo#4  [18 - 19) Stored locals: { }

  State : locals 1, stack 1, monitors 0
    local  0 : java/lang/String
    stack  0 : int
  Successors : 0
  Predecessors : 2
    #1  rpo#3  [17 - 18)
    #4  rpo#2  [13 - 17)
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

********************************************************


Performing flow analysis on method
<ciMethod name=charAt holder=java/lang/StringLatin1 signature=([BI)C loaded=true arg_size=2 flags=public,static ident=1415 address=0x00007fadac0a6bc0>
   0 iload_1
   1 nofast_aload_0
   2 arraylength
   3 invokestatic 9 <java/lang/String.checkIndex(II)V> 
  0    bci: 3    CounterData        count(8141)
   6 nofast_aload_0
   7 iload_1
   8 baload
   9 sipush 255
  12 iand
  13 i2c
  14 ireturn
Initial CI Blocks
********************************************************
TypeFlow for charAt  15 bytes
--------------------------------------------------------
ciBlock [0 - 15) control : 14:ireturn
  No Blocks
--------------------------------------------------------

********************************************************

>> Requesting block for 0/{ }
>> Created new block
  ====================================================  
  [0 - 15) Stored locals: { }

  State : locals 2, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [0 - 15)
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 2, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 2, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  

>> ANALYZING BLOCK : 
  ====================================================  
  #0  [0 - 15) Stored locals: { }

  State : locals 2, stack 0, monitors 0
    local  0 : [B
    local  1 : int
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Computing exceptions for block #0  [0 - 15)
>> Interpreting bytecode 0:iload_1
  State : locals 2, stack 1, monitors 0
    local  0 : [B
    local  1 : int
    stack  0 : int
>> Interpreting bytecode 1:aload_0
  State : locals 2, stack 2, monitors 0
    local  0 : [B
    local  1 : int
    stack  0 : int
    stack  1 : [B
>> Interpreting bytecode 2:arraylength
  State : locals 2, stack 2, monitors 0
    local  0 : [B
    local  1 : int
    stack  0 : int
    stack  1 : int
>> Interpreting bytecode 3:invokestatic
  State : locals 2, stack 0, monitors 0
    local  0 : [B
    local  1 : int
>> Interpreting bytecode 6:aload_0
  State : locals 2, stack 1, monitors 0
    local  0 : [B
    local  1 : int
    stack  0 : [B
>> Interpreting bytecode 7:iload_1
  State : locals 2, stack 2, monitors 0
    local  0 : [B
    local  1 : int
    stack  0 : [B
    stack  1 : int
>> Interpreting bytecode 8:baload
  State : locals 2, stack 1, monitors 0
    local  0 : [B
    local  1 : int
    stack  0 : int
>> Interpreting bytecode 9:sipush
  State : locals 2, stack 2, monitors 0
    local  0 : [B
    local  1 : int
    stack  0 : int
    stack  1 : int
>> Interpreting bytecode 12:iand
  State : locals 2, stack 1, monitors 0
    local  0 : [B
    local  1 : int
    stack  0 : int
>> Interpreting bytecode 13:i2c
  State : locals 2, stack 1, monitors 0
    local  0 : [B
    local  1 : int
    stack  0 : int
>> Computing successors for block #0  [0 - 15)
>> Interpreting bytecode 14:ireturn
  State : locals 2, stack 0, monitors 0
    local  0 : [B
    local  1 : int

Loop tree
0<-0  defs: { }
********************************************************
TypeFlow for charAt  15 bytes
  ====================================================  
  #0  rpo#0  [0 - 15) Stored locals: { }

  State : locals 2, stack 0, monitors 0
    local  0 : [B
    local  1 : int
  Successors : 0
  No predecessor information
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

********************************************************


Performing flow analysis on method
<ciMethod name=checkIndex holder=java/lang/String signature=(II)V loaded=true arg_size=2 flags=DEFAULT_ACCESS,static ident=1418 address=0x00007fadac0a9bd0>
   0 iload_0
   1 iload_1
   2 getstatic 1048 <jdk/internal/util/Preconditions.SIOOBE_FORMATTER:Ljava/util/function/BiFunction;> 
   5 invokestatic 1054 <jdk/internal/util/Preconditions.checkIndex(IILjava/util/function/BiFunction;)I> 
  0    bci: 5    CounterData        count(6270)
   8 pop
   9 return
Initial CI Blocks
********************************************************
TypeFlow for checkIndex  10 bytes
--------------------------------------------------------
ciBlock [0 - 10) control : 9:return
  No Blocks
--------------------------------------------------------

********************************************************

>> Requesting block for 0/{ }
>> Created new block
  ====================================================  
  [0 - 10) Stored locals: { }

  State : locals 2, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [0 - 10)
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 2, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 2, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  

>> ANALYZING BLOCK : 
  ====================================================  
  #0  [0 - 10) Stored locals: { }

  State : locals 2, stack 0, monitors 0
    local  0 : int
    local  1 : int
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Computing exceptions for block #0  [0 - 10)
>> Interpreting bytecode 0:iload_0
  State : locals 2, stack 1, monitors 0
    local  0 : int
    local  1 : int
    stack  0 : int
>> Interpreting bytecode 1:iload_1
  State : locals 2, stack 2, monitors 0
    local  0 : int
    local  1 : int
    stack  0 : int
    stack  1 : int
>> Interpreting bytecode 2:getstatic
  State : locals 2, stack 3, monitors 0
    local  0 : int
    local  1 : int
    stack  0 : int
    stack  1 : int
    stack  2 : java/util/function/BiFunction
>> Interpreting bytecode 5:invokestatic
  State : locals 2, stack 1, monitors 0
    local  0 : int
    local  1 : int
    stack  0 : int
>> Interpreting bytecode 8:pop
  State : locals 2, stack 0, monitors 0
    local  0 : int
    local  1 : int
>> Computing successors for block #0  [0 - 10)
>> Interpreting bytecode 9:return
  State : locals 2, stack 0, monitors 0
    local  0 : int
    local  1 : int

Loop tree
0<-0  defs: { }
********************************************************
TypeFlow for checkIndex  10 bytes
  ====================================================  
  #0  rpo#0  [0 - 10) Stored locals: { }

  State : locals 2, stack 0, monitors 0
    local  0 : int
    local  1 : int
  Successors : 0
  No predecessor information
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

********************************************************


Performing flow analysis on method
<ciMethod name=search holder=java/util/regex/Matcher signature=(I)Z loaded=true arg_size=2 flags=DEFAULT_ACCESS ident=1410 address=0x00007fadac022960>
   0 nofast_aload_0
   1 iconst_0
   2 nofast_putfield 360 <java/util/regex/Matcher.hitEnd:Z> 
   5 nofast_aload_0
   6 iconst_0
   7 nofast_putfield 363 <java/util/regex/Matcher.requireEnd:Z> 
  10 iload_1
  11 ifge 18
  0    bci: 11   BranchData         taken(790) displacement(56)
                                    not taken(0)
  14 iconst_0
  15 goto 19
  32   bci: 15   JumpData           taken(0) displacement(24)
  18 iload_1
  19 istore_1
  20 nofast_aload_0
  21 iload_1
  22 nofast_putfield 13 <java/util/regex/Matcher.first:I> 
  25 nofast_aload_0
  26 nofast_aload_0
  27 nofast_getfield 19 <java/util/regex/Matcher.oldLast:I> 
  30 ifge 37
  56   bci: 30   BranchData         taken(792) displacement(56)
                                    not taken(0)
  33 iload_1
  34 goto 41
  88   bci: 34   JumpData           taken(0) displacement(24)
  37 nofast_aload_0
  38 nofast_getfield 19 <java/util/regex/Matcher.oldLast:I> 
  41 nofast_putfield 19 <java/util/regex/Matcher.oldLast:I> 
  44 iconst_0
  45 istore_2
  46 iload_2
  47 nofast_aload_0
  48 nofast_getfield 51 <java/util/regex/Matcher.groups:[I> 
  51 arraylength
  52 if_icmpge 68
  112  bci: 52   BranchData         taken(796) displacement(56)
                                    not taken(15904)
  55 nofast_aload_0
  56 nofast_getfield 51 <java/util/regex/Matcher.groups:[I> 
  59 iload_2
  60 iconst_m1
  61 iastore
  62 iinc #2 1
  65 goto 46
  144  bci: 65   JumpData           taken(15944) displacement(-32)
  68 iconst_0
  69 istore_2
  70 iload_2
  71 nofast_aload_0
  72 nofast_getfield 66 <java/util/regex/Matcher.localsPos:[Ljava/util/regex/IntHashSet;> 
  75 arraylength
  76 if_icmpge 103
  168  bci: 76   BranchData         taken(800) displacement(192)
                                    not taken(0)
  79 nofast_aload_0
  80 nofast_getfield 66 <java/util/regex/Matcher.localsPos:[Ljava/util/regex/IntHashSet;> 
  83 iload_2
  84 aaload
  200  bci: 84   ArrayLoadStore     
                array               none
                element             none
  85 ifnull 97
  224  bci: 85   BranchData         taken(0) displacement(112)
                                    not taken(0)
  88 nofast_aload_0
  89 nofast_getfield 66 <java/util/regex/Matcher.localsPos:[Ljava/util/regex/IntHashSet;> 
  92 iload_2
  93 aaload
  256  bci: 93   ArrayLoadStore     
                array               none
                element             none
  94 invokevirtual 131 <java/util/regex/IntHashSet.clear()V> 
  280  bci: 94   VirtualCallData    count(0) nonprofiled_count(0) entries(0)
  97 iinc #2 1
 100 goto 70
  336  bci: 100  JumpData           taken(0) displacement(-168)
 103 nofast_aload_0
 104 iconst_0
 105 nofast_putfield 9 <java/util/regex/Matcher.acceptMode:I> 
 108 nofast_aload_0
 109 nofast_getfield 32 <java/util/regex/Matcher.parentPattern:Ljava/util/regex/Pattern;> 
 112 nofast_getfield 366 <java/util/regex/Pattern.root:Ljava/util/regex/Pattern$Node;> 
 115 nofast_aload_0
 116 iload_1
 117 nofast_aload_0
 118 nofast_getfield 36 <java/util/regex/Matcher.text:Ljava/lang/CharSequence;> 
 121 invokevirtual 370 <java/util/regex/Pattern$Node.match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z> 
  360  bci: 121  VirtualCallData    count(0) nonprofiled_count(0) entries(1)
                                    'java/util/regex/Pattern$Start'(812 1.00)
 124 istore_2
 125 iload_2
 126 ifne 134
  416  bci: 126  BranchData         taken(813) displacement(32)
                                    not taken(0)
 129 nofast_aload_0
 130 iconst_m1
 131 nofast_putfield 13 <java/util/regex/Matcher.first:I> 
 134 nofast_aload_0
 135 nofast_aload_0
 136 nofast_getfield 16 <java/util/regex/Matcher.last:I> 
 139 nofast_putfield 19 <java/util/regex/Matcher.oldLast:I> 
 142 nofast_aload_0
 143 dup
 144 nofast_getfield 128 <java/util/regex/Matcher.modCount:I> 
 147 iconst_1
 148 iadd
 149 nofast_putfield 128 <java/util/regex/Matcher.modCount:I> 
 152 iload_2
 153 ireturn
Initial CI Blocks
********************************************************
TypeFlow for search  154 bytes
--------------------------------------------------------
ciBlock [0 - 14) control : 11:ifge
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [14 - 18) control : 15:goto
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [18 - 19) control : 19:fall through
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [19 - 33) control : 30:ifge
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [33 - 37) control : 34:goto
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [37 - 41) control : 41:fall through
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [41 - 46) control : 46:fall through
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [46 - 55) control : 52:if_icmpge
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [55 - 68) control : 65:goto
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [68 - 70) control : 70:fall through
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [70 - 79) control : 76:if_icmpge
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [79 - 88) control : 85:ifnull
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [88 - 97) control : 97:fall through
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [97 - 103) control : 100:goto
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [103 - 129) control : 126:ifne
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [129 - 134) control : 134:fall through
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [134 - 154) control : 153:ireturn
  No Blocks
--------------------------------------------------------

********************************************************

>> Requesting block for 0/{ }
>> Created new block
  ====================================================  
  [0 - 14) Stored locals: { }

  State : locals 3, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [0 - 14)
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 3, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 3, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  

>> ANALYZING BLOCK : 
  ====================================================  
  #0  [0 - 14) Stored locals: { }

  State : locals 3, stack 0, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int
    local  2 : bottom
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Computing exceptions for block #0  [0 - 14)
>> Interpreting bytecode 0:aload_0
  State : locals 3, stack 1, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int
    local  2 : bottom
    stack  0 : java/util/regex/Matcher
>> Interpreting bytecode 1:iconst_0
  State : locals 3, stack 2, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int
    local  2 : bottom
    stack  0 : java/util/regex/Matcher
    stack  1 : int
>> Interpreting bytecode 2:putfield
  State : locals 3, stack 0, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int
    local  2 : bottom
>> Interpreting bytecode 5:aload_0
  State : locals 3, stack 1, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int
    local  2 : bottom
    stack  0 : java/util/regex/Matcher
>> Interpreting bytecode 6:iconst_0
  State : locals 3, stack 2, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int
    local  2 : bottom
    stack  0 : java/util/regex/Matcher
    stack  1 : int
>> Interpreting bytecode 7:putfield
  State : locals 3, stack 0, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int
    local  2 : bottom
>> Interpreting bytecode 10:iload_1
  State : locals 3, stack 1, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int
    local  2 : bottom
    stack  0 : int
>> Computing successors for block #0  [0 - 14)
>> Requesting block for 14/{ }
>> Created new block
  ====================================================  
  [14 - 18) Stored locals: { }

  State : locals 3, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [14 - 18)
>> Requesting block for 18/{ }
>> Created new block
  ====================================================  
  [18 - 19) Stored locals: { }

  State : locals 3, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [18 - 19)
>> Interpreting bytecode 11:ifge
  State : locals 3, stack 0, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int
    local  2 : bottom

>> ANALYZING BLOCK : 
  ====================================================  
  #1  [18 - 19) Stored locals: { }

  State : locals 3, stack 0, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int
    local  2 : bottom
  No successor information
  Predecessors : 1
    #0  [0 - 14)
  No exception information
  ====================================================  
>> Computing exceptions for block #1  [18 - 19)
>> Interpreting bytecode 18:iload_1
  State : locals 3, stack 1, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int
    local  2 : bottom
    stack  0 : int
>> Computing successors for block #1  [18 - 19)
>> Requesting block for 19/{ }
>> Created new block
  ====================================================  
  [19 - 33) Stored locals: { }

  State : locals 3, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [19 - 33)

>> ANALYZING BLOCK : 
  ====================================================  
  #2  [19 - 33) Stored locals: { }

  State : locals 3, stack 1, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int
    local  2 : bottom
    stack  0 : int
  No successor information
  Predecessors : 1
    #1  [18 - 19)
  No exception information
  ====================================================  
>> Computing exceptions for block #2  [19 - 33)
>> Interpreting bytecode 19:istore_1
  State : locals 3, stack 0, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int
    local  2 : bottom
>> Interpreting bytecode 20:aload_0
  State : locals 3, stack 1, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int
    local  2 : bottom
    stack  0 : java/util/regex/Matcher
>> Interpreting bytecode 21:iload_1
  State : locals 3, stack 2, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int
    local  2 : bottom
    stack  0 : java/util/regex/Matcher
    stack  1 : int
>> Interpreting bytecode 22:putfield
  State : locals 3, stack 0, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int
    local  2 : bottom
>> Interpreting bytecode 25:aload_0
  State : locals 3, stack 1, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int
    local  2 : bottom
    stack  0 : java/util/regex/Matcher
>> Interpreting bytecode 26:aload_0
  State : locals 3, stack 2, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int
    local  2 : bottom
    stack  0 : java/util/regex/Matcher
    stack  1 : java/util/regex/Matcher
>> Interpreting bytecode 27:getfield
  State : locals 3, stack 2, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int
    local  2 : bottom
    stack  0 : java/util/regex/Matcher
    stack  1 : int
>> Computing successors for block #2  [19 - 33)
>> Requesting block for 33/{ }
>> Created new block
  ====================================================  
  [33 - 37) Stored locals: { }

  State : locals 3, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [33 - 37)
>> Requesting block for 37/{ }
>> Created new block
  ====================================================  
  [37 - 41) Stored locals: { }

  State : locals 3, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [37 - 41)
>> Interpreting bytecode 30:ifge
  State : locals 3, stack 1, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int
    local  2 : bottom
    stack  0 : java/util/regex/Matcher

>> ANALYZING BLOCK : 
  ====================================================  
  #3  [37 - 41) Stored locals: { }

  State : locals 3, stack 1, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int
    local  2 : bottom
    stack  0 : java/util/regex/Matcher
  No successor information
  Predecessors : 1
    #2  [19 - 33)
  No exception information
  ====================================================  
>> Computing exceptions for block #3  [37 - 41)
>> Interpreting bytecode 37:aload_0
  State : locals 3, stack 2, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int
    local  2 : bottom
    stack  0 : java/util/regex/Matcher
    stack  1 : java/util/regex/Matcher
>> Interpreting bytecode 38:getfield
  State : locals 3, stack 2, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int
    local  2 : bottom
    stack  0 : java/util/regex/Matcher
    stack  1 : int
>> Computing successors for block #3  [37 - 41)
>> Requesting block for 41/{ }
>> Created new block
  ====================================================  
  [41 - 46) Stored locals: { }

  State : locals 3, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [41 - 46)

>> ANALYZING BLOCK : 
  ====================================================  
  #4  [41 - 46) Stored locals: { }

  State : locals 3, stack 2, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int
    local  2 : bottom
    stack  0 : java/util/regex/Matcher
    stack  1 : int
  No successor information
  Predecessors : 1
    #3  [37 - 41)
  No exception information
  ====================================================  
>> Computing exceptions for block #4  [41 - 46)
>> Interpreting bytecode 41:putfield
  State : locals 3, stack 0, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int
    local  2 : bottom
>> Interpreting bytecode 44:iconst_0
  State : locals 3, stack 1, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int
    local  2 : bottom
    stack  0 : int
>> Interpreting bytecode 45:istore_2
  State : locals 3, stack 0, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int
    local  2 : int
>> Computing successors for block #4  [41 - 46)
>> Requesting block for 46/{ }
>> Created new block
  ====================================================  
  [46 - 55) Stored locals: { }

  State : locals 3, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [46 - 55)

>> ANALYZING BLOCK : 
  ====================================================  
  #5  [46 - 55) Stored locals: { }

  State : locals 3, stack 0, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int
    local  2 : int
  No successor information
  Predecessors : 1
    #4  [41 - 46)
  No exception information
  ====================================================  
>> Computing exceptions for block #5  [46 - 55)
>> Interpreting bytecode 46:iload_2
  State : locals 3, stack 1, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int
    local  2 : int
    stack  0 : int
>> Interpreting bytecode 47:aload_0
  State : locals 3, stack 2, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int
    local  2 : int
    stack  0 : int
    stack  1 : java/util/regex/Matcher
>> Interpreting bytecode 48:getfield
  State : locals 3, stack 2, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int
    local  2 : int
    stack  0 : int
    stack  1 : [I
>> Interpreting bytecode 51:arraylength
  State : locals 3, stack 2, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int
    local  2 : int
    stack  0 : int
    stack  1 : int
>> Computing successors for block #5  [46 - 55)
>> Requesting block for 55/{ }
>> Created new block
  ====================================================  
  [55 - 68) Stored locals: { }

  State : locals 3, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [55 - 68)
>> Requesting block for 68/{ }
>> Created new block
  ====================================================  
  [68 - 70) Stored locals: { }

  State : locals 3, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [68 - 70)
>> Interpreting bytecode 52:if_icmpge
  State : locals 3, stack 0, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int
    local  2 : int

>> ANALYZING BLOCK : 
  ====================================================  
  #6  [68 - 70) Stored locals: { }

  State : locals 3, stack 0, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int
    local  2 : int
  No successor information
  Predecessors : 1
    #5  [46 - 55)
  No exception information
  ====================================================  
>> Computing exceptions for block #6  [68 - 70)
>> Interpreting bytecode 68:iconst_0
  State : locals 3, stack 1, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int
    local  2 : int
    stack  0 : int
>> Interpreting bytecode 69:istore_2
  State : locals 3, stack 0, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int
    local  2 : int
>> Computing successors for block #6  [68 - 70)
>> Requesting block for 70/{ }
>> Created new block
  ====================================================  
  [70 - 79) Stored locals: { }

  State : locals 3, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [70 - 79)

>> ANALYZING BLOCK : 
  ====================================================  
  #7  [70 - 79) Stored locals: { }

  State : locals 3, stack 0, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int
    local  2 : int
  No successor information
  Predecessors : 1
    #6  [68 - 70)
  No exception information
  ====================================================  
>> Computing exceptions for block #7  [70 - 79)
>> Interpreting bytecode 70:iload_2
  State : locals 3, stack 1, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int
    local  2 : int
    stack  0 : int
>> Interpreting bytecode 71:aload_0
  State : locals 3, stack 2, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int
    local  2 : int
    stack  0 : int
    stack  1 : java/util/regex/Matcher
>> Interpreting bytecode 72:getfield
  State : locals 3, stack 2, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int
    local  2 : int
    stack  0 : int
    stack  1 : [Ljava/util/regex/IntHashSet;
>> Interpreting bytecode 75:arraylength
  State : locals 3, stack 2, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int
    local  2 : int
    stack  0 : int
    stack  1 : int
>> Computing successors for block #7  [70 - 79)
>> Requesting block for 79/{ }
>> Created new block
  ====================================================  
  [79 - 88) Stored locals: { }

  State : locals 3, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [79 - 88)
>> Requesting block for 103/{ }
>> Created new block
  ====================================================  
  [103 - 129) Stored locals: { }

  State : locals 3, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [103 - 129)
>> Interpreting bytecode 76:if_icmpge
  State : locals 3, stack 0, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int
    local  2 : int

>> ANALYZING BLOCK : 
  ====================================================  
  #8  [103 - 129) Stored locals: { }

  State : locals 3, stack 0, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int
    local  2 : int
  No successor information
  Predecessors : 1
    #7  [70 - 79)
  No exception information
  ====================================================  
>> Computing exceptions for block #8  [103 - 129)
>> Interpreting bytecode 103:aload_0
  State : locals 3, stack 1, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int
    local  2 : int
    stack  0 : java/util/regex/Matcher
>> Interpreting bytecode 104:iconst_0
  State : locals 3, stack 2, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int
    local  2 : int
    stack  0 : java/util/regex/Matcher
    stack  1 : int
>> Interpreting bytecode 105:putfield
  State : locals 3, stack 0, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int
    local  2 : int
>> Interpreting bytecode 108:aload_0
  State : locals 3, stack 1, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int
    local  2 : int
    stack  0 : java/util/regex/Matcher
>> Interpreting bytecode 109:getfield
  State : locals 3, stack 1, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int
    local  2 : int
    stack  0 : java/util/regex/Pattern
>> Interpreting bytecode 112:getfield
  State : locals 3, stack 1, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int
    local  2 : int
    stack  0 : java/util/regex/Pattern$Node
>> Interpreting bytecode 115:aload_0
  State : locals 3, stack 2, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int
    local  2 : int
    stack  0 : java/util/regex/Pattern$Node
    stack  1 : java/util/regex/Matcher
>> Interpreting bytecode 116:iload_1
  State : locals 3, stack 3, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int
    local  2 : int
    stack  0 : java/util/regex/Pattern$Node
    stack  1 : java/util/regex/Matcher
    stack  2 : int
>> Interpreting bytecode 117:aload_0
  State : locals 3, stack 4, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int
    local  2 : int
    stack  0 : java/util/regex/Pattern$Node
    stack  1 : java/util/regex/Matcher
    stack  2 : int
    stack  3 : java/util/regex/Matcher
>> Interpreting bytecode 118:getfield
  State : locals 3, stack 4, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int
    local  2 : int
    stack  0 : java/util/regex/Pattern$Node
    stack  1 : java/util/regex/Matcher
    stack  2 : int
    stack  3 : java/lang/CharSequence
>> Interpreting bytecode 121:invokevirtual
  State : locals 3, stack 1, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int
    local  2 : int
    stack  0 : int
>> Interpreting bytecode 124:istore_2
  State : locals 3, stack 0, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int
    local  2 : int
>> Interpreting bytecode 125:iload_2
  State : locals 3, stack 1, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int
    local  2 : int
    stack  0 : int
>> Computing successors for block #8  [103 - 129)
>> Requesting block for 129/{ }
>> Created new block
  ====================================================  
  [129 - 134) Stored locals: { }

  State : locals 3, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [129 - 134)
>> Requesting block for 134/{ }
>> Created new block
  ====================================================  
  [134 - 154) Stored locals: { }

  State : locals 3, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [134 - 154)
>> Interpreting bytecode 126:ifne
  State : locals 3, stack 0, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int
    local  2 : int

>> ANALYZING BLOCK : 
  ====================================================  
  #9  [134 - 154) Stored locals: { }

  State : locals 3, stack 0, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int
    local  2 : int
  No successor information
  Predecessors : 1
    #8  [103 - 129)
  No exception information
  ====================================================  
>> Computing exceptions for block #9  [134 - 154)
>> Interpreting bytecode 134:aload_0
  State : locals 3, stack 1, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int
    local  2 : int
    stack  0 : java/util/regex/Matcher
>> Interpreting bytecode 135:aload_0
  State : locals 3, stack 2, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int
    local  2 : int
    stack  0 : java/util/regex/Matcher
    stack  1 : java/util/regex/Matcher
>> Interpreting bytecode 136:getfield
  State : locals 3, stack 2, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int
    local  2 : int
    stack  0 : java/util/regex/Matcher
    stack  1 : int
>> Interpreting bytecode 139:putfield
  State : locals 3, stack 0, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int
    local  2 : int
>> Interpreting bytecode 142:aload_0
  State : locals 3, stack 1, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int
    local  2 : int
    stack  0 : java/util/regex/Matcher
>> Interpreting bytecode 143:dup
  State : locals 3, stack 2, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int
    local  2 : int
    stack  0 : java/util/regex/Matcher
    stack  1 : java/util/regex/Matcher
>> Interpreting bytecode 144:getfield
  State : locals 3, stack 2, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int
    local  2 : int
    stack  0 : java/util/regex/Matcher
    stack  1 : int
>> Interpreting bytecode 147:iconst_1
  State : locals 3, stack 3, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int
    local  2 : int
    stack  0 : java/util/regex/Matcher
    stack  1 : int
    stack  2 : int
>> Interpreting bytecode 148:iadd

Performing flow analysis on method
<ciMethod name=  State : locals 3, stack 2, monitors 0
    local  0 : match holder=java/util/regex/Matcher
    local  1 : java/util/regex/Pattern$BmpCharPropertyGreedy signature=int
(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z loaded=true arg_size=4 flags=DEFAULT_ACCESS ident=1411 address=0x00007fadac048550>
    local  2 : int   0 iconst_0
   1 istore #4
   3 aload_1
   4 nofast_getfield 7 <java/util/regex/Matcher.to:I> 
   7 istore #5
   9 iload_2
  10 nofast_iload #5
  12 if_icmpge 43
  0    bci: 12   BranchData         taken(0) displacement(200)
                                    not taken(6604)
  15 nofast_aload_0
  16 nofast_getfield 13 <java/util/regex/Pattern$BmpCharPropertyGreedy.predicate:Ljava/util/regex/Pattern$CharPredicate;> 
  19 aload_3
  20 iload_2
  21 invokeinterface 19 <java/lang/CharSequence.charAt(I)C> 
  32   bci: 21   VirtualCallData    count(0) nonprofiled_count(0) entries(1)
                                    'java/lang/String'(6604 1.00)
  26 invokeinterface 25 <java/util/regex/Pattern$CharPredicate.is(I)Z> 
  88   bci: 26   VirtualCallData    count(0) nonprofiled_count(0) entries(1)
                                    'java/util/regex/Pattern$$Lambda+0x80000002a'(6604 1.00)
  31 ifeq 43
  144  bci: 31   BranchData         taken(5785) displacement(56)
                                    not taken(819)
  34 iinc #2 1
  37 iinc #4 1
  40 goto 9
  176  bci: 40   JumpData           taken(819) displacement(-176)
  43 iload_2
  44 nofast_iload #5
  46 if_icmplt 54
  200  bci: 46   BranchData         taken(5785) displacement(32)
                                    not taken(0)
  49 aload_1
  50 iconst_1
  51 nofast_putfield 31 <java/util/regex/Matcher.hitEnd:Z> 
  54 nofast_iload #4
  56 nofast_aload_0
  57 nofast_getfield 35 <java/util/regex/Pattern$BmpCharPropertyGreedy.cmin:I> 
  60 if_icmplt 87
  232  bci: 60   BranchData         taken(4966) displacement(144)
                                    not taken(819)
  63 nofast_aload_0
  64 nofast_getfield 38 <java/util/regex/Pattern$BmpCharPropertyGreedy.next:Ljava/util/regex/Pattern$Node;> 
  67 aload_1
  68 iload_2
  69 aload_3
  70 invokevirtual 42 <java/util/regex/Pattern$Node.match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z> 
  264  bci: 70   VirtualCallData    count(0) nonprofiled_count(0) entries(1)
                                    'java/util/regex/Pattern$LastNode'(819 1.00)
  73 ifeq 78
  320  bci: 73   BranchData         taken(0) displacement(32)
                                    not taken(819)
  76 iconst_1
  77 ireturn
  78 iinc #2 -1
  81 iinc #4 -1
  84 goto 54
  352  bci: 84   JumpData           taken(0) displacement(-120)
  87 iconst_0
  88 ireturn
Initial CI Blocks
********************************************************
TypeFlow for match  89 bytes
--------------------------------------------------------

    stack  0 : ciBlock [0 - 9) control : 9:fall through
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [9 - 15) control : java/util/regex/Matcher
    stack  1 : int12:if_icmpge
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [15 - 34) control : 31:ifeq

>> Interpreting bytecode 149:putfield
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [34 - 43) control : 40:goto
  No Blocks
--------------------------------------------------------

  State : locals 3, stack 0, monitors 0
    local  0 : --------------------------------------------------------
ciBlock [43 - 49) control : 46:if_icmplt
  No Blocks
--------------------------------------------------------
java/util/regex/Matcher
    local  1 : int
--------------------------------------------------------
ciBlock [49 - 54) control : 
    local  2 : int54:fall through
  No Blocks
--------------------------------------------------------

>> Interpreting bytecode 152:iload_2
  State : locals 3, stack 1, monitors 0
    local  0 : 
--------------------------------------------------------
ciBlock [54 - 63) control : 60:if_icmplt
  No Blocks
java/util/regex/Matcher
    local  1 : int--------------------------------------------------------

--------------------------------------------------------
ciBlock [63 - 76) control : 73:ifeq
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [76 - 78) control : 77:ireturn
  No Blocks

    local  2 : --------------------------------------------------------

int
    stack  0 : --------------------------------------------------------
ciBlock [78 - 87) control : 84:goto
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [87 - 89) control : int
>> Computing successors for block 88:ireturn
  No Blocks
--------------------------------------------------------
#9  [134 - 154)
>> Interpreting bytecode 153:ireturn
  State : locals 3, stack 0, monitors 0
    local  0 : 
********************************************************

java/util/regex/Matcher
    local  1 : int>> Requesting block for 0/{ }

>> Created new block
  ====================================================  
      local  2 : int

>> ANALYZING BLOCK : 
[0 - 9) Stored locals: { }  ====================================================  
  #10 

  State : locals 6, stack -1, monitors -1
  No successor information
  No predecessor information
[129 - 134) Stored locals: {  No exception information
  ====================================================  
>> Found block [0 - 9) }


  State : locals 3, stack 0, monitors 0
>> Created new block
  ====================================================  
      local  0 : [0 - -1) Stored locals: { }
java/util/regex/Matcher
    local  1 : int
  State : locals 6, stack -1, monitors -1
  No successor information

    local  2 : int  No predecessor information
  No exception information
  ====================================================  
>> Created new block
  ====================================================  
  
  No successor information
  Predecessors : 1
    #8  [0 - -1) Stored locals: {[103 - 129)
 }

  State : locals 6, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Computing exceptions for block   No exception information
  ====================================================  

>> ANALYZING BLOCK : 
  ====================================================  
  #10 [129 - 134)
>> Interpreting bytecode 129:aload_0
  State : locals 3, stack 1, monitors 0
    local  0 : #0  [0 - 9) Stored locals: java/util/regex/Matcher
    local  1 : int{ }


    local  2 : int  State : locals 6, stack 0, monitors 0
    local  0 : 
java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 :     stack  0 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/util/regex/Matcher
>> Interpreting bytecode 130:iconst_m1
  State : locals 3, stack 2, monitors 0
    local  0 : java/lang/CharSequence
    local  4 : bottom
java/util/regex/Matcher
    local  1 : int    local  5 : bottom
  No successor information
  No predecessor information

    local  2 : int  No exception information
  ====================================================  
>> Computing exceptions for block #0  [0 - 9)
    stack  0 : 
java/util/regex/Matcher
    stack  1 : int>> Interpreting bytecode 0:iconst_0
  State : locals 6, stack 1, monitors 0
    local  0 : 
>> Interpreting bytecode 131:putfield
java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 :   State : locals 3, stack 0, monitors 0
    local  0 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/util/regex/Matcher
    local  1 : intjava/lang/CharSequence
    local  4 : bottom

    local  2 :     local  5 : bottom
    stack  0 : intint
>> Computing successors for block #10 [129 - 134)
>> Requesting block for 134/{ }
>> Interpreting bytecode 1:istore
  State : locals 6, stack 0, monitors 0
    local  0 : 
>> Found block #9  java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
[134 - 154)
    local  3 : 
>> ANALYZING BLOCK : 
java/lang/CharSequence
    local  4 : int  ====================================================  
  #11 
    local  5 : bottom[79 - 88) Stored locals: { }


>> Interpreting bytecode 3:aload_1
  State : locals 6, stack 1, monitors 0
    local  0 :   State : locals 3, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcherjava/util/regex/Matcher
    local  2 : int
    local  1 : int

    local  3 :     local  2 : int
java/lang/CharSequence
    local  4 : int
    local  5 : bottom
  No successor information
  Predecessors : 1
        stack  0 : #7  [70 - 79)
  No exception information
java/util/regex/Matcher
>> Interpreting bytecode 4:getfield
  ====================================================  
>> Computing exceptions for block #11 [79 - 88)
>> Interpreting bytecode 79:aload_0
  State : locals 3, stack 1, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int  State : locals 6, stack 1, monitors 0
    local  0 : 
    local  2 : int
    stack  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : intjava/util/regex/Matcher
>> Interpreting bytecode 80:getfield

    local  3 :   State : locals 3, stack 1, monitors 0
    local  0 : java/lang/CharSequence
    local  4 : int
    local  5 : bottom
java/util/regex/Matcher
    local  1 : int    stack  0 : int

    local  2 : int>> Interpreting bytecode 7:istore
  State : locals 6, stack 0, monitors 0
    local  0 : 
    stack  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : [Ljava/util/regex/IntHashSet;
>> Interpreting bytecode 83:iload_2
  State : locals 3, stack 2, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : java/util/regex/Matcher
    local  2 : intint

    local  3 :     local  2 : int
java/lang/CharSequence
    local  4 :     stack  0 : int
    local  5 : int
>> Computing successors for block #0  [0 - 9)
>> Requesting block for 9/{ }[Ljava/util/regex/IntHashSet;
    stack  1 : int

>> Interpreting bytecode 84:aaload
>> Created new block
  ====================================================  
    State : locals 3, stack 1, monitors 0
    local  0 : [9 - 15) Stored locals: {java/util/regex/Matcher
    local  1 : int
    local  2 : int
 }

    stack  0 :   State : locals 6, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block java/util/regex/IntHashSet
>> Computing successors for block #11 [79 - 88)[9 - 15)


>> ANALYZING BLOCK : 
  ====================================================  
  >> Requesting block for 88/{ }#1  [9 - 15) Stored locals: {
 }

  State : locals 6, stack 0, monitors 0
    local  0 : >> Created new block
java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 :   ====================================================  
  [88 - 97) Stored locals: java/util/regex/Matcher
    local  2 : int
{ }
    local  3 : 
  State : locals 3, stack -1, monitors -1
  No successor information
  No predecessor information
java/lang/CharSequence
    local  4 : int
    local  5 : int  No exception information
  ====================================================  
>> Found block 
  No successor information
[88 - 97)
>> Requesting block for 97/  Predecessors : 1
    #0  [0 - 9)
{ }
  No exception information
  ====================================================  
>> Computing exceptions for block >> Created new block
  ====================================================  
  #1  [9 - 15)
>> Interpreting bytecode 9:iload_2
  State : locals 6, stack 1, monitors 0
    local  0 : [97 - 103) Stored locals: {java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int }


    local  3 :   State : locals 3, stack -1, monitors -1
  No successor information
  No predecessor information
java/lang/CharSequence
    local  4 : int
    local  5 : int  No exception information
  ====================================================  
>> Found block 
    stack  0 : int[97 - 103)
>> Interpreting bytecode 85:ifnull
  State : locals 3, stack 0, monitors 0
    local  0 : 
>> Interpreting bytecode 10:iload
  State : locals 6, stack 2, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : intjava/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : 
    local  2 : int
java/util/regex/Matcher
    local  2 : int
>> ANALYZING BLOCK : 

    local  3 :   ====================================================  
  #12 [97 - 103) Stored locals: java/lang/CharSequence
    local  4 : int{ }

    local  5 : int
  State : locals 3, stack 0, monitors 0
    local  0 : 
    stack  0 : intjava/util/regex/Matcher
    local  1 : 
    stack  1 : int
int
    local  2 : int>> Computing successors for block #1  [9 - 15)

  No successor information
  Predecessors : 1
    >> Requesting block for 15/{ }#11 [79 - 88)
  No exception information

  ====================================================  
>> Computing exceptions for block #12 [97 - 103)>> Created new block
  ====================================================  
  [15 - 34) Stored locals: {
 }
>> Interpreting bytecode 97:iinc
  State : locals 3, stack 0, monitors 0
    local  0 : 
  State : locals 6, stack -1, monitors -1
  No successor information
  No predecessor information
java/util/regex/Matcher
    local  1 : int  No exception information
  ====================================================  
>> Found block [15 - 34)

    local  2 : int
>> Requesting block for 43/{ }
>> Computing successors for block #12 [97 - 103)>> Created new block
  ====================================================  
  
[43 - 49) Stored locals: { }
>> Requesting block for 70/{ }
  State : locals 6, stack -1, monitors -1
  No successor information

>> Found block #7  [70 - 79)
>> Interpreting bytecode 100:goto
  State : locals 3, stack 0, monitors 0
    local  0 :   No predecessor information
  No exception information
  ====================================================  
>> Found block [43 - 49)
java/util/regex/Matcher
    local  1 : int
>> Interpreting bytecode 12:if_icmpge
  State : locals 6, stack 0, monitors 0
    local  0 :     local  2 : int
java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : 
>> ANALYZING BLOCK : 
  ====================================================  
  java/util/regex/Matcher
    local  2 : int
    local  3 : #13 [88 - 97) Stored locals: {java/lang/CharSequence
    local  4 :  }
int
    local  5 : 
  State : locals 3, stack 0, monitors 0
    local  0 : int
java/util/regex/Matcher
    local  1 : int
>> ANALYZING BLOCK : 
  ====================================================  

    local  2 : int
  No successor information
  Predecessors : 1
      #2  [43 - 49)#11 [79 - 88)
 Stored locals: {  No exception information
  ====================================================  
>> Computing exceptions for block  }
#13 [88 - 97)
>> Interpreting bytecode 88:aload_0
  State : locals 3, stack 1, monitors 0
    local  0 : 
  State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int
java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 :     local  2 : int
java/util/regex/Matcher
    local  2 : int    stack  0 : 
    local  3 : java/util/regex/Matcher
>> Interpreting bytecode 89:getfield
java/lang/CharSequence
    local  4 :   State : locals 3, stack 1, monitors 0
    local  0 : int
    local  5 : intjava/util/regex/Matcher
    local  1 : int
  No successor information
  Predecessors : 1

    local  2 : int
    #1  [9 - 15)
    stack  0 :   No exception information
  ====================================================  
>> Computing exceptions for block #2  [43 - 49)
>> Interpreting bytecode 43:iload_2
  State : locals 6, stack 1, monitors 0
    local  0 : [Ljava/util/regex/IntHashSet;
>> Interpreting bytecode 92:iload_2
  State : locals 3, stack 2, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  1 : intjava/util/regex/Matcher
    local  2 : int
    local  2 : int
    local  3 : 
    stack  0 : java/lang/CharSequence
    local  4 : int
[Ljava/util/regex/IntHashSet;
    stack  1 : int    local  5 : int
    stack  0 : int
>> Interpreting bytecode 93:aaload
  State : locals 3, stack 1, monitors 0
    local  0 : 
>> Interpreting bytecode 44:iload
  State : locals 6, stack 2, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : intjava/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : 
    local  2 : intjava/util/regex/Matcher
    local  2 : 
    stack  0 : int
    local  3 : java/util/regex/IntHashSet
>> Interpreting bytecode 94:invokevirtual
java/lang/CharSequence
    local  4 : int
    local  5 : int  State : locals 3, stack 0, monitors 0
    local  0 : 
    stack  0 : int
    stack  1 : intjava/util/regex/Matcher
    local  1 : int
>> Computing successors for block #2  [43 - 49)
>> Requesting block for 49/{ }
    local  2 : int

>> Computing successors for block #13 [88 - 97)
>> Requesting block for 97/{ }>> Created new block
  ====================================================  
  
>> Found block #12 [49 - 54) Stored locals: { }
[97 - 103)

  State : locals 6, stack -1, monitors -1
  No successor information
  No predecessor information
>> Adding block #7  [70 - 79)  No exception information
  ====================================================  
>> Found block [49 - 54) lphd to the work list : 


>> ANALYZING BLOCK : 
>> Requesting block for 54/{ 
  ====================================================  
  #14 [55 - 68) Stored locals: }
{ }>> Created new block
  ====================================================  


  [54 - 63)  State : locals 3, stack 0, monitors 0
    local  0 :  Stored locals: { }

  State : locals 6, stack -1, monitors -1
  No successor information
  No predecessor information
java/util/regex/Matcher
    local  1 : int
  No exception information
  ====================================================  
>> Found block     local  2 : int
[54 - 63)
>> Interpreting bytecode 46:if_icmplt
  State : locals 6, stack 0, monitors 0
    local  0 :   No successor information
  Predecessors : 1
    java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : #5  [46 - 55)
  No exception information
java/lang/CharSequence
    local  4 : int
  ====================================================  
>> Computing exceptions for block #14     local  5 : int
[55 - 68)
>> Interpreting bytecode 55:aload_0
  State : locals 3, stack 1, monitors 0
    local  0 : 
>> ANALYZING BLOCK : 
  ====================================================  
java/util/regex/Matcher
    local  1 : int  #3  [54 - 63) Stored locals: {
    local  2 : int }


    stack  0 :   State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Matcher
>> Interpreting bytecode 56:getfield
java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 :   State : locals 3, stack 1, monitors 0
    local  0 : java/util/regex/Matcher
    local  2 : intjava/util/regex/Matcher
    local  1 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  2 : int

    local  5 : int
    stack  0 :   No successor information
  Predecessors : 1
    [I
>> Interpreting bytecode 59:iload_2
  State : locals 3, stack 2, monitors 0
    local  0 : #2  [43 - 49)
java/util/regex/Matcher
    local  1 : int  No exception information
  ====================================================  
>> Computing exceptions for block #3  [54 - 63)
    local  2 : int

    stack  0 : >> Interpreting bytecode 54:iload
  State : locals 6, stack 1, monitors 0
    local  0 : [I
    stack  1 : intjava/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : 
>> Interpreting bytecode 60:iconst_m1
  State : locals 3, stack 3, monitors 0
    local  0 : java/util/regex/Matcher
    local  2 : intjava/util/regex/Matcher
    local  1 : int
    local  3 : java/lang/CharSequence
    local  4 : 
    local  2 : intint
    local  5 : int
    stack  0 : 
    stack  0 : int[I
    stack  1 : int
    stack  2 : int

>> Interpreting bytecode 56:aload_0
  State : locals 6, stack 2, monitors 0
    local  0 : >> Interpreting bytecode 61:iastore
  State : locals 3, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  1 : intjava/util/regex/Matcher
    local  2 : int
    local  2 : int
    local  3 : 
>> Interpreting bytecode 62:iinc
  State : locals 3, stack 0, monitors 0
    local  0 : java/lang/CharSequence
    local  4 : intjava/util/regex/Matcher
    local  1 : int

    local  5 : int    local  2 : int

    stack  0 : int
>> Computing successors for block #14 [55 - 68)
    stack  1 : >> Requesting block for 46/{ }java/util/regex/Pattern$BmpCharPropertyGreedy
>> Interpreting bytecode 57:getfield

>> Found block #5  [46 - 55)
>> Interpreting bytecode 65:goto
  State : locals 3, stack 0, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int  State : locals 6, stack 2, monitors 0
    local  0 : 
    local  2 : intjava/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : 
java/util/regex/Matcher
    local  2 : int>> Adding block #5  [46 - 55) lphd
    local  3 :  to the work list : 


>> ANALYZING BLOCK : 
java/lang/CharSequence
    local  4 : int  ====================================================  
  #15 [33 - 37)
    local  5 : int Stored locals: { }

    stack  0 : int
  State : locals 3, stack 1, monitors 0
    local  0 : 
    stack  1 : intjava/util/regex/Matcher
    local  1 : int

>> Computing successors for block #3  [54 - 63)
>> Requesting block for 63/{ }    local  2 : bottom
    stack  0 : 
>> Created new block
  ====================================================  
  java/util/regex/Matcher
  No successor information
  Predecessors : 1
[63 - 76) Stored locals: { }
    #2  [19 - 33)

  State : locals 6, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Computing exceptions for block #15 [33 - 37)
  No exception information
  ====================================================  
>> Found block [63 - 76)>> Interpreting bytecode 33:iload_1
  State : locals 3, stack 2, monitors 0
    local  0 : 
>> Requesting block for 87/java/util/regex/Matcher
    local  1 : int{ }

    local  2 : bottom
>> Created new block
  ====================================================  
      stack  0 : [87 - 89) Stored locals: {java/util/regex/Matcher
    stack  1 : int
 }

>> Computing successors for block #15 [33 - 37)  State : locals 6, stack -1, monitors -1
  No successor information
  No predecessor information

  No exception information
  ====================================================  
>> Found block [87 - 89)>> Requesting block for 41/{ }
>> Interpreting bytecode 60:if_icmplt
  State : locals 6, stack 0, monitors 0
    local  0 : 
>> Found block #4  java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : [41 - 46)
>> Interpreting bytecode 34:goto
  State : locals 3, stack 2, monitors 0
    local  0 : java/util/regex/Matcherjava/util/regex/Matcher
    local  1 : int
    local  2 : 
    local  2 : bottomint
    local  3 : 
    stack  0 : java/lang/CharSequence
    local  4 : int
    local  5 : intjava/util/regex/Matcher
    stack  1 : int


>> ANALYZING BLOCK : 

>> ANALYZING BLOCK : 
  ====================================================  
  #16   ====================================================  
  #4  [87 - 89)[14 - 18) Stored locals: { Stored locals: { }

 }

  State : locals 6, stack 0, monitors 0
    local  0 :   State : locals 3, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  1 : intjava/util/regex/Matcher
    local  2 : 
    local  2 : bottomint

  No successor information
  Predecessors : 1
        local  3 : #0  [0 - 14)
java/lang/CharSequence
    local  4 : int
  No exception information
  ====================================================  
>> Computing exceptions for block #16 [14 - 18)    local  5 : int

>> Interpreting bytecode 14:iconst_0
  State : locals 3, stack 1, monitors 0
    local  0 :   No successor information
  Predecessors : 1
java/util/regex/Matcher
    local  1 : int    #3  [54 - 63)
  No exception information
  ====================================================  
>> Computing exceptions for block #4  [87 - 89)

    local  2 : bottom>> Interpreting bytecode 87:iconst_0
  State : locals 6, stack 1, monitors 0
    local  0 : 
    stack  0 : int
java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : >> Computing successors for block #16 [14 - 18)java/util/regex/Matcher
    local  2 : int
>> Requesting block for 19/{ }
    local  3 : 
>> Found block #2  [19 - 33)
java/lang/CharSequence
    local  4 : int>> Interpreting bytecode 15:goto
  State : locals 3, stack 1, monitors 0
    local  0 : 
    local  5 : int
java/util/regex/Matcher
    local  1 : int
    stack  0 : int
    local  2 : bottom>> Computing successors for block #4  [87 - 89)
    stack  0 : int
>> Interpreting bytecode 88:ireturn
  State : locals 6, stack 0, monitors 0
    local  0 : 
java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int>> Requesting clone of loop head #5  [46 - 55) lphd
    local  3 :   for predecessor #14 [55 - 68)
java/lang/CharSequence
    local  4 : int
    local  5 : int>> Requesting block for 46/{ }

>> ANALYZING BLOCK : 

  ====================================================  
  #5  >> Created new block
  ====================================================  
  [63 - 76) Stored locals: {[46 - 55) Stored locals: { }
 }


  State : locals 3, stack -1, monitors -1
  No successor information
  State : locals 6, stack 0, monitors 0
    local  0 :   No predecessor information
  No exception information
  ====================================================  
>> Found block java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : [46 - 55)/backedge_copy
java/util/regex/Matcher
>> ANALYZING BLOCK : 
  ====================================================  
  #14 
    local  2 : int
[55 - 68) Stored locals: {    local  3 :  2 }
 loops:java/lang/CharSequence
    local  4 : int
 5<-14
  State : locals 3, stack 0, monitors 0
    local  0 :     local  5 : java/util/regex/Matcher
    local  1 : intint
  No successor information

    local  2 :   Predecessors : 1
    #3  int
  Successors : 1
[54 - 63)
  No exception information
    #17 [46 - 55)/backedge_copy  ====================================================  
>> Computing exceptions for block #5  [63 - 76)

  Predecessors : 1
    >> Interpreting bytecode 63:aload_0
  State : locals 6, stack 1, monitors 0
    local  0 : #5  [46 - 55) lphdjava/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : 
  Exceptions : 0
  ====================================================  
>> Interpreting bytecode 55:aload_0
  State : locals 3, stack 1, monitors 0
    local  0 : java/util/regex/Matcher
    local  2 : int
java/util/regex/Matcher
    local  1 : int    local  3 : 
    local  2 : int
java/lang/CharSequence
    local  4 : int
    stack  0 :     local  5 : int
java/util/regex/Matcher
>> Interpreting bytecode 56:getfield
    stack  0 :   State : locals 3, stack 1, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
>> Interpreting bytecode 64:getfield
java/util/regex/Matcher
    local  1 : int
    local  2 : int
    stack  0 : [I  State : locals 6, stack 1, monitors 0
    local  0 : 
>> Interpreting bytecode 59:iload_2
  State : locals 3, stack 2, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedyjava/util/regex/Matcher
    local  1 : int

    local  1 :     local  2 : int
java/util/regex/Matcher
    local  2 : int    stack  0 : 
    local  3 : [I
    stack  1 : int
>> Interpreting bytecode 60:iconst_m1
  State : locals 3, stack 3, monitors 0
    local  0 : java/lang/CharSequence
    local  4 : intjava/util/regex/Matcher
    local  1 : int
    local  5 : int
    local  2 : int
    stack  0 : 
    stack  0 : java/util/regex/Pattern$Node
>> Interpreting bytecode 67:aload_1
  State : locals 6, stack 2, monitors 0
    local  0 : [I
    stack  1 : intjava/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int

    stack  2 : int    local  3 : 
>> Interpreting bytecode 61:iastore
  State : locals 3, stack 0, monitors 0
    local  0 : java/lang/CharSequence
    local  4 : intjava/util/regex/Matcher
    local  1 : int
    local  5 : 
    local  2 : int
>> Interpreting bytecode 62:iinc
  State : locals 3, stack 0, monitors 0
    local  0 : int
    stack  0 : java/util/regex/Matcher
    local  1 : intjava/util/regex/Pattern$Node
    stack  1 : 
    local  2 : intjava/util/regex/Matcher
>> Interpreting bytecode 68:iload_2
  State : locals 6, stack 3, monitors 0
    local  0 : 
>> Interpreting bytecode 65:goto
  State : locals 3, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  1 : intjava/util/regex/Matcher
    local  2 : int
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int

>> ANALYZING BLOCK : 
  ====================================================  

    local  5 : int
  #17 [46 - 55)/backedge_copy    stack  0 :  Stored locals: { }
java/util/regex/Pattern$Node
    stack  1 : 
  State : locals 3, stack 0, monitors 0
    local  0 : java/util/regex/Matcher
    stack  2 : intjava/util/regex/Matcher
    local  1 : int
>> Interpreting bytecode 69:aload_3
  State : locals 6, stack 4, monitors 0
    local  0 : 
    local  2 : intjava/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : 
  No successor information
java/util/regex/Matcher
    local  2 : int
  Predecessors : 1
    #14 [55 - 68)
    local  3 :   No exception information
  ====================================================  
>> Computing exceptions for block #17 [46 - 55)java/lang/CharSequence
    local  4 : int/backedge_copy

    local  5 : int>> Interpreting bytecode 46:iload_2
  State : locals 3, stack 1, monitors 0
    local  0 : 
    stack  0 : java/util/regex/Matcher
    local  1 : intjava/util/regex/Pattern$Node
    stack  1 : 
    local  2 : int
java/util/regex/Matcher
    stack  2 : int    stack  0 : int

    stack  3 : java/lang/CharSequence
>> Interpreting bytecode 70:invokevirtual
>> Interpreting bytecode 47:aload_0
  State : locals 3, stack 2, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int
    local  2 : int  State : locals 6, stack 1, monitors 0
    local  0 : 
    stack  0 : int
    stack  1 : java/util/regex/Pattern$BmpCharPropertyGreedyjava/util/regex/Matcher
>> Interpreting bytecode 48:getfield

    local  1 :   State : locals 3, stack 2, monitors 0
    local  0 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/util/regex/Matcher
    local  1 : intjava/lang/CharSequence
    local  4 : int
    local  2 : int

    local  5 : int
    stack  0 : int
    stack  0 : int
    stack  1 : >> Computing successors for block #5  [63 - 76)
[I
>> Interpreting bytecode 51:arraylength
  State : locals 3, stack 2, monitors 0
    local  0 : >> Requesting block for 76/{ }java/util/regex/Matcher
    local  1 : int

    local  2 : int>> Created new block
  ====================================================  
  [76 - 78) Stored locals: {
    stack  0 : int
 }
    stack  1 : int
>> Computing successors for block #17 
  State : locals 6, stack -1, monitors -1
  No successor information
  No predecessor information
[46 - 55)/backedge_copy
  No exception information
  ====================================================  
>> Found block >> Requesting block for 55/{ }[76 - 78)
>> Requesting block for 78/{ }
>> Found block #14 [55 - 68)

>> Requesting block for 68/{ }>> Created new block
  ====================================================  
  
>> Found block #6  [78 - 87) Stored locals: {[68 - 70)
>> Interpreting bytecode 52:if_icmpge
  State : locals 3, stack 0, monitors 0
    local  0 :  }

  State : locals 6, stack -1, monitors -1
  No successor information
  No predecessor information
java/util/regex/Matcher
    local  1 : int  No exception information
  ====================================================  
>> Found block [78 - 87)
    local  2 : int
>> Interpreting bytecode 73:ifeq
  State : locals 6, stack 0, monitors 0
    local  0 : 
java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int>> Requesting clone of loop head #7  [70 - 79) lphd  for predecessor 
    local  3 : #12 [97 - 103)
java/lang/CharSequence
    local  4 : int>> Requesting block for 70/{ }

    local  5 : int>> Created new block
  ====================================================  
  [70 - 79) Stored locals: {
 }


>> ANALYZING BLOCK : 
  ====================================================  
  State : locals 3, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  #6  [78 - 87) Stored locals: {  ====================================================  
>> Found block [70 - 79)/backedge_copy }


  State : locals 6, stack 0, monitors 0
    local  0 : 
>> ANALYZING BLOCK : 
  ====================================================  
java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 :   #12 [97 - 103) Stored locals: java/util/regex/Matcher
    local  2 : { 2 }
 loops:int
    local  3 : java/lang/CharSequence
    local  4 : int 7<-12
  State : locals 3, stack 0, monitors 0
    local  0 : 
    local  5 : int
  No successor information
  Predecessors : 1
java/util/regex/Matcher
    local  1 : int
    #5  [63 - 76)    local  2 : int

  No exception information
  ====================================================  
>> Computing exceptions for block #6    Successors : 1
    #18 [70 - 79)[78 - 87)
/backedge_copy
>> Interpreting bytecode 78:iinc
  State : locals 6, stack 0, monitors 0
    local  0 :   Predecessors : 2
java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 :     #11 [79 - 88)java/util/regex/Matcher
    local  2 : int
    #13 [88 - 97)
  Exceptions : 0
  ====================================================  

    local  3 : >> Interpreting bytecode 97:iinc
  State : locals 3, stack 0, monitors 0
    local  0 : java/lang/CharSequence
    local  4 : int
    local  5 : int
java/util/regex/Matcher
    local  1 : int>> Interpreting bytecode 81:iinc
  State : locals 6, stack 0, monitors 0
    local  0 : 
    local  2 : intjava/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : 
>> Interpreting bytecode 100:goto
  State : locals 3, stack 0, monitors 0
    local  0 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/util/regex/Matcher
    local  1 : int
java/lang/CharSequence
    local  4 : int    local  2 : int

    local  5 : int

>> ANALYZING BLOCK : 
  ====================================================  
>> Computing successors for block #6  [78 - 87)  #18 [70 - 79)
>> Requesting block for 54/{ }/backedge_copy Stored locals: {
>> Found block #3   }

[54 - 63)
>> Interpreting bytecode 84:goto
  State : locals 6, stack 0, monitors 0
    local  0 :   State : locals 3, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  1 : intjava/util/regex/Matcher
    local  2 : int
    local  2 : int
    local  3 : 
  No successor information
  Predecessors : 1
java/lang/CharSequence
    local  4 : int    #12 [97 - 103)
  No exception information

    local  5 : int
  ====================================================  
>> Computing exceptions for block #18 [70 - 79)
>> ANALYZING BLOCK : 
  ====================================================  
/backedge_copy
  #7  [76 - 78) Stored locals: >> Interpreting bytecode 70:iload_2
  State : locals 3, stack 1, monitors 0
    local  0 : { }

  State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : intint

    local  3 :     local  2 : java/lang/CharSequence
    local  4 : intint
    stack  0 : 
    local  5 : intint
>> Interpreting bytecode 71:aload_0
  State : locals 3, stack 2, monitors 0
    local  0 : 
  No successor information
  Predecessors : 1
    java/util/regex/Matcher
    local  1 : int#5  [63 - 76)

    local  2 : int  No exception information
  ====================================================  
>> Computing exceptions for block #7  [76 - 78)
    stack  0 : int

    stack  1 : >> Interpreting bytecode 76:iconst_1
  State : locals 6, stack 1, monitors 0
    local  0 : java/util/regex/Matcher
>> Interpreting bytecode 72:getfield
java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 :   State : locals 3, stack 2, monitors 0
    local  0 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/util/regex/Matcher
    local  1 : intjava/lang/CharSequence
    local  4 : int

    local  2 : int
    local  5 : int
    stack  0 : int
    stack  0 : int
>> Computing successors for block #7      stack  1 : [76 - 78)
>> Interpreting bytecode 77:ireturn
  State : locals 6, stack 0, monitors 0
    local  0 : [Ljava/util/regex/IntHashSet;
>> Interpreting bytecode 75:arraylength
  State : locals 3, stack 2, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : java/util/regex/Matcher
    local  1 : intint
    local  3 : 
    local  2 : java/lang/CharSequence
    local  4 : int
    local  5 : int
int
    stack  0 : int>> Adding block #3  [54 - 63) lphd to the work list : 

    stack  1 : int

>> ANALYZING BLOCK : 
  ====================================================  

>> Computing successors for block #18 [70 - 79)  #8  [49 - 54)/backedge_copy
>> Requesting block for 79/{  Stored locals: { }}
>> Found block #11 [79 - 88)


>> Requesting block for 103/{ }  State : locals 6, stack 0, monitors 0
    local  0 : 
>> Found block #8  [103 - 129)
java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : >> Interpreting bytecode 76:if_icmpge
  State : locals 3, stack 0, monitors 0
    local  0 : java/lang/CharSequence
    local  4 : int
    local  5 : intjava/util/regex/Matcher
    local  1 : int

  No successor information
  Predecessors : 1
    local  2 : int
    #2  [43 - 49)>> Created new block
  ====================================================  
  [0 - -1) Stored locals: 
  No exception information
  ====================================================  
{ }>> Computing exceptions for block #8  [49 - 54)


>> Interpreting bytecode 49:aload_1
  State : locals 6, stack 1, monitors 0
    local  0 :   State : locals 3, stack -1, monitors -1
  No successor information
java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
  No predecessor information
  No exception information
    local  3 :   ====================================================  
java/lang/CharSequence
    local  4 : int
    local  5 : int>> Created new block
  ====================================================  
  
    stack  0 : [0 - -1) Stored locals: {java/util/regex/Matcher
>> Interpreting bytecode 50:iconst_1
  State : locals 6, stack 2, monitors 0
    local  0 :  }

java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 :   State : locals 3, stack -1, monitors -1
  No successor information
  No predecessor information
java/util/regex/Matcher
    local  2 : int
  No exception information
  ====================================================  
    local  3 : >> Adding block #11 [79 - 88) lphdjava/lang/CharSequence
    local  4 :  to the work list : 

int>> Adding block #15 [55 - 68) lphd
    local  5 : int to the work list : 



Loop tree
0<-0  defs: {    stack  0 :  1 2java/util/regex/Matcher
    stack  1 : int }
  15<-16  defs: {
>> Interpreting bytecode 51:putfield
 2 }
  11<-13  defs: { 2 }

>> ANALYZING BLOCK : 
  ====================================================  
  #15   State : locals 6, stack 0, monitors 0
    local  0 : [55 - 68) lphd Stored locals: java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : { 2 }
java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
 loops: 15<-16
>> Computing successors for block #8  [49 - 54)  State : locals 3, stack 0, monitors 0
    local  0 : 
>> Requesting block for 54/{ }
>> Found block #3  [54 - 63)java/util/regex/Matcher
    local  1 : int lphd


>> ANALYZING BLOCK : 
    local  2 : int
  ====================================================  
    Successors : 1
    #16 [46 - 55)#9  [15 - 34) Stored locals: {/backedge_copy
  Predecessors : 2
 }

  State : locals 6, stack 0, monitors 0
    local  0 :     #5  [46 - 55)
java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 :     #16 [46 - 55)/backedge_copy
java/util/regex/Matcher
    local  2 :   Exceptions : 0
  ====================================================  
>> Interpreting bytecode 55:aload_0
  State : locals 3, stack 1, monitors 0
    local  0 : int
java/util/regex/Matcher
    local  1 : int    local  3 : 
    local  2 : java/lang/CharSequence
    local  4 : int
    stack  0 : intjava/util/regex/Matcher
>> Interpreting bytecode 56:getfield

    local  5 : int
  No successor information
  State : locals 3, stack 1, monitors 0
    local  0 :   Predecessors : 1
    java/util/regex/Matcher
    local  1 : int
    local  2 : int#1  [9 - 15)

    stack  0 :   No exception information
  ====================================================  
>> Computing exceptions for block #9  [15 - 34)
[I
>> Interpreting bytecode 59:iload_2
  State : locals 3, stack 2, monitors 0
    local  0 : >> Interpreting bytecode 15:aload_0
  State : locals 6, stack 1, monitors 0
    local  0 : java/util/regex/Matcherjava/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : 
    local  1 : int
java/util/regex/Matcher
    local  2 : int    local  2 : int
    stack  0 : 
    local  3 : [I
    stack  1 : int
java/lang/CharSequence
    local  4 : int
>> Interpreting bytecode 60:iconst_m1
  State : locals 3, stack 3, monitors 0
    local  0 :     local  5 : int
    stack  0 : java/util/regex/Matcher
    local  1 : int
java/util/regex/Pattern$BmpCharPropertyGreedy
>> Interpreting bytecode 16:getfield
    local  2 : int
    stack  0 : [I
    stack  1 : int
    stack  2 : int  State : locals 6, stack 1, monitors 0
    local  0 : 
>> Interpreting bytecode 61:iastore
  State : locals 3, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  1 : int
    local  2 : java/util/regex/Matcher
    local  2 : intint
>> Interpreting bytecode 62:iinc
  State : locals 3, stack 0, monitors 0
    local  0 : 
    local  3 : java/util/regex/Matcher
    local  1 : intjava/lang/CharSequence
    local  4 : int
    local  5 : int

    local  2 : int    stack  0 : 
>> Interpreting bytecode 65:goto
  State : locals 3, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$CharPredicate
>> Interpreting bytecode 19:aload_3
  State : locals 6, stack 2, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : intjava/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : 
    local  2 : intint


>> ANALYZING BLOCK : 
    local  3 :   ====================================================  
  #11 [79 - 88) lphdjava/lang/CharSequence
    local  4 :  Stored locals: { }int
    local  5 : int

 loops: 11<-13    stack  0 : 
  State : locals 3, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$CharPredicate
    stack  1 : java/lang/CharSequence
>> Interpreting bytecode 20:iload_2
  State : locals 6, stack 3, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : intjava/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : 
java/util/regex/Matcher
    local  2 : int    local  2 : int
  Successors : 2
    #14 [88 - 97)
    local  3 : 
java/lang/CharSequence
    local  4 : int    #12 
    local  5 : [97 - 103)
int
    stack  0 :   Predecessors : 2
java/util/regex/Pattern$CharPredicate
    stack  1 :     #7  [70 - 79)
java/lang/CharSequence
    stack  2 :     #13 [70 - 79)/backedge_copy
int
>> Interpreting bytecode 21:invokeinterface
  Exceptions : 0
  ====================================================  
>> Interpreting bytecode 79:aload_0
  State : locals 3, stack 1, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int  State : locals 6, stack 2, monitors 0
    local  0 : 
    local  2 : int
    stack  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
>> Interpreting bytecode 80:getfield
java/util/regex/Matcher
    local  2 : int
    local  3 :   State : locals 3, stack 1, monitors 0
    local  0 : java/lang/CharSequence
    local  4 : intjava/util/regex/Matcher
    local  1 : int
    local  5 : int
    local  2 : int
    stack  0 : 
    stack  0 : java/util/regex/Pattern$CharPredicate
    stack  1 : int
>> Interpreting bytecode 26:invokeinterface
[Ljava/util/regex/IntHashSet;
>> Interpreting bytecode 83:iload_2
  State : locals 3, stack 2, monitors 0
    local  0 :   State : locals 6, stack 1, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : intjava/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : 
    local  2 : intjava/util/regex/Matcher
    local  2 : int
    stack  0 : 
    local  3 : [Ljava/util/regex/IntHashSet;
    stack  1 : int
java/lang/CharSequence
    local  4 : >> Interpreting bytecode 84:aaload
  State : locals 3, stack 1, monitors 0
    local  0 : int
java/util/regex/Matcher
    local  1 : int    local  5 : int

    local  2 :     stack  0 : int
int
    stack  0 : >> Computing successors for block #9  [15 - 34)
java/util/regex/IntHashSet
>> Interpreting bytecode 85:ifnull
  State : locals 3, stack 0, monitors 0
    local  0 : >> Requesting block for 34/{ }java/util/regex/Matcher
    local  1 : int

    local  2 : int
>> Created new block
  ====================================================  
  
>> ANALYZING BLOCK : 
[34 - 43) Stored locals: { }
  ====================================================  
  #5  
  State : locals 6, stack -1, monitors -1
  No successor information
  No predecessor information
[46 - 55) Stored locals: {  No exception information
  ====================================================  
>> Found block [34 - 43) }


>> Requesting block for 43/  State : locals 3, stack 0, monitors 0
    local  0 : { }
>> Found block #2  [43 - 49)java/util/regex/Matcher
    local  1 : 
>> Interpreting bytecode 31:ifeq
  State : locals 6, stack 0, monitors 0
    local  0 : int
java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 :     local  2 : int
int
    local  3 :   Successors : 2
    java/lang/CharSequence
    local  4 : int#15 [55 - 68) lphd

    local  5 : int    #6  [68 - 70)

  Predecessors : 1
    
>> ANALYZING BLOCK : 
  ====================================================  
  #4  [41 - 46)
#10 [34 - 43) Stored locals: {  Exceptions : 0
  ====================================================  
>> Interpreting bytecode 46:iload_2
  State : locals 3, stack 1, monitors 0
    local  0 :  }
java/util/regex/Matcher
    local  1 : int
  State : locals 6, stack 0, monitors 0
    local  0 : 
    local  2 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : int
    stack  0 : java/util/regex/Matcher
    local  2 : int
>> Interpreting bytecode 47:aload_0
  State : locals 3, stack 2, monitors 0
    local  0 : int
    local  3 : java/util/regex/Matcher
    local  1 : intjava/lang/CharSequence
    local  4 : 
    local  2 : intint
    local  5 : int
  No successor information
  Predecessors : 1
    
    stack  0 : #9  [15 - 34)
  No exception information
  ====================================================  
>> Computing exceptions for block #10 [34 - 43)int
    stack  1 : 
java/util/regex/Matcher
>> Interpreting bytecode 48:getfield
>> Interpreting bytecode 34:iinc
  State : locals 6, stack 0, monitors 0
    local  0 :   State : locals 3, stack 2, monitors 0
java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  0 :     local  3 : java/util/regex/Matcher
    local  1 : int
java/lang/CharSequence
    local  4 : int    local  2 : int

    local  5 : int    stack  0 : int

>> Interpreting bytecode 37:iinc
  State : locals 6, stack 0, monitors 0
    local  0 :     stack  1 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : [I
>> Interpreting bytecode 51:arraylength
  State : locals 3, stack 2, monitors 0
    local  0 : java/util/regex/Matcher
    local  2 : intjava/util/regex/Matcher
    local  1 : 
    local  3 : int
    local  2 : java/lang/CharSequence
    local  4 : intint

    local  5 : int
    stack  0 : int
    stack  1 : >> Computing successors for block #10 [34 - 43)
int
>> Interpreting bytecode 52:if_icmpge
  State : locals 3, stack 0, monitors 0
    local  0 : >> Requesting block for 9/{ }java/util/regex/Matcher
    local  1 : int
>> Found block #1  [9 - 15)
    local  2 : int

>> Interpreting bytecode 40:goto
  State : locals 6, stack 0, monitors 0
    local  0 : 
>> ANALYZING BLOCK : 
  ====================================================  
  java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : #7  [70 - 79) Stored locals: {java/util/regex/Matcher
    local  2 :  }

int
    local  3 :   State : locals 3, stack 0, monitors 0
    local  0 : java/lang/CharSequence
    local  4 : intjava/util/regex/Matcher
    local  1 : int
    local  5 : int
    local  2 : int

  Successors : 2
    #11 >> Adding block #1  [9 - 15) lphd to the work list : 
[79 - 88) lphd

    #8  [103 - 129)>> Requesting clone of loop head #1  [9 - 15)
  Predecessors : 1
     lphd  for predecessor #10 [34 - 43)#6  [68 - 70)

>> Requesting block for 9/{   Exceptions : 0
  ====================================================  
>> Interpreting bytecode 70:iload_2
  State : locals 3, stack 1, monitors 0
    local  0 : }
>> Created new block
  ====================================================  
  java/util/regex/Matcher
    local  1 : int
[9 - 15) Stored locals:     local  2 : int
{ }

    stack  0 : int
>> Interpreting bytecode 71:aload_0
  State : locals 3, stack 2, monitors 0
    local  0 :   State : locals 6, stack -1, monitors -1
  No successor information
  No predecessor information
java/util/regex/Matcher
    local  1 : int  No exception information
  ====================================================  
>> Found block [9 - 15)
    local  2 : int/backedge_copy

    stack  0 : int
>> ANALYZING BLOCK : 
  ====================================================  
  
    stack  1 : #10 [34 - 43) Stored locals: {java/util/regex/Matcher
>> Interpreting bytecode 72:getfield
 2 4 }  State : locals 3, stack 2, monitors 0
    local  0 : 
 loops: 1<-10
java/util/regex/Matcher
    local  1 : int  State : locals 6, stack 0, monitors 0
    local  0 : 
    local  2 : int
java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 :     stack  0 : int
java/util/regex/Matcher
    local  2 : int    stack  1 : 
    local  3 : [Ljava/util/regex/IntHashSet;
>> Interpreting bytecode 75:arraylength
  State : locals 3, stack 2, monitors 0
    local  0 : java/lang/CharSequence
    local  4 : intjava/util/regex/Matcher
    local  1 : int

    local  5 : int
    local  2 : int  Successors : 1
    #11 
    stack  0 : int
[9 - 15)/backedge_copy
    stack  1 : int
  Predecessors : 1
    #9  >> Interpreting bytecode 76:if_icmpge
  State : locals 3, stack 0, monitors 0
    local  0 : [15 - 34)
  Exceptions : 0
java/util/regex/Matcher
    local  1 : int  ====================================================  
>> Interpreting bytecode 34:iinc
  State : locals 6, stack 0, monitors 0
    local  0 : 
    local  2 : intjava/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : 
java/util/regex/Matcher
    local  2 : int********************************************************
TypeFlow for 
    local  3 : searchjava/lang/CharSequence
    local  4 :   154 bytes
  ====================================================  
  int
    local  5 : #0  rpo#0  [0 - 14) Stored locals: int
>> Interpreting bytecode 37:iinc
  State : locals 6, stack 0, monitors 0
    local  0 : { }
java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : 
  State : locals 3, stack 0, monitors 0
    local  0 : java/util/regex/Matcher
    local  2 : java/util/regex/Matcher
    local  1 : intint
    local  3 : 
java/lang/CharSequence
    local  4 :     local  2 : bottom
int
  Successors : 2
    #18 rpo#1  [14 - 18)
    local  5 : int
    #1  >> Interpreting bytecode 40:goto
  State : locals 6, stack 0, monitors 0
    local  0 : rpo#2  [18 - 19)
java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 :   No predecessor information
  Exceptions : 0
java/util/regex/Matcher
    local  2 : int  ====================================================  
--------------------------------------------------------


    local  3 :   ====================================================  
  java/lang/CharSequence
    local  4 : int
    local  5 : int#18 rpo#1  [14 - 18) Stored locals: 

>> ANALYZING BLOCK : 
  ====================================================  
  { }
#11 [9 - 15)/backedge_copy Stored locals: 
  State : locals 3, stack 0, monitors 0
    local  0 : { }

java/util/regex/Matcher
    local  1 : int  State : locals 6, stack 0, monitors 0
    local  0 : 
    local  2 : bottom
  Successors : 1
    #2  java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : rpo#3  [19 - 33)
  Predecessors : 1
    #0  rpo#0  java/util/regex/Matcher
    local  2 : [0 - 14)
int
    local  3 :   Exceptions : 0
java/lang/CharSequence
    local  4 : int
    local  5 : int  ====================================================  
--------------------------------------------------------


  No successor information
  ====================================================  
  #1    Predecessors : 1
    #10 [34 - 43)
rpo#2  [18 - 19) Stored locals: {  No exception information
  ====================================================  
>> Computing exceptions for block #11 [9 - 15)/backedge_copy }


  State : locals 3, stack 0, monitors 0
    local  0 : >> Interpreting bytecode 9:iload_2
  State : locals 6, stack 1, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : intjava/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : 
    local  2 : bottomjava/util/regex/Matcher
    local  2 : int
    local  3 : 
  Successors : 1
    java/lang/CharSequence
    local  4 : #2  rpo#3  [19 - 33)
int
    local  5 : int
  Predecessors : 1
    #0      stack  0 : int
rpo#0  [0 - 14)
>> Interpreting bytecode 10:iload
  State : locals 6, stack 2, monitors 0
    local  0 :   Exceptions : 0
  ====================================================  
--------------------------------------------------------
java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
  ====================================================  
  
    local  3 : #2  rpo#3  java/lang/CharSequence
    local  4 : int[19 - 33) Stored locals: {
    local  5 : int
    stack  0 : int 1 }

    stack  1 : int
  State : locals 3, stack 1, monitors 0
    local  0 : 
java/util/regex/Matcher
    local  1 : int>> Computing successors for block #11 [9 - 15)
    local  2 : /backedge_copy
bottom
    stack  0 : >> Requesting block for 15/{ }
>> Found block #9  int
[15 - 34)
  Successors : 2
    #17 rpo#4  [33 - 37)
    #3  rpo#5  [37 - 41)>> Requesting block for 43/{ }
  Predecessors : 2
    
>> Found block #2  [43 - 49)
#1  rpo#2  [18 - 19)>> Interpreting bytecode 12:if_icmpge
  State : locals 6, stack 0, monitors 0
    local  0 : 
java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 :     #18 rpo#1  int
[14 - 18)
    local  3 :   Exceptions : 0
  ====================================================  
--------------------------------------------------------
java/lang/CharSequence
    local  4 : int
  ====================================================  
  
    local  5 : int
#17 rpo#4  >> Requesting clone of loop head #3  [54 - 63) lphd  for predecessor #6  [78 - 87)[33 - 37) Stored locals: {
>> Requesting block for 54/{  }
}
>> Created new block
  ====================================================  
  
  State : locals 3, stack 1, monitors 0
    local  0 : [54 - 63)java/util/regex/Matcher
    local  1 : int Stored locals: { }

    local  2 : bottom
  State : locals 6, stack -1, monitors -1
  No successor information
  No predecessor information

    stack  0 :   No exception information
  ====================================================  
>> Found block [54 - 63)/backedge_copyjava/util/regex/Matcher
  Successors : 1
    
#4  rpo#6  [41 - 46)

>> ANALYZING BLOCK : 
  ====================================================  
  #6    Predecessors : 1
    #2  [78 - 87) Stored locals: rpo#3  [19 - 33)
  Exceptions : 0
{ 2 4 }
 loops: 3<-6
  State : locals 6, stack 0, monitors 0
    local  0 :   ====================================================  
--------------------------------------------------------

java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 :   ====================================================  
  java/util/regex/Matcher
    local  2 : #3  rpo#5  [37 - 41)int
    local  3 :  Stored locals: { }java/lang/CharSequence
    local  4 : int

  State : locals 3, stack 1, monitors 0

    local  5 : int
    local  0 :   Successors : 1
    #12 [54 - 63)java/util/regex/Matcher
    local  1 : int
/backedge_copy
  Predecessors : 1
        local  2 : bottom
    stack  0 : #5  [63 - 76)java/util/regex/Matcher
  Successors : 1
    #4  rpo#6  [41 - 46)

  Exceptions : 0
  ====================================================  
  Predecessors : 1
    >> Interpreting bytecode 78:iinc
  State : locals 6, stack 0, monitors 0
    local  0 : #2  rpo#3  [19 - 33)java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : 
java/util/regex/Matcher
    local  2 : int  Exceptions : 0
  ====================================================  
--------------------------------------------------------

    local  3 : 
  ====================================================  
java/lang/CharSequence
    local  4 : int
  #4  rpo#6      local  5 : int[41 - 46) Stored locals: {
>> Interpreting bytecode 81:iinc
  State : locals 6, stack 0, monitors 0
    local  0 :  2 }
java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : 
  State : locals 3, stack 2, monitors 0
    local  0 : java/util/regex/Matcher
    local  2 : intjava/util/regex/Matcher
    local  1 : int

    local  3 : java/lang/CharSequence
    local  4 : int
    local  2 : bottom
    local  5 : int    stack  0 : 
>> Interpreting bytecode 84:goto
  State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Matcher
    stack  1 : int
java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 :   Successors : 1
    java/util/regex/Matcher
    local  2 : #5  rpo#7  [46 - 55)
  Predecessors : 2
int
    local  3 :     #3  rpo#5  [37 - 41)java/lang/CharSequence
    local  4 : int
    
    local  5 : int#17 rpo#4  
[33 - 37)

>> ANALYZING BLOCK : 
  ====================================================  
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  #12 [54 - 63)/backedge_copy  ====================================================  
  #5   Stored locals: { }rpo#7  [46 - 55) Stored locals: 

  State : locals 6, stack 0, monitors 0
    local  0 : { }

java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 :   State : locals 3, stack 0, monitors 0
    local  0 : java/util/regex/Matcher
    local  2 : intjava/util/regex/Matcher
    local  1 : int
    local  3 : java/lang/CharSequence
    local  4 : int

    local  2 : int
    local  5 : int  Successors : 2
    #15 rpo#8  
  No successor information
  Predecessors : 1
    [55 - 68) lphd
#6  [78 - 87)
  No exception information
    #6  rpo#10   ====================================================  
>> Computing exceptions for block #12 [54 - 63)/backedge_copy
[68 - 70)
  Predecessors : 1
    >> Interpreting bytecode 54:iload
  State : locals 6, stack 1, monitors 0
    local  0 : #4  rpo#6  [41 - 46)
java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 :   Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #15 rpo#8  [55 - 68)java/util/regex/Matcher
    local  2 : int lphd Stored locals: 
    local  3 : { 2 }
java/lang/CharSequence
    local  4 :  loops: 15<-16
int
    local  5 : int  State : locals 3, stack 0, monitors 0
    local  0 : 
    stack  0 : int
java/util/regex/Matcher
    local  1 : int>> Interpreting bytecode 56:aload_0
  State : locals 6, stack 2, monitors 0
    local  0 : 
java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 :     local  2 : int
java/util/regex/Matcher
    local  2 : int  Successors : 1
    #16 rpo#9  
    local  3 : [46 - 55)/backedge_copy
java/lang/CharSequence
    local  4 : int
  Predecessors : 2
    #5      local  5 : int
rpo#7  [46 - 55)
        stack  0 : int
    stack  1 : #16 rpo#9  [46 - 55)java/util/regex/Pattern$BmpCharPropertyGreedy
>> Interpreting bytecode 57:getfield
/backedge_copy
  Exceptions : 0
  State : locals 6, stack 2, monitors 0
    local  0 :   ====================================================  
--------------------------------------------------------

java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 :   ====================================================  
  #16 java/util/regex/Matcher
    local  2 : intrpo#9  [46 - 55)/backedge_copy Stored locals: 
    local  3 : { }
 loops: 15<-16
java/lang/CharSequence
    local  4 : int  State : locals 3, stack 0, monitors 0
    local  0 : 
    local  5 : int
java/util/regex/Matcher
    local  1 : int    stack  0 : int

    local  2 : int
    stack  1 : int
  Successors : 2
    #15 >> Computing successors for block #12 [54 - 63)/backedge_copy
rpo#8  [55 - 68) lphd>> Requesting block for 63/{ 
    #6  rpo#10 }
>> Found block [68 - 70)
  Predecessors : 1
#5  [63 - 76)
>> Requesting block for 87/    #15 rpo#8  [55 - 68){ } lphd
  Exceptions : 0

>> Found block #4    ====================================================  
--------------------------------------------------------

  ====================================================  
[87 - 89)
>> Interpreting bytecode 60:if_icmplt
  State : locals 6, stack 0, monitors 0
    local  0 :   #6  rpo#10 [68 - 70)java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 :  Stored locals: { 2 }

java/util/regex/Matcher
    local  2 : int
    local  3 :   State : locals 3, stack 0, monitors 0
    local  0 : java/lang/CharSequence
    local  4 : java/util/regex/Matcher
    local  1 : intint
    local  5 : int
    local  2 : int

>> Created new block
  ====================================================  
    Successors : 1
    #7  [0 - -1) Stored locals: {rpo#11 [70 - 79)
 }

  State : locals 6, stack -1, monitors -1
  Predecessors : 2
    #5    No successor information
  No predecessor information
  No exception information
rpo#7  [46 - 55)
  ====================================================  
    #16 rpo#9  >> Created new block
  ====================================================  
  [46 - 55)/backedge_copy
[0 - -1) Stored locals: {  Exceptions : 0
  ====================================================  
--------------------------------------------------------
 }


  ====================================================  
    State : locals 6, stack -1, monitors -1
  No successor information
  No predecessor information
#7  rpo#11 [70 - 79)  No exception information
  ====================================================  
 Stored locals: >> Adding block #5  [63 - 76) lphd{ }

 to the work list : 

  State : locals 3, stack 0, monitors 0
    local  0 : >> Adding block #10 [15 - 34) lphdjava/util/regex/Matcher
    local  1 : int
 to the work list : 


Loop tree
0<-0  defs: {    local  2 : int 2 4 5
  Successors : 2
     }
 #11 rpo#12 [79 - 88) lphd 10<-12  defs: {
    #8  rpo#16  2 4 }
[103 - 129)
  Predecessors : 1
      #6  rpo#10 [68 - 70)5<-7  defs: {
  Exceptions : 0
  ====================================================  
 2 4 }
--------------------------------------------------------

  ====================================================  
  
>> ANALYZING BLOCK : 
  ====================================================  
  #11 rpo#12 [79 - 88) lphd#10 [15 - 34) lphd Stored locals:  Stored locals: { }{ }
 loops:
 loops: 11<-13
  State : locals 3, stack 0, monitors 0
    local  0 :  10<-12
  State : locals 6, stack 0, monitors 0
java/util/regex/Matcher
    local  1 : int
    local  0 :     local  2 : intjava/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : 
  Successors : 2
    java/util/regex/Matcher
    local  2 : int
    local  3 : #14 rpo#13 [88 - 97)java/lang/CharSequence
    local  4 : int

    #12     local  5 : int
rpo#14 [97 - 103)
  Successors : 2
      Predecessors : 2
    #7  #11 [34 - 43)
    #2  rpo#11 [70 - 79)
[43 - 49)
  Predecessors : 2
    #1      #13 rpo#15 [9 - 15)
    #12 [9 - 15)/backedge_copy[70 - 79)/backedge_copy

  Exceptions : 0
  ====================================================  
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

>> Interpreting bytecode 15:aload_0
  State : locals 6, stack 1, monitors 0
    local  0 :   ====================================================  
  #14 java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : rpo#13 [88 - 97)java/util/regex/Matcher
    local  2 : int
    local  3 :  Stored locals: { }
 loops:java/lang/CharSequence
    local  4 :  11<-13
int
    local  5 : int  State : locals 3, stack 0, monitors 0
    local  0 : 
    stack  0 : java/util/regex/Matcher
    local  1 : int
java/util/regex/Pattern$BmpCharPropertyGreedy
>> Interpreting bytecode 16:getfield
    local  2 : int
  State : locals 6, stack 1, monitors 0
    local  0 :   Successors : 1
    #12 java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
rpo#14 [97 - 103)
  Predecessors : 1
    #11     local  3 : rpo#12 [79 - 88)java/lang/CharSequence
    local  4 :  lphd
  Exceptions : 0
int
    local  5 :   ====================================================  
--------------------------------------------------------

int
    stack  0 :   ====================================================  
  #12 java/util/regex/Pattern$CharPredicate
>> Interpreting bytecode 19:aload_3
  State : locals 6, stack 2, monitors 0
    local  0 : rpo#14 [97 - 103) Stored locals: { 2java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 :  }
java/util/regex/Matcher
    local  2 : int
    local  3 :  loops: 11<-13
java/lang/CharSequence
    local  4 : int  State : locals 3, stack 0, monitors 0
    local  0 : 
    local  5 : int
java/util/regex/Matcher
    local  1 : int
    local  2 : int
    stack  0 :   Successors : 1
    java/util/regex/Pattern$CharPredicate
    stack  1 : #13 rpo#15 [70 - 79)/backedge_copyjava/lang/CharSequence
>> Interpreting bytecode 20:iload_2
  State : locals 6, stack 3, monitors 0
    local  0 : 
  Predecessors : 2
    #11 java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : rpo#12 [79 - 88) lphd
java/util/regex/Matcher
    local  2 : int    #14 rpo#13 [88 - 97)
    local  3 : 
java/lang/CharSequence
    local  4 : int
    local  5 : int
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

    stack  0 :   ====================================================  
  java/util/regex/Pattern$CharPredicate
    stack  1 : #13 rpo#15 [70 - 79)java/lang/CharSequence
    stack  2 : /backedge_copy Stored locals: {int
>> Interpreting bytecode 21:invokeinterface
 }
 loops: 11<-13
  State : locals 3, stack 0, monitors 0
    local  0 :   State : locals 6, stack 2, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : int
    local  2 : intjava/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : 
java/util/regex/Matcher
    local  2 : int  Successors : 2
    #11 rpo#12 
    local  3 : [79 - 88)java/lang/CharSequence
    local  4 : int lphd
    
    local  5 : int
    stack  0 : #8  rpo#16 [103 - 129)
java/util/regex/Pattern$CharPredicate
    stack  1 : int  Predecessors : 1
    #12 
>> Interpreting bytecode 26:invokeinterface
rpo#14 [97 - 103)
  Exceptions : 0
  ====================================================  
  State : locals 6, stack 1, monitors 0
    local  0 : --------------------------------------------------------

  ====================================================  
java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int  #8  rpo#16 
    local  3 : [103 - 129) Stored locals: { 2java/lang/CharSequence
    local  4 : int
 }

    local  5 : int
  State : locals 3, stack 0, monitors 0
    local  0 :     stack  0 : int
java/util/regex/Matcher
    local  1 : int>> Interpreting bytecode 31:ifeq
  State : locals 6, stack 0, monitors 0
    local  0 : 
    local  2 : intjava/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : 
  Successors : 2
    java/util/regex/Matcher
    local  2 : int#10 rpo#17 [129 - 134)

    local  3 :     #9  rpo#18 [134 - 154)
  Predecessors : 2
    java/lang/CharSequence
    local  4 : #7  rpo#11 [70 - 79)
int
    #13 rpo#15 [70 - 79)    local  5 : int
/backedge_copy
  Exceptions : 0
  ====================================================  

>> ANALYZING BLOCK : 
  ====================================================  
  --------------------------------------------------------

#5  [63 - 76) lphd Stored locals:   ====================================================  
  #10 { }
rpo#17 [129 - 134) Stored locals:  loops: 5<-7
  State : locals 6, stack 0, monitors 0
{ }

    local  0 :   State : locals 3, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  1 : int
java/util/regex/Matcher
    local  2 : int    local  2 : int

    local  3 :   Successors : 1
    #9  rpo#18 java/lang/CharSequence
    local  4 : int
[134 - 154)
  Predecessors : 1
    local  5 : int    #8  rpo#16 [103 - 129)
  Successors : 2
    
  Exceptions : 0
  ====================================================  
--------------------------------------------------------
#8  [76 - 78)
    #6  
  ====================================================  
  [78 - 87)
  Predecessors : 2
    #3  [54 - 63)#9  rpo#18 [134 - 154)
     Stored locals: { }

#7  [54 - 63)/backedge_copy
  State : locals 3, stack 0, monitors 0
    local  0 :   Exceptions : 0
  ====================================================  
>> Interpreting bytecode 63:aload_0
  State : locals 6, stack 1, monitors 0
    local  0 : java/util/regex/Matcher
    local  1 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : int
    local  2 : java/util/regex/Matcher
    local  2 : intint
  Successors : 0

    local  3 : java/lang/CharSequence
    local  4 : int  Predecessors : 2
    #8  
    local  5 : intrpo#16 [103 - 129)
    
    stack  0 : #10 rpo#17 [129 - 134)java/util/regex/Pattern$BmpCharPropertyGreedy
>> Interpreting bytecode 64:getfield

  Exceptions : 0
  ====================================================  
--------------------------------------------------------
  State : locals 6, stack 1, monitors 0
    local  0 : 
********************************************************

java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
    stack  0 : java/util/regex/Pattern$Node
>> Interpreting bytecode 67:aload_1
  State : locals 6, stack 2, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
    stack  0 : java/util/regex/Pattern$Node
    stack  1 : java/util/regex/Matcher
>> Interpreting bytecode 68:iload_2
  State : locals 6, stack 3, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
    stack  0 : java/util/regex/Pattern$Node
    stack  1 : java/util/regex/Matcher
    stack  2 : int
>> Interpreting bytecode 69:aload_3
  State : locals 6, stack 4, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
    stack  0 : java/util/regex/Pattern$Node
    stack  1 : java/util/regex/Matcher
    stack  2 : int
    stack  3 : java/lang/CharSequence
>> Interpreting bytecode 70:invokevirtual
  State : locals 6, stack 1, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
    stack  0 : int
>> Interpreting bytecode 73:ifeq
  State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int

>> ANALYZING BLOCK : 
  ====================================================  
  #1  [9 - 15) Stored locals: { }

  State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
  Successors : 2
    #10 [15 - 34) lphd
    #2  [43 - 49)
  Predecessors : 1
    #0  [0 - 9)
  Exceptions : 0
  ====================================================  
>> Interpreting bytecode 9:iload_2
  State : locals 6, stack 1, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
    stack  0 : int
>> Interpreting bytecode 10:iload
  State : locals 6, stack 2, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
    stack  0 : int
    stack  1 : int
>> Interpreting bytecode 12:if_icmpge
  State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int

>> ANALYZING BLOCK : 
  ====================================================  
  #3  [54 - 63) Stored locals: { }

  State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
  Successors : 2
    #5  [63 - 76) lphd
    #4  [87 - 89)
  Predecessors : 2
    #2  [43 - 49)
    #9  [49 - 54)
  Exceptions : 0
  ====================================================  
>> Interpreting bytecode 54:iload
  State : locals 6, stack 1, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
    stack  0 : int
>> Interpreting bytecode 56:aload_0
  State : locals 6, stack 2, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
    stack  0 : int
    stack  1 : java/util/regex/Pattern$BmpCharPropertyGreedy
>> Interpreting bytecode 57:getfield
  State : locals 6, stack 2, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
    stack  0 : int
    stack  1 : int
>> Interpreting bytecode 60:if_icmplt
  State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
********************************************************
TypeFlow for match  89 bytes
  ====================================================  
  #0  rpo#0  [0 - 9) Stored locals: { 4 5 }

  State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : bottom
    local  5 : bottom
  Successors : 1
    #1  rpo#1  [9 - 15)
  No predecessor information
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #1  rpo#1  [9 - 15) Stored locals: { }

  State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
  Successors : 2
    #10 rpo#2  [15 - 34) lphd
    #2  rpo#5  [43 - 49)
  Predecessors : 1
    #0  rpo#0  [0 - 9)
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #10 rpo#2  [15 - 34) lphd Stored locals: { }
 loops: 10<-12
  State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
  Successors : 2
    #11 rpo#3  [34 - 43)
    #2  rpo#5  [43 - 49)
  Predecessors : 2
    #1  rpo#1  [9 - 15)
    #12 rpo#4  [9 - 15)/backedge_copy
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #11 rpo#3  [34 - 43) Stored locals: { 2 4 }
 loops: 10<-12
  State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
  Successors : 1
    #12 rpo#4  [9 - 15)/backedge_copy
  Predecessors : 1
    #10 rpo#2  [15 - 34) lphd
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #12 rpo#4  [9 - 15)/backedge_copy Stored locals: { }
 loops: 10<-12
  State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
  Successors : 2
    #10 rpo#2  [15 - 34) lphd
    #2  rpo#5  [43 - 49)
  Predecessors : 1
    #11 rpo#3  [34 - 43)
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #2  rpo#5  [43 - 49) Stored locals: { }

  State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
  Successors : 2
    #9  rpo#6  [49 - 54)
    #3  rpo#7  [54 - 63)
  Predecessors : 3
    #1  rpo#1  [9 - 15)
    #10 rpo#2  [15 - 34) lphd
    #12 rpo#4  [9 - 15)/backedge_copy
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #9  rpo#6  [49 - 54) Stored locals: { }

  State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
  Successors : 1
    #3  rpo#7  [54 - 63)
  Predecessors : 1
    #2  rpo#5  [43 - 49)
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #3  rpo#7  [54 - 63) Stored locals: { }

  State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
  Successors : 2
    #5  rpo#8  [63 - 76) lphd
    #4  rpo#12 [87 - 89)
  Predecessors : 2
    #2  rpo#5  [43 - 49)
    #9  rpo#6  [49 - 54)
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #5  rpo#8  [63 - 76) lphd Stored locals: { }
 loops: 5<-7
  State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
  Successors : 2
    #8  rpo#9  [76 - 78)
    #6  rpo#10 [78 - 87)
  Predecessors : 2
    #3  rpo#7  [54 - 63)
    #7  rpo#11 [54 - 63)/backedge_copy
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #8  rpo#9  [76 - 78) Stored locals: { }

  State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
  Successors : 0
  Predecessors : 1
    #5  rpo#8  [63 - 76) lphd
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #6  rpo#10 [78 - 87) Stored locals: { 2 4 }
 loops: 5<-7
  State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
  Successors : 1
    #7  rpo#11 [54 - 63)/backedge_copy
  Predecessors : 1
    #5  rpo#8  [63 - 76) lphd
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #7  rpo#11 [54 - 63)/backedge_copy Stored locals: { }
 loops: 5<-7
  State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
  Successors : 2
    #5  rpo#8  [63 - 76) lphd
    #4  rpo#12 [87 - 89)
  Predecessors : 1
    #6  rpo#10 [78 - 87)
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #4  rpo#12 [87 - 89) Stored locals: { }

  State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
  Successors : 0
  Predecessors : 2
    #3  rpo#7  [54 - 63)
    #7  rpo#11 [54 - 63)/backedge_copy
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

********************************************************


Performing flow analysis on method
<ciMethod name=match holder=java/util/regex/Pattern$Start signature=(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z loaded=true arg_size=4 flags=DEFAULT_ACCESS ident=1420 address=0x00007fadac083470>
   0 iload_2
   1 aload_1
   2 nofast_getfield 25 <java/util/regex/Matcher.to:I> 
   5 nofast_aload_0
   6 nofast_getfield 24 <java/util/regex/Pattern$Start.minLength:I> 
   9 isub
  10 if_icmple 20
  0    bci: 10   BranchData         taken(552) displacement(32)
                                    not taken(0)
  13 aload_1
  14 iconst_1
  15 nofast_putfield 30 <java/util/regex/Matcher.hitEnd:Z> 
  18 iconst_0
  19 ireturn
  20 aload_1
  21 nofast_getfield 25 <java/util/regex/Matcher.to:I> 
  24 nofast_aload_0
  25 nofast_getfield 24 <java/util/regex/Pattern$Start.minLength:I> 
  28 isub
  29 istore #4
  31 iload_2
  32 nofast_iload #4
  34 if_icmpgt 83
  32   bci: 34   BranchData         taken(1) displacement(144)
                                    not taken(3960)
  37 nofast_aload_0
  38 nofast_getfield 7 <java/util/regex/Pattern$Start.next:Ljava/util/regex/Pattern$Node;> 
  41 aload_1
  42 iload_2
  43 aload_3
  44 invokevirtual 34 <java/util/regex/Pattern$Node.match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z> 
  64   bci: 44   VirtualCallData    count(0) nonprofiled_count(0) entries(1)
                                    'java/util/regex/Pattern$BmpCharPropertyGreedy'(3960 1.00)
  47 ifeq 77
  120  bci: 47   BranchData         taken(3409) displacement(32)
                                    not taken(551)
  50 aload_1
  51 iload_2
  52 nofast_putfield 38 <java/util/regex/Matcher.first:I> 
  55 aload_1
  56 nofast_getfield 41 <java/util/regex/Matcher.groups:[I> 
  59 iconst_0
  60 aload_1
  61 nofast_getfield 38 <java/util/regex/Matcher.first:I> 
  64 iastore
  65 aload_1
  66 nofast_getfield 41 <java/util/regex/Matcher.groups:[I> 
  69 iconst_1
  70 aload_1
  71 nofast_getfield 45 <java/util/regex/Matcher.last:I> 
  74 iastore
  75 iconst_1
  76 ireturn
  77 iinc #2 1
  80 goto 31
  152  bci: 80   JumpData           taken(3409) displacement(-120)
  83 aload_1
  84 iconst_1
  85 nofast_putfield 30 <java/util/regex/Matcher.hitEnd:Z> 
  88 iconst_0
  89 ireturn
Initial CI Blocks

Performing flow analysis on method
<ciMethod name=charAt holder=java/lang/String signature=********************************************************
TypeFlow for (I)Cmatch  90 bytes
--------------------------------------------------------
 loaded=true arg_size=2ciBlock [0 - 13) control : 10:if_icmple
  No Blocks
 flags=public--------------------------------------------------------

 ident=1422 address=0x00007fadac04f8e0>
   0 nofast_aload_0
   1 invokevirtual 487 <java/lang/String.isLatin1()Z> 
  0    bci: 1    VirtualCallData    count(9400) nonprofiled_count(0) entries(0)
   4 ifeq 16
  56   bci: 4    BranchData         taken(0) displacement(48)
                                    not taken(9400)
   7 nofast_aload_0
   8 nofast_getfield 9 <java/lang/String.value:[B> 
  11 iload_1
  12 invokestatic 490 <java/lang/StringLatin1.charAt([BI)C> 
  88   bci: 12   CounterData        count(9400)
  15 ireturn
  16 nofast_aload_0
  17 nofast_getfield 9 <java/lang/String.value:[B> 
  20 iload_1
  21 invokestatic 493 <java/lang/StringUTF16.charAt([BI)C> 
  104  bci: 21   CounterData        count(0)
  24 ireturn
Initial CI Blocks
********************************************************
TypeFlow for --------------------------------------------------------
ciBlock [13 - 20) control : 19:ireturn
  No Blocks
charAt  25 bytes
--------------------------------------------------------
ciBlock [0 - 7) control : --------------------------------------------------------

4:ifeq
  No Blocks
--------------------------------------------------------
ciBlock [20 - 31) control : 31:fall through
--------------------------------------------------------

  No Blocks
--------------------------------------------------------

--------------------------------------------------------
--------------------------------------------------------
ciBlock [7 - 16) control : 15:ireturn
  No Blocks
--------------------------------------------------------
ciBlock [31 - 37) control : 34:if_icmpgt
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [16 - 25) control : 24:ireturn
  No Blocks

--------------------------------------------------------
ciBlock [37 - 50) control : 47:ifeq
--------------------------------------------------------

********************************************************
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [50 - 77) control : 
76:ireturn
  No Blocks
>> Requesting block for 0/{ }--------------------------------------------------------

--------------------------------------------------------

ciBlock [77 - 83) control : 80:goto
  No Blocks
--------------------------------------------------------
>> Created new block
  ====================================================  
  
--------------------------------------------------------
ciBlock [83 - 90) control : [0 - 7) Stored locals: {89:ireturn
  No Blocks
--------------------------------------------------------
 }


********************************************************

  State : locals 2, stack -1, monitors -1
  No successor information
  No predecessor information
>> Requesting block for 0/{ }  No exception information
  ====================================================  
>> Found block [0 - 7)

>> Created new block
>> Created new block
  ====================================================  
  [0 - -1)  ====================================================  
  [0 - 13) Stored locals: { }
 Stored locals: { }

  State : locals 5, stack -1, monitors -1

  State : locals 2, stack -1, monitors -1
  No successor information
  No successor information
  No predecessor information
  No exception information
  No predecessor information
  No exception information
  ====================================================  
  ====================================================  
>> Found block [0 - 13)
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

>> Created new block
  ====================================================  
    State : locals 2, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  

>> ANALYZING BLOCK : 
  ====================================================  
  [0 - -1) Stored locals: {#0  [0 - 7) Stored locals:  }

{ }
  State : locals 5, stack -1, monitors -1
  No successor information
  No predecessor information

  State : locals 2, stack 0, monitors 0
    local  0 :   No exception information
  ====================================================  
>> Created new block
  ====================================================  
  java/lang/String
    local  1 : int
[0 - -1) Stored locals: {  No successor information
  No predecessor information
  No exception information
 }

  ====================================================  
>> Computing exceptions for block #0  [0 - 7)  State : locals 5, stack -1, monitors -1
  No successor information
  No predecessor information

  No exception information
  ====================================================  

>> ANALYZING BLOCK : 
  ====================================================  
  >> Interpreting bytecode 0:aload_0
  State : locals 2, stack 1, monitors 0
    local  0 : #0  java/lang/String
    local  1 : int
[0 - 13) Stored locals:     stack  0 : { }

java/lang/String
>> Interpreting bytecode 1:invokevirtual
  State : locals 5, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$Start
    local  1 :   State : locals 2, stack 1, monitors 0
    local  0 : java/util/regex/Matcher
    local  2 : int
java/lang/String
    local  1 : int
    stack  0 : int    local  3 : 
>> Computing successors for block #0  [0 - 7)java/lang/CharSequence
    local  4 : bottom

  No successor information
  No predecessor information
  No exception information
>> Requesting block for 7/{ }
  ====================================================  
>> Computing exceptions for block #0  [0 - 13)
>> Created new block
  ====================================================  
>> Interpreting bytecode 0:iload_2
  State : locals 5, stack 1, monitors 0
    local  0 :   [7 - 16) Stored locals: { }java/util/regex/Pattern$Start
    local  1 : 

java/util/regex/Matcher
    local  2 : int  State : locals 2, stack -1, monitors -1
  No successor information
  No predecessor information

    local  3 :   No exception information
  ====================================================  
>> Found block [7 - 16)java/lang/CharSequence
    local  4 : 
>> Requesting block for 16/{ bottom
    stack  0 : }
int
>> Interpreting bytecode 1:aload_1
  State : locals 5, stack 2, monitors 0
    local  0 : >> Created new block
  ====================================================  
  [16 - 25) Stored locals: java/util/regex/Pattern$Start
    local  1 : java/util/regex/Matcher
    local  2 : { }
int
    local  3 : 
  State : locals 2, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
java/lang/CharSequence
    local  4 : bottom
>> Found block [16 - 25)
    stack  0 : int
>> Interpreting bytecode 4:ifeq
  State : locals 2, stack 0, monitors 0
    local  0 :     stack  1 : java/lang/String
    local  1 : intjava/util/regex/Matcher

>> Interpreting bytecode 2:getfield

>> ANALYZING BLOCK : 
  ====================================================  
  #1  [16 - 25) Stored locals: { }
  State : locals 5, stack 2, monitors 0
    local  0 : 
  State : locals 2, stack 0, monitors 0
    local  0 : java/lang/String
    local  1 : int
  No successor information
  Predecessors : 1
    java/util/regex/Pattern$Start
    local  1 : #0  [0 - 7)
java/util/regex/Matcher
    local  2 : int  No exception information
  ====================================================  
>> Computing exceptions for block #1  
    local  3 : [16 - 25)
>> Interpreting bytecode 16:aload_0
  State : locals 2, stack 1, monitors 0
    local  0 : java/lang/CharSequence
    local  4 : bottomjava/lang/String
    local  1 : int
    stack  0 : int
    stack  1 : int

    stack  0 : >> Interpreting bytecode 5:aload_0
  State : locals 5, stack 3, monitors 0
    local  0 : java/lang/String
>> Interpreting bytecode 17:getfield
java/util/regex/Pattern$Start
    local  1 : java/util/regex/Matcher
    local  2 :   State : locals 2, stack 1, monitors 0
    local  0 : int
    local  3 : java/lang/String
    local  1 : int
java/lang/CharSequence
    local  4 : bottom
    stack  0 : int    stack  0 : 
    stack  1 : int
[B
>> Interpreting bytecode 20:iload_1
  State : locals 2, stack 2, monitors 0
    local  0 :     stack  2 : java/lang/String
    local  1 : int
java/util/regex/Pattern$Start
>> Interpreting bytecode 6:getfield
    stack  0 : [B
    stack  1 : int
>> Interpreting bytecode 21:invokestatic
  State : locals 5, stack 3, monitors 0
    local  0 : java/util/regex/Pattern$Start
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 :   State : locals 2, stack 1, monitors 0
    local  0 : java/lang/CharSequence
    local  4 : bottomjava/lang/String
    stack  0 : int
    local  1 : int
    stack  0 : int
    stack  1 : int
>> Computing successors for block #1  [16 - 25)
    stack  2 : int

>> Interpreting bytecode 9:isub
  State : locals 5, stack 2, monitors 0
    local  0 : >> Interpreting bytecode 24:ireturn
  State : locals 2, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$Start
    local  1 : java/lang/String
    local  1 : int
java/util/regex/Matcher
    local  2 : int
>> ANALYZING BLOCK : 

    local  3 :   ====================================================  
  #2  java/lang/CharSequence
    local  4 : bottom[7 - 16) Stored locals: {
    stack  0 : int }


    stack  1 : int  State : locals 2, stack 0, monitors 0
    local  0 : 
>> Computing successors for block #0  [0 - 13)java/lang/String
    local  1 : int

  No successor information
  Predecessors : 1
>> Requesting block for 13/{ }    #0  [0 - 7)

  No exception information
  ====================================================  
>> Computing exceptions for block #2  [7 - 16)>> Created new block
  ====================================================  
  [13 - 20) Stored locals: 
{ }
>> Interpreting bytecode 7:aload_0
  State : locals 2, stack 1, monitors 0
    local  0 : 
java/lang/String
    local  1 : int
    stack  0 :   State : locals 5, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
java/lang/String
>> Interpreting bytecode 8:getfield
  ====================================================  
>> Found block [13 - 20)
>> Requesting block for 20/{   State : locals 2, stack 1, monitors 0
    local  0 : }
java/lang/String
    local  1 : int>> Created new block
  ====================================================  
  [20 - 31) Stored locals: {
    stack  0 :  }

[B
>> Interpreting bytecode 11:iload_1
  State : locals 2, stack 2, monitors 0
    local  0 :   State : locals 5, stack -1, monitors -1
  No successor information
  No predecessor information
java/lang/String
    local  1 :   No exception information
  ====================================================  
>> Found block int
    stack  0 : [20 - 31)
>> Interpreting bytecode 10:if_icmple
  State : locals 5, stack 0, monitors 0
    local  0 : [B
    stack  1 : intjava/util/regex/Pattern$Start
    local  1 : 
>> Interpreting bytecode 12:invokestatic
java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 :   State : locals 2, stack 1, monitors 0
    local  0 : bottom
java/lang/String
    local  1 : int
>> ANALYZING BLOCK : 
  ====================================================  
  
    stack  0 : int#1  [20 - 31) Stored locals: {
>> Computing successors for block #2  [7 - 16)
>> Interpreting bytecode 15:ireturn
  State : locals 2, stack 0, monitors 0
    local  0 :  }

java/lang/String
    local  1 : int
  State : locals 5, stack 0, monitors 0
    local  0 : 
Loop tree
0<-0  defs: java/util/regex/Pattern$Start
    local  1 : java/util/regex/Matcher
    local  2 : int{ }

    local  3 : ********************************************************
TypeFlow for java/lang/CharSequence
    local  4 : charAtbottom
  25 bytes
  ====================================================  
  #0    No successor information
  Predecessors : 1
    rpo#0  [0 - 7) Stored locals: {#0  [0 - 13)
 }

  No exception information
  ====================================================  
  State : locals 2, stack 0, monitors 0
    local  0 : >> Computing exceptions for block #1  [20 - 31)java/lang/String
    local  1 : int

  Successors : 2
    #2  >> Interpreting bytecode 20:aload_1
  State : locals 5, stack 1, monitors 0
    local  0 : rpo#1  [7 - 16)
java/util/regex/Pattern$Start
    local  1 :     #1  rpo#2  [16 - 25)java/util/regex/Matcher
    local  2 : int
    local  3 : 
  No predecessor information
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  java/lang/CharSequence
    local  4 : bottom
#2  rpo#1  [7 - 16) Stored locals: { }    stack  0 : 

  State : locals 2, stack 0, monitors 0
    local  0 : java/util/regex/Matcher
>> Interpreting bytecode 21:getfield
java/lang/String
    local  1 : int
  State : locals 5, stack 1, monitors 0
    local  0 :   Successors : 0
  Predecessors : 1
    #0  java/util/regex/Pattern$Start
    local  1 : rpo#0  [0 - 7)
java/util/regex/Matcher
    local  2 : int  Exceptions : 0
  ====================================================  
--------------------------------------------------------


    local  3 :   ====================================================  
  java/lang/CharSequence
    local  4 : bottom#1  rpo#2  [16 - 25) Stored locals: 
    stack  0 : int{ }

>> Interpreting bytecode 24:aload_0
  State : locals 5, stack 2, monitors 0
    local  0 : 
  State : locals 2, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$Start
    local  1 : java/lang/String
    local  1 : int
java/util/regex/Matcher
    local  2 : int  Successors : 0
  Predecessors : 1

    local  3 :     #0  rpo#0  [0 - 7)
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

java/lang/CharSequence
    local  4 : bottom********************************************************


    stack  0 : int
    stack  1 : java/util/regex/Pattern$Start
>> Interpreting bytecode 25:getfield
  State : locals 5, stack 2, monitors 0
    local  0 : java/util/regex/Pattern$Start
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : bottom
    stack  0 : int
    stack  1 : int
>> Interpreting bytecode 28:isub
  State : locals 5, stack 1, monitors 0
    local  0 : java/util/regex/Pattern$Start
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : bottom
    stack  0 : int
>> Interpreting bytecode 29:istore
  State : locals 5, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$Start
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
>> Computing successors for block #1  [20 - 31)
>> Requesting block for 31/{ }
>> Created new block
  ====================================================  
  [31 - 37) Stored locals: { }

  State : locals 5, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [31 - 37)

>> ANALYZING BLOCK : 
  ====================================================  
  #2  [31 - 37) Stored locals: { }

  State : locals 5, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$Start
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
  No successor information
  Predecessors : 1
    #1  [20 - 31)
  No exception information
  ====================================================  
>> Computing exceptions for block #2  [31 - 37)
>> Interpreting bytecode 31:iload_2
  State : locals 5, stack 1, monitors 0
    local  0 : java/util/regex/Pattern$Start
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    stack  0 : int
>> Interpreting bytecode 32:iload
  State : locals 5, stack 2, monitors 0
    local  0 : java/util/regex/Pattern$Start
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    stack  0 : int
    stack  1 : int
>> Computing successors for block #2  [31 - 37)
>> Requesting block for 37/{ }
>> Created new block
  ====================================================  
  [37 - 50) Stored locals: { }

  State : locals 5, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [37 - 50)
>> Requesting block for 83/{ }
>> Created new block
  ====================================================  
  [83 - 90) Stored locals: { }

  State : locals 5, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [83 - 90)
>> Interpreting bytecode 34:if_icmpgt
  State : locals 5, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$Start
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int

>> ANALYZING BLOCK : 
  ====================================================  
  #3  [83 - 90) Stored locals: { }

  State : locals 5, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$Start
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
  No successor information
  Predecessors : 1
    #2  [31 - 37)
  No exception information
  ====================================================  

Performing flow analysis on method
<ciMethod name=>> Computing exceptions for block #3  [83 - 90)isLatin1 holder=
java/lang/String signature=()Z loaded=true arg_size=1 flags=DEFAULT_ACCESS>> Interpreting bytecode 83:aload_1
  State : locals 5, stack 1, monitors 0
    local  0 :  ident=1423 address=0x00007fadac050268>
   0 getstatic 38 <java/lang/String.COMPACT_STRINGS:Z> 
   3 ifeq 17
  0    bci: 3    BranchData         taken(0) displacement(88)
                                    not taken(6190)
   6 nofast_aload_0
   7 nofast_getfield 15 <java/lang/String.coder:B> 
  10 ifne 17
  32   bci: 10   BranchData         taken(0) displacement(56)
                                    not taken(6190)
  13 iconst_1
  14 goto 18
  64   bci: 14   JumpData           taken(6190) displacement(24)
  17 iconst_0
  18 ireturn
Initial CI Blocks
java/util/regex/Pattern$Start
    local  1 : ********************************************************
TypeFlow for java/util/regex/Matcher
    local  2 : intisLatin1  19 bytes
--------------------------------------------------------

    local  3 : java/lang/CharSequence
    local  4 : intciBlock [0 - 6) control : 3:ifeq
  No Blocks

    stack  0 : --------------------------------------------------------

java/util/regex/Matcher
>> Interpreting bytecode 84:iconst_1
  State : locals 5, stack 2, monitors 0
    local  0 : --------------------------------------------------------
ciBlock [6 - 13) control : 10:ifne
  No Blocks
java/util/regex/Pattern$Start
    local  1 : --------------------------------------------------------

java/util/regex/Matcher
    local  2 : int--------------------------------------------------------
ciBlock [13 - 17) control : 14:goto
  No Blocks

    local  3 : --------------------------------------------------------

--------------------------------------------------------
ciBlock [17 - 18) control : java/lang/CharSequence
    local  4 : int
    stack  0 : java/util/regex/Matcher
    stack  1 : int18:fall through
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [18 - 19) control : 18:ireturn

>> Interpreting bytecode 85:putfield
  No Blocks
--------------------------------------------------------

********************************************************

>> Requesting block for 0/{ }
>> Created new block
  ====================================================  
  [0 - 6) Stored locals: {  State : locals 5, stack 0, monitors 0
    local  0 :  }
java/util/regex/Pattern$Start
    local  1 : java/util/regex/Matcher
    local  2 : int
  State : locals 1, stack -1, monitors -1
  No successor information

    local  3 :   No predecessor information
  No exception information
java/lang/CharSequence
    local  4 : int  ====================================================  
>> Found block [0 - 6)

>> Created new block
  ====================================================  
  >> Interpreting bytecode 88:iconst_0
  State : locals 5, stack 1, monitors 0
    local  0 : [0 - -1) Stored locals: {java/util/regex/Pattern$Start
    local  1 :  }

java/util/regex/Matcher
    local  2 : int  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information

    local  3 :   No exception information
  ====================================================  
>> Created new block
  ====================================================  
  java/lang/CharSequence
    local  4 : int[0 - -1) Stored locals: {
    stack  0 : int
 }

>> Computing successors for block #3  [83 - 90)
  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
>> Interpreting bytecode 89:ireturn
  State : locals 5, stack 0, monitors 0
    local  0 :   No exception information
  ====================================================  

>> ANALYZING BLOCK : 
java/util/regex/Pattern$Start
    local  1 : java/util/regex/Matcher
    local  2 : int  ====================================================  
  
    local  3 : #0  [0 - 6) Stored locals: java/lang/CharSequence
    local  4 : int

>> ANALYZING BLOCK : 
  ====================================================  
  { }
#4  [37 - 50) Stored locals: 
  State : locals 1, stack 0, monitors 0
    local  0 : { }
java/lang/String
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Computing exceptions for block #0  [0 - 6)
  State : locals 5, stack 0, monitors 0
    local  0 : 
java/util/regex/Pattern$Start
    local  1 : java/util/regex/Matcher
    local  2 : int>> Interpreting bytecode 0:getstatic

    local  3 : java/lang/CharSequence
    local  4 : int
  No successor information
  Predecessors : 1
  State : locals 1, stack 1, monitors 0
    local  0 :     #2  [31 - 37)
  No exception information
  ====================================================  
java/lang/String
    stack  0 : int>> Computing exceptions for block #4  [37 - 50)
>> Computing successors for block #0  [0 - 6)

>> Interpreting bytecode 37:aload_0
  State : locals 5, stack 1, monitors 0
    local  0 : >> Requesting block for 6/{ }java/util/regex/Pattern$Start
    local  1 : 
java/util/regex/Matcher
    local  2 : >> Created new block
  ====================================================  
  int
[6 - 13) Stored locals: {    local  3 :  }

java/lang/CharSequence
    local  4 : int  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information

    stack  0 :   ====================================================  
>> Found block [6 - 13)
java/util/regex/Pattern$Start
>> Interpreting bytecode 38:getfield
>> Requesting block for 17/{ }
>> Created new block
  ====================================================  
  [17 - 18) Stored locals: { }  State : locals 5, stack 1, monitors 0
    local  0 : 

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block java/util/regex/Pattern$Start
    local  1 : [17 - 18)
>> Interpreting bytecode 3:ifeq
  State : locals 1, stack 0, monitors 0
    local  0 : java/util/regex/Matcher
    local  2 : intjava/lang/String

    local  3 : 
>> ANALYZING BLOCK : java/lang/CharSequence
    local  4 : int
  ====================================================  
  
    stack  0 : #1  [17 - 18) Stored locals: java/util/regex/Pattern$Node
>> Interpreting bytecode 41:aload_1
  State : locals 5, stack 2, monitors 0
    local  0 : { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$Start
    local  1 : java/util/regex/Matcher
    local  2 : intjava/lang/String
  No successor information

    local  3 :   Predecessors : 1
    #0  [0 - 6)java/lang/CharSequence
    local  4 : int

  No exception information
  ====================================================  
    stack  0 : >> Computing exceptions for block #1  [17 - 18)java/util/regex/Pattern$Node
    stack  1 : 
java/util/regex/Matcher
>> Interpreting bytecode 42:iload_2
  State : locals 5, stack 3, monitors 0
    local  0 : >> Interpreting bytecode 17:iconst_0
  State : locals 1, stack 1, monitors 0
    local  0 : java/lang/String
    stack  0 : intjava/util/regex/Pattern$Start
    local  1 : 
>> Computing successors for block #1  [17 - 18)java/util/regex/Matcher
    local  2 : int
    local  3 : 
>> Requesting block for 18/{ java/lang/CharSequence
    local  4 : int}

    stack  0 : >> Created new block
  ====================================================  
  java/util/regex/Pattern$Node
    stack  1 : [18 - 19) Stored locals: {java/util/regex/Matcher
    stack  2 : int }


>> Interpreting bytecode 43:aload_3
  State : locals 5, stack 4, monitors 0
    local  0 :   State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
java/util/regex/Pattern$Start
    local  1 :   ====================================================  
>> Found block [18 - 19)java/util/regex/Matcher
    local  2 : int

>> ANALYZING BLOCK : 

    local  3 : java/lang/CharSequence
    local  4 : int
  ====================================================  
  #2  [18 - 19)    stack  0 :  Stored locals: { }java/util/regex/Pattern$Node
    stack  1 : java/util/regex/Matcher
    stack  2 : 

  State : locals 1, stack 1, monitors 0
int
    local  0 :     stack  3 : java/lang/String
    stack  0 : intjava/lang/CharSequence
>> Interpreting bytecode 44:invokevirtual

  No successor information
  Predecessors : 1
    #1  [17 - 18)
  State : locals 5, stack 1, monitors 0
    local  0 :   No exception information
  ====================================================  
>> Computing exceptions for block #2  [18 - 19)java/util/regex/Pattern$Start
    local  1 : 
>> Computing successors for block #2  [18 - 19)
java/util/regex/Matcher
    local  2 : int>> Interpreting bytecode 18:ireturn
  State : locals 1, stack 0, monitors 0
    local  0 : 
    local  3 : java/lang/String

>> ANALYZING BLOCK : 
  ====================================================  
java/lang/CharSequence
    local  4 : int
    stack  0 : int
  #3  [6 - 13) Stored locals: {>> Computing successors for block #4   }
[37 - 50)

  State : locals 1, stack 0, monitors 0
    local  0 : >> Requesting block for 50/{ }java/lang/String
  No successor information
  Predecessors : 1
    
#0  [0 - 6)
  No exception information
>> Created new block
  ====================================================  
  [50 - 77)  ====================================================  
>> Computing exceptions for block #3   Stored locals: { }

  State : locals 5, stack -1, monitors -1
  No successor information
  No predecessor information
[6 - 13)
  No exception information
  ====================================================  
>> Found block [50 - 77)
>> Requesting block for 77/>> Interpreting bytecode 6:aload_0
  State : locals 1, stack 1, monitors 0
    local  0 : java/lang/String
    stack  0 : { }java/lang/String
>> Interpreting bytecode 7:getfield

>> Created new block
  ====================================================  
  [77 - 83) Stored locals: { }  State : locals 1, stack 1, monitors 0
    local  0 : 

java/lang/String
    stack  0 : int  State : locals 5, stack -1, monitors -1
  No successor information

>> Computing successors for block #3  [6 - 13)  No predecessor information
  No exception information
  ====================================================  

>> Found block [77 - 83)
>> Requesting block for 13/{ }>> Interpreting bytecode 47:ifeq
  State : locals 5, stack 0, monitors 0
    local  0 : 
java/util/regex/Pattern$Start
    local  1 : >> Created new block
  ====================================================  
  [13 - 17) Stored locals: java/util/regex/Matcher
    local  2 : { }

int
    local  3 :   State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
java/lang/CharSequence
    local  4 : int  No exception information
  ====================================================  
>> Found block [13 - 17)

>> Requesting block for 17/{ 
>> ANALYZING BLOCK : 
}
>> Found block #1    ====================================================  
  #5  [17 - 18)
>> Interpreting bytecode 10:ifne
  State : locals 1, stack 0, monitors 0
    local  0 : [77 - 83) Stored locals: {java/lang/String

>> ANALYZING BLOCK : 
  ====================================================  
 }
  #4  [13 - 17) Stored locals: 
  State : locals 5, stack 0, monitors 0
    local  0 : { }
java/util/regex/Pattern$Start
    local  1 : 
  State : locals 1, stack 0, monitors 0
    local  0 : java/util/regex/Matcher
    local  2 : intjava/lang/String
  No successor information

    local  3 :   Predecessors : 1
    #3  java/lang/CharSequence
    local  4 : int
  No successor information
  Predecessors : 1
[6 - 13)
  No exception information
    #4  [37 - 50)
  ====================================================  
>> Computing exceptions for block #4  [13 - 17)  No exception information
  ====================================================  
>> Computing exceptions for block #5  [77 - 83)

>> Interpreting bytecode 77:iinc
  State : locals 5, stack 0, monitors 0
    local  0 : >> Interpreting bytecode 13:iconst_1
  State : locals 1, stack 1, monitors 0
    local  0 : java/util/regex/Pattern$Start
    local  1 : java/lang/String
    stack  0 : java/util/regex/Matcher
    local  2 : intint
>> Computing successors for block 
    local  3 : #4  [13 - 17)
java/lang/CharSequence
    local  4 : int>> Requesting block for 18/{ 
>> Computing successors for block #5  [77 - 83)}
>> Found block #2  
[18 - 19)
>> Interpreting bytecode 14:goto
  State : locals 1, stack 1, monitors 0
    local  0 : >> Requesting block for 31/{ }java/lang/String
    stack  0 : int
>> Found block #2  [31 - 37)

>> Interpreting bytecode 80:goto
  State : locals 5, stack 0, monitors 0
    local  0 : 
Loop tree
0<-0  defs: {java/util/regex/Pattern$Start
    local  1 :  }
********************************************************
TypeFlow for java/util/regex/Matcher
    local  2 : intisLatin1
    local  3 :   19 bytes
  ====================================================  
  java/lang/CharSequence
    local  4 : #0  rpo#0  [0 - 6) Stored locals: int
{ }

>> ANALYZING BLOCK : 
  ====================================================  
  
  State : locals 1, stack 0, monitors 0
    local  0 : #6  [50 - 77) Stored locals: java/lang/String
  Successors : 2
    { }
#3  rpo#1  [6 - 13)
  State : locals 5, stack 0, monitors 0
    local  0 : 
    java/util/regex/Pattern$Start
    local  1 : #1  rpo#3  [17 - 18)
java/util/regex/Matcher
    local  2 : int
    local  3 :   No predecessor information
  Exceptions : 0
  ====================================================  
--------------------------------------------------------
java/lang/CharSequence
    local  4 : 
  ====================================================  
  int
  No successor information
#3  rpo#1  [6 - 13) Stored locals:   Predecessors : 1
    #4  { }
[37 - 50)
  No exception information
  ====================================================  

  State : locals 1, stack 0, monitors 0
    local  0 : >> Computing exceptions for block #6  [50 - 77)
java/lang/String
  Successors : 2
    #4  rpo#2  [13 - 17)>> Interpreting bytecode 50:aload_1
  State : locals 5, stack 1, monitors 0
    local  0 : 
    java/util/regex/Pattern$Start
    local  1 : java/util/regex/Matcher
    local  2 : int#1  rpo#3  [17 - 18)
    local  3 : 
java/lang/CharSequence
    local  4 : int  Predecessors : 1
    #0  rpo#0  
    stack  0 : [0 - 6)
java/util/regex/Matcher
>> Interpreting bytecode 51:iload_2
  State : locals 5, stack 2, monitors 0
    local  0 :   Exceptions : 0
  ====================================================  
--------------------------------------------------------
java/util/regex/Pattern$Start
    local  1 : 
  ====================================================  
  java/util/regex/Matcher
    local  2 : int#4  rpo#2  [13 - 17) Stored locals: 
    local  3 : { }
java/lang/CharSequence
    local  4 : int
    stack  0 : 
  State : locals 1, stack 0, monitors 0
    local  0 : java/util/regex/Matcher
    stack  1 : intjava/lang/String
  Successors : 1
    
>> Interpreting bytecode 52:putfield
#2  rpo#4  [18 - 19)
  Predecessors : 1
    #3  rpo#1  [6 - 13)
  Exceptions : 0
  State : locals 5, stack 0, monitors 0
    local  0 :   ====================================================  
--------------------------------------------------------

java/util/regex/Pattern$Start
    local  1 :   ====================================================  
  #1  java/util/regex/Matcher
    local  2 : intrpo#3  [17 - 18) Stored locals: {
    local  3 :  }

java/lang/CharSequence
    local  4 : int  State : locals 1, stack 0, monitors 0
    local  0 : 
>> Interpreting bytecode 55:aload_1
  State : locals 5, stack 1, monitors 0
    local  0 : java/lang/String
  Successors : 1
    java/util/regex/Pattern$Start
    local  1 : #2  rpo#4  [18 - 19)
java/util/regex/Matcher
    local  2 : int
  Predecessors : 2
        local  3 : #0  rpo#0  [0 - 6)
    #3  rpo#1  java/lang/CharSequence
    local  4 : int[6 - 13)
  Exceptions : 0
  ====================================================  

    stack  0 : --------------------------------------------------------

  ====================================================  
  java/util/regex/Matcher
>> Interpreting bytecode 56:getfield
#2  rpo#4  [18 - 19) Stored locals: { }

  State : locals 5, stack 1, monitors 0
    local  0 :   State : locals 1, stack 1, monitors 0
    local  0 : java/util/regex/Pattern$Start
    local  1 : java/lang/String
    stack  0 : int
java/util/regex/Matcher
    local  2 : int  Successors : 0
  Predecessors : 2

    local  3 :     #1  rpo#3  [17 - 18)
    java/lang/CharSequence
    local  4 : int
#4  rpo#2  [13 - 17)    stack  0 : 
  Exceptions : 0
  ====================================================  
[I
>> Interpreting bytecode 59:iconst_0
  State : locals 5, stack 2, monitors 0
    local  0 : --------------------------------------------------------

********************************************************
java/util/regex/Pattern$Start
    local  1 : java/util/regex/Matcher
    local  2 : int

    local  3 : java/lang/CharSequence
    local  4 : int
    stack  0 : [I
    stack  1 : int
>> Interpreting bytecode 60:aload_1
  State : locals 5, stack 3, monitors 0
    local  0 : java/util/regex/Pattern$Start
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    stack  0 : [I
    stack  1 : int
    stack  2 : java/util/regex/Matcher
>> Interpreting bytecode 61:getfield
  State : locals 5, stack 3, monitors 0
    local  0 : java/util/regex/Pattern$Start
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    stack  0 : [I
    stack  1 : int
    stack  2 : int
>> Interpreting bytecode 64:iastore
  State : locals 5, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$Start
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
>> Interpreting bytecode 65:aload_1
  State : locals 5, stack 1, monitors 0
    local  0 : java/util/regex/Pattern$Start
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    stack  0 : java/util/regex/Matcher
>> Interpreting bytecode 66:getfield
  State : locals 5, stack 1, monitors 0
    local  0 : java/util/regex/Pattern$Start
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    stack  0 : [I
>> Interpreting bytecode 69:iconst_1
  State : locals 5, stack 2, monitors 0
    local  0 : java/util/regex/Pattern$Start
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    stack  0 : [I
    stack  1 : int
>> Interpreting bytecode 70:aload_1
  State : locals 5, stack 3, monitors 0
    local  0 : java/util/regex/Pattern$Start
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    stack  0 : [I
    stack  1 : int
    stack  2 : java/util/regex/Matcher
>> Interpreting bytecode 71:getfield
  State : locals 5, stack 3, monitors 0
    local  0 : java/util/regex/Pattern$Start
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    stack  0 : [I
    stack  1 : int
    stack  2 : int
>> Interpreting bytecode 74:iastore
  State : locals 5, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$Start
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
>> Interpreting bytecode 75:iconst_1
  State : locals 5, stack 1, monitors 0
    local  0 : java/util/regex/Pattern$Start
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    stack  0 : int
>> Computing successors for block #6  [50 - 77)
>> Interpreting bytecode 76:ireturn
  State : locals 5, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$Start
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
>> Adding block #2  [31 - 37) lphd to the work list : 


>> ANALYZING BLOCK : 
  ====================================================  
  #7  [13 - 20) Stored locals: { }

  State : locals 5, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$Start
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : bottom
  No successor information
  Predecessors : 1
    
Performing flow analysis on method
#0  [0 - 13)<ciMethod name=
  No exception information
  ====================================================  
charAt>> Computing exceptions for block #7  [13 - 20) holder=
java/lang/StringLatin1 signature=>> Interpreting bytecode 13:aload_1
  State : locals 5, stack 1, monitors 0
    local  0 : ([BI)Cjava/util/regex/Pattern$Start
    local  1 :  loaded=true arg_size=2 flags=java/util/regex/Matcher
    local  2 : intpublic,static
    local  3 :  ident=1427 address=0x00007fadac050bb0>
java/lang/CharSequence
    local  4 : bottom   0 iload_1
   1 nofast_aload_0
   2 arraylength
   3 invokestatic 9 <java/lang/String.checkIndex(II)V> 
  0    bci: 3    CounterData        count(8683)
   6 nofast_aload_0
   7 iload_1
   8 baload
   9 sipush 255
  12 iand
  13 i2c
  14 ireturn
Initial CI Blocks

    stack  0 : ********************************************************
TypeFlow for java/util/regex/Matcher
>> Interpreting bytecode 14:iconst_1
  State : locals 5, stack 2, monitors 0
    local  0 : charAt  15 bytes
--------------------------------------------------------
java/util/regex/Pattern$Start
    local  1 : ciBlock [0 - 15) control : 14:ireturn
  No Blocks
--------------------------------------------------------

********************************************************

java/util/regex/Matcher
    local  2 : int>> Requesting block for 0/{ }
    local  3 : 
java/lang/CharSequence
    local  4 : bottom
    stack  0 : >> Created new block
  ====================================================  
  java/util/regex/Matcher
    stack  1 : int[0 - 15) Stored locals: {
>> Interpreting bytecode 15:putfield
 }

  State : locals 5, stack 0, monitors 0
    local  0 :   State : locals 2, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
java/util/regex/Pattern$Start
    local  1 : >> Found block [0 - 15)
java/util/regex/Matcher
    local  2 : int
    local  3 : >> Created new block
  ====================================================  
  [0 - -1) Stored locals: {java/lang/CharSequence
    local  4 : bottom }


>> Interpreting bytecode 18:iconst_0
  State : locals 5, stack 1, monitors 0
    local  0 :   State : locals 2, stack -1, monitors -1
  No successor information
  No predecessor information
java/util/regex/Pattern$Start
    local  1 :   No exception information
  ====================================================  
>> Created new block
  ====================================================  
  java/util/regex/Matcher
    local  2 : int
[0 - -1) Stored locals: {    local  3 :  }

java/lang/CharSequence
    local  4 : bottom  State : locals 2, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information

    stack  0 : int  ====================================================  

>> ANALYZING BLOCK : 

>> Computing successors for block #7    ====================================================  
  #0  [0 - 15) Stored locals: {[13 - 20)
>> Interpreting bytecode 19:ireturn
  State : locals 5, stack 0, monitors 0
    local  0 :  }
java/util/regex/Pattern$Start
    local  1 : 
  State : locals 2, stack 0, monitors 0
    local  0 : java/util/regex/Matcher
    local  2 : [B
    local  1 : int
  No successor information
  No predecessor information
  No exception information
int
    local  3 :   ====================================================  
>> Computing exceptions for block #0  [0 - 15)
java/lang/CharSequence
    local  4 : bottom
>> Interpreting bytecode 0:iload_1
  State : locals 2, stack 1, monitors 0
    local  0 : >> Requesting clone of loop head #2  [B
    local  1 : int
    stack  0 : int[31 - 37) lphd
>> Interpreting bytecode 1:aload_0
  State : locals 2, stack 2, monitors 0
    local  0 :   for predecessor #5  [77 - 83)
[B
    local  1 : >> Requesting block for 31/{ int
}
    stack  0 : int
>> Created new block
  ====================================================  
    stack  1 :   [31 - 37) Stored locals: [B
>> Interpreting bytecode 2:arraylength
  State : locals 2, stack 2, monitors 0
    local  0 : [B
    local  1 : int
{ }    stack  0 : int


    stack  1 : int  State : locals 5, stack -1, monitors -1
  No successor information

>> Interpreting bytecode 3:invokestatic
  No predecessor information
  No exception information
  ====================================================  
>> Found block [31 - 37)/backedge_copy
  State : locals 2, stack 0, monitors 0
    local  0 : [B
    local  1 : int
>> ANALYZING BLOCK : 

>> Interpreting bytecode 6:aload_0
  State : locals 2, stack 1, monitors 0
    local  0 :   ====================================================  
  #5  [77 - 83)[B
    local  1 : int
    stack  0 :  Stored locals: { 2[B
>> Interpreting bytecode 7:iload_1
  State : locals 2, stack 2, monitors 0
    local  0 : [B
    local  1 : int
    stack  0 : [B
    stack  1 : int }
 loops: 2<-5
  State : locals 5, stack 0, monitors 0
    local  0 : 
>> Interpreting bytecode 8:baload
  State : locals 2, stack 1, monitors 0
    local  0 : [B
    local  1 : int
java/util/regex/Pattern$Start
    local  1 :     stack  0 : intjava/util/regex/Matcher
    local  2 : int
>> Interpreting bytecode 9:sipush
  State : locals 2, stack 2, monitors 0
    local  0 : 
    local  3 : [B
    local  1 : java/lang/CharSequence
    local  4 : intint
    stack  0 : int
    stack  1 : int
>> Interpreting bytecode 12:iand

  Successors : 1
    #8  [31 - 37)  State : locals 2, stack 1, monitors 0
    local  0 : [B
    local  1 : int
    stack  0 : int
/backedge_copy
>> Interpreting bytecode 13:i2c
  State : locals 2, stack 1, monitors 0
    local  0 :   Predecessors : 1
    [B
    local  1 : int
    stack  0 : int#4  [37 - 50)

>> Computing successors for block #0  [0 - 15)
  Exceptions : 0
  ====================================================  
>> Interpreting bytecode 77:iinc
  State : locals 5, stack 0, monitors 0
    local  0 : >> Interpreting bytecode 14:ireturn
  State : locals 2, stack 0, monitors 0
    local  0 : [B
    local  1 : intjava/util/regex/Pattern$Start
    local  1 : java/util/regex/Matcher
    local  2 : int

Loop tree
0<-0  defs: {
    local  3 :  }
java/lang/CharSequence
    local  4 : int********************************************************
TypeFlow for 
>> Interpreting bytecode 80:goto
  State : locals 5, stack 0, monitors 0
    local  0 : charAt  15 bytes
  ====================================================  
  java/util/regex/Pattern$Start
    local  1 : #0  rpo#0  [0 - 15) Stored locals: java/util/regex/Matcher
    local  2 : int{ }

    local  3 : 
  State : locals 2, stack 0, monitors 0
    local  0 : [B
    local  1 : intjava/lang/CharSequence
    local  4 : int
  Successors : 0
  No predecessor information


>> ANALYZING BLOCK : 
  ====================================================  
    Exceptions : 0
  ====================================================  
--------------------------------------------------------

#8  [31 - 37)/backedge_copy********************************************************

 Stored locals: { }

  State : locals 5, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$Start
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
  No successor information
  Predecessors : 1
    #5  [77 - 83)
  No exception information
  ====================================================  
>> Computing exceptions for block #8  [31 - 37)/backedge_copy
>> Interpreting bytecode 31:iload_2
  State : locals 5, stack 1, monitors 0
    local  0 : java/util/regex/Pattern$Start
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    stack  0 : int
>> Interpreting bytecode 32:iload
  State : locals 5, stack 2, monitors 0
    local  0 : java/util/regex/Pattern$Start
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    stack  0 : int
    stack  1 : int
>> Computing successors for block #8  [31 - 37)/backedge_copy
>> Requesting block for 37/{ }
>> Found block #4  [37 - 50)
>> Requesting block for 83/{ }
>> Found block #3  [83 - 90)
>> Interpreting bytecode 34:if_icmpgt
  State : locals 5, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$Start
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int

Performing flow analysis on method
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 5, stack -1, monitors -1
  No successor information
  No predecessor information
<ciMethod name=  No exception information
  ====================================================  
>> Created new block
  ====================================================  
  checkIndex[0 - -1) Stored locals: { holder= }

java/lang/String signature=(II)V loaded=true arg_size=2 flags=DEFAULT_ACCESS,static  State : locals 5, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
 ident=1431 address=0x00007fadac053d38>
  ====================================================  
   0 iload_0
   1 iload_1
   2 getstatic 1048 <jdk/internal/util/Preconditions.SIOOBE_FORMATTER:Ljava/util/function/BiFunction;> 
   5 invokestatic 1054 <jdk/internal/util/Preconditions.checkIndex(IILjava/util/function/BiFunction;)I> 
  0    bci: 5    CounterData        count(6270)
   8 pop
   9 return
Initial CI Blocks
********************************************************
>> Adding block #4  [37 - 50) lphd to the work list : 


Loop tree
0<-0  defs: {TypeFlow for  2 4 }
 checkIndex  10 bytes
--------------------------------------------------------
 4<-6  defs: {ciBlock [0 - 10) control : 9:return
  No Blocks
--------------------------------------------------------

 2 }
********************************************************


>> ANALYZING BLOCK : 
  ====================================================  
>> Requesting block for 0/{ }
  #4  [37 - 50) lphd Stored locals: { }
>> Created new block
  ====================================================  
   loops: 4<-6
  State : locals 5, stack 0, monitors 0
    local  0 : [0 - 10) Stored locals: java/util/regex/Pattern$Start
    local  1 : { }

  State : locals 2, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
java/util/regex/Matcher
    local  2 : int
  ====================================================  
>> Found block [0 - 10)
    local  3 : >> Created new block
  ====================================================  
  java/lang/CharSequence
    local  4 : [0 - -1) Stored locals: {int
  Successors : 2
     }

#7  [50 - 77)
  State : locals 2, stack -1, monitors -1
  No successor information
  No predecessor information
    #5  [77 - 83)
  No exception information
  ====================================================  
>> Created new block
  ====================================================  
  [0 - -1)  Predecessors : 2
    #2   Stored locals: {[31 - 37)
     }

#6  [31 - 37)/backedge_copy
  State : locals 2, stack -1, monitors -1
  No successor information
  No predecessor information
  Exceptions : 0
  ====================================================  
>> Interpreting bytecode 37:aload_0
  State : locals 5, stack 1, monitors 0
    local  0 :   No exception information
  ====================================================  

>> ANALYZING BLOCK : 
java/util/regex/Pattern$Start
    local  1 :   ====================================================  
  java/util/regex/Matcher
    local  2 : int#0  [0 - 10) Stored locals: {
    local  3 :  }
java/lang/CharSequence
    local  4 : int
  State : locals 2, stack 0, monitors 0
    local  0 : int

    stack  0 :     local  1 : intjava/util/regex/Pattern$Start
>> Interpreting bytecode 38:getfield

  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Computing exceptions for block   State : locals 5, stack 1, monitors 0
    local  0 : #0  [0 - 10)
java/util/regex/Pattern$Start
    local  1 : >> Interpreting bytecode 0:iload_0
  State : locals 2, stack 1, monitors 0
    local  0 : intjava/util/regex/Matcher
    local  2 : int
    local  3 : 
    local  1 : intjava/lang/CharSequence
    local  4 : int

    stack  0 : int    stack  0 : 
>> Interpreting bytecode 1:iload_1
  State : locals 2, stack 2, monitors 0
    local  0 : intjava/util/regex/Pattern$Node
>> Interpreting bytecode 41:aload_1
  State : locals 5, stack 2, monitors 0
    local  0 : 
    local  1 : intjava/util/regex/Pattern$Start
    local  1 : 
    stack  0 : intjava/util/regex/Matcher
    local  2 : int
    stack  1 : int
    local  3 : 
>> Interpreting bytecode 2:getstatic
java/lang/CharSequence
    local  4 : int
    stack  0 : java/util/regex/Pattern$Node
    stack  1 : java/util/regex/Matcher
>> Interpreting bytecode 42:iload_2
  State : locals 2, stack 3, monitors 0
    local  0 : int  State : locals 5, stack 3, monitors 0
    local  0 : 
    local  1 : intjava/util/regex/Pattern$Start
    local  1 : 
    stack  0 : java/util/regex/Matcher
    local  2 : int
int
    stack  1 : int
    stack  2 :     local  3 : java/util/function/BiFunction
>> Interpreting bytecode 5:invokestatic
java/lang/CharSequence
    local  4 : int
    stack  0 : java/util/regex/Pattern$Node
    stack  1 :   State : locals 2, stack 1, monitors 0
    local  0 : int
java/util/regex/Matcher
    stack  2 : int    local  1 : int

>> Interpreting bytecode 43:aload_3
  State : locals 5, stack 4, monitors 0
    local  0 :     stack  0 : int
java/util/regex/Pattern$Start
    local  1 : >> Interpreting bytecode 8:pop
  State : locals 2, stack 0, monitors 0
    local  0 : java/util/regex/Matcher
    local  2 : intint

    local  3 :     local  1 : int
java/lang/CharSequence
    local  4 : int>> Computing successors for block #0  [0 - 10)

    stack  0 : >> Interpreting bytecode 9:return
  State : locals 2, stack 0, monitors 0
    local  0 : intjava/util/regex/Pattern$Node
    stack  1 : 
    local  1 : intjava/util/regex/Matcher
    stack  2 : int


Loop tree
0<-0  defs: {    stack  3 :  }
java/lang/CharSequence
>> Interpreting bytecode 44:invokevirtual
********************************************************
TypeFlow for checkIndex  10 bytes
  ====================================================  
  State : locals 5, stack 1, monitors 0
    local  0 :   #0  rpo#0  [0 - 10) Stored locals: {java/util/regex/Pattern$Start
    local  1 :  }
java/util/regex/Matcher
    local  2 : int
  State : locals 2, stack 0, monitors 0
    local  0 : 
    local  3 : int
    local  1 : java/lang/CharSequence
    local  4 : intint

    stack  0 : int
  Successors : 0
  No predecessor information
>> Interpreting bytecode 47:ifeq
  State : locals 5, stack 0, monitors 0
    local  0 :   Exceptions : 0
  ====================================================  
--------------------------------------------------------

java/util/regex/Pattern$Start
    local  1 : ********************************************************

java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int

>> ANALYZING BLOCK : 
  ====================================================  
  #2  [31 - 37) Stored locals: { }

  State : locals 5, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$Start
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
  Successors : 2
    #4  [37 - 50) lphd
    #3  [83 - 90)
  Predecessors : 1
    #1  [20 - 31)
  Exceptions : 0
  ====================================================  
>> Interpreting bytecode 31:iload_2
  State : locals 5, stack 1, monitors 0
    local  0 : java/util/regex/Pattern$Start
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    stack  0 : int
>> Interpreting bytecode 32:iload
  State : locals 5, stack 2, monitors 0
    local  0 : java/util/regex/Pattern$Start
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    stack  0 : int
    stack  1 : int
>> Interpreting bytecode 34:if_icmpgt
  State : locals 5, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$Start
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
********************************************************
TypeFlow for match  90 bytes
  ====================================================  
  #0  rpo#0  [0 - 13) Stored locals: { }

  State : locals 5, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$Start
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : bottom
  Successors : 2
    #8  rpo#1  [13 - 20)
    #1  rpo#2  [20 - 31)
  No predecessor information
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #8  rpo#1  [13 - 20) Stored locals: { }

  State : locals 5, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$Start
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : bottom
  Successors : 0
  Predecessors : 1
    #0  rpo#0  [0 - 13)
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #1  rpo#2  [20 - 31) Stored locals: { 4 }

  State : locals 5, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$Start
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : bottom
  Successors : 1
    #2  rpo#3  [31 - 37)
  Predecessors : 1
    #0  rpo#0  [0 - 13)
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #2  rpo#3  [31 - 37) Stored locals: { }

  State : locals 5, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$Start
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
  Successors : 2
    #4  rpo#4  [37 - 50) lphd
    #3  rpo#8  [83 - 90)
  Predecessors : 1
    #1  rpo#2  [20 - 31)
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #4  rpo#4  [37 - 50) lphd Stored locals: { }
 loops: 4<-6
  State : locals 5, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$Start
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
  Successors : 2
    #7  rpo#5  [50 - 77)
    #5  rpo#6  [77 - 83)
  Predecessors : 2
    #2  rpo#3  [31 - 37)
Performing flow analysis on method
<ciMethod name=
    #6  rpo#7  [31 - 37)is/backedge_copy
 holder=  Exceptions : 0
  ====================================================  
--------------------------------------------------------

java/util/regex/Pattern$$Lambda+0x80000002a signature=(I)Z loaded=true arg_size=2 flags=public ident=1440 address=0x00007fadac0559b8>
   0 nofast_aload_0
   1 nofast_getfield 15 <java/util/regex/Pattern$$Lambda+0x80000002a.arg$1:I> 
   4 iload_1
   5 invokestatic 23 <java/util/regex/Pattern.lambda$Single$14(II)Z> 
  0    bci: 5    CounterData        count(6848)
   8 ireturn
Initial CI Blocks
  ====================================================  
  #7  rpo#5  [50 - 77) Stored locals: ********************************************************
TypeFlow for { }

is  9 bytes
--------------------------------------------------------
ciBlock [0 - 9) control : 8:ireturn
  No Blocks
  State : locals 5, stack 0, monitors 0
    local  0 : --------------------------------------------------------

java/util/regex/Pattern$Start
    local  1 : java/util/regex/Matcher
    local  2 : int********************************************************


    local  3 : >> Requesting block for 0/{ java/lang/CharSequence
    local  4 : int}
>> Created new block
  ====================================================  
  [0 - 9) Stored locals: {
  Successors : 0
  Predecessors : 1
 }
    #4  rpo#4  
  State : locals 2, stack -1, monitors -1
  No successor information
  No predecessor information
[37 - 50) lphd
  No exception information
  ====================================================  
>> Found block [0 - 9)  Exceptions : 0
  ====================================================  
--------------------------------------------------------


>> Created new block
  ====================================================  
  ====================================================  
  #5    [0 - -1) Stored locals: {rpo#6  [77 - 83) Stored locals: { }

 2 }
 loops:  State : locals 2, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Created new block
  ====================================================  
   4<-6
  State : locals 5, stack 0, monitors 0
[0 - -1) Stored locals: {    local  0 :  }

java/util/regex/Pattern$Start
    local  1 :   State : locals 2, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  

>> ANALYZING BLOCK : 
  ====================================================  
  java/util/regex/Matcher
    local  2 : #0  [0 - 9) Stored locals: int
{ }
    local  3 : 
  State : locals 2, stack 0, monitors 0
    local  0 : java/lang/CharSequence
    local  4 : intjava/util/regex/Pattern$$Lambda+0x80000002a
    local  1 : int
  No successor information
  No predecessor information

  Successors : 1
      No exception information
  ====================================================  
#6  rpo#7  [31 - 37)>> Computing exceptions for block #0  [0 - 9)
/backedge_copy
  Predecessors : 1
    >> Interpreting bytecode 0:aload_0
  State : locals 2, stack 1, monitors 0
    local  0 : #4  rpo#4  [37 - 50) lphdjava/util/regex/Pattern$$Lambda+0x80000002a
    local  1 : int
    stack  0 : 
  Exceptions : 0
  ====================================================  
--------------------------------------------------------
java/util/regex/Pattern$$Lambda+0x80000002a
>> Interpreting bytecode 1:getfield

  ====================================================  
  #6  rpo#7  [31 - 37)/backedge_copy Stored locals: { }
  State : locals 2, stack 1, monitors 0
    local  0 :  loops: 4<-6
  State : locals 5, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$$Lambda+0x80000002a
    local  1 : intjava/util/regex/Pattern$Start
    local  1 : 
    stack  0 : int
java/util/regex/Matcher
    local  2 : int>> Interpreting bytecode 4:iload_1
  State : locals 2, stack 2, monitors 0
    local  0 : 
    local  3 : java/lang/CharSequence
    local  4 : int
java/util/regex/Pattern$$Lambda+0x80000002a
    local  1 :   Successors : 2
    int
    stack  0 : #4  rpo#4  [37 - 50)int
    stack  1 : int lphd
    
>> Interpreting bytecode 5:invokestatic
#3  rpo#8  [83 - 90)
  Predecessors : 1
    #5  rpo#6  [77 - 83)
  Exceptions : 0
  ====================================================  
  State : locals 2, stack 1, monitors 0
    local  0 : --------------------------------------------------------

  ====================================================  
  java/util/regex/Pattern$$Lambda+0x80000002a
    local  1 : int#3  rpo#8  [83 - 90) Stored locals: 
    stack  0 : int
{ }

>> Computing successors for block #0  [0 - 9)
>> Interpreting bytecode 8:ireturn
  State : locals 2, stack 0, monitors 0
    local  0 :   State : locals 5, stack 0, monitors 0
java/util/regex/Pattern$$Lambda+0x80000002a
    local  1 : int

Loop tree
0<-0  defs: {    local  0 :  }
java/util/regex/Pattern$Start
    local  1 : ********************************************************
TypeFlow for is  9 bytes
  ====================================================  
  #0  rpo#0  java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int[0 - 9) Stored locals: 
  Successors : 0
  Predecessors : 2
{ }

  State : locals 2, stack 0, monitors 0
    local  0 :     #2  rpo#3  [31 - 37)java/util/regex/Pattern$$Lambda+0x80000002a
    local  1 : int
    #6  
  Successors : 0
  No predecessor information
  Exceptions : 0
  ====================================================  
rpo#7  [31 - 37)/backedge_copy--------------------------------------------------------

********************************************************

  Exceptions : 0
  ====================================================  
--------------------------------------------------------

********************************************************



Performing flow analysis on method
<ciMethod name=lambda$Single$14 holder=java/util/regex/Pattern signature=(II)Z loaded=true arg_size=2 flags=private,static ident=1442 address=0x00007fadac056488>
   0 iload_1
   1 iload_0
   2 if_icmpne 9
  0    bci: 2    BranchData         taken(5995) displacement(56)
                                    not taken(853)
   5 iconst_1
   6 goto 10
  32   bci: 6    JumpData           taken(853) displacement(24)
   9 iconst_0
  10 ireturn
Initial CI Blocks
********************************************************
TypeFlow for lambda$Single$14  11 bytes
--------------------------------------------------------
ciBlock [0 - 5) control : 2:if_icmpne
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [5 - 9) control : 6:goto
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [9 - 10) control : 10:fall through
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [10 - 11) control : 10:ireturn
  No Blocks
--------------------------------------------------------

********************************************************

>> Requesting block for 0/{ }
>> Created new block
  ====================================================  
  [0 - 5) Stored locals: { }

  State : locals 2, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [0 - 5)
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 2, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 2, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  

>> ANALYZING BLOCK : 
  ====================================================  
  #0  [0 - 5) Stored locals: { }

  State : locals 2, stack 0, monitors 0
    local  0 : int
    local  1 : int
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Computing exceptions for block #0  [0 - 5)
>> Interpreting bytecode 0:iload_1
  State : locals 2, stack 1, monitors 0
    local  0 : int
    local  1 : int
    stack  0 : int
>> Interpreting bytecode 1:iload_0
  State : locals 2, stack 2, monitors 0
    local  0 : int
    local  1 : int
    stack  0 : int
    stack  1 : int
>> Computing successors for block #0  [0 - 5)
>> Requesting block for 5/{ }
>> Created new block
  ====================================================  
  [5 - 9) Stored locals: { }

  State : locals 2, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [5 - 9)
>> Requesting block for 9/{ }
>> Created new block
  ====================================================  
  [9 - 10) Stored locals: { }

  State : locals 2, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [9 - 10)
>> Interpreting bytecode 2:if_icmpne
  State : locals 2, stack 0, monitors 0
    local  0 : int
    local  1 : int

>> ANALYZING BLOCK : 
  ====================================================  
  #1  [9 - 10) Stored locals: { }

  State : locals 2, stack 0, monitors 0
    local  0 : int
    local  1 : int
  No successor information
  Predecessors : 1
    #0  [0 - 5)
  No exception information
  ====================================================  
>> Computing exceptions for block #1  [9 - 10)
>> Interpreting bytecode 9:iconst_0
  State : locals 2, stack 1, monitors 0
    local  0 : int
    local  1 : int
    stack  0 : int
>> Computing successors for block #1  [9 - 10)
>> Requesting block for 10/{ }
>> Created new block
  ====================================================  
  [10 - 11) Stored locals: { }

  State : locals 2, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [10 - 11)

>> ANALYZING BLOCK : 
  ====================================================  
  #2  [10 - 11) Stored locals: { }

  State : locals 2, stack 1, monitors 0
    local  0 : int
    local  1 : int
    stack  0 : int
  No successor information
  Predecessors : 1
    #1  [9 - 10)
  No exception information
  ====================================================  
>> Computing exceptions for block #2  [10 - 11)
>> Computing successors for block #2  [10 - 11)
>> Interpreting bytecode 10:ireturn
  State : locals 2, stack 0, monitors 0
    local  0 : int
    local  1 : int

>> ANALYZING BLOCK : 
  ====================================================  
  #3  [5 - 9) Stored locals: { }

  State : locals 2, stack 0, monitors 0
    local  0 : int
    local  1 : int
  No successor information
  Predecessors : 1
    #0  [0 - 5)
  No exception information
  ====================================================  
>> Computing exceptions for block #3  [5 - 9)
>> Interpreting bytecode 5:iconst_1
  State : locals 2, stack 1, monitors 0
    local  0 : int
    local  1 : int
    stack  0 : int
>> Computing successors for block #3  [5 - 9)
>> Requesting block for 10/{ }
>> Found block #2  [10 - 11)
>> Interpreting bytecode 6:goto
  State : locals 2, stack 1, monitors 0
    local  0 : int
    local  1 : int
    stack  0 : int

Loop tree
0<-0  defs: { }
********************************************************
TypeFlow for lambda$Single$14  11 bytes
  ====================================================  
  #0  rpo#0  [0 - 5) Stored locals: {
Performing flow analysis on method
<ciMethod name= }

  State : locals 2, stack 0, monitors 0
match    local  0 : int
 holder=    local  1 : int
  Successors : 2
    java/util/regex/Pattern$BmpCharPropertyGreedy#3  rpo#1  [5 - 9)
 signature=    #1  rpo#2  (Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z loaded=true arg_size=4 flags=DEFAULT_ACCESS[9 - 10)
  No predecessor information
 ident=1423 address=0x00007fadac059d00>
   0 iconst_0
   1 istore #4
   3 aload_1
   4 nofast_getfield 7 <java/util/regex/Matcher.to:I> 
   7 istore #5
   9 iload_2
  10 nofast_iload #5
  12 if_icmpge 43
  0    bci: 12   BranchData         taken(0) displacement(200)
                                    not taken(6604)
  15 nofast_aload_0
  16 nofast_getfield 13 <java/util/regex/Pattern$BmpCharPropertyGreedy.predicate:Ljava/util/regex/Pattern$CharPredicate;> 
  19 aload_3
  20 iload_2
  21 invokeinterface 19 <java/lang/CharSequence.charAt(I)C> 
  32   bci: 21   VirtualCallData    count(0) nonprofiled_count(0) entries(1)
                                    'java/lang/String'(6604 1.00)
  26 invokeinterface 25 <java/util/regex/Pattern$CharPredicate.is(I)Z> 
  88   bci: 26   VirtualCallData    count(0) nonprofiled_count(0) entries(1)
                                    'java/util/regex/Pattern$$Lambda+0x80000002a'(6604 1.00)
  31 ifeq 43
  144  bci: 31   BranchData         taken(5785) displacement(56)
                                    not taken(819)
  34 iinc #2 1
  37 iinc #4 1
  40 goto 9
  176  bci: 40   JumpData           taken(819) displacement(-176)
  43 iload_2
  44 nofast_iload #5
  46 if_icmplt 54
  200  bci: 46   BranchData         taken(5785) displacement(32)
                                    not taken(0)
  49 aload_1
  50 iconst_1
  51 nofast_putfield 31 <java/util/regex/Matcher.hitEnd:Z> 
  54 nofast_iload #4
  56 nofast_aload_0
  57 nofast_getfield 35 <java/util/regex/Pattern$BmpCharPropertyGreedy.cmin:I> 
  60 if_icmplt 87
  232  bci: 60   BranchData         taken(4966) displacement(144)
                                    not taken(819)
  63 nofast_aload_0
  64 nofast_getfield 38 <java/util/regex/Pattern$BmpCharPropertyGreedy.next:Ljava/util/regex/Pattern$Node;> 
  67 aload_1
  68 iload_2
  69 aload_3
  70 invokevirtual 42 <java/util/regex/Pattern$Node.match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z> 
  264  bci: 70   VirtualCallData    count(0) nonprofiled_count(0) entries(1)
                                    'java/util/regex/Pattern$LastNode'(819 1.00)
  73 ifeq 78
  320  bci: 73   BranchData         taken(0) displacement(32)
                                    not taken(819)
  76 iconst_1
  77 ireturn
  78 iinc #2 -1
  81 iinc #4 -1
  84 goto 54
  352  bci: 84   JumpData           taken(0) displacement(-120)
  87 iconst_0
  88 ireturn
Initial CI Blocks
********************************************************
TypeFlow for   Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #3  match  89 bytes
--------------------------------------------------------
rpo#1  [5 - 9) Stored locals: ciBlock [0 - 9) control : 9:fall through
{ }
  No Blocks
--------------------------------------------------------

  State : locals 2, stack 0, monitors 0
    local  0 : int
    local  1 : int
--------------------------------------------------------
ciBlock [9 - 15) control : 12:if_icmpge
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [15 - 34) control : 31:ifeq
  No Blocks
--------------------------------------------------------

  Successors : 1
    #2  rpo#3  [10 - 11)

--------------------------------------------------------
ciBlock [34 - 43) control : 40:goto
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [43 - 49) control :   Predecessors : 1
    #0  46:if_icmplt
  No Blocks
--------------------------------------------------------
rpo#0  [0 - 5)

--------------------------------------------------------
ciBlock [49 - 54) control : 54:fall through
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  No Blocks
--------------------------------------------------------

  ====================================================  
  #1  --------------------------------------------------------
ciBlock [54 - 63) control : 60:if_icmplt
  No Blocks
rpo#2  [9 - 10) Stored locals: --------------------------------------------------------

--------------------------------------------------------
{ }
ciBlock [63 - 76) control : 73:ifeq
  No Blocks
--------------------------------------------------------

  State : locals 2, stack 0, monitors 0
    local  0 : int

--------------------------------------------------------
ciBlock [76 - 78) control : 77:ireturn
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [78 - 87) control : 84:goto
  No Blocks
    local  1 : int
--------------------------------------------------------

  Successors : 1
    #2  --------------------------------------------------------
ciBlock [87 - 89) control : 88:ireturn
rpo#3  [10 - 11)
  Predecessors : 1
  No Blocks
--------------------------------------------------------

********************************************************

    #0  >> Requesting block for 0/{ }rpo#0  [0 - 5)

  Exceptions : 0
  ====================================================  
--------------------------------------------------------

>> Created new block
  ====================================================  
  [0 - 9) Stored locals: { }

  ====================================================  
    State : locals 6, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [0 - 9)
#2  rpo#3  [10 - 11) Stored locals: {>> Created new block
  ====================================================  
  [0 - -1) Stored locals:  }

{ }

  State : locals 2, stack 1, monitors 0
    local  0 : int  State : locals 6, stack -1, monitors -1
  No successor information
  No predecessor information

    local  1 : int
    stack  0 : int  No exception information
  ====================================================  

  Successors : 0
  Predecessors : 2
    >> Created new block
  ====================================================  
  #1  rpo#2  [9 - 10)
    #3  rpo#1  [0 - -1) Stored locals: { }

[5 - 9)
  State : locals 6, stack -1, monitors -1
  No successor information
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

********************************************************

  No predecessor information
  No exception information
  ====================================================  

>> ANALYZING BLOCK : 
  ====================================================  
  #0  [0 - 9) Stored locals: { }

  State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : bottom
    local  5 : bottom
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Computing exceptions for block #0  [0 - 9)
>> Interpreting bytecode 0:iconst_0
  State : locals 6, stack 1, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : bottom
    local  5 : bottom
    stack  0 : int
>> Interpreting bytecode 1:istore
  State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : bottom
>> Interpreting bytecode 3:aload_1
  State : locals 6, stack 1, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : bottom
    stack  0 : java/util/regex/Matcher
>> Interpreting bytecode 4:getfield
  State : locals 6, stack 1, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : bottom
    stack  0 : int
>> Interpreting bytecode 7:istore
  State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
>> Computing successors for block #0  [0 - 9)
>> Requesting block for 9/{ }
>> Created new block
  ====================================================  
  [9 - 15) Stored locals: { }

  State : locals 6, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [9 - 15)

>> ANALYZING BLOCK : 
  ====================================================  
  #1  [9 - 15) Stored locals: { }

  State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
  No successor information
  Predecessors : 1
    #0  [0 - 9)
  No exception information
  ====================================================  
>> Computing exceptions for block #1  [9 - 15)
>> Interpreting bytecode 9:iload_2
  State : locals 6, stack 1, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
    stack  0 : int
>> Interpreting bytecode 10:iload
  State : locals 6, stack 2, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
    stack  0 : int
    stack  1 : int
>> Computing successors for block #1  [9 - 15)
>> Requesting block for 15/{ }
>> Created new block
  ====================================================  
  [15 - 34) Stored locals: { }

  State : locals 6, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [15 - 34)
>> Requesting block for 43/{ }
>> Created new block
  ====================================================  
  [43 - 49) Stored locals: { }

  State : locals 6, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [43 - 49)
>> Interpreting bytecode 12:if_icmpge
  State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int

>> ANALYZING BLOCK : 
  ====================================================  
  #2  [43 - 49) Stored locals: { }

  State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
  No successor information
  Predecessors : 1
    #1  [9 - 15)
  No exception information
  ====================================================  
>> Computing exceptions for block #2  [43 - 49)
>> Interpreting bytecode 43:iload_2
  State : locals 6, stack 1, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
Performing flow analysis on method
<ciMethod name=
    stack  0 : int
match>> Interpreting bytecode 44:iload
  State : locals 6, stack 2, monitors 0
    local  0 :  holder=java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Pattern$LastNode signature=java/util/regex/Matcher
    local  2 : int(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z loaded=true arg_size=4 flags=DEFAULT_ACCESS
    local  3 : java/lang/CharSequence
    local  4 : int
 ident=1446 address=0x00007fadac0f3510>
   0 aload_1
   1 nofast_getfield 7 <java/util/regex/Matcher.acceptMode:I> 
   4 iconst_1
   5 if_icmpne 18
   8 iload_2
   9 aload_1
  10 nofast_getfield 13 <java/util/regex/Matcher.to:I> 
  13 if_icmpeq 18
  16 iconst_0
  17 ireturn
  18 aload_1
  19 iload_2
  20 nofast_putfield 16 <java/util/regex/Matcher.last:I> 
  23 aload_1
  24 nofast_getfield 19 <java/util/regex/Matcher.groups:[I> 
  27 iconst_0
  28 aload_1
  29 nofast_getfield 23 <java/util/regex/Matcher.first:I> 
  32 iastore
  33 aload_1
  34 nofast_getfield 19 <java/util/regex/Matcher.groups:[I> 
  37 iconst_1
  38 aload_1
  39 nofast_getfield 16 <java/util/regex/Matcher.last:I> 
  42 iastore
  43 iconst_1
  44 ireturn
Initial CI Blocks
    local  5 : int
********************************************************
TypeFlow for     stack  0 : int
match  45 bytes
--------------------------------------------------------
    stack  1 : int
ciBlock [0 - 8) control : 5:if_icmpne
  No Blocks
>> Computing successors for block #2  [43 - 49)
--------------------------------------------------------

>> Requesting block for 49/{ }--------------------------------------------------------
ciBlock [8 - 16) control : 13:if_icmpeq

  No Blocks
--------------------------------------------------------
>> Created new block
  ====================================================  
  
--------------------------------------------------------
ciBlock [16 - 18) control : 17:ireturn
  No Blocks
[49 - 54) Stored locals: {--------------------------------------------------------

--------------------------------------------------------
ciBlock [18 - 45) control :  }
44:ireturn
  No Blocks
--------------------------------------------------------


  State : locals 6, stack -1, monitors -1
  No successor information
  No predecessor information
********************************************************

  No exception information
  ====================================================  
>> Found block [49 - 54)
>> Requesting block for 54/{ >> Requesting block for 0/{ }
}
>> Created new block
  ====================================================  
  [0 - 8)>> Created new block
  ====================================================  
  [54 - 63) Stored locals: { }
 Stored locals: { }

  State : locals 4, stack -1, monitors -1
  No successor information

  State : locals 6, stack -1, monitors -1
  No successor information
  No predecessor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [0 - 8)
  No exception information
  ====================================================  
>> Created new block
  ====================================================  
  >> Found block [54 - 63)
>> Interpreting bytecode 46:if_icmplt
  State : locals 6, stack 0, monitors 0
    local  0 : [0 - -1) Stored locals: java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : { }
java/util/regex/Matcher
    local  2 : int
  State : locals 4, stack -1, monitors -1
  No successor information
  No predecessor information

    local  3 : java/lang/CharSequence
    local  4 : int
  No exception information
  ====================================================  
>> Created new block
  ====================================================  
      local  5 : int
[0 - -1) Stored locals: { }

>> ANALYZING BLOCK : 
  ====================================================  
  
  State : locals 4, stack -1, monitors -1
  No successor information
  No predecessor information
#3  [54 - 63) Stored locals:   No exception information
  ====================================================  

>> ANALYZING BLOCK : 
{ }

  ====================================================  
    State : locals 6, stack 0, monitors 0
    local  0 : #0  [0 - 8) Stored locals: {java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 :  }

java/util/regex/Matcher
    local  2 :   State : locals 4, stack 0, monitors 0
    local  0 : int
    local  3 : java/util/regex/Pattern$LastNodejava/lang/CharSequence
    local  4 : int
    local  1 : 
    local  5 : intjava/util/regex/Matcher
    local  2 : int
  No successor information
  Predecessors : 1

    local  3 : java/lang/CharSequence
  No successor information
  No predecessor information
  No exception information
  ====================================================  
    #2  [43 - 49)
>> Computing exceptions for block #0  [0 - 8)  No exception information
  ====================================================  
>> Computing exceptions for block 
#3  [54 - 63)
>> Interpreting bytecode 0:aload_1
  State : locals 4, stack 1, monitors 0
    local  0 : >> Interpreting bytecode 54:iload
  State : locals 6, stack 1, monitors 0
    local  0 : java/util/regex/Pattern$LastNode
    local  1 : java/util/regex/Pattern$BmpCharPropertyGreedyjava/util/regex/Matcher
    local  2 : 
    local  1 : java/util/regex/Matcher
    local  2 : intint

    local  3 : java/lang/CharSequence
    local  4 : int    local  3 : 
    local  5 : intjava/lang/CharSequence
    stack  0 : 
    stack  0 : int
java/util/regex/Matcher
>> Interpreting bytecode 1:getfield
>> Interpreting bytecode 56:aload_0
  State : locals 6, stack 2, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
  State : locals 4, stack 1, monitors 0
    local  0 :     local  3 : java/util/regex/Pattern$LastNode
    local  1 : java/lang/CharSequence
    local  4 : intjava/util/regex/Matcher
    local  2 : 
    local  5 : intint
    local  3 : 
    stack  0 : intjava/lang/CharSequence
    stack  0 : int
    stack  1 : 
>> Interpreting bytecode 4:iconst_1
  State : locals 4, stack 2, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
>> Interpreting bytecode 57:getfield
java/util/regex/Pattern$LastNode
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    stack  0 : int
    stack  1 : int
>> Computing successors for block #0  [0 - 8)
>> Requesting block for 8/{ }
  State : locals 6, stack 2, monitors 0
    local  0 : >> Created new block
  ====================================================  
  java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : [8 - 16) Stored locals: {java/util/regex/Matcher
    local  2 : int }

  State : locals 4, stack -1, monitors -1

    local  3 : java/lang/CharSequence
    local  4 : int  No successor information
  No predecessor information
  No exception information

    local  5 :   ====================================================  
>> Found block [8 - 16)
>> Requesting block for 18/int
    stack  0 : { }
int
    stack  1 : int
>> Created new block
  ====================================================  
  >> Computing successors for block #3  [54 - 63)
[18 - 45) Stored locals: {>> Requesting block for 63/{ }
 }

>> Created new block
  ====================================================  
  [63 - 76)  State : locals 4, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
 Stored locals: { }  ====================================================  
>> Found block [18 - 45)


>> Interpreting bytecode 5:if_icmpne
  State : locals 4, stack 0, monitors 0
    local  0 :   State : locals 6, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [63 - 76)java/util/regex/Pattern$LastNode
    local  1 : 
>> Requesting block for 87/{ }
java/util/regex/Matcher
    local  2 : int
>> Created new block
  ====================================================  
      local  3 : [87 - 89) Stored locals: {java/lang/CharSequence
 }

  State : locals 6, stack -1, monitors -1
  No successor information
  No predecessor information

>> ANALYZING BLOCK : 
  ====================================================  
  No exception information
  ====================================================  
>> Found block [87 - 89)
  #1  [18 - 45) Stored locals: >> Interpreting bytecode 60:if_icmplt
  State : locals 6, stack 0, monitors 0
    local  0 : { }

java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 :   State : locals 4, stack 0, monitors 0
    local  0 : java/util/regex/Matcher
    local  2 : intjava/util/regex/Pattern$LastNode
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : 
    local  3 : java/lang/CharSequencejava/lang/CharSequence
  No successor information
  Predecessors : 1

    local  4 : int
    #0  [0 - 8)
    local  5 : int
  No exception information
  ====================================================  

>> ANALYZING BLOCK : 
>> Computing exceptions for block #1  [18 - 45)  ====================================================  
  #4  
[87 - 89) Stored locals: {>> Interpreting bytecode 18:aload_1
  State : locals 4, stack 1, monitors 0
    local  0 :  }

java/util/regex/Pattern$LastNode
    local  1 :   State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Matcher
    local  2 : int
java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 :     local  3 : java/util/regex/Matcher
    local  2 : int
java/lang/CharSequence
    stack  0 : java/util/regex/Matcher
>> Interpreting bytecode 19:iload_2
  State : locals 4, stack 2, monitors 0
    local  0 :     local  3 : java/util/regex/Pattern$LastNode
    local  1 : java/util/regex/Matcher
    local  2 : intjava/lang/CharSequence
    local  4 : int
    local  3 : java/lang/CharSequence
    stack  0 : java/util/regex/Matcher
    stack  1 : int
>> Interpreting bytecode 20:putfield

    local  5 : int
  No successor information
  Predecessors : 1
    #3  [54 - 63)
  No exception information
  ====================================================  
  State : locals 4, stack 0, monitors 0
    local  0 : >> Computing exceptions for block #4  [87 - 89)
java/util/regex/Pattern$LastNode
    local  1 : >> Interpreting bytecode 87:iconst_0
  State : locals 6, stack 1, monitors 0
    local  0 : java/util/regex/Matcher
    local  2 : intjava/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : 
    local  3 : int
java/lang/CharSequence
>> Interpreting bytecode 23:aload_1
  State : locals 4, stack 1, monitors 0
    local  0 :     local  3 : java/util/regex/Pattern$LastNode
    local  1 : java/lang/CharSequence
    local  4 : intjava/util/regex/Matcher
    local  2 : 
    local  5 : int
    stack  0 : int
int
>> Computing successors for block #4  [87 - 89)    local  3 : 
java/lang/CharSequence
    stack  0 : java/util/regex/Matcher
>> Interpreting bytecode 24:getfield
>> Interpreting bytecode 88:ireturn
  State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
  State : locals 4, stack 1, monitors 0
    local  0 :     local  1 : java/util/regex/Pattern$LastNodejava/util/regex/Matcher
    local  2 : int
    local  3 : 
    local  1 : java/lang/CharSequence
    local  4 : intjava/util/regex/Matcher
    local  2 : int
    local  5 : int

    local  3 : java/lang/CharSequence
    stack  0 : [I
>> Interpreting bytecode 27:iconst_0
  State : locals 4, stack 2, monitors 0
    local  0 : 
>> ANALYZING BLOCK : 
java/util/regex/Pattern$LastNode
    local  1 :   ====================================================  
  #5  [63 - 76)java/util/regex/Matcher
    local  2 : int
 Stored locals: { }
    local  3 : 
  State : locals 6, stack 0, monitors 0
    local  0 : java/lang/CharSequencejava/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : 
    stack  0 : java/util/regex/Matcher
    local  2 : int
    local  3 : [I
    stack  1 : int
>> Interpreting bytecode 28:aload_1
  State : locals 4, stack 3, monitors 0
    local  0 : java/lang/CharSequence
    local  4 : int
java/util/regex/Pattern$LastNode
    local  1 :     local  5 : intjava/util/regex/Matcher
    local  2 : int
    local  3 : 
  No successor information
  Predecessors : 1
java/lang/CharSequence
    stack  0 :     #3  [54 - 63)
  No exception information
  ====================================================  
>> Computing exceptions for block #5  [63 - 76)[I
    stack  1 : int

    stack  2 : >> Interpreting bytecode 63:aload_0
  State : locals 6, stack 1, monitors 0
    local  0 : java/util/regex/Matcher
>> Interpreting bytecode 29:getfield
java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 :   State : locals 4, stack 3, monitors 0
    local  0 : java/lang/CharSequence
    local  4 : intjava/util/regex/Pattern$LastNode
    local  5 : int
    stack  0 : 
    local  1 : java/util/regex/Pattern$BmpCharPropertyGreedy
>> Interpreting bytecode 64:getfield
java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
  State : locals 6, stack 1, monitors 0
    local  0 :     stack  0 : java/util/regex/Pattern$BmpCharPropertyGreedy[I
    stack  1 : int
    stack  2 : int

    local  1 : >> Interpreting bytecode 32:iastore
  State : locals 4, stack 0, monitors 0
    local  0 : java/util/regex/Matcher
    local  2 : int
java/util/regex/Pattern$LastNode
    local  1 :     local  3 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
>> Interpreting bytecode 33:aload_1
  State : locals 4, stack 1, monitors 0
    local  0 : java/lang/CharSequence
    local  4 : int
    local  5 : intjava/util/regex/Pattern$LastNode
    local  1 : 
    stack  0 : java/util/regex/Matcher
    local  2 : intjava/util/regex/Pattern$Node
>> Interpreting bytecode 67:aload_1
  State : locals 6, stack 2, monitors 0
    local  0 : 
    local  3 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : intjava/lang/CharSequence
    stack  0 : 
    local  3 : java/util/regex/Matcher
>> Interpreting bytecode 34:getfield
java/lang/CharSequence
    local  4 : int  State : locals 4, stack 1, monitors 0
    local  0 : 
    local  5 : intjava/util/regex/Pattern$LastNode
    local  1 : java/util/regex/Matcher
    local  2 : int
    stack  0 : 
    local  3 : java/util/regex/Pattern$Node
    stack  1 : java/lang/CharSequence
    stack  0 : [I
>> Interpreting bytecode 37:iconst_1
  State : locals 4, stack 2, monitors 0
    local  0 : java/util/regex/Matcher
>> Interpreting bytecode 68:iload_2
  State : locals 6, stack 3, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Pattern$LastNode
    local  1 : java/util/regex/Matcher
    local  2 : intjava/util/regex/Matcher
    local  2 : int
    local  3 : 
    local  3 : java/lang/CharSequence
    stack  0 : [I
    stack  1 : int
java/lang/CharSequence
    local  4 : int>> Interpreting bytecode 38:aload_1
  State : locals 4, stack 3, monitors 0
    local  0 : 
    local  5 : int
java/util/regex/Pattern$LastNode
    local  1 :     stack  0 : java/util/regex/Matcher
    local  2 : intjava/util/regex/Pattern$Node
    stack  1 : 
    local  3 : java/util/regex/Matcher
    stack  2 : intjava/lang/CharSequence
    stack  0 : [I
    stack  1 : int

>> Interpreting bytecode 69:aload_3
  State : locals 6, stack 4, monitors 0
    local  0 :     stack  2 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
>> Interpreting bytecode 39:getfield
java/util/regex/Matcher
    local  2 :   State : locals 4, stack 3, monitors 0
    local  0 : int
java/util/regex/Pattern$LastNode
    local  1 :     local  3 : java/util/regex/Matcherjava/lang/CharSequence
    local  4 : int
    local  2 : int
    local  5 : int
    local  3 : 
    stack  0 : java/lang/CharSequence
    stack  0 : [I
    stack  1 : intjava/util/regex/Pattern$Node
    stack  1 : 
    stack  2 : java/util/regex/Matcher
    stack  2 : intint
>> Interpreting bytecode 42:iastore

    stack  3 :   State : locals 4, stack 0, monitors 0
    local  0 : java/lang/CharSequence
>> Interpreting bytecode 70:invokevirtual
java/util/regex/Pattern$LastNode
    local  1 : java/util/regex/Matcher  State : locals 6, stack 1, monitors 0
    local  0 : 
    local  2 : intjava/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int

    local  3 :     local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
java/lang/CharSequence
>> Interpreting bytecode 43:iconst_1
  State : locals 4, stack 1, monitors 0
    local  0 :     stack  0 : int
java/util/regex/Pattern$LastNode
    local  1 : java/util/regex/Matcher
    local  2 : >> Computing successors for block #5  [63 - 76)int
    local  3 : 
java/lang/CharSequence
    stack  0 : int>> Requesting block for 76/{ }
>> Computing successors for block #1  [18 - 45)

>> Created new block
  ====================================================  
  [76 - 78) Stored locals: { }

>> Interpreting bytecode 44:ireturn
  State : locals 4, stack 0, monitors 0
    local  0 :   State : locals 6, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block java/util/regex/Pattern$LastNode
    local  1 : [76 - 78)
>> Requesting block for 78/{ java/util/regex/Matcher
    local  2 : int}
>> Created new block
  ====================================================  
  
    local  3 : [78 - 87) Stored locals: { }
java/lang/CharSequence

>> ANALYZING BLOCK : 

  State : locals 6, stack -1, monitors -1
  ====================================================  
    No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [78 - 87)
#2  [8 - 16) Stored locals: {>> Interpreting bytecode 73:ifeq
  State : locals 6, stack 0, monitors 0
    local  0 :  }
java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : 
  State : locals 4, stack 0, monitors 0
    local  0 : java/util/regex/Matcher
    local  2 : intjava/util/regex/Pattern$LastNode
    local  1 : 
    local  3 : java/util/regex/Matcher
    local  2 : java/lang/CharSequence
    local  4 : intint
    local  3 : 
    local  5 : int
java/lang/CharSequence

>> ANALYZING BLOCK : 
  ====================================================  
  No successor information
  Predecessors : 1
    #0    #6  [78 - 87)[0 - 8)
 Stored locals: { }  No exception information
  ====================================================  
>> Computing exceptions for block #2  [8 - 16)

  State : locals 6, stack 0, monitors 0

    local  0 : >> Interpreting bytecode 8:iload_2
  State : locals 4, stack 1, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Pattern$LastNode
    local  1 : java/util/regex/Matcher
    local  2 : intjava/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int

    local  3 :     local  5 : int
  No successor information
  Predecessors : 1
    #5  java/lang/CharSequence
    stack  0 : int[63 - 76)
  No exception information

>> Interpreting bytecode 9:aload_1
  State : locals 4, stack 2, monitors 0
  ====================================================  
>> Computing exceptions for block #6  [78 - 87)
    local  0 : >> Interpreting bytecode 78:iinc
  State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$LastNode
    local  1 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : intjava/util/regex/Matcher
    local  2 : int
    local  3 : 
    local  3 : java/lang/CharSequence
    stack  0 : java/lang/CharSequence
    local  4 : intint
    stack  1 : 
    local  5 : intjava/util/regex/Matcher
>> Interpreting bytecode 10:getfield

>> Interpreting bytecode 81:iinc
  State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy  State : locals 4, stack 2, monitors 0
    local  0 : 
    local  1 : java/util/regex/Matcher
    local  2 : java/util/regex/Pattern$LastNode
    local  1 : int
java/util/regex/Matcher
    local  2 : int    local  3 : 
    local  3 : java/lang/CharSequence
    local  4 : intjava/lang/CharSequence
    stack  0 : int
    stack  1 : 
    local  5 : intint

>> Computing successors for block #6  [78 - 87)
>> Computing successors for block #2  [8 - 16)
>> Requesting block for 54/{ }>> Requesting block for 16/{ }
>> Found block #3  
[54 - 63)
>> Interpreting bytecode 84:goto
  State : locals 6, stack 0, monitors 0
    local  0 : >> Created new block
java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 :   ====================================================  
  java/util/regex/Matcher
    local  2 : int[16 - 18) Stored locals: 
    local  3 : java/lang/CharSequence
    local  4 : int
{ }
    local  5 : int

  State : locals 4, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  

>> ANALYZING BLOCK : 
  ====================================================  
>> Found block [16 - 18)
  #7  [76 - 78) Stored locals: { }
>> Requesting block for 18/{ }
  State : locals 6, stack 0, monitors 0
    local  0 : 
java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : >> Found block #1  [18 - 45)java/util/regex/Matcher
    local  2 : 
>> Interpreting bytecode 13:if_icmpeq
  State : locals 4, stack 0, monitors 0
    local  0 : int
    local  3 : java/util/regex/Pattern$LastNode
    local  1 : java/lang/CharSequencejava/util/regex/Matcher
    local  2 : int

    local  4 : int    local  3 : 
    local  5 : int
  No successor information
  Predecessors : 1
    java/lang/CharSequence
#5  [63 - 76)

>> ANALYZING BLOCK : 
  ====================================================  
  No exception information
  ====================================================  
>> Computing exceptions for block #7  [76 - 78)  #3  [16 - 18) Stored locals: 
{ }

  State : locals 4, stack 0, monitors 0
    local  0 : >> Interpreting bytecode 76:iconst_1
  State : locals 6, stack 1, monitors 0
    local  0 : java/util/regex/Pattern$LastNode
    local  1 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : intjava/util/regex/Matcher
    local  2 : int

    local  3 :     local  3 : java/lang/CharSequence
  No successor information
  Predecessors : 1
java/lang/CharSequence
    local  4 : int    #2  [8 - 16)
    local  5 : int

  No exception information
  ====================================================  
    stack  0 : int
>> Computing successors for block #7  [76 - 78)>> Computing exceptions for block #3  [16 - 18)

>> Interpreting bytecode 77:ireturn
  State : locals 6, stack 0, monitors 0
    local  0 : >> Interpreting bytecode 16:iconst_0
  State : locals 4, stack 1, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Pattern$LastNode
    local  1 : java/util/regex/Matcher
    local  2 : intjava/util/regex/Matcher
    local  2 : int
    local  3 : 
java/lang/CharSequence
    stack  0 : int
    local  3 : >> Computing successors for block #3  [16 - 18)java/lang/CharSequence
    local  4 : int
    local  5 : int
>> Interpreting bytecode 17:ireturn
  State : locals 4, stack 0, monitors 0
    local  0 : 
java/util/regex/Pattern$LastNode
    local  1 : java/util/regex/Matcher
    local  2 : int
>> Adding block #3  [54 - 63) lphd    local  3 :  to the work list : 


>> ANALYZING BLOCK : 
  ====================================================  
  java/lang/CharSequence
#8  [49 - 54) Stored locals: {
Loop tree
0<-0  defs:  }
{ }
********************************************************
TypeFlow for 
  State : locals 6, stack 0, monitors 0
    local  0 : match  45 bytes
  ====================================================  
  java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int#0  rpo#0  [0 - 8)
    local  3 :  Stored locals: { }
java/lang/CharSequence
    local  4 : int
  State : locals 4, stack 0, monitors 0
    local  0 : 
    local  5 : intjava/util/regex/Pattern$LastNode
    local  1 : 
  No successor information
  Predecessors : 1
    java/util/regex/Matcher
    local  2 : int#2  [43 - 49)

    local  3 :   No exception information
java/lang/CharSequence
  Successors : 2
      ====================================================  
>> Computing exceptions for block #8  [49 - 54)
#2  rpo#1  [8 - 16)
    #1  rpo#3  [18 - 45)>> Interpreting bytecode 49:aload_1
  State : locals 6, stack 1, monitors 0
    local  0 : 
  No predecessor information
java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 :   Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  java/util/regex/Matcher
    local  2 : #2  rpo#1  int
    local  3 : [8 - 16) Stored locals: {java/lang/CharSequence
    local  4 : int
 }

    local  5 : int
  State : locals 4, stack 0, monitors 0
    local  0 :     stack  0 : java/util/regex/Pattern$LastNode
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/util/regex/Matcher
>> Interpreting bytecode 50:iconst_1
  State : locals 6, stack 2, monitors 0
    local  0 : java/lang/CharSequence
  Successors : 2
    #3  rpo#2  [16 - 18)java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : 
    java/util/regex/Matcher
    local  2 : int
#1  rpo#3  [18 - 45)
    local  3 :   Predecessors : 1
    java/lang/CharSequence
    local  4 : int
#0  rpo#0  [0 - 8)    local  5 : int
  Exceptions : 0
  ====================================================  
--------------------------------------------------------


    stack  0 : java/util/regex/Matcher
    stack  1 : int  ====================================================  
  #3  
>> Interpreting bytecode 51:putfield
rpo#2  [16 - 18) Stored locals: { }

  State : locals 4, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$LastNode
    local  1 :   State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Matcher
    local  2 : intjava/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : 
    local  3 : java/lang/CharSequence
  Successors : 0
  Predecessors : 1
    java/util/regex/Matcher
    local  2 : int
#2  rpo#1  [8 - 16)    local  3 : 
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #1  java/lang/CharSequence
    local  4 : intrpo#3  [18 - 45)
    local  5 : int Stored locals: { }

>> Computing successors for block #8  
  State : locals 4, stack 0, monitors 0
    local  0 : [49 - 54)
>> Requesting block for 54/{ }
>> Found block #3  [54 - 63) lphdjava/util/regex/Pattern$LastNode
    local  1 : 
java/util/regex/Matcher
    local  2 : int

>> ANALYZING BLOCK : 
  ====================================================  
    local  3 :   #9  [15 - 34) Stored locals: java/lang/CharSequence
  Successors : 0
  Predecessors : 2
    #0  rpo#0  [0 - 8){ }


      State : locals 6, stack 0, monitors 0
    local  0 : #2  rpo#1  [8 - 16)
java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
  Exceptions : 0
  ====================================================  
    local  3 : --------------------------------------------------------

********************************************************

java/lang/CharSequence
    local  4 : int
    local  5 : int
  No successor information
  Predecessors : 1
    #1  [9 - 15)
  No exception information
  ====================================================  
>> Computing exceptions for block #9  [15 - 34)
>> Interpreting bytecode 15:aload_0
  State : locals 6, stack 1, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
    stack  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
>> Interpreting bytecode 16:getfield
  State : locals 6, stack 1, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
    stack  0 : java/util/regex/Pattern$CharPredicate
>> Interpreting bytecode 19:aload_3
  State : locals 6, stack 2, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
    stack  0 : java/util/regex/Pattern$CharPredicate
    stack  1 : java/lang/CharSequence
>> Interpreting bytecode 20:iload_2
  State : locals 6, stack 3, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
    stack  0 : java/util/regex/Pattern$CharPredicate
    stack  1 : java/lang/CharSequence
    stack  2 : int
>> Interpreting bytecode 21:invokeinterface
  State : locals 6, stack 2, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
    stack  0 : java/util/regex/Pattern$CharPredicate
    stack  1 : int
>> Interpreting bytecode 26:invokeinterface
  State : locals 6, stack 1, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
    stack  0 : int
>> Computing successors for block #9  [15 - 34)
>> Requesting block for 34/{ }
>> Created new block
  ====================================================  
  [34 - 43) Stored locals: { }

  State : locals 6, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [34 - 43)
>> Requesting block for 43/{ }
>> Found block #2  [43 - 49)
>> Interpreting bytecode 31:ifeq
  State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int

>> ANALYZING BLOCK : 
  ====================================================  
  #10 [34 - 43) Stored locals: { }

  State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
  No successor information
  Predecessors : 1
    #9  [15 - 34)
  No exception information
  ====================================================  
>> Computing exceptions for block #10 [34 - 43)
>> Interpreting bytecode 34:iinc
  State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
>> Interpreting bytecode 37:iinc
  State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
>> Computing successors for block #10 [34 - 43)
>> Requesting block for 9/{ }
>> Found block #1  [9 - 15)
>> Interpreting bytecode 40:goto
  State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
>> Adding block #1  [9 - 15) lphd to the work list : 

>> Requesting clone of loop head #1  [9 - 15) lphd  for predecessor #10 [34 - 43)
>> Requesting block for 9/{ }
>> Created new block
  ====================================================  
  [9 - 15) Stored locals: { }

  State : locals 6, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [9 - 15)/backedge_copy

>> ANALYZING BLOCK : 
  ====================================================  
  #10 [34 - 43) Stored locals: { 2 4 }
 loops: 1<-10
  State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
  Successors : 1
    #11 [9 - 15)/backedge_copy
  Predecessors : 1
    #9  [15 - 34)
  Exceptions : 0
  ====================================================  
>> Interpreting bytecode 34:iinc
  State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
>> Interpreting bytecode 37:iinc
  State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
>> Interpreting bytecode 40:goto
  State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int

>> ANALYZING BLOCK : 
  ====================================================  
  #11 [9 - 15)/backedge_copy Stored locals: { }

  State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
  No successor information
  Predecessors : 1
    #10 [34 - 43)
  No exception information
  ====================================================  
>> Computing exceptions for block #11 [9 - 15)/backedge_copy
>> Interpreting bytecode 9:iload_2
  State : locals 6, stack 1, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
    stack  0 : int
>> Interpreting bytecode 10:iload
  State : locals 6, stack 2, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
    stack  0 : int
    stack  1 : int
>> Computing successors for block #11 [9 - 15)/backedge_copy
>> Requesting block for 15/{ }
>> Found block #9  [15 - 34)
>> Requesting block for 43/{ }
>> Found block #2  [43 - 49)
>> Interpreting bytecode 12:if_icmpge
  State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
>> Requesting clone of loop head #3  [54 - 63) lphd  for predecessor #6  [78 - 87)
>> Requesting block for 54/{ }
>> Created new block
  ====================================================  
  [54 - 63) Stored locals: { }

  State : locals 6, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [54 - 63)/backedge_copy

>> ANALYZING BLOCK : 
  ====================================================  
  #6  [78 - 87) Stored locals: { 2 4 }
 loops: 3<-6
  State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
  Successors : 1
    #12 [54 - 63)/backedge_copy
  Predecessors : 1
    #5  [63 - 76)
  Exceptions : 0
  ====================================================  
>> Interpreting bytecode 78:iinc
  State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
>> Interpreting bytecode 81:iinc
  State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
>> Interpreting bytecode 84:goto
  State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int

>> ANALYZING BLOCK : 
  ====================================================  
  #12 [54 - 63)/backedge_copy Stored locals: { }

  State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
  No successor information
  Predecessors : 1
    #6  [78 - 87)
  No exception information
  ====================================================  
>> Computing exceptions for block #12 [54 - 63)/backedge_copy
>> Interpreting bytecode 54:iload
  State : locals 6, stack 1, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
    stack  0 : int
>> Interpreting bytecode 56:aload_0
  State : locals 6, stack 2, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
    stack  0 : int
    stack  1 : java/util/regex/Pattern$BmpCharPropertyGreedy
>> Interpreting bytecode 57:getfield
  State : locals 6, stack 2, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
    stack  0 : int
    stack  1 : int
>> Computing successors for block #12 [54 - 63)/backedge_copy
>> Requesting block for 63/{ }
>> Found block #5  [63 - 76)
>> Requesting block for 87/{ }
>> Found block #4  [87 - 89)
>> Interpreting bytecode 60:if_icmplt
  State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 6, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 6, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Adding block #5  [63 - 76) lphd to the work list : 

>> Adding block #10 [15 - 34) lphd to the work list : 


Loop tree
0<-0  defs: { 2 4 5 }
  10<-12  defs: { 2 4 }
  5<-7  defs: { 2 4 }

>> ANALYZING BLOCK : 
  ====================================================  
  #10 [15 - 34) lphd Stored locals: { }
 loops: 10<-12
  State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
  Successors : 2
    #11 [34 - 43)
    #2  [43 - 49)
  Predecessors : 2
    #1  [9 - 15)
    #12 [9 - 15)/backedge_copy
  Exceptions : 0
  ====================================================  
>> Interpreting bytecode 15:aload_0
  State : locals 6, stack 1, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
    stack  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
>> Interpreting bytecode 16:getfield
  State : locals 6, stack 1, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
    stack  0 : java/util/regex/Pattern$CharPredicate
>> Interpreting bytecode 19:aload_3
  State : locals 6, stack 2, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
    stack  0 : java/util/regex/Pattern$CharPredicate
    stack  1 : java/lang/CharSequence
>> Interpreting bytecode 20:iload_2
  State : locals 6, stack 3, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
    stack  0 : java/util/regex/Pattern$CharPredicate
    stack  1 : java/lang/CharSequence
    stack  2 : int
>> Interpreting bytecode 21:invokeinterface
  State : locals 6, stack 2, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
    stack  0 : java/util/regex/Pattern$CharPredicate
    stack  1 : int
>> Interpreting bytecode 26:invokeinterface
  State : locals 6, stack 1, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
    stack  0 : int
>> Interpreting bytecode 31:ifeq
  State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int

>> ANALYZING BLOCK : 
  ====================================================  
  #5  [63 - 76) lphd Stored locals: { }
 loops: 5<-7
  State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
  Successors : 2
    #8  [76 - 78)
    #6  [78 - 87)
  Predecessors : 2
    #3  [54 - 63)
    #7  [54 - 63)/backedge_copy
  Exceptions : 0
  ====================================================  
>> Interpreting bytecode 63:aload_0
  State : locals 6, stack 1, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
    stack  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
>> Interpreting bytecode 64:getfield
  State : locals 6, stack 1, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
    stack  0 : java/util/regex/Pattern$Node
>> Interpreting bytecode 67:aload_1
  State : locals 6, stack 2, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
    stack  0 : java/util/regex/Pattern$Node
    stack  1 : java/util/regex/Matcher
>> Interpreting bytecode 68:iload_2
  State : locals 6, stack 3, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
    stack  0 : java/util/regex/Pattern$Node
    stack  1 : java/util/regex/Matcher
    stack  2 : int
>> Interpreting bytecode 69:aload_3
  State : locals 6, stack 4, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
    stack  0 : java/util/regex/Pattern$Node
    stack  1 : java/util/regex/Matcher
    stack  2 : int
    stack  3 : java/lang/CharSequence
>> Interpreting bytecode 70:invokevirtual
  State : locals 6, stack 1, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
    stack  0 : int
>> Interpreting bytecode 73:ifeq
  State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int

>> ANALYZING BLOCK : 
  ====================================================  
  #1  [9 - 15) Stored locals: { }

  State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
  Successors : 2
    #10 [15 - 34) lphd
    #2  [43 - 49)
  Predecessors : 1
    #0  [0 - 9)
  Exceptions : 0
  ====================================================  
>> Interpreting bytecode 9:iload_2
  State : locals 6, stack 1, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
    stack  0 : int
>> Interpreting bytecode 10:iload
  State : locals 6, stack 2, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
    stack  0 : int
    stack  1 : int
>> Interpreting bytecode 12:if_icmpge
  State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int

>> ANALYZING BLOCK : 
  ====================================================  
  #3  [54 - 63) Stored locals: { }

  State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
  Successors : 2
    #5  [63 - 76) lphd
    #4  [87 - 89)
  Predecessors : 2
    #2  [43 - 49)
    #9  [49 - 54)
  Exceptions : 0
  ====================================================  
>> Interpreting bytecode 54:iload
  State : locals 6, stack 1, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
    stack  0 : int
>> Interpreting bytecode 56:aload_0
  State : locals 6, stack 2, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
    stack  0 : int
    stack  1 : java/util/regex/Pattern$BmpCharPropertyGreedy
>> Interpreting bytecode 57:getfield
  State : locals 6, stack 2, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
    stack  0 : int
    stack  1 : int
>> Interpreting bytecode 60:if_icmplt
  State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
********************************************************
TypeFlow for match  89 bytes
  ====================================================  
  #0  rpo#0  [0 - 9) Stored locals: { 4 5 }

  State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : bottom
    local  5 : bottom
  Successors : 1
    #1  rpo#1  [9 - 15)
  No predecessor information
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #1  rpo#1  [9 - 15) Stored locals: { }

  State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
  Successors : 2
    #10 rpo#2  [15 - 34) lphd
    #2  rpo#5  [43 - 49)
  Predecessors : 1
    #0  rpo#0  [0 - 9)
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #10 rpo#2  [15 - 34) lphd Stored locals: { }
 loops: 10<-12
  State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
  Successors : 2
    #11 rpo#3  [34 - 43)
    #2  rpo#5  [43 - 49)
  Predecessors : 2
    #1  rpo#1  [9 - 15)
    #12 rpo#4  [9 - 15)/backedge_copy
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #11 rpo#3  [34 - 43) Stored locals: { 2 4 }
 loops: 10<-12
  State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
  Successors : 1
    #12 rpo#4  [9 - 15)/backedge_copy
  Predecessors : 1
    #10 rpo#2  [15 - 34) lphd
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #12 rpo#4  [9 - 15)/backedge_copy Stored locals: { }
 loops: 10<-12
  State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
  Successors : 2
    #10 rpo#2  [15 - 34) lphd
    #2  rpo#5  [43 - 49)
  Predecessors : 1
    #11 rpo#3  [34 - 43)
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #2  rpo#5  [43 - 49) Stored locals: { }

  State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
  Successors : 2
    #9  rpo#6  [49 - 54)
    #3  rpo#7  [54 - 63)
  Predecessors : 3
    #1  rpo#1  [9 - 15)
    #10 rpo#2  [15 - 34) lphd
    #12 rpo#4  [9 - 15)/backedge_copy
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #9  rpo#6  [49 - 54) Stored locals: { }

  State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
  Successors : 1
    #3  rpo#7  [54 - 63)
  Predecessors : 1
    #2  rpo#5  [43 - 49)
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #3  rpo#7  [54 - 63) Stored locals: { }

  State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
  Successors : 2
    #5  rpo#8  [63 - 76) lphd
    #4  rpo#12 [87 - 89)
  Predecessors : 2
    #2  rpo#5  [43 - 49)
    #9  rpo#6  [49 - 54)
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #5  rpo#8  [63 - 76) lphd Stored locals: { }
 loops: 5<-7
  State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
  Successors : 2
    #8  rpo#9  [76 - 78)
    #6  rpo#10 [78 - 87)
  Predecessors : 2
    #3  rpo#7  [54 - 63)
    #7  rpo#11 [54 - 63)/backedge_copy
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #8  rpo#9  [76 - 78) Stored locals: { }

  State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
  Successors : 0
  Predecessors : 1
    #5  rpo#8  [63 - 76) lphd
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #6  rpo#10 [78 - 87) Stored locals: { 2 4 }
 loops: 5<-7
  State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
  Successors : 1
    #7  rpo#11 [54 - 63)/backedge_copy
  Predecessors : 1
    #5  rpo#8  [63 - 76) lphd
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #7  rpo#11 [54 - 63)/backedge_copy Stored locals: { }
 loops: 5<-7
  State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
  Successors : 2
    #5  rpo#8  [63 - 76) lphd
    #4  rpo#12 [87 - 89)
  Predecessors : 1
    #6  rpo#10 [78 - 87)
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #4  rpo#12 [87 - 89) Stored locals: { }

  State : locals 6, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$BmpCharPropertyGreedy
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    local  4 : int
    local  5 : int
  Successors : 0
  Predecessors : 2
    #3  rpo#7  [54 - 63)
    #7  rpo#11 [54 - 63)/backedge_copy
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

********************************************************


Performing flow analysis on method
<ciMethod name=charAt holder=java/lang/String signature=(I)C loaded=true arg_size=2 flags=public ident=1431 address=0x00007fadac05f5a0>
   0 nofast_aload_0
   1 invokevirtual 487 <java/lang/String.isLatin1()Z> 
  0    bci: 1    VirtualCallData    count(9400) nonprofiled_count(0) entries(0)
   4 ifeq 16
  56   bci: 4    BranchData         taken(0) displacement(48)
                                    not taken(9400)
   7 nofast_aload_0
   8 nofast_getfield 9 <java/lang/String.value:[B> 
  11 iload_1
  12 invokestatic 490 <java/lang/StringLatin1.charAt([BI)C> 
  88   bci: 12   CounterData        count(9400)
  15 ireturn
  16 nofast_aload_0
  17 nofast_getfield 9 <java/lang/String.value:[B> 
  20 iload_1
  21 invokestatic 493 <java/lang/StringUTF16.charAt([BI)C> 
  104  bci: 21   CounterData        count(0)
  24 ireturn
Initial CI Blocks
********************************************************
TypeFlow for charAt  25 bytes
--------------------------------------------------------
ciBlock [0 - 7) control : 4:ifeq
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [7 - 16) control : 15:ireturn
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [16 - 25) control : 24:ireturn
  No Blocks
--------------------------------------------------------

********************************************************

>> Requesting block for 0/{ }
>> Created new block
  ====================================================  
  [0 - 7) Stored locals: { }

  State : locals 2, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [0 - 7)
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 2, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 2, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  

>> ANALYZING BLOCK : 
  ====================================================  
  #0  [0 - 7) Stored locals: { }

  State : locals 2, stack 0, monitors 0
    local  0 : java/lang/String
    local  1 : int
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Computing exceptions for block #0  [0 - 7)
>> Interpreting bytecode 0:aload_0
  State : locals 2, stack 1, monitors 0
    local  0 : java/lang/String
    local  1 : int
    stack  0 : java/lang/String
>> Interpreting bytecode 1:invokevirtual
  State : locals 2, stack 1, monitors 0
    local  0 : java/lang/String
    local  1 : int
    stack  0 : int
>> Computing successors for block #0  [0 - 7)
>> Requesting block for 7/{ }
>> Created new block
  ====================================================  
  [7 - 16) Stored locals: { }

  State : locals 2, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [7 - 16)
>> Requesting block for 16/{ }
>> Created new block
  ====================================================  
  [16 - 25) Stored locals: { }

  State : locals 2, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [16 - 25)
>> Interpreting bytecode 4:ifeq
  State : locals 2, stack 0, monitors 0
    local  0 : java/lang/String
    local  1 : int

>> ANALYZING BLOCK : 
  ====================================================  
  #1  [16 - 25) Stored locals: { }

  State : locals 2, stack 0, monitors 0
    local  0 : java/lang/String
    local  1 : int
  No successor information
  Predecessors : 1
    #0  [0 - 7)
  No exception information
  ====================================================  
>> Computing exceptions for block #1  [16 - 25)
>> Interpreting bytecode 16:aload_0
  State : locals 2, stack 1, monitors 0
    local  0 : java/lang/String
    local  1 : int
    stack  0 : java/lang/String
>> Interpreting bytecode 17:getfield
  State : locals 2, stack 1, monitors 0
    local  0 : java/lang/String
    local  1 : int
    stack  0 : [B
>> Interpreting bytecode 20:iload_1
  State : locals 2, stack 2, monitors 0
    local  0 : java/lang/String
    local  1 : int
    stack  0 : [B
    stack  1 : int
>> Interpreting bytecode 21:invokestatic
  State : locals 2, stack 1, monitors 0
    local  0 : java/lang/String
    local  1 : int
    stack  0 : int
>> Computing successors for block #1  [16 - 25)
>> Interpreting bytecode 24:ireturn
  State : locals 2, stack 0, monitors 0
    local  0 : java/lang/String
    local  1 : int

>> ANALYZING BLOCK : 
  ====================================================  
  #2  [7 - 16) Stored locals: { }

  State : locals 2, stack 0, monitors 0
    local  0 : java/lang/String
    local  1 : int
  No successor information
  Predecessors : 1
    #0  [0 - 7)
  No exception information
  ====================================================  
>> Computing exceptions for block #2  [7 - 16)
>> Interpreting bytecode 7:aload_0
  State : locals 2, stack 1, monitors 0
    local  0 : java/lang/String
    local  1 : int
    stack  0 : java/lang/String
>> Interpreting bytecode 8:getfield
  State : locals 2, stack 1, monitors 0
    local  0 : java/lang/String
    local  1 : int
    stack  0 : [B
>> Interpreting bytecode 11:iload_1
  State : locals 2, stack 2, monitors 0
    local  0 : java/lang/String
    local  1 : int
    stack  0 : [B
    stack  1 : int
>> Interpreting bytecode 12:invokestatic
  State : locals 2, stack 1, monitors 0
    local  0 : java/lang/String
    local  1 : int
    stack  0 : int
>> Computing successors for block #2  [7 - 16)
>> Interpreting bytecode 15:ireturn
  State : locals 2, stack 0, monitors 0
    local  0 : java/lang/String
    local  1 : int

Loop tree
0<-0  defs: { }
********************************************************
TypeFlow for charAt  25 bytes
  ====================================================  
  #0  rpo#0  [0 - 7) Stored locals: { }

  State : locals 2, stack 0, monitors 0
    local  0 : java/lang/String
    local  1 : int
  Successors : 2
    #2  rpo#1  [7 - 16)
    #1  rpo#2  [16 - 25)
  No predecessor information
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #2  rpo#1  [7 - 16) Stored locals: { }

  State : locals 2, stack 0, monitors 0
    local  0 : java/lang/String
    local  1 : int
  Successors : 0
  Predecessors : 1
    #0  rpo#0  [0 - 7)
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #1  rpo#2  [16 - 25) Stored locals: { }

  State : locals 2, stack 0, monitors 0
    local  0 : java/lang/String
    local  1 : int
  Successors : 0
  Predecessors : 1
    #0  rpo#0  [0 - 7)
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

********************************************************


Performing flow analysis on method
<ciMethod name=isLatin1 holder=java/lang/String signature=()Z loaded=true arg_size=1 flags=DEFAULT_ACCESS ident=1432 address=0x00007fadac05ff28>
   0 getstatic 38 <java/lang/String.COMPACT_STRINGS:Z> 
   3 ifeq 17
  0    bci: 3    BranchData         taken(0) displacement(88)
                                    not taken(6190)
   6 nofast_aload_0
   7 nofast_getfield 15 <java/lang/String.coder:B> 
  10 ifne 17
  32   bci: 10   BranchData         taken(0) displacement(56)
                                    not taken(6190)
  13 iconst_1
  14 goto 18
  64   bci: 14   JumpData           taken(6190) displacement(24)
  17 iconst_0
  18 ireturn
Initial CI Blocks
********************************************************
TypeFlow for isLatin1  19 bytes
--------------------------------------------------------
ciBlock [0 - 6) control : 3:ifeq
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [6 - 13) control : 10:ifne
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [13 - 17) control : 14:goto
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [17 - 18) control : 18:fall through
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [18 - 19) control : 18:ireturn
  No Blocks
--------------------------------------------------------

********************************************************

>> Requesting block for 0/{ }
>> Created new block
  ====================================================  
  [0 - 6) Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [0 - 6)
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  

>> ANALYZING BLOCK : 
  ====================================================  
  #0  [0 - 6) Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/String
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Computing exceptions for block #0  [0 - 6)
>> Interpreting bytecode 0:getstatic
  State : locals 1, stack 1, monitors 0
    local  0 : java/lang/String
    stack  0 : int
>> Computing successors for block #0  [0 - 6)
>> Requesting block for 6/{ }
>> Created new block
  ====================================================  
  [6 - 13) Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [6 - 13)
>> Requesting block for 17/{ }
>> Created new block
  ====================================================  
  [17 - 18) Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [17 - 18)
>> Interpreting bytecode 3:ifeq
  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/String

>> ANALYZING BLOCK : 
  ====================================================  
  #1  [17 - 18) Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/String
  No successor information
  Predecessors : 1
    #0  [0 - 6)
  No exception information
  ====================================================  
>> Computing exceptions for block #1  [17 - 18)
>> Interpreting bytecode 17:iconst_0
  State : locals 1, stack 1, monitors 0
    local  0 : java/lang/String
    stack  0 : int
>> Computing successors for block #1  [17 - 18)
>> Requesting block for 18/{ }
>> Created new block
  ====================================================  
  [18 - 19) Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [18 - 19)

>> ANALYZING BLOCK : 
  ====================================================  
  #2  [18 - 19) Stored locals: { }

  State : locals 1, stack 1, monitors 0
    local  0 : java/lang/String
    stack  0 : int
  No successor information
  Predecessors : 1
    #1  [17 - 18)
  No exception information
  ====================================================  
>> Computing exceptions for block #2  [18 - 19)
>> Computing successors for block #2  [18 - 19)
>> Interpreting bytecode 18:ireturn
  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/String

>> ANALYZING BLOCK : 
  ====================================================  
  #3  [6 - 13) Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/String
  No successor information
  Predecessors : 1
    #0  [0 - 6)
  No exception information
  ====================================================  
>> Computing exceptions for block #3  [6 - 13)
>> Interpreting bytecode 6:aload_0
  State : locals 1, stack 1, monitors 0
    local  0 : java/lang/String
    stack  0 : java/lang/String
>> Interpreting bytecode 7:getfield
  State : locals 1, stack 1, monitors 0
    local  0 : java/lang/String
    stack  0 : int
>> Computing successors for block #3  [6 - 13)
>> Requesting block for 13/{ }
>> Created new block
  ====================================================  
  [13 - 17) Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [13 - 17)
>> Requesting block for 17/{ }
>> Found block #1  [17 - 18)
>> Interpreting bytecode 10:ifne
  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/String

>> ANALYZING BLOCK : 
  ====================================================  
  #4  [13 - 17) Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/String
  No successor information
  Predecessors : 1
    #3  [6 - 13)
  No exception information
  ====================================================  
>> Computing exceptions for block #4  [13 - 17)
>> Interpreting bytecode 13:iconst_1
  State : locals 1, stack 1, monitors 0
    local  0 : java/lang/String
    stack  0 : int
>> Computing successors for block #4  [13 - 17)
>> Requesting block for 18/{ }
>> Found block #2  [18 - 19)
>> Interpreting bytecode 14:goto
  State : locals 1, stack 1, monitors 0
    local  0 : java/lang/String
    stack  0 : int

Loop tree
0<-0  defs: { }
********************************************************
TypeFlow for isLatin1  19 bytes
  ====================================================  
  #0  rpo#0  [0 - 6) Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/String
  Successors : 2
    #3  rpo#1  [6 - 13)
    #1  rpo#3  [17 - 18)
  No predecessor information
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #3  rpo#1  [6 - 13) Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/String
  Successors : 2
    #4  rpo#2  [13 - 17)
    #1  rpo#3  [17 - 18)
  Predecessors : 1
    #0  rpo#0  [0 - 6)
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #4  rpo#2  [13 - 17) Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/String
  Successors : 1
    #2  rpo#4  [18 - 19)
  Predecessors : 1
    #3  rpo#1  [6 - 13)
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #1  rpo#3  [17 - 18) Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/String
  Successors : 1
    #2  rpo#4  [18 - 19)
  Predecessors : 2
    #0  rpo#0  [0 - 6)
    #3  rpo#1  [6 - 13)
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #2  rpo#4  [18 - 19) Stored locals: { }

  State : locals 1, stack 1, monitors 0
    local  0 : java/lang/String
    stack  0 : int
  Successors : 0
  Predecessors : 2
    #1  rpo#3  [17 - 18)
    #4  rpo#2  [13 - 17)
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

********************************************************


Performing flow analysis on method
<ciMethod name=charAt holder=java/lang/StringLatin1 signature=([BI)C loaded=true arg_size=2 flags=public,static ident=1436 address=0x00007fadac060870>
   0 iload_1
   1 nofast_aload_0
   2 arraylength
   3 invokestatic 9 <java/lang/String.checkIndex(II)V> 
  0    bci: 3    CounterData        count(8683)
   6 nofast_aload_0
   7 iload_1
   8 baload
   9 sipush 255
  12 iand
  13 i2c
  14 ireturn
Initial CI Blocks
********************************************************
TypeFlow for charAt  15 bytes
--------------------------------------------------------
ciBlock [0 - 15) control : 14:ireturn
  No Blocks
--------------------------------------------------------

********************************************************

>> Requesting block for 0/{ }
>> Created new block
  ====================================================  
  [0 - 15) Stored locals: { }

  State : locals 2, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [0 - 15)
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 2, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 2, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  

>> ANALYZING BLOCK : 
  ====================================================  
  #0  [0 - 15) Stored locals: { }

  State : locals 2, stack 0, monitors 0
    local  0 : [B
    local  1 : int
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Computing exceptions for block #0  [0 - 15)
>> Interpreting bytecode 0:iload_1
  State : locals 2, stack 1, monitors 0
    local  0 : [B
    local  1 : int
    stack  0 : int
>> Interpreting bytecode 1:aload_0
  State : locals 2, stack 2, monitors 0
    local  0 : [B
    local  1 : int
    stack  0 : int
    stack  1 : [B
>> Interpreting bytecode 2:arraylength
  State : locals 2, stack 2, monitors 0
    local  0 : [B
    local  1 : int
    stack  0 : int
    stack  1 : int
>> Interpreting bytecode 3:invokestatic
  State : locals 2, stack 0, monitors 0
    local  0 : [B
    local  1 : int
>> Interpreting bytecode 6:aload_0
  State : locals 2, stack 1, monitors 0
    local  0 : [B
    local  1 : int
    stack  0 : [B
>> Interpreting bytecode 7:iload_1
  State : locals 2, stack 2, monitors 0
    local  0 : [B
    local  1 : int
    stack  0 : [B
    stack  1 : int
>> Interpreting bytecode 8:baload
  State : locals 2, stack 1, monitors 0
    local  0 : [B
    local  1 : int
    stack  0 : int
>> Interpreting bytecode 9:sipush
  State : locals 2, stack 2, monitors 0
    local  0 : [B
    local  1 : int
    stack  0 : int
    stack  1 : int
>> Interpreting bytecode 12:iand
  State : locals 2, stack 1, monitors 0
    local  0 : [B
    local  1 : int
    stack  0 : int
>> Interpreting bytecode 13:i2c
  State : locals 2, stack 1, monitors 0
    local  0 : [B
    local  1 : int
    stack  0 : int
>> Computing successors for block #0  [0 - 15)
>> Interpreting bytecode 14:ireturn
  State : locals 2, stack 0, monitors 0
    local  0 : [B
    local  1 : int

Loop tree
0<-0  defs: { }
********************************************************
TypeFlow for charAt  15 bytes
  ====================================================  
  #0  rpo#0  [0 - 15) Stored locals: { }

  State : locals 2, stack 0, monitors 0
    local  0 : [B
    local  1 : int
  Successors : 0
  No predecessor information
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

********************************************************


Performing flow analysis on method
<ciMethod name=checkIndex holder=java/lang/String signature=(II)V loaded=true arg_size=2 flags=DEFAULT_ACCESS,static ident=1440 address=0x00007fad980428b0>
   0 iload_0
   1 iload_1
   2 getstatic 1048 <jdk/internal/util/Preconditions.SIOOBE_FORMATTER:Ljava/util/function/BiFunction;> 
   5 invokestatic 1054 <jdk/internal/util/Preconditions.checkIndex(IILjava/util/function/BiFunction;)I> 
  0    bci: 5    CounterData        count(6270)
   8 pop
   9 return
Initial CI Blocks
********************************************************
TypeFlow for checkIndex  10 bytes
--------------------------------------------------------
ciBlock [0 - 10) control : 9:return
  No Blocks
--------------------------------------------------------

********************************************************

>> Requesting block for 0/{ }
>> Created new block
  ====================================================  
  [0 - 10) Stored locals: { }

  State : locals 2, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [0 - 10)
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 2, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 2, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  

>> ANALYZING BLOCK : 
  ====================================================  
  #0  [0 - 10) Stored locals: { }

  State : locals 2, stack 0, monitors 0
    local  0 : int
    local  1 : int
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Computing exceptions for block #0  [0 - 10)
>> Interpreting bytecode 0:iload_0
  State : locals 2, stack 1, monitors 0
    local  0 : int
    local  1 : int
    stack  0 : int
>> Interpreting bytecode 1:iload_1
  State : locals 2, stack 2, monitors 0
    local  0 : int
    local  1 : int
    stack  0 : int
    stack  1 : int
>> Interpreting bytecode 2:getstatic
  State : locals 2, stack 3, monitors 0
    local  0 : int
    local  1 : int
    stack  0 : int
    stack  1 : int
    stack  2 : java/util/function/BiFunction
>> Interpreting bytecode 5:invokestatic
  State : locals 2, stack 1, monitors 0
    local  0 : int
    local  1 : int
    stack  0 : int
>> Interpreting bytecode 8:pop
  State : locals 2, stack 0, monitors 0
    local  0 : int
    local  1 : int
>> Computing successors for block #0  [0 - 10)
>> Interpreting bytecode 9:return
  State : locals 2, stack 0, monitors 0
    local  0 : int
    local  1 : int

Loop tree
0<-0  defs: { }
********************************************************
TypeFlow for checkIndex  10 bytes
  ====================================================  
  #0  rpo#0  [0 - 10) Stored locals: { }

  State : locals 2, stack 0, monitors 0
    local  0 : int
    local  1 : int
  Successors : 0
  No predecessor information
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

********************************************************


Performing flow analysis on method
<ciMethod name=is holder=java/util/regex/Pattern$$Lambda+0x80000002a signature=(I)Z loaded=true arg_size=2 flags=public ident=1449 address=0x00007fad98044130>
   0 nofast_aload_0
   1 nofast_getfield 15 <java/util/regex/Pattern$$Lambda+0x80000002a.arg$1:I> 
   4 iload_1
   5 invokestatic 23 <java/util/regex/Pattern.lambda$Single$14(II)Z> 
  0    bci: 5    CounterData        count(6848)
   8 ireturn
Initial CI Blocks
********************************************************
TypeFlow for is  9 bytes
--------------------------------------------------------
ciBlock [0 - 9) control : 8:ireturn
  No Blocks
--------------------------------------------------------

********************************************************

>> Requesting block for 0/{ }
>> Created new block
  ====================================================  
  [0 - 9) Stored locals: { }

  State : locals 2, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [0 - 9)
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 2, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 2, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  

>> ANALYZING BLOCK : 
  ====================================================  
  #0  [0 - 9) Stored locals: { }

  State : locals 2, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$$Lambda+0x80000002a
    local  1 : int
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Computing exceptions for block #0  [0 - 9)
>> Interpreting bytecode 0:aload_0
  State : locals 2, stack 1, monitors 0
    local  0 : java/util/regex/Pattern$$Lambda+0x80000002a
    local  1 : int
    stack  0 : java/util/regex/Pattern$$Lambda+0x80000002a
>> Interpreting bytecode 1:getfield
  State : locals 2, stack 1, monitors 0
    local  0 : java/util/regex/Pattern$$Lambda+0x80000002a
    local  1 : int
    stack  0 : int
>> Interpreting bytecode 4:iload_1
  State : locals 2, stack 2, monitors 0
    local  0 : java/util/regex/Pattern$$Lambda+0x80000002a
    local  1 : int
    stack  0 : int
    stack  1 : int
>> Interpreting bytecode 5:invokestatic
  State : locals 2, stack 1, monitors 0
    local  0 : java/util/regex/Pattern$$Lambda+0x80000002a
    local  1 : int
    stack  0 : int
>> Computing successors for block #0  [0 - 9)
>> Interpreting bytecode 8:ireturn
  State : locals 2, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$$Lambda+0x80000002a
    local  1 : int

Loop tree
0<-0  defs: { }
********************************************************
TypeFlow for is  9 bytes
  ====================================================  
  #0  rpo#0  [0 - 9) Stored locals: { }

  State : locals 2, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$$Lambda+0x80000002a
    local  1 : int
  Successors : 0
  No predecessor information
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

********************************************************


Performing flow analysis on method
<ciMethod name=lambda$Single$14 holder=java/util/regex/Pattern signature=(II)Z loaded=true arg_size=2 flags=private,static ident=1450 address=0x00007fad98045b50>
   0 iload_1
   1 iload_0
   2 if_icmpne 9
  0    bci: 2    BranchData         taken(5995) displacement(56)
                                    not taken(853)
   5 iconst_1
   6 goto 10
  32   bci: 6    JumpData           taken(853) displacement(24)
   9 iconst_0
  10 ireturn
Initial CI Blocks
********************************************************
TypeFlow for lambda$Single$14  11 bytes
--------------------------------------------------------
ciBlock [0 - 5) control : 2:if_icmpne
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [5 - 9) control : 6:goto
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [9 - 10) control : 10:fall through
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [10 - 11) control : 10:ireturn
  No Blocks
--------------------------------------------------------

********************************************************

>> Requesting block for 0/{ }
>> Created new block
  ====================================================  
  [0 - 5) Stored locals: { }

  State : locals 2, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [0 - 5)
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 2, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 2, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  

>> ANALYZING BLOCK : 
  ====================================================  
  #0  [0 - 5) Stored locals: { }

  State : locals 2, stack 0, monitors 0
    local  0 : int
    local  1 : int
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Computing exceptions for block #0  [0 - 5)
>> Interpreting bytecode 0:iload_1
  State : locals 2, stack 1, monitors 0
    local  0 : int
    local  1 : int
    stack  0 : int
>> Interpreting bytecode 1:iload_0
  State : locals 2, stack 2, monitors 0
    local  0 : int
    local  1 : int
    stack  0 : int
    stack  1 : int
>> Computing successors for block #0  [0 - 5)
>> Requesting block for 5/{ }
>> Created new block
  ====================================================  
  [5 - 9) Stored locals: { }

  State : locals 2, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [5 - 9)
>> Requesting block for 9/{ }
>> Created new block
  ====================================================  
  [9 - 10) Stored locals: { }

  State : locals 2, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [9 - 10)
>> Interpreting bytecode 2:if_icmpne
  State : locals 2, stack 0, monitors 0
    local  0 : int
    local  1 : int

>> ANALYZING BLOCK : 
  ====================================================  
  #1  [9 - 10) Stored locals: { }

  State : locals 2, stack 0, monitors 0
    local  0 : int
    local  1 : int
  No successor information
  Predecessors : 1
    #0  [0 - 5)
  No exception information
  ====================================================  
>> Computing exceptions for block #1  [9 - 10)
>> Interpreting bytecode 9:iconst_0
  State : locals 2, stack 1, monitors 0
    local  0 : int
    local  1 : int
    stack  0 : int
>> Computing successors for block #1  [9 - 10)
>> Requesting block for 10/{ }
>> Created new block
  ====================================================  
  [10 - 11) Stored locals: { }

  State : locals 2, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [10 - 11)

>> ANALYZING BLOCK : 
  ====================================================  
  #2  [10 - 11) Stored locals: { }

  State : locals 2, stack 1, monitors 0
    local  0 : int
    local  1 : int
    stack  0 : int
  No successor information
  Predecessors : 1
    #1  [9 - 10)
  No exception information
  ====================================================  
>> Computing exceptions for block #2  [10 - 11)
>> Computing successors for block #2  [10 - 11)
>> Interpreting bytecode 10:ireturn
  State : locals 2, stack 0, monitors 0
    local  0 : int
    local  1 : int

>> ANALYZING BLOCK : 
  ====================================================  
  #3  [5 - 9) Stored locals: { }

  State : locals 2, stack 0, monitors 0
    local  0 : int
    local  1 : int
  No successor information
  Predecessors : 1
    #0  [0 - 5)
  No exception information
  ====================================================  
>> Computing exceptions for block #3  [5 - 9)
>> Interpreting bytecode 5:iconst_1
  State : locals 2, stack 1, monitors 0
    local  0 : int
    local  1 : int
    stack  0 : int
>> Computing successors for block #3  [5 - 9)
>> Requesting block for 10/{ }
>> Found block #2  [10 - 11)
>> Interpreting bytecode 6:goto
  State : locals 2, stack 1, monitors 0
    local  0 : int
    local  1 : int
    stack  0 : int

Loop tree
0<-0  defs: { }
********************************************************
TypeFlow for lambda$Single$14  11 bytes
  ====================================================  
  #0  rpo#0  [0 - 5) Stored locals: { }

  State : locals 2, stack 0, monitors 0
    local  0 : int
    local  1 : int
  Successors : 2
    #3  rpo#1  [5 - 9)
    #1  rpo#2  [9 - 10)
  No predecessor information
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #3  rpo#1  [5 - 9) Stored locals: { }

  State : locals 2, stack 0, monitors 0
    local  0 : int
    local  1 : int
  Successors : 1
    #2  rpo#3  [10 - 11)
  Predecessors : 1
    #0  rpo#0  [0 - 5)
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #1  rpo#2  [9 - 10) Stored locals: { }

  State : locals 2, stack 0, monitors 0
    local  0 : int
    local  1 : int
  Successors : 1
    #2  rpo#3  [10 - 11)
  Predecessors : 1
    #0  rpo#0  [0 - 5)
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #2  rpo#3  [10 - 11) Stored locals: { }

  State : locals 2, stack 1, monitors 0
    local  0 : int
    local  1 : int
    stack  0 : int
  Successors : 0
  Predecessors : 2
    #1  rpo#2  [9 - 10)
    #3  rpo#1  [5 - 9)
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

********************************************************


Performing flow analysis on method
<ciMethod name=match holder=java/util/regex/Pattern$LastNode signature=(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z loaded=true arg_size=4 flags=DEFAULT_ACCESS ident=1454 address=0x00007fad98047d60>
   0 aload_1
   1 nofast_getfield 7 <java/util/regex/Matcher.acceptMode:I> 
   4 iconst_1
   5 if_icmpne 18
   8 iload_2
   9 aload_1
  10 nofast_getfield 13 <java/util/regex/Matcher.to:I> 
  13 if_icmpeq 18
  16 iconst_0
  17 ireturn
  18 aload_1
  19 iload_2
  20 nofast_putfield 16 <java/util/regex/Matcher.last:I> 
  23 aload_1
  24 nofast_getfield 19 <java/util/regex/Matcher.groups:[I> 
  27 iconst_0
  28 aload_1
  29 nofast_getfield 23 <java/util/regex/Matcher.first:I> 
  32 iastore
  33 aload_1
  34 nofast_getfield 19 <java/util/regex/Matcher.groups:[I> 
  37 iconst_1
  38 aload_1
  39 nofast_getfield 16 <java/util/regex/Matcher.last:I> 
  42 iastore
  43 iconst_1
  44 ireturn
Initial CI Blocks
********************************************************
TypeFlow for match  45 bytes
--------------------------------------------------------
ciBlock [0 - 8) control : 5:if_icmpne
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [8 - 16) control : 13:if_icmpeq
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [16 - 18) control : 17:ireturn
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [18 - 45) control : 44:ireturn
  No Blocks
--------------------------------------------------------

********************************************************

>> Requesting block for 0/{ }
>> Created new block
  ====================================================  
  [0 - 8) Stored locals: { }

  State : locals 4, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [0 - 8)
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 4, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 4, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  

>> ANALYZING BLOCK : 
  ====================================================  
  #0  [0 - 8) Stored locals: { }

  State : locals 4, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$LastNode
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Computing exceptions for block #0  [0 - 8)
>> Interpreting bytecode 0:aload_1
  State : locals 4, stack 1, monitors 0
    local  0 : java/util/regex/Pattern$LastNode
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    stack  0 : java/util/regex/Matcher
>> Interpreting bytecode 1:getfield
  State : locals 4, stack 1, monitors 0
    local  0 : java/util/regex/Pattern$LastNode
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    stack  0 : int
>> Interpreting bytecode 4:iconst_1
  State : locals 4, stack 2, monitors 0
    local  0 : java/util/regex/Pattern$LastNode
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    stack  0 : int
    stack  1 : int
>> Computing successors for block #0  [0 - 8)
>> Requesting block for 8/{ }
>> Created new block
  ====================================================  
  [8 - 16) Stored locals: { }

  State : locals 4, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [8 - 16)
>> Requesting block for 18/{ }
>> Created new block
  ====================================================  
  [18 - 45) Stored locals: { }

  State : locals 4, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [18 - 45)
>> Interpreting bytecode 5:if_icmpne
  State : locals 4, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$LastNode
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence

>> ANALYZING BLOCK : 
  ====================================================  
  #1  [18 - 45) Stored locals: { }

  State : locals 4, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$LastNode
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
  No successor information
  Predecessors : 1
    #0  [0 - 8)
  No exception information
  ====================================================  
>> Computing exceptions for block #1  [18 - 45)
>> Interpreting bytecode 18:aload_1
  State : locals 4, stack 1, monitors 0
    local  0 : java/util/regex/Pattern$LastNode
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    stack  0 : java/util/regex/Matcher
>> Interpreting bytecode 19:iload_2
  State : locals 4, stack 2, monitors 0
    local  0 : java/util/regex/Pattern$LastNode
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    stack  0 : java/util/regex/Matcher
    stack  1 : int
>> Interpreting bytecode 20:putfield
  State : locals 4, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$LastNode
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
>> Interpreting bytecode 23:aload_1
  State : locals 4, stack 1, monitors 0
    local  0 : java/util/regex/Pattern$LastNode
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    stack  0 : java/util/regex/Matcher
>> Interpreting bytecode 24:getfield
  State : locals 4, stack 1, monitors 0
    local  0 : java/util/regex/Pattern$LastNode
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    stack  0 : [I
>> Interpreting bytecode 27:iconst_0
  State : locals 4, stack 2, monitors 0
    local  0 : java/util/regex/Pattern$LastNode
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    stack  0 : [I
    stack  1 : int
>> Interpreting bytecode 28:aload_1
  State : locals 4, stack 3, monitors 0
    local  0 : java/util/regex/Pattern$LastNode
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    stack  0 : [I
    stack  1 : int
    stack  2 : java/util/regex/Matcher
>> Interpreting bytecode 29:getfield
  State : locals 4, stack 3, monitors 0
    local  0 : java/util/regex/Pattern$LastNode
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    stack  0 : [I
    stack  1 : int
    stack  2 : int
>> Interpreting bytecode 32:iastore
  State : locals 4, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$LastNode
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
>> Interpreting bytecode 33:aload_1
  State : locals 4, stack 1, monitors 0
    local  0 : java/util/regex/Pattern$LastNode
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    stack  0 : java/util/regex/Matcher
>> Interpreting bytecode 34:getfield
  State : locals 4, stack 1, monitors 0
    local  0 : java/util/regex/Pattern$LastNode
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    stack  0 : [I
>> Interpreting bytecode 37:iconst_1
  State : locals 4, stack 2, monitors 0
    local  0 : java/util/regex/Pattern$LastNode
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    stack  0 : [I
    stack  1 : int
>> Interpreting bytecode 38:aload_1
  State : locals 4, stack 3, monitors 0
    local  0 : java/util/regex/Pattern$LastNode
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    stack  0 : [I
    stack  1 : int
    stack  2 : java/util/regex/Matcher
>> Interpreting bytecode 39:getfield
  State : locals 4, stack 3, monitors 0
    local  0 : java/util/regex/Pattern$LastNode
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    stack  0 : [I
    stack  1 : int
    stack  2 : int
>> Interpreting bytecode 42:iastore
  State : locals 4, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$LastNode
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
>> Interpreting bytecode 43:iconst_1
  State : locals 4, stack 1, monitors 0
    local  0 : java/util/regex/Pattern$LastNode
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    stack  0 : int
>> Computing successors for block #1  [18 - 45)
>> Interpreting bytecode 44:ireturn
  State : locals 4, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$LastNode
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence

>> ANALYZING BLOCK : 
  ====================================================  
  #2  [8 - 16) Stored locals: { }

  State : locals 4, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$LastNode
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
  No successor information
  Predecessors : 1
    #0  [0 - 8)
  No exception information
  ====================================================  
>> Computing exceptions for block #2  [8 - 16)
>> Interpreting bytecode 8:iload_2
  State : locals 4, stack 1, monitors 0
    local  0 : java/util/regex/Pattern$LastNode
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    stack  0 : int
>> Interpreting bytecode 9:aload_1
  State : locals 4, stack 2, monitors 0
    local  0 : java/util/regex/Pattern$LastNode
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    stack  0 : int
    stack  1 : java/util/regex/Matcher
>> Interpreting bytecode 10:getfield
  State : locals 4, stack 2, monitors 0
    local  0 : java/util/regex/Pattern$LastNode
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    stack  0 : int
    stack  1 : int
>> Computing successors for block #2  [8 - 16)
>> Requesting block for 16/{ }
>> Created new block
  ====================================================  
  [16 - 18) Stored locals: { }

  State : locals 4, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [16 - 18)
>> Requesting block for 18/{ }
>> Found block #1  [18 - 45)
>> Interpreting bytecode 13:if_icmpeq
  State : locals 4, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$LastNode
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence

>> ANALYZING BLOCK : 
  ====================================================  
  #3  [16 - 18) Stored locals: { }

  State : locals 4, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$LastNode
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
  No successor information
  Predecessors : 1
    #2  [8 - 16)
  No exception information
  ====================================================  
>> Computing exceptions for block #3  [16 - 18)
>> Interpreting bytecode 16:iconst_0
  State : locals 4, stack 1, monitors 0
    local  0 : java/util/regex/Pattern$LastNode
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
    stack  0 : int
>> Computing successors for block #3  [16 - 18)
>> Interpreting bytecode 17:ireturn
  State : locals 4, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$LastNode
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence

Loop tree
0<-0  defs: { }
********************************************************
TypeFlow for match  45 bytes
  ====================================================  
  #0  rpo#0  [0 - 8) Stored locals: { }

  State : locals 4, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$LastNode
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
  Successors : 2
    #2  rpo#1  [8 - 16)
    #1  rpo#3  [18 - 45)
  No predecessor information
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #2  rpo#1  [8 - 16) Stored locals: { }

  State : locals 4, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$LastNode
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
  Successors : 2
    #3  rpo#2  [16 - 18)
    #1  rpo#3  [18 - 45)
  Predecessors : 1
    #0  rpo#0  [0 - 8)
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #3  rpo#2  [16 - 18) Stored locals: { }

  State : locals 4, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$LastNode
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
  Successors : 0
  Predecessors : 1
    #2  rpo#1  [8 - 16)
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #1  rpo#3  [18 - 45) Stored locals: { }

  State : locals 4, stack 0, monitors 0
    local  0 : java/util/regex/Pattern$LastNode
    local  1 : java/util/regex/Matcher
    local  2 : int
    local  3 : java/lang/CharSequence
  Successors : 0
  Predecessors : 2
    #0  rpo#0  [0 - 8)
    #2  rpo#1  [8 - 16)
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

********************************************************


Performing flow analysis on method
<ciMethod name=type holder=java/lang/invoke/MethodHandle signature=()Ljava/lang/invoke/MethodType; loaded=true arg_size=1 flags=public ident=1409 address=0x00007fad980d72a0>
   0 nofast_aload_0
   1 nofast_getfield 3 <java/lang/invoke/MethodHandle.type:Ljava/lang/invoke/MethodType;> 
   4 areturn
Initial CI Blocks
********************************************************
TypeFlow for type  5 bytes
--------------------------------------------------------
ciBlock [0 - 5) control : 4:areturn
  No Blocks
--------------------------------------------------------

********************************************************

>> Requesting block for 0/{ }
>> Created new block
  ====================================================  
  [0 - 5) Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [0 - 5)
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  

>> ANALYZING BLOCK : 
  ====================================================  
  #0  [0 - 5) Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/invoke/MethodHandle
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Computing exceptions for block #0  [0 - 5)
>> Interpreting bytecode 0:aload_0
  State : locals 1, stack 1, monitors 0
    local  0 : java/lang/invoke/MethodHandle
    stack  0 : java/lang/invoke/MethodHandle
>> Interpreting bytecode 1:getfield
  State : locals 1, stack 1, monitors 0
    local  0 : java/lang/invoke/MethodHandle
    stack  0 : java/lang/invoke/MethodType
>> Computing successors for block #0  [0 - 5)
>> Interpreting bytecode 4:areturn
  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/invoke/MethodHandle

Loop tree
0<-0  defs: { }
********************************************************
TypeFlow for type  5 bytes
  ====================================================  
  #0  rpo#0  [0 - 5) Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/invoke/MethodHandle
  Successors : 0
  No predecessor information
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

********************************************************


Performing flow analysis on method
<ciMethod name=length holder=java/lang/AbstractStringBuilder signature=()I loaded=true arg_size=1 flags=public ident=1409 address=0x00007fad98090fc0>
   0 nofast_aload_0
   1 nofast_getfield 79 <java/lang/AbstractStringBuilder.count:I> 
   4 ireturn
Initial CI Blocks
********************************************************
TypeFlow for length  5 bytes
--------------------------------------------------------
ciBlock [0 - 5) control : 4:ireturn
  No Blocks
--------------------------------------------------------

********************************************************

>> Requesting block for 0/{ }
>> Created new block
  ====================================================  
  [0 - 5) Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [0 - 5)
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  

>> ANALYZING BLOCK : 
  ====================================================  
  #0  [0 - 5) Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/AbstractStringBuilder
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Computing exceptions for block #0  [0 - 5)
>> Interpreting bytecode 0:aload_0
  State : locals 1, stack 1, monitors 0
    local  0 : java/lang/AbstractStringBuilder
    stack  0 : java/lang/AbstractStringBuilder
>> Interpreting bytecode 1:getfield
  State : locals 1, stack 1, monitors 0
    local  0 : java/lang/AbstractStringBuilder
    stack  0 : int
>> Computing successors for block #0  [0 - 5)
>> Interpreting bytecode 4:ireturn
  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/AbstractStringBuilder

Loop tree
0<-0  defs: { }
********************************************************
TypeFlow for length  5 bytes
  ====================================================  
  #0  rpo#0  [0 - 5) Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/AbstractStringBuilder
  Successors : 0
  No predecessor information
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

********************************************************


Performing flow analysis on method
<ciMethod name=getValue holder=java/lang/AbstractStringBuilder signature=()[B loaded=true arg_size=1 flags=DEFAULT_ACCESS,final ident=1409 address=0x00007fad980c7280>
   0 nofast_aload_0
   1 nofast_getfield 15 <java/lang/AbstractStringBuilder.value:[B> 
   4 areturn
Initial CI Blocks
********************************************************
TypeFlow for getValue  5 bytes
--------------------------------------------------------
ciBlock [0 - 5) control : 4:areturn
  No Blocks
--------------------------------------------------------

********************************************************

>> Requesting block for 0/{ }
>> Created new block
  ====================================================  
  [0 - 5) Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [0 - 5)
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  

>> ANALYZING BLOCK : 
  ====================================================  
  #0  [0 - 5) Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/AbstractStringBuilder
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Computing exceptions for block #0  [0 - 5)
>> Interpreting bytecode 0:aload_0
  State : locals 1, stack 1, monitors 0
    local  0 : java/lang/AbstractStringBuilder
    stack  0 : java/lang/AbstractStringBuilder
>> Interpreting bytecode 1:getfield
  State : locals 1, stack 1, monitors 0
    local  0 : java/lang/AbstractStringBuilder
    stack  0 : [B
>> Computing successors for block #0  [0 - 5)
>> Interpreting bytecode 4:areturn
  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/AbstractStringBuilder

Loop tree
0<-0  defs: { }
********************************************************
TypeFlow for getValue  5 bytes
  ====================================================  
  #0  rpo#0  [0 - 5) Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/AbstractStringBuilder
  Successors : 0
  No predecessor information
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

********************************************************


Performing flow analysis on method
<ciMethod name=getChar holder=java/lang/StringUTF16 signature=([BI)C loaded=true arg_size=2 flags=DEFAULT_ACCESS,static ident=1410 address=0x00007fad98081030>
   0 getstatic 40 <java/lang/StringUTF16.$assertionsDisabled:Z> 
   3 ifne 28
  0    bci: 3    BranchData         taken(7490) displacement(128)
                                    not taken(0)
   6 iload_1
   7 iflt 18
  32   bci: 7    BranchData         taken(0) displacement(80)
                                    not taken(0)
  10 iload_1
  11 nofast_aload_0
  12 invokestatic 44 <java/lang/StringUTF16.length([B)I> 
  64   bci: 12   CounterData        count(0)
  15 if_icmplt 28
  80   bci: 15   BranchData         taken(0) displacement(48)
                                    not taken(0)
  18 new 48 <java/lang/AssertionError>
  21 dup
  22 fast_aldc "Trusted caller missed bounds check"
  24 invokespecial 52 <java/lang/AssertionError.<init>(Ljava/lang/Object;)V> 
  112  bci: 24   CounterData        count(0)
  27 athrow
  28 iload_1
  29 iconst_1
  30 ishl
  31 istore_1
  32 nofast_aload_0
  33 iload_1
  34 iinc #1 1
  37 baload
  38 sipush 255
  41 iand
  42 getstatic 55 <java/lang/StringUTF16.HI_BYTE_SHIFT:I> 
  45 ishl
  46 nofast_aload_0
  47 iload_1
  48 baload
  49 sipush 255
  52 iand
  53 getstatic 59 <java/lang/StringUTF16.LO_BYTE_SHIFT:I> 
  56 ishl
  57 ior
  58 i2c
  59 ireturn
Initial CI Blocks
********************************************************
TypeFlow for getChar  60 bytes
--------------------------------------------------------
ciBlock [0 - 6) control : 3:ifne
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [6 - 10) control : 7:iflt
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [10 - 18) control : 15:if_icmplt
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [18 - 28) control : 27:athrow
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [28 - 60) control : 59:ireturn
  No Blocks
--------------------------------------------------------

********************************************************

>> Requesting block for 0/{ }
>> Created new block
  ====================================================  
  [0 - 6) Stored locals: { }

  State : locals 2, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [0 - 6)
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 2, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Created new block
  ====================================================  
  [0 - -1) Stored locals: { }

  State : locals 2, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  

>> ANALYZING BLOCK : 
  ====================================================  
  #0  [0 - 6) Stored locals: { }

  State : locals 2, stack 0, monitors 0
    local  0 : [B
    local  1 : int
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Computing exceptions for block #0  [0 - 6)
>> Interpreting bytecode 0:getstatic
  State : locals 2, stack 1, monitors 0
    local  0 : [B
    local  1 : int
    stack  0 : int
>> Computing successors for block #0  [0 - 6)
>> Requesting block for 6/{ }
>> Created new block
  ====================================================  
  [6 - 10) Stored locals: { }

  State : locals 2, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [6 - 10)
>> Requesting block for 28/{ }
>> Created new block
  ====================================================  
  [28 - 60) Stored locals: { }

  State : locals 2, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [28 - 60)
>> Interpreting bytecode 3:ifne
  State : locals 2, stack 0, monitors 0
    local  0 : [B
    local  1 : int

>> ANALYZING BLOCK : 
  ====================================================  
  #1  [28 - 60) Stored locals: { }

  State : locals 2, stack 0, monitors 0
    local  0 : [B
    local  1 : int
  No successor information
  Predecessors : 1
    #0  [0 - 6)
  No exception information
  ====================================================  
>> Computing exceptions for block #1  [28 - 60)
>> Interpreting bytecode 28:iload_1
  State : locals 2, stack 1, monitors 0
    local  0 : [B
    local  1 : int
    stack  0 : int
>> Interpreting bytecode 29:iconst_1
  State : locals 2, stack 2, monitors 0
    local  0 : [B
    local  1 : int
    stack  0 : int
    stack  1 : int
>> Interpreting bytecode 30:ishl
  State : locals 2, stack 1, monitors 0
    local  0 : [B
    local  1 : int
    stack  0 : int
>> Interpreting bytecode 31:istore_1
  State : locals 2, stack 0, monitors 0
    local  0 : [B
    local  1 : int
>> Interpreting bytecode 32:aload_0
  State : locals 2, stack 1, monitors 0
    local  0 : [B
    local  1 : int
    stack  0 : [B
>> Interpreting bytecode 33:iload_1
  State : locals 2, stack 2, monitors 0
    local  0 : [B
    local  1 : int
    stack  0 : [B
    stack  1 : int
>> Interpreting bytecode 34:iinc
  State : locals 2, stack 2, monitors 0
    local  0 : [B
    local  1 : int
    stack  0 : [B
    stack  1 : int
>> Interpreting bytecode 37:baload
  State : locals 2, stack 1, monitors 0
    local  0 : [B
    local  1 : int
    stack  0 : int
>> Interpreting bytecode 38:sipush
  State : locals 2, stack 2, monitors 0
    local  0 : [B
    local  1 : int
    stack  0 : int
    stack  1 : int
>> Interpreting bytecode 41:iand
  State : locals 2, stack 1, monitors 0
    local  0 : [B
    local  1 : int
    stack  0 : int
>> Interpreting bytecode 42:getstatic
  State : locals 2, stack 2, monitors 0
    local  0 : [B
    local  1 : int
    stack  0 : int
    stack  1 : int
>> Interpreting bytecode 45:ishl
  State : locals 2, stack 1, monitors 0
    local  0 : [B
    local  1 : int
    stack  0 : int
>> Interpreting bytecode 46:aload_0
  State : locals 2, stack 2, monitors 0
    local  0 : [B
    local  1 : int
    stack  0 : int
    stack  1 : [B
>> Interpreting bytecode 47:iload_1
  State : locals 2, stack 3, monitors 0
    local  0 : [B
    local  1 : int
    stack  0 : int
    stack  1 : [B
    stack  2 : int
>> Interpreting bytecode 48:baload
  State : locals 2, stack 2, monitors 0
    local  0 : [B
    local  1 : int
    stack  0 : int
    stack  1 : int
>> Interpreting bytecode 49:sipush
  State : locals 2, stack 3, monitors 0
    local  0 : [B
    local  1 : int
    stack  0 : int
    stack  1 : int
    stack  2 : int
>> Interpreting bytecode 52:iand
  State : locals 2, stack 2, monitors 0
    local  0 : [B
    local  1 : int
    stack  0 : int
    stack  1 : int
>> Interpreting bytecode 53:getstatic
  State : locals 2, stack 3, monitors 0
    local  0 : [B
    local  1 : int
    stack  0 : int
    stack  1 : int
    stack  2 : int
>> Interpreting bytecode 56:ishl
  State : locals 2, stack 2, monitors 0
    local  0 : [B
    local  1 : int
    stack  0 : int
    stack  1 : int
>> Interpreting bytecode 57:ior
  State : locals 2, stack 1, monitors 0
    local  0 : [B
    local  1 : int
    stack  0 : int
>> Interpreting bytecode 58:i2c
  State : locals 2, stack 1, monitors 0
    local  0 : [B
    local  1 : int
    stack  0 : int
>> Computing successors for block #1  [28 - 60)
>> Interpreting bytecode 59:ireturn
  State : locals 2, stack 0, monitors 0
    local  0 : [B
    local  1 : int

>> ANALYZING BLOCK : 
  ====================================================  
  #2  [6 - 10) Stored locals: { }

  State : locals 2, stack 0, monitors 0
    local  0 : [B
    local  1 : int
  No successor information
  Predecessors : 1
    #0  [0 - 6)
  No exception information
  ====================================================  
>> Computing exceptions for block #2  [6 - 10)
>> Interpreting bytecode 6:iload_1
  State : locals 2, stack 1, monitors 0
    local  0 : [B
    local  1 : int
    stack  0 : int
>> Computing successors for block #2  [6 - 10)
>> Requesting block for 10/{ }
>> Created new block
  ====================================================  
  [10 - 18) Stored locals: { }

  State : locals 2, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [10 - 18)
>> Requesting block for 18/{ }
>> Created new block
  ====================================================  
  [18 - 28) Stored locals: { }

  State : locals 2, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [18 - 28)
>> Interpreting bytecode 7:iflt
  State : locals 2, stack 0, monitors 0
    local  0 : [B
    local  1 : int

>> ANALYZING BLOCK : 
  ====================================================  
  #3  [18 - 28) Stored locals: { }

  State : locals 2, stack 0, monitors 0
    local  0 : [B
    local  1 : int
  No successor information
  Predecessors : 1
    #2  [6 - 10)
  No exception information
  ====================================================  
>> Computing exceptions for block #3  [18 - 28)
>> Interpreting bytecode 18:new
  State : locals 2, stack 0, monitors 0
    local  0 : [B
    local  1 : int
>> Found trap
  ====================================================  
  #3  [18 - 28) Stored locals: { }

  State : locals 2, stack 0, monitors 0
    local  0 : [B
    local  1 : int
  No successor information
  Predecessors : 1
    #2  [6 - 10)
  Exceptions : 0
  Traps on 18 with trap index 48
  ====================================================  
>> Computing successors for block #3  [18 - 28)

>> ANALYZING BLOCK : 
  ====================================================  
  #4  [10 - 18) Stored locals: { }

  State : locals 2, stack 0, monitors 0
    local  0 : [B
    local  1 : int
  No successor information
  Predecessors : 1
    #2  [6 - 10)
  No exception information
  ====================================================  
>> Computing exceptions for block #4  [10 - 18)
>> Interpreting bytecode 10:iload_1
  State : locals 2, stack 1, monitors 0
    local  0 : [B
    local  1 : int
    stack  0 : int
>> Interpreting bytecode 11:aload_0
  State : locals 2, stack 2, monitors 0
    local  0 : [B
    local  1 : int
    stack  0 : int
    stack  1 : [B
>> Interpreting bytecode 12:invokestatic
  State : locals 2, stack 2, monitors 0
    local  0 : [B
    local  1 : int
    stack  0 : int
    stack  1 : int
>> Computing successors for block #4  [10 - 18)
>> Requesting block for 18/{ }
>> Found block #3  [18 - 28)
>> Requesting block for 28/{ }
>> Found block #1  [28 - 60)
>> Interpreting bytecode 15:if_icmplt
  State : locals 2, stack 0, monitors 0
    local  0 : [B
    local  1 : int

Loop tree
0<-0  defs: { }
********************************************************
TypeFlow for getChar  60 bytes
  ====================================================  
  #0  rpo#0  [0 - 6) Stored locals: { }

  State : locals 2, stack 0, monitors 0
    local  0 : [B
    local  1 : int
  Successors : 2
    #2  rpo#1  [6 - 10)
    #1  rpo#4  [28 - 60)
  No predecessor information
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #2  rpo#1  [6 - 10) Stored locals: { }

  State : locals 2, stack 0, monitors 0
    local  0 : [B
    local  1 : int
  Successors : 2
    #4  rpo#2  [10 - 18)
    #3  rpo#3  [18 - 28)
  Predecessors : 1
    #0  rpo#0  [0 - 6)
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #4  rpo#2  [10 - 18) Stored locals: { }

  State : locals 2, stack 0, monitors 0
    local  0 : [B
    local  1 : int
  Successors : 2
    #3  rpo#3  [18 - 28)
    #1  rpo#4  [28 - 60)
  Predecessors : 1
    #2  rpo#1  [6 - 10)
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #3  rpo#3  [18 - 28) Stored locals: { }

  State : locals 2, stack 0, monitors 0
    local  0 : [B
    local  1 : int
  Successors : 0
  Predecessors : 2
    #2  rpo#1  [6 - 10)
    #4  rpo#2  [10 - 18)
  Exceptions : 0
  Traps on 18 with trap index 48
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #1  rpo#4  [28 - 60) Stored locals: { 1 }

  State : locals 2, stack 0, monitors 0
    local  0 : [B
    local  1 : int
  Successors : 0
  Predecessors : 2
    #0  rpo#0  [0 - 6)
    #4  rpo#2  [10 - 18)
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

********************************************************

1.000000
