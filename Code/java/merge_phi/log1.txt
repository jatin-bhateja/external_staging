
Performing flow analysis on method
<ciMethod name=descriptor holder=java/lang/module/ModuleReference signature=()Ljava/lang/module/ModuleDescriptor; loaded=true arg_size=1 flags=public,final ident=1411 address=0x00007fdf48050560>
   0 nofast_aload_0
   1 nofast_getfield 15 <java/lang/module/ModuleReference.descriptor:Ljava/lang/module/ModuleDescriptor;> 
   4 areturn
Initial CI Blocks
********************************************************
TypeFlow for descriptor  5 bytes
--------------------------------------------------------
ciBlock [0 - 5) control : 4:areturn
  No Blocks
--------------------------------------------------------

********************************************************

>> Requesting block for 0/{ }
>> Created new block
  ====================================================  
  [0 - 5){ } Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [0 - 5){ }
>> Created new block
  ====================================================  
  [0 - -1){ } Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Created new block
  ====================================================  
  [0 - -1){ } Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  

>> ANALYZING BLOCK : 
  ====================================================  
  #0  [0 - 5){ } Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/module/ModuleReference
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Computing exceptions for block #0  [0 - 5){ }
>> Interpreting bytecode 0:aload_0
  State : locals 1, stack 1, monitors 0
    local  0 : java/lang/module/ModuleReference
    stack  0 : java/lang/module/ModuleReference
>> Interpreting bytecode 1:getfield
  State : locals 1, stack 1, monitors 0
    local  0 : java/lang/module/ModuleReference
    stack  0 : java/lang/module/ModuleDescriptor
>> Computing successors for block #0  [0 - 5){ }
>> Interpreting bytecode 4:areturn
  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/module/ModuleReference

Loop tree
0<-0  defs: { }
********************************************************
TypeFlow for descriptor  5 bytes
  ====================================================  
  #0  rpo#0  [0 - 5){ } Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/module/ModuleReference
  Successors : 0
  No predecessor information
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

********************************************************


Performing flow analysis on method
<ciMethod name=name holder=java/lang/module/ModuleDescriptor signature=()Ljava/lang/String; loaded=true arg_size=1 flags=public ident=1410 address=0x00007fdf48022960>
   0 nofast_aload_0
   1 nofast_getfield 16 <java/lang/module/ModuleDescriptor.name:Ljava/lang/String;> 
   4 areturn
Initial CI Blocks
********************************************************
TypeFlow for name  5 bytes
--------------------------------------------------------
ciBlock [0 - 5) control : 4:areturn
  No Blocks
--------------------------------------------------------

********************************************************

>> Requesting block for 0/{ }
>> Created new block
  ====================================================  
  [0 - 5){ } Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [0 - 5){ }
>> Created new block
  ====================================================  
  [0 - -1){ } Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Created new block
  ====================================================  
  [0 - -1){ } Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  

>> ANALYZING BLOCK : 
  ====================================================  
  #0  [0 - 5){ } Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/module/ModuleDescriptor
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Computing exceptions for block #0  [0 - 5){ }
>> Interpreting bytecode 0:aload_0
  State : locals 1, stack 1, monitors 0
    local  0 : java/lang/module/ModuleDescriptor
    stack  0 : java/lang/module/ModuleDescriptor
>> Interpreting bytecode 1:getfield
  State : locals 1, stack 1, monitors 0
    local  0 : java/lang/module/ModuleDescriptor
    stack  0 : java/lang/String
>> Computing successors for block #0  [0 - 5){ }
>> Interpreting bytecode 4:areturn
  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/module/ModuleDescriptor

Loop tree
0<-0  defs: { }
********************************************************
TypeFlow for name  5 bytes
  ====================================================  
  #0  rpo#0  [0 - 5){ } Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/module/ModuleDescriptor
  Successors : 0
  No predecessor information
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

********************************************************


Performing flow analysis on method
<ciMethod name=reference holder=java/lang/module/ResolvedModule signature=()Ljava/lang/module/ModuleReference; loaded=true arg_size=1 flags=public ident=1411 address=0x00007fdf480735b0>
   0 nofast_aload_0
   1 nofast_getfield 23 <java/lang/module/ResolvedModule.mref:Ljava/lang/module/ModuleReference;> 
   4 areturn
Initial CI Blocks
********************************************************
TypeFlow for reference  5 bytes
--------------------------------------------------------
ciBlock [0 - 5) control : 4:areturn
  No Blocks
--------------------------------------------------------

********************************************************

>> Requesting block for 0/{ }
>> Created new block
  ====================================================  
  [0 - 5){ } Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [0 - 5){ }
>> Created new block
  ====================================================  
  [0 - -1){ } Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Created new block
  ====================================================  
  [0 - -1){ } Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  

>> ANALYZING BLOCK : 
  ====================================================  
  #0  [0 - 5){ } Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/module/ResolvedModule
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Computing exceptions for block #0  [0 - 5){ }
>> Interpreting bytecode 0:aload_0
  State : locals 1, stack 1, monitors 0
    local  0 : java/lang/module/ResolvedModule
    stack  0 : java/lang/module/ResolvedModule
>> Interpreting bytecode 1:getfield
  State : locals 1, stack 1, monitors 0
    local  0 : java/lang/module/ResolvedModule
    stack  0 : java/lang/module/ModuleReference
>> Computing successors for block #0  [0 - 5){ }
>> Interpreting bytecode 4:areturn
  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/module/ResolvedModule

Loop tree
0<-0  defs: { }
********************************************************
TypeFlow for reference  5 bytes
  ====================================================  
  #0  rpo#0  [0 - 5){ } Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/module/ResolvedModule
  Successors : 0
  No predecessor information
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

********************************************************


Performing flow analysis on method
<ciMethod name=isAutomatic holder=java/lang/module/ModuleDescriptor signature=()Z loaded=true arg_size=1 flags=public ident=1410 address=0x00007fdf48040540>
   0 nofast_aload_0
   1 nofast_getfield 53 <java/lang/module/ModuleDescriptor.automatic:Z> 
   4 ireturn
Initial CI Blocks
********************************************************
TypeFlow for isAutomatic  5 bytes
--------------------------------------------------------
ciBlock [0 - 5) control : 4:ireturn
  No Blocks
--------------------------------------------------------

********************************************************

>> Requesting block for 0/{ }
>> Created new block
  ====================================================  
  [0 - 5){ } Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [0 - 5){ }
>> Created new block
  ====================================================  
  [0 - -1){ } Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Created new block
  ====================================================  
  [0 - -1){ } Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  

>> ANALYZING BLOCK : 
  ====================================================  
  #0  [0 - 5){ } Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/module/ModuleDescriptor
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Computing exceptions for block #0  [0 - 5){ }
>> Interpreting bytecode 0:aload_0
  State : locals 1, stack 1, monitors 0
    local  0 : java/lang/module/ModuleDescriptor
    stack  0 : java/lang/module/ModuleDescriptor
>> Interpreting bytecode 1:getfield
  State : locals 1, stack 1, monitors 0
    local  0 : java/lang/module/ModuleDescriptor
    stack  0 : int
>> Computing successors for block #0  [0 - 5){ }
>> Interpreting bytecode 4:ireturn
  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/module/ModuleDescriptor

Loop tree
0<-0  defs: { }
********************************************************
TypeFlow for isAutomatic  5 bytes
  ====================================================  
  #0  rpo#0  [0 - 5){ } Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/module/ModuleDescriptor
  Successors : 0
  No predecessor information
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

********************************************************


Performing flow analysis on method
<ciMethod name=source holder=java/lang/module/ModuleDescriptor$Exports signature=()Ljava/lang/String; loaded=true arg_size=1 flags=public ident=1410 address=0x00007fdf4805ad80>
   0 nofast_aload_0
   1 nofast_getfield 19 <java/lang/module/ModuleDescriptor$Exports.source:Ljava/lang/String;> 
   4 areturn
Initial CI Blocks
********************************************************
TypeFlow for source  5 bytes
--------------------------------------------------------
ciBlock [0 - 5) control : 4:areturn
  No Blocks
--------------------------------------------------------

********************************************************

>> Requesting block for 0/{ }
>> Created new block
  ====================================================  
  [0 - 5){ } Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [0 - 5){ }
>> Created new block
  ====================================================  
  [0 - -1){ } Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Created new block
  ====================================================  
  [0 - -1){ } Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  

>> ANALYZING BLOCK : 
  ====================================================  
  #0  [0 - 5){ } Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/module/ModuleDescriptor$Exports
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Computing exceptions for block #0  [0 - 5){ }
>> Interpreting bytecode 0:aload_0
  State : locals 1, stack 1, monitors 0
    local  0 : java/lang/module/ModuleDescriptor$Exports
    stack  0 : java/lang/module/ModuleDescriptor$Exports
>> Interpreting bytecode 1:getfield
  State : locals 1, stack 1, monitors 0
    local  0 : java/lang/module/ModuleDescriptor$Exports
    stack  0 : java/lang/String
>> Computing successors for block #0  [0 - 5){ }
>> Interpreting bytecode 4:areturn
  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/module/ModuleDescriptor$Exports

Loop tree
0<-0  defs: { }
********************************************************
TypeFlow for source  5 bytes
  ====================================================  
  #0  rpo#0  [0 - 5){ } Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/module/ModuleDescriptor$Exports
  Successors : 0
  No predecessor information
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

********************************************************


Performing flow analysis on method
<ciMethod name=configuration holder=java/lang/module/ResolvedModule signature=()Ljava/lang/module/Configuration; loaded=true arg_size=1 flags=public ident=1411 address=0x00007fdf48048550>
   0 nofast_aload_0
   1 nofast_getfield 15 <java/lang/module/ResolvedModule.cf:Ljava/lang/module/Configuration;> 
   4 areturn
Initial CI Blocks
********************************************************
TypeFlow for configuration  5 bytes
--------------------------------------------------------
ciBlock [0 - 5) control : 4:areturn
  No Blocks
--------------------------------------------------------

********************************************************

>> Requesting block for 0/{ }
>> Created new block
  ====================================================  
  [0 - 5){ } Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [0 - 5){ }
>> Created new block
  ====================================================  
  [0 - -1){ } Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Created new block
  ====================================================  
  [0 - -1){ } Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  

>> ANALYZING BLOCK : 
  ====================================================  
  #0  [0 - 5){ } Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/module/ResolvedModule
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Computing exceptions for block #0  [0 - 5){ }
>> Interpreting bytecode 0:aload_0
  State : locals 1, stack 1, monitors 0
    local  0 : java/lang/module/ResolvedModule
    stack  0 : java/lang/module/ResolvedModule
>> Interpreting bytecode 1:getfield
  State : locals 1, stack 1, monitors 0
    local  0 : java/lang/module/ResolvedModule
    stack  0 : java/lang/module/Configuration
>> Computing successors for block #0  [0 - 5){ }
>> Interpreting bytecode 4:areturn
  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/module/ResolvedModule

Loop tree
0<-0  defs: { }
********************************************************
TypeFlow for configuration  5 bytes
  ====================================================  
  #0  rpo#0  [0 - 5){ } Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/module/ResolvedModule
  Successors : 0
  No predecessor information
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

********************************************************


Performing flow analysis on method
<ciMethod name=targets holder=java/lang/module/ModuleDescriptor$Exports signature=()Ljava/util/Set; loaded=true arg_size=1 flags=public ident=1411 address=0x00007fdf48050560>
   0 nofast_aload_0
   1 nofast_getfield 23 <java/lang/module/ModuleDescriptor$Exports.targets:Ljava/util/Set;> 
   4 areturn
Initial CI Blocks
********************************************************
TypeFlow for targets  5 bytes
--------------------------------------------------------
ciBlock [0 - 5) control : 4:areturn
  No Blocks
--------------------------------------------------------

********************************************************

>> Requesting block for 0/{ }
>> Created new block
  ====================================================  
  [0 - 5){ } Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [0 - 5){ }
>> Created new block
  ====================================================  
  [0 - -1){ } Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Created new block
  ====================================================  
  [0 - -1){ } Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  

>> ANALYZING BLOCK : 
  ====================================================  
  #0  [0 - 5){ } Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/module/ModuleDescriptor$Exports
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Computing exceptions for block #0  [0 - 5){ }
>> Interpreting bytecode 0:aload_0
  State : locals 1, stack 1, monitors 0
    local  0 : java/lang/module/ModuleDescriptor$Exports
    stack  0 : java/lang/module/ModuleDescriptor$Exports
>> Interpreting bytecode 1:getfield
  State : locals 1, stack 1, monitors 0
    local  0 : java/lang/module/ModuleDescriptor$Exports
    stack  0 : java/util/Set
>> Computing successors for block #0  [0 - 5){ }
>> Interpreting bytecode 4:areturn
  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/module/ModuleDescriptor$Exports

Loop tree
0<-0  defs: { }
********************************************************
TypeFlow for targets  5 bytes
  ====================================================  
  #0  rpo#0  [0 - 5){ } Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/module/ModuleDescriptor$Exports
  Successors : 0
  No predecessor information
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

********************************************************


Performing flow analysis on method
<ciMethod name=isEmpty holder=java/util/ImmutableCollections$Set12 signature=()Z loaded=true arg_size=1 flags=public ident=1410 address=0x00007fdf48022960>
   0 iconst_0
   1 ireturn
Initial CI Blocks
********************************************************
TypeFlow for isEmpty  2 bytes
--------------------------------------------------------
ciBlock [0 - 2) control : 1:ireturn
  No Blocks
--------------------------------------------------------

********************************************************

>> Requesting block for 0/{ }
>> Created new block
  ====================================================  
  [0 - 2){ } Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [0 - 2){ }
>> Created new block
  ====================================================  
  [0 - -1){ } Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Created new block
  ====================================================  
  [0 - -1){ } Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  

>> ANALYZING BLOCK : 
  ====================================================  
  #0  [0 - 2){ } Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/util/ImmutableCollections$Set12
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Computing exceptions for block #0  [0 - 2){ }
>> Interpreting bytecode 0:iconst_0
  State : locals 1, stack 1, monitors 0
    local  0 : java/util/ImmutableCollections$Set12
    stack  0 : int
>> Computing successors for block #0  [0 - 2){ }
>> Interpreting bytecode 1:ireturn
  State : locals 1, stack 0, monitors 0
    local  0 : java/util/ImmutableCollections$Set12

Loop tree
0<-0  defs: { }
********************************************************
TypeFlow for isEmpty  2 bytes
  ====================================================  
  #0  rpo#0  [0 - 2){ } Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/util/ImmutableCollections$Set12
  Successors : 0
  No predecessor information
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

********************************************************


Performing flow analysis on method
<ciMethod name=ordinal holder=java/lang/Enum signature=()I loaded=true arg_size=1 flags=public,final ident=1409 address=0x00007fdf48073500>
   0 nofast_aload_0
   1 nofast_getfield 7 <java/lang/Enum.ordinal:I> 
   4 ireturn
Initial CI Blocks
********************************************************
TypeFlow for ordinal  5 bytes
--------------------------------------------------------
ciBlock [0 - 5) control : 4:ireturn
  No Blocks
--------------------------------------------------------

********************************************************

>> Requesting block for 0/{ }
>> Created new block
  ====================================================  
  [0 - 5){ } Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [0 - 5){ }
>> Created new block
  ====================================================  
  [0 - -1){ } Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Created new block
  ====================================================  
  [0 - -1){ } Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  

>> ANALYZING BLOCK : 
  ====================================================  
  #0  [0 - 5){ } Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/Enum
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Computing exceptions for block #0  [0 - 5){ }
>> Interpreting bytecode 0:aload_0
  State : locals 1, stack 1, monitors 0
    local  0 : java/lang/Enum
    stack  0 : java/lang/Enum
>> Interpreting bytecode 1:getfield
  State : locals 1, stack 1, monitors 0
    local  0 : java/lang/Enum
    stack  0 : int
>> Computing successors for block #0  [0 - 5){ }
>> Interpreting bytecode 4:ireturn
  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/Enum

Loop tree
0<-0  defs: { }
********************************************************
TypeFlow for ordinal  5 bytes
  ====================================================  
  #0  rpo#0  [0 - 5){ } Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/Enum
  Successors : 0
  No predecessor information
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

********************************************************


Performing flow analysis on method
<ciMethod name=get holder=jdk/internal/util/StrongReferenceKey signature=()Ljava/lang/Object; loaded=true arg_size=1 flags=public ident=1410 address=0x00007fdf48040540>
   0 nofast_aload_0
   1 nofast_getfield 7 <jdk/internal/util/StrongReferenceKey.key:Ljava/lang/Object;> 
   4 areturn
Initial CI Blocks
********************************************************
TypeFlow for get  5 bytes
--------------------------------------------------------
ciBlock [0 - 5) control : 4:areturn
  No Blocks
--------------------------------------------------------

********************************************************

>> Requesting block for 0/{ }
>> Created new block
  ====================================================  
  [0 - 5){ } Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [0 - 5){ }
>> Created new block
  ====================================================  
  [0 - -1){ } Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Created new block
  ====================================================  
  [0 - -1){ } Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  

>> ANALYZING BLOCK : 
  ====================================================  
  #0  [0 - 5){ } Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : jdk/internal/util/StrongReferenceKey
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Computing exceptions for block #0  [0 - 5){ }
>> Interpreting bytecode 0:aload_0
  State : locals 1, stack 1, monitors 0
    local  0 : jdk/internal/util/StrongReferenceKey
    stack  0 : jdk/internal/util/StrongReferenceKey
>> Interpreting bytecode 1:getfield
  State : locals 1, stack 1, monitors 0
    local  0 : jdk/internal/util/StrongReferenceKey
    stack  0 : java/lang/Object
>> Computing successors for block #0  [0 - 5){ }
>> Interpreting bytecode 4:areturn
  State : locals 1, stack 0, monitors 0
    local  0 : jdk/internal/util/StrongReferenceKey

Loop tree
0<-0  defs: { }
********************************************************
TypeFlow for get  5 bytes
  ====================================================  
  #0  rpo#0  [0 - 5){ } Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : jdk/internal/util/StrongReferenceKey
  Successors : 0
  No predecessor information
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

********************************************************


Performing flow analysis on method
<ciMethod name=returnType holder=java/lang/invoke/MethodType signature=()Ljava/lang/Class; loaded=true arg_size=1 flags=public ident=1409 address=0x00007fdf4805acd0>
   0 nofast_aload_0
   1 nofast_getfield 9 <java/lang/invoke/MethodType.rtype:Ljava/lang/Class;> 
   4 areturn
Initial CI Blocks
********************************************************
TypeFlow for returnType  5 bytes
--------------------------------------------------------
ciBlock [0 - 5) control : 4:areturn
  No Blocks
--------------------------------------------------------

********************************************************

>> Requesting block for 0/{ }
>> Created new block
  ====================================================  
  [0 - 5){ } Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [0 - 5){ }
>> Created new block
  ====================================================  
  [0 - -1){ } Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Created new block
  ====================================================  
  [0 - -1){ } Stored locals: { }

  State : locals 1, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  

>> ANALYZING BLOCK : 
  ====================================================  
  #0  [0 - 5){ } Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/invoke/MethodType
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Computing exceptions for block #0  [0 - 5){ }
>> Interpreting bytecode 0:aload_0
  State : locals 1, stack 1, monitors 0
    local  0 : java/lang/invoke/MethodType
    stack  0 : java/lang/invoke/MethodType
>> Interpreting bytecode 1:getfield
  State : locals 1, stack 1, monitors 0
    local  0 : java/lang/invoke/MethodType
    stack  0 : java/lang/Class
>> Computing successors for block #0  [0 - 5){ }
>> Interpreting bytecode 4:areturn
  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/invoke/MethodType

Loop tree
0<-0  defs: { }
********************************************************
TypeFlow for returnType  5 bytes
  ====================================================  
  #0  rpo#0  [0 - 5){ } Stored locals: { }

  State : locals 1, stack 0, monitors 0
    local  0 : java/lang/invoke/MethodType
  Successors : 0
  No predecessor information
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

********************************************************


Performing flow analysis on method
<ciMethod name=micro holder=inductive_phi signature=([Z)D loaded=true arg_size=1 flags=public,static ident=1410 address=0x00007fdffc29d4d0>
   0 ldc2_w 2.000000
   3 dstore_1
   4 iconst_0
   5 istore_3
   6 iload_3
   7 iconst_2
   8 if_icmpge 29
  0    bci: 8    BranchData         taken(3456) displacement(88)
                                    not taken(6912)
  11 fast_aload_0
  12 iload_3
  13 baload
  14 ifeq 23
  32   bci: 14   BranchData         taken(3456) displacement(32)
                                    not taken(3456)
  17 dload_1
  18 ldc2_w 10.000000
  21 dadd
  22 dstore_1
  23 iinc #3 1
  26 goto 6
  64   bci: 26   JumpData           taken(6912) displacement(-64)
  29 dload_1
  30 dreturn
Initial CI Blocks
********************************************************
TypeFlow for micro  31 bytes
--------------------------------------------------------
ciBlock [0 - 6) control : 6:fall through
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [6 - 11) control : 8:if_icmpge
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [11 - 17) control : 14:ifeq
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [17 - 23) control : 23:fall through
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [23 - 29) control : 26:goto
  No Blocks
--------------------------------------------------------

--------------------------------------------------------
ciBlock [29 - 31) control : 30:dreturn
  No Blocks
--------------------------------------------------------

********************************************************

>> Requesting block for 0/{ }
>> Created new block
  ====================================================  
  [0 - 6){ } Stored locals: { }

  State : locals 4, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [0 - 6){ }
>> Created new block
  ====================================================  
  [0 - -1){ } Stored locals: { }

  State : locals 4, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Created new block
  ====================================================  
  [0 - -1){ } Stored locals: { }

  State : locals 4, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  

>> ANALYZING BLOCK : 
  ====================================================  
  #0  [0 - 6){ } Stored locals: { }

  State : locals 4, stack 0, monitors 0
    local  0 : [Z
    local  1 : bottom
    local  2 : bottom
    local  3 : bottom
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Computing exceptions for block #0  [0 - 6){ }
>> Interpreting bytecode 0:ldc2_w
  State : locals 4, stack 2, monitors 0
    local  0 : [Z
    local  1 : bottom
    local  2 : bottom
    local  3 : bottom
    stack  0 : double
    stack  1 : double2
>> Interpreting bytecode 3:dstore_1
  State : locals 4, stack 0, monitors 0
    local  0 : [Z
    local  1 : double
    local  2 : double2
    local  3 : bottom
>> Interpreting bytecode 4:iconst_0
  State : locals 4, stack 1, monitors 0
    local  0 : [Z
    local  1 : double
    local  2 : double2
    local  3 : bottom
    stack  0 : int
>> Interpreting bytecode 5:istore_3
  State : locals 4, stack 0, monitors 0
    local  0 : [Z
    local  1 : double
    local  2 : double2
    local  3 : int
>> Computing successors for block #0  [0 - 6){ }
>> Requesting block for 6/{ }
>> Created new block
  ====================================================  
  [6 - 11){ } Stored locals: { }

  State : locals 4, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [6 - 11){ }

>> ANALYZING BLOCK : 
  ====================================================  
  #1  [6 - 11){ } Stored locals: { }

  State : locals 4, stack 0, monitors 0
    local  0 : [Z
    local  1 : double
    local  2 : double2
    local  3 : int
  No successor information
  Predecessors : 1
    #0  [0 - 6){ 1 2 3 }
  No exception information
  ====================================================  
>> Computing exceptions for block #1  [6 - 11){ }
>> Interpreting bytecode 6:iload_3
  State : locals 4, stack 1, monitors 0
    local  0 : [Z
    local  1 : double
    local  2 : double2
    local  3 : int
    stack  0 : int
>> Interpreting bytecode 7:iconst_2
  State : locals 4, stack 2, monitors 0
    local  0 : [Z
    local  1 : double
    local  2 : double2
    local  3 : int
    stack  0 : int
    stack  1 : int
>> Computing successors for block #1  [6 - 11){ }
>> Requesting block for 11/{ }
>> Created new block
  ====================================================  
  [11 - 17){ } Stored locals: { }

  State : locals 4, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [11 - 17){ }
>> Requesting block for 29/{ }
>> Created new block
  ====================================================  
  [29 - 31){ } Stored locals: { }

  State : locals 4, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [29 - 31){ }
>> Interpreting bytecode 8:if_icmpge
  State : locals 4, stack 0, monitors 0
    local  0 : [Z
    local  1 : double
    local  2 : double2
    local  3 : int

>> ANALYZING BLOCK : 
  ====================================================  
  #2  [29 - 31){ } Stored locals: { }

  State : locals 4, stack 0, monitors 0
    local  0 : [Z
    local  1 : double
    local  2 : double2
    local  3 : int
  No successor information
  Predecessors : 1
    #1  [6 - 11){ }
  No exception information
  ====================================================  
>> Computing exceptions for block #2  [29 - 31){ }
>> Interpreting bytecode 29:dload_1
  State : locals 4, stack 2, monitors 0
    local  0 : [Z
    local  1 : double
    local  2 : double2
    local  3 : int
    stack  0 : double
    stack  1 : double2
>> Computing successors for block #2  [29 - 31){ }
>> Interpreting bytecode 30:dreturn
  State : locals 4, stack 0, monitors 0
    local  0 : [Z
    local  1 : double
    local  2 : double2
    local  3 : int

>> ANALYZING BLOCK : 
  ====================================================  
  #3  [11 - 17){ } Stored locals: { }

  State : locals 4, stack 0, monitors 0
    local  0 : [Z
    local  1 : double
    local  2 : double2
    local  3 : int
  No successor information
  Predecessors : 1
    #1  [6 - 11){ }
  No exception information
  ====================================================  
>> Computing exceptions for block #3  [11 - 17){ }
>> Interpreting bytecode 11:aload_0
  State : locals 4, stack 1, monitors 0
    local  0 : [Z
    local  1 : double
    local  2 : double2
    local  3 : int
    stack  0 : [Z
>> Interpreting bytecode 12:iload_3
  State : locals 4, stack 2, monitors 0
    local  0 : [Z
    local  1 : double
    local  2 : double2
    local  3 : int
    stack  0 : [Z
    stack  1 : int
>> Interpreting bytecode 13:baload
  State : locals 4, stack 1, monitors 0
    local  0 : [Z
    local  1 : double
    local  2 : double2
    local  3 : int
    stack  0 : int
>> Computing successors for block #3  [11 - 17){ }
>> Requesting block for 17/{ }
>> Created new block
  ====================================================  
  [17 - 23){ } Stored locals: { }

  State : locals 4, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [17 - 23){ }
>> Requesting block for 23/{ }
>> Created new block
  ====================================================  
  [23 - 29){ } Stored locals: { }

  State : locals 4, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [23 - 29){ }
>> Interpreting bytecode 14:ifeq
  State : locals 4, stack 0, monitors 0
    local  0 : [Z
    local  1 : double
    local  2 : double2
    local  3 : int

>> ANALYZING BLOCK : 
  ====================================================  
  #4  [23 - 29){ } Stored locals: { }

  State : locals 4, stack 0, monitors 0
    local  0 : [Z
    local  1 : double
    local  2 : double2
    local  3 : int
  No successor information
  Predecessors : 1
    #3  [11 - 17){ }
  No exception information
  ====================================================  
>> Computing exceptions for block #4  [23 - 29){ }
>> Interpreting bytecode 23:iinc
  State : locals 4, stack 0, monitors 0
    local  0 : [Z
    local  1 : double
    local  2 : double2
    local  3 : int
>> Computing successors for block #4  [23 - 29){ }
>> Requesting block for 6/{ }
>> Found block #1  [6 - 11){ }
>> Interpreting bytecode 26:goto
  State : locals 4, stack 0, monitors 0
    local  0 : [Z
    local  1 : double
    local  2 : double2
    local  3 : int

>> ANALYZING BLOCK : 
  ====================================================  
  #5  [17 - 23){ } Stored locals: { }

  State : locals 4, stack 0, monitors 0
    local  0 : [Z
    local  1 : double
    local  2 : double2
    local  3 : int
  No successor information
  Predecessors : 1
    #3  [11 - 17){ }
  No exception information
  ====================================================  
>> Computing exceptions for block #5  [17 - 23){ }
>> Interpreting bytecode 17:dload_1
  State : locals 4, stack 2, monitors 0
    local  0 : [Z
    local  1 : double
    local  2 : double2
    local  3 : int
    stack  0 : double
    stack  1 : double2
>> Interpreting bytecode 18:ldc2_w
  State : locals 4, stack 4, monitors 0
    local  0 : [Z
    local  1 : double
    local  2 : double2
    local  3 : int
    stack  0 : double
    stack  1 : double2
    stack  2 : double
    stack  3 : double2
>> Interpreting bytecode 21:dadd
  State : locals 4, stack 2, monitors 0
    local  0 : [Z
    local  1 : double
    local  2 : double2
    local  3 : int
    stack  0 : double
    stack  1 : double2
>> Interpreting bytecode 22:dstore_1
  State : locals 4, stack 0, monitors 0
    local  0 : [Z
    local  1 : double
    local  2 : double2
    local  3 : int
>> Computing successors for block #5  [17 - 23){ }
>> Requesting block for 23/{ }
>> Found block #4  [23 - 29){ 3 }
>> Adding block #1  [6 - 11) lphd{ } to the work list : 

>> Requesting clone of loop head #1  [6 - 11) lphd{ }  for predecessor #4  [23 - 29){ 3 }
>> Requesting block for 6/{ }
>> Created new block
  ====================================================  
  [6 - 11){ } Stored locals: { }

  State : locals 4, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Found block [6 - 11)/backedge_copy{ }

>> ANALYZING BLOCK : 
  ====================================================  
  #4  [23 - 29){ 3 } Stored locals: { 3 }
 loops: 1<-4
  State : locals 4, stack 0, monitors 0
    local  0 : [Z
    local  1 : double
    local  2 : double2
    local  3 : int
  Successors : 1
    #6  [6 - 11)/backedge_copy{ }
  Predecessors : 2
    #3  [11 - 17){ }
    #5  [17 - 23){ 1 2 }
  Exceptions : 0
  ====================================================  
>> Interpreting bytecode 23:iinc
  State : locals 4, stack 0, monitors 0
    local  0 : [Z
    local  1 : double
    local  2 : double2
    local  3 : int
>> Interpreting bytecode 26:goto
  State : locals 4, stack 0, monitors 0
    local  0 : [Z
    local  1 : double
    local  2 : double2
    local  3 : int

>> ANALYZING BLOCK : 
  ====================================================  
  #6  [6 - 11)/backedge_copy{ } Stored locals: { }

  State : locals 4, stack 0, monitors 0
    local  0 : [Z
    local  1 : double
    local  2 : double2
    local  3 : int
  No successor information
  Predecessors : 1
    #4  [23 - 29){ 3 }
  No exception information
  ====================================================  
>> Computing exceptions for block #6  [6 - 11)/backedge_copy{ }
>> Interpreting bytecode 6:iload_3
  State : locals 4, stack 1, monitors 0
    local  0 : [Z
    local  1 : double
    local  2 : double2
    local  3 : int
    stack  0 : int
>> Interpreting bytecode 7:iconst_2
  State : locals 4, stack 2, monitors 0
    local  0 : [Z
    local  1 : double
    local  2 : double2
    local  3 : int
    stack  0 : int
    stack  1 : int
>> Computing successors for block #6  [6 - 11)/backedge_copy{ }
>> Requesting block for 11/{ }
>> Found block #3  [11 - 17){ }
>> Requesting block for 29/{ }
>> Found block #2  [29 - 31){ }
>> Interpreting bytecode 8:if_icmpge
  State : locals 4, stack 0, monitors 0
    local  0 : [Z
    local  1 : double
    local  2 : double2
    local  3 : int
>> Created new block
  ====================================================  
  [0 - -1){ } Stored locals: { }

  State : locals 4, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Created new block
  ====================================================  
  [0 - -1){ } Stored locals: { }

  State : locals 4, stack -1, monitors -1
  No successor information
  No predecessor information
  No exception information
  ====================================================  
>> Adding block #3  [11 - 17) lphd{ } to the work list : 


Loop tree
0<-0  defs: { 1 2 3 }
  3<-5  defs: { 1 2 3 }

>> ANALYZING BLOCK : 
  ====================================================  
  #3  [11 - 17) lphd{ } Stored locals: { }
 loops: 3<-5
  State : locals 4, stack 0, monitors 0
    local  0 : [Z
    local  1 : double
    local  2 : double2
    local  3 : int
  Successors : 2
    #6  [17 - 23){ 1 2 }
    #4  [23 - 29){ 3 }
  Predecessors : 2
    #1  [6 - 11){ }
    #5  [6 - 11)/backedge_copy{ }
  Exceptions : 0
  ====================================================  
>> Interpreting bytecode 11:aload_0
  State : locals 4, stack 1, monitors 0
    local  0 : [Z
    local  1 : double
    local  2 : double2
    local  3 : int
    stack  0 : [Z
>> Interpreting bytecode 12:iload_3
  State : locals 4, stack 2, monitors 0
    local  0 : [Z
    local  1 : double
    local  2 : double2
    local  3 : int
    stack  0 : [Z
    stack  1 : int
>> Interpreting bytecode 13:baload
  State : locals 4, stack 1, monitors 0
    local  0 : [Z
    local  1 : double
    local  2 : double2
    local  3 : int
    stack  0 : int
>> Interpreting bytecode 14:ifeq
  State : locals 4, stack 0, monitors 0
    local  0 : [Z
    local  1 : double
    local  2 : double2
    local  3 : int

>> ANALYZING BLOCK : 
  ====================================================  
  #1  [6 - 11){ } Stored locals: { }

  State : locals 4, stack 0, monitors 0
    local  0 : [Z
    local  1 : double
    local  2 : double2
    local  3 : int
  Successors : 2
    #3  [11 - 17) lphd{ }
    #2  [29 - 31){ }
  Predecessors : 1
    #0  [0 - 6){ 1 2 3 }
  Exceptions : 0
  ====================================================  
>> Interpreting bytecode 6:iload_3
  State : locals 4, stack 1, monitors 0
    local  0 : [Z
    local  1 : double
    local  2 : double2
    local  3 : int
    stack  0 : int
>> Interpreting bytecode 7:iconst_2
  State : locals 4, stack 2, monitors 0
    local  0 : [Z
    local  1 : double
    local  2 : double2
    local  3 : int
    stack  0 : int
    stack  1 : int
>> Interpreting bytecode 8:if_icmpge
  State : locals 4, stack 0, monitors 0
    local  0 : [Z
    local  1 : double
    local  2 : double2
    local  3 : int
********************************************************
TypeFlow for micro  31 bytes
  ====================================================  
  #0  rpo#0  [0 - 6){ 1 2 3 } Stored locals: { 1 2 3 }

  State : locals 4, stack 0, monitors 0
    local  0 : [Z
    local  1 : bottom
    local  2 : bottom
    local  3 : bottom
  Successors : 1
    #1  rpo#1  [6 - 11){ }
  No predecessor information
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #1  rpo#1  [6 - 11){ } Stored locals: { }

  State : locals 4, stack 0, monitors 0
    local  0 : [Z
    local  1 : double
    local  2 : double2
    local  3 : int
  Successors : 2
    #3  rpo#2  [11 - 17) lphd{ }
    #2  rpo#6  [29 - 31){ }
  Predecessors : 1
    #0  rpo#0  [0 - 6){ 1 2 3 }
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #3  rpo#2  [11 - 17) lphd{ } Stored locals: { }
 loops: 3<-5
  State : locals 4, stack 0, monitors 0
    local  0 : [Z
    local  1 : double
    local  2 : double2
    local  3 : int
  Successors : 2
    #6  rpo#3  [17 - 23){ 1 2 }
    #4  rpo#4  [23 - 29){ 3 }
  Predecessors : 2
    #1  rpo#1  [6 - 11){ }
    #5  rpo#5  [6 - 11)/backedge_copy{ }
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #6  rpo#3  [17 - 23){ 1 2 } Stored locals: { 1 2 }
 loops: 3<-5
  State : locals 4, stack 0, monitors 0
    local  0 : [Z
    local  1 : double
    local  2 : double2
    local  3 : int
  Successors : 1
    #4  rpo#4  [23 - 29){ 3 }
  Predecessors : 1
    #3  rpo#2  [11 - 17) lphd{ }
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #4  rpo#4  [23 - 29){ 3 } Stored locals: { 3 }
 loops: 3<-5
  State : locals 4, stack 0, monitors 0
    local  0 : [Z
    local  1 : double
    local  2 : double2
    local  3 : int
  Successors : 1
    #5  rpo#5  [6 - 11)/backedge_copy{ }
  Predecessors : 2
    #3  rpo#2  [11 - 17) lphd{ }
    #6  rpo#3  [17 - 23){ 1 2 }
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #5  rpo#5  [6 - 11)/backedge_copy{ } Stored locals: { }
 loops: 3<-5
  State : locals 4, stack 0, monitors 0
    local  0 : [Z
    local  1 : double
    local  2 : double2
    local  3 : int
  Successors : 2
    #3  rpo#2  [11 - 17) lphd{ }
    #2  rpo#6  [29 - 31){ }
  Predecessors : 1
    #4  rpo#4  [23 - 29){ 3 }
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

  ====================================================  
  #2  rpo#6  [29 - 31){ } Stored locals: { }

  State : locals 4, stack 0, monitors 0
    local  0 : [Z
    local  1 : double
    local  2 : double2
    local  3 : int
  Successors : 0
  Predecessors : 2
    #1  rpo#1  [6 - 11){ }
    #5  rpo#5  [6 - 11)/backedge_copy{ }
  Exceptions : 0
  ====================================================  
--------------------------------------------------------

********************************************************

120000.0
