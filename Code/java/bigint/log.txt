CompileCommand: print jit.micro bool print = true

============================= C2-compiled nmethod ==============================
----------------------- MetaData before Compile_id = 138 ------------------------
{method}
 - this oop:          0x00007f4bfdc0e4a8
 - method holder:     'jit'
 - constants:         0x00007f4bfdc0e058 constant pool [77]/operands[5] {0x00007f4bfdc0e058} for 'jit' cache=0x00007f4bfdc0e6b0
 - access:            0x81000009  public static 
 - name:              'micro'
 - signature:         '([B[B[BI)I'
 - max stack:         6
 - max locals:        7
 - size of params:    4
 - method size:       13
 - vtable index:      -2
 - i2i entry:         0x00007f4c5900dc00
 - adapters:          AHE@0x00007f4c5c30d700: 0xbbba i2c: 0x00007f4c5909dae0 c2i: 0x00007f4c5909dbcc c2iUV: 0x00007f4c5909db96 c2iNCI: 0x00007f4c5909dc09
 - compiled entry     0x00007f4c5909dbcc
 - code size:         52
 - code start:        0x00007f4bfdc0e468
 - code end (excl):   0x00007f4bfdc0e49c
 - method data:       0x00007f4bfdc0e8c8
 - checked ex length: 0
 - linenumber start:  0x00007f4bfdc0e49c
 - localvar length:   0

------------------------ OptoAssembly for Compile_id = 138 -----------------------
#
#  int ( byte[int:>=0]:exact *, byte[int:>=0]:exact *, byte[int:>=0]:exact *, int )
#
#r018 rsi:rsi   : parm 0: byte[int:>=0]:exact *
#r016 rdx:rdx   : parm 1: byte[int:>=0]:exact *
#r010 rcx:rcx   : parm 2: byte[int:>=0]:exact *
#r004 r8   : parm 3: int
# -- Old rsp -- Framesize: 80 --
#r591 rsp+76: in_preserve
#r590 rsp+72: return address
#r589 rsp+68: in_preserve
#r588 rsp+64: saved fp register
#r587 rsp+60: pad2, stack alignment
#r586 rsp+56: pad2, stack alignment
#r585 rsp+52: Fixed slot 1
#r584 rsp+48: Fixed slot 0
#r603 rsp+44: spill
#r602 rsp+40: spill
#r601 rsp+36: spill
#r600 rsp+32: spill
#r599 rsp+28: spill
#r598 rsp+24: spill
#r597 rsp+20: spill
#r596 rsp+16: spill
#r595 rsp+12: spill
#r594 rsp+ 8: spill
#r593 rsp+ 4: spill
#r592 rsp+ 0: spill
#
000     N1: #	out( B1 ) <- in( B59 B48 B45 B49 B60 B50 B51 B61 B52 B65 B53 B62 B54 B55 B32 B71 B46 B63 B56 B58 B57 B64 )  Freq: 1

000     B1: #	out( B59 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
000     # stack bang (416 bytes)
	pushq   rbp	# Save rbp
	subq    rsp, #64	# Create frame

00c     movl    [rsp + #16], R8	# spill
011     movq    [rsp + #8], RCX	# spill
016     movq    [rsp + #0], RSI	# spill
        nop 	# 6 bytes pad for loops and calls
020     movl    RCX, [RDX + #12 (8-bit)]	# range
023     NullCheck RDX

023     B2: #	out( B48 B3 ) <- in( B1 )  Freq: 0.999999
023     testl   RCX, RCX	# unsigned
025     jbe,u   B48  P=0.000000 C=7768.000000

02b     B3: #	out( B49 B4 ) <- in( B2 )  Freq: 0.999999
02b     movsbl  RBP, [RDX + #16 (8-bit)]	# byte
02f     testl   RBP, RBP
031     jl     B49  P=0.000000 C=7768.000000

037     B4: #	out( B67 B5 ) <- in( B3 )  Freq: 0.999998
037     movq    RSI, RDX	# spill
03a     xorl    RDX, RDX	# int
03c     call,static  java.math.BigInteger::stripLeadingZeroBytes
        # java.math.BigInteger::<init> @ bci:55 (line 318) L[0]=#ScObj0 L[1]=_ L[2]=_ L[3]=_ STK[0]=#ScObj0
        # ScObj0 java/math/BigInteger={ [signum :0]=#0, [bitCountPlusOne :1]=#0, [bitLengthPlusOne :2]=#0, [lowestSetBitPlusTwo :3]=#0, [firstNonzeroIntNumPlusTwo :4]=#0, [mag :5]=#NULL }
        # java.math.BigInteger::<init> @ bci:5 (line 338) L[0]=_ L[1]=_
        # jit::micro @ bci:5 (line 5) L[0]=rsp + #0 L[1]=_ L[2]=rsp + #8 L[3]=rsp + #16 L[4]=_ L[5]=_ L[6]=_ STK[0]=#ScObj0
        # ScObj0 java/math/BigInteger={ [signum :0]=#0, [bitCountPlusOne :1]=#0, [bitLengthPlusOne :2]=#0, [lowestSetBitPlusTwo :3]=#0, [firstNonzeroIntNumPlusTwo :4]=#0, [mag :5]=#NULL }
        # OopMap {[0]=Oop [8]=Oop off=68/0x44}

044     B5: #	out( B60 B6 ) <- in( B4 )  Freq: 0.999978
        # Block is sole successor of call
044     movq    [rsp + #24], RAX	# spill
049     movl    RBP, [RAX + #12 (8-bit)]	# range
04c     NullCheck RAX

04c     B6: #	out( B50 B7 ) <- in( B5 )  Freq: 0.999977
04c     testl   RBP, RBP	# unsigned
04e     jbe,u   B50  P=0.000000 C=7768.000000

054     B7: #	out( B51 B8 ) <- in( B6 )  Freq: 0.999977
        nop 	# 12 bytes pad for loops and calls
060     cmpl    RBP, #67108864
066     jge     B51  P=0.000000 C=7768.000000

06c     B8: #	out( B61 B9 ) <- in( B7 )  Freq: 0.999976
06c     movq    R10, [rsp + #8]	# spill
071     movl    RCX, [R10 + #12 (8-bit)]	# range
075     NullCheck R10

075     B9: #	out( B52 B10 ) <- in( B8 )  Freq: 0.999975
075     testl   RCX, RCX	# unsigned
077     jbe,u   B52  P=0.000000 C=7768.000000

07d     B10: #	out( B53 B11 ) <- in( B9 )  Freq: 0.999975
07d     movsbl  RBP, [R10 + #16 (8-bit)]	# byte
082     testl   RBP, RBP
084     jl     B53  P=0.000000 C=7768.000000

08a     B11: #	out( B68 B12 ) <- in( B10 )  Freq: 0.999974
08a     movq    RSI, R10	# spill
08d     xorl    RDX, RDX	# int
        nop 	# 1 bytes pad for loops and calls
090     call,static  java.math.BigInteger::stripLeadingZeroBytes
        # java.math.BigInteger::<init> @ bci:55 (line 318) L[0]=#ScObj0 L[1]=_ L[2]=_ L[3]=_ STK[0]=#ScObj0
        # ScObj0 java/math/BigInteger={ [signum :0]=#0, [bitCountPlusOne :1]=#0, [bitLengthPlusOne :2]=#0, [lowestSetBitPlusTwo :3]=#0, [firstNonzeroIntNumPlusTwo :4]=#0, [mag :5]=#NULL }
        # java.math.BigInteger::<init> @ bci:5 (line 338) L[0]=_ L[1]=_
        # jit::micro @ bci:15 (line 6) L[0]=rsp + #0 L[1]=_ L[2]=_ L[3]=rsp + #16 L[4]=#ScObj0 L[5]=_ L[6]=_ STK[0]=#ScObj1
        # ScObj0 java/math/BigInteger={ [signum :0]=#1, [bitCountPlusOne :1]=#0, [bitLengthPlusOne :2]=#0, [lowestSetBitPlusTwo :3]=#0, [firstNonzeroIntNumPlusTwo :4]=#0, [mag :5]=rsp + #24 }
        # ScObj1 java/math/BigInteger={ [signum :0]=#0, [bitCountPlusOne :1]=#0, [bitLengthPlusOne :2]=#0, [lowestSetBitPlusTwo :3]=#0, [firstNonzeroIntNumPlusTwo :4]=#0, [mag :5]=#NULL }
        # OopMap {[0]=Oop [24]=Oop off=152/0x98}

098     B12: #	out( B62 B13 ) <- in( B11 )  Freq: 0.999954
        # Block is sole successor of call
098     movq    [rsp + #40], RAX	# spill
        nop 	# 3 bytes pad for loops and calls
0a0     movl    RBP, [RAX + #12 (8-bit)]	# range
0a3     NullCheck RAX

0a3     B13: #	out( B54 B14 ) <- in( B12 )  Freq: 0.999953
0a3     testl   RBP, RBP	# unsigned
0a5     jbe,u   B54  P=0.000000 C=7768.000000

0ab     B14: #	out( B55 B15 ) <- in( B13 )  Freq: 0.999953
0ab     cmpl    RBP, #67108864
0b1     jge     B55  P=0.000000 C=7768.000000

0b7     B15: #	out( B43 B16 ) <- in( B14 )  Freq: 0.999952
0b7     # TLS is in R15
0b7     movq    RAX, [R15 + #280 (32-bit)]	# ptr
0be     movq    R10, RAX	# spill
0c1     addq    R10, #40	# ptr
0c5     # TLS is in R15
0c5     cmpq    R10, [R15 + #296 (32-bit)]	# raw ptr
0cc     jnb,u   B43  P=0.000100 C=-1.000000

0d2     B16: #	out( B17 ) <- in( B15 )  Freq: 0.999852
0d2     # TLS is in R15
0d2     movq    [R15 + #280 (32-bit)], R10	# ptr
0d9     movq    R11, RAX	# spill
0dc     addq    R11, #16	# ptr
0e0     movq    [RAX], #1	# long
0e7     PREFETCHW [R10 + #192 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
0ef     movl    [RAX + #8 (8-bit)], narrowklass: precise klass java/math/BigInteger: 0x00007f4bc810d350:Constant:exact *	# compressed klass ptr
0f6     movl    [RAX + #12 (8-bit)], R12	# int (R12_heapbase==0)
0fa     clear_mem_imm R11 , #3  
	

10f     B17: #	out( B69 B18 ) <- in( B44 B16 )  Freq: 0.999952
10f     
10f     # checkcastPP of RAX
10f     movq    [rsp + #32], RAX	# spill
114     movq    RSI, [rsp + #40]	# spill
119     movq    RDX, [rsp + #24]	# spill
11e     movq    RBP, RAX	# spill
        nop 	# 3 bytes pad for loops and calls
124     call,static  java.math.BigInteger::add
        # java.math.BigInteger::add @ bci:41 (line 1329) L[0]=#ScObj0 L[1]=_ L[2]=_ L[3]=_ STK[0]=RBP STK[1]=RBP
        # ScObj0 java/math/BigInteger={ [signum :0]=#1, [bitCountPlusOne :1]=#0, [bitLengthPlusOne :2]=#0, [lowestSetBitPlusTwo :3]=#0, [firstNonzeroIntNumPlusTwo :4]=#0, [mag :5]=rsp + #40 }
        # jit::micro @ bci:24 (line 7) L[0]=rsp + #0 L[1]=_ L[2]=_ L[3]=rsp + #16 L[4]=_ L[5]=_ L[6]=_
        # OopMap {rbp=Oop [0]=Oop [32]=Oop [40]=Oop off=300/0x12c}

12c     B18: #	out( B63 B19 ) <- in( B17 )  Freq: 0.999932
        # Block is sole successor of call
12c     movq    RBX, RAX	# spill
12f     movl    RBP, [RAX + #12 (8-bit)]	# range
132     NullCheck RAX

132     B19: #	out( B56 B20 ) <- in( B18 )  Freq: 0.999931
132     testl   RBP, RBP	# unsigned
134     jbe,u   B56  P=0.000000 C=7394.000000

13a     B20: #	out( B34 B21 ) <- in( B19 )  Freq: 0.999931
13a     # TLS is in R15
        nop 	# 6 bytes pad for loops and calls
140     cmpb    [R15 + #56 (8-bit)], #0
145     jne     B34  P=0.001000 C=-1.000000

14b     B21: #	out( B23 B22 ) <- in( B47 B36 B34 B20 )  Freq: 0.999931
14b     movq    R10, [rsp + #32]	# spill
150     movl    [R10 + #12 (8-bit)], #1	# int ! Field: java/math/BigInteger.signum
158     encode_heap_oop_not_null R10,RBX
1a1     movq    R11, [rsp + #32]	# spill
1a6     movl    [R11 + #32 (8-bit)], R10	# compressed ptr ! Field: java/math/BigInteger.mag
1aa     movq    R10, RBX	# ptr -> long
1ad     movq    R11, R11	# ptr -> long
1ad     xorq    R10, R11	# long
1b0     shrq    R10, #24
1b4     testq   R10, R10
1b7     je,s   B23  P=0.001000 C=-1.000000

1b9     B22: #	out( B37 B23 ) <- in( B21 )  Freq: 0.998931
1b9     shrq    R11, #9
1bd     movq    RDI, 0x00007f4c4f300000	# ptr
1c7     addq    RDI, R11	# ptr
1ca     cmpb    [RDI], #4
1cd     jne     B37  P=0.001000 C=-1.000000

1d3     B23: #	out( B57 B24 ) <- in( B42 B22 B21 )  Freq: 0.999931
1d3     movl    RBP, [RBX + #12 (8-bit)]	# range
        nop 	# 10 bytes pad for loops and calls
1e0     cmpl    RBP, #67108864
1e6     jge     B57  P=0.000000 C=7394.000000

1ec     B24: #	out( B70 B25 ) <- in( B23 )  Freq: 0.99993
1ec     movq    RSI, [rsp + #32]	# spill
        nop 	# 3 bytes pad for loops and calls
1f4     call,static  java.math.BigInteger::toByteArray
        # jit::micro @ bci:27 (line 7) L[0]=rsp + #0 L[1]=_ L[2]=_ L[3]=rsp + #16 L[4]=_ L[5]=_ L[6]=_
        # OopMap {[0]=Oop off=508/0x1fc}

1fc     B25: #	out( B64 B26 ) <- in( B24 )  Freq: 0.99991
        # Block is sole successor of call
        nop 	# 4 bytes pad for loops and calls
200     movl    RBP, [RAX + #12 (8-bit)]	# range
203     NullCheck RAX

203     B26: #	out( B65 B27 ) <- in( B25 )  Freq: 0.999909
203     movq    RBX, [rsp + #0]	# spill
207     movl    R13, [RBX + #12 (8-bit)]	# range
20b     NullCheck RBX

20b     B27: #	out( B45 B28 ) <- in( B26 )  Freq: 0.999908
20b     cmpl    R13, RBP	# unsigned
20e     jb,u   B45  P=0.000001 C=-1.000000

214     B28: #	out( B31 B29 ) <- in( B27 )  Freq: 0.999907
214     testl   RBP, RBP	# unsigned
216     jbe,us  B31  P=0.000001 C=-1.000000

218     B29: #	out( B33 B30 ) <- in( B28 )  Freq: 0.999906
218     movq    RDI, RAX	# spill
21b     addq    RDI, #16	# ptr
21f     movq    RSI, RBX	# spill
222     addq    RSI, #16	# ptr
226     movslq  RDX, RBP	# i2l
229     cmpq    RDX, #32	# unsigned
22d     jnbe,us  B33  P=0.500000 C=-1.000000

22f     B30: #	out( B31 ) <- in( B29 )  Freq: 0.499953
22f     # castLL of RDX
22f     vector_mask_gen32 K7, RDX 	! vector mask generator
243     vector_masked_load XMM0, [RDI], K7 	! vector masked copy
249     vector_masked_store [RSI], XMM0, K7 	! vector masked store

24f     B31: #	out( B46 B32 ) <- in( B30 B33 B28 )  Freq: 0.999907
24f     
24f     movl    RBP, R13	# spill
252     decl    RBP	# int
254     andl    RBP, [RSP + #16 (32-bit)]	# int
258     testl   R13, R13	# unsigned
        nop 	# 5 bytes pad for loops and calls
260     jbe,u   B46  P=0.000001 C=-1.000000

266     B32: #	out( N1 ) <- in( B31 )  Freq: 0.999906
266     movsbl  RAX, [RBX + #16 + RBP]	# byte
26b     vzeroupper
	addq    rsp, 64	# Destroy frame
	popq    rbp
	cmpq     rsp, poll_offset[r15_thread] 
	ja       #safepoint_stub	# Safepoint: poll for GC

280     ret

281     B33: #	out( B31 ) <- in( B29 )  Freq: 0.499953
281     call_leaf_nofp,runtime  arrayof_jbyte_disjoint_arraycopy
        No JVM State Info
        # 
291     jmp,s   B31

293     B34: #	out( B21 B35 ) <- in( B20 )  Freq: 0.000999918
293     movq    R10, [rsp + #32]	# spill
298     movl    R11, [R10 + #32 (8-bit)]	# compressed ptr ! Field: java/math/BigInteger.mag
        nop 	# 4 bytes pad for loops and calls
2a0     testl   R11, R11	# compressed ptr
2a3     je     B21  P=0.500000 C=-1.000000

2a9     B35: #	out( B47 B36 ) <- in( B34 )  Freq: 0.000499959
2a9     # TLS is in R15
2a9     movq    R10, [R15 + #32 (8-bit)]	# long
2ad     decode_heap_oop RDI,R11
2d9     testq   R10, R10
        nop 	# 4 bytes pad for loops and calls
2e0     je     B47  P=0.001000 C=-1.000000

2e6     B36: #	out( B21 ) <- in( B35 )  Freq: 0.000499459
2e6     # TLS is in R15
2e6     movq    R11, [R15 + #48 (8-bit)]	# ptr
2ea     movq    [R11 + #-8 + R10], RDI	# ptr
2ef     addq    R10, #-8	# long
2f3     # TLS is in R15
2f3     movq    [R15 + #32 (8-bit)], R10	# long
2f7     jmp     B21

2fc     B37: #	out( B41 B38 ) <- in( B22 )  Freq: 0.000998931
2fc     # TLS is in R15
2fc     movq    R10, [R15 + #64 (8-bit)]	# long
300     # TLS is in R15
300     movq    R11, [R15 + #80 (8-bit)]	# ptr
304     lock addl [rsp + #0], 0	! membar_volatile
30a     cmpb    [RDI], #0
30d     je,s   B41  P=0.500000 C=-1.000000

30f     B38: #	out( B40 B39 ) <- in( B37 )  Freq: 0.000499465
30f     movb    [RDI], R12	# CMS card-mark byte 0 (R12_heapbase==0)
312     testq   R10, R10
315     je,s   B40  P=0.500000 C=-1.000000

317     B39: #	out( B41 ) <- in( B38 )  Freq: 0.000249733
317     movq    [R11 + #-8 + R10], RDI	# ptr
31c     addq    R10, #-8	# long
320     # TLS is in R15
320     movq    [R15 + #64 (8-bit)], R10	# long
324     jmp,s   B41

326     B40: #	out( B41 ) <- in( B38 )  Freq: 0.000249733
326     # TLS is in R15
326     movq    RSI, R15	# spill
329     call_leaf,runtime  write_ref_field_post_entry
        No JVM State Info
        # 

339     B41: #	out( B58 B42 ) <- in( B40 B39 B37 )  Freq: 0.000998931
339     movq    R10, [rsp + #32]	# spill
33e     movl    R10, [R10 + #32 (8-bit)]	# compressed ptr ! Field: java/math/BigInteger.mag
342     testl   R10, R10	# compressed ptr
345     je     B58  P=0.000001 C=-1.000000

34b     B42: #	out( B23 ) <- in( B41 )  Freq: 0.00099893
34b     decode_heap_oop RBX,R10
377     jmp     B23

37c     B43: #	out( B66 B44 ) <- in( B15 )  Freq: 0.000100012
37c     movq    RSI, precise klass java/math/BigInteger: 0x00007f4bc810d350:Constant:exact *	# ptr
386     movq    RBP, [rsp + #0]	# spill
        nop 	# 2 bytes pad for loops and calls
38c     call,static  wrapper for: _new_instance_Java
        # java.math.BigInteger::add @ bci:29 (line 1329) L[0]=#ScObj0 L[1]=#ScObj1 L[2]=_ L[3]=_
        # ScObj0 java/math/BigInteger={ [signum :0]=#1, [bitCountPlusOne :1]=#0, [bitLengthPlusOne :2]=#0, [lowestSetBitPlusTwo :3]=#0, [firstNonzeroIntNumPlusTwo :4]=#0, [mag :5]=rsp + #40 }
        # ScObj1 java/math/BigInteger={ [signum :0]=#1, [bitCountPlusOne :1]=#0, [bitLengthPlusOne :2]=#0, [lowestSetBitPlusTwo :3]=#0, [firstNonzeroIntNumPlusTwo :4]=#0, [mag :5]=rsp + #24 }
        # jit::micro @ bci:24 (line 7) L[0]=RBP L[1]=_ L[2]=_ L[3]=rsp + #16 L[4]=_ L[5]=_ L[6]=_
        # OopMap {rbp=Oop [0]=Oop [24]=Oop [40]=Oop off=916/0x394}

394     B44: #	out( B17 ) <- in( B43 )  Freq: 0.00010001
        # Block is sole successor of call
394     jmp     B17

399     B45: #	out( N1 ) <- in( B27 )  Freq: 9.99908e-07
399     movl    RSI, #-52	# int
39e     movl    R10, [rsp + #16]	# spill
3a3     movl    [rsp + #8], R10	# spill
3a8     movq    [rsp + #24], RAX	# spill
        nop 	# 3 bytes pad for loops and calls
3b0     call,static  wrapper for: uncommon_trap(reason='intrinsic_or_type_checked_inlining' action='make_not_entrant' debug_id='0')
        # jit::micro @ bci:40 (line 8) L[0]=rsp + #0 L[1]=_ L[2]=_ L[3]=rsp + #8 L[4]=_ L[5]=_ L[6]=_ STK[0]=rsp + #24 STK[1]=#0 STK[2]=rsp + #0 STK[3]=#0 STK[4]=RBP
        # OopMap {[0]=Oop [24]=Oop off=952/0x3b8}
3b8     stop	# ShouldNotReachHere

3cc     B46: #	out( N1 ) <- in( B31 )  Freq: 9.99907e-07
3cc     movl    RSI, #-28	# int
        nop 	# 3 bytes pad for loops and calls
3d4     call,static  wrapper for: uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')
        # jit::micro @ bci:50 (line 9) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_ STK[0]=rsp + #0 STK[1]=RBP
        # OopMap {[0]=Oop off=988/0x3dc}
3dc     stop	# ShouldNotReachHere

3f0     B47: #	out( B21 ) <- in( B35 )  Freq: 4.99952e-07
3f0     # TLS is in R15
3f0     movq    RSI, R15	# spill
        nop 	# 13 bytes pad for loops and calls
400     call_leaf,runtime  write_ref_field_pre_entry
        No JVM State Info
        # 
410     jmp     B21

415     B48: #	out( N1 ) <- in( B2 )  Freq: 4.76837e-07
415     movl    RSI, #-187	# int
41a     movq    RBP, [rsp + #0]	# spill
41e     movq    R10, [rsp + #8]	# spill
423     movq    [rsp + #0], R10	# spill
427     movl    [rsp + #8], R8	# spill
42c     movq    [rsp + #16], RDX	# spill
431     movl    [rsp + #24], RCX	# spill
        nop 	# 3 bytes pad for loops and calls
438     call,static  wrapper for: uncommon_trap(reason='unstable_if' action='reinterpret' debug_id='0')
        # java.math.BigInteger::<init> @ bci:6 (line 309) L[0]=#ScObj0 L[1]=rsp + #16 L[2]=#0 L[3]=rsp + #24 STK[0]=rsp + #24
        # ScObj0 java/math/BigInteger={ [signum :0]=#0, [bitCountPlusOne :1]=#0, [bitLengthPlusOne :2]=#0, [lowestSetBitPlusTwo :3]=#0, [firstNonzeroIntNumPlusTwo :4]=#0, [mag :5]=#NULL }
        # java.math.BigInteger::<init> @ bci:5 (line 338) L[0]=_ L[1]=_
        # jit::micro @ bci:5 (line 5) L[0]=RBP L[1]=_ L[2]=rsp + #0 L[3]=rsp + #8 L[4]=_ L[5]=_ L[6]=_ STK[0]=#ScObj0
        # ScObj0 java/math/BigInteger={ [signum :0]=#0, [bitCountPlusOne :1]=#0, [bitLengthPlusOne :2]=#0, [lowestSetBitPlusTwo :3]=#0, [firstNonzeroIntNumPlusTwo :4]=#0, [mag :5]=#NULL }
        # OopMap {rbp=Oop [0]=Oop [16]=Oop off=1088/0x440}
440     stop	# ShouldNotReachHere

454     B49: #	out( N1 ) <- in( B3 )  Freq: 4.76836e-07
454     movl    RSI, #-187	# int
459     movq    [rsp + #24], RDX	# spill
45e     movl    [rsp + #20], RCX	# spill
        nop 	# 2 bytes pad for loops and calls
464     call,static  wrapper for: uncommon_trap(reason='unstable_if' action='reinterpret' debug_id='0')
        # java.math.BigInteger::<init> @ bci:30 (line 314) L[0]=#ScObj0 L[1]=rsp + #24 L[2]=#0 L[3]=rsp + #20 STK[0]=RBP
        # ScObj0 java/math/BigInteger={ [signum :0]=#0, [bitCountPlusOne :1]=#0, [bitLengthPlusOne :2]=#0, [lowestSetBitPlusTwo :3]=#0, [firstNonzeroIntNumPlusTwo :4]=#0, [mag :5]=#NULL }
        # java.math.BigInteger::<init> @ bci:5 (line 338) L[0]=_ L[1]=_
        # jit::micro @ bci:5 (line 5) L[0]=rsp + #0 L[1]=_ L[2]=rsp + #8 L[3]=rsp + #16 L[4]=_ L[5]=_ L[6]=_ STK[0]=#ScObj0
        # ScObj0 java/math/BigInteger={ [signum :0]=#0, [bitCountPlusOne :1]=#0, [bitLengthPlusOne :2]=#0, [lowestSetBitPlusTwo :3]=#0, [firstNonzeroIntNumPlusTwo :4]=#0, [mag :5]=#NULL }
        # OopMap {[0]=Oop [8]=Oop [24]=Oop off=1132/0x46c}
46c     stop	# ShouldNotReachHere

480     B50: #	out( N1 ) <- in( B6 )  Freq: 4.76826e-07
480     movl    RSI, #-187	# int
        nop 	# 3 bytes pad for loops and calls
488     call,static  wrapper for: uncommon_trap(reason='unstable_if' action='reinterpret' debug_id='0')
        # java.math.BigInteger::<init> @ bci:67 (line 319) L[0]=#ScObj0 L[1]=_ L[2]=_ L[3]=_ STK[0]=#ScObj0 STK[1]=RBP
        # ScObj0 java/math/BigInteger={ [signum :0]=#0, [bitCountPlusOne :1]=#0, [bitLengthPlusOne :2]=#0, [lowestSetBitPlusTwo :3]=#0, [firstNonzeroIntNumPlusTwo :4]=#0, [mag :5]=rsp + #24 }
        # java.math.BigInteger::<init> @ bci:5 (line 338) L[0]=_ L[1]=_
        # jit::micro @ bci:5 (line 5) L[0]=rsp + #0 L[1]=_ L[2]=rsp + #8 L[3]=rsp + #16 L[4]=_ L[5]=_ L[6]=_ STK[0]=#ScObj0
        # ScObj0 java/math/BigInteger={ [signum :0]=#0, [bitCountPlusOne :1]=#0, [bitLengthPlusOne :2]=#0, [lowestSetBitPlusTwo :3]=#0, [firstNonzeroIntNumPlusTwo :4]=#0, [mag :5]=rsp + #24 }
        # OopMap {[0]=Oop [8]=Oop [24]=Oop off=1168/0x490}
490     stop	# ShouldNotReachHere

4a4     B51: #	out( N1 ) <- in( B7 )  Freq: 4.76826e-07
4a4     movl    RSI, #-187	# int
        nop 	# 3 bytes pad for loops and calls
4ac     call,static  wrapper for: uncommon_trap(reason='unstable_if' action='reinterpret' debug_id='0')
        # java.math.BigInteger::<init> @ bci:85 (line 321) L[0]=#ScObj0 L[1]=_ L[2]=_ L[3]=_ STK[0]=RBP STK[1]=#67108864
        # ScObj0 java/math/BigInteger={ [signum :0]=#1, [bitCountPlusOne :1]=#0, [bitLengthPlusOne :2]=#0, [lowestSetBitPlusTwo :3]=#0, [firstNonzeroIntNumPlusTwo :4]=#0, [mag :5]=rsp + #24 }
        # java.math.BigInteger::<init> @ bci:5 (line 338) L[0]=_ L[1]=_
        # jit::micro @ bci:5 (line 5) L[0]=rsp + #0 L[1]=_ L[2]=rsp + #8 L[3]=rsp + #16 L[4]=_ L[5]=_ L[6]=_ STK[0]=#ScObj0
        # ScObj0 java/math/BigInteger={ [signum :0]=#1, [bitCountPlusOne :1]=#0, [bitLengthPlusOne :2]=#0, [lowestSetBitPlusTwo :3]=#0, [firstNonzeroIntNumPlusTwo :4]=#0, [mag :5]=rsp + #24 }
        # OopMap {[0]=Oop [8]=Oop [24]=Oop off=1204/0x4b4}
4b4     stop	# ShouldNotReachHere

4c8     B52: #	out( N1 ) <- in( B9 )  Freq: 4.76825e-07
4c8     movl    RSI, #-187	# int
4cd     movq    RBP, [rsp + #0]	# spill
4d1     movl    R11, [rsp + #16]	# spill
4d6     movl    [rsp + #0], R11	# spill
4da     movl    [rsp + #16], RCX	# spill
        nop 	# 2 bytes pad for loops and calls
4e0     call,static  wrapper for: uncommon_trap(reason='unstable_if' action='reinterpret' debug_id='0')
        # java.math.BigInteger::<init> @ bci:6 (line 309) L[0]=#ScObj0 L[1]=rsp + #8 L[2]=#0 L[3]=rsp + #16 STK[0]=rsp + #16
        # ScObj0 java/math/BigInteger={ [signum :0]=#0, [bitCountPlusOne :1]=#0, [bitLengthPlusOne :2]=#0, [lowestSetBitPlusTwo :3]=#0, [firstNonzeroIntNumPlusTwo :4]=#0, [mag :5]=#NULL }
        # java.math.BigInteger::<init> @ bci:5 (line 338) L[0]=_ L[1]=_
        # jit::micro @ bci:15 (line 6) L[0]=RBP L[1]=_ L[2]=_ L[3]=rsp + #0 L[4]=#ScObj0 L[5]=_ L[6]=_ STK[0]=#ScObj1
        # ScObj0 java/math/BigInteger={ [signum :0]=#1, [bitCountPlusOne :1]=#0, [bitLengthPlusOne :2]=#0, [lowestSetBitPlusTwo :3]=#0, [firstNonzeroIntNumPlusTwo :4]=#0, [mag :5]=rsp + #24 }
        # ScObj1 java/math/BigInteger={ [signum :0]=#0, [bitCountPlusOne :1]=#0, [bitLengthPlusOne :2]=#0, [lowestSetBitPlusTwo :3]=#0, [firstNonzeroIntNumPlusTwo :4]=#0, [mag :5]=#NULL }
        # OopMap {rbp=Oop [8]=Oop [24]=Oop off=1256/0x4e8}
4e8     stop	# ShouldNotReachHere

4fc     B53: #	out( N1 ) <- in( B10 )  Freq: 4.76825e-07
4fc     movl    RSI, #-187	# int
501     movl    R8, [rsp + #16]	# spill
506     movl    [rsp + #8], R8	# spill
50b     movq    [rsp + #16], R10	# spill
510     movl    [rsp + #12], RCX	# spill
514     call,static  wrapper for: uncommon_trap(reason='unstable_if' action='reinterpret' debug_id='0')
        # java.math.BigInteger::<init> @ bci:30 (line 314) L[0]=#ScObj0 L[1]=rsp + #16 L[2]=#0 L[3]=rsp + #12 STK[0]=RBP
        # ScObj0 java/math/BigInteger={ [signum :0]=#0, [bitCountPlusOne :1]=#0, [bitLengthPlusOne :2]=#0, [lowestSetBitPlusTwo :3]=#0, [firstNonzeroIntNumPlusTwo :4]=#0, [mag :5]=#NULL }
        # java.math.BigInteger::<init> @ bci:5 (line 338) L[0]=_ L[1]=_
        # jit::micro @ bci:15 (line 6) L[0]=rsp + #0 L[1]=_ L[2]=_ L[3]=rsp + #8 L[4]=#ScObj0 L[5]=_ L[6]=_ STK[0]=#ScObj1
        # ScObj0 java/math/BigInteger={ [signum :0]=#1, [bitCountPlusOne :1]=#0, [bitLengthPlusOne :2]=#0, [lowestSetBitPlusTwo :3]=#0, [firstNonzeroIntNumPlusTwo :4]=#0, [mag :5]=rsp + #24 }
        # ScObj1 java/math/BigInteger={ [signum :0]=#0, [bitCountPlusOne :1]=#0, [bitLengthPlusOne :2]=#0, [lowestSetBitPlusTwo :3]=#0, [firstNonzeroIntNumPlusTwo :4]=#0, [mag :5]=#NULL }
        # OopMap {[0]=Oop [16]=Oop [24]=Oop off=1308/0x51c}
51c     stop	# ShouldNotReachHere

530     B54: #	out( N1 ) <- in( B13 )  Freq: 4.76815e-07
530     movl    RSI, #-187	# int
535     movl    R10, [rsp + #16]	# spill
53a     movl    [rsp + #8], R10	# spill
        nop 	# 1 bytes pad for loops and calls
540     call,static  wrapper for: uncommon_trap(reason='unstable_if' action='reinterpret' debug_id='0')
        # java.math.BigInteger::<init> @ bci:67 (line 319) L[0]=#ScObj0 L[1]=_ L[2]=_ L[3]=_ STK[0]=#ScObj0 STK[1]=RBP
        # ScObj0 java/math/BigInteger={ [signum :0]=#0, [bitCountPlusOne :1]=#0, [bitLengthPlusOne :2]=#0, [lowestSetBitPlusTwo :3]=#0, [firstNonzeroIntNumPlusTwo :4]=#0, [mag :5]=rsp + #40 }
        # java.math.BigInteger::<init> @ bci:5 (line 338) L[0]=_ L[1]=_
        # jit::micro @ bci:15 (line 6) L[0]=rsp + #0 L[1]=_ L[2]=_ L[3]=rsp + #8 L[4]=#ScObj0 L[5]=_ L[6]=_ STK[0]=#ScObj1
        # ScObj0 java/math/BigInteger={ [signum :0]=#1, [bitCountPlusOne :1]=#0, [bitLengthPlusOne :2]=#0, [lowestSetBitPlusTwo :3]=#0, [firstNonzeroIntNumPlusTwo :4]=#0, [mag :5]=rsp + #24 }
        # ScObj1 java/math/BigInteger={ [signum :0]=#0, [bitCountPlusOne :1]=#0, [bitLengthPlusOne :2]=#0, [lowestSetBitPlusTwo :3]=#0, [firstNonzeroIntNumPlusTwo :4]=#0, [mag :5]=rsp + #40 }
        # OopMap {[0]=Oop [24]=Oop [40]=Oop off=1352/0x548}
548     stop	# ShouldNotReachHere

55c     B55: #	out( N1 ) <- in( B14 )  Freq: 4.76815e-07
55c     movl    RSI, #-187	# int
561     movl    R10, [rsp + #16]	# spill
566     movl    [rsp + #8], R10	# spill
        nop 	# 1 bytes pad for loops and calls
56c     call,static  wrapper for: uncommon_trap(reason='unstable_if' action='reinterpret' debug_id='0')
        # java.math.BigInteger::<init> @ bci:85 (line 321) L[0]=#ScObj0 L[1]=_ L[2]=_ L[3]=_ STK[0]=RBP STK[1]=#67108864
        # ScObj0 java/math/BigInteger={ [signum :0]=#1, [bitCountPlusOne :1]=#0, [bitLengthPlusOne :2]=#0, [lowestSetBitPlusTwo :3]=#0, [firstNonzeroIntNumPlusTwo :4]=#0, [mag :5]=rsp + #40 }
        # java.math.BigInteger::<init> @ bci:5 (line 338) L[0]=_ L[1]=_
        # jit::micro @ bci:15 (line 6) L[0]=rsp + #0 L[1]=_ L[2]=_ L[3]=rsp + #8 L[4]=#ScObj0 L[5]=_ L[6]=_ STK[0]=#ScObj1
        # ScObj0 java/math/BigInteger={ [signum :0]=#1, [bitCountPlusOne :1]=#0, [bitLengthPlusOne :2]=#0, [lowestSetBitPlusTwo :3]=#0, [firstNonzeroIntNumPlusTwo :4]=#0, [mag :5]=rsp + #24 }
        # ScObj1 java/math/BigInteger={ [signum :0]=#1, [bitCountPlusOne :1]=#0, [bitLengthPlusOne :2]=#0, [lowestSetBitPlusTwo :3]=#0, [firstNonzeroIntNumPlusTwo :4]=#0, [mag :5]=rsp + #40 }
        # OopMap {[0]=Oop [24]=Oop [40]=Oop off=1396/0x574}
574     stop	# ShouldNotReachHere

588     B56: #	out( N1 ) <- in( B19 )  Freq: 4.76804e-07
588     movl    RSI, #-187	# int
58d     movl    R10, [rsp + #16]	# spill
592     movl    [rsp + #8], R10	# spill
597     pushq   [rsp + #32]	# 64-bit mem-mem spill
	popq    [rsp + #16]
5a1     movq    [rsp + #40], RAX	# spill
        nop 	# 2 bytes pad for loops and calls
5a8     call,static  wrapper for: uncommon_trap(reason='unstable_if' action='reinterpret' debug_id='0')
        # java.math.BigInteger::<init> @ bci:7 (line 1136) L[0]=rsp + #16 L[1]=rsp + #40 L[2]=#1 STK[0]=rsp + #16 STK[1]=RBP
        # java.math.BigInteger::add @ bci:48 (line 1329) L[0]=_ L[1]=_ L[2]=_ L[3]=_ STK[0]=rsp + #16
        # jit::micro @ bci:24 (line 7) L[0]=rsp + #0 L[1]=_ L[2]=_ L[3]=rsp + #8 L[4]=_ L[5]=_ L[6]=_
        # OopMap {[0]=Oop [16]=Oop [40]=Oop off=1456/0x5b0}
5b0     stop	# ShouldNotReachHere

5c4     B57: #	out( N1 ) <- in( B23 )  Freq: 4.76804e-07
5c4     movl    RSI, #-187	# int
5c9     movl    R10, [rsp + #16]	# spill
5ce     movl    [rsp + #8], R10	# spill
5d3     pushq   [rsp + #32]	# 64-bit mem-mem spill
	popq    [rsp + #16]
        nop 	# 3 bytes pad for loops and calls
5e0     call,static  wrapper for: uncommon_trap(reason='unstable_if' action='reinterpret' debug_id='0')
        # java.math.BigInteger::<init> @ bci:30 (line 1138) L[0]=rsp + #16 L[1]=_ L[2]=_ STK[0]=RBP STK[1]=#67108864
        # java.math.BigInteger::add @ bci:48 (line 1329) L[0]=_ L[1]=_ L[2]=_ L[3]=_ STK[0]=rsp + #16
        # jit::micro @ bci:24 (line 7) L[0]=rsp + #0 L[1]=_ L[2]=_ L[3]=rsp + #8 L[4]=_ L[5]=_ L[6]=_
        # OopMap {[0]=Oop [16]=Oop off=1512/0x5e8}
5e8     stop	# ShouldNotReachHere

5fc     B58: #	out( N1 ) <- in( B41 )  Freq: 1.0122e-09
5fc     movl    RSI, #-10	# int
        nop 	# 3 bytes pad for loops and calls
604     call,static  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # java.math.BigInteger::<init> @ bci:27 (line 1138) L[0]=_ L[1]=_ L[2]=_ STK[0]=#NULL
        # java.math.BigInteger::add @ bci:48 (line 1329) L[0]=_ L[1]=_ L[2]=_ L[3]=_ STK[0]=_
        # jit::micro @ bci:24 (line 7) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_
        # OopMap {off=1548/0x60c}
60c     stop	# ShouldNotReachHere

620     B59: #	out( N1 ) <- in( B1 )  Freq: 1.01328e-06
620     movl    RSI, #-10	# int
        nop 	# 3 bytes pad for loops and calls
628     call,static  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # java.math.BigInteger::<init> @ bci:4 (line 338) L[0]=_ L[1]=_ STK[0]=_ STK[1]=_ STK[2]=_ STK[3]=#NULL
        # jit::micro @ bci:5 (line 5) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_ STK[0]=_
        # OopMap {off=1584/0x630}
630     stop	# ShouldNotReachHere

644     B60: #	out( N1 ) <- in( B5 )  Freq: 1.01326e-06
644     movl    RSI, #-10	# int
        nop 	# 3 bytes pad for loops and calls
64c     call,static  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # java.math.BigInteger::<init> @ bci:66 (line 319) L[0]=_ L[1]=_ L[2]=_ L[3]=_ STK[0]=_ STK[1]=#NULL
        # java.math.BigInteger::<init> @ bci:5 (line 338) L[0]=_ L[1]=_
        # jit::micro @ bci:5 (line 5) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_ STK[0]=_
        # OopMap {off=1620/0x654}
654     stop	# ShouldNotReachHere

668     B61: #	out( N1 ) <- in( B8 )  Freq: 1.01325e-06
668     movl    RSI, #-10	# int
        nop 	# 3 bytes pad for loops and calls
670     call,static  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # java.math.BigInteger::<init> @ bci:4 (line 338) L[0]=_ L[1]=_ STK[0]=_ STK[1]=_ STK[2]=_ STK[3]=#NULL
        # jit::micro @ bci:15 (line 6) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_ STK[0]=_
        # OopMap {off=1656/0x678}
678     stop	# ShouldNotReachHere

68c     B62: #	out( N1 ) <- in( B12 )  Freq: 1.01323e-06
68c     movl    RSI, #-10	# int
        nop 	# 3 bytes pad for loops and calls
694     call,static  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # java.math.BigInteger::<init> @ bci:66 (line 319) L[0]=_ L[1]=_ L[2]=_ L[3]=_ STK[0]=_ STK[1]=#NULL
        # java.math.BigInteger::<init> @ bci:5 (line 338) L[0]=_ L[1]=_
        # jit::micro @ bci:15 (line 6) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_ STK[0]=_
        # OopMap {off=1692/0x69c}
69c     stop	# ShouldNotReachHere

6b0     B63: #	out( N1 ) <- in( B18 )  Freq: 1.01321e-06
6b0     movl    RSI, #-10	# int
        nop 	# 3 bytes pad for loops and calls
6b8     call,static  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # java.math.BigInteger::<init> @ bci:6 (line 1136) L[0]=_ L[1]=_ L[2]=_ STK[0]=_ STK[1]=#NULL
        # java.math.BigInteger::add @ bci:48 (line 1329) L[0]=_ L[1]=_ L[2]=_ L[3]=_ STK[0]=_
        # jit::micro @ bci:24 (line 7) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_
        # OopMap {off=1728/0x6c0}
6c0     stop	# ShouldNotReachHere

6d4     B64: #	out( N1 ) <- in( B25 )  Freq: 1.01319e-06
6d4     movl    RSI, #-10	# int
        nop 	# 3 bytes pad for loops and calls
6dc     call,static  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # jit::micro @ bci:39 (line 8) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_ STK[0]=_ STK[1]=_ STK[2]=_ STK[3]=_ STK[4]=#NULL
        # OopMap {off=1764/0x6e4}
6e4     stop	# ShouldNotReachHere

6f8     B65: #	out( N1 ) <- in( B26 )  Freq: 1.01319e-06
6f8     movl    RSI, #-10	# int
6fd     movq    [rsp + #0], RAX	# spill
        nop 	# 3 bytes pad for loops and calls
704     call,static  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # jit::micro @ bci:40 (line 8) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_ STK[0]=rsp + #0 STK[1]=#0 STK[2]=#NULL STK[3]=#0 STK[4]=RBP
        # OopMap {[0]=Oop off=1804/0x70c}
70c     stop	# ShouldNotReachHere

720     B66: #	out( B71 ) <- in( B43 )  Freq: 1.00012e-09
720     # exception oop is in rax; no code emitted
720     movq    RSI, RAX	# spill
723     jmp,s   B71

725     B67: #	out( B71 ) <- in( B4 )  Freq: 9.99998e-06
725     # exception oop is in rax; no code emitted
725     movq    RSI, RAX	# spill
728     jmp,s   B71

72a     B68: #	out( B71 ) <- in( B11 )  Freq: 9.99974e-06
72a     # exception oop is in rax; no code emitted
72a     movq    RSI, RAX	# spill
72d     jmp,s   B71

72f     B69: #	out( B71 ) <- in( B17 )  Freq: 9.99952e-06
72f     # exception oop is in rax; no code emitted
72f     movq    RSI, RAX	# spill
732     jmp,s   B71

734     B70: #	out( B71 ) <- in( B24 )  Freq: 9.9993e-06
734     # exception oop is in rax; no code emitted
734     movq    RSI, RAX	# spill

737     B71: #	out( N1 ) <- in( B69 B67 B70 B68 B66 )  Freq: 3.99995e-05
737     vzeroupper
	addq    rsp, 64	# Destroy frame
	popq    rbp

73f     jmp     rethrow_stub

--------------------------------------------------------------------------------
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     605  138             jit::micro (52 bytes)
 total in heap  [0x00007f4c59124a90,0x00007f4c59126200] = 6000
 relocation     [0x00007f4c59124c08,0x00007f4c59124db8] = 432
 main code      [0x00007f4c59124dc0,0x00007f4c59125520] = 1888
 stub code      [0x00007f4c59125520,0x00007f4c59125570] = 80
 oops           [0x00007f4c59125570,0x00007f4c59125580] = 16
 metadata       [0x00007f4c59125580,0x00007f4c591255c0] = 64
 scopes data    [0x00007f4c591255c0,0x00007f4c59125ba8] = 1512
 scopes pcs     [0x00007f4c59125ba8,0x00007f4c59126138] = 1424
 dependencies   [0x00007f4c59126138,0x00007f4c59126148] = 16
 handler table  [0x00007f4c59126148,0x00007f4c591261c0] = 120
 nul chk table  [0x00007f4c591261c0,0x00007f4c59126200] = 64

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x00007f4bfdc0e4a8} 'micro' '([B[B[BI)I' in 'jit'
  # parm0:    rsi:rsi   = '[B'
  # parm1:    rdx:rdx   = '[B'
  # parm2:    rcx:rcx   = '[B'
  # parm3:    r8        = int
  #           [sp+0x50]  (sp of caller)
 ;; N1: #	out( B1 ) <- in( B59 B48 B45 B49 B60 B50 B51 B61 B52 B65 B53 B62 B54 B55 B32 B71 B46 B63 B56 B58 B57 B64 )  Freq: 1
 ;; B1: #	out( B59 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x00007f4c59124dc0:   mov    %eax,-0x16000(%rsp)
  0x00007f4c59124dc7:   push   %rbp
  0x00007f4c59124dc8:   sub    $0x40,%rsp                   ;*synchronization entry
                                                            ; - jit::micro@-1 (line 5)
  0x00007f4c59124dcc:   mov    %r8d,0x10(%rsp)
  0x00007f4c59124dd1:   mov    %rcx,0x8(%rsp)
  0x00007f4c59124dd6:   mov    %rsi,(%rsp)
  0x00007f4c59124dda:   nop
  0x00007f4c59124ddb:   nop
  0x00007f4c59124ddc:   nop
  0x00007f4c59124ddd:   nop
  0x00007f4c59124dde:   nop
  0x00007f4c59124ddf:   nop
  0x00007f4c59124de0:   mov    0xc(%rdx),%ecx               ; implicit exception: dispatches to 0x00007f4c591253e0
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.math.BigInteger::<init>@4 (line 338)
                                                            ; - jit::micro@5 (line 5)
 ;; B2: #	out( B48 B3 ) <- in( B1 )  Freq: 0.999999
  0x00007f4c59124de3:   test   %ecx,%ecx
  0x00007f4c59124de5:   jbe    0x00007f4c591251d5           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.math.BigInteger::<init>@6 (line 309)
                                                            ; - java.math.BigInteger::<init>@5 (line 338)
                                                            ; - jit::micro@5 (line 5)
 ;; B3: #	out( B49 B4 ) <- in( B2 )  Freq: 0.999999
  0x00007f4c59124deb:   movsbl 0x10(%rdx),%ebp              ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.math.BigInteger::<init>@29 (line 314)
                                                            ; - java.math.BigInteger::<init>@5 (line 338)
                                                            ; - jit::micro@5 (line 5)
  0x00007f4c59124def:   test   %ebp,%ebp
  0x00007f4c59124df1:   jl     0x00007f4c59125214           ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.math.BigInteger::<init>@30 (line 314)
                                                            ; - java.math.BigInteger::<init>@5 (line 338)
                                                            ; - jit::micro@5 (line 5)
 ;; B4: #	out( B67 B5 ) <- in( B3 )  Freq: 0.999998
  0x00007f4c59124df7:   mov    %rdx,%rsi
  0x00007f4c59124dfa:   xor    %edx,%edx
  0x00007f4c59124dfc:   vzeroupper 
  0x00007f4c59124dff:   callq  0x00007f4c59034aa0           ; ImmutableOopMap {[0]=Oop [8]=Oop }
                                                            ;*invokestatic stripLeadingZeroBytes {reexecute=0 rethrow=0 return_oop=1}
                                                            ; - java.math.BigInteger::<init>@55 (line 318)
                                                            ; - java.math.BigInteger::<init>@5 (line 338)
                                                            ; - jit::micro@5 (line 5)
                                                            ;   {static_call}
 ;; B5: #	out( B60 B6 ) <- in( B4 )  Freq: 0.999978
  0x00007f4c59124e04:   mov    %rax,0x18(%rsp)
  0x00007f4c59124e09:   mov    0xc(%rax),%ebp               ; implicit exception: dispatches to 0x00007f4c59125404
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.math.BigInteger::<init>@66 (line 319)
                                                            ; - java.math.BigInteger::<init>@5 (line 338)
                                                            ; - jit::micro@5 (line 5)
 ;; B6: #	out( B50 B7 ) <- in( B5 )  Freq: 0.999977
  0x00007f4c59124e0c:   test   %ebp,%ebp
  0x00007f4c59124e0e:   jbe    0x00007f4c59125240           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.math.BigInteger::<init>@67 (line 319)
                                                            ; - java.math.BigInteger::<init>@5 (line 338)
                                                            ; - jit::micro@5 (line 5)
 ;; B7: #	out( B51 B8 ) <- in( B6 )  Freq: 0.999977
  0x00007f4c59124e14:   nop
  0x00007f4c59124e15:   nop
  0x00007f4c59124e16:   nop
  0x00007f4c59124e17:   nop
  0x00007f4c59124e18:   nop
  0x00007f4c59124e19:   nop
  0x00007f4c59124e1a:   nop
  0x00007f4c59124e1b:   nop
  0x00007f4c59124e1c:   nop
  0x00007f4c59124e1d:   nop
  0x00007f4c59124e1e:   nop
  0x00007f4c59124e1f:   nop
  0x00007f4c59124e20:   cmp    $0x4000000,%ebp
  0x00007f4c59124e26:   jge    0x00007f4c59125264           ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.math.BigInteger::<init>@85 (line 321)
                                                            ; - java.math.BigInteger::<init>@5 (line 338)
                                                            ; - jit::micro@5 (line 5)
 ;; B8: #	out( B61 B9 ) <- in( B7 )  Freq: 0.999976
  0x00007f4c59124e2c:   mov    0x8(%rsp),%r10
  0x00007f4c59124e31:   mov    0xc(%r10),%ecx               ; implicit exception: dispatches to 0x00007f4c59125428
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.math.BigInteger::<init>@4 (line 338)
                                                            ; - jit::micro@15 (line 6)
 ;; B9: #	out( B52 B10 ) <- in( B8 )  Freq: 0.999975
  0x00007f4c59124e35:   test   %ecx,%ecx
  0x00007f4c59124e37:   jbe    0x00007f4c59125288           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.math.BigInteger::<init>@6 (line 309)
                                                            ; - java.math.BigInteger::<init>@5 (line 338)
                                                            ; - jit::micro@15 (line 6)
 ;; B10: #	out( B53 B11 ) <- in( B9 )  Freq: 0.999975
  0x00007f4c59124e3d:   movsbl 0x10(%r10),%ebp              ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.math.BigInteger::<init>@29 (line 314)
                                                            ; - java.math.BigInteger::<init>@5 (line 338)
                                                            ; - jit::micro@15 (line 6)
  0x00007f4c59124e42:   test   %ebp,%ebp
  0x00007f4c59124e44:   jl     0x00007f4c591252bc           ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.math.BigInteger::<init>@30 (line 314)
                                                            ; - java.math.BigInteger::<init>@5 (line 338)
                                                            ; - jit::micro@15 (line 6)
 ;; B11: #	out( B68 B12 ) <- in( B10 )  Freq: 0.999974
  0x00007f4c59124e4a:   mov    %r10,%rsi
  0x00007f4c59124e4d:   xor    %edx,%edx
  0x00007f4c59124e4f:   nop
  0x00007f4c59124e50:   vzeroupper 
  0x00007f4c59124e53:   callq  0x00007f4c59034aa0           ; ImmutableOopMap {[0]=Oop [24]=Oop }
                                                            ;*invokestatic stripLeadingZeroBytes {reexecute=0 rethrow=0 return_oop=1}
                                                            ; - java.math.BigInteger::<init>@55 (line 318)
                                                            ; - java.math.BigInteger::<init>@5 (line 338)
                                                            ; - jit::micro@15 (line 6)
                                                            ;   {static_call}
 ;; B12: #	out( B62 B13 ) <- in( B11 )  Freq: 0.999954
  0x00007f4c59124e58:   mov    %rax,0x28(%rsp)
  0x00007f4c59124e5d:   nop
  0x00007f4c59124e5e:   nop
  0x00007f4c59124e5f:   nop
  0x00007f4c59124e60:   mov    0xc(%rax),%ebp               ; implicit exception: dispatches to 0x00007f4c5912544c
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.math.BigInteger::<init>@66 (line 319)
                                                            ; - java.math.BigInteger::<init>@5 (line 338)
                                                            ; - jit::micro@15 (line 6)
 ;; B13: #	out( B54 B14 ) <- in( B12 )  Freq: 0.999953
  0x00007f4c59124e63:   test   %ebp,%ebp
  0x00007f4c59124e65:   jbe    0x00007f4c591252f0           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.math.BigInteger::<init>@67 (line 319)
                                                            ; - java.math.BigInteger::<init>@5 (line 338)
                                                            ; - jit::micro@15 (line 6)
 ;; B14: #	out( B55 B15 ) <- in( B13 )  Freq: 0.999953
  0x00007f4c59124e6b:   cmp    $0x4000000,%ebp
  0x00007f4c59124e71:   jge    0x00007f4c5912531c
 ;; B15: #	out( B43 B16 ) <- in( B14 )  Freq: 0.999952
  0x00007f4c59124e77:   mov    0x118(%r15),%rax
  0x00007f4c59124e7e:   mov    %rax,%r10
  0x00007f4c59124e81:   add    $0x28,%r10
  0x00007f4c59124e85:   cmp    0x128(%r15),%r10
  0x00007f4c59124e8c:   jae    0x00007f4c5912513c           ;*putfield mag {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.math.BigInteger::<init>@58 (line 318)
                                                            ; - java.math.BigInteger::<init>@5 (line 338)
                                                            ; - jit::micro@5 (line 5)
 ;; B16: #	out( B17 ) <- in( B15 )  Freq: 0.999852
  0x00007f4c59124e92:   mov    %r10,0x118(%r15)
  0x00007f4c59124e99:   mov    %rax,%r11
  0x00007f4c59124e9c:   add    $0x10,%r11
  0x00007f4c59124ea0:   movq   $0x1,(%rax)
  0x00007f4c59124ea7:   prefetchw 0xc0(%r10)
  0x00007f4c59124eaf:   movl   $0xc8300,0x8(%rax)           ;   {metadata('java/math/BigInteger')}
  0x00007f4c59124eb6:   mov    %r12d,0xc(%rax)
  0x00007f4c59124eba:   vpxor  %ymm0,%ymm0,%ymm0
  0x00007f4c59124ebe:   mov    $0x7,%r8d
  0x00007f4c59124ec4:   kmovw  %r8d,%k7
  0x00007f4c59124ec9:   vmovdqu64 %ymm0,(%r11){%k7}
 ;; B17: #	out( B69 B18 ) <- in( B44 B16 )  Freq: 0.999952
  0x00007f4c59124ecf:   mov    %rax,0x20(%rsp)              ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.math.BigInteger::add@29 (line 1329)
                                                            ; - jit::micro@24 (line 7)
  0x00007f4c59124ed4:   mov    0x28(%rsp),%rsi
  0x00007f4c59124ed9:   mov    0x18(%rsp),%rdx
  0x00007f4c59124ede:   mov    %rax,%rbp
  0x00007f4c59124ee1:   nop
  0x00007f4c59124ee2:   nop
  0x00007f4c59124ee3:   nop
  0x00007f4c59124ee4:   vzeroupper 
  0x00007f4c59124ee7:   callq  0x00007f4c59037b80           ; ImmutableOopMap {rbp=Oop [0]=Oop [32]=Oop [40]=Oop }
                                                            ;*invokestatic add {reexecute=0 rethrow=0 return_oop=1}
                                                            ; - java.math.BigInteger::add@41 (line 1329)
                                                            ; - jit::micro@24 (line 7)
                                                            ;   {static_call}
 ;; B18: #	out( B63 B19 ) <- in( B17 )  Freq: 0.999932
  0x00007f4c59124eec:   mov    %rax,%rbx
  0x00007f4c59124eef:   mov    0xc(%rax),%ebp               ; implicit exception: dispatches to 0x00007f4c59125470
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.math.BigInteger::<init>@6 (line 1136)
                                                            ; - java.math.BigInteger::add@48 (line 1329)
                                                            ; - jit::micro@24 (line 7)
 ;; B19: #	out( B56 B20 ) <- in( B18 )  Freq: 0.999931
  0x00007f4c59124ef2:   test   %ebp,%ebp
  0x00007f4c59124ef4:   jbe    0x00007f4c59125348           ;*putfield mag {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.math.BigInteger::<init>@58 (line 318)
                                                            ; - java.math.BigInteger::<init>@5 (line 338)
                                                            ; - jit::micro@5 (line 5)
 ;; B20: #	out( B34 B21 ) <- in( B19 )  Freq: 0.999931
  0x00007f4c59124efa:   nop
  0x00007f4c59124efb:   nop
  0x00007f4c59124efc:   nop
  0x00007f4c59124efd:   nop
  0x00007f4c59124efe:   nop
  0x00007f4c59124eff:   nop
  0x00007f4c59124f00:   cmpb   $0x0,0x38(%r15)
  0x00007f4c59124f05:   jne    0x00007f4c59125053           ;*putfield mag {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.math.BigInteger::<init>@20 (line 1137)
                                                            ; - java.math.BigInteger::add@48 (line 1329)
                                                            ; - jit::micro@24 (line 7)
 ;; B21: #	out( B23 B22 ) <- in( B47 B36 B34 B20 )  Freq: 0.999931
  0x00007f4c59124f0b:   mov    0x20(%rsp),%r10
  0x00007f4c59124f10:   movl   $0x1,0xc(%r10)               ;*putfield signum {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.math.BigInteger::<init>@15 (line 1136)
                                                            ; - java.math.BigInteger::add@48 (line 1329)
                                                            ; - jit::micro@24 (line 7)
  0x00007f4c59124f18:   push   %r10
  0x00007f4c59124f1a:   cmp    0xa3d846f(%rip),%r12        # 0x00007f4c634fd390
                                                            ;   {external_word}
  0x00007f4c59124f21:   je     0x00007f4c59124f3b
 ;; MacroAssembler::encode_heap_oop_not_null2: heap base corrupted?
  0x00007f4c59124f27:   movabs $0x7f4c6311ec80,%rdi         ;   {external_word}
  0x00007f4c59124f31:   and    $0xfffffffffffffff0,%rsp
  0x00007f4c59124f35:   callq  0x00007f4c627247d0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f4c59124f3a:   hlt    
  0x00007f4c59124f3b:   pop    %r10
  0x00007f4c59124f3d:   test   %rbx,%rbx
  0x00007f4c59124f40:   jne    0x00007f4c59124f5a
 ;; null oop passed to encode_heap_oop_not_null2
  0x00007f4c59124f46:   movabs $0x7f4c6311ecc0,%rdi         ;   {external_word}
  0x00007f4c59124f50:   and    $0xfffffffffffffff0,%rsp
  0x00007f4c59124f54:   callq  0x00007f4c627247d0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f4c59124f59:   hlt    
  0x00007f4c59124f5a:   mov    %rbx,%r10
  0x00007f4c59124f5d:   shr    $0x3,%r10
  0x00007f4c59124f61:   mov    0x20(%rsp),%r11
  0x00007f4c59124f66:   mov    %r10d,0x20(%r11)
  0x00007f4c59124f6a:   mov    %rbx,%r10
  0x00007f4c59124f6d:   xor    %r11,%r10
  0x00007f4c59124f70:   shr    $0x18,%r10
  0x00007f4c59124f74:   test   %r10,%r10
  0x00007f4c59124f77:   je     0x00007f4c59124f93
 ;; B22: #	out( B37 B23 ) <- in( B21 )  Freq: 0.998931
  0x00007f4c59124f79:   shr    $0x9,%r11
  0x00007f4c59124f7d:   movabs $0x7f4c4f300000,%rdi
  0x00007f4c59124f87:   add    %r11,%rdi
  0x00007f4c59124f8a:   cmpb   $0x4,(%rdi)
  0x00007f4c59124f8d:   jne    0x00007f4c591250bc           ;*putfield mag {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.math.BigInteger::<init>@20 (line 1137)
                                                            ; - java.math.BigInteger::add@48 (line 1329)
                                                            ; - jit::micro@24 (line 7)
 ;; B23: #	out( B57 B24 ) <- in( B42 B22 B21 )  Freq: 0.999931
  0x00007f4c59124f93:   mov    0xc(%rbx),%ebp               ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.math.BigInteger::<init>@27 (line 1138)
                                                            ; - java.math.BigInteger::add@48 (line 1329)
                                                            ; - jit::micro@24 (line 7)
  0x00007f4c59124f96:   nop
  0x00007f4c59124f97:   nop
  0x00007f4c59124f98:   nop
  0x00007f4c59124f99:   nop
  0x00007f4c59124f9a:   nop
  0x00007f4c59124f9b:   nop
  0x00007f4c59124f9c:   nop
  0x00007f4c59124f9d:   nop
  0x00007f4c59124f9e:   nop
  0x00007f4c59124f9f:   nop
  0x00007f4c59124fa0:   cmp    $0x4000000,%ebp
  0x00007f4c59124fa6:   jge    0x00007f4c59125384           ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.math.BigInteger::add@48 (line 1329)
                                                            ; - jit::micro@24 (line 7)
 ;; B24: #	out( B70 B25 ) <- in( B23 )  Freq: 0.99993
  0x00007f4c59124fac:   mov    0x20(%rsp),%rsi
  0x00007f4c59124fb1:   nop
  0x00007f4c59124fb2:   nop
  0x00007f4c59124fb3:   nop
  0x00007f4c59124fb4:   vzeroupper 
  0x00007f4c59124fb7:   callq  0x00007f4c591213c0           ; ImmutableOopMap {[0]=Oop }
                                                            ;*invokevirtual toByteArray {reexecute=0 rethrow=0 return_oop=1}
                                                            ; - jit::micro@27 (line 7)
                                                            ;   {optimized virtual_call}
 ;; B25: #	out( B64 B26 ) <- in( B24 )  Freq: 0.99991
  0x00007f4c59124fbc:   nop
  0x00007f4c59124fbd:   nop
  0x00007f4c59124fbe:   nop
  0x00007f4c59124fbf:   nop
  0x00007f4c59124fc0:   mov    0xc(%rax),%ebp               ; implicit exception: dispatches to 0x00007f4c59125494
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jit::micro@39 (line 8)
 ;; B26: #	out( B65 B27 ) <- in( B25 )  Freq: 0.999909
  0x00007f4c59124fc3:   mov    (%rsp),%rbx
  0x00007f4c59124fc7:   mov    0xc(%rbx),%r13d              ; implicit exception: dispatches to 0x00007f4c591254b8
 ;; B27: #	out( B45 B28 ) <- in( B26 )  Freq: 0.999908
  0x00007f4c59124fcb:   cmp    %ebp,%r13d
  0x00007f4c59124fce:   jb     0x00007f4c59125159
 ;; B28: #	out( B31 B29 ) <- in( B27 )  Freq: 0.999907
  0x00007f4c59124fd4:   test   %ebp,%ebp
  0x00007f4c59124fd6:   jbe    0x00007f4c5912500f
 ;; B29: #	out( B33 B30 ) <- in( B28 )  Freq: 0.999906
  0x00007f4c59124fd8:   mov    %rax,%rdi
  0x00007f4c59124fdb:   add    $0x10,%rdi
  0x00007f4c59124fdf:   mov    %rbx,%rsi
  0x00007f4c59124fe2:   add    $0x10,%rsi
  0x00007f4c59124fe6:   movslq %ebp,%rdx
  0x00007f4c59124fe9:   cmp    $0x20,%rdx
  0x00007f4c59124fed:   ja     0x00007f4c59125041
 ;; B30: #	out( B31 ) <- in( B29 )  Freq: 0.499953
  0x00007f4c59124fef:   movabs $0xffffffffffffffff,%r10
  0x00007f4c59124ff9:   bzhi   %rdx,%r10,%r10
  0x00007f4c59124ffe:   kmovq  %r10,%k7
  0x00007f4c59125003:   vmovdqu8 (%rdi),%ymm0{%k7}{z}
  0x00007f4c59125009:   vmovdqu8 %ymm0,(%rsi){%k7}          ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jit::micro@40 (line 8)
 ;; B31: #	out( B46 B32 ) <- in( B30 B33 B28 )  Freq: 0.999907
  0x00007f4c5912500f:   mov    %r13d,%ebp
  0x00007f4c59125012:   dec    %ebp
  0x00007f4c59125014:   and    0x10(%rsp),%ebp              ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jit::micro@49 (line 9)
  0x00007f4c59125018:   test   %r13d,%r13d
  0x00007f4c5912501b:   nop
  0x00007f4c5912501c:   nop
  0x00007f4c5912501d:   nop
  0x00007f4c5912501e:   nop
  0x00007f4c5912501f:   nop
  0x00007f4c59125020:   jbe    0x00007f4c5912518c
 ;; B32: #	out( N1 ) <- in( B31 )  Freq: 0.999906
  0x00007f4c59125026:   movsbl 0x10(%rbx,%rbp,1),%eax       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jit::micro@50 (line 9)
  0x00007f4c5912502b:   vzeroupper 
  0x00007f4c5912502e:   add    $0x40,%rsp
  0x00007f4c59125032:   pop    %rbp
  0x00007f4c59125033:   cmp    0x388(%r15),%rsp             ;   {poll_return}
  0x00007f4c5912503a:   ja     0x00007f4c59125504
  0x00007f4c59125040:   retq   
 ;; B33: #	out( B31 ) <- in( B29 )  Freq: 0.499953
  0x00007f4c59125041:   vzeroupper 
  0x00007f4c59125044:   movabs $0x7f4c590af880,%r10
  0x00007f4c5912504e:   callq  *%r10
  0x00007f4c59125051:   jmp    0x00007f4c5912500f
 ;; B34: #	out( B21 B35 ) <- in( B20 )  Freq: 0.000999918
  0x00007f4c59125053:   mov    0x20(%rsp),%r10
  0x00007f4c59125058:   mov    0x20(%r10),%r11d
  0x00007f4c5912505c:   nop
  0x00007f4c5912505d:   nop
  0x00007f4c5912505e:   nop
  0x00007f4c5912505f:   nop
  0x00007f4c59125060:   test   %r11d,%r11d
  0x00007f4c59125063:   je     0x00007f4c59124f0b
 ;; B35: #	out( B47 B36 ) <- in( B34 )  Freq: 0.000499959
  0x00007f4c59125069:   mov    0x20(%r15),%r10
  0x00007f4c5912506d:   mov    %r11,%rdi
  0x00007f4c59125070:   push   %r10
  0x00007f4c59125072:   cmp    0xa3d8317(%rip),%r12        # 0x00007f4c634fd390
                                                            ;   {external_word}
  0x00007f4c59125079:   je     0x00007f4c59125093
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x00007f4c5912507f:   movabs $0x7f4c6311ed30,%rdi         ;   {external_word}
  0x00007f4c59125089:   and    $0xfffffffffffffff0,%rsp
  0x00007f4c5912508d:   callq  0x00007f4c627247d0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f4c59125092:   hlt    
  0x00007f4c59125093:   pop    %r10
  0x00007f4c59125095:   shl    $0x3,%rdi
  0x00007f4c59125099:   test   %r10,%r10
  0x00007f4c5912509c:   nop
  0x00007f4c5912509d:   nop
  0x00007f4c5912509e:   nop
  0x00007f4c5912509f:   nop
  0x00007f4c591250a0:   je     0x00007f4c591251b0           ;*putfield mag {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.math.BigInteger::<init>@58 (line 318)
                                                            ; - java.math.BigInteger::<init>@5 (line 338)
                                                            ; - jit::micro@5 (line 5)
 ;; B36: #	out( B21 ) <- in( B35 )  Freq: 0.000499459
  0x00007f4c591250a6:   mov    0x30(%r15),%r11
  0x00007f4c591250aa:   mov    %rdi,-0x8(%r11,%r10,1)       ;*putfield mag {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.math.BigInteger::<init>@20 (line 1137)
                                                            ; - java.math.BigInteger::add@48 (line 1329)
                                                            ; - jit::micro@24 (line 7)
  0x00007f4c591250af:   add    $0xfffffffffffffff8,%r10
  0x00007f4c591250b3:   mov    %r10,0x20(%r15)
  0x00007f4c591250b7:   jmpq   0x00007f4c59124f0b
 ;; B37: #	out( B41 B38 ) <- in( B22 )  Freq: 0.000998931
  0x00007f4c591250bc:   mov    0x40(%r15),%r10              ;*putfield mag {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.math.BigInteger::<init>@58 (line 318)
                                                            ; - java.math.BigInteger::<init>@5 (line 338)
                                                            ; - jit::micro@5 (line 5)
  0x00007f4c591250c0:   mov    0x50(%r15),%r11
  0x00007f4c591250c4:   lock addl $0x0,-0x40(%rsp)
  0x00007f4c591250ca:   cmpb   $0x0,(%rdi)
  0x00007f4c591250cd:   je     0x00007f4c591250f9
 ;; B38: #	out( B40 B39 ) <- in( B37 )  Freq: 0.000499465
  0x00007f4c591250cf:   mov    %r12b,(%rdi)
  0x00007f4c591250d2:   test   %r10,%r10
  0x00007f4c591250d5:   je     0x00007f4c591250e6
 ;; B39: #	out( B41 ) <- in( B38 )  Freq: 0.000249733
  0x00007f4c591250d7:   mov    %rdi,-0x8(%r11,%r10,1)       ;*putfield mag {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.math.BigInteger::<init>@20 (line 1137)
                                                            ; - java.math.BigInteger::add@48 (line 1329)
                                                            ; - jit::micro@24 (line 7)
  0x00007f4c591250dc:   add    $0xfffffffffffffff8,%r10     ;*putfield mag {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.math.BigInteger::<init>@58 (line 318)
                                                            ; - java.math.BigInteger::<init>@5 (line 338)
                                                            ; - jit::micro@5 (line 5)
  0x00007f4c591250e0:   mov    %r10,0x40(%r15)              ;*putfield mag {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.math.BigInteger::<init>@20 (line 1137)
                                                            ; - java.math.BigInteger::add@48 (line 1329)
                                                            ; - jit::micro@24 (line 7)
  0x00007f4c591250e4:   jmp    0x00007f4c591250f9           ;*putfield mag {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.math.BigInteger::<init>@58 (line 318)
                                                            ; - java.math.BigInteger::<init>@5 (line 338)
                                                            ; - jit::micro@5 (line 5)
 ;; B40: #	out( B41 ) <- in( B38 )  Freq: 0.000249733
  0x00007f4c591250e6:   mov    %r15,%rsi
  0x00007f4c591250e9:   vzeroupper 
  0x00007f4c591250ec:   movabs $0x7f4c62011d60,%r10
  0x00007f4c591250f6:   callq  *%r10                        ;*putfield mag {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.math.BigInteger::<init>@20 (line 1137)
                                                            ; - java.math.BigInteger::add@48 (line 1329)
                                                            ; - jit::micro@24 (line 7)
 ;; B41: #	out( B58 B42 ) <- in( B40 B39 B37 )  Freq: 0.000998931
  0x00007f4c591250f9:   mov    0x20(%rsp),%r10
  0x00007f4c591250fe:   mov    0x20(%r10),%r10d             ;*getfield mag {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.math.BigInteger::<init>@24 (line 1138)
                                                            ; - java.math.BigInteger::add@48 (line 1329)
                                                            ; - jit::micro@24 (line 7)
  0x00007f4c59125102:   test   %r10d,%r10d
  0x00007f4c59125105:   je     0x00007f4c591253bc           ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.math.BigInteger::<init>@27 (line 1138)
                                                            ; - java.math.BigInteger::add@48 (line 1329)
                                                            ; - jit::micro@24 (line 7)
 ;; B42: #	out( B23 ) <- in( B41 )  Freq: 0.00099893
  0x00007f4c5912510b:   mov    %r10,%rbx
  0x00007f4c5912510e:   push   %r10
  0x00007f4c59125110:   cmp    0xa3d8279(%rip),%r12        # 0x00007f4c634fd390
                                                            ;   {external_word}
  0x00007f4c59125117:   je     0x00007f4c59125131
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x00007f4c5912511d:   movabs $0x7f4c6311ed30,%rdi         ;   {external_word}
  0x00007f4c59125127:   and    $0xfffffffffffffff0,%rsp
  0x00007f4c5912512b:   callq  0x00007f4c627247d0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f4c59125130:   hlt    
  0x00007f4c59125131:   pop    %r10
  0x00007f4c59125133:   shl    $0x3,%rbx                    ;*getfield mag {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.math.BigInteger::<init>@24 (line 1138)
                                                            ; - java.math.BigInteger::add@48 (line 1329)
                                                            ; - jit::micro@24 (line 7)
  0x00007f4c59125137:   jmpq   0x00007f4c59124f93           ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.math.BigInteger::<init>@5 (line 338)
                                                            ; - jit::micro@15 (line 6)
 ;; B43: #	out( B66 B44 ) <- in( B15 )  Freq: 0.000100012
  0x00007f4c5912513c:   movabs $0x8000c8300,%rsi            ;   {metadata('java/math/BigInteger')}
  0x00007f4c59125146:   mov    (%rsp),%rbp
  0x00007f4c5912514a:   nop
  0x00007f4c5912514b:   nop
  0x00007f4c5912514c:   vzeroupper 
  0x00007f4c5912514f:   callq  0x00007f4c59083720           ; ImmutableOopMap {rbp=Oop [0]=Oop [24]=Oop [40]=Oop }
                                                            ;*new {reexecute=0 rethrow=0 return_oop=1}
                                                            ; - java.math.BigInteger::add@29 (line 1329)
                                                            ; - jit::micro@24 (line 7)
                                                            ;   {runtime_call _new_instance_Java}
 ;; B44: #	out( B17 ) <- in( B43 )  Freq: 0.00010001
  0x00007f4c59125154:   jmpq   0x00007f4c59124ecf
 ;; B45: #	out( N1 ) <- in( B27 )  Freq: 9.99908e-07
  0x00007f4c59125159:   mov    $0xffffffcc,%esi
  0x00007f4c5912515e:   mov    0x10(%rsp),%r10d
  0x00007f4c59125163:   mov    %r10d,0x8(%rsp)
  0x00007f4c59125168:   mov    %rax,0x18(%rsp)
  0x00007f4c5912516d:   nop
  0x00007f4c5912516e:   nop
  0x00007f4c5912516f:   nop
  0x00007f4c59125170:   vzeroupper 
  0x00007f4c59125173:   callq  0x00007f4c5911e940           ; ImmutableOopMap {[0]=Oop [24]=Oop }
                                                            ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jit::micro@40 (line 8)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f4c59125178:   movabs $0x7f4c630a08c0,%rdi         ;   {external_word}
  0x00007f4c59125182:   and    $0xfffffffffffffff0,%rsp
  0x00007f4c59125186:   callq  0x00007f4c627247d0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f4c5912518b:   hlt                                 ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jit::micro@40 (line 8)
 ;; B46: #	out( N1 ) <- in( B31 )  Freq: 9.99907e-07
  0x00007f4c5912518c:   mov    $0xffffffe4,%esi
  0x00007f4c59125191:   nop
  0x00007f4c59125192:   nop
  0x00007f4c59125193:   nop
  0x00007f4c59125194:   vzeroupper 
  0x00007f4c59125197:   callq  0x00007f4c5911e940           ; ImmutableOopMap {[0]=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jit::micro@50 (line 9)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f4c5912519c:   movabs $0x7f4c630a08c0,%rdi         ;   {external_word}
  0x00007f4c591251a6:   and    $0xfffffffffffffff0,%rsp
  0x00007f4c591251aa:   callq  0x00007f4c627247d0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f4c591251af:   hlt                                 ;*putfield mag {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.math.BigInteger::<init>@58 (line 318)
                                                            ; - java.math.BigInteger::<init>@5 (line 338)
                                                            ; - jit::micro@5 (line 5)
 ;; B47: #	out( B21 ) <- in( B35 )  Freq: 4.99952e-07
  0x00007f4c591251b0:   mov    %r15,%rsi
  0x00007f4c591251b3:   nop
  0x00007f4c591251b4:   nop
  0x00007f4c591251b5:   nop
  0x00007f4c591251b6:   nop
  0x00007f4c591251b7:   nop
  0x00007f4c591251b8:   nop
  0x00007f4c591251b9:   nop
  0x00007f4c591251ba:   nop
  0x00007f4c591251bb:   nop
  0x00007f4c591251bc:   nop
  0x00007f4c591251bd:   nop
  0x00007f4c591251be:   nop
  0x00007f4c591251bf:   nop
  0x00007f4c591251c0:   vzeroupper 
  0x00007f4c591251c3:   movabs $0x7f4c62011ae0,%r10
  0x00007f4c591251cd:   callq  *%r10                        ;*putfield mag {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.math.BigInteger::<init>@20 (line 1137)
                                                            ; - java.math.BigInteger::add@48 (line 1329)
                                                            ; - jit::micro@24 (line 7)
  0x00007f4c591251d0:   jmpq   0x00007f4c59124f0b
 ;; B48: #	out( N1 ) <- in( B2 )  Freq: 4.76837e-07
  0x00007f4c591251d5:   mov    $0xffffff45,%esi
  0x00007f4c591251da:   mov    (%rsp),%rbp
  0x00007f4c591251de:   mov    0x8(%rsp),%r10
  0x00007f4c591251e3:   mov    %r10,(%rsp)
  0x00007f4c591251e7:   mov    %r8d,0x8(%rsp)
  0x00007f4c591251ec:   mov    %rdx,0x10(%rsp)
  0x00007f4c591251f1:   mov    %ecx,0x18(%rsp)
  0x00007f4c591251f5:   nop
  0x00007f4c591251f6:   nop
  0x00007f4c591251f7:   nop
  0x00007f4c591251f8:   vzeroupper 
  0x00007f4c591251fb:   callq  0x00007f4c5911e940           ; ImmutableOopMap {rbp=Oop [0]=Oop [16]=Oop }
                                                            ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.math.BigInteger::<init>@6 (line 309)
                                                            ; - java.math.BigInteger::<init>@5 (line 338)
                                                            ; - jit::micro@5 (line 5)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f4c59125200:   movabs $0x7f4c630a08c0,%rdi         ;   {external_word}
  0x00007f4c5912520a:   and    $0xfffffffffffffff0,%rsp
  0x00007f4c5912520e:   callq  0x00007f4c627247d0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f4c59125213:   hlt                                 ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.math.BigInteger::<init>@6 (line 309)
                                                            ; - java.math.BigInteger::<init>@5 (line 338)
                                                            ; - jit::micro@5 (line 5)
 ;; B49: #	out( N1 ) <- in( B3 )  Freq: 4.76836e-07
  0x00007f4c59125214:   mov    $0xffffff45,%esi
  0x00007f4c59125219:   mov    %rdx,0x18(%rsp)
  0x00007f4c5912521e:   mov    %ecx,0x14(%rsp)
  0x00007f4c59125222:   nop
  0x00007f4c59125223:   nop
  0x00007f4c59125224:   vzeroupper 
  0x00007f4c59125227:   callq  0x00007f4c5911e940           ; ImmutableOopMap {[0]=Oop [8]=Oop [24]=Oop }
                                                            ;*ifge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.math.BigInteger::<init>@30 (line 314)
                                                            ; - java.math.BigInteger::<init>@5 (line 338)
                                                            ; - jit::micro@5 (line 5)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f4c5912522c:   movabs $0x7f4c630a08c0,%rdi         ;   {external_word}
  0x00007f4c59125236:   and    $0xfffffffffffffff0,%rsp
  0x00007f4c5912523a:   callq  0x00007f4c627247d0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f4c5912523f:   hlt                                 ;*putfield mag {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.math.BigInteger::<init>@58 (line 318)
                                                            ; - java.math.BigInteger::<init>@5 (line 338)
                                                            ; - jit::micro@5 (line 5)
 ;; B50: #	out( N1 ) <- in( B6 )  Freq: 4.76826e-07
  0x00007f4c59125240:   mov    $0xffffff45,%esi
  0x00007f4c59125245:   nop
  0x00007f4c59125246:   nop
  0x00007f4c59125247:   nop
  0x00007f4c59125248:   vzeroupper 
  0x00007f4c5912524b:   callq  0x00007f4c5911e940           ; ImmutableOopMap {[0]=Oop [8]=Oop [24]=Oop }
                                                            ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.math.BigInteger::<init>@67 (line 319)
                                                            ; - java.math.BigInteger::<init>@5 (line 338)
                                                            ; - jit::micro@5 (line 5)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f4c59125250:   movabs $0x7f4c630a08c0,%rdi         ;   {external_word}
  0x00007f4c5912525a:   and    $0xfffffffffffffff0,%rsp
  0x00007f4c5912525e:   callq  0x00007f4c627247d0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f4c59125263:   hlt                                 ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.math.BigInteger::<init>@67 (line 319)
                                                            ; - java.math.BigInteger::<init>@5 (line 338)
                                                            ; - jit::micro@5 (line 5)
 ;; B51: #	out( N1 ) <- in( B7 )  Freq: 4.76826e-07
  0x00007f4c59125264:   mov    $0xffffff45,%esi
  0x00007f4c59125269:   nop
  0x00007f4c5912526a:   nop
  0x00007f4c5912526b:   nop
  0x00007f4c5912526c:   vzeroupper 
  0x00007f4c5912526f:   callq  0x00007f4c5911e940           ; ImmutableOopMap {[0]=Oop [8]=Oop [24]=Oop }
                                                            ;*if_icmplt {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.math.BigInteger::<init>@85 (line 321)
                                                            ; - java.math.BigInteger::<init>@5 (line 338)
                                                            ; - jit::micro@5 (line 5)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f4c59125274:   movabs $0x7f4c630a08c0,%rdi         ;   {external_word}
  0x00007f4c5912527e:   and    $0xfffffffffffffff0,%rsp
  0x00007f4c59125282:   callq  0x00007f4c627247d0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f4c59125287:   hlt                                 ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.math.BigInteger::<init>@1 (line 308)
                                                            ; - java.math.BigInteger::<init>@5 (line 338)
                                                            ; - jit::micro@15 (line 6)
 ;; B52: #	out( N1 ) <- in( B9 )  Freq: 4.76825e-07
  0x00007f4c59125288:   mov    $0xffffff45,%esi
  0x00007f4c5912528d:   mov    (%rsp),%rbp
  0x00007f4c59125291:   mov    0x10(%rsp),%r11d
  0x00007f4c59125296:   mov    %r11d,(%rsp)
  0x00007f4c5912529a:   mov    %ecx,0x10(%rsp)
  0x00007f4c5912529e:   nop
  0x00007f4c5912529f:   nop
  0x00007f4c591252a0:   vzeroupper 
  0x00007f4c591252a3:   callq  0x00007f4c5911e940           ; ImmutableOopMap {rbp=Oop [8]=Oop [24]=Oop }
                                                            ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.math.BigInteger::<init>@6 (line 309)
                                                            ; - java.math.BigInteger::<init>@5 (line 338)
                                                            ; - jit::micro@15 (line 6)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f4c591252a8:   movabs $0x7f4c630a08c0,%rdi         ;   {external_word}
  0x00007f4c591252b2:   and    $0xfffffffffffffff0,%rsp
  0x00007f4c591252b6:   callq  0x00007f4c627247d0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f4c591252bb:   hlt                                 ;*invokestatic checkFromIndexSize {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.math.BigInteger::<init>@23 (line 312)
                                                            ; - java.math.BigInteger::<init>@5 (line 338)
                                                            ; - jit::micro@15 (line 6)
 ;; B53: #	out( N1 ) <- in( B10 )  Freq: 4.76825e-07
  0x00007f4c591252bc:   mov    $0xffffff45,%esi
  0x00007f4c591252c1:   mov    0x10(%rsp),%r8d
  0x00007f4c591252c6:   mov    %r8d,0x8(%rsp)
  0x00007f4c591252cb:   mov    %r10,0x10(%rsp)
  0x00007f4c591252d0:   mov    %ecx,0xc(%rsp)
  0x00007f4c591252d4:   vzeroupper 
  0x00007f4c591252d7:   callq  0x00007f4c5911e940           ; ImmutableOopMap {[0]=Oop [16]=Oop [24]=Oop }
                                                            ;*ifge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.math.BigInteger::<init>@30 (line 314)
                                                            ; - java.math.BigInteger::<init>@5 (line 338)
                                                            ; - jit::micro@15 (line 6)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f4c591252dc:   movabs $0x7f4c630a08c0,%rdi         ;   {external_word}
  0x00007f4c591252e6:   and    $0xfffffffffffffff0,%rsp
  0x00007f4c591252ea:   callq  0x00007f4c627247d0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f4c591252ef:   hlt                                 ;*putfield mag {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.math.BigInteger::<init>@58 (line 318)
                                                            ; - java.math.BigInteger::<init>@5 (line 338)
                                                            ; - jit::micro@15 (line 6)
 ;; B54: #	out( N1 ) <- in( B13 )  Freq: 4.76815e-07
  0x00007f4c591252f0:   mov    $0xffffff45,%esi
  0x00007f4c591252f5:   mov    0x10(%rsp),%r10d
  0x00007f4c591252fa:   mov    %r10d,0x8(%rsp)
  0x00007f4c591252ff:   nop
  0x00007f4c59125300:   vzeroupper 
  0x00007f4c59125303:   callq  0x00007f4c5911e940           ; ImmutableOopMap {[0]=Oop [24]=Oop [40]=Oop }
                                                            ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.math.BigInteger::<init>@67 (line 319)
                                                            ; - java.math.BigInteger::<init>@5 (line 338)
                                                            ; - jit::micro@15 (line 6)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f4c59125308:   movabs $0x7f4c630a08c0,%rdi         ;   {external_word}
  0x00007f4c59125312:   and    $0xfffffffffffffff0,%rsp
  0x00007f4c59125316:   callq  0x00007f4c627247d0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f4c5912531b:   hlt                                 ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.math.BigInteger::<init>@67 (line 319)
                                                            ; - java.math.BigInteger::<init>@5 (line 338)
                                                            ; - jit::micro@15 (line 6)
 ;; B55: #	out( N1 ) <- in( B14 )  Freq: 4.76815e-07
  0x00007f4c5912531c:   mov    $0xffffff45,%esi
  0x00007f4c59125321:   mov    0x10(%rsp),%r10d
  0x00007f4c59125326:   mov    %r10d,0x8(%rsp)
  0x00007f4c5912532b:   nop
  0x00007f4c5912532c:   vzeroupper 
  0x00007f4c5912532f:   callq  0x00007f4c5911e940           ; ImmutableOopMap {[0]=Oop [24]=Oop [40]=Oop }
                                                            ;*if_icmplt {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.math.BigInteger::<init>@85 (line 321)
                                                            ; - java.math.BigInteger::<init>@5 (line 338)
                                                            ; - jit::micro@15 (line 6)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f4c59125334:   movabs $0x7f4c630a08c0,%rdi         ;   {external_word}
  0x00007f4c5912533e:   and    $0xfffffffffffffff0,%rsp
  0x00007f4c59125342:   callq  0x00007f4c627247d0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f4c59125347:   hlt                                 ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.math.BigInteger::<init>@85 (line 321)
                                                            ; - java.math.BigInteger::<init>@5 (line 338)
                                                            ; - jit::micro@15 (line 6)
 ;; B56: #	out( N1 ) <- in( B19 )  Freq: 4.76804e-07
  0x00007f4c59125348:   mov    $0xffffff45,%esi
  0x00007f4c5912534d:   mov    0x10(%rsp),%r10d
  0x00007f4c59125352:   mov    %r10d,0x8(%rsp)
  0x00007f4c59125357:   rex.W pushq 0x20(%rsp)
  0x00007f4c5912535c:   rex.W popq 0x10(%rsp)
  0x00007f4c59125361:   mov    %rax,0x28(%rsp)
  0x00007f4c59125366:   nop
  0x00007f4c59125367:   nop
  0x00007f4c59125368:   vzeroupper 
  0x00007f4c5912536b:   callq  0x00007f4c5911e940           ; ImmutableOopMap {[0]=Oop [16]=Oop [40]=Oop }
                                                            ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.math.BigInteger::<init>@7 (line 1136)
                                                            ; - java.math.BigInteger::add@48 (line 1329)
                                                            ; - jit::micro@24 (line 7)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f4c59125370:   movabs $0x7f4c630a08c0,%rdi         ;   {external_word}
  0x00007f4c5912537a:   and    $0xfffffffffffffff0,%rsp
  0x00007f4c5912537e:   callq  0x00007f4c627247d0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f4c59125383:   hlt                                 ;*putfield mag {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.math.BigInteger::<init>@20 (line 1137)
                                                            ; - java.math.BigInteger::add@48 (line 1329)
                                                            ; - jit::micro@24 (line 7)
 ;; B57: #	out( N1 ) <- in( B23 )  Freq: 4.76804e-07
  0x00007f4c59125384:   mov    $0xffffff45,%esi
  0x00007f4c59125389:   mov    0x10(%rsp),%r10d
  0x00007f4c5912538e:   mov    %r10d,0x8(%rsp)
  0x00007f4c59125393:   rex.W pushq 0x20(%rsp)
  0x00007f4c59125398:   rex.W popq 0x10(%rsp)
  0x00007f4c5912539d:   nop
  0x00007f4c5912539e:   nop
  0x00007f4c5912539f:   nop
  0x00007f4c591253a0:   vzeroupper 
  0x00007f4c591253a3:   callq  0x00007f4c5911e940           ; ImmutableOopMap {[0]=Oop [16]=Oop }
                                                            ;*if_icmplt {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.math.BigInteger::<init>@30 (line 1138)
                                                            ; - java.math.BigInteger::add@48 (line 1329)
                                                            ; - jit::micro@24 (line 7)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f4c591253a8:   movabs $0x7f4c630a08c0,%rdi         ;   {external_word}
  0x00007f4c591253b2:   and    $0xfffffffffffffff0,%rsp
  0x00007f4c591253b6:   callq  0x00007f4c627247d0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f4c591253bb:   hlt    
 ;; B58: #	out( N1 ) <- in( B41 )  Freq: 1.0122e-09
  0x00007f4c591253bc:   mov    $0xfffffff6,%esi
  0x00007f4c591253c1:   nop
  0x00007f4c591253c2:   nop
  0x00007f4c591253c3:   nop
  0x00007f4c591253c4:   vzeroupper 
  0x00007f4c591253c7:   callq  0x00007f4c5911e940           ; ImmutableOopMap {}
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.math.BigInteger::<init>@27 (line 1138)
                                                            ; - java.math.BigInteger::add@48 (line 1329)
                                                            ; - jit::micro@24 (line 7)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f4c591253cc:   movabs $0x7f4c630a08c0,%rdi         ;   {external_word}
  0x00007f4c591253d6:   and    $0xfffffffffffffff0,%rsp
  0x00007f4c591253da:   callq  0x00007f4c627247d0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f4c591253df:   hlt                                 ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.math.BigInteger::<init>@27 (line 1138)
                                                            ; - java.math.BigInteger::add@48 (line 1329)
                                                            ; - jit::micro@24 (line 7)
 ;; B59: #	out( N1 ) <- in( B1 )  Freq: 1.01328e-06
  0x00007f4c591253e0:   mov    $0xfffffff6,%esi
  0x00007f4c591253e5:   nop
  0x00007f4c591253e6:   nop
  0x00007f4c591253e7:   nop
  0x00007f4c591253e8:   vzeroupper 
  0x00007f4c591253eb:   callq  0x00007f4c5911e940           ; ImmutableOopMap {}
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.math.BigInteger::<init>@4 (line 338)
                                                            ; - jit::micro@5 (line 5)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f4c591253f0:   movabs $0x7f4c630a08c0,%rdi         ;   {external_word}
  0x00007f4c591253fa:   and    $0xfffffffffffffff0,%rsp
  0x00007f4c591253fe:   callq  0x00007f4c627247d0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f4c59125403:   hlt    
 ;; B60: #	out( N1 ) <- in( B5 )  Freq: 1.01326e-06
  0x00007f4c59125404:   mov    $0xfffffff6,%esi
  0x00007f4c59125409:   nop
  0x00007f4c5912540a:   nop
  0x00007f4c5912540b:   nop
  0x00007f4c5912540c:   vzeroupper 
  0x00007f4c5912540f:   callq  0x00007f4c5911e940           ; ImmutableOopMap {}
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.math.BigInteger::<init>@66 (line 319)
                                                            ; - java.math.BigInteger::<init>@5 (line 338)
                                                            ; - jit::micro@5 (line 5)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f4c59125414:   movabs $0x7f4c630a08c0,%rdi         ;   {external_word}
  0x00007f4c5912541e:   and    $0xfffffffffffffff0,%rsp
  0x00007f4c59125422:   callq  0x00007f4c627247d0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f4c59125427:   hlt    
 ;; B61: #	out( N1 ) <- in( B8 )  Freq: 1.01325e-06
  0x00007f4c59125428:   mov    $0xfffffff6,%esi
  0x00007f4c5912542d:   nop
  0x00007f4c5912542e:   nop
  0x00007f4c5912542f:   nop
  0x00007f4c59125430:   vzeroupper 
  0x00007f4c59125433:   callq  0x00007f4c5911e940           ; ImmutableOopMap {}
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.math.BigInteger::<init>@4 (line 338)
                                                            ; - jit::micro@15 (line 6)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f4c59125438:   movabs $0x7f4c630a08c0,%rdi         ;   {external_word}
  0x00007f4c59125442:   and    $0xfffffffffffffff0,%rsp
  0x00007f4c59125446:   callq  0x00007f4c627247d0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f4c5912544b:   hlt    
 ;; B62: #	out( N1 ) <- in( B12 )  Freq: 1.01323e-06
  0x00007f4c5912544c:   mov    $0xfffffff6,%esi
  0x00007f4c59125451:   nop
  0x00007f4c59125452:   nop
  0x00007f4c59125453:   nop
  0x00007f4c59125454:   vzeroupper 
  0x00007f4c59125457:   callq  0x00007f4c5911e940           ; ImmutableOopMap {}
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.math.BigInteger::<init>@66 (line 319)
                                                            ; - java.math.BigInteger::<init>@5 (line 338)
                                                            ; - jit::micro@15 (line 6)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f4c5912545c:   movabs $0x7f4c630a08c0,%rdi         ;   {external_word}
  0x00007f4c59125466:   and    $0xfffffffffffffff0,%rsp
  0x00007f4c5912546a:   callq  0x00007f4c627247d0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f4c5912546f:   hlt                                 ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.math.BigInteger::<init>@66 (line 319)
                                                            ; - java.math.BigInteger::<init>@5 (line 338)
                                                            ; - jit::micro@15 (line 6)
 ;; B63: #	out( N1 ) <- in( B18 )  Freq: 1.01321e-06
  0x00007f4c59125470:   mov    $0xfffffff6,%esi
  0x00007f4c59125475:   nop
  0x00007f4c59125476:   nop
  0x00007f4c59125477:   nop
  0x00007f4c59125478:   vzeroupper 
  0x00007f4c5912547b:   callq  0x00007f4c5911e940           ; ImmutableOopMap {}
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.math.BigInteger::<init>@6 (line 1136)
                                                            ; - java.math.BigInteger::add@48 (line 1329)
                                                            ; - jit::micro@24 (line 7)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f4c59125480:   movabs $0x7f4c630a08c0,%rdi         ;   {external_word}
  0x00007f4c5912548a:   and    $0xfffffffffffffff0,%rsp
  0x00007f4c5912548e:   callq  0x00007f4c627247d0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f4c59125493:   hlt                                 ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.math.BigInteger::<init>@6 (line 1136)
                                                            ; - java.math.BigInteger::add@48 (line 1329)
                                                            ; - jit::micro@24 (line 7)
 ;; B64: #	out( N1 ) <- in( B25 )  Freq: 1.01319e-06
  0x00007f4c59125494:   mov    $0xfffffff6,%esi
  0x00007f4c59125499:   nop
  0x00007f4c5912549a:   nop
  0x00007f4c5912549b:   nop
  0x00007f4c5912549c:   vzeroupper 
  0x00007f4c5912549f:   callq  0x00007f4c5911e940           ; ImmutableOopMap {}
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jit::micro@39 (line 8)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f4c591254a4:   movabs $0x7f4c630a08c0,%rdi         ;   {external_word}
  0x00007f4c591254ae:   and    $0xfffffffffffffff0,%rsp
  0x00007f4c591254b2:   callq  0x00007f4c627247d0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f4c591254b7:   hlt                                 ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jit::micro@39 (line 8)
 ;; B65: #	out( N1 ) <- in( B26 )  Freq: 1.01319e-06
  0x00007f4c591254b8:   mov    $0xfffffff6,%esi
  0x00007f4c591254bd:   mov    %rax,(%rsp)
  0x00007f4c591254c1:   nop
  0x00007f4c591254c2:   nop
  0x00007f4c591254c3:   nop
  0x00007f4c591254c4:   vzeroupper 
  0x00007f4c591254c7:   callq  0x00007f4c5911e940           ; ImmutableOopMap {[0]=Oop }
                                                            ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jit::micro@40 (line 8)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f4c591254cc:   movabs $0x7f4c630a08c0,%rdi         ;   {external_word}
  0x00007f4c591254d6:   and    $0xfffffffffffffff0,%rsp
  0x00007f4c591254da:   callq  0x00007f4c627247d0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f4c591254df:   hlt                                 ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.math.BigInteger::add@29 (line 1329)
                                                            ; - jit::micro@24 (line 7)
 ;; B66: #	out( B71 ) <- in( B43 )  Freq: 1.00012e-09
  0x00007f4c591254e0:   mov    %rax,%rsi
  0x00007f4c591254e3:   jmp    0x00007f4c591254f7           ;*invokestatic stripLeadingZeroBytes {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.math.BigInteger::<init>@55 (line 318)
                                                            ; - java.math.BigInteger::<init>@5 (line 338)
                                                            ; - jit::micro@5 (line 5)
 ;; B67: #	out( B71 ) <- in( B4 )  Freq: 9.99998e-06
  0x00007f4c591254e5:   mov    %rax,%rsi
  0x00007f4c591254e8:   jmp    0x00007f4c591254f7           ;*invokestatic stripLeadingZeroBytes {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.math.BigInteger::<init>@55 (line 318)
                                                            ; - java.math.BigInteger::<init>@5 (line 338)
                                                            ; - jit::micro@15 (line 6)
 ;; B68: #	out( B71 ) <- in( B11 )  Freq: 9.99974e-06
  0x00007f4c591254ea:   mov    %rax,%rsi
  0x00007f4c591254ed:   jmp    0x00007f4c591254f7           ;*invokestatic add {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.math.BigInteger::add@41 (line 1329)
                                                            ; - jit::micro@24 (line 7)
 ;; B69: #	out( B71 ) <- in( B17 )  Freq: 9.99952e-06
  0x00007f4c591254ef:   mov    %rax,%rsi
  0x00007f4c591254f2:   jmp    0x00007f4c591254f7           ;*invokevirtual toByteArray {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jit::micro@27 (line 7)
 ;; B70: #	out( B71 ) <- in( B24 )  Freq: 9.9993e-06
  0x00007f4c591254f4:   mov    %rax,%rsi                    ;*synchronization entry
                                                            ; - jit::micro@-1 (line 5)
 ;; B71: #	out( N1 ) <- in( B69 B67 B70 B68 B66 )  Freq: 3.99995e-05
  0x00007f4c591254f7:   vzeroupper 
  0x00007f4c591254fa:   add    $0x40,%rsp
  0x00007f4c591254fe:   pop    %rbp
  0x00007f4c591254ff:   jmpq   0x00007f4c59080720           ;*putfield mag {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.math.BigInteger::<init>@20 (line 1137)
                                                            ; - java.math.BigInteger::add@48 (line 1329)
                                                            ; - jit::micro@24 (line 7)
                                                            ;   {runtime_call _rethrow_Java}
  0x00007f4c59125504:   movabs $0x7f4c59125033,%r10         ;   {internal_word}
  0x00007f4c5912550e:   mov    %r10,0x3a0(%r15)
  0x00007f4c59125515:   jmpq   0x00007f4c5911d6a0           ;   {runtime_call SafepointBlob}
  0x00007f4c5912551a:   hlt    
  0x00007f4c5912551b:   hlt    
  0x00007f4c5912551c:   hlt    
  0x00007f4c5912551d:   hlt    
  0x00007f4c5912551e:   hlt    
  0x00007f4c5912551f:   hlt    
[Stub Code]
  0x00007f4c59125520:   movabs $0x0,%rbx                    ;   {no_reloc}
  0x00007f4c5912552a:   jmpq   0x00007f4c5912552a           ;   {runtime_call}
  0x00007f4c5912552f:   movabs $0x0,%rbx                    ;   {static_stub}
  0x00007f4c59125539:   jmpq   0x00007f4c59125539           ;   {runtime_call}
  0x00007f4c5912553e:   movabs $0x0,%rbx                    ;   {static_stub}
  0x00007f4c59125548:   jmpq   0x00007f4c59125548           ;   {runtime_call}
  0x00007f4c5912554d:   movabs $0x0,%rbx                    ;   {static_stub}
  0x00007f4c59125557:   jmpq   0x00007f4c59125557           ;   {runtime_call}
[Exception Handler]
  0x00007f4c5912555c:   jmpq   0x00007f4c59083420           ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x00007f4c59125561:   callq  0x00007f4c59125566
  0x00007f4c59125566:   subq   $0x5,(%rsp)
  0x00007f4c5912556b:   jmpq   0x00007f4c5911ec60           ;   {runtime_call DeoptimizationBlob}
--------------------------------------------------------------------------------
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Oops:
  0x00007f4c59125570:   0x000000010157f410 a 'java/lang/Class'{0x000000010157f410} = 'java/math/BigInteger'
  0x00007f4c59125578:   0x00000001014b95e0 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x00000001014b95e0}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Metadata:
  0x00007f4c59125580:   0x00007f4bfdc0e4a8 {method} {0x00007f4bfdc0e4a8} 'micro' '([B[B[BI)I' in 'jit'
  0x00007f4c59125588:   0x00007f4bfdc466c8 {method} {0x00007f4bfdc466c8} '<init>' '([B)V' in 'java/math/BigInteger'
  0x00007f4c59125590:   0x00007f4bfdc46600 {method} {0x00007f4bfdc46600} '<init>' '([BII)V' in 'java/math/BigInteger'
  0x00007f4c59125598:   0x00000008000c8300 'java/math/BigInteger'
  0x00007f4c591255a0:   0x00007f4bfdc48fb8 {method} {0x00007f4bfdc48fb8} 'add' '(Ljava/math/BigInteger;)Ljava/math/BigInteger;' in 'java/math/BigInteger'
  0x00007f4c591255a8:   0x00007f4bfdc48918 {method} {0x00007f4bfdc48918} '<init>' '([II)V' in 'java/math/BigInteger'
  0x00007f4c591255b0:   0x00007f4bfdc51b88 {method} {0x00007f4bfdc51b88} 'toByteArray' '()[B' in 'java/math/BigInteger'
  0x00007f4c591255b8:   0x00007f4bfdc506c0 {method} {0x00007f4bfdc506c0} 'bitLength' '()I' in 'java/math/BigInteger'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
pc-bytecode offsets:
PcDesc(pc=0x00007f4c59124dbf offset=ffffffff bits=0):
PcDesc(pc=0x00007f4c59124dcc offset=c bits=0):
   jit::micro@-1 (line 5)
PcDesc(pc=0x00007f4c59124de3 offset=23 bits=0):
   java.math.BigInteger::<init>@4 (line 338)
   jit::micro@5 (line 5)
PcDesc(pc=0x00007f4c59124deb offset=2b bits=0):
   java.math.BigInteger::<init>@6 (line 309)
   java.math.BigInteger::<init>@5 (line 338)
   jit::micro@5 (line 5)
PcDesc(pc=0x00007f4c59124def offset=2f bits=0):
   java.math.BigInteger::<init>@29 (line 314)
   java.math.BigInteger::<init>@5 (line 338)
   jit::micro@5 (line 5)
PcDesc(pc=0x00007f4c59124df7 offset=37 bits=0):
   java.math.BigInteger::<init>@30 (line 314)
   java.math.BigInteger::<init>@5 (line 338)
   jit::micro@5 (line 5)
PcDesc(pc=0x00007f4c59124e04 offset=44 bits=4):
   java.math.BigInteger::<init>@55 (line 318)
   Locals
    - l0: obj[205]
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: obj[205]
   java.math.BigInteger::<init>@5 (line 338)
   Locals
    - l0: empty
    - l1: empty
   jit::micro@5 (line 5)
   Locals
    - l0: stack[0],oop
    - l1: empty
    - l2: stack[8],oop
    - l3: stack[16]
    - l4: empty
    - l5: empty
    - l6: empty
   Expression stack
    - @0: obj[205]
   Objects
    - 205: java.math.BigInteger 0, 0, 0, 0, 0, NULL
PcDesc(pc=0x00007f4c59124e0c offset=4c bits=0):
   java.math.BigInteger::<init>@66 (line 319)
   java.math.BigInteger::<init>@5 (line 338)
   jit::micro@5 (line 5)
PcDesc(pc=0x00007f4c59124e14 offset=54 bits=0):
   java.math.BigInteger::<init>@67 (line 319)
   java.math.BigInteger::<init>@5 (line 338)
   jit::micro@5 (line 5)
PcDesc(pc=0x00007f4c59124e2c offset=6c bits=0):
   java.math.BigInteger::<init>@85 (line 321)
   java.math.BigInteger::<init>@5 (line 338)
   jit::micro@5 (line 5)
PcDesc(pc=0x00007f4c59124e35 offset=75 bits=0):
   java.math.BigInteger::<init>@4 (line 338)
   jit::micro@15 (line 6)
PcDesc(pc=0x00007f4c59124e3d offset=7d bits=0):
   java.math.BigInteger::<init>@6 (line 309)
   java.math.BigInteger::<init>@5 (line 338)
   jit::micro@15 (line 6)
PcDesc(pc=0x00007f4c59124e42 offset=82 bits=0):
   java.math.BigInteger::<init>@29 (line 314)
   java.math.BigInteger::<init>@5 (line 338)
   jit::micro@15 (line 6)
PcDesc(pc=0x00007f4c59124e4a offset=8a bits=0):
   java.math.BigInteger::<init>@30 (line 314)
   java.math.BigInteger::<init>@5 (line 338)
   jit::micro@15 (line 6)
PcDesc(pc=0x00007f4c59124e58 offset=98 bits=4):
   java.math.BigInteger::<init>@55 (line 318)
   Locals
    - l0: obj[214]
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: obj[214]
   java.math.BigInteger::<init>@5 (line 338)
   Locals
    - l0: empty
    - l1: empty
   jit::micro@15 (line 6)
   Locals
    - l0: stack[0],oop
    - l1: empty
    - l2: empty
    - l3: stack[16]
    - l4: obj[213]
    - l5: empty
    - l6: empty
   Expression stack
    - @0: obj[214]
   Objects
    - 213: java.math.BigInteger 1, 0, 0, 0, 0, stack[24],oop
    - 214: java.math.BigInteger 0, 0, 0, 0, 0, NULL
PcDesc(pc=0x00007f4c59124e63 offset=a3 bits=0):
   java.math.BigInteger::<init>@66 (line 319)
   java.math.BigInteger::<init>@5 (line 338)
   jit::micro@15 (line 6)
PcDesc(pc=0x00007f4c59124e6b offset=ab bits=0):
   java.math.BigInteger::<init>@67 (line 319)
   java.math.BigInteger::<init>@5 (line 338)
   jit::micro@15 (line 6)
PcDesc(pc=0x00007f4c59124e92 offset=d2 bits=0):
   java.math.BigInteger::<init>@58 (line 318)
   java.math.BigInteger::<init>@5 (line 338)
   jit::micro@5 (line 5)
PcDesc(pc=0x00007f4c59124ed4 offset=114 bits=0):
   java.math.BigInteger::add@29 (line 1329)
   jit::micro@24 (line 7)
PcDesc(pc=0x00007f4c59124eec offset=12c bits=4):
   java.math.BigInteger::add@41 (line 1329)
   Locals
    - l0: obj[247]
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: reg rbp [10],oop
    - @1: reg rbp [10],oop
   jit::micro@24 (line 7)
   Locals
    - l0: stack[0],oop
    - l1: empty
    - l2: empty
    - l3: stack[16]
    - l4: empty
    - l5: empty
    - l6: empty
   Objects
    - 247: java.math.BigInteger 1, 0, 0, 0, 0, stack[40],oop
PcDesc(pc=0x00007f4c59124ef2 offset=132 bits=0):
   java.math.BigInteger::<init>@6 (line 1136)
   java.math.BigInteger::add@48 (line 1329)
   jit::micro@24 (line 7)
PcDesc(pc=0x00007f4c59124efa offset=13a bits=0):
   java.math.BigInteger::<init>@58 (line 318)
   java.math.BigInteger::<init>@5 (line 338)
   jit::micro@5 (line 5)
PcDesc(pc=0x00007f4c59124f0b offset=14b bits=0):
   java.math.BigInteger::<init>@20 (line 1137)
   java.math.BigInteger::add@48 (line 1329)
   jit::micro@24 (line 7)
PcDesc(pc=0x00007f4c59124f18 offset=158 bits=0):
   java.math.BigInteger::<init>@15 (line 1136)
   java.math.BigInteger::add@48 (line 1329)
   jit::micro@24 (line 7)
PcDesc(pc=0x00007f4c59124f93 offset=1d3 bits=0):
   java.math.BigInteger::<init>@20 (line 1137)
   java.math.BigInteger::add@48 (line 1329)
   jit::micro@24 (line 7)
PcDesc(pc=0x00007f4c59124f96 offset=1d6 bits=0):
   java.math.BigInteger::<init>@27 (line 1138)
   java.math.BigInteger::add@48 (line 1329)
   jit::micro@24 (line 7)
PcDesc(pc=0x00007f4c59124fac offset=1ec bits=0):
   java.math.BigInteger::add@48 (line 1329)
   jit::micro@24 (line 7)
PcDesc(pc=0x00007f4c59124fbc offset=1fc bits=4):
   jit::micro@27 (line 7)
   Locals
    - l0: stack[0],oop
    - l1: empty
    - l2: empty
    - l3: stack[16]
    - l4: empty
    - l5: empty
    - l6: empty
PcDesc(pc=0x00007f4c59124fc3 offset=203 bits=0):
   jit::micro@39 (line 8)
PcDesc(pc=0x00007f4c5912500f offset=24f bits=0):
   jit::micro@40 (line 8)
PcDesc(pc=0x00007f4c59125018 offset=258 bits=0):
   jit::micro@49 (line 9)
PcDesc(pc=0x00007f4c5912502b offset=26b bits=0):
   jit::micro@50 (line 9)
PcDesc(pc=0x00007f4c591250a6 offset=2e6 bits=0):
   java.math.BigInteger::<init>@58 (line 318)
   java.math.BigInteger::<init>@5 (line 338)
   jit::micro@5 (line 5)
PcDesc(pc=0x00007f4c591250af offset=2ef bits=0):
   java.math.BigInteger::<init>@20 (line 1137)
   java.math.BigInteger::add@48 (line 1329)
   jit::micro@24 (line 7)
PcDesc(pc=0x00007f4c591250c0 offset=300 bits=0):
   java.math.BigInteger::<init>@58 (line 318)
   java.math.BigInteger::<init>@5 (line 338)
   jit::micro@5 (line 5)
PcDesc(pc=0x00007f4c591250dc offset=31c bits=0):
   java.math.BigInteger::<init>@20 (line 1137)
   java.math.BigInteger::add@48 (line 1329)
   jit::micro@24 (line 7)
PcDesc(pc=0x00007f4c591250e0 offset=320 bits=0):
   java.math.BigInteger::<init>@58 (line 318)
   java.math.BigInteger::<init>@5 (line 338)
   jit::micro@5 (line 5)
PcDesc(pc=0x00007f4c591250e4 offset=324 bits=0):
   java.math.BigInteger::<init>@20 (line 1137)
   java.math.BigInteger::add@48 (line 1329)
   jit::micro@24 (line 7)
PcDesc(pc=0x00007f4c591250e6 offset=326 bits=0):
   java.math.BigInteger::<init>@58 (line 318)
   java.math.BigInteger::<init>@5 (line 338)
   jit::micro@5 (line 5)
PcDesc(pc=0x00007f4c591250f9 offset=339 bits=0):
   java.math.BigInteger::<init>@20 (line 1137)
   java.math.BigInteger::add@48 (line 1329)
   jit::micro@24 (line 7)
PcDesc(pc=0x00007f4c59125102 offset=342 bits=0):
   java.math.BigInteger::<init>@24 (line 1138)
   java.math.BigInteger::add@48 (line 1329)
   jit::micro@24 (line 7)
PcDesc(pc=0x00007f4c5912510b offset=34b bits=0):
   java.math.BigInteger::<init>@27 (line 1138)
   java.math.BigInteger::add@48 (line 1329)
   jit::micro@24 (line 7)
PcDesc(pc=0x00007f4c59125137 offset=377 bits=0):
   java.math.BigInteger::<init>@24 (line 1138)
   java.math.BigInteger::add@48 (line 1329)
   jit::micro@24 (line 7)
PcDesc(pc=0x00007f4c5912513c offset=37c bits=0):
   java.math.BigInteger::<init>@5 (line 338)
   jit::micro@15 (line 6)
PcDesc(pc=0x00007f4c59125154 offset=394 bits=4):
   java.math.BigInteger::add@29 (line 1329)
   Locals
    - l0: obj[225]
    - l1: obj[226]
    - l2: empty
    - l3: empty
   jit::micro@24 (line 7)
   Locals
    - l0: reg rbp [10],oop
    - l1: empty
    - l2: empty
    - l3: stack[16]
    - l4: empty
    - l5: empty
    - l6: empty
   Objects
    - 225: java.math.BigInteger 1, 0, 0, 0, 0, stack[40],oop
    - 226: java.math.BigInteger 1, 0, 0, 0, 0, stack[24],oop
PcDesc(pc=0x00007f4c59125178 offset=3b8 bits=0):
   jit::micro@40 (line 8)
   Locals
    - l0: stack[0],oop
    - l1: empty
    - l2: empty
    - l3: stack[8]
    - l4: empty
    - l5: empty
    - l6: empty
   Expression stack
    - @0: stack[24],oop
    - @1: 0
    - @2: stack[0],oop
    - @3: 0
    - @4: reg rbp [10],int
PcDesc(pc=0x00007f4c5912518c offset=3cc bits=0):
   jit::micro@40 (line 8)
PcDesc(pc=0x00007f4c5912519c offset=3dc bits=0):
   jit::micro@50 (line 9)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
   Expression stack
    - @0: stack[0],oop
    - @1: reg rbp [10],int
PcDesc(pc=0x00007f4c591251b0 offset=3f0 bits=0):
   java.math.BigInteger::<init>@58 (line 318)
   java.math.BigInteger::<init>@5 (line 338)
   jit::micro@5 (line 5)
PcDesc(pc=0x00007f4c591251d0 offset=410 bits=0):
   java.math.BigInteger::<init>@20 (line 1137)
   java.math.BigInteger::add@48 (line 1329)
   jit::micro@24 (line 7)
PcDesc(pc=0x00007f4c59125200 offset=440 bits=1):
   java.math.BigInteger::<init>@6 (line 309)  reexecute=true
   Locals
    - l0: obj[38]
    - l1: stack[16],oop
    - l2: 0
    - l3: stack[24]
   Expression stack
    - @0: stack[24]
   java.math.BigInteger::<init>@5 (line 338)
   Locals
    - l0: empty
    - l1: empty
   jit::micro@5 (line 5)
   Locals
    - l0: reg rbp [10],oop
    - l1: empty
    - l2: stack[0],oop
    - l3: stack[8]
    - l4: empty
    - l5: empty
    - l6: empty
   Expression stack
    - @0: obj[38]
   Objects
    - 38: java.math.BigInteger 0, 0, 0, 0, 0, NULL
PcDesc(pc=0x00007f4c59125214 offset=454 bits=0):
   java.math.BigInteger::<init>@6 (line 309)
   java.math.BigInteger::<init>@5 (line 338)
   jit::micro@5 (line 5)
PcDesc(pc=0x00007f4c5912522c offset=46c bits=1):
   java.math.BigInteger::<init>@30 (line 314)  reexecute=true
   Locals
    - l0: obj[331]
    - l1: stack[24],oop
    - l2: 0
    - l3: stack[20]
   Expression stack
    - @0: reg rbp [10],int
   java.math.BigInteger::<init>@5 (line 338)
   Locals
    - l0: empty
    - l1: empty
   jit::micro@5 (line 5)
   Locals
    - l0: stack[0],oop
    - l1: empty
    - l2: stack[8],oop
    - l3: stack[16]
    - l4: empty
    - l5: empty
    - l6: empty
   Expression stack
    - @0: obj[331]
   Objects
    - 331: java.math.BigInteger 0, 0, 0, 0, 0, NULL
PcDesc(pc=0x00007f4c59125240 offset=480 bits=0):
   java.math.BigInteger::<init>@58 (line 318)
   java.math.BigInteger::<init>@5 (line 338)
   jit::micro@5 (line 5)
PcDesc(pc=0x00007f4c59125250 offset=490 bits=1):
   java.math.BigInteger::<init>@67 (line 319)  reexecute=true
   Locals
    - l0: obj[352]
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: obj[352]
    - @1: reg rbp [10],int
   java.math.BigInteger::<init>@5 (line 338)
   Locals
    - l0: empty
    - l1: empty
   jit::micro@5 (line 5)
   Locals
    - l0: stack[0],oop
    - l1: empty
    - l2: stack[8],oop
    - l3: stack[16]
    - l4: empty
    - l5: empty
    - l6: empty
   Expression stack
    - @0: obj[352]
   Objects
    - 352: java.math.BigInteger 0, 0, 0, 0, 0, stack[24],oop
PcDesc(pc=0x00007f4c59125264 offset=4a4 bits=0):
   java.math.BigInteger::<init>@67 (line 319)
   java.math.BigInteger::<init>@5 (line 338)
   jit::micro@5 (line 5)
PcDesc(pc=0x00007f4c59125274 offset=4b4 bits=1):
   java.math.BigInteger::<init>@85 (line 321)  reexecute=true
   Locals
    - l0: obj[366]
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: reg rbp [10],int
    - @1: 67108864
   java.math.BigInteger::<init>@5 (line 338)
   Locals
    - l0: empty
    - l1: empty
   jit::micro@5 (line 5)
   Locals
    - l0: stack[0],oop
    - l1: empty
    - l2: stack[8],oop
    - l3: stack[16]
    - l4: empty
    - l5: empty
    - l6: empty
   Expression stack
    - @0: obj[366]
   Objects
    - 366: java.math.BigInteger 1, 0, 0, 0, 0, stack[24],oop
PcDesc(pc=0x00007f4c59125288 offset=4c8 bits=0):
   java.math.BigInteger::<init>@1 (line 308)
   java.math.BigInteger::<init>@5 (line 338)
   jit::micro@15 (line 6)
PcDesc(pc=0x00007f4c591252a8 offset=4e8 bits=1):
   java.math.BigInteger::<init>@6 (line 309)  reexecute=true
   Locals
    - l0: obj[395]
    - l1: stack[8],oop
    - l2: 0
    - l3: stack[16]
   Expression stack
    - @0: stack[16]
   java.math.BigInteger::<init>@5 (line 338)
   Locals
    - l0: empty
    - l1: empty
   jit::micro@15 (line 6)
   Locals
    - l0: reg rbp [10],oop
    - l1: empty
    - l2: empty
    - l3: stack[0]
    - l4: obj[394]
    - l5: empty
    - l6: empty
   Expression stack
    - @0: obj[395]
   Objects
    - 394: java.math.BigInteger 1, 0, 0, 0, 0, stack[24],oop
    - 395: java.math.BigInteger 0, 0, 0, 0, 0, NULL
PcDesc(pc=0x00007f4c591252bc offset=4fc bits=0):
   java.math.BigInteger::<init>@23 (line 312)
   java.math.BigInteger::<init>@5 (line 338)
   jit::micro@15 (line 6)
PcDesc(pc=0x00007f4c591252dc offset=51c bits=1):
   java.math.BigInteger::<init>@30 (line 314)  reexecute=true
   Locals
    - l0: obj[425]
    - l1: stack[16],oop
    - l2: 0
    - l3: stack[12]
   Expression stack
    - @0: reg rbp [10],int
   java.math.BigInteger::<init>@5 (line 338)
   Locals
    - l0: empty
    - l1: empty
   jit::micro@15 (line 6)
   Locals
    - l0: stack[0],oop
    - l1: empty
    - l2: empty
    - l3: stack[8]
    - l4: obj[424]
    - l5: empty
    - l6: empty
   Expression stack
    - @0: obj[425]
   Objects
    - 424: java.math.BigInteger 1, 0, 0, 0, 0, stack[24],oop
    - 425: java.math.BigInteger 0, 0, 0, 0, 0, NULL
PcDesc(pc=0x00007f4c591252f0 offset=530 bits=0):
   java.math.BigInteger::<init>@58 (line 318)
   java.math.BigInteger::<init>@5 (line 338)
   jit::micro@15 (line 6)
PcDesc(pc=0x00007f4c59125308 offset=548 bits=1):
   java.math.BigInteger::<init>@67 (line 319)  reexecute=true
   Locals
    - l0: obj[452]
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: obj[452]
    - @1: reg rbp [10],int
   java.math.BigInteger::<init>@5 (line 338)
   Locals
    - l0: empty
    - l1: empty
   jit::micro@15 (line 6)
   Locals
    - l0: stack[0],oop
    - l1: empty
    - l2: empty
    - l3: stack[8]
    - l4: obj[451]
    - l5: empty
    - l6: empty
   Expression stack
    - @0: obj[452]
   Objects
    - 451: java.math.BigInteger 1, 0, 0, 0, 0, stack[24],oop
    - 452: java.math.BigInteger 0, 0, 0, 0, 0, stack[40],oop
PcDesc(pc=0x00007f4c5912531c offset=55c bits=0):
   java.math.BigInteger::<init>@67 (line 319)
   java.math.BigInteger::<init>@5 (line 338)
   jit::micro@15 (line 6)
PcDesc(pc=0x00007f4c59125334 offset=574 bits=1):
   java.math.BigInteger::<init>@85 (line 321)  reexecute=true
   Locals
    - l0: obj[472]
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: reg rbp [10],int
    - @1: 67108864
   java.math.BigInteger::<init>@5 (line 338)
   Locals
    - l0: empty
    - l1: empty
   jit::micro@15 (line 6)
   Locals
    - l0: stack[0],oop
    - l1: empty
    - l2: empty
    - l3: stack[8]
    - l4: obj[471]
    - l5: empty
    - l6: empty
   Expression stack
    - @0: obj[472]
   Objects
    - 471: java.math.BigInteger 1, 0, 0, 0, 0, stack[24],oop
    - 472: java.math.BigInteger 1, 0, 0, 0, 0, stack[40],oop
PcDesc(pc=0x00007f4c59125348 offset=588 bits=0):
   java.math.BigInteger::<init>@85 (line 321)
   java.math.BigInteger::<init>@5 (line 338)
   jit::micro@15 (line 6)
PcDesc(pc=0x00007f4c59125370 offset=5b0 bits=1):
   java.math.BigInteger::<init>@7 (line 1136)  reexecute=true
   Locals
    - l0: stack[16],oop
    - l1: stack[40],oop
    - l2: 1
   Expression stack
    - @0: stack[16],oop
    - @1: reg rbp [10],int
   java.math.BigInteger::add@48 (line 1329)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: stack[16],oop
   jit::micro@24 (line 7)
   Locals
    - l0: stack[0],oop
    - l1: empty
    - l2: empty
    - l3: stack[8]
    - l4: empty
    - l5: empty
    - l6: empty
PcDesc(pc=0x00007f4c59125384 offset=5c4 bits=0):
   java.math.BigInteger::<init>@20 (line 1137)
   java.math.BigInteger::add@48 (line 1329)
   jit::micro@24 (line 7)
PcDesc(pc=0x00007f4c591253a8 offset=5e8 bits=1):
   java.math.BigInteger::<init>@30 (line 1138)  reexecute=true
   Locals
    - l0: stack[16],oop
    - l1: empty
    - l2: empty
   Expression stack
    - @0: reg rbp [10],int
    - @1: 67108864
   java.math.BigInteger::add@48 (line 1329)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: stack[16],oop
   jit::micro@24 (line 7)
   Locals
    - l0: stack[0],oop
    - l1: empty
    - l2: empty
    - l3: stack[8]
    - l4: empty
    - l5: empty
    - l6: empty
PcDesc(pc=0x00007f4c591253cc offset=60c bits=0):
   java.math.BigInteger::<init>@27 (line 1138)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   Expression stack
    - @0: NULL
   java.math.BigInteger::add@48 (line 1329)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: empty
   jit::micro@24 (line 7)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
PcDesc(pc=0x00007f4c591253e0 offset=620 bits=0):
   java.math.BigInteger::<init>@27 (line 1138)
   java.math.BigInteger::add@48 (line 1329)
   jit::micro@24 (line 7)
PcDesc(pc=0x00007f4c591253f0 offset=630 bits=0):
   java.math.BigInteger::<init>@4 (line 338)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: empty
    - @1: empty
    - @2: empty
    - @3: NULL
   jit::micro@5 (line 5)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
   Expression stack
    - @0: empty
PcDesc(pc=0x00007f4c59125414 offset=654 bits=0):
   java.math.BigInteger::<init>@66 (line 319)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: empty
    - @1: NULL
   java.math.BigInteger::<init>@5 (line 338)
   Locals
    - l0: empty
    - l1: empty
   jit::micro@5 (line 5)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
   Expression stack
    - @0: empty
PcDesc(pc=0x00007f4c59125438 offset=678 bits=0):
   java.math.BigInteger::<init>@4 (line 338)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: empty
    - @1: empty
    - @2: empty
    - @3: NULL
   jit::micro@15 (line 6)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
   Expression stack
    - @0: empty
PcDesc(pc=0x00007f4c5912545c offset=69c bits=0):
   java.math.BigInteger::<init>@66 (line 319)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: empty
    - @1: NULL
   java.math.BigInteger::<init>@5 (line 338)
   Locals
    - l0: empty
    - l1: empty
   jit::micro@15 (line 6)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
   Expression stack
    - @0: empty
PcDesc(pc=0x00007f4c59125470 offset=6b0 bits=0):
   java.math.BigInteger::<init>@66 (line 319)
   java.math.BigInteger::<init>@5 (line 338)
   jit::micro@15 (line 6)
PcDesc(pc=0x00007f4c59125480 offset=6c0 bits=0):
   java.math.BigInteger::<init>@6 (line 1136)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   Expression stack
    - @0: empty
    - @1: NULL
   java.math.BigInteger::add@48 (line 1329)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: empty
   jit::micro@24 (line 7)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
PcDesc(pc=0x00007f4c59125494 offset=6d4 bits=0):
   java.math.BigInteger::<init>@6 (line 1136)
   java.math.BigInteger::add@48 (line 1329)
   jit::micro@24 (line 7)
PcDesc(pc=0x00007f4c591254a4 offset=6e4 bits=0):
   jit::micro@39 (line 8)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
   Expression stack
    - @0: empty
    - @1: empty
    - @2: empty
    - @3: empty
    - @4: NULL
PcDesc(pc=0x00007f4c591254b8 offset=6f8 bits=0):
   jit::micro@39 (line 8)
PcDesc(pc=0x00007f4c591254cc offset=70c bits=0):
   jit::micro@40 (line 8)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
   Expression stack
    - @0: stack[0],oop
    - @1: 0
    - @2: NULL
    - @3: 0
    - @4: reg rbp [10],int
PcDesc(pc=0x00007f4c591254e0 offset=720 bits=0):
   java.math.BigInteger::add@29 (line 1329)
   jit::micro@24 (line 7)
PcDesc(pc=0x00007f4c591254e5 offset=725 bits=0):
   java.math.BigInteger::<init>@55 (line 318)
   java.math.BigInteger::<init>@5 (line 338)
   jit::micro@5 (line 5)
PcDesc(pc=0x00007f4c591254ea offset=72a bits=0):
   java.math.BigInteger::<init>@55 (line 318)
   java.math.BigInteger::<init>@5 (line 338)
   jit::micro@15 (line 6)
PcDesc(pc=0x00007f4c591254ef offset=72f bits=0):
   java.math.BigInteger::add@41 (line 1329)
   jit::micro@24 (line 7)
PcDesc(pc=0x00007f4c591254f4 offset=734 bits=0):
   jit::micro@27 (line 7)
PcDesc(pc=0x00007f4c591254f7 offset=737 bits=0):
   jit::micro@-1 (line 5)
PcDesc(pc=0x00007f4c59125504 offset=744 bits=0):
   java.math.BigInteger::<init>@20 (line 1137)
   java.math.BigInteger::add@48 (line 1329)
   jit::micro@24 (line 7)
PcDesc(pc=0x00007f4c59125571 offset=7b1 bits=0):
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
oop maps:ImmutableOopMapSet contains 25 OopMaps

ImmutableOopMap {[0]=Oop [8]=Oop } pc offsets: 68 
ImmutableOopMap {[0]=Oop [24]=Oop } pc offsets: 152 
ImmutableOopMap {rbp=Oop [0]=Oop [32]=Oop [40]=Oop } pc offsets: 300 
ImmutableOopMap {[0]=Oop } pc offsets: 508 
ImmutableOopMap {rbp=Oop [0]=Oop [24]=Oop [40]=Oop } pc offsets: 916 
ImmutableOopMap {[0]=Oop [24]=Oop } pc offsets: 952 
ImmutableOopMap {[0]=Oop } pc offsets: 988 
ImmutableOopMap {rbp=Oop [0]=Oop [16]=Oop } pc offsets: 1088 
ImmutableOopMap {[0]=Oop [8]=Oop [24]=Oop } pc offsets: 1132 1168 1204 
ImmutableOopMap {rbp=Oop [8]=Oop [24]=Oop } pc offsets: 1256 
ImmutableOopMap {[0]=Oop [16]=Oop [24]=Oop } pc offsets: 1308 
ImmutableOopMap {[0]=Oop [24]=Oop [40]=Oop } pc offsets: 1352 1396 
ImmutableOopMap {[0]=Oop [16]=Oop [40]=Oop } pc offsets: 1456 
ImmutableOopMap {[0]=Oop [16]=Oop } pc offsets: 1512 
ImmutableOopMap {} pc offsets: 1548 1584 1620 1656 1692 1728 1764 
ImmutableOopMap {[0]=Oop } pc offsets: 1804 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
scopes:
ScopeDesc(pc=0x00007f4c59124dcc offset=c):
   jit::micro@-1 (line 5)
ScopeDesc(pc=0x00007f4c59124de3 offset=23):
   java.math.BigInteger::<init>@4 (line 338)
ScopeDesc(pc=0x00007f4c59124de3 offset=23):
   jit::micro@5 (line 5)
ScopeDesc(pc=0x00007f4c59124deb offset=2b):
   java.math.BigInteger::<init>@6 (line 309)
ScopeDesc(pc=0x00007f4c59124deb offset=2b):
   java.math.BigInteger::<init>@5 (line 338)
ScopeDesc(pc=0x00007f4c59124deb offset=2b):
   jit::micro@5 (line 5)
ScopeDesc(pc=0x00007f4c59124def offset=2f):
   java.math.BigInteger::<init>@29 (line 314)
ScopeDesc(pc=0x00007f4c59124def offset=2f):
   java.math.BigInteger::<init>@5 (line 338)
ScopeDesc(pc=0x00007f4c59124def offset=2f):
   jit::micro@5 (line 5)
ScopeDesc(pc=0x00007f4c59124df7 offset=37):
   java.math.BigInteger::<init>@30 (line 314)
ScopeDesc(pc=0x00007f4c59124df7 offset=37):
   java.math.BigInteger::<init>@5 (line 338)
ScopeDesc(pc=0x00007f4c59124df7 offset=37):
   jit::micro@5 (line 5)
ScopeDesc(pc=0x00007f4c59124e04 offset=44):
   java.math.BigInteger::<init>@55 (line 318)
   Locals
    - l0: obj[205]
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: obj[205]
ScopeDesc(pc=0x00007f4c59124e04 offset=44):
   java.math.BigInteger::<init>@5 (line 338)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x00007f4c59124e04 offset=44):
   jit::micro@5 (line 5)
   Locals
    - l0: stack[0],oop
    - l1: empty
    - l2: stack[8],oop
    - l3: stack[16]
    - l4: empty
    - l5: empty
    - l6: empty
   Expression stack
    - @0: obj[205]
   Objects
    - 205: java.math.BigInteger 0, 0, 0, 0, 0, NULL
ScopeDesc(pc=0x00007f4c59124e0c offset=4c):
   java.math.BigInteger::<init>@66 (line 319)
ScopeDesc(pc=0x00007f4c59124e0c offset=4c):
   java.math.BigInteger::<init>@5 (line 338)
ScopeDesc(pc=0x00007f4c59124e0c offset=4c):
   jit::micro@5 (line 5)
ScopeDesc(pc=0x00007f4c59124e14 offset=54):
   java.math.BigInteger::<init>@67 (line 319)
ScopeDesc(pc=0x00007f4c59124e14 offset=54):
   java.math.BigInteger::<init>@5 (line 338)
ScopeDesc(pc=0x00007f4c59124e14 offset=54):
   jit::micro@5 (line 5)
ScopeDesc(pc=0x00007f4c59124e2c offset=6c):
   java.math.BigInteger::<init>@85 (line 321)
ScopeDesc(pc=0x00007f4c59124e2c offset=6c):
   java.math.BigInteger::<init>@5 (line 338)
ScopeDesc(pc=0x00007f4c59124e2c offset=6c):
   jit::micro@5 (line 5)
ScopeDesc(pc=0x00007f4c59124e35 offset=75):
   java.math.BigInteger::<init>@4 (line 338)
ScopeDesc(pc=0x00007f4c59124e35 offset=75):
   jit::micro@15 (line 6)
ScopeDesc(pc=0x00007f4c59124e3d offset=7d):
   java.math.BigInteger::<init>@6 (line 309)
ScopeDesc(pc=0x00007f4c59124e3d offset=7d):
   java.math.BigInteger::<init>@5 (line 338)
ScopeDesc(pc=0x00007f4c59124e3d offset=7d):
   jit::micro@15 (line 6)
ScopeDesc(pc=0x00007f4c59124e42 offset=82):
   java.math.BigInteger::<init>@29 (line 314)
ScopeDesc(pc=0x00007f4c59124e42 offset=82):
   java.math.BigInteger::<init>@5 (line 338)
ScopeDesc(pc=0x00007f4c59124e42 offset=82):
   jit::micro@15 (line 6)
ScopeDesc(pc=0x00007f4c59124e4a offset=8a):
   java.math.BigInteger::<init>@30 (line 314)
ScopeDesc(pc=0x00007f4c59124e4a offset=8a):
   java.math.BigInteger::<init>@5 (line 338)
ScopeDesc(pc=0x00007f4c59124e4a offset=8a):
   jit::micro@15 (line 6)
ScopeDesc(pc=0x00007f4c59124e58 offset=98):
   java.math.BigInteger::<init>@55 (line 318)
   Locals
    - l0: obj[214]
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: obj[214]
ScopeDesc(pc=0x00007f4c59124e58 offset=98):
   java.math.BigInteger::<init>@5 (line 338)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x00007f4c59124e58 offset=98):
   jit::micro@15 (line 6)
   Locals
    - l0: stack[0],oop
    - l1: empty
    - l2: empty
    - l3: stack[16]
    - l4: obj[213]
    - l5: empty
    - l6: empty
   Expression stack
    - @0: obj[214]
   Objects
    - 213: java.math.BigInteger 1, 0, 0, 0, 0, stack[24],oop
    - 214: java.math.BigInteger 0, 0, 0, 0, 0, NULL
ScopeDesc(pc=0x00007f4c59124e63 offset=a3):
   java.math.BigInteger::<init>@66 (line 319)
ScopeDesc(pc=0x00007f4c59124e63 offset=a3):
   java.math.BigInteger::<init>@5 (line 338)
ScopeDesc(pc=0x00007f4c59124e63 offset=a3):
   jit::micro@15 (line 6)
ScopeDesc(pc=0x00007f4c59124e6b offset=ab):
   java.math.BigInteger::<init>@67 (line 319)
ScopeDesc(pc=0x00007f4c59124e6b offset=ab):
   java.math.BigInteger::<init>@5 (line 338)
ScopeDesc(pc=0x00007f4c59124e6b offset=ab):
   jit::micro@15 (line 6)
ScopeDesc(pc=0x00007f4c59124e92 offset=d2):
   java.math.BigInteger::<init>@58 (line 318)
ScopeDesc(pc=0x00007f4c59124e92 offset=d2):
   java.math.BigInteger::<init>@5 (line 338)
ScopeDesc(pc=0x00007f4c59124e92 offset=d2):
   jit::micro@5 (line 5)
ScopeDesc(pc=0x00007f4c59124ed4 offset=114):
   java.math.BigInteger::add@29 (line 1329)
ScopeDesc(pc=0x00007f4c59124ed4 offset=114):
   jit::micro@24 (line 7)
ScopeDesc(pc=0x00007f4c59124eec offset=12c):
   java.math.BigInteger::add@41 (line 1329)
   Locals
    - l0: obj[247]
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: reg rbp [10],oop
    - @1: reg rbp [10],oop
ScopeDesc(pc=0x00007f4c59124eec offset=12c):
   jit::micro@24 (line 7)
   Locals
    - l0: stack[0],oop
    - l1: empty
    - l2: empty
    - l3: stack[16]
    - l4: empty
    - l5: empty
    - l6: empty
   Objects
    - 247: java.math.BigInteger 1, 0, 0, 0, 0, stack[40],oop
ScopeDesc(pc=0x00007f4c59124ef2 offset=132):
   java.math.BigInteger::<init>@6 (line 1136)
ScopeDesc(pc=0x00007f4c59124ef2 offset=132):
   java.math.BigInteger::add@48 (line 1329)
ScopeDesc(pc=0x00007f4c59124ef2 offset=132):
   jit::micro@24 (line 7)
ScopeDesc(pc=0x00007f4c59124efa offset=13a):
   java.math.BigInteger::<init>@58 (line 318)
ScopeDesc(pc=0x00007f4c59124efa offset=13a):
   java.math.BigInteger::<init>@5 (line 338)
ScopeDesc(pc=0x00007f4c59124efa offset=13a):
   jit::micro@5 (line 5)
ScopeDesc(pc=0x00007f4c59124f0b offset=14b):
   java.math.BigInteger::<init>@20 (line 1137)
ScopeDesc(pc=0x00007f4c59124f0b offset=14b):
   java.math.BigInteger::add@48 (line 1329)
ScopeDesc(pc=0x00007f4c59124f0b offset=14b):
   jit::micro@24 (line 7)
ScopeDesc(pc=0x00007f4c59124f18 offset=158):
   java.math.BigInteger::<init>@15 (line 1136)
ScopeDesc(pc=0x00007f4c59124f18 offset=158):
   java.math.BigInteger::add@48 (line 1329)
ScopeDesc(pc=0x00007f4c59124f18 offset=158):
   jit::micro@24 (line 7)
ScopeDesc(pc=0x00007f4c59124f93 offset=1d3):
   java.math.BigInteger::<init>@20 (line 1137)
ScopeDesc(pc=0x00007f4c59124f93 offset=1d3):
   java.math.BigInteger::add@48 (line 1329)
ScopeDesc(pc=0x00007f4c59124f93 offset=1d3):
   jit::micro@24 (line 7)
ScopeDesc(pc=0x00007f4c59124f96 offset=1d6):
   java.math.BigInteger::<init>@27 (line 1138)
ScopeDesc(pc=0x00007f4c59124f96 offset=1d6):
   java.math.BigInteger::add@48 (line 1329)
ScopeDesc(pc=0x00007f4c59124f96 offset=1d6):
   jit::micro@24 (line 7)
ScopeDesc(pc=0x00007f4c59124fac offset=1ec):
   java.math.BigInteger::add@48 (line 1329)
ScopeDesc(pc=0x00007f4c59124fac offset=1ec):
   jit::micro@24 (line 7)
ScopeDesc(pc=0x00007f4c59124fbc offset=1fc):
   jit::micro@27 (line 7)
   Locals
    - l0: stack[0],oop
    - l1: empty
    - l2: empty
    - l3: stack[16]
    - l4: empty
    - l5: empty
    - l6: empty
ScopeDesc(pc=0x00007f4c59124fc3 offset=203):
   jit::micro@39 (line 8)
ScopeDesc(pc=0x00007f4c5912500f offset=24f):
   jit::micro@40 (line 8)
ScopeDesc(pc=0x00007f4c59125018 offset=258):
   jit::micro@49 (line 9)
ScopeDesc(pc=0x00007f4c5912502b offset=26b):
   jit::micro@50 (line 9)
ScopeDesc(pc=0x00007f4c591250a6 offset=2e6):
   java.math.BigInteger::<init>@58 (line 318)
ScopeDesc(pc=0x00007f4c591250a6 offset=2e6):
   java.math.BigInteger::<init>@5 (line 338)
ScopeDesc(pc=0x00007f4c591250a6 offset=2e6):
   jit::micro@5 (line 5)
ScopeDesc(pc=0x00007f4c591250af offset=2ef):
   java.math.BigInteger::<init>@20 (line 1137)
ScopeDesc(pc=0x00007f4c591250af offset=2ef):
   java.math.BigInteger::add@48 (line 1329)
ScopeDesc(pc=0x00007f4c591250af offset=2ef):
   jit::micro@24 (line 7)
ScopeDesc(pc=0x00007f4c591250c0 offset=300):
   java.math.BigInteger::<init>@58 (line 318)
ScopeDesc(pc=0x00007f4c591250c0 offset=300):
   java.math.BigInteger::<init>@5 (line 338)
ScopeDesc(pc=0x00007f4c591250c0 offset=300):
   jit::micro@5 (line 5)
ScopeDesc(pc=0x00007f4c591250dc offset=31c):
   java.math.BigInteger::<init>@20 (line 1137)
ScopeDesc(pc=0x00007f4c591250dc offset=31c):
   java.math.BigInteger::add@48 (line 1329)
ScopeDesc(pc=0x00007f4c591250dc offset=31c):
   jit::micro@24 (line 7)
ScopeDesc(pc=0x00007f4c591250e0 offset=320):
   java.math.BigInteger::<init>@58 (line 318)
ScopeDesc(pc=0x00007f4c591250e0 offset=320):
   java.math.BigInteger::<init>@5 (line 338)
ScopeDesc(pc=0x00007f4c591250e0 offset=320):
   jit::micro@5 (line 5)
ScopeDesc(pc=0x00007f4c591250e4 offset=324):
   java.math.BigInteger::<init>@20 (line 1137)
ScopeDesc(pc=0x00007f4c591250e4 offset=324):
   java.math.BigInteger::add@48 (line 1329)
ScopeDesc(pc=0x00007f4c591250e4 offset=324):
   jit::micro@24 (line 7)
ScopeDesc(pc=0x00007f4c591250e6 offset=326):
   java.math.BigInteger::<init>@58 (line 318)
ScopeDesc(pc=0x00007f4c591250e6 offset=326):
   java.math.BigInteger::<init>@5 (line 338)
ScopeDesc(pc=0x00007f4c591250e6 offset=326):
   jit::micro@5 (line 5)
ScopeDesc(pc=0x00007f4c591250f9 offset=339):
   java.math.BigInteger::<init>@20 (line 1137)
ScopeDesc(pc=0x00007f4c591250f9 offset=339):
   java.math.BigInteger::add@48 (line 1329)
ScopeDesc(pc=0x00007f4c591250f9 offset=339):
   jit::micro@24 (line 7)
ScopeDesc(pc=0x00007f4c59125102 offset=342):
   java.math.BigInteger::<init>@24 (line 1138)
ScopeDesc(pc=0x00007f4c59125102 offset=342):
   java.math.BigInteger::add@48 (line 1329)
ScopeDesc(pc=0x00007f4c59125102 offset=342):
   jit::micro@24 (line 7)
ScopeDesc(pc=0x00007f4c5912510b offset=34b):
   java.math.BigInteger::<init>@27 (line 1138)
ScopeDesc(pc=0x00007f4c5912510b offset=34b):
   java.math.BigInteger::add@48 (line 1329)
ScopeDesc(pc=0x00007f4c5912510b offset=34b):
   jit::micro@24 (line 7)
ScopeDesc(pc=0x00007f4c59125137 offset=377):
   java.math.BigInteger::<init>@24 (line 1138)
ScopeDesc(pc=0x00007f4c59125137 offset=377):
   java.math.BigInteger::add@48 (line 1329)
ScopeDesc(pc=0x00007f4c59125137 offset=377):
   jit::micro@24 (line 7)
ScopeDesc(pc=0x00007f4c5912513c offset=37c):
   java.math.BigInteger::<init>@5 (line 338)
ScopeDesc(pc=0x00007f4c5912513c offset=37c):
   jit::micro@15 (line 6)
ScopeDesc(pc=0x00007f4c59125154 offset=394):
   java.math.BigInteger::add@29 (line 1329)
   Locals
    - l0: obj[225]
    - l1: obj[226]
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x00007f4c59125154 offset=394):
   jit::micro@24 (line 7)
   Locals
    - l0: reg rbp [10],oop
    - l1: empty
    - l2: empty
    - l3: stack[16]
    - l4: empty
    - l5: empty
    - l6: empty
   Objects
    - 225: java.math.BigInteger 1, 0, 0, 0, 0, stack[40],oop
    - 226: java.math.BigInteger 1, 0, 0, 0, 0, stack[24],oop
ScopeDesc(pc=0x00007f4c59125178 offset=3b8):
   jit::micro@40 (line 8)
   Locals
    - l0: stack[0],oop
    - l1: empty
    - l2: empty
    - l3: stack[8]
    - l4: empty
    - l5: empty
    - l6: empty
   Expression stack
    - @0: stack[24],oop
    - @1: 0
    - @2: stack[0],oop
    - @3: 0
    - @4: reg rbp [10],int
ScopeDesc(pc=0x00007f4c5912518c offset=3cc):
   jit::micro@40 (line 8)
ScopeDesc(pc=0x00007f4c5912519c offset=3dc):
   jit::micro@50 (line 9)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
   Expression stack
    - @0: stack[0],oop
    - @1: reg rbp [10],int
ScopeDesc(pc=0x00007f4c591251b0 offset=3f0):
   java.math.BigInteger::<init>@58 (line 318)
ScopeDesc(pc=0x00007f4c591251b0 offset=3f0):
   java.math.BigInteger::<init>@5 (line 338)
ScopeDesc(pc=0x00007f4c591251b0 offset=3f0):
   jit::micro@5 (line 5)
ScopeDesc(pc=0x00007f4c591251d0 offset=410):
   java.math.BigInteger::<init>@20 (line 1137)
ScopeDesc(pc=0x00007f4c591251d0 offset=410):
   java.math.BigInteger::add@48 (line 1329)
ScopeDesc(pc=0x00007f4c591251d0 offset=410):
   jit::micro@24 (line 7)
ScopeDesc(pc=0x00007f4c59125200 offset=440):
   java.math.BigInteger::<init>@6 (line 309)  reexecute=true
   Locals
    - l0: obj[38]
    - l1: stack[16],oop
    - l2: 0
    - l3: stack[24]
   Expression stack
    - @0: stack[24]
ScopeDesc(pc=0x00007f4c59125200 offset=440):
   java.math.BigInteger::<init>@5 (line 338)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x00007f4c59125200 offset=440):
   jit::micro@5 (line 5)
   Locals
    - l0: reg rbp [10],oop
    - l1: empty
    - l2: stack[0],oop
    - l3: stack[8]
    - l4: empty
    - l5: empty
    - l6: empty
   Expression stack
    - @0: obj[38]
   Objects
    - 38: java.math.BigInteger 0, 0, 0, 0, 0, NULL
ScopeDesc(pc=0x00007f4c59125214 offset=454):
   java.math.BigInteger::<init>@6 (line 309)
ScopeDesc(pc=0x00007f4c59125214 offset=454):
   java.math.BigInteger::<init>@5 (line 338)
ScopeDesc(pc=0x00007f4c59125214 offset=454):
   jit::micro@5 (line 5)
ScopeDesc(pc=0x00007f4c5912522c offset=46c):
   java.math.BigInteger::<init>@30 (line 314)  reexecute=true
   Locals
    - l0: obj[331]
    - l1: stack[24],oop
    - l2: 0
    - l3: stack[20]
   Expression stack
    - @0: reg rbp [10],int
ScopeDesc(pc=0x00007f4c5912522c offset=46c):
   java.math.BigInteger::<init>@5 (line 338)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x00007f4c5912522c offset=46c):
   jit::micro@5 (line 5)
   Locals
    - l0: stack[0],oop
    - l1: empty
    - l2: stack[8],oop
    - l3: stack[16]
    - l4: empty
    - l5: empty
    - l6: empty
   Expression stack
    - @0: obj[331]
   Objects
    - 331: java.math.BigInteger 0, 0, 0, 0, 0, NULL
ScopeDesc(pc=0x00007f4c59125240 offset=480):
   java.math.BigInteger::<init>@58 (line 318)
ScopeDesc(pc=0x00007f4c59125240 offset=480):
   java.math.BigInteger::<init>@5 (line 338)
ScopeDesc(pc=0x00007f4c59125240 offset=480):
   jit::micro@5 (line 5)
ScopeDesc(pc=0x00007f4c59125250 offset=490):
   java.math.BigInteger::<init>@67 (line 319)  reexecute=true
   Locals
    - l0: obj[352]
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: obj[352]
    - @1: reg rbp [10],int
ScopeDesc(pc=0x00007f4c59125250 offset=490):
   java.math.BigInteger::<init>@5 (line 338)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x00007f4c59125250 offset=490):
   jit::micro@5 (line 5)
   Locals
    - l0: stack[0],oop
    - l1: empty
    - l2: stack[8],oop
    - l3: stack[16]
    - l4: empty
    - l5: empty
    - l6: empty
   Expression stack
    - @0: obj[352]
   Objects
    - 352: java.math.BigInteger 0, 0, 0, 0, 0, stack[24],oop
ScopeDesc(pc=0x00007f4c59125264 offset=4a4):
   java.math.BigInteger::<init>@67 (line 319)
ScopeDesc(pc=0x00007f4c59125264 offset=4a4):
   java.math.BigInteger::<init>@5 (line 338)
ScopeDesc(pc=0x00007f4c59125264 offset=4a4):
   jit::micro@5 (line 5)
ScopeDesc(pc=0x00007f4c59125274 offset=4b4):
   java.math.BigInteger::<init>@85 (line 321)  reexecute=true
   Locals
    - l0: obj[366]
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: reg rbp [10],int
    - @1: 67108864
ScopeDesc(pc=0x00007f4c59125274 offset=4b4):
   java.math.BigInteger::<init>@5 (line 338)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x00007f4c59125274 offset=4b4):
   jit::micro@5 (line 5)
   Locals
    - l0: stack[0],oop
    - l1: empty
    - l2: stack[8],oop
    - l3: stack[16]
    - l4: empty
    - l5: empty
    - l6: empty
   Expression stack
    - @0: obj[366]
   Objects
    - 366: java.math.BigInteger 1, 0, 0, 0, 0, stack[24],oop
ScopeDesc(pc=0x00007f4c59125288 offset=4c8):
   java.math.BigInteger::<init>@1 (line 308)
ScopeDesc(pc=0x00007f4c59125288 offset=4c8):
   java.math.BigInteger::<init>@5 (line 338)
ScopeDesc(pc=0x00007f4c59125288 offset=4c8):
   jit::micro@15 (line 6)
ScopeDesc(pc=0x00007f4c591252a8 offset=4e8):
   java.math.BigInteger::<init>@6 (line 309)  reexecute=true
   Locals
    - l0: obj[395]
    - l1: stack[8],oop
    - l2: 0
    - l3: stack[16]
   Expression stack
    - @0: stack[16]
ScopeDesc(pc=0x00007f4c591252a8 offset=4e8):
   java.math.BigInteger::<init>@5 (line 338)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x00007f4c591252a8 offset=4e8):
   jit::micro@15 (line 6)
   Locals
    - l0: reg rbp [10],oop
    - l1: empty
    - l2: empty
    - l3: stack[0]
    - l4: obj[394]
    - l5: empty
    - l6: empty
   Expression stack
    - @0: obj[395]
   Objects
    - 394: java.math.BigInteger 1, 0, 0, 0, 0, stack[24],oop
    - 395: java.math.BigInteger 0, 0, 0, 0, 0, NULL
ScopeDesc(pc=0x00007f4c591252bc offset=4fc):
   java.math.BigInteger::<init>@23 (line 312)
ScopeDesc(pc=0x00007f4c591252bc offset=4fc):
   java.math.BigInteger::<init>@5 (line 338)
ScopeDesc(pc=0x00007f4c591252bc offset=4fc):
   jit::micro@15 (line 6)
ScopeDesc(pc=0x00007f4c591252dc offset=51c):
   java.math.BigInteger::<init>@30 (line 314)  reexecute=true
   Locals
    - l0: obj[425]
    - l1: stack[16],oop
    - l2: 0
    - l3: stack[12]
   Expression stack
    - @0: reg rbp [10],int
ScopeDesc(pc=0x00007f4c591252dc offset=51c):
   java.math.BigInteger::<init>@5 (line 338)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x00007f4c591252dc offset=51c):
   jit::micro@15 (line 6)
   Locals
    - l0: stack[0],oop
    - l1: empty
    - l2: empty
    - l3: stack[8]
    - l4: obj[424]
    - l5: empty
    - l6: empty
   Expression stack
    - @0: obj[425]
   Objects
    - 424: java.math.BigInteger 1, 0, 0, 0, 0, stack[24],oop
    - 425: java.math.BigInteger 0, 0, 0, 0, 0, NULL
ScopeDesc(pc=0x00007f4c591252f0 offset=530):
   java.math.BigInteger::<init>@58 (line 318)
ScopeDesc(pc=0x00007f4c591252f0 offset=530):
   java.math.BigInteger::<init>@5 (line 338)
ScopeDesc(pc=0x00007f4c591252f0 offset=530):
   jit::micro@15 (line 6)
ScopeDesc(pc=0x00007f4c59125308 offset=548):
   java.math.BigInteger::<init>@67 (line 319)  reexecute=true
   Locals
    - l0: obj[452]
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: obj[452]
    - @1: reg rbp [10],int
ScopeDesc(pc=0x00007f4c59125308 offset=548):
   java.math.BigInteger::<init>@5 (line 338)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x00007f4c59125308 offset=548):
   jit::micro@15 (line 6)
   Locals
    - l0: stack[0],oop
    - l1: empty
    - l2: empty
    - l3: stack[8]
    - l4: obj[451]
    - l5: empty
    - l6: empty
   Expression stack
    - @0: obj[452]
   Objects
    - 451: java.math.BigInteger 1, 0, 0, 0, 0, stack[24],oop
    - 452: java.math.BigInteger 0, 0, 0, 0, 0, stack[40],oop
ScopeDesc(pc=0x00007f4c5912531c offset=55c):
   java.math.BigInteger::<init>@67 (line 319)
ScopeDesc(pc=0x00007f4c5912531c offset=55c):
   java.math.BigInteger::<init>@5 (line 338)
ScopeDesc(pc=0x00007f4c5912531c offset=55c):
   jit::micro@15 (line 6)
ScopeDesc(pc=0x00007f4c59125334 offset=574):
   java.math.BigInteger::<init>@85 (line 321)  reexecute=true
   Locals
    - l0: obj[472]
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: reg rbp [10],int
    - @1: 67108864
ScopeDesc(pc=0x00007f4c59125334 offset=574):
   java.math.BigInteger::<init>@5 (line 338)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x00007f4c59125334 offset=574):
   jit::micro@15 (line 6)
   Locals
    - l0: stack[0],oop
    - l1: empty
    - l2: empty
    - l3: stack[8]
    - l4: obj[471]
    - l5: empty
    - l6: empty
   Expression stack
    - @0: obj[472]
   Objects
    - 471: java.math.BigInteger 1, 0, 0, 0, 0, stack[24],oop
    - 472: java.math.BigInteger 1, 0, 0, 0, 0, stack[40],oop
ScopeDesc(pc=0x00007f4c59125348 offset=588):
   java.math.BigInteger::<init>@85 (line 321)
ScopeDesc(pc=0x00007f4c59125348 offset=588):
   java.math.BigInteger::<init>@5 (line 338)
ScopeDesc(pc=0x00007f4c59125348 offset=588):
   jit::micro@15 (line 6)
ScopeDesc(pc=0x00007f4c59125370 offset=5b0):
   java.math.BigInteger::<init>@7 (line 1136)  reexecute=true
   Locals
    - l0: stack[16],oop
    - l1: stack[40],oop
    - l2: 1
   Expression stack
    - @0: stack[16],oop
    - @1: reg rbp [10],int
ScopeDesc(pc=0x00007f4c59125370 offset=5b0):
   java.math.BigInteger::add@48 (line 1329)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: stack[16],oop
ScopeDesc(pc=0x00007f4c59125370 offset=5b0):
   jit::micro@24 (line 7)
   Locals
    - l0: stack[0],oop
    - l1: empty
    - l2: empty
    - l3: stack[8]
    - l4: empty
    - l5: empty
    - l6: empty
ScopeDesc(pc=0x00007f4c59125384 offset=5c4):
   java.math.BigInteger::<init>@20 (line 1137)
ScopeDesc(pc=0x00007f4c59125384 offset=5c4):
   java.math.BigInteger::add@48 (line 1329)
ScopeDesc(pc=0x00007f4c59125384 offset=5c4):
   jit::micro@24 (line 7)
ScopeDesc(pc=0x00007f4c591253a8 offset=5e8):
   java.math.BigInteger::<init>@30 (line 1138)  reexecute=true
   Locals
    - l0: stack[16],oop
    - l1: empty
    - l2: empty
   Expression stack
    - @0: reg rbp [10],int
    - @1: 67108864
ScopeDesc(pc=0x00007f4c591253a8 offset=5e8):
   java.math.BigInteger::add@48 (line 1329)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: stack[16],oop
ScopeDesc(pc=0x00007f4c591253a8 offset=5e8):
   jit::micro@24 (line 7)
   Locals
    - l0: stack[0],oop
    - l1: empty
    - l2: empty
    - l3: stack[8]
    - l4: empty
    - l5: empty
    - l6: empty
ScopeDesc(pc=0x00007f4c591253cc offset=60c):
   java.math.BigInteger::<init>@27 (line 1138)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   Expression stack
    - @0: NULL
ScopeDesc(pc=0x00007f4c591253cc offset=60c):
   java.math.BigInteger::add@48 (line 1329)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: empty
ScopeDesc(pc=0x00007f4c591253cc offset=60c):
   jit::micro@24 (line 7)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
ScopeDesc(pc=0x00007f4c591253e0 offset=620):
   java.math.BigInteger::<init>@27 (line 1138)
ScopeDesc(pc=0x00007f4c591253e0 offset=620):
   java.math.BigInteger::add@48 (line 1329)
ScopeDesc(pc=0x00007f4c591253e0 offset=620):
   jit::micro@24 (line 7)
ScopeDesc(pc=0x00007f4c591253f0 offset=630):
   java.math.BigInteger::<init>@4 (line 338)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: empty
    - @1: empty
    - @2: empty
    - @3: NULL
ScopeDesc(pc=0x00007f4c591253f0 offset=630):
   jit::micro@5 (line 5)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
   Expression stack
    - @0: empty
ScopeDesc(pc=0x00007f4c59125414 offset=654):
   java.math.BigInteger::<init>@66 (line 319)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: empty
    - @1: NULL
ScopeDesc(pc=0x00007f4c59125414 offset=654):
   java.math.BigInteger::<init>@5 (line 338)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x00007f4c59125414 offset=654):
   jit::micro@5 (line 5)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
   Expression stack
    - @0: empty
ScopeDesc(pc=0x00007f4c59125438 offset=678):
   java.math.BigInteger::<init>@4 (line 338)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: empty
    - @1: empty
    - @2: empty
    - @3: NULL
ScopeDesc(pc=0x00007f4c59125438 offset=678):
   jit::micro@15 (line 6)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
   Expression stack
    - @0: empty
ScopeDesc(pc=0x00007f4c5912545c offset=69c):
   java.math.BigInteger::<init>@66 (line 319)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: empty
    - @1: NULL
ScopeDesc(pc=0x00007f4c5912545c offset=69c):
   java.math.BigInteger::<init>@5 (line 338)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x00007f4c5912545c offset=69c):
   jit::micro@15 (line 6)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
   Expression stack
    - @0: empty
ScopeDesc(pc=0x00007f4c59125470 offset=6b0):
   java.math.BigInteger::<init>@66 (line 319)
ScopeDesc(pc=0x00007f4c59125470 offset=6b0):
   java.math.BigInteger::<init>@5 (line 338)
ScopeDesc(pc=0x00007f4c59125470 offset=6b0):
   jit::micro@15 (line 6)
ScopeDesc(pc=0x00007f4c59125480 offset=6c0):
   java.math.BigInteger::<init>@6 (line 1136)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   Expression stack
    - @0: empty
    - @1: NULL
ScopeDesc(pc=0x00007f4c59125480 offset=6c0):
   java.math.BigInteger::add@48 (line 1329)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: empty
ScopeDesc(pc=0x00007f4c59125480 offset=6c0):
   jit::micro@24 (line 7)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
ScopeDesc(pc=0x00007f4c59125494 offset=6d4):
   java.math.BigInteger::<init>@6 (line 1136)
ScopeDesc(pc=0x00007f4c59125494 offset=6d4):
   java.math.BigInteger::add@48 (line 1329)
ScopeDesc(pc=0x00007f4c59125494 offset=6d4):
   jit::micro@24 (line 7)
ScopeDesc(pc=0x00007f4c591254a4 offset=6e4):
   jit::micro@39 (line 8)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
   Expression stack
    - @0: empty
    - @1: empty
    - @2: empty
    - @3: empty
    - @4: NULL
ScopeDesc(pc=0x00007f4c591254b8 offset=6f8):
   jit::micro@39 (line 8)
ScopeDesc(pc=0x00007f4c591254cc offset=70c):
   jit::micro@40 (line 8)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
   Expression stack
    - @0: stack[0],oop
    - @1: 0
    - @2: NULL
    - @3: 0
    - @4: reg rbp [10],int
ScopeDesc(pc=0x00007f4c591254e0 offset=720):
   java.math.BigInteger::add@29 (line 1329)
ScopeDesc(pc=0x00007f4c591254e0 offset=720):
   jit::micro@24 (line 7)
ScopeDesc(pc=0x00007f4c591254e5 offset=725):
   java.math.BigInteger::<init>@55 (line 318)
ScopeDesc(pc=0x00007f4c591254e5 offset=725):
   java.math.BigInteger::<init>@5 (line 338)
ScopeDesc(pc=0x00007f4c591254e5 offset=725):
   jit::micro@5 (line 5)
ScopeDesc(pc=0x00007f4c591254ea offset=72a):
   java.math.BigInteger::<init>@55 (line 318)
ScopeDesc(pc=0x00007f4c591254ea offset=72a):
   java.math.BigInteger::<init>@5 (line 338)
ScopeDesc(pc=0x00007f4c591254ea offset=72a):
   jit::micro@15 (line 6)
ScopeDesc(pc=0x00007f4c591254ef offset=72f):
   java.math.BigInteger::add@41 (line 1329)
ScopeDesc(pc=0x00007f4c591254ef offset=72f):
   jit::micro@24 (line 7)
ScopeDesc(pc=0x00007f4c591254f4 offset=734):
   jit::micro@27 (line 7)
ScopeDesc(pc=0x00007f4c591254f7 offset=737):
   jit::micro@-1 (line 5)
ScopeDesc(pc=0x00007f4c59125504 offset=744):
   java.math.BigInteger::<init>@20 (line 1137)
ScopeDesc(pc=0x00007f4c59125504 offset=744):
   java.math.BigInteger::add@48 (line 1329)
ScopeDesc(pc=0x00007f4c59125504 offset=744):
   jit::micro@24 (line 7)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
relocations:
         @0x00007f4c59124c08: 443f
relocInfo@0x00007f4c59124c08 [type=4(static_call) addr=0x00007f4c59124dff offset=63 format=1] | [destination=0x00007f4c59034aa0 metadata=0x0000000000000000]
         @0x00007f4c59124c0a: 4454
relocInfo@0x00007f4c59124c0a [type=4(static_call) addr=0x00007f4c59124e53 offset=84 format=1] | [destination=0x00007f4c59034aa0 metadata=0x0000000000000000]
         @0x00007f4c59124c0c: f004cc5c
relocInfo@0x00007f4c59124c0e [type=12(metadata) addr=0x00007f4c59124eaf offset=92 format=3 data=4] | [metadata_addr=0x00007f4c59125598 *=0x00000008000c8300 offset=0]metadata_value=0x00000008000c8300: 'java/math/BigInteger'
         @0x00007f4c59124c10: 4438
relocInfo@0x00007f4c59124c10 [type=4(static_call) addr=0x00007f4c59124ee7 offset=56 format=1] | [destination=0x00007f4c59037b80 metadata=0x0000000000000000]
         @0x00007f4c59124c12: f803634fd3907f4c7433
relocInfo@0x00007f4c59124c1a [type=7(external_word) addr=0x00007f4c59124f1a offset=51 format=1 data={634fd3907f4c}] | [target=0x00007f4c634fd390]
         @0x00007f4c59124c1c: f8036311ec807f4c700d
relocInfo@0x00007f4c59124c24 [type=7(external_word) addr=0x00007f4c59124f27 offset=13 data={6311ec807f4c}] | [target=0x00007f4c6311ec80]
         @0x00007f4c59124c26: 640e
relocInfo@0x00007f4c59124c26 [type=6(runtime_call) addr=0x00007f4c59124f35 offset=14 format=1] | [destination=0x00007f4c627247d0]
         @0x00007f4c59124c28: f8036311ecc07f4c7011
relocInfo@0x00007f4c59124c30 [type=7(external_word) addr=0x00007f4c59124f46 offset=17 data={6311ecc07f4c}] | [target=0x00007f4c6311ecc0]
         @0x00007f4c59124c32: 640e
relocInfo@0x00007f4c59124c32 [type=6(runtime_call) addr=0x00007f4c59124f54 offset=14 format=1] | [destination=0x00007f4c627247d0]
         @0x00007f4c59124c34: 3463
relocInfo@0x00007f4c59124c34 [type=3(opt_virtual_call) addr=0x00007f4c59124fb7 offset=99 format=1] | [destination=0x00007f4c591213c0 metadata=0x0000000000000000]
         @0x00007f4c59124c36: b07c
relocInfo@0x00007f4c59124c36 [type=11(poll_return) addr=0x00007f4c59125033 offset=124]
         @0x00007f4c59124c38: f803634fd3907f4c743f
relocInfo@0x00007f4c59124c40 [type=7(external_word) addr=0x00007f4c59125072 offset=63 format=1 data={634fd3907f4c}] | [target=0x00007f4c634fd390]
         @0x00007f4c59124c42: f8036311ed307f4c700d
relocInfo@0x00007f4c59124c4a [type=7(external_word) addr=0x00007f4c5912507f offset=13 data={6311ed307f4c}] | [target=0x00007f4c6311ed30]
         @0x00007f4c59124c4c: 640e
relocInfo@0x00007f4c59124c4c [type=6(runtime_call) addr=0x00007f4c5912508d offset=14 format=1] | [destination=0x00007f4c627247d0]
         @0x00007f4c59124c4e: f803634fd3907f4c7483
relocInfo@0x00007f4c59124c56 [type=7(external_word) addr=0x00007f4c59125110 offset=131 format=1 data={634fd3907f4c}] | [target=0x00007f4c634fd390]
         @0x00007f4c59124c58: f8036311ed307f4c700d
relocInfo@0x00007f4c59124c60 [type=7(external_word) addr=0x00007f4c5912511d offset=13 data={6311ed307f4c}] | [target=0x00007f4c6311ed30]
         @0x00007f4c59124c62: 640e
relocInfo@0x00007f4c59124c62 [type=6(runtime_call) addr=0x00007f4c5912512b offset=14 format=1] | [destination=0x00007f4c627247d0]
         @0x00007f4c59124c64: c011
relocInfo@0x00007f4c59124c64 [type=12(metadata) addr=0x00007f4c5912513c offset=17] | [metadata_addr=0x00007f4c5912513e *=0x00000008000c8300 offset=0]metadata_value=0x00000008000c8300: 'java/math/BigInteger'
         @0x00007f4c59124c66: 6413
relocInfo@0x00007f4c59124c66 [type=6(runtime_call) addr=0x00007f4c5912514f offset=19 format=1] | [destination=0x00007f4c59083720]
         @0x00007f4c59124c68: 6424
relocInfo@0x00007f4c59124c68 [type=6(runtime_call) addr=0x00007f4c59125173 offset=36 format=1] | [destination=0x00007f4c5911e940]
         @0x00007f4c59124c6a: f803630a08c07f4c7005
relocInfo@0x00007f4c59124c72 [type=7(external_word) addr=0x00007f4c59125178 offset=5 data={630a08c07f4c}] | [target=0x00007f4c630a08c0]
         @0x00007f4c59124c74: 640e
relocInfo@0x00007f4c59124c74 [type=6(runtime_call) addr=0x00007f4c59125186 offset=14 format=1] | [destination=0x00007f4c627247d0]
         @0x00007f4c59124c76: 6411
relocInfo@0x00007f4c59124c76 [type=6(runtime_call) addr=0x00007f4c59125197 offset=17 format=1] | [destination=0x00007f4c5911e940]
         @0x00007f4c59124c78: f803630a08c07f4c7005
relocInfo@0x00007f4c59124c80 [type=7(external_word) addr=0x00007f4c5912519c offset=5 data={630a08c07f4c}] | [target=0x00007f4c630a08c0]
         @0x00007f4c59124c82: 640e
relocInfo@0x00007f4c59124c82 [type=6(runtime_call) addr=0x00007f4c591251aa offset=14 format=1] | [destination=0x00007f4c627247d0]
         @0x00007f4c59124c84: 6451
relocInfo@0x00007f4c59124c84 [type=6(runtime_call) addr=0x00007f4c591251fb offset=81 format=1] | [destination=0x00007f4c5911e940]
         @0x00007f4c59124c86: f803630a08c07f4c7005
relocInfo@0x00007f4c59124c8e [type=7(external_word) addr=0x00007f4c59125200 offset=5 data={630a08c07f4c}] | [target=0x00007f4c630a08c0]
         @0x00007f4c59124c90: 640e
relocInfo@0x00007f4c59124c90 [type=6(runtime_call) addr=0x00007f4c5912520e offset=14 format=1] | [destination=0x00007f4c627247d0]
         @0x00007f4c59124c92: 6419
relocInfo@0x00007f4c59124c92 [type=6(runtime_call) addr=0x00007f4c59125227 offset=25 format=1] | [destination=0x00007f4c5911e940]
         @0x00007f4c59124c94: f803630a08c07f4c7005
relocInfo@0x00007f4c59124c9c [type=7(external_word) addr=0x00007f4c5912522c offset=5 data={630a08c07f4c}] | [target=0x00007f4c630a08c0]
         @0x00007f4c59124c9e: 640e
relocInfo@0x00007f4c59124c9e [type=6(runtime_call) addr=0x00007f4c5912523a offset=14 format=1] | [destination=0x00007f4c627247d0]
         @0x00007f4c59124ca0: 6411
relocInfo@0x00007f4c59124ca0 [type=6(runtime_call) addr=0x00007f4c5912524b offset=17 format=1] | [destination=0x00007f4c5911e940]
         @0x00007f4c59124ca2: f803630a08c07f4c7005
relocInfo@0x00007f4c59124caa [type=7(external_word) addr=0x00007f4c59125250 offset=5 data={630a08c07f4c}] | [target=0x00007f4c630a08c0]
         @0x00007f4c59124cac: 640e
relocInfo@0x00007f4c59124cac [type=6(runtime_call) addr=0x00007f4c5912525e offset=14 format=1] | [destination=0x00007f4c627247d0]
         @0x00007f4c59124cae: 6411
relocInfo@0x00007f4c59124cae [type=6(runtime_call) addr=0x00007f4c5912526f offset=17 format=1] | [destination=0x00007f4c5911e940]
         @0x00007f4c59124cb0: f803630a08c07f4c7005
relocInfo@0x00007f4c59124cb8 [type=7(external_word) addr=0x00007f4c59125274 offset=5 data={630a08c07f4c}] | [target=0x00007f4c630a08c0]
         @0x00007f4c59124cba: 640e
relocInfo@0x00007f4c59124cba [type=6(runtime_call) addr=0x00007f4c59125282 offset=14 format=1] | [destination=0x00007f4c627247d0]
         @0x00007f4c59124cbc: 6421
relocInfo@0x00007f4c59124cbc [type=6(runtime_call) addr=0x00007f4c591252a3 offset=33 format=1] | [destination=0x00007f4c5911e940]
         @0x00007f4c59124cbe: f803630a08c07f4c7005
relocInfo@0x00007f4c59124cc6 [type=7(external_word) addr=0x00007f4c591252a8 offset=5 data={630a08c07f4c}] | [target=0x00007f4c630a08c0]
         @0x00007f4c59124cc8: 640e
relocInfo@0x00007f4c59124cc8 [type=6(runtime_call) addr=0x00007f4c591252b6 offset=14 format=1] | [destination=0x00007f4c627247d0]
         @0x00007f4c59124cca: 6421
relocInfo@0x00007f4c59124cca [type=6(runtime_call) addr=0x00007f4c591252d7 offset=33 format=1] | [destination=0x00007f4c5911e940]
         @0x00007f4c59124ccc: f803630a08c07f4c7005
relocInfo@0x00007f4c59124cd4 [type=7(external_word) addr=0x00007f4c591252dc offset=5 data={630a08c07f4c}] | [target=0x00007f4c630a08c0]
         @0x00007f4c59124cd6: 640e
relocInfo@0x00007f4c59124cd6 [type=6(runtime_call) addr=0x00007f4c591252ea offset=14 format=1] | [destination=0x00007f4c627247d0]
         @0x00007f4c59124cd8: 6419
relocInfo@0x00007f4c59124cd8 [type=6(runtime_call) addr=0x00007f4c59125303 offset=25 format=1] | [destination=0x00007f4c5911e940]
         @0x00007f4c59124cda: f803630a08c07f4c7005
relocInfo@0x00007f4c59124ce2 [type=7(external_word) addr=0x00007f4c59125308 offset=5 data={630a08c07f4c}] | [target=0x00007f4c630a08c0]
         @0x00007f4c59124ce4: 640e
relocInfo@0x00007f4c59124ce4 [type=6(runtime_call) addr=0x00007f4c59125316 offset=14 format=1] | [destination=0x00007f4c627247d0]
         @0x00007f4c59124ce6: 6419
relocInfo@0x00007f4c59124ce6 [type=6(runtime_call) addr=0x00007f4c5912532f offset=25 format=1] | [destination=0x00007f4c5911e940]
         @0x00007f4c59124ce8: f803630a08c07f4c7005
relocInfo@0x00007f4c59124cf0 [type=7(external_word) addr=0x00007f4c59125334 offset=5 data={630a08c07f4c}] | [target=0x00007f4c630a08c0]
         @0x00007f4c59124cf2: 640e
relocInfo@0x00007f4c59124cf2 [type=6(runtime_call) addr=0x00007f4c59125342 offset=14 format=1] | [destination=0x00007f4c627247d0]
         @0x00007f4c59124cf4: 6429
relocInfo@0x00007f4c59124cf4 [type=6(runtime_call) addr=0x00007f4c5912536b offset=41 format=1] | [destination=0x00007f4c5911e940]
         @0x00007f4c59124cf6: f803630a08c07f4c7005
relocInfo@0x00007f4c59124cfe [type=7(external_word) addr=0x00007f4c59125370 offset=5 data={630a08c07f4c}] | [target=0x00007f4c630a08c0]
         @0x00007f4c59124d00: 640e
relocInfo@0x00007f4c59124d00 [type=6(runtime_call) addr=0x00007f4c5912537e offset=14 format=1] | [destination=0x00007f4c627247d0]
         @0x00007f4c59124d02: 6425
relocInfo@0x00007f4c59124d02 [type=6(runtime_call) addr=0x00007f4c591253a3 offset=37 format=1] | [destination=0x00007f4c5911e940]
         @0x00007f4c59124d04: f803630a08c07f4c7005
relocInfo@0x00007f4c59124d0c [type=7(external_word) addr=0x00007f4c591253a8 offset=5 data={630a08c07f4c}] | [target=0x00007f4c630a08c0]
         @0x00007f4c59124d0e: 640e
relocInfo@0x00007f4c59124d0e [type=6(runtime_call) addr=0x00007f4c591253b6 offset=14 format=1] | [destination=0x00007f4c627247d0]
         @0x00007f4c59124d10: 6411
relocInfo@0x00007f4c59124d10 [type=6(runtime_call) addr=0x00007f4c591253c7 offset=17 format=1] | [destination=0x00007f4c5911e940]
         @0x00007f4c59124d12: f803630a08c07f4c7005
relocInfo@0x00007f4c59124d1a [type=7(external_word) addr=0x00007f4c591253cc offset=5 data={630a08c07f4c}] | [target=0x00007f4c630a08c0]
         @0x00007f4c59124d1c: 640e
relocInfo@0x00007f4c59124d1c [type=6(runtime_call) addr=0x00007f4c591253da offset=14 format=1] | [destination=0x00007f4c627247d0]
         @0x00007f4c59124d1e: 6411
relocInfo@0x00007f4c59124d1e [type=6(runtime_call) addr=0x00007f4c591253eb offset=17 format=1] | [destination=0x00007f4c5911e940]
         @0x00007f4c59124d20: f803630a08c07f4c7005
relocInfo@0x00007f4c59124d28 [type=7(external_word) addr=0x00007f4c591253f0 offset=5 data={630a08c07f4c}] | [target=0x00007f4c630a08c0]
         @0x00007f4c59124d2a: 640e
relocInfo@0x00007f4c59124d2a [type=6(runtime_call) addr=0x00007f4c591253fe offset=14 format=1] | [destination=0x00007f4c627247d0]
         @0x00007f4c59124d2c: 6411
relocInfo@0x00007f4c59124d2c [type=6(runtime_call) addr=0x00007f4c5912540f offset=17 format=1] | [destination=0x00007f4c5911e940]
         @0x00007f4c59124d2e: f803630a08c07f4c7005
relocInfo@0x00007f4c59124d36 [type=7(external_word) addr=0x00007f4c59125414 offset=5 data={630a08c07f4c}] | [target=0x00007f4c630a08c0]
         @0x00007f4c59124d38: 640e
relocInfo@0x00007f4c59124d38 [type=6(runtime_call) addr=0x00007f4c59125422 offset=14 format=1] | [destination=0x00007f4c627247d0]
         @0x00007f4c59124d3a: 6411
relocInfo@0x00007f4c59124d3a [type=6(runtime_call) addr=0x00007f4c59125433 offset=17 format=1] | [destination=0x00007f4c5911e940]
         @0x00007f4c59124d3c: f803630a08c07f4c7005
relocInfo@0x00007f4c59124d44 [type=7(external_word) addr=0x00007f4c59125438 offset=5 data={630a08c07f4c}] | [target=0x00007f4c630a08c0]
         @0x00007f4c59124d46: 640e
relocInfo@0x00007f4c59124d46 [type=6(runtime_call) addr=0x00007f4c59125446 offset=14 format=1] | [destination=0x00007f4c627247d0]
         @0x00007f4c59124d48: 6411
relocInfo@0x00007f4c59124d48 [type=6(runtime_call) addr=0x00007f4c59125457 offset=17 format=1] | [destination=0x00007f4c5911e940]
         @0x00007f4c59124d4a: f803630a08c07f4c7005
relocInfo@0x00007f4c59124d52 [type=7(external_word) addr=0x00007f4c5912545c offset=5 data={630a08c07f4c}] | [target=0x00007f4c630a08c0]
         @0x00007f4c59124d54: 640e
relocInfo@0x00007f4c59124d54 [type=6(runtime_call) addr=0x00007f4c5912546a offset=14 format=1] | [destination=0x00007f4c627247d0]
         @0x00007f4c59124d56: 6411
relocInfo@0x00007f4c59124d56 [type=6(runtime_call) addr=0x00007f4c5912547b offset=17 format=1] | [destination=0x00007f4c5911e940]
         @0x00007f4c59124d58: f803630a08c07f4c7005
relocInfo@0x00007f4c59124d60 [type=7(external_word) addr=0x00007f4c59125480 offset=5 data={630a08c07f4c}] | [target=0x00007f4c630a08c0]
         @0x00007f4c59124d62: 640e
relocInfo@0x00007f4c59124d62 [type=6(runtime_call) addr=0x00007f4c5912548e offset=14 format=1] | [destination=0x00007f4c627247d0]
         @0x00007f4c59124d64: 6411
relocInfo@0x00007f4c59124d64 [type=6(runtime_call) addr=0x00007f4c5912549f offset=17 format=1] | [destination=0x00007f4c5911e940]
         @0x00007f4c59124d66: f803630a08c07f4c7005
relocInfo@0x00007f4c59124d6e [type=7(external_word) addr=0x00007f4c591254a4 offset=5 data={630a08c07f4c}] | [target=0x00007f4c630a08c0]
         @0x00007f4c59124d70: 640e
relocInfo@0x00007f4c59124d70 [type=6(runtime_call) addr=0x00007f4c591254b2 offset=14 format=1] | [destination=0x00007f4c627247d0]
         @0x00007f4c59124d72: 6415
relocInfo@0x00007f4c59124d72 [type=6(runtime_call) addr=0x00007f4c591254c7 offset=21 format=1] | [destination=0x00007f4c5911e940]
         @0x00007f4c59124d74: f803630a08c07f4c7005
relocInfo@0x00007f4c59124d7c [type=7(external_word) addr=0x00007f4c591254cc offset=5 data={630a08c07f4c}] | [target=0x00007f4c630a08c0]
         @0x00007f4c59124d7e: 640e
relocInfo@0x00007f4c59124d7e [type=6(runtime_call) addr=0x00007f4c591254da offset=14 format=1] | [destination=0x00007f4c627247d0]
         @0x00007f4c59124d80: 6425
relocInfo@0x00007f4c59124d80 [type=6(runtime_call) addr=0x00007f4c591254ff offset=37 format=1] | [destination=0x00007f4c59080720]
         @0x00007f4c59124d82: f4d18005
relocInfo@0x00007f4c59124d84 [type=8(internal_word) addr=0x00007f4c59125504 offset=5 data=1233] | [target=0x00007f4c59125033]
         @0x00007f4c59124d86: 6411
relocInfo@0x00007f4c59124d86 [type=6(runtime_call) addr=0x00007f4c59125515 offset=17 format=1] | [destination=0x00007f4c5911d6a0]
         @0x00007f4c59124d88: 000b
relocInfo@0x00007f4c59124d88 [type=0(none) addr=0x00007f4c59125520 offset=11]
         @0x00007f4c59124d8a: f801ffc15000
relocInfo@0x00007f4c59124d8e [type=5(static_stub) addr=0x00007f4c59125520 offset=0 data=-63] | [static_call=0x00007f4c59124dff]
         @0x00007f4c59124d90: c000
relocInfo@0x00007f4c59124d90 [type=12(metadata) addr=0x00007f4c59125520 offset=0] | [metadata_addr=0x00007f4c59125522 *=0x0000000000000000 offset=0]
         @0x00007f4c59124d92: 640a
relocInfo@0x00007f4c59124d92 [type=6(runtime_call) addr=0x00007f4c5912552a offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x00007f4c59124d94: f801ff6d5005
relocInfo@0x00007f4c59124d98 [type=5(static_stub) addr=0x00007f4c5912552f offset=5 data=-147] | [static_call=0x00007f4c59124e53]
         @0x00007f4c59124d9a: c000
relocInfo@0x00007f4c59124d9a [type=12(metadata) addr=0x00007f4c5912552f offset=0] | [metadata_addr=0x00007f4c59125531 *=0x0000000000000000 offset=0]
         @0x00007f4c59124d9c: 640a
relocInfo@0x00007f4c59124d9c [type=6(runtime_call) addr=0x00007f4c59125539 offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x00007f4c59124d9e: f801fed95005
relocInfo@0x00007f4c59124da2 [type=5(static_stub) addr=0x00007f4c5912553e offset=5 data=-295] | [static_call=0x00007f4c59124ee7]
         @0x00007f4c59124da4: c000
relocInfo@0x00007f4c59124da4 [type=12(metadata) addr=0x00007f4c5912553e offset=0] | [metadata_addr=0x00007f4c59125540 *=0x0000000000000000 offset=0]
         @0x00007f4c59124da6: 640a
relocInfo@0x00007f4c59124da6 [type=6(runtime_call) addr=0x00007f4c59125548 offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x00007f4c59124da8: f801fe095005
relocInfo@0x00007f4c59124dac [type=5(static_stub) addr=0x00007f4c5912554d offset=5 data=-503] | [static_call=0x00007f4c59124fb7]
         @0x00007f4c59124dae: c000
relocInfo@0x00007f4c59124dae [type=12(metadata) addr=0x00007f4c5912554d offset=0] | [metadata_addr=0x00007f4c5912554f *=0x0000000000000000 offset=0]
         @0x00007f4c59124db0: 640a
relocInfo@0x00007f4c59124db0 [type=6(runtime_call) addr=0x00007f4c59125557 offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x00007f4c59124db2: 6405
relocInfo@0x00007f4c59124db2 [type=6(runtime_call) addr=0x00007f4c5912555c offset=5 format=1] | [destination=0x00007f4c59083420]
         @0x00007f4c59124db4: 640f
relocInfo@0x00007f4c59124db4 [type=6(runtime_call) addr=0x00007f4c5912556b offset=15 format=1] | [destination=0x00007f4c5911ec60]
         @0x00007f4c59124db6: 0000
relocInfo@0x00007f4c59124db6 [type=0(none) addr=0x00007f4c5912556b offset=0]
         @0x00007f4c59124db8: 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Dependencies:
Dependency of type unique_concrete_method_4
  context = java.math.BigInteger
  method  = {method} {0x00007f4bfdc48fb8} 'add' '(Ljava/math/BigInteger;)Ljava/math/BigInteger;' in 'java/math/BigInteger'
  class   = java.math.BigInteger
  method  = {method} {0x00007f4bfdc48fb8} 'add' '(Ljava/math/BigInteger;)Ljava/math/BigInteger;' in 'java/math/BigInteger'
   [nmethod<=klass]java.math.BigInteger
Dependency of type unique_concrete_method_4
  context = java.math.BigInteger
  method  = {method} {0x00007f4bfdc51b88} 'toByteArray' '()[B' in 'java/math/BigInteger'
  class   = java.math.BigInteger
  method  = {method} {0x00007f4bfdc51b88} 'toByteArray' '()[B' in 'java/math/BigInteger'
   [nmethod<=klass]java.math.BigInteger
Dependency of type unique_concrete_method_4
  context = java.math.BigInteger
  method  = {method} {0x00007f4bfdc506c0} 'bitLength' '()I' in 'java/math/BigInteger'
  class   = java.math.BigInteger
  method  = {method} {0x00007f4bfdc506c0} 'bitLength' '()I' in 'java/math/BigInteger'
   [nmethod<=klass]java.math.BigInteger
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ExceptionHandlerTable (size = 120 bytes)
catch_pco = 68 (pc=0x00007f4c59124e04, 1 entries)
  bci -1 at scope depth 0 -> pco 1829 (pc=0x00007f4c591254e5)
catch_pco = 152 (pc=0x00007f4c59124e58, 1 entries)
  bci -1 at scope depth 0 -> pco 1834 (pc=0x00007f4c591254ea)
catch_pco = 300 (pc=0x00007f4c59124eec, 1 entries)
  bci -1 at scope depth 0 -> pco 1839 (pc=0x00007f4c591254ef)
catch_pco = 508 (pc=0x00007f4c59124fbc, 1 entries)
  bci -1 at scope depth 0 -> pco 1844 (pc=0x00007f4c591254f4)
catch_pco = 916 (pc=0x00007f4c59125154, 1 entries)
  bci -1 at scope depth 0 -> pco 1824 (pc=0x00007f4c591254e0)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ImplicitExceptionTable (size = 7 entries, 60 bytes):
{
   < 0x00007f4c59124de0, 0x00007f4c591253e0 > < 0x00007f4c59124e09, 0x00007f4c59125404 > < 0x00007f4c59124e31, 0x00007f4c59125428 > 
   < 0x00007f4c59124e60, 0x00007f4c5912544c > < 0x00007f4c59124eef, 0x00007f4c59125470 > < 0x00007f4c59124fc0, 0x00007f4c59125494 > 
   < 0x00007f4c59124fc7, 0x00007f4c591254b8 > 
}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded oops:
#0: 0x0000000000000000 NULL-oop
#1: 0x000000010157f410 a 'java/lang/Class'{0x000000010157f410} = 'java/math/BigInteger'
#2: 0x00000001014b95e0 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x00000001014b95e0}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded metadata:
#0: 0x0000000000000000 NULL-oop
#1: 0x00007f4bfdc0e4a8 {method} {0x00007f4bfdc0e4a8} 'micro' '([B[B[BI)I' in 'jit'
#2: 0x00007f4bfdc466c8 {method} {0x00007f4bfdc466c8} '<init>' '([B)V' in 'java/math/BigInteger'
#3: 0x00007f4bfdc46600 {method} {0x00007f4bfdc46600} '<init>' '([BII)V' in 'java/math/BigInteger'
#4: 0x00000008000c8300 'java/math/BigInteger'
#5: 0x00007f4bfdc48fb8 {method} {0x00007f4bfdc48fb8} 'add' '(Ljava/math/BigInteger;)Ljava/math/BigInteger;' in 'java/math/BigInteger'
#6: 0x00007f4bfdc48918 {method} {0x00007f4bfdc48918} '<init>' '([II)V' in 'java/math/BigInteger'
#7: 0x00007f4bfdc51b88 {method} {0x00007f4bfdc51b88} 'toByteArray' '()[B' in 'java/math/BigInteger'
#8: 0x00007f4bfdc506c0 {method} {0x00007f4bfdc506c0} 'bitLength' '()I' in 'java/math/BigInteger'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
[Time] 744 [Res] -97916
------------------------------------------------------------------------
static jit::micro([B[B[BI)I
  interpreter_invocation_count:       11548
  invocation_counter:                 11548
  backedge_counter:                       0
  decompile_count:                        0
  mdo size: 616 bytes

0 new 7 <java/math/BigInteger>
3 dup
4 aload_1
5 invokespecial 9 <java/math/BigInteger.<init>([B)V> 
  0   bci: 5    CounterData         count(9885)
8 astore #4
10 new 7 <java/math/BigInteger>
13 dup
14 aload_2
15 invokespecial 9 <java/math/BigInteger.<init>([B)V> 
  16  bci: 15   CounterData         count(9885)
18 astore #5
20 aload #5
22 aload #4
24 invokevirtual 12 <java/math/BigInteger.add(Ljava/math/BigInteger;)Ljava/math/BigInteger;> 
  32  bci: 24   VirtualCallData     count(0) nonprofiled_count(0) entries(1)
                                    'java/math/BigInteger'(9885 1.00)
27 invokevirtual 16 <java/math/BigInteger.toByteArray()[B> 
  88  bci: 27   VirtualCallData     count(0) nonprofiled_count(0) entries(1)
                                    'java/math/BigInteger'(9885 1.00)
30 astore #6
32 aload #6
34 iconst_0
35 fast_aload_0
36 iconst_0
37 aload #6
39 arraylength
40 invokestatic 20 <java/lang/System.arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V> 
  144 bci: 40   CounterData         count(9885)
43 fast_aload_0
44 iload_3
45 fast_aload_0
46 arraylength
47 iconst_1
48 isub
49 iand
50 baload
51 ireturn
------------------------------------------------------------------------
Total MDO size: 616 bytes
