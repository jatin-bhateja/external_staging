CompileCommand: print TestMinimal.test bool print = true

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     363    5       1       TestMinimal::test (35 bytes)
 total in heap  [0x00007faf3479dd90,0x00007faf3479e440] = 1712
 relocation     [0x00007faf3479df18,0x00007faf3479dff0] = 216
 main code      [0x00007faf3479e000,0x00007faf3479e1f0] = 496
 stub code      [0x00007faf3479e1f0,0x00007faf3479e258] = 104
 oops           [0x00007faf3479e258,0x00007faf3479e260] = 8
 metadata       [0x00007faf3479e260,0x00007faf3479e268] = 8
 scopes data    [0x00007faf3479e268,0x00007faf3479e2d0] = 104
 scopes pcs     [0x00007faf3479e2d0,0x00007faf3479e420] = 336
 dependencies   [0x00007faf3479e420,0x00007faf3479e428] = 8
 nul chk table  [0x00007faf3479e428,0x00007faf3479e440] = 24

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
[Inline Entry Point]
[Verified Entry Point]
[Verified Inline Entry Point]
[Verified Inline Entry Point (RO)]
  # {method} {0x00007fae974003c0} 'test' '(I[Ljava/lang/String;)V' in 'TestMinimal'
  # parm0:    rsi       = int
  # parm1:    rdx:rdx   = '[Ljava/lang/String;'
  #           [sp+0x50]  (sp of caller)
 ;;  block B1 [0, 0]
  0x00007faf3479e000:   mov    %eax,-0x18000(%rsp)
  0x00007faf3479e007:   push   %rbp
  0x00007faf3479e008:   sub    $0x40,%rsp
  0x00007faf3479e00c:   cmpl   $0x1,0x20(%r15)
  0x00007faf3479e014:   je     0x00007faf3479e01b
  0x00007faf3479e016:   callq  Stub::nmethod_entry_barrier  ;*iload_0 {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - TestMinimal::test@0 (line 8)
                                                            ;   {runtime_call StubRoutines (final stubs)}
  0x00007faf3479e01b:   mov    %rdx,0x20(%rsp)
 ;;  block B2 [0, 0]
 ;;  block B0 [0, 34]
  0x00007faf3479e020:   cmpl   $0x0,0xc(%rdx)               ; implicit exception: dispatches to 0x00007faf3479e157
 ;;   18 branch [BE]   [RangeCheckStub: 0x00007fae7c01f350] [bci:3]
  0x00007faf3479e024:   jbe    0x00007faf3479e189
  0x00007faf3479e02a:   mov    0x10(%rdx),%edi
  0x00007faf3479e02d:   cmp    0x5bffc9c(%rip),%r12        # 0x00007faf3a39dcd0
                                                            ;   {external_word}
  0x00007faf3479e034:   je     0x00007faf3479e04e
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x00007faf3479e03a:   movabs $0x7faf398f4ee8,%rdi         ;   {external_word}
  0x00007faf3479e044:   and    $0xfffffffffffffff0,%rsp
  0x00007faf3479e048:   callq  0x00007faf38b8d3c4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007faf3479e04d:   hlt    
  0x00007faf3479e04e:   shl    $0x3,%rdi                    ;*aaload {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - TestMinimal::test@3 (line 8)
  0x00007faf3479e052:   mov    %rsi,%rbx
  0x00007faf3479e055:   mov    %rbx,%rsi
  0x00007faf3479e058:   mov    %rdi,%rdx                    ;*invokestatic error {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - TestMinimal::test@4 (line 8)
  0x00007faf3479e05b:   mov    %ebx,0x28(%rsp)
  0x00007faf3479e05f:   callq  0x00007faf3479e660           ; ImmutableOopMap {[32]=Oop }
                                                            ;*invokestatic error {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - TestMinimal::test@4 (line 8)
                                                            ;   {static_call}
  0x00007faf3479e064:   nopl   0x2d4(%rax,%rax,1)           ;*invokestatic error {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - TestMinimal::test@4 (line 8)
                                                            ;   {other}
  0x00007faf3479e06c:   mov    0x20(%rsp),%rdx
  0x00007faf3479e071:   mov    0x10(%rdx),%edi
  0x00007faf3479e074:   cmp    0x5bffc55(%rip),%r12        # 0x00007faf3a39dcd0
                                                            ;   {external_word}
  0x00007faf3479e07b:   je     0x00007faf3479e095
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x00007faf3479e081:   movabs $0x7faf398f4ee8,%rdi         ;   {external_word}
  0x00007faf3479e08b:   and    $0xfffffffffffffff0,%rsp
  0x00007faf3479e08f:   callq  0x00007faf38b8d3c4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007faf3479e094:   hlt    
  0x00007faf3479e095:   shl    $0x3,%rdi                    ;*aaload {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - TestMinimal::test@12 (line 9)
  0x00007faf3479e099:   mov    0x28(%rsp),%esi
  0x00007faf3479e09d:   inc    %esi
  0x00007faf3479e09f:   mov    %rdi,%rdx                    ;*invokestatic error {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - TestMinimal::test@13 (line 9)
  0x00007faf3479e0a2:   nop
  0x00007faf3479e0a3:   nop
  0x00007faf3479e0a4:   nop
  0x00007faf3479e0a5:   nop
  0x00007faf3479e0a6:   nop
  0x00007faf3479e0a7:   callq  0x00007faf3479e660           ; ImmutableOopMap {[32]=Oop }
                                                            ;*invokestatic error {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - TestMinimal::test@13 (line 9)
                                                            ;   {static_call}
  0x00007faf3479e0ac:   nopl   0x100031c(%rax,%rax,1)       ;*invokestatic error {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - TestMinimal::test@13 (line 9)
                                                            ;   {other}
  0x00007faf3479e0b4:   mov    0x20(%rsp),%rdx
  0x00007faf3479e0b9:   mov    0x10(%rdx),%edi
  0x00007faf3479e0bc:   cmp    0x5bffc0d(%rip),%r12        # 0x00007faf3a39dcd0
                                                            ;   {external_word}
  0x00007faf3479e0c3:   je     0x00007faf3479e0dd
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x00007faf3479e0c9:   movabs $0x7faf398f4ee8,%rdi         ;   {external_word}
  0x00007faf3479e0d3:   and    $0xfffffffffffffff0,%rsp
  0x00007faf3479e0d7:   callq  0x00007faf38b8d3c4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007faf3479e0dc:   hlt    
  0x00007faf3479e0dd:   shl    $0x3,%rdi                    ;*aaload {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - TestMinimal::test@21 (line 10)
  0x00007faf3479e0e1:   mov    0x28(%rsp),%esi
  0x00007faf3479e0e5:   add    $0x2,%esi
  0x00007faf3479e0e8:   mov    %rdi,%rdx                    ;*invokestatic error {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - TestMinimal::test@22 (line 10)
  0x00007faf3479e0eb:   nop
  0x00007faf3479e0ec:   nop
  0x00007faf3479e0ed:   nop
  0x00007faf3479e0ee:   nop
  0x00007faf3479e0ef:   callq  0x00007faf3479e660           ; ImmutableOopMap {[32]=Oop }
                                                            ;*invokestatic error {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - TestMinimal::test@22 (line 10)
                                                            ;   {static_call}
  0x00007faf3479e0f4:   nopl   0x2000364(%rax,%rax,1)       ;*invokestatic error {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - TestMinimal::test@22 (line 10)
                                                            ;   {other}
  0x00007faf3479e0fc:   mov    0x20(%rsp),%rdx
  0x00007faf3479e101:   mov    0x10(%rdx),%edx
  0x00007faf3479e104:   cmp    0x5bffbc5(%rip),%r12        # 0x00007faf3a39dcd0
                                                            ;   {external_word}
  0x00007faf3479e10b:   je     0x00007faf3479e125
 ;; MacroAssembler::decode_heap_oop: heap base corrupted?
  0x00007faf3479e111:   movabs $0x7faf398f4ee8,%rdi         ;   {external_word}
  0x00007faf3479e11b:   and    $0xfffffffffffffff0,%rsp
  0x00007faf3479e11f:   callq  0x00007faf38b8d3c4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007faf3479e124:   hlt    
  0x00007faf3479e125:   shl    $0x3,%rdx                    ;*aaload {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - TestMinimal::test@30 (line 11)
  0x00007faf3479e129:   mov    0x28(%rsp),%esi
  0x00007faf3479e12d:   add    $0x3,%esi
  0x00007faf3479e130:   nop
  0x00007faf3479e131:   nop
  0x00007faf3479e132:   nop
  0x00007faf3479e133:   nop
  0x00007faf3479e134:   nop
  0x00007faf3479e135:   nop
  0x00007faf3479e136:   nop
  0x00007faf3479e137:   callq  0x00007faf3479e660           ; ImmutableOopMap {}
                                                            ;*invokestatic error {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - TestMinimal::test@31 (line 11)
                                                            ;   {static_call}
  0x00007faf3479e13c:   nopl   0x30003ac(%rax,%rax,1)       ;*invokestatic error {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - TestMinimal::test@31 (line 11)
                                                            ;   {other}
  0x00007faf3479e144:   add    $0x40,%rsp
  0x00007faf3479e148:   pop    %rbp
  0x00007faf3479e149:   cmp    0x498(%r15),%rsp             ;   {poll_return}
  0x00007faf3479e150:   ja     0x00007faf3479e1af
  0x00007faf3479e156:   retq   
 ;; ImplicitNullCheckStub slow case
  0x00007faf3479e157:   callq  0x00007faf347af0c0           ; ImmutableOopMap {rdx=Oop [32]=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - TestMinimal::test@3 (line 8)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007faf3479e15c:   movabs $0x7faf3934a974,%rdi         ;   {external_word}
  0x00007faf3479e166:   and    $0xfffffffffffffff0,%rsp
  0x00007faf3479e16a:   callq  0x00007faf38b8d3c4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007faf3479e16f:   hlt    
 ;; ImplicitNullCheckStub slow case
  0x00007faf3479e170:   callq  0x00007faf347af0c0           ; ImmutableOopMap {rdx=Oop [32]=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - TestMinimal::test@3 (line 8)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007faf3479e175:   movabs $0x7faf3934a974,%rdi         ;   {external_word}
  0x00007faf3479e17f:   and    $0xfffffffffffffff0,%rsp
  0x00007faf3479e183:   callq  0x00007faf38b8d3c4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007faf3479e188:   hlt    
 ;; RangeCheckStub slow case
  0x00007faf3479e189:   movq   $0x0,(%rsp)
  0x00007faf3479e191:   mov    %rdx,0x8(%rsp)
  0x00007faf3479e196:   callq  0x00007faf347b0640           ; ImmutableOopMap {rdx=Oop [32]=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - TestMinimal::test@3 (line 8)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x00007faf3479e19b:   movabs $0x7faf3934a974,%rdi         ;   {external_word}
  0x00007faf3479e1a5:   and    $0xfffffffffffffff0,%rsp
  0x00007faf3479e1a9:   callq  0x00007faf38b8d3c4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007faf3479e1ae:   hlt    
 ;; C1SafepointPollStub slow case
  0x00007faf3479e1af:   movabs $0x7faf3479e149,%r10         ;   {internal_word}
  0x00007faf3479e1b9:   mov    %r10,0x4b0(%r15)
  0x00007faf3479e1c0:   jmpq   0x00007faf348a3d20           ;   {runtime_call SafepointBlob}
 ;; Unwind handler
  0x00007faf3479e1c5:   mov    0x558(%r15),%rax
  0x00007faf3479e1cc:   movq   $0x0,0x558(%r15)
  0x00007faf3479e1d7:   movq   $0x0,0x560(%r15)
  0x00007faf3479e1e2:   add    $0x40,%rsp
  0x00007faf3479e1e6:   pop    %rbp
  0x00007faf3479e1e7:   jmpq   0x00007faf347b0da0           ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007faf3479e1ec:   hlt    
  0x00007faf3479e1ed:   hlt    
  0x00007faf3479e1ee:   hlt    
  0x00007faf3479e1ef:   hlt    
[Stub Code]
  0x00007faf3479e1f0:   movabs $0x0,%rbx                    ;   {no_reloc}
  0x00007faf3479e1fa:   jmpq   0x00007faf3479e1fa           ;   {runtime_call}
[Exception Handler]
  0x00007faf3479e1ff:   movabs $0xdead,%rbx
  0x00007faf3479e209:   movabs $0xdead,%rcx
  0x00007faf3479e213:   movabs $0xdead,%rsi
  0x00007faf3479e21d:   movabs $0xdead,%rdi
  0x00007faf3479e227:   callq  0x00007faf347a9ac0           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007faf3479e22c:   movabs $0x7faf3934a974,%rdi         ;   {external_word}
  0x00007faf3479e236:   and    $0xfffffffffffffff0,%rsp
  0x00007faf3479e23a:   callq  0x00007faf38b8d3c4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007faf3479e23f:   hlt    
[Deopt Handler Code]
  0x00007faf3479e240:   movabs $0x7faf3479e240,%r10         ;   {section_word}
  0x00007faf3479e24a:   push   %r10
  0x00007faf3479e24c:   jmpq   0x00007faf348a51e0           ;   {runtime_call DeoptimizationBlob}
  0x00007faf3479e251:   hlt    
  0x00007faf3479e252:   hlt    
  0x00007faf3479e253:   hlt    
  0x00007faf3479e254:   hlt    
  0x00007faf3479e255:   hlt    
  0x00007faf3479e256:   hlt    
  0x00007faf3479e257:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Oops:
  0x00007faf3479e258:   0x00000007ff0ebd30 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x00000007ff0ebd30}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Metadata:
  0x00007faf3479e260:   0x00007fae974003c0 {method} {0x00007fae974003c0} 'test' '(I[Ljava/lang/String;)V' in 'TestMinimal'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
pc-bytecode offsets:
PcDesc(pc=0x00007faf3479dfff offset=ffffffff bits=0):
PcDesc(pc=0x00007faf3479e01b offset=1b bits=0):
   TestMinimal::test@0 (line 8)
PcDesc(pc=0x00007faf3479e052 offset=52 bits=0):
   TestMinimal::test@3 (line 8)
PcDesc(pc=0x00007faf3479e05b offset=5b bits=0):
   TestMinimal::test@4 (line 8)
PcDesc(pc=0x00007faf3479e064 offset=64 bits=0):
   TestMinimal::test@4 (line 8)
   Locals
    - l0: stack[40]
    - l1: stack[32],oop
PcDesc(pc=0x00007faf3479e06c offset=6c bits=0):
   TestMinimal::test@4 (line 8)
PcDesc(pc=0x00007faf3479e099 offset=99 bits=0):
   TestMinimal::test@12 (line 9)
PcDesc(pc=0x00007faf3479e0a2 offset=a2 bits=0):
   TestMinimal::test@13 (line 9)
PcDesc(pc=0x00007faf3479e0ac offset=ac bits=0):
   TestMinimal::test@13 (line 9)
   Locals
    - l0: stack[40]
    - l1: stack[32],oop
PcDesc(pc=0x00007faf3479e0b4 offset=b4 bits=0):
   TestMinimal::test@13 (line 9)
PcDesc(pc=0x00007faf3479e0e1 offset=e1 bits=0):
   TestMinimal::test@21 (line 10)
PcDesc(pc=0x00007faf3479e0eb offset=eb bits=0):
   TestMinimal::test@22 (line 10)
PcDesc(pc=0x00007faf3479e0f4 offset=f4 bits=0):
   TestMinimal::test@22 (line 10)
   Locals
    - l0: stack[40]
    - l1: stack[32],oop
PcDesc(pc=0x00007faf3479e0fc offset=fc bits=0):
   TestMinimal::test@22 (line 10)
PcDesc(pc=0x00007faf3479e129 offset=129 bits=0):
   TestMinimal::test@30 (line 11)
PcDesc(pc=0x00007faf3479e13c offset=13c bits=0):
   TestMinimal::test@31 (line 11)
   Locals
    - l0: empty
    - l1: empty
PcDesc(pc=0x00007faf3479e144 offset=144 bits=0):
   TestMinimal::test@31 (line 11)
PcDesc(pc=0x00007faf3479e15c offset=15c bits=0):
   TestMinimal::test@3 (line 8)
   Locals
    - l0: empty
    - l1: empty
PcDesc(pc=0x00007faf3479e175 offset=175 bits=0):
   TestMinimal::test@3 (line 8)
   Locals
    - l0: empty
    - l1: empty
PcDesc(pc=0x00007faf3479e19b offset=19b bits=0):
   TestMinimal::test@3 (line 8)
   Locals
    - l0: empty
    - l1: empty
PcDesc(pc=0x00007faf3479e259 offset=259 bits=0):
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
oop maps:ImmutableOopMapSet contains 7 OopMaps

ImmutableOopMap {[32]=Oop } pc offsets: 100 172 244 
ImmutableOopMap {} pc offsets: 316 
ImmutableOopMap {rdx=Oop [32]=Oop } pc offsets: 348 373 411 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
scopes:
ScopeDesc(pc=0x00007faf3479e01b offset=1b):
   TestMinimal::test@0 (line 8)
ScopeDesc(pc=0x00007faf3479e052 offset=52):
   TestMinimal::test@3 (line 8)
ScopeDesc(pc=0x00007faf3479e05b offset=5b):
   TestMinimal::test@4 (line 8)
ScopeDesc(pc=0x00007faf3479e064 offset=64):
   TestMinimal::test@4 (line 8)
   Locals
    - l0: stack[40]
    - l1: stack[32],oop
ScopeDesc(pc=0x00007faf3479e06c offset=6c):
   TestMinimal::test@4 (line 8)
ScopeDesc(pc=0x00007faf3479e099 offset=99):
   TestMinimal::test@12 (line 9)
ScopeDesc(pc=0x00007faf3479e0a2 offset=a2):
   TestMinimal::test@13 (line 9)
ScopeDesc(pc=0x00007faf3479e0ac offset=ac):
   TestMinimal::test@13 (line 9)
   Locals
    - l0: stack[40]
    - l1: stack[32],oop
ScopeDesc(pc=0x00007faf3479e0b4 offset=b4):
   TestMinimal::test@13 (line 9)
ScopeDesc(pc=0x00007faf3479e0e1 offset=e1):
   TestMinimal::test@21 (line 10)
ScopeDesc(pc=0x00007faf3479e0eb offset=eb):
   TestMinimal::test@22 (line 10)
ScopeDesc(pc=0x00007faf3479e0f4 offset=f4):
   TestMinimal::test@22 (line 10)
   Locals
    - l0: stack[40]
    - l1: stack[32],oop
ScopeDesc(pc=0x00007faf3479e0fc offset=fc):
   TestMinimal::test@22 (line 10)
ScopeDesc(pc=0x00007faf3479e129 offset=129):
   TestMinimal::test@30 (line 11)
ScopeDesc(pc=0x00007faf3479e13c offset=13c):
   TestMinimal::test@31 (line 11)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x00007faf3479e144 offset=144):
   TestMinimal::test@31 (line 11)
ScopeDesc(pc=0x00007faf3479e15c offset=15c):
   TestMinimal::test@3 (line 8)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x00007faf3479e175 offset=175):
   TestMinimal::test@3 (line 8)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x00007faf3479e19b offset=19b):
   TestMinimal::test@3 (line 8)
   Locals
    - l0: empty
    - l1: empty
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
relocations:
         @0x00007faf3479df18: 3116
relocInfo@0x00007faf3479df18 [type=6(runtime_call) addr=0x00007faf3479e016 offset=22 format=1] | [destination=0x00007faf347fa6c0]
         @0x00007faf3479df1a: 7c033a39dcd07faf3917
relocInfo@0x00007faf3479df22 [type=7(external_word) addr=0x00007faf3479e02d offset=23 format=1 data={3a39dcd07faf}] | [target=0x00007faf3a39dcd0]
         @0x00007faf3479df24: 7c03398f4ee87faf380d
relocInfo@0x00007faf3479df2c [type=7(external_word) addr=0x00007faf3479e03a offset=13 data={398f4ee87faf}] | [target=0x00007faf398f4ee8]
         @0x00007faf3479df2e: 310e
relocInfo@0x00007faf3479df2e [type=6(runtime_call) addr=0x00007faf3479e048 offset=14 format=1] | [destination=0x00007faf38b8d3c4]
         @0x00007faf3479df30: 2117
relocInfo@0x00007faf3479df30 [type=4(static_call) addr=0x00007faf3479e05f offset=23 format=1] | [destination=0x00007faf3479e660 metadata=0x0000000000000000]
         @0x00007faf3479df32: 8005
relocInfo@0x00007faf3479df32 [type=16(post_call_nop) addr=0x00007faf3479e064 offset=5]
         @0x00007faf3479df34: 7c033a39dcd07faf3910
relocInfo@0x00007faf3479df3c [type=7(external_word) addr=0x00007faf3479e074 offset=16 format=1 data={3a39dcd07faf}] | [target=0x00007faf3a39dcd0]
         @0x00007faf3479df3e: 7c03398f4ee87faf380d
relocInfo@0x00007faf3479df46 [type=7(external_word) addr=0x00007faf3479e081 offset=13 data={398f4ee87faf}] | [target=0x00007faf398f4ee8]
         @0x00007faf3479df48: 310e
relocInfo@0x00007faf3479df48 [type=6(runtime_call) addr=0x00007faf3479e08f offset=14 format=1] | [destination=0x00007faf38b8d3c4]
         @0x00007faf3479df4a: 2118
relocInfo@0x00007faf3479df4a [type=4(static_call) addr=0x00007faf3479e0a7 offset=24 format=1] | [destination=0x00007faf3479e660 metadata=0x0000000000000000]
         @0x00007faf3479df4c: 8005
relocInfo@0x00007faf3479df4c [type=16(post_call_nop) addr=0x00007faf3479e0ac offset=5]
         @0x00007faf3479df4e: 7c033a39dcd07faf3910
relocInfo@0x00007faf3479df56 [type=7(external_word) addr=0x00007faf3479e0bc offset=16 format=1 data={3a39dcd07faf}] | [target=0x00007faf3a39dcd0]
         @0x00007faf3479df58: 7c03398f4ee87faf380d
relocInfo@0x00007faf3479df60 [type=7(external_word) addr=0x00007faf3479e0c9 offset=13 data={398f4ee87faf}] | [target=0x00007faf398f4ee8]
         @0x00007faf3479df62: 310e
relocInfo@0x00007faf3479df62 [type=6(runtime_call) addr=0x00007faf3479e0d7 offset=14 format=1] | [destination=0x00007faf38b8d3c4]
         @0x00007faf3479df64: 2118
relocInfo@0x00007faf3479df64 [type=4(static_call) addr=0x00007faf3479e0ef offset=24 format=1] | [destination=0x00007faf3479e660 metadata=0x0000000000000000]
         @0x00007faf3479df66: 8005
relocInfo@0x00007faf3479df66 [type=16(post_call_nop) addr=0x00007faf3479e0f4 offset=5]
         @0x00007faf3479df68: 7c033a39dcd07faf3910
relocInfo@0x00007faf3479df70 [type=7(external_word) addr=0x00007faf3479e104 offset=16 format=1 data={3a39dcd07faf}] | [target=0x00007faf3a39dcd0]
         @0x00007faf3479df72: 7c03398f4ee87faf380d
relocInfo@0x00007faf3479df7a [type=7(external_word) addr=0x00007faf3479e111 offset=13 data={398f4ee87faf}] | [target=0x00007faf398f4ee8]
         @0x00007faf3479df7c: 310e
relocInfo@0x00007faf3479df7c [type=6(runtime_call) addr=0x00007faf3479e11f offset=14 format=1] | [destination=0x00007faf38b8d3c4]
         @0x00007faf3479df7e: 2118
relocInfo@0x00007faf3479df7e [type=4(static_call) addr=0x00007faf3479e137 offset=24 format=1] | [destination=0x00007faf3479e660 metadata=0x0000000000000000]
         @0x00007faf3479df80: 8005
relocInfo@0x00007faf3479df80 [type=16(post_call_nop) addr=0x00007faf3479e13c offset=5]
         @0x00007faf3479df82: 580d
relocInfo@0x00007faf3479df82 [type=11(poll_return) addr=0x00007faf3479e149 offset=13]
         @0x00007faf3479df84: 310e
relocInfo@0x00007faf3479df84 [type=6(runtime_call) addr=0x00007faf3479e157 offset=14 format=1] | [destination=0x00007faf347af0c0]
         @0x00007faf3479df86: 7c033934a9747faf3805
relocInfo@0x00007faf3479df8e [type=7(external_word) addr=0x00007faf3479e15c offset=5 data={3934a9747faf}] | [target=0x00007faf3934a974]
         @0x00007faf3479df90: 310e
relocInfo@0x00007faf3479df90 [type=6(runtime_call) addr=0x00007faf3479e16a offset=14 format=1] | [destination=0x00007faf38b8d3c4]
         @0x00007faf3479df92: 3106
relocInfo@0x00007faf3479df92 [type=6(runtime_call) addr=0x00007faf3479e170 offset=6 format=1] | [destination=0x00007faf347af0c0]
         @0x00007faf3479df94: 7c033934a9747faf3805
relocInfo@0x00007faf3479df9c [type=7(external_word) addr=0x00007faf3479e175 offset=5 data={3934a9747faf}] | [target=0x00007faf3934a974]
         @0x00007faf3479df9e: 310e
relocInfo@0x00007faf3479df9e [type=6(runtime_call) addr=0x00007faf3479e183 offset=14 format=1] | [destination=0x00007faf38b8d3c4]
         @0x00007faf3479dfa0: 3113
relocInfo@0x00007faf3479dfa0 [type=6(runtime_call) addr=0x00007faf3479e196 offset=19 format=1] | [destination=0x00007faf347b0640]
         @0x00007faf3479dfa2: 7c033934a9747faf3805
relocInfo@0x00007faf3479dfaa [type=7(external_word) addr=0x00007faf3479e19b offset=5 data={3934a9747faf}] | [target=0x00007faf3934a974]
         @0x00007faf3479dfac: 310e
relocInfo@0x00007faf3479dfac [type=6(runtime_call) addr=0x00007faf3479e1a9 offset=14 format=1] | [destination=0x00007faf38b8d3c4]
         @0x00007faf3479dfae: 78664006
relocInfo@0x00007faf3479dfb0 [type=8(internal_word) addr=0x00007faf3479e1af offset=6 data=102] | [target=0x00007faf3479e149]
         @0x00007faf3479dfb2: 3111
relocInfo@0x00007faf3479dfb2 [type=6(runtime_call) addr=0x00007faf3479e1c0 offset=17 format=1] | [destination=0x00007faf348a3d20]
         @0x00007faf3479dfb4: 3127
relocInfo@0x00007faf3479dfb4 [type=6(runtime_call) addr=0x00007faf3479e1e7 offset=39 format=1] | [destination=0x00007faf347b0da0]
         @0x00007faf3479dfb6: 0009
relocInfo@0x00007faf3479dfb6 [type=0(none) addr=0x00007faf3479e1f0 offset=9]
         @0x00007faf3479dfb8: 7c01ffa12800
relocInfo@0x00007faf3479dfbc [type=5(static_stub) addr=0x00007faf3479e1f0 offset=0 data=-95] | [static_call=0x00007faf3479e05f]
         @0x00007faf3479dfbe: 7c01ff592800
relocInfo@0x00007faf3479dfc2 [type=5(static_stub) addr=0x00007faf3479e1f0 offset=0 data=-167] | [static_call=0x00007faf3479e0a7]
         @0x00007faf3479dfc4: 7c01ff112800
relocInfo@0x00007faf3479dfc8 [type=5(static_stub) addr=0x00007faf3479e1f0 offset=0 data=-239] | [static_call=0x00007faf3479e0ef]
         @0x00007faf3479dfca: 7c01fec92800
relocInfo@0x00007faf3479dfce [type=5(static_stub) addr=0x00007faf3479e1f0 offset=0 data=-311] | [static_call=0x00007faf3479e137]
         @0x00007faf3479dfd0: 6000
relocInfo@0x00007faf3479dfd0 [type=12(metadata) addr=0x00007faf3479e1f0 offset=0] | [metadata_addr=0x00007faf3479e1f2 *=0x0000000000000000 offset=0]
         @0x00007faf3479dfd2: 310a
relocInfo@0x00007faf3479dfd2 [type=6(runtime_call) addr=0x00007faf3479e1fa offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x00007faf3479dfd4: 312d
relocInfo@0x00007faf3479dfd4 [type=6(runtime_call) addr=0x00007faf3479e227 offset=45 format=1] | [destination=0x00007faf347a9ac0]
         @0x00007faf3479dfd6: 7c033934a9747faf3805
relocInfo@0x00007faf3479dfde [type=7(external_word) addr=0x00007faf3479e22c offset=5 data={3934a9747faf}] | [target=0x00007faf3934a974]
         @0x00007faf3479dfe0: 310e
relocInfo@0x00007faf3479dfe0 [type=6(runtime_call) addr=0x00007faf3479e23a offset=14 format=1] | [destination=0x00007faf38b8d3c4]
         @0x00007faf3479dfe2: 7c01fec24806
relocInfo@0x00007faf3479dfe6 [type=9(section_word) addr=0x00007faf3479e240 offset=6 data=-318] | [target=0x00007faf3479e240]
         @0x00007faf3479dfe8: 310c
relocInfo@0x00007faf3479dfe8 [type=6(runtime_call) addr=0x00007faf3479e24c offset=12 format=1] | [destination=0x00007faf348a51e0]
         @0x00007faf3479dfea: 0000
relocInfo@0x00007faf3479dfea [type=0(none) addr=0x00007faf3479e24c offset=0]
         @0x00007faf3479dfec: 0000
relocInfo@0x00007faf3479dfec [type=0(none) addr=0x00007faf3479e24c offset=0]
         @0x00007faf3479dfee: 0000
relocInfo@0x00007faf3479dfee [type=0(none) addr=0x00007faf3479e24c offset=0]
         @0x00007faf3479dff0: 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Dependencies:
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ExceptionHandlerTable (size = 0 bytes)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ImplicitExceptionTable (size = 2 entries, 20 bytes):
{
   < 0x00007faf3479e020, 0x00007faf3479e157 > < 0x00007faf3479e020, 0x00007faf3479e170 > 
}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded oops:
#0: 0x0000000000000000 nullptr-oop
#1: 0x00000007ff0ebd30 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x00000007ff0ebd30}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded metadata:
#0: 0x0000000000000000 nullptr-oop
#1: 0x00007fae974003c0 {method} {0x00007fae974003c0} 'test' '(I[Ljava/lang/String;)V' in 'TestMinimal'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
