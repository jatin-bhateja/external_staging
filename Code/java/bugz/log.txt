CompileCommand: print Reduced.test bool print = true

============================= C2-compiled nmethod ==============================
#r018 rsi:rsi   : parm 0: rawptr:BotPTR
# -- Old rsp -- Framesize: 48 --
#r591 rsp+44: in_preserve
#r590 rsp+40: return address
#r589 rsp+36: in_preserve
#r588 rsp+32: saved fp register
#r587 rsp+28: pad2, stack alignment
#r586 rsp+24: pad2, stack alignment
#r585 rsp+20: Fixed slot 1
#r584 rsp+16: Fixed slot 0
#r595 rsp+12: spill
#r594 rsp+ 8: spill
#r593 rsp+ 4: spill
#r592 rsp+ 0: spill
#
----------------------- MetaData before Compile_id = 144 ------------------------
{method}
 - this oop:          0x00007f199c5113c0
 - method holder:     'Reduced'
 - constants:         0x00007f199c511028 constant pool [31] {0x00007f199c511028} for 'Reduced' cache=0x00007f199c511500
 - access:            0xc1000008  static 
 - name:              'test'
 - signature:         '()V'
 - max stack:         7
 - max locals:        2
 - size of params:    0
 - method size:       14
 - vtable index:      -2
 - i2i entry:         0x00007f1a084f7400
 - adapters:          AHE@0x00007f1a04258ac0: 0x i2c: 0x00007f1a084f20e0 c2i: 0x00007f1a084f2196 c2iUV: 0x00007f1a084f2160 c2iNCI: 0x00007f1a084f21d0
 - compiled entry     0x00007f1a084f2196
 - code size:         35
 - code start:        0x00007f199c511390
 - code end (excl):   0x00007f199c5113b3
 - method data:       0x00007f199c511670
 - checked ex length: 0
 - linenumber start:  0x00007f199c5113b3
 - localvar length:   0

------------------------ OptoAssembly for Compile_id = 144 -----------------------
#
#  void ( rawptr:BotPTR )
#
000     N355: #	out( B1 ) <- BLOCK HEAD IS JUNK  Freq: 1
000     # breakpoint
        nop 	# 11 bytes pad for loops and calls

010     B1: #	out( B34 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
010     # stack bang (160 bytes)
	pushq   rbp	# Save rbp
	subq    rsp, #32	# Create frame

01c     movl    R13, [RSI]	# int
01f     movss   XMM1, [RSI + #8 (8-bit)]	# float
024     movdl   R14, XMM1	# spill
029     movq    RDI, RSI	# spill
02c     call_leaf,runtime  OSR_migration_end
        No JVM State Info
        # 
03c     movq    R10, java/lang/Class:exact *	# ptr
046     movl    RBP, [R10 + #112 (8-bit)]	# compressed ptr ! Field: Reduced.iArrFld
04a     movl    R10, [R12 + RBP << 3 + #12] (compressed oop addressing)	# range
04f     NullCheck RBP

04f     B2: #	out( B24 B3 ) <- in( B1 )  Freq: 0.999999
04f     cmpl    R13, #75
053     jge     B24  P=0.014281 C=23108.000000

059     B3: #	out( B4 ) <- in( B2 )  Freq: 0.985718
059     decode_heap_oop_not_null RBX,RBP
05d     movl    R8, R13	# spill
060     incl    R8	# int
063     movl    R9, RBX	# ptr -> int
066     shrl    R9, #2
06a     andl    R9, #7	# int
06e     movl    RSI, #4	# int
073     xorl    R11, R11	# int
076     testl   R8, R8
079     cmovll R8, R11	# signed, int
07d     movl    RDI, #75	# int
082     cmpl    R8, RDI
085     cmovlgt R8, RDI	# min
089     addl    R9, R8	# int
08c     subl    RSI, R9	# int
08f     andl    RSI, #7	# int
092     addl    RSI, R8	# int
095     cmpl    RSI, RDI
097     cmovlgt RSI, RDI	# min

09a     B4: #	out( B25 B5 ) <- in( B3 B6 ) Loop( B4-B6 inner pre of N248 reduction) Freq: 1.97143
        nop 	# 6 bytes pad for loops and calls
0a0     cmpl    R13, R10	# unsigned
0a3     jae,u   B25  P=0.000001 C=-1.000000

0a9     B5: #	out( B7 B6 ) <- in( B4 )  Freq: 1.97143
0a9     movl    R8, [RBX + #16 + R13 << #2]	# int
0ae     movl    RCX, R8	# spill
0b1     incl    RCX	# int
0b3     movl    [RBX + #16 + R13 << #2], RCX	# int
0b8     bswapl  R8
0bb     cvtsi2ssl XMM1, R8	# i2f
0c0     movdl   XMM0, R14	# spill
0c5     vaddss  XMM0, XMM0, XMM1
0c9     movl    RCX, R13	# spill
0cc     incl    RCX	# int
0ce     cmpl    RCX, RSI
0d0     jge,s   B7	# loop end  P=0.500000 C=23108.000000

0d2     B6: #	out( B4 ) <- in( B5 )  Freq: 0.985716
0d2     movl    R13, RCX	# spill
0d5     movdl   R14, XMM0	# spill
0da     jmp,s   B4

0dc     B7: #	out( B28 B8 ) <- in( B5 )  Freq: 0.985716
0dc     cmpl    R10, #75
0e0     movl    R9, R10	# spill
0e3     cmovlge R9, RDI	# signed, int
0e7     movl    RDI, R9	# spill
0ea     decl    RDI	# int
0ec     movl    RSI, #-2147483648	# int
0f1     cmpl    R9, RDI
0f4     cmovll RDI, RSI	# signed, int
0f7     movl    R8, RDI	# spill
0fa     addl    R8, #-14	# int
0fe     cmpl    RDI, R8
101     cmovll R8, RSI	# signed, int
105     cmpl    RCX, R8
108     jge     B28  P=0.000001 C=-1.000000

10e     B8: #	out( B29 B9 ) <- in( B7 )  Freq: 0.985715
10e     movl    R9, RCX	# spill
111     # castII of R9
111     cmpl    R9, R10	# unsigned
114     jae,u   B29  P=0.000001 C=-1.000000

11a     B9: #	out( B30 B10 ) <- in( B8 )  Freq: 0.985714
11a     addl    R13, #16	# int
        nop 	# 2 bytes pad for loops and calls
120     cmpl    R13, R10	# unsigned
123     jae,u   B30  P=0.000001 C=-1.000000

129     B10: #	out( B31 B11 ) <- in( B9 )  Freq: 0.985713
129     cmpl    RCX, R10	# unsigned
12c     jae,u   B31  P=0.000001 C=-1.000000

132     B11: #	out( B12 ) <- in( B10 )  Freq: 0.985712
132     movl    RDX, #16000	# int
137     # MachConstantBaseNode (empty encoding)
137     replicateI XMM1,#1
13f     # TLS is in R15

13f     B12: #	out( B13 ) <- in( B11 B14 ) Loop( B12-B14 ) Freq: 69.0236
13f     movl    R13, R8	# spill
142     subl    R13, R9	# int
145     cmpl    R8, R9
148     cmovll R13, R11	# signed, int
14c     cmpl    R13, #16000	# unsigned
153     cmovla R13, RDX	# unsigned, int
157     addl    R13, R9	# int
        nop 	# 6 bytes pad for loops and calls

160     B13: #	out( B13 B14 ) <- in( B12 B13 ) Loop( B13-B13 inner main of N146 reduction strip mined) Freq: 4833.32
160     load_vector XMM2,[RBX + #16 + R9 << #2]
167     vpaddd  XMM3,XMM2,XMM1	! add packedI
16b     store_vector [RBX + #16 + R9 << #2],XMM3
	
172     movslq  RCX, R9	# i2l
175     load_vector XMM3,[RBX + #48 + RCX << #2]
17b     vpaddd  XMM4,XMM3,XMM1	! add packedI
17f     store_vector [RBX + #48 + RCX << #2],XMM4
	
185     vector_reverse_byte XMM6, XMM2!	 using RCX as TEMP
192     vector_cast_i2x XMM2,XMM6	!
196     vector_reduction_float XMM0,XMM2 ; using XMM6, XMM7 as TEMP
1da     vector_reverse_byte XMM2, XMM3!	 using RAX as TEMP
1e7     vector_cast_i2x XMM2,XMM2	!
1eb     vector_reduction_float XMM0,XMM2 ; using XMM5, XMM4 as TEMP
22f     addl    R9, #16	# int
233     cmpl    R9, R13
236     jl     B13	# loop end  P=0.985719 C=23108.000000

23c     B14: #	out( B12 B15 ) <- in( B13 )  Freq: 69.0236
23c     movq    RCX, [R15 + #976 (32-bit)]	# ptr
243     testl   rax, [RCX]	# Safepoint: poll for GC        # Reduced::test @ bci:31 (line 12) L[0]=XMM0 L[1]=R9
        # OopMap {rbx=Oop rbp=NarrowOop off=579/0x243}
245     cmpl    R9, R8
248     jl     B12  P=0.985719 C=23108.000000

24e     B15: #	out( B19 B16 ) <- in( B14 )  Freq: 0.985712
24e     movl    R11, RDI	# spill
251     addl    R11, #-6	# int
255     cmpl    RDI, R11
258     cmovll R11, RSI	# signed, int
        nop 	# 4 bytes pad for loops and calls
260     cmpl    R9, R11
263     jge     B19  P=0.500000 C=-1.000000

269     B16: #	out( B32 B17 ) <- in( B15 )  Freq: 0.492856
269     # castII of R9
269     movl    R8, R9	# spill
26c     addl    R8, #7	# int
270     cmpl    R8, R10	# unsigned
273     jae,u   B32  P=0.000001 C=-1.000000

279     B17: #	out( B33 B18 ) <- in( B16 )  Freq: 0.492856
279     cmpl    R9, R10	# unsigned
        nop 	# 4 bytes pad for loops and calls
280     jae,u   B33  P=0.000001 C=-1.000000
        nop 	# 2 bytes pad for loops and calls

288     B18: #	out( B18 B19 ) <- in( B17 B18 ) Loop( B18-B18 inner post of N629 reduction) Freq: 0.98571
288     load_vector XMM2,[RBX + #16 + R9 << #2]
28f     vpaddd  XMM3,XMM2,XMM1	! add packedI
293     store_vector [RBX + #16 + R9 << #2],XMM3
	
29a     vector_reverse_byte XMM5, XMM2!	 using R8 as TEMP
2a7     vector_cast_i2x XMM2,XMM5	!
2ab     vector_reduction_float XMM0,XMM2 ; using XMM4, XMM3 as TEMP
2ef     addl    R9, #8	# int
2f3     cmpl    R9, R11
2f6     jl,s   B18	# loop end  P=0.500000 C=23108.000000

2f8     B19: #	out( B24 B20 ) <- in( B28 B18 B15 )  Freq: 0.985712
        nop 	# 8 bytes pad for loops and calls
300     cmpl    R9, #75
304     jge,s   B24  P=0.500000 C=-1.000000

306     B20: #	out( B21 ) <- in( B19 )  Freq: 0.492856
306     # castII of R9
        nop 	# 2 bytes pad for loops and calls

308     B21: #	out( B26 B22 ) <- in( B20 B23 ) Loop( B21-B23 inner post of N248 reduction) Freq: 0.985711
308     cmpl    R9, R10	# unsigned
30b     jae,u   B26  P=0.000001 C=-1.000000

311     B22: #	out( B24 B23 ) <- in( B21 )  Freq: 0.98571
311     movl    R8, [RBX + #16 + R9 << #2]	# int
316     movl    R11, R8	# spill
319     incl    R11	# int
31c     movl    [RBX + #16 + R9 << #2], R11	# int
321     incl    R9	# int
324     cmpl    R9, #75
328     jge,s   B24	# loop end  P=0.500000 C=23108.000000

32a     B23: #	out( B21 ) <- in( B22 )  Freq: 0.492855
32a     bswapl  R8
32d     cvtsi2ssl XMM1, R8	# i2f
332     vaddss  XMM0, XMM0, XMM1
336     jmp,s   B21

338     B24: #	out( N355 ) <- in( B2 B22 B19 )  Freq: 0.999992
338     vzeroupper
	addq    rsp, 32	# Destroy frame
	popq    rbp
	cmpq     rsp, poll_offset[r15_thread] 
	ja       #safepoint_stub	# Safepoint: poll for GC

34d     ret

34e     B25: #	out( B27 ) <- in( B4 )  Freq: 1.99761e-06
34e     movl    [rsp + #0], R14	# spill
352     movl    R9, R13	# spill
355     jmp,s   B27

357     B26: #	out( B27 ) <- in( B21 )  Freq: 9.988e-07
357     movss   [rsp + #0], XMM0	# spill

35c     B27: #	out( N355 ) <- in( B26 B25 )  Freq: 2.99641e-06
35c     movl    RSI, #-28	# int
361     movl    [rsp + #8], R9	# spill
366     movl    [rsp + #12], R9	# spill
        nop 	# 1 bytes pad for loops and calls
36c     call,static  wrapper for: uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')
        # Reduced::test @ bci:17 (line 13) L[0]=_ L[1]=rsp + #8 STK[0]=rsp + #0 STK[1]=RBP STK[2]=rsp + #12 STK[3]=RBP STK[4]=rsp + #8
        # OopMap {rbp=NarrowOop off=884/0x374}
374     stop	# ShouldNotReachHere

388     B28: #	out( B19 ) <- in( B7 )  Freq: 9.98805e-07
388     movl    R9, RCX	# spill
38b     jmp     B19

390     B29: #	out( N355 ) <- in( B8 )  Freq: 9.98804e-07
390     stop	# ShouldNotReachHere

3a4     B30: #	out( N355 ) <- in( B9 )  Freq: 9.98803e-07
3a4     stop	# ShouldNotReachHere

3b8     B31: #	out( N355 ) <- in( B10 )  Freq: 9.98802e-07
3b8     stop	# ShouldNotReachHere

3cc     B32: #	out( N355 ) <- in( B16 )  Freq: 4.99401e-07
3cc     stop	# ShouldNotReachHere

3e0     B33: #	out( N355 ) <- in( B17 )  Freq: 4.994e-07
3e0     stop	# ShouldNotReachHere

3f4     B34: #	out( N355 ) <- in( B1 )  Freq: 1.01328e-06
3f4     movl    RSI, #-66	# int
3f9     movl    RBP, R14	# spill
3fc     movl    [rsp + #0], R13	# spill
400     call,static  wrapper for: uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')
        # Reduced::test @ bci:5 (line 12) L[0]=RBP L[1]=rsp + #0
        # OopMap {off=1032/0x408}
408     stop	# ShouldNotReachHere

--------------------------------------------------------------------------------
----------------------------------- Assembly -----------------------------------

Compiled method (c2)    1520  144 %           Reduced::test @ 5 (35 bytes)
 total in heap  [0x00007f1a08519190,0x00007f1a08519ae0] = 2384
 relocation     [0x00007f1a08519308,0x00007f1a08519398] = 144
 constants      [0x00007f1a085193a0,0x00007f1a085193c0] = 32
 main code      [0x00007f1a085193c0,0x00007f1a085197f8] = 1080
 stub code      [0x00007f1a085197f8,0x00007f1a08519810] = 24
 oops           [0x00007f1a08519810,0x00007f1a08519818] = 8
 metadata       [0x00007f1a08519818,0x00007f1a08519820] = 8
 scopes data    [0x00007f1a08519820,0x00007f1a08519888] = 104
 scopes pcs     [0x00007f1a08519888,0x00007f1a08519ac8] = 576
 dependencies   [0x00007f1a08519ac8,0x00007f1a08519ad0] = 8
 nul chk table  [0x00007f1a08519ad0,0x00007f1a08519ae0] = 16

[Disassembly]
--------------------------------------------------------------------------------

[Constant Pool]
             Address          hex4                    hex8      
  0x00007f1a085193a0:   0x00000001      0x0000000100000001      
  0x00007f1a085193a4:   0x00000001                              
  0x00007f1a085193a8:   0x00000001      0x0000000100000001      
  0x00007f1a085193ac:   0x00000001                              
  0x00007f1a085193b0:   0x00000001      0x0000000100000001      
  0x00007f1a085193b4:   0x00000001                              
  0x00007f1a085193b8:   0x00000001      0x0000000100000001      
  0x00007f1a085193bc:   0x00000001                              

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x00007f199c5113c0} 'test' '()V' in 'Reduced'
 ;; N355: #	out( B1 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x00007f1a085193c0:   callq  0x00007f1a0c94816a           ;   {no_reloc}
  0x00007f1a085193c5:   nop
  0x00007f1a085193c6:   nop
  0x00007f1a085193c7:   nop
  0x00007f1a085193c8:   nop
  0x00007f1a085193c9:   nop
  0x00007f1a085193ca:   nop
  0x00007f1a085193cb:   nop
  0x00007f1a085193cc:   nop
  0x00007f1a085193cd:   nop
  0x00007f1a085193ce:   nop
  0x00007f1a085193cf:   nop
 ;; B1: #	out( B34 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x00007f1a085193d0:   mov    %eax,-0x18000(%rsp)
  0x00007f1a085193d7:   push   %rbp
  0x00007f1a085193d8:   sub    $0x20,%rsp
  0x00007f1a085193dc:   mov    (%rsi),%r13d
  0x00007f1a085193df:   vmovss 0x8(%rsi),%xmm1
  0x00007f1a085193e4:   vmovd  %xmm1,%r14d
  0x00007f1a085193e9:   mov    %rsi,%rdi
  0x00007f1a085193ec:   vzeroupper 
  0x00007f1a085193ef:   movabs $0x7f1a0ca44cde,%r10
  0x00007f1a085193f9:   callq  *%r10                        ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Reduced::test@5 (line 12)
  0x00007f1a085193fc:   movabs $0x11f96f7a8,%r10            ;   {oop(a 'java/lang/Class'{0x000000011f96f7a8} = 'Reduced')}
  0x00007f1a08519406:   mov    0x70(%r10),%ebp              ;*getstatic iArrFld {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Reduced::test@12 (line 13)
  0x00007f1a0851940a:   mov    0xc(%r12,%rbp,8),%r10d       ; implicit exception: dispatches to 0x00007f1a085197b4
                                                            ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Reduced::test@17 (line 13)
 ;; B2: #	out( B24 B3 ) <- in( B1 )  Freq: 0.999999
  0x00007f1a0851940f:   cmp    $0x4b,%r13d
  0x00007f1a08519413:   jge    0x00007f1a085196f8           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Reduced::test@8 (line 12)
 ;; B3: #	out( B4 ) <- in( B2 )  Freq: 0.985718
  0x00007f1a08519419:   lea    (%r12,%rbp,8),%rbx
  0x00007f1a0851941d:   mov    %r13d,%r8d
  0x00007f1a08519420:   inc    %r8d
  0x00007f1a08519423:   mov    %ebx,%r9d
  0x00007f1a08519426:   shr    $0x2,%r9d
  0x00007f1a0851942a:   and    $0x7,%r9d
  0x00007f1a0851942e:   mov    $0x4,%esi
  0x00007f1a08519433:   xor    %r11d,%r11d
  0x00007f1a08519436:   test   %r8d,%r8d
  0x00007f1a08519439:   cmovl  %r11d,%r8d
  0x00007f1a0851943d:   mov    $0x4b,%edi
  0x00007f1a08519442:   cmp    %edi,%r8d
  0x00007f1a08519445:   cmovg  %edi,%r8d
  0x00007f1a08519449:   add    %r8d,%r9d
  0x00007f1a0851944c:   sub    %r9d,%esi
  0x00007f1a0851944f:   and    $0x7,%esi
  0x00007f1a08519452:   add    %r8d,%esi
  0x00007f1a08519455:   cmp    %edi,%esi
  0x00007f1a08519457:   cmovg  %edi,%esi
 ;; B4: #	out( B25 B5 ) <- in( B3 B6 ) Loop( B4-B6 inner pre of N248 reduction) Freq: 1.97143
  0x00007f1a0851945a:   nop
  0x00007f1a0851945b:   nop
  0x00007f1a0851945c:   nop
  0x00007f1a0851945d:   nop
  0x00007f1a0851945e:   nop
  0x00007f1a0851945f:   nop
  0x00007f1a08519460:   cmp    %r10d,%r13d
  0x00007f1a08519463:   jae    0x00007f1a0851970e
 ;; B5: #	out( B7 B6 ) <- in( B4 )  Freq: 1.97143
  0x00007f1a08519469:   mov    0x10(%rbx,%r13,4),%r8d       ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Reduced::test@17 (line 13)
  0x00007f1a0851946e:   mov    %r8d,%ecx
  0x00007f1a08519471:   inc    %ecx
  0x00007f1a08519473:   mov    %ecx,0x10(%rbx,%r13,4)       ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Reduced::test@21 (line 13)
  0x00007f1a08519478:   bswap  %r8d                         ;*invokestatic reverseBytes {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Reduced::test@22 (line 13)
  0x00007f1a0851947b:   vcvtsi2ss %r8d,%xmm1,%xmm1
  0x00007f1a08519480:   vmovd  %r14d,%xmm0
  0x00007f1a08519485:   vaddss %xmm1,%xmm0,%xmm0            ;*fadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Reduced::test@26 (line 13)
  0x00007f1a08519489:   mov    %r13d,%ecx
  0x00007f1a0851948c:   inc    %ecx                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Reduced::test@28 (line 12)
  0x00007f1a0851948e:   cmp    %esi,%ecx
  0x00007f1a08519490:   jge    0x00007f1a0851949c           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Reduced::test@8 (line 12)
 ;; B6: #	out( B4 ) <- in( B5 )  Freq: 0.985716
  0x00007f1a08519492:   mov    %ecx,%r13d
  0x00007f1a08519495:   vmovd  %xmm0,%r14d
  0x00007f1a0851949a:   jmp    0x00007f1a0851945a
 ;; B7: #	out( B28 B8 ) <- in( B5 )  Freq: 0.985716
  0x00007f1a0851949c:   cmp    $0x4b,%r10d
  0x00007f1a085194a0:   mov    %r10d,%r9d
  0x00007f1a085194a3:   cmovge %edi,%r9d
  0x00007f1a085194a7:   mov    %r9d,%edi
  0x00007f1a085194aa:   dec    %edi
  0x00007f1a085194ac:   mov    $0x80000000,%esi
  0x00007f1a085194b1:   cmp    %edi,%r9d
  0x00007f1a085194b4:   cmovl  %esi,%edi
  0x00007f1a085194b7:   mov    %edi,%r8d
  0x00007f1a085194ba:   add    $0xfffffff2,%r8d
  0x00007f1a085194be:   cmp    %r8d,%edi
  0x00007f1a085194c1:   cmovl  %esi,%r8d
  0x00007f1a085194c5:   cmp    %r8d,%ecx
  0x00007f1a085194c8:   jge    0x00007f1a08519748
 ;; B8: #	out( B29 B9 ) <- in( B7 )  Freq: 0.985715
  0x00007f1a085194ce:   mov    %ecx,%r9d
  0x00007f1a085194d1:   cmp    %r10d,%r9d
  0x00007f1a085194d4:   jae    0x00007f1a08519750
 ;; B9: #	out( B30 B10 ) <- in( B8 )  Freq: 0.985714
  0x00007f1a085194da:   add    $0x10,%r13d
  0x00007f1a085194de:   nop
  0x00007f1a085194df:   nop
  0x00007f1a085194e0:   cmp    %r10d,%r13d
  0x00007f1a085194e3:   jae    0x00007f1a08519764
 ;; B10: #	out( B31 B11 ) <- in( B9 )  Freq: 0.985713
  0x00007f1a085194e9:   cmp    %r10d,%ecx
  0x00007f1a085194ec:   jae    0x00007f1a08519778
 ;; B11: #	out( B12 ) <- in( B10 )  Freq: 0.985712
  0x00007f1a085194f2:   mov    $0x3e80,%edx
  0x00007f1a085194f7:   vmovdqu -0x15f(%rip),%ymm1        # 0x00007f1a085193a0
                                                            ;   {section_word}
 ;; B12: #	out( B13 ) <- in( B11 B14 ) Loop( B12-B14 ) Freq: 69.0236
  0x00007f1a085194ff:   mov    %r8d,%r13d
  0x00007f1a08519502:   sub    %r9d,%r13d
  0x00007f1a08519505:   cmp    %r9d,%r8d
  0x00007f1a08519508:   cmovl  %r11d,%r13d
  0x00007f1a0851950c:   cmp    $0x3e80,%r13d
  0x00007f1a08519513:   cmova  %edx,%r13d
  0x00007f1a08519517:   add    %r9d,%r13d
  0x00007f1a0851951a:   nop
  0x00007f1a0851951b:   nop
  0x00007f1a0851951c:   nop
  0x00007f1a0851951d:   nop
  0x00007f1a0851951e:   nop
  0x00007f1a0851951f:   nop
 ;; B13: #	out( B13 B14 ) <- in( B12 B13 ) Loop( B13-B13 inner main of N146 reduction strip mined) Freq: 4833.32
  0x00007f1a08519520:   vmovdqu 0x10(%rbx,%r9,4),%ymm2      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Reduced::test@17 (line 13)
  0x00007f1a08519527:   vpaddd %ymm1,%ymm2,%ymm3
  0x00007f1a0851952b:   vmovdqu %ymm3,0x10(%rbx,%r9,4)      ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Reduced::test@21 (line 13)
  0x00007f1a08519532:   movslq %r9d,%rcx
  0x00007f1a08519535:   vmovdqu 0x30(%rbx,%rcx,4),%ymm3     ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Reduced::test@17 (line 13)
  0x00007f1a0851953b:   vpaddd %ymm1,%ymm3,%ymm4
  0x00007f1a0851953f:   vmovdqu %ymm4,0x30(%rbx,%rcx,4)     ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Reduced::test@21 (line 13)
  0x00007f1a08519545:   vmovdqu 0x7f173(%rip),%ymm6        # Stub::perm_mask_int
                                                            ;   {external_word}
  0x00007f1a0851954d:   vpshufb %ymm6,%ymm2,%ymm6
  0x00007f1a08519552:   vcvtdq2ps %ymm6,%ymm2
  0x00007f1a08519556:   vaddss %xmm2,%xmm0,%xmm0
  0x00007f1a0851955a:   vpshufd $0x1,%xmm2,%xmm7
  0x00007f1a0851955f:   vaddss %xmm7,%xmm0,%xmm0
  0x00007f1a08519563:   vpshufd $0x2,%xmm2,%xmm7
  0x00007f1a08519568:   vaddss %xmm7,%xmm0,%xmm0
  0x00007f1a0851956c:   vpshufd $0x3,%xmm2,%xmm7
  0x00007f1a08519571:   vaddss %xmm7,%xmm0,%xmm0
  0x00007f1a08519575:   vextractf128 $0x1,%ymm2,%xmm7
  0x00007f1a0851957b:   vaddss %xmm7,%xmm0,%xmm0
  0x00007f1a0851957f:   vpshufd $0x1,%xmm7,%xmm6
  0x00007f1a08519584:   vaddss %xmm6,%xmm0,%xmm0
  0x00007f1a08519588:   vpshufd $0x2,%xmm7,%xmm6
  0x00007f1a0851958d:   vaddss %xmm6,%xmm0,%xmm0
  0x00007f1a08519591:   vpshufd $0x3,%xmm7,%xmm6
  0x00007f1a08519596:   vaddss %xmm6,%xmm0,%xmm0
  0x00007f1a0851959a:   vmovdqu 0x7f11e(%rip),%ymm2        # Stub::perm_mask_int
                                                            ;   {external_word}
  0x00007f1a085195a2:   vpshufb %ymm2,%ymm3,%ymm2
  0x00007f1a085195a7:   vcvtdq2ps %ymm2,%ymm2
  0x00007f1a085195ab:   vaddss %xmm2,%xmm0,%xmm0
  0x00007f1a085195af:   vpshufd $0x1,%xmm2,%xmm4
  0x00007f1a085195b4:   vaddss %xmm4,%xmm0,%xmm0
  0x00007f1a085195b8:   vpshufd $0x2,%xmm2,%xmm4
  0x00007f1a085195bd:   vaddss %xmm4,%xmm0,%xmm0
  0x00007f1a085195c1:   vpshufd $0x3,%xmm2,%xmm4
  0x00007f1a085195c6:   vaddss %xmm4,%xmm0,%xmm0
  0x00007f1a085195ca:   vextractf128 $0x1,%ymm2,%xmm4
  0x00007f1a085195d0:   vaddss %xmm4,%xmm0,%xmm0
  0x00007f1a085195d4:   vpshufd $0x1,%xmm4,%xmm5
  0x00007f1a085195d9:   vaddss %xmm5,%xmm0,%xmm0
  0x00007f1a085195dd:   vpshufd $0x2,%xmm4,%xmm5
  0x00007f1a085195e2:   vaddss %xmm5,%xmm0,%xmm0
  0x00007f1a085195e6:   vpshufd $0x3,%xmm4,%xmm5
  0x00007f1a085195eb:   vaddss %xmm5,%xmm0,%xmm0            ;*fadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Reduced::test@26 (line 13)
  0x00007f1a085195ef:   add    $0x10,%r9d                   ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Reduced::test@28 (line 12)
  0x00007f1a085195f3:   cmp    %r13d,%r9d
  0x00007f1a085195f6:   jl     0x00007f1a08519520           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Reduced::test@31 (line 12)
 ;; B14: #	out( B12 B15 ) <- in( B13 )  Freq: 69.0236
  0x00007f1a085195fc:   mov    0x3d0(%r15),%rcx             ; ImmutableOopMap {rbx=Oop rbp=NarrowOop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) Reduced::test@31 (line 12)
  0x00007f1a08519603:   test   %eax,(%rcx)                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Reduced::test@31 (line 12)
                                                            ;   {poll}
  0x00007f1a08519605:   cmp    %r8d,%r9d
  0x00007f1a08519608:   jl     0x00007f1a085194ff
 ;; B15: #	out( B19 B16 ) <- in( B14 )  Freq: 0.985712
  0x00007f1a0851960e:   mov    %edi,%r11d
  0x00007f1a08519611:   add    $0xfffffffa,%r11d
  0x00007f1a08519615:   cmp    %r11d,%edi
  0x00007f1a08519618:   cmovl  %esi,%r11d
  0x00007f1a0851961c:   nop
  0x00007f1a0851961d:   nop
  0x00007f1a0851961e:   nop
  0x00007f1a0851961f:   nop
  0x00007f1a08519620:   cmp    %r11d,%r9d
  0x00007f1a08519623:   jge    0x00007f1a085196b8
 ;; B16: #	out( B32 B17 ) <- in( B15 )  Freq: 0.492856
  0x00007f1a08519629:   mov    %r9d,%r8d
  0x00007f1a0851962c:   add    $0x7,%r8d
  0x00007f1a08519630:   cmp    %r10d,%r8d
  0x00007f1a08519633:   jae    0x00007f1a0851978c
 ;; B17: #	out( B33 B18 ) <- in( B16 )  Freq: 0.492856
  0x00007f1a08519639:   cmp    %r10d,%r9d
  0x00007f1a0851963c:   nop
  0x00007f1a0851963d:   nop
  0x00007f1a0851963e:   nop
  0x00007f1a0851963f:   nop
  0x00007f1a08519640:   jae    0x00007f1a085197a0
  0x00007f1a08519646:   nop
  0x00007f1a08519647:   nop
 ;; B18: #	out( B18 B19 ) <- in( B17 B18 ) Loop( B18-B18 inner post of N629 reduction) Freq: 0.98571
  0x00007f1a08519648:   vmovdqu 0x10(%rbx,%r9,4),%ymm2      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Reduced::test@17 (line 13)
  0x00007f1a0851964f:   vpaddd %ymm1,%ymm2,%ymm3
  0x00007f1a08519653:   vmovdqu %ymm3,0x10(%rbx,%r9,4)      ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Reduced::test@21 (line 13)
  0x00007f1a0851965a:   vmovdqu 0x7f05e(%rip),%ymm5        # Stub::perm_mask_int
                                                            ;   {external_word}
  0x00007f1a08519662:   vpshufb %ymm5,%ymm2,%ymm5
  0x00007f1a08519667:   vcvtdq2ps %ymm5,%ymm2
  0x00007f1a0851966b:   vaddss %xmm2,%xmm0,%xmm0
  0x00007f1a0851966f:   vpshufd $0x1,%xmm2,%xmm3
  0x00007f1a08519674:   vaddss %xmm3,%xmm0,%xmm0
  0x00007f1a08519678:   vpshufd $0x2,%xmm2,%xmm3
  0x00007f1a0851967d:   vaddss %xmm3,%xmm0,%xmm0
  0x00007f1a08519681:   vpshufd $0x3,%xmm2,%xmm3
  0x00007f1a08519686:   vaddss %xmm3,%xmm0,%xmm0
  0x00007f1a0851968a:   vextractf128 $0x1,%ymm2,%xmm3
  0x00007f1a08519690:   vaddss %xmm3,%xmm0,%xmm0
  0x00007f1a08519694:   vpshufd $0x1,%xmm3,%xmm4
  0x00007f1a08519699:   vaddss %xmm4,%xmm0,%xmm0
  0x00007f1a0851969d:   vpshufd $0x2,%xmm3,%xmm4
  0x00007f1a085196a2:   vaddss %xmm4,%xmm0,%xmm0
  0x00007f1a085196a6:   vpshufd $0x3,%xmm3,%xmm4
  0x00007f1a085196ab:   vaddss %xmm4,%xmm0,%xmm0            ;*fadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Reduced::test@26 (line 13)
  0x00007f1a085196af:   add    $0x8,%r9d                    ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Reduced::test@28 (line 12)
  0x00007f1a085196b3:   cmp    %r11d,%r9d
  0x00007f1a085196b6:   jl     0x00007f1a08519648           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Reduced::test@8 (line 12)
 ;; B19: #	out( B24 B20 ) <- in( B28 B18 B15 )  Freq: 0.985712
  0x00007f1a085196b8:   nop
  0x00007f1a085196b9:   nop
  0x00007f1a085196ba:   nop
  0x00007f1a085196bb:   nop
  0x00007f1a085196bc:   nop
  0x00007f1a085196bd:   nop
  0x00007f1a085196be:   nop
  0x00007f1a085196bf:   nop
  0x00007f1a085196c0:   cmp    $0x4b,%r9d
  0x00007f1a085196c4:   jge    0x00007f1a085196f8
 ;; B20: #	out( B21 ) <- in( B19 )  Freq: 0.492856
  0x00007f1a085196c6:   nop
  0x00007f1a085196c7:   nop
 ;; B21: #	out( B26 B22 ) <- in( B20 B23 ) Loop( B21-B23 inner post of N248 reduction) Freq: 0.985711
  0x00007f1a085196c8:   cmp    %r10d,%r9d
  0x00007f1a085196cb:   jae    0x00007f1a08519717
 ;; B22: #	out( B24 B23 ) <- in( B21 )  Freq: 0.98571
  0x00007f1a085196d1:   mov    0x10(%rbx,%r9,4),%r8d        ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Reduced::test@17 (line 13)
  0x00007f1a085196d6:   mov    %r8d,%r11d
  0x00007f1a085196d9:   inc    %r11d
  0x00007f1a085196dc:   mov    %r11d,0x10(%rbx,%r9,4)       ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Reduced::test@21 (line 13)
  0x00007f1a085196e1:   inc    %r9d                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Reduced::test@28 (line 12)
  0x00007f1a085196e4:   cmp    $0x4b,%r9d
  0x00007f1a085196e8:   jge    0x00007f1a085196f8           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Reduced::test@8 (line 12)
 ;; B23: #	out( B21 ) <- in( B22 )  Freq: 0.492855
  0x00007f1a085196ea:   bswap  %r8d                         ;*invokestatic reverseBytes {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Reduced::test@22 (line 13)
  0x00007f1a085196ed:   vcvtsi2ss %r8d,%xmm1,%xmm1
  0x00007f1a085196f2:   vaddss %xmm1,%xmm0,%xmm0            ;*fadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Reduced::test@26 (line 13)
  0x00007f1a085196f6:   jmp    0x00007f1a085196c8
 ;; B24: #	out( N355 ) <- in( B2 B22 B19 )  Freq: 0.999992
  0x00007f1a085196f8:   vzeroupper 
  0x00007f1a085196fb:   add    $0x20,%rsp
  0x00007f1a085196ff:   pop    %rbp
  0x00007f1a08519700:   cmp    0x3c8(%r15),%rsp             ;   {poll_return}
  0x00007f1a08519707:   ja     0x00007f1a085197dc
  0x00007f1a0851970d:   retq   
 ;; B25: #	out( B27 ) <- in( B4 )  Freq: 1.99761e-06
  0x00007f1a0851970e:   mov    %r14d,(%rsp)
  0x00007f1a08519712:   mov    %r13d,%r9d
  0x00007f1a08519715:   jmp    0x00007f1a0851971c
 ;; B26: #	out( B27 ) <- in( B21 )  Freq: 9.988e-07
  0x00007f1a08519717:   vmovss %xmm0,(%rsp)
 ;; B27: #	out( N355 ) <- in( B26 B25 )  Freq: 2.99641e-06
  0x00007f1a0851971c:   mov    $0xffffffe4,%esi
  0x00007f1a08519721:   mov    %r9d,0x8(%rsp)
  0x00007f1a08519726:   mov    %r9d,0xc(%rsp)
  0x00007f1a0851972b:   nop
  0x00007f1a0851972c:   vzeroupper 
  0x00007f1a0851972f:   callq  0x00007f1a0860ab20           ; ImmutableOopMap {rbp=NarrowOop }
                                                            ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Reduced::test@17 (line 13)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f1a08519734:   movabs $0x7f1a0d0772d8,%rdi         ;   {external_word}
  0x00007f1a0851973e:   and    $0xfffffffffffffff0,%rsp
  0x00007f1a08519742:   callq  0x00007f1a0c7c79ee           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f1a08519747:   hlt                                 ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Reduced::test@17 (line 13)
 ;; B28: #	out( B19 ) <- in( B7 )  Freq: 9.98805e-07
  0x00007f1a08519748:   mov    %ecx,%r9d
  0x00007f1a0851974b:   jmpq   0x00007f1a085196b8
 ;; B29: #	out( N355 ) <- in( B8 )  Freq: 9.98804e-07
  0x00007f1a08519750:   movabs $0x7f1a0d234300,%rdi         ;   {external_word}
  0x00007f1a0851975a:   and    $0xfffffffffffffff0,%rsp
  0x00007f1a0851975e:   callq  0x00007f1a0c7c79ee           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f1a08519763:   hlt    
 ;; B30: #	out( N355 ) <- in( B9 )  Freq: 9.98803e-07
  0x00007f1a08519764:   movabs $0x7f1a0d2338a0,%rdi         ;   {external_word}
  0x00007f1a0851976e:   and    $0xfffffffffffffff0,%rsp
  0x00007f1a08519772:   callq  0x00007f1a0c7c79ee           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f1a08519777:   hlt    
 ;; B31: #	out( N355 ) <- in( B10 )  Freq: 9.98802e-07
  0x00007f1a08519778:   movabs $0x7f1a0d2338a0,%rdi         ;   {external_word}
  0x00007f1a08519782:   and    $0xfffffffffffffff0,%rsp
  0x00007f1a08519786:   callq  0x00007f1a0c7c79ee           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f1a0851978b:   hlt    
 ;; B32: #	out( N355 ) <- in( B16 )  Freq: 4.99401e-07
  0x00007f1a0851978c:   movabs $0x7f1a0d2338a0,%rdi         ;   {external_word}
  0x00007f1a08519796:   and    $0xfffffffffffffff0,%rsp
  0x00007f1a0851979a:   callq  0x00007f1a0c7c79ee           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f1a0851979f:   hlt    
 ;; B33: #	out( N355 ) <- in( B17 )  Freq: 4.994e-07
  0x00007f1a085197a0:   movabs $0x7f1a0d2338a0,%rdi         ;   {external_word}
  0x00007f1a085197aa:   and    $0xfffffffffffffff0,%rsp
  0x00007f1a085197ae:   callq  0x00007f1a0c7c79ee           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f1a085197b3:   hlt    
 ;; B34: #	out( N355 ) <- in( B1 )  Freq: 1.01328e-06
  0x00007f1a085197b4:   mov    $0xffffffbe,%esi
  0x00007f1a085197b9:   mov    %r14d,%ebp
  0x00007f1a085197bc:   mov    %r13d,(%rsp)
  0x00007f1a085197c0:   vzeroupper 
  0x00007f1a085197c3:   callq  0x00007f1a0860ab20           ; ImmutableOopMap {}
                                                            ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Reduced::test@5 (line 12)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f1a085197c8:   movabs $0x7f1a0d0772d8,%rdi         ;   {external_word}
  0x00007f1a085197d2:   and    $0xfffffffffffffff0,%rsp
  0x00007f1a085197d6:   callq  0x00007f1a0c7c79ee           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f1a085197db:   hlt                                 ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Reduced::test@5 (line 12)
  0x00007f1a085197dc:   movabs $0x7f1a08519700,%r10         ;   {internal_word}
  0x00007f1a085197e6:   mov    %r10,0x3e0(%r15)
  0x00007f1a085197ed:   jmpq   0x00007f1a086099a0           ;   {runtime_call SafepointBlob}
  0x00007f1a085197f2:   hlt    
  0x00007f1a085197f3:   hlt    
  0x00007f1a085197f4:   hlt    
  0x00007f1a085197f5:   hlt    
  0x00007f1a085197f6:   hlt    
  0x00007f1a085197f7:   hlt    
[Exception Handler]
  0x00007f1a085197f8:   jmpq   0x00007f1a0856cb20           ;   {no_reloc}
[Deopt Handler Code]
  0x00007f1a085197fd:   callq  0x00007f1a08519802
  0x00007f1a08519802:   subq   $0x5,(%rsp)
  0x00007f1a08519807:   jmpq   0x00007f1a0860ae60           ;   {runtime_call DeoptimizationBlob}
  0x00007f1a0851980c:   hlt    
  0x00007f1a0851980d:   hlt    
  0x00007f1a0851980e:   hlt    
  0x00007f1a0851980f:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Oops:
  0x00007f1a08519810:   0x000000011f8a43f0 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x000000011f8a43f0}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Metadata:
  0x00007f1a08519818:   0x00007f199c5113c0 {method} {0x00007f199c5113c0} 'test' '()V' in 'Reduced'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
pc-bytecode offsets:
PcDesc(pc=0x00007f1a085193bf offset=ffffffff bits=0):
PcDesc(pc=0x00007f1a085193fc offset=3c bits=0):
   Reduced::test@5 (line 12)
PcDesc(pc=0x00007f1a0851940a offset=4a bits=0):
   Reduced::test@12 (line 13)
PcDesc(pc=0x00007f1a0851940f offset=4f bits=0):
   Reduced::test@17 (line 13)
PcDesc(pc=0x00007f1a08519419 offset=59 bits=0):
   Reduced::test@8 (line 12)
PcDesc(pc=0x00007f1a0851946e offset=ae bits=0):
   Reduced::test@17 (line 13)
PcDesc(pc=0x00007f1a08519478 offset=b8 bits=0):
   Reduced::test@21 (line 13)
PcDesc(pc=0x00007f1a0851947b offset=bb bits=0):
   Reduced::test@22 (line 13)
PcDesc(pc=0x00007f1a08519489 offset=c9 bits=0):
   Reduced::test@26 (line 13)
PcDesc(pc=0x00007f1a0851948e offset=ce bits=0):
   Reduced::test@28 (line 12)
PcDesc(pc=0x00007f1a08519492 offset=d2 bits=0):
   Reduced::test@8 (line 12)
PcDesc(pc=0x00007f1a08519527 offset=167 bits=0):
   Reduced::test@17 (line 13)
PcDesc(pc=0x00007f1a08519532 offset=172 bits=0):
   Reduced::test@21 (line 13)
PcDesc(pc=0x00007f1a0851953b offset=17b bits=0):
   Reduced::test@17 (line 13)
PcDesc(pc=0x00007f1a08519545 offset=185 bits=0):
   Reduced::test@21 (line 13)
PcDesc(pc=0x00007f1a085195ef offset=22f bits=0):
   Reduced::test@26 (line 13)
PcDesc(pc=0x00007f1a085195f3 offset=233 bits=0):
   Reduced::test@28 (line 12)
PcDesc(pc=0x00007f1a085195fc offset=23c bits=0):
   Reduced::test@31 (line 12)
PcDesc(pc=0x00007f1a08519603 offset=243 bits=1):
   Reduced::test@31 (line 12)  reexecute=true
   Locals
    - l0: reg xmm0 [48]
    - l1: reg r9 [18],int
PcDesc(pc=0x00007f1a08519605 offset=245 bits=0):
   Reduced::test@31 (line 12)
PcDesc(pc=0x00007f1a0851964f offset=28f bits=0):
   Reduced::test@17 (line 13)
PcDesc(pc=0x00007f1a0851965a offset=29a bits=0):
   Reduced::test@21 (line 13)
PcDesc(pc=0x00007f1a085196af offset=2ef bits=0):
   Reduced::test@26 (line 13)
PcDesc(pc=0x00007f1a085196b3 offset=2f3 bits=0):
   Reduced::test@28 (line 12)
PcDesc(pc=0x00007f1a085196b8 offset=2f8 bits=0):
   Reduced::test@8 (line 12)
PcDesc(pc=0x00007f1a085196d6 offset=316 bits=0):
   Reduced::test@17 (line 13)
PcDesc(pc=0x00007f1a085196e1 offset=321 bits=0):
   Reduced::test@21 (line 13)
PcDesc(pc=0x00007f1a085196e4 offset=324 bits=0):
   Reduced::test@28 (line 12)
PcDesc(pc=0x00007f1a085196ea offset=32a bits=0):
   Reduced::test@8 (line 12)
PcDesc(pc=0x00007f1a085196ed offset=32d bits=0):
   Reduced::test@22 (line 13)
PcDesc(pc=0x00007f1a085196f6 offset=336 bits=0):
   Reduced::test@26 (line 13)
PcDesc(pc=0x00007f1a08519734 offset=374 bits=0):
   Reduced::test@17 (line 13)
   Locals
    - l0: empty
    - l1: stack[8]
   Expression stack
    - @0: stack[0]
    - @1: reg rbp [10],narrowoop
    - @2: stack[12]
    - @3: reg rbp [10],narrowoop
    - @4: stack[8]
PcDesc(pc=0x00007f1a08519748 offset=388 bits=0):
   Reduced::test@17 (line 13)
PcDesc(pc=0x00007f1a085197c8 offset=408 bits=0):
   Reduced::test@5 (line 12)
   Locals
    - l0: reg rbp [10]
    - l1: stack[0]
PcDesc(pc=0x00007f1a085197dc offset=41c bits=0):
   Reduced::test@5 (line 12)
PcDesc(pc=0x00007f1a08519831 offset=471 bits=0):
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
oop maps:ImmutableOopMapSet contains 3 OopMaps

ImmutableOopMap {rbx=Oop rbp=NarrowOop } pc offsets: 579 
ImmutableOopMap {rbp=NarrowOop } pc offsets: 884 
ImmutableOopMap {} pc offsets: 1032 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
scopes:
ScopeDesc(pc=0x00007f1a085193fc offset=3c):
   Reduced::test@5 (line 12)
ScopeDesc(pc=0x00007f1a0851940a offset=4a):
   Reduced::test@12 (line 13)
ScopeDesc(pc=0x00007f1a0851940f offset=4f):
   Reduced::test@17 (line 13)
ScopeDesc(pc=0x00007f1a08519419 offset=59):
   Reduced::test@8 (line 12)
ScopeDesc(pc=0x00007f1a0851946e offset=ae):
   Reduced::test@17 (line 13)
ScopeDesc(pc=0x00007f1a08519478 offset=b8):
   Reduced::test@21 (line 13)
ScopeDesc(pc=0x00007f1a0851947b offset=bb):
   Reduced::test@22 (line 13)
ScopeDesc(pc=0x00007f1a08519489 offset=c9):
   Reduced::test@26 (line 13)
ScopeDesc(pc=0x00007f1a0851948e offset=ce):
   Reduced::test@28 (line 12)
ScopeDesc(pc=0x00007f1a08519492 offset=d2):
   Reduced::test@8 (line 12)
ScopeDesc(pc=0x00007f1a08519527 offset=167):
   Reduced::test@17 (line 13)
ScopeDesc(pc=0x00007f1a08519532 offset=172):
   Reduced::test@21 (line 13)
ScopeDesc(pc=0x00007f1a0851953b offset=17b):
   Reduced::test@17 (line 13)
ScopeDesc(pc=0x00007f1a08519545 offset=185):
   Reduced::test@21 (line 13)
ScopeDesc(pc=0x00007f1a085195ef offset=22f):
   Reduced::test@26 (line 13)
ScopeDesc(pc=0x00007f1a085195f3 offset=233):
   Reduced::test@28 (line 12)
ScopeDesc(pc=0x00007f1a085195fc offset=23c):
   Reduced::test@31 (line 12)
ScopeDesc(pc=0x00007f1a08519603 offset=243):
   Reduced::test@31 (line 12)  reexecute=true
   Locals
    - l0: reg xmm0 [48]
    - l1: reg r9 [18],int
ScopeDesc(pc=0x00007f1a08519605 offset=245):
   Reduced::test@31 (line 12)
ScopeDesc(pc=0x00007f1a0851964f offset=28f):
   Reduced::test@17 (line 13)
ScopeDesc(pc=0x00007f1a0851965a offset=29a):
   Reduced::test@21 (line 13)
ScopeDesc(pc=0x00007f1a085196af offset=2ef):
   Reduced::test@26 (line 13)
ScopeDesc(pc=0x00007f1a085196b3 offset=2f3):
   Reduced::test@28 (line 12)
ScopeDesc(pc=0x00007f1a085196b8 offset=2f8):
   Reduced::test@8 (line 12)
ScopeDesc(pc=0x00007f1a085196d6 offset=316):
   Reduced::test@17 (line 13)
ScopeDesc(pc=0x00007f1a085196e1 offset=321):
   Reduced::test@21 (line 13)
ScopeDesc(pc=0x00007f1a085196e4 offset=324):
   Reduced::test@28 (line 12)
ScopeDesc(pc=0x00007f1a085196ea offset=32a):
   Reduced::test@8 (line 12)
ScopeDesc(pc=0x00007f1a085196ed offset=32d):
   Reduced::test@22 (line 13)
ScopeDesc(pc=0x00007f1a085196f6 offset=336):
   Reduced::test@26 (line 13)
ScopeDesc(pc=0x00007f1a08519734 offset=374):
   Reduced::test@17 (line 13)
   Locals
    - l0: empty
    - l1: stack[8]
   Expression stack
    - @0: stack[0]
    - @1: reg rbp [10],narrowoop
    - @2: stack[12]
    - @3: reg rbp [10],narrowoop
    - @4: stack[8]
ScopeDesc(pc=0x00007f1a08519748 offset=388):
   Reduced::test@17 (line 13)
ScopeDesc(pc=0x00007f1a085197c8 offset=408):
   Reduced::test@5 (line 12)
   Locals
    - l0: reg rbp [10]
    - l1: stack[0]
ScopeDesc(pc=0x00007f1a085197dc offset=41c):
   Reduced::test@5 (line 12)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
relocations:
         @0x00007f1a08519308: 0020
relocInfo@0x00007f1a08519308 [type=0(none) addr=0x00007f1a085193c0 offset=32]
         @0x00007f1a0851930a: 3200
relocInfo@0x00007f1a0851930a [type=6(runtime_call) addr=0x00007f1a085193c0 offset=0 format=1] | [destination=0x00007f1a0c94816a]
         @0x00007f1a0851930c: 083c
relocInfo@0x00007f1a0851930c [type=1(oop) addr=0x00007f1a085193fc offset=60] | [oop_addr=0x00007f1a085193fe *=0x000000011f96f7a8 offset=0]
         @0x00007f1a0851930e: 4afb
relocInfo@0x00007f1a0851930e [type=9(section_word) addr=0x00007f1a085194f7 offset=251 format=1] | [target=0x00007f1a085193a0]
         @0x00007f1a08519310: 7c03085986c07f1a3a4e
relocInfo@0x00007f1a08519318 [type=7(external_word) addr=0x00007f1a08519545 offset=78 format=1 data={085986c07f1a}] | [target=0x00007f1a085986c0]
         @0x00007f1a0851931a: 7c03085986c07f1a3a55
relocInfo@0x00007f1a08519322 [type=7(external_word) addr=0x00007f1a0851959a offset=85 format=1 data={085986c07f1a}] | [target=0x00007f1a085986c0]
         @0x00007f1a08519324: 5069
relocInfo@0x00007f1a08519324 [type=10(poll) addr=0x00007f1a08519603 offset=105]
         @0x00007f1a08519326: 7c03085986c07f1a3a57
relocInfo@0x00007f1a0851932e [type=7(external_word) addr=0x00007f1a0851965a offset=87 format=1 data={085986c07f1a}] | [target=0x00007f1a085986c0]
         @0x00007f1a08519330: 58a6
relocInfo@0x00007f1a08519330 [type=11(poll_return) addr=0x00007f1a08519700 offset=166]
         @0x00007f1a08519332: 322f
relocInfo@0x00007f1a08519332 [type=6(runtime_call) addr=0x00007f1a0851972f offset=47 format=1] | [destination=0x00007f1a0860ab20]
         @0x00007f1a08519334: 7c030d0772d87f1a3805
relocInfo@0x00007f1a0851933c [type=7(external_word) addr=0x00007f1a08519734 offset=5 data={0d0772d87f1a}] | [target=0x00007f1a0d0772d8]
         @0x00007f1a0851933e: 320e
relocInfo@0x00007f1a0851933e [type=6(runtime_call) addr=0x00007f1a08519742 offset=14 format=1] | [destination=0x00007f1a0c7c79ee]
         @0x00007f1a08519340: 7c030d2343007f1a380e
relocInfo@0x00007f1a08519348 [type=7(external_word) addr=0x00007f1a08519750 offset=14 data={0d2343007f1a}] | [target=0x00007f1a0d234300]
         @0x00007f1a0851934a: 320e
relocInfo@0x00007f1a0851934a [type=6(runtime_call) addr=0x00007f1a0851975e offset=14 format=1] | [destination=0x00007f1a0c7c79ee]
         @0x00007f1a0851934c: 7c030d2338a07f1a3806
relocInfo@0x00007f1a08519354 [type=7(external_word) addr=0x00007f1a08519764 offset=6 data={0d2338a07f1a}] | [target=0x00007f1a0d2338a0]
         @0x00007f1a08519356: 320e
relocInfo@0x00007f1a08519356 [type=6(runtime_call) addr=0x00007f1a08519772 offset=14 format=1] | [destination=0x00007f1a0c7c79ee]
         @0x00007f1a08519358: 7c030d2338a07f1a3806
relocInfo@0x00007f1a08519360 [type=7(external_word) addr=0x00007f1a08519778 offset=6 data={0d2338a07f1a}] | [target=0x00007f1a0d2338a0]
         @0x00007f1a08519362: 320e
relocInfo@0x00007f1a08519362 [type=6(runtime_call) addr=0x00007f1a08519786 offset=14 format=1] | [destination=0x00007f1a0c7c79ee]
         @0x00007f1a08519364: 7c030d2338a07f1a3806
relocInfo@0x00007f1a0851936c [type=7(external_word) addr=0x00007f1a0851978c offset=6 data={0d2338a07f1a}] | [target=0x00007f1a0d2338a0]
         @0x00007f1a0851936e: 320e
relocInfo@0x00007f1a0851936e [type=6(runtime_call) addr=0x00007f1a0851979a offset=14 format=1] | [destination=0x00007f1a0c7c79ee]
         @0x00007f1a08519370: 7c030d2338a07f1a3806
relocInfo@0x00007f1a08519378 [type=7(external_word) addr=0x00007f1a085197a0 offset=6 data={0d2338a07f1a}] | [target=0x00007f1a0d2338a0]
         @0x00007f1a0851937a: 320e
relocInfo@0x00007f1a0851937a [type=6(runtime_call) addr=0x00007f1a085197ae offset=14 format=1] | [destination=0x00007f1a0c7c79ee]
         @0x00007f1a0851937c: 3215
relocInfo@0x00007f1a0851937c [type=6(runtime_call) addr=0x00007f1a085197c3 offset=21 format=1] | [destination=0x00007f1a0860ab20]
         @0x00007f1a0851937e: 7c030d0772d87f1a3805
relocInfo@0x00007f1a08519386 [type=7(external_word) addr=0x00007f1a085197c8 offset=5 data={0d0772d87f1a}] | [target=0x00007f1a0d0772d8]
         @0x00007f1a08519388: 320e
relocInfo@0x00007f1a08519388 [type=6(runtime_call) addr=0x00007f1a085197d6 offset=14 format=1] | [destination=0x00007f1a0c7c79ee]
         @0x00007f1a0851938a: 78dc4006
relocInfo@0x00007f1a0851938c [type=8(internal_word) addr=0x00007f1a085197dc offset=6 data=220] | [target=0x00007f1a08519700]
         @0x00007f1a0851938e: 3211
relocInfo@0x00007f1a0851938e [type=6(runtime_call) addr=0x00007f1a085197ed offset=17 format=1] | [destination=0x00007f1a086099a0]
         @0x00007f1a08519390: 000b
relocInfo@0x00007f1a08519390 [type=0(none) addr=0x00007f1a085197f8 offset=11]
         @0x00007f1a08519392: 3200
relocInfo@0x00007f1a08519392 [type=6(runtime_call) addr=0x00007f1a085197f8 offset=0 format=1] | [destination=0x00007f1a0856cb20]
         @0x00007f1a08519394: 320f
relocInfo@0x00007f1a08519394 [type=6(runtime_call) addr=0x00007f1a08519807 offset=15 format=1] | [destination=0x00007f1a0860ae60]
         @0x00007f1a08519396: 0000
relocInfo@0x00007f1a08519396 [type=0(none) addr=0x00007f1a08519807 offset=0]
         @0x00007f1a08519398: 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Dependencies:
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ExceptionHandlerTable (size = 0 bytes)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ImplicitExceptionTable (size = 1 entries, 12 bytes):
{
   < 0x00007f1a0851940a, 0x00007f1a085197b4 > 
}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded oops:
#0: 0x0000000000000000 NULL-oop
#1: 0x000000011f8a43f0 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x000000011f8a43f0}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded metadata:
#0: 0x0000000000000000 NULL-oop
#1: 0x00007f199c5113c0 {method} {0x00007f199c5113c0} 'test' '()V' in 'Reduced'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
------------------------------------------------------------------------
static Reduced::test()V
  interpreter_invocation_count:       28672
  invocation_counter:                 28672
  backedge_counter:                 1964101
  decompile_count:                        0
  mdo size: 496 bytes

0 fconst_1
1 fstore_0
2 bipush 6
4 istore_1
5 iload_1
6 bipush 75
8 if_icmpge 34
  0   bci: 8    BranchData          taken(27303) displacement(72)
                                    not taken(1958981)
11 fload_0
12 getstatic 13 <Reduced.iArrFld/[I> 
15 iload_1
16 dup2
17 iaload
18 dup_x2
19 iconst_1
20 iadd
21 iastore
22 invokestatic 17 <java/lang/Integer.reverseBytes(I)I> 
  32  bci: 22   CounterData         count(1958981)
25 i2f
26 fadd
27 fstore_0
28 iinc #1 1
31 goto 5
  48  bci: 31   JumpData            taken(1958981) displacement(-48)
34 return
------------------------------------------------------------------------
Total MDO size: 496 bytes

============================= C2-compiled nmethod ==============================
