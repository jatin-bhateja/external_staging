                              @ 1   java.lang.Object::hashCode (0 bytes)   failed to inline: no static binding
                              @ 9   java.lang.Math::floorMod (20 bytes)   inline
                              @ 31   java.lang.Object::equals (11 bytes)   failed to inline: no static binding
                              @ 3   java.lang.Iterable::iterator (0 bytes)   failed to inline: no static binding
                              @ 10   java.util.Iterator::hasNext (0 bytes)   failed to inline: no static binding
                              @ 19   java.util.Iterator::next (0 bytes)   failed to inline: no static binding
                              @ 30   java.lang.Enum::name (5 bytes)   inline
                              @ 33   java.lang.String::hashCode (60 bytes)   failed to inline: callee is too large
                              @ 86  java/util/NoSuchElementException::<init> (not loaded)   failed to inline: not inlineable
                              @ 11   java.lang.Object::equals (11 bytes)   failed to inline: no static binding
                              @ 1   java.lang.Object::<init> (1 bytes)   inline
                              @ 8   java.lang.NullPointerException::<init> (5 bytes)   failed to inline: don't inline Throwable constructors
                              @ 17   java.lang.String::isLatin1 (19 bytes)   inline
                              @ 44   java.lang.StringLatin1::equals (36 bytes)   failed to inline: callee is too large
                              @ 27   java.lang.StringLatin1::hashCode (52 bytes)   failed to inline: callee is too large
                              @ 37  java/lang/StringUTF16::hashCode (not loaded)   failed to inline: not inlineable
                              @ 6   java.lang.String::coder (15 bytes)   inline
                              @ 1                                 java.lang.Object::@ 1  <init> java.util.AbstractCollection::<init> (1 bytes) (5 bytes)   inline
   inline
                                @ 1   java.lang.Object::<init> (1 bytes)   inline
                              @ 15   jdk.internal.misc.Unsafe::getReferenceAcquire (7 bytes)   inline
                                @ 3   jdk.internal.misc.Unsafe::getReferenceVolatile (0 bytes)   intrinsic
                              @ 3   jdk.internal.misc.Unsafe::getReferenceVolatile (0 bytes)   intrinsic
                              @ 17   jdk.internal.misc.Unsafe::compareAndSetReference (0 bytes)   intrinsic
                              @ 1   java.lang.String::isLatin1 (19 bytes)   inline
                              @ 3   java.lang.String::checkIndex (10 bytes)   inline
                              @ 5   jdk.internal.util.Preconditions::checkIndex (18 bytes)   intrinsic
                              @ 12   java.lang.StringLatin1::charAt (15 bytes)   inline
                              @ 12   jdk.internal.util.Preconditions::outOfBoundsCheckIndex (25 bytes)   failed to inline: callee uses too much stack
                                @ 5   jdk.internal.util.Preconditions::checkIndex (18 bytes)   intrinsic
                                @ 3   java.lang.String::checkIndex (10 bytes)   inline
                                  @ 5   jdk.internal.util.Preconditions::checkIndex (18 bytes)   intrinsic
                              @ 21  java/lang/StringUTF16::charAt (not loaded)   failed to inline: not inlineable
               !              @ 4   java.lang.ref.ReferenceQueue::poll (40 bytes)   failed to inline: no static binding
                              @ 20   java.util.Map::remove (0 bytes)   failed to inline: no static binding
               !m             @ 4   java.util.concurrent.ConcurrentHashMap::putVal (432 bytes)   failed to inline: callee is too large
                              @ 1   java.lang.ref.ReferenceQueue::headIsNull (13 bytes)   inline
                              @ 17   java.lang.ref.ReferenceQueue::poll0 (65 bytes)   failed to inline: callee is too large
                              @ 5   java.lang.Object::hashCode (0 bytes)   failed to inline: no static binding
                              @ 1   java.lang.Object::hashCode (0 bytes)   failed to inline: no static binding
                              @ 4   java.util.concurrent.ConcurrentHashMap::spread (10 bytes)   inline
                              @ 6   java.lang.Object::hashCode (0 bytes)   failed to inline: native method
                              @ 5   jdk.internal.util.StrongReferenceKey::<init> (10 bytes)   inline
                                                            @ 34  @ 10   java.util.concurrent.ConcurrentHashMap:: java.lang.Class::                              @ 40  tabAtisPrimitive                                @ 1   java.lang.Object:: (0 bytes)   intrinsic
hashCode (22 bytes)   failed to inline: callee uses too much stack
 java.lang.Object:: (0 bytes)   failed to inline: native method
<init> (1 bytes)   inline
                              @ 45   sun.invoke.util.Wrapper::asPrimitiveType (20 bytes)   inline
                              @ 73   java.lang.Object::                   equals              (11 bytes)   failed to inline: no static binding
@ 1   sun.invoke.util.Wrapper::findWrapperType (102 bytes)   failed to inline: callee is too large
                                @ 10   sun.invoke.util.Wrapper::primitiveType (5 bytes)   inline
                              @ 93   java.util.concurrent.ConcurrentHashMap$Node::find (52 bytes)   failed to inline: no static binding
                                @ 14   sun.invoke.util.Wrapper::forceType (72 bytes)   failed to inline: callee is too large
                              @ 149   java.lang.Object::equals (11 bytes)   failed to inline: no static binding
                              @ 68   sun.invoke.util.Wrapper::asWrapperType (18 bytes)   inline
                                @ 1   java.lang.Class::isPrimitive (0 bytes)   intrinsic
                                @ 8   sun.invoke.util.Wrapper::forPrimitiveType (122 bytes)   failed to inline: callee is too large
                                @ 12   sun.invoke.util.Wrapper::wrapperType (52 bytes)   failed to inline: callee is too large
                              @ 1   java.lang.Object::<init> (1 bytes)   inline
                              @ 13   java.lang.StringBuilder::<init> (7 bytes)   inline
                                @ 3   java.lang.AbstractStringBuilder::<init> (39 bytes)   failed to inline: callee is too large
                              @ 18   java.lang.StringBuilder::append (8 bytes)   inline
                                @ 2   java.lang.AbstractStringBuilder::append (45 bytes)   failed to inline: callee is too large
                              @ 22   java.lang.StringBuilder::append (8 bytes)   inline
                                @ 2   java.lang.AbstractStringBuilder::append (55 bytes)   failed to inline: callee is too large
                              @ 25   java.lang.StringBuilder::toString (20 bytes)   inline
                                @ 1   java.lang.StringBuilder::length (5 bytes)   inline
                              @ 4   java.lang.invoke.MemberName::anyFlagSet (15 bytes)   inline
                                  @ 1   java.lang.AbstractStringBuilder::length (5 bytes)   inline
                                @ 16   java.lang.String::<init> (98 bytes)   failed to inline: callee is too large
                              @ 28   java.lang.invoke.MethodHandleStatics::newIllegalArgumentException (9 bytes)   inline
                                @ 5   java.lang.IllegalArgumentException::<init> (6 bytes)   failed to inline: don't inline Throwable constructors
                              @ 1   jdk.internal.util.StrongReferenceKey::get (5 bytes)   inline
                              @ 9   java.lang.NullPointerException::<init> (6 bytes)   failed to inline: don't inline Throwable constructors
                              @ 4   java.lang.Object::hashCode (0 bytes)   failed to inline: no static binding
                              @ 11   java.lang.System::getSecurityManager (12 bytes)   inline
                                @ 0   java.lang.System::allowSecurityManager (13 bytes)   inline
                              @ 20   jdk.internal.reflect.Reflection::getCallerClass (0 bytes)   failed to inline: native method
                              @ 23   java.lang.ClassLoader::checkClassLoaderPermission (29 bytes)   inline
                                @ 0   java.lang.System::getSecurityManager (12 bytes)   inline
                                  @ 0   java.lang.System::allowSecurityManager (13 bytes)   inline
                              @ 3   java.util.Objects::requireNonNull (15 bytes)   force inline by annotation
                                @ 9   java.lang.NullPointerException::<init> (6 bytes)   failed to inline: don't inline Throwable constructors
                                @ 9   java.lang.ClassLoader::getClassLoader (11 bytes)   inline
                              @ 8   jdk.internal.util.ReferencedKeyMap::removeStaleReferences (30 bytes)   inline
                                  @ 7   java.lang.Class::getClassLoader0 (5 bytes)   inline
               !                @ 4   java.lang.ref.ReferenceQueue::poll (40 bytes)   failed to inline: no static binding
                                @ 15   java.lang.ClassLoader::needsClassLoaderPermissionCheck (27 bytes)   inline
                                @ 20   java.util.Map::remove (0 bytes)   failed to inline: no static binding
                              @ 17   jdk.internal.util.ReferencedKeyMap::lookupKey (9 bytes)   inline
                                  @ 15   java.lang.ClassLoader::isAncestor (20 bytes)   inline
                                                          @ 5      @ 1   java.lang.String:: jdk.internal.util.StrongReferenceKey::coder<init> (15 bytes)   inline
 (10 bytes)   inline
                                  @ 1   java.lang.Object::<init> (1 bytes)   inline
                              @ 20                java.util.Map::                 get@ 22   java.lang.System:: (0 bytes)   failed to inline: no static binding
arraycopy (0 bytes)   intrinsic
                                @ 25   java.lang.SecurityManager::checkPermission (5 bytes)   failed to inline: no static binding
                              @ 40   java.lang.StringLatin1::inflate (10 bytes)   failed to inline: callee uses too much stack
                              @ 5   java.util.ImmutableCollections$SetN$SetNIterator::<init> (36 bytes)   failed to inline: callee is too large
                              @ 6   java.lang.Object::<init> (1 bytes)   inline
                              @ 9   java.lang.Object::hashCode (0 bytes)   failed to inline: no static binding
                              @ 1   java.lang.Object::hashCode (0 bytes)   failed to inline: no static binding
                              @ 1   java.lang.Object::<init> (1 bytes)   inline
                              @ 11   java.lang.Math::floorMod (20 bytes)   inline
                              @ 20   java.util.HashMap::resize (356 bytes)   failed to inline: callee is too large
                              @ 56   java.util.HashMap::newNode (13 bytes)   failed to inline: callee uses too much stack
                              @ 35   java.lang.Object::equals (11 bytes)   failed to inline: no static binding
                              @ 91   java.lang.Object::equals (11 bytes)   failed to inline: no static binding
                              @ 123   java.util.HashMap$TreeNode::putTreeVal (314 bytes)   failed to inline: callee's klass not linked yet
                              @ 152   java.util.HashMap::newNode (13 bytes)   failed to inline: callee uses too much stack
                              @ 169   java.util.HashMap::treeifyBin (110 bytes)   failed to inline: callee is too large
                              @ 203   java.lang.Object::equals (11 bytes)   failed to inline: no static binding
                              @ 253   java.util.HashMap::afterNodeAccess (1 bytes)   inline
                              @ 9   java.util.HashMap$Node::<init> (26 bytes)   inline
                              @ 288   java.util.HashMap::resize (356 bytes)   failed to inline: callee is too large
                                @ 1   java.lang.Object::                                                 <init> (1 bytes)   inline  @ 295           @ 23   java.util.HashMap::
 java.util.HashMap::afterNodeInsertionhash (1 bytes)   inline
 (20 bytes)   inline
                                @ 9   java.lang.Object::hashCode (0 bytes)   failed to inline: no static binding
                              @ 63   java.lang.Object::equals (11 bytes)   failed to inline: no static binding
                              @ 95   java.util.HashMap$TreeNode::getTreeNode (22 bytes)   failed to inline: callee's klass not linked yet
                              @ 128   java.lang.Object::equals (11 bytes)   failed to inline: no static binding
                              @ 23  java/util/ConcurrentModificationException::<init> (not loaded)   failed to inline: not inlineable
                              @ 35  java/util/NoSuchElementException::<init> (not loaded)   failed to inline: not inlineable
                              @ 13   java.lang.String::hashCode (60 bytes)   failed to inline: callee is too large
                              @ 25   java.lang.module.ModuleDescriptor::modsHashCode (43 bytes)   failed to inline: callee is too large
                              @ 38   java.util.Set::hashCode (0 bytes)   failed to inline: no static binding
                              @ 53   java.util.Objects::hashCode (13 bytes)   inline
                                @ 5   java.lang.Object::hashCode (0 bytes)   failed to inline: no static binding
                              @ 66   java.util.Set::hashCode (0 bytes)   failed to inline: no static binding
                              @ 81   java.util.Set::hashCode (0 bytes)   failed to inline: no static binding
                              @ 96   java.util.Set::hashCode (0 bytes)   failed to inline: no static binding
                              @ 111   java.util.Set::hashCode (0 bytes)   failed to inline: no static binding
                              @ 126   java.util.Objects::hashCode (13 bytes)   inline
                                @ 5   java.lang.module.ModuleDescriptor$Version::hashCode (8 bytes)   inline
                                  @ 4   java.lang.String::hashCode (60 bytes)   failed to inline: callee is too large
                              @ 139   java.util.Objects::hashCode (13 bytes)   inline
                                @ 5   java.lang.String::hashCode (60 bytes)   failed to inline: callee is too large
                              @ 152   java.util.Objects::hashCode (13 bytes)   inline
                                @ 5   java.lang.String::hashCode (60 bytes)   failed to inline: callee is too large
                              @ 6   java.lang.Object::<init> (1 bytes)   inline
                              @ 2   java.util.HashMap::hash (20 bytes)   inline
                              @ 5   java.lang.Object::equals (11 bytes)   failed to inline: no static binding
                                @ 9   java.lang.Object::             hashCode (0 bytes)   failed to inline: no static binding
                 @ 16   java.lang.Object::equals (11 bytes)   failed to inline: no static binding
                              @ 9   java.util.HashMap::putVal (300 bytes)   failed to inline: callee is too large
                              @ 2   java.util.HashMap::getNode (150 bytes)   failed to inline: callee is too large
                              @ 10   java.lang.module.ModuleReference::descriptor (5 bytes)   inline
                              @ 13   java.lang.module.ModuleDescriptor::hashCode (170 bytes)   failed to inline: callee is too large
                              @ 25   java.util.Objects::hashCode (13 bytes)   inline
                              @ 217   java.util.HashMap$TreeNode::split (218 bytes)   failed to inline: callee's klass not linked yet
                                @ 5   java.net.URI::hashCode (123 bytes)   failed to inline: callee is too large
                              @ 38   java.util.Objects::hashCode (13 bytes)   inline
                                @ 5   java.lang.Object::hashCode (0 bytes)   failed to inline: native method
                              @ 1   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                              @ 4   java.lang.Object::hashCode (0 bytes)   failed to inline: native method
                                @ 8   java.lang.NullPointerException::<init> (5 bytes)   failed to inline: don't inline Throwable constructors
                              @ 11   jdk.internal.module.ModuleReferenceImpl::hashCode (56 bytes)   failed to inline: callee is too large
                              @ 14   java.util.ImmutableCollections$SetN::probe (56 bytes)   failed to inline: callee is too large
                              @ 1   java.util.HashMap$HashIterator::nextNode (100 bytes)   failed to inline: callee is too large
                              @ 1   java.lang.Object::<init> (1 bytes)   inline
                              @ 8   java.util.HashMap::put (13 bytes)   failed to inline: callee uses too much stack
                              @ 1   java.lang.Object::<init> (1 bytes)   inline
                              @ 31                                @ 17   jdk.internal.misc.Unsafe::compareAndSetLong (0 bytes) java.lang.Object::   intrinsichashCode
 (0 bytes)   failed to inline: no static binding
                              @ 58  java/util/concurrent/ThreadLocalRandom::getProbe (not loaded)   failed to inline: not inlineable
                              @ 2   java.util.HashMap::getNode (150 bytes)   failed to inline: callee is too large
                              @ 20   java.util.concurrent.ConcurrentHashMap::spread (10 bytes)   inline
                              @ 91   jdk.internal.misc.Unsafe::compareAndSetLong (0 bytes)   intrinsic
                              @ 115   java.util.concurrent.ConcurrentHashMap::sumCount (60 bytes)   failed to inline: callee is too large
                              @ 4   java.util.Set::isEmpty (0 bytes)   failed to inline: no static binding
                              @ 161   java.util.concurrent.ConcurrentHashMap::resizeStamp (9 bytes)   inline
                              @ 69   java.util.concurrent.ConcurrentHashMap::tabAt                                 (22 bytes)   failed to inline: callee uses too much stack
@ 1   java.lang.Integer::numberOfLeadingZeros (79 bytes)   failed to inline: callee is too large
                              @ 91   java.util.concurrent.ConcurrentHashMap$Node::<init> (20 bytes)   inline
                              @ 227   jdk.internal.misc.Unsafe::compareAndSetInt (0 bytes)   intrinsic
                                @ 1   java.lang.Object::<init> (1 bytes)   inline
                              @ 4   java.util.HashMap::keySet (25 bytes)   failed to inline: no static binding
                              @ 7   java.util.Set::iterator (0 bytes)   failed to inline: no static binding
                              @ 94   java.util.concurrent.ConcurrentHashMap::casTabAt (21 bytes)   failed to inline: callee uses too much stack
                              @ 2   java.util.HashMap::hash (20 bytes)   inline
               !m             @ 238   java.util.concurrent.ConcurrentHashMap::transfer (849 bytes)   failed to inline: callee is too large
                              @ 120                             java.util.concurrent.ConcurrentHashMap::    helpTransfer@ 257                        (124 bytes)   failed to inline: callee is too large
 jdk.internal.misc.Unsafe::           @ 9  compareAndSetInt java.lang.Object:: (0 bytes)   intrinsic
hashCode (0 bytes)   failed to inline: no static binding
               !m             @ 267   java.util.concurrent.ConcurrentHashMap::transfer (849 bytes)   failed to inline: callee is too large
                                           @ 271           java.util.concurrent.ConcurrentHashMap::         @ 9  sumCount java.util.HashMap:: (60 bytes)   failed to inline: callee is too large
putVal (300 bytes)   failed to inline: callee is too large
                              @ 15   java.util.Optional::<init> (10 bytes)   inline
                                @ 1   java.lang.Object::<init> (1 bytes)   inline
               !              @ 104   java.util.concurrent.ConcurrentHashMap::fullAddCount (462 bytes)   failed to inline: callee is too large
                              @ 17   java.lang.String::isLatin1 (19 bytes)   inline (hot)
                              @ 27   java.lang.StringLatin1::hashCode (52 bytes)   failed to inline: too big
                              @ 159   java.lang.Object::equals (11 bytes)   failed to inline: no static binding
                              @ 192   java.util.concurrent.ConcurrentHashMap::tabAt (22 bytes)   failed to inline: callee uses too much stack
                              @ 242   java.lang.Object::equals (11 bytes)   failed to inline: no static binding
                              @ 91                                @ 293  java/util/NoSuchElementException::<init> java.util.concurrent.ConcurrentHashMap$Node:: (not loaded)   failed to inline: not inlineable
<init> (20 bytes)   inline
                                @ 1   java.lang.Object::<init> (1 bytes)   inline
                              @ 1   java.lang.Object::<init> (1 bytes)   inline
                              @ 331  java/util/concurrent/ConcurrentHashMap$TreeBin::putTreeVal (not loaded)   failed to inline: not inlineable
                              @ 5   java.util.ImmutableCollections$Set12$1::<init> (32 bytes)   inline
                                @ 6   java.lang.Object::<init> (1 bytes)   inline
                              @ 374  java/lang/IllegalStateException::<init> (not loaded)   failed to inline: not inlineable
                              @ 1   java.util.AbstractMap::<init> (5 bytes)   inline
                                @ 1   java.lang.Object::<init> (1 bytes)   inline
                              @ 9   java.lang.Object::hashCode (0 bytes)   (intrinsic, virtual)
               !m             @ 409   java.util.concurrent.ConcurrentHashMap::treeifyBin (164 bytes)   failed to inline: callee is too large
                              @ 14   java.util.HashMap$KeySet::<init> (10 bytes)   inline
                              @ 427   java.util.concurrent.ConcurrentHashMap::addCount (280 bytes)   failed to inline: callee is too large
                              @ 1   java.util.AbstractCollection::<init> (5 bytes)   inline                                @ 6  
                              @ 8   java.util.HashMap$KeyIterator:: java.util.AbstractSet::<init><init> (6 bytes)   inline
                      (5 bytes)   inline
                                         !              @ 49                 @ 1   java.lang.Object::<init> (1 bytes)   inline
  @ 2   java.util.concurrent.ConcurrentHashMap:: java.util.HashMap$HashIterator::initTable<init> (79 bytes)   failed to inline: callee is too large
 (112 bytes)   failed to inline: callee is too large
                                  @ 1   java.util.AbstractCollection::<init> (5 bytes)   inline
                              @ 12   java.lang.NullPointerException::<init> (5 bytes)   failed to inline: don't inline Throwable constructors
                                    @ 1   java.lang.Object::<init> (1 bytes)   inline
                              @ 1   java.util.AbstractSet::<init> (5 bytes)   inline
                                @ 1   java.util.AbstractCollection::<init> (5 bytes)   inline
                                  @ 1   java.lang.Object::<init> (1 bytes)   inline
                              @ 2   java.util.HashMap$HashIterator::<init> (79 bytes)   failed to inline: callee is too large
                              @ 9   java.util.HashMap::<init> (11 bytes)   inline
                                @ 1   java.util.AbstractMap::<init> (5 bytes)   inline
                                  @ 1   java.lang.Object::<init> (1 bytes)   inline
                              @ 4   java.lang.module.ModuleReference::descriptor (5 bytes)   inline
                              @ 7   java.lang.module.ModuleDescriptor::name (5 bytes)   inline
                              @ 1   java.util.ImmutableCollections$AbstractImmutableCollection::<init> (5 bytes)   inline
                                @ 1   java.util.AbstractCollection::<init> (5 bytes)   inline
                                  @ 1   java.lang.Object::<init> (1 bytes)   inline
                              @ 9   java.util.HashMap$Node::<init> (26 bytes)   inline (hot)
                                @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 44   java.lang.StringLatin1::equals (36 bytes)   (intrinsic)
                              @ 8   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                @ 8   java.lang.NullPointerException::<init> (5 bytes)   failed to inline: don't inline Throwable constructors
                              @ 16   java.util.ImmutableCollections$MapN::probe (60 bytes)   failed to inline: callee is too large
                              @ 24   java.lang.AbstractStringBuilder::newCapacity (59 bytes)   failed to inline: callee is too large
                              @ 32   java.util.Arrays::copyOf (33 bytes)   failed to inline: callee uses too much stack
                              @ 2   java.lang.AbstractStringBuilder::inflateIfNeededFor (22 bytes)   inline
                              @ 11   java.lang.String::coder (15 bytes)   inline
                                @ 11   java.lang.String::coder (15 bytes)   inline
                              @ 18   java.lang.AbstractStringBuilder::inflate (42 bytes)   failed to inline: callee is too large
                                @ 18   java.lang.AbstractStringBuilder::inflate (42 bytes)   failed to inline: callee is too large
                              @ 15   java.lang.String::getBytes (44 bytes)   failed to inline: callee is too large
                              @ 11   java.lang.Object::clone (0 bytes)   failed to inline: no static binding
                              @ 48   jdk.internal.util.ArraysSupport::vectorizedHashCode (158 bytes)   failed to inline: callee is too large
                              @ 34   java.lang.StringBuilder::<init> (7 bytes)   inline
                                @ 3   java.lang.AbstractStringBuilder::<init> (39 bytes)   failed to inline: callee is too large
                              @ 38   java.lang.StringBuilder::                              append (8 bytes)   inline
@ 5   jdk.internal.util.ReferencedKeyMap::get (26 bytes)   inline
                              @ 1   java.lang.Object::<init> (1 bytes)   inline
                                                                               @ 1  @ 17   java.lang.Object:: java.lang.invoke.MethodType::<init><init> (1 bytes) (15 bytes)   inline
             @ 2                                  @ 3   java.lang.AbstractStringBuilder::   inline
append java.util.Objects:: (55 bytes)   failed to inline: callee is too large
requireNonNull (15 bytes)   force inline by annotation
                                @ 1   java.lang.Object::<init> (1 bytes)   inline
                              @ 44   java.lang.StringBuilder::append (8 bytes)   inline
                                  @ 9   java.lang.NullPointerException::<init> (6 bytes)   failed to inline: don't inline Throwable constructors
                                             @ 2                   @ 25   java.lang.AbstractStringBuilder:: jdk.internal.util.ReferencedKeySet::appendget (45 bytes)   failed to inline: callee is too large
 (27 bytes)   inline
                                @ 8   jdk.internal.util.ReferencedKeyMap::removeStaleReferences (30 bytes)   inline
                              @ 48   java.lang.StringBuilder::append (8 bytes)   inline
                                @ 5                                  @ 2   jdk.internal.util.ReferencedKeyMap:: java.lang.AbstractStringBuilder::getappend (26 bytes)   inline
 (55 bytes)   failed to inline: callee is too large
               !                  @ 4                      java.lang.ref.ReferenceQueue::           @ 51  poll                           (40 bytes)   failed to inline: no static binding
        @ 3   java.lang.StringBuilder:: java.util.Objects::toStringrequireNonNull (20 bytes)   inline
 (15 bytes)   force inline by annotation
                                @ 1   java.lang.StringBuilder::length (5 bytes)   inline
                                                            @ 8                       @ 20                       @ 1   jdk.internal.util.ReferencedKeyMap:: java.util.Map:: java.lang.AbstractStringBuilder::removeStaleReferencesremovelength (30 bytes)   failed to inline: callee is too large
 (0 bytes)   failed to inline: no static binding
 (5 bytes)   inline
                                             @ 17                       @ 17   jdk.internal.util.ReferencedKeyMap:: jdk.internal.util.ReferencedKeyMap::lookupKeylookupKey (9 bytes)   inline
 (9 bytes)   inline
                                @ 16   java.lang.String::<init> (98 bytes)   failed to inline: callee is too large
                                  @ 5   jdk.internal.util.StrongReferenceKey::<init> (10 bytes)   inline
                                    @ 5                                @ 54   jdk.internal.util.StrongReferenceKey:: java.lang.IllegalArgumentException::<init><init> (10 bytes)                                   inline
 (6 bytes)   failed to inline: don't inline Throwable constructors
    @ 1   java.lang.Object::<init> (1 bytes)   inline
                                      @ 1   java.lang.Object::<init> (1 bytes)   inline
                              @ 73   java.lang.Math::min (11 bytes)   inline
                                @ 20   java.util.Map::get (0 bytes)   failed to inline: no static binding
                                  @ 20                                @ 76   java.util.Map:: java.lang.System::getarraycopy (0 bytes)   failed to inline: no static binding
 (0 bytes)   intrinsic
                              @ 21   jdk.internal.util.ReferenceKey::get (0 bytes)   failed to inline: no static binding
                                @ 21   jdk.internal.util.ReferenceKey::get (0 bytes)   failed to inline: no static binding
                              @ 42   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                @ 8   java.lang.NullPointerException::<init> (5 bytes)   failed to inline: don't inline Throwable constructors
                              @ 51   java.lang.invoke.MethodType::checkPtypes (76 bytes)   failed to inline: callee is too large
                              @ 64   java.util.Arrays::copyOf (10 bytes)   inline
                                @ 3   java.lang.Object::getClass (0 bytes)   intrinsic
                                @ 6   java.util.Arrays::copyOf (40 bytes)   failed to inline: callee is too large
                              @ 72   java.lang.invoke.MethodType::checkPtypes (76 bytes)   failed to inline: callee is too large
                              @ 82   java.lang.invoke.MethodType::<init> (15 bytes)   inline
                                @ 1   java.lang.Object::<init> (1 bytes)   inline
                              @ 20   java.util.HashMap::resize (356 bytes)   failed to inline: too big
                              @ 56   java.util.HashMap::newNode (13 bytes)   inline (hot)
                              @ 56   java.util.LinkedHashMap::newNode (23 bytes)   inline (hot)
                               \-> TypeProfile (58/4666 counts) = java/util/LinkedHashMap
                               \-> TypeProfile (4608/4666 counts) = java/util/HashMap
                                @ 9   java.util.LinkedHashMap$Entry::<init> (10 bytes)   inline (hot)
                                  @ 6   java.util.HashMap$Node::<init> (26 bytes)   inline (hot)
                                    @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                @ 17   java.util.LinkedHashMap::linkNodeAtEnd (76 bytes)   failed to inline: too big
                                @ 9   java.util.HashMap$Node::<init> (26 bytes)   inline (hot)
                                  @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 91   java.lang.Object::equals (11 bytes)   failed to inline: virtual call
                              @ 152   java.util.HashMap::newNode (13 bytes)   inline (hot)
                              @ 152   java.util.LinkedHashMap::newNode (23 bytes)   inline (hot)
                               \-> TypeProfile (4/2664 counts) = java/util/LinkedHashMap
                               \-> TypeProfile (2660/2664 counts) = java/util/HashMap
                                @ 9   java.util.LinkedHashMap$Entry::<init> (10 bytes)   inline (hot)
                                  @ 6   java.util.HashMap$Node::<init> (26 bytes)   inline (hot)
                                    @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                @ 17   java.util.LinkedHashMap::linkNodeAtEnd (76 bytes)   failed to inline: too big
                                @ 9   java.util.HashMap$Node::<init> (26 bytes)   inline (hot)
                                  @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 253   java.util.HashMap::afterNodeAccess (1 bytes)   inline (hot)
                               \-> TypeProfile (18/18 counts) = java/util/HashMap
                              @ 288   java.util.HashMap::resize (356 bytes)   failed to inline: too big
                              @ 295   java.util.HashMap::afterNodeInsertion (1 bytes)   inline (hot)
                              @ 295   java.util.LinkedHashMap::afterNodeInsertion (40 bytes)   inline (hot)
                               \-> TypeProfile (62/7330 counts) = java/util/LinkedHashMap
                               \-> TypeProfile (7268/7330 counts) = java/util/HashMap
                                @ 15   java.util.LinkedHashMap::removeEldestEntry (2 bytes)   inline (hot)
                              @ 91   java.lang.invoke.MethodTypeForm::findForm (24 bytes)   inline
                                @ 2   java.lang.invoke.MethodTypeForm::canonicalize (59 bytes)   failed to inline: callee is too large
                                @ 15   java.lang.invoke.MethodTypeForm::<init> (322 bytes)   failed to inline: callee is too large
                                @ 20   java.lang.invoke.MethodType::form (5 bytes)   inline
                              @ 102   jdk.internal.util.ReferencedKeySet::intern (9 bytes)   inline
                                @ 5   jdk.internal.util.ReferencedKeyMap::intern (18 bytes)   inline
                                  @ 2   jdk.internal.util.ReferencedKeyMap::existingKey (32 bytes)   failed to inline: callee is too large
                                  @ 14   jdk.internal.util.ReferencedKeyMap::internKey (57 bytes)   failed to inline: callee is too large
                              @ 17   java.lang.invoke.MethodType::genericMethodType (95 bytes)   failed to inline: callee is too large
                              @ 23   java.lang.invoke.MethodType::isAllObject (25 bytes)   inline
                              @ 45   java.lang.invoke.MethodType::genericMethodType (95 bytes)   failed to inline: callee is too large
                              @ 58   java.lang.invoke.MethodType::genericMethodType (95 bytes)   failed to inline: callee is too large
                              @ 65   java.lang.invoke.MethodType::makeImpl (109 bytes)   failed to inline: callee is too large
                                                        @ 4      @ 1   java.lang.String:: java.lang.String::hashCodelength (60 bytes)   failed to inline: callee is too large
 (11 bytes)   inline
                                @ 6   java.lang.String::coder (15 bytes)   inline
                              @ 17   java.lang.IllegalArgumentException::<init> (6 bytes)   failed to inline: don't inline Throwable constructors
                              @ 1   java.lang.Object::<init> (1 bytes)   inline
                              @ 43   jdk.internal.org.objectweb.asm.ByteVector::enlarge (73 bytes)   failed to inline: callee is too large
                              @ 85   java.lang.String::charAt (25 bytes)   inline
                                @ 1   java.lang.String::isLatin1 (19 bytes)   inline
                              @ 18   jdk.internal.org.objectweb.asm.ByteVector::enlarge (73 bytes)   failed to inline: callee is too large
                              @ 18   jdk.internal.util.Preconditions::outOfBoundsCheckFromToIndex (32 bytes)   failed to inline: callee uses too much stack
                              @ 2   jdk.internal.org.objectweb.asm.SymbolTable::hash (10 bytes)   inline
                                @ 4   java.lang.String::hashCode (60 bytes)   failed to inline: callee is too large
                                @ 12   java.lang.StringLatin1::                          charAt     (15 bytes)   inline
@ 8   jdk.internal.org.objectweb.asm.SymbolTable::get (13 bytes)   inline
                              @ 37   java.lang.String::equals (56 bytes)   failed to inline: callee is too large
                                  @ 3   java.lang.String::checkIndex (10 bytes)   inline
                              @ 61   jdk.internal.org.objectweb.asm.ByteVector::putByte (39 bytes)   failed to inline: callee is too large
                              @ 7   jdk.internal.org.objectweb.asm.Symbol::<init> (38 bytes)   failed to inline: callee is too large
                              @ 65   jdk.internal.org.objectweb.asm.ByteVector::putUTF8 (144 bytes)   failed to inline: callee is too large
                                    @ 5   jdk.internal.util.Preconditions::checkIndex                               (18 bytes)@ 88   jdk.internal.org.objectweb.asm.SymbolTable$Entry::   intrinsic
<init> (17 bytes)   failed to inline: callee uses too much stack
                              @ 91   jdk.internal.org.objectweb.asm.SymbolTable::put (150 bytes)   failed to inline: callee is too large
                                @ 21  java/lang/StringUTF16::charAt (not loaded)   failed to inline: not inlineable
                              @ 127   jdk.internal.org.objectweb.asm.ByteVector::encodeUtf8 (337 bytes)   failed to inline: callee is too large
                              @ 6   jdk.internal.util.Preconditions::checkFromToIndex (24 bytes)   inline
                                @ 18   jdk.internal.util.Preconditions::outOfBoundsCheckFromToIndex (32 bytes)   failed to inline: callee is too large
                              @ 1   java.lang.String::length (11 bytes)   inline
                                @ 6   java.lang.String::coder (15 bytes)   inline
                              @ 8   java.lang.String::checkBoundsBeginEnd (11 bytes)   inline
                                @ 6   jdk.internal.util.Preconditions::checkFromToIndex (24 bytes)   inline
                              @ 16   java.util.Arrays::copyOfRange (82 bytes)   failed to inline: callee is too large
                                  @ 18   jdk.internal.util.Preconditions::outOfBoundsCheckFromToIndex (32 bytes)   failed to inline: callee is too large
                              @ 20   java.lang.String::<init> (15 bytes)   inline
                              @ 28   java.lang.String::isLatin1 (19 bytes)   inline
                                @ 1   java.lang.Object::<init> (1 bytes)   inline
                              @ 1   java.lang.StringLatin1::canEncode                              @ 41   (17 bytes)   inline
 java.lang.StringLatin1::newString (24 bytes)   failed to inline: callee uses too much stack
                              @ 54  java/lang/StringUTF16::newString (not loaded)   failed to inline: not inlineable
                                                        @ 13   java.lang.StringLatin1::    @ 1  indexOfChar (33 bytes)   inline java.lang.AbstractStringBuilder::
length (5 bytes)   inline
                              @ 1   java.lang.String::isLatin1 (19 bytes)   inline (hot)
                              @ 12   java.lang.StringLatin1::charAt (15 bytes)   inline (hot)
                                @ 3   java.lang.String::checkIndex (10 bytes)   inline (hot)
                                  @ 5   jdk.internal.util.Preconditions::checkIndex (18 bytes)   (intrinsic)
                              @ 18   jdk.internal.org.objectweb.asm.ByteVector::enlarge (73 bytes)   failed to inline: callee is too large
                              @ 8   java.lang.invoke.MemberName::expandFromVM (21 bytes)   inline
                                @ 9   java.lang.invoke.MemberName::isResolved (13 bytes)   inline
                                @ 17   java.lang.invoke.MethodHandleNatives::expand (0 bytes)   failed to inline: native method
                              @ 21   java.lang.invoke.MemberName::isInvocable (8 bytes)   inline
                                @ 4   java.lang.invoke.MemberName::anyFlagSet (15 bytes)   inline
                              @ 29   java.lang.invoke.MethodHandleStatics::newIllegalArgumentException (9 bytes)   inline
                                @ 5   java.lang.IllegalArgumentException::<init> (6 bytes)   failed to inline: don't inline Throwable constructors
                              @ 78   java.lang.invoke.MemberName::getClassLoader (8 bytes)   inline
                                @ 4   java.lang.Class::getClassLoader (28 bytes)   force inline by annotation
                                  @ 11   java.lang.System::getSecurityManager (12 bytes)   inline
                                    @ 0   java.lang.System::allowSecurityManager (13 bytes)   inline
                              @ 81   java.lang.invoke.MethodType::fromDescriptor (90 bytes)   failed to inline: callee is too large
                              @ 136   java.lang.invoke.MethodType::methodType (69 bytes)   failed to inline: callee is too large
                              @ 2   java.lang.AbstractStringBuilder::append (45 bytes)   failed to inline: callee is too large
                              @ 5   java.lang.AbstractStringBuilder::appendNull (83 bytes)   failed to inline: callee is too large
                              @ 10   java.lang.String::length (11 bytes)   inline
                                @ 6   java.lang.String::coder (15 bytes)   inline
                              @ 10   java.lang.Class::isArray (0 bytes)   failed to inline: native method
                              @ 17   java.lang.Class::elementType (28 bytes)   inline
                                @ 1   java.lang.Class::isArray (0 bytes)   failed to inline: native method
                              @ 21   java.lang.AbstractStringBuilder::ensureCapacityInternal (39 bytes)   failed to inline: callee is too large
                                @ 12   java.lang.Class::isArray (0 bytes)   failed to inline: native method
                              @ 30   java.lang.AbstractStringBuilder::             putStringAt                    (19 bytes)   inline
@ 19   java.lang.Class::getComponentType (14 bytes)   inline
                                @ 2   java.lang.AbstractStringBuilder::inflateIfNeededFor              (22 bytes)   inline
                     @ 1   java.lang.Class::isArray (0 bytes)   failed to inline: native method
                                  @ 11   java.lang.String::coder (15 bytes)   inline
                              @ 26   java.lang.Class::isPrimitive (0 bytes)   intrinsic
                              @ 40   java.lang.Class::getName (18 bytes)   inline
                                  @ 18   java.lang.AbstractStringBuilder::inflate (42 bytes)   failed to inline: callee is too large
                                @ 14   java.lang.Class::initClassName (0 bytes)   failed to inline: native method
                                @ 15   java.lang.String::getBytes (44 bytes)   failed to inline: callee is too large
                              @ 47   java.lang.String::lastIndexOf (12 bytes)   inline
                                @ 3   java.lang.String::length (11 bytes)   inline
                                  @ 6   java.lang.String::coder (15 bytes)   inline
                                @ 8   java.lang.String::lastIndexOf (29 bytes)   inline
                                  @ 1   java.lang.String::isLatin1 (19 bytes)   inline
                              @ 1   java.lang.StringLatin1::canEncode (13 bytes)   inline
                              @ 1   java.lang.Object::<init> (1 bytes)   inline
                                  @ 13   java.lang.StringLatin1::lastIndexOf (40 bytes)   failed to inline: callee is too large
                                  @ 25  java/lang/StringUTF16::lastIndexOf (not loaded)   failed to inline: not inlineable
                              @ 41   java.lang.StringLatin1::canEncode (13 bytes)   inline
                              @ 62   java.lang.String::substring (58 bytes)   failed to inline: callee is too large
                              @ 49   java.lang.StringConcatHelper::newArray (40 bytes)   force inline by annotation
                              @ 65   java.lang.String::intern (0 bytes)   failed to inline: native method
                              @ 51   jdk.internal.util.ArraysSupport::signedHashCode (37 bytes)   failed to inline: callee is too large
                                @ 22   java.lang.OutOfMemoryError::<init> (6 bytes)   failed to inline: don't inline Throwable constructors
                              @ 71   jdk.internal.util.ArraysSupport::utf16hashCode (40 bytes)   failed to inline: callee is too large
                              @ 84   jdk.internal.util.ArraysSupport::hashCode (33 bytes)   failed to inline: callee uses too much stack
                              @ 97   jdk.internal.util.ArraysSupport::hashCode (33 bytes)   failed to inline: callee uses too much stack
                                @ 33   jdk.internal.misc.Unsafe::                              allocateUninitializedArray (55 bytes)   failed to inline: callee is too large        @ 2        java.lang.AbstractStringBuilder::      append           @ 110   (77 bytes)   failed to inline: callee is too large

 jdk.internal.util.ArraysSupport::hashCode (33 bytes)   failed to inline: callee uses too much stack
                              @ 123   jdk.internal.util.ArraysSupport::hashCode (33 bytes)   failed to inline: callee uses too much stack
                              @ 137   java.lang.StringBuilder::<init> (7 bytes)   inline
                                @ 3   java.lang.AbstractStringBuilder::<init> (39 bytes)   failed to inline: callee is too large
                              @ 142   java.lang.StringBuilder::append (8 bytes)   inline
                                @ 2   java.lang.AbstractStringBuilder::append (45 bytes)   failed to inline: callee is too large
                              @ 123   java.lang.String::<init>                               (15 bytes)@ 147   java.lang.StringBuilder::append   inline
 (8 bytes)   inline
                                @ 2   java.lang.AbstractStringBuilder::append (55 bytes)   failed to inline: callee is too large
                                @ 1   java.lang.Object::             <init>                 @ 150   java.lang.StringBuilder::toString (1 bytes)   inline
 (20 bytes)   inline
                                @ 1   java.lang.StringBuilder::length (5 bytes)   inline
                                  @ 1   java.lang.AbstractStringBuilder::length (5 bytes)   inline
                              @ 128  java/lang/StringUTF16::newBytesFor (not loaded)   failed to inline: not inlineable
                              @ 7   java.lang.AbstractStringBuilder::ensureCapacityInternal (39 bytes)   failed to inline: callee is too large
                                @ 16   java.lang.String::<init> (98 bytes)   failed to inline: callee is too large
                              @ 140   java.lang.StringLatin1::inflate (10 bytes)   failed to inline: callee uses too much stack
                              @ 153   java.lang.IllegalArgumentException::<init> (6 bytes)   failed to inline: don't inline Throwable constructors
                              @ 11   java.lang.AbstractStringBuilder::isLatin1 (19 bytes)   inline
                              @ 176  java/lang/StringUTF16::putChar (not loaded)   failed to inline: not inlineable
                              @ 192   java.lang.String::<init> (15 bytes)   inline
                              @ 1                java.lang.String::                   @ 1  isLatin1 java.lang.Object:: (19 bytes)   inline
<init> (1 bytes)   inline
                              @ 18   java.lang.StringLatin1::canEncode (13 bytes)   inline
                              @ 18   java.lang.StringLatin1::indexOf (17 bytes)   inline
                              @ 46   java.lang.AbstractStringBuilder::isLatin1 (19 bytes)   inline
                                @ 1   java.lang.StringLatin1::canEncode (17 bytes)   inline
                              @ 53   java.lang.AbstractStringBuilder::inflate (42 bytes)   failed to inline: callee is too large
                              @ 72  java/lang/StringUTF16::putCharSB (not loaded)   failed to inline: not inlineable
                                @ 13   java.lang.StringLatin1::indexOfChar (33 bytes)   failed to inline: callee is too large
                              @ 37  java/lang/StringUTF16::indexOf (not loaded)   failed to inline: not inlineable
                              @ 9   jdk.internal.foreign.layout.ValueLayouts$AbstractValueLayout::self (2 bytes)   inline
                              @ 16   jdk.internal.util.Preconditions::outOfBoundsCheckIndex (25 bytes)   failed to inline: callee uses too much stack
                              @ 15   jdk.internal.foreign.Utils::makeSegmentViewVarHandle (239 bytes)   failed to inline: callee is too large
                              @ 11   java.lang.Thread::             currentThread              (0 bytes)   intrinsic
    @ 12   java.lang.invoke.VarHandle::accessModeType (41 bytes)   force inline by annotation
                              @ 13   java.lang.invoke.VarForm::resolveMemberName (60 bytes)   failed to inline: don't inline by annotation
                                @ 33   java.lang.invoke.VarHandle::accessModeTypeUncached (10 bytes)   inline
                              @ 26   java.lang.invoke.VarHandle$AccessMode::valueFromOrdinal (6 bytes)   inline
                                  @ 1   java.lang.invoke.VarHandle$AccessType::values (10 bytes)   inline
                              @ 29                             java.lang.invoke.VarHandle$AccessMode::      methodName    @ 3   (5 bytes)   inline
 java.lang.Object::clone (0 bytes)   failed to inline: no static binding
                              @ 32                                    @ 6   java.lang.invoke.VarHandle::java/lang/UnsupportedOperationExceptionaccessModeTypeUncached (0 bytes)   failed to inline: no static binding::
<init> (not loaded)   failed to inline: not inlineable
                              @ 16                      jdk.internal.util.Preconditions::           checkIndex@ 24   java.lang.invoke.VarHandle:: (22 bytes)   intrinsic
throwWrongMethodTypeException (46 bytes)   failed to inline: don't inline by annotation
                              @ 49   jdk.internal.foreign.AbstractMemorySegmentImpl::outOfBoundException (36 bytes)   failed to inline: callee is too large
                              @ 1   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                @ 8   java.lang.NullPointerException::<init> (5 bytes)   failed to inline: don't inline Throwable constructors
                              @ 15   jdk.internal.foreign.AbstractMemorySegmentImpl::checkAccess (30 bytes)   force inline by annotation
                                @ 19   java.lang.IllegalArgumentException::<init> (6 bytes)   failed to inline: don't inline Throwable constructors
                                @ 26   jdk.internal.foreign.AbstractMemorySegmentImpl::checkBounds (54 bytes)   force inline by annotation
                                  @ 16   jdk.internal.util.Preconditions::checkIndex (22 bytes)   intrinsic
                                  @ 49   jdk.internal.foreign.AbstractMemorySegmentImpl::outOfBoundException (36 bytes)   failed to inline: callee is too large
                              @ 19   java.lang.IllegalArgumentException::<init> (6 bytes)   failed to inline: don't inline Throwable constructors
                              @ 26   jdk.internal.foreign.AbstractMemorySegmentImpl::checkBounds (54 bytes)   force inline by annotation
                              @ 1   jdk.internal.foreign.AbstractMemorySegmentImpl::unsafeGetOffset (0 bytes)   failed to inline: no static binding
                                @ 16   jdk.internal.util.Preconditions::checkIndex (22 bytes)   intrinsic
                                @ 49   jdk.internal.foreign.AbstractMemorySegmentImpl::outOfBoundException (36 bytes)   failed to inline: callee is too large
                              @ 13   jdk.internal.foreign.AbstractMemorySegmentImpl::maxAlignMask (0 bytes)   failed to inline: no static binding
                              @ 5   jdk.internal.foreign.MemorySessionImpl::               !              @ 6  checkValidStateRaw (33 bytes) jdk.internal.misc.ScopedMemoryAccess::   force inline by annotation
putByteInternal (35 bytes)   force inline by annotation
                              @ 32   java.lang.invoke.VarHandleSegmentViewBase::newIllegalArgumentExceptionForMisalignedAccess (30 bytes)   failed to inline: callee uses too much stack
                                                   @ 5              jdk.internal.foreign.MemorySessionImpl::  checkValidStateRaw@ 11   (33 bytes)   force inline by annotation
 java.lang.Thread::currentThread (0 bytes)   intrinsic
                              @ 1   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetBase (11 bytes)   inline
                                @ 4   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                              @ 15   jdk.internal.misc.Unsafe::putByte (0 bytes)   intrinsic
                                  @ 8   java.lang.NullPointerException::<init>              (5 bytes)   failed to inline: don't inline Throwable constructors
                 @ 28   java.lang.ref.Reference::reachabilityFence (1 bytes)   force inline by annotation
                                  @ 11   java.lang.Thread::currentThread (0 bytes)   intrinsic
                              @ 19   java.lang.ref.Reference::reachabilityFence (1 bytes)   force inline by annotation
                                @ 15   jdk.internal.misc.Unsafe::putByte (0 bytes)   intrinsic
                                @ 28   java.lang.ref.Reference::reachabilityFence (1 bytes)   force inline by annotation
                                @ 19   java.lang.ref.Reference::reachabilityFence (1 bytes)   force inline by annotation
                              @ 16   jdk.internal.misc.ScopedMemoryAccess$ScopedAccessError::newRuntimeException (13 bytes)   inline
                                @ 4   java.util.function.Supplier::get (0 bytes)   failed to inline: no static binding
                              @ 1   jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat::unsafeGetBase (11 bytes)   inline
                                @ 4   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                                            @ 8      @ 4   java.lang.NullPointerException:: java.util.Objects::<init>requireNonNull (5 bytes)   failed to inline: don't inline Throwable constructors
 (14 bytes)   force inline by annotation
                                @ 8   java.lang.NullPointerException::<init> (5 bytes)   failed to inline: don't inline Throwable constructors
                              @ 1   jdk.internal.foreign.layout.ValueLayouts$AbstractValueLayout::varHandle (26 bytes)   force inline by annotation
                                @ 9   jdk.internal.foreign.layout.ValueLayouts$AbstractValueLayout::self (2 bytes)   inline
                                @ 15   jdk.internal.foreign.Utils::makeSegmentViewVarHandle (239 bytes)   failed to inline: callee is too large
                              @ 3   java.lang.invoke.VarHandle::checkAccessModeThenIsDirect (29 bytes)   force inline by annotation
                                             !                  @ 14                    java.lang.invoke.VarHandleSegmentAsBytes::@ 4           checkAddress jdk.internal.misc.ScopedMemoryAccess::@ 8   (21 bytes)   force inline by annotation
getByteInternal java.lang.invoke.VarHandleGuards:: (34 bytes)   force inline by annotation
guard_LJ_I                              @ 1   (84 bytes)                force inline by annotation jdk.internal.foreign.HeapMemorySegmentImpl::
        unsafeGetOffset          (5 bytes)   inline
  @ 1   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                @ 5   jdk.internal.foreign.MemorySessionImpl::checkValidStateRaw (33 bytes)   force inline by annotation
                                @ 3   java.lang.invoke.VarHandle::                                @ 12  checkAccessModeThenIsDirect (29 bytes)   force inline by annotation
 java.lang.invoke.VarHandle::                     accessModeType             @ 8   (41 bytes)   force inline by annotation
 java.lang.NullPointerException::<init> (5 bytes)   failed to inline: don't inline Throwable constructors
                                  @ 11   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                  @ 12   java.lang.invoke.VarHandle::accessModeType (41 bytes)   force inline by annotation
                                @ 15   jdk.internal.foreign.AbstractMemorySegmentImpl::checkAccess (30 bytes)   force inline by annotation
                                                                  @ 26  @ 13   jdk.internal.foreign.AbstractMemorySegmentImpl:: jdk.internal.misc.Unsafe::checkBoundsgetByte (54 bytes)   force inline by annotation
 (0 bytes)   intrinsic
                                @ 28   java.lang.ref.Reference::reachabilityFence (1 bytes)   force inline by annotation
                                    @ 33   java.lang.invoke.VarHandle::accessModeTypeUncached (10 bytes)   inline
                                @ 19   java.lang.ref.Reference::reachabilityFence (1 bytes)   force inline by annotation
                                                            @ 4       jdk.incubator.vector.ByteVector::    @ 1  memorySegmentGet                                      @ 12                         jdk.internal.misc.ScopedMemoryAccess$ScopedAccessError:: (16 bytes)   failed to inline: callee uses too much stack
newRuntimeException      @ 16                                    @ 33   jdk.internal.util.Preconditions:: java.lang.invoke.VarHandle$AccessType:: (13 bytes)   inline
checkIndexvalues (10 bytes)   inline
 (22 bytes)   intrinsic
 java.lang.invoke.VarHandle::accessModeTypeUncached (10 bytes)   inline
                                @ 4   java.util.function.Supplier::get (0 bytes)   failed to inline: no static binding
                                        @ 3   java.lang.Object::clone (0 bytes)   failed to inline: no static binding
                                    @ 1   java.lang.invoke.VarHandle$AccessType::values (10 bytes)   inline
                                                                      @ 49      @ 6   jdk.internal.foreign.AbstractMemorySegmentImpl:: java.lang.invoke.VarHandle::outOfBoundExceptionaccessModeTypeUncached (36 bytes)   failed to inline: callee is too large
 (0 bytes)   failed to inline: no static binding
                                      @ 3   java.lang.Object::clone                              @ 24   jdk.internal.foreign.AbstractMemorySegmentImpl:: (0 bytes)sessionImpl (5 bytes)   force inline by annotation
   failed to inline: no static binding
                                  @ 24   java.lang.invoke.VarHandle::throwWrongMethodTypeException (46 bytes)   failed to inline: don't inline by annotation
                              @ 29   jdk.internal.foreign.AbstractMemorySegmentImpl::unsafeGetBase (0 bytes)   failed to inline: no static binding
                              @ 40   java.lang.invoke.VarHandleSegmentAsBytes::offsetPlain (39 bytes)   force inline by annotation
                                             @ 46   java.lang.invoke.VarForm::        getMemberName          (38 bytes)   force inline by annotation
  @ 1   jdk.internal.foreign.AbstractMemorySegmentImpl::unsafeGetOffset (0 bytes)   failed to inline: no static binding
                                    @ 6                                   java.lang.invoke.VarHandle::@ 13  accessModeTypeUncached jdk.internal.foreign.AbstractMemorySegmentImpl::maxAlignMask (0 bytes)   failed to inline: no static binding
 (0 bytes)   failed to inline: no static binding
                                  @ 13   java.lang.invoke.VarForm::resolveMemberName (60 bytes)   failed to inline: don't inline by annotation
                                @ 32   java.lang.invoke.VarHandleSegmentViewBase::newIllegalArgumentExceptionForMisalignedAccess (30 bytes)   failed to inline: callee uses too much stack
                                  @ 26   java.lang.invoke.VarHandle$AccessMode::valueFromOrdinal (6 bytes)   inline
               !              @ 43   jdk.internal.misc.ScopedMemoryAccess::getByte (16 bytes)   force inline by annotation
               !                @ 4   jdk.internal.misc.ScopedMemoryAccess::getByteInternal (34 bytes)   force inline by annotation
                                  @ 29   java.lang.invoke.VarHandle$AccessMode::methodName (5 bytes)   inline
                                               @ 32                                                            @ 24  java/lang/UnsupportedOperationException::        @ 5                   @ 1  <init> (not loaded) java.lang.invoke.VarHandle:: java.util.concurrent.ThreadLocalRandom::throwWrongMethodTypeException jdk.internal.foreign.MemorySessionImpl::   failed to inline: not inlineable
 (46 bytes)   failed to inline: don't inline by annotation
checkValidStateRawnextSeed (33 bytes)   force inline by annotation
 (39 bytes)   failed to inline: callee is too large
                                           @ 4           java.util.concurrent.ThreadLocalRandom::         mix32  @ 49   java.lang.invoke.MethodHandle:: (26 bytes)   failed to inline: callee uses too much stack
linkToStatic(LLJL)I (0 bytes)   failed to inline: MemberName not constant
                                @ 59                                @ 3   java.lang.invoke.VarHandle::                                    @ 11   java.lang.Thread::getMethodHandle (41 bytes)   force inline by annotation
currentThread (0 bytes)   intrinsic java.lang.Thread::
currentThread (0 bytes)   intrinsic
                              @ 18   jdk.internal.misc.Unsafe::getLong (0 bytes)   intrinsic
                                                            @ 46  @ 22   java.lang.Thread::threadId (5 bytes)   inline java.lang.invoke.VarForm::
getMemberName (38 bytes)   force inline by annotation
                                  @ 13   jdk.internal.misc.Unsafe::getByte (0 bytes)   intrinsic
                              @ 34   jdk.internal.misc.Unsafe::putLong (0 bytes)   intrinsic
                                  @ 33   java.lang.invoke.VarHandle::getMethodHandleUncached (85 bytes)   failed to inline: callee is too large
                                  @ 28   java.lang.ref.Reference::reachabilityFence (1 bytes)   force inline by annotation
                                  @ 19   java.lang.ref.Reference::                                             @ 13  reachabilityFence         java.lang.invoke.VarForm:: (1 bytes)resolveMemberName   force inline by annotation
 (60 bytes)   failed to inline: don't inline by annotation
           @ 71   java.lang.invoke.MethodHandle::asType (32 bytes)   failed to inline: callee is too large
                                @ 12   jdk.internal.misc.ScopedMemoryAccess$ScopedAccessError::newRuntimeException (13 bytes)   inline
                                @ 75   java.lang.invoke.VarHandle::asDirect (2 bytes)   force inline by annotation
                                @ 26                                    @ 4   java.util.function.Supplier::get java.lang.invoke.VarHandle$AccessMode:: (0 bytes)valueFromOrdinal   failed to inline: no static binding
 (6 bytes)   inline
                                @ 80   java.lang.invoke.MethodHandle::invokeBasic(LLJ)I (0 bytes)   failed to inline: receiver not constant
                                @ 29   java.lang.invoke.VarHandle$AccessMode::methodName (5 bytes)   inline
                              @ 4   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                           @ 1                     @ 8                                  @ 32   java.lang.NullPointerException::java/lang/UnsupportedOperationException jdk.internal.foreign.HeapMemorySegmentImpl::<init> (5 bytes)   failed to inline: don't inline Throwable constructors
unsafeGetOffset::              (5 bytes)<init>   inline
 (not loaded)   failed to inline: not inlineable
                 @ 6   jdk.incubator.vector.ByteVector::memorySegmentSet (18 bytes)   failed to inline: callee uses too much stack
                              @ 49   java.lang.invoke.MethodHandle::linkToStatic(LLJL)I (0 bytes)   failed to inline: MemberName not constant
                              @ 59   java.lang.invoke.VarHandle::getMethodHandle (41 bytes)   force inline by annotation
                              @ 1   jdk.internal.foreign.layout.ValueLayouts$AbstractValueLayout::varHandle (26 bytes)   force inline by annotation
                              @ 12   jdk.internal.foreign.AbstractMemorySegmentImpl::set (14 bytes)   force inline by annotation
                                @ 33   java.lang.invoke.VarHandle::                     getMethodHandleUncached              (85 bytes)   failed to inline: callee is too large
                              @ 9  @ 1   jdk.internal.foreign.layout.ValueLayouts$AbstractValueLayout:: jdk.internal.foreign.layout.ValueLayouts$AbstractValueLayout::selfvarHandle (2 bytes)   inline
 (26 bytes)   force inline by annotation
                                @ 15   jdk.internal.foreign.Utils::makeSegmentViewVarHandle (239 bytes)   failed to inline: callee is too large
                              @ 71   java.lang.invoke.MethodHandle::asType (32 bytes)   inline
                                @ 10   java.lang.invoke.VarHandleGuards::guard_LJI_V (138 bytes)   force inline by annotation
                              @ 10   java.lang.invoke.VarHandleGuards::guard_LJI_V (138 bytes)   force inline by annotation
                              @ 4   java.lang.invoke.MethodHandle::invokeBasic()L (0 bytes)   failed to inline: receiver not constant
                                  @ 3   java.lang.invoke.VarHandle::checkAccessModeThenIsDirect (29 bytes)   force inline by annotation
                                @ 3   java.lang.invoke.VarHandle::checkAccessModeThenIsDirect (29 bytes)   force inline by annotation
                                @ 12   java.lang.invoke.MethodHandle::asTypeCached (52 bytes)   failed to inline: callee is too large
                                  @ 12   java.lang.invoke.VarHandle::accessModeType (41 bytes)   force inline by annotation
                                                                  @ 25  @ 48   java.lang.invoke.VarForm:: java.lang.invoke.MethodHandle::getMemberName (38 bytes)   force inline by annotation
asTypeUncached (54 bytes)   failed to inline: no static binding
                                @ 28   java.lang.invoke.MethodHandle::setAsTypeCache (33 bytes)   failed to inline: callee is too large
                                    @ 33   java.lang.invoke.VarHandle::accessModeTypeUncached (10 bytes)   inline
                                  @ 51   java.lang.invoke.VarHandleSegmentAsBytes::set (49 bytes)   force inline by annotation
                                      @ 1   java.lang.invoke.VarHandle$AccessType::values (10 bytes)   inline
                              @ 75   java.lang.invoke.VarHandle::asDirect (2 bytes)   force inline by annotation
                                    @ 14   java.lang.invoke.VarHandleSegmentAsBytes::checkAddress (21 bytes)                                        @ 3   java.lang.Object::   force inline by annotation
clone (0 bytes)   failed to inline: no static binding
                              @ 80   java.lang.invoke.MethodHandle::invokeBasic(LLJ)I              (0 bytes)   failed to inline: receiver not constant
                         @ 1   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                      @ 6   java.lang.invoke.VarHandle::accessModeTypeUncached (0 bytes)   failed to inline: no static binding
                                        @ 8   java.lang.NullPointerException::<init> (5 bytes)   failed to inline: don't inline Throwable constructors
                                  @ 24   java.lang.invoke.VarHandle::throwWrongMethodTypeException (46 bytes)   failed to inline: don't inline by annotation
                                      @ 15   jdk.internal.foreign.AbstractMemorySegmentImpl::checkAccess (30 bytes)   force inline by annotation
                                @ 48   java.lang.invoke.VarForm::getMemberName (38 bytes)   force inline by annotation
                                  @ 13   java.lang.invoke.VarForm::resolveMemberName (60 bytes)   failed to inline: don't inline by annotation
                                                                              @ 19            java.lang.IllegalArgumentException::               <init>@ 3   java.lang.invoke.VarHandle:: (6 bytes)   failed to inline: don't inline Throwable constructors
  @ 26   java.lang.invoke.VarHandle$AccessMode::checkAccessModeThenIsDirectvalueFromOrdinal (29 bytes)   force inline by annotation
 (6 bytes)   inline
                                                     @ 26         jdk.internal.foreign.AbstractMemorySegmentImpl::                    checkBounds               (54 bytes)   force inline by annotation
@ 12   java.lang.invoke.VarHandle::         accessModeType     (41 bytes)   force inline by annotation
@ 29   java.lang.invoke.VarHandle$AccessMode::methodName (5 bytes)   inline
                                  @ 32  java/lang/UnsupportedOperationException::<init> (not loaded)   failed to inline: not inlineable
                                @ 51   java.lang.invoke.MethodHandle::linkToStatic(LLJIL)V (0 bytes)   failed to inline: MemberName not constant
                                  @ 33                java.lang.invoke.VarHandle::             accessModeTypeUncached       (10 bytes)   inline    
      @ 16   jdk.internal.util.Preconditions::checkIndex (22 bytes)   intrinsic
                                @ 71   java.lang.invoke.VarForm::getMethodType_V (18 bytes)   force inline by annotation
                                    @ 1   java.lang.invoke.VarHandle$AccessType::values (10 bytes)   inline
                                      @ 3   java.lang.Object::clone              (0 bytes)   failed to inline: no static binding
                     @ 10   java.lang.invoke.VarForm::getMethodType_V_init (49 bytes)   force inline by annotation
                                    @ 24   jdk.internal.foreign.AbstractMemorySegmentImpl::             sessionImpl         (5 bytes)   force inline by annotation
               @ 0   java.lang.invoke.VarHandle$AccessType::values (10 bytes)   inline
                                    @ 6   java.lang.invoke.VarHandle::accessModeTypeUncached (0 bytes)   failed to inline: no static binding
                                      @ 3   java.lang.Object::clone (0 bytes)   failed to inline: no static binding
                                    @ 29   jdk.internal.foreign.AbstractMemorySegmentImpl::unsafeGetBase (0 bytes)   failed to inline: no static binding
                                                                    @ 24  @ 40   java.lang.invoke.VarHandle:: java.lang.invoke.VarHandleSegmentAsBytes::throwWrongMethodTypeExceptionoffsetPlain (46 bytes)   failed to inline: don't inline by annotation
 (39 bytes)   force inline by annotation
                                      @ 1   jdk.internal.foreign.AbstractMemorySegmentImpl::unsafeGetOffset (0 bytes)   failed to inline: no static binding
                                      @ 13   jdk.internal.foreign.AbstractMemorySegmentImpl::maxAlignMask (0 bytes)   failed to inline: no static binding
                                    @ 32   java.lang.invoke.MethodType::changeReturnType (20 bytes)                inline
                 @ 48   java.lang.invoke.VarForm::getMemberName (38 bytes)   force inline by annotation
                                      @ 1   java.lang.invoke.MethodType::returnType (5 bytes)   inline
               !                    @ 45                jdk.internal.misc.ScopedMemoryAccess::             putByte      @ 13   (21 bytes)   force inline by annotation
 java.lang.invoke.VarForm::resolveMemberName (60 bytes)   failed to inline: don't inline by annotation
               !                      @ 6   jdk.internal.misc.ScopedMemoryAccess::             putByteInternal              (35 bytes)   force inline by annotation
      @ 26   java.lang.invoke.VarHandle$AccessMode::valueFromOrdinal (6 bytes)   inline
                                      @ 16   java.lang.invoke.MethodType::methodType (69 bytes)   failed to inline: callee is too large
                                @ 29   java.lang.invoke.VarHandle$AccessMode::methodName (5 bytes)   inline
                                        @ 5   jdk.internal.foreign.MemorySessionImpl::checkValidStateRaw (33 bytes)   force inline by annotation
                                @ 32  java/lang/UnsupportedOperationException::<init> (not loaded)   failed to inline: not inlineable
                                @ 96   java.lang.invoke.VarForm::getMemberName (38 bytes)   force inline by annotation
                                  @ 13   java.lang.invoke.VarForm::             resolveMemberName                  (60 bytes)   failed to inline: don't inline by annotation
@ 51   java.lang.invoke.MethodHandle::linkToStatic(LLJIL)V (0 bytes)   failed to inline: MemberName not constant
                                                             @ 26   java.lang.invoke.VarHandle$AccessMode::valueFromOrdinal (6 bytes)   inline
                                                        @ 71    @ 11   java.lang.Thread:: java.lang.invoke.VarForm::        currentThreadgetMethodType_V          (18 bytes) (0 bytes)   intrinsic
   force inline by annotation
    @ 29   java.lang.invoke.VarHandle$AccessMode::methodName (5 bytes)   inline
                                  @ 32  java/lang/UnsupportedOperationException::<init> (not loaded)   failed to inline: not inlineable
                                @ 99   java.lang.invoke.MethodHandle::linkToStatic(LLJIL)V (0 bytes)   failed to inline: MemberName not constant
                                @ 111   java.lang.invoke.VarHandle::getMethodHandle (41 bytes)   force inline by annotation
                                @ 10   java.lang.invoke.VarForm::getMethodType_V_init (49 bytes)   force inline by annotation
                                        @ 15   jdk.internal.misc.Unsafe::putByte (0 bytes)   intrinsic
                                  @ 33   java.lang.invoke.VarHandle::getMethodHandleUncached (85 bytes)   failed to inline: callee is too large
                                        @ 28   java.lang.ref.Reference::reachabilityFence (1 bytes)   force inline by annotation
                                                   @ 123                 @ 0   java.lang.invoke.MethodHandle:: java.lang.invoke.VarHandle$AccessType::asTypevalues (32 bytes) (10 bytes)   failed to inline: callee is too large
   inline
                                        @ 19   java.lang.ref.Reference::reachabilityFence (1 bytes)   force inline by annotation
                                                                            @ 3        java.lang.Object::      clone   (0 bytes)               @ 16     failed to inline: no static binding
 jdk.internal.misc.ScopedMemoryAccess$ScopedAccessError::  @ 127  newRuntimeException java.lang.invoke.VarHandle:: (13 bytes)   inline
asDirect (2 bytes)   force inline by annotation
                                @ 134   java.lang.invoke.MethodHandle::             invokeBasic(L                         LJI)  @ 4  V (0 bytes)   failed to inline: receiver not constant
 java.util.function.Supplier::get (0 bytes)   failed to inline: no static binding
                              @ 1   jdk.incubator.vector.ByteVector::vec (0 bytes)   failed to inline: no static binding
                              @ 28   jdk.incubator.vector.ByteVector$$Lambda/0x00007fc97f055788::apply (10 bytes)   failed to inline: callee uses too much stack
                                  @ 32   java.lang.invoke.MethodType::changeReturnType (20 bytes)   inline
                                    @ 1   java.lang.invoke.MethodType::returnType (5 bytes)   inline
                                    @ 16   java.lang.invoke.MethodType::methodType (69 bytes)   failed to inline: callee is too large
                              @ 96   java.lang.invoke.VarForm::getMemberName                      (38 bytes)   force inline by annotation
                              @ 14           @ 10   java.lang.invoke.VarHandleSegmentAsBytes:: jdk.internal.foreign.AbstractMemorySegmentImpl::checkAddressget (21 bytes)   force inline by annotation
 (12 bytes)   force inline by annotation
                                @ 1   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                @ 1   jdk.internal.foreign.layout.ValueLayouts$AbstractValueLayout::varHandle (26 bytes)   force inline by annotation
                                  @ 8   java.lang.NullPointerException::<init> (5 bytes)   failed to inline: don't inline Throwable constructors
                                @ 8   java.lang.invoke.VarHandleGuards::guard_LJ_I (84 bytes)   force inline by annotation
                                @ 13   java.lang.invoke.VarForm::resolveMemberName (60 bytes)   failed to inline: don't inline by annotation
                                  @ 3   java.lang.invoke.VarHandle::checkAccessModeThenIsDirect (29 bytes)   force inline by annotation
                                @ 15   jdk.internal.foreign.AbstractMemorySegmentImpl::checkAccess (30 bytes)   force inline by annotation
                                @ 26                java.lang.invoke.VarHandle$AccessMode::                     @ 19   java.lang.IllegalArgumentException::<init>valueFromOrdinal (6 bytes) (6 bytes)   inline
                        failed to inline: don't inline Throwable constructors
             @ 46   java.lang.invoke.VarForm::getMemberName (38 bytes)   force inline by annotation
                                  @ 26   jdk.internal.foreign.AbstractMemorySegmentImpl::checkBounds (54 bytes)   force inline by annotation
                                  @ 49   java.lang.invoke.VarHandleSegmentAsBytes::get                                @ 29   (47 bytes) java.lang.invoke.VarHandle$AccessMode::   force inline by annotation
methodName (5 bytes)   inline
                              @ 1   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                              @ 15   jdk.internal.foreign.AbstractMemorySegmentImpl::checkAccess (30 bytes)   force inline by annotation
                                @ 26   jdk.internal.foreign.AbstractMemorySegmentImpl::checkBounds (54 bytes)   force inline by annotation
                                  @ 16   jdk.internal.util.Preconditions::checkIndex (22 bytes)   (intrinsic)
                                    @ 16   jdk.internal.util.Preconditions::checkIndex (22 bytes)   intrinsic
                                    @ 14   java.lang.invoke.VarHandleSegmentAsBytes::checkAddress (21 bytes)   force inline by annotation
                                      @ 1   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                @ 32  java/lang/UnsupportedOperationException::<init> (not loaded)   failed to inline: not inlineable
                                        @ 8   java.lang.NullPointerException::             <init>         (5 bytes)   failed to inline: don't inline Throwable constructors
               @ 49   jdk.internal.foreign.AbstractMemorySegmentImpl::outOfBoundException (36 bytes)   failed to inline: callee is too large
                              @ 99   java.lang.invoke.MethodHandle::linkToStatic(                              @ 24   jdk.internal.foreign.AbstractMemorySegmentImpl::sessionImplLL                      (5 bytes)   force inline by annotation
           JIL)V      @ 15   (0 bytes)   failed to inline: MemberName not constant
 jdk.internal.foreign.AbstractMemorySegmentImpl::checkAccess                    (30 bytes)   force inline by annotation
           @ 29   jdk.internal.foreign.AbstractMemorySegmentImpl::unsafeGetBase (0 bytes)   failed to inline: no static binding
                              @ 40   java.lang.invoke.VarHandleSegmentAsBytes::offsetPlain (39 bytes)   force inline by annotation
                                @ 1                      jdk.internal.foreign.AbstractMemorySegmentImpl::                                  @ 26   jdk.internal.foreign.AbstractMemorySegmentImpl::                 @ 111  unsafeGetOffset java.lang.invoke.VarHandle::checkBoundsgetMethodHandle (0 bytes)   failed to inline: no static binding
 (41 bytes) (54 bytes)   force inline by annotation
   force inline by annotation
                                           @ 5           jdk.internal.foreign.MemorySessionImpl::           @ 13  checkValidStateRaw jdk.internal.foreign.AbstractMemorySegmentImpl:: (33 bytes)   force inline by annotation
maxAlignMask (0 bytes)   failed to inline: no static binding
                                @ 32   java.lang.invoke.VarHandleSegmentViewBase::newIllegalArgumentExceptionForMisalignedAccess (30 bytes)   failed to inline: callee uses too much stack
                                @ 11   java.lang.Thread::currentThread (0 bytes)   intrinsic
               !                                            @ 45               jdk.internal.misc.ScopedMemoryAccess::@ 16  putByte jdk.internal.util.Preconditions:: (21 bytes)   force inline by annotation
checkIndex (22 bytes)   intrinsic
               !                @ 6   jdk.internal.misc.ScopedMemoryAccess::putByteInternal (35 bytes)   force inline by annotation
                              @ 13   jdk.internal.misc.Unsafe::getByte (0 bytes)   intrinsic
                              @ 28   java.lang.ref.Reference::reachabilityFence (1 bytes)   force inline by annotation
                                  @ 5   jdk.internal.foreign.MemorySessionImpl::checkValidStateRaw (33 bytes)   force inline by annotation
                                                         @ 24           @ 19   jdk.internal.foreign.AbstractMemorySegmentImpl:: java.lang.ref.Reference::sessionImplreachabilityFence (5 bytes)   force inline by annotation
 (1 bytes)   force inline by annotation
                              @ 1   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetBase (11 bytes)   inline (hot)
                                @ 4   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                              @ 1   jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat::unsafeGetBase (11 bytes)   inline (hot)
                                @ 4   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                                                    @ 29       jdk.internal.foreign.AbstractMemorySegmentImpl::@ 11  unsafeGetBase java.lang.Thread:: (0 bytes)   failed to inline: no static binding
currentThread (0 bytes)   intrinsic
                                    @ 40   java.lang.invoke.VarHandleSegmentAsBytes::offsetPlain (39 bytes)   force inline by annotation
                                @ 33   java.lang.invoke.VarHandle::getMethodHandleUncached                                      @ 1   (85 bytes) jdk.internal.foreign.AbstractMemorySegmentImpl::unsafeGetOffset (0 bytes)   failed to inline: no static binding   failed to inline: callee is too large

                                      @ 13   jdk.internal.foreign.AbstractMemorySegmentImpl::             maxAlignMask         (0 bytes)   failed to inline: no static binding
             @ 15   jdk.internal.misc.Unsafe::putByte (0 bytes)   intrinsic
                                  @ 28   java.lang.ref.Reference::reachabilityFence (1 bytes)   force inline by annotation
               !                    @ 43   jdk.internal.misc.ScopedMemoryAccess::getByte (16 bytes)   force inline by annotation
                                  @ 19   java.lang.ref.Reference::reachabilityFence (1 bytes)   force inline by annotation
               !                      @ 4   jdk.internal.misc.ScopedMemoryAccess::getByteInternal (34 bytes)   force inline by annotation
                                                        @ 123       java.lang.invoke.MethodHandle::  @ 16   jdk.internal.misc.ScopedMemoryAccess$ScopedAccessError::newRuntimeException (13 bytes)   inlineasType
                              @ 1   jdk.internal.foreign.HeapMemorySegmentImpl::unsafeGetOffset (5 bytes)   accessor
 (32 bytes)                      inline
                     @ 5   jdk.internal.foreign.MemorySessionImpl::checkValidStateRaw (33 bytes)   force inline by annotation
                                  @ 4   java.util.function.Supplier::get (0 bytes)   failed to inline: no static binding
                                          @ 11   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                @ 12   java.lang.invoke.MethodHandle::asTypeCached (52 bytes)   failed to inline: callee is too large
                              @ 5   java.util.concurrent.ThreadLocalRandom::current (22 bytes)   inline
                                                     @ 13                jdk.internal.misc.Unsafe::      getByte@ 3   (0 bytes)   intrinsic
 java.lang.Thread::currentThread (0 bytes)   intrinsic
                                             @ 9                                                             @ 28   java.lang.ref.Reference::@ 25   jdk.internal.misc.Unsafe:: java.lang.invoke.MethodHandle::reachabilityFenceasTypeUncached (1 bytes) (54 bytes)   failed to inline: no static binding
   force inline by annotation
getInt (0 bytes)   intrinsic
                                @ 15   java.util.concurrent.ThreadLocalRandom::localInit (62 bytes)   failed to inline: callee is too large
                                @ 28                                          @ 19   java.lang.ref.Reference::reachabilityFence java.lang.invoke.MethodHandle:: (1 bytes)   force inline by annotationsetAsTypeCache
                              @ 9   (33 bytes) java.util.Random::nextBytes   failed to inline: callee is too large
 (56 bytes)   failed to inline: callee is too large
                              @ 13   java.lang.foreign.MemorySegment::ofArray (5 bytes)   inline
                                      @ 12   jdk.internal.misc.ScopedMemoryAccess$ScopedAccessError::newRuntimeException (13 bytes)   inline
                                @ 1   jdk.internal.foreign.SegmentFactories::fromArray (41 bytes)   failed to inline: callee is too large
                                        @ 4                                @ 127   java.util.function.Supplier::get (0 bytes)   failed to inline: no static binding
 java.lang.invoke.VarHandle::             asDirect                 @ 25   jdk.incubator.vector.ByteVector$ByteSpecies:: (2 bytes)   force inline by annotation
fromMemorySegment (9 bytes)   force inline by annotation
                                @ 5   jdk.incubator.vector.ByteVector$ByteSpecies::fromMemorySegment (9 bytes)   force inline by annotation
                                                              @ 134    @ 5   jdk.incubator.vector.ByteVector::fromMemorySegment java.lang.invoke.MethodHandle:: (40 bytes)   force inline by annotation
invokeBasic(LLJI)V (0 bytes)   failed to inline: receiver not constant
                                    @ 2   jdk.incubator.vector.AbstractSpecies::vectorByteSize (5 bytes)   force inline by annotation
               !              @ 6   jdk.internal.misc.ScopedMemoryAccess::putByteInternal (35 bytes)   force inline by annotation
                                @ 5   jdk.internal.foreign.MemorySessionImpl::checkValidStateRaw (33 bytes)   force inline by annotation
                                @ 15   jdk.internal.misc.Unsafe::putByte (0 bytes)   (intrinsic)
                                @ 19   java.lang.ref.Reference::reachabilityFence (1 bytes)   force inline by annotation
                                    @ 9   jdk.internal.foreign.AbstractMemorySegmentImpl::byteSize (5 bytes)   inline
                              @ 11   java.util.Random::nextInt (7 bytes)   failed to inline: no static binding
                                    @ 14   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize (57 bytes)   force inline by annotation
                              @ 20   java.lang.Math::min (11 bytes)   inline
                                      @ 45   java.util.Objects::checkIndex (7 bytes)   force inline by annotation
                                        @ 3   jdk.internal.util.Preconditions::checkIndex (22 bytes)   intrinsic
                                    @ 26   jdk.incubator.vector.ByteVector$ByteSpecies::dummyVector (8 bytes)   force inline by annotation
               !              @ 4   jdk.internal.misc.ScopedMemoryAccess::getByteInternal (34 bytes)   force inline by annotation
                                @ 5   jdk.internal.foreign.MemorySessionImpl::checkValidStateRaw (33 bytes)   force inline by annotation
                                @ 13   jdk.internal.misc.Unsafe::getByte (0 bytes)   (intrinsic)
                                @ 19   java.lang.ref.Reference::reachabilityFence (1 bytes)   force inline by annotation
                                      @ 1   jdk.incubator.vector.AbstractSpecies::dummyVector (16 bytes)   force inline by annotation
                                    @ 31   jdk.incubator.vector.Byte512Vector::fromMemorySegment0 (7 bytes)   force inline by annotation
                                      @ 3   jdk.incubator.vector.ByteVector::fromMemorySegment0Template (40 bytes)   force inline by annotation
                                        @ 1   jdk.incubator.vector.Byte512Vector::vspecies (4 bytes)   force inline by annotation
                              @ 1   jdk.incubator.vector.Vector::length (0 bytes)   failed to inline: no static binding
                                        @ 8   jdk.incubator.vector.ByteVector$ByteSpecies::vectorType (5 bytes)   force inline by annotation
                              @ 29   jdk.incubator.vector.ByteVector$$Lambda/0x00007fc97f053f60::apply (8 bytes)   inline
                                @ 4   jdk.incubator.vector.ByteVector::                                  memorySegmentGet (16 bytes)   failed to inline: callee uses too much stack      @ 13  
 jdk.incubator.vector.ByteVector$ByteSpecies::elementType (4 bytes)   force inline by annotation
                              @ 44   jdk.incubator.vector.ByteVector::vectorFactory (0 bytes)   failed to inline: no static binding
                              @ 1   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetOffset (5 bytes)   inline (hot)
                              @ 1   jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat::unsafeGetOffset (5 bytes)   inline (hot)
                               \-> TypeProfile (6337/19073 counts) = jdk/internal/foreign/HeapMemorySegmentImpl$OfFloat
                               \-> TypeProfile (12736/19073 counts) = jdk/internal/foreign/HeapMemorySegmentImpl$OfByte
                                @ 1   jdk.internal.foreign.HeapMemorySegmentImpl::unsafeGetOffset (5 bytes)   accessor
                                @ 1   jdk.internal.foreign.HeapMemorySegmentImpl::unsafeGetOffset (5 bytes)   accessor
                              @ 13   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::maxAlignMask (4 bytes)   inline (hot)
                              @ 13   jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat::maxAlignMask (4 bytes)   inline (hot)
                               \-> TypeProfile (6337/19073 counts) = jdk/internal/foreign/HeapMemorySegmentImpl$OfFloat
                               \-> TypeProfile (12736/19073 counts) = jdk/internal/foreign/HeapMemorySegmentImpl$OfByte
                                        @ 18   jdk.incubator.vector.AbstractSpecies::laneCount (5 bytes)   force inline by annotation
                                        @ 28   java.lang.invoke.Invokers$Holder::linkToTargetMethod (8 bytes)   force inline by annotation
                                          @ 4   java.lang.invoke.LambdaForm$MH/0x00007fc97f000800::invoke (8 bytes)   force inline by annotation
                              @ 3   jdk.internal.foreign.MemorySessionImpl::<init> (20 bytes)   inline
                                @ 1   java.lang.Object::             <init> (1 bytes)   inline  !                      
  @ 33   jdk.internal.misc.ScopedMemoryAccess::loadFromMemorySegment (26 bytes)   force inline by annotation
                              @ 1   java.lang.Object::<init> (1 bytes)   inline
                                          @ 1   jdk.internal.foreign.AbstractMemorySegmentImpl::sessionImpl (5 bytes)   force inline by annotation
                              @ 1   jdk.internal.foreign.HeapMemorySegmentImpl::unsafeGetOffset (5 bytes)   accessor
               !                          @ 14   jdk.internal.misc.ScopedMemoryAccess::loadFromMemorySegmentScopedInternal (53 bytes)   force inline by annotation
                                            @ 1   jdk.internal.foreign.MemorySessionImpl::checkValidStateRaw (33 bytes)   force inline by annotation
                              @ 1   java.lang.Object::<init> (1 bytes)   inline
                                              @ 11   java.lang.Thread::currentThread (0 bytes)   intrinsic
                              @ 3   java.lang.Thread::currentThread              (0 bytes)   intrinsic        
         @ 5   jdk.internal.foreign.GlobalSession$HeapSession::<init> (13 bytes)   inline
                              @ 9   jdk.internal.misc.Unsafe::getInt (0 bytes)   intrinsic
                                @ 1   jdk.internal.foreign.GlobalSession::<init> (7 bytes)   inline
                              @ 15   java.util.concurrent.ThreadLocalRandom::localInit (62 bytes)   failed to inline: callee is too large
                                  @ 3   jdk.internal.foreign.MemorySessionImpl::<init> (20 bytes)   inline
                                    @ 1   java.lang.Object::<init> (1 bytes)   inline
                                                   @ 1            jdk.internal.foreign.GlobalSession::    <init> (7 bytes)   inline          
@ 9   jdk.internal.foreign.AbstractMemorySegmentImpl::unsafeGetBase (0 bytes)   failed to inline: no static binding
                              @ 7                        jdk.internal.foreign.AbstractMemorySegmentImpl::         <init>  @ 6   java.util.Objects:: (21 bytes)   force inline by annotation
                     requireNonNull (14 bytes)   force inline by annotation
           @ 3   jdk.internal.foreign.MemorySessionImpl::<init> (20 bytes)   inline
                                @ 1   java.lang.Object::<init> (1 bytes)   inline
                                  @ 1   java.lang.Object::<init> (1 bytes)   inline
                                                     @ 8                  java.lang.NullPointerException::    <init>     (5 bytes)   failed to inline: don't inline Throwable constructors
  @ 14   jdk.internal.foreign.AbstractMemorySegmentImpl::unsafeGetOffset (0 bytes)   failed to inline: no static binding
                              @ 6   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                                                    @ 8          @ 29   java.lang.NullPointerException:: jdk.internal.vm.vector.VectorSupport::<init>load (5 bytes)   failed to inline: don't inline Throwable constructors
 (38 bytes)   failed to inline: callee is too large
                              @ 45   java.util.Objects::checkIndex (7 bytes)   force inline by annotation
                                @ 3   jdk.internal.util.Preconditions::checkIndex (22 bytes)   intrinsic
                                            @ 47   java.lang.ref.Reference::reachabilityFence (1 bytes)   force inline by annotation
                                            @ 38   java.lang.ref.Reference::reachabilityFence (1 bytes)   force inline by annotation
                                          @ 22   jdk.internal.misc.ScopedMemoryAccess$ScopedAccessError::newRuntimeException (13 bytes)   inline
                              @ 3   jdk.internal.util.Preconditions::checkIndex (22 bytes)   intrinsic
                                            @ 4   java.util.function.Supplier::get (0 bytes)   failed to inline: no static binding
                              @ 3   java.util.random.RandomGenerator::nextInt (12 bytes)   inline
                              @ 2   jdk.internal.util.random.RandomSupport::checkRange (16 bytes)   inline
                                                          @ 2      @ 11   jdk.internal.util.random.RandomSupport:: java.lang.IllegalArgumentException::checkRange<init> (16 bytes)   inline
 (6 bytes)   failed to inline: don't inline Throwable constructors
                                @ 11   java.lang.IllegalArgumentException::<init> (6 bytes)   failed to inline: don't inline Throwable constructors
                              @ 8   jdk.internal.util.random.RandomSupport::boundedNextInt (109 bytes)   failed to inline: callee is too large
                                  @ 11   java.lang.IllegalArgumentException::<init> (6 bytes)   failed to inline: don't inline Throwable constructors
                                @ 8   jdk.internal.util.random.RandomSupport::boundedNextInt (109 bytes)   failed to inline: callee is too large
                                    @ 36   jdk.incubator.vector.ByteVector::maybeSwap (2 bytes)   force inline by annotation
                              @ 48   java.lang.foreign.MemorySegment::ofArray (5 bytes)   inline
                                @ 1   jdk.internal.foreign.SegmentFactories::fromArray (41 bytes)   failed to inline: callee is too large             
                 @ 0   jdk.internal.foreign.SegmentFactories::ensureInitialized (5 bytes)   force inline by annotation
                              @ 55   java.lang.foreign.MemorySegment::ofArray (5 bytes)   inline
                                                              @ 1   jdk.internal.foreign.SegmentFactories::@ 4   java.util.Objects::fromArrayrequireNonNull (41 bytes)   failed to inline: callee is too large
 (14 bytes)   force inline by annotation
                              @ 64   java.util.concurrent.ThreadLocalRandom::current (22 bytes)   inline
                                @ 8   java.lang.NullPointerException::                   <init>              (5 bytes)   failed to inline: don't inline Throwable constructors
@ 3   java.lang.Thread::                          currentThread    @ 1   (0 bytes)   intrinsic
 jdk.incubator.vector.AbstractSpecies::dummyVector (16 bytes)   force inline by annotation
                                @ 9   jdk.internal.misc.Unsafe::getInt (0 bytes)   intrinsic
                              @ 14   jdk.internal.foreign.Utils$BaseAndScale::scale (5 bytes)   inline
                                @ 15   java.util.concurrent.ThreadLocalRandom::localInit (62 bytes)   failed to inline: callee is too large
                                             @ 12                                @ 71   jdk.incubator.vector.AbstractSpecies::                 @ 26   java.util.concurrent.ThreadLocalRandom::makeDummyVector jdk.internal.foreign.Utils$BaseAndScale::nextInt (7 bytes)   inlinebase (31 bytes)   inline

 (5 bytes)   inline
                                                              @ 3   java.util.random.RandomGenerator::@ 34  nextInt jdk.internal.foreign.MemorySessionImpl:: (12 bytes)   inline
createHeap (9 bytes)   inline
                              @ 1   jdk.internal.foreign.layout.ValueLayouts$AbstractValueLayout::varHandle (26 bytes)   force inline by annotation
                               \-> TypeProfile (16641/16641 counts) = jdk/internal/foreign/layout/ValueLayouts$OfByteImpl
                              @ 8   java.lang.invoke.VarHandleGuards::guard_LJ_I (84 bytes)   force inline by annotation
                                @ 3   java.lang.invoke.VarHandle::checkAccessModeThenIsDirect (29 bytes)   force inline by annotation
                                @ 46   java.lang.invoke.VarForm::getMemberName (38 bytes)   force inline by annotation
                                @ 49   java.lang.invoke.MethodHandle::linkToStatic(LLJL)I (0 bytes)   failed to inline: member_name not constant
                                                                  @ 5  @ 1   jdk.internal.foreign.GlobalSession$HeapSession:: jdk.incubator.vector.ByteVector$ByteSpecies::<init>elementType (13 bytes)   inline
         (4 bytes)        force inline by annotation
                                               @ 2                 jdk.internal.util.random.RandomSupport::                    @ 1  checkRange     (16 bytes)@ 1   jdk.incubator.vector.ByteVector::vspecies   inline
 (0 bytes)   failed to inline: no static binding                      jdk.internal.foreign.GlobalSession::           <init> (7 bytes)   inline
                     @ 8  
        java.lang.reflect.Array::    @ 2               newInstance jdk.internal.foreign.AbstractMemorySegmentImpl::         (6 bytes)sessionImpl        inline
    @ 8   jdk.incubator.vector.ByteVector$ByteSpecies:: (5 bytes)   force inline by annotation
             vectorType         (5 bytes)   force inline by annotation
               @ 3   jdk.internal.foreign.MemorySessionImpl::<init> (20 bytes)   inline
                                    @ 2   java.lang.reflect.Array::newArray (0 bytes)   failed to inline: native method
                                      @ 1   java.lang.Object::<init> (1 bytes)                inline
                                !     @ 13                     jdk.incubator.vector.ByteVector$ByteSpecies::    @ 15  elementType         jdk.internal.misc.ScopedMemoryAccess::          (4 bytes)storeIntoMemorySegmentScopedInternal     force inline by annotation
  @ 18   java.util.function.Function::apply (0 bytes)   failed to inline: no static binding
 (49 bytes)   force inline by annotation
                              @ 18   jdk.incubator.vector.AbstractSpecies::laneCount (5 bytes)   force inline by annotation
                                @ 1   jdk.internal.foreign.MemorySessionImpl::checkValidStateRaw (33 bytes)   force inline by annotation
                                  @ 6   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                              @ 27   java.lang.invoke.Invokers$Holder::linkToTargetMethod (8 bytes)   force inline by annotation
                                  @ 8   jdk.internal.util.random.RandomSupport::boundedNextInt                           (109 bytes)                      failed to inline: callee is too large
            @ 8            java.lang.NullPointerException::  @ 4  <init> java.lang.invoke.LambdaForm$MH/0x00007fc97f000800:: (5 bytes)   failed to inline: don't inline Throwable constructors             
invoke                    (8 bytes)   force inline by annotation
  @ 11   java.lang.Thread::currentThread (0 bytes)   intrinsic
               !              @ 32   jdk.internal.misc.ScopedMemoryAccess::                   storeIntoMemorySegment        (30 bytes)   force inline by annotation
    @ 37   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::<init> (13 bytes)   failed to inline: callee uses too much stack
                                @ 2   jdk.internal.foreign.AbstractMemorySegmentImpl::sessionImpl (5 bytes)   force inline by annotation
                                @ 9   jdk.internal.foreign.AbstractMemorySegmentImpl::unsafeGetBase (0 bytes)   failed to inline: no static binding
                              @ 78   jdk.incubator.vector.ByteVector::intoMemorySegment (48 bytes)                        force inline by annotation
                          !     @ 14            jdk.internal.foreign.AbstractMemorySegmentImpl::  @ 15   jdk.internal.misc.ScopedMemoryAccess::storeIntoMemorySegmentScopedInternal (49 bytes)   force inline by annotation
unsafeGetOffset (0 bytes)   failed to inline: no static binding
                                               @ 1   jdk.internal.foreign.MemorySessionImpl::        checkValidStateRaw          (33 bytes)   force inline by annotation
  @ 29   jdk.internal.vm.vector.VectorSupport::store (38 bytes)   failed to inline: callee is too large
                                @ 42   java.lang.ref.Reference::reachabilityFence (1 bytes)   force inline by annotation
                                @ 33   java.lang.ref.Reference::reachabilityFence (1 bytes)   force inline by annotation
                                                                           @ 25           jdk.internal.misc.ScopedMemoryAccess$ScopedAccessError::newRuntimeException@ 1            (13 bytes)   inline jdk.internal.foreign.AbstractMemorySegmentImpl::
isReadOnly   (5 bytes)   inline
    @ 11   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                @ 4   java.util.function.Supplier::get (0 bytes)   failed to inline: no static binding
                                  @ 9   jdk.internal.foreign.AbstractMemorySegmentImpl::unsafeGetBase (0 bytes)   failed to inline: no static binding
                                                                  @ 14  @ 16   jdk.internal.foreign.AbstractMemorySegmentImpl::unsafeGetOffsetjava/lang/UnsupportedOperationException                              @ 12   jdk.incubator.vector.AbstractSpecies:::: (0 bytes)<init>   failed to inline: no static binding
 (not loaded)makeDummyVector (31 bytes)   inline
   failed to inline: not inlineable
                                                              @ 1   jdk.incubator.vector.ByteVector$ByteSpecies::    elementType@ 29   (4 bytes)   force inline by annotation
 jdk.internal.vm.vector.VectorSupport::store (38 bytes)   failed to inline: callee is too large
                                                                             @ 8   java.lang.reflect.Array::  @ 42   java.lang.ref.Reference::newInstance (6 bytes)                   reachabilityFence   inline
@ 22   (1 bytes)   force inline by annotation
 jdk.incubator.vector.Vector::byteSize (0 bytes)   failed to inline: no static binding
                                  @ 2   java.lang.reflect.Array::newArray (0 bytes)   failed to inline: native method
                                  @ 33   java.lang.ref.Reference::reachabilityFence (1 bytes)   force inline by annotation
                                @ 18   java.util.function.Function::apply (0 bytes)   failed to inline: no static binding
                                @ 25   jdk.internal.misc.ScopedMemoryAccess$ScopedAccessError::newRuntimeException (13 bytes)   inline
                                  @ 4   java.util.function.Supplier::get (0 bytes)   failed to inline: no static binding
                                @ 27   jdk.internal.foreign.AbstractMemorySegmentImpl::byteSize (5 bytes)   inline
                                @ 32   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize (57 bytes)   force inline by annotation
                                  @ 45                                @ 1   java.util.concurrent.ThreadLocalRandom::nextSeed (39 bytes)   inline (hot)
                                @ 3   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                @ 18   jdk.internal.misc.Unsafe::getLong (0 bytes)   (intrinsic)
                                @ 22   java.lang.Thread::threadId (5 bytes)   accessor
                                @ 34   jdk.internal.misc.Unsafe::putLong (0 bytes)   (intrinsic)
                              @ 4   java.util.concurrent.ThreadLocalRandom::mix32 (26 bytes)   inline (hot)
 java.util.Objects::checkIndex (7 bytes)   force inline by annotation
                                                         @ 3           @ 1   jdk.internal.foreign.SegmentFactories:: jdk.internal.util.Preconditions::fromArraycheckIndex (41 bytes) (22 bytes)   intrinsic
   failed to inline: callee is too large
                              @ 9   jdk.internal.foreign.HeapMemorySegmentImpl::<init> (21 bytes)   force inline by annotation
                                @ 39                                  @ 7   jdk.incubator.vector.ByteVector:: jdk.internal.foreign.AbstractMemorySegmentImpl::maybeSwap<init> (21 bytes)   force inline by annotation
 (2 bytes)   force inline by annotation
                                  @ 1   java.lang.Object::<init> (1 bytes)   inline
                                @ 44   jdk.incubator.vector.ByteVector::intoMemorySegment0 (36 bytes)   force inline by annotation
                              @ 1   java.util.random.RandomGenerator::nextInt (11 bytes)   failed to inline: no static binding
                              @ 68   java.util.random.RandomGenerator::nextInt (11 bytes)   failed to inline: no static binding
                              @ 98   java.util.random.RandomGenerator::nextInt (11 bytes)   failed to inline: no static binding
                                  @ 1   jdk.incubator.vector.ByteVector::vspecies (0 bytes)   failed to inline: no static binding
                                  @ 8   jdk.incubator.vector.ByteVector$ByteSpecies::vectorType (5 bytes)   force inline by annotation
                              @ 3   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                              @ 18   jdk.internal.misc.Unsafe::getLong (0 bytes)   (intrinsic)
                              @ 22   java.lang.Thread::threadId (5 bytes)   accessor
                              @ 34   jdk.internal.misc.Unsafe::putLong (0 bytes)   (intrinsic)
                                  @ 13                                @ 1   jdk.incubator.vector.ByteVector$ByteSpecies:: jdk.internal.foreign.AbstractMemorySegmentImpl::elementTypeisReadOnly (5 bytes)   inline
 (4 bytes)   force inline by annotation
                              @ 16  java/lang/UnsupportedOperationException::<init> (not loaded)   failed to inline: not inlineable
                              @ 22   jdk.incubator.vector.Vector::byteSize (0 bytes)   failed to inline: no static binding
                              @ 27   jdk.internal.foreign.AbstractMemorySegmentImpl::byteSize (5 bytes)   inline
                              @ 32   jdk.incubator.vector.ByteVector$$Lambda/0x00007fc97f055358::store (14 bytes)   inline
                              @ 32   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize (57 bytes)   force inline by annotation                          
                     @ 18         jdk.incubator.vector.AbstractSpecies::       laneCount     (5 bytes)   force inline by annotation
  @ 10                jdk.incubator.vector.ByteVector::        lambda$intoMemorySegment0$113          (12 bytes)   failed to inline: callee uses too much stack
  @ 45   java.util.Objects::checkIndex (7 bytes)   force inline by annotation
                                  @ 3   jdk.internal.util.Preconditions::checkIndex (22 bytes)   intrinsic
                              @ 39   jdk.incubator.vector.ByteVector::maybeSwap (2 bytes)   force inline by annotation
                              @ 44   jdk.incubator.vector.ByteVector::intoMemorySegment0 (36 bytes)   force inline by annotation
                                @ 1   jdk.incubator.vector.ByteVector::vspecies (0 bytes)   failed to inline: no static binding
                                           @ 4   jdk.incubator.vector.ByteVector::memorySegmentGet (16 bytes)   inline (hot)
                                @ 10   jdk.internal.foreign.AbstractMemorySegmentImpl::get (12 bytes)   force inline by annotation
                                 \-> TypeProfile (10753/10753 counts) = jdk/internal/foreign/HeapMemorySegmentImpl$OfByte
                                  @ 1   jdk.internal.foreign.layout.ValueLayouts$AbstractValueLayout::varHandle (26 bytes)   force inline by annotation
                                  @ 8   java.lang.invoke.VarHandleGuards::guard_LJ_I (84 bytes)   force inline by annotation
                                    @ 3   java.lang.invoke.VarHandle::checkAccessModeThenIsDirect (29 bytes)   force inline by annotation
                                    @ 46   java.lang.invoke.VarForm::getMemberName (38 bytes)   force inline by annotation
                                    @ 49   java.lang.invoke.VarHandleSegmentAsBytes::get (47 bytes)   force inline by annotation
                                      @ 14   java.lang.invoke.VarHandleSegmentAsBytes::checkAddress (21 bytes)   force inline by annotation
                                        @ 1   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                        @ 15   jdk.internal.foreign.AbstractMemorySegmentImpl::checkAccess (30 bytes)   force inline by annotation
                                          @ 26   jdk.internal.foreign.AbstractMemorySegmentImpl::checkBounds (54 bytes)   force inline by annotation
                                            @ 16   jdk.internal.util.Preconditions::checkIndex (22 bytes)   (intrinsic)
                                      @ 24   jdk.internal.foreign.AbstractMemorySegmentImpl::sessionImpl (5 bytes)   accessor
                                      @ 29   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetBase (5 bytes)   inline (hot)
                                        @ 1   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetBase (11 bytes)   inline (hot)
                                          @ 4   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                      @ 40   java.lang.invoke.VarHandleSegmentAsBytes::offsetPlain (39 bytes)   force inline by annotation
                                        @ 1   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetOffset (5 bytes)   inline (hot)
                                          @ 1   jdk.internal.foreign.HeapMemorySegmentImpl::unsafeGetOffset (5 bytes)   accessor
                                        @ 13   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::maxAlignMask (4 bytes)   inline (hot)
               !                      @ 43   jdk.internal.misc.ScopedMemoryAccess::getByte (16 bytes)   force inline by annotation
               !                        @ 4   jdk.internal.misc.ScopedMemoryAccess::getByteInternal (34 bytes)   force inline by annotation
                                          @ 5   jdk.internal.foreign.MemorySessionImpl::checkValidStateRaw (33 bytes)   force inline by annotation
                                          @ 13   jdk.internal.misc.Unsafe::getByte (0 bytes)   (intrinsic)
                                          @ 19   java.lang.ref.Reference::reachabilityFence (1 bytes)   force inline by annotation
                     @ 27                                  @ 8   jdk.incubator.vector.ByteVector$ByteSpecies::vectorType java.lang.invoke.Invokers$Holder:: (5 bytes)   force inline by annotationlinkToTargetMethod
 (8 bytes)   force inline by annotation
                                @ 13   jdk.incubator.vector.ByteVector$ByteSpecies::elementType (4 bytes)   force inline by annotation
                                @ 18   jdk.incubator.vector.AbstractSpecies::laneCount (5 bytes)   force inline by annotation
                                    @ 4   java.lang.invoke.LambdaForm$MH/0x00007fc97f000800::invoke                                @ 27   java.lang.invoke.Invokers$Holder::linkToTargetMethod (8 bytes) (8 bytes)   force inline by annotation
   force inline by annotation
                                  @ 4   java.lang.invoke.LambdaForm$MH/0x00007fc97f000800::invoke (8 bytes)   force inline by annotation
                              @ 14   java.lang.invoke.VarHandleSegmentAsBytes::checkAddress (21 bytes)   force inline by annotation
                                @ 1   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                @ 15   jdk.internal.foreign.AbstractMemorySegmentImpl::checkAccess (30 bytes)   force inline by annotation
                                  @ 26   jdk.internal.foreign.AbstractMemorySegmentImpl::checkBounds (54 bytes)   force inline by annotation
                                    @ 16   jdk.internal.util.Preconditions::checkIndex (22 bytes)   (intrinsic)
                              @ 24   jdk.internal.foreign.AbstractMemorySegmentImpl::sessionImpl (5 bytes)   accessor
                              @ 29   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetBase (5 bytes)   inline (hot)
                               \-> TypeProfile (15873/15873 counts) = jdk/internal/foreign/HeapMemorySegmentImpl$OfByte
                                @ 1   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetBase (11 bytes)   inline (hot)
                                  @ 4   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                              @ 40   java.lang.invoke.VarHandleSegmentAsBytes::offsetPlain (39 bytes)   force inline by annotation
                                @ 1   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetOffset (5 bytes)   inline (hot)
                                  @ 1   jdk.internal.foreign.HeapMemorySegmentImpl::unsafeGetOffset (5 bytes)   accessor
                                @ 13   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::maxAlignMask (4 bytes)   inline (hot)
               !              @ 43   jdk.internal.misc.ScopedMemoryAccess::getByte (16 bytes)   force inline by annotation
               !                @ 4   jdk.internal.misc.ScopedMemoryAccess::getByteInternal (34 bytes)   force inline by annotation
                                  @ 5   jdk.internal.foreign.MemorySessionImpl::checkValidStateRaw (33 bytes)   force inline by annotation
                                  @ 13   jdk.internal.misc.Unsafe::getByte (0 bytes)   (intrinsic)
                                  @ 19   java.lang.ref.Reference::reachabilityFence (1 bytes)   force inline by annotation
               !                @ 32   jdk.internal.misc.ScopedMemoryAccess::storeIntoMemorySegment (30 bytes)   force inline by annotation
                                  @ 2   jdk.internal.foreign.AbstractMemorySegmentImpl::sessionImpl (5 bytes)   force inline by annotation
               !                  @ 32   jdk.internal.misc.ScopedMemoryAccess::storeIntoMemorySegment (30 bytes)   force inline by annotation
               !                  @ 15   jdk.internal.misc.ScopedMemoryAccess::storeIntoMemorySegmentScopedInternal (49 bytes)   force inline by annotation
                                           @ 3                java.lang.invoke.Invokers$Holder::                         @ 1           linkToTargetMethod jdk.internal.foreign.MemorySessionImpl::@ 10   (8 bytes)   force inline by annotation
checkValidStateRaw jdk.incubator.vector.ByteVector:: (33 bytes)   force inline by annotation
lambda$intoMemorySegment0$113 (12 bytes)   failed to inline: callee uses too much stack
                                    @ 2   jdk.internal.foreign.AbstractMemorySegmentImpl::sessionImpl (5 bytes)   force inline by annotation
                                                 @ 1                      jdk.internal.foreign.MemorySessionImpl::               checkValidStateRaw     (33 bytes)   force inline by annotation
           @ 4    @ 11   java.lang.invoke.LambdaForm$MH/0x00007fc97f000800:: java.lang.Thread::invokecurrentThread (8 bytes)   force inline by annotation
 (0 bytes)   intrinsic
                              @ 3   jdk.internal.misc.Unsafe::getLongVolatile (0 bytes)   intrinsic
                                                            @ 8  @ 18   jdk.incubator.vector.ByteVector:: jdk.internal.misc.Unsafe::stLongOpweakCompareAndSetLong (40 bytes)   force inline by annotation
 (11 bytes)   failed to inline: callee uses too much stack
                                             !                    @ 15                                                jdk.internal.misc.ScopedMemoryAccess::                @ 9                   jdk.internal.foreign.AbstractMemorySegmentImpl::unsafeGetBasestoreIntoMemorySegmentScopedInternal     (49 bytes)   force inline by annotation
  @ 1       (0 bytes)   failed to inline: no static binding
          jdk.incubator.vector.ByteVector::@ 7      vec jdk.internal.misc.Unsafe:: (0 bytes)compareAndSetLong@ 11     failed to inline: no static binding
 java.lang.Thread:: (0 bytes)   intrinsic             
currentThread         (0 bytes)   intrinsic
         @ 14   jdk.internal.foreign.AbstractMemorySegmentImpl::unsafeGetOffset (0 bytes)   failed to inline: no static binding
                                             @ 28           jdk.incubator.vector.ByteVector$$Lambda/0x00007fc97f055788::         apply@ 29   (10 bytes)   failed to inline: callee uses too much stack
 jdk.internal.vm.vector.VectorSupport::store (38 bytes)   failed to inline: callee is too large
                                      @ 1           jdk.internal.foreign.MemorySessionImpl::                      @ 42   java.lang.ref.Reference::reachabilityFencecheckValidStateRaw (1 bytes) (33 bytes)   force inline by annotation
   force inline by annotation
                              @ 33   java.lang.ref.Reference::             reachabilityFence (1 bytes)   force inline by annotation
                       @ 9   jdk.internal.foreign.AbstractMemorySegmentImpl::unsafeGetBase (0 bytes)   failed to inline: no static binding
                                    @ 14   jdk.internal.foreign.AbstractMemorySegmentImpl::unsafeGetOffset (0 bytes)   failed to inline: no static binding
                                    @ 29   jdk.internal.vm.vector.VectorSupport::store (38 bytes)   failed to inline: callee is too large
                              @ 5   Main::lambda$main$0 (142 bytes)   failed to inline: callee is too large
                                    @ 42   java.lang.ref.Reference::reachabilityFence (1 bytes)   force inline by annotation
                                    @ 33   java.lang.ref.Reference::reachabilityFence (1 bytes)   force inline by annotation
                                  @ 25   jdk.internal.misc.ScopedMemoryAccess$ScopedAccessError::newRuntimeException (13 bytes)   inline
                                    @ 4   java.util.function.Supplier::get (0 bytes)   failed to inline: no static binding
                              @ 2   jdk.incubator.vector.ByteVector::<init> (6 bytes)   inline
                              @ 2   jdk.incubator.vector.AbstractVector::<init> (6 bytes)   inline
                                @ 2   jdk.incubator.vector.AbstractVector::<init> (6 bytes)   inline
                                @ 2   jdk.incubator.vector.Vector::<init> (6 bytes)   inline
                                  @ 2   jdk.incubator.vector.Vector::<init> (6 bytes)   inline
                                  @ 2   jdk.internal.vm.vector.VectorSupport$Vector::<init> (6 bytes)   inline
                                    @ 2   jdk.internal.vm.vector.VectorSupport$Vector::<init> (6 bytes)   inline
                                        @ 11                        java.lang.Thread::                  currentThread             (0 bytes)   intrinsic
                       @ 2  @ 2   jdk.internal.vm.vector.VectorSupport$VectorPayload:: jdk.internal.vm.vector.VectorSupport$VectorPayload::<init><init> (10 bytes)   inline
 (10 bytes)   inline
                                      @ 1                java.lang.Object::             <init>       (1 bytes)   inline
        @ 1   java.lang.Object::<init> (1 bytes)   inline
                              @ 2   jdk.incubator.vector.Vector::<init> (6 bytes)   inline
                                @ 2   jdk.internal.vm.vector.VectorSupport$Vector::<init> (6 bytes)   inline
                                  @ 2   jdk.internal.vm.vector.VectorSupport$VectorPayload::<init> (10 bytes)   inline
                                    @ 1   java.lang.Object::<init> (1 bytes)   inline
                                      @ 9   jdk.internal.foreign.AbstractMemorySegmentImpl::unsafeGetBase (0 bytes)   failed to inline: no static binding
                                      @ 14   jdk.internal.foreign.AbstractMemorySegmentImpl::unsafeGetOffset (0 bytes)   failed to inline: no static binding
                              @ 32   jdk.incubator.vector.ByteVector$$Lambda/0x00007fc97f053b30::load (17 bytes)   inline
                                      @ 29   jdk.internal.vm.vector.VectorSupport::store (38 bytes)   failed to inline: callee is too large
                              @ 5   jdk.incubator.vector.Byte512Vector::<init> (6 bytes)   inline
                                @ 10   jdk.incubator.vector.ByteVector::lambda$fromMemorySegment0Template$105 (12 bytes)   failed to inline: callee uses too much stack
                                @ 2   jdk.incubator.vector.ByteVector::<init> (6 bytes)   inline
                                  @ 2   jdk.incubator.vector.AbstractVector::<init> (6 bytes)   inline
                              @ 2   jdk.internal.vm.vector.VectorSupport$Vector::<init> (6 bytes)   inline
                                    @ 2   jdk.incubator.vector.Vector::<init> (6 bytes)   inline
                                @ 2   jdk.internal.vm.vector.VectorSupport$VectorPayload::<init> (10 bytes)   inline
                                      @ 2   jdk.internal.vm.vector.VectorSupport$Vector::<init> (6 bytes)   inline
                                  @ 1   java.lang.Object::<init> (1 bytes)   inline
                                      @ 42                                                                        @ 2   java.lang.ref.Reference::@ 2  reachabilityFence jdk.internal.vm.vector.VectorSupport$VectorPayload:: jdk.internal.vm.vector.VectorSupport$VectorPayload::<init> (10 bytes)   inline
<init> (10 bytes)   inline
 (1 bytes)   force inline by annotation
                                @ 1   java.lang.Object::<init> (1 bytes)   inline
                                          @ 1   java.lang.Object::<init> (1 bytes)   inline
                                      @ 33   java.lang.ref.Reference::reachabilityFence (1 bytes)   force inline by annotation
                                    @ 25                                @ 3   jdk.internal.misc.ScopedMemoryAccess$ScopedAccessError:: jdk.incubator.vector.ByteVector::newRuntimeException                          fromMemorySegment0Template (40 bytes)   force inline by annotation
    @ 1                        jdk.incubator.vector.ByteVector::vspecies (0 bytes)   failed to inline: no static binding
         @ 1   jdk.internal.foreign.AbstractMemorySegmentImpl::sessionImpl (5 bytes)   force inline by annotation
 (13 bytes)   inline
                                                            @ 8    @ 1   jdk.incubator.vector.Byte512Vector:: jdk.incubator.vector.ByteVector$ByteSpecies::vspeciesvectorType (4 bytes)   force inline by annotation
 (5 bytes)   force inline by annotation
               !              @ 14   jdk.internal.misc.ScopedMemoryAccess::loadFromMemorySegmentScopedInternal (53 bytes)   force inline by annotation
                                             @ 8                    jdk.incubator.vector.ByteVector$ByteSpecies::@ 13   jdk.incubator.vector.ByteVector$ByteSpecies::vectorTypeelementType                    (4 bytes)   force inline by annotation
 (5 bytes)   force inline by annotation
             @ 1   jdk.internal.foreign.MemorySessionImpl::checkValidStateRaw (33 bytes)   force inline by annotation
                                                                            @ 4            java.util.function.Supplier::             get  @ 13   (0 bytes)   failed to inline: no static binding
@ 18   jdk.incubator.vector.ByteVector$ByteSpecies:: jdk.incubator.vector.AbstractSpecies::elementTypelaneCount (4 bytes)   force inline by annotation
 (5 bytes)   force inline by annotation
                                  @ 11   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                @ 18   jdk.incubator.vector.AbstractSpecies::laneCount (5 bytes)   force inline by annotation
                              @ 28   java.lang.invoke.Invokers$Holder::linkToTargetMethod (8 bytes)   force inline by annotation
                                                                @ 4  @ 28   java.lang.invoke.LambdaForm$MH/0x00007fc97f000800:: java.lang.invoke.Invokers$Holder::invokelinkToTargetMethod (8 bytes)   force inline by annotation
 (8 bytes)   force inline by annotation
                                             @ 9           jdk.internal.foreign.AbstractMemorySegmentImpl::         unsafeGetBase@ 1   (0 bytes)   failed to inline: no static binding
 java.lang.Object::<init> (1 bytes)   inline
                                  @ 4   java.lang.invoke.LambdaForm$MH/0x00007fc97f000800::invoke (8 bytes)   force inline by annotation
                                @ 14   jdk.internal.foreign.AbstractMemorySegmentImpl::               !          unsafeGetOffset    @ 33   (0 bytes)   failed to inline: no static binding
 jdk.internal.misc.ScopedMemoryAccess::loadFromMemorySegment (26 bytes)   force inline by annotation
                                @ 1                      jdk.internal.foreign.AbstractMemorySegmentImpl::                          @ 29    !     sessionImpl jdk.internal.vm.vector.VectorSupport::           @ 33   jdk.internal.misc.ScopedMemoryAccess::load (5 bytes)   force inline by annotationloadFromMemorySegment (38 bytes)   failed to inline: callee is too large

 (26 bytes)   force inline by annotation
                                  @ 1   jdk.internal.foreign.AbstractMemorySegmentImpl::sessionImpl (5 bytes)   force inline by annotation
                                @ 47   java.lang.ref.Reference::reachabilityFence (1 bytes)   force inline by annotation
               !                @ 14   jdk.internal.misc.ScopedMemoryAccess::loadFromMemorySegmentScopedInternal (53 bytes)   force inline by annotation
                                @ 38   java.lang.ref.Reference::reachabilityFence (1 bytes)   force inline by annotation
                                  @ 1   jdk.internal.foreign.MemorySessionImpl::             checkValidStateRaw  !      (33 bytes)   force inline by annotation
             @ 14   jdk.internal.misc.ScopedMemoryAccess::                          loadFromMemorySegmentScopedInternal                                  @ 85  @ 22   (53 bytes)   force inline by annotation
 jdk.internal.misc.ScopedMemoryAccess$ScopedAccessError:: java.util.concurrent.ThreadLocalRandom::newRuntimeExceptioncurrent (13 bytes)   inline
 (22 bytes)   inline
                                    @ 1   jdk.internal.foreign.MemorySessionImpl::checkValidStateRaw (33 bytes)   force inline by annotation
                                @ 4   java.util.function.Supplier::get (0 bytes)   failed to inline: no static binding
                                                                                              @ 11   java.lang.Thread::    @ 1  @ 3  currentThread (0 bytes)   intrinsic
 jdk.internal.foreign.MemorySessionImpl::checkValidStateRaw (33 bytes) java.lang.Thread::   force inline by annotation
currentThread (0 bytes)   intrinsic
                                @ 9   jdk.internal.misc.Unsafe::getInt (0 bytes)   intrinsic
                                      @ 11   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                             @ 15                    java.util.concurrent.ThreadLocalRandom::  localInit@ 11   java.lang.Thread::currentThread (0 bytes)   intrinsic
 (62 bytes)   failed to inline: callee is too large
                                  @ 9   jdk.internal.foreign.AbstractMemorySegmentImpl::unsafeGetBase (0 bytes)   failed to inline: no static binding
                                      @ 92                            @ 14   java.util.concurrent.ThreadLocalRandom:: jdk.internal.foreign.AbstractMemorySegmentImpl::unsafeGetOffset (0 bytes)   failed to inline: no static binding
nextInt (7 bytes)   inline
                              @ 9   jdk.internal.foreign.AbstractMemorySegmentImpl::unsafeGetBase (0 bytes)   failed to inline: no static binding
                                    @ 9   jdk.internal.foreign.AbstractMemorySegmentImpl::unsafeGetBase (0 bytes)   failed to inline: no static binding
                                  @ 29   jdk.internal.vm.vector.VectorSupport::                                                     @ 3  load                       (38 bytes)   failed to inline: callee is too large
                     @ 14   jdk.internal.foreign.AbstractMemorySegmentImpl:: java.util.random.RandomGenerator::  nextInt@ 14  unsafeGetOffset (0 bytes) (12 bytes)   inline
 jdk.internal.foreign.AbstractMemorySegmentImpl::   failed to inline: no static binding
unsafeGetOffset (0 bytes)   failed to inline: no static binding
                                                                    @ 2                 @ 29                      jdk.internal.util.random.RandomSupport:: jdk.internal.vm.vector.VectorSupport::              load     (38 bytes)   failed to inline: callee is too large
    @ 47  checkRange       java.lang.ref.Reference::reachabilityFence (1 bytes)   force inline by annotation
    @ 29   jdk.internal.vm.vector.VectorSupport::load (16 bytes)   inline
 (38 bytes)   failed to inline: callee is too large
                              @ 47   java.lang.ref.Reference::reachabilityFence (1 bytes)   force inline by annotation
                                  @ 38   java.lang.ref.Reference::reachabilityFence (1 bytes)   force inline by annotation
                              @ 38   java.lang.ref.Reference::reachabilityFence (1 bytes)   force inline by annotation
                              @ 6   jdk.incubator.vector.ByteVector::memorySegmentSet (18 bytes)   inline (hot)
                                @ 12   jdk.internal.foreign.AbstractMemorySegmentImpl::set (14 bytes)   force inline by annotation
                                @ 12   jdk.internal.foreign.AbstractMemorySegmentImpl::set (14 bytes)   force inline by annotation
                                 \-> TypeProfile (9089/18178 counts) = jdk/internal/foreign/HeapMemorySegmentImpl$OfFloat
                                 \-> TypeProfile (9089/18178 counts) = jdk/internal/foreign/HeapMemorySegmentImpl$OfByte
                                  @ 1   jdk.internal.foreign.layout.ValueLayouts$AbstractValueLayout::varHandle (26 bytes)   force inline by annotation
                                  @ 10   java.lang.invoke.VarHandleGuards::guard_LJI_V (138 bytes)   force inline by annotation
                                    @ 3   java.lang.invoke.VarHandle::checkAccessModeThenIsDirect (29 bytes)   force inline by annotation
                                    @ 48   java.lang.invoke.VarForm::getMemberName (38 bytes)   force inline by annotation
                                    @ 51   java.lang.invoke.VarHandleSegmentAsBytes::set (49 bytes)   force inline by annotation
                                      @ 14   java.lang.invoke.VarHandleSegmentAsBytes::checkAddress (21 bytes)   force inline by annotation
                                        @ 1   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                        @ 15   jdk.internal.foreign.AbstractMemorySegmentImpl::checkAccess (30 bytes)   force inline by annotation
                                          @ 26   jdk.internal.foreign.AbstractMemorySegmentImpl::checkBounds (54 bytes)   force inline by annotation
                                            @ 16   jdk.internal.util.Preconditions::checkIndex (22 bytes)   (intrinsic)
                                      @ 24   jdk.internal.foreign.AbstractMemorySegmentImpl::sessionImpl (5 bytes)   accessor
                                      @ 29   jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat::unsafeGetBase (5 bytes)   inline (hot)
                                        @ 1   jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat::unsafeGetBase (11 bytes)   inline (hot)
                                          @ 4   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                      @ 40   java.lang.invoke.VarHandleSegmentAsBytes::offsetPlain (39 bytes)   force inline by annotation
                                        @ 1   jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat::unsafeGetOffset (5 bytes)   inline (hot)
                                          @ 1   jdk.internal.foreign.HeapMemorySegmentImpl::unsafeGetOffset (5 bytes)   accessor
                                        @ 13   jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat::maxAlignMask (4 bytes)   inline (hot)
               !                      @ 45   jdk.internal.misc.ScopedMemoryAccess::putByte (21 bytes)   force inline by annotation
               !                        @ 6   jdk.internal.misc.ScopedMemoryAccess::putByteInternal (35 bytes)   force inline by annotation
                                          @ 5   jdk.internal.foreign.MemorySessionImpl::checkValidStateRaw (33 bytes)   force inline by annotation
                                          @ 15   jdk.internal.misc.Unsafe::putByte (0 bytes)   (intrinsic)
                                          @ 19   java.lang.ref.Reference::reachabilityFence (1 bytes)   force inline by annotation
                                  @ 1   jdk.internal.foreign.layout.ValueLayouts$AbstractValueLayout::varHandle (26 bytes)   force inline by annotation
                                  @ 10   java.lang.invoke.VarHandleGuards::guard_LJI_V (138 bytes)   force inline by annotation
                                    @ 3   java.lang.invoke.VarHandle::checkAccessModeThenIsDirect (29 bytes)   force inline by annotation
                                    @ 48   java.lang.invoke.VarForm::getMemberName (38 bytes)   force inline by annotation
                                    @ 51   java.lang.invoke.VarHandleSegmentAsBytes::set (49 bytes)   force inline by annotation
                                      @ 14   java.lang.invoke.VarHandleSegmentAsBytes::checkAddress (21 bytes)   force inline by annotation
                                        @ 1   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                        @ 15   jdk.internal.foreign.AbstractMemorySegmentImpl::checkAccess (30 bytes)   force inline by annotation
                                          @ 26   jdk.internal.foreign.AbstractMemorySegmentImpl::checkBounds (54 bytes)   force inline by annotation
                                            @ 16   jdk.internal.util.Preconditions::checkIndex (22 bytes)   (intrinsic)
                                      @ 24   jdk.internal.foreign.AbstractMemorySegmentImpl::sessionImpl (5 bytes)   accessor
                                      @ 29   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetBase (5 bytes)   inline (hot)
                                        @ 1   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetBase (11 bytes)   inline (hot)
                                          @ 4   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                      @ 40   java.lang.invoke.VarHandleSegmentAsBytes::offsetPlain (39 bytes)   force inline by annotation
                                        @ 1   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetOffset (5 bytes)   inline (hot)
                                          @ 1   jdk.internal.foreign.HeapMemorySegmentImpl::unsafeGetOffset (5 bytes)   accessor
                                        @ 13   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::maxAlignMask (4 bytes)   inline (hot)
               !                      @ 45   jdk.internal.misc.ScopedMemoryAccess::putByte (21 bytes)   force inline by annotation
               !                        @ 6   jdk.internal.misc.ScopedMemoryAccess::putByteInternal (35 bytes)   force inline by annotation
                                          @ 5   jdk.internal.foreign.MemorySessionImpl::checkValidStateRaw (33 bytes)   force inline by annotation
                                          @ 15   jdk.internal.misc.Unsafe::putByte (0 bytes)   (intrinsic)
                                          @ 19   java.lang.ref.Reference::reachabilityFence (1 bytes)   force inline by annotation
                                                              @ 22       jdk.internal.misc.ScopedMemoryAccess$ScopedAccessError::                                  @ 8    @ 47   java.lang.ref.Reference::newRuntimeException (13 bytes)   inline
reachabilityFence (1 bytes)   force inline by annotation
 jdk.internal.util.random.RandomSupport::boundedNextInt (109 bytes)   failed to inline: callee is too large
                                  @ 4   java.util.function.Supplier::get (0 bytes)   failed to inline: no static binding
                                    @ 38   java.lang.ref.Reference::reachabilityFence (1 bytes)   force inline by annotation
                              @ 99                                          jdk.incubator.vector.ByteVector::    intoMemorySegment           (48 bytes)   force inline by annotation
           @ 22  @ 5   jdk.internal.misc.ScopedMemoryAccess$ScopedAccessError:: jdk.incubator.vector.ByteVector$ByteSpecies::newRuntimeExceptionfromMemorySegment (13 bytes)   inline
 (9 bytes)   force inline by annotation
                                @ 5   jdk.incubator.vector.ByteVector::fromMemorySegment (40 bytes)   force inline by annotation
                                    @ 4   java.util.function.Supplier::get              (0 bytes)   failed to inline: no static binding
                     @ 2   jdk.incubator.vector.AbstractSpecies::                                @ 1  vectorByteSize (5 bytes)   force inline by annotation
 jdk.internal.foreign.AbstractMemorySegmentImpl::isReadOnly (5 bytes)   inline
                                  @ 9   jdk.internal.foreign.AbstractMemorySegmentImpl::byteSize (5 bytes)   inline
                                @ 16  java/lang/UnsupportedOperationException::<init> (not loaded)   failed to inline: not inlineable
                                  @ 14   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize (57 bytes)   force inline by annotation
                                @ 22   jdk.incubator.vector.Vector::byteSize (0 bytes)   failed to inline: no static binding
                              @ 7   jdk.internal.misc.Unsafe::compareAndSetLong (0 bytes)   (intrinsic)
                                    @ 45   java.util.Objects::checkIndex (7 bytes)   force inline by annotation
                                @ 27   jdk.internal.foreign.AbstractMemorySegmentImpl::byteSize (5 bytes)   inline
                                      @ 3   jdk.internal.util.Preconditions::checkIndex (22 bytes)   intrinsic
                                @ 32   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize                                 (57 bytes)   force inline by annotation
  @ 26   jdk.incubator.vector.ByteVector$ByteSpecies::dummyVector (8 bytes)   force inline by annotation
                                    @ 1   jdk.incubator.vector.AbstractSpecies::dummyVector (16 bytes)   force inline by annotation
                                  @ 45   java.util.Objects::checkIndex (7 bytes)   force inline by annotation
                                    @ 3                jdk.internal.util.Preconditions::                 checkIndex     (22 bytes)   intrinsic
    @ 12   jdk.incubator.vector.AbstractSpecies::makeDummyVector (31 bytes)   failed to inline: callee is too large
                                @ 39   jdk.incubator.vector.ByteVector::maybeSwap (2 bytes)   force inline by annotation
                                  @ 31   jdk.incubator.vector.ByteVector::fromMemorySegment0 (0 bytes)   failed to inline: no static binding
                                  @ 36   jdk.incubator.vector.ByteVector::maybeSwap                                @ 44   (2 bytes)   force inline by annotation
 jdk.incubator.vector.ByteVector::intoMemorySegment0 (36 bytes)   force inline by annotation
                                  @ 1   jdk.incubator.vector.ByteVector::vspecies (0 bytes)   failed to inline: no static binding
                                  @ 8   jdk.incubator.vector.ByteVector$ByteSpecies::vectorType (5 bytes)   force inline by annotation
                                  @ 13   jdk.incubator.vector.ByteVector$ByteSpecies::elementType (4 bytes)   force inline by annotation
                                  @ 18   jdk.incubator.vector.AbstractSpecies::laneCount (5 bytes)   force inline by annotation
                                  @ 27   java.lang.invoke.Invokers$Holder::linkToTargetMethod (8 bytes)   force inline by annotation
                                    @ 4                java.lang.invoke.LambdaForm$MH/0x00007fc97f000800::        invoke          (8 bytes)   force inline by annotation
@ 8   jdk.internal.misc.Unsafe::getAndAddLong (27 bytes)   intrinsic
                              @ 5   jdk.incubator.vector.ByteVector::fromMemorySegment (40 bytes)   force inline by annotation
                                @ 2   jdk.incubator.vector.AbstractSpecies::vectorByteSize (5 bytes)   force inline by annotation
               !                  @ 32   jdk.internal.misc.ScopedMemoryAccess::storeIntoMemorySegment (30 bytes)   force inline by annotation             
                   @ 9   jdk.internal.foreign.AbstractMemorySegmentImpl::byteSize (5 bytes)   inline
                                    @ 2   jdk.internal.foreign.AbstractMemorySegmentImpl::sessionImpl (5 bytes)   force inline by annotation
                                @ 14   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize (57 bytes)   force inline by annotation
                                  @ 45   java.util.Objects::checkIndex (7 bytes)   force inline by annotation
                              @ 4   java.lang.invoke.MethodHandle::invokeBasic()L (0 bytes)   failed to inline: receiver not constant
                                           @ 2   jdk.incubator.vector.AbstractSpecies::                                !                    @ 15  vectorByteSize     jdk.internal.misc.ScopedMemoryAccess:: (5 bytes)   force inline by annotation
  @ 3  storeIntoMemorySegmentScopedInternal jdk.internal.util.Preconditions:: (49 bytes)   force inline by annotation
checkIndex (22 bytes)   intrinsic
                              @ 9   jdk.internal.foreign.AbstractMemorySegmentImpl::byteSize              (5 bytes)   inline
                   @ 26   jdk.incubator.vector.ByteVector$ByteSpecies::dummyVector                                      @ 1   (8 bytes)   force inline by annotation
 jdk.internal.foreign.MemorySessionImpl::checkValidStateRaw (33 bytes)   force inline by annotation
                              @ 14   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize (57 bytes)   force inline by annotation
                                  @ 1   jdk.incubator.vector.AbstractSpecies::dummyVector (16 bytes)   force inline by annotation
                                @ 45   java.util.Objects::checkIndex (7 bytes)   force inline by annotation
                                  @ 3   jdk.internal.util.Preconditions::             checkIndex         (22 bytes)   intrinsic
               @ 12   jdk.incubator.vector.AbstractSpecies::makeDummyVector (31 bytes)   failed to inline: callee is too large
                              @ 26   jdk.incubator.vector.ByteVector$ByteSpecies::dummyVector (8 bytes)   force inline by annotation
                                @ 31                                  @ 1   jdk.incubator.vector.ByteVector:: jdk.incubator.vector.AbstractSpecies::fromMemorySegment0dummyVector (0 bytes)   failed to inline: no static binding
 (16 bytes)   force inline by annotation
                                @ 36   jdk.incubator.vector.ByteVector::maybeSwap (2 bytes)   force inline by annotation
                                        @ 11                      java.lang.Thread::             currentThread  @ 12   jdk.incubator.vector.AbstractSpecies:: (0 bytes)   intrinsic
makeDummyVector (31 bytes)   failed to inline: callee is too large
                              @ 31   jdk.incubator.vector.ByteVector::fromMemorySegment0 (0 bytes)   failed to inline: no static binding
                              @ 36   jdk.incubator.vector.ByteVector::maybeSwap (2 bytes)   force inline by annotation
                              @ 1   jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload (8 bytes)   inline
                                @ 1   jdk.internal.vm.vector.VectorSupport::maybeRebox (8 bytes)   inline
                                  @ 3   jdk.internal.misc.Unsafe::loadFence (5 bytes)   intrinsic
                                      @ 9   jdk.internal.foreign.AbstractMemorySegmentImpl::unsafeGetBase (0 bytes)   failed to inline: no static binding
                              @ 1   jdk.internal.vm.vector.VectorSupport::maybeRebox (8 bytes)   inline
                                @ 3   jdk.internal.misc.Unsafe::loadFence (5 bytes)   intrinsic
                                      @ 14   jdk.internal.foreign.AbstractMemorySegmentImpl::unsafeGetOffset (0 bytes)   failed to inline: no static binding
                                      @ 29   jdk.internal.vm.vector.VectorSupport::store (38 bytes)   failed to inline: callee is too large
                              @ 3   jdk.internal.misc.Unsafe::loadFence (5 bytes)   intrinsic
                              @ 1                                        @ 42   jdk.internal.misc.Unsafe:: java.lang.ref.Reference::fullFencereachabilityFence (0 bytes)   intrinsic
 (1 bytes)   force inline by annotation
                              @ 10   jdk.incubator.vector.ByteVector::lambda$fromMemorySegment0Template$105 (12 bytes)   failed to inline: callee uses too much stack
                                      @ 33   java.lang.ref.Reference::reachabilityFence (1 bytes)   force inline by annotation
                              @ 3   java.lang.invoke.Invokers$Holder::linkToTargetMethod (8 bytes)   force inline by annotation
                              @ 1   jdk.incubator.vector.ByteVector$ByteSpecies::dummyVector (8 bytes)   force inline by annotation
                                    @ 25                jdk.internal.misc.ScopedMemoryAccess$ScopedAccessError::                                                 @ 4    @ 1  newRuntimeException java.lang.invoke.LambdaForm$MH/0x00007fc97f000800:: jdk.incubator.vector.AbstractSpecies::dummyVector (16 bytes)   force inline by annotation
invoke (8 bytes)   force inline by annotation
 (13 bytes)   inline
                              @ 8                jdk.incubator.vector.ByteVector$ByteSpecies::        ldLongOp          (12 bytes)   force inline by annotation
    @ 12   jdk.incubator.vector.AbstractSpecies::makeDummyVector (31 bytes)   failed to inline: callee is too large
                                      @ 4   java.util.function.Supplier::get (0 bytes)   failed to inline: no static binding
                                @ 1   jdk.incubator.vector.ByteVector$ByteSpecies::dummyVector (8 bytes)   force inline by annotation
                              @ 8   jdk.incubator.vector.ByteVector::ldLongOp (48 bytes)   force inline by annotation
                                  @ 1   jdk.incubator.vector.AbstractSpecies::dummyVector (16 bytes)   force inline by annotation
                                           @ 2                                     jdk.incubator.vector.Byte512Vector::             @ 9    @ 1   jdk.internal.foreign.HeapMemorySegmentImpl::vectorFactory jdk.incubator.vector.Vector::<init> (9 bytes)   force inline by annotation
length (21 bytes)   force inline by annotation
 (0 bytes)   failed to inline: no static binding
                                                                                   @ 7     jdk.internal.foreign.AbstractMemorySegmentImpl::                                    @ 12  <init> jdk.incubator.vector.AbstractSpecies::         @ 5   (21 bytes) jdk.incubator.vector.Byte512Vector::  makeDummyVector<init>@ 29     force inline by annotation
                      (31 bytes)   failed to inline: callee is too large
 (6 bytes)   inline
 jdk.incubator.vector.ByteVector$$Lambda/0x00007fc97f053f60::         apply@ 1   (8 bytes)   inline
 jdk.internal.foreign.SegmentFactories::                     fromArray          (41 bytes)   failed to inline: callee is too large
                                      @ 2  @ 1   jdk.incubator.vector.ByteVector::<init> java.lang.Object::              (6 bytes)   inline
                              <init>                     @ 8   (1 bytes)   inline
  @ 4   jdk.incubator.vector.ByteVector:: jdk.incubator.vector.ByteVector::             memorySegmentGetldLongOp (16 bytes) (48 bytes)   force inline by annotation
   failed to inline: callee uses too much stack
                       @ 2   jdk.incubator.vector.AbstractVector::<init> (6 bytes)   inline
                              @ 137                      java.util.concurrent.atomic.AtomicLong::                                    @ 1                        addAndGet jdk.incubator.vector.Vector::           (14 bytes)   failed to inline: callee uses too much stack
length            (0 bytes)   failed to inline: no static binding
@ 2         jdk.incubator.vector.Vector::@ 44  <init> jdk.incubator.vector.ByteVector:: (6 bytes)   inline
vectorFactory (0 bytes)   failed to inline: no static binding
                                        @ 2   jdk.internal.vm.vector.VectorSupport$Vector::<init> (6 bytes)   inline
                                  @ 29   jdk.incubator.vector.ByteVector$$Lambda/0x00007fc97f053f60::apply (8 bytes)   inline
                                                                              @ 4  @ 2   jdk.incubator.vector.ByteVector:: jdk.internal.vm.vector.VectorSupport$VectorPayload::memorySegmentGet<init> (16 bytes)   failed to inline: callee uses too much stack
 (10 bytes)   inline
                              @ 0   jdk.internal.foreign.SegmentFactories::ensureInitialized (5 bytes)   force inline by annotation
                                            @ 1   java.lang.Object::<init> (1 bytes)   inline
                                  @ 44   jdk.incubator.vector.ByteVector::vectorFactory (0 bytes)   failed to inline: no static binding
                              @ 4   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                @ 8   java.lang.NullPointerException::<init> (5 bytes)   failed to inline: don't inline Throwable constructors
                              @ 14   jdk.internal.foreign.Utils$BaseAndScale::scale (5 bytes)   inline
                              @ 26   jdk.internal.foreign.Utils$BaseAndScale::base (5 bytes)   inline
                              @ 34   jdk.internal.foreign.MemorySessionImpl::createHeap (9 bytes)   inline
                                @ 5   jdk.internal.foreign.GlobalSession$HeapSession::<init> (13 bytes)   inline
                                  @ 1   jdk.internal.foreign.GlobalSession::<init> (7 bytes)   inline
                                    @ 3   jdk.internal.foreign.MemorySessionImpl::<init> (20 bytes)   inline
                                      @ 1   java.lang.Object::<init> (1 bytes)   inline
                                  @ 6   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                    @ 8   java.lang.NullPointerException::<init> (5 bytes)   failed to inline: don't inline Throwable constructors
                              @ 37   jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat::<init> (13 bytes)   failed to inline: callee uses too much stack
                              @ 12   jdk.internal.foreign.AbstractMemorySegmentImpl::set (14 bytes)   force inline by annotation
                              @ 12   jdk.internal.foreign.AbstractMemorySegmentImpl::set (14 bytes)   force inline by annotation
                               \-> TypeProfile (9089/18178 counts) = jdk/internal/foreign/HeapMemorySegmentImpl$OfFloat
                               \-> TypeProfile (9089/18178 counts) = jdk/internal/foreign/HeapMemorySegmentImpl$OfByte
                                @ 1   jdk.internal.foreign.layout.ValueLayouts$AbstractValueLayout::varHandle (26 bytes)   force inline by annotation
                                @ 10   java.lang.invoke.VarHandleGuards::guard_LJI_V (138 bytes)   force inline by annotation
                                  @ 3   java.lang.invoke.VarHandle::checkAccessModeThenIsDirect (29 bytes)   force inline by annotation
                                  @ 48   java.lang.invoke.VarForm::getMemberName (38 bytes)   force inline by annotation
                                  @ 51   java.lang.invoke.VarHandleSegmentAsBytes::set (49 bytes)   force inline by annotation
                                    @ 14   java.lang.invoke.VarHandleSegmentAsBytes::checkAddress (21 bytes)   force inline by annotation
                                      @ 1   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                      @ 15   jdk.internal.foreign.AbstractMemorySegmentImpl::checkAccess (30 bytes)   force inline by annotation
                                        @ 26   jdk.internal.foreign.AbstractMemorySegmentImpl::checkBounds (54 bytes)   force inline by annotation
                                          @ 16   jdk.internal.util.Preconditions::checkIndex (22 bytes)   (intrinsic)
                                    @ 24   jdk.internal.foreign.AbstractMemorySegmentImpl::sessionImpl (5 bytes)   accessor
                                    @ 29   jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat::unsafeGetBase (5 bytes)   inline (hot)
                                      @ 1   jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat::unsafeGetBase (11 bytes)   inline (hot)
                                        @ 4   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                    @ 40   java.lang.invoke.VarHandleSegmentAsBytes::offsetPlain (39 bytes)   force inline by annotation
                                      @ 1   jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat::unsafeGetOffset (5 bytes)   inline (hot)
                                        @ 1   jdk.internal.foreign.HeapMemorySegmentImpl::unsafeGetOffset (5 bytes)   accessor
                                      @ 13   jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat::maxAlignMask (4 bytes)   inline (hot)
               !                    @ 45   jdk.internal.misc.ScopedMemoryAccess::putByte (21 bytes)   force inline by annotation
               !                      @ 6   jdk.internal.misc.ScopedMemoryAccess::putByteInternal (35 bytes)   force inline by annotation
                                        @ 5   jdk.internal.foreign.MemorySessionImpl::checkValidStateRaw (33 bytes)   force inline by annotation
                                        @ 15   jdk.internal.misc.Unsafe::putByte (0 bytes)   (intrinsic)
                                        @ 19   java.lang.ref.Reference::reachabilityFence (1 bytes)   force inline by annotation
                                @ 1   jdk.internal.foreign.layout.ValueLayouts$AbstractValueLayout::varHandle (26 bytes)   force inline by annotation
                                @ 10   java.lang.invoke.VarHandleGuards::guard_LJI_V (138 bytes)   force inline by annotation
                                  @ 3   java.lang.invoke.VarHandle::checkAccessModeThenIsDirect (29 bytes)   force inline by annotation
                                  @ 48   java.lang.invoke.VarForm::getMemberName (38 bytes)   force inline by annotation
                                  @ 51   java.lang.invoke.VarHandleSegmentAsBytes::set (49 bytes)   force inline by annotation
                                    @ 14   java.lang.invoke.VarHandleSegmentAsBytes::checkAddress (21 bytes)   force inline by annotation
                                      @ 1   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                      @ 15   jdk.internal.foreign.AbstractMemorySegmentImpl::checkAccess (30 bytes)   force inline by annotation
                                        @ 26   jdk.internal.foreign.AbstractMemorySegmentImpl::checkBounds (54 bytes)   force inline by annotation
                                          @ 16   jdk.internal.util.Preconditions::checkIndex (22 bytes)   (intrinsic)
                                    @ 24   jdk.internal.foreign.AbstractMemorySegmentImpl::sessionImpl (5 bytes)   accessor
                                    @ 29   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetBase (5 bytes)   inline (hot)
                                      @ 1   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetBase (11 bytes)   inline (hot)
                                        @ 4   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                    @ 40   java.lang.invoke.VarHandleSegmentAsBytes::offsetPlain (39 bytes)   force inline by annotation
                                      @ 1   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetOffset (5 bytes)   inline (hot)
                                        @ 1   jdk.internal.foreign.HeapMemorySegmentImpl::unsafeGetOffset (5 bytes)   accessor
                                      @ 13   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::maxAlignMask (4 bytes)   inline (hot)
               !                    @ 45   jdk.internal.misc.ScopedMemoryAccess::putByte (21 bytes)   force inline by annotation
               !                      @ 6   jdk.internal.misc.ScopedMemoryAccess::putByteInternal (35 bytes)   force inline by annotation
                                        @ 5   jdk.internal.foreign.MemorySessionImpl::checkValidStateRaw (33 bytes)   force inline by annotation
                                        @ 15   jdk.internal.misc.Unsafe::putByte (0 bytes)   (intrinsic)
                                        @ 19   java.lang.ref.Reference::reachabilityFence (1 bytes)   force inline by annotation
                              @ 11   java.util.concurrent.ThreadLocalRandom::nextInt (8 bytes)   inline (hot)
                               \-> TypeProfile (10563/10563 counts) = java/util/concurrent/ThreadLocalRandom
                                @ 1   java.util.concurrent.ThreadLocalRandom::nextSeed (39 bytes)   inline (hot)
                                  @ 3   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                  @ 18   jdk.internal.misc.Unsafe::getLong (0 bytes)   (intrinsic)
                                  @ 22   java.lang.Thread::threadId (5 bytes)   accessor
                                  @ 34   jdk.internal.misc.Unsafe::putLong (0 bytes)   (intrinsic)
                                @ 4   java.util.concurrent.ThreadLocalRandom::mix32 (26 bytes)   inline (hot)
                              @ 20   java.lang.Math::min (11 bytes)   (intrinsic)
                              @ 10   jdk.internal.foreign.AbstractMemorySegmentImpl::get (12 bytes)   force inline by annotation
                               \-> TypeProfile (20994/20994 counts) = jdk/internal/foreign/HeapMemorySegmentImpl$OfByte
                                @ 1   jdk.internal.foreign.layout.ValueLayouts$AbstractValueLayout::varHandle (26 bytes)   force inline by annotation
                                @ 8   java.lang.invoke.VarHandleGuards::guard_LJ_I (84 bytes)   force inline by annotation
                                  @ 3   java.lang.invoke.VarHandle::checkAccessModeThenIsDirect (29 bytes)   force inline by annotation
                                  @ 46   java.lang.invoke.VarForm::getMemberName (38 bytes)   force inline by annotation
                                  @ 49   java.lang.invoke.VarHandleSegmentAsBytes::get (47 bytes)   force inline by annotation
                                    @ 14   java.lang.invoke.VarHandleSegmentAsBytes::checkAddress (21 bytes)   force inline by annotation
                                      @ 1   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                      @ 15   jdk.internal.foreign.AbstractMemorySegmentImpl::checkAccess (30 bytes)   force inline by annotation
                                        @ 26   jdk.internal.foreign.AbstractMemorySegmentImpl::checkBounds (54 bytes)   force inline by annotation
                                          @ 16   jdk.internal.util.Preconditions::checkIndex (22 bytes)   (intrinsic)
                                    @ 24   jdk.internal.foreign.AbstractMemorySegmentImpl::sessionImpl (5 bytes)   accessor
                                    @ 29   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetBase (5 bytes)   inline (hot)
                                      @ 1   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetBase (11 bytes)   inline (hot)
                                        @ 4   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                    @ 40   java.lang.invoke.VarHandleSegmentAsBytes::offsetPlain (39 bytes)   force inline by annotation
                                      @ 1   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetOffset (5 bytes)   inline (hot)
                                        @ 1   jdk.internal.foreign.HeapMemorySegmentImpl::unsafeGetOffset (5 bytes)   accessor
                                      @ 13   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::maxAlignMask (4 bytes)   inline (hot)
               !                    @ 43   jdk.internal.misc.ScopedMemoryAccess::getByte (16 bytes)   force inline by annotation
               !                      @ 4   jdk.internal.misc.ScopedMemoryAccess::getByteInternal (34 bytes)   force inline by annotation
                                        @ 5   jdk.internal.foreign.MemorySessionImpl::checkValidStateRaw (33 bytes)   force inline by annotation
                                        @ 13   jdk.internal.misc.Unsafe::getByte (0 bytes)   (intrinsic)
                                        @ 19   java.lang.ref.Reference::reachabilityFence (1 bytes)   force inline by annotation
                              @ 5   jdk.internal.foreign.GlobalSession$HeapSession::<init> (13 bytes)   inline (hot)
                                @ 1   jdk.internal.foreign.GlobalSession::<init> (7 bytes)   inline (hot)
                                  @ 3   jdk.internal.foreign.MemorySessionImpl::<init> (20 bytes)   failed to inline: unloaded signature classes
                                @ 6   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                              @ 3   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                              @ 9   jdk.internal.misc.Unsafe::getInt (0 bytes)   (intrinsic)
                              @ 7   jdk.internal.foreign.AbstractMemorySegmentImpl::<init> (21 bytes)   force inline by annotation
                                @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 11   java.util.concurrent.ThreadLocalRandom::nextInt (8 bytes)   inline (hot)
                               \-> TypeProfile (53299/53299 counts) = java/util/concurrent/ThreadLocalRandom
                                @ 1   java.util.concurrent.ThreadLocalRandom::nextSeed (39 bytes)   inline (hot)
                                  @ 3   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                  @ 18   jdk.internal.misc.Unsafe::getLong (0 bytes)   (intrinsic)
                                  @ 22   java.lang.Thread::threadId (5 bytes)   accessor
                                  @ 34   jdk.internal.misc.Unsafe::putLong (0 bytes)   (intrinsic)
                                @ 4   java.util.concurrent.ThreadLocalRandom::mix32 (26 bytes)   inline (hot)
                              @ 20   java.lang.Math::min (11 bytes)   (intrinsic)
                              @ 1   jdk.internal.foreign.SegmentFactories::fromArray (41 bytes)   inline (hot)
                                @ 0   jdk.internal.foreign.SegmentFactories::ensureInitialized (5 bytes)   force inline by annotation
                                @ 4   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                @ 14   jdk.internal.foreign.Utils$BaseAndScale::scale (5 bytes)   accessor
                                @ 26   jdk.internal.foreign.Utils$BaseAndScale::base (5 bytes)   accessor
                                @ 34   jdk.internal.foreign.MemorySessionImpl::createHeap (9 bytes)   inline (hot)
                                  @ 5   jdk.internal.foreign.GlobalSession$HeapSession::<init> (13 bytes)   inline (hot)
                                    @ 1   jdk.internal.foreign.GlobalSession::<init> (7 bytes)   inline (hot)
                                      @ 3   jdk.internal.foreign.MemorySessionImpl::<init> (20 bytes)   failed to inline: unloaded signature classes
                                    @ 6   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                @ 37   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::<init> (13 bytes)   inline (hot)
                                  @ 9   jdk.internal.foreign.HeapMemorySegmentImpl::<init> (21 bytes)   force inline by annotation
                                    @ 7   jdk.internal.foreign.AbstractMemorySegmentImpl::<init> (21 bytes)   force inline by annotation
                                      @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 3   java.util.random.RandomGenerator::nextInt (12 bytes)   inline (hot)
                                @ 2   jdk.internal.util.random.RandomSupport::checkRange (16 bytes)   inline (hot)
                                @ 8   jdk.internal.util.random.RandomSupport::boundedNextInt (109 bytes)   inline (hot)
                                  @ 1   java.util.concurrent.ThreadLocalRandom::nextInt (8 bytes)   inline (hot)
                                    @ 1   java.util.concurrent.ThreadLocalRandom::nextSeed (39 bytes)   inline (hot)
                                      @ 3   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                      @ 18   jdk.internal.misc.Unsafe::getLong (0 bytes)   (intrinsic)
                                      @ 22   java.lang.Thread::threadId (5 bytes)   accessor
                                      @ 34   jdk.internal.misc.Unsafe::putLong (0 bytes)   (intrinsic)
                                    @ 4   java.util.concurrent.ThreadLocalRandom::mix32 (26 bytes)   inline (hot)
                              @ 29   jdk.incubator.vector.ByteVector$$Lambda/0x00007fc97f053f60::apply (8 bytes)   inline (hot)
                               \-> TypeProfile (49152/49152 counts) = jdk/incubator/vector/ByteVector$$Lambda+0x00007fc97f053f60
                                @ 4   jdk.incubator.vector.ByteVector::memorySegmentGet (16 bytes)   inline (hot)
                                  @ 10   jdk.internal.foreign.AbstractMemorySegmentImpl::get (12 bytes)   force inline by annotation
                                   \-> TypeProfile (20994/20994 counts) = jdk/internal/foreign/HeapMemorySegmentImpl$OfByte
                                    @ 1   jdk.internal.foreign.layout.ValueLayouts$AbstractValueLayout::varHandle (26 bytes)   force inline by annotation
                                    @ 8   java.lang.invoke.VarHandleGuards::guard_LJ_I (84 bytes)   force inline by annotation
                                      @ 3   java.lang.invoke.VarHandle::checkAccessModeThenIsDirect (29 bytes)   force inline by annotation
                                      @ 46   java.lang.invoke.VarForm::getMemberName (38 bytes)   force inline by annotation
                                      @ 49   java.lang.invoke.VarHandleSegmentAsBytes::get (47 bytes)   force inline by annotation
                                        @ 14   java.lang.invoke.VarHandleSegmentAsBytes::checkAddress (21 bytes)   force inline by annotation
                                          @ 1   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                          @ 15   jdk.internal.foreign.AbstractMemorySegmentImpl::checkAccess (30 bytes)   force inline by annotation
                                            @ 26   jdk.internal.foreign.AbstractMemorySegmentImpl::checkBounds (54 bytes)   force inline by annotation
                                              @ 16   jdk.internal.util.Preconditions::checkIndex (22 bytes)   (intrinsic)
                                        @ 24   jdk.internal.foreign.AbstractMemorySegmentImpl::sessionImpl (5 bytes)   accessor
                                        @ 29   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetBase (5 bytes)   inline (hot)
                                          @ 1   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetBase (11 bytes)   inline (hot)
                                            @ 4   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                        @ 40   java.lang.invoke.VarHandleSegmentAsBytes::offsetPlain (39 bytes)   force inline by annotation
                                          @ 1   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetOffset (5 bytes)   inline (hot)
                                            @ 1   jdk.internal.foreign.HeapMemorySegmentImpl::unsafeGetOffset (5 bytes)   accessor
                                          @ 13   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::maxAlignMask (4 bytes)   inline (hot)
               !                        @ 43   jdk.internal.misc.ScopedMemoryAccess::getByte (16 bytes)   force inline by annotation
               !                          @ 4   jdk.internal.misc.ScopedMemoryAccess::getByteInternal (34 bytes)   force inline by annotation
                                            @ 5   jdk.internal.foreign.MemorySessionImpl::checkValidStateRaw (33 bytes)   force inline by annotation
                                            @ 13   jdk.internal.misc.Unsafe::getByte (0 bytes)   (intrinsic)
                                            @ 19   java.lang.ref.Reference::reachabilityFence (1 bytes)   force inline by annotation
                              @ 44   jdk.incubator.vector.Byte512Vector::vectorFactory (6 bytes)   force inline by annotation
                               \-> TypeProfile (769/769 counts) = jdk/incubator/vector/Byte512Vector
                                @ 2   jdk.incubator.vector.Byte512Vector::vectorFactory (9 bytes)   force inline by annotation
                                  @ 5   jdk.incubator.vector.Byte512Vector::<init> (6 bytes)   inline (hot)
                                    @ 2   jdk.incubator.vector.ByteVector::<init> (6 bytes)   inline (hot)
                                      @ 2   jdk.incubator.vector.AbstractVector::<init> (6 bytes)   inline (hot)
                                        @ 2   jdk.incubator.vector.Vector::<init> (6 bytes)   inline (hot)
                                          @ 2   jdk.internal.vm.vector.VectorSupport$Vector::<init> (6 bytes)   inline (hot)
                                            @ 2   jdk.internal.vm.vector.VectorSupport$VectorPayload::<init> (10 bytes)   inline (hot)
                                              @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 0   jdk.internal.foreign.SegmentFactories::ensureInitialized (5 bytes)   force inline by annotation
                              @ 4   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                              @ 14   jdk.internal.foreign.Utils$BaseAndScale::scale (5 bytes)   accessor
                              @ 26   jdk.internal.foreign.Utils$BaseAndScale::base (5 bytes)   accessor
                              @ 34   jdk.internal.foreign.MemorySessionImpl::createHeap (9 bytes)   inline (hot)
                                @ 5   jdk.internal.foreign.GlobalSession$HeapSession::<init> (13 bytes)   inline (hot)
                                  @ 1   jdk.internal.foreign.GlobalSession::<init> (7 bytes)   inline (hot)
                                    @ 3   jdk.internal.foreign.MemorySessionImpl::<init> (20 bytes)   failed to inline: unloaded signature classes
                                  @ 6   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                              @ 37   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::<init> (13 bytes)   inline (hot)
                                @ 9   jdk.internal.foreign.HeapMemorySegmentImpl::<init> (21 bytes)   force inline by annotation
                                  @ 7   jdk.internal.foreign.AbstractMemorySegmentImpl::<init> (21 bytes)   force inline by annotation
                                    @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
#
# A fatal error has been detected by the Java Runtime Environment:
#
#  Internal Error (/home/jatinbha/sandboxes/jdk/src/hotspot/share/utilities/globalDefinitions.cpp:334), pid=466475, tid=466500
#  assert((allow_address || t != T_ADDRESS) && t <= T_CONFLICT) failed: unexpected basic type
#
# JRE version: OpenJDK Runtime Environment (23.0) (slowdebug build 23-internal-adhoc.root.jdk)
# Java VM: OpenJDK 64-Bit Server VM (slowdebug 23-internal-adhoc.root.jdk, mixed mode, sharing, tiered, compressed oops, compressed class ptrs, g1 gc, linux-amd64)
# Problematic frame:
# V  [libjvm.so+0xd21c4a]                              @ 1   jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload (8 bytes)   inline (hot)
                                @ 1   jdk.internal.vm.vector.VectorSupport::maybeRebox (8 bytes)   inline (hot)
                                  @ 3   jdk.internal.misc.Unsafe::loadFence (5 bytes)   (intrinsic)
  type2aelembytes(BasicType, bool)+0x53
#
# Core dump will be written. Default location: Core dumps may be processed with "/usr/share/apport/apport %p %s %c %d %P %E" (or dumping to /home/jatinbha/code/java/bugz/datastax/core.466475)
#
# An error report file with more information is saved as:
# /home/jatinbha/code/java/bugz/datastax/hs_err_pid466475.log
                              @ 137   java.util.concurrent.atomic.AtomicLong::addAndGet (14 bytes)   inline (hot)
                                @ 8   jdk.internal.misc.Unsafe::getAndAddLong (27 bytes)   (intrinsic)
                              @ 1   java.util.concurrent.ThreadLocalRandom::nextInt (8 bytes)   inline (hot)
                               \-> TypeProfile (15823/15823 counts) = java/util/concurrent/ThreadLocalRandom
                                @ 1   java.util.concurrent.ThreadLocalRandom::nextSeed (39 bytes)   inline (hot)
                                  @ 3   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                  @ 18   jdk.internal.misc.Unsafe::getLong (0 bytes)   (intrinsic)
                                  @ 22   java.lang.Thread::threadId (5 bytes)   accessor
                                  @ 34   jdk.internal.misc.Unsafe::putLong (0 bytes)   (intrinsic)
                                @ 4   java.util.concurrent.ThreadLocalRandom::mix32 (26 bytes)   inline (hot)
                              @ 9   jdk.internal.foreign.HeapMemorySegmentImpl::<init> (21 bytes)   force inline by annotation
                                @ 7   jdk.internal.foreign.AbstractMemorySegmentImpl::<init> (21 bytes)   force inline by annotation
                                  @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 28   jdk.incubator.vector.ByteVector$$Lambda/0x00007fc97f055788::apply (10 bytes)   inline (hot)
                               \-> TypeProfile (55808/55808 counts) = jdk/incubator/vector/ByteVector$$Lambda+0x00007fc97f055788
                                @ 6   jdk.incubator.vector.ByteVector::memorySegmentSet (18 bytes)   inline (hot)
                                  @ 12   jdk.internal.foreign.AbstractMemorySegmentImpl::set (14 bytes)   force inline by annotation
                                  @ 12   jdk.internal.foreign.AbstractMemorySegmentImpl::set (14 bytes)   force inline by annotation
                                   \-> TypeProfile (9089/18178 counts) = jdk/internal/foreign/HeapMemorySegmentImpl$OfFloat
                                   \-> TypeProfile (9089/18178 counts) = jdk/internal/foreign/HeapMemorySegmentImpl$OfByte
                                    @ 1   jdk.internal.foreign.layout.ValueLayouts$AbstractValueLayout::varHandle (26 bytes)   force inline by annotation
                                    @ 10   java.lang.invoke.VarHandleGuards::guard_LJI_V (138 bytes)   force inline by annotation
                                      @ 3   java.lang.invoke.VarHandle::checkAccessModeThenIsDirect (29 bytes)   force inline by annotation
                                      @ 48   java.lang.invoke.VarForm::getMemberName (38 bytes)   force inline by annotation
                                      @ 51   java.lang.invoke.VarHandleSegmentAsBytes::set (49 bytes)   force inline by annotation
                                        @ 14   java.lang.invoke.VarHandleSegmentAsBytes::checkAddress (21 bytes)   force inline by annotation
                                          @ 1   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                          @ 15   jdk.internal.foreign.AbstractMemorySegmentImpl::checkAccess (30 bytes)   force inline by annotation
                                            @ 26   jdk.internal.foreign.AbstractMemorySegmentImpl::checkBounds (54 bytes)   force inline by annotation
                                              @ 16   jdk.internal.util.Preconditions::checkIndex (22 bytes)   (intrinsic)
                                        @ 24   jdk.internal.foreign.AbstractMemorySegmentImpl::sessionImpl (5 bytes)   accessor
                                        @ 29   jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat::unsafeGetBase (5 bytes)   inline (hot)
                                          @ 1   jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat::unsafeGetBase (11 bytes)   inline (hot)
                                            @ 4   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                        @ 40   java.lang.invoke.VarHandleSegmentAsBytes::offsetPlain (39 bytes)   force inline by annotation
                                          @ 1   jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat::unsafeGetOffset (5 bytes)   inline (hot)
                                            @ 1   jdk.internal.foreign.HeapMemorySegmentImpl::unsafeGetOffset (5 bytes)   accessor
                                          @ 13   jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat::maxAlignMask (4 bytes)   inline (hot)
               !                        @ 45   jdk.internal.misc.ScopedMemoryAccess::putByte (21 bytes)   force inline by annotation
               !                          @ 6   jdk.internal.misc.ScopedMemoryAccess::putByteInternal (35 bytes)   force inline by annotation
                                            @ 5   jdk.internal.foreign.MemorySessionImpl::checkValidStateRaw (33 bytes)   force inline by annotation
                                            @ 15   jdk.internal.misc.Unsafe::putByte (0 bytes)   (intrinsic)
                                            @ 19   java.lang.ref.Reference::reachabilityFence (1 bytes)   force inline by annotation
                                    @ 1   jdk.internal.foreign.layout.ValueLayouts$AbstractValueLayout::varHandle (26 bytes)   force inline by annotation
                                    @ 10   java.lang.invoke.VarHandleGuards::guard_LJI_V (138 bytes)   force inline by annotation
                                      @ 3   java.lang.invoke.VarHandle::checkAccessModeThenIsDirect (29 bytes)   force inline by annotation
                                      @ 48   java.lang.invoke.VarForm::getMemberName (38 bytes)   force inline by annotation
                                      @ 51   java.lang.invoke.VarHandleSegmentAsBytes::set (49 bytes)   force inline by annotation
                                        @ 14   java.lang.invoke.VarHandleSegmentAsBytes::checkAddress (21 bytes)   force inline by annotation
                                          @ 1   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                          @ 15   jdk.internal.foreign.AbstractMemorySegmentImpl::checkAccess (30 bytes)   force inline by annotation
                                            @ 26   jdk.internal.foreign.AbstractMemorySegmentImpl::checkBounds (54 bytes)   force inline by annotation
                                              @ 16   jdk.internal.util.Preconditions::checkIndex (22 bytes)   (intrinsic)
                                        @ 24   jdk.internal.foreign.AbstractMemorySegmentImpl::sessionImpl (5 bytes)   accessor
                                        @ 29   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetBase (5 bytes)   inline (hot)
                                          @ 1   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetBase (11 bytes)   inline (hot)
                                            @ 4   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                        @ 40   java.lang.invoke.VarHandleSegmentAsBytes::offsetPlain (39 bytes)   force inline by annotation
                                          @ 1   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetOffset (5 bytes)   inline (hot)
                                            @ 1   jdk.internal.foreign.HeapMemorySegmentImpl::unsafeGetOffset (5 bytes)   accessor
                                          @ 13   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::maxAlignMask (4 bytes)   inline (hot)
               !                        @ 45   jdk.internal.misc.ScopedMemoryAccess::putByte (21 bytes)   force inline by annotation
               !                          @ 6   jdk.internal.misc.ScopedMemoryAccess::putByteInternal (35 bytes)   force inline by annotation
                                            @ 5   jdk.internal.foreign.MemorySessionImpl::checkValidStateRaw (33 bytes)   force inline by annotation
                                            @ 15   jdk.internal.misc.Unsafe::putByte (0 bytes)   (intrinsic)
                                            @ 19   java.lang.ref.Reference::reachabilityFence (1 bytes)   force inline by annotation
                              @ 5   jdk.incubator.vector.ByteVector$ByteSpecies::fromMemorySegment (9 bytes)   force inline by annotation
                                @ 5   jdk.incubator.vector.ByteVector::fromMemorySegment (40 bytes)   force inline by annotation
                                  @ 2   jdk.incubator.vector.AbstractSpecies::vectorByteSize (5 bytes)   accessor
                                  @ 9   jdk.internal.foreign.AbstractMemorySegmentImpl::byteSize (5 bytes)   accessor
                                   \-> TypeProfile (13272/13272 counts) = jdk/internal/foreign/HeapMemorySegmentImpl$OfByte
                                  @ 14   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize (57 bytes)   force inline by annotation
                                    @ 45   java.util.Objects::checkIndex (7 bytes)   force inline by annotation
                                      @ 3   jdk.internal.util.Preconditions::checkIndex (22 bytes)   (intrinsic)
                                  @ 26   jdk.incubator.vector.ByteVector$ByteSpecies::dummyVector (8 bytes)   force inline by annotation
                                    @ 1   jdk.incubator.vector.AbstractSpecies::dummyVector (16 bytes)   force inline by annotation
                                  @ 31   jdk.incubator.vector.Byte512Vector::fromMemorySegment0 (7 bytes)   force inline by annotation
                                    @ 3   jdk.incubator.vector.ByteVector::fromMemorySegment0Template (40 bytes)   force inline by annotation
                                      @ 1   jdk.incubator.vector.Byte512Vector::vspecies (4 bytes)   force inline by annotation
                                      @ 8   jdk.incubator.vector.ByteVector$ByteSpecies::vectorType (5 bytes)   accessor
                                      @ 13   jdk.incubator.vector.ByteVector$ByteSpecies::elementType (4 bytes)   force inline by annotation
                                      @ 18   jdk.incubator.vector.AbstractSpecies::laneCount (5 bytes)   accessor
                                      @ 28   java.lang.invoke.Invokers$Holder::linkToTargetMethod (8 bytes)   force inline by annotation
                                        @ 4   java.lang.invoke.LambdaForm$MH/0x00007fc97f000800::invoke (8 bytes)   force inline by annotation
               !                      @ 33   jdk.internal.misc.ScopedMemoryAccess::loadFromMemorySegment (26 bytes)   force inline by annotation
                                        @ 1   jdk.internal.foreign.AbstractMemorySegmentImpl::sessionImpl (5 bytes)   accessor
               !                        @ 14   jdk.internal.misc.ScopedMemoryAccess::loadFromMemorySegmentScopedInternal (53 bytes)   force inline by annotation
                                          @ 1   jdk.internal.foreign.MemorySessionImpl::checkValidStateRaw (33 bytes)   force inline by annotation
                                          @ 9   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetBase (5 bytes)   inline (hot)
                                            @ 1   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetBase (11 bytes)   inline (hot)
                                              @ 4   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                          @ 14   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetOffset (5 bytes)   inline (hot)
                                            @ 1   jdk.internal.foreign.HeapMemorySegmentImpl::unsafeGetOffset (5 bytes)   accessor
                                          @ 29   jdk.internal.vm.vector.VectorSupport::load (38 bytes)   (intrinsic)
                                          @ 38   java.lang.ref.Reference::reachabilityFence (1 bytes)   force inline by annotation
                                  @ 36   jdk.incubator.vector.ByteVector::maybeSwap (2 bytes)   force inline by annotation
                              @ 3   jdk.incubator.vector.ByteVector::fromMemorySegment0Template (40 bytes)   force inline by annotation
                                @ 1   jdk.incubator.vector.Byte512Vector::vspecies (4 bytes)   force inline by annotation
                                @ 8   jdk.incubator.vector.ByteVector$ByteSpecies::vectorType (5 bytes)   accessor
                                @ 13   jdk.incubator.vector.ByteVector$ByteSpecies::elementType (4 bytes)   force inline by annotation
                                @ 18   jdk.incubator.vector.AbstractSpecies::laneCount (5 bytes)   accessor
                                @ 28   java.lang.invoke.Invokers$Holder::linkToTargetMethod (8 bytes)   force inline by annotation
                                  @ 4   java.lang.invoke.LambdaForm$MH/0x00007fc97f000800::invoke (8 bytes)   force inline by annotation
               !                @ 33   jdk.internal.misc.ScopedMemoryAccess::loadFromMemorySegment (26 bytes)   force inline by annotation
                                  @ 1   jdk.internal.foreign.AbstractMemorySegmentImpl::sessionImpl (5 bytes)   accessor
               !                  @ 14   jdk.internal.misc.ScopedMemoryAccess::loadFromMemorySegmentScopedInternal (53 bytes)   force inline by annotation
                                    @ 1   jdk.internal.foreign.MemorySessionImpl::checkValidStateRaw (33 bytes)   force inline by annotation
                                    @ 9   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetBase (5 bytes)   inline (hot)
                                      @ 1   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetBase (11 bytes)   inline (hot)
                                        @ 4   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                    @ 14   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetOffset (5 bytes)   inline (hot)
                                      @ 1   jdk.internal.foreign.HeapMemorySegmentImpl::unsafeGetOffset (5 bytes)   accessor
                                    @ 29   jdk.internal.vm.vector.VectorSupport::load (38 bytes)   (intrinsic)
                                    @ 38   java.lang.ref.Reference::reachabilityFence (1 bytes)   force inline by annotation
                              @ 32   jdk.incubator.vector.ByteVector$$Lambda/0x00007fc97f053b30::load (17 bytes)   inline (hot)
                               \-> TypeProfile (13989/13989 counts) = jdk/incubator/vector/ByteVector$$Lambda+0x00007fc97f053b30
                                @ 10   jdk.incubator.vector.ByteVector::lambda$fromMemorySegment0Template$105 (12 bytes)   inline (hot)
                                  @ 3   java.lang.invoke.Invokers$Holder::linkToTargetMethod (8 bytes)   force inline by annotation
                                    @ 4   java.lang.invoke.LambdaForm$MH/0x00007fc97f000800::invoke (8 bytes)   force inline by annotation
                                  @ 8   jdk.incubator.vector.ByteVector$ByteSpecies::ldLongOp (12 bytes)   force inline by annotation
                                    @ 1   jdk.incubator.vector.ByteVector$ByteSpecies::dummyVector (8 bytes)   force inline by annotation
                                      @ 1   jdk.incubator.vector.AbstractSpecies::dummyVector (16 bytes)   force inline by annotation
                                    @ 8   jdk.incubator.vector.ByteVector::ldLongOp (48 bytes)   force inline by annotation
                                      @ 1   jdk.incubator.vector.Byte512Vector::length (4 bytes)   force inline by annotation
                                      @ 29   jdk.incubator.vector.ByteVector$$Lambda/0x00007fc97f053f60::apply (8 bytes)   inline (hot)
                                        @ 4   jdk.incubator.vector.ByteVector::memorySegmentGet (16 bytes)   inline (hot)
                                          @ 10   jdk.internal.foreign.AbstractMemorySegmentImpl::get (12 bytes)   force inline by annotation
                                            @ 1   jdk.internal.foreign.layout.ValueLayouts$AbstractValueLayout::varHandle (26 bytes)   force inline by annotation
                                            @ 8   java.lang.invoke.VarHandleGuards::guard_LJ_I (84 bytes)   force inline by annotation
                                              @ 3   java.lang.invoke.VarHandle::checkAccessModeThenIsDirect (29 bytes)   force inline by annotation
                                              @ 46   java.lang.invoke.VarForm::getMemberName (38 bytes)   force inline by annotation
                                              @ 49   java.lang.invoke.VarHandleSegmentAsBytes::get (47 bytes)   force inline by annotation
                                                @ 14   java.lang.invoke.VarHandleSegmentAsBytes::checkAddress (21 bytes)   force inline by annotation
                                                  @ 1   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                                  @ 15   jdk.internal.foreign.AbstractMemorySegmentImpl::checkAccess (30 bytes)   force inline by annotation
                                                    @ 26   jdk.internal.foreign.AbstractMemorySegmentImpl::checkBounds (54 bytes)   force inline by annotation
                                                      @ 16   jdk.internal.util.Preconditions::checkIndex (22 bytes)   (intrinsic)
                                                @ 24   jdk.internal.foreign.AbstractMemorySegmentImpl::sessionImpl (5 bytes)   accessor
                                                @ 29   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetBase (5 bytes)   inline (hot)
                                                  @ 1   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetBase (11 bytes)   inline (hot)
                                                    @ 4   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                                @ 40   java.lang.invoke.VarHandleSegmentAsBytes::offsetPlain (39 bytes)   force inline by annotation
                                                  @ 1   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetOffset (5 bytes)   inline (hot)
                                                    @ 1   jdk.internal.foreign.HeapMemorySegmentImpl::unsafeGetOffset (5 bytes)   accessor
                                                  @ 13   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::maxAlignMask (4 bytes)   inline (hot)
               !                                @ 43   jdk.internal.misc.ScopedMemoryAccess::getByte (16 bytes)   force inline by annotation
               !                                  @ 4   jdk.internal.misc.ScopedMemoryAccess::getByteInternal (34 bytes)   force inline by annotation
                                                    @ 5   jdk.internal.foreign.MemorySessionImpl::checkValidStateRaw (33 bytes)   force inline by annotation
                                                    @ 13   jdk.internal.misc.Unsafe::getByte (0 bytes)   (intrinsic)
                                                    @ 19   java.lang.ref.Reference::reachabilityFence (1 bytes)   force inline by annotation
                                      @ 44   jdk.incubator.vector.Byte512Vector::vectorFactory (6 bytes)   force inline by annotation
                                        @ 2   jdk.incubator.vector.Byte512Vector::vectorFactory (9 bytes)   force inline by annotation
                                          @ 5   jdk.incubator.vector.Byte512Vector::<init> (6 bytes)   inline (hot)
                                            @ 2   jdk.incubator.vector.ByteVector::<init> (6 bytes)   inline (hot)
                                              @ 2   jdk.incubator.vector.AbstractVector::<init> (6 bytes)   inline (hot)
                                                @ 2   jdk.incubator.vector.Vector::<init> (6 bytes)   inline (hot)
                                                  @ 2   jdk.internal.vm.vector.VectorSupport$Vector::<init> (6 bytes)   inline (hot)
                                                    @ 2   jdk.internal.vm.vector.VectorSupport$VectorPayload::<init> (10 bytes)   inline (hot)
                                                      @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 3   java.lang.invoke.Invokers$Holder::linkToTargetMethod (8 bytes)   force inline by annotation
                                @ 4   java.lang.invoke.LambdaForm$MH/0x00007fc97f000800::invoke (8 bytes)   force inline by annotation
                              @ 8   jdk.incubator.vector.ByteVector$ByteSpecies::ldLongOp (12 bytes)   force inline by annotation
                                @ 1   jdk.incubator.vector.ByteVector$ByteSpecies::dummyVector (8 bytes)   force inline by annotation
                                  @ 1   jdk.incubator.vector.AbstractSpecies::dummyVector (16 bytes)   force inline by annotation
                                @ 8   jdk.incubator.vector.ByteVector::ldLongOp (48 bytes)   force inline by annotation
                                  @ 1   jdk.incubator.vector.Byte512Vector::length (4 bytes)   force inline by annotation
                                  @ 29   jdk.incubator.vector.ByteVector$$Lambda/0x00007fc97f053f60::apply (8 bytes)   inline (hot)
                                    @ 4   jdk.incubator.vector.ByteVector::memorySegmentGet (16 bytes)   inline (hot)
                                      @ 10   jdk.internal.foreign.AbstractMemorySegmentImpl::get (12 bytes)   force inline by annotation
                                        @ 1   jdk.internal.foreign.layout.ValueLayouts$AbstractValueLayout::varHandle (26 bytes)   force inline by annotation
                                        @ 8   java.lang.invoke.VarHandleGuards::guard_LJ_I (84 bytes)   force inline by annotation
                                          @ 3   java.lang.invoke.VarHandle::checkAccessModeThenIsDirect (29 bytes)   force inline by annotation
                                          @ 46   java.lang.invoke.VarForm::getMemberName (38 bytes)   force inline by annotation
                                          @ 49   java.lang.invoke.VarHandleSegmentAsBytes::get (47 bytes)   force inline by annotation
                                            @ 14   java.lang.invoke.VarHandleSegmentAsBytes::checkAddress (21 bytes)   force inline by annotation
                                              @ 1   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                              @ 15   jdk.internal.foreign.AbstractMemorySegmentImpl::checkAccess (30 bytes)   force inline by annotation
                                                @ 26   jdk.internal.foreign.AbstractMemorySegmentImpl::checkBounds (54 bytes)   force inline by annotation
                                                  @ 16   jdk.internal.util.Preconditions::checkIndex (22 bytes)   (intrinsic)
                                            @ 24   jdk.internal.foreign.AbstractMemorySegmentImpl::sessionImpl (5 bytes)   accessor
                                            @ 29   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetBase (5 bytes)   inline (hot)
                                             \-> TypeProfile (20994/20994 counts) = jdk/internal/foreign/HeapMemorySegmentImpl$OfByte
                                              @ 1   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetBase (11 bytes)   inline (hot)
                                                @ 4   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                            @ 40   java.lang.invoke.VarHandleSegmentAsBytes::offsetPlain (39 bytes)   force inline by annotation
                                              @ 1   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetOffset (5 bytes)   inline (hot)
                                                @ 1   jdk.internal.foreign.HeapMemorySegmentImpl::unsafeGetOffset (5 bytes)   accessor
                                              @ 13   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::maxAlignMask (4 bytes)   inline (hot)
               !                            @ 43   jdk.internal.misc.ScopedMemoryAccess::getByte (16 bytes)   force inline by annotation
               !                              @ 4   jdk.internal.misc.ScopedMemoryAccess::getByteInternal (34 bytes)   force inline by annotation
                                                @ 5   jdk.internal.foreign.MemorySessionImpl::checkValidStateRaw (33 bytes)   force inline by annotation
                                                @ 13   jdk.internal.misc.Unsafe::getByte (0 bytes)   (intrinsic)
                                                @ 19   java.lang.ref.Reference::reachabilityFence (1 bytes)   force inline by annotation
                                  @ 44   jdk.incubator.vector.Byte512Vector::vectorFactory (6 bytes)   force inline by annotation
                                    @ 2   jdk.incubator.vector.Byte512Vector::vectorFactory (9 bytes)   force inline by annotation
                                      @ 5   jdk.incubator.vector.Byte512Vector::<init> (6 bytes)   inline (hot)
                                        @ 2   jdk.incubator.vector.ByteVector::<init> (6 bytes)   inline (hot)
                                          @ 2   jdk.incubator.vector.AbstractVector::<init> (6 bytes)   inline (hot)
                                            @ 2   jdk.incubator.vector.Vector::<init> (6 bytes)   inline (hot)
                                              @ 2   jdk.internal.vm.vector.VectorSupport$Vector::<init> (6 bytes)   inline (hot)
                                                @ 2   jdk.internal.vm.vector.VectorSupport$VectorPayload::<init> (10 bytes)   inline (hot)
                                                  @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 0   jdk.internal.foreign.SegmentFactories::ensureInitialized (5 bytes)   force inline by annotation
                              @ 4   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                              @ 14   jdk.internal.foreign.Utils$BaseAndScale::scale (5 bytes)   accessor
                              @ 26   jdk.internal.foreign.Utils$BaseAndScale::base (5 bytes)   accessor
                              @ 34   jdk.internal.foreign.MemorySessionImpl::createHeap (9 bytes)   inline (hot)
                                @ 5   jdk.internal.foreign.GlobalSession$HeapSession::<init> (13 bytes)   inline (hot)
                                  @ 1   jdk.internal.foreign.GlobalSession::<init> (7 bytes)   inline (hot)
                                    @ 3   jdk.internal.foreign.MemorySessionImpl::<init> (20 bytes)   inline (hot)
                                      @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                  @ 6   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                              @ 37   jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat::<init> (13 bytes)   inline (hot)
                                @ 9   jdk.internal.foreign.HeapMemorySegmentImpl::<init> (21 bytes)   force inline by annotation
                                  @ 7   jdk.internal.foreign.AbstractMemorySegmentImpl::<init> (21 bytes)   force inline by annotation
                                    @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 8   jdk.internal.misc.Unsafe::getAndAddLong (27 bytes)   (intrinsic)
                              @ 9   jdk.internal.foreign.HeapMemorySegmentImpl::<init> (21 bytes)   force inline by annotation
                                @ 7   jdk.internal.foreign.AbstractMemorySegmentImpl::<init> (21 bytes)   force inline by annotation
                                  @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 2   jdk.incubator.vector.Byte512Vector::vectorFactory (9 bytes)   force inline by annotation
                                @ 5   jdk.incubator.vector.Byte512Vector::<init> (6 bytes)   inline (hot)
                                  @ 2   jdk.incubator.vector.ByteVector::<init> (6 bytes)   inline (hot)
                                    @ 2   jdk.incubator.vector.AbstractVector::<init> (6 bytes)   inline (hot)
                                      @ 2   jdk.incubator.vector.Vector::<init> (6 bytes)   inline (hot)
                                        @ 2   jdk.internal.vm.vector.VectorSupport$Vector::<init> (6 bytes)   inline (hot)
                                          @ 2   jdk.internal.vm.vector.VectorSupport$VectorPayload::<init> (10 bytes)   inline (hot)
                                            @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 3   java.lang.invoke.Invokers$Holder::linkToTargetMethod (8 bytes)   force inline by annotation
                                @ 4   java.lang.invoke.LambdaForm$MH/0x00007fc97f000800::invoke (8 bytes)   force inline by annotation
                              @ 8   jdk.incubator.vector.ByteVector::stLongOp (40 bytes)   force inline by annotation
                                @ 1   jdk.incubator.vector.Byte512Vector::vec (8 bytes)   force inline by annotation
                                 \-> TypeProfile (7772/7772 counts) = jdk/incubator/vector/Byte512Vector
                                  @ 1   jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload (8 bytes)   inline (hot)
                                    @ 1   jdk.internal.vm.vector.VectorSupport::maybeRebox (8 bytes)   inline (hot)
                                      @ 3   jdk.internal.misc.Unsafe::loadFence (5 bytes)   (intrinsic)
                                @ 28   jdk.incubator.vector.ByteVector$$Lambda/0x00007fc97f055788::apply (10 bytes)   inline (hot)
                                  @ 6   jdk.incubator.vector.ByteVector::memorySegmentSet (18 bytes)   inline (hot)
                                    @ 12   jdk.internal.foreign.AbstractMemorySegmentImpl::set (14 bytes)   force inline by annotation
                                      @ 1   jdk.internal.foreign.layout.ValueLayouts$AbstractValueLayout::varHandle (26 bytes)   force inline by annotation
                                      @ 10   java.lang.invoke.VarHandleGuards::guard_LJI_V (138 bytes)   force inline by annotation
                                        @ 3   java.lang.invoke.VarHandle::checkAccessModeThenIsDirect (29 bytes)   force inline by annotation
                                        @ 48   java.lang.invoke.VarForm::getMemberName (38 bytes)   force inline by annotation
                                        @ 51   java.lang.invoke.VarHandleSegmentAsBytes::set (49 bytes)   force inline by annotation
                                          @ 14   java.lang.invoke.VarHandleSegmentAsBytes::checkAddress (21 bytes)   force inline by annotation
                                            @ 1   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                            @ 15   jdk.internal.foreign.AbstractMemorySegmentImpl::checkAccess (30 bytes)   force inline by annotation
                                              @ 26   jdk.internal.foreign.AbstractMemorySegmentImpl::checkBounds (54 bytes)   force inline by annotation
                                                @ 16   jdk.internal.util.Preconditions::checkIndex (22 bytes)   (intrinsic)
                                          @ 24   jdk.internal.foreign.AbstractMemorySegmentImpl::sessionImpl (5 bytes)   accessor
                                          @ 29   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetBase (5 bytes)   inline (hot)
                                          @ 29   jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat::unsafeGetBase (5 bytes)   inline (hot)
                                           \-> TypeProfile (9089/18178 counts) = jdk/internal/foreign/HeapMemorySegmentImpl$OfFloat
                                           \-> TypeProfile (9089/18178 counts) = jdk/internal/foreign/HeapMemorySegmentImpl$OfByte
                                            @ 1   jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat::unsafeGetBase (11 bytes)   inline (hot)
                                              @ 4   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                            @ 1   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetBase (11 bytes)   inline (hot)
                                              @ 4   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                          @ 40   java.lang.invoke.VarHandleSegmentAsBytes::offsetPlain (39 bytes)   force inline by annotation
                                            @ 1   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetOffset (5 bytes)   inline (hot)
                                            @ 1   jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat::unsafeGetOffset (5 bytes)   inline (hot)
                                             \-> TypeProfile (9154/39683 counts) = jdk/internal/foreign/HeapMemorySegmentImpl$OfFloat
                                             \-> TypeProfile (30529/39683 counts) = jdk/internal/foreign/HeapMemorySegmentImpl$OfByte
                                              @ 1   jdk.internal.foreign.HeapMemorySegmentImpl::unsafeGetOffset (5 bytes)   accessor
                                              @ 1   jdk.internal.foreign.HeapMemorySegmentImpl::unsafeGetOffset (5 bytes)   accessor
                                            @ 13   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::maxAlignMask (4 bytes)   inline (hot)
                                            @ 13   jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat::maxAlignMask (4 bytes)   inline (hot)
                                             \-> TypeProfile (9154/39683 counts) = jdk/internal/foreign/HeapMemorySegmentImpl$OfFloat
                                             \-> TypeProfile (30529/39683 counts) = jdk/internal/foreign/HeapMemorySegmentImpl$OfByte
               !                          @ 45   jdk.internal.misc.ScopedMemoryAccess::putByte (21 bytes)   force inline by annotation
               !                            @ 6   jdk.internal.misc.ScopedMemoryAccess::putByteInternal (35 bytes)   force inline by annotation
                                              @ 5   jdk.internal.foreign.MemorySessionImpl::checkValidStateRaw (33 bytes)   force inline by annotation
                                              @ 15   jdk.internal.misc.Unsafe::putByte (0 bytes)   (intrinsic)
                                              @ 19   java.lang.ref.Reference::reachabilityFence (1 bytes)   force inline by annotation
                              @ 32   jdk.incubator.vector.ByteVector$$Lambda/0x00007fc97f055358::store (14 bytes)   inline (hot)
                               \-> TypeProfile (14239/14239 counts) = jdk/incubator/vector/ByteVector$$Lambda+0x00007fc97f055358
                                @ 10   jdk.incubator.vector.ByteVector::lambda$intoMemorySegment0$113 (12 bytes)   inline (hot)
                                  @ 3   java.lang.invoke.Invokers$Holder::linkToTargetMethod (8 bytes)   force inline by annotation
                                    @ 4   java.lang.invoke.LambdaForm$MH/0x00007fc97f000800::invoke (8 bytes)   force inline by annotation
                                  @ 8   jdk.incubator.vector.ByteVector::stLongOp (40 bytes)   force inline by annotation
                                    @ 1   jdk.incubator.vector.Byte512Vector::vec (8 bytes)   force inline by annotation
                                      @ 1   jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload (8 bytes)   inline (hot)
                                        @ 1   jdk.internal.vm.vector.VectorSupport::maybeRebox (8 bytes)   inline (hot)
                                          @ 3   jdk.internal.misc.Unsafe::loadFence (5 bytes)   (intrinsic)
                                    @ 28   jdk.incubator.vector.ByteVector$$Lambda/0x00007fc97f055788::apply (10 bytes)   inline (hot)
                                      @ 6   jdk.incubator.vector.ByteVector::memorySegmentSet (18 bytes)   inline (hot)
                                        @ 12   jdk.internal.foreign.AbstractMemorySegmentImpl::set (14 bytes)   force inline by annotation
                                          @ 1   jdk.internal.foreign.layout.ValueLayouts$AbstractValueLayout::varHandle (26 bytes)   force inline by annotation
                                          @ 10   java.lang.invoke.VarHandleGuards::guard_LJI_V (138 bytes)   force inline by annotation
                                            @ 3   java.lang.invoke.VarHandle::checkAccessModeThenIsDirect (29 bytes)   force inline by annotation
                                            @ 48   java.lang.invoke.VarForm::getMemberName (38 bytes)   force inline by annotation
                                            @ 51   java.lang.invoke.VarHandleSegmentAsBytes::set (49 bytes)   force inline by annotation
                                              @ 14   java.lang.invoke.VarHandleSegmentAsBytes::checkAddress (21 bytes)   force inline by annotation
                                                @ 1   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                                @ 15   jdk.internal.foreign.AbstractMemorySegmentImpl::checkAccess (30 bytes)   force inline by annotation
                                                  @ 26   jdk.internal.foreign.AbstractMemorySegmentImpl::checkBounds (54 bytes)   force inline by annotation
                                                    @ 16   jdk.internal.util.Preconditions::checkIndex (22 bytes)   (intrinsic)
                                              @ 24   jdk.internal.foreign.AbstractMemorySegmentImpl::sessionImpl (5 bytes)   accessor
                                              @ 29   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetBase (5 bytes)   inline (hot)
                                              @ 29   jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat::unsafeGetBase (5 bytes)   inline (hot)
                                               \-> TypeProfile (9089/18178 counts) = jdk/internal/foreign/HeapMemorySegmentImpl$OfFloat
                                               \-> TypeProfile (9089/18178 counts) = jdk/internal/foreign/HeapMemorySegmentImpl$OfByte
                                                @ 1   jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat::unsafeGetBase (11 bytes)   inline (hot)
                                                  @ 4   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                                @ 1   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetBase (11 bytes)   inline (hot)
                                                  @ 4   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                              @ 40   java.lang.invoke.VarHandleSegmentAsBytes::offsetPlain (39 bytes)   force inline by annotation
                                                @ 1   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetOffset (5 bytes)   inline (hot)
                                                @ 1   jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat::unsafeGetOffset (5 bytes)   inline (hot)
                                                 \-> TypeProfile (9154/39683 counts) = jdk/internal/foreign/HeapMemorySegmentImpl$OfFloat
                                                 \-> TypeProfile (30529/39683 counts) = jdk/internal/foreign/HeapMemorySegmentImpl$OfByte
                                                  @ 1   jdk.internal.foreign.HeapMemorySegmentImpl::unsafeGetOffset (5 bytes)   accessor
                                                  @ 1   jdk.internal.foreign.HeapMemorySegmentImpl::unsafeGetOffset (5 bytes)   accessor
                                                @ 13   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::maxAlignMask (4 bytes)   inline (hot)
                                                @ 13   jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat::maxAlignMask (4 bytes)   inline (hot)
                                                 \-> TypeProfile (9154/39683 counts) = jdk/internal/foreign/HeapMemorySegmentImpl$OfFloat
                                                 \-> TypeProfile (30529/39683 counts) = jdk/internal/foreign/HeapMemorySegmentImpl$OfByte
               !                              @ 45   jdk.internal.misc.ScopedMemoryAccess::putByte (21 bytes)   force inline by annotation
               !                                @ 6   jdk.internal.misc.ScopedMemoryAccess::putByteInternal (35 bytes)   force inline by annotation
                                                  @ 5   jdk.internal.foreign.MemorySessionImpl::checkValidStateRaw (33 bytes)   force inline by annotation
                                                  @ 15   jdk.internal.misc.Unsafe::putByte (0 bytes)   (intrinsic)
                                                  @ 19   java.lang.ref.Reference::reachabilityFence (1 bytes)   force inline by annotation
                              @ 5   java.util.concurrent.ThreadLocalRandom::current (22 bytes)   inline (hot)
                                @ 3   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                @ 9   jdk.internal.misc.Unsafe::getInt (0 bytes)   (intrinsic)
                              @ 9   java.util.Random::nextBytes (56 bytes)   inline (hot)
                                @ 11   java.util.concurrent.ThreadLocalRandom::nextInt (8 bytes)   inline (hot)
                                  @ 1   java.util.concurrent.ThreadLocalRandom::nextSeed (39 bytes)   inline (hot)
                                    @ 3   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                    @ 18   jdk.internal.misc.Unsafe::getLong (0 bytes)   (intrinsic)
                                    @ 22   java.lang.Thread::threadId (5 bytes)   accessor
                                    @ 34   jdk.internal.misc.Unsafe::putLong (0 bytes)   (intrinsic)
                                  @ 4   java.util.concurrent.ThreadLocalRandom::mix32 (26 bytes)   inline (hot)
                                @ 20   java.lang.Math::min (11 bytes)   (intrinsic)
                              @ 13   java.lang.foreign.MemorySegment::ofArray (5 bytes)   inline (hot)
                                @ 1   jdk.internal.foreign.SegmentFactories::fromArray (41 bytes)   inline (hot)
                                  @ 0   jdk.internal.foreign.SegmentFactories::ensureInitialized (5 bytes)   force inline by annotation
                                  @ 4   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                  @ 14   jdk.internal.foreign.Utils$BaseAndScale::scale (5 bytes)   accessor
                                  @ 26   jdk.internal.foreign.Utils$BaseAndScale::base (5 bytes)   accessor
                                  @ 34   jdk.internal.foreign.MemorySessionImpl::createHeap (9 bytes)   inline (hot)
                                    @ 5   jdk.internal.foreign.GlobalSession$HeapSession::<init> (13 bytes)   inline (hot)
                                      @ 1   jdk.internal.foreign.GlobalSession::<init> (7 bytes)   inline (hot)
                                        @ 3   jdk.internal.foreign.MemorySessionImpl::<init> (20 bytes)   inline (hot)
                                          @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                      @ 6   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                  @ 37   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::<init> (13 bytes)   inline (hot)
                                    @ 9   jdk.internal.foreign.HeapMemorySegmentImpl::<init> (21 bytes)   force inline by annotation
                                      @ 7   jdk.internal.foreign.AbstractMemorySegmentImpl::<init> (21 bytes)   force inline by annotation
                                        @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 25   jdk.incubator.vector.ByteVector$ByteSpecies::fromMemorySegment (9 bytes)   force inline by annotation
                                @ 5   jdk.incubator.vector.ByteVector$ByteSpecies::fromMemorySegment (9 bytes)   force inline by annotation
                                  @ 5   jdk.incubator.vector.ByteVector::fromMemorySegment (40 bytes)   force inline by annotation
                                    @ 2   jdk.incubator.vector.AbstractSpecies::vectorByteSize (5 bytes)   accessor
                                    @ 9   jdk.internal.foreign.AbstractMemorySegmentImpl::byteSize (5 bytes)   accessor
                                    @ 14   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize (57 bytes)   force inline by annotation
                                      @ 45   java.util.Objects::checkIndex (7 bytes)   force inline by annotation
                                        @ 3   jdk.internal.util.Preconditions::checkIndex (22 bytes)   (intrinsic)
                                    @ 26   jdk.incubator.vector.ByteVector$ByteSpecies::dummyVector (8 bytes)   force inline by annotation
                                      @ 1   jdk.incubator.vector.AbstractSpecies::dummyVector (16 bytes)   force inline by annotation
                                    @ 31   jdk.incubator.vector.Byte512Vector::fromMemorySegment0 (7 bytes)   force inline by annotation
                                      @ 3   jdk.incubator.vector.ByteVector::fromMemorySegment0Template (40 bytes)   force inline by annotation
                                        @ 1   jdk.incubator.vector.Byte512Vector::vspecies (4 bytes)   force inline by annotation
                                        @ 8   jdk.incubator.vector.ByteVector$ByteSpecies::vectorType (5 bytes)   accessor
                                        @ 13   jdk.incubator.vector.ByteVector$ByteSpecies::elementType (4 bytes)   force inline by annotation
                                        @ 18   jdk.incubator.vector.AbstractSpecies::laneCount (5 bytes)   accessor
                                        @ 28   java.lang.invoke.Invokers$Holder::linkToTargetMethod (8 bytes)   force inline by annotation
                                          @ 4   java.lang.invoke.LambdaForm$MH/0x00007fc97f000800::invoke (8 bytes)   force inline by annotation
               !                        @ 33   jdk.internal.misc.ScopedMemoryAccess::loadFromMemorySegment (26 bytes)   force inline by annotation
                                          @ 1   jdk.internal.foreign.AbstractMemorySegmentImpl::sessionImpl (5 bytes)   accessor
               !                          @ 14   jdk.internal.misc.ScopedMemoryAccess::loadFromMemorySegmentScopedInternal (53 bytes)   force inline by annotation
                                            @ 1   jdk.internal.foreign.MemorySessionImpl::checkValidStateRaw (33 bytes)   force inline by annotation
                                            @ 9   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetBase (5 bytes)   inline (hot)
                                              @ 1   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetBase (11 bytes)   inline (hot)
                                                @ 4   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                            @ 14   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetOffset (5 bytes)   inline (hot)
                                              @ 1   jdk.internal.foreign.HeapMemorySegmentImpl::unsafeGetOffset (5 bytes)   accessor
                                            @ 29   jdk.internal.vm.vector.VectorSupport::load (38 bytes)   (intrinsic)
                                            @ 38   java.lang.ref.Reference::reachabilityFence (1 bytes)   force inline by annotation
                                    @ 36   jdk.incubator.vector.ByteVector::maybeSwap (2 bytes)   force inline by annotation
                              @ 48   java.lang.foreign.MemorySegment::ofArray (5 bytes)   inline (hot)
                                @ 1   jdk.internal.foreign.SegmentFactories::fromArray (41 bytes)   inline (hot)
                                  @ 0   jdk.internal.foreign.SegmentFactories::ensureInitialized (5 bytes)   force inline by annotation
                                  @ 4   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                  @ 14   jdk.internal.foreign.Utils$BaseAndScale::scale (5 bytes)   accessor
                                  @ 26   jdk.internal.foreign.Utils$BaseAndScale::base (5 bytes)   accessor
                                  @ 34   jdk.internal.foreign.MemorySessionImpl::createHeap (9 bytes)   inline (hot)
                                    @ 5   jdk.internal.foreign.GlobalSession$HeapSession::<init> (13 bytes)   inline (hot)
                                      @ 1   jdk.internal.foreign.GlobalSession::<init> (7 bytes)   inline (hot)
                                        @ 3   jdk.internal.foreign.MemorySessionImpl::<init> (20 bytes)   inline (hot)
                                          @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                      @ 6   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                  @ 37   jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat::<init> (13 bytes)   inline (hot)
                                    @ 9   jdk.internal.foreign.HeapMemorySegmentImpl::<init> (21 bytes)   force inline by annotation
                                      @ 7   jdk.internal.foreign.AbstractMemorySegmentImpl::<init> (21 bytes)   force inline by annotation
                                        @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 55   java.lang.foreign.MemorySegment::ofArray (5 bytes)   inline (hot)
                                @ 1   jdk.internal.foreign.SegmentFactories::fromArray (41 bytes)   inline (hot)
                                  @ 0   jdk.internal.foreign.SegmentFactories::ensureInitialized (5 bytes)   force inline by annotation
                                  @ 4   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                  @ 14   jdk.internal.foreign.Utils$BaseAndScale::scale (5 bytes)   accessor
                                  @ 26   jdk.internal.foreign.Utils$BaseAndScale::base (5 bytes)   accessor
                                  @ 34   jdk.internal.foreign.MemorySessionImpl::createHeap (9 bytes)   inline (hot)
                                    @ 5   jdk.internal.foreign.GlobalSession$HeapSession::<init> (13 bytes)   inline (hot)
                                      @ 1   jdk.internal.foreign.GlobalSession::<init> (7 bytes)   inline (hot)
                                        @ 3   jdk.internal.foreign.MemorySessionImpl::<init> (20 bytes)   inline (hot)
                                          @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                      @ 6   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                  @ 37   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::<init> (13 bytes)   inline (hot)
                                    @ 9   jdk.internal.foreign.HeapMemorySegmentImpl::<init> (21 bytes)   force inline by annotation
                                      @ 7   jdk.internal.foreign.AbstractMemorySegmentImpl::<init> (21 bytes)   force inline by annotation
                                        @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 64   java.util.concurrent.ThreadLocalRandom::current (22 bytes)   inline (hot)
                                @ 3   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                @ 9   jdk.internal.misc.Unsafe::getInt (0 bytes)   (intrinsic)
                              @ 71   java.util.concurrent.ThreadLocalRandom::nextInt (7 bytes)   inline (hot)
                                @ 3   java.util.random.RandomGenerator::nextInt (12 bytes)   inline (hot)
                                  @ 2   jdk.internal.util.random.RandomSupport::checkRange (16 bytes)   inline (hot)
                                  @ 8   jdk.internal.util.random.RandomSupport::boundedNextInt (109 bytes)   inline (hot)
                                    @ 1   java.util.concurrent.ThreadLocalRandom::nextInt (8 bytes)   inline (hot)
                                      @ 1   java.util.concurrent.ThreadLocalRandom::nextSeed (39 bytes)   inline (hot)
                                        @ 3   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                        @ 18   jdk.internal.misc.Unsafe::getLong (0 bytes)   (intrinsic)
                                        @ 22   java.lang.Thread::threadId (5 bytes)   accessor
                                        @ 34   jdk.internal.misc.Unsafe::putLong (0 bytes)   (intrinsic)
                                      @ 4   java.util.concurrent.ThreadLocalRandom::mix32 (26 bytes)   inline (hot)
                              @ 78   jdk.incubator.vector.ByteVector::intoMemorySegment (48 bytes)   force inline by annotation
                                @ 1   jdk.internal.foreign.AbstractMemorySegmentImpl::isReadOnly (5 bytes)   accessor
                                @ 22   jdk.incubator.vector.Byte512Vector::byteSize (7 bytes)   force inline by annotation
                                @ 27   jdk.internal.foreign.AbstractMemorySegmentImpl::byteSize (5 bytes)   accessor
                                @ 32   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize (57 bytes)   force inline by annotation
                                  @ 45   java.util.Objects::checkIndex (7 bytes)   force inline by annotation
                                    @ 3   jdk.internal.util.Preconditions::checkIndex (22 bytes)   (intrinsic)
                                @ 39   jdk.incubator.vector.ByteVector::maybeSwap (2 bytes)   force inline by annotation
                                @ 44   jdk.incubator.vector.ByteVector::intoMemorySegment0 (36 bytes)   force inline by annotation
                                  @ 1   jdk.incubator.vector.Byte512Vector::vspecies (4 bytes)   force inline by annotation
                                  @ 8   jdk.incubator.vector.ByteVector$ByteSpecies::vectorType (5 bytes)   accessor
                                  @ 13   jdk.incubator.vector.ByteVector$ByteSpecies::elementType (4 bytes)   force inline by annotation
                                  @ 18   jdk.incubator.vector.AbstractSpecies::laneCount (5 bytes)   accessor
                                  @ 27   java.lang.invoke.Invokers$Holder::linkToTargetMethod (8 bytes)   force inline by annotation
                                    @ 4   java.lang.invoke.LambdaForm$MH/0x00007fc97f000800::invoke (8 bytes)   force inline by annotation
               !                  @ 32   jdk.internal.misc.ScopedMemoryAccess::storeIntoMemorySegment (30 bytes)   force inline by annotation
                                    @ 2   jdk.internal.foreign.AbstractMemorySegmentImpl::sessionImpl (5 bytes)   accessor
               !                    @ 15   jdk.internal.misc.ScopedMemoryAccess::storeIntoMemorySegmentScopedInternal (49 bytes)   force inline by annotation
                                      @ 1   jdk.internal.foreign.MemorySessionImpl::checkValidStateRaw (33 bytes)   force inline by annotation
                                      @ 9   jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat::unsafeGetBase (5 bytes)   inline (hot)
                                        @ 1   jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat::unsafeGetBase (11 bytes)   inline (hot)
                                          @ 4   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                      @ 14   jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat::unsafeGetOffset (5 bytes)   inline (hot)
                                        @ 1   jdk.internal.foreign.HeapMemorySegmentImpl::unsafeGetOffset (5 bytes)   accessor
                                      @ 29   jdk.internal.vm.vector.VectorSupport::store (38 bytes)   (intrinsic)
                                      @ 33   java.lang.ref.Reference::reachabilityFence (1 bytes)   force inline by annotation
                              @ 85   java.util.concurrent.ThreadLocalRandom::current (22 bytes)   inline (hot)
                                @ 3   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                @ 9   jdk.internal.misc.Unsafe::getInt (0 bytes)   (intrinsic)
                              @ 92   java.util.concurrent.ThreadLocalRandom::nextInt (7 bytes)   inline (hot)
                                @ 3   java.util.random.RandomGenerator::nextInt (12 bytes)   inline (hot)
                                  @ 2   jdk.internal.util.random.RandomSupport::checkRange (16 bytes)   inline (hot)
                                  @ 8   jdk.internal.util.random.RandomSupport::boundedNextInt (109 bytes)   inline (hot)
                                    @ 1   java.util.concurrent.ThreadLocalRandom::nextInt (8 bytes)   inline (hot)
                                      @ 1   java.util.concurrent.ThreadLocalRandom::nextSeed (39 bytes)   inline (hot)
                                        @ 3   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                        @ 18   jdk.internal.misc.Unsafe::getLong (0 bytes)   (intrinsic)
                                        @ 22   java.lang.Thread::threadId (5 bytes)   accessor
                                        @ 34   jdk.internal.misc.Unsafe::putLong (0 bytes)   (intrinsic)
                                      @ 4   java.util.concurrent.ThreadLocalRandom::mix32 (26 bytes)   inline (hot)
                              @ 99   jdk.incubator.vector.ByteVector::intoMemorySegment (48 bytes)   force inline by annotation
                                @ 1   jdk.internal.foreign.AbstractMemorySegmentImpl::isReadOnly (5 bytes)   accessor
                                @ 22   jdk.incubator.vector.Byte512Vector::byteSize (7 bytes)   force inline by annotation
                                @ 27   jdk.internal.foreign.AbstractMemorySegmentImpl::byteSize (5 bytes)   accessor
                                @ 32   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize (57 bytes)   force inline by annotation
                                  @ 45   java.util.Objects::checkIndex (7 bytes)   force inline by annotation
                                    @ 3   jdk.internal.util.Preconditions::checkIndex (22 bytes)   (intrinsic)
                                @ 39   jdk.incubator.vector.ByteVector::maybeSwap (2 bytes)   force inline by annotation
                                @ 44   jdk.incubator.vector.ByteVector::intoMemorySegment0 (36 bytes)   force inline by annotation
                                  @ 1   jdk.incubator.vector.Byte512Vector::vspecies (4 bytes)   force inline by annotation
                                  @ 8   jdk.incubator.vector.ByteVector$ByteSpecies::vectorType (5 bytes)   accessor
                                  @ 13   jdk.incubator.vector.ByteVector$ByteSpecies::elementType (4 bytes)   force inline by annotation
                                  @ 18   jdk.incubator.vector.AbstractSpecies::laneCount (5 bytes)   accessor
                                  @ 27   java.lang.invoke.Invokers$Holder::linkToTargetMethod (8 bytes)   force inline by annotation
                                    @ 4   java.lang.invoke.LambdaForm$MH/0x00007fc97f000800::invoke (8 bytes)   force inline by annotation
               !                  @ 32   jdk.internal.misc.ScopedMemoryAccess::storeIntoMemorySegment (30 bytes)   force inline by annotation
                                    @ 2   jdk.internal.foreign.AbstractMemorySegmentImpl::sessionImpl (5 bytes)   accessor
               !                    @ 15   jdk.internal.misc.ScopedMemoryAccess::storeIntoMemorySegmentScopedInternal (49 bytes)   force inline by annotation
                                      @ 1   jdk.internal.foreign.MemorySessionImpl::checkValidStateRaw (33 bytes)   force inline by annotation
                                      @ 9   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetBase (5 bytes)   inline (hot)
                                        @ 1   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetBase (11 bytes)   inline (hot)
                                          @ 4   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                      @ 14   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetOffset (5 bytes)   inline (hot)
                                        @ 1   jdk.internal.foreign.HeapMemorySegmentImpl::unsafeGetOffset (5 bytes)   accessor
                                      @ 29   jdk.internal.vm.vector.VectorSupport::store (38 bytes)   (intrinsic)
                                      @ 33   java.lang.ref.Reference::reachabilityFence (1 bytes)   force inline by annotation
                              @ 137   java.util.concurrent.atomic.AtomicLong::addAndGet (14 bytes)   inline (hot)
                                @ 8   jdk.internal.misc.Unsafe::getAndAddLong (27 bytes)   (intrinsic)
                              @ 1   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                @ 8   java.lang.NullPointerException::<init> (5 bytes)   failed to inline: don't inline Throwable constructors
                              @ 44   Main$$Lambda/0x00007fc97f001800::accept (9 bytes)   inline
                                @ 5   Main::lambda$main$0 (142 bytes)   failed to inline: inlining prohibited by policy
                              @ 59   Main$$Lambda/0x00007fc97f001800::accept (9 bytes)   inline
                                @ 5   Main::lambda$main$0 (142 bytes)   failed to inline: inlining prohibited by policy
                              @ 1   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                @ 8   java.lang.NullPointerException::<init> (5 bytes)   failed to inline: don't inline Throwable constructors
                              @ 44   Main$$Lambda/0x00007fc97f001800::accept (9 bytes)   inline
                                @ 5   Main::lambda$main$0 (142 bytes)   failed to inline: inlining prohibited by policy
                              @ 59   Main$$Lambda/0x00007fc97f001800::accept (9 bytes)   inline
                                @ 5   Main::lambda$main$0 (142 bytes)   failed to inline: inlining prohibited by policy
                              @ 5   Main::lambda$main$0 (142 bytes)   inline (hot)
                                @ 5   java.util.concurrent.ThreadLocalRandom::current (22 bytes)   inline (hot)
                                  @ 3   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                  @ 9   jdk.internal.misc.Unsafe::getInt (0 bytes)   (intrinsic)
                                @ 9   java.util.Random::nextBytes (56 bytes)   inline (hot)
                                  @ 11   java.util.concurrent.ThreadLocalRandom::nextInt (8 bytes)   inline (hot)
                                    @ 1   java.util.concurrent.ThreadLocalRandom::nextSeed (39 bytes)   inline (hot)
                                      @ 3   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                      @ 18   jdk.internal.misc.Unsafe::getLong (0 bytes)   (intrinsic)
                                      @ 22   java.lang.Thread::threadId (5 bytes)   accessor
                                      @ 34   jdk.internal.misc.Unsafe::putLong (0 bytes)   (intrinsic)
                                    @ 4   java.util.concurrent.ThreadLocalRandom::mix32 (26 bytes)   inline (hot)
                                  @ 20   java.lang.Math::min (11 bytes)   (intrinsic)
                                @ 13   java.lang.foreign.MemorySegment::ofArray (5 bytes)   inline (hot)
                                  @ 1   jdk.internal.foreign.SegmentFactories::fromArray (41 bytes)   inline (hot)
                                    @ 0   jdk.internal.foreign.SegmentFactories::ensureInitialized (5 bytes)   force inline by annotation
                                    @ 4   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                    @ 14   jdk.internal.foreign.Utils$BaseAndScale::scale (5 bytes)   accessor
                                    @ 26   jdk.internal.foreign.Utils$BaseAndScale::base (5 bytes)   accessor
                                    @ 34   jdk.internal.foreign.MemorySessionImpl::createHeap (9 bytes)   inline (hot)
                                      @ 5   jdk.internal.foreign.GlobalSession$HeapSession::<init> (13 bytes)   inline (hot)
                                        @ 1   jdk.internal.foreign.GlobalSession::<init> (7 bytes)   inline (hot)
                                          @ 3   jdk.internal.foreign.MemorySessionImpl::<init> (20 bytes)   inline (hot)
                                            @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                        @ 6   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                    @ 37   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::<init> (13 bytes)   inline (hot)
                                      @ 9   jdk.internal.foreign.HeapMemorySegmentImpl::<init> (21 bytes)   force inline by annotation
                                        @ 7   jdk.internal.foreign.AbstractMemorySegmentImpl::<init> (21 bytes)   force inline by annotation
                                          @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                @ 25   jdk.incubator.vector.ByteVector$ByteSpecies::fromMemorySegment (9 bytes)   force inline by annotation
                                  @ 5   jdk.incubator.vector.ByteVector$ByteSpecies::fromMemorySegment (9 bytes)   force inline by annotation
                                    @ 5   jdk.incubator.vector.ByteVector::fromMemorySegment (40 bytes)   force inline by annotation
                                      @ 2   jdk.incubator.vector.AbstractSpecies::vectorByteSize (5 bytes)   accessor
                                      @ 9   jdk.internal.foreign.AbstractMemorySegmentImpl::byteSize (5 bytes)   accessor
                                      @ 14   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize (57 bytes)   force inline by annotation
                                        @ 45   java.util.Objects::checkIndex (7 bytes)   force inline by annotation
                                          @ 3   jdk.internal.util.Preconditions::checkIndex (22 bytes)   (intrinsic)
                                      @ 26   jdk.incubator.vector.ByteVector$ByteSpecies::dummyVector (8 bytes)   force inline by annotation
                                        @ 1   jdk.incubator.vector.AbstractSpecies::dummyVector (16 bytes)   force inline by annotation
                                      @ 31   jdk.incubator.vector.Byte512Vector::fromMemorySegment0 (7 bytes)   force inline by annotation
                                        @ 3   jdk.incubator.vector.ByteVector::fromMemorySegment0Template (40 bytes)   force inline by annotation
                                          @ 1   jdk.incubator.vector.Byte512Vector::vspecies (4 bytes)   force inline by annotation
                                          @ 8   jdk.incubator.vector.ByteVector$ByteSpecies::vectorType (5 bytes)   accessor
                                          @ 13   jdk.incubator.vector.ByteVector$ByteSpecies::elementType (4 bytes)   force inline by annotation
                                          @ 18   jdk.incubator.vector.AbstractSpecies::laneCount (5 bytes)   accessor
                                          @ 28   java.lang.invoke.Invokers$Holder::linkToTargetMethod (8 bytes)   force inline by annotation
                                            @ 4   java.lang.invoke.LambdaForm$MH/0x00007fc97f000800::invoke (8 bytes)   force inline by annotation
               !                          @ 33   jdk.internal.misc.ScopedMemoryAccess::loadFromMemorySegment (26 bytes)   force inline by annotation
                                            @ 1   jdk.internal.foreign.AbstractMemorySegmentImpl::sessionImpl (5 bytes)   accessor
               !                            @ 14   jdk.internal.misc.ScopedMemoryAccess::loadFromMemorySegmentScopedInternal (53 bytes)   force inline by annotation
                                              @ 1   jdk.internal.foreign.MemorySessionImpl::checkValidStateRaw (33 bytes)   force inline by annotation
                                              @ 9   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetBase (5 bytes)   inline (hot)
                                                @ 1   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetBase (11 bytes)   inline (hot)
                                                  @ 4   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                              @ 14   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetOffset (5 bytes)   inline (hot)
                                                @ 1   jdk.internal.foreign.HeapMemorySegmentImpl::unsafeGetOffset (5 bytes)   accessor
                                              @ 29   jdk.internal.vm.vector.VectorSupport::load (38 bytes)   (intrinsic)
                                              @ 38   java.lang.ref.Reference::reachabilityFence (1 bytes)   force inline by annotation
                                      @ 36   jdk.incubator.vector.ByteVector::maybeSwap (2 bytes)   force inline by annotation
                                @ 48   java.lang.foreign.MemorySegment::ofArray (5 bytes)   inline (hot)
                                  @ 1   jdk.internal.foreign.SegmentFactories::fromArray (41 bytes)   inline (hot)
                                    @ 0   jdk.internal.foreign.SegmentFactories::ensureInitialized (5 bytes)   force inline by annotation
                                    @ 4   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                    @ 14   jdk.internal.foreign.Utils$BaseAndScale::scale (5 bytes)   accessor
                                    @ 26   jdk.internal.foreign.Utils$BaseAndScale::base (5 bytes)   accessor
                                    @ 34   jdk.internal.foreign.MemorySessionImpl::createHeap (9 bytes)   inline (hot)
                                      @ 5   jdk.internal.foreign.GlobalSession$HeapSession::<init> (13 bytes)   inline (hot)
                                        @ 1   jdk.internal.foreign.GlobalSession::<init> (7 bytes)   inline (hot)
                                          @ 3   jdk.internal.foreign.MemorySessionImpl::<init> (20 bytes)   inline (hot)
                                            @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                        @ 6   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                    @ 37   jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat::<init> (13 bytes)   inline (hot)
                                      @ 9   jdk.internal.foreign.HeapMemorySegmentImpl::<init> (21 bytes)   force inline by annotation
                                        @ 7   jdk.internal.foreign.AbstractMemorySegmentImpl::<init> (21 bytes)   force inline by annotation
                                          @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                @ 55   java.lang.foreign.MemorySegment::ofArray (5 bytes)   inline (hot)
                                  @ 1   jdk.internal.foreign.SegmentFactories::fromArray (41 bytes)   inline (hot)
                                    @ 0   jdk.internal.foreign.SegmentFactories::ensureInitialized (5 bytes)   force inline by annotation
                                    @ 4   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                    @ 14   jdk.internal.foreign.Utils$BaseAndScale::scale (5 bytes)   accessor
                                    @ 26   jdk.internal.foreign.Utils$BaseAndScale::base (5 bytes)   accessor
                                    @ 34   jdk.internal.foreign.MemorySessionImpl::createHeap (9 bytes)   inline (hot)
                                      @ 5   jdk.internal.foreign.GlobalSession$HeapSession::<init> (13 bytes)   inline (hot)
                                        @ 1   jdk.internal.foreign.GlobalSession::<init> (7 bytes)   inline (hot)
                                          @ 3   jdk.internal.foreign.MemorySessionImpl::<init> (20 bytes)   inline (hot)
                                            @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                        @ 6   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                    @ 37   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::<init> (13 bytes)   inline (hot)
                                      @ 9   jdk.internal.foreign.HeapMemorySegmentImpl::<init> (21 bytes)   force inline by annotation
                                        @ 7   jdk.internal.foreign.AbstractMemorySegmentImpl::<init> (21 bytes)   force inline by annotation
                                          @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                @ 64   java.util.concurrent.ThreadLocalRandom::current (22 bytes)   inline (hot)
                                  @ 3   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                  @ 9   jdk.internal.misc.Unsafe::getInt (0 bytes)   (intrinsic)
                                @ 71   java.util.concurrent.ThreadLocalRandom::nextInt (7 bytes)   inline (hot)
                                  @ 3   java.util.random.RandomGenerator::nextInt (12 bytes)   inline (hot)
                                    @ 2   jdk.internal.util.random.RandomSupport::checkRange (16 bytes)   inline (hot)
                                    @ 8   jdk.internal.util.random.RandomSupport::boundedNextInt (109 bytes)   inline (hot)
                                      @ 1   java.util.concurrent.ThreadLocalRandom::nextInt (8 bytes)   inline (hot)
                                        @ 1   java.util.concurrent.ThreadLocalRandom::nextSeed (39 bytes)   inline (hot)
                                          @ 3   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                          @ 18   jdk.internal.misc.Unsafe::getLong (0 bytes)   (intrinsic)
                                          @ 22   java.lang.Thread::threadId (5 bytes)   accessor
                                          @ 34   jdk.internal.misc.Unsafe::putLong (0 bytes)   (intrinsic)
                                        @ 4   java.util.concurrent.ThreadLocalRandom::mix32 (26 bytes)   inline (hot)
                                @ 78   jdk.incubator.vector.ByteVector::intoMemorySegment (48 bytes)   force inline by annotation
                                  @ 1   jdk.internal.foreign.AbstractMemorySegmentImpl::isReadOnly (5 bytes)   accessor
                                  @ 22   jdk.incubator.vector.Byte512Vector::byteSize (7 bytes)   force inline by annotation
                                  @ 27   jdk.internal.foreign.AbstractMemorySegmentImpl::byteSize (5 bytes)   accessor
                                  @ 32   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize (57 bytes)   force inline by annotation
                                    @ 45   java.util.Objects::checkIndex (7 bytes)   force inline by annotation
                                      @ 3   jdk.internal.util.Preconditions::checkIndex (22 bytes)   (intrinsic)
                                  @ 39   jdk.incubator.vector.ByteVector::maybeSwap (2 bytes)   force inline by annotation
                                  @ 44   jdk.incubator.vector.ByteVector::intoMemorySegment0 (36 bytes)   force inline by annotation
                                    @ 1   jdk.incubator.vector.Byte512Vector::vspecies (4 bytes)   force inline by annotation
                                    @ 8   jdk.incubator.vector.ByteVector$ByteSpecies::vectorType (5 bytes)   accessor
                                    @ 13   jdk.incubator.vector.ByteVector$ByteSpecies::elementType (4 bytes)   force inline by annotation
                                    @ 18   jdk.incubator.vector.AbstractSpecies::laneCount (5 bytes)   accessor
                                    @ 27   java.lang.invoke.Invokers$Holder::linkToTargetMethod (8 bytes)   force inline by annotation
                                      @ 4   java.lang.invoke.LambdaForm$MH/0x00007fc97f000800::invoke (8 bytes)   force inline by annotation
               !                    @ 32   jdk.internal.misc.ScopedMemoryAccess::storeIntoMemorySegment (30 bytes)   force inline by annotation
                                      @ 2   jdk.internal.foreign.AbstractMemorySegmentImpl::sessionImpl (5 bytes)   accessor
               !                      @ 15   jdk.internal.misc.ScopedMemoryAccess::storeIntoMemorySegmentScopedInternal (49 bytes)   force inline by annotation
                                        @ 1   jdk.internal.foreign.MemorySessionImpl::checkValidStateRaw (33 bytes)   force inline by annotation
                                        @ 9   jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat::unsafeGetBase (5 bytes)   inline (hot)
                                          @ 1   jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat::unsafeGetBase (11 bytes)   inline (hot)
                                            @ 4   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                        @ 14   jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat::unsafeGetOffset (5 bytes)   inline (hot)
                                          @ 1   jdk.internal.foreign.HeapMemorySegmentImpl::unsafeGetOffset (5 bytes)   accessor
                                        @ 29   jdk.internal.vm.vector.VectorSupport::store (38 bytes)   (intrinsic)
                                        @ 33   java.lang.ref.Reference::reachabilityFence (1 bytes)   force inline by annotation
                                @ 85   java.util.concurrent.ThreadLocalRandom::current (22 bytes)   inline (hot)
                                  @ 3   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                  @ 9   jdk.internal.misc.Unsafe::getInt (0 bytes)   (intrinsic)
                                @ 92   java.util.concurrent.ThreadLocalRandom::nextInt (7 bytes)   inline (hot)
                                  @ 3   java.util.random.RandomGenerator::nextInt (12 bytes)   inline (hot)
                                    @ 2   jdk.internal.util.random.RandomSupport::checkRange (16 bytes)   inline (hot)
                                    @ 8   jdk.internal.util.random.RandomSupport::boundedNextInt (109 bytes)   inline (hot)
                                      @ 1   java.util.concurrent.ThreadLocalRandom::nextInt (8 bytes)   inline (hot)
                                        @ 1   java.util.concurrent.ThreadLocalRandom::nextSeed (39 bytes)   inline (hot)
                                          @ 3   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                          @ 18   jdk.internal.misc.Unsafe::getLong (0 bytes)   (intrinsic)
                                          @ 22   java.lang.Thread::threadId (5 bytes)   accessor
                                          @ 34   jdk.internal.misc.Unsafe::putLong (0 bytes)   (intrinsic)
                                        @ 4   java.util.concurrent.ThreadLocalRandom::mix32 (26 bytes)   inline (hot)
                                @ 99   jdk.incubator.vector.ByteVector::intoMemorySegment (48 bytes)   force inline by annotation
                                  @ 1   jdk.internal.foreign.AbstractMemorySegmentImpl::isReadOnly (5 bytes)   accessor
                                  @ 22   jdk.incubator.vector.Byte512Vector::byteSize (7 bytes)   force inline by annotation
                                  @ 27   jdk.internal.foreign.AbstractMemorySegmentImpl::byteSize (5 bytes)   accessor
                                  @ 32   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize (57 bytes)   force inline by annotation
                                    @ 45   java.util.Objects::checkIndex (7 bytes)   force inline by annotation
                                      @ 3   jdk.internal.util.Preconditions::checkIndex (22 bytes)   (intrinsic)
                                  @ 39   jdk.incubator.vector.ByteVector::maybeSwap (2 bytes)   force inline by annotation
                                  @ 44   jdk.incubator.vector.ByteVector::intoMemorySegment0 (36 bytes)   force inline by annotation
                                    @ 1   jdk.incubator.vector.Byte512Vector::vspecies (4 bytes)   force inline by annotation
                                    @ 8   jdk.incubator.vector.ByteVector$ByteSpecies::vectorType (5 bytes)   accessor
                                    @ 13   jdk.incubator.vector.ByteVector$ByteSpecies::elementType (4 bytes)   force inline by annotation
                                    @ 18   jdk.incubator.vector.AbstractSpecies::laneCount (5 bytes)   accessor
                                    @ 27   java.lang.invoke.Invokers$Holder::linkToTargetMethod (8 bytes)   force inline by annotation
                                      @ 4   java.lang.invoke.LambdaForm$MH/0x00007fc97f000800::invoke (8 bytes)   force inline by annotation
               !                    @ 32   jdk.internal.misc.ScopedMemoryAccess::storeIntoMemorySegment (30 bytes)   force inline by annotation
                                      @ 2   jdk.internal.foreign.AbstractMemorySegmentImpl::sessionImpl (5 bytes)   accessor
               !                      @ 15   jdk.internal.misc.ScopedMemoryAccess::storeIntoMemorySegmentScopedInternal (49 bytes)   force inline by annotation
                                        @ 1   jdk.internal.foreign.MemorySessionImpl::checkValidStateRaw (33 bytes)   force inline by annotation
                                        @ 9   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetBase (5 bytes)   inline (hot)
                                          @ 1   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetBase (11 bytes)   inline (hot)
                                            @ 4   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                        @ 14   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetOffset (5 bytes)   inline (hot)
                                          @ 1   jdk.internal.foreign.HeapMemorySegmentImpl::unsafeGetOffset (5 bytes)   accessor
                                        @ 29   jdk.internal.vm.vector.VectorSupport::store (38 bytes)   (intrinsic)
                                        @ 33   java.lang.ref.Reference::reachabilityFence (1 bytes)   force inline by annotation
                                @ 137   java.util.concurrent.atomic.AtomicLong::addAndGet (14 bytes)   inline (hot)
                                  @ 8   jdk.internal.misc.Unsafe::getAndAddLong (27 bytes)   (intrinsic)
                              @ 1   jdk.incubator.vector.Byte512Vector::vec (8 bytes)   force inline by annotation
                               \-> TypeProfile (49786/49786 counts) = jdk/incubator/vector/Byte512Vector
                                @ 1   jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload (8 bytes)   inline (hot)
                                  @ 1   jdk.internal.vm.vector.VectorSupport::maybeRebox (8 bytes)   inline (hot)
                                    @ 3   jdk.internal.misc.Unsafe::loadFence (5 bytes)   (intrinsic)
                              @ 28   jdk.incubator.vector.ByteVector$$Lambda/0x00007fc97f055788::apply (10 bytes)   inline (hot)
                               \-> TypeProfile (3186557/3186557 counts) = jdk/incubator/vector/ByteVector$$Lambda+0x00007fc97f055788
                                @ 6   jdk.incubator.vector.ByteVector::memorySegmentSet (18 bytes)   inline (hot)
                                  @ 12   jdk.internal.foreign.AbstractMemorySegmentImpl::set (14 bytes)   force inline by annotation
                                  @ 12   jdk.internal.foreign.AbstractMemorySegmentImpl::set (14 bytes)   force inline by annotation
                                   \-> TypeProfile (9089/18178 counts) = jdk/internal/foreign/HeapMemorySegmentImpl$OfFloat
                                   \-> TypeProfile (9089/18178 counts) = jdk/internal/foreign/HeapMemorySegmentImpl$OfByte
                                    @ 1   jdk.internal.foreign.layout.ValueLayouts$AbstractValueLayout::varHandle (26 bytes)   force inline by annotation
                                    @ 10   java.lang.invoke.VarHandleGuards::guard_LJI_V (138 bytes)   force inline by annotation
                                      @ 3   java.lang.invoke.VarHandle::checkAccessModeThenIsDirect (29 bytes)   force inline by annotation
                                      @ 48   java.lang.invoke.VarForm::getMemberName (38 bytes)   force inline by annotation
                                      @ 51   java.lang.invoke.VarHandleSegmentAsBytes::set (49 bytes)   force inline by annotation
                                        @ 14   java.lang.invoke.VarHandleSegmentAsBytes::checkAddress (21 bytes)   force inline by annotation
                                          @ 1   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                          @ 15   jdk.internal.foreign.AbstractMemorySegmentImpl::checkAccess (30 bytes)   force inline by annotation
                                            @ 26   jdk.internal.foreign.AbstractMemorySegmentImpl::checkBounds (54 bytes)   force inline by annotation
                                              @ 16   jdk.internal.util.Preconditions::checkIndex (22 bytes)   (intrinsic)
                                        @ 24   jdk.internal.foreign.AbstractMemorySegmentImpl::sessionImpl (5 bytes)   accessor
                                        @ 29   jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat::unsafeGetBase (5 bytes)   inline (hot)
                                          @ 1   jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat::unsafeGetBase (11 bytes)   inline (hot)
                                            @ 4   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                        @ 40   java.lang.invoke.VarHandleSegmentAsBytes::offsetPlain (39 bytes)   force inline by annotation
                                          @ 1   jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat::unsafeGetOffset (5 bytes)   inline (hot)
                                            @ 1   jdk.internal.foreign.HeapMemorySegmentImpl::unsafeGetOffset (5 bytes)   accessor
                                          @ 13   jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat::maxAlignMask (4 bytes)   inline (hot)
               !                        @ 45   jdk.internal.misc.ScopedMemoryAccess::putByte (21 bytes)   force inline by annotation
               !                          @ 6   jdk.internal.misc.ScopedMemoryAccess::putByteInternal (35 bytes)   force inline by annotation
                                            @ 5   jdk.internal.foreign.MemorySessionImpl::checkValidStateRaw (33 bytes)   force inline by annotation
                                            @ 15   jdk.internal.misc.Unsafe::putByte (0 bytes)   (intrinsic)
                                            @ 19   java.lang.ref.Reference::reachabilityFence (1 bytes)   force inline by annotation
                                    @ 1   jdk.internal.foreign.layout.ValueLayouts$AbstractValueLayout::varHandle (26 bytes)   force inline by annotation
                                    @ 10   java.lang.invoke.VarHandleGuards::guard_LJI_V (138 bytes)   force inline by annotation
                                      @ 3   java.lang.invoke.VarHandle::checkAccessModeThenIsDirect (29 bytes)   force inline by annotation
                                      @ 48   java.lang.invoke.VarForm::getMemberName (38 bytes)   force inline by annotation
                                      @ 51   java.lang.invoke.VarHandleSegmentAsBytes::set (49 bytes)   force inline by annotation
                                        @ 14   java.lang.invoke.VarHandleSegmentAsBytes::checkAddress (21 bytes)   force inline by annotation
                                          @ 1   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                          @ 15   jdk.internal.foreign.AbstractMemorySegmentImpl::checkAccess (30 bytes)   force inline by annotation
                                            @ 26   jdk.internal.foreign.AbstractMemorySegmentImpl::checkBounds (54 bytes)   force inline by annotation
                                              @ 16   jdk.internal.util.Preconditions::checkIndex (22 bytes)   (intrinsic)
                                        @ 24   jdk.internal.foreign.AbstractMemorySegmentImpl::sessionImpl (5 bytes)   accessor
                                        @ 29   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetBase (5 bytes)   inline (hot)
                                          @ 1   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetBase (11 bytes)   inline (hot)
                                            @ 4   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                        @ 40   java.lang.invoke.VarHandleSegmentAsBytes::offsetPlain (39 bytes)   force inline by annotation
                                          @ 1   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetOffset (5 bytes)   inline (hot)
                                            @ 1   jdk.internal.foreign.HeapMemorySegmentImpl::unsafeGetOffset (5 bytes)   accessor
                                          @ 13   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::maxAlignMask (4 bytes)   inline (hot)
               !                        @ 45   jdk.internal.misc.ScopedMemoryAccess::putByte (21 bytes)   force inline by annotation
               !                          @ 6   jdk.internal.misc.ScopedMemoryAccess::putByteInternal (35 bytes)   force inline by annotation
                                            @ 5   jdk.internal.foreign.MemorySessionImpl::checkValidStateRaw (33 bytes)   force inline by annotation
                                            @ 15   jdk.internal.misc.Unsafe::putByte (0 bytes)   (intrinsic)
                                            @ 19   java.lang.ref.Reference::reachabilityFence (1 bytes)   force inline by annotation
                              @ 3   java.lang.invoke.Invokers$Holder::linkToTargetMethod (8 bytes)   force inline by annotation
                                @ 4   java.lang.invoke.LambdaForm$MH/0x00007fc97f000800::invoke (8 bytes)   force inline by annotation
                              @ 8   jdk.incubator.vector.ByteVector::stLongOp (40 bytes)   force inline by annotation
                                @ 1   jdk.incubator.vector.Byte512Vector::vec (8 bytes)   force inline by annotation
                                 \-> TypeProfile (49902/49902 counts) = jdk/incubator/vector/Byte512Vector
                                  @ 1   jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload (8 bytes)   inline (hot)
                                    @ 1   jdk.internal.vm.vector.VectorSupport::maybeRebox (8 bytes)   inline (hot)
                                      @ 3   jdk.internal.misc.Unsafe::loadFence (5 bytes)   (intrinsic)
                                @ 28   jdk.incubator.vector.ByteVector$$Lambda/0x00007fc97f055788::apply (10 bytes)   inline (hot)
                                  @ 6   jdk.incubator.vector.ByteVector::memorySegmentSet (18 bytes)   inline (hot)
                                    @ 12   jdk.internal.foreign.AbstractMemorySegmentImpl::set (14 bytes)   force inline by annotation
                                      @ 1   jdk.internal.foreign.layout.ValueLayouts$AbstractValueLayout::varHandle (26 bytes)   force inline by annotation
                                      @ 10   java.lang.invoke.VarHandleGuards::guard_LJI_V (138 bytes)   force inline by annotation
                                        @ 3   java.lang.invoke.VarHandle::checkAccessModeThenIsDirect (29 bytes)   force inline by annotation
                                        @ 48   java.lang.invoke.VarForm::getMemberName (38 bytes)   force inline by annotation
                                        @ 51   java.lang.invoke.VarHandleSegmentAsBytes::set (49 bytes)   force inline by annotation
                                          @ 14   java.lang.invoke.VarHandleSegmentAsBytes::checkAddress (21 bytes)   force inline by annotation
                                            @ 1   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                            @ 15   jdk.internal.foreign.AbstractMemorySegmentImpl::checkAccess (30 bytes)   force inline by annotation
                                              @ 26   jdk.internal.foreign.AbstractMemorySegmentImpl::checkBounds (54 bytes)   force inline by annotation
                                                @ 16   jdk.internal.util.Preconditions::checkIndex (22 bytes)   (intrinsic)
                                          @ 24   jdk.internal.foreign.AbstractMemorySegmentImpl::sessionImpl (5 bytes)   accessor
                                          @ 29   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetBase (5 bytes)   inline (hot)
                                          @ 29   jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat::unsafeGetBase (5 bytes)   inline (hot)
                                           \-> TypeProfile (9089/18178 counts) = jdk/internal/foreign/HeapMemorySegmentImpl$OfFloat
                                           \-> TypeProfile (9089/18178 counts) = jdk/internal/foreign/HeapMemorySegmentImpl$OfByte
                                            @ 1   jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat::unsafeGetBase (11 bytes)   inline (hot)
                                              @ 4   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                            @ 1   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetBase (11 bytes)   inline (hot)
                                              @ 4   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                          @ 40   java.lang.invoke.VarHandleSegmentAsBytes::offsetPlain (39 bytes)   force inline by annotation
                                            @ 1   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetOffset (5 bytes)   inline (hot)
                                            @ 1   jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat::unsafeGetOffset (5 bytes)   inline (hot)
                                             \-> TypeProfile (9154/39683 counts) = jdk/internal/foreign/HeapMemorySegmentImpl$OfFloat
                                             \-> TypeProfile (30529/39683 counts) = jdk/internal/foreign/HeapMemorySegmentImpl$OfByte
                                              @ 1   jdk.internal.foreign.HeapMemorySegmentImpl::unsafeGetOffset (5 bytes)   accessor
                                              @ 1   jdk.internal.foreign.HeapMemorySegmentImpl::unsafeGetOffset (5 bytes)   accessor
                                            @ 13   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::maxAlignMask (4 bytes)   inline (hot)
                                            @ 13   jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat::maxAlignMask (4 bytes)   inline (hot)
                                             \-> TypeProfile (9154/39683 counts) = jdk/internal/foreign/HeapMemorySegmentImpl$OfFloat
                                             \-> TypeProfile (30529/39683 counts) = jdk/internal/foreign/HeapMemorySegmentImpl$OfByte
               !                          @ 45   jdk.internal.misc.ScopedMemoryAccess::putByte (21 bytes)   force inline by annotation
               !                            @ 6   jdk.internal.misc.ScopedMemoryAccess::putByteInternal (35 bytes)   force inline by annotation
                                              @ 5   jdk.internal.foreign.MemorySessionImpl::checkValidStateRaw (33 bytes)   force inline by annotation
                                              @ 15   jdk.internal.misc.Unsafe::putByte (0 bytes)   (intrinsic)
                                              @ 19   java.lang.ref.Reference::reachabilityFence (1 bytes)   force inline by annotation
                              @ 32   jdk.incubator.vector.ByteVector$$Lambda/0x00007fc97f055358::store (14 bytes)   inline (hot)
                               \-> TypeProfile (55099/55099 counts) = jdk/incubator/vector/ByteVector$$Lambda+0x00007fc97f055358
                                @ 10   jdk.incubator.vector.ByteVector::lambda$intoMemorySegment0$113 (12 bytes)   inline (hot)
                                  @ 3   java.lang.invoke.Invokers$Holder::linkToTargetMethod (8 bytes)   force inline by annotation
                                    @ 4   java.lang.invoke.LambdaForm$MH/0x00007fc97f000800::invoke (8 bytes)   force inline by annotation
                                  @ 8   jdk.incubator.vector.ByteVector::stLongOp (40 bytes)   force inline by annotation
                                    @ 1   jdk.incubator.vector.Byte512Vector::vec (8 bytes)   force inline by annotation
                                      @ 1   jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload (8 bytes)   inline (hot)
                                        @ 1   jdk.internal.vm.vector.VectorSupport::maybeRebox (8 bytes)   inline (hot)
                                          @ 3   jdk.internal.misc.Unsafe::loadFence (5 bytes)   (intrinsic)
                                    @ 28   jdk.incubator.vector.ByteVector$$Lambda/0x00007fc97f055788::apply (10 bytes)   inline (hot)
                                      @ 6   jdk.incubator.vector.ByteVector::memorySegmentSet (18 bytes)   inline (hot)
                                        @ 12   jdk.internal.foreign.AbstractMemorySegmentImpl::set (14 bytes)   force inline by annotation
                                          @ 1   jdk.internal.foreign.layout.ValueLayouts$AbstractValueLayout::varHandle (26 bytes)   force inline by annotation
                                          @ 10   java.lang.invoke.VarHandleGuards::guard_LJI_V (138 bytes)   force inline by annotation
                                            @ 3   java.lang.invoke.VarHandle::checkAccessModeThenIsDirect (29 bytes)   force inline by annotation
                                            @ 48   java.lang.invoke.VarForm::getMemberName (38 bytes)   force inline by annotation
                                            @ 51   java.lang.invoke.VarHandleSegmentAsBytes::set (49 bytes)   force inline by annotation
                                              @ 14   java.lang.invoke.VarHandleSegmentAsBytes::checkAddress (21 bytes)   force inline by annotation
                                                @ 1   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                                @ 15   jdk.internal.foreign.AbstractMemorySegmentImpl::checkAccess (30 bytes)   force inline by annotation
                                                  @ 26   jdk.internal.foreign.AbstractMemorySegmentImpl::checkBounds (54 bytes)   force inline by annotation
                                                    @ 16   jdk.internal.util.Preconditions::checkIndex (22 bytes)   (intrinsic)
                                              @ 24   jdk.internal.foreign.AbstractMemorySegmentImpl::sessionImpl (5 bytes)   accessor
                                              @ 29   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetBase (5 bytes)   inline (hot)
                                              @ 29   jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat::unsafeGetBase (5 bytes)   inline (hot)
                                               \-> TypeProfile (9089/18178 counts) = jdk/internal/foreign/HeapMemorySegmentImpl$OfFloat
                                               \-> TypeProfile (9089/18178 counts) = jdk/internal/foreign/HeapMemorySegmentImpl$OfByte
                                                @ 1   jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat::unsafeGetBase (11 bytes)   inline (hot)
                                                  @ 4   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                                @ 1   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetBase (11 bytes)   inline (hot)
                                                  @ 4   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                              @ 40   java.lang.invoke.VarHandleSegmentAsBytes::offsetPlain (39 bytes)   force inline by annotation
                                                @ 1   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetOffset (5 bytes)   inline (hot)
                                                @ 1   jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat::unsafeGetOffset (5 bytes)   inline (hot)
                                                 \-> TypeProfile (9154/39683 counts) = jdk/internal/foreign/HeapMemorySegmentImpl$OfFloat
                                                 \-> TypeProfile (30529/39683 counts) = jdk/internal/foreign/HeapMemorySegmentImpl$OfByte
                                                  @ 1   jdk.internal.foreign.HeapMemorySegmentImpl::unsafeGetOffset (5 bytes)   accessor
                                                  @ 1   jdk.internal.foreign.HeapMemorySegmentImpl::unsafeGetOffset (5 bytes)   accessor
                                                @ 13   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::maxAlignMask (4 bytes)   inline (hot)
                                                @ 13   jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat::maxAlignMask (4 bytes)   inline (hot)
                                                 \-> TypeProfile (9154/39683 counts) = jdk/internal/foreign/HeapMemorySegmentImpl$OfFloat
                                                 \-> TypeProfile (30529/39683 counts) = jdk/internal/foreign/HeapMemorySegmentImpl$OfByte
               !                              @ 45   jdk.internal.misc.ScopedMemoryAccess::putByte (21 bytes)   force inline by annotation
               !                                @ 6   jdk.internal.misc.ScopedMemoryAccess::putByteInternal (35 bytes)   force inline by annotation
                                                  @ 5   jdk.internal.foreign.MemorySessionImpl::checkValidStateRaw (33 bytes)   force inline by annotation
                                                  @ 15   jdk.internal.misc.Unsafe::putByte (0 bytes)   (intrinsic)
                                                  @ 19   java.lang.ref.Reference::reachabilityFence (1 bytes)   force inline by annotation
                              @ 10   jdk.incubator.vector.ByteVector::lambda$intoMemorySegment0$113 (12 bytes)   inline (hot)
                                @ 3   java.lang.invoke.Invokers$Holder::linkToTargetMethod (8 bytes)   force inline by annotation
                                  @ 4   java.lang.invoke.LambdaForm$MH/0x00007fc97f000800::invoke (8 bytes)   force inline by annotation
                                @ 8   jdk.incubator.vector.ByteVector::stLongOp (40 bytes)   force inline by annotation
                                  @ 1   jdk.incubator.vector.Byte512Vector::vec (8 bytes)   force inline by annotation
                                    @ 1   jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload (8 bytes)   inline (hot)
                                      @ 1   jdk.internal.vm.vector.VectorSupport::maybeRebox (8 bytes)   inline (hot)
                                        @ 3   jdk.internal.misc.Unsafe::loadFence (5 bytes)   (intrinsic)
                                  @ 28   jdk.incubator.vector.ByteVector$$Lambda/0x00007fc97f055788::apply (10 bytes)   inline (hot)
                                    @ 6   jdk.incubator.vector.ByteVector::memorySegmentSet (18 bytes)   inline (hot)
                                      @ 12   jdk.internal.foreign.AbstractMemorySegmentImpl::set (14 bytes)   force inline by annotation
                                        @ 1   jdk.internal.foreign.layout.ValueLayouts$AbstractValueLayout::varHandle (26 bytes)   force inline by annotation
                                        @ 10   java.lang.invoke.VarHandleGuards::guard_LJI_V (138 bytes)   force inline by annotation
                                          @ 3   java.lang.invoke.VarHandle::checkAccessModeThenIsDirect (29 bytes)   force inline by annotation
                                          @ 48   java.lang.invoke.VarForm::getMemberName (38 bytes)   force inline by annotation
                                          @ 51   java.lang.invoke.VarHandleSegmentAsBytes::set (49 bytes)   force inline by annotation
                                            @ 14   java.lang.invoke.VarHandleSegmentAsBytes::checkAddress (21 bytes)   force inline by annotation
                                              @ 1   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                              @ 15   jdk.internal.foreign.AbstractMemorySegmentImpl::checkAccess (30 bytes)   force inline by annotation
                                                @ 26   jdk.internal.foreign.AbstractMemorySegmentImpl::checkBounds (54 bytes)   force inline by annotation
                                                  @ 16   jdk.internal.util.Preconditions::checkIndex (22 bytes)   (intrinsic)
                                            @ 24   jdk.internal.foreign.AbstractMemorySegmentImpl::sessionImpl (5 bytes)   accessor
                                            @ 29   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetBase (5 bytes)   inline (hot)
                                            @ 29   jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat::unsafeGetBase (5 bytes)   inline (hot)
                                             \-> TypeProfile (9089/18178 counts) = jdk/internal/foreign/HeapMemorySegmentImpl$OfFloat
                                             \-> TypeProfile (9089/18178 counts) = jdk/internal/foreign/HeapMemorySegmentImpl$OfByte
                                              @ 1   jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat::unsafeGetBase (11 bytes)   inline (hot)
                                                @ 4   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                              @ 1   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetBase (11 bytes)   inline (hot)
                                                @ 4   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                            @ 40   java.lang.invoke.VarHandleSegmentAsBytes::offsetPlain (39 bytes)   force inline by annotation
                                              @ 1   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetOffset (5 bytes)   inline (hot)
                                              @ 1   jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat::unsafeGetOffset (5 bytes)   inline (hot)
                                               \-> TypeProfile (9154/39683 counts) = jdk/internal/foreign/HeapMemorySegmentImpl$OfFloat
                                               \-> TypeProfile (30529/39683 counts) = jdk/internal/foreign/HeapMemorySegmentImpl$OfByte
                                                @ 1   jdk.internal.foreign.HeapMemorySegmentImpl::unsafeGetOffset (5 bytes)   accessor
                                                @ 1   jdk.internal.foreign.HeapMemorySegmentImpl::unsafeGetOffset (5 bytes)   accessor
                                              @ 13   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::maxAlignMask (4 bytes)   inline (hot)
                                              @ 13   jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat::maxAlignMask (4 bytes)   inline (hot)
                                               \-> TypeProfile (9154/39683 counts) = jdk/internal/foreign/HeapMemorySegmentImpl$OfFloat
                                               \-> TypeProfile (30529/39683 counts) = jdk/internal/foreign/HeapMemorySegmentImpl$OfByte
               !                            @ 45   jdk.internal.misc.ScopedMemoryAccess::putByte (21 bytes)   force inline by annotation
               !                              @ 6   jdk.internal.misc.ScopedMemoryAccess::putByteInternal (35 bytes)   force inline by annotation
                                                @ 5   jdk.internal.foreign.MemorySessionImpl::checkValidStateRaw (33 bytes)   force inline by annotation
                                                @ 15   jdk.internal.misc.Unsafe::putByte (0 bytes)   (intrinsic)
                                                @ 19   java.lang.ref.Reference::reachabilityFence (1 bytes)   force inline by annotation
                              @ 44   Main$$Lambda/0x00007fc97f001800::accept (9 bytes)   inline (hot)
                               \-> TypeProfile (28202/28202 counts) = Main$$Lambda+0x00007fc97f001800
                                @ 5   Main::lambda$main$0 (142 bytes)   inline (hot)
                                  @ 5   java.util.concurrent.ThreadLocalRandom::current (22 bytes)   inline (hot)
                                    @ 3   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                    @ 9   jdk.internal.misc.Unsafe::getInt (0 bytes)   (intrinsic)
                                  @ 9   java.util.Random::nextBytes (56 bytes)   inline (hot)
                                    @ 11   java.util.concurrent.ThreadLocalRandom::nextInt (8 bytes)   inline (hot)
                                      @ 1   java.util.concurrent.ThreadLocalRandom::nextSeed (39 bytes)   inline (hot)
                                        @ 3   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                        @ 18   jdk.internal.misc.Unsafe::getLong (0 bytes)   (intrinsic)
                                        @ 22   java.lang.Thread::threadId (5 bytes)   accessor
                                        @ 34   jdk.internal.misc.Unsafe::putLong (0 bytes)   (intrinsic)
                                      @ 4   java.util.concurrent.ThreadLocalRandom::mix32 (26 bytes)   inline (hot)
                                    @ 20   java.lang.Math::min (11 bytes)   (intrinsic)
                                  @ 13   java.lang.foreign.MemorySegment::ofArray (5 bytes)   inline (hot)
                                    @ 1   jdk.internal.foreign.SegmentFactories::fromArray (41 bytes)   inline (hot)
                                      @ 0   jdk.internal.foreign.SegmentFactories::ensureInitialized (5 bytes)   force inline by annotation
                                      @ 4   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                      @ 14   jdk.internal.foreign.Utils$BaseAndScale::scale (5 bytes)   accessor
                                      @ 26   jdk.internal.foreign.Utils$BaseAndScale::base (5 bytes)   accessor
                                      @ 34   jdk.internal.foreign.MemorySessionImpl::createHeap (9 bytes)   inline (hot)
                                        @ 5   jdk.internal.foreign.GlobalSession$HeapSession::<init> (13 bytes)   inline (hot)
                                          @ 1   jdk.internal.foreign.GlobalSession::<init> (7 bytes)   inline (hot)
                                            @ 3   jdk.internal.foreign.MemorySessionImpl::<init> (20 bytes)   inline (hot)
                                              @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                          @ 6   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                      @ 37   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::<init> (13 bytes)   inline (hot)
                                        @ 9   jdk.internal.foreign.HeapMemorySegmentImpl::<init> (21 bytes)   force inline by annotation
                                          @ 7   jdk.internal.foreign.AbstractMemorySegmentImpl::<init> (21 bytes)   force inline by annotation
                                            @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                  @ 25   jdk.incubator.vector.ByteVector$ByteSpecies::fromMemorySegment (9 bytes)   force inline by annotation
                                    @ 5   jdk.incubator.vector.ByteVector$ByteSpecies::fromMemorySegment (9 bytes)   force inline by annotation
                                      @ 5   jdk.incubator.vector.ByteVector::fromMemorySegment (40 bytes)   force inline by annotation
                                        @ 2   jdk.incubator.vector.AbstractSpecies::vectorByteSize (5 bytes)   accessor
                                        @ 9   jdk.internal.foreign.AbstractMemorySegmentImpl::byteSize (5 bytes)   accessor
                                        @ 14   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize (57 bytes)   force inline by annotation
                                          @ 45   java.util.Objects::checkIndex (7 bytes)   force inline by annotation
                                            @ 3   jdk.internal.util.Preconditions::checkIndex (22 bytes)   (intrinsic)
                                        @ 26   jdk.incubator.vector.ByteVector$ByteSpecies::dummyVector (8 bytes)   force inline by annotation
                                          @ 1   jdk.incubator.vector.AbstractSpecies::dummyVector (16 bytes)   force inline by annotation
                                        @ 31   jdk.incubator.vector.Byte512Vector::fromMemorySegment0 (7 bytes)   force inline by annotation
                                          @ 3   jdk.incubator.vector.ByteVector::fromMemorySegment0Template (40 bytes)   force inline by annotation
                                            @ 1   jdk.incubator.vector.Byte512Vector::vspecies (4 bytes)   force inline by annotation
                                            @ 8   jdk.incubator.vector.ByteVector$ByteSpecies::vectorType (5 bytes)   accessor
                                            @ 13   jdk.incubator.vector.ByteVector$ByteSpecies::elementType (4 bytes)   force inline by annotation
                                            @ 18   jdk.incubator.vector.AbstractSpecies::laneCount (5 bytes)   accessor
                                            @ 28   java.lang.invoke.Invokers$Holder::linkToTargetMethod (8 bytes)   force inline by annotation
                                              @ 4   java.lang.invoke.LambdaForm$MH/0x00007fc97f000800::invoke (8 bytes)   force inline by annotation
               !                            @ 33   jdk.internal.misc.ScopedMemoryAccess::loadFromMemorySegment (26 bytes)   force inline by annotation
                                              @ 1   jdk.internal.foreign.AbstractMemorySegmentImpl::sessionImpl (5 bytes)   accessor
               !                              @ 14   jdk.internal.misc.ScopedMemoryAccess::loadFromMemorySegmentScopedInternal (53 bytes)   force inline by annotation
                                                @ 1   jdk.internal.foreign.MemorySessionImpl::checkValidStateRaw (33 bytes)   force inline by annotation
                                                @ 9   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetBase (5 bytes)   inline (hot)
                                                  @ 1   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetBase (11 bytes)   inline (hot)
                                                    @ 4   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                                @ 14   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetOffset (5 bytes)   inline (hot)
                                                  @ 1   jdk.internal.foreign.HeapMemorySegmentImpl::unsafeGetOffset (5 bytes)   accessor
                                                @ 29   jdk.internal.vm.vector.VectorSupport::load (38 bytes)   (intrinsic)
                                                @ 38   java.lang.ref.Reference::reachabilityFence (1 bytes)   force inline by annotation
                                        @ 36   jdk.incubator.vector.ByteVector::maybeSwap (2 bytes)   force inline by annotation
                                  @ 48   java.lang.foreign.MemorySegment::ofArray (5 bytes)   inline (hot)
                                    @ 1   jdk.internal.foreign.SegmentFactories::fromArray (41 bytes)   inline (hot)
                                      @ 0   jdk.internal.foreign.SegmentFactories::ensureInitialized (5 bytes)   force inline by annotation
                                      @ 4   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                      @ 14   jdk.internal.foreign.Utils$BaseAndScale::scale (5 bytes)   accessor
                                      @ 26   jdk.internal.foreign.Utils$BaseAndScale::base (5 bytes)   accessor
                                      @ 34   jdk.internal.foreign.MemorySessionImpl::createHeap (9 bytes)   inline (hot)
                                        @ 5   jdk.internal.foreign.GlobalSession$HeapSession::<init> (13 bytes)   inline (hot)
                                          @ 1   jdk.internal.foreign.GlobalSession::<init> (7 bytes)   inline (hot)
                                            @ 3   jdk.internal.foreign.MemorySessionImpl::<init> (20 bytes)   inline (hot)
                                              @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                          @ 6   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                      @ 37   jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat::<init> (13 bytes)   inline (hot)
                                        @ 9   jdk.internal.foreign.HeapMemorySegmentImpl::<init> (21 bytes)   force inline by annotation
                                          @ 7   jdk.internal.foreign.AbstractMemorySegmentImpl::<init> (21 bytes)   force inline by annotation
                                            @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                  @ 55   java.lang.foreign.MemorySegment::ofArray (5 bytes)   inline (hot)
                                    @ 1   jdk.internal.foreign.SegmentFactories::fromArray (41 bytes)   inline (hot)
                                      @ 0   jdk.internal.foreign.SegmentFactories::ensureInitialized (5 bytes)   force inline by annotation
                                      @ 4   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                      @ 14   jdk.internal.foreign.Utils$BaseAndScale::scale (5 bytes)   accessor
                                      @ 26   jdk.internal.foreign.Utils$BaseAndScale::base (5 bytes)   accessor
                                      @ 34   jdk.internal.foreign.MemorySessionImpl::createHeap (9 bytes)   inline (hot)
                                        @ 5   jdk.internal.foreign.GlobalSession$HeapSession::<init> (13 bytes)   inline (hot)
                                          @ 1   jdk.internal.foreign.GlobalSession::<init> (7 bytes)   inline (hot)
                                            @ 3   jdk.internal.foreign.MemorySessionImpl::<init> (20 bytes)   inline (hot)
                                              @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                          @ 6   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                      @ 37   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::<init> (13 bytes)   inline (hot)
                                        @ 9   jdk.internal.foreign.HeapMemorySegmentImpl::<init> (21 bytes)   force inline by annotation
                                          @ 7   jdk.internal.foreign.AbstractMemorySegmentImpl::<init> (21 bytes)   force inline by annotation
                                            @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                  @ 64   java.util.concurrent.ThreadLocalRandom::current (22 bytes)   inline (hot)
                                    @ 3   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                    @ 9   jdk.internal.misc.Unsafe::getInt (0 bytes)   (intrinsic)
                                  @ 71   java.util.concurrent.ThreadLocalRandom::nextInt (7 bytes)   inline (hot)
                                    @ 3   java.util.random.RandomGenerator::nextInt (12 bytes)   inline (hot)
                                      @ 2   jdk.internal.util.random.RandomSupport::checkRange (16 bytes)   inline (hot)
                                      @ 8   jdk.internal.util.random.RandomSupport::boundedNextInt (109 bytes)   inline (hot)
                                        @ 1   java.util.concurrent.ThreadLocalRandom::nextInt (8 bytes)   inline (hot)
                                          @ 1   java.util.concurrent.ThreadLocalRandom::nextSeed (39 bytes)   inline (hot)
                                            @ 3   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                            @ 18   jdk.internal.misc.Unsafe::getLong (0 bytes)   (intrinsic)
                                            @ 22   java.lang.Thread::threadId (5 bytes)   accessor
                                            @ 34   jdk.internal.misc.Unsafe::putLong (0 bytes)   (intrinsic)
                                          @ 4   java.util.concurrent.ThreadLocalRandom::mix32 (26 bytes)   inline (hot)
                                  @ 78   jdk.incubator.vector.ByteVector::intoMemorySegment (48 bytes)   force inline by annotation
                                    @ 1   jdk.internal.foreign.AbstractMemorySegmentImpl::isReadOnly (5 bytes)   accessor
                                    @ 22   jdk.incubator.vector.Byte512Vector::byteSize (7 bytes)   force inline by annotation
                                    @ 27   jdk.internal.foreign.AbstractMemorySegmentImpl::byteSize (5 bytes)   accessor
                                    @ 32   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize (57 bytes)   force inline by annotation
                                      @ 45   java.util.Objects::checkIndex (7 bytes)   force inline by annotation
                                        @ 3   jdk.internal.util.Preconditions::checkIndex (22 bytes)   (intrinsic)
                                    @ 39   jdk.incubator.vector.ByteVector::maybeSwap (2 bytes)   force inline by annotation
                                    @ 44   jdk.incubator.vector.ByteVector::intoMemorySegment0 (36 bytes)   force inline by annotation
                                      @ 1   jdk.incubator.vector.Byte512Vector::vspecies (4 bytes)   force inline by annotation
                                      @ 8   jdk.incubator.vector.ByteVector$ByteSpecies::vectorType (5 bytes)   accessor
                                      @ 13   jdk.incubator.vector.ByteVector$ByteSpecies::elementType (4 bytes)   force inline by annotation
                                      @ 18   jdk.incubator.vector.AbstractSpecies::laneCount (5 bytes)   accessor
                                      @ 27   java.lang.invoke.Invokers$Holder::linkToTargetMethod (8 bytes)   force inline by annotation
                                        @ 4   java.lang.invoke.LambdaForm$MH/0x00007fc97f000800::invoke (8 bytes)   force inline by annotation
               !                      @ 32   jdk.internal.misc.ScopedMemoryAccess::storeIntoMemorySegment (30 bytes)   force inline by annotation
                                        @ 2   jdk.internal.foreign.AbstractMemorySegmentImpl::sessionImpl (5 bytes)   accessor
               !                        @ 15   jdk.internal.misc.ScopedMemoryAccess::storeIntoMemorySegmentScopedInternal (49 bytes)   force inline by annotation
                                          @ 1   jdk.internal.foreign.MemorySessionImpl::checkValidStateRaw (33 bytes)   force inline by annotation
                                          @ 9   jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat::unsafeGetBase (5 bytes)   inline (hot)
                                            @ 1   jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat::unsafeGetBase (11 bytes)   inline (hot)
                                              @ 4   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                          @ 14   jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat::unsafeGetOffset (5 bytes)   inline (hot)
                                            @ 1   jdk.internal.foreign.HeapMemorySegmentImpl::unsafeGetOffset (5 bytes)   accessor
                                          @ 29   jdk.internal.vm.vector.VectorSupport::store (38 bytes)   (intrinsic)
                                          @ 33   java.lang.ref.Reference::reachabilityFence (1 bytes)   force inline by annotation
                                  @ 85   java.util.concurrent.ThreadLocalRandom::current (22 bytes)   inline (hot)
                                    @ 3   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                    @ 9   jdk.internal.misc.Unsafe::getInt (0 bytes)   (intrinsic)
                                  @ 92   java.util.concurrent.ThreadLocalRandom::nextInt (7 bytes)   inline (hot)
                                    @ 3   java.util.random.RandomGenerator::nextInt (12 bytes)   inline (hot)
                                      @ 2   jdk.internal.util.random.RandomSupport::checkRange (16 bytes)   inline (hot)
                                      @ 8   jdk.internal.util.random.RandomSupport::boundedNextInt (109 bytes)   inline (hot)
                                        @ 1   java.util.concurrent.ThreadLocalRandom::nextInt (8 bytes)   inline (hot)
                                          @ 1   java.util.concurrent.ThreadLocalRandom::nextSeed (39 bytes)   inline (hot)
                                            @ 3   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                            @ 18   jdk.internal.misc.Unsafe::getLong (0 bytes)   (intrinsic)
                                            @ 22   java.lang.Thread::threadId (5 bytes)   accessor
                                            @ 34   jdk.internal.misc.Unsafe::putLong (0 bytes)   (intrinsic)
                                          @ 4   java.util.concurrent.ThreadLocalRandom::mix32 (26 bytes)   inline (hot)
                                  @ 99   jdk.incubator.vector.ByteVector::intoMemorySegment (48 bytes)   force inline by annotation
                                    @ 1   jdk.internal.foreign.AbstractMemorySegmentImpl::isReadOnly (5 bytes)   accessor
                                    @ 22   jdk.incubator.vector.Byte512Vector::byteSize (7 bytes)   force inline by annotation
                                    @ 27   jdk.internal.foreign.AbstractMemorySegmentImpl::byteSize (5 bytes)   accessor
                                    @ 32   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize (57 bytes)   force inline by annotation
                                      @ 45   java.util.Objects::checkIndex (7 bytes)   force inline by annotation
                                        @ 3   jdk.internal.util.Preconditions::checkIndex (22 bytes)   (intrinsic)
                                    @ 39   jdk.incubator.vector.ByteVector::maybeSwap (2 bytes)   force inline by annotation
                                    @ 44   jdk.incubator.vector.ByteVector::intoMemorySegment0 (36 bytes)   force inline by annotation
                                      @ 1   jdk.incubator.vector.Byte512Vector::vspecies (4 bytes)   force inline by annotation
                                      @ 8   jdk.incubator.vector.ByteVector$ByteSpecies::vectorType (5 bytes)   accessor
                                      @ 13   jdk.incubator.vector.ByteVector$ByteSpecies::elementType (4 bytes)   force inline by annotation
                                      @ 18   jdk.incubator.vector.AbstractSpecies::laneCount (5 bytes)   accessor
                                      @ 27   java.lang.invoke.Invokers$Holder::linkToTargetMethod (8 bytes)   force inline by annotation
                                        @ 4   java.lang.invoke.LambdaForm$MH/0x00007fc97f000800::invoke (8 bytes)   force inline by annotation
               !                      @ 32   jdk.internal.misc.ScopedMemoryAccess::storeIntoMemorySegment (30 bytes)   force inline by annotation
                                        @ 2   jdk.internal.foreign.AbstractMemorySegmentImpl::sessionImpl (5 bytes)   accessor
               !                        @ 15   jdk.internal.misc.ScopedMemoryAccess::storeIntoMemorySegmentScopedInternal (49 bytes)   force inline by annotation
                                          @ 1   jdk.internal.foreign.MemorySessionImpl::checkValidStateRaw (33 bytes)   force inline by annotation
                                          @ 9   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetBase (5 bytes)   inline (hot)
                                            @ 1   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetBase (11 bytes)   inline (hot)
                                              @ 4   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                          @ 14   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetOffset (5 bytes)   inline (hot)
                                            @ 1   jdk.internal.foreign.HeapMemorySegmentImpl::unsafeGetOffset (5 bytes)   accessor
                                          @ 29   jdk.internal.vm.vector.VectorSupport::store (38 bytes)   (intrinsic)
                                          @ 33   java.lang.ref.Reference::reachabilityFence (1 bytes)   force inline by annotation
                                  @ 137   java.util.concurrent.atomic.AtomicLong::addAndGet (14 bytes)   inline (hot)
                                    @ 8   jdk.internal.misc.Unsafe::getAndAddLong (27 bytes)   (intrinsic)
                              @ 1   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                @ 8   java.lang.NullPointerException::<init> (5 bytes)   failed to inline: don't inline Throwable constructors
                              @ 44   Main$$Lambda/0x00007fc97f001800::accept (9 bytes)   inline
                                @ 5   Main::lambda$main$0 (142 bytes)   failed to inline: inlining prohibited by policy
                              @ 59   Main$$Lambda/0x00007fc97f001800::accept (9 bytes)   inline
                                @ 5   Main::lambda$main$0 (142 bytes)   failed to inline: inlining prohibited by policy
                              @ 44   Main$$Lambda/0x00007fc97f001800::accept (9 bytes)   inline (hot)
                               \-> TypeProfile (340730/340730 counts) = Main$$Lambda+0x00007fc97f001800
                                @ 5   Main::lambda$main$0 (142 bytes)   inline (hot)
                                  @ 5   java.util.concurrent.ThreadLocalRandom::current (22 bytes)   inline (hot)
                                    @ 3   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                    @ 9   jdk.internal.misc.Unsafe::getInt (0 bytes)   (intrinsic)
                                  @ 9   java.util.Random::nextBytes (56 bytes)   inline (hot)
                                    @ 11   java.util.concurrent.ThreadLocalRandom::nextInt (8 bytes)   inline (hot)
                                      @ 1   java.util.concurrent.ThreadLocalRandom::nextSeed (39 bytes)   inline (hot)
                                        @ 3   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                        @ 18   jdk.internal.misc.Unsafe::getLong (0 bytes)   (intrinsic)
                                        @ 22   java.lang.Thread::threadId (5 bytes)   accessor
                                        @ 34   jdk.internal.misc.Unsafe::putLong (0 bytes)   (intrinsic)
                                      @ 4   java.util.concurrent.ThreadLocalRandom::mix32 (26 bytes)   inline (hot)
                                    @ 20   java.lang.Math::min (11 bytes)   (intrinsic)
                                  @ 13   java.lang.foreign.MemorySegment::ofArray (5 bytes)   inline (hot)
                                    @ 1   jdk.internal.foreign.SegmentFactories::fromArray (41 bytes)   inline (hot)
                                      @ 0   jdk.internal.foreign.SegmentFactories::ensureInitialized (5 bytes)   force inline by annotation
                                      @ 4   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                      @ 14   jdk.internal.foreign.Utils$BaseAndScale::scale (5 bytes)   accessor
                                      @ 26   jdk.internal.foreign.Utils$BaseAndScale::base (5 bytes)   accessor
                                      @ 34   jdk.internal.foreign.MemorySessionImpl::createHeap (9 bytes)   inline (hot)
                                        @ 5   jdk.internal.foreign.GlobalSession$HeapSession::<init> (13 bytes)   inline (hot)
                                          @ 1   jdk.internal.foreign.GlobalSession::<init> (7 bytes)   inline (hot)
                                            @ 3   jdk.internal.foreign.MemorySessionImpl::<init> (20 bytes)   inline (hot)
                                              @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                          @ 6   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                      @ 37   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::<init> (13 bytes)   inline (hot)
                                        @ 9   jdk.internal.foreign.HeapMemorySegmentImpl::<init> (21 bytes)   force inline by annotation
                                          @ 7   jdk.internal.foreign.AbstractMemorySegmentImpl::<init> (21 bytes)   force inline by annotation
                                            @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                  @ 25   jdk.incubator.vector.ByteVector$ByteSpecies::fromMemorySegment (9 bytes)   force inline by annotation
                                    @ 5   jdk.incubator.vector.ByteVector$ByteSpecies::fromMemorySegment (9 bytes)   force inline by annotation
                                      @ 5   jdk.incubator.vector.ByteVector::fromMemorySegment (40 bytes)   force inline by annotation
                                        @ 2   jdk.incubator.vector.AbstractSpecies::vectorByteSize (5 bytes)   accessor
                                        @ 9   jdk.internal.foreign.AbstractMemorySegmentImpl::byteSize (5 bytes)   accessor
                                        @ 14   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize (57 bytes)   force inline by annotation
                                          @ 45   java.util.Objects::checkIndex (7 bytes)   force inline by annotation
                                            @ 3   jdk.internal.util.Preconditions::checkIndex (22 bytes)   (intrinsic)
                                        @ 26   jdk.incubator.vector.ByteVector$ByteSpecies::dummyVector (8 bytes)   force inline by annotation
                                          @ 1   jdk.incubator.vector.AbstractSpecies::dummyVector (16 bytes)   force inline by annotation
                                        @ 31   jdk.incubator.vector.Byte512Vector::fromMemorySegment0 (7 bytes)   force inline by annotation
                                          @ 3   jdk.incubator.vector.ByteVector::fromMemorySegment0Template (40 bytes)   force inline by annotation
                                            @ 1   jdk.incubator.vector.Byte512Vector::vspecies (4 bytes)   force inline by annotation
                                            @ 8   jdk.incubator.vector.ByteVector$ByteSpecies::vectorType (5 bytes)   accessor
                                            @ 13   jdk.incubator.vector.ByteVector$ByteSpecies::elementType (4 bytes)   force inline by annotation
                                            @ 18   jdk.incubator.vector.AbstractSpecies::laneCount (5 bytes)   accessor
                                            @ 28   java.lang.invoke.Invokers$Holder::linkToTargetMethod (8 bytes)   force inline by annotation
                                              @ 4   java.lang.invoke.LambdaForm$MH/0x00007fc97f000800::invoke (8 bytes)   force inline by annotation
               !                            @ 33   jdk.internal.misc.ScopedMemoryAccess::loadFromMemorySegment (26 bytes)   force inline by annotation
                                              @ 1   jdk.internal.foreign.AbstractMemorySegmentImpl::sessionImpl (5 bytes)   accessor
               !                              @ 14   jdk.internal.misc.ScopedMemoryAccess::loadFromMemorySegmentScopedInternal (53 bytes)   force inline by annotation
                                                @ 1   jdk.internal.foreign.MemorySessionImpl::checkValidStateRaw (33 bytes)   force inline by annotation
                                                @ 9   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetBase (5 bytes)   inline (hot)
                                                  @ 1   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetBase (11 bytes)   inline (hot)
                                                    @ 4   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                                @ 14   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetOffset (5 bytes)   inline (hot)
                                                  @ 1   jdk.internal.foreign.HeapMemorySegmentImpl::unsafeGetOffset (5 bytes)   accessor
                                                @ 29   jdk.internal.vm.vector.VectorSupport::load (38 bytes)   (intrinsic)
                                                @ 38   java.lang.ref.Reference::reachabilityFence (1 bytes)   force inline by annotation
                                        @ 36   jdk.incubator.vector.ByteVector::maybeSwap (2 bytes)   force inline by annotation
                                  @ 48   java.lang.foreign.MemorySegment::ofArray (5 bytes)   inline (hot)
                                    @ 1   jdk.internal.foreign.SegmentFactories::fromArray (41 bytes)   inline (hot)
                                      @ 0   jdk.internal.foreign.SegmentFactories::ensureInitialized (5 bytes)   force inline by annotation
                                      @ 4   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                      @ 14   jdk.internal.foreign.Utils$BaseAndScale::scale (5 bytes)   accessor
                                      @ 26   jdk.internal.foreign.Utils$BaseAndScale::base (5 bytes)   accessor
                                      @ 34   jdk.internal.foreign.MemorySessionImpl::createHeap (9 bytes)   inline (hot)
                                        @ 5   jdk.internal.foreign.GlobalSession$HeapSession::<init> (13 bytes)   inline (hot)
                                          @ 1   jdk.internal.foreign.GlobalSession::<init> (7 bytes)   inline (hot)
                                            @ 3   jdk.internal.foreign.MemorySessionImpl::<init> (20 bytes)   inline (hot)
                                              @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                          @ 6   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                      @ 37   jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat::<init> (13 bytes)   inline (hot)
                                        @ 9   jdk.internal.foreign.HeapMemorySegmentImpl::<init> (21 bytes)   force inline by annotation
                                          @ 7   jdk.internal.foreign.AbstractMemorySegmentImpl::<init> (21 bytes)   force inline by annotation
                                            @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                  @ 55   java.lang.foreign.MemorySegment::ofArray (5 bytes)   inline (hot)
                                    @ 1   jdk.internal.foreign.SegmentFactories::fromArray (41 bytes)   inline (hot)
                                      @ 0   jdk.internal.foreign.SegmentFactories::ensureInitialized (5 bytes)   force inline by annotation
                                      @ 4   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                      @ 14   jdk.internal.foreign.Utils$BaseAndScale::scale (5 bytes)   accessor
                                      @ 26   jdk.internal.foreign.Utils$BaseAndScale::base (5 bytes)   accessor
                                      @ 34   jdk.internal.foreign.MemorySessionImpl::createHeap (9 bytes)   inline (hot)
                                        @ 5   jdk.internal.foreign.GlobalSession$HeapSession::<init> (13 bytes)   inline (hot)
                                          @ 1   jdk.internal.foreign.GlobalSession::<init> (7 bytes)   inline (hot)
                                            @ 3   jdk.internal.foreign.MemorySessionImpl::<init> (20 bytes)   inline (hot)
                                              @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                          @ 6   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                      @ 37   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::<init> (13 bytes)   inline (hot)
                                        @ 9   jdk.internal.foreign.HeapMemorySegmentImpl::<init> (21 bytes)   force inline by annotation
                                          @ 7   jdk.internal.foreign.AbstractMemorySegmentImpl::<init> (21 bytes)   force inline by annotation
                                            @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                  @ 64   java.util.concurrent.ThreadLocalRandom::current (22 bytes)   inline (hot)
                                    @ 3   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                    @ 9   jdk.internal.misc.Unsafe::getInt (0 bytes)   (intrinsic)
                                  @ 71   java.util.concurrent.ThreadLocalRandom::nextInt (7 bytes)   inline (hot)
                                    @ 3   java.util.random.RandomGenerator::nextInt (12 bytes)   inline (hot)
                                      @ 2   jdk.internal.util.random.RandomSupport::checkRange (16 bytes)   inline (hot)
                                      @ 8   jdk.internal.util.random.RandomSupport::boundedNextInt (109 bytes)   inline (hot)
                                        @ 1   java.util.concurrent.ThreadLocalRandom::nextInt (8 bytes)   inline (hot)
                                          @ 1   java.util.concurrent.ThreadLocalRandom::nextSeed (39 bytes)   inline (hot)
                                            @ 3   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                            @ 18   jdk.internal.misc.Unsafe::getLong (0 bytes)   (intrinsic)
                                            @ 22   java.lang.Thread::threadId (5 bytes)   accessor
                                            @ 34   jdk.internal.misc.Unsafe::putLong (0 bytes)   (intrinsic)
                                          @ 4   java.util.concurrent.ThreadLocalRandom::mix32 (26 bytes)   inline (hot)
                                        @ 68   java.util.concurrent.ThreadLocalRandom::nextInt (8 bytes)   failed to inline: low call site frequency
                                  @ 78   jdk.incubator.vector.ByteVector::intoMemorySegment (48 bytes)   force inline by annotation
                                    @ 1   jdk.internal.foreign.AbstractMemorySegmentImpl::isReadOnly (5 bytes)   accessor
                                    @ 22   jdk.incubator.vector.Byte512Vector::byteSize (7 bytes)   force inline by annotation
                                    @ 27   jdk.internal.foreign.AbstractMemorySegmentImpl::byteSize (5 bytes)   accessor
                                    @ 32   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize (57 bytes)   force inline by annotation
                                      @ 45   java.util.Objects::checkIndex (7 bytes)   force inline by annotation
                                        @ 3   jdk.internal.util.Preconditions::checkIndex (22 bytes)   (intrinsic)
                                    @ 39   jdk.incubator.vector.ByteVector::maybeSwap (2 bytes)   force inline by annotation
                                    @ 44   jdk.incubator.vector.ByteVector::intoMemorySegment0 (36 bytes)   force inline by annotation
                                      @ 1   jdk.incubator.vector.Byte512Vector::vspecies (4 bytes)   force inline by annotation
                                      @ 8   jdk.incubator.vector.ByteVector$ByteSpecies::vectorType (5 bytes)   accessor
                                      @ 13   jdk.incubator.vector.ByteVector$ByteSpecies::elementType (4 bytes)   force inline by annotation
                                      @ 18   jdk.incubator.vector.AbstractSpecies::laneCount (5 bytes)   accessor
                                      @ 27   java.lang.invoke.Invokers$Holder::linkToTargetMethod (8 bytes)   force inline by annotation
                                        @ 4   java.lang.invoke.LambdaForm$MH/0x00007fc97f000800::invoke (8 bytes)   force inline by annotation
               !                      @ 32   jdk.internal.misc.ScopedMemoryAccess::storeIntoMemorySegment (30 bytes)   force inline by annotation
                                        @ 2   jdk.internal.foreign.AbstractMemorySegmentImpl::sessionImpl (5 bytes)   accessor
               !                        @ 15   jdk.internal.misc.ScopedMemoryAccess::storeIntoMemorySegmentScopedInternal (49 bytes)   force inline by annotation
                                          @ 1   jdk.internal.foreign.MemorySessionImpl::checkValidStateRaw (33 bytes)   force inline by annotation
                                          @ 9   jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat::unsafeGetBase (5 bytes)   inline (hot)
                                            @ 1   jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat::unsafeGetBase (11 bytes)   inline (hot)
                                              @ 4   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                          @ 14   jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat::unsafeGetOffset (5 bytes)   inline (hot)
                                            @ 1   jdk.internal.foreign.HeapMemorySegmentImpl::unsafeGetOffset (5 bytes)   accessor
                                          @ 29   jdk.internal.vm.vector.VectorSupport::store (38 bytes)   (intrinsic)
                                          @ 33   java.lang.ref.Reference::reachabilityFence (1 bytes)   force inline by annotation
                                  @ 85   java.util.concurrent.ThreadLocalRandom::current (22 bytes)   inline (hot)
                                    @ 3   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                    @ 9   jdk.internal.misc.Unsafe::getInt (0 bytes)   (intrinsic)
                                  @ 92   java.util.concurrent.ThreadLocalRandom::nextInt (7 bytes)   inline (hot)
                                    @ 3   java.util.random.RandomGenerator::nextInt (12 bytes)   inline (hot)
                                      @ 2   jdk.internal.util.random.RandomSupport::checkRange (16 bytes)   inline (hot)
                                      @ 8   jdk.internal.util.random.RandomSupport::boundedNextInt (109 bytes)   inline (hot)
                                        @ 1   java.util.concurrent.ThreadLocalRandom::nextInt (8 bytes)   inline (hot)
                                          @ 1   java.util.concurrent.ThreadLocalRandom::nextSeed (39 bytes)   inline (hot)
                                            @ 3   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                            @ 18   jdk.internal.misc.Unsafe::getLong (0 bytes)   (intrinsic)
                                            @ 22   java.lang.Thread::threadId (5 bytes)   accessor
                                            @ 34   jdk.internal.misc.Unsafe::putLong (0 bytes)   (intrinsic)
                                          @ 4   java.util.concurrent.ThreadLocalRandom::mix32 (26 bytes)   inline (hot)
                                        @ 68   java.util.concurrent.ThreadLocalRandom::nextInt (8 bytes)   failed to inline: low call site frequency
                                  @ 99   jdk.incubator.vector.ByteVector::intoMemorySegment (48 bytes)   force inline by annotation
                                    @ 1   jdk.internal.foreign.AbstractMemorySegmentImpl::isReadOnly (5 bytes)   accessor
                                    @ 22   jdk.incubator.vector.Byte512Vector::byteSize (7 bytes)   force inline by annotation
                                    @ 27   jdk.internal.foreign.AbstractMemorySegmentImpl::byteSize (5 bytes)   accessor
                                    @ 32   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize (57 bytes)   force inline by annotation
                                      @ 45   java.util.Objects::checkIndex (7 bytes)   force inline by annotation
                                        @ 3   jdk.internal.util.Preconditions::checkIndex (22 bytes)   (intrinsic)
                                    @ 39   jdk.incubator.vector.ByteVector::maybeSwap (2 bytes)   force inline by annotation
                                    @ 44   jdk.incubator.vector.ByteVector::intoMemorySegment0 (36 bytes)   force inline by annotation
                                      @ 1   jdk.incubator.vector.Byte512Vector::vspecies (4 bytes)   force inline by annotation
                                      @ 8   jdk.incubator.vector.ByteVector$ByteSpecies::vectorType (5 bytes)   accessor
                                      @ 13   jdk.incubator.vector.ByteVector$ByteSpecies::elementType (4 bytes)   force inline by annotation
                                      @ 18   jdk.incubator.vector.AbstractSpecies::laneCount (5 bytes)   accessor
                                      @ 27   java.lang.invoke.Invokers$Holder::linkToTargetMethod (8 bytes)   force inline by annotation
                                        @ 4   java.lang.invoke.LambdaForm$MH/0x00007fc97f000800::invoke (8 bytes)   force inline by annotation
               !                      @ 32   jdk.internal.misc.ScopedMemoryAccess::storeIntoMemorySegment (30 bytes)   force inline by annotation
                                        @ 2   jdk.internal.foreign.AbstractMemorySegmentImpl::sessionImpl (5 bytes)   accessor
               !                        @ 15   jdk.internal.misc.ScopedMemoryAccess::storeIntoMemorySegmentScopedInternal (49 bytes)   force inline by annotation
                                          @ 1   jdk.internal.foreign.MemorySessionImpl::checkValidStateRaw (33 bytes)   force inline by annotation
                                          @ 9   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetBase (5 bytes)   inline (hot)
                                            @ 1   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetBase (11 bytes)   inline (hot)
                                              @ 4   java.util.Objects::requireNonNull (14 bytes)   force inline by annotation
                                          @ 14   jdk.internal.foreign.HeapMemorySegmentImpl$OfByte::unsafeGetOffset (5 bytes)   inline (hot)
                                            @ 1   jdk.internal.foreign.HeapMemorySegmentImpl::unsafeGetOffset (5 bytes)   accessor
                                          @ 29   jdk.internal.vm.vector.VectorSupport::store (38 bytes)   (intrinsic)
                                          @ 33   java.lang.ref.Reference::reachabilityFence (1 bytes)   force inline by annotation
                                  @ 137   java.util.concurrent.atomic.AtomicLong::addAndGet (14 bytes)   inline (hot)
                                    @ 8   jdk.internal.misc.Unsafe::getAndAddLong (27 bytes)   (intrinsic)
#
# Compiler replay data is saved as:
# /home/jatinbha/code/java/bugz/datastax/replay_pid466475.log
#
# If you would like to submit a bug report, please visit:
#   https://bugreport.java.com/bugreport/crash.jsp
#
