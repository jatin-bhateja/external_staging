CompileCommand: print test.workload bool print = true

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     236  129 %           test::workload @ 3 (54 bytes)
 total in heap  [0x00007f95210a7690,0x00007f95210a7f10] = 2176
 relocation     [0x00007f95210a77f0,0x00007f95210a7820] = 48
 main code      [0x00007f95210a7820,0x00007f95210a7d80] = 1376
 stub code      [0x00007f95210a7d80,0x00007f95210a7d98] = 24
 oops           [0x00007f95210a7d98,0x00007f95210a7da0] = 8
 metadata       [0x00007f95210a7da0,0x00007f95210a7db0] = 16
 scopes data    [0x00007f95210a7db0,0x00007f95210a7e58] = 168
 scopes pcs     [0x00007f95210a7e58,0x00007f95210a7ee8] = 144
 dependencies   [0x00007f95210a7ee8,0x00007f95210a7ef0] = 8
 nul chk table  [0x00007f95210a7ef0,0x00007f95210a7f10] = 32

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x00007f94bc410530} 'workload' '([I[I[II)I' in 'test'
  0x00007f95210a7820:   callq  0x00007f952b11aee0           ;   {runtime_call os::breakpoint()}
  0x00007f95210a7825:   data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f95210a7830:   mov    %eax,-0x14000(%rsp)
  0x00007f95210a7837:   push   %rbp
  0x00007f95210a7838:   sub    $0x40,%rsp
  0x00007f95210a783c:   mov    0x20(%rsi),%r10
  0x00007f95210a7840:   mov    %r10,(%rsp)
  0x00007f95210a7844:   mov    0x18(%rsi),%rbp
  0x00007f95210a7848:   mov    (%rsi),%ebx
  0x00007f95210a784a:   mov    0x10(%rsi),%r14
  0x00007f95210a784e:   mov    0x8(%rsi),%r13d
  0x00007f95210a7852:   mov    %rsi,%rdi
  0x00007f95210a7855:   data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f95210a7860:   vzeroupper 
  0x00007f95210a7863:   movabs $0x7f952b1d77f0,%r10
  0x00007f95210a786d:   callq  *%r10
  0x00007f95210a7870:   mov    (%rsp),%r10
  0x00007f95210a7874:   test   %r10,%r10
  0x00007f95210a7877:   je     0x00007f95210a7c46
  0x00007f95210a787d:   mov    %r10,%r9
  0x00007f95210a7880:   mov    0x8(%r10),%r11d
  0x00007f95210a7884:   cmp    $0x40b40,%r11d               ;   {metadata({type array int})}
  0x00007f95210a788b:   jne    0x00007f95210a7d0c
  0x00007f95210a7891:   mov    %r10,%r11
  0x00007f95210a7894:   test   %rbp,%rbp
  0x00007f95210a7897:   je     0x00007f95210a7c51
  0x00007f95210a789d:   mov    0x8(%rbp),%r10d
  0x00007f95210a78a1:   cmp    $0x40b40,%r10d               ;   {metadata({type array int})}
  0x00007f95210a78a8:   jne    0x00007f95210a7d0c
  0x00007f95210a78ae:   mov    %rbp,%r8
  0x00007f95210a78b1:   test   %r14,%r14
  0x00007f95210a78b4:   je     0x00007f95210a7c59
  0x00007f95210a78ba:   mov    0x8(%r14),%r10d
  0x00007f95210a78be:   xchg   %ax,%ax
  0x00007f95210a78c0:   cmp    $0x40b40,%r10d               ;   {metadata({type array int})}
  0x00007f95210a78c7:   jne    0x00007f95210a7d0c
  0x00007f95210a78cd:   mov    0xc(%r11),%ecx               ; implicit exception: dispatches to 0x00007f95210a7d2c
  0x00007f95210a78d1:   mov    0xc(%r8),%edi                ; implicit exception: dispatches to 0x00007f95210a7d2c
  0x00007f95210a78d5:   mov    0xc(%r14),%r9d               ; implicit exception: dispatches to 0x00007f95210a7d2c
  0x00007f95210a78d9:   mov    %r9d,0x4(%rsp)
  0x00007f95210a78de:   movabs $0x11f596848,%r10            ;   {oop(a 'java/lang/Class'{0x000000011f596848} = 'test')}
  0x00007f95210a78e8:   mov    0x70(%r10),%eax
  0x00007f95210a78ec:   cmp    %eax,%ebx
  0x00007f95210a78ee:   jge    0x00007f95210a7c1a
  0x00007f95210a78f4:   mov    %r11d,%esi
  0x00007f95210a78f7:   mov    %ebx,%r10d
  0x00007f95210a78fa:   inc    %r10d
  0x00007f95210a78fd:   shr    $0x2,%esi
  0x00007f95210a7900:   and    $0xf,%esi
  0x00007f95210a7903:   mov    $0xc,%r9d
  0x00007f95210a7909:   xor    %edx,%edx
  0x00007f95210a790b:   test   %r10d,%r10d
  0x00007f95210a790e:   cmovl  %edx,%r10d
  0x00007f95210a7912:   test   %r10d,%r10d
  0x00007f95210a7915:   cmovl  %edx,%r10d
  0x00007f95210a7919:   test   %r10d,%r10d
  0x00007f95210a791c:   cmovl  %edx,%r10d
  0x00007f95210a7920:   cmp    %eax,%r10d
  0x00007f95210a7923:   cmovg  %eax,%r10d
  0x00007f95210a7927:   add    %r10d,%esi
  0x00007f95210a792a:   sub    %esi,%r9d
  0x00007f95210a792d:   and    $0xf,%r9d
  0x00007f95210a7931:   add    %r10d,%r9d
  0x00007f95210a7934:   cmp    %eax,%r9d
  0x00007f95210a7937:   cmovg  %eax,%r9d
  0x00007f95210a793b:   cmp    %ecx,%ebx
  0x00007f95210a793d:   data16 xchg %ax,%ax
  0x00007f95210a7940:   jae    0x00007f95210a7c6a
  0x00007f95210a7946:   shll   $0x2,0x10(%r11,%rbx,4)
  0x00007f95210a794c:   cmp    %edi,%ebx
  0x00007f95210a794e:   jae    0x00007f95210a7c9d
  0x00007f95210a7954:   mov    0x10(%r8,%rbx,4),%ebp
  0x00007f95210a7959:   sar    $0x2,%ebp
  0x00007f95210a795c:   mov    %ebp,0x10(%r8,%rbx,4)
  0x00007f95210a7961:   add    0x10(%r11,%rbx,4),%ebp
  0x00007f95210a7966:   cmp    0x4(%rsp),%ebx
  0x00007f95210a796a:   jae    0x00007f95210a7cd1
  0x00007f95210a7970:   mov    %ebp,0x10(%r14,%rbx,4)
  0x00007f95210a7975:   inc    %ebx
  0x00007f95210a7977:   cmp    %r9d,%ebx
  0x00007f95210a797a:   nopw   0x0(%rax,%rax,1)
  0x00007f95210a7980:   jl     0x00007f95210a793b
  0x00007f95210a7982:   mov    %ecx,%edx
  0x00007f95210a7984:   vmovd  %r13d,%xmm0
  0x00007f95210a7989:   movslq 0x4(%rsp),%r9
  0x00007f95210a798e:   mov    %edi,(%rsp)
  0x00007f95210a7991:   movslq %edi,%rcx
  0x00007f95210a7994:   movslq %eax,%r10
  0x00007f95210a7997:   movslq %edx,%rdi
  0x00007f95210a799a:   cmp    %rdi,%r10
  0x00007f95210a799d:   mov    %eax,%r10d
  0x00007f95210a79a0:   cmovg  %edx,%r10d
  0x00007f95210a79a4:   movslq %r10d,%rdi
  0x00007f95210a79a7:   cmp    %rcx,%rdi
  0x00007f95210a79aa:   cmovg  (%rsp),%r10d
  0x00007f95210a79af:   movslq %r10d,%rcx
  0x00007f95210a79b2:   cmp    %r9,%rcx
  0x00007f95210a79b5:   cmovg  0x4(%rsp),%r10d
  0x00007f95210a79bb:   mov    %r10d,%esi
  0x00007f95210a79be:   add    $0xffffffc1,%esi
  0x00007f95210a79c1:   mov    $0x80000000,%r9d
  0x00007f95210a79c7:   cmp    %esi,%r10d
  0x00007f95210a79ca:   cmovl  %r9d,%esi
  0x00007f95210a79ce:   cmp    %esi,%ebx
  0x00007f95210a79d0:   jge    0x00007f95210a7bc7
  0x00007f95210a79d6:   mov    $0xfa00,%r13d
  0x00007f95210a79dc:   mov    %esi,%ecx
  0x00007f95210a79de:   sub    %ebx,%ecx
  0x00007f95210a79e0:   xor    %edi,%edi
  0x00007f95210a79e2:   cmp    %ebx,%esi
  0x00007f95210a79e4:   cmovl  %edi,%ecx
  0x00007f95210a79e7:   cmp    $0xfa00,%ecx
  0x00007f95210a79ed:   cmova  %r13d,%ecx
  0x00007f95210a79f1:   add    %ebx,%ecx
  0x00007f95210a79f3:   nopw   0x0(%rax,%rax,1)
  0x00007f95210a79fc:   data16 data16 xchg %ax,%ax
  0x00007f95210a7a00:   vmovdqu32 0x10(%r11,%rbx,4),%zmm1
  0x00007f95210a7a0b:   movslq %ebx,%rdi
  0x00007f95210a7a0e:   vpslld $0x2,%zmm1,%zmm1
  0x00007f95210a7a15:   vmovdqu32 %zmm1,0x10(%r11,%rbx,4)
  0x00007f95210a7a20:   vmovdqu32 0x10(%r8,%rbx,4),%zmm1
  0x00007f95210a7a2b:   vpsrad $0x2,%zmm1,%zmm1
  0x00007f95210a7a32:   vmovdqu32 %zmm1,0x10(%r8,%rbx,4)
  0x00007f95210a7a3d:   vpaddd 0x10(%r11,%rbx,4),%zmm1,%zmm1
  0x00007f95210a7a48:   vmovdqu32 %zmm1,0x10(%r14,%rbx,4)
  0x00007f95210a7a53:   vmovdqu32 0x50(%r11,%rdi,4),%zmm1
  0x00007f95210a7a5e:   vpslld $0x2,%zmm1,%zmm1
  0x00007f95210a7a65:   vmovdqu32 %zmm1,0x50(%r11,%rdi,4)
  0x00007f95210a7a70:   vmovdqu32 0x50(%r8,%rdi,4),%zmm1
  0x00007f95210a7a7b:   vpsrad $0x2,%zmm1,%zmm1
  0x00007f95210a7a82:   vmovdqu32 %zmm1,0x50(%r8,%rdi,4)
  0x00007f95210a7a8d:   vpaddd 0x50(%r11,%rdi,4),%zmm1,%zmm1
  0x00007f95210a7a98:   vmovdqu32 %zmm1,0x50(%r14,%rdi,4)
  0x00007f95210a7aa3:   vmovdqu32 0x90(%r11,%rdi,4),%zmm1
  0x00007f95210a7aae:   vpslld $0x2,%zmm1,%zmm1
  0x00007f95210a7ab5:   vmovdqu32 %zmm1,0x90(%r11,%rdi,4)
  0x00007f95210a7ac0:   vmovdqu32 0x90(%r8,%rdi,4),%zmm1
  0x00007f95210a7acb:   vpsrad $0x2,%zmm1,%zmm1
  0x00007f95210a7ad2:   vmovdqu32 %zmm1,0x90(%r8,%rdi,4)
  0x00007f95210a7add:   vpaddd 0x90(%r11,%rdi,4),%zmm1,%zmm1
  0x00007f95210a7ae8:   vmovdqu32 %zmm1,0x90(%r14,%rdi,4)
  0x00007f95210a7af3:   vmovdqu32 0xd0(%r11,%rdi,4),%zmm1
  0x00007f95210a7afe:   vpslld $0x2,%zmm1,%zmm1
  0x00007f95210a7b05:   vmovdqu32 %zmm1,0xd0(%r11,%rdi,4)
  0x00007f95210a7b10:   vmovdqu32 0xd0(%r8,%rdi,4),%zmm1
  0x00007f95210a7b1b:   vpsrad $0x2,%zmm1,%zmm1
  0x00007f95210a7b22:   vmovdqu32 %zmm1,0xd0(%r8,%rdi,4)
  0x00007f95210a7b2d:   vpaddd 0xd0(%r11,%rdi,4),%zmm1,%zmm1
  0x00007f95210a7b38:   vmovdqu32 %zmm1,0xd0(%r14,%rdi,4)
  0x00007f95210a7b43:   add    $0x40,%ebx
  0x00007f95210a7b46:   cmp    %ecx,%ebx
  0x00007f95210a7b48:   jl     0x00007f95210a7a00
  0x00007f95210a7b4e:   mov    0x340(%r15),%rcx             ; ImmutableOopMap {r11=Oop r8=Oop r14=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) test::workload@47 (line 14)
  0x00007f95210a7b55:   test   %eax,(%rcx)                  ;   {poll}
  0x00007f95210a7b57:   cmp    %esi,%ebx
  0x00007f95210a7b59:   jl     0x00007f95210a79dc
  0x00007f95210a7b5f:   mov    %r10d,%edi
  0x00007f95210a7b62:   add    $0xfffffff1,%edi
  0x00007f95210a7b65:   cmp    %edi,%r10d
  0x00007f95210a7b68:   cmovl  %r9d,%edi
  0x00007f95210a7b6c:   cmp    %edi,%ebx
  0x00007f95210a7b6e:   jge    0x00007f95210a7bc7
  0x00007f95210a7b70:   vmovdqu32 0x10(%r11,%rbx,4),%zmm1
  0x00007f95210a7b7b:   vpslld $0x2,%zmm1,%zmm1
  0x00007f95210a7b82:   vmovdqu32 %zmm1,0x10(%r11,%rbx,4)
  0x00007f95210a7b8d:   vmovdqu32 0x10(%r8,%rbx,4),%zmm1
  0x00007f95210a7b98:   vpsrad $0x2,%zmm1,%zmm1
  0x00007f95210a7b9f:   vmovdqu32 %zmm1,0x10(%r8,%rbx,4)
  0x00007f95210a7baa:   vpaddd 0x10(%r11,%rbx,4),%zmm1,%zmm1
  0x00007f95210a7bb5:   vmovdqu32 %zmm1,0x10(%r14,%rbx,4)
  0x00007f95210a7bc0:   add    $0x10,%ebx
  0x00007f95210a7bc3:   cmp    %edi,%ebx
  0x00007f95210a7bc5:   jl     0x00007f95210a7b70
  0x00007f95210a7bc7:   cmp    %eax,%ebx
  0x00007f95210a7bc9:   jge    0x00007f95210a7c15
  0x00007f95210a7bcf:   nop
  0x00007f95210a7bd0:   cmp    %edx,%ebx
  0x00007f95210a7bd2:   jae    0x00007f95210a7c65
  0x00007f95210a7bd8:   shll   $0x2,0x10(%r11,%rbx,4)
  0x00007f95210a7bde:   xchg   %ax,%ax
  0x00007f95210a7be0:   cmp    (%rsp),%ebx
  0x00007f95210a7be3:   jae    0x00007f95210a7c98
  0x00007f95210a7be9:   mov    0x10(%r8,%rbx,4),%ebp
  0x00007f95210a7bee:   sar    $0x2,%ebp
  0x00007f95210a7bf1:   mov    %ebp,0x10(%r8,%rbx,4)
  0x00007f95210a7bf6:   add    0x10(%r11,%rbx,4),%ebp
  0x00007f95210a7bfb:   nopl   0x0(%rax,%rax,1)
  0x00007f95210a7c00:   cmp    0x4(%rsp),%ebx
  0x00007f95210a7c04:   jae    0x00007f95210a7ccc
  0x00007f95210a7c0a:   mov    %ebp,0x10(%r14,%rbx,4)
  0x00007f95210a7c0f:   inc    %ebx
  0x00007f95210a7c11:   cmp    %eax,%ebx
  0x00007f95210a7c13:   jl     0x00007f95210a7bd0
  0x00007f95210a7c15:   vmovd  %xmm0,%r13d
  0x00007f95210a7c1a:   nopw   0x0(%rax,%rax,1)
  0x00007f95210a7c20:   cmp    0x4(%rsp),%r13d
  0x00007f95210a7c25:   jae    0x00007f95210a7cf8
  0x00007f95210a7c2b:   mov    0x10(%r14,%r13,4),%eax
  0x00007f95210a7c30:   vzeroupper 
  0x00007f95210a7c33:   add    $0x40,%rsp
  0x00007f95210a7c37:   pop    %rbp
  0x00007f95210a7c38:   cmp    0x338(%r15),%rsp             ;   {poll_return}
  0x00007f95210a7c3f:   ja     0x00007f95210a7d50
  0x00007f95210a7c45:   retq   
  0x00007f95210a7c46:   xor    %r11d,%r11d
  0x00007f95210a7c49:   mov    %r10,%r9
  0x00007f95210a7c4c:   jmpq   0x00007f95210a7894
  0x00007f95210a7c51:   xor    %r8d,%r8d
  0x00007f95210a7c54:   jmpq   0x00007f95210a78b1
  0x00007f95210a7c59:   xor    %r14d,%r14d
  0x00007f95210a7c5c:   nopl   0x0(%rax)
  0x00007f95210a7c60:   jmpq   0x00007f95210a78cd
  0x00007f95210a7c65:   vmovd  %xmm0,%r13d
  0x00007f95210a7c6a:   mov    $0xffffffe4,%esi
  0x00007f95210a7c6f:   mov    %r8,(%rsp)
  0x00007f95210a7c73:   mov    %r14,0x8(%rsp)
  0x00007f95210a7c78:   mov    %r13d,0x10(%rsp)
  0x00007f95210a7c7d:   mov    %r11,0x18(%rsp)
  0x00007f95210a7c82:   mov    %ebx,0x20(%rsp)
  0x00007f95210a7c86:   mov    %r11,0x28(%rsp)
  0x00007f95210a7c8b:   mov    %ebx,0x24(%rsp)
  0x00007f95210a7c8f:   nop
  0x00007f95210a7c90:   vzeroupper 
  0x00007f95210a7c93:   callq  0x00007f9521055800           ; ImmutableOopMap {[0]=Oop [8]=Oop [24]=Oop [40]=Oop }
                                                            ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::workload@17 (line 15)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f95210a7c98:   vmovd  %xmm0,%r13d
  0x00007f95210a7c9d:   mov    $0xffffffe4,%esi
  0x00007f95210a7ca2:   mov    %r11,%rbp
  0x00007f95210a7ca5:   mov    %r14,0x8(%rsp)
  0x00007f95210a7caa:   mov    %r13d,0x10(%rsp)
  0x00007f95210a7caf:   mov    %r8,0x18(%rsp)
  0x00007f95210a7cb4:   mov    %ebx,0x20(%rsp)
  0x00007f95210a7cb8:   mov    %r8,0x28(%rsp)
  0x00007f95210a7cbd:   mov    %ebx,0x24(%rsp)
  0x00007f95210a7cc1:   data16 xchg %ax,%ax
  0x00007f95210a7cc4:   vzeroupper 
  0x00007f95210a7cc7:   callq  0x00007f9521055800           ; ImmutableOopMap {rbp=Oop [8]=Oop [24]=Oop [40]=Oop }
                                                            ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::workload@27 (line 16)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f95210a7ccc:   vmovd  %xmm0,%r13d
  0x00007f95210a7cd1:   mov    $0xffffffe4,%esi
  0x00007f95210a7cd6:   mov    %r11,(%rsp)
  0x00007f95210a7cda:   mov    %r8,0x8(%rsp)
  0x00007f95210a7cdf:   mov    %r13d,0x18(%rsp)
  0x00007f95210a7ce4:   mov    %r14,0x20(%rsp)
  0x00007f95210a7ce9:   mov    %ebx,0x28(%rsp)
  0x00007f95210a7ced:   data16 xchg %ax,%ax
  0x00007f95210a7cf0:   vzeroupper 
  0x00007f95210a7cf3:   callq  0x00007f9521055800           ; ImmutableOopMap {[0]=Oop [8]=Oop [32]=Oop }
                                                            ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::workload@43 (line 17)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f95210a7cf8:   mov    $0xffffffe4,%esi
  0x00007f95210a7cfd:   mov    %r14,%rbp
  0x00007f95210a7d00:   mov    %r13d,(%rsp)
  0x00007f95210a7d04:   vzeroupper 
  0x00007f95210a7d07:   callq  0x00007f9521055800           ; ImmutableOopMap {rbp=Oop }
                                                            ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::workload@52 (line 19)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f95210a7d0c:   mov    $0xffffff8d,%esi
  0x00007f95210a7d11:   mov    %r14,(%rsp)
  0x00007f95210a7d15:   mov    %r13d,0x8(%rsp)
  0x00007f95210a7d1a:   mov    %ebx,0xc(%rsp)
  0x00007f95210a7d1e:   mov    %r9,0x10(%rsp)
  0x00007f95210a7d23:   nop
  0x00007f95210a7d24:   vzeroupper 
  0x00007f95210a7d27:   callq  0x00007f9521055800           ; ImmutableOopMap {rbp=Oop [0]=Oop [16]=Oop }
                                                            ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::workload@3 (line 14)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f95210a7d2c:   mov    $0xffffffbe,%esi
  0x00007f95210a7d31:   mov    %r11,%rbp
  0x00007f95210a7d34:   mov    %r8,(%rsp)
  0x00007f95210a7d38:   mov    %r14,0x8(%rsp)
  0x00007f95210a7d3d:   mov    %r13d,0x10(%rsp)
  0x00007f95210a7d42:   mov    %ebx,0x14(%rsp)
  0x00007f95210a7d46:   xchg   %ax,%ax
  0x00007f95210a7d48:   vzeroupper 
  0x00007f95210a7d4b:   callq  0x00007f9521055800           ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop }
                                                            ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::workload@3 (line 14)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f95210a7d50:   movabs $0x7f95210a7c38,%r10         ;   {internal_word}
  0x00007f95210a7d5a:   mov    %r10,0x350(%r15)
  0x00007f95210a7d61:   jmpq   0x00007f9521054680           ;   {runtime_call SafepointBlob}
  0x00007f95210a7d66:   hlt    
  0x00007f95210a7d67:   hlt    
  0x00007f95210a7d68:   hlt    
  0x00007f95210a7d69:   hlt    
  0x00007f95210a7d6a:   hlt    
  0x00007f95210a7d6b:   hlt    
  0x00007f95210a7d6c:   hlt    
  0x00007f95210a7d6d:   hlt    
  0x00007f95210a7d6e:   hlt    
  0x00007f95210a7d6f:   hlt    
  0x00007f95210a7d70:   hlt    
  0x00007f95210a7d71:   hlt    
  0x00007f95210a7d72:   hlt    
  0x00007f95210a7d73:   hlt    
  0x00007f95210a7d74:   hlt    
  0x00007f95210a7d75:   hlt    
  0x00007f95210a7d76:   hlt    
  0x00007f95210a7d77:   hlt    
  0x00007f95210a7d78:   hlt    
  0x00007f95210a7d79:   hlt    
  0x00007f95210a7d7a:   hlt    
  0x00007f95210a7d7b:   hlt    
  0x00007f95210a7d7c:   hlt    
  0x00007f95210a7d7d:   hlt    
  0x00007f95210a7d7e:   hlt    
  0x00007f95210a7d7f:   hlt    
[Exception Handler]
  0x00007f95210a7d80:   jmpq   0x00007f9521068400           ;   {no_reloc}
[Deopt Handler Code]
  0x00007f95210a7d85:   callq  0x00007f95210a7d8a
  0x00007f95210a7d8a:   subq   $0x5,(%rsp)
  0x00007f95210a7d8f:   jmpq   0x00007f9521055b20           ;   {runtime_call DeoptimizationBlob}
  0x00007f95210a7d94:   hlt    
  0x00007f95210a7d95:   hlt    
  0x00007f95210a7d96:   hlt    
  0x00007f95210a7d97:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     255  130             test::workload (54 bytes)
 total in heap  [0x00007f952109f790,0x00007f952109fdc8] = 1592
 relocation     [0x00007f952109f8f0,0x00007f952109f908] = 24
 main code      [0x00007f952109f920,0x00007f952109fcc0] = 928
 stub code      [0x00007f952109fcc0,0x00007f952109fcd8] = 24
 oops           [0x00007f952109fcd8,0x00007f952109fce0] = 8
 metadata       [0x00007f952109fce0,0x00007f952109fce8] = 8
 scopes data    [0x00007f952109fce8,0x00007f952109fd38] = 80
 scopes pcs     [0x00007f952109fd38,0x00007f952109fd98] = 96
 dependencies   [0x00007f952109fd98,0x00007f952109fda0] = 8
 nul chk table  [0x00007f952109fda0,0x00007f952109fdc8] = 40

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x00007f94bc410530} 'workload' '([I[I[II)I' in 'test'
  # parm0:    rsi:rsi   = '[I'
  # parm1:    rdx:rdx   = '[I'
  # parm2:    rcx:rcx   = '[I'
  # parm3:    r8        = int
  #           [sp+0x40]  (sp of caller)
  0x00007f952109f920:   mov    %eax,-0x14000(%rsp)
  0x00007f952109f927:   push   %rbp
  0x00007f952109f928:   sub    $0x30,%rsp
  0x00007f952109f92c:   movabs $0x11f596848,%r10            ;   {oop(a 'java/lang/Class'{0x000000011f596848} = 'test')}
  0x00007f952109f936:   mov    0x70(%r10),%ebp
  0x00007f952109f93a:   test   %ebp,%ebp
  0x00007f952109f93c:   nopl   0x0(%rax)
  0x00007f952109f940:   jle    0x00007f952109fc32
  0x00007f952109f946:   mov    0xc(%rsi),%r10d              ; implicit exception: dispatches to 0x00007f952109fc6c
  0x00007f952109f94a:   test   %r10d,%r10d
  0x00007f952109f94d:   jbe    0x00007f952109fc6c
  0x00007f952109f953:   movslq %ebp,%r11
  0x00007f952109f956:   movslq %r10d,%r10
  0x00007f952109f959:   dec    %r11
  0x00007f952109f95c:   nopl   0x0(%rax)
  0x00007f952109f960:   cmp    %r10,%r11
  0x00007f952109f963:   jae    0x00007f952109fc6c
  0x00007f952109f969:   mov    0xc(%rdx),%r10d              ; implicit exception: dispatches to 0x00007f952109fc6c
  0x00007f952109f96d:   test   %r10d,%r10d
  0x00007f952109f970:   jbe    0x00007f952109fc6c
  0x00007f952109f976:   movslq %r10d,%r10
  0x00007f952109f979:   cmp    %r10,%r11
  0x00007f952109f97c:   nopl   0x0(%rax)
  0x00007f952109f980:   jae    0x00007f952109fc6c
  0x00007f952109f986:   mov    0xc(%rcx),%r9d               ; implicit exception: dispatches to 0x00007f952109fc6c
  0x00007f952109f98a:   test   %r9d,%r9d
  0x00007f952109f98d:   jbe    0x00007f952109fc6c
  0x00007f952109f993:   movslq %r9d,%r10
  0x00007f952109f996:   cmp    %r10,%r11
  0x00007f952109f999:   jae    0x00007f952109fc6c
  0x00007f952109f99f:   mov    %esi,%r10d
  0x00007f952109f9a2:   shr    $0x2,%r10d
  0x00007f952109f9a6:   and    $0xf,%r10d
  0x00007f952109f9aa:   mov    $0xb,%ebx
  0x00007f952109f9af:   sub    %r10d,%ebx
  0x00007f952109f9b2:   and    $0xf,%ebx
  0x00007f952109f9b5:   inc    %ebx
  0x00007f952109f9b7:   cmp    %ebp,%ebx
  0x00007f952109f9b9:   cmovg  %ebp,%ebx
  0x00007f952109f9bc:   xor    %r10d,%r10d
  0x00007f952109f9bf:   xor    %r11d,%r11d
  0x00007f952109f9c2:   shll   $0x2,0x10(%rsi,%r11,4)
  0x00007f952109f9c8:   mov    0x10(%rdx,%r11,4),%r9d
  0x00007f952109f9cd:   sar    $0x2,%r9d
  0x00007f952109f9d1:   mov    %r9d,0x10(%rdx,%r11,4)
  0x00007f952109f9d6:   add    0x10(%rsi,%r11,4),%r9d
  0x00007f952109f9db:   mov    %r9d,0x10(%rcx,%r11,4)
  0x00007f952109f9e0:   inc    %r11d
  0x00007f952109f9e3:   cmp    %ebx,%r11d
  0x00007f952109f9e6:   jl     0x00007f952109f9c2
  0x00007f952109f9e8:   mov    %ebp,%ebx
  0x00007f952109f9ea:   add    $0xffffffc1,%ebx
  0x00007f952109f9ed:   mov    $0x80000000,%edi
  0x00007f952109f9f2:   cmp    %ebx,%ebp
  0x00007f952109f9f4:   cmovl  %edi,%ebx
  0x00007f952109f9f7:   cmp    %ebx,%r11d
  0x00007f952109f9fa:   nopw   0x0(%rax,%rax,1)
  0x00007f952109fa00:   jge    0x00007f952109fc05
  0x00007f952109fa06:   mov    $0xfa00,%r9d
  0x00007f952109fa0c:   mov    %ebx,%eax
  0x00007f952109fa0e:   sub    %r11d,%eax
  0x00007f952109fa11:   cmp    %r11d,%ebx
  0x00007f952109fa14:   cmovl  %r10d,%eax
  0x00007f952109fa18:   cmp    $0xfa00,%eax
  0x00007f952109fa1e:   cmova  %r9d,%eax
  0x00007f952109fa22:   add    %r11d,%eax
  0x00007f952109fa25:   data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f952109fa30:   vmovdqu32 0x10(%rsi,%r11,4),%zmm0
  0x00007f952109fa3b:   vpslld $0x2,%zmm0,%zmm0
  0x00007f952109fa42:   vmovdqu32 %zmm0,0x10(%rsi,%r11,4)
  0x00007f952109fa4d:   vmovdqu32 0x10(%rdx,%r11,4),%zmm0
  0x00007f952109fa58:   vpsrad $0x2,%zmm0,%zmm0
  0x00007f952109fa5f:   vmovdqu32 %zmm0,0x10(%rdx,%r11,4)
  0x00007f952109fa6a:   vpaddd 0x10(%rsi,%r11,4),%zmm0,%zmm0
  0x00007f952109fa75:   vmovdqu32 %zmm0,0x10(%rcx,%r11,4)
  0x00007f952109fa80:   vmovdqu32 0x50(%rsi,%r11,4),%zmm0
  0x00007f952109fa8b:   vpslld $0x2,%zmm0,%zmm0
  0x00007f952109fa92:   vmovdqu32 %zmm0,0x50(%rsi,%r11,4)
  0x00007f952109fa9d:   vmovdqu32 0x50(%rdx,%r11,4),%zmm0
  0x00007f952109faa8:   vpsrad $0x2,%zmm0,%zmm0
  0x00007f952109faaf:   vmovdqu32 %zmm0,0x50(%rdx,%r11,4)
  0x00007f952109faba:   vpaddd 0x50(%rsi,%r11,4),%zmm0,%zmm0
  0x00007f952109fac5:   vmovdqu32 %zmm0,0x50(%rcx,%r11,4)
  0x00007f952109fad0:   vmovdqu32 0x90(%rsi,%r11,4),%zmm0
  0x00007f952109fadb:   vpslld $0x2,%zmm0,%zmm0
  0x00007f952109fae2:   vmovdqu32 %zmm0,0x90(%rsi,%r11,4)
  0x00007f952109faed:   vmovdqu32 0x90(%rdx,%r11,4),%zmm0
  0x00007f952109faf8:   vpsrad $0x2,%zmm0,%zmm0
  0x00007f952109faff:   vmovdqu32 %zmm0,0x90(%rdx,%r11,4)
  0x00007f952109fb0a:   vpaddd 0x90(%rsi,%r11,4),%zmm0,%zmm0
  0x00007f952109fb15:   vmovdqu32 %zmm0,0x90(%rcx,%r11,4)
  0x00007f952109fb20:   vmovdqu32 0xd0(%rsi,%r11,4),%zmm0
  0x00007f952109fb2b:   vpslld $0x2,%zmm0,%zmm0
  0x00007f952109fb32:   vmovdqu32 %zmm0,0xd0(%rsi,%r11,4)
  0x00007f952109fb3d:   vmovdqu32 0xd0(%rdx,%r11,4),%zmm0
  0x00007f952109fb48:   vpsrad $0x2,%zmm0,%zmm0
  0x00007f952109fb4f:   vmovdqu32 %zmm0,0xd0(%rdx,%r11,4)
  0x00007f952109fb5a:   vpaddd 0xd0(%rsi,%r11,4),%zmm0,%zmm0
  0x00007f952109fb65:   vmovdqu32 %zmm0,0xd0(%rcx,%r11,4)
  0x00007f952109fb70:   add    $0x40,%r11d
  0x00007f952109fb74:   cmp    %eax,%r11d
  0x00007f952109fb77:   jl     0x00007f952109fa30
  0x00007f952109fb7d:   mov    0x340(%r15),%rax             ; ImmutableOopMap {rcx=Oop rdx=Oop rsi=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) test::workload@47 (line 14)
  0x00007f952109fb84:   test   %eax,(%rax)                  ;   {poll}
  0x00007f952109fb86:   cmp    %ebx,%r11d
  0x00007f952109fb89:   jl     0x00007f952109fa0c
  0x00007f952109fb8f:   mov    %ebp,%r10d
  0x00007f952109fb92:   add    $0xfffffff1,%r10d
  0x00007f952109fb96:   cmp    %r10d,%ebp
  0x00007f952109fb99:   cmovl  %edi,%r10d
  0x00007f952109fb9d:   data16 xchg %ax,%ax
  0x00007f952109fba0:   cmp    %r10d,%r11d
  0x00007f952109fba3:   jge    0x00007f952109fc05
  0x00007f952109fba5:   data16 xchg %ax,%ax
  0x00007f952109fba8:   vmovdqu32 0x10(%rsi,%r11,4),%zmm0
  0x00007f952109fbb3:   vpslld $0x2,%zmm0,%zmm0
  0x00007f952109fbba:   vmovdqu32 %zmm0,0x10(%rsi,%r11,4)
  0x00007f952109fbc5:   vmovdqu32 0x10(%rdx,%r11,4),%zmm0
  0x00007f952109fbd0:   vpsrad $0x2,%zmm0,%zmm0
  0x00007f952109fbd7:   vmovdqu32 %zmm0,0x10(%rdx,%r11,4)
  0x00007f952109fbe2:   vpaddd 0x10(%rsi,%r11,4),%zmm0,%zmm0
  0x00007f952109fbed:   vmovdqu32 %zmm0,0x10(%rcx,%r11,4)
  0x00007f952109fbf8:   add    $0x10,%r11d
  0x00007f952109fbfc:   nopl   0x0(%rax)
  0x00007f952109fc00:   cmp    %r10d,%r11d
  0x00007f952109fc03:   jl     0x00007f952109fba8
  0x00007f952109fc05:   cmp    %ebp,%r11d
  0x00007f952109fc08:   jge    0x00007f952109fc32
  0x00007f952109fc0a:   xchg   %ax,%ax
  0x00007f952109fc0c:   shll   $0x2,0x10(%rsi,%r11,4)
  0x00007f952109fc12:   mov    0x10(%rdx,%r11,4),%r10d
  0x00007f952109fc17:   sar    $0x2,%r10d
  0x00007f952109fc1b:   mov    %r10d,0x10(%rdx,%r11,4)
  0x00007f952109fc20:   add    0x10(%rsi,%r11,4),%r10d
  0x00007f952109fc25:   mov    %r10d,0x10(%rcx,%r11,4)
  0x00007f952109fc2a:   inc    %r11d
  0x00007f952109fc2d:   cmp    %ebp,%r11d
  0x00007f952109fc30:   jl     0x00007f952109fc0c
  0x00007f952109fc32:   mov    0xc(%rcx),%r11d              ; implicit exception: dispatches to 0x00007f952109fc8c
  0x00007f952109fc36:   cmp    %r11d,%r8d
  0x00007f952109fc39:   jae    0x00007f952109fc56
  0x00007f952109fc3b:   mov    0x10(%rcx,%r8,4),%eax
  0x00007f952109fc40:   vzeroupper 
  0x00007f952109fc43:   add    $0x30,%rsp
  0x00007f952109fc47:   pop    %rbp
  0x00007f952109fc48:   cmp    0x338(%r15),%rsp             ;   {poll_return}
  0x00007f952109fc4f:   ja     0x00007f952109fc9c
  0x00007f952109fc55:   retq   
  0x00007f952109fc56:   mov    $0xffffffe4,%esi
  0x00007f952109fc5b:   mov    %rcx,%rbp
  0x00007f952109fc5e:   mov    %r8d,(%rsp)
  0x00007f952109fc62:   xchg   %ax,%ax
  0x00007f952109fc64:   vzeroupper 
  0x00007f952109fc67:   callq  0x00007f9521055800           ; ImmutableOopMap {rbp=Oop }
                                                            ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::workload@52 (line 19)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f952109fc6c:   mov    %rsi,(%rsp)
  0x00007f952109fc70:   mov    %rdx,0x8(%rsp)
  0x00007f952109fc75:   mov    %rcx,0x10(%rsp)
  0x00007f952109fc7a:   mov    %r8d,0x18(%rsp)
  0x00007f952109fc7f:   mov    $0xffffff76,%esi
  0x00007f952109fc84:   vzeroupper 
  0x00007f952109fc87:   callq  0x00007f9521055800           ; ImmutableOopMap {[0]=Oop [8]=Oop [16]=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) test::workload@8 (line 14)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f952109fc8c:   mov    $0xfffffff6,%esi
  0x00007f952109fc91:   mov    %r8d,%ebp
  0x00007f952109fc94:   vzeroupper 
  0x00007f952109fc97:   callq  0x00007f9521055800           ; ImmutableOopMap {}
                                                            ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::workload@52 (line 19)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f952109fc9c:   movabs $0x7f952109fc48,%r10         ;   {internal_word}
  0x00007f952109fca6:   mov    %r10,0x350(%r15)
  0x00007f952109fcad:   jmpq   0x00007f9521054680           ;   {runtime_call SafepointBlob}
  0x00007f952109fcb2:   hlt    
  0x00007f952109fcb3:   hlt    
  0x00007f952109fcb4:   hlt    
  0x00007f952109fcb5:   hlt    
  0x00007f952109fcb6:   hlt    
  0x00007f952109fcb7:   hlt    
  0x00007f952109fcb8:   hlt    
  0x00007f952109fcb9:   hlt    
  0x00007f952109fcba:   hlt    
  0x00007f952109fcbb:   hlt    
  0x00007f952109fcbc:   hlt    
  0x00007f952109fcbd:   hlt    
  0x00007f952109fcbe:   hlt    
  0x00007f952109fcbf:   hlt    
[Exception Handler]
  0x00007f952109fcc0:   jmpq   0x00007f9521068400           ;   {no_reloc}
[Deopt Handler Code]
  0x00007f952109fcc5:   callq  0x00007f952109fcca
  0x00007f952109fcca:   subq   $0x5,(%rsp)
  0x00007f952109fccf:   jmpq   0x00007f9521055b20           ;   {runtime_call DeoptimizationBlob}
  0x00007f952109fcd4:   hlt    
  0x00007f952109fcd5:   hlt    
  0x00007f952109fcd6:   hlt    
  0x00007f952109fcd7:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
Warmup complete
Measurement complete
[Time] 250 ms [Res] -1908874352
