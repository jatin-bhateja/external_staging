CompileCommand: print roundF.round_scalar bool print = true
TraceNewVectors [AutoVectorization]:  963  LoadVector  === 567 7 894  [[ ]]  @float[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; mismatched #vectory<F,8>
TraceNewVectors [AutoVectorization]:  964  VectorCastF2X  === _ 963  [[ ]]  #vectorz<D,8>
TraceNewVectors [AutoVectorization]:  965  SqrtVD  === _ 964  [[ ]]  #vectorz<D,8>
TraceNewVectors [AutoVectorization]:  966  VectorCastD2X  === _ 965  [[ ]]  #vectory<I,8>
TraceNewVectors [AutoVectorization]:  967  StoreVector  === 920 923 888 966  [[ ]]  @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=7; mismatched  Memory: @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=7;

============================= C2-compiled nmethod ==============================
#r018 rsi:rsi   : parm 0: rawptr:BotPTR
# -- Old rsp -- Framesize: 80 --
#r623 rsp+76: in_preserve
#r622 rsp+72: return address
#r621 rsp+68: in_preserve
#r620 rsp+64: saved fp register
#r619 rsp+60: pad2, stack alignment
#r618 rsp+56: pad2, stack alignment
#r617 rsp+52: Fixed slot 1
#r616 rsp+48: Fixed slot 0
#r635 rsp+44: spill
#r634 rsp+40: spill
#r633 rsp+36: spill
#r632 rsp+32: spill
#r631 rsp+28: spill
#r630 rsp+24: spill
#r629 rsp+20: spill
#r628 rsp+16: spill
#r627 rsp+12: spill
#r626 rsp+ 8: spill
#r625 rsp+ 4: spill
#r624 rsp+ 0: spill
#
----------------------- MetaData before Compile_id = 187 ------------------------
{method}
 - this oop:          0x00007f522460c4f0
 - method holder:     'roundF'
 - constants:         0x00007f522460c060 constant pool [85]/operands[10] {0x00007f522460c060} for 'roundF' cache=0x00007f522460c8c0
 - access:            0x9  public static 
 - flags:             0x6080  queued_for_compilation has_loops_flag has_loops_flag_init 
 - name:              'round_scalar'
 - signature:         '([F[II)I'
 - max stack:         5
 - max locals:        4
 - size of params:    3
 - method size:       14
 - vtable index:      -2
 - i2i entry:         0x00007f527100cf00
 - adapters:          AHE@0x00007f52742e6ac0: 0xbba i2c: 0x00007f5271071200 c2i: 0x00007f52710712e3 c2iUV: 0x00007f52710712c2 c2iNCI: 0x00007f527107131e
 - compiled entry     0x00007f52710712e3
 - code size:         31
 - code start:        0x00007f522460c4c8
 - code end (excl):   0x00007f522460c4e7
 - method data:       0x00007f522460c960
 - checked ex length: 0
 - linenumber start:  0x00007f522460c4e7
 - localvar length:   0

------------------------ OptoAssembly for Compile_id = 187 -----------------------
#
#  int ( rawptr:BotPTR )
#
000     N457: #	out( B1 ) <- BLOCK HEAD IS JUNK  Freq: 1
000     # breakpoint
        nop 	# 11 bytes pad for loops and calls

010     B1: #	out( B31 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
010     # stack bang (160 bytes)
	pushq   rbp	# Save rbp
	subq    rsp, #64	# Create frame

02a     movq    RBP, [RSI + #24 (8-bit)]	# ptr
02e     movq    RBX, [RSI + #16 (8-bit)]	# ptr
032     movl    R13, [RSI]	# int
035     movl    R14, [RSI + #8 (8-bit)]	# int
039     movq    RDI, RSI	# spill
03c     call_leaf,runtime  OSR_migration_end
        No JVM State Info
        # 
054     testq   RBP, RBP	# ptr
057     je     B31  P=0.001000 C=-1.000000

05d     B2: #	out( B40 B3 ) <- in( B1 )  Freq: 0.999
05d     movl    R10, [RBP + #8 (8-bit)]	# compressed klass ptr
061     cmpl    R10, narrowklass: precise [float (java/lang/Cloneable,java/io/Serializable): :Constant:exact *	# compressed klass ptr
068     jne,u   B40  P=0.000001 C=-1.000000

06e     B3: #	out( B4 ) <- in( B2 )  Freq: 0.998999
06e     movq    R8, RBP	# spill
071     # checkcastPP of R8

071     B4: #	out( B32 B5 ) <- in( B3 B31 )  Freq: 0.999999
071     testq   RBX, RBX	# ptr
074     je     B32  P=0.001000 C=-1.000000

07a     B5: #	out( B40 B6 ) <- in( B4 )  Freq: 0.998999
07a     movl    R11, [RBX + #8 (8-bit)]	# compressed klass ptr
        nop 	# 2 bytes pad for loops and calls
080     cmpl    R11, narrowklass: precise [int (java/lang/Cloneable,java/io/Serializable): :Constant:exact *	# compressed klass ptr
087     jne,u   B40  P=0.000001 C=-1.000000

08d     B6: #	out( B7 ) <- in( B5 )  Freq: 0.998998
08d     # checkcastPP of RBX

08d     B7: #	out( B41 B8 ) <- in( B6 B32 )  Freq: 0.999998
08d     movl    RCX, [R8 + #12 (8-bit)]	# range
091     NullCheck R8

091     B8: #	out( B42 B9 ) <- in( B7 )  Freq: 0.999997
091     movl    RDX, [RBX + #12 (8-bit)]	# range
094     NullCheck RBX

094     B9: #	out( B29 B10 ) <- in( B8 )  Freq: 0.999996
094     leal    RAX, [RCX + #-1]
        nop 	# 9 bytes pad for loops and calls
0a0     cmpl    R13, RAX
0a3     jge     B29  P=0.000260 C=23046.000000

0a9     B10: #	out( B11 ) <- in( B9 )  Freq: 0.999736
0a9     movl    R10, R8	# ptr -> int
0ac     leal    R11, [R13 + #1]
0b0     movslq  RDI, RCX	# i2l
0b3     movslq  RBP, R11	# i2l
0b6     leaq    RSI, [RDI + #-1]
0ba     movl    R9, #-16	# int
0c0     subl    R9, R10	# int
0c3     shrl    R9, #2
0c7     xorl    R10, R10	# long
0ca     testl   R11, R11
0cd     cmovql RBP, R10	# signed, long
0d1     movl    R10, RBP	# l2i
0d4     cmpl    R10, RAX
0d7     cmovlgt R10, RAX	# min
0db     subl    R9, R10	# int
0de     movslq  R11, R10	# i2l
0e1     bzhiq R10, R9, #7 	# using R10 as TEMP, int &  immI_Pow2M1 -> long
0ec     addq    R11, R10	# long
0ef     cmpq    R11, RSI
0f2     movq    R10, RSI	# spill
0f5     cmovql R10, R11	# signed, long
0f9     movl    R10, R10	# l2i

0fc     B11: #	out( B33 B12 ) <- in( B10 B13 ) Loop( B11-B13 inner pre of N391 multiversion_fast) Freq: 1.99947
        nop 	# 4 bytes pad for loops and calls
100     cmpl    R13, RCX	# unsigned
103     jae,u   B33  P=0.000001 C=-1.000000

109     B12: #	out( B34 B13 ) <- in( B11 )  Freq: 1.99947
109     movss   XMM0, [R8 + #16 + R13 << #2]	# float
110     cvtss2sd XMM0, XMM0
114     sqrtsd  XMM0, XMM0
        nop 	# 8 bytes pad for loops and calls
120     cmpl    R13, RDX	# unsigned
123     jae,u   B34  P=0.000001 C=-1.000000

129     B13: #	out( B11 B14 ) <- in( B12 )  Freq: 1.99946
129     convert_d2i R11, XMM0
13a     movl    [RBX + #16 + R13 << #2], R11	# int
13f     incl    R13	# int
142     cmpl    R13, R10
145     jl,s   B11	# loop end  P=0.500000 C=23046.000000

147     B14: #	out( B25 B15 ) <- in( B13 )  Freq: 0.999732
147     cmpq    RSI, RDI
14a     cmovql RDI, RSI	# signed, long
14e     movslq  R10, RDX	# i2l
151     cmpq    R10, RDI
154     cmovql RDI, R10	# signed, long
158     movl    R10, RDI	# l2i
15b     leal    R11, [R10 + #-15]
        nop 	# 1 bytes pad for loops and calls
160     cmpl    R13, R11
163     jge     B25  P=0.000001 C=-1.000000

169     B15: #	out( B36 B16 ) <- in( B14 )  Freq: 0.999731
169     leal    RDI, [R10 + #-1]
16d     cmpl    RDI, RCX	# unsigned
16f     jae,u   B36  P=0.000001 C=-1.000000

175     B16: #	out( B37 B17 ) <- in( B15 )  Freq: 0.99973
175     cmpl    R13, RCX	# unsigned
178     jae,u   B37  P=0.000001 C=-1.000000

17e     B17: #	out( B38 B18 ) <- in( B16 )  Freq: 0.999729
        nop 	# 2 bytes pad for loops and calls
180     cmpl    RDI, RDX	# unsigned
182     jae,u   B38  P=0.000001 C=-1.000000

188     B18: #	out( B39 B19 ) <- in( B17 )  Freq: 0.999727
188     cmpl    R13, RDX	# unsigned
18b     jae,u   B39  P=0.000001 C=-1.000000

191     B19: #	out( B20 ) <- in( B18 )  Freq: 0.999726
191     movl    R9, #16000	# int
197     # TLS is in R15
197     xorl    RSI, RSI	# int

199     B20: #	out( B21 ) <- in( B19 B22 ) Loop( B20-B22 ) Freq: 3839.89
199     movl    RDI, R10	# spill
19c     subl    RDI, R13	# int
19f     addl    RDI, #-15	# int
1a2     cmpl    R11, R13
1a5     cmovll RDI, RSI	# signed, int
1a8     cmpl    RDI, #16000	# unsigned
1ae     cmovla RDI, R9	# unsigned, int
1b2     addl    RDI, R13	# int
        nop 	# 11 bytes pad for loops and calls

1c0     B21: #	out( B21 B22 ) <- in( B20 B21 ) Loop( B21-B21 inner main of N191 strip mined multiversion_fast) Freq: 1.47488e+07
1c0     load_vector XMM0,[R8 + #16 + R13 << #2]
1c7     movslq  RBP, R13	# i2l
1ca     load_vector XMM1,[R8 + #48 + RBP << #2]
1d1     vector_cast_f2d  XMM0,XMM0	!
1d7     vector_cast_f2d  XMM1,XMM1	!
1dd     vsqrtpd  XMM0,XMM0	! sqrt packedD
1e3     vsqrtpd  XMM1,XMM1	! sqrt packedD
1e9     vector_cast_d2x XMM3,XMM0	! using XMM4, XMM5, K5 and K4 as TEMP
236     store_vector [RBX + #16 + R13 << #2],XMM3
	
23d     vector_cast_d2x XMM0,XMM1	! using XMM3, XMM2, K7 and K6 as TEMP
28a     store_vector [RBX + #48 + RBP << #2],XMM0
	
290     addl    R13, #16	# int
294     cmpl    R13, RDI
297     jl     B21	# loop end  P=0.999740 C=23046.000000

29d     B22: #	out( B20 B23 ) <- in( B21 )  Freq: 3839.89
29d     movq    RDI, [R15 + #48 (8-bit)]	# ptr
2a1     testl   rax, [RDI]	# Safepoint: poll for GC        # roundF::round_scalar @ bci:24 (line 5) L[0]=R8 L[1]=RBX L[2]=R14 L[3]=R13
        # OopMap {r8=Oop rbx=Oop off=673/0x2a1}
2a3     cmpl    R13, R11
2a6     jl     B20  P=0.999740 C=23046.000000

2ac     B23: #	out( B25 B24 ) <- in( B22 )  Freq: 0.999726
2ac     addl    R10, #-7	# int
2b0     cmpl    R13, R10
2b3     jge     B25  P=0.500000 C=-1.000000
        nop 	# 3 bytes pad for loops and calls

2bc     B24: #	out( B24 B25 ) <- in( B23 B24 ) Loop( B24-B24 inner post of N920 multiversion_fast) Freq: 0.999726
2bc     load_vector XMM0,[R8 + #16 + R13 << #2]
2c3     vector_cast_f2d  XMM0,XMM0	!
2c9     vsqrtpd  XMM0,XMM0	! sqrt packedD
2cf     vector_cast_d2x XMM1,XMM0	! using XMM2, XMM3, K6 and K7 as TEMP
31c     store_vector [RBX + #16 + R13 << #2],XMM1
	
323     addl    R13, #8	# int
327     cmpl    R13, R10
32a     jl,s   B24	# loop end  P=0.500000 C=23046.000000

32c     B25: #	out( B29 B26 ) <- in( B14 B24 B23 )  Freq: 0.999727
32c     cmpl    R13, RAX
32f     jge,s   B29  P=0.500000 C=-1.000000
        nop 	# 3 bytes pad for loops and calls

334     B26: #	out( B33 B27 ) <- in( B25 B28 ) Loop( B26-B28 inner post of N391 multiversion_fast) Freq: 0.999725
334     cmpl    R13, RCX	# unsigned
337     jae,u   B33  P=0.000001 C=-1.000000

33d     B27: #	out( B34 B28 ) <- in( B26 )  Freq: 0.999724
33d     movss   XMM0, [R8 + #16 + R13 << #2]	# float
344     cvtss2sd XMM0, XMM0
348     sqrtsd  XMM0, XMM0
34c     cmpl    R13, RDX	# unsigned
34f     jae,u   B34  P=0.000001 C=-1.000000

355     B28: #	out( B26 B29 ) <- in( B27 )  Freq: 0.999723
355     convert_d2i R10, XMM0
366     movl    [RBX + #16 + R13 << #2], R10	# int
36b     incl    R13	# int
36e     cmpl    R13, RAX
371     jl,s   B26	# loop end  P=0.500000 C=23046.000000

373     B29: #	out( B35 B30 ) <- in( B9 B28 B25 )  Freq: 0.999986
373     cmpl    R14, RDX	# unsigned
376     jae,u   B35  P=0.000001 C=-1.000000

37c     B30: #	out( N457 ) <- in( B29 )  Freq: 0.999985
37c     movl    RAX, [RBX + #16 + R14 << #2]	# int
381     vzeroupper
	addq    rsp, 64	# Destroy frame
	popq    rbp
	cmpq    rsp, poll_offset[r15_thread] 
	ja      #safepoint_stub	# Safepoint: poll for GC

393     ret

394     B31: #	out( B4 ) <- in( B1 )  Freq: 0.000999987
394     xorl    R8, R8	# ptr
397     jmp     B4

39c     B32: #	out( B7 ) <- in( B4 )  Freq: 0.000999986
39c     xorl    RBX, RBX	# ptr
        nop 	# 2 bytes pad for loops and calls
3a0     jmp     B7

3a5     B33: #	out( N457 ) <- in( B26 B11 )  Freq: 3.03902e-06
3a5     movl    RSI, #-28	# int
3aa     movl    [rsp + #8], R14	# spill
3af     movq    [rsp + #16], RBX	# spill
3b4     movl    [rsp + #24], R13	# spill
3b9     movq    [rsp + #32], R8	# spill
3be     movl    [rsp + #28], R13	# spill
        nop 	# 1 bytes pad for loops and calls
3c4     call,static  wrapper for: uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')
        # roundF::round_scalar @ bci:14 (line 6) L[0]=rsp + #32 L[1]=rsp + #16 L[2]=rsp + #8 L[3]=rsp + #24 STK[0]=rsp + #16 STK[1]=rsp + #28 STK[2]=rsp + #32 STK[3]=rsp + #24
        # OopMap {[16]=Oop [32]=Oop off=972/0x3cc}
3d4     stop	# ShouldNotReachHere

3e8     B34: #	out( N457 ) <- in( B27 B12 )  Freq: 3.03902e-06
3e8     convert_d2i RBP, XMM0
3f8     movl    RSI, #-28	# int
3fd     movq    [rsp + #0], R8	# spill
401     movl    [rsp + #16], R14	# spill
406     movq    [rsp + #24], RBX	# spill
40b     movl    [rsp + #32], R13	# spill
410     call,static  wrapper for: uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')
        # roundF::round_scalar @ bci:20 (line 6) L[0]=rsp + #0 L[1]=rsp + #24 L[2]=rsp + #16 L[3]=rsp + #32 STK[0]=rsp + #24 STK[1]=rsp + #32 STK[2]=RBP
        # OopMap {[0]=Oop [24]=Oop off=1048/0x418}
420     stop	# ShouldNotReachHere

434     B35: #	out( N457 ) <- in( B29 )  Freq: 1.01326e-06
434     movl    RSI, #-28	# int
439     movq    RBP, RBX	# spill
43c     movl    [rsp + #0], R14	# spill
440     call,static  wrapper for: uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')
        # roundF::round_scalar @ bci:29 (line 8) L[0]=_ L[1]=_ L[2]=_ L[3]=_ STK[0]=RBP STK[1]=rsp + #0
        # OopMap {rbp=Oop off=1096/0x448}
450     stop	# ShouldNotReachHere

464     B36: #	out( N457 ) <- in( B15 )  Freq: 1.01301e-06
464     stop	# ShouldNotReachHere

478     B37: #	out( N457 ) <- in( B16 )  Freq: 1.013e-06
478     stop	# ShouldNotReachHere

48c     B38: #	out( N457 ) <- in( B17 )  Freq: 1.013e-06
48c     stop	# ShouldNotReachHere

4a0     B39: #	out( N457 ) <- in( B18 )  Freq: 1.013e-06
4a0     stop	# ShouldNotReachHere

4b4     B40: #	out( N457 ) <- in( B2 B5 )  Freq: 1.998e-06
4b4     movl    RSI, #-123	# int
4b9     movq    [rsp + #0], RBX	# spill
4bd     movl    [rsp + #8], R14	# spill
4c2     movl    [rsp + #12], R13	# spill
        nop 	# 1 bytes pad for loops and calls
4c8     call,static  wrapper for: uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')
        # roundF::round_scalar @ bci:2 (line 5) L[0]=RBP L[1]=rsp + #0 L[2]=rsp + #8 L[3]=rsp + #12
        # OopMap {rbp=Oop [0]=Oop off=1232/0x4d0}
4d8     stop	# ShouldNotReachHere

4ec     B41: #	out( N457 ) <- in( B7 )  Freq: 1.01328e-06
4ec     movl    RSI, #-146	# int
4f1     movq    RBP, R8	# spill
4f4     movq    [rsp + #0], RBX	# spill
4f8     movl    [rsp + #8], R14	# spill
4fd     movl    [rsp + #12], R13	# spill
        nop 	# 2 bytes pad for loops and calls
504     call,static  wrapper for: uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')
        # roundF::round_scalar @ bci:2 (line 5) L[0]=RBP L[1]=rsp + #0 L[2]=rsp + #8 L[3]=rsp + #12
        # OopMap {rbp=Oop [0]=Oop off=1292/0x50c}
514     stop	# ShouldNotReachHere

528     B42: #	out( N457 ) <- in( B8 )  Freq: 1.01328e-06
528     movl    RSI, #-66	# int
52d     movq    RBP, R8	# spill
530     movq    [rsp + #0], RBX	# spill
534     movl    [rsp + #8], R14	# spill
539     movl    [rsp + #12], R13	# spill
        nop 	# 2 bytes pad for loops and calls
540     call,static  wrapper for: uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')
        # roundF::round_scalar @ bci:2 (line 5) L[0]=RBP L[1]=rsp + #0 L[2]=rsp + #8 L[3]=rsp + #12
        # OopMap {rbp=Oop [0]=Oop off=1352/0x548}
550     stop	# ShouldNotReachHere

--------------------------------------------------------------------------------
----------------------------------- Assembly -----------------------------------

Compiled method (c2) 836  187 %           roundF::round_scalar @ 2 (31 bytes)
 total in heap  [0x00007f527119f488,0x00007f527119fc00] = 1912
 relocation     [0x00007f527119f568,0x00007f527119f5f0] = 136
 main code      [0x00007f527119f600,0x00007f527119fbc8] = 1480
 stub code      [0x00007f527119fbc8,0x00007f527119fbe0] = 24
 oops           [0x00007f527119fbe0,0x00007f527119fbe8] = 8
 metadata       [0x00007f527119fbe8,0x00007f527119fc00] = 24
 immutable data [0x00007f52044b34a0,0x00007f52044b3798] = 760
 dependencies   [0x00007f52044b34a0,0x00007f52044b34a8] = 8
 nul chk table  [0x00007f52044b34a8,0x00007f52044b34c0] = 24
 scopes pcs     [0x00007f52044b34c0,0x00007f52044b36f0] = 560
 scopes data    [0x00007f52044b36f0,0x00007f52044b3798] = 168

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x00007f522460c4f0} 'round_scalar' '([F[II)I' in 'roundF'
 ;; N457: #	out( B1 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x00007f527119f600:   callq  0x00007f527a6a8340           ;   {runtime_call os::breakpoint()}
  0x00007f527119f605:   nop
  0x00007f527119f606:   nop
  0x00007f527119f607:   nop
  0x00007f527119f608:   nop
  0x00007f527119f609:   nop
  0x00007f527119f60a:   nop
  0x00007f527119f60b:   nop
  0x00007f527119f60c:   nop
  0x00007f527119f60d:   nop
  0x00007f527119f60e:   nop
  0x00007f527119f60f:   nop
 ;; B1: #	out( B31 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x00007f527119f610:   mov    %eax,-0x18000(%rsp)
  0x00007f527119f617:   push   %rbp
  0x00007f527119f618:   sub    $0x40,%rsp
  0x00007f527119f61c:   cmpl   $0x0,0x20(%r15)
  0x00007f527119f624:   jne    0x00007f527119fbb8
  0x00007f527119f62a:   mov    0x18(%rsi),%rbp
  0x00007f527119f62e:   mov    0x10(%rsi),%rbx
  0x00007f527119f632:   mov    (%rsi),%r13d
  0x00007f527119f635:   mov    0x8(%rsi),%r14d
  0x00007f527119f639:   mov    %rsi,%rdi
  0x00007f527119f63c:   vzeroupper 
  0x00007f527119f63f:   movabs $0x7f527a8308d0,%r10
  0x00007f527119f649:   callq  *%r10
  0x00007f527119f64c:   nopl   0x0(%rax,%rax,1)             ;   {post_call_nop}
  0x00007f527119f654:   test   %rbp,%rbp
  0x00007f527119f657:   je     0x00007f527119f994
 ;; B2: #	out( B40 B3 ) <- in( B1 )  Freq: 0.999
  0x00007f527119f65d:   mov    0x8(%rbp),%r10d
  0x00007f527119f661:   cmp    $0x1040618,%r10d             ;   {metadata({type array float})}
  0x00007f527119f668:   jne    0x00007f527119fab4
 ;; B3: #	out( B4 ) <- in( B2 )  Freq: 0.998999
  0x00007f527119f66e:   mov    %rbp,%r8
 ;; B4: #	out( B32 B5 ) <- in( B3 B31 )  Freq: 0.999999
  0x00007f527119f671:   test   %rbx,%rbx
  0x00007f527119f674:   je     0x00007f527119f99c
 ;; B5: #	out( B40 B6 ) <- in( B4 )  Freq: 0.998999
  0x00007f527119f67a:   mov    0x8(%rbx),%r11d
  0x00007f527119f67e:   nop
  0x00007f527119f67f:   nop
  0x00007f527119f680:   cmp    $0x1040e38,%r11d             ;   {metadata({type array int})}
  0x00007f527119f687:   jne    0x00007f527119fab4           ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - roundF::round_scalar@2 (line 5)
 ;; B6: #	out( B7 ) <- in( B5 )  Freq: 0.998998
 ;; B7: #	out( B41 B8 ) <- in( B6 B32 )  Freq: 0.999998
  0x00007f527119f68d:   mov    0xc(%r8),%ecx                ; implicit exception: dispatches to 0x00007f527119faec
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - roundF::round_scalar@4 (line 5)
 ;; B8: #	out( B42 B9 ) <- in( B7 )  Freq: 0.999997
  0x00007f527119f691:   mov    0xc(%rbx),%edx               ; implicit exception: dispatches to 0x00007f527119fb28
                                                            ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - roundF::round_scalar@29 (line 8)
 ;; B9: #	out( B29 B10 ) <- in( B8 )  Freq: 0.999996
  0x00007f527119f694:   lea    -0x1(%rcx),%eax
  0x00007f527119f697:   nop
  0x00007f527119f698:   nop
  0x00007f527119f699:   nop
  0x00007f527119f69a:   nop
  0x00007f527119f69b:   nop
  0x00007f527119f69c:   nop
  0x00007f527119f69d:   nop
  0x00007f527119f69e:   nop
  0x00007f527119f69f:   nop
  0x00007f527119f6a0:   cmp    %eax,%r13d
  0x00007f527119f6a3:   jge    0x00007f527119f973           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - roundF::round_scalar@7 (line 5)
 ;; B10: #	out( B11 ) <- in( B9 )  Freq: 0.999736
  0x00007f527119f6a9:   mov    %r8d,%r10d
  0x00007f527119f6ac:   lea    0x1(%r13),%r11d
  0x00007f527119f6b0:   movslq %ecx,%rdi
  0x00007f527119f6b3:   movslq %r11d,%rbp
  0x00007f527119f6b6:   lea    -0x1(%rdi),%rsi
  0x00007f527119f6ba:   mov    $0xfffffff0,%r9d
  0x00007f527119f6c0:   sub    %r10d,%r9d
  0x00007f527119f6c3:   shr    $0x2,%r9d
  0x00007f527119f6c7:   xor    %r10d,%r10d
  0x00007f527119f6ca:   test   %r11d,%r11d
  0x00007f527119f6cd:   cmovl  %r10,%rbp
  0x00007f527119f6d1:   mov    %ebp,%r10d
  0x00007f527119f6d4:   cmp    %eax,%r10d
  0x00007f527119f6d7:   cmovg  %eax,%r10d
  0x00007f527119f6db:   sub    %r10d,%r9d
  0x00007f527119f6de:   movslq %r10d,%r11
  0x00007f527119f6e1:   mov    $0x3,%r10d
  0x00007f527119f6e7:   bzhi   %r10,%r9,%r10
  0x00007f527119f6ec:   add    %r10,%r11
  0x00007f527119f6ef:   cmp    %rsi,%r11
  0x00007f527119f6f2:   mov    %rsi,%r10
  0x00007f527119f6f5:   cmovl  %r11,%r10
  0x00007f527119f6f9:   mov    %r10d,%r10d
 ;; B11: #	out( B33 B12 ) <- in( B10 B13 ) Loop( B11-B13 inner pre of N391 multiversion_fast) Freq: 1.99947
  0x00007f527119f6fc:   nop
  0x00007f527119f6fd:   nop
  0x00007f527119f6fe:   nop
  0x00007f527119f6ff:   nop
  0x00007f527119f700:   cmp    %ecx,%r13d
  0x00007f527119f703:   jae    0x00007f527119f9a5
 ;; B12: #	out( B34 B13 ) <- in( B11 )  Freq: 1.99947
  0x00007f527119f709:   vmovss 0x10(%r8,%r13,4),%xmm0
  0x00007f527119f710:   vcvtss2sd %xmm0,%xmm0,%xmm0
  0x00007f527119f714:   vsqrtsd %xmm0,%xmm0,%xmm0           ;*invokestatic sqrt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - roundF::round_scalar@16 (line 6)
  0x00007f527119f718:   nop
  0x00007f527119f719:   nop
  0x00007f527119f71a:   nop
  0x00007f527119f71b:   nop
  0x00007f527119f71c:   nop
  0x00007f527119f71d:   nop
  0x00007f527119f71e:   nop
  0x00007f527119f71f:   nop
  0x00007f527119f720:   cmp    %edx,%r13d
  0x00007f527119f723:   jae    0x00007f527119f9e8
 ;; B13: #	out( B11 B14 ) <- in( B12 )  Freq: 1.99946
  0x00007f527119f729:   vcvttsd2si %xmm0,%r11d
  0x00007f527119f72d:   cmp    $0x80000000,%r11d
  0x00007f527119f734:   je     0x00007f527119fba3
  0x00007f527119f73a:   mov    %r11d,0x10(%rbx,%r13,4)      ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - roundF::round_scalar@20 (line 6)
  0x00007f527119f73f:   inc    %r13d                        ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - roundF::round_scalar@21 (line 5)
  0x00007f527119f742:   cmp    %r10d,%r13d
  0x00007f527119f745:   jl     0x00007f527119f6fc           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - roundF::round_scalar@7 (line 5)
 ;; B14: #	out( B25 B15 ) <- in( B13 )  Freq: 0.999732
  0x00007f527119f747:   cmp    %rdi,%rsi
  0x00007f527119f74a:   cmovl  %rsi,%rdi
  0x00007f527119f74e:   movslq %edx,%r10
  0x00007f527119f751:   cmp    %rdi,%r10
  0x00007f527119f754:   cmovl  %r10,%rdi
  0x00007f527119f758:   mov    %edi,%r10d
  0x00007f527119f75b:   lea    -0xf(%r10),%r11d
  0x00007f527119f75f:   nop
  0x00007f527119f760:   cmp    %r11d,%r13d
  0x00007f527119f763:   jge    0x00007f527119f92c
 ;; B15: #	out( B36 B16 ) <- in( B14 )  Freq: 0.999731
  0x00007f527119f769:   lea    -0x1(%r10),%edi
  0x00007f527119f76d:   cmp    %ecx,%edi
  0x00007f527119f76f:   jae    0x00007f527119fa64
 ;; B16: #	out( B37 B17 ) <- in( B15 )  Freq: 0.99973
  0x00007f527119f775:   cmp    %ecx,%r13d
  0x00007f527119f778:   jae    0x00007f527119fa78
 ;; B17: #	out( B38 B18 ) <- in( B16 )  Freq: 0.999729
  0x00007f527119f77e:   nop
  0x00007f527119f77f:   nop                                 ;   {other}
  0x00007f527119f780:   cmp    %edx,%edi
  0x00007f527119f782:   jae    0x00007f527119fa8c
 ;; B18: #	out( B39 B19 ) <- in( B17 )  Freq: 0.999727
  0x00007f527119f788:   cmp    %edx,%r13d
  0x00007f527119f78b:   jae    0x00007f527119faa0
 ;; B19: #	out( B20 ) <- in( B18 )  Freq: 0.999726
  0x00007f527119f791:   mov    $0x3e80,%r9d                 ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - roundF::round_scalar@24 (line 5)
  0x00007f527119f797:   xor    %esi,%esi
 ;; B20: #	out( B21 ) <- in( B19 B22 ) Loop( B20-B22 ) Freq: 3839.89
  0x00007f527119f799:   mov    %r10d,%edi
  0x00007f527119f79c:   sub    %r13d,%edi
  0x00007f527119f79f:   add    $0xfffffff1,%edi
  0x00007f527119f7a2:   cmp    %r13d,%r11d
  0x00007f527119f7a5:   cmovl  %esi,%edi
  0x00007f527119f7a8:   cmp    $0x3e80,%edi
  0x00007f527119f7ae:   cmova  %r9d,%edi
  0x00007f527119f7b2:   add    %r13d,%edi
  0x00007f527119f7b5:   nop
  0x00007f527119f7b6:   nop
  0x00007f527119f7b7:   nop
  0x00007f527119f7b8:   nop
  0x00007f527119f7b9:   nop
  0x00007f527119f7ba:   nop
  0x00007f527119f7bb:   nop
  0x00007f527119f7bc:   nop
  0x00007f527119f7bd:   nop
  0x00007f527119f7be:   nop
  0x00007f527119f7bf:   nop                                 ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - roundF::round_scalar@20 (line 6)
 ;; B21: #	out( B21 B22 ) <- in( B20 B21 ) Loop( B21-B21 inner main of N191 strip mined multiversion_fast) Freq: 1.47488e+07
  0x00007f527119f7c0:   vmovups 0x10(%r8,%r13,4),%ymm0
  0x00007f527119f7c7:   movslq %r13d,%rbp
  0x00007f527119f7ca:   vmovups 0x30(%r8,%rbp,4),%ymm1      ;*faload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - roundF::round_scalar@14 (line 6)
  0x00007f527119f7d1:   vcvtps2pd %ymm0,%zmm0
  0x00007f527119f7d7:   vcvtps2pd %ymm1,%zmm1
  0x00007f527119f7dd:   vsqrtpd %zmm0,%zmm0
  0x00007f527119f7e3:   vsqrtpd %zmm1,%zmm1
  0x00007f527119f7e9:   vcvttpd2qq %zmm0,%zmm3
  0x00007f527119f7ef:   vmovdqu32 -0x7dbd9(%rip),%zmm4        # Stub::vector_double_sign_flip
                                                            ;   {external_word}
  0x00007f527119f7f9:   vpcmpeqq %zmm3,%zmm4,%k5
  0x00007f527119f7ff:   kortestw %k5,%k5
  0x00007f527119f803:   je     0x00007f527119f830
  0x00007f527119f805:   vpxord %zmm5,%zmm5,%zmm5
  0x00007f527119f80b:   vcmpunordpd %zmm0,%zmm0,%k4
  0x00007f527119f812:   vmovdqu64 %zmm5,%zmm3{%k4}
  0x00007f527119f818:   kxorw  %k4,%k5,%k5
  0x00007f527119f81c:   vcmpnlt_uqpd %zmm5,%zmm0,%k5{%k5}
  0x00007f527119f823:   vpternlogq $0x11,%zmm4,%zmm4,%zmm5
  0x00007f527119f82a:   vmovdqu64 %zmm5,%zmm3{%k5}
  0x00007f527119f830:   vpmovsqd %zmm3,%ymm3
  0x00007f527119f836:   vmovdqu %ymm3,0x10(%rbx,%r13,4)
  0x00007f527119f83d:   vcvttpd2qq %zmm1,%zmm0
  0x00007f527119f843:   vmovdqu32 -0x7dc2d(%rip),%zmm3        # Stub::vector_double_sign_flip
                                                            ;   {external_word}
  0x00007f527119f84d:   vpcmpeqq %zmm0,%zmm3,%k7
  0x00007f527119f853:   kortestw %k7,%k7
  0x00007f527119f857:   je     0x00007f527119f884
  0x00007f527119f859:   vpxord %zmm2,%zmm2,%zmm2
  0x00007f527119f85f:   vcmpunordpd %zmm1,%zmm1,%k6
  0x00007f527119f866:   vmovdqu64 %zmm2,%zmm0{%k6}
  0x00007f527119f86c:   kxorw  %k6,%k7,%k7
  0x00007f527119f870:   vcmpnlt_uqpd %zmm2,%zmm1,%k7{%k7}
  0x00007f527119f877:   vpternlogq $0x11,%zmm3,%zmm3,%zmm2
  0x00007f527119f87e:   vmovdqu64 %zmm2,%zmm0{%k7}
  0x00007f527119f884:   vpmovsqd %zmm0,%ymm0
  0x00007f527119f88a:   vmovdqu %ymm0,0x30(%rbx,%rbp,4)     ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - roundF::round_scalar@20 (line 6)
  0x00007f527119f890:   add    $0x10,%r13d                  ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - roundF::round_scalar@21 (line 5)
  0x00007f527119f894:   cmp    %edi,%r13d
  0x00007f527119f897:   jl     0x00007f527119f7c0           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - roundF::round_scalar@24 (line 5)
 ;; B22: #	out( B20 B23 ) <- in( B21 )  Freq: 3839.89
  0x00007f527119f89d:   mov    0x30(%r15),%rdi              ; ImmutableOopMap {r8=Oop rbx=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) roundF::round_scalar@24 (line 5)
  0x00007f527119f8a1:   test   %eax,(%rdi)                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - roundF::round_scalar@24 (line 5)
                                                            ;   {poll}
  0x00007f527119f8a3:   cmp    %r11d,%r13d
  0x00007f527119f8a6:   jl     0x00007f527119f799
 ;; B23: #	out( B25 B24 ) <- in( B22 )  Freq: 0.999726
  0x00007f527119f8ac:   add    $0xfffffff9,%r10d
  0x00007f527119f8b0:   cmp    %r10d,%r13d
  0x00007f527119f8b3:   jge    0x00007f527119f92c
  0x00007f527119f8b9:   nop
  0x00007f527119f8ba:   nop
  0x00007f527119f8bb:   nop
 ;; B24: #	out( B24 B25 ) <- in( B23 B24 ) Loop( B24-B24 inner post of N920 multiversion_fast) Freq: 0.999726
  0x00007f527119f8bc:   vmovups 0x10(%r8,%r13,4),%ymm0      ;*faload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - roundF::round_scalar@14 (line 6)
  0x00007f527119f8c3:   vcvtps2pd %ymm0,%zmm0
  0x00007f527119f8c9:   vsqrtpd %zmm0,%zmm0
  0x00007f527119f8cf:   vcvttpd2qq %zmm0,%zmm1
  0x00007f527119f8d5:   vmovdqu32 -0x7dcbf(%rip),%zmm2        # Stub::vector_double_sign_flip
                                                            ;   {external_word}
  0x00007f527119f8df:   vpcmpeqq %zmm1,%zmm2,%k6
  0x00007f527119f8e5:   kortestw %k6,%k6
  0x00007f527119f8e9:   je     0x00007f527119f916
  0x00007f527119f8eb:   vpxord %zmm3,%zmm3,%zmm3
  0x00007f527119f8f1:   vcmpunordpd %zmm0,%zmm0,%k7
  0x00007f527119f8f8:   vmovdqu64 %zmm3,%zmm1{%k7}
  0x00007f527119f8fe:   kxorw  %k7,%k6,%k6
  0x00007f527119f902:   vcmpnlt_uqpd %zmm3,%zmm0,%k6{%k6}
  0x00007f527119f909:   vpternlogq $0x11,%zmm2,%zmm2,%zmm3
  0x00007f527119f910:   vmovdqu64 %zmm3,%zmm1{%k6}
  0x00007f527119f916:   vpmovsqd %zmm1,%ymm1
  0x00007f527119f91c:   vmovdqu %ymm1,0x10(%rbx,%r13,4)     ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - roundF::round_scalar@20 (line 6)
  0x00007f527119f923:   add    $0x8,%r13d                   ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - roundF::round_scalar@21 (line 5)
  0x00007f527119f927:   cmp    %r10d,%r13d
  0x00007f527119f92a:   jl     0x00007f527119f8bc           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - roundF::round_scalar@7 (line 5)
 ;; B25: #	out( B29 B26 ) <- in( B14 B24 B23 )  Freq: 0.999727
  0x00007f527119f92c:   cmp    %eax,%r13d
  0x00007f527119f92f:   jge    0x00007f527119f973
  0x00007f527119f931:   nop
  0x00007f527119f932:   nop
  0x00007f527119f933:   nop
 ;; B26: #	out( B33 B27 ) <- in( B25 B28 ) Loop( B26-B28 inner post of N391 multiversion_fast) Freq: 0.999725
  0x00007f527119f934:   cmp    %ecx,%r13d
  0x00007f527119f937:   jae    0x00007f527119f9a5
 ;; B27: #	out( B34 B28 ) <- in( B26 )  Freq: 0.999724
  0x00007f527119f93d:   vmovss 0x10(%r8,%r13,4),%xmm0
  0x00007f527119f944:   vcvtss2sd %xmm0,%xmm0,%xmm0
  0x00007f527119f948:   vsqrtsd %xmm0,%xmm0,%xmm0           ;*invokestatic sqrt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - roundF::round_scalar@16 (line 6)
  0x00007f527119f94c:   cmp    %edx,%r13d
  0x00007f527119f94f:   jae    0x00007f527119f9e8
 ;; B28: #	out( B26 B29 ) <- in( B27 )  Freq: 0.999723
  0x00007f527119f955:   vcvttsd2si %xmm0,%r10d
  0x00007f527119f959:   cmp    $0x80000000,%r10d
  0x00007f527119f960:   je     0x00007f527119fb8e
  0x00007f527119f966:   mov    %r10d,0x10(%rbx,%r13,4)      ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - roundF::round_scalar@20 (line 6)
  0x00007f527119f96b:   inc    %r13d                        ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - roundF::round_scalar@21 (line 5)
  0x00007f527119f96e:   cmp    %eax,%r13d
  0x00007f527119f971:   jl     0x00007f527119f934           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - roundF::round_scalar@7 (line 5)
 ;; B29: #	out( B35 B30 ) <- in( B9 B28 B25 )  Freq: 0.999986
  0x00007f527119f973:   cmp    %edx,%r14d
  0x00007f527119f976:   jae    0x00007f527119fa34
 ;; B30: #	out( N457 ) <- in( B29 )  Freq: 0.999985
  0x00007f527119f97c:   mov    0x10(%rbx,%r14,4),%eax       ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - roundF::round_scalar@29 (line 8)
  0x00007f527119f981:   vzeroupper 
  0x00007f527119f984:   add    $0x40,%rsp
  0x00007f527119f988:   pop    %rbp
  0x00007f527119f989:   cmp    0x28(%r15),%rsp              ;   {poll_return}
  0x00007f527119f98d:   ja     0x00007f527119fb78
  0x00007f527119f993:   retq   
 ;; B31: #	out( B4 ) <- in( B1 )  Freq: 0.000999987
  0x00007f527119f994:   xor    %r8d,%r8d
  0x00007f527119f997:   jmpq   0x00007f527119f671
 ;; B32: #	out( B7 ) <- in( B4 )  Freq: 0.000999986
  0x00007f527119f99c:   xor    %ebx,%ebx
  0x00007f527119f99e:   nop
  0x00007f527119f99f:   nop
  0x00007f527119f9a0:   jmpq   0x00007f527119f68d
 ;; B33: #	out( N457 ) <- in( B26 B11 )  Freq: 3.03902e-06
  0x00007f527119f9a5:   mov    $0xffffffe4,%esi
  0x00007f527119f9aa:   mov    %r14d,0x8(%rsp)
  0x00007f527119f9af:   mov    %rbx,0x10(%rsp)
  0x00007f527119f9b4:   mov    %r13d,0x18(%rsp)
  0x00007f527119f9b9:   mov    %r8,0x20(%rsp)
  0x00007f527119f9be:   mov    %r13d,0x1c(%rsp)
  0x00007f527119f9c3:   nop
  0x00007f527119f9c4:   vzeroupper 
  0x00007f527119f9c7:   callq  0x00007f5271116ae0           ; ImmutableOopMap {[16]=Oop [32]=Oop }
                                                            ;*faload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - roundF::round_scalar@14 (line 6)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f527119f9cc:   nopl   0x1000544(%rax,%rax,1)       ;   {post_call_nop}
  0x00007f527119f9d4:   movabs $0x7f527aed6628,%rdi         ;   {external_word}
  0x00007f527119f9de:   and    $0xfffffffffffffff0,%rsp
  0x00007f527119f9e2:   callq  0x00007f527a4b1a60           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f527119f9e7:   hlt    
 ;; B34: #	out( N457 ) <- in( B27 B12 )  Freq: 3.03902e-06
  0x00007f527119f9e8:   vcvttsd2si %xmm0,%ebp
  0x00007f527119f9ec:   cmp    $0x80000000,%ebp
  0x00007f527119f9f2:   je     0x00007f527119fb64
  0x00007f527119f9f8:   mov    $0xffffffe4,%esi
  0x00007f527119f9fd:   mov    %r8,(%rsp)
  0x00007f527119fa01:   mov    %r14d,0x10(%rsp)
  0x00007f527119fa06:   mov    %rbx,0x18(%rsp)
  0x00007f527119fa0b:   mov    %r13d,0x20(%rsp)
  0x00007f527119fa10:   vzeroupper 
  0x00007f527119fa13:   callq  0x00007f5271116ae0           ; ImmutableOopMap {[0]=Oop [24]=Oop }
                                                            ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - roundF::round_scalar@20 (line 6)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f527119fa18:   nopl   0x2000590(%rax,%rax,1)       ;   {post_call_nop}
  0x00007f527119fa20:   movabs $0x7f527aed6628,%rdi         ;   {external_word}
  0x00007f527119fa2a:   and    $0xfffffffffffffff0,%rsp
  0x00007f527119fa2e:   callq  0x00007f527a4b1a60           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f527119fa33:   hlt    
 ;; B35: #	out( N457 ) <- in( B29 )  Freq: 1.01326e-06
  0x00007f527119fa34:   mov    $0xffffffe4,%esi
  0x00007f527119fa39:   mov    %rbx,%rbp
  0x00007f527119fa3c:   mov    %r14d,(%rsp)
  0x00007f527119fa40:   vzeroupper 
  0x00007f527119fa43:   callq  0x00007f5271116ae0           ; ImmutableOopMap {rbp=Oop }
                                                            ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - roundF::round_scalar@29 (line 8)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f527119fa48:   nopl   0x30005c0(%rax,%rax,1)       ;   {post_call_nop}
  0x00007f527119fa50:   movabs $0x7f527aed6628,%rdi         ;   {external_word}
  0x00007f527119fa5a:   and    $0xfffffffffffffff0,%rsp
  0x00007f527119fa5e:   callq  0x00007f527a4b1a60           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f527119fa63:   hlt                                 ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - roundF::round_scalar@29 (line 8)
 ;; B36: #	out( N457 ) <- in( B15 )  Freq: 1.01301e-06
  0x00007f527119fa64:   movabs $0x7f527af9ec90,%rdi         ;   {external_word}
  0x00007f527119fa6e:   and    $0xfffffffffffffff0,%rsp
  0x00007f527119fa72:   callq  0x00007f527a4b1a60           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f527119fa77:   hlt    
 ;; B37: #	out( N457 ) <- in( B16 )  Freq: 1.013e-06
  0x00007f527119fa78:   movabs $0x7f527af9ec90,%rdi         ;   {external_word}
  0x00007f527119fa82:   and    $0xfffffffffffffff0,%rsp
  0x00007f527119fa86:   callq  0x00007f527a4b1a60           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f527119fa8b:   hlt    
 ;; B38: #	out( N457 ) <- in( B17 )  Freq: 1.013e-06
  0x00007f527119fa8c:   movabs $0x7f527af9ec90,%rdi         ;   {external_word}
  0x00007f527119fa96:   and    $0xfffffffffffffff0,%rsp
  0x00007f527119fa9a:   callq  0x00007f527a4b1a60           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f527119fa9f:   hlt    
 ;; B39: #	out( N457 ) <- in( B18 )  Freq: 1.013e-06
  0x00007f527119faa0:   movabs $0x7f527af9ec90,%rdi         ;   {external_word}
  0x00007f527119faaa:   and    $0xfffffffffffffff0,%rsp
  0x00007f527119faae:   callq  0x00007f527a4b1a60           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f527119fab3:   hlt    
 ;; B40: #	out( N457 ) <- in( B2 B5 )  Freq: 1.998e-06
  0x00007f527119fab4:   mov    $0xffffff85,%esi
  0x00007f527119fab9:   mov    %rbx,(%rsp)
  0x00007f527119fabd:   mov    %r14d,0x8(%rsp)
  0x00007f527119fac2:   mov    %r13d,0xc(%rsp)
  0x00007f527119fac7:   nop
  0x00007f527119fac8:   vzeroupper 
  0x00007f527119facb:   callq  0x00007f5271116ae0           ; ImmutableOopMap {rbp=Oop [0]=Oop }
                                                            ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - roundF::round_scalar@2 (line 5)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f527119fad0:   nopl   0x4000648(%rax,%rax,1)       ;   {post_call_nop}
  0x00007f527119fad8:   movabs $0x7f527aed6628,%rdi         ;   {external_word}
  0x00007f527119fae2:   and    $0xfffffffffffffff0,%rsp
  0x00007f527119fae6:   callq  0x00007f527a4b1a60           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f527119faeb:   hlt    
 ;; B41: #	out( N457 ) <- in( B7 )  Freq: 1.01328e-06
  0x00007f527119faec:   mov    $0xffffff6e,%esi
  0x00007f527119faf1:   mov    %r8,%rbp
  0x00007f527119faf4:   mov    %rbx,(%rsp)
  0x00007f527119faf8:   mov    %r14d,0x8(%rsp)
  0x00007f527119fafd:   mov    %r13d,0xc(%rsp)
  0x00007f527119fb02:   nop
  0x00007f527119fb03:   nop
  0x00007f527119fb04:   vzeroupper 
  0x00007f527119fb07:   callq  0x00007f5271116ae0           ; ImmutableOopMap {rbp=Oop [0]=Oop }
                                                            ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - roundF::round_scalar@2 (line 5)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f527119fb0c:   nopl   0x5000684(%rax,%rax,1)       ;   {post_call_nop}
  0x00007f527119fb14:   movabs $0x7f527aed6628,%rdi         ;   {external_word}
  0x00007f527119fb1e:   and    $0xfffffffffffffff0,%rsp
  0x00007f527119fb22:   callq  0x00007f527a4b1a60           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f527119fb27:   hlt    
 ;; B42: #	out( N457 ) <- in( B8 )  Freq: 1.01328e-06
  0x00007f527119fb28:   mov    $0xffffffbe,%esi
  0x00007f527119fb2d:   mov    %r8,%rbp
  0x00007f527119fb30:   mov    %rbx,(%rsp)
  0x00007f527119fb34:   mov    %r14d,0x8(%rsp)
  0x00007f527119fb39:   mov    %r13d,0xc(%rsp)
  0x00007f527119fb3e:   nop
  0x00007f527119fb3f:   nop
  0x00007f527119fb40:   vzeroupper 
  0x00007f527119fb43:   callq  0x00007f5271116ae0           ; ImmutableOopMap {rbp=Oop [0]=Oop }
                                                            ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - roundF::round_scalar@2 (line 5)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f527119fb48:   nopl   0x60006c0(%rax,%rax,1)       ;   {post_call_nop}
  0x00007f527119fb50:   movabs $0x7f527aed6628,%rdi         ;   {external_word}
  0x00007f527119fb5a:   and    $0xfffffffffffffff0,%rsp
  0x00007f527119fb5e:   callq  0x00007f527a4b1a60           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f527119fb63:   hlt                                 ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - roundF::round_scalar@7 (line 5)
  0x00007f527119fb64:   sub    $0x8,%rsp
  0x00007f527119fb68:   vmovsd %xmm0,(%rsp)
  0x00007f527119fb6d:   callq  Stub::d2i_fixup              ;   {runtime_call Stub::d2i_fixup}
  0x00007f527119fb72:   pop    %rbp
  0x00007f527119fb73:   jmpq   0x00007f527119f9f8
  0x00007f527119fb78:   movabs $0x7f527119f989,%r10         ;   {internal_word}
  0x00007f527119fb82:   mov    %r10,0x498(%r15)
  0x00007f527119fb89:   jmpq   0x00007f5271120760           ;   {runtime_call SafepointBlob}
  0x00007f527119fb8e:   sub    $0x8,%rsp
  0x00007f527119fb92:   vmovsd %xmm0,(%rsp)
  0x00007f527119fb97:   callq  Stub::d2i_fixup              ;   {runtime_call Stub::d2i_fixup}
  0x00007f527119fb9c:   pop    %r10
  0x00007f527119fb9e:   jmpq   0x00007f527119f966
  0x00007f527119fba3:   sub    $0x8,%rsp
  0x00007f527119fba7:   vmovsd %xmm0,(%rsp)
  0x00007f527119fbac:   callq  Stub::d2i_fixup              ;   {runtime_call Stub::d2i_fixup}
  0x00007f527119fbb1:   pop    %r11
  0x00007f527119fbb3:   jmpq   0x00007f527119f73a
  0x00007f527119fbb8:   callq  Stub::method_entry_barrier   ;   {runtime_call Stub::method_entry_barrier}
  0x00007f527119fbbd:   jmpq   0x00007f527119f62a
  0x00007f527119fbc2:   hlt    
  0x00007f527119fbc3:   hlt    
  0x00007f527119fbc4:   hlt    
  0x00007f527119fbc5:   hlt    
  0x00007f527119fbc6:   hlt    
  0x00007f527119fbc7:   hlt    
[Exception Handler]
  0x00007f527119fbc8:   jmpq   0x00007f5271120c60           ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x00007f527119fbcd:   callq  0x00007f527119fbd2
  0x00007f527119fbd2:   subq   $0x5,(%rsp)
  0x00007f527119fbd7:   jmpq   0x00007f527111eea0           ;   {runtime_call DeoptimizationBlob}
  0x00007f527119fbdc:   hlt    
  0x00007f527119fbdd:   hlt    
  0x00007f527119fbde:   hlt    
  0x00007f527119fbdf:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Oops:
  0x00007f527119fbe0:   0x000000011f45e5b8 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x000000011f45e5b8}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Metadata:
  0x00007f527119fbe8:   0x0000000001040618 {type array float}
  0x00007f527119fbf0:   0x0000000001040e38 {type array int}
  0x00007f527119fbf8:   0x00007f522460c4f0 {method} {0x00007f522460c4f0} 'round_scalar' '([F[II)I' in 'roundF'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
pc-bytecode offsets:
PcDesc(pc=0x00007f527119f5ff offset=ffffffff bits=0):
PcDesc(pc=0x00007f527119f68d offset=8d bits=0):
   roundF::round_scalar@2 (line 5)
PcDesc(pc=0x00007f527119f691 offset=91 bits=0):
   roundF::round_scalar@4 (line 5)
PcDesc(pc=0x00007f527119f694 offset=94 bits=0):
   roundF::round_scalar@29 (line 8)
PcDesc(pc=0x00007f527119f6a9 offset=a9 bits=0):
   roundF::round_scalar@7 (line 5)
PcDesc(pc=0x00007f527119f718 offset=118 bits=0):
   roundF::round_scalar@16 (line 6)
PcDesc(pc=0x00007f527119f73f offset=13f bits=0):
   roundF::round_scalar@20 (line 6)
PcDesc(pc=0x00007f527119f742 offset=142 bits=0):
   roundF::round_scalar@21 (line 5)
PcDesc(pc=0x00007f527119f747 offset=147 bits=0):
   roundF::round_scalar@7 (line 5)
PcDesc(pc=0x00007f527119f797 offset=197 bits=0):
   roundF::round_scalar@24 (line 5)
PcDesc(pc=0x00007f527119f7c0 offset=1c0 bits=0):
   roundF::round_scalar@20 (line 6)
PcDesc(pc=0x00007f527119f7d1 offset=1d1 bits=0):
   roundF::round_scalar@14 (line 6)
PcDesc(pc=0x00007f527119f890 offset=290 bits=0):
   roundF::round_scalar@20 (line 6)
PcDesc(pc=0x00007f527119f894 offset=294 bits=0):
   roundF::round_scalar@21 (line 5)
PcDesc(pc=0x00007f527119f89d offset=29d bits=0):
   roundF::round_scalar@24 (line 5)
PcDesc(pc=0x00007f527119f8a1 offset=2a1 bits=1):
   roundF::round_scalar@24 (line 5)  reexecute=true
   Locals
    - l0: reg r8 [16],oop
    - l1: reg rbx [6],oop
    - l2: reg r14 [28],int
    - l3: reg r13 [26],int
PcDesc(pc=0x00007f527119f8a3 offset=2a3 bits=0):
   roundF::round_scalar@24 (line 5)
PcDesc(pc=0x00007f527119f8c3 offset=2c3 bits=0):
   roundF::round_scalar@14 (line 6)
PcDesc(pc=0x00007f527119f923 offset=323 bits=0):
   roundF::round_scalar@20 (line 6)
PcDesc(pc=0x00007f527119f927 offset=327 bits=0):
   roundF::round_scalar@21 (line 5)
PcDesc(pc=0x00007f527119f92c offset=32c bits=0):
   roundF::round_scalar@7 (line 5)
PcDesc(pc=0x00007f527119f94c offset=34c bits=0):
   roundF::round_scalar@16 (line 6)
PcDesc(pc=0x00007f527119f96b offset=36b bits=0):
   roundF::round_scalar@20 (line 6)
PcDesc(pc=0x00007f527119f96e offset=36e bits=0):
   roundF::round_scalar@21 (line 5)
PcDesc(pc=0x00007f527119f973 offset=373 bits=0):
   roundF::round_scalar@7 (line 5)
PcDesc(pc=0x00007f527119f981 offset=381 bits=0):
   roundF::round_scalar@29 (line 8)
PcDesc(pc=0x00007f527119f9cc offset=3cc bits=0):
   roundF::round_scalar@14 (line 6)
   Locals
    - l0: stack[32],oop
    - l1: stack[16],oop
    - l2: stack[8]
    - l3: stack[24]
   Expression stack
    - @0: stack[16],oop
    - @1: stack[28]
    - @2: stack[32],oop
    - @3: stack[24]
PcDesc(pc=0x00007f527119fa18 offset=418 bits=0):
   roundF::round_scalar@20 (line 6)
   Locals
    - l0: stack[0],oop
    - l1: stack[24],oop
    - l2: stack[16]
    - l3: stack[32]
   Expression stack
    - @0: stack[24],oop
    - @1: stack[32]
    - @2: reg rbp [10],int
PcDesc(pc=0x00007f527119fa48 offset=448 bits=0):
   roundF::round_scalar@29 (line 8)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: reg rbp [10],oop
    - @1: stack[0]
PcDesc(pc=0x00007f527119fa64 offset=464 bits=0):
   roundF::round_scalar@29 (line 8)
PcDesc(pc=0x00007f527119fad0 offset=4d0 bits=0):
   roundF::round_scalar@2 (line 5)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8]
    - l3: stack[12]
PcDesc(pc=0x00007f527119fb0c offset=50c bits=0):
   roundF::round_scalar@2 (line 5)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8]
    - l3: stack[12]
PcDesc(pc=0x00007f527119fb48 offset=548 bits=0):
   roundF::round_scalar@2 (line 5)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8]
    - l3: stack[12]
PcDesc(pc=0x00007f527119fb64 offset=564 bits=0):
   roundF::round_scalar@7 (line 5)
PcDesc(pc=0x00007f527119fbe1 offset=5e1 bits=0):
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
oop maps:ImmutableOopMapSet contains 7 OopMaps

ImmutableOopMap {r8=Oop rbx=Oop } pc offsets: 673 
ImmutableOopMap {[16]=Oop [32]=Oop } pc offsets: 972 
ImmutableOopMap {[0]=Oop [24]=Oop } pc offsets: 1048 
ImmutableOopMap {rbp=Oop } pc offsets: 1096 
ImmutableOopMap {rbp=Oop [0]=Oop } pc offsets: 1232 1292 1352 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
scopes:
ScopeDesc(pc=0x00007f527119f68d offset=8d):
   roundF::round_scalar@2 (line 5)
ScopeDesc(pc=0x00007f527119f691 offset=91):
   roundF::round_scalar@4 (line 5)
ScopeDesc(pc=0x00007f527119f694 offset=94):
   roundF::round_scalar@29 (line 8)
ScopeDesc(pc=0x00007f527119f6a9 offset=a9):
   roundF::round_scalar@7 (line 5)
ScopeDesc(pc=0x00007f527119f718 offset=118):
   roundF::round_scalar@16 (line 6)
ScopeDesc(pc=0x00007f527119f73f offset=13f):
   roundF::round_scalar@20 (line 6)
ScopeDesc(pc=0x00007f527119f742 offset=142):
   roundF::round_scalar@21 (line 5)
ScopeDesc(pc=0x00007f527119f747 offset=147):
   roundF::round_scalar@7 (line 5)
ScopeDesc(pc=0x00007f527119f797 offset=197):
   roundF::round_scalar@24 (line 5)
ScopeDesc(pc=0x00007f527119f7c0 offset=1c0):
   roundF::round_scalar@20 (line 6)
ScopeDesc(pc=0x00007f527119f7d1 offset=1d1):
   roundF::round_scalar@14 (line 6)
ScopeDesc(pc=0x00007f527119f890 offset=290):
   roundF::round_scalar@20 (line 6)
ScopeDesc(pc=0x00007f527119f894 offset=294):
   roundF::round_scalar@21 (line 5)
ScopeDesc(pc=0x00007f527119f89d offset=29d):
   roundF::round_scalar@24 (line 5)
ScopeDesc(pc=0x00007f527119f8a1 offset=2a1):
   roundF::round_scalar@24 (line 5)  reexecute=true
   Locals
    - l0: reg r8 [16],oop
    - l1: reg rbx [6],oop
    - l2: reg r14 [28],int
    - l3: reg r13 [26],int
ScopeDesc(pc=0x00007f527119f8a3 offset=2a3):
   roundF::round_scalar@24 (line 5)
ScopeDesc(pc=0x00007f527119f8c3 offset=2c3):
   roundF::round_scalar@14 (line 6)
ScopeDesc(pc=0x00007f527119f923 offset=323):
   roundF::round_scalar@20 (line 6)
ScopeDesc(pc=0x00007f527119f927 offset=327):
   roundF::round_scalar@21 (line 5)
ScopeDesc(pc=0x00007f527119f92c offset=32c):
   roundF::round_scalar@7 (line 5)
ScopeDesc(pc=0x00007f527119f94c offset=34c):
   roundF::round_scalar@16 (line 6)
ScopeDesc(pc=0x00007f527119f96b offset=36b):
   roundF::round_scalar@20 (line 6)
ScopeDesc(pc=0x00007f527119f96e offset=36e):
   roundF::round_scalar@21 (line 5)
ScopeDesc(pc=0x00007f527119f973 offset=373):
   roundF::round_scalar@7 (line 5)
ScopeDesc(pc=0x00007f527119f981 offset=381):
   roundF::round_scalar@29 (line 8)
ScopeDesc(pc=0x00007f527119f9cc offset=3cc):
   roundF::round_scalar@14 (line 6)
   Locals
    - l0: stack[32],oop
    - l1: stack[16],oop
    - l2: stack[8]
    - l3: stack[24]
   Expression stack
    - @0: stack[16],oop
    - @1: stack[28]
    - @2: stack[32],oop
    - @3: stack[24]
ScopeDesc(pc=0x00007f527119fa18 offset=418):
   roundF::round_scalar@20 (line 6)
   Locals
    - l0: stack[0],oop
    - l1: stack[24],oop
    - l2: stack[16]
    - l3: stack[32]
   Expression stack
    - @0: stack[24],oop
    - @1: stack[32]
    - @2: reg rbp [10],int
ScopeDesc(pc=0x00007f527119fa48 offset=448):
   roundF::round_scalar@29 (line 8)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: reg rbp [10],oop
    - @1: stack[0]
ScopeDesc(pc=0x00007f527119fa64 offset=464):
   roundF::round_scalar@29 (line 8)
ScopeDesc(pc=0x00007f527119fad0 offset=4d0):
   roundF::round_scalar@2 (line 5)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8]
    - l3: stack[12]
ScopeDesc(pc=0x00007f527119fb0c offset=50c):
   roundF::round_scalar@2 (line 5)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8]
    - l3: stack[12]
ScopeDesc(pc=0x00007f527119fb48 offset=548):
   roundF::round_scalar@2 (line 5)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8]
    - l3: stack[12]
ScopeDesc(pc=0x00007f527119fb64 offset=564):
   roundF::round_scalar@7 (line 5)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
relocations:
         @0x00007f527119f568: 3100
relocInfo@0x00007f527119f568 [type=6(runtime_call) addr=0x00007f527119f600 offset=0 format=1] | [destination=0x00007f527a6a8340] os::breakpoint()
         @0x00007f527119f56a: 804c
relocInfo@0x00007f527119f56a [type=16(post_call_nop) addr=0x00007f527119f64c offset=76]
         @0x00007f527119f56c: 78016315
relocInfo@0x00007f527119f56e [type=12(metadata) addr=0x00007f527119f661 offset=21 format=3 data=1] | [metadata_addr=0x00007f527119fbe8 *=0x0000000001040618]metadata_value=0x0000000001040618: {type array float}
         @0x00007f527119f570: 7802631f
relocInfo@0x00007f527119f572 [type=12(metadata) addr=0x00007f527119f680 offset=31 format=3 data=2] | [metadata_addr=0x00007f527119fbf0 *=0x0000000001040e38]metadata_value=0x0000000001040e38: {type array int}
         @0x00007f527119f574: 00ff
relocInfo@0x00007f527119f574 [type=0(none) addr=0x00007f527119f77f offset=255]
         @0x00007f527119f576: 78343970
relocInfo@0x00007f527119f578 [type=7(external_word) addr=0x00007f527119f7ef offset=112 format=1 data=52] | [target=0x00007f5271121c20]
         @0x00007f527119f57a: 78343954
relocInfo@0x00007f527119f57c [type=7(external_word) addr=0x00007f527119f843 offset=84 format=1 data=52] | [target=0x00007f5271121c20]
         @0x00007f527119f57e: 505e
relocInfo@0x00007f527119f57e [type=10(poll) addr=0x00007f527119f8a1 offset=94]
         @0x00007f527119f580: 78343934
relocInfo@0x00007f527119f582 [type=7(external_word) addr=0x00007f527119f8d5 offset=52 format=1 data=52] | [target=0x00007f5271121c20]
         @0x00007f527119f584: 58b4
relocInfo@0x00007f527119f584 [type=11(poll_return) addr=0x00007f527119f989 offset=180]
         @0x00007f527119f586: 313e
relocInfo@0x00007f527119f586 [type=6(runtime_call) addr=0x00007f527119f9c7 offset=62 format=1] | [destination=0x00007f5271116ae0] UncommonTrapBlob
         @0x00007f527119f588: 8005
relocInfo@0x00007f527119f588 [type=16(post_call_nop) addr=0x00007f527119f9cc offset=5]
         @0x00007f527119f58a: 78173808
relocInfo@0x00007f527119f58c [type=7(external_word) addr=0x00007f527119f9d4 offset=8 data=23] | [target=0x00007f527aed6628]
         @0x00007f527119f58e: 310e
relocInfo@0x00007f527119f58e [type=6(runtime_call) addr=0x00007f527119f9e2 offset=14 format=1] | [destination=0x00007f527a4b1a60] MacroAssembler::debug64(char*, long, long*)
         @0x00007f527119f590: 3131
relocInfo@0x00007f527119f590 [type=6(runtime_call) addr=0x00007f527119fa13 offset=49 format=1] | [destination=0x00007f5271116ae0] UncommonTrapBlob
         @0x00007f527119f592: 8005
relocInfo@0x00007f527119f592 [type=16(post_call_nop) addr=0x00007f527119fa18 offset=5]
         @0x00007f527119f594: 78173808
relocInfo@0x00007f527119f596 [type=7(external_word) addr=0x00007f527119fa20 offset=8 data=23] | [target=0x00007f527aed6628]
         @0x00007f527119f598: 310e
relocInfo@0x00007f527119f598 [type=6(runtime_call) addr=0x00007f527119fa2e offset=14 format=1] | [destination=0x00007f527a4b1a60] MacroAssembler::debug64(char*, long, long*)
         @0x00007f527119f59a: 3115
relocInfo@0x00007f527119f59a [type=6(runtime_call) addr=0x00007f527119fa43 offset=21 format=1] | [destination=0x00007f5271116ae0] UncommonTrapBlob
         @0x00007f527119f59c: 8005
relocInfo@0x00007f527119f59c [type=16(post_call_nop) addr=0x00007f527119fa48 offset=5]
         @0x00007f527119f59e: 78173808
relocInfo@0x00007f527119f5a0 [type=7(external_word) addr=0x00007f527119fa50 offset=8 data=23] | [target=0x00007f527aed6628]
         @0x00007f527119f5a2: 310e
relocInfo@0x00007f527119f5a2 [type=6(runtime_call) addr=0x00007f527119fa5e offset=14 format=1] | [destination=0x00007f527a4b1a60] MacroAssembler::debug64(char*, long, long*)
         @0x00007f527119f5a4: 78193806
relocInfo@0x00007f527119f5a6 [type=7(external_word) addr=0x00007f527119fa64 offset=6 data=25] | [target=0x00007f527af9ec90]
         @0x00007f527119f5a8: 310e
relocInfo@0x00007f527119f5a8 [type=6(runtime_call) addr=0x00007f527119fa72 offset=14 format=1] | [destination=0x00007f527a4b1a60] MacroAssembler::debug64(char*, long, long*)
         @0x00007f527119f5aa: 78193806
relocInfo@0x00007f527119f5ac [type=7(external_word) addr=0x00007f527119fa78 offset=6 data=25] | [target=0x00007f527af9ec90]
         @0x00007f527119f5ae: 310e
relocInfo@0x00007f527119f5ae [type=6(runtime_call) addr=0x00007f527119fa86 offset=14 format=1] | [destination=0x00007f527a4b1a60] MacroAssembler::debug64(char*, long, long*)
         @0x00007f527119f5b0: 78193806
relocInfo@0x00007f527119f5b2 [type=7(external_word) addr=0x00007f527119fa8c offset=6 data=25] | [target=0x00007f527af9ec90]
         @0x00007f527119f5b4: 310e
relocInfo@0x00007f527119f5b4 [type=6(runtime_call) addr=0x00007f527119fa9a offset=14 format=1] | [destination=0x00007f527a4b1a60] MacroAssembler::debug64(char*, long, long*)
         @0x00007f527119f5b6: 78193806
relocInfo@0x00007f527119f5b8 [type=7(external_word) addr=0x00007f527119faa0 offset=6 data=25] | [target=0x00007f527af9ec90]
         @0x00007f527119f5ba: 310e
relocInfo@0x00007f527119f5ba [type=6(runtime_call) addr=0x00007f527119faae offset=14 format=1] | [destination=0x00007f527a4b1a60] MacroAssembler::debug64(char*, long, long*)
         @0x00007f527119f5bc: 311d
relocInfo@0x00007f527119f5bc [type=6(runtime_call) addr=0x00007f527119facb offset=29 format=1] | [destination=0x00007f5271116ae0] UncommonTrapBlob
         @0x00007f527119f5be: 8005
relocInfo@0x00007f527119f5be [type=16(post_call_nop) addr=0x00007f527119fad0 offset=5]
         @0x00007f527119f5c0: 78173808
relocInfo@0x00007f527119f5c2 [type=7(external_word) addr=0x00007f527119fad8 offset=8 data=23] | [target=0x00007f527aed6628]
         @0x00007f527119f5c4: 310e
relocInfo@0x00007f527119f5c4 [type=6(runtime_call) addr=0x00007f527119fae6 offset=14 format=1] | [destination=0x00007f527a4b1a60] MacroAssembler::debug64(char*, long, long*)
         @0x00007f527119f5c6: 3121
relocInfo@0x00007f527119f5c6 [type=6(runtime_call) addr=0x00007f527119fb07 offset=33 format=1] | [destination=0x00007f5271116ae0] UncommonTrapBlob
         @0x00007f527119f5c8: 8005
relocInfo@0x00007f527119f5c8 [type=16(post_call_nop) addr=0x00007f527119fb0c offset=5]
         @0x00007f527119f5ca: 78173808
relocInfo@0x00007f527119f5cc [type=7(external_word) addr=0x00007f527119fb14 offset=8 data=23] | [target=0x00007f527aed6628]
         @0x00007f527119f5ce: 310e
relocInfo@0x00007f527119f5ce [type=6(runtime_call) addr=0x00007f527119fb22 offset=14 format=1] | [destination=0x00007f527a4b1a60] MacroAssembler::debug64(char*, long, long*)
         @0x00007f527119f5d0: 3121
relocInfo@0x00007f527119f5d0 [type=6(runtime_call) addr=0x00007f527119fb43 offset=33 format=1] | [destination=0x00007f5271116ae0] UncommonTrapBlob
         @0x00007f527119f5d2: 8005
relocInfo@0x00007f527119f5d2 [type=16(post_call_nop) addr=0x00007f527119fb48 offset=5]
         @0x00007f527119f5d4: 78173808
relocInfo@0x00007f527119f5d6 [type=7(external_word) addr=0x00007f527119fb50 offset=8 data=23] | [target=0x00007f527aed6628]
         @0x00007f527119f5d8: 310e
relocInfo@0x00007f527119f5d8 [type=6(runtime_call) addr=0x00007f527119fb5e offset=14 format=1] | [destination=0x00007f527a4b1a60] MacroAssembler::debug64(char*, long, long*)
         @0x00007f527119f5da: 310f
relocInfo@0x00007f527119f5da [type=6(runtime_call) addr=0x00007f527119fb6d offset=15 format=1] | [destination=0x00007f5271000f77] Stub::d2i_fixup
         @0x00007f527119f5dc: 79ef400b
relocInfo@0x00007f527119f5de [type=8(internal_word) addr=0x00007f527119fb78 offset=11 data=495] | [target=0x00007f527119f989]
         @0x00007f527119f5e0: 3111
relocInfo@0x00007f527119f5e0 [type=6(runtime_call) addr=0x00007f527119fb89 offset=17 format=1] | [destination=0x00007f5271120760] SafepointBlob
         @0x00007f527119f5e2: 310e
relocInfo@0x00007f527119f5e2 [type=6(runtime_call) addr=0x00007f527119fb97 offset=14 format=1] | [destination=0x00007f5271000f77] Stub::d2i_fixup
         @0x00007f527119f5e4: 3115
relocInfo@0x00007f527119f5e4 [type=6(runtime_call) addr=0x00007f527119fbac offset=21 format=1] | [destination=0x00007f5271000f77] Stub::d2i_fixup
         @0x00007f527119f5e6: 310c
relocInfo@0x00007f527119f5e6 [type=6(runtime_call) addr=0x00007f527119fbb8 offset=12 format=1] | [destination=0x00007f527107e0a0] Stub::method_entry_barrier
         @0x00007f527119f5e8: 0010
relocInfo@0x00007f527119f5e8 [type=0(none) addr=0x00007f527119fbc8 offset=16]
         @0x00007f527119f5ea: 3100
relocInfo@0x00007f527119f5ea [type=6(runtime_call) addr=0x00007f527119fbc8 offset=0 format=1] | [destination=0x00007f5271120c60] ExceptionBlob
         @0x00007f527119f5ec: 310f
relocInfo@0x00007f527119f5ec [type=6(runtime_call) addr=0x00007f527119fbd7 offset=15 format=1] | [destination=0x00007f527111eea0] DeoptimizationBlob
         @0x00007f527119f5ee: 0000
relocInfo@0x00007f527119f5ee [type=0(none) addr=0x00007f527119fbd7 offset=0]
         @0x00007f527119f5f0: 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Dependencies:
Dependency of type evol_method
  method  = *{method} {0x00007f522460c4f0} 'round_scalar' '([F[II)I' in 'roundF'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ExceptionHandlerTable (size = 0 bytes)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ImplicitExceptionTable (size = 2 entries, 20 bytes):
{
   < 0x00007f527119f68d, 0x00007f527119faec > < 0x00007f527119f691, 0x00007f527119fb28 > 
}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded oops:
#0: 0x0000000000000000 nullptr-oop
#1: 0x000000011f45e5b8 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x000000011f45e5b8}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded metadata:
#0: 0x0000000000000000 nullptr-oop
#1: 0x0000000001040618 {type array float}
#2: 0x0000000001040e38 {type array int}
#3: 0x00007f522460c4f0 {method} {0x00007f522460c4f0} 'round_scalar' '([F[II)I' in 'roundF'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
TraceNewVectors [AutoVectorization]:  895  LoadVector  === 769 7 787  [[ ]]  @float[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=5; mismatched #vectory<F,8> (does not depend only on test, unknown control)
TraceNewVectors [AutoVectorization]:  896  VectorCastF2X  === _ 895  [[ ]]  #vectorz<D,8>
TraceNewVectors [AutoVectorization]:  897  SqrtVD  === _ 896  [[ ]]  #vectorz<D,8>
TraceNewVectors [AutoVectorization]:  898  VectorCastD2X  === _ 897  [[ ]]  #vectory<I,8>
TraceNewVectors [AutoVectorization]:  899  StoreVector  === 824 827 782 898  [[ ]]  @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; mismatched  Memory: @int[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6;

============================= C2-compiled nmethod ==============================
#r018 rsi:rsi   : parm 0: float[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact *
#r016 rdx:rdx   : parm 1: int[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact *
#r010 rcx   : parm 2: int
# -- Old rsp -- Framesize: 48 --
#r623 rsp+44: in_preserve
#r622 rsp+40: return address
#r621 rsp+36: in_preserve
#r620 rsp+32: saved fp register
#r619 rsp+28: pad2, stack alignment
#r618 rsp+24: pad2, stack alignment
#r617 rsp+20: Fixed slot 1
#r616 rsp+16: Fixed slot 0
#r627 rsp+12: spill
#r626 rsp+ 8: spill
#r625 rsp+ 4: spill
#r624 rsp+ 0: spill
#
----------------------- MetaData before Compile_id = 188 ------------------------
{method}
 - this oop:          0x00007f522460c4f0
 - method holder:     'roundF'
 - constants:         0x00007f522460c060 constant pool [85]/operands[10] {0x00007f522460c060} for 'roundF' cache=0x00007f522460c8c0
 - access:            0x9  public static 
 - flags:             0x6080  queued_for_compilation has_loops_flag has_loops_flag_init 
 - name:              'round_scalar'
 - signature:         '([F[II)I'
 - max stack:         5
 - max locals:        4
 - size of params:    3
 - method size:       14
 - vtable index:      -2
 - i2i entry:         0x00007f527100cf00
 - adapters:          AHE@0x00007f52742e6ac0: 0xbba i2c: 0x00007f5271071200 c2i: 0x00007f52710712e3 c2iUV: 0x00007f52710712c2 c2iNCI: 0x00007f527107131e
 - compiled entry     0x00007f52710712e3
 - code size:         31
 - code start:        0x00007f522460c4c8
 - code end (excl):   0x00007f522460c4e7
 - method data:       0x00007f522460c960
 - checked ex length: 0
 - linenumber start:  0x00007f522460c4e7
 - localvar length:   0

------------------------ OptoAssembly for Compile_id = 188 -----------------------
#
#  int ( float[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact *, int[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact *, int )
#
000     N1: #	out( B1 ) <- in( B37 B30 B34 B35 B31 B32 B33 B36 B38 B29 B28 )  Freq: 1

000     B1: #	out( B37 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
000     # stack bang (160 bytes)
	pushq   rbp	# Save rbp
	subq    rsp, #32	# Create frame

01a     movl    R10, [RSI + #12 (8-bit)]	# range
01e     NullCheck RSI

01e     B2: #	out( B26 B3 ) <- in( B1 )  Freq: 0.999999
01e     leal    RBX, [R10 + #-1]
022     testl   RBX, RBX
024     jle     B26  P=0.000260 C=23046.000000

02a     B3: #	out( B30 B4 ) <- in( B2 )  Freq: 0.999739
02a     testl   R10, R10	# unsigned
02d     jbe,u   B30  P=0.000001 C=-1.000000

033     B4: #	out( B30 B5 ) <- in( B3 )  Freq: 0.999738
033     leal    R8, [R10 + #-2]
        nop 	# 9 bytes pad for loops and calls
040     cmpl    R8, R10	# unsigned
043     jae,u   B30  P=0.000001 C=-1.000000

049     B5: #	out( B30 B6 ) <- in( B4 )  Freq: 0.999737
049     movl    R13, [RDX + #12 (8-bit)]	# range
04d     NullCheck RDX

04d     B6: #	out( B30 B7 ) <- in( B5 )  Freq: 0.999736
04d     testl   R13, R13	# unsigned
050     jbe,u   B30  P=0.000001 C=-1.000000

056     B7: #	out( B30 B8 ) <- in( B6 )  Freq: 0.999735
056     cmpl    R8, R13	# unsigned
059     jae,u   B30  P=0.000001 C=-1.000000

05f     B8: #	out( B9 ) <- in( B7 )  Freq: 0.999734
05f     movslq  R8, R10	# i2l
062     movl    R11, RSI	# ptr -> int
065     decq    R8	# long
068     movl    R9, #-16	# int
06e     subl    R9, R11	# int
071     shrl    R9, #2
075     decl    R9	# int
078     xorl    R11, R11	# int
07b     bzhiq R9, R9, #7 	# using RAX as TEMP, int &  immI_Pow2M1 -> long
085     addq    R9, #1	# long
089     cmpq    R8, R9
08c     cmovql R9, R8	# signed, long
090     movl    RDI, R9	# l2i
093     xorl    RBP, RBP	# int

095     B9: #	out( B11 B10 ) <- in( B8 B10 ) Loop( B9-B10 inner pre of N251) Freq: 1.99947
095     movss   XMM0, [RSI + #16 + RBP << #2]	# float
09b     cvtss2sd XMM0, XMM0
09f     sqrtsd  XMM0, XMM0
0a3     convert_d2i R8, XMM0
0b4     movl    [RDX + #16 + RBP << #2], R8	# int
0b9     leal    R9, [RBP + #1]
        nop 	# 3 bytes pad for loops and calls
0c0     cmpl    R9, RDI
0c3     jge,s   B11	# loop end  P=0.500000 C=23040.000000

0c5     B10: #	out( B9 ) <- in( B9 )  Freq: 0.999734
0c5     movl    RBP, R9	# spill
0c8     jmp,s   B9

0ca     B11: #	out( B22 B12 ) <- in( B9 )  Freq: 0.999734
0ca     leal    R8, [R10 + #-16]
0ce     cmpl    R9, R8
0d1     jge     B22  P=0.000001 C=-1.000000

0d7     B12: #	out( B31 B13 ) <- in( B11 )  Freq: 0.999733
        nop 	# 9 bytes pad for loops and calls
0e0     cmpl    R9, R10	# unsigned
0e3     jae,u   B31  P=0.000001 C=-1.000000

0e9     B13: #	out( B32 B14 ) <- in( B12 )  Freq: 0.999732
0e9     addl    RBP, #16	# int
0ec     cmpl    RBP, R10	# unsigned
0ef     jae,u   B32  P=0.000001 C=-1.000000

0f5     B14: #	out( B33 B15 ) <- in( B13 )  Freq: 0.999731
0f5     cmpl    R9, R13	# unsigned
0f8     jae,u   B33  P=0.000001 C=-1.000000

0fe     B15: #	out( B34 B16 ) <- in( B14 )  Freq: 0.99973
        nop 	# 2 bytes pad for loops and calls
100     cmpl    RBP, R13	# unsigned
103     jae,u   B34  P=0.000001 C=-1.000000

109     B16: #	out( B17 ) <- in( B15 )  Freq: 0.999729
109     movl    RDI, #16000	# int
10e     # TLS is in R15

10e     B17: #	out( B18 ) <- in( B16 B19 ) Loop( B17-B19 ) Freq: 3839.89
10e     movl    RAX, R10	# spill
111     subl    RAX, R9	# int
114     addl    RAX, #-16	# int
117     cmpl    R8, R9
11a     cmovll RAX, R11	# signed, int
11e     cmpl    RAX, #16000	# unsigned
123     cmovla RAX, RDI	# unsigned, int
126     addl    RAX, R9	# int
        nop 	# 7 bytes pad for loops and calls

130     B18: #	out( B18 B19 ) <- in( B17 B18 ) Loop( B18-B18 inner main of N138 strip mined) Freq: 1.47488e+07
130     load_vector XMM0,[RSI + #48 + R9 << #2]
137     load_vector XMM1,[RSI + #16 + R9 << #2]
13e     vector_cast_f2d  XMM0,XMM0	!
144     vector_cast_f2d  XMM1,XMM1	!
14a     vsqrtpd  XMM0,XMM0	! sqrt packedD
150     vsqrtpd  XMM1,XMM1	! sqrt packedD
156     vector_cast_d2x XMM2,XMM1	! using XMM3, XMM4, K5 and K4 as TEMP
1a3     store_vector [RDX + #16 + R9 << #2],XMM2
	
1aa     vector_cast_d2x XMM1,XMM0	! using XMM2, XMM3, K7 and K6 as TEMP
1f7     store_vector [RDX + #48 + R9 << #2],XMM1
	
1fe     addl    R9, #16	# int
202     cmpl    R9, RAX
205     jl     B18	# loop end  P=0.999740 C=23040.000000

20b     B19: #	out( B17 B20 ) <- in( B18 )  Freq: 3839.89
20b     movq    RAX, [R15 + #48 (8-bit)]	# ptr
20f     testl   rax, [RAX]	# Safepoint: poll for GC        # roundF::round_scalar @ bci:24 (line 5) L[0]=RSI L[1]=RDX L[2]=RCX L[3]=R9
        # OopMap {rdx=Oop rsi=Oop off=527/0x20f}
211     cmpl    R9, R8
214     jl     B17  P=0.999740 C=23040.000000

21a     B20: #	out( B22 B21 ) <- in( B19 )  Freq: 0.999729
21a     leal    R11, [R10 + #-8]
        nop 	# 2 bytes pad for loops and calls
220     cmpl    R9, R11
223     jge     B22  P=0.500000 C=-1.000000
        nop 	# 3 bytes pad for loops and calls

22c     B21: #	out( B21 B22 ) <- in( B20 B21 ) Loop( B21-B21 inner post of N824) Freq: 0.999729
22c     load_vector XMM0,[RSI + #16 + R9 << #2]
233     vector_cast_f2d  XMM0,XMM0	!
239     vsqrtpd  XMM0,XMM0	! sqrt packedD
23f     vector_cast_d2x XMM1,XMM0	! using XMM2, XMM3, K6 and K7 as TEMP
28c     store_vector [RDX + #16 + R9 << #2],XMM1
	
293     addl    R9, #8	# int
        nop 	# 9 bytes pad for loops and calls
2a0     cmpl    R9, R11
2a3     jl,s   B21	# loop end  P=0.500000 C=23040.000000

2a5     B22: #	out( B26 B23 ) <- in( B11 B21 B20 )  Freq: 0.99973
2a5     cmpl    R9, RBX
2a8     jge,s   B26  P=0.500000 C=-1.000000

2aa     B23: #	out( B35 B24 ) <- in( B22 )  Freq: 0.499865
2aa     cmpl    R9, R10	# unsigned
2ad     jae,u   B35  P=0.000001 C=-1.000000

2b3     B24: #	out( B36 B25 ) <- in( B23 )  Freq: 0.499864
2b3     cmpl    R9, R13	# unsigned
2b6     jae,u   B36  P=0.000001 C=-1.000000

2bc     B25: #	out( B25 B26 ) <- in( B24 B25 ) Loop( B25-B25 inner post of N251) Freq: 0.999727
2bc     movss   XMM1, [RSI + #16 + R9 << #2]	# float
2c3     cvtss2sd XMM0, XMM1
2c7     sqrtsd  XMM0, XMM0
2cb     convert_d2i R10, XMM0
2dc     movl    [RDX + #16 + R9 << #2], R10	# int
2e1     incl    R9	# int
2e4     cmpl    R9, RBX
2e7     jl,s   B25	# loop end  P=0.500000 C=23040.000000

2e9     B26: #	out( B38 B27 ) <- in( B25 B22 B2 )  Freq: 0.999989
2e9     movl    R10, [RDX + #12 (8-bit)]	# range
2ed     NullCheck RDX

2ed     B27: #	out( B29 B28 ) <- in( B26 )  Freq: 0.999988
2ed     cmpl    RCX, R10	# unsigned
2f0     jae,us  B29  P=0.000001 C=-1.000000

2f2     B28: #	out( N1 ) <- in( B27 )  Freq: 0.999987
2f2     movl    RAX, [RDX + #16 + RCX << #2]	# int
2f6     vzeroupper
	addq    rsp, 32	# Destroy frame
	popq    rbp
	cmpq    rsp, poll_offset[r15_thread] 
	ja      #safepoint_stub	# Safepoint: poll for GC

308     ret

309     B29: #	out( N1 ) <- in( B27 )  Freq: 1.01327e-06
309     movl    RSI, #-28	# int
30e     movq    RBP, RDX	# spill
311     movl    [rsp + #0], RCX	# spill
314     call,static  wrapper for: uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')
        # roundF::round_scalar @ bci:29 (line 8) L[0]=_ L[1]=_ L[2]=_ L[3]=_ STK[0]=RBP STK[1]=rsp + #0
        # OopMap {rbp=Oop off=796/0x31c}
324     stop	# ShouldNotReachHere

338     B30: #	out( N1 ) <- in( B7 B3 B4 B5 B6 )  Freq: 5.03851e-06
338     movq    RBP, RSI	# spill
33b     movq    [rsp + #0], RDX	# spill
33f     movl    [rsp + #8], RCX	# spill
343     movl    RSI, #-146	# int
348     movl    [rsp + #12], RBX	# spill
34c     call,static  wrapper for: uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')
        # roundF::round_scalar @ bci:7 (line 5) L[0]=RBP L[1]=rsp + #0 L[2]=rsp + #8 L[3]=#0 STK[0]=#0 STK[1]=rsp + #12
        # OopMap {rbp=Oop [0]=Oop off=852/0x354}
35c     stop	# ShouldNotReachHere

370     B31: #	out( N1 ) <- in( B12 )  Freq: 1.01301e-06
370     stop	# ShouldNotReachHere

384     B32: #	out( N1 ) <- in( B13 )  Freq: 1.01301e-06
384     stop	# ShouldNotReachHere

398     B33: #	out( N1 ) <- in( B14 )  Freq: 1.01301e-06
398     stop	# ShouldNotReachHere

3ac     B34: #	out( N1 ) <- in( B15 )  Freq: 1.013e-06
3ac     stop	# ShouldNotReachHere

3c0     B35: #	out( N1 ) <- in( B23 )  Freq: 5.06502e-07
3c0     stop	# ShouldNotReachHere

3d4     B36: #	out( N1 ) <- in( B24 )  Freq: 5.06502e-07
3d4     stop	# ShouldNotReachHere

3e8     B37: #	out( N1 ) <- in( B1 )  Freq: 1.01328e-06
3e8     movl    RSI, #-10	# int
        nop 	# 3 bytes pad for loops and calls
3f0     call,static  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # roundF::round_scalar @ bci:4 (line 5) L[0]=_ L[1]=_ L[2]=_ L[3]=_ STK[0]=_ STK[1]=#null
        # OopMap {off=1016/0x3f8}
400     stop	# ShouldNotReachHere

414     B38: #	out( N1 ) <- in( B26 )  Freq: 1.01327e-06
414     movl    RSI, #-10	# int
419     movl    RBP, RCX	# spill
        nop 	# 1 bytes pad for loops and calls
41c     call,static  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # roundF::round_scalar @ bci:29 (line 8) L[0]=_ L[1]=_ L[2]=_ L[3]=_ STK[0]=#null STK[1]=RBP
        # OopMap {off=1060/0x424}
42c     stop	# ShouldNotReachHere

--------------------------------------------------------------------------------
----------------------------------- Assembly -----------------------------------

Compiled method (c2) 871  188             roundF::round_scalar (31 bytes)
 total in heap  [0x00007f527119ee08,0x00007f527119f418] = 1552
 relocation     [0x00007f527119eee8,0x00007f527119ef58] = 112
 main code      [0x00007f527119ef60,0x00007f527119f3f0] = 1168
 stub code      [0x00007f527119f3f0,0x00007f527119f408] = 24
 oops           [0x00007f527119f408,0x00007f527119f410] = 8
 metadata       [0x00007f527119f410,0x00007f527119f418] = 8
 immutable data [0x00007f52044bc340,0x00007f52044bc610] = 720
 dependencies   [0x00007f52044bc340,0x00007f52044bc348] = 8
 nul chk table  [0x00007f52044bc348,0x00007f52044bc368] = 32
 scopes pcs     [0x00007f52044bc368,0x00007f52044bc588] = 544
 scopes data    [0x00007f52044bc588,0x00007f52044bc610] = 136

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x00007f522460c4f0} 'round_scalar' '([F[II)I' in 'roundF'
  # parm0:    rsi:rsi   = '[F'
  # parm1:    rdx:rdx   = '[I'
  # parm2:    rcx       = int
  #           [sp+0x30]  (sp of caller)
 ;; N1: #	out( B1 ) <- in( B37 B30 B34 B35 B31 B32 B33 B36 B38 B29 B28 )  Freq: 1
 ;; B1: #	out( B37 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x00007f527119ef60:   mov    %eax,-0x18000(%rsp)
  0x00007f527119ef67:   push   %rbp
  0x00007f527119ef68:   sub    $0x20,%rsp
  0x00007f527119ef6c:   cmpl   $0x0,0x20(%r15)
  0x00007f527119ef74:   jne    0x00007f527119f3e0           ;*synchronization entry
                                                            ; - roundF::round_scalar@-1 (line 5)
  0x00007f527119ef7a:   mov    0xc(%rsi),%r10d              ; implicit exception: dispatches to 0x00007f527119f348
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - roundF::round_scalar@4 (line 5)
 ;; B2: #	out( B26 B3 ) <- in( B1 )  Freq: 0.999999
  0x00007f527119ef7e:   lea    -0x1(%r10),%ebx
  0x00007f527119ef82:   test   %ebx,%ebx
  0x00007f527119ef84:   jle    0x00007f527119f249           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - roundF::round_scalar@7 (line 5)
 ;; B3: #	out( B30 B4 ) <- in( B2 )  Freq: 0.999739
  0x00007f527119ef8a:   test   %r10d,%r10d
  0x00007f527119ef8d:   jbe    0x00007f527119f298
 ;; B4: #	out( B30 B5 ) <- in( B3 )  Freq: 0.999738
  0x00007f527119ef93:   lea    -0x2(%r10),%r8d
  0x00007f527119ef97:   nop
  0x00007f527119ef98:   nop
  0x00007f527119ef99:   nop
  0x00007f527119ef9a:   nop
  0x00007f527119ef9b:   nop
  0x00007f527119ef9c:   nop
  0x00007f527119ef9d:   nop
  0x00007f527119ef9e:   nop
  0x00007f527119ef9f:   nop
  0x00007f527119efa0:   cmp    %r10d,%r8d
  0x00007f527119efa3:   jae    0x00007f527119f298
 ;; B5: #	out( B30 B6 ) <- in( B4 )  Freq: 0.999737
  0x00007f527119efa9:   mov    0xc(%rdx),%r13d              ; implicit exception: dispatches to 0x00007f527119f298
                                                            ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - roundF::round_scalar@20 (line 6)
 ;; B6: #	out( B30 B7 ) <- in( B5 )  Freq: 0.999736
  0x00007f527119efad:   test   %r13d,%r13d
  0x00007f527119efb0:   jbe    0x00007f527119f298
 ;; B7: #	out( B30 B8 ) <- in( B6 )  Freq: 0.999735
  0x00007f527119efb6:   cmp    %r13d,%r8d
  0x00007f527119efb9:   jae    0x00007f527119f298
 ;; B8: #	out( B9 ) <- in( B7 )  Freq: 0.999734
  0x00007f527119efbf:   movslq %r10d,%r8
  0x00007f527119efc2:   mov    %esi,%r11d
  0x00007f527119efc5:   dec    %r8
  0x00007f527119efc8:   mov    $0xfffffff0,%r9d
  0x00007f527119efce:   sub    %r11d,%r9d
  0x00007f527119efd1:   shr    $0x2,%r9d
  0x00007f527119efd5:   dec    %r9d
  0x00007f527119efd8:   xor    %r11d,%r11d
  0x00007f527119efdb:   mov    $0x3,%eax
  0x00007f527119efe0:   bzhi   %rax,%r9,%r9
  0x00007f527119efe5:   add    $0x1,%r9
  0x00007f527119efe9:   cmp    %r9,%r8
  0x00007f527119efec:   cmovl  %r8,%r9
  0x00007f527119eff0:   mov    %r9d,%edi
  0x00007f527119eff3:   xor    %ebp,%ebp                    ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - roundF::round_scalar@10 (line 6)
 ;; B9: #	out( B11 B10 ) <- in( B8 B10 ) Loop( B9-B10 inner pre of N251) Freq: 1.99947
  0x00007f527119eff5:   vmovss 0x10(%rsi,%rbp,4),%xmm0      ;*faload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - roundF::round_scalar@14 (line 6)
  0x00007f527119effb:   vcvtss2sd %xmm0,%xmm0,%xmm0
  0x00007f527119efff:   vsqrtsd %xmm0,%xmm0,%xmm0
  0x00007f527119f003:   vcvttsd2si %xmm0,%r8d
  0x00007f527119f007:   cmp    $0x80000000,%r8d
  0x00007f527119f00e:   je     0x00007f527119f3cb
  0x00007f527119f014:   mov    %r8d,0x10(%rdx,%rbp,4)       ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - roundF::round_scalar@20 (line 6)
  0x00007f527119f019:   lea    0x1(%rbp),%r9d
  0x00007f527119f01d:   nop
  0x00007f527119f01e:   nop
  0x00007f527119f01f:   nop
  0x00007f527119f020:   cmp    %edi,%r9d
  0x00007f527119f023:   jge    0x00007f527119f02a           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - roundF::round_scalar@7 (line 5)
 ;; B10: #	out( B9 ) <- in( B9 )  Freq: 0.999734
  0x00007f527119f025:   mov    %r9d,%ebp
  0x00007f527119f028:   jmp    0x00007f527119eff5
 ;; B11: #	out( B22 B12 ) <- in( B9 )  Freq: 0.999734
  0x00007f527119f02a:   lea    -0x10(%r10),%r8d
  0x00007f527119f02e:   cmp    %r8d,%r9d
  0x00007f527119f031:   jge    0x00007f527119f205
 ;; B12: #	out( B31 B13 ) <- in( B11 )  Freq: 0.999733
  0x00007f527119f037:   nop
  0x00007f527119f038:   nop
  0x00007f527119f039:   nop
  0x00007f527119f03a:   nop
  0x00007f527119f03b:   nop
  0x00007f527119f03c:   nop
  0x00007f527119f03d:   nop
  0x00007f527119f03e:   nop
  0x00007f527119f03f:   nop
  0x00007f527119f040:   cmp    %r10d,%r9d
  0x00007f527119f043:   jae    0x00007f527119f2d0
 ;; B13: #	out( B32 B14 ) <- in( B12 )  Freq: 0.999732
  0x00007f527119f049:   add    $0x10,%ebp
  0x00007f527119f04c:   cmp    %r10d,%ebp
  0x00007f527119f04f:   jae    0x00007f527119f2e4
 ;; B14: #	out( B33 B15 ) <- in( B13 )  Freq: 0.999731
  0x00007f527119f055:   cmp    %r13d,%r9d
  0x00007f527119f058:   jae    0x00007f527119f2f8
 ;; B15: #	out( B34 B16 ) <- in( B14 )  Freq: 0.99973
  0x00007f527119f05e:   nop
  0x00007f527119f05f:   nop                                 ;   {other}
  0x00007f527119f060:   cmp    %r13d,%ebp
  0x00007f527119f063:   jae    0x00007f527119f30c
 ;; B16: #	out( B17 ) <- in( B15 )  Freq: 0.999729
  0x00007f527119f069:   mov    $0x3e80,%edi
 ;; B17: #	out( B18 ) <- in( B16 B19 ) Loop( B17-B19 ) Freq: 3839.89
  0x00007f527119f06e:   mov    %r10d,%eax
  0x00007f527119f071:   sub    %r9d,%eax
  0x00007f527119f074:   add    $0xfffffff0,%eax
  0x00007f527119f077:   cmp    %r9d,%r8d
  0x00007f527119f07a:   cmovl  %r11d,%eax
  0x00007f527119f07e:   cmp    $0x3e80,%eax
  0x00007f527119f083:   cmova  %edi,%eax
  0x00007f527119f086:   add    %r9d,%eax
  0x00007f527119f089:   nop
  0x00007f527119f08a:   nop
  0x00007f527119f08b:   nop
  0x00007f527119f08c:   nop
  0x00007f527119f08d:   nop
  0x00007f527119f08e:   nop
  0x00007f527119f08f:   nop                                 ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - roundF::round_scalar@10 (line 6)
 ;; B18: #	out( B18 B19 ) <- in( B17 B18 ) Loop( B18-B18 inner main of N138 strip mined) Freq: 1.47488e+07
  0x00007f527119f090:   vmovups 0x30(%rsi,%r9,4),%ymm0
  0x00007f527119f097:   vmovups 0x10(%rsi,%r9,4),%ymm1      ;*faload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - roundF::round_scalar@14 (line 6)
  0x00007f527119f09e:   vcvtps2pd %ymm0,%zmm0
  0x00007f527119f0a4:   vcvtps2pd %ymm1,%zmm1
  0x00007f527119f0aa:   vsqrtpd %zmm0,%zmm0
  0x00007f527119f0b0:   vsqrtpd %zmm1,%zmm1
  0x00007f527119f0b6:   vcvttpd2qq %zmm1,%zmm2
  0x00007f527119f0bc:   vmovdqu32 -0x7d4a6(%rip),%zmm3        # Stub::vector_double_sign_flip
                                                            ;   {external_word}
  0x00007f527119f0c6:   vpcmpeqq %zmm2,%zmm3,%k5
  0x00007f527119f0cc:   kortestw %k5,%k5
  0x00007f527119f0d0:   je     0x00007f527119f0fd
  0x00007f527119f0d2:   vpxord %zmm4,%zmm4,%zmm4
  0x00007f527119f0d8:   vcmpunordpd %zmm1,%zmm1,%k4
  0x00007f527119f0df:   vmovdqu64 %zmm4,%zmm2{%k4}
  0x00007f527119f0e5:   kxorw  %k4,%k5,%k5
  0x00007f527119f0e9:   vcmpnlt_uqpd %zmm4,%zmm1,%k5{%k5}
  0x00007f527119f0f0:   vpternlogq $0x11,%zmm3,%zmm3,%zmm4
  0x00007f527119f0f7:   vmovdqu64 %zmm4,%zmm2{%k5}
  0x00007f527119f0fd:   vpmovsqd %zmm2,%ymm2
  0x00007f527119f103:   vmovdqu %ymm2,0x10(%rdx,%r9,4)
  0x00007f527119f10a:   vcvttpd2qq %zmm0,%zmm1
  0x00007f527119f110:   vmovdqu32 -0x7d4fa(%rip),%zmm2        # Stub::vector_double_sign_flip
                                                            ;   {external_word}
  0x00007f527119f11a:   vpcmpeqq %zmm1,%zmm2,%k7
  0x00007f527119f120:   kortestw %k7,%k7
  0x00007f527119f124:   je     0x00007f527119f151
  0x00007f527119f126:   vpxord %zmm3,%zmm3,%zmm3
  0x00007f527119f12c:   vcmpunordpd %zmm0,%zmm0,%k6
  0x00007f527119f133:   vmovdqu64 %zmm3,%zmm1{%k6}
  0x00007f527119f139:   kxorw  %k6,%k7,%k7
  0x00007f527119f13d:   vcmpnlt_uqpd %zmm3,%zmm0,%k7{%k7}
  0x00007f527119f144:   vpternlogq $0x11,%zmm2,%zmm2,%zmm3
  0x00007f527119f14b:   vmovdqu64 %zmm3,%zmm1{%k7}
  0x00007f527119f151:   vpmovsqd %zmm1,%ymm1
  0x00007f527119f157:   vmovdqu %ymm1,0x30(%rdx,%r9,4)      ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - roundF::round_scalar@20 (line 6)
  0x00007f527119f15e:   add    $0x10,%r9d                   ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - roundF::round_scalar@21 (line 5)
  0x00007f527119f162:   cmp    %eax,%r9d
  0x00007f527119f165:   jl     0x00007f527119f090           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - roundF::round_scalar@24 (line 5)
 ;; B19: #	out( B17 B20 ) <- in( B18 )  Freq: 3839.89
  0x00007f527119f16b:   mov    0x30(%r15),%rax              ; ImmutableOopMap {rdx=Oop rsi=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) roundF::round_scalar@24 (line 5)
  0x00007f527119f16f:   test   %eax,(%rax)                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - roundF::round_scalar@24 (line 5)
                                                            ;   {poll}
  0x00007f527119f171:   cmp    %r8d,%r9d
  0x00007f527119f174:   jl     0x00007f527119f06e
 ;; B20: #	out( B22 B21 ) <- in( B19 )  Freq: 0.999729
  0x00007f527119f17a:   lea    -0x8(%r10),%r11d
  0x00007f527119f17e:   nop
  0x00007f527119f17f:   nop
  0x00007f527119f180:   cmp    %r11d,%r9d
  0x00007f527119f183:   jge    0x00007f527119f205
  0x00007f527119f189:   nop
  0x00007f527119f18a:   nop
  0x00007f527119f18b:   nop                                 ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - roundF::round_scalar@10 (line 6)
 ;; B21: #	out( B21 B22 ) <- in( B20 B21 ) Loop( B21-B21 inner post of N824) Freq: 0.999729
  0x00007f527119f18c:   vmovups 0x10(%rsi,%r9,4),%ymm0      ;*faload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - roundF::round_scalar@14 (line 6)
  0x00007f527119f193:   vcvtps2pd %ymm0,%zmm0
  0x00007f527119f199:   vsqrtpd %zmm0,%zmm0
  0x00007f527119f19f:   vcvttpd2qq %zmm0,%zmm1
  0x00007f527119f1a5:   vmovdqu32 -0x7d58f(%rip),%zmm2        # Stub::vector_double_sign_flip
                                                            ;   {external_word}
  0x00007f527119f1af:   vpcmpeqq %zmm1,%zmm2,%k6
  0x00007f527119f1b5:   kortestw %k6,%k6
  0x00007f527119f1b9:   je     0x00007f527119f1e6
  0x00007f527119f1bb:   vpxord %zmm3,%zmm3,%zmm3
  0x00007f527119f1c1:   vcmpunordpd %zmm0,%zmm0,%k7
  0x00007f527119f1c8:   vmovdqu64 %zmm3,%zmm1{%k7}
  0x00007f527119f1ce:   kxorw  %k7,%k6,%k6
  0x00007f527119f1d2:   vcmpnlt_uqpd %zmm3,%zmm0,%k6{%k6}
  0x00007f527119f1d9:   vpternlogq $0x11,%zmm2,%zmm2,%zmm3
  0x00007f527119f1e0:   vmovdqu64 %zmm3,%zmm1{%k6}
  0x00007f527119f1e6:   vpmovsqd %zmm1,%ymm1
  0x00007f527119f1ec:   vmovdqu %ymm1,0x10(%rdx,%r9,4)      ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - roundF::round_scalar@20 (line 6)
  0x00007f527119f1f3:   add    $0x8,%r9d                    ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - roundF::round_scalar@21 (line 5)
  0x00007f527119f1f7:   nop
  0x00007f527119f1f8:   nop
  0x00007f527119f1f9:   nop
  0x00007f527119f1fa:   nop
  0x00007f527119f1fb:   nop
  0x00007f527119f1fc:   nop
  0x00007f527119f1fd:   nop
  0x00007f527119f1fe:   nop
  0x00007f527119f1ff:   nop
  0x00007f527119f200:   cmp    %r11d,%r9d
  0x00007f527119f203:   jl     0x00007f527119f18c           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - roundF::round_scalar@7 (line 5)
 ;; B22: #	out( B26 B23 ) <- in( B11 B21 B20 )  Freq: 0.99973
  0x00007f527119f205:   cmp    %ebx,%r9d
  0x00007f527119f208:   jge    0x00007f527119f249
 ;; B23: #	out( B35 B24 ) <- in( B22 )  Freq: 0.499865
  0x00007f527119f20a:   cmp    %r10d,%r9d
  0x00007f527119f20d:   jae    0x00007f527119f320
 ;; B24: #	out( B36 B25 ) <- in( B23 )  Freq: 0.499864
  0x00007f527119f213:   cmp    %r13d,%r9d
  0x00007f527119f216:   jae    0x00007f527119f334           ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - roundF::round_scalar@10 (line 6)
 ;; B25: #	out( B25 B26 ) <- in( B24 B25 ) Loop( B25-B25 inner post of N251) Freq: 0.999727
  0x00007f527119f21c:   vmovss 0x10(%rsi,%r9,4),%xmm1       ;*faload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - roundF::round_scalar@14 (line 6)
  0x00007f527119f223:   vcvtss2sd %xmm1,%xmm1,%xmm0
  0x00007f527119f227:   vsqrtsd %xmm0,%xmm0,%xmm0
  0x00007f527119f22b:   vcvttsd2si %xmm0,%r10d
  0x00007f527119f22f:   cmp    $0x80000000,%r10d
  0x00007f527119f236:   je     0x00007f527119f3b6
  0x00007f527119f23c:   mov    %r10d,0x10(%rdx,%r9,4)       ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - roundF::round_scalar@20 (line 6)
  0x00007f527119f241:   inc    %r9d                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - roundF::round_scalar@21 (line 5)
  0x00007f527119f244:   cmp    %ebx,%r9d
  0x00007f527119f247:   jl     0x00007f527119f21c
 ;; B26: #	out( B38 B27 ) <- in( B25 B22 B2 )  Freq: 0.999989
  0x00007f527119f249:   mov    0xc(%rdx),%r10d              ; implicit exception: dispatches to 0x00007f527119f374
 ;; B27: #	out( B29 B28 ) <- in( B26 )  Freq: 0.999988
  0x00007f527119f24d:   cmp    %r10d,%ecx
  0x00007f527119f250:   jae    0x00007f527119f269           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - roundF::round_scalar@7 (line 5)
 ;; B28: #	out( N1 ) <- in( B27 )  Freq: 0.999987
  0x00007f527119f252:   mov    0x10(%rdx,%rcx,4),%eax
  0x00007f527119f256:   vzeroupper 
  0x00007f527119f259:   add    $0x20,%rsp
  0x00007f527119f25d:   pop    %rbp
  0x00007f527119f25e:   cmp    0x28(%r15),%rsp              ;   {poll_return}
  0x00007f527119f262:   ja     0x00007f527119f3a0
  0x00007f527119f268:   retq   
 ;; B29: #	out( N1 ) <- in( B27 )  Freq: 1.01327e-06
  0x00007f527119f269:   mov    $0xffffffe4,%esi
  0x00007f527119f26e:   mov    %rdx,%rbp
  0x00007f527119f271:   mov    %ecx,(%rsp)
  0x00007f527119f274:   vzeroupper 
  0x00007f527119f277:   callq  0x00007f5271116ae0           ; ImmutableOopMap {rbp=Oop }
                                                            ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - roundF::round_scalar@29 (line 8)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f527119f27c:   nopl   0x1000474(%rax,%rax,1)       ;   {post_call_nop}
  0x00007f527119f284:   movabs $0x7f527aed6628,%rdi         ;   {external_word}
  0x00007f527119f28e:   and    $0xfffffffffffffff0,%rsp
  0x00007f527119f292:   callq  0x00007f527a4b1a60           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f527119f297:   hlt                                 ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - roundF::round_scalar@7 (line 5)
 ;; B30: #	out( N1 ) <- in( B7 B3 B4 B5 B6 )  Freq: 5.03851e-06
  0x00007f527119f298:   mov    %rsi,%rbp
  0x00007f527119f29b:   mov    %rdx,(%rsp)
  0x00007f527119f29f:   mov    %ecx,0x8(%rsp)
  0x00007f527119f2a3:   mov    $0xffffff6e,%esi
  0x00007f527119f2a8:   mov    %ebx,0xc(%rsp)
  0x00007f527119f2ac:   vzeroupper 
  0x00007f527119f2af:   callq  0x00007f5271116ae0           ; ImmutableOopMap {rbp=Oop [0]=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) roundF::round_scalar@7 (line 5)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f527119f2b4:   nopl   0x20004ac(%rax,%rax,1)       ;   {post_call_nop}
  0x00007f527119f2bc:   movabs $0x7f527aed6628,%rdi         ;   {external_word}
  0x00007f527119f2c6:   and    $0xfffffffffffffff0,%rsp
  0x00007f527119f2ca:   callq  0x00007f527a4b1a60           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f527119f2cf:   hlt                                 ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - roundF::round_scalar@7 (line 5)
 ;; B31: #	out( N1 ) <- in( B12 )  Freq: 1.01301e-06
  0x00007f527119f2d0:   movabs $0x7f527af9ec90,%rdi         ;   {external_word}
  0x00007f527119f2da:   and    $0xfffffffffffffff0,%rsp
  0x00007f527119f2de:   callq  0x00007f527a4b1a60           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f527119f2e3:   hlt    
 ;; B32: #	out( N1 ) <- in( B13 )  Freq: 1.01301e-06
  0x00007f527119f2e4:   movabs $0x7f527af9ec90,%rdi         ;   {external_word}
  0x00007f527119f2ee:   and    $0xfffffffffffffff0,%rsp
  0x00007f527119f2f2:   callq  0x00007f527a4b1a60           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f527119f2f7:   hlt    
 ;; B33: #	out( N1 ) <- in( B14 )  Freq: 1.01301e-06
  0x00007f527119f2f8:   movabs $0x7f527af9ec90,%rdi         ;   {external_word}
  0x00007f527119f302:   and    $0xfffffffffffffff0,%rsp
  0x00007f527119f306:   callq  0x00007f527a4b1a60           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f527119f30b:   hlt    
 ;; B34: #	out( N1 ) <- in( B15 )  Freq: 1.013e-06
  0x00007f527119f30c:   movabs $0x7f527af9ec90,%rdi         ;   {external_word}
  0x00007f527119f316:   and    $0xfffffffffffffff0,%rsp
  0x00007f527119f31a:   callq  0x00007f527a4b1a60           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f527119f31f:   hlt    
 ;; B35: #	out( N1 ) <- in( B23 )  Freq: 5.06502e-07
  0x00007f527119f320:   movabs $0x7f527af9ec90,%rdi         ;   {external_word}
  0x00007f527119f32a:   and    $0xfffffffffffffff0,%rsp
  0x00007f527119f32e:   callq  0x00007f527a4b1a60           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f527119f333:   hlt    
 ;; B36: #	out( N1 ) <- in( B24 )  Freq: 5.06502e-07
  0x00007f527119f334:   movabs $0x7f527af9ec90,%rdi         ;   {external_word}
  0x00007f527119f33e:   and    $0xfffffffffffffff0,%rsp
  0x00007f527119f342:   callq  0x00007f527a4b1a60           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f527119f347:   hlt    
 ;; B37: #	out( N1 ) <- in( B1 )  Freq: 1.01328e-06
  0x00007f527119f348:   mov    $0xfffffff6,%esi
  0x00007f527119f34d:   nop
  0x00007f527119f34e:   nop
  0x00007f527119f34f:   nop
  0x00007f527119f350:   vzeroupper 
  0x00007f527119f353:   callq  0x00007f5271116ae0           ; ImmutableOopMap {}
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - roundF::round_scalar@4 (line 5)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f527119f358:   nopl   0x3000550(%rax,%rax,1)       ;   {post_call_nop}
  0x00007f527119f360:   movabs $0x7f527aed6628,%rdi         ;   {external_word}
  0x00007f527119f36a:   and    $0xfffffffffffffff0,%rsp
  0x00007f527119f36e:   callq  0x00007f527a4b1a60           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f527119f373:   hlt    
 ;; B38: #	out( N1 ) <- in( B26 )  Freq: 1.01327e-06
  0x00007f527119f374:   mov    $0xfffffff6,%esi
  0x00007f527119f379:   mov    %ecx,%ebp
  0x00007f527119f37b:   nop
  0x00007f527119f37c:   vzeroupper 
  0x00007f527119f37f:   callq  0x00007f5271116ae0           ; ImmutableOopMap {}
                                                            ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - roundF::round_scalar@29 (line 8)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f527119f384:   nopl   0x400057c(%rax,%rax,1)       ;   {post_call_nop}
  0x00007f527119f38c:   movabs $0x7f527aed6628,%rdi         ;   {external_word}
  0x00007f527119f396:   and    $0xfffffffffffffff0,%rsp
  0x00007f527119f39a:   callq  0x00007f527a4b1a60           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f527119f39f:   hlt                                 ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - roundF::round_scalar@7 (line 5)
  0x00007f527119f3a0:   movabs $0x7f527119f25e,%r10         ;   {internal_word}
  0x00007f527119f3aa:   mov    %r10,0x498(%r15)
  0x00007f527119f3b1:   jmpq   0x00007f5271120760           ;   {runtime_call SafepointBlob}
  0x00007f527119f3b6:   sub    $0x8,%rsp
  0x00007f527119f3ba:   vmovsd %xmm0,(%rsp)
  0x00007f527119f3bf:   callq  Stub::d2i_fixup              ;   {runtime_call Stub::d2i_fixup}
  0x00007f527119f3c4:   pop    %r10
  0x00007f527119f3c6:   jmpq   0x00007f527119f23c
  0x00007f527119f3cb:   sub    $0x8,%rsp
  0x00007f527119f3cf:   vmovsd %xmm0,(%rsp)
  0x00007f527119f3d4:   callq  Stub::d2i_fixup              ;   {runtime_call Stub::d2i_fixup}
  0x00007f527119f3d9:   pop    %r8
  0x00007f527119f3db:   jmpq   0x00007f527119f014
  0x00007f527119f3e0:   callq  Stub::method_entry_barrier   ;   {runtime_call Stub::method_entry_barrier}
  0x00007f527119f3e5:   jmpq   0x00007f527119ef7a
  0x00007f527119f3ea:   hlt    
  0x00007f527119f3eb:   hlt    
  0x00007f527119f3ec:   hlt    
  0x00007f527119f3ed:   hlt    
  0x00007f527119f3ee:   hlt    
  0x00007f527119f3ef:   hlt    
[Exception Handler]
  0x00007f527119f3f0:   jmpq   0x00007f5271120c60           ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x00007f527119f3f5:   callq  0x00007f527119f3fa
  0x00007f527119f3fa:   subq   $0x5,(%rsp)
  0x00007f527119f3ff:   jmpq   0x00007f527111eea0           ;   {runtime_call DeoptimizationBlob}
  0x00007f527119f404:   hlt    
  0x00007f527119f405:   hlt    
  0x00007f527119f406:   hlt    
  0x00007f527119f407:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Oops:
  0x00007f527119f408:   0x000000011f45e5b8 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x000000011f45e5b8}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Metadata:
  0x00007f527119f410:   0x00007f522460c4f0 {method} {0x00007f522460c4f0} 'round_scalar' '([F[II)I' in 'roundF'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
pc-bytecode offsets:
PcDesc(pc=0x00007f527119ef5f offset=ffffffff bits=0):
PcDesc(pc=0x00007f527119ef7a offset=1a bits=0):
   roundF::round_scalar@-1 (line 5)
PcDesc(pc=0x00007f527119ef7e offset=1e bits=0):
   roundF::round_scalar@4 (line 5)
PcDesc(pc=0x00007f527119ef8a offset=2a bits=0):
   roundF::round_scalar@7 (line 5)
PcDesc(pc=0x00007f527119efad offset=4d bits=0):
   roundF::round_scalar@20 (line 6)
PcDesc(pc=0x00007f527119eff5 offset=95 bits=0):
   roundF::round_scalar@10 (line 6)
PcDesc(pc=0x00007f527119effb offset=9b bits=0):
   roundF::round_scalar@14 (line 6)
PcDesc(pc=0x00007f527119f019 offset=b9 bits=0):
   roundF::round_scalar@20 (line 6)
PcDesc(pc=0x00007f527119f025 offset=c5 bits=0):
   roundF::round_scalar@7 (line 5)
PcDesc(pc=0x00007f527119f090 offset=130 bits=0):
   roundF::round_scalar@10 (line 6)
PcDesc(pc=0x00007f527119f09e offset=13e bits=0):
   roundF::round_scalar@14 (line 6)
PcDesc(pc=0x00007f527119f15e offset=1fe bits=0):
   roundF::round_scalar@20 (line 6)
PcDesc(pc=0x00007f527119f162 offset=202 bits=0):
   roundF::round_scalar@21 (line 5)
PcDesc(pc=0x00007f527119f16b offset=20b bits=0):
   roundF::round_scalar@24 (line 5)
PcDesc(pc=0x00007f527119f16f offset=20f bits=1):
   roundF::round_scalar@24 (line 5)  reexecute=true
   Locals
    - l0: reg rsi [12],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],int
    - l3: reg r9 [18],int
PcDesc(pc=0x00007f527119f171 offset=211 bits=0):
   roundF::round_scalar@24 (line 5)
PcDesc(pc=0x00007f527119f18c offset=22c bits=0):
   roundF::round_scalar@10 (line 6)
PcDesc(pc=0x00007f527119f193 offset=233 bits=0):
   roundF::round_scalar@14 (line 6)
PcDesc(pc=0x00007f527119f1f3 offset=293 bits=0):
   roundF::round_scalar@20 (line 6)
PcDesc(pc=0x00007f527119f1f7 offset=297 bits=0):
   roundF::round_scalar@21 (line 5)
PcDesc(pc=0x00007f527119f205 offset=2a5 bits=0):
   roundF::round_scalar@7 (line 5)
PcDesc(pc=0x00007f527119f21c offset=2bc bits=0):
   roundF::round_scalar@10 (line 6)
PcDesc(pc=0x00007f527119f223 offset=2c3 bits=0):
   roundF::round_scalar@14 (line 6)
PcDesc(pc=0x00007f527119f241 offset=2e1 bits=0):
   roundF::round_scalar@20 (line 6)
PcDesc(pc=0x00007f527119f244 offset=2e4 bits=0):
   roundF::round_scalar@21 (line 5)
PcDesc(pc=0x00007f527119f252 offset=2f2 bits=0):
   roundF::round_scalar@7 (line 5)
PcDesc(pc=0x00007f527119f27c offset=31c bits=0):
   roundF::round_scalar@29 (line 8)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: reg rbp [10],oop
    - @1: stack[0]
PcDesc(pc=0x00007f527119f298 offset=338 bits=0):
   roundF::round_scalar@7 (line 5)
PcDesc(pc=0x00007f527119f2b4 offset=354 bits=1):
   roundF::round_scalar@7 (line 5)  reexecute=true
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8]
    - l3: 0
   Expression stack
    - @0: 0
    - @1: stack[12]
PcDesc(pc=0x00007f527119f2d0 offset=370 bits=0):
   roundF::round_scalar@7 (line 5)
PcDesc(pc=0x00007f527119f358 offset=3f8 bits=0):
   roundF::round_scalar@4 (line 5)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: empty
    - @1: null
PcDesc(pc=0x00007f527119f384 offset=424 bits=0):
   roundF::round_scalar@29 (line 8)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: null
    - @1: reg rbp [10],int
PcDesc(pc=0x00007f527119f3a0 offset=440 bits=0):
   roundF::round_scalar@7 (line 5)
PcDesc(pc=0x00007f527119f409 offset=4a9 bits=0):
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
oop maps:ImmutableOopMapSet contains 5 OopMaps

ImmutableOopMap {rdx=Oop rsi=Oop } pc offsets: 527 
ImmutableOopMap {rbp=Oop } pc offsets: 796 
ImmutableOopMap {rbp=Oop [0]=Oop } pc offsets: 852 
ImmutableOopMap {} pc offsets: 1016 1060 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
scopes:
ScopeDesc(pc=0x00007f527119ef7a offset=1a):
   roundF::round_scalar@-1 (line 5)
ScopeDesc(pc=0x00007f527119ef7e offset=1e):
   roundF::round_scalar@4 (line 5)
ScopeDesc(pc=0x00007f527119ef8a offset=2a):
   roundF::round_scalar@7 (line 5)
ScopeDesc(pc=0x00007f527119efad offset=4d):
   roundF::round_scalar@20 (line 6)
ScopeDesc(pc=0x00007f527119eff5 offset=95):
   roundF::round_scalar@10 (line 6)
ScopeDesc(pc=0x00007f527119effb offset=9b):
   roundF::round_scalar@14 (line 6)
ScopeDesc(pc=0x00007f527119f019 offset=b9):
   roundF::round_scalar@20 (line 6)
ScopeDesc(pc=0x00007f527119f025 offset=c5):
   roundF::round_scalar@7 (line 5)
ScopeDesc(pc=0x00007f527119f090 offset=130):
   roundF::round_scalar@10 (line 6)
ScopeDesc(pc=0x00007f527119f09e offset=13e):
   roundF::round_scalar@14 (line 6)
ScopeDesc(pc=0x00007f527119f15e offset=1fe):
   roundF::round_scalar@20 (line 6)
ScopeDesc(pc=0x00007f527119f162 offset=202):
   roundF::round_scalar@21 (line 5)
ScopeDesc(pc=0x00007f527119f16b offset=20b):
   roundF::round_scalar@24 (line 5)
ScopeDesc(pc=0x00007f527119f16f offset=20f):
   roundF::round_scalar@24 (line 5)  reexecute=true
   Locals
    - l0: reg rsi [12],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],int
    - l3: reg r9 [18],int
ScopeDesc(pc=0x00007f527119f171 offset=211):
   roundF::round_scalar@24 (line 5)
ScopeDesc(pc=0x00007f527119f18c offset=22c):
   roundF::round_scalar@10 (line 6)
ScopeDesc(pc=0x00007f527119f193 offset=233):
   roundF::round_scalar@14 (line 6)
ScopeDesc(pc=0x00007f527119f1f3 offset=293):
   roundF::round_scalar@20 (line 6)
ScopeDesc(pc=0x00007f527119f1f7 offset=297):
   roundF::round_scalar@21 (line 5)
ScopeDesc(pc=0x00007f527119f205 offset=2a5):
   roundF::round_scalar@7 (line 5)
ScopeDesc(pc=0x00007f527119f21c offset=2bc):
   roundF::round_scalar@10 (line 6)
ScopeDesc(pc=0x00007f527119f223 offset=2c3):
   roundF::round_scalar@14 (line 6)
ScopeDesc(pc=0x00007f527119f241 offset=2e1):
   roundF::round_scalar@20 (line 6)
ScopeDesc(pc=0x00007f527119f244 offset=2e4):
   roundF::round_scalar@21 (line 5)
ScopeDesc(pc=0x00007f527119f252 offset=2f2):
   roundF::round_scalar@7 (line 5)
ScopeDesc(pc=0x00007f527119f27c offset=31c):
   roundF::round_scalar@29 (line 8)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: reg rbp [10],oop
    - @1: stack[0]
ScopeDesc(pc=0x00007f527119f298 offset=338):
   roundF::round_scalar@7 (line 5)
ScopeDesc(pc=0x00007f527119f2b4 offset=354):
   roundF::round_scalar@7 (line 5)  reexecute=true
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8]
    - l3: 0
   Expression stack
    - @0: 0
    - @1: stack[12]
ScopeDesc(pc=0x00007f527119f2d0 offset=370):
   roundF::round_scalar@7 (line 5)
ScopeDesc(pc=0x00007f527119f358 offset=3f8):
   roundF::round_scalar@4 (line 5)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: empty
    - @1: null
ScopeDesc(pc=0x00007f527119f384 offset=424):
   roundF::round_scalar@29 (line 8)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: null
    - @1: reg rbp [10],int
ScopeDesc(pc=0x00007f527119f3a0 offset=440):
   roundF::round_scalar@7 (line 5)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
relocations:
         @0x00007f527119eee8: 00ff
relocInfo@0x00007f527119eee8 [type=0(none) addr=0x00007f527119f05f offset=255]
         @0x00007f527119eeea: 7834395d
relocInfo@0x00007f527119eeec [type=7(external_word) addr=0x00007f527119f0bc offset=93 format=1 data=52] | [target=0x00007f5271121c20]
         @0x00007f527119eeee: 78343954
relocInfo@0x00007f527119eef0 [type=7(external_word) addr=0x00007f527119f110 offset=84 format=1 data=52] | [target=0x00007f5271121c20]
         @0x00007f527119eef2: 505f
relocInfo@0x00007f527119eef2 [type=10(poll) addr=0x00007f527119f16f offset=95]
         @0x00007f527119eef4: 78343936
relocInfo@0x00007f527119eef6 [type=7(external_word) addr=0x00007f527119f1a5 offset=54 format=1 data=52] | [target=0x00007f5271121c20]
         @0x00007f527119eef8: 58b9
relocInfo@0x00007f527119eef8 [type=11(poll_return) addr=0x00007f527119f25e offset=185]
         @0x00007f527119eefa: 3119
relocInfo@0x00007f527119eefa [type=6(runtime_call) addr=0x00007f527119f277 offset=25 format=1] | [destination=0x00007f5271116ae0] UncommonTrapBlob
         @0x00007f527119eefc: 8005
relocInfo@0x00007f527119eefc [type=16(post_call_nop) addr=0x00007f527119f27c offset=5]
         @0x00007f527119eefe: 78173808
relocInfo@0x00007f527119ef00 [type=7(external_word) addr=0x00007f527119f284 offset=8 data=23] | [target=0x00007f527aed6628]
         @0x00007f527119ef02: 310e
relocInfo@0x00007f527119ef02 [type=6(runtime_call) addr=0x00007f527119f292 offset=14 format=1] | [destination=0x00007f527a4b1a60] MacroAssembler::debug64(char*, long, long*)
         @0x00007f527119ef04: 311d
relocInfo@0x00007f527119ef04 [type=6(runtime_call) addr=0x00007f527119f2af offset=29 format=1] | [destination=0x00007f5271116ae0] UncommonTrapBlob
         @0x00007f527119ef06: 8005
relocInfo@0x00007f527119ef06 [type=16(post_call_nop) addr=0x00007f527119f2b4 offset=5]
         @0x00007f527119ef08: 78173808
relocInfo@0x00007f527119ef0a [type=7(external_word) addr=0x00007f527119f2bc offset=8 data=23] | [target=0x00007f527aed6628]
         @0x00007f527119ef0c: 310e
relocInfo@0x00007f527119ef0c [type=6(runtime_call) addr=0x00007f527119f2ca offset=14 format=1] | [destination=0x00007f527a4b1a60] MacroAssembler::debug64(char*, long, long*)
         @0x00007f527119ef0e: 78193806
relocInfo@0x00007f527119ef10 [type=7(external_word) addr=0x00007f527119f2d0 offset=6 data=25] | [target=0x00007f527af9ec90]
         @0x00007f527119ef12: 310e
relocInfo@0x00007f527119ef12 [type=6(runtime_call) addr=0x00007f527119f2de offset=14 format=1] | [destination=0x00007f527a4b1a60] MacroAssembler::debug64(char*, long, long*)
         @0x00007f527119ef14: 78193806
relocInfo@0x00007f527119ef16 [type=7(external_word) addr=0x00007f527119f2e4 offset=6 data=25] | [target=0x00007f527af9ec90]
         @0x00007f527119ef18: 310e
relocInfo@0x00007f527119ef18 [type=6(runtime_call) addr=0x00007f527119f2f2 offset=14 format=1] | [destination=0x00007f527a4b1a60] MacroAssembler::debug64(char*, long, long*)
         @0x00007f527119ef1a: 78193806
relocInfo@0x00007f527119ef1c [type=7(external_word) addr=0x00007f527119f2f8 offset=6 data=25] | [target=0x00007f527af9ec90]
         @0x00007f527119ef1e: 310e
relocInfo@0x00007f527119ef1e [type=6(runtime_call) addr=0x00007f527119f306 offset=14 format=1] | [destination=0x00007f527a4b1a60] MacroAssembler::debug64(char*, long, long*)
         @0x00007f527119ef20: 78193806
relocInfo@0x00007f527119ef22 [type=7(external_word) addr=0x00007f527119f30c offset=6 data=25] | [target=0x00007f527af9ec90]
         @0x00007f527119ef24: 310e
relocInfo@0x00007f527119ef24 [type=6(runtime_call) addr=0x00007f527119f31a offset=14 format=1] | [destination=0x00007f527a4b1a60] MacroAssembler::debug64(char*, long, long*)
         @0x00007f527119ef26: 78193806
relocInfo@0x00007f527119ef28 [type=7(external_word) addr=0x00007f527119f320 offset=6 data=25] | [target=0x00007f527af9ec90]
         @0x00007f527119ef2a: 310e
relocInfo@0x00007f527119ef2a [type=6(runtime_call) addr=0x00007f527119f32e offset=14 format=1] | [destination=0x00007f527a4b1a60] MacroAssembler::debug64(char*, long, long*)
         @0x00007f527119ef2c: 78193806
relocInfo@0x00007f527119ef2e [type=7(external_word) addr=0x00007f527119f334 offset=6 data=25] | [target=0x00007f527af9ec90]
         @0x00007f527119ef30: 310e
relocInfo@0x00007f527119ef30 [type=6(runtime_call) addr=0x00007f527119f342 offset=14 format=1] | [destination=0x00007f527a4b1a60] MacroAssembler::debug64(char*, long, long*)
         @0x00007f527119ef32: 3111
relocInfo@0x00007f527119ef32 [type=6(runtime_call) addr=0x00007f527119f353 offset=17 format=1] | [destination=0x00007f5271116ae0] UncommonTrapBlob
         @0x00007f527119ef34: 8005
relocInfo@0x00007f527119ef34 [type=16(post_call_nop) addr=0x00007f527119f358 offset=5]
         @0x00007f527119ef36: 78173808
relocInfo@0x00007f527119ef38 [type=7(external_word) addr=0x00007f527119f360 offset=8 data=23] | [target=0x00007f527aed6628]
         @0x00007f527119ef3a: 310e
relocInfo@0x00007f527119ef3a [type=6(runtime_call) addr=0x00007f527119f36e offset=14 format=1] | [destination=0x00007f527a4b1a60] MacroAssembler::debug64(char*, long, long*)
         @0x00007f527119ef3c: 3111
relocInfo@0x00007f527119ef3c [type=6(runtime_call) addr=0x00007f527119f37f offset=17 format=1] | [destination=0x00007f5271116ae0] UncommonTrapBlob
         @0x00007f527119ef3e: 8005
relocInfo@0x00007f527119ef3e [type=16(post_call_nop) addr=0x00007f527119f384 offset=5]
         @0x00007f527119ef40: 78173808
relocInfo@0x00007f527119ef42 [type=7(external_word) addr=0x00007f527119f38c offset=8 data=23] | [target=0x00007f527aed6628]
         @0x00007f527119ef44: 310e
relocInfo@0x00007f527119ef44 [type=6(runtime_call) addr=0x00007f527119f39a offset=14 format=1] | [destination=0x00007f527a4b1a60] MacroAssembler::debug64(char*, long, long*)
         @0x00007f527119ef46: 79424006
relocInfo@0x00007f527119ef48 [type=8(internal_word) addr=0x00007f527119f3a0 offset=6 data=322] | [target=0x00007f527119f25e]
         @0x00007f527119ef4a: 3111
relocInfo@0x00007f527119ef4a [type=6(runtime_call) addr=0x00007f527119f3b1 offset=17 format=1] | [destination=0x00007f5271120760] SafepointBlob
         @0x00007f527119ef4c: 310e
relocInfo@0x00007f527119ef4c [type=6(runtime_call) addr=0x00007f527119f3bf offset=14 format=1] | [destination=0x00007f5271000f77] Stub::d2i_fixup
         @0x00007f527119ef4e: 3115
relocInfo@0x00007f527119ef4e [type=6(runtime_call) addr=0x00007f527119f3d4 offset=21 format=1] | [destination=0x00007f5271000f77] Stub::d2i_fixup
         @0x00007f527119ef50: 310c
relocInfo@0x00007f527119ef50 [type=6(runtime_call) addr=0x00007f527119f3e0 offset=12 format=1] | [destination=0x00007f527107e0a0] Stub::method_entry_barrier
         @0x00007f527119ef52: 0010
relocInfo@0x00007f527119ef52 [type=0(none) addr=0x00007f527119f3f0 offset=16]
         @0x00007f527119ef54: 3100
relocInfo@0x00007f527119ef54 [type=6(runtime_call) addr=0x00007f527119f3f0 offset=0 format=1] | [destination=0x00007f5271120c60] ExceptionBlob
         @0x00007f527119ef56: 310f
relocInfo@0x00007f527119ef56 [type=6(runtime_call) addr=0x00007f527119f3ff offset=15 format=1] | [destination=0x00007f527111eea0] DeoptimizationBlob
         @0x00007f527119ef58: 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Dependencies:
Dependency of type evol_method
  method  = *{method} {0x00007f522460c4f0} 'round_scalar' '([F[II)I' in 'roundF'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ExceptionHandlerTable (size = 0 bytes)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ImplicitExceptionTable (size = 3 entries, 28 bytes):
{
   < 0x00007f527119ef7a, 0x00007f527119f348 > < 0x00007f527119efa9, 0x00007f527119f298 > < 0x00007f527119f249, 0x00007f527119f374 > 
}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded oops:
#0: 0x0000000000000000 nullptr-oop
#1: 0x000000011f45e5b8 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x000000011f45e5b8}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded metadata:
#0: 0x0000000000000000 nullptr-oop
#1: 0x00007f522460c4f0 {method} {0x00007f522460c4f0} 'round_scalar' '([F[II)I' in 'roundF'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
[Time Scalar] 2219 ms  [Res] 0
a[0] = 0.5000000596 r[0] = 0
a[1] = 0.5000000596 r[1] = 0
a[2] = 0.5000000596 r[2] = 0
a[3] = 0.5000000596 r[3] = 0
a[4] = 0.5000000596 r[4] = 0
a[5] = 0.5000000596 r[5] = 0
a[6] = 0.5000000596 r[6] = 0
a[7] = 0.5000000596 r[7] = 0
a[8] = 0.5000000596 r[8] = 0
a[9] = 0.5000000596 r[9] = 0
a[10] = 0.5000000596 r[10] = 0
a[11] = 0.5000000596 r[11] = 0
a[12] = 0.5000000596 r[12] = 0
a[13] = 0.5000000596 r[13] = 0
a[14] = 0.5000000596 r[14] = 0
a[15] = 0.5000000596 r[15] = 0
a[16] = 0.5000000596 r[16] = 0
a[17] = 0.5000000596 r[17] = 0
------------------------------------------------------------------------
static roundF::round_scalar([F[II)I
  interpreter_invocation_count:           6
  invocation_counter:                     6
  backedge_counter:                   20480
  decompile_count:                        0
  mdo size: 504 bytes

   0 iconst_0
   1 istore_3
   2 iload_3
   3 fast_aload_0
   4 arraylength
   5 iconst_1
   6 isub
   7 if_icmpge 27
  0    bci: 7    BranchData         taken(4) displacement(72)
                                    not taken(15360)
  10 aload_1
  11 iload_3
  12 fast_aload_0
  13 iload_3
  14 faload
  15 f2d
  16 invokestatic 7 <java/lang/Math.sqrt(D)D> 
  32   bci: 16   CounterData        count(15360)
  19 d2i
  20 iastore
  21 iinc #3 1
  24 goto 2
  48   bci: 24   JumpData           taken(15360) displacement(-48)
  27 aload_1
  28 iload_2
  29 iaload
  30 ireturn
------------------------------------------------------------------------
Total MDO size: 504 bytes
