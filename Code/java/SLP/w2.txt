CompileCommand: print bytereverse.workload2_vector bool print = true
Warmup complete
Measurement complete
r[0] = -973036125
r[1] = 265357138
r[2] = 1738579930
r[3] = 1119837421
r[4] = -169723489
r[5] = -1698086670
r[6] = -886575462
r[7] = -2037483525
[Time Scalar] 641 ms [Res] 983040000
Warmup complete
Measurement complete
r[0] = -973036125
r[1] = 265357138
r[2] = 1738579930
r[3] = 1119837421
r[4] = -169723489
r[5] = -1698086670
r[6] = -886575462
r[7] = -2037483525
[Time Vector Premute] 6659 ms [Res] 983040000

============================= C2-compiled nmethod ==============================
----------------------- MetaData before Compile_id = 1239 ------------------------
{method}
 - this oop:          0x00007fb304411d58
 - method holder:     'bytereverse'
 - constants:         0x00007fb3044110f0 constant pool [230]/operands[20] {0x00007fb3044110f0} for 'bytereverse' cache=0x00007fb304700000
 - access:            0xc1000009  public static 
 - name:              'workload2_vector'
 - signature:         '([I[II)I'
 - max stack:         5
 - max locals:        9
 - size of params:    3
 - method size:       13
 - vtable index:      -2
 - i2i entry:         0x00007fb36900dc00
 - adapters:          AHE@0x00007fb3783aa290: 0xbba i2c: 0x00007fb3690a8360 c2i: 0x00007fb3690a8447 c2iUV: 0x00007fb3690a8411 c2iNCI: 0x00007fb3690a8484
 - compiled entry     0x00007fb3690a8447
 - code size:         153
 - code start:        0x00007fb304411ca0
 - code end (excl):   0x00007fb304411d39
 - method data:       0x00007fb304701598
 - checked ex length: 0
 - linenumber start:  0x00007fb304411d39
 - localvar length:   0

------------------------ OptoAssembly for Compile_id = 1239 -----------------------
#
#  int ( rawptr:BotPTR )
#
#r018 rsi:rsi   : parm 0: rawptr:BotPTR
# -- Old rsp -- Framesize: 96 --
#r591 rsp+92: in_preserve
#r590 rsp+88: return address
#r589 rsp+84: in_preserve
#r588 rsp+80: saved fp register
#r587 rsp+76: pad2, stack alignment
#r586 rsp+72: pad2, stack alignment
#r585 rsp+68: Fixed slot 1
#r584 rsp+64: Fixed slot 0
#r607 rsp+60: spill
#r606 rsp+56: spill
#r605 rsp+52: spill
#r604 rsp+48: spill
#r603 rsp+44: spill
#r602 rsp+40: spill
#r601 rsp+36: spill
#r600 rsp+32: spill
#r599 rsp+28: spill
#r598 rsp+24: spill
#r597 rsp+20: spill
#r596 rsp+16: spill
#r595 rsp+12: spill
#r594 rsp+ 8: spill
#r593 rsp+ 4: spill
#r592 rsp+ 0: spill
#
000     N225: #	out( B1 ) <- BLOCK HEAD IS JUNK  Freq: 1
000     # breakpoint
        nop 	# 11 bytes pad for loops and calls

010     B1: #	out( B20 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
010     # stack bang (528 bytes)
	pushq   rbp	# Save rbp
	subq    rsp, #80	# Create frame

01c     movq    RBP, [RSI + #64 (8-bit)]	# ptr
020     movq    R13, [RSI + #56 (8-bit)]	# ptr
024     movl    RBX, [RSI + #40 (8-bit)]	# int
027     movq    RDI, RSI	# spill
02a     call_leaf,runtime  OSR_migration_end
        No JVM State Info
        # 
        nop 	# 6 bytes pad for loops and calls
040     testq   RBP, RBP	# ptr
043     je     B20  P=0.001000 C=-1.000000

049     B2: #	out( B23 B3 ) <- in( B1 )  Freq: 0.999
049     movl    R11, [RBP + #8 (8-bit)]	# compressed klass ptr
04d     cmpl    R11, narrowklass: precise [int: :Constant:exact *	# compressed klass ptr
054     jne,u   B23  P=0.000001 C=-1.000000

05a     B3: #	out( B4 ) <- in( B2 )  Freq: 0.998999
05a     movq    R8, RBP	# spill
05d     # checkcastPP of R8

05d     B4: #	out( B21 B5 ) <- in( B3 B20 )  Freq: 0.999999
        nop 	# 3 bytes pad for loops and calls
060     testq   R13, R13	# ptr
063     je     B21  P=0.001000 C=-1.000000

069     B5: #	out( B23 B6 ) <- in( B4 )  Freq: 0.998999
069     movl    R10, [R13 + #8 (8-bit)]	# compressed klass ptr
06d     cmpl    R10, narrowklass: precise [int: :Constant:exact *	# compressed klass ptr
074     jne,u   B23  P=0.000001 C=-1.000000

07a     B6: #	out( B7 ) <- in( B5 )  Freq: 0.998998
07a     # checkcastPP of R13

07a     B7: #	out( B22 B8 ) <- in( B6 B21 )  Freq: 0.999998
        nop 	# 6 bytes pad for loops and calls
080     movl    R9, [R8 + #12 (8-bit)]	# range
084     NullCheck R8

084     B8: #	out( B22 B9 ) <- in( B7 )  Freq: 0.999997
084     addl    R9, #-7	# int
088     testl   R9, R9
08b     jl     B22  P=0.000001 C=-1.000000

091     B9: #	out( B22 B10 ) <- in( B8 )  Freq: 0.999996
091     movl    RDI, [R13 + #12 (8-bit)]	# range
095     NullCheck R13

095     B10: #	out( B22 B11 ) <- in( B9 )  Freq: 0.999995
095     addl    RDI, #-7	# int
098     testl   RDI, RDI
        nop 	# 6 bytes pad for loops and calls
0a0     jl     B22  P=0.000001 C=-1.000000

0a6     B11: #	out( B13 ) <- in( B10 )  Freq: 0.999994
0a6     # TLS is in R15
0a6     movq    R10, java/lang/Class:exact *	# ptr
0b0     replicateI XMM0,[R10 + #148 (32-bit)]
0b9     movl    RBP, [R10 + #120 (8-bit)]	# int ! Field: bytereverse.LEN
0bd     replicateI XMM1,[R10 + #152 (32-bit)]
0c6     movl    R11, RBP	# spill
0c9     andl    R11, #-8	# int
0cd     jmp,s   B13
        nop 	# 1 bytes pad for loops and calls

0d0     B12: #	out( B13 ) <- in( B15 ) top-of-loop Freq: 1023.68
0d0     store_vector [R13 + #16 + RBX << #2],XMM2
	
0d7     movq    R10, [R15 + #912 (32-bit)]	# ptr
0de     addl    RBX, #8	# int
0e1     testl   rax, [R10]	# Safepoint: poll for GC        # bytereverse::workload2_vector @ bci:126 (line 56) L[0]=R8 L[1]=R13 L[2]=_ L[3]=RBX L[4]=_ L[5]=_ L[6]=_ L[7]=_ L[8]=_
        # OopMap {r8=Oop r13=Oop off=225/0xe1}

0e4     B13: #	out( B17 B14 ) <- in( B11 B12 ) Loop( B13-B12 inner ) Freq: 1024.68
0e4     cmpl    RBX, R11
0e7     jge     B17  P=0.000974 C=41072.000000

0ed     B14: #	out( B19 B15 ) <- in( B13 )  Freq: 1023.69
0ed     cmpl    RBX, R9	# unsigned
0f0     jnb,u   B19  P=0.000001 C=-1.000000

0f6     B15: #	out( B12 B16 ) <- in( B14 )  Freq: 1023.68
0f6     # castII of RBX
0f6     load_vector XMM2,[R8 + #16 + RBX << #2]
0fd     vprotate_imm8 XMM2,XMM2,#16	! vector rotate
104     vpand   XMM3,XMM2,XMM0	! and vectors
108     vpand   XMM2,XMM2,XMM1	! and vectors
10c     vshiftd_imm  XMM3,XMM3,#8	! shift packedI
111     vshiftd_imm  XMM2,XMM2,#8	! shift packedI
116     vpor    XMM2,XMM3,XMM2	! or vectors
11a     cmpl    RBX, RDI	# unsigned
        nop 	# 4 bytes pad for loops and calls
120     jb,us  B12  P=0.999999 C=-1.000000

122     B16: #	out( N225 ) <- in( B15 )  Freq: 0.00103728
122     movl    RSI, #-28	# int
127     movq    RBP, R8	# spill
12a     movq    [rsp + #16], R13	# spill
12f     movl    [rsp + #12], RBX	# spill
133     movl    [rsp + #24], RDI	# spill
137     vmovdqu [rsp + 32],XMM2	# spill
        nop 	# 3 bytes pad for loops and calls
140     call,static  wrapper for: uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')
        # java.util.Objects::checkIndex @ bci:3 (line 359) L[0]=_ L[1]=_ STK[0]=rsp + #12 STK[1]=rsp + #24 STK[2]=#NULL
        # jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize @ bci:43 (line 52) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.IntVector::intoArray @ bci:7 (line 3163) L[0]=#ScObj0 L[1]=rsp + #16 L[2]=_ L[3]=_
        # ScObj0 jdk/incubator/vector/Int256Vector={ [payload :0]=rsp + #32 }
        # bytereverse::workload2_vector @ bci:112 (line 73) L[0]=RBP L[1]=rsp + #16 L[2]=_ L[3]=rsp + #12 L[4]=_ L[5]=_ L[6]=_ L[7]=_ L[8]=_
        # OopMap {rbp=Oop [16]=Oop off=328/0x148}
148     stop	# ShouldNotReachHere

15c     B17: #	out( B24 B18 ) <- in( B13 )  Freq: 0.997919
        nop 	# 4 bytes pad for loops and calls
160     cmpl    RBX, RBP
162     jl     B24  P=0.000000 C=40.000000

168     B18: #	out( N225 ) <- in( B17 )  Freq: 0.997919
168     movl    RAX, RBX	# spill
16a     vzeroupper
	addq    rsp, 80	# Destroy frame
	popq    rbp
	cmpq     rsp, poll_offset[r15_thread] 
	ja       #safepoint_stub	# Safepoint: poll for GC

17f     ret

180     B19: #	out( N225 ) <- in( B14 )  Freq: 0.00103728
180     movl    RSI, #-28	# int
185     movq    [rsp + #0], R13	# spill
189     movq    [rsp + #16], R8	# spill
18e     movl    [rsp + #12], RBX	# spill
192     movl    [rsp + #24], R9	# spill
        nop 	# 1 bytes pad for loops and calls
198     call,static  wrapper for: uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')
        # java.util.Objects::checkIndex @ bci:3 (line 359) L[0]=_ L[1]=_ STK[0]=rsp + #12 STK[1]=rsp + #24 STK[2]=#NULL
        # jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize @ bci:43 (line 52) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.IntVector::fromArray @ bci:9 (line 2894) L[0]=#Ptr0x00007fb2ac0e57b0 L[1]=rsp + #16 L[2]=_ L[3]=_
        # bytereverse::workload2_vector @ bci:25 (line 57) L[0]=rsp + #16 L[1]=rsp + #0 L[2]=_ L[3]=rsp + #12 L[4]=_ L[5]=_ L[6]=_ L[7]=_ L[8]=_
        # OopMap {[0]=Oop [16]=Oop off=416/0x1a0}
1a0     stop	# ShouldNotReachHere

1b4     B20: #	out( B4 ) <- in( B1 )  Freq: 0.000999987
1b4     xorl    R8, R8	# ptr
1b7     jmp     B4

1bc     B21: #	out( B7 ) <- in( B4 )  Freq: 0.000999986
1bc     xorl    R13, R13	# ptr
        nop 	# 1 bytes pad for loops and calls
1c0     jmp     B7

1c5     B22: #	out( N225 ) <- in( B10 B7 B8 B9 )  Freq: 4.02654e-06
1c5     movl    RSI, #-66	# int
1ca     movq    RBP, R8	# spill
1cd     movq    [rsp + #0], R13	# spill
1d1     movl    [rsp + #8], RBX	# spill
        nop 	# 3 bytes pad for loops and calls
1d8     call,static  wrapper for: uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')
        # bytereverse::workload2_vector @ bci:5 (line 56) L[0]=RBP L[1]=rsp + #0 L[2]=_ L[3]=rsp + #8 L[4]=_ L[5]=_ L[6]=_ L[7]=_ L[8]=_
        # OopMap {rbp=Oop [0]=Oop off=480/0x1e0}
1e0     stop	# ShouldNotReachHere

1f4     B23: #	out( N225 ) <- in( B2 B5 )  Freq: 1.998e-06
1f4     movl    RSI, #-115	# int
1f9     movq    [rsp + #0], R13	# spill
1fd     movl    [rsp + #8], RBX	# spill
        nop 	# 3 bytes pad for loops and calls
204     call,static  wrapper for: uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')
        # bytereverse::workload2_vector @ bci:5 (line 56) L[0]=RBP L[1]=rsp + #0 L[2]=_ L[3]=rsp + #8 L[4]=_ L[5]=_ L[6]=_ L[7]=_ L[8]=_
        # OopMap {rbp=Oop [0]=Oop off=524/0x20c}
20c     stop	# ShouldNotReachHere

220     B24: #	out( N225 ) <- in( B17 )  Freq: 4.75845e-07
220     movl    RSI, #-187	# int
225     movq    [rsp + #0], R8	# spill
229     movq    [rsp + #8], R13	# spill
22e     movl    [rsp + #20], RBX	# spill
        nop 	# 2 bytes pad for loops and calls
234     call,static  wrapper for: uncommon_trap(reason='unstable_if' action='reinterpret' debug_id='0')
        # bytereverse::workload2_vector @ bci:133 (line 76) L[0]=rsp + #0 L[1]=rsp + #8 L[2]=_ L[3]=rsp + #20 L[4]=_ L[5]=_ L[6]=_ L[7]=_ L[8]=_ STK[0]=rsp + #20 STK[1]=RBP
        # OopMap {[0]=Oop [8]=Oop off=572/0x23c}
23c     stop	# ShouldNotReachHere

--------------------------------------------------------------------------------
----------------------------------- Assembly -----------------------------------

Compiled method (c2)   12659 1239 %     4       bytereverse::workload2_vector @ 5 (153 bytes)
 total in heap  [0x00007fb370ce2510,0x00007fb370ce2df8] = 2280
 relocation     [0x00007fb370ce2680,0x00007fb370ce26e8] = 104
 main code      [0x00007fb370ce2700,0x00007fb370ce2980] = 640
 stub code      [0x00007fb370ce2980,0x00007fb370ce2998] = 24
 oops           [0x00007fb370ce2998,0x00007fb370ce29b0] = 24
 metadata       [0x00007fb370ce29b0,0x00007fb370ce2a50] = 160
 scopes data    [0x00007fb370ce2a50,0x00007fb370ce2b70] = 288
 scopes pcs     [0x00007fb370ce2b70,0x00007fb370ce2dc0] = 592
 dependencies   [0x00007fb370ce2dc0,0x00007fb370ce2de0] = 32
 nul chk table  [0x00007fb370ce2de0,0x00007fb370ce2df8] = 24

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x00007fb304411d58} 'workload2_vector' '([I[II)I' in 'bytereverse'
 ;; N225: #	out( B1 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x00007fb370ce2700:   callq  0x00007fb380baecd0           ;   {runtime_call os::breakpoint()}
  0x00007fb370ce2705:   nop
  0x00007fb370ce2706:   nop
  0x00007fb370ce2707:   nop
  0x00007fb370ce2708:   nop
  0x00007fb370ce2709:   nop
  0x00007fb370ce270a:   nop
  0x00007fb370ce270b:   nop
  0x00007fb370ce270c:   nop
  0x00007fb370ce270d:   nop
  0x00007fb370ce270e:   nop
  0x00007fb370ce270f:   nop
 ;; B1: #	out( B20 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x00007fb370ce2710:   mov    %eax,-0x16000(%rsp)
  0x00007fb370ce2717:   push   %rbp
  0x00007fb370ce2718:   sub    $0x50,%rsp
  0x00007fb370ce271c:   mov    0x40(%rsi),%rbp
  0x00007fb370ce2720:   mov    0x38(%rsi),%r13              ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - bytereverse::workload2_vector@5 (line 56)
  0x00007fb370ce2724:   mov    0x28(%rsi),%ebx
  0x00007fb370ce2727:   mov    %rsi,%rdi
  0x00007fb370ce272a:   vzeroupper 
  0x00007fb370ce272d:   movabs $0x7fb380d36150,%r10
  0x00007fb370ce2737:   callq  *%r10
  0x00007fb370ce273a:   nop
  0x00007fb370ce273b:   nop
  0x00007fb370ce273c:   nop
  0x00007fb370ce273d:   nop
  0x00007fb370ce273e:   nop
  0x00007fb370ce273f:   nop
  0x00007fb370ce2740:   test   %rbp,%rbp
  0x00007fb370ce2743:   je     0x00007fb370ce28b4
 ;; B2: #	out( B23 B3 ) <- in( B1 )  Freq: 0.999
  0x00007fb370ce2749:   mov    0x8(%rbp),%r11d
  0x00007fb370ce274d:   cmp    $0x40ba0,%r11d               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload2_vector@112 (line 73)
                                                            ;   {metadata({type array int})}
  0x00007fb370ce2754:   jne    0x00007fb370ce28f4
 ;; B3: #	out( B4 ) <- in( B2 )  Freq: 0.998999
  0x00007fb370ce275a:   mov    %rbp,%r8                     ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - bytereverse::workload2_vector@5 (line 56)
 ;; B4: #	out( B21 B5 ) <- in( B3 B20 )  Freq: 0.999999
  0x00007fb370ce275d:   nop
  0x00007fb370ce275e:   nop
  0x00007fb370ce275f:   nop
  0x00007fb370ce2760:   test   %r13,%r13                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload2_vector@112 (line 73)
  0x00007fb370ce2763:   je     0x00007fb370ce28bc
 ;; B5: #	out( B23 B6 ) <- in( B4 )  Freq: 0.998999
  0x00007fb370ce2769:   mov    0x8(%r13),%r10d
  0x00007fb370ce276d:   cmp    $0x40ba0,%r10d               ;   {metadata({type array int})}
  0x00007fb370ce2774:   jne    0x00007fb370ce28f4           ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - bytereverse::workload2_vector@5 (line 56)
 ;; B6: #	out( B7 ) <- in( B5 )  Freq: 0.998998
 ;; B7: #	out( B22 B8 ) <- in( B6 B21 )  Freq: 0.999998
  0x00007fb370ce277a:   nop
  0x00007fb370ce277b:   nop
  0x00007fb370ce277c:   nop
  0x00007fb370ce277d:   nop
  0x00007fb370ce277e:   nop
  0x00007fb370ce277f:   nop
  0x00007fb370ce2780:   mov    0xc(%r8),%r9d                ; implicit exception: dispatches to 0x00007fb370ce28c5
 ;; B8: #	out( B22 B9 ) <- in( B7 )  Freq: 0.999997
  0x00007fb370ce2784:   add    $0xfffffff9,%r9d
  0x00007fb370ce2788:   test   %r9d,%r9d
  0x00007fb370ce278b:   jl     0x00007fb370ce28c5
 ;; B9: #	out( B22 B10 ) <- in( B8 )  Freq: 0.999996
  0x00007fb370ce2791:   mov    0xc(%r13),%edi               ; implicit exception: dispatches to 0x00007fb370ce28c5
 ;; B10: #	out( B22 B11 ) <- in( B9 )  Freq: 0.999995
  0x00007fb370ce2795:   add    $0xfffffff9,%edi
  0x00007fb370ce2798:   test   %edi,%edi
  0x00007fb370ce279a:   nop
  0x00007fb370ce279b:   nop
  0x00007fb370ce279c:   nop
  0x00007fb370ce279d:   nop
  0x00007fb370ce279e:   nop
  0x00007fb370ce279f:   nop
  0x00007fb370ce27a0:   jl     0x00007fb370ce28c5
 ;; B11: #	out( B13 ) <- in( B10 )  Freq: 0.999994
  0x00007fb370ce27a6:   movabs $0xeb025620,%r10             ;   {oop(a 'java/lang/Class'{0x00000000eb025620} = 'bytereverse')}
  0x00007fb370ce27b0:   vpbroadcastd 0x94(%r10),%ymm0       ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload2_vector@112 (line 73)
  0x00007fb370ce27b9:   mov    0x78(%r10),%ebp              ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - bytereverse::workload2_vector@5 (line 56)
  0x00007fb370ce27bd:   vpbroadcastd 0x98(%r10),%ymm1
  0x00007fb370ce27c6:   mov    %ebp,%r11d
  0x00007fb370ce27c9:   and    $0xfffffff8,%r11d
  0x00007fb370ce27cd:   jmp    0x00007fb370ce27e4
  0x00007fb370ce27cf:   nop                                 ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload2_vector@112 (line 73)
 ;; B12: #	out( B13 ) <- in( B15 ) top-of-loop Freq: 1023.68
  0x00007fb370ce27d0:   vmovdqu %ymm2,0x10(%r13,%rbx,4)     ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - bytereverse::workload2_vector@5 (line 56)
  0x00007fb370ce27d7:   mov    0x390(%r15),%r10             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload2_vector@112 (line 73)
  0x00007fb370ce27de:   add    $0x8,%ebx                    ; ImmutableOopMap {r8=Oop r13=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) bytereverse::workload2_vector@126 (line 56)
  0x00007fb370ce27e1:   test   %eax,(%r10)                  ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - bytereverse::workload2_vector@5 (line 56)
                                                            ;   {poll}
 ;; B13: #	out( B17 B14 ) <- in( B11 B12 ) Loop( B13-B12 inner ) Freq: 1024.68
  0x00007fb370ce27e4:   cmp    %r11d,%ebx                   ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload2_vector@112 (line 73)
  0x00007fb370ce27e7:   jge    0x00007fb370ce285c
 ;; B14: #	out( B19 B15 ) <- in( B13 )  Freq: 1023.69
  0x00007fb370ce27ed:   cmp    %r9d,%ebx
  0x00007fb370ce27f0:   jae    0x00007fb370ce2880           ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - bytereverse::workload2_vector@5 (line 56)
 ;; B15: #	out( B12 B16 ) <- in( B14 )  Freq: 1023.68
  0x00007fb370ce27f6:   vmovdqu 0x10(%r8,%rbx,4),%ymm2      ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload2_vector@112 (line 73)
  0x00007fb370ce27fd:   vprold $0x10,%ymm2,%ymm2            ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.VectorIntrinsics::roundDown@11 (line 86)
                                                            ; - jdk.incubator.vector.AbstractSpecies::loopBound@5 (line 203)
                                                            ; - bytereverse::workload2_vector@12 (line 56)
  0x00007fb370ce2804:   vpand  %ymm0,%ymm2,%ymm3
  0x00007fb370ce2808:   vpand  %ymm1,%ymm2,%ymm2
  0x00007fb370ce280c:   vpsrld $0x8,%ymm3,%ymm3
  0x00007fb370ce2811:   vpslld $0x8,%ymm2,%ymm2             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload2_vector@112 (line 73)
  0x00007fb370ce2816:   vpor   %ymm2,%ymm3,%ymm2
  0x00007fb370ce281a:   cmp    %edi,%ebx
  0x00007fb370ce281c:   nop
  0x00007fb370ce281d:   nop
  0x00007fb370ce281e:   nop
  0x00007fb370ce281f:   nop
  0x00007fb370ce2820:   jb     0x00007fb370ce27d0
 ;; B16: #	out( N225 ) <- in( B15 )  Freq: 0.00103728
  0x00007fb370ce2822:   mov    $0xffffffe4,%esi             ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - bytereverse::workload2_vector@5 (line 56)
  0x00007fb370ce2827:   mov    %r8,%rbp
  0x00007fb370ce282a:   mov    %r13,0x10(%rsp)
  0x00007fb370ce282f:   mov    %ebx,0xc(%rsp)
  0x00007fb370ce2833:   mov    %edi,0x18(%rsp)
  0x00007fb370ce2837:   vmovdqu %ymm2,0x20(%rsp)            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload2_vector@112 (line 73)
  0x00007fb370ce283d:   nop
  0x00007fb370ce283e:   nop
  0x00007fb370ce283f:   nop
  0x00007fb370ce2840:   vzeroupper 
  0x00007fb370ce2843:   callq  0x00007fb36911e920           ; ImmutableOopMap {rbp=Oop [16]=Oop }
                                                            ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::checkIndex@3 (line 359)
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 52)
                                                            ; - jdk.incubator.vector.IntVector::intoArray@7 (line 3163)
                                                            ; - bytereverse::workload2_vector@112 (line 73)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fb370ce2848:   movabs $0x7fb3812bd328,%rdi         ;   {external_word}
  0x00007fb370ce2852:   and    $0xfffffffffffffff0,%rsp
  0x00007fb370ce2856:   callq  0x00007fb38096b4b0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb370ce285b:   hlt    
 ;; B17: #	out( B24 B18 ) <- in( B13 )  Freq: 0.997919
  0x00007fb370ce285c:   nop
  0x00007fb370ce285d:   nop
  0x00007fb370ce285e:   nop
  0x00007fb370ce285f:   nop
  0x00007fb370ce2860:   cmp    %ebp,%ebx                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload2_vector@112 (line 73)
  0x00007fb370ce2862:   jl     0x00007fb370ce2920
 ;; B18: #	out( N225 ) <- in( B17 )  Freq: 0.997919
  0x00007fb370ce2868:   mov    %ebx,%eax
  0x00007fb370ce286a:   vzeroupper 
  0x00007fb370ce286d:   add    $0x50,%rsp
  0x00007fb370ce2871:   pop    %rbp
  0x00007fb370ce2872:   cmp    0x388(%r15),%rsp             ;   {poll_return}
  0x00007fb370ce2879:   ja     0x00007fb370ce2950
  0x00007fb370ce287f:   retq                                ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - bytereverse::workload2_vector@5 (line 56)
 ;; B19: #	out( N225 ) <- in( B14 )  Freq: 0.00103728
  0x00007fb370ce2880:   mov    $0xffffffe4,%esi             ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::checkIndex@3 (line 359)
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 52)
                                                            ; - jdk.incubator.vector.IntVector::fromArray@9 (line 2894)
                                                            ; - bytereverse::workload2_vector@25 (line 57)
  0x00007fb370ce2885:   mov    %r13,(%rsp)
  0x00007fb370ce2889:   mov    %r8,0x10(%rsp)
  0x00007fb370ce288e:   mov    %ebx,0xc(%rsp)
  0x00007fb370ce2892:   mov    %r9d,0x18(%rsp)              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload2_vector@112 (line 73)
  0x00007fb370ce2897:   nop
  0x00007fb370ce2898:   vzeroupper 
  0x00007fb370ce289b:   callq  0x00007fb36911e920           ; ImmutableOopMap {[0]=Oop [16]=Oop }
                                                            ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::checkIndex@3 (line 359)
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 52)
                                                            ; - jdk.incubator.vector.IntVector::fromArray@9 (line 2894)
                                                            ; - bytereverse::workload2_vector@25 (line 57)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fb370ce28a0:   movabs $0x7fb3812bd328,%rdi         ;   {external_word}
  0x00007fb370ce28aa:   and    $0xfffffffffffffff0,%rsp
  0x00007fb370ce28ae:   callq  0x00007fb38096b4b0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb370ce28b3:   hlt    
 ;; B20: #	out( B4 ) <- in( B1 )  Freq: 0.000999987
  0x00007fb370ce28b4:   xor    %r8d,%r8d
  0x00007fb370ce28b7:   jmpq   0x00007fb370ce275d
 ;; B21: #	out( B7 ) <- in( B4 )  Freq: 0.000999986
  0x00007fb370ce28bc:   xor    %r13d,%r13d
  0x00007fb370ce28bf:   nop
  0x00007fb370ce28c0:   jmpq   0x00007fb370ce277a
 ;; B22: #	out( N225 ) <- in( B10 B7 B8 B9 )  Freq: 4.02654e-06
  0x00007fb370ce28c5:   mov    $0xffffffbe,%esi             ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - bytereverse::workload2_vector@5 (line 56)
  0x00007fb370ce28ca:   mov    %r8,%rbp
  0x00007fb370ce28cd:   mov    %r13,(%rsp)
  0x00007fb370ce28d1:   mov    %ebx,0x8(%rsp)               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload2_vector@112 (line 73)
  0x00007fb370ce28d5:   nop
  0x00007fb370ce28d6:   nop
  0x00007fb370ce28d7:   nop
  0x00007fb370ce28d8:   vzeroupper 
  0x00007fb370ce28db:   callq  0x00007fb36911e920           ; ImmutableOopMap {rbp=Oop [0]=Oop }
                                                            ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - bytereverse::workload2_vector@5 (line 56)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fb370ce28e0:   movabs $0x7fb3812bd328,%rdi         ;   {external_word}
  0x00007fb370ce28ea:   and    $0xfffffffffffffff0,%rsp
  0x00007fb370ce28ee:   callq  0x00007fb38096b4b0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb370ce28f3:   hlt    
 ;; B23: #	out( N225 ) <- in( B2 B5 )  Freq: 1.998e-06
  0x00007fb370ce28f4:   mov    $0xffffff8d,%esi             ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - bytereverse::workload2_vector@5 (line 56)
  0x00007fb370ce28f9:   mov    %r13,(%rsp)
  0x00007fb370ce28fd:   mov    %ebx,0x8(%rsp)               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload2_vector@112 (line 73)
  0x00007fb370ce2901:   nop
  0x00007fb370ce2902:   nop
  0x00007fb370ce2903:   nop
  0x00007fb370ce2904:   vzeroupper 
  0x00007fb370ce2907:   callq  0x00007fb36911e920           ; ImmutableOopMap {rbp=Oop [0]=Oop }
                                                            ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - bytereverse::workload2_vector@5 (line 56)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fb370ce290c:   movabs $0x7fb3812bd328,%rdi         ;   {external_word}
  0x00007fb370ce2916:   and    $0xfffffffffffffff0,%rsp
  0x00007fb370ce291a:   callq  0x00007fb38096b4b0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb370ce291f:   hlt    
 ;; B24: #	out( N225 ) <- in( B17 )  Freq: 4.75845e-07
  0x00007fb370ce2920:   mov    $0xffffff45,%esi             ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - bytereverse::workload2_vector@5 (line 56)
  0x00007fb370ce2925:   mov    %r8,(%rsp)
  0x00007fb370ce2929:   mov    %r13,0x8(%rsp)
  0x00007fb370ce292e:   mov    %ebx,0x14(%rsp)              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload2_vector@112 (line 73)
  0x00007fb370ce2932:   nop
  0x00007fb370ce2933:   nop
  0x00007fb370ce2934:   vzeroupper 
  0x00007fb370ce2937:   callq  0x00007fb36911e920           ; ImmutableOopMap {[0]=Oop [8]=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) bytereverse::workload2_vector@133 (line 76)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fb370ce293c:   movabs $0x7fb3812bd328,%rdi         ;   {external_word}
  0x00007fb370ce2946:   and    $0xfffffffffffffff0,%rsp
  0x00007fb370ce294a:   callq  0x00007fb38096b4b0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb370ce294f:   hlt                                 ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload2_vector@112 (line 73)
  0x00007fb370ce2950:   movabs $0x7fb370ce2872,%r10         ;   {internal_word}
  0x00007fb370ce295a:   mov    %r10,0x3a0(%r15)
  0x00007fb370ce2961:   jmpq   0x00007fb36911d6a0           ;   {runtime_call SafepointBlob}
  0x00007fb370ce2966:   hlt    
  0x00007fb370ce2967:   hlt    
  0x00007fb370ce2968:   hlt    
  0x00007fb370ce2969:   hlt    
  0x00007fb370ce296a:   hlt    
  0x00007fb370ce296b:   hlt    
  0x00007fb370ce296c:   hlt    
  0x00007fb370ce296d:   hlt    
  0x00007fb370ce296e:   hlt    
  0x00007fb370ce296f:   hlt    
  0x00007fb370ce2970:   hlt    
  0x00007fb370ce2971:   hlt    
  0x00007fb370ce2972:   hlt    
  0x00007fb370ce2973:   hlt    
  0x00007fb370ce2974:   hlt    
  0x00007fb370ce2975:   hlt    
  0x00007fb370ce2976:   hlt    
  0x00007fb370ce2977:   hlt    
  0x00007fb370ce2978:   hlt    
  0x00007fb370ce2979:   hlt    
  0x00007fb370ce297a:   hlt    
  0x00007fb370ce297b:   hlt    
  0x00007fb370ce297c:   hlt    
  0x00007fb370ce297d:   hlt    
  0x00007fb370ce297e:   hlt    
  0x00007fb370ce297f:   hlt    
[Exception Handler]
  0x00007fb370ce2980:   jmpq   0x00007fb369081da0           ;   {no_reloc}
[Deopt Handler Code]
  0x00007fb370ce2985:   callq  0x00007fb370ce298a
  0x00007fb370ce298a:   subq   $0x5,(%rsp)
  0x00007fb370ce298f:   jmpq   0x00007fb36911ec60           ;   {runtime_call DeoptimizationBlob}
  0x00007fb370ce2994:   hlt    
  0x00007fb370ce2995:   hlt    
  0x00007fb370ce2996:   hlt    
  0x00007fb370ce2997:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Oops:
  0x00007fb370ce2998:   0x00000000eb010c80 a 'java/lang/Class'{0x00000000eb010c80} = 'jdk/incubator/vector/Int256Vector'
  0x00007fb370ce29a0:   0x00000000eb01e678 a 'jdk/incubator/vector/IntVector$IntSpecies'{0x00000000eb01e678}
  0x00007fb370ce29a8:   0x00000000eb00ee30 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x00000000eb00ee30}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Metadata:
  0x00007fb370ce29b0:   0x00007fb304411d58 {method} {0x00007fb304411d58} 'workload2_vector' '([I[II)I' in 'bytereverse'
  0x00007fb370ce29b8:   0x00007fb30441b780 {method} {0x00007fb30441b780} 'intoArray' '([II)V' in 'jdk/incubator/vector/IntVector'
  0x00007fb370ce29c0:   0x0000000800040ba0 {type array int}
  0x00007fb370ce29c8:   0x00007fb304618218 {method} {0x00007fb304618218} 'loopBound' '(I)I' in 'jdk/incubator/vector/AbstractSpecies'
  0x00007fb370ce29d0:   0x00007fb3046b4768 {method} {0x00007fb3046b4768} 'roundDown' '(II)I' in 'jdk/incubator/vector/VectorIntrinsics'
  0x00007fb370ce29d8:   0x00007fb3046b4478 {method} {0x00007fb3046b4478} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
  0x00007fb370ce29e0:   0x00007fb3041639c8 {method} {0x00007fb3041639c8} 'checkIndex' '(II)I' in 'java/util/Objects'
  0x00007fb370ce29e8:   0x00007fb30441afd0 {method} {0x00007fb30441afd0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[II)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/IntVector'
  0x00007fb370ce29f0:   0x00000008000cc920 'jdk/incubator/vector/IntVector$IntSpecies'
  0x00007fb370ce29f8:   0x00000008000cc158 'jdk/incubator/vector/VectorSpecies'
  0x00007fb370ce2a00:   0x00007fb304616178 {method} {0x00007fb304616178} 'loopBound' '(I)I' in 'jdk/incubator/vector/VectorSpecies'
  0x00007fb370ce2a08:   0x00007fb3046177a8 {method} {0x00007fb3046177a8} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
  0x00007fb370ce2a10:   0x00007fb304615fb0 {method} {0x00007fb304615fb0} 'length' '()I' in 'jdk/incubator/vector/VectorSpecies'
  0x00007fb370ce2a18:   0x00000008000deb40 'jdk/incubator/vector/VectorOperators$BinaryImpl'
  0x00007fb370ce2a20:   0x00007fb3047c1608 {method} {0x00007fb3047c1608} 'opKind' '(I)Z' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  0x00007fb370ce2a28:   0x00000008000de600 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  0x00007fb370ce2a30:   0x00007fb3047c11c0 {method} {0x00007fb3047c11c0} 'opCode' '(II)I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  0x00007fb370ce2a38:   0x00007fb3047c1290 {method} {0x00007fb3047c1290} 'opCodeRaw' '()I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  0x00007fb370ce2a40:   0x00007fb30460c470 {method} {0x00007fb30460c470} 'find' '(Ljdk/incubator/vector/VectorOperators$Operator;ILjava/util/function/IntFunction;)Ljava/lang/Object;' in 'jdk/incubator/vector/VectorOperators$ImplCache'
  0x00007fb370ce2a48:   0x00000008000cb760 'jdk/incubator/vector/VectorOperators$ImplCache'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
pc-bytecode offsets:
PcDesc(pc=0x00007fb370ce26ff offset=ffffffff bits=0):
PcDesc(pc=0x00007fb370ce2724 offset=24 bits=0):
   bytereverse::workload2_vector@5 (line 56)
PcDesc(pc=0x00007fb370ce2754 offset=54 bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload2_vector@112 (line 73)
PcDesc(pc=0x00007fb370ce275d offset=5d bits=0):
   bytereverse::workload2_vector@5 (line 56)
PcDesc(pc=0x00007fb370ce2763 offset=63 bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload2_vector@112 (line 73)
PcDesc(pc=0x00007fb370ce277a offset=7a bits=0):
   bytereverse::workload2_vector@5 (line 56)
PcDesc(pc=0x00007fb370ce27b9 offset=b9 bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload2_vector@112 (line 73)
PcDesc(pc=0x00007fb370ce27bd offset=bd bits=0):
   bytereverse::workload2_vector@5 (line 56)
PcDesc(pc=0x00007fb370ce27d0 offset=d0 bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload2_vector@112 (line 73)
PcDesc(pc=0x00007fb370ce27d7 offset=d7 bits=0):
   bytereverse::workload2_vector@5 (line 56)
PcDesc(pc=0x00007fb370ce27de offset=de bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload2_vector@112 (line 73)
PcDesc(pc=0x00007fb370ce27e1 offset=e1 bits=1):
   bytereverse::workload2_vector@126 (line 56)  reexecute=true
   Locals
    - l0: reg r8 [16],oop
    - l1: reg r13 [26],oop
    - l2: empty
    - l3: reg rbx [6],int
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x00007fb370ce27e4 offset=e4 bits=0):
   bytereverse::workload2_vector@5 (line 56)
PcDesc(pc=0x00007fb370ce27e7 offset=e7 bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload2_vector@112 (line 73)
PcDesc(pc=0x00007fb370ce27f6 offset=f6 bits=0):
   bytereverse::workload2_vector@5 (line 56)
PcDesc(pc=0x00007fb370ce27fd offset=fd bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload2_vector@112 (line 73)
PcDesc(pc=0x00007fb370ce2804 offset=104 bits=0):
   jdk.incubator.vector.VectorIntrinsics::roundDown@11 (line 86)
   jdk.incubator.vector.AbstractSpecies::loopBound@5 (line 203)
   bytereverse::workload2_vector@12 (line 56)
PcDesc(pc=0x00007fb370ce2816 offset=116 bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload2_vector@112 (line 73)
PcDesc(pc=0x00007fb370ce2827 offset=127 bits=0):
   bytereverse::workload2_vector@5 (line 56)
PcDesc(pc=0x00007fb370ce283d offset=13d bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload2_vector@112 (line 73)
PcDesc(pc=0x00007fb370ce2848 offset=148 bits=0):
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[12]
    - @1: stack[24]
    - @2: NULL
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 52)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.IntVector::intoArray@7 (line 3163)
   Locals
    - l0: obj[129]
    - l1: stack[16],oop
    - l2: empty
    - l3: empty
   bytereverse::workload2_vector@112 (line 73)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[16],oop
    - l2: empty
    - l3: stack[12]
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
   Objects
    - 129: jdk.incubator.vector.Int256Vector stack[32],vector
PcDesc(pc=0x00007fb370ce2862 offset=162 bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload2_vector@112 (line 73)
PcDesc(pc=0x00007fb370ce2880 offset=180 bits=0):
   bytereverse::workload2_vector@5 (line 56)
PcDesc(pc=0x00007fb370ce2885 offset=185 bits=0):
   java.util.Objects::checkIndex@3 (line 359)
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 52)
   jdk.incubator.vector.IntVector::fromArray@9 (line 2894)
   bytereverse::workload2_vector@25 (line 57)
PcDesc(pc=0x00007fb370ce2897 offset=197 bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload2_vector@112 (line 73)
PcDesc(pc=0x00007fb370ce28a0 offset=1a0 bits=0):
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[12]
    - @1: stack[24]
    - @2: NULL
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 52)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.IntVector::fromArray@9 (line 2894)
   Locals
    - l0: a 'jdk/incubator/vector/IntVector$IntSpecies'{0x00000000eb01e678}
    - l1: stack[16],oop
    - l2: empty
    - l3: empty
   bytereverse::workload2_vector@25 (line 57)
   Locals
    - l0: stack[16],oop
    - l1: stack[0],oop
    - l2: empty
    - l3: stack[12]
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x00007fb370ce28ca offset=1ca bits=0):
   bytereverse::workload2_vector@5 (line 56)
PcDesc(pc=0x00007fb370ce28d5 offset=1d5 bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload2_vector@112 (line 73)
PcDesc(pc=0x00007fb370ce28e0 offset=1e0 bits=0):
   bytereverse::workload2_vector@5 (line 56)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: empty
    - l3: stack[8]
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x00007fb370ce28f9 offset=1f9 bits=0):
   bytereverse::workload2_vector@5 (line 56)
PcDesc(pc=0x00007fb370ce2901 offset=201 bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload2_vector@112 (line 73)
PcDesc(pc=0x00007fb370ce290c offset=20c bits=0):
   bytereverse::workload2_vector@5 (line 56)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: empty
    - l3: stack[8]
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x00007fb370ce2925 offset=225 bits=0):
   bytereverse::workload2_vector@5 (line 56)
PcDesc(pc=0x00007fb370ce2932 offset=232 bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload2_vector@112 (line 73)
PcDesc(pc=0x00007fb370ce293c offset=23c bits=1):
   bytereverse::workload2_vector@133 (line 76)  reexecute=true
   Locals
    - l0: stack[0],oop
    - l1: stack[8],oop
    - l2: empty
    - l3: stack[20]
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
   Expression stack
    - @0: stack[20]
    - @1: reg rbp [10],int
PcDesc(pc=0x00007fb370ce2950 offset=250 bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload2_vector@112 (line 73)
PcDesc(pc=0x00007fb370ce2999 offset=299 bits=0):
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
oop maps:ImmutableOopMapSet contains 6 OopMaps

ImmutableOopMap {r8=Oop r13=Oop } pc offsets: 225 
ImmutableOopMap {rbp=Oop [16]=Oop } pc offsets: 328 
ImmutableOopMap {[0]=Oop [16]=Oop } pc offsets: 416 
ImmutableOopMap {rbp=Oop [0]=Oop } pc offsets: 480 524 
ImmutableOopMap {[0]=Oop [8]=Oop } pc offsets: 572 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
scopes:
ScopeDesc(pc=0x00007fb370ce2724 offset=24):
   bytereverse::workload2_vector@5 (line 56)
ScopeDesc(pc=0x00007fb370ce2754 offset=54):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007fb370ce2754 offset=54):
   bytereverse::workload2_vector@112 (line 73)
ScopeDesc(pc=0x00007fb370ce275d offset=5d):
   bytereverse::workload2_vector@5 (line 56)
ScopeDesc(pc=0x00007fb370ce2763 offset=63):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007fb370ce2763 offset=63):
   bytereverse::workload2_vector@112 (line 73)
ScopeDesc(pc=0x00007fb370ce277a offset=7a):
   bytereverse::workload2_vector@5 (line 56)
ScopeDesc(pc=0x00007fb370ce27b9 offset=b9):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007fb370ce27b9 offset=b9):
   bytereverse::workload2_vector@112 (line 73)
ScopeDesc(pc=0x00007fb370ce27bd offset=bd):
   bytereverse::workload2_vector@5 (line 56)
ScopeDesc(pc=0x00007fb370ce27d0 offset=d0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007fb370ce27d0 offset=d0):
   bytereverse::workload2_vector@112 (line 73)
ScopeDesc(pc=0x00007fb370ce27d7 offset=d7):
   bytereverse::workload2_vector@5 (line 56)
ScopeDesc(pc=0x00007fb370ce27de offset=de):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007fb370ce27de offset=de):
   bytereverse::workload2_vector@112 (line 73)
ScopeDesc(pc=0x00007fb370ce27e1 offset=e1):
   bytereverse::workload2_vector@126 (line 56)  reexecute=true
   Locals
    - l0: reg r8 [16],oop
    - l1: reg r13 [26],oop
    - l2: empty
    - l3: reg rbx [6],int
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x00007fb370ce27e4 offset=e4):
   bytereverse::workload2_vector@5 (line 56)
ScopeDesc(pc=0x00007fb370ce27e7 offset=e7):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007fb370ce27e7 offset=e7):
   bytereverse::workload2_vector@112 (line 73)
ScopeDesc(pc=0x00007fb370ce27f6 offset=f6):
   bytereverse::workload2_vector@5 (line 56)
ScopeDesc(pc=0x00007fb370ce27fd offset=fd):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007fb370ce27fd offset=fd):
   bytereverse::workload2_vector@112 (line 73)
ScopeDesc(pc=0x00007fb370ce2804 offset=104):
   jdk.incubator.vector.VectorIntrinsics::roundDown@11 (line 86)
ScopeDesc(pc=0x00007fb370ce2804 offset=104):
   jdk.incubator.vector.AbstractSpecies::loopBound@5 (line 203)
ScopeDesc(pc=0x00007fb370ce2804 offset=104):
   bytereverse::workload2_vector@12 (line 56)
ScopeDesc(pc=0x00007fb370ce2816 offset=116):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007fb370ce2816 offset=116):
   bytereverse::workload2_vector@112 (line 73)
ScopeDesc(pc=0x00007fb370ce2827 offset=127):
   bytereverse::workload2_vector@5 (line 56)
ScopeDesc(pc=0x00007fb370ce283d offset=13d):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007fb370ce283d offset=13d):
   bytereverse::workload2_vector@112 (line 73)
ScopeDesc(pc=0x00007fb370ce2848 offset=148):
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[12]
    - @1: stack[24]
    - @2: NULL
ScopeDesc(pc=0x00007fb370ce2848 offset=148):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 52)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00007fb370ce2848 offset=148):
   jdk.incubator.vector.IntVector::intoArray@7 (line 3163)
   Locals
    - l0: obj[129]
    - l1: stack[16],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x00007fb370ce2848 offset=148):
   bytereverse::workload2_vector@112 (line 73)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[16],oop
    - l2: empty
    - l3: stack[12]
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
   Objects
    - 129: jdk.incubator.vector.Int256Vector stack[32],vector
ScopeDesc(pc=0x00007fb370ce2862 offset=162):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007fb370ce2862 offset=162):
   bytereverse::workload2_vector@112 (line 73)
ScopeDesc(pc=0x00007fb370ce2880 offset=180):
   bytereverse::workload2_vector@5 (line 56)
ScopeDesc(pc=0x00007fb370ce2885 offset=185):
   java.util.Objects::checkIndex@3 (line 359)
ScopeDesc(pc=0x00007fb370ce2885 offset=185):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 52)
ScopeDesc(pc=0x00007fb370ce2885 offset=185):
   jdk.incubator.vector.IntVector::fromArray@9 (line 2894)
ScopeDesc(pc=0x00007fb370ce2885 offset=185):
   bytereverse::workload2_vector@25 (line 57)
ScopeDesc(pc=0x00007fb370ce2897 offset=197):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007fb370ce2897 offset=197):
   bytereverse::workload2_vector@112 (line 73)
ScopeDesc(pc=0x00007fb370ce28a0 offset=1a0):
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[12]
    - @1: stack[24]
    - @2: NULL
ScopeDesc(pc=0x00007fb370ce28a0 offset=1a0):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 52)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00007fb370ce28a0 offset=1a0):
   jdk.incubator.vector.IntVector::fromArray@9 (line 2894)
   Locals
    - l0: a 'jdk/incubator/vector/IntVector$IntSpecies'{0x00000000eb01e678}
    - l1: stack[16],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x00007fb370ce28a0 offset=1a0):
   bytereverse::workload2_vector@25 (line 57)
   Locals
    - l0: stack[16],oop
    - l1: stack[0],oop
    - l2: empty
    - l3: stack[12]
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x00007fb370ce28ca offset=1ca):
   bytereverse::workload2_vector@5 (line 56)
ScopeDesc(pc=0x00007fb370ce28d5 offset=1d5):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007fb370ce28d5 offset=1d5):
   bytereverse::workload2_vector@112 (line 73)
ScopeDesc(pc=0x00007fb370ce28e0 offset=1e0):
   bytereverse::workload2_vector@5 (line 56)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: empty
    - l3: stack[8]
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x00007fb370ce28f9 offset=1f9):
   bytereverse::workload2_vector@5 (line 56)
ScopeDesc(pc=0x00007fb370ce2901 offset=201):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007fb370ce2901 offset=201):
   bytereverse::workload2_vector@112 (line 73)
ScopeDesc(pc=0x00007fb370ce290c offset=20c):
   bytereverse::workload2_vector@5 (line 56)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: empty
    - l3: stack[8]
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x00007fb370ce2925 offset=225):
   bytereverse::workload2_vector@5 (line 56)
ScopeDesc(pc=0x00007fb370ce2932 offset=232):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007fb370ce2932 offset=232):
   bytereverse::workload2_vector@112 (line 73)
ScopeDesc(pc=0x00007fb370ce293c offset=23c):
   bytereverse::workload2_vector@133 (line 76)  reexecute=true
   Locals
    - l0: stack[0],oop
    - l1: stack[8],oop
    - l2: empty
    - l3: stack[20]
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
   Expression stack
    - @0: stack[20]
    - @1: reg rbp [10],int
ScopeDesc(pc=0x00007fb370ce2950 offset=250):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007fb370ce2950 offset=250):
   bytereverse::workload2_vector@112 (line 73)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
relocations:
         @0x00007fb370ce2680: 6400
relocInfo@0x00007fb370ce2680 [type=6(runtime_call) addr=0x00007fb370ce2700 offset=0 format=1] | [destination=0x00007fb380baecd0]
         @0x00007fb370ce2682: f003cc4d
relocInfo@0x00007fb370ce2684 [type=12(metadata) addr=0x00007fb370ce274d offset=77 format=3 data=3] | [metadata_addr=0x00007fb370ce29c0 *=0x0000000800040ba0 offset=0]metadata_value=0x0000000800040ba0: {type array int}
         @0x00007fb370ce2686: f003cc20
relocInfo@0x00007fb370ce2688 [type=12(metadata) addr=0x00007fb370ce276d offset=32 format=3 data=3] | [metadata_addr=0x00007fb370ce29c0 *=0x0000000800040ba0 offset=0]metadata_value=0x0000000800040ba0: {type array int}
         @0x00007fb370ce268a: 1039
relocInfo@0x00007fb370ce268a [type=1(oop) addr=0x00007fb370ce27a6 offset=57] | [oop_addr=0x00007fb370ce27a8 *=0x00000000eb025620 offset=0]
         @0x00007fb370ce268c: a03b
relocInfo@0x00007fb370ce268c [type=10(poll) addr=0x00007fb370ce27e1 offset=59]
         @0x00007fb370ce268e: 6462
relocInfo@0x00007fb370ce268e [type=6(runtime_call) addr=0x00007fb370ce2843 offset=98 format=1] | [destination=0x00007fb36911e920]
         @0x00007fb370ce2690: f803812bd3287fb37005
relocInfo@0x00007fb370ce2698 [type=7(external_word) addr=0x00007fb370ce2848 offset=5 data={812bd3287fb3}] | [target=0x00007fb3812bd328]
         @0x00007fb370ce269a: 640e
relocInfo@0x00007fb370ce269a [type=6(runtime_call) addr=0x00007fb370ce2856 offset=14 format=1] | [destination=0x00007fb38096b4b0]
         @0x00007fb370ce269c: b01c
relocInfo@0x00007fb370ce269c [type=11(poll_return) addr=0x00007fb370ce2872 offset=28]
         @0x00007fb370ce269e: 6429
relocInfo@0x00007fb370ce269e [type=6(runtime_call) addr=0x00007fb370ce289b offset=41 format=1] | [destination=0x00007fb36911e920]
         @0x00007fb370ce26a0: f803812bd3287fb37005
relocInfo@0x00007fb370ce26a8 [type=7(external_word) addr=0x00007fb370ce28a0 offset=5 data={812bd3287fb3}] | [target=0x00007fb3812bd328]
         @0x00007fb370ce26aa: 640e
relocInfo@0x00007fb370ce26aa [type=6(runtime_call) addr=0x00007fb370ce28ae offset=14 format=1] | [destination=0x00007fb38096b4b0]
         @0x00007fb370ce26ac: 642d
relocInfo@0x00007fb370ce26ac [type=6(runtime_call) addr=0x00007fb370ce28db offset=45 format=1] | [destination=0x00007fb36911e920]
         @0x00007fb370ce26ae: f803812bd3287fb37005
relocInfo@0x00007fb370ce26b6 [type=7(external_word) addr=0x00007fb370ce28e0 offset=5 data={812bd3287fb3}] | [target=0x00007fb3812bd328]
         @0x00007fb370ce26b8: 640e
relocInfo@0x00007fb370ce26b8 [type=6(runtime_call) addr=0x00007fb370ce28ee offset=14 format=1] | [destination=0x00007fb38096b4b0]
         @0x00007fb370ce26ba: 6419
relocInfo@0x00007fb370ce26ba [type=6(runtime_call) addr=0x00007fb370ce2907 offset=25 format=1] | [destination=0x00007fb36911e920]
         @0x00007fb370ce26bc: f803812bd3287fb37005
relocInfo@0x00007fb370ce26c4 [type=7(external_word) addr=0x00007fb370ce290c offset=5 data={812bd3287fb3}] | [target=0x00007fb3812bd328]
         @0x00007fb370ce26c6: 640e
relocInfo@0x00007fb370ce26c6 [type=6(runtime_call) addr=0x00007fb370ce291a offset=14 format=1] | [destination=0x00007fb38096b4b0]
         @0x00007fb370ce26c8: 641d
relocInfo@0x00007fb370ce26c8 [type=6(runtime_call) addr=0x00007fb370ce2937 offset=29 format=1] | [destination=0x00007fb36911e920]
         @0x00007fb370ce26ca: f803812bd3287fb37005
relocInfo@0x00007fb370ce26d2 [type=7(external_word) addr=0x00007fb370ce293c offset=5 data={812bd3287fb3}] | [target=0x00007fb3812bd328]
         @0x00007fb370ce26d4: 640e
relocInfo@0x00007fb370ce26d4 [type=6(runtime_call) addr=0x00007fb370ce294a offset=14 format=1] | [destination=0x00007fb38096b4b0]
         @0x00007fb370ce26d6: f0de8006
relocInfo@0x00007fb370ce26d8 [type=8(internal_word) addr=0x00007fb370ce2950 offset=6 data=222] | [target=0x00007fb370ce2872]
         @0x00007fb370ce26da: 6411
relocInfo@0x00007fb370ce26da [type=6(runtime_call) addr=0x00007fb370ce2961 offset=17 format=1] | [destination=0x00007fb36911d6a0]
         @0x00007fb370ce26dc: 001f
relocInfo@0x00007fb370ce26dc [type=0(none) addr=0x00007fb370ce2980 offset=31]
         @0x00007fb370ce26de: 6400
relocInfo@0x00007fb370ce26de [type=6(runtime_call) addr=0x00007fb370ce2980 offset=0 format=1] | [destination=0x00007fb369081da0]
         @0x00007fb370ce26e0: 640f
relocInfo@0x00007fb370ce26e0 [type=6(runtime_call) addr=0x00007fb370ce298f offset=15 format=1] | [destination=0x00007fb36911ec60]
         @0x00007fb370ce26e2: 0000
relocInfo@0x00007fb370ce26e2 [type=0(none) addr=0x00007fb370ce298f offset=0]
         @0x00007fb370ce26e4: 0000
relocInfo@0x00007fb370ce26e4 [type=0(none) addr=0x00007fb370ce298f offset=0]
         @0x00007fb370ce26e6: 0000
relocInfo@0x00007fb370ce26e6 [type=0(none) addr=0x00007fb370ce298f offset=0]
         @0x00007fb370ce26e8: 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Dependencies:
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.IntVector$IntSpecies
  method  = {method} {0x00007fb304618218} 'loopBound' '(I)I' in 'jdk/incubator/vector/AbstractSpecies'
  class   = jdk.incubator.vector.VectorSpecies
  method  = *{method} {0x00007fb304616178} 'loopBound' '(I)I' in 'jdk/incubator/vector/VectorSpecies'
   [nmethod<=klass]jdk.incubator.vector.IntVector$IntSpecies
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.IntVector$IntSpecies
  method  = {method} {0x00007fb3046177a8} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
  class   = jdk.incubator.vector.VectorSpecies
  method  = *{method} {0x00007fb304615fb0} 'length' '()I' in 'jdk/incubator/vector/VectorSpecies'
   [nmethod<=klass]jdk.incubator.vector.IntVector$IntSpecies
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.VectorOperators$BinaryImpl
  method  = {method} {0x00007fb3047c1608} 'opKind' '(I)Z' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  class   = jdk.incubator.vector.VectorOperators$OperatorImpl
  method  = {method} {0x00007fb3047c1608} 'opKind' '(I)Z' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
   [nmethod<=klass]jdk.incubator.vector.VectorOperators$BinaryImpl
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.VectorOperators$BinaryImpl
  method  = {method} {0x00007fb3047c11c0} 'opCode' '(II)I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  class   = jdk.incubator.vector.VectorOperators$OperatorImpl
  method  = {method} {0x00007fb3047c11c0} 'opCode' '(II)I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
   [nmethod<=klass]jdk.incubator.vector.VectorOperators$BinaryImpl
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.VectorOperators$BinaryImpl
  method  = {method} {0x00007fb3047c1290} 'opCodeRaw' '()I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  class   = jdk.incubator.vector.VectorOperators$OperatorImpl
  method  = {method} {0x00007fb3047c1290} 'opCodeRaw' '()I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
   [nmethod<=klass]jdk.incubator.vector.VectorOperators$BinaryImpl
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.VectorOperators$ImplCache
  method  = {method} {0x00007fb30460c470} 'find' '(Ljdk/incubator/vector/VectorOperators$Operator;ILjava/util/function/IntFunction;)Ljava/lang/Object;' in 'jdk/incubator/vector/VectorOperators$ImplCache'
  class   = jdk.incubator.vector.VectorOperators$ImplCache
  method  = {method} {0x00007fb30460c470} 'find' '(Ljdk/incubator/vector/VectorOperators$Operator;ILjava/util/function/IntFunction;)Ljava/lang/Object;' in 'jdk/incubator/vector/VectorOperators$ImplCache'
   [nmethod<=klass]jdk.incubator.vector.VectorOperators$ImplCache
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ExceptionHandlerTable (size = 0 bytes)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ImplicitExceptionTable (size = 2 entries, 20 bytes):
{
   < 0x00007fb370ce2780, 0x00007fb370ce28c5 > < 0x00007fb370ce2791, 0x00007fb370ce28c5 > 
}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded oops:
#0: 0x0000000000000000 NULL-oop
#1: 0x00000000eb010c80 a 'java/lang/Class'{0x00000000eb010c80} = 'jdk/incubator/vector/Int256Vector'
#2: 0x00000000eb01e678 a 'jdk/incubator/vector/IntVector$IntSpecies'{0x00000000eb01e678}
#3: 0x00000000eb00ee30 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x00000000eb00ee30}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded metadata:
# 0: 0x0000000000000000 NULL-oop
# 1: 0x00007fb304411d58 {method} {0x00007fb304411d58} 'workload2_vector' '([I[II)I' in 'bytereverse'
# 2: 0x00007fb30441b780 {method} {0x00007fb30441b780} 'intoArray' '([II)V' in 'jdk/incubator/vector/IntVector'
# 3: 0x0000000800040ba0 {type array int}
# 4: 0x00007fb304618218 {method} {0x00007fb304618218} 'loopBound' '(I)I' in 'jdk/incubator/vector/AbstractSpecies'
# 5: 0x00007fb3046b4768 {method} {0x00007fb3046b4768} 'roundDown' '(II)I' in 'jdk/incubator/vector/VectorIntrinsics'
# 6: 0x00007fb3046b4478 {method} {0x00007fb3046b4478} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
# 7: 0x00007fb3041639c8 {method} {0x00007fb3041639c8} 'checkIndex' '(II)I' in 'java/util/Objects'
# 8: 0x00007fb30441afd0 {method} {0x00007fb30441afd0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[II)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/IntVector'
# 9: 0x00000008000cc920 'jdk/incubator/vector/IntVector$IntSpecies'
#10: 0x00000008000cc158 'jdk/incubator/vector/VectorSpecies'
#11: 0x00007fb304616178 {method} {0x00007fb304616178} 'loopBound' '(I)I' in 'jdk/incubator/vector/VectorSpecies'
#12: 0x00007fb3046177a8 {method} {0x00007fb3046177a8} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
#13: 0x00007fb304615fb0 {method} {0x00007fb304615fb0} 'length' '()I' in 'jdk/incubator/vector/VectorSpecies'
#14: 0x00000008000deb40 'jdk/incubator/vector/VectorOperators$BinaryImpl'
#15: 0x00007fb3047c1608 {method} {0x00007fb3047c1608} 'opKind' '(I)Z' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
#16: 0x00000008000de600 'jdk/incubator/vector/VectorOperators$OperatorImpl'
#17: 0x00007fb3047c11c0 {method} {0x00007fb3047c11c0} 'opCode' '(II)I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
#18: 0x00007fb3047c1290 {method} {0x00007fb3047c1290} 'opCodeRaw' '()I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
#19: 0x00007fb30460c470 {method} {0x00007fb30460c470} 'find' '(Ljdk/incubator/vector/VectorOperators$Operator;ILjava/util/function/IntFunction;)Ljava/lang/Object;' in 'jdk/incubator/vector/VectorOperators$ImplCache'
#20: 0x00000008000cb760 'jdk/incubator/vector/VectorOperators$ImplCache'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

============================= C2-compiled nmethod ==============================
----------------------- MetaData before Compile_id = 1240 ------------------------
{method}
 - this oop:          0x00007fb304411d58
 - method holder:     'bytereverse'
 - constants:         0x00007fb3044110f0 constant pool [230]/operands[20] {0x00007fb3044110f0} for 'bytereverse' cache=0x00007fb304700000
 - access:            0xc1000009  public static 
 - name:              'workload2_vector'
 - signature:         '([I[II)I'
 - max stack:         5
 - max locals:        9
 - size of params:    3
 - method size:       13
 - vtable index:      -2
 - i2i entry:         0x00007fb36900dc00
 - adapters:          AHE@0x00007fb3783aa290: 0xbba i2c: 0x00007fb3690a8360 c2i: 0x00007fb3690a8447 c2iUV: 0x00007fb3690a8411 c2iNCI: 0x00007fb3690a8484
 - compiled entry     0x00007fb3690a8447
 - code size:         153
 - code start:        0x00007fb304411ca0
 - code end (excl):   0x00007fb304411d39
 - method data:       0x00007fb304701598
 - checked ex length: 0
 - linenumber start:  0x00007fb304411d39
 - localvar length:   0

------------------------ OptoAssembly for Compile_id = 1240 -----------------------
#
#  int ( int[int:>=0]:exact *, int[int:>=0]:exact *, int )
#
#r018 rsi:rsi   : parm 0: int[int:>=0]:exact *
#r016 rdx:rdx   : parm 1: int[int:>=0]:exact *
#r010 rcx   : parm 2: int
# -- Old rsp -- Framesize: 64 --
#r591 rsp+60: in_preserve
#r590 rsp+56: return address
#r589 rsp+52: in_preserve
#r588 rsp+48: saved fp register
#r587 rsp+44: pad2, stack alignment
#r586 rsp+40: pad2, stack alignment
#r585 rsp+36: Fixed slot 1
#r584 rsp+32: Fixed slot 0
#r599 rsp+28: spill
#r598 rsp+24: spill
#r597 rsp+20: spill
#r596 rsp+16: spill
#r595 rsp+12: spill
#r594 rsp+ 8: spill
#r593 rsp+ 4: spill
#r592 rsp+ 0: spill
#
000     N1: #	out( B1 ) <- in( B27 B34 B28 B25 B35 B29 B32 B33 B31 B30 )  Freq: 1

000     B1: #	out( B26 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
000     # stack bang (200 bytes)
	pushq   rbp	# Save rbp
	subq    rsp, #48	# Create frame

00c     xorl    R10, R10	# int
00f     movq    RCX, java/lang/Class:exact *	# ptr
019     movl    RBX, [RCX + #120 (8-bit)]	# int ! Field: bytereverse.LEN
01c     movl    RBP, RBX	# spill
01e     andl    RBP, #-8	# int
021     testl   RBP, RBP
023     jle     B26  P=0.000666 C=106648.000000

029     B2: #	out( B27 B3 ) <- in( B1 )  Freq: 0.999334
029     movl    R9, [RSI + #12 (8-bit)]	# range
02d     NullCheck RSI

02d     B3: #	out( B27 B4 ) <- in( B2 )  Freq: 0.999333
02d     movl    R8, R9	# spill
030     addl    R8, #-7	# int
034     testl   R8, R8
037     jl     B27  P=0.000001 C=-1.000000

03d     B4: #	out( B27 B5 ) <- in( B3 )  Freq: 0.999332
        nop 	# 3 bytes pad for loops and calls
040     cmpl    R9, #7
044     je     B27  P=0.000001 C=-1.000000

04a     B5: #	out( B27 B6 ) <- in( B4 )  Freq: 0.999331
04a     movslq  R11, RBP	# i2l
04d     movslq  R9, R9	# i2l
050     addq    R11, #7	# long
054     addq    R9, #-7	# long
058     andq    R11, #-8	# long
05c     movl    R11, R11	# l2i
05f     movslq  RDI, R11	# i2l
062     addq    RDI, #-8	# long
066     cmpq    RDI, R9	# unsigned
069     jnb,u   B27  P=0.000001 C=-1.000000

06f     B6: #	out( B27 B7 ) <- in( B5 )  Freq: 0.99933
06f     movl    R9, [RDX + #12 (8-bit)]	# range
073     NullCheck RDX

073     B7: #	out( B27 B8 ) <- in( B6 )  Freq: 0.999329
073     movl    R11, R9	# spill
076     addl    R11, #-7	# int
        nop 	# 6 bytes pad for loops and calls
080     testl   R11, R11
083     jl     B27  P=0.000001 C=-1.000000

089     B8: #	out( B27 B9 ) <- in( B7 )  Freq: 0.999328
089     cmpl    R9, #7
08d     je     B27  P=0.000001 C=-1.000000

093     B9: #	out( B27 B10 ) <- in( B8 )  Freq: 0.999327
093     movslq  R9, R9	# i2l
096     addq    R9, #-7	# long
        nop 	# 6 bytes pad for loops and calls
0a0     cmpq    RDI, R9	# unsigned
0a3     jnb,u   B27  P=0.000001 C=-1.000000

0a9     B10: #	out( B28 B11 ) <- in( B9 )  Freq: 0.999326
0a9     cmpl    RBP, #2147483640
0af     jg     B28  P=0.000001 C=-1.000000

0b5     B11: #	out( B20 B12 ) <- in( B10 )  Freq: 0.999325
0b5     load_vector XMM0,[RSI + #16 (8-bit)]
0ba     replicateI XMM2,[RCX + #148 (32-bit)]
0c3     replicateI XMM3,[RCX + #152 (32-bit)]
0cc     vprotate_imm8 XMM0,XMM0,#16	! vector rotate
0d3     vpand   XMM1,XMM0,XMM2	! and vectors
0d7     vpand   XMM0,XMM0,XMM3	! and vectors
0db     vshiftd_imm  XMM1,XMM1,#8	! shift packedI
0e0     vshiftd_imm  XMM0,XMM0,#8	! shift packedI
0e5     vpor    XMM0,XMM1,XMM0	! or vectors
0e9     store_vector [RDX + #16 (8-bit)],XMM0
	
0ee     movl    RAX, #8	# int
0f3     movl    RCX, RBP	# spill
0f5     addl    RCX, #-56	# int
0f8     movl    R9, #-2147483648	# int
0fe     cmpl    RBP, RCX
100     cmovll RCX, R9	# signed, int
104     cmpl    RCX, #8
107     jle     B20  P=0.000001 C=-1.000000

10d     B12: #	out( B29 B13 ) <- in( B11 )  Freq: 0.999324
10d     cmpl    R11, #8	# unsigned
111     jbe,u   B29  P=0.000001 C=-1.000000

117     B13: #	out( B30 B14 ) <- in( B12 )  Freq: 0.999323
117     cmpl    R8, #8	# unsigned
        nop 	# 5 bytes pad for loops and calls
120     jbe,u   B30  P=0.000001 C=-1.000000

126     B14: #	out( B31 B15 ) <- in( B13 )  Freq: 0.999322
126     cmpl    R8, #64	# unsigned
12a     jbe,u   B31  P=0.000001 C=-1.000000

130     B15: #	out( B32 B16 ) <- in( B14 )  Freq: 0.999321
130     cmpl    R11, #64	# unsigned
134     jbe,u   B32  P=0.000001 C=-1.000000

13a     B16: #	out( B17 ) <- in( B15 )  Freq: 0.99932
13a     movl    R9, #64000	# int
140     # TLS is in R15

140     B17: #	out( B18 ) <- in( B16 B19 ) Loop( B17-B19 ) Freq: 1501.1
140     movl    RDI, RCX	# spill
142     subl    RDI, RAX	# int
144     cmpl    RCX, RAX
146     cmovll RDI, R10	# signed, int
14a     cmpl    RDI, #64000	# unsigned
150     cmovlnbe RDI, R9	# unsigned, int
154     addl    RDI, RAX	# int
        nop 	# 10 bytes pad for loops and calls

160     B18: #	out( B18 B19 ) <- in( B17 B18 ) Loop( B18-B18 inner main of N114 strip mined) Freq: 2.25484e+06
160     load_vector XMM0,[RSI + #16 + RAX << #2]
166     vprotate_imm8 XMM0,XMM0,#16	! vector rotate
16d     vpand   XMM1,XMM0,XMM2	! and vectors
171     vpand   XMM0,XMM0,XMM3	! and vectors
175     vshiftd_imm  XMM1,XMM1,#8	! shift packedI
17a     vshiftd_imm  XMM0,XMM0,#8	! shift packedI
17f     vpor    XMM0,XMM1,XMM0	! or vectors
183     store_vector [RDX + #16 + RAX << #2],XMM0
	
189     load_vector XMM0,[RSI + #48 + RAX << #2]
18f     vprotate_imm8 XMM0,XMM0,#16	! vector rotate
196     vpand   XMM1,XMM0,XMM2	! and vectors
19a     vpand   XMM0,XMM0,XMM3	! and vectors
19e     vshiftd_imm  XMM1,XMM1,#8	! shift packedI
1a3     vshiftd_imm  XMM0,XMM0,#8	! shift packedI
1a8     vpor    XMM0,XMM1,XMM0	! or vectors
1ac     store_vector [RDX + #48 + RAX << #2],XMM0
	
1b2     load_vector XMM0,[RSI + #80 + RAX << #2]
1b8     vprotate_imm8 XMM0,XMM0,#16	! vector rotate
1bf     vpand   XMM1,XMM0,XMM2	! and vectors
1c3     vpand   XMM0,XMM0,XMM3	! and vectors
1c7     vshiftd_imm  XMM1,XMM1,#8	! shift packedI
1cc     vshiftd_imm  XMM0,XMM0,#8	! shift packedI
1d1     vpor    XMM0,XMM1,XMM0	! or vectors
1d5     store_vector [RDX + #80 + RAX << #2],XMM0
	
1db     load_vector XMM0,[RSI + #112 + RAX << #2]
1e1     vprotate_imm8 XMM0,XMM0,#16	! vector rotate
1e8     vpand   XMM1,XMM0,XMM2	! and vectors
1ec     vpand   XMM0,XMM0,XMM3	! and vectors
1f0     vshiftd_imm  XMM1,XMM1,#8	! shift packedI
1f5     vshiftd_imm  XMM0,XMM0,#8	! shift packedI
1fa     vpor    XMM0,XMM1,XMM0	! or vectors
1fe     store_vector [RDX + #112 + RAX << #2],XMM0
	
204     load_vector XMM0,[RSI + #144 + RAX << #2]
20d     vprotate_imm8 XMM0,XMM0,#16	! vector rotate
214     vpand   XMM1,XMM0,XMM2	! and vectors
218     vpand   XMM0,XMM0,XMM3	! and vectors
21c     vshiftd_imm  XMM1,XMM1,#8	! shift packedI
221     vshiftd_imm  XMM0,XMM0,#8	! shift packedI
226     vpor    XMM0,XMM1,XMM0	! or vectors
22a     store_vector [RDX + #144 + RAX << #2],XMM0
	
233     load_vector XMM0,[RSI + #176 + RAX << #2]
23c     vprotate_imm8 XMM0,XMM0,#16	! vector rotate
243     vpand   XMM1,XMM0,XMM2	! and vectors
247     vpand   XMM0,XMM0,XMM3	! and vectors
24b     vshiftd_imm  XMM1,XMM1,#8	! shift packedI
250     vshiftd_imm  XMM0,XMM0,#8	! shift packedI
255     vpor    XMM0,XMM1,XMM0	! or vectors
259     store_vector [RDX + #176 + RAX << #2],XMM0
	
262     load_vector XMM0,[RSI + #208 + RAX << #2]
26b     vprotate_imm8 XMM0,XMM0,#16	! vector rotate
272     vpand   XMM1,XMM0,XMM2	! and vectors
276     vpand   XMM0,XMM0,XMM3	! and vectors
27a     vshiftd_imm  XMM1,XMM1,#8	! shift packedI
27f     vshiftd_imm  XMM0,XMM0,#8	! shift packedI
284     vpor    XMM0,XMM1,XMM0	! or vectors
288     store_vector [RDX + #208 + RAX << #2],XMM0
	
291     load_vector XMM0,[RSI + #240 + RAX << #2]
29a     vprotate_imm8 XMM0,XMM0,#16	! vector rotate
2a1     vpand   XMM1,XMM0,XMM2	! and vectors
2a5     vpand   XMM0,XMM0,XMM3	! and vectors
2a9     vshiftd_imm  XMM1,XMM1,#8	! shift packedI
2ae     vshiftd_imm  XMM0,XMM0,#8	! shift packedI
2b3     vpor    XMM0,XMM1,XMM0	! or vectors
2b7     store_vector [RDX + #240 + RAX << #2],XMM0
	
2c0     addl    RAX, #64	# int
2c3     cmpl    RAX, RDI
2c5     jl     B18	# loop end  P=0.999334 C=106576.000000

2cb     B19: #	out( B17 B20 ) <- in( B18 )  Freq: 1501.1
2cb     movq    RDI, [R15 + #912 (32-bit)]	# ptr
2d2     testl   rax, [RDI]	# Safepoint: poll for GC        # bytereverse::workload2_vector @ bci:126 (line 56) L[0]=RSI L[1]=RDX L[2]=_ L[3]=RAX L[4]=_ L[5]=_ L[6]=_ L[7]=_ L[8]=_
        # OopMap {rdx=Oop rsi=Oop off=722/0x2d2}
2d4     cmpl    RAX, RCX
2d6     jl     B17  P=0.999334 C=106576.000000

2dc     B20: #	out( B24 B21 ) <- in( B11 B19 )  Freq: 0.999321
        nop 	# 4 bytes pad for loops and calls
2e0     cmpl    RAX, RBP
2e2     jge     B24  P=0.500000 C=-1.000000

2e8     B21: #	out( B33 B22 ) <- in( B20 )  Freq: 0.499661
2e8     # castII of RAX
2e8     cmpl    RAX, R8	# unsigned
2eb     jnb,u   B33  P=0.000001 C=-1.000000

2f1     B22: #	out( B34 B23 ) <- in( B21 )  Freq: 0.49966
2f1     cmpl    RAX, R11	# unsigned
2f4     jnb,u   B34  P=0.000001 C=-1.000000
        nop 	# 2 bytes pad for loops and calls

2fc     B23: #	out( B23 B24 ) <- in( B22 B23 ) Loop( B23-B23 inner post of N197) Freq: 0.999319
2fc     load_vector XMM0,[RSI + #16 + RAX << #2]
302     vprotate_imm8 XMM0,XMM0,#16	! vector rotate
309     vpand   XMM1,XMM0,XMM2	! and vectors
30d     vpand   XMM0,XMM0,XMM3	! and vectors
311     vshiftd_imm  XMM1,XMM1,#8	! shift packedI
316     vshiftd_imm  XMM0,XMM0,#8	! shift packedI
31b     vpor    XMM0,XMM1,XMM0	! or vectors
31f     store_vector [RDX + #16 + RAX << #2],XMM0
	
325     addl    RAX, #8	# int
328     cmpl    RAX, RBP
32a     jl,s   B23	# loop end  P=0.500000 C=106576.000000

32c     B24: #	out( B35 B25 ) <- in( B23 B20 B26 )  Freq: 0.999986
32c     cmpl    RAX, RBX
32e     jl     B35  P=0.000000 C=71.000000

334     B25: #	out( N1 ) <- in( B24 )  Freq: 0.999985
334     vzeroupper
	addq    rsp, 48	# Destroy frame
	popq    rbp
	cmpq     rsp, poll_offset[r15_thread] 
	ja       #safepoint_stub	# Safepoint: poll for GC

349     ret

34a     B26: #	out( B24 ) <- in( B1 )  Freq: 0.000665742
34a     xorl    RAX, RAX	# int
34c     jmp,s   B24

34e     B27: #	out( N1 ) <- in( B7 B2 B3 B4 B5 B8 B9 B6 )  Freq: 8.07427e-06
34e     movq    [rsp + #0], RSI	# spill
352     movq    [rsp + #8], RDX	# spill
357     movl    RSI, #-138	# int
35c     call,static  wrapper for: uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')
        # bytereverse::workload2_vector @ bci:17 (line 56) L[0]=rsp + #0 L[1]=rsp + #8 L[2]=_ L[3]=#0 L[4]=_ L[5]=_ L[6]=_ L[7]=_ L[8]=_ STK[0]=#0 STK[1]=RBP
        # OopMap {[0]=Oop [8]=Oop off=868/0x364}
364     stop	# ShouldNotReachHere

378     B28: #	out( N1 ) <- in( B10 )  Freq: 1.0126e-06
378     movq    [rsp + #0], RSI	# spill
37c     movq    [rsp + #8], RDX	# spill
381     movl    RSI, #-146	# int
        nop 	# 2 bytes pad for loops and calls
388     call,static  wrapper for: uncommon_trap(reason='loop_limit_check' action='maybe_recompile' debug_id='0')
        # bytereverse::workload2_vector @ bci:17 (line 56) L[0]=rsp + #0 L[1]=rsp + #8 L[2]=_ L[3]=#0 L[4]=_ L[5]=_ L[6]=_ L[7]=_ L[8]=_ STK[0]=#0 STK[1]=RBP
        # OopMap {[0]=Oop [8]=Oop off=912/0x390}
390     stop	# ShouldNotReachHere

3a4     B29: #	out( N1 ) <- in( B12 )  Freq: 9.99324e-07
3a4     stop	# ShouldNotReachHere

3b8     B30: #	out( N1 ) <- in( B13 )  Freq: 9.99323e-07
3b8     stop	# ShouldNotReachHere

3cc     B31: #	out( N1 ) <- in( B14 )  Freq: 9.99322e-07
3cc     stop	# ShouldNotReachHere

3e0     B32: #	out( N1 ) <- in( B15 )  Freq: 9.99321e-07
3e0     stop	# ShouldNotReachHere

3f4     B33: #	out( N1 ) <- in( B21 )  Freq: 5.06296e-07
3f4     stop	# ShouldNotReachHere

408     B34: #	out( N1 ) <- in( B22 )  Freq: 5.06295e-07
408     stop	# ShouldNotReachHere

41c     B35: #	out( N1 ) <- in( B24 )  Freq: 4.7683e-07
41c     movq    RBP, RSI	# spill
41f     movq    [rsp + #0], RDX	# spill
423     movl    [rsp + #12], RAX	# spill
427     movl    [rsp + #16], RBX	# spill
42b     movl    RSI, #-187	# int
430     call,static  wrapper for: uncommon_trap(reason='unstable_if' action='reinterpret' debug_id='0')
        # bytereverse::workload2_vector @ bci:133 (line 76) L[0]=RBP L[1]=rsp + #0 L[2]=_ L[3]=rsp + #12 L[4]=_ L[5]=_ L[6]=_ L[7]=_ L[8]=_ STK[0]=rsp + #12 STK[1]=rsp + #16
        # OopMap {rbp=Oop [0]=Oop off=1080/0x438}
438     stop	# ShouldNotReachHere

--------------------------------------------------------------------------------
----------------------------------- Assembly -----------------------------------

Compiled method (c2)   12706 1240       4       bytereverse::workload2_vector (153 bytes)
 total in heap  [0x00007fb370ce2e10,0x00007fb370ce3ab0] = 3232
 relocation     [0x00007fb370ce2f80,0x00007fb370ce3008] = 136
 main code      [0x00007fb370ce3020,0x00007fb370ce34a0] = 1152
 stub code      [0x00007fb370ce34a0,0x00007fb370ce34b8] = 24
 oops           [0x00007fb370ce34b8,0x00007fb370ce34d0] = 24
 metadata       [0x00007fb370ce34d0,0x00007fb370ce35a8] = 216
 scopes data    [0x00007fb370ce35a8,0x00007fb370ce36a8] = 256
 scopes pcs     [0x00007fb370ce36a8,0x00007fb370ce3a78] = 976
 dependencies   [0x00007fb370ce3a78,0x00007fb370ce3a98] = 32
 nul chk table  [0x00007fb370ce3a98,0x00007fb370ce3ab0] = 24

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x00007fb304411d58} 'workload2_vector' '([I[II)I' in 'bytereverse'
  # parm0:    rsi:rsi   = '[I'
  # parm1:    rdx:rdx   = '[I'
  # parm2:    rcx       = int
  #           [sp+0x40]  (sp of caller)
 ;; N1: #	out( B1 ) <- in( B27 B34 B28 B25 B35 B29 B32 B33 B31 B30 )  Freq: 1
 ;; B1: #	out( B26 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x00007fb370ce3020:   mov    %eax,-0x16000(%rsp)
  0x00007fb370ce3027:   push   %rbp
  0x00007fb370ce3028:   sub    $0x30,%rsp
  0x00007fb370ce302c:   xor    %r10d,%r10d
  0x00007fb370ce302f:   movabs $0xeb025620,%rcx             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload2_vector@112 (line 73)
                                                            ;   {oop(a 'java/lang/Class'{0x00000000eb025620} = 'bytereverse')}
  0x00007fb370ce3039:   mov    0x78(%rcx),%ebx              ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - bytereverse::workload2_vector@17 (line 56)
  0x00007fb370ce303c:   mov    %ebx,%ebp
  0x00007fb370ce303e:   and    $0xfffffff8,%ebp
  0x00007fb370ce3041:   test   %ebp,%ebp
  0x00007fb370ce3043:   jle    0x00007fb370ce336a
 ;; B2: #	out( B27 B3 ) <- in( B1 )  Freq: 0.999334
  0x00007fb370ce3049:   mov    0xc(%rsi),%r9d               ; implicit exception: dispatches to 0x00007fb370ce336e
 ;; B3: #	out( B27 B4 ) <- in( B2 )  Freq: 0.999333
  0x00007fb370ce304d:   mov    %r9d,%r8d
  0x00007fb370ce3050:   add    $0xfffffff9,%r8d
  0x00007fb370ce3054:   test   %r8d,%r8d
  0x00007fb370ce3057:   jl     0x00007fb370ce336e
 ;; B4: #	out( B27 B5 ) <- in( B3 )  Freq: 0.999332
  0x00007fb370ce305d:   nop
  0x00007fb370ce305e:   nop
  0x00007fb370ce305f:   nop
  0x00007fb370ce3060:   cmp    $0x7,%r9d
  0x00007fb370ce3064:   je     0x00007fb370ce336e
 ;; B5: #	out( B27 B6 ) <- in( B4 )  Freq: 0.999331
  0x00007fb370ce306a:   movslq %ebp,%r11
  0x00007fb370ce306d:   movslq %r9d,%r9
  0x00007fb370ce3070:   add    $0x7,%r11
  0x00007fb370ce3074:   add    $0xfffffffffffffff9,%r9
  0x00007fb370ce3078:   and    $0xfffffffffffffff8,%r11
  0x00007fb370ce307c:   mov    %r11d,%r11d
  0x00007fb370ce307f:   movslq %r11d,%rdi
  0x00007fb370ce3082:   add    $0xfffffffffffffff8,%rdi
  0x00007fb370ce3086:   cmp    %r9,%rdi
  0x00007fb370ce3089:   jae    0x00007fb370ce336e
 ;; B6: #	out( B27 B7 ) <- in( B5 )  Freq: 0.99933
  0x00007fb370ce308f:   mov    0xc(%rdx),%r9d               ; implicit exception: dispatches to 0x00007fb370ce336e
 ;; B7: #	out( B27 B8 ) <- in( B6 )  Freq: 0.999329
  0x00007fb370ce3093:   mov    %r9d,%r11d
  0x00007fb370ce3096:   add    $0xfffffff9,%r11d
  0x00007fb370ce309a:   nop
  0x00007fb370ce309b:   nop
  0x00007fb370ce309c:   nop
  0x00007fb370ce309d:   nop
  0x00007fb370ce309e:   nop
  0x00007fb370ce309f:   nop
  0x00007fb370ce30a0:   test   %r11d,%r11d
  0x00007fb370ce30a3:   jl     0x00007fb370ce336e
 ;; B8: #	out( B27 B9 ) <- in( B7 )  Freq: 0.999328
  0x00007fb370ce30a9:   cmp    $0x7,%r9d
  0x00007fb370ce30ad:   je     0x00007fb370ce336e
 ;; B9: #	out( B27 B10 ) <- in( B8 )  Freq: 0.999327
  0x00007fb370ce30b3:   movslq %r9d,%r9
  0x00007fb370ce30b6:   add    $0xfffffffffffffff9,%r9
  0x00007fb370ce30ba:   nop
  0x00007fb370ce30bb:   nop
  0x00007fb370ce30bc:   nop
  0x00007fb370ce30bd:   nop
  0x00007fb370ce30be:   nop
  0x00007fb370ce30bf:   nop
  0x00007fb370ce30c0:   cmp    %r9,%rdi
  0x00007fb370ce30c3:   jae    0x00007fb370ce336e
 ;; B10: #	out( B28 B11 ) <- in( B9 )  Freq: 0.999326
  0x00007fb370ce30c9:   cmp    $0x7ffffff8,%ebp
  0x00007fb370ce30cf:   jg     0x00007fb370ce3398
 ;; B11: #	out( B20 B12 ) <- in( B10 )  Freq: 0.999325
  0x00007fb370ce30d5:   vmovdqu 0x10(%rsi),%ymm0            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload2_vector@112 (line 73)
  0x00007fb370ce30da:   vpbroadcastd 0x94(%rcx),%ymm2       ;*invokestatic fromArray {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - bytereverse::workload2_vector@25 (line 57)
  0x00007fb370ce30e3:   vpbroadcastd 0x98(%rcx),%ymm3       ;*invokeinterface length {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::fromArray@2 (line 2894)
                                                            ; - bytereverse::workload2_vector@25 (line 57)
  0x00007fb370ce30ec:   vprold $0x10,%ymm0,%ymm0            ;*invokevirtual laneCount {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::fromArray0Template@14 (line 3403)
                                                            ; - jdk.incubator.vector.Int256Vector::fromArray0@3 (line 828)
                                                            ; - jdk.incubator.vector.IntVector::fromArray@24 (line 2896)
                                                            ; - bytereverse::workload2_vector@25 (line 57)
  0x00007fb370ce30f3:   vpand  %ymm2,%ymm0,%ymm1
  0x00007fb370ce30f7:   vpand  %ymm3,%ymm0,%ymm0
  0x00007fb370ce30fb:   vpsrld $0x8,%ymm1,%ymm1
  0x00007fb370ce3100:   vpslld $0x8,%ymm0,%ymm0
  0x00007fb370ce3105:   vpor   %ymm0,%ymm1,%ymm0            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload2_vector@112 (line 73)
  0x00007fb370ce3109:   vmovdqu %ymm0,0x10(%rdx)            ;*invokeinterface loopBound {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - bytereverse::workload2_vector@12 (line 56)
  0x00007fb370ce310e:   mov    $0x8,%eax                    ;*invokestatic roundDown {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.AbstractSpecies::loopBound@5 (line 203)
                                                            ; - bytereverse::workload2_vector@12 (line 56)
  0x00007fb370ce3113:   mov    %ebp,%ecx
  0x00007fb370ce3115:   add    $0xffffffc8,%ecx
  0x00007fb370ce3118:   mov    $0x80000000,%r9d
  0x00007fb370ce311e:   cmp    %ecx,%ebp
  0x00007fb370ce3120:   cmovl  %r9d,%ecx
  0x00007fb370ce3124:   cmp    $0x8,%ecx                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload2_vector@112 (line 73)
  0x00007fb370ce3127:   jle    0x00007fb370ce32fc
 ;; B12: #	out( B29 B13 ) <- in( B11 )  Freq: 0.999324
  0x00007fb370ce312d:   cmp    $0x8,%r11d
  0x00007fb370ce3131:   jbe    0x00007fb370ce33c4
 ;; B13: #	out( B30 B14 ) <- in( B12 )  Freq: 0.999323
  0x00007fb370ce3137:   cmp    $0x8,%r8d
  0x00007fb370ce313b:   nop
  0x00007fb370ce313c:   nop
  0x00007fb370ce313d:   nop
  0x00007fb370ce313e:   nop
  0x00007fb370ce313f:   nop
  0x00007fb370ce3140:   jbe    0x00007fb370ce33d8
 ;; B14: #	out( B31 B15 ) <- in( B13 )  Freq: 0.999322
  0x00007fb370ce3146:   cmp    $0x40,%r8d
  0x00007fb370ce314a:   jbe    0x00007fb370ce33ec
 ;; B15: #	out( B32 B16 ) <- in( B14 )  Freq: 0.999321
  0x00007fb370ce3150:   cmp    $0x40,%r11d
  0x00007fb370ce3154:   jbe    0x00007fb370ce3400
 ;; B16: #	out( B17 ) <- in( B15 )  Freq: 0.99932
  0x00007fb370ce315a:   mov    $0xfa00,%r9d                 ;*invokevirtual find {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::lanewiseShiftTemplate@59 (line 905)
                                                            ; - jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 298)
                                                            ; - jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 41)
                                                            ; - jdk.incubator.vector.IntVector::lanewise@17 (line 801)
                                                            ; - bytereverse::workload2_vector@37 (line 62)
 ;; B17: #	out( B18 ) <- in( B16 B19 ) Loop( B17-B19 ) Freq: 1501.1
  0x00007fb370ce3160:   mov    %ecx,%edi
  0x00007fb370ce3162:   sub    %eax,%edi
  0x00007fb370ce3164:   cmp    %eax,%ecx
  0x00007fb370ce3166:   cmovl  %r10d,%edi
  0x00007fb370ce316a:   cmp    $0xfa00,%edi
  0x00007fb370ce3170:   cmova  %r9d,%edi
  0x00007fb370ce3174:   add    %eax,%edi                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload2_vector@112 (line 73)
  0x00007fb370ce3176:   nop
  0x00007fb370ce3177:   nop
  0x00007fb370ce3178:   nop
  0x00007fb370ce3179:   nop
  0x00007fb370ce317a:   nop
  0x00007fb370ce317b:   nop
  0x00007fb370ce317c:   nop
  0x00007fb370ce317d:   nop
  0x00007fb370ce317e:   nop
  0x00007fb370ce317f:   nop                                 ;*invokevirtual find {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::lanewiseShiftTemplate@59 (line 905)
                                                            ; - jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 298)
                                                            ; - jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 41)
                                                            ; - jdk.incubator.vector.IntVector::lanewise@17 (line 801)
                                                            ; - bytereverse::workload2_vector@37 (line 62)
 ;; B18: #	out( B18 B19 ) <- in( B17 B18 ) Loop( B18-B18 inner main of N114 strip mined) Freq: 2.25484e+06
  0x00007fb370ce3180:   vmovdqu 0x10(%rsi,%rax,4),%ymm0     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload2_vector@112 (line 73)
  0x00007fb370ce3186:   vprold $0x10,%ymm0,%ymm0            ;*synchronization entry
                                                            ; - java.lang.invoke.LambdaForm$MH/0x0000000800006c00::invoke@-1
                                                            ; - java.lang.invoke.LambdaForm$MH/0x0000000800007000::linkToTargetMethod@4
                                                            ; - jdk.incubator.vector.IntVector::lanewiseShiftTemplate@54 (line 903)
                                                            ; - jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 298)
                                                            ; - jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 41)
                                                            ; - jdk.incubator.vector.IntVector::lanewise@17 (line 801)
                                                            ; - bytereverse::workload2_vector@37 (line 62)
  0x00007fb370ce318d:   vpand  %ymm2,%ymm0,%ymm1
  0x00007fb370ce3191:   vpand  %ymm3,%ymm0,%ymm0
  0x00007fb370ce3195:   vpsrld $0x8,%ymm1,%ymm1
  0x00007fb370ce319a:   vpslld $0x8,%ymm0,%ymm0
  0x00007fb370ce319f:   vpor   %ymm0,%ymm1,%ymm0            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload2_vector@112 (line 73)
  0x00007fb370ce31a3:   vmovdqu %ymm0,0x10(%rdx,%rax,4)     ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.LambdaForm$MH/0x0000000800007000::linkToTargetMethod@4
                                                            ; - jdk.incubator.vector.IntVector::lanewiseShiftTemplate@54 (line 903)
                                                            ; - jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 298)
                                                            ; - jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 41)
                                                            ; - jdk.incubator.vector.IntVector::lanewise@17 (line 801)
                                                            ; - bytereverse::workload2_vector@37 (line 62)
  0x00007fb370ce31a9:   vmovdqu 0x30(%rsi,%rax,4),%ymm0     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload2_vector@112 (line 73)
  0x00007fb370ce31af:   vprold $0x10,%ymm0,%ymm0            ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.LambdaForm$MH/0x0000000800007000::linkToTargetMethod@4
                                                            ; - jdk.incubator.vector.IntVector::lanewiseShiftTemplate@54 (line 903)
                                                            ; - jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 298)
                                                            ; - jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 41)
                                                            ; - jdk.incubator.vector.IntVector::lanewise@17 (line 801)
                                                            ; - bytereverse::workload2_vector@37 (line 62)
  0x00007fb370ce31b6:   vpand  %ymm2,%ymm0,%ymm1
  0x00007fb370ce31ba:   vpand  %ymm3,%ymm0,%ymm0
  0x00007fb370ce31be:   vpsrld $0x8,%ymm1,%ymm1
  0x00007fb370ce31c3:   vpslld $0x8,%ymm0,%ymm0
  0x00007fb370ce31c8:   vpor   %ymm0,%ymm1,%ymm0            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload2_vector@112 (line 73)
  0x00007fb370ce31cc:   vmovdqu %ymm0,0x30(%rdx,%rax,4)     ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::lanewiseShiftTemplate@54 (line 903)
                                                            ; - jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 298)
                                                            ; - jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 41)
                                                            ; - jdk.incubator.vector.IntVector::lanewise@17 (line 801)
                                                            ; - bytereverse::workload2_vector@37 (line 62)
  0x00007fb370ce31d2:   vmovdqu 0x50(%rsi,%rax,4),%ymm0     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload2_vector@112 (line 73)
  0x00007fb370ce31d8:   vprold $0x10,%ymm0,%ymm0            ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::lanewiseShiftTemplate@54 (line 903)
                                                            ; - jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 298)
                                                            ; - jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 41)
                                                            ; - jdk.incubator.vector.IntVector::lanewise@17 (line 801)
                                                            ; - bytereverse::workload2_vector@37 (line 62)
  0x00007fb370ce31df:   vpand  %ymm2,%ymm0,%ymm1
  0x00007fb370ce31e3:   vpand  %ymm3,%ymm0,%ymm0
  0x00007fb370ce31e7:   vpsrld $0x8,%ymm1,%ymm1
  0x00007fb370ce31ec:   vpslld $0x8,%ymm0,%ymm0
  0x00007fb370ce31f1:   vpor   %ymm0,%ymm1,%ymm0            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload2_vector@112 (line 73)
  0x00007fb370ce31f5:   vmovdqu %ymm0,0x50(%rdx,%rax,4)     ;*invokevirtual length {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::lanewiseShiftTemplate@43 (line 903)
                                                            ; - jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 298)
                                                            ; - jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 41)
                                                            ; - jdk.incubator.vector.IntVector::lanewise@17 (line 801)
                                                            ; - bytereverse::workload2_vector@37 (line 62)
  0x00007fb370ce31fb:   vmovdqu 0x70(%rsi,%rax,4),%ymm0     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload2_vector@112 (line 73)
  0x00007fb370ce3201:   vprold $0x10,%ymm0,%ymm0            ;*invokevirtual length {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::lanewiseShiftTemplate@43 (line 903)
                                                            ; - jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 298)
                                                            ; - jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 41)
                                                            ; - jdk.incubator.vector.IntVector::lanewise@17 (line 801)
                                                            ; - bytereverse::workload2_vector@37 (line 62)
  0x00007fb370ce3208:   vpand  %ymm2,%ymm0,%ymm1
  0x00007fb370ce320c:   vpand  %ymm3,%ymm0,%ymm0
  0x00007fb370ce3210:   vpsrld $0x8,%ymm1,%ymm1
  0x00007fb370ce3215:   vpslld $0x8,%ymm0,%ymm0
  0x00007fb370ce321a:   vpor   %ymm0,%ymm1,%ymm0            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload2_vector@112 (line 73)
  0x00007fb370ce321e:   vmovdqu %ymm0,0x70(%rdx,%rax,4)     ;*invokespecial lanewiseShiftTemplate {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 298)
                                                            ; - jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 41)
                                                            ; - jdk.incubator.vector.IntVector::lanewise@17 (line 801)
                                                            ; - bytereverse::workload2_vector@37 (line 62)
  0x00007fb370ce3224:   vmovdqu 0x90(%rsi,%rax,4),%ymm0     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload2_vector@112 (line 73)
  0x00007fb370ce322d:   vprold $0x10,%ymm0,%ymm0            ;*invokestatic opCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::opCode@7 (line 62)
                                                            ; - jdk.incubator.vector.IntVector::lanewiseShiftTemplate@29 (line 901)
                                                            ; - jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 298)
                                                            ; - jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 41)
                                                            ; - jdk.incubator.vector.IntVector::lanewise@17 (line 801)
                                                            ; - bytereverse::workload2_vector@37 (line 62)
  0x00007fb370ce3234:   vpand  %ymm2,%ymm0,%ymm1
  0x00007fb370ce3238:   vpand  %ymm3,%ymm0,%ymm0
  0x00007fb370ce323c:   vpsrld $0x8,%ymm1,%ymm1
  0x00007fb370ce3241:   vpslld $0x8,%ymm0,%ymm0
  0x00007fb370ce3246:   vpor   %ymm0,%ymm1,%ymm0            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload2_vector@112 (line 73)
  0x00007fb370ce324a:   vmovdqu %ymm0,0x90(%rdx,%rax,4)     ;*invokestatic opCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::opCode@7 (line 62)
                                                            ; - jdk.incubator.vector.IntVector::lanewiseShiftTemplate@29 (line 901)
                                                            ; - jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 298)
                                                            ; - jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 41)
                                                            ; - jdk.incubator.vector.IntVector::lanewise@17 (line 801)
                                                            ; - bytereverse::workload2_vector@37 (line 62)
  0x00007fb370ce3253:   vmovdqu 0xb0(%rsi,%rax,4),%ymm0     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload2_vector@112 (line 73)
  0x00007fb370ce325c:   vprold $0x10,%ymm0,%ymm0            ;*invokeinterface length {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::fromArray@2 (line 2894)
                                                            ; - bytereverse::workload2_vector@25 (line 57)
  0x00007fb370ce3263:   vpand  %ymm2,%ymm0,%ymm1
  0x00007fb370ce3267:   vpand  %ymm3,%ymm0,%ymm0
  0x00007fb370ce326b:   vpsrld $0x8,%ymm1,%ymm1
  0x00007fb370ce3270:   vpslld $0x8,%ymm0,%ymm0
  0x00007fb370ce3275:   vpor   %ymm0,%ymm1,%ymm0            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload2_vector@112 (line 73)
  0x00007fb370ce3279:   vmovdqu %ymm0,0xb0(%rdx,%rax,4)     ;*invokestatic opCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::lanewiseShiftTemplate@29 (line 901)
                                                            ; - jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 298)
                                                            ; - jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 41)
                                                            ; - jdk.incubator.vector.IntVector::lanewise@17 (line 801)
                                                            ; - bytereverse::workload2_vector@37 (line 62)
  0x00007fb370ce3282:   vmovdqu 0xd0(%rsi,%rax,4),%ymm0     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload2_vector@112 (line 73)
  0x00007fb370ce328b:   vprold $0x10,%ymm0,%ymm0            ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::lanewise@6 (line 800)
                                                            ; - bytereverse::workload2_vector@37 (line 62)
  0x00007fb370ce3292:   vpand  %ymm2,%ymm0,%ymm1
  0x00007fb370ce3296:   vpand  %ymm3,%ymm0,%ymm0
  0x00007fb370ce329a:   vpsrld $0x8,%ymm1,%ymm1
  0x00007fb370ce329f:   vpslld $0x8,%ymm0,%ymm0
  0x00007fb370ce32a4:   vpor   %ymm0,%ymm1,%ymm0            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload2_vector@112 (line 73)
  0x00007fb370ce32a8:   vmovdqu %ymm0,0xd0(%rdx,%rax,4)     ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.VectorOperators$OperatorImpl::opKind@14 (line 883)
                                                            ; - jdk.incubator.vector.VectorOperators::opKind@5 (line 409)
                                                            ; - jdk.incubator.vector.IntVector::opKind@2 (line 71)
                                                            ; - jdk.incubator.vector.IntVector::lanewise@3 (line 800)
                                                            ; - bytereverse::workload2_vector@37 (line 62)
  0x00007fb370ce32b1:   vmovdqu 0xf0(%rsi,%rax,4),%ymm0     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload2_vector@112 (line 73)
  0x00007fb370ce32ba:   vprold $0x10,%ymm0,%ymm0            ;*invokeinterface length {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::fromArray@2 (line 2894)
                                                            ; - bytereverse::workload2_vector@25 (line 57)
  0x00007fb370ce32c1:   vpand  %ymm2,%ymm0,%ymm1
  0x00007fb370ce32c5:   vpand  %ymm3,%ymm0,%ymm0
  0x00007fb370ce32c9:   vpsrld $0x8,%ymm1,%ymm1
  0x00007fb370ce32ce:   vpslld $0x8,%ymm0,%ymm0
  0x00007fb370ce32d3:   vpor   %ymm0,%ymm1,%ymm0            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload2_vector@112 (line 73)
  0x00007fb370ce32d7:   vmovdqu %ymm0,0xf0(%rdx,%rax,4)
  0x00007fb370ce32e0:   add    $0x40,%eax
  0x00007fb370ce32e3:   cmp    %edi,%eax
  0x00007fb370ce32e5:   jl     0x00007fb370ce3180           ;*invokeinterface loopBound {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - bytereverse::workload2_vector@12 (line 56)
 ;; B19: #	out( B17 B20 ) <- in( B18 )  Freq: 1501.1
  0x00007fb370ce32eb:   mov    0x390(%r15),%rdi             ; ImmutableOopMap {rdx=Oop rsi=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) bytereverse::workload2_vector@126 (line 56)
  0x00007fb370ce32f2:   test   %eax,(%rdi)                  ;   {poll}
  0x00007fb370ce32f4:   cmp    %ecx,%eax
  0x00007fb370ce32f6:   jl     0x00007fb370ce3160
 ;; B20: #	out( B24 B21 ) <- in( B11 B19 )  Freq: 0.999321
  0x00007fb370ce32fc:   nop
  0x00007fb370ce32fd:   nop
  0x00007fb370ce32fe:   nop
  0x00007fb370ce32ff:   nop
  0x00007fb370ce3300:   cmp    %ebp,%eax
  0x00007fb370ce3302:   jge    0x00007fb370ce334c
 ;; B21: #	out( B33 B22 ) <- in( B20 )  Freq: 0.499661
  0x00007fb370ce3308:   cmp    %r8d,%eax
  0x00007fb370ce330b:   jae    0x00007fb370ce3414
 ;; B22: #	out( B34 B23 ) <- in( B21 )  Freq: 0.49966
  0x00007fb370ce3311:   cmp    %r11d,%eax
  0x00007fb370ce3314:   jae    0x00007fb370ce3428           ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload2_vector@112 (line 73)
  0x00007fb370ce331a:   nop
  0x00007fb370ce331b:   nop                                 ;*invokevirtual elementType {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::fromArray0Template@10 (line 3403)
                                                            ; - jdk.incubator.vector.Int256Vector::fromArray0@3 (line 828)
                                                            ; - jdk.incubator.vector.IntVector::fromArray@24 (line 2896)
                                                            ; - bytereverse::workload2_vector@25 (line 57)
 ;; B23: #	out( B23 B24 ) <- in( B22 B23 ) Loop( B23-B23 inner post of N197) Freq: 0.999319
  0x00007fb370ce331c:   vmovdqu 0x10(%rsi,%rax,4),%ymm0     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload2_vector@112 (line 73)
  0x00007fb370ce3322:   vprold $0x10,%ymm0,%ymm0            ;*invokespecial fromArray0Template {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.Int256Vector::fromArray0@3 (line 828)
                                                            ; - jdk.incubator.vector.IntVector::fromArray@24 (line 2896)
                                                            ; - bytereverse::workload2_vector@25 (line 57)
  0x00007fb370ce3329:   vpand  %ymm2,%ymm0,%ymm1
  0x00007fb370ce332d:   vpand  %ymm3,%ymm0,%ymm0
  0x00007fb370ce3331:   vpsrld $0x8,%ymm1,%ymm1
  0x00007fb370ce3336:   vpslld $0x8,%ymm0,%ymm0
  0x00007fb370ce333b:   vpor   %ymm0,%ymm1,%ymm0
  0x00007fb370ce333f:   vmovdqu %ymm0,0x10(%rdx,%rax,4)
  0x00007fb370ce3345:   add    $0x8,%eax
  0x00007fb370ce3348:   cmp    %ebp,%eax                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload2_vector@112 (line 73)
  0x00007fb370ce334a:   jl     0x00007fb370ce331c           ;*invokevirtual fromArray0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::fromArray@24 (line 2896)
                                                            ; - bytereverse::workload2_vector@25 (line 57)
 ;; B24: #	out( B35 B25 ) <- in( B23 B20 B26 )  Freq: 0.999986
  0x00007fb370ce334c:   cmp    %ebx,%eax
  0x00007fb370ce334e:   jl     0x00007fb370ce343c
 ;; B25: #	out( N1 ) <- in( B24 )  Freq: 0.999985
  0x00007fb370ce3354:   vzeroupper 
  0x00007fb370ce3357:   add    $0x30,%rsp
  0x00007fb370ce335b:   pop    %rbp
  0x00007fb370ce335c:   cmp    0x388(%r15),%rsp             ;   {poll_return}
  0x00007fb370ce3363:   ja     0x00007fb370ce346c
  0x00007fb370ce3369:   retq   
 ;; B26: #	out( B24 ) <- in( B1 )  Freq: 0.000665742
  0x00007fb370ce336a:   xor    %eax,%eax
  0x00007fb370ce336c:   jmp    0x00007fb370ce334c
 ;; B27: #	out( N1 ) <- in( B7 B2 B3 B4 B5 B8 B9 B6 )  Freq: 8.07427e-06
  0x00007fb370ce336e:   mov    %rsi,(%rsp)
  0x00007fb370ce3372:   mov    %rdx,0x8(%rsp)               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload2_vector@112 (line 73)
  0x00007fb370ce3377:   mov    $0xffffff76,%esi
  0x00007fb370ce337c:   vzeroupper 
  0x00007fb370ce337f:   callq  0x00007fb36911e920           ; ImmutableOopMap {[0]=Oop [8]=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) bytereverse::workload2_vector@17 (line 56)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fb370ce3384:   movabs $0x7fb3812bd328,%rdi         ;   {external_word}
  0x00007fb370ce338e:   and    $0xfffffffffffffff0,%rsp
  0x00007fb370ce3392:   callq  0x00007fb38096b4b0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb370ce3397:   hlt    
 ;; B28: #	out( N1 ) <- in( B10 )  Freq: 1.0126e-06
  0x00007fb370ce3398:   mov    %rsi,(%rsp)
  0x00007fb370ce339c:   mov    %rdx,0x8(%rsp)               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload2_vector@112 (line 73)
  0x00007fb370ce33a1:   mov    $0xffffff6e,%esi
  0x00007fb370ce33a6:   nop
  0x00007fb370ce33a7:   nop
  0x00007fb370ce33a8:   vzeroupper 
  0x00007fb370ce33ab:   callq  0x00007fb36911e920           ; ImmutableOopMap {[0]=Oop [8]=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) bytereverse::workload2_vector@17 (line 56)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fb370ce33b0:   movabs $0x7fb3812bd328,%rdi         ;   {external_word}
  0x00007fb370ce33ba:   and    $0xfffffffffffffff0,%rsp
  0x00007fb370ce33be:   callq  0x00007fb38096b4b0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb370ce33c3:   hlt    
 ;; B29: #	out( N1 ) <- in( B12 )  Freq: 9.99324e-07
  0x00007fb370ce33c4:   movabs $0x7fb3813320b8,%rdi         ;   {external_word}
  0x00007fb370ce33ce:   and    $0xfffffffffffffff0,%rsp
  0x00007fb370ce33d2:   callq  0x00007fb38096b4b0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb370ce33d7:   hlt    
 ;; B30: #	out( N1 ) <- in( B13 )  Freq: 9.99323e-07
  0x00007fb370ce33d8:   movabs $0x7fb3813320b8,%rdi         ;   {external_word}
  0x00007fb370ce33e2:   and    $0xfffffffffffffff0,%rsp
  0x00007fb370ce33e6:   callq  0x00007fb38096b4b0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb370ce33eb:   hlt    
 ;; B31: #	out( N1 ) <- in( B14 )  Freq: 9.99322e-07
  0x00007fb370ce33ec:   movabs $0x7fb3813320b8,%rdi         ;   {external_word}
  0x00007fb370ce33f6:   and    $0xfffffffffffffff0,%rsp
  0x00007fb370ce33fa:   callq  0x00007fb38096b4b0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb370ce33ff:   hlt    
 ;; B32: #	out( N1 ) <- in( B15 )  Freq: 9.99321e-07
  0x00007fb370ce3400:   movabs $0x7fb3813320b8,%rdi         ;   {external_word}
  0x00007fb370ce340a:   and    $0xfffffffffffffff0,%rsp
  0x00007fb370ce340e:   callq  0x00007fb38096b4b0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb370ce3413:   hlt    
 ;; B33: #	out( N1 ) <- in( B21 )  Freq: 5.06296e-07
  0x00007fb370ce3414:   movabs $0x7fb3813320b8,%rdi         ;   {external_word}
  0x00007fb370ce341e:   and    $0xfffffffffffffff0,%rsp
  0x00007fb370ce3422:   callq  0x00007fb38096b4b0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb370ce3427:   hlt    
 ;; B34: #	out( N1 ) <- in( B22 )  Freq: 5.06295e-07
  0x00007fb370ce3428:   movabs $0x7fb3813320b8,%rdi         ;   {external_word}
  0x00007fb370ce3432:   and    $0xfffffffffffffff0,%rsp
  0x00007fb370ce3436:   callq  0x00007fb38096b4b0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb370ce343b:   hlt    
 ;; B35: #	out( N1 ) <- in( B24 )  Freq: 4.7683e-07
  0x00007fb370ce343c:   mov    %rsi,%rbp
  0x00007fb370ce343f:   mov    %rdx,(%rsp)
  0x00007fb370ce3443:   mov    %eax,0xc(%rsp)
  0x00007fb370ce3447:   mov    %ebx,0x10(%rsp)              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload2_vector@112 (line 73)
  0x00007fb370ce344b:   mov    $0xffffff45,%esi
  0x00007fb370ce3450:   vzeroupper 
  0x00007fb370ce3453:   callq  0x00007fb36911e920           ; ImmutableOopMap {rbp=Oop [0]=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) bytereverse::workload2_vector@133 (line 76)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fb370ce3458:   movabs $0x7fb3812bd328,%rdi         ;   {external_word}
  0x00007fb370ce3462:   and    $0xfffffffffffffff0,%rsp
  0x00007fb370ce3466:   callq  0x00007fb38096b4b0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb370ce346b:   hlt                                 ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload2_vector@112 (line 73)
  0x00007fb370ce346c:   movabs $0x7fb370ce335c,%r10         ;   {internal_word}
  0x00007fb370ce3476:   mov    %r10,0x3a0(%r15)
  0x00007fb370ce347d:   jmpq   0x00007fb36911d6a0           ;   {runtime_call SafepointBlob}
  0x00007fb370ce3482:   hlt    
  0x00007fb370ce3483:   hlt    
  0x00007fb370ce3484:   hlt    
  0x00007fb370ce3485:   hlt    
  0x00007fb370ce3486:   hlt    
  0x00007fb370ce3487:   hlt    
  0x00007fb370ce3488:   hlt    
  0x00007fb370ce3489:   hlt    
  0x00007fb370ce348a:   hlt    
  0x00007fb370ce348b:   hlt    
  0x00007fb370ce348c:   hlt    
  0x00007fb370ce348d:   hlt    
  0x00007fb370ce348e:   hlt    
  0x00007fb370ce348f:   hlt    
  0x00007fb370ce3490:   hlt    
  0x00007fb370ce3491:   hlt    
  0x00007fb370ce3492:   hlt    
  0x00007fb370ce3493:   hlt    
  0x00007fb370ce3494:   hlt    
  0x00007fb370ce3495:   hlt    
  0x00007fb370ce3496:   hlt    
  0x00007fb370ce3497:   hlt    
  0x00007fb370ce3498:   hlt    
  0x00007fb370ce3499:   hlt    
  0x00007fb370ce349a:   hlt    
  0x00007fb370ce349b:   hlt    
  0x00007fb370ce349c:   hlt    
  0x00007fb370ce349d:   hlt    
  0x00007fb370ce349e:   hlt    
  0x00007fb370ce349f:   hlt    
[Exception Handler]
  0x00007fb370ce34a0:   jmpq   0x00007fb369081da0           ;   {no_reloc}
[Deopt Handler Code]
  0x00007fb370ce34a5:   callq  0x00007fb370ce34aa
  0x00007fb370ce34aa:   subq   $0x5,(%rsp)
  0x00007fb370ce34af:   jmpq   0x00007fb36911ec60           ;   {runtime_call DeoptimizationBlob}
  0x00007fb370ce34b4:   hlt    
  0x00007fb370ce34b5:   hlt    
  0x00007fb370ce34b6:   hlt    
  0x00007fb370ce34b7:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Oops:
  0x00007fb370ce34b8:   0x00000000eb00ee30 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x00000000eb00ee30}
  0x00007fb370ce34c0:   0x00000000eb010f88 a 'java/lang/Class'{0x00000000eb010f88} = 'java/lang/invoke/LambdaForm$MH+0x0000000800007000'
  0x00007fb370ce34c8:   0x00000000eb011000 a 'java/lang/Class'{0x00000000eb011000} = 'java/lang/invoke/LambdaForm$MH+0x0000000800006c00'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Metadata:
  0x00007fb370ce34d0:   0x00007fb304411d58 {method} {0x00007fb304411d58} 'workload2_vector' '([I[II)I' in 'bytereverse'
  0x00007fb370ce34d8:   0x00007fb30441b780 {method} {0x00007fb30441b780} 'intoArray' '([II)V' in 'jdk/incubator/vector/IntVector'
  0x00007fb370ce34e0:   0x00007fb30441afd0 {method} {0x00007fb30441afd0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[II)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/IntVector'
  0x00007fb370ce34e8:   0x00007fb30464b710 {method} {0x00007fb30464b710} 'fromArray0' '([II)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/Int256Vector'
  0x00007fb370ce34f0:   0x00007fb30441c1a0 {method} {0x00007fb30441c1a0} 'fromArray0Template' '([II)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/IntVector'
  0x00007fb370ce34f8:   0x00007fb304618218 {method} {0x00007fb304618218} 'loopBound' '(I)I' in 'jdk/incubator/vector/AbstractSpecies'
  0x00007fb370ce3500:   0x00007fb30443c4f8 {method} {0x00007fb30443c4f8} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;I)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/IntVector'
  0x00007fb370ce3508:   0x00007fb30464d390 {method} {0x00007fb30464d390} 'lanewiseShift' '(Ljdk/incubator/vector/VectorOperators$Binary;I)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/Int256Vector'
  0x00007fb370ce3510:   0x00007fb304649a98 {method} {0x00007fb304649a98} 'lanewiseShift' '(Ljdk/incubator/vector/VectorOperators$Binary;I)Ljdk/incubator/vector/Int256Vector;' in 'jdk/incubator/vector/Int256Vector'
  0x00007fb370ce3518:   0x00007fb30443ca38 {method} {0x00007fb30443ca38} 'lanewiseShiftTemplate' '(Ljdk/incubator/vector/VectorOperators$Binary;I)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/IntVector'
  0x00007fb370ce3520:   0x00007fb30440da70 {method} {0x00007fb30440da70} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000800007000'
  0x00007fb370ce3528:   0x00007fb30440d270 {method} {0x00007fb30440d270} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000800006c00'
  0x00007fb370ce3530:   0x00007fb304439208 {method} {0x00007fb304439208} 'opCode' '(Ljdk/incubator/vector/VectorOperators$Operator;)I' in 'jdk/incubator/vector/IntVector'
  0x00007fb370ce3538:   0x00007fb3044393c0 {method} {0x00007fb3044393c0} 'opKind' '(Ljdk/incubator/vector/VectorOperators$Operator;I)Z' in 'jdk/incubator/vector/IntVector'
  0x00007fb370ce3540:   0x00007fb30460f3d0 {method} {0x00007fb30460f3d0} 'opKind' '(Ljdk/incubator/vector/VectorOperators$Operator;I)Z' in 'jdk/incubator/vector/VectorOperators'
  0x00007fb370ce3548:   0x00007fb3047c1608 {method} {0x00007fb3047c1608} 'opKind' '(I)Z' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  0x00007fb370ce3550:   0x00000008000cc920 'jdk/incubator/vector/IntVector$IntSpecies'
  0x00007fb370ce3558:   0x00000008000cc158 'jdk/incubator/vector/VectorSpecies'
  0x00007fb370ce3560:   0x00007fb304616178 {method} {0x00007fb304616178} 'loopBound' '(I)I' in 'jdk/incubator/vector/VectorSpecies'
  0x00007fb370ce3568:   0x00007fb3046177a8 {method} {0x00007fb3046177a8} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
  0x00007fb370ce3570:   0x00007fb304615fb0 {method} {0x00007fb304615fb0} 'length' '()I' in 'jdk/incubator/vector/VectorSpecies'
  0x00007fb370ce3578:   0x00000008000deb40 'jdk/incubator/vector/VectorOperators$BinaryImpl'
  0x00007fb370ce3580:   0x00000008000de600 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  0x00007fb370ce3588:   0x00007fb3047c11c0 {method} {0x00007fb3047c11c0} 'opCode' '(II)I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  0x00007fb370ce3590:   0x00007fb3047c1290 {method} {0x00007fb3047c1290} 'opCodeRaw' '()I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  0x00007fb370ce3598:   0x00007fb30460c470 {method} {0x00007fb30460c470} 'find' '(Ljdk/incubator/vector/VectorOperators$Operator;ILjava/util/function/IntFunction;)Ljava/lang/Object;' in 'jdk/incubator/vector/VectorOperators$ImplCache'
  0x00007fb370ce35a0:   0x00000008000cb760 'jdk/incubator/vector/VectorOperators$ImplCache'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
pc-bytecode offsets:
PcDesc(pc=0x00007fb370ce301f offset=ffffffff bits=0):
PcDesc(pc=0x00007fb370ce3039 offset=19 bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload2_vector@112 (line 73)
PcDesc(pc=0x00007fb370ce303c offset=1c bits=0):
   bytereverse::workload2_vector@17 (line 56)
PcDesc(pc=0x00007fb370ce30da offset=ba bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload2_vector@112 (line 73)
PcDesc(pc=0x00007fb370ce30e3 offset=c3 bits=0):
   bytereverse::workload2_vector@25 (line 57)
PcDesc(pc=0x00007fb370ce30ec offset=cc bits=0):
   jdk.incubator.vector.IntVector::fromArray@2 (line 2894)
   bytereverse::workload2_vector@25 (line 57)
PcDesc(pc=0x00007fb370ce30f3 offset=d3 bits=0):
   jdk.incubator.vector.IntVector::fromArray0Template@14 (line 3403)
   jdk.incubator.vector.Int256Vector::fromArray0@3 (line 828)
   jdk.incubator.vector.IntVector::fromArray@24 (line 2896)
   bytereverse::workload2_vector@25 (line 57)
PcDesc(pc=0x00007fb370ce3109 offset=e9 bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload2_vector@112 (line 73)
PcDesc(pc=0x00007fb370ce310e offset=ee bits=0):
   bytereverse::workload2_vector@12 (line 56)
PcDesc(pc=0x00007fb370ce3113 offset=f3 bits=0):
   jdk.incubator.vector.AbstractSpecies::loopBound@5 (line 203)
   bytereverse::workload2_vector@12 (line 56)
PcDesc(pc=0x00007fb370ce3127 offset=107 bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload2_vector@112 (line 73)
PcDesc(pc=0x00007fb370ce3160 offset=140 bits=0):
   jdk.incubator.vector.IntVector::lanewiseShiftTemplate@59 (line 905)
   jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 298)
   jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 41)
   jdk.incubator.vector.IntVector::lanewise@17 (line 801)
   bytereverse::workload2_vector@37 (line 62)
PcDesc(pc=0x00007fb370ce3176 offset=156 bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload2_vector@112 (line 73)
PcDesc(pc=0x00007fb370ce3180 offset=160 bits=0):
   jdk.incubator.vector.IntVector::lanewiseShiftTemplate@59 (line 905)
   jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 298)
   jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 41)
   jdk.incubator.vector.IntVector::lanewise@17 (line 801)
   bytereverse::workload2_vector@37 (line 62)
PcDesc(pc=0x00007fb370ce3186 offset=166 bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload2_vector@112 (line 73)
PcDesc(pc=0x00007fb370ce318d offset=16d bits=0):
   java.lang.invoke.LambdaForm$MH/0x0000000800006c00::invoke@-1
   java.lang.invoke.LambdaForm$MH/0x0000000800007000::linkToTargetMethod@4
   jdk.incubator.vector.IntVector::lanewiseShiftTemplate@54 (line 903)
   jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 298)
   jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 41)
   jdk.incubator.vector.IntVector::lanewise@17 (line 801)
   bytereverse::workload2_vector@37 (line 62)
PcDesc(pc=0x00007fb370ce31a3 offset=183 bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload2_vector@112 (line 73)
PcDesc(pc=0x00007fb370ce31a9 offset=189 bits=0):
   java.lang.invoke.LambdaForm$MH/0x0000000800007000::linkToTargetMethod@4
   jdk.incubator.vector.IntVector::lanewiseShiftTemplate@54 (line 903)
   jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 298)
   jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 41)
   jdk.incubator.vector.IntVector::lanewise@17 (line 801)
   bytereverse::workload2_vector@37 (line 62)
PcDesc(pc=0x00007fb370ce31af offset=18f bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload2_vector@112 (line 73)
PcDesc(pc=0x00007fb370ce31b6 offset=196 bits=0):
   java.lang.invoke.LambdaForm$MH/0x0000000800007000::linkToTargetMethod@4
   jdk.incubator.vector.IntVector::lanewiseShiftTemplate@54 (line 903)
   jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 298)
   jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 41)
   jdk.incubator.vector.IntVector::lanewise@17 (line 801)
   bytereverse::workload2_vector@37 (line 62)
PcDesc(pc=0x00007fb370ce31cc offset=1ac bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload2_vector@112 (line 73)
PcDesc(pc=0x00007fb370ce31d2 offset=1b2 bits=0):
   jdk.incubator.vector.IntVector::lanewiseShiftTemplate@54 (line 903)
   jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 298)
   jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 41)
   jdk.incubator.vector.IntVector::lanewise@17 (line 801)
   bytereverse::workload2_vector@37 (line 62)
PcDesc(pc=0x00007fb370ce31d8 offset=1b8 bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload2_vector@112 (line 73)
PcDesc(pc=0x00007fb370ce31df offset=1bf bits=0):
   jdk.incubator.vector.IntVector::lanewiseShiftTemplate@54 (line 903)
   jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 298)
   jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 41)
   jdk.incubator.vector.IntVector::lanewise@17 (line 801)
   bytereverse::workload2_vector@37 (line 62)
PcDesc(pc=0x00007fb370ce31f5 offset=1d5 bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload2_vector@112 (line 73)
PcDesc(pc=0x00007fb370ce31fb offset=1db bits=0):
   jdk.incubator.vector.IntVector::lanewiseShiftTemplate@43 (line 903)
   jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 298)
   jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 41)
   jdk.incubator.vector.IntVector::lanewise@17 (line 801)
   bytereverse::workload2_vector@37 (line 62)
PcDesc(pc=0x00007fb370ce3201 offset=1e1 bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload2_vector@112 (line 73)
PcDesc(pc=0x00007fb370ce3208 offset=1e8 bits=0):
   jdk.incubator.vector.IntVector::lanewiseShiftTemplate@43 (line 903)
   jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 298)
   jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 41)
   jdk.incubator.vector.IntVector::lanewise@17 (line 801)
   bytereverse::workload2_vector@37 (line 62)
PcDesc(pc=0x00007fb370ce321e offset=1fe bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload2_vector@112 (line 73)
PcDesc(pc=0x00007fb370ce3224 offset=204 bits=0):
   jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 298)
   jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 41)
   jdk.incubator.vector.IntVector::lanewise@17 (line 801)
   bytereverse::workload2_vector@37 (line 62)
PcDesc(pc=0x00007fb370ce322d offset=20d bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload2_vector@112 (line 73)
PcDesc(pc=0x00007fb370ce3234 offset=214 bits=0):
   jdk.incubator.vector.IntVector::opCode@7 (line 62)
   jdk.incubator.vector.IntVector::lanewiseShiftTemplate@29 (line 901)
   jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 298)
   jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 41)
   jdk.incubator.vector.IntVector::lanewise@17 (line 801)
   bytereverse::workload2_vector@37 (line 62)
PcDesc(pc=0x00007fb370ce324a offset=22a bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload2_vector@112 (line 73)
PcDesc(pc=0x00007fb370ce3253 offset=233 bits=0):
   jdk.incubator.vector.IntVector::opCode@7 (line 62)
   jdk.incubator.vector.IntVector::lanewiseShiftTemplate@29 (line 901)
   jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 298)
   jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 41)
   jdk.incubator.vector.IntVector::lanewise@17 (line 801)
   bytereverse::workload2_vector@37 (line 62)
PcDesc(pc=0x00007fb370ce325c offset=23c bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload2_vector@112 (line 73)
PcDesc(pc=0x00007fb370ce3263 offset=243 bits=0):
   jdk.incubator.vector.IntVector::fromArray@2 (line 2894)
   bytereverse::workload2_vector@25 (line 57)
PcDesc(pc=0x00007fb370ce3279 offset=259 bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload2_vector@112 (line 73)
PcDesc(pc=0x00007fb370ce3282 offset=262 bits=0):
   jdk.incubator.vector.IntVector::lanewiseShiftTemplate@29 (line 901)
   jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 298)
   jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 41)
   jdk.incubator.vector.IntVector::lanewise@17 (line 801)
   bytereverse::workload2_vector@37 (line 62)
PcDesc(pc=0x00007fb370ce328b offset=26b bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload2_vector@112 (line 73)
PcDesc(pc=0x00007fb370ce3292 offset=272 bits=0):
   jdk.incubator.vector.IntVector::lanewise@6 (line 800)
   bytereverse::workload2_vector@37 (line 62)
PcDesc(pc=0x00007fb370ce32a8 offset=288 bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload2_vector@112 (line 73)
PcDesc(pc=0x00007fb370ce32b1 offset=291 bits=0):
   jdk.incubator.vector.VectorOperators$OperatorImpl::opKind@14 (line 883)
   jdk.incubator.vector.VectorOperators::opKind@5 (line 409)
   jdk.incubator.vector.IntVector::opKind@2 (line 71)
   jdk.incubator.vector.IntVector::lanewise@3 (line 800)
   bytereverse::workload2_vector@37 (line 62)
PcDesc(pc=0x00007fb370ce32ba offset=29a bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload2_vector@112 (line 73)
PcDesc(pc=0x00007fb370ce32c1 offset=2a1 bits=0):
   jdk.incubator.vector.IntVector::fromArray@2 (line 2894)
   bytereverse::workload2_vector@25 (line 57)
PcDesc(pc=0x00007fb370ce32d7 offset=2b7 bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload2_vector@112 (line 73)
PcDesc(pc=0x00007fb370ce32eb offset=2cb bits=0):
   bytereverse::workload2_vector@12 (line 56)
PcDesc(pc=0x00007fb370ce32f2 offset=2d2 bits=1):
   bytereverse::workload2_vector@126 (line 56)  reexecute=true
   Locals
    - l0: reg rsi [12],oop
    - l1: reg rdx [4],oop
    - l2: empty
    - l3: reg rax [0],int
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x00007fb370ce331a offset=2fa bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload2_vector@112 (line 73)
PcDesc(pc=0x00007fb370ce331c offset=2fc bits=0):
   jdk.incubator.vector.IntVector::fromArray0Template@10 (line 3403)
   jdk.incubator.vector.Int256Vector::fromArray0@3 (line 828)
   jdk.incubator.vector.IntVector::fromArray@24 (line 2896)
   bytereverse::workload2_vector@25 (line 57)
PcDesc(pc=0x00007fb370ce3322 offset=302 bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload2_vector@112 (line 73)
PcDesc(pc=0x00007fb370ce3329 offset=309 bits=0):
   jdk.incubator.vector.Int256Vector::fromArray0@3 (line 828)
   jdk.incubator.vector.IntVector::fromArray@24 (line 2896)
   bytereverse::workload2_vector@25 (line 57)
PcDesc(pc=0x00007fb370ce334a offset=32a bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload2_vector@112 (line 73)
PcDesc(pc=0x00007fb370ce334c offset=32c bits=0):
   jdk.incubator.vector.IntVector::fromArray@24 (line 2896)
   bytereverse::workload2_vector@25 (line 57)
PcDesc(pc=0x00007fb370ce3377 offset=357 bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload2_vector@112 (line 73)
PcDesc(pc=0x00007fb370ce3384 offset=364 bits=1):
   bytereverse::workload2_vector@17 (line 56)  reexecute=true
   Locals
    - l0: stack[0],oop
    - l1: stack[8],oop
    - l2: empty
    - l3: 0
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
   Expression stack
    - @0: 0
    - @1: reg rbp [10],int
PcDesc(pc=0x00007fb370ce33a1 offset=381 bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload2_vector@112 (line 73)
PcDesc(pc=0x00007fb370ce33b0 offset=390 bits=1):
   bytereverse::workload2_vector@17 (line 56)  reexecute=true
   Locals
    - l0: stack[0],oop
    - l1: stack[8],oop
    - l2: empty
    - l3: 0
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
   Expression stack
    - @0: 0
    - @1: reg rbp [10],int
PcDesc(pc=0x00007fb370ce344b offset=42b bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload2_vector@112 (line 73)
PcDesc(pc=0x00007fb370ce3458 offset=438 bits=1):
   bytereverse::workload2_vector@133 (line 76)  reexecute=true
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: empty
    - l3: stack[12]
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
   Expression stack
    - @0: stack[12]
    - @1: stack[16]
PcDesc(pc=0x00007fb370ce346c offset=44c bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload2_vector@112 (line 73)
PcDesc(pc=0x00007fb370ce34b9 offset=499 bits=0):
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
oop maps:ImmutableOopMapSet contains 4 OopMaps

ImmutableOopMap {rdx=Oop rsi=Oop } pc offsets: 722 
ImmutableOopMap {[0]=Oop [8]=Oop } pc offsets: 868 912 
ImmutableOopMap {rbp=Oop [0]=Oop } pc offsets: 1080 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
scopes:
ScopeDesc(pc=0x00007fb370ce3039 offset=19):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007fb370ce3039 offset=19):
   bytereverse::workload2_vector@112 (line 73)
ScopeDesc(pc=0x00007fb370ce303c offset=1c):
   bytereverse::workload2_vector@17 (line 56)
ScopeDesc(pc=0x00007fb370ce30da offset=ba):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007fb370ce30da offset=ba):
   bytereverse::workload2_vector@112 (line 73)
ScopeDesc(pc=0x00007fb370ce30e3 offset=c3):
   bytereverse::workload2_vector@25 (line 57)
ScopeDesc(pc=0x00007fb370ce30ec offset=cc):
   jdk.incubator.vector.IntVector::fromArray@2 (line 2894)
ScopeDesc(pc=0x00007fb370ce30ec offset=cc):
   bytereverse::workload2_vector@25 (line 57)
ScopeDesc(pc=0x00007fb370ce30f3 offset=d3):
   jdk.incubator.vector.IntVector::fromArray0Template@14 (line 3403)
ScopeDesc(pc=0x00007fb370ce30f3 offset=d3):
   jdk.incubator.vector.Int256Vector::fromArray0@3 (line 828)
ScopeDesc(pc=0x00007fb370ce30f3 offset=d3):
   jdk.incubator.vector.IntVector::fromArray@24 (line 2896)
ScopeDesc(pc=0x00007fb370ce30f3 offset=d3):
   bytereverse::workload2_vector@25 (line 57)
ScopeDesc(pc=0x00007fb370ce3109 offset=e9):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007fb370ce3109 offset=e9):
   bytereverse::workload2_vector@112 (line 73)
ScopeDesc(pc=0x00007fb370ce310e offset=ee):
   bytereverse::workload2_vector@12 (line 56)
ScopeDesc(pc=0x00007fb370ce3113 offset=f3):
   jdk.incubator.vector.AbstractSpecies::loopBound@5 (line 203)
ScopeDesc(pc=0x00007fb370ce3113 offset=f3):
   bytereverse::workload2_vector@12 (line 56)
ScopeDesc(pc=0x00007fb370ce3127 offset=107):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007fb370ce3127 offset=107):
   bytereverse::workload2_vector@112 (line 73)
ScopeDesc(pc=0x00007fb370ce3160 offset=140):
   jdk.incubator.vector.IntVector::lanewiseShiftTemplate@59 (line 905)
ScopeDesc(pc=0x00007fb370ce3160 offset=140):
   jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 298)
ScopeDesc(pc=0x00007fb370ce3160 offset=140):
   jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 41)
ScopeDesc(pc=0x00007fb370ce3160 offset=140):
   jdk.incubator.vector.IntVector::lanewise@17 (line 801)
ScopeDesc(pc=0x00007fb370ce3160 offset=140):
   bytereverse::workload2_vector@37 (line 62)
ScopeDesc(pc=0x00007fb370ce3176 offset=156):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007fb370ce3176 offset=156):
   bytereverse::workload2_vector@112 (line 73)
ScopeDesc(pc=0x00007fb370ce3180 offset=160):
   jdk.incubator.vector.IntVector::lanewiseShiftTemplate@59 (line 905)
ScopeDesc(pc=0x00007fb370ce3180 offset=160):
   jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 298)
ScopeDesc(pc=0x00007fb370ce3180 offset=160):
   jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 41)
ScopeDesc(pc=0x00007fb370ce3180 offset=160):
   jdk.incubator.vector.IntVector::lanewise@17 (line 801)
ScopeDesc(pc=0x00007fb370ce3180 offset=160):
   bytereverse::workload2_vector@37 (line 62)
ScopeDesc(pc=0x00007fb370ce3186 offset=166):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007fb370ce3186 offset=166):
   bytereverse::workload2_vector@112 (line 73)
ScopeDesc(pc=0x00007fb370ce318d offset=16d):
   java.lang.invoke.LambdaForm$MH/0x0000000800006c00::invoke@-1
ScopeDesc(pc=0x00007fb370ce318d offset=16d):
   java.lang.invoke.LambdaForm$MH/0x0000000800007000::linkToTargetMethod@4
ScopeDesc(pc=0x00007fb370ce318d offset=16d):
   jdk.incubator.vector.IntVector::lanewiseShiftTemplate@54 (line 903)
ScopeDesc(pc=0x00007fb370ce318d offset=16d):
   jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 298)
ScopeDesc(pc=0x00007fb370ce318d offset=16d):
   jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 41)
ScopeDesc(pc=0x00007fb370ce318d offset=16d):
   jdk.incubator.vector.IntVector::lanewise@17 (line 801)
ScopeDesc(pc=0x00007fb370ce318d offset=16d):
   bytereverse::workload2_vector@37 (line 62)
ScopeDesc(pc=0x00007fb370ce31a3 offset=183):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007fb370ce31a3 offset=183):
   bytereverse::workload2_vector@112 (line 73)
ScopeDesc(pc=0x00007fb370ce31a9 offset=189):
   java.lang.invoke.LambdaForm$MH/0x0000000800007000::linkToTargetMethod@4
ScopeDesc(pc=0x00007fb370ce31a9 offset=189):
   jdk.incubator.vector.IntVector::lanewiseShiftTemplate@54 (line 903)
ScopeDesc(pc=0x00007fb370ce31a9 offset=189):
   jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 298)
ScopeDesc(pc=0x00007fb370ce31a9 offset=189):
   jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 41)
ScopeDesc(pc=0x00007fb370ce31a9 offset=189):
   jdk.incubator.vector.IntVector::lanewise@17 (line 801)
ScopeDesc(pc=0x00007fb370ce31a9 offset=189):
   bytereverse::workload2_vector@37 (line 62)
ScopeDesc(pc=0x00007fb370ce31af offset=18f):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007fb370ce31af offset=18f):
   bytereverse::workload2_vector@112 (line 73)
ScopeDesc(pc=0x00007fb370ce31b6 offset=196):
   java.lang.invoke.LambdaForm$MH/0x0000000800007000::linkToTargetMethod@4
ScopeDesc(pc=0x00007fb370ce31b6 offset=196):
   jdk.incubator.vector.IntVector::lanewiseShiftTemplate@54 (line 903)
ScopeDesc(pc=0x00007fb370ce31b6 offset=196):
   jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 298)
ScopeDesc(pc=0x00007fb370ce31b6 offset=196):
   jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 41)
ScopeDesc(pc=0x00007fb370ce31b6 offset=196):
   jdk.incubator.vector.IntVector::lanewise@17 (line 801)
ScopeDesc(pc=0x00007fb370ce31b6 offset=196):
   bytereverse::workload2_vector@37 (line 62)
ScopeDesc(pc=0x00007fb370ce31cc offset=1ac):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007fb370ce31cc offset=1ac):
   bytereverse::workload2_vector@112 (line 73)
ScopeDesc(pc=0x00007fb370ce31d2 offset=1b2):
   jdk.incubator.vector.IntVector::lanewiseShiftTemplate@54 (line 903)
ScopeDesc(pc=0x00007fb370ce31d2 offset=1b2):
   jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 298)
ScopeDesc(pc=0x00007fb370ce31d2 offset=1b2):
   jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 41)
ScopeDesc(pc=0x00007fb370ce31d2 offset=1b2):
   jdk.incubator.vector.IntVector::lanewise@17 (line 801)
ScopeDesc(pc=0x00007fb370ce31d2 offset=1b2):
   bytereverse::workload2_vector@37 (line 62)
ScopeDesc(pc=0x00007fb370ce31d8 offset=1b8):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007fb370ce31d8 offset=1b8):
   bytereverse::workload2_vector@112 (line 73)
ScopeDesc(pc=0x00007fb370ce31df offset=1bf):
   jdk.incubator.vector.IntVector::lanewiseShiftTemplate@54 (line 903)
ScopeDesc(pc=0x00007fb370ce31df offset=1bf):
   jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 298)
ScopeDesc(pc=0x00007fb370ce31df offset=1bf):
   jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 41)
ScopeDesc(pc=0x00007fb370ce31df offset=1bf):
   jdk.incubator.vector.IntVector::lanewise@17 (line 801)
ScopeDesc(pc=0x00007fb370ce31df offset=1bf):
   bytereverse::workload2_vector@37 (line 62)
ScopeDesc(pc=0x00007fb370ce31f5 offset=1d5):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007fb370ce31f5 offset=1d5):
   bytereverse::workload2_vector@112 (line 73)
ScopeDesc(pc=0x00007fb370ce31fb offset=1db):
   jdk.incubator.vector.IntVector::lanewiseShiftTemplate@43 (line 903)
ScopeDesc(pc=0x00007fb370ce31fb offset=1db):
   jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 298)
ScopeDesc(pc=0x00007fb370ce31fb offset=1db):
   jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 41)
ScopeDesc(pc=0x00007fb370ce31fb offset=1db):
   jdk.incubator.vector.IntVector::lanewise@17 (line 801)
ScopeDesc(pc=0x00007fb370ce31fb offset=1db):
   bytereverse::workload2_vector@37 (line 62)
ScopeDesc(pc=0x00007fb370ce3201 offset=1e1):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007fb370ce3201 offset=1e1):
   bytereverse::workload2_vector@112 (line 73)
ScopeDesc(pc=0x00007fb370ce3208 offset=1e8):
   jdk.incubator.vector.IntVector::lanewiseShiftTemplate@43 (line 903)
ScopeDesc(pc=0x00007fb370ce3208 offset=1e8):
   jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 298)
ScopeDesc(pc=0x00007fb370ce3208 offset=1e8):
   jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 41)
ScopeDesc(pc=0x00007fb370ce3208 offset=1e8):
   jdk.incubator.vector.IntVector::lanewise@17 (line 801)
ScopeDesc(pc=0x00007fb370ce3208 offset=1e8):
   bytereverse::workload2_vector@37 (line 62)
ScopeDesc(pc=0x00007fb370ce321e offset=1fe):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007fb370ce321e offset=1fe):
   bytereverse::workload2_vector@112 (line 73)
ScopeDesc(pc=0x00007fb370ce3224 offset=204):
   jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 298)
ScopeDesc(pc=0x00007fb370ce3224 offset=204):
   jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 41)
ScopeDesc(pc=0x00007fb370ce3224 offset=204):
   jdk.incubator.vector.IntVector::lanewise@17 (line 801)
ScopeDesc(pc=0x00007fb370ce3224 offset=204):
   bytereverse::workload2_vector@37 (line 62)
ScopeDesc(pc=0x00007fb370ce322d offset=20d):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007fb370ce322d offset=20d):
   bytereverse::workload2_vector@112 (line 73)
ScopeDesc(pc=0x00007fb370ce3234 offset=214):
   jdk.incubator.vector.IntVector::opCode@7 (line 62)
ScopeDesc(pc=0x00007fb370ce3234 offset=214):
   jdk.incubator.vector.IntVector::lanewiseShiftTemplate@29 (line 901)
ScopeDesc(pc=0x00007fb370ce3234 offset=214):
   jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 298)
ScopeDesc(pc=0x00007fb370ce3234 offset=214):
   jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 41)
ScopeDesc(pc=0x00007fb370ce3234 offset=214):
   jdk.incubator.vector.IntVector::lanewise@17 (line 801)
ScopeDesc(pc=0x00007fb370ce3234 offset=214):
   bytereverse::workload2_vector@37 (line 62)
ScopeDesc(pc=0x00007fb370ce324a offset=22a):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007fb370ce324a offset=22a):
   bytereverse::workload2_vector@112 (line 73)
ScopeDesc(pc=0x00007fb370ce3253 offset=233):
   jdk.incubator.vector.IntVector::opCode@7 (line 62)
ScopeDesc(pc=0x00007fb370ce3253 offset=233):
   jdk.incubator.vector.IntVector::lanewiseShiftTemplate@29 (line 901)
ScopeDesc(pc=0x00007fb370ce3253 offset=233):
   jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 298)
ScopeDesc(pc=0x00007fb370ce3253 offset=233):
   jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 41)
ScopeDesc(pc=0x00007fb370ce3253 offset=233):
   jdk.incubator.vector.IntVector::lanewise@17 (line 801)
ScopeDesc(pc=0x00007fb370ce3253 offset=233):
   bytereverse::workload2_vector@37 (line 62)
ScopeDesc(pc=0x00007fb370ce325c offset=23c):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007fb370ce325c offset=23c):
   bytereverse::workload2_vector@112 (line 73)
ScopeDesc(pc=0x00007fb370ce3263 offset=243):
   jdk.incubator.vector.IntVector::fromArray@2 (line 2894)
ScopeDesc(pc=0x00007fb370ce3263 offset=243):
   bytereverse::workload2_vector@25 (line 57)
ScopeDesc(pc=0x00007fb370ce3279 offset=259):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007fb370ce3279 offset=259):
   bytereverse::workload2_vector@112 (line 73)
ScopeDesc(pc=0x00007fb370ce3282 offset=262):
   jdk.incubator.vector.IntVector::lanewiseShiftTemplate@29 (line 901)
ScopeDesc(pc=0x00007fb370ce3282 offset=262):
   jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 298)
ScopeDesc(pc=0x00007fb370ce3282 offset=262):
   jdk.incubator.vector.Int256Vector::lanewiseShift@3 (line 41)
ScopeDesc(pc=0x00007fb370ce3282 offset=262):
   jdk.incubator.vector.IntVector::lanewise@17 (line 801)
ScopeDesc(pc=0x00007fb370ce3282 offset=262):
   bytereverse::workload2_vector@37 (line 62)
ScopeDesc(pc=0x00007fb370ce328b offset=26b):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007fb370ce328b offset=26b):
   bytereverse::workload2_vector@112 (line 73)
ScopeDesc(pc=0x00007fb370ce3292 offset=272):
   jdk.incubator.vector.IntVector::lanewise@6 (line 800)
ScopeDesc(pc=0x00007fb370ce3292 offset=272):
   bytereverse::workload2_vector@37 (line 62)
ScopeDesc(pc=0x00007fb370ce32a8 offset=288):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007fb370ce32a8 offset=288):
   bytereverse::workload2_vector@112 (line 73)
ScopeDesc(pc=0x00007fb370ce32b1 offset=291):
   jdk.incubator.vector.VectorOperators$OperatorImpl::opKind@14 (line 883)
ScopeDesc(pc=0x00007fb370ce32b1 offset=291):
   jdk.incubator.vector.VectorOperators::opKind@5 (line 409)
ScopeDesc(pc=0x00007fb370ce32b1 offset=291):
   jdk.incubator.vector.IntVector::opKind@2 (line 71)
ScopeDesc(pc=0x00007fb370ce32b1 offset=291):
   jdk.incubator.vector.IntVector::lanewise@3 (line 800)
ScopeDesc(pc=0x00007fb370ce32b1 offset=291):
   bytereverse::workload2_vector@37 (line 62)
ScopeDesc(pc=0x00007fb370ce32ba offset=29a):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007fb370ce32ba offset=29a):
   bytereverse::workload2_vector@112 (line 73)
ScopeDesc(pc=0x00007fb370ce32c1 offset=2a1):
   jdk.incubator.vector.IntVector::fromArray@2 (line 2894)
ScopeDesc(pc=0x00007fb370ce32c1 offset=2a1):
   bytereverse::workload2_vector@25 (line 57)
ScopeDesc(pc=0x00007fb370ce32d7 offset=2b7):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007fb370ce32d7 offset=2b7):
   bytereverse::workload2_vector@112 (line 73)
ScopeDesc(pc=0x00007fb370ce32eb offset=2cb):
   bytereverse::workload2_vector@12 (line 56)
ScopeDesc(pc=0x00007fb370ce32f2 offset=2d2):
   bytereverse::workload2_vector@126 (line 56)  reexecute=true
   Locals
    - l0: reg rsi [12],oop
    - l1: reg rdx [4],oop
    - l2: empty
    - l3: reg rax [0],int
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x00007fb370ce331a offset=2fa):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007fb370ce331a offset=2fa):
   bytereverse::workload2_vector@112 (line 73)
ScopeDesc(pc=0x00007fb370ce331c offset=2fc):
   jdk.incubator.vector.IntVector::fromArray0Template@10 (line 3403)
ScopeDesc(pc=0x00007fb370ce331c offset=2fc):
   jdk.incubator.vector.Int256Vector::fromArray0@3 (line 828)
ScopeDesc(pc=0x00007fb370ce331c offset=2fc):
   jdk.incubator.vector.IntVector::fromArray@24 (line 2896)
ScopeDesc(pc=0x00007fb370ce331c offset=2fc):
   bytereverse::workload2_vector@25 (line 57)
ScopeDesc(pc=0x00007fb370ce3322 offset=302):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007fb370ce3322 offset=302):
   bytereverse::workload2_vector@112 (line 73)
ScopeDesc(pc=0x00007fb370ce3329 offset=309):
   jdk.incubator.vector.Int256Vector::fromArray0@3 (line 828)
ScopeDesc(pc=0x00007fb370ce3329 offset=309):
   jdk.incubator.vector.IntVector::fromArray@24 (line 2896)
ScopeDesc(pc=0x00007fb370ce3329 offset=309):
   bytereverse::workload2_vector@25 (line 57)
ScopeDesc(pc=0x00007fb370ce334a offset=32a):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007fb370ce334a offset=32a):
   bytereverse::workload2_vector@112 (line 73)
ScopeDesc(pc=0x00007fb370ce334c offset=32c):
   jdk.incubator.vector.IntVector::fromArray@24 (line 2896)
ScopeDesc(pc=0x00007fb370ce334c offset=32c):
   bytereverse::workload2_vector@25 (line 57)
ScopeDesc(pc=0x00007fb370ce3377 offset=357):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007fb370ce3377 offset=357):
   bytereverse::workload2_vector@112 (line 73)
ScopeDesc(pc=0x00007fb370ce3384 offset=364):
   bytereverse::workload2_vector@17 (line 56)  reexecute=true
   Locals
    - l0: stack[0],oop
    - l1: stack[8],oop
    - l2: empty
    - l3: 0
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
   Expression stack
    - @0: 0
    - @1: reg rbp [10],int
ScopeDesc(pc=0x00007fb370ce33a1 offset=381):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007fb370ce33a1 offset=381):
   bytereverse::workload2_vector@112 (line 73)
ScopeDesc(pc=0x00007fb370ce33b0 offset=390):
   bytereverse::workload2_vector@17 (line 56)  reexecute=true
   Locals
    - l0: stack[0],oop
    - l1: stack[8],oop
    - l2: empty
    - l3: 0
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
   Expression stack
    - @0: 0
    - @1: reg rbp [10],int
ScopeDesc(pc=0x00007fb370ce344b offset=42b):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007fb370ce344b offset=42b):
   bytereverse::workload2_vector@112 (line 73)
ScopeDesc(pc=0x00007fb370ce3458 offset=438):
   bytereverse::workload2_vector@133 (line 76)  reexecute=true
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: empty
    - l3: stack[12]
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
   Expression stack
    - @0: stack[12]
    - @1: stack[16]
ScopeDesc(pc=0x00007fb370ce346c offset=44c):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007fb370ce346c offset=44c):
   bytereverse::workload2_vector@112 (line 73)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
relocations:
         @0x00007fb370ce2f80: 100f
relocInfo@0x00007fb370ce2f80 [type=1(oop) addr=0x00007fb370ce302f offset=15] | [oop_addr=0x00007fb370ce3031 *=0x00000000eb025620 offset=0]
         @0x00007fb370ce2f82: a2c3
relocInfo@0x00007fb370ce2f82 [type=10(poll) addr=0x00007fb370ce32f2 offset=707]
         @0x00007fb370ce2f84: b06a
relocInfo@0x00007fb370ce2f84 [type=11(poll_return) addr=0x00007fb370ce335c offset=106]
         @0x00007fb370ce2f86: 6423
relocInfo@0x00007fb370ce2f86 [type=6(runtime_call) addr=0x00007fb370ce337f offset=35 format=1] | [destination=0x00007fb36911e920]
         @0x00007fb370ce2f88: f803812bd3287fb37005
relocInfo@0x00007fb370ce2f90 [type=7(external_word) addr=0x00007fb370ce3384 offset=5 data={812bd3287fb3}] | [target=0x00007fb3812bd328]
         @0x00007fb370ce2f92: 640e
relocInfo@0x00007fb370ce2f92 [type=6(runtime_call) addr=0x00007fb370ce3392 offset=14 format=1] | [destination=0x00007fb38096b4b0]
         @0x00007fb370ce2f94: 6419
relocInfo@0x00007fb370ce2f94 [type=6(runtime_call) addr=0x00007fb370ce33ab offset=25 format=1] | [destination=0x00007fb36911e920]
         @0x00007fb370ce2f96: f803812bd3287fb37005
relocInfo@0x00007fb370ce2f9e [type=7(external_word) addr=0x00007fb370ce33b0 offset=5 data={812bd3287fb3}] | [target=0x00007fb3812bd328]
         @0x00007fb370ce2fa0: 640e
relocInfo@0x00007fb370ce2fa0 [type=6(runtime_call) addr=0x00007fb370ce33be offset=14 format=1] | [destination=0x00007fb38096b4b0]
         @0x00007fb370ce2fa2: f803813320b87fb37006
relocInfo@0x00007fb370ce2faa [type=7(external_word) addr=0x00007fb370ce33c4 offset=6 data={813320b87fb3}] | [target=0x00007fb3813320b8]
         @0x00007fb370ce2fac: 640e
relocInfo@0x00007fb370ce2fac [type=6(runtime_call) addr=0x00007fb370ce33d2 offset=14 format=1] | [destination=0x00007fb38096b4b0]
         @0x00007fb370ce2fae: f803813320b87fb37006
relocInfo@0x00007fb370ce2fb6 [type=7(external_word) addr=0x00007fb370ce33d8 offset=6 data={813320b87fb3}] | [target=0x00007fb3813320b8]
         @0x00007fb370ce2fb8: 640e
relocInfo@0x00007fb370ce2fb8 [type=6(runtime_call) addr=0x00007fb370ce33e6 offset=14 format=1] | [destination=0x00007fb38096b4b0]
         @0x00007fb370ce2fba: f803813320b87fb37006
relocInfo@0x00007fb370ce2fc2 [type=7(external_word) addr=0x00007fb370ce33ec offset=6 data={813320b87fb3}] | [target=0x00007fb3813320b8]
         @0x00007fb370ce2fc4: 640e
relocInfo@0x00007fb370ce2fc4 [type=6(runtime_call) addr=0x00007fb370ce33fa offset=14 format=1] | [destination=0x00007fb38096b4b0]
         @0x00007fb370ce2fc6: f803813320b87fb37006
relocInfo@0x00007fb370ce2fce [type=7(external_word) addr=0x00007fb370ce3400 offset=6 data={813320b87fb3}] | [target=0x00007fb3813320b8]
         @0x00007fb370ce2fd0: 640e
relocInfo@0x00007fb370ce2fd0 [type=6(runtime_call) addr=0x00007fb370ce340e offset=14 format=1] | [destination=0x00007fb38096b4b0]
         @0x00007fb370ce2fd2: f803813320b87fb37006
relocInfo@0x00007fb370ce2fda [type=7(external_word) addr=0x00007fb370ce3414 offset=6 data={813320b87fb3}] | [target=0x00007fb3813320b8]
         @0x00007fb370ce2fdc: 640e
relocInfo@0x00007fb370ce2fdc [type=6(runtime_call) addr=0x00007fb370ce3422 offset=14 format=1] | [destination=0x00007fb38096b4b0]
         @0x00007fb370ce2fde: f803813320b87fb37006
relocInfo@0x00007fb370ce2fe6 [type=7(external_word) addr=0x00007fb370ce3428 offset=6 data={813320b87fb3}] | [target=0x00007fb3813320b8]
         @0x00007fb370ce2fe8: 640e
relocInfo@0x00007fb370ce2fe8 [type=6(runtime_call) addr=0x00007fb370ce3436 offset=14 format=1] | [destination=0x00007fb38096b4b0]
         @0x00007fb370ce2fea: 641d
relocInfo@0x00007fb370ce2fea [type=6(runtime_call) addr=0x00007fb370ce3453 offset=29 format=1] | [destination=0x00007fb36911e920]
         @0x00007fb370ce2fec: f803812bd3287fb37005
relocInfo@0x00007fb370ce2ff4 [type=7(external_word) addr=0x00007fb370ce3458 offset=5 data={812bd3287fb3}] | [target=0x00007fb3812bd328]
         @0x00007fb370ce2ff6: 640e
relocInfo@0x00007fb370ce2ff6 [type=6(runtime_call) addr=0x00007fb370ce3466 offset=14 format=1] | [destination=0x00007fb38096b4b0]
         @0x00007fb370ce2ff8: f1108006
relocInfo@0x00007fb370ce2ffa [type=8(internal_word) addr=0x00007fb370ce346c offset=6 data=272] | [target=0x00007fb370ce335c]
         @0x00007fb370ce2ffc: 6411
relocInfo@0x00007fb370ce2ffc [type=6(runtime_call) addr=0x00007fb370ce347d offset=17 format=1] | [destination=0x00007fb36911d6a0]
         @0x00007fb370ce2ffe: 0023
relocInfo@0x00007fb370ce2ffe [type=0(none) addr=0x00007fb370ce34a0 offset=35]
         @0x00007fb370ce3000: 6400
relocInfo@0x00007fb370ce3000 [type=6(runtime_call) addr=0x00007fb370ce34a0 offset=0 format=1] | [destination=0x00007fb369081da0]
         @0x00007fb370ce3002: 640f
relocInfo@0x00007fb370ce3002 [type=6(runtime_call) addr=0x00007fb370ce34af offset=15 format=1] | [destination=0x00007fb36911ec60]
         @0x00007fb370ce3004: 0000
relocInfo@0x00007fb370ce3004 [type=0(none) addr=0x00007fb370ce34af offset=0]
         @0x00007fb370ce3006: 0000
relocInfo@0x00007fb370ce3006 [type=0(none) addr=0x00007fb370ce34af offset=0]
         @0x00007fb370ce3008: 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Dependencies:
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.IntVector$IntSpecies
  method  = {method} {0x00007fb304618218} 'loopBound' '(I)I' in 'jdk/incubator/vector/AbstractSpecies'
  class   = jdk.incubator.vector.VectorSpecies
  method  = *{method} {0x00007fb304616178} 'loopBound' '(I)I' in 'jdk/incubator/vector/VectorSpecies'
   [nmethod<=klass]jdk.incubator.vector.IntVector$IntSpecies
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.IntVector$IntSpecies
  method  = {method} {0x00007fb3046177a8} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
  class   = jdk.incubator.vector.VectorSpecies
  method  = *{method} {0x00007fb304615fb0} 'length' '()I' in 'jdk/incubator/vector/VectorSpecies'
   [nmethod<=klass]jdk.incubator.vector.IntVector$IntSpecies
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.VectorOperators$BinaryImpl
  method  = {method} {0x00007fb3047c1608} 'opKind' '(I)Z' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  class   = jdk.incubator.vector.VectorOperators$OperatorImpl
  method  = {method} {0x00007fb3047c1608} 'opKind' '(I)Z' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
   [nmethod<=klass]jdk.incubator.vector.VectorOperators$BinaryImpl
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.VectorOperators$BinaryImpl
  method  = {method} {0x00007fb3047c11c0} 'opCode' '(II)I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  class   = jdk.incubator.vector.VectorOperators$OperatorImpl
  method  = {method} {0x00007fb3047c11c0} 'opCode' '(II)I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
   [nmethod<=klass]jdk.incubator.vector.VectorOperators$BinaryImpl
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.VectorOperators$BinaryImpl
  method  = {method} {0x00007fb3047c1290} 'opCodeRaw' '()I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  class   = jdk.incubator.vector.VectorOperators$OperatorImpl
  method  = {method} {0x00007fb3047c1290} 'opCodeRaw' '()I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
   [nmethod<=klass]jdk.incubator.vector.VectorOperators$BinaryImpl
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.VectorOperators$ImplCache
  method  = {method} {0x00007fb30460c470} 'find' '(Ljdk/incubator/vector/VectorOperators$Operator;ILjava/util/function/IntFunction;)Ljava/lang/Object;' in 'jdk/incubator/vector/VectorOperators$ImplCache'
  class   = jdk.incubator.vector.VectorOperators$ImplCache
  method  = {method} {0x00007fb30460c470} 'find' '(Ljdk/incubator/vector/VectorOperators$Operator;ILjava/util/function/IntFunction;)Ljava/lang/Object;' in 'jdk/incubator/vector/VectorOperators$ImplCache'
   [nmethod<=klass]jdk.incubator.vector.VectorOperators$ImplCache
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ExceptionHandlerTable (size = 0 bytes)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ImplicitExceptionTable (size = 2 entries, 20 bytes):
{
   < 0x00007fb370ce3049, 0x00007fb370ce336e > < 0x00007fb370ce308f, 0x00007fb370ce336e > 
}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded oops:
#0: 0x0000000000000000 NULL-oop
#1: 0x00000000eb00ee30 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x00000000eb00ee30}
#2: 0x00000000eb010f88 a 'java/lang/Class'{0x00000000eb010f88} = 'java/lang/invoke/LambdaForm$MH+0x0000000800007000'
#3: 0x00000000eb011000 a 'java/lang/Class'{0x00000000eb011000} = 'java/lang/invoke/LambdaForm$MH+0x0000000800006c00'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded metadata:
# 0: 0x0000000000000000 NULL-oop
# 1: 0x00007fb304411d58 {method} {0x00007fb304411d58} 'workload2_vector' '([I[II)I' in 'bytereverse'
# 2: 0x00007fb30441b780 {method} {0x00007fb30441b780} 'intoArray' '([II)V' in 'jdk/incubator/vector/IntVector'
# 3: 0x00007fb30441afd0 {method} {0x00007fb30441afd0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[II)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/IntVector'
# 4: 0x00007fb30464b710 {method} {0x00007fb30464b710} 'fromArray0' '([II)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/Int256Vector'
# 5: 0x00007fb30441c1a0 {method} {0x00007fb30441c1a0} 'fromArray0Template' '([II)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/IntVector'
# 6: 0x00007fb304618218 {method} {0x00007fb304618218} 'loopBound' '(I)I' in 'jdk/incubator/vector/AbstractSpecies'
# 7: 0x00007fb30443c4f8 {method} {0x00007fb30443c4f8} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;I)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/IntVector'
# 8: 0x00007fb30464d390 {method} {0x00007fb30464d390} 'lanewiseShift' '(Ljdk/incubator/vector/VectorOperators$Binary;I)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/Int256Vector'
# 9: 0x00007fb304649a98 {method} {0x00007fb304649a98} 'lanewiseShift' '(Ljdk/incubator/vector/VectorOperators$Binary;I)Ljdk/incubator/vector/Int256Vector;' in 'jdk/incubator/vector/Int256Vector'
#10: 0x00007fb30443ca38 {method} {0x00007fb30443ca38} 'lanewiseShiftTemplate' '(Ljdk/incubator/vector/VectorOperators$Binary;I)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/IntVector'
#11: 0x00007fb30440da70 {method} {0x00007fb30440da70} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000800007000'
#12: 0x00007fb30440d270 {method} {0x00007fb30440d270} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000800006c00'
#13: 0x00007fb304439208 {method} {0x00007fb304439208} 'opCode' '(Ljdk/incubator/vector/VectorOperators$Operator;)I' in 'jdk/incubator/vector/IntVector'
#14: 0x00007fb3044393c0 {method} {0x00007fb3044393c0} 'opKind' '(Ljdk/incubator/vector/VectorOperators$Operator;I)Z' in 'jdk/incubator/vector/IntVector'
#15: 0x00007fb30460f3d0 {method} {0x00007fb30460f3d0} 'opKind' '(Ljdk/incubator/vector/VectorOperators$Operator;I)Z' in 'jdk/incubator/vector/VectorOperators'
#16: 0x00007fb3047c1608 {method} {0x00007fb3047c1608} 'opKind' '(I)Z' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
#17: 0x00000008000cc920 'jdk/incubator/vector/IntVector$IntSpecies'
#18: 0x00000008000cc158 'jdk/incubator/vector/VectorSpecies'
#19: 0x00007fb304616178 {method} {0x00007fb304616178} 'loopBound' '(I)I' in 'jdk/incubator/vector/VectorSpecies'
#20: 0x00007fb3046177a8 {method} {0x00007fb3046177a8} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
#21: 0x00007fb304615fb0 {method} {0x00007fb304615fb0} 'length' '()I' in 'jdk/incubator/vector/VectorSpecies'
#22: 0x00000008000deb40 'jdk/incubator/vector/VectorOperators$BinaryImpl'
#23: 0x00000008000de600 'jdk/incubator/vector/VectorOperators$OperatorImpl'
#24: 0x00007fb3047c11c0 {method} {0x00007fb3047c11c0} 'opCode' '(II)I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
#25: 0x00007fb3047c1290 {method} {0x00007fb3047c1290} 'opCodeRaw' '()I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
#26: 0x00007fb30460c470 {method} {0x00007fb30460c470} 'find' '(Ljdk/incubator/vector/VectorOperators$Operator;ILjava/util/function/IntFunction;)Ljava/lang/Object;' in 'jdk/incubator/vector/VectorOperators$ImplCache'
#27: 0x00000008000cb760 'jdk/incubator/vector/VectorOperators$ImplCache'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Warmup complete
Measurement complete
r[0] = -973036125
r[1] = 265357138
r[2] = 1738579930
r[3] = 1119837421
r[4] = -169723489
r[5] = -1698086670
r[6] = -886575462
r[7] = -2037483525
[Time Vector Shifts] 141 ms [Res] 983040000
------------------------------------------------------------------------
static bytereverse::workload2_vector([I[II)I
  interpreter_invocation_count:         148
  invocation_counter:                   148
  backedge_counter:                  151552
  decompile_count:                        0
  mdo size: 1096 bytes

0 iconst_0
1 istore_3
2 iconst_0
3 istore #4
5 iload_3
6 getstatic 19 <bytereverse.SPECIES/Ljdk/incubator/vector/VectorSpecies;> 
9 getstatic 7 <bytereverse.LEN/I> 
12 invokeinterface 23 <jdk/incubator/vector/VectorSpecies.loopBound(I)I> 
  0   bci: 12   VirtualCallData     count(0) nonprofiled_count(0) entries(1)
                                    'jdk/incubator/vector/IntVector$IntSpecies'(151623 1.00)
17 if_icmpge 129
  56  bci: 17   BranchData          taken(71) displacement(520)
                                    not taken(151552)
20 getstatic 19 <bytereverse.SPECIES/Ljdk/incubator/vector/VectorSpecies;> 
23 fast_aload_0
24 iload_3
25 invokestatic 28 <jdk/incubator/vector/IntVector.fromArray(Ljdk/incubator/vector/VectorSpecies;[II)Ljdk/incubator/vector/IntVector;> 
  88  bci: 25   CounterData         count(151552)
28 astore #5
30 aload #5
32 getstatic 71 <jdk/incubator/vector/VectorOperators.ROL/Ljdk/incubator/vector/VectorOperators$Binary;> 
35 bipush 16
37 invokevirtual 77 <jdk/incubator/vector/IntVector.lanewise(Ljdk/incubator/vector/VectorOperators$Binary;I)Ljdk/incubator/vector/IntVector;> 
  104 bci: 37   VirtualCallData     count(151552) nonprofiled_count(0) entries(0)
40 astore #6
42 aload #6
44 getstatic 81 <jdk/incubator/vector/VectorOperators.AND/Ljdk/incubator/vector/VectorOperators$Associative;> 
47 getstatic 85 <bytereverse.mask8bitR/I> 
50 invokevirtual 77 <jdk/incubator/vector/IntVector.lanewise(Ljdk/incubator/vector/VectorOperators$Binary;I)Ljdk/incubator/vector/IntVector;> 
  160 bci: 50   VirtualCallData     count(151552) nonprofiled_count(0) entries(0)
53 astore #7
55 aload #7
57 getstatic 88 <jdk/incubator/vector/VectorOperators.LSHR/Ljdk/incubator/vector/VectorOperators$Binary;> 
60 bipush 8
62 invokevirtual 77 <jdk/incubator/vector/IntVector.lanewise(Ljdk/incubator/vector/VectorOperators$Binary;I)Ljdk/incubator/vector/IntVector;> 
  216 bci: 62   VirtualCallData     count(151552) nonprofiled_count(0) entries(0)
65 astore #7
67 aload #6
69 getstatic 81 <jdk/incubator/vector/VectorOperators.AND/Ljdk/incubator/vector/VectorOperators$Associative;> 
72 getstatic 91 <bytereverse.mask8bitL/I> 
75 invokevirtual 77 <jdk/incubator/vector/IntVector.lanewise(Ljdk/incubator/vector/VectorOperators$Binary;I)Ljdk/incubator/vector/IntVector;> 
  272 bci: 75   VirtualCallData     count(151552) nonprofiled_count(0) entries(0)
78 astore #8
80 aload #8
82 getstatic 94 <jdk/incubator/vector/VectorOperators.LSHL/Ljdk/incubator/vector/VectorOperators$Binary;> 
85 bipush 8
87 invokevirtual 77 <jdk/incubator/vector/IntVector.lanewise(Ljdk/incubator/vector/VectorOperators$Binary;I)Ljdk/incubator/vector/IntVector;> 
  328 bci: 87   VirtualCallData     count(151552) nonprofiled_count(0) entries(0)
90 astore #8
92 aload #7
94 getstatic 97 <jdk/incubator/vector/VectorOperators.OR/Ljdk/incubator/vector/VectorOperators$Associative;> 
97 aload #8
99 invokevirtual 100 <jdk/incubator/vector/IntVector.lanewise(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/IntVector;> 
  384 bci: 99   VirtualCallData     count(0) nonprofiled_count(0) entries(1)
                                    'jdk/incubator/vector/Int256Vector'(151552 1.00)
102 astore #7
104 aload #7
106 astore #6
108 aload #7
110 aload_1
111 iload_3
112 invokevirtual 60 <jdk/incubator/vector/IntVector.intoArray([II)V> 
  440 bci: 112  VirtualCallData     count(151552) nonprofiled_count(0) entries(0)
115 iload_3
116 getstatic 19 <bytereverse.SPECIES/Ljdk/incubator/vector/VectorSpecies;> 
119 invokeinterface 64 <jdk/incubator/vector/VectorSpecies.length()I> 
  496 bci: 119  VirtualCallData     count(0) nonprofiled_count(0) entries(1)
                                    'jdk/incubator/vector/IntVector$IntSpecies'(151552 1.00)
124 iadd
125 istore_3
126 goto 5
  552 bci: 126  JumpData            taken(151552) displacement(-552)
129 iload_3
130 getstatic 7 <bytereverse.LEN/I> 
133 if_icmpge 151
  576 bci: 133  BranchData          taken(71) displacement(72)
                                    not taken(0)
136 aload_1
137 iload_3
138 aload_0
139 iload_3
140 iaload
141 invokestatic 68 <java/lang/Integer.reverse(I)I> 
  608 bci: 141  CounterData         count(0)
144 iastore
145 iinc #3 1
148 goto 129
  624 bci: 148  JumpData            taken(0) displacement(-48)
151 iload_3
152 ireturn
------------------------------------------------------------------------
Total MDO size: 1096 bytes
