CompileCommand: print bytereverse.workload1_vector bool print = true
Warmup complete
Measurement complete
r[0] = -973036125
r[1] = 265357138
r[2] = 1738579930
r[3] = 1119837421
r[4] = -169723489
r[5] = -1698086670
r[6] = -886575462
r[7] = -2037483525
[Time Scalar] 641 ms [Res] 983040000

============================= C2-compiled nmethod ==============================
----------------------- MetaData before Compile_id = 1119 ------------------------
{method}
 - this oop:          0x00007f7644411bf0
 - method holder:     'bytereverse'
 - constants:         0x00007f76444110f0 constant pool [230]/operands[20] {0x00007f76444110f0} for 'bytereverse' cache=0x00007f7644700000
 - access:            0xc1000009  public static 
 - name:              'workload1_vector'
 - signature:         '([I[II)I'
 - max stack:         5
 - max locals:        7
 - size of params:    3
 - method size:       13
 - vtable index:      -2
 - i2i entry:         0x00007f76ad00dc00
 - adapters:          AHE@0x00007f76bc3aa290: 0xbba i2c: 0x00007f76ad0a8360 c2i: 0x00007f76ad0a8447 c2iUV: 0x00007f76ad0a8411 c2iNCI: 0x00007f76ad0a8484
 - compiled entry     0x00007f76ad0a8447
 - code size:         98
 - code start:        0x00007f7644411b78
 - code end (excl):   0x00007f7644411bda
 - method data:       0x00007f76447011e8
 - checked ex length: 0
 - linenumber start:  0x00007f7644411bda
 - localvar length:   0

------------------------ OptoAssembly for Compile_id = 1119 -----------------------
#
#  int ( rawptr:BotPTR )
#
#r018 rsi:rsi   : parm 0: rawptr:BotPTR
# -- Old rsp -- Framesize: 128 --
#r591 rsp+124: in_preserve
#r590 rsp+120: return address
#r589 rsp+116: in_preserve
#r588 rsp+112: saved fp register
#r587 rsp+108: pad2, stack alignment
#r586 rsp+104: pad2, stack alignment
#r585 rsp+100: Fixed slot 1
#r584 rsp+96: Fixed slot 0
#r615 rsp+92: spill
#r614 rsp+88: spill
#r613 rsp+84: spill
#r612 rsp+80: spill
#r611 rsp+76: spill
#r610 rsp+72: spill
#r609 rsp+68: spill
#r608 rsp+64: spill
#r607 rsp+60: spill
#r606 rsp+56: spill
#r605 rsp+52: spill
#r604 rsp+48: spill
#r603 rsp+44: spill
#r602 rsp+40: spill
#r601 rsp+36: spill
#r600 rsp+32: spill
#r599 rsp+28: spill
#r598 rsp+24: spill
#r597 rsp+20: spill
#r596 rsp+16: spill
#r595 rsp+12: spill
#r594 rsp+ 8: spill
#r593 rsp+ 4: spill
#r592 rsp+ 0: spill
#
000     N690: #	out( B1 ) <- BLOCK HEAD IS JUNK  Freq: 1
000     # breakpoint
        nop 	# 11 bytes pad for loops and calls

010     B1: #	out( B48 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
010     # stack bang (1240 bytes)
	pushq   rbp	# Save rbp
	subq    rsp, #112	# Create frame

01c     movq    RBP, [RSI + #48 (8-bit)]	# ptr
020     movq    R13, [RSI + #40 (8-bit)]	# ptr
024     movl    RBX, [RSI + #24 (8-bit)]	# int
027     movq    RDI, RSI	# spill
02a     call_leaf,runtime  OSR_migration_end
        No JVM State Info
        # 
        nop 	# 6 bytes pad for loops and calls
040     testq   RBP, RBP	# ptr
043     je     B48  P=0.001000 C=-1.000000

049     B2: #	out( B60 B3 ) <- in( B1 )  Freq: 0.999
049     movl    R10, [RBP + #8 (8-bit)]	# compressed klass ptr
04d     cmpl    R10, narrowklass: precise [int: :Constant:exact *	# compressed klass ptr
054     jne,u   B60  P=0.000001 C=-1.000000

05a     B3: #	out( B4 ) <- in( B2 )  Freq: 0.998999
05a     movq    R11, RBP	# spill
05d     # checkcastPP of R11

05d     B4: #	out( B49 B5 ) <- in( B3 B48 )  Freq: 0.999999
        nop 	# 3 bytes pad for loops and calls
060     testq   R13, R13	# ptr
063     je     B49  P=0.001000 C=-1.000000

069     B5: #	out( B60 B6 ) <- in( B4 )  Freq: 0.998999
069     movl    R8, [R13 + #8 (8-bit)]	# compressed klass ptr
06d     cmpl    R8, narrowklass: precise [int: :Constant:exact *	# compressed klass ptr
074     jne,u   B60  P=0.000001 C=-1.000000

07a     B6: #	out( B7 ) <- in( B5 )  Freq: 0.998998
07a     # checkcastPP of R13

07a     B7: #	out( B59 B8 ) <- in( B6 B49 )  Freq: 0.999998
        nop 	# 6 bytes pad for loops and calls
080     movl    RCX, [R11 + #12 (8-bit)]	# range
084     NullCheck R11

084     B8: #	out( B59 B9 ) <- in( B7 )  Freq: 0.999997
084     addl    RCX, #-7	# int
087     testl   RCX, RCX
089     jl     B59  P=0.000001 C=-1.000000

08f     B9: #	out( B59 B10 ) <- in( B8 )  Freq: 0.999996
08f     movq    R10, java/lang/Class:exact *	# ptr
099     movl    RSI, [R10 + #116 (8-bit)]	# compressed ptr ! Field: bytereverse.idx
        nop 	# 3 bytes pad for loops and calls
0a0     movl    R9, [R12 + RSI << 3 + #12] (compressed oop addressing)	# range
0a5     NullCheck RSI

0a5     B10: #	out( B59 B11 ) <- in( B9 )  Freq: 0.999995
0a5     testl   R9, R9	# unsigned
0a8     jbe,u   B59  P=0.000001 C=-1.000000

0ae     B11: #	out( B59 B12 ) <- in( B10 )  Freq: 0.999994
0ae     cmpl    R9, #31	# unsigned
0b2     jbe,u   B59  P=0.000001 C=-1.000000

0b8     B12: #	out( B59 B13 ) <- in( B11 )  Freq: 0.999993
        nop 	# 8 bytes pad for loops and calls
0c0     movl    R8, [R13 + #12 (8-bit)]	# range
0c4     NullCheck R13

0c4     B13: #	out( B59 B14 ) <- in( B12 )  Freq: 0.999992
0c4     addl    R8, #-7	# int
0c8     testl   R8, R8
0cb     jl     B59  P=0.000001 C=-1.000000

0d1     B14: #	out( B31 ) <- in( B13 )  Freq: 0.999991
0d1     movl    RDX, [R10 + #120 (8-bit)]	# int ! Field: bytereverse.LEN
0d5     decode_heap_oop_not_null RBP,RSI
0d9     movl    RDI, RDX	# spill
0db     andl    RDI, #-8	# int
0de     movl    R10, #-1	# int
0e4     mask_all_evexI_LE32 K7, R10 	
0e9     jmp     B31
        nop 	# 2 bytes pad for loops and calls

0f0     B15: #	out( B16 ) <- in( B20 ) top-of-loop Freq: 31131.6
0f0     movl    R9, R10	# spill

0f3     B16: #	out( B46 B17 ) <- in( B38 B15 ) Loop( B16-B15 inner main of N153) Freq: 32104.5
0f3     movslq  RCX, R9	# i2l
0f6     movl    R11, [RBP + #16 + RCX << #2]	# int
0fb     movl    R10, R11	# spill
0fe     andl    R10, #31	# int
102     cmpl    R10, R11
105     jne     B46  P=0.000000 C=50336.000000

10b     B17: #	out( B43 B18 ) <- in( B16 )  Freq: 32104.5
10b     movb    [RAX + #16 + RCX], R10	# byte
110     movl    R11, [RBP + #20 + RCX << #2]	# int
115     movl    R10, R11	# spill
118     andl    R10, #31	# int
        nop 	# 4 bytes pad for loops and calls
120     cmpl    R10, R11
123     jne     B43  P=0.000000 C=50336.000000

129     B18: #	out( B44 B19 ) <- in( B17 )  Freq: 32104.5
129     movb    [RAX + #17 + RCX], R10	# byte
12e     movl    R11, [RBP + #24 + RCX << #2]	# int
133     movl    R10, R11	# spill
136     andl    R10, #31	# int
        nop 	# 6 bytes pad for loops and calls
140     cmpl    R10, R11
143     jne     B44  P=0.000000 C=50336.000000

149     B19: #	out( B45 B20 ) <- in( B18 )  Freq: 32104.5
149     movb    [RAX + #18 + RCX], R10	# byte
14e     movl    R11, [RBP + #28 + RCX << #2]	# int
153     movl    R10, R11	# spill
156     andl    R10, #31	# int
        nop 	# 6 bytes pad for loops and calls
160     cmpl    R10, R11
163     jne     B45  P=0.000000 C=50336.000000

169     B20: #	out( B15 B21 ) <- in( B19 )  Freq: 32104.5
169     movb    [RAX + #19 + RCX], R10	# byte
16e     movl    R10, R9	# spill
171     addl    R10, #4	# int
175     cmpl    R10, #29
179     jl     B15	# loop end  P=0.969697 C=50304.000000

17f     B21: #	out( B27 B22 ) <- in( B20 )  Freq: 972.862
        nop 	# 1 bytes pad for loops and calls
180     cmpl    R10, #32
184     jge     B27  P=0.500000 C=-1.000000

18a     B22: #	out( B54 B23 ) <- in( B21 )  Freq: 486.431
18a     # castII of R9
18a     addl    R9, #4	# int
18e     cmpl    R9, R8	# unsigned
191     jnb,u   B54  P=0.000001 C=-1.000000

197     B23: #	out( B55 B24 ) <- in( B22 )  Freq: 486.43
197     cmpl    R9, #32	# unsigned
        nop 	# 5 bytes pad for loops and calls
1a0     jnb,u   B55  P=0.000001 C=-1.000000

1a6     B24: #	out( B57 B25 ) <- in( B23 B25 ) Loop( B24-B25 inner post of N483) Freq: 972.859
1a6     movslq  RCX, R9	# i2l
1a9     movl    R11, [RBP + #16 + RCX << #2]	# int
1ae     movl    R10, R11	# spill
1b1     andl    R10, #31	# int
1b5     cmpl    R10, R11
1b8     jne     B57  P=0.000000 C=50336.000000

1be     B25: #	out( B24 B26 ) <- in( B24 )  Freq: 972.859
1be     movb    [RAX + #16 + RCX], R10	# byte
1c3     incl    R9	# int
1c6     cmpl    R9, #32
1ca     jl,s   B24	# loop end  P=0.500000 C=50304.000000

1cc     B26: #	out( B28 ) <- in( B25 )  Freq: 486.429
1cc     load_vector XMM0,[RAX + #16 (8-bit)]
1d1     movq    R10, byte[int:32]<ciTypeArray length=32 type=<ciTypeArrayKlass name=[B ident=1254 address=0x00007f762801bf10> ident=1582 address=0x00007f760015aa58> *	# ptr
1db     load_vector XMM1,[R10 + #16 (8-bit)]
1e1     jmp,s   B28

1e3     B27: #	out( B28 ) <- in( B21 )  Freq: 486.431
1e3     movq    R10, byte[int:32]<ciTypeArray length=32 type=<ciTypeArrayKlass name=[B ident=1254 address=0x00007f762801bf10> ident=1582 address=0x00007f760015aa58> *	# ptr
1ed     load_vector XMM1,[R10 + #16 (8-bit)]
1f3     load_vector XMM0,[RAX + #16 (8-bit)]

1f8     B28: #	out( B58 B29 ) <- in( B26 B27 )  Freq: 972.86
1f8     vector_compared_evex K7,XMM0,XMM1,#3	!
1ff     kmovq   K6, [rsp + #40]	# spill
206     vptest_anytrue_lt8_evex R11,K7,K6	! using RFLAGS as TEMP
213     testl   R11, R11
216     jne     B58  P=0.000000 C=11499.000000

21c     B29: #	out( B51 B30 ) <- in( B28 )  Freq: 972.86
21c     vector_load_shuffle XMM0, XMM0
21c     vector_rearrange XMM4, XMM0, XMM3	! using XMM1, XMM2, R10 as TEMP
23a     vector_reinterpret XMM4	!
23a     movl    RBX, [rsp + #8]	# spill
        nop 	# 2 bytes pad for loops and calls
240     cmpl    RBX, [RSP + #32 (32-bit)]	# unsigned
244     jnb,u   B51  P=0.000001 C=-1.000000

24a     B30: #	out( B31 ) <- in( B29 )  Freq: 972.859
24a     movq    R13, [rsp + #0]	# spill
24e     store_vector [R13 + #16 + RBX << #2],XMM4
	
255     # TLS is in R15
255     movq    R10, [R15 + #912 (32-bit)]	# ptr
25c     addl    RBX, #8	# int
25f     testl   rax, [R10]	# Safepoint: poll for GC        # bytereverse::workload1_vector @ bci:71 (line 38) L[0]=rsp + #16 L[1]=rsp + #0 L[2]=_ L[3]=RBX L[4]=_ L[5]=_ L[6]=_
        # OopMap {rbp=Oop r13=Oop [0]=Oop [16]=Oop [24]=NarrowOop off=607/0x25f}
262     movq    R11, [rsp + #16]	# spill
267     movl    RCX, [rsp + #12]	# spill
26b     movl    RSI, [rsp + #24]	# spill
26f     movl    R9, R8	# spill
272     movl    R8, [rsp + #32]	# spill
277     kmovq   K7, [rsp + #40]	# spill
27e     movl    RDX, [rsp + #36]	# spill
282     movl    RDI, [rsp + #48]	# spill

286     B31: #	out( B39 B32 ) <- in( B14 B30 ) Loop( B31-B30 ) Freq: 973.859
286     cmpl    RBX, RDI
288     jge     B39  P=0.000954 C=45054.000000

28e     B32: #	out( B50 B33 ) <- in( B31 )  Freq: 972.93
28e     cmpl    RBX, RCX	# unsigned
290     jnb,u   B50  P=0.000001 C=-1.000000

296     B33: #	out( B41 B34 ) <- in( B32 )  Freq: 972.929
296     movl    [rsp + #48], RDI	# spill
29a     movl    [rsp + #36], RDX	# spill
29e     # TLS is in R15
29e     movq    RAX, [R15 + #264 (32-bit)]	# ptr
2a5     movq    R10, RAX	# spill
2a8     addq    R10, #48	# ptr
2ac     # castII of RBX
2ac     load_vector XMM3,[R11 + #16 + RBX << #2]
2b3     vector_reinterpret XMM3	!
2b3     # TLS is in R15
        nop 	# 13 bytes pad for loops and calls
2c0     cmpq    R10, [R15 + #280 (32-bit)]	# raw ptr
2c7     jnb,u   B41  P=0.000100 C=-1.000000

2cd     B34: #	out( B35 ) <- in( B33 )  Freq: 972.831
2cd     kmovq   [rsp + #40] , K7	# spill
2d4     movl    [rsp + #32], R8	# spill
2d9     movl    [rsp + #28], R9	# spill
2de     movl    [rsp + #24], RSI	# spill
2e2     movl    [rsp + #12], RCX	# spill
2e6     movq    [rsp + #16], R11	# spill
2eb     movl    [rsp + #8], RBX	# spill
2ef     movq    [rsp + #0], R13	# spill
2f3     # TLS is in R15
2f3     movq    [R15 + #264 (32-bit)], R10	# ptr
2fa     PREFETCHW [R10 + #192 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
302     movq    [RAX], #1	# long
309     PREFETCHW [R10 + #256 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
311     movl    [RAX + #8 (8-bit)], narrowklass: precise [byte: :Constant:exact *	# compressed klass ptr
318     PREFETCHW [R10 + #320 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
320     movl    [RAX + #12 (8-bit)], #32	# int
327     PREFETCHW [R10 + #384 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
32f     movq    R10, RAX	# spill
332     addq    R10, #16	# ptr
336     clear_mem_imm R10 , #4  
	

340     B35: #	out( B56 B36 ) <- in( B42 B34 )  Freq: 972.929
340     
340     # checkcastPP of RAX
340     movl    R11, [rsp + #24]	# spill
345     movl    R11, [R12 + R11 << 3 + #16] (compressed oop addressing)	# int
34a     movl    R10, R11	# spill
34d     andl    R10, #31	# int
351     cmpl    R10, R11
354     jne     B56  P=0.000000 C=50336.000000

35a     B36: #	out( B52 B37 ) <- in( B35 )  Freq: 972.928
35a     movl    R11, [rsp + #28]	# spill
        nop 	# 1 bytes pad for loops and calls
360     cmpl    R11, #1	# unsigned
364     jbe,u   B52  P=0.000001 C=-1.000000

36a     B37: #	out( B53 B38 ) <- in( B36 )  Freq: 972.927
36a     cmpl    R11, #4	# unsigned
36e     jbe,u   B53  P=0.000001 C=-1.000000

374     B38: #	out( B16 ) <- in( B37 )  Freq: 972.926
374     movb    [RAX + #16 (8-bit)], R10	# byte
378     movl    R9, #1	# int
37e     movl    R8, [rsp + #28]	# spill
383     jmp     B16

388     B39: #	out( B61 B40 ) <- in( B31 )  Freq: 0.929441
388     cmpl    RBX, RDX
38a     jl     B61  P=0.000000 C=43.000000

390     B40: #	out( N690 ) <- in( B39 )  Freq: 0.92944
390     movl    RAX, RBX	# spill
392     vzeroupper
	addq    rsp, 112	# Destroy frame
	popq    rbp
	cmpq     rsp, poll_offset[r15_thread] 
	ja       #safepoint_stub	# Safepoint: poll for GC

3a7     ret

3a8     B41: #	out( B62 B42 ) <- in( B33 )  Freq: 0.097309
3a8     vmovdqu [rsp + 64],XMM3	# spill
3ae     kmovq   [rsp + #40] , K7	# spill
3b5     movl    [rsp + #32], R8	# spill
3ba     movl    [rsp + #28], R9	# spill
3bf     movl    [rsp + #24], RSI	# spill
3c3     movl    [rsp + #12], RCX	# spill
3c7     movq    [rsp + #16], R11	# spill
3cc     movl    [rsp + #8], RBX	# spill
3d0     movq    [rsp + #0], R13	# spill
3d4     movq    RSI, precise [byte: :Constant:exact *	# ptr
3de     movl    RDX, #32	# int
        nop 	# 1 bytes pad for loops and calls
3e4     call,static  wrapper for: _new_array_Java
        # jdk.incubator.vector.AbstractShuffle::prepare @ bci:1 (line 55) L[0]=#32 L[1]=rsp + #24 L[2]=#0 L[3]=_ L[4]=_ L[5]=_
        # jdk.incubator.vector.AbstractShuffle::<init> @ bci:4 (line 47) L[0]=_ L[1]=_ L[2]=_ L[3]=_ STK[0]=#ScObj0
        # ScObj0 jdk/incubator/vector/Byte256Vector$Byte256Shuffle={ [payload :0]=#NULL }
        # jdk.incubator.vector.Byte256Vector$Byte256Shuffle::<init> @ bci:6 (line 816) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.Byte256Vector::shuffleFromArray @ bci:6 (line 161) L[0]=_ L[1]=_ L[2]=_ STK[0]=#ScObj0
        # ScObj0 jdk/incubator/vector/Byte256Vector$Byte256Shuffle={ [payload :0]=#NULL }
        # jdk.incubator.vector.Byte256Vector::shuffleFromArray @ bci:3 (line 41) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.AbstractSpecies::shuffleFromArray @ bci:6 (line 322) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.VectorShuffle::fromArray @ bci:8 (line 314) L[0]=_ L[1]=_ L[2]=_ L[3]=_
        # bytereverse::workload1_vector @ bci:42 (line 41) L[0]=rsp + #16 L[1]=rsp + #0 L[2]=_ L[3]=rsp + #8 L[4]=_ L[5]=_ L[6]=_ STK[0]=#ScObj0
        # ScObj0 jdk/incubator/vector/Byte256Vector={ [payload :0]=rsp + #64 }
        # OopMap {rbp=Oop [0]=Oop [16]=Oop [24]=NarrowOop off=1004/0x3ec}

3ec     B42: #	out( B35 ) <- in( B41 )  Freq: 0.097307
        # Block is sole successor of call
3ec     vmovdqu XMM3,[rsp + 64]	# spill
3f2     jmp     B35

3f7     B43: #	out( B46 ) <- in( B17 )  Freq: 0.0160523
3f7     incl    R9	# int
3fa     jmp,s   B46

3fc     B44: #	out( B46 ) <- in( B18 )  Freq: 0.0160523
3fc     addl    R9, #2	# int
400     jmp,s   B46

402     B45: #	out( B46 ) <- in( B19 )  Freq: 0.0160522
402     addl    R9, #3	# int

406     B46: #	out( B47 ) <- in( B56 B16 B44 B43 B45 )  Freq: 0.0646955
406     vmovdqu XMM0,XMM3	# spill

40a     B47: #	out( N690 ) <- in( B57 B46 )  Freq: 0.0651819
40a     movl    RSI, #-187	# int
40f     movq    RBP, [rsp + #16]	# spill
414     movl    R8, [rsp + #24]	# spill
419     movl    [rsp + #12], R8	# spill
41e     movq    [rsp + #16], RAX	# spill
423     movl    [rsp + #24], R9	# spill
428     movl    [rsp + #36], R10	# spill
42d     movl    [rsp + #40], R11	# spill
432     vmovdqu [rsp + 64],XMM0	# spill
438     call,static  wrapper for: uncommon_trap(reason='unstable_if' action='reinterpret' debug_id='0')
        # jdk.incubator.vector.AbstractShuffle::checkIndex0 @ bci:12 (line 209) L[0]=rsp + #40 L[1]=#32 L[2]=#-1 L[3]=rsp + #36 STK[0]=rsp + #36 STK[1]=rsp + #40
        # jdk.incubator.vector.AbstractShuffle::partiallyWrapIndex @ bci:3 (line 202) L[0]=_ L[1]=_
        # jdk.incubator.vector.AbstractShuffle::prepare @ bci:24 (line 58) L[0]=#32 L[1]=rsp + #12 L[2]=#0 L[3]=rsp + #16 L[4]=rsp + #24 L[5]=_
        # jdk.incubator.vector.AbstractShuffle::<init> @ bci:4 (line 47) L[0]=_ L[1]=_ L[2]=_ L[3]=_ STK[0]=#ScObj0
        # ScObj0 jdk/incubator/vector/Byte256Vector$Byte256Shuffle={ [payload :0]=#NULL }
        # jdk.incubator.vector.Byte256Vector$Byte256Shuffle::<init> @ bci:6 (line 816) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.Byte256Vector::shuffleFromArray @ bci:6 (line 161) L[0]=_ L[1]=_ L[2]=_ STK[0]=#ScObj0
        # ScObj0 jdk/incubator/vector/Byte256Vector$Byte256Shuffle={ [payload :0]=#NULL }
        # jdk.incubator.vector.Byte256Vector::shuffleFromArray @ bci:3 (line 41) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.AbstractSpecies::shuffleFromArray @ bci:6 (line 322) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.VectorShuffle::fromArray @ bci:8 (line 314) L[0]=_ L[1]=_ L[2]=_ L[3]=_
        # bytereverse::workload1_vector @ bci:42 (line 41) L[0]=RBP L[1]=rsp + #0 L[2]=_ L[3]=rsp + #8 L[4]=_ L[5]=_ L[6]=_ STK[0]=#ScObj0
        # ScObj0 jdk/incubator/vector/Byte256Vector={ [payload :0]=rsp + #64 }
        # OopMap {rbp=Oop [0]=Oop [12]=NarrowOop [16]=Oop off=1088/0x440}
440     stop	# ShouldNotReachHere

454     B48: #	out( B4 ) <- in( B1 )  Freq: 0.000999987
454     xorl    R11, R11	# ptr
457     jmp     B4

45c     B49: #	out( B7 ) <- in( B4 )  Freq: 0.000999986
45c     xorl    R13, R13	# ptr
        nop 	# 1 bytes pad for loops and calls
460     jmp     B7

465     B50: #	out( N690 ) <- in( B32 )  Freq: 0.000985849
465     movl    RSI, #-28	# int
46a     movq    [rsp + #0], R13	# spill
46e     movq    [rsp + #16], R11	# spill
473     movl    [rsp + #12], RBX	# spill
477     movl    [rsp + #24], RCX	# spill
        nop 	# 1 bytes pad for loops and calls
47c     call,static  wrapper for: uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')
        # java.util.Objects::checkIndex @ bci:3 (line 359) L[0]=_ L[1]=_ STK[0]=rsp + #12 STK[1]=rsp + #24 STK[2]=#NULL
        # jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize @ bci:43 (line 52) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.IntVector::fromArray @ bci:9 (line 2894) L[0]=#Ptr0x00007f76180d10a0 L[1]=rsp + #16 L[2]=_ L[3]=_
        # bytereverse::workload1_vector @ bci:25 (line 39) L[0]=rsp + #16 L[1]=rsp + #0 L[2]=_ L[3]=rsp + #12 L[4]=_ L[5]=_ L[6]=_
        # OopMap {[0]=Oop [16]=Oop off=1156/0x484}
484     stop	# ShouldNotReachHere

498     B51: #	out( N690 ) <- in( B29 )  Freq: 0.000985778
498     movl    RSI, #-28	# int
49d     movq    RBP, [rsp + #16]	# spill
4a2     movl    R11, [rsp + #32]	# spill
4a7     movl    [rsp + #24], R11	# spill
4ac     vmovdqu [rsp + 32],XMM4	# spill
        nop 	# 2 bytes pad for loops and calls
4b4     call,static  wrapper for: uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')
        # java.util.Objects::checkIndex @ bci:3 (line 359) L[0]=_ L[1]=_ STK[0]=rsp + #8 STK[1]=rsp + #24 STK[2]=#NULL
        # jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize @ bci:43 (line 52) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.IntVector::intoArray @ bci:7 (line 3163) L[0]=#ScObj0 L[1]=rsp + #0 L[2]=_ L[3]=_
        # ScObj0 jdk/incubator/vector/Int256Vector={ [payload :0]=rsp + #32 }
        # bytereverse::workload1_vector @ bci:57 (line 43) L[0]=RBP L[1]=rsp + #0 L[2]=_ L[3]=rsp + #8 L[4]=_ L[5]=_ L[6]=_
        # OopMap {rbp=Oop [0]=Oop off=1212/0x4bc}
4bc     stop	# ShouldNotReachHere

4d0     B52: #	out( N690 ) <- in( B36 )  Freq: 0.000972928
4d0     stop	# ShouldNotReachHere

4e4     B53: #	out( N690 ) <- in( B37 )  Freq: 0.000972927
4e4     stop	# ShouldNotReachHere

4f8     B54: #	out( N690 ) <- in( B22 )  Freq: 0.00049289
4f8     stop	# ShouldNotReachHere

50c     B55: #	out( N690 ) <- in( B23 )  Freq: 0.00049289
50c     stop	# ShouldNotReachHere

520     B56: #	out( B46 ) <- in( B35 )  Freq: 0.000486464
520     xorl    R9, R9	# int
523     jmp     B46

528     B57: #	out( B47 ) <- in( B24 )  Freq: 0.00048643
528     vmovdqu XMM0,XMM3	# spill
52c     jmp     B47

531     B58: #	out( N690 ) <- in( B28 )  Freq: 0.000463896
531     movl    RSI, #-187	# int
536     vector_store_mask XMM0, K7 	! elem size is #1 byte[s]
541     movq    RBP, [rsp + #16]	# spill
546     movl    [rsp + #12], R11	# spill
54b     vmovdqu [rsp + 32],XMM3	# spill
551     movq    [rsp + #16], RAX	# spill
556     vmovdqu [rsp + 64],XMM0	# spill
55c     call,static  wrapper for: uncommon_trap(reason='unstable_if' action='reinterpret' debug_id='0')
        # jdk.incubator.vector.AbstractShuffle::checkIndexes @ bci:32 (line 128) L[0]=#ScObj0 L[1]=_ L[2]=#ScObj1 L[3]=_ STK[0]=rsp + #12
        # ScObj0 jdk/incubator/vector/Byte256Vector$Byte256Shuffle={ [payload :0]=rsp + #16 }
        # ScObj1 jdk/incubator/vector/Byte256Vector$Byte256Mask={ [payload :0]=rsp + #64 }
        # jdk.incubator.vector.ByteVector::rearrangeTemplate @ bci:1 (line 2259) L[0]=#ScObj0 L[1]=#Ptr0x00007f7628256418 L[2]=#ScObj1
        # ScObj0 jdk/incubator/vector/Byte256Vector={ [payload :0]=rsp + #32 }
        # ScObj1 jdk/incubator/vector/Byte256Vector$Byte256Shuffle={ [payload :0]=rsp + #16 }
        # jdk.incubator.vector.Byte256Vector::rearrange @ bci:7 (line 446) L[0]=_ L[1]=_
        # jdk.incubator.vector.Byte256Vector::rearrange @ bci:2 (line 41) L[0]=_ L[1]=_
        # bytereverse::workload1_vector @ bci:45 (line 41) L[0]=RBP L[1]=rsp + #0 L[2]=_ L[3]=rsp + #8 L[4]=_ L[5]=_ L[6]=_
        # OopMap {rbp=Oop [0]=Oop [16]=Oop off=1380/0x564}
564     stop	# ShouldNotReachHere

578     B59: #	out( N690 ) <- in( B12 B7 B8 B9 B10 B11 B13 )  Freq: 7.0398e-06
578     movl    RSI, #-66	# int
57d     movq    RBP, R11	# spill
580     movq    [rsp + #0], R13	# spill
584     movl    [rsp + #8], RBX	# spill
588     call,static  wrapper for: uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')
        # bytereverse::workload1_vector @ bci:5 (line 38) L[0]=RBP L[1]=rsp + #0 L[2]=_ L[3]=rsp + #8 L[4]=_ L[5]=_ L[6]=_
        # OopMap {rbp=Oop [0]=Oop off=1424/0x590}
590     stop	# ShouldNotReachHere

5a4     B60: #	out( N690 ) <- in( B2 B5 )  Freq: 1.998e-06
5a4     movl    RSI, #-115	# int
5a9     movq    [rsp + #0], R13	# spill
5ad     movl    [rsp + #8], RBX	# spill
        nop 	# 3 bytes pad for loops and calls
5b4     call,static  wrapper for: uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')
        # bytereverse::workload1_vector @ bci:5 (line 38) L[0]=RBP L[1]=rsp + #0 L[2]=_ L[3]=rsp + #8 L[4]=_ L[5]=_ L[6]=_
        # OopMap {rbp=Oop [0]=Oop off=1468/0x5bc}
5bc     stop	# ShouldNotReachHere

5d0     B61: #	out( N690 ) <- in( B39 )  Freq: 4.43192e-07
5d0     movl    RSI, #-187	# int
5d5     movq    RBP, R11	# spill
5d8     movq    [rsp + #0], R13	# spill
5dc     movl    [rsp + #12], RBX	# spill
5e0     movl    [rsp + #16], RDX	# spill
5e4     call,static  wrapper for: uncommon_trap(reason='unstable_if' action='reinterpret' debug_id='0')
        # bytereverse::workload1_vector @ bci:78 (line 46) L[0]=RBP L[1]=rsp + #0 L[2]=_ L[3]=rsp + #12 L[4]=_ L[5]=_ L[6]=_ STK[0]=rsp + #12 STK[1]=rsp + #16
        # OopMap {rbp=Oop [0]=Oop off=1516/0x5ec}
5ec     stop	# ShouldNotReachHere

600     B62: #	out( N690 ) <- in( B41 )  Freq: 9.7309e-07
600     # exception oop is in rax; no code emitted
600     movq    RSI, RAX	# spill
603     vzeroupper
	addq    rsp, 112	# Destroy frame
	popq    rbp

60b     jmp     rethrow_stub

--------------------------------------------------------------------------------
----------------------------------- Assembly -----------------------------------

Compiled method (c2)    1816 1119 %     4       bytereverse::workload1_vector @ 5 (98 bytes)
 total in heap  [0x00007f76b4cd1f10,0x00007f76b4cd31d0] = 4800
 relocation     [0x00007f76b4cd2080,0x00007f76b4cd2148] = 200
 main code      [0x00007f76b4cd2160,0x00007f76b4cd27a0] = 1600
 stub code      [0x00007f76b4cd27a0,0x00007f76b4cd27b8] = 24
 oops           [0x00007f76b4cd27b8,0x00007f76b4cd27e8] = 48
 metadata       [0x00007f76b4cd27e8,0x00007f76b4cd2950] = 360
 scopes data    [0x00007f76b4cd2950,0x00007f76b4cd2c70] = 800
 scopes pcs     [0x00007f76b4cd2c70,0x00007f76b4cd3170] = 1280
 dependencies   [0x00007f76b4cd3170,0x00007f76b4cd3198] = 40
 handler table  [0x00007f76b4cd3198,0x00007f76b4cd31b0] = 24
 nul chk table  [0x00007f76b4cd31b0,0x00007f76b4cd31d0] = 32

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x00007f7644411bf0} 'workload1_vector' '([I[II)I' in 'bytereverse'
 ;; N690: #	out( B1 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x00007f76b4cd2160:   callq  0x00007f76c19e1cd0           ;   {runtime_call os::breakpoint()}
  0x00007f76b4cd2165:   nop
  0x00007f76b4cd2166:   nop
  0x00007f76b4cd2167:   nop
  0x00007f76b4cd2168:   nop
  0x00007f76b4cd2169:   nop
  0x00007f76b4cd216a:   nop
  0x00007f76b4cd216b:   nop
  0x00007f76b4cd216c:   nop
  0x00007f76b4cd216d:   nop
  0x00007f76b4cd216e:   nop
  0x00007f76b4cd216f:   nop
 ;; B1: #	out( B48 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x00007f76b4cd2170:   mov    %eax,-0x16000(%rsp)
  0x00007f76b4cd2177:   push   %rbp
  0x00007f76b4cd2178:   sub    $0x70,%rsp
  0x00007f76b4cd217c:   mov    0x30(%rsi),%rbp
  0x00007f76b4cd2180:   mov    0x28(%rsi),%r13
  0x00007f76b4cd2184:   mov    0x18(%rsi),%ebx              ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - bytereverse::workload1_vector@5 (line 38)
  0x00007f76b4cd2187:   mov    %rsi,%rdi
  0x00007f76b4cd218a:   vzeroupper 
  0x00007f76b4cd218d:   movabs $0x7f76c1b69150,%r10
  0x00007f76b4cd2197:   callq  *%r10
  0x00007f76b4cd219a:   nop
  0x00007f76b4cd219b:   nop
  0x00007f76b4cd219c:   nop
  0x00007f76b4cd219d:   nop
  0x00007f76b4cd219e:   nop
  0x00007f76b4cd219f:   nop
  0x00007f76b4cd21a0:   test   %rbp,%rbp
  0x00007f76b4cd21a3:   je     0x00007f76b4cd25b4
 ;; B2: #	out( B60 B3 ) <- in( B1 )  Freq: 0.999
  0x00007f76b4cd21a9:   mov    0x8(%rbp),%r10d
  0x00007f76b4cd21ad:   cmp    $0x40ba0,%r10d               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload1_vector@57 (line 43)
                                                            ;   {metadata({type array int})}
  0x00007f76b4cd21b4:   jne    0x00007f76b4cd2704
 ;; B3: #	out( B4 ) <- in( B2 )  Freq: 0.998999
  0x00007f76b4cd21ba:   mov    %rbp,%r11                    ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - bytereverse::workload1_vector@5 (line 38)
 ;; B4: #	out( B49 B5 ) <- in( B3 B48 )  Freq: 0.999999
  0x00007f76b4cd21bd:   nop
  0x00007f76b4cd21be:   nop
  0x00007f76b4cd21bf:   nop
  0x00007f76b4cd21c0:   test   %r13,%r13
  0x00007f76b4cd21c3:   je     0x00007f76b4cd25bc
 ;; B5: #	out( B60 B6 ) <- in( B4 )  Freq: 0.998999
  0x00007f76b4cd21c9:   mov    0x8(%r13),%r8d
  0x00007f76b4cd21cd:   cmp    $0x40ba0,%r8d                ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload1_vector@57 (line 43)
                                                            ;   {metadata({type array int})}
  0x00007f76b4cd21d4:   jne    0x00007f76b4cd2704           ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - bytereverse::workload1_vector@5 (line 38)
 ;; B6: #	out( B7 ) <- in( B5 )  Freq: 0.998998
 ;; B7: #	out( B59 B8 ) <- in( B6 B49 )  Freq: 0.999998
  0x00007f76b4cd21da:   nop
  0x00007f76b4cd21db:   nop
  0x00007f76b4cd21dc:   nop
  0x00007f76b4cd21dd:   nop
  0x00007f76b4cd21de:   nop
  0x00007f76b4cd21df:   nop
  0x00007f76b4cd21e0:   mov    0xc(%r11),%ecx               ; implicit exception: dispatches to 0x00007f76b4cd26d8
 ;; B8: #	out( B59 B9 ) <- in( B7 )  Freq: 0.999997
  0x00007f76b4cd21e4:   add    $0xfffffff9,%ecx
  0x00007f76b4cd21e7:   test   %ecx,%ecx
  0x00007f76b4cd21e9:   jl     0x00007f76b4cd26d8
 ;; B9: #	out( B59 B10 ) <- in( B8 )  Freq: 0.999996
  0x00007f76b4cd21ef:   movabs $0x11903ba00,%r10            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload1_vector@57 (line 43)
                                                            ;   {oop(a 'java/lang/Class'{0x000000011903ba00} = 'bytereverse')}
  0x00007f76b4cd21f9:   mov    0x74(%r10),%esi              ;*invokeinterface length {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::fromArray@2 (line 2894)
                                                            ; - bytereverse::workload1_vector@25 (line 39)
  0x00007f76b4cd21fd:   nop
  0x00007f76b4cd21fe:   nop
  0x00007f76b4cd21ff:   nop
  0x00007f76b4cd2200:   mov    0xc(%r12,%rsi,8),%r9d        ; implicit exception: dispatches to 0x00007f76b4cd26d8
 ;; B10: #	out( B59 B11 ) <- in( B9 )  Freq: 0.999995
  0x00007f76b4cd2205:   test   %r9d,%r9d
  0x00007f76b4cd2208:   jbe    0x00007f76b4cd26d8
 ;; B11: #	out( B59 B12 ) <- in( B10 )  Freq: 0.999994
  0x00007f76b4cd220e:   cmp    $0x1f,%r9d
  0x00007f76b4cd2212:   jbe    0x00007f76b4cd26d8
 ;; B12: #	out( B59 B13 ) <- in( B11 )  Freq: 0.999993
  0x00007f76b4cd2218:   nop
  0x00007f76b4cd2219:   nop
  0x00007f76b4cd221a:   nop
  0x00007f76b4cd221b:   nop
  0x00007f76b4cd221c:   nop
  0x00007f76b4cd221d:   nop
  0x00007f76b4cd221e:   nop
  0x00007f76b4cd221f:   nop
  0x00007f76b4cd2220:   mov    0xc(%r13),%r8d               ; implicit exception: dispatches to 0x00007f76b4cd26d8
 ;; B13: #	out( B59 B14 ) <- in( B12 )  Freq: 0.999992
  0x00007f76b4cd2224:   add    $0xfffffff9,%r8d
  0x00007f76b4cd2228:   test   %r8d,%r8d
  0x00007f76b4cd222b:   jl     0x00007f76b4cd26d8           ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload1_vector@57 (line 43)
 ;; B14: #	out( B31 ) <- in( B13 )  Freq: 0.999991
  0x00007f76b4cd2231:   mov    0x78(%r10),%edx              ;*invokestatic roundDown {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.AbstractSpecies::loopBound@5 (line 203)
                                                            ; - bytereverse::workload1_vector@12 (line 38)
  0x00007f76b4cd2235:   lea    (%r12,%rsi,8),%rbp
  0x00007f76b4cd2239:   mov    %edx,%edi
  0x00007f76b4cd223b:   and    $0xfffffff8,%edi
  0x00007f76b4cd223e:   mov    $0xffffffff,%r10d
  0x00007f76b4cd2244:   kmovd  %r10d,%k7
  0x00007f76b4cd2249:   jmpq   0x00007f76b4cd23e6
  0x00007f76b4cd224e:   nop
  0x00007f76b4cd224f:   nop
 ;; B15: #	out( B16 ) <- in( B20 ) top-of-loop Freq: 31131.6
  0x00007f76b4cd2250:   mov    %r10d,%r9d                   ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.AbstractVector::asByteVectorRawTemplate@7 (line 179)
                                                            ; - jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 177)
                                                            ; - jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 41)
                                                            ; - jdk.incubator.vector.IntVector::reinterpretAsBytes@24 (line 3744)
                                                            ; - bytereverse::workload1_vector@32 (line 40)
 ;; B16: #	out( B46 B17 ) <- in( B38 B15 ) Loop( B16-B15 inner main of N153) Freq: 32104.5
  0x00007f76b4cd2253:   movslq %r9d,%rcx                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload1_vector@57 (line 43)
  0x00007f76b4cd2256:   mov    0x10(%rbp,%rcx,4),%r11d      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.AbstractVector::convert0@192 (line 689)
                                                            ; - jdk.incubator.vector.AbstractVector::asVectorRawTemplate@11 (line 173)
                                                            ; - jdk.incubator.vector.AbstractVector::asByteVectorRawTemplate@4 (line 179)
                                                            ; - jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 177)
                                                            ; - jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 41)
                                                            ; - jdk.incubator.vector.IntVector::reinterpretAsBytes@24 (line 3744)
                                                            ; - bytereverse::workload1_vector@32 (line 40)
  0x00007f76b4cd225b:   mov    %r11d,%r10d
  0x00007f76b4cd225e:   and    $0x1f,%r10d
  0x00007f76b4cd2262:   cmp    %r11d,%r10d
  0x00007f76b4cd2265:   jne    0x00007f76b4cd2566           ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload1_vector@57 (line 43)
 ;; B17: #	out( B43 B18 ) <- in( B16 )  Freq: 32104.5
  0x00007f76b4cd226b:   mov    %r10b,0x10(%rax,%rcx,1)
  0x00007f76b4cd2270:   mov    0x14(%rbp,%rcx,4),%r11d      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.AbstractVector::convert0@192 (line 689)
                                                            ; - jdk.incubator.vector.AbstractVector::asVectorRawTemplate@11 (line 173)
                                                            ; - jdk.incubator.vector.AbstractVector::asByteVectorRawTemplate@4 (line 179)
                                                            ; - jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 177)
                                                            ; - jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 41)
                                                            ; - jdk.incubator.vector.IntVector::reinterpretAsBytes@24 (line 3744)
                                                            ; - bytereverse::workload1_vector@32 (line 40)
  0x00007f76b4cd2275:   mov    %r11d,%r10d
  0x00007f76b4cd2278:   and    $0x1f,%r10d
  0x00007f76b4cd227c:   nop
  0x00007f76b4cd227d:   nop
  0x00007f76b4cd227e:   nop
  0x00007f76b4cd227f:   nop
  0x00007f76b4cd2280:   cmp    %r11d,%r10d
  0x00007f76b4cd2283:   jne    0x00007f76b4cd2557           ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload1_vector@57 (line 43)
 ;; B18: #	out( B44 B19 ) <- in( B17 )  Freq: 32104.5
  0x00007f76b4cd2289:   mov    %r10b,0x11(%rax,%rcx,1)      ;*invokevirtual convert0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.AbstractVector::asVectorRawTemplate@11 (line 173)
                                                            ; - jdk.incubator.vector.AbstractVector::asByteVectorRawTemplate@4 (line 179)
                                                            ; - jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 177)
                                                            ; - jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 41)
                                                            ; - jdk.incubator.vector.IntVector::reinterpretAsBytes@24 (line 3744)
                                                            ; - bytereverse::workload1_vector@32 (line 40)
  0x00007f76b4cd228e:   mov    0x18(%rbp,%rcx,4),%r11d      ;*invokespecial dummyVector {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector$ByteSpecies::dummyVector@1 (line 4222)
                                                            ; - jdk.incubator.vector.ByteVector$ByteSpecies::dummyVector@1 (line 4108)
                                                            ; - jdk.incubator.vector.AbstractVector::convert0@159 (line 688)
                                                            ; - jdk.incubator.vector.AbstractVector::asVectorRawTemplate@11 (line 173)
                                                            ; - jdk.incubator.vector.AbstractVector::asByteVectorRawTemplate@4 (line 179)
                                                            ; - jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 177)
                                                            ; - jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 41)
                                                            ; - jdk.incubator.vector.IntVector::reinterpretAsBytes@24 (line 3744)
                                                            ; - bytereverse::workload1_vector@32 (line 40)
  0x00007f76b4cd2293:   mov    %r11d,%r10d
  0x00007f76b4cd2296:   and    $0x1f,%r10d
  0x00007f76b4cd229a:   nop
  0x00007f76b4cd229b:   nop
  0x00007f76b4cd229c:   nop
  0x00007f76b4cd229d:   nop
  0x00007f76b4cd229e:   nop
  0x00007f76b4cd229f:   nop
  0x00007f76b4cd22a0:   cmp    %r11d,%r10d
  0x00007f76b4cd22a3:   jne    0x00007f76b4cd255c           ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload1_vector@57 (line 43)
 ;; B19: #	out( B45 B20 ) <- in( B18 )  Freq: 32104.5
  0x00007f76b4cd22a9:   mov    %r10b,0x12(%rax,%rcx,1)      ;*invokespecial dummyVector {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector$ByteSpecies::dummyVector@1 (line 4222)
                                                            ; - jdk.incubator.vector.ByteVector$ByteSpecies::dummyVector@1 (line 4108)
                                                            ; - jdk.incubator.vector.AbstractVector::convert0@159 (line 688)
                                                            ; - jdk.incubator.vector.AbstractVector::asVectorRawTemplate@11 (line 173)
                                                            ; - jdk.incubator.vector.AbstractVector::asByteVectorRawTemplate@4 (line 179)
                                                            ; - jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 177)
                                                            ; - jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 41)
                                                            ; - jdk.incubator.vector.IntVector::reinterpretAsBytes@24 (line 3744)
                                                            ; - bytereverse::workload1_vector@32 (line 40)
  0x00007f76b4cd22ae:   mov    0x1c(%rbp,%rcx,4),%r11d      ;*invokestatic roundDown {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.AbstractSpecies::loopBound@5 (line 203)
                                                            ; - bytereverse::workload1_vector@12 (line 38)
  0x00007f76b4cd22b3:   mov    %r11d,%r10d
  0x00007f76b4cd22b6:   and    $0x1f,%r10d
  0x00007f76b4cd22ba:   nop
  0x00007f76b4cd22bb:   nop
  0x00007f76b4cd22bc:   nop
  0x00007f76b4cd22bd:   nop
  0x00007f76b4cd22be:   nop
  0x00007f76b4cd22bf:   nop
  0x00007f76b4cd22c0:   cmp    %r11d,%r10d
  0x00007f76b4cd22c3:   jne    0x00007f76b4cd2562           ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload1_vector@57 (line 43)
 ;; B20: #	out( B15 B21 ) <- in( B19 )  Freq: 32104.5
  0x00007f76b4cd22c9:   mov    %r10b,0x13(%rax,%rcx,1)      ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - bytereverse::workload1_vector@5 (line 38)
  0x00007f76b4cd22ce:   mov    %r9d,%r10d                   ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload1_vector@57 (line 43)
  0x00007f76b4cd22d1:   add    $0x4,%r10d
  0x00007f76b4cd22d5:   cmp    $0x1d,%r10d
  0x00007f76b4cd22d9:   jl     0x00007f76b4cd2250
 ;; B21: #	out( B27 B22 ) <- in( B20 )  Freq: 972.862
  0x00007f76b4cd22df:   nop
  0x00007f76b4cd22e0:   cmp    $0x20,%r10d
  0x00007f76b4cd22e4:   jge    0x00007f76b4cd2343
 ;; B22: #	out( B54 B23 ) <- in( B21 )  Freq: 486.431
  0x00007f76b4cd22ea:   add    $0x4,%r9d
  0x00007f76b4cd22ee:   cmp    %r8d,%r9d
  0x00007f76b4cd22f1:   jae    0x00007f76b4cd2658
 ;; B23: #	out( B55 B24 ) <- in( B22 )  Freq: 486.43
  0x00007f76b4cd22f7:   cmp    $0x20,%r9d
  0x00007f76b4cd22fb:   nop
  0x00007f76b4cd22fc:   nop
  0x00007f76b4cd22fd:   nop
  0x00007f76b4cd22fe:   nop
  0x00007f76b4cd22ff:   nop
  0x00007f76b4cd2300:   jae    0x00007f76b4cd266c
 ;; B24: #	out( B57 B25 ) <- in( B23 B25 ) Loop( B24-B25 inner post of N483) Freq: 972.859
  0x00007f76b4cd2306:   movslq %r9d,%rcx
  0x00007f76b4cd2309:   mov    0x10(%rbp,%rcx,4),%r11d      ;*invokevirtual vspecies {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.AbstractVector::asVectorRawTemplate@4 (line 173)
                                                            ; - jdk.incubator.vector.AbstractVector::asByteVectorRawTemplate@4 (line 179)
                                                            ; - jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 177)
                                                            ; - jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 41)
                                                            ; - jdk.incubator.vector.IntVector::reinterpretAsBytes@24 (line 3744)
                                                            ; - bytereverse::workload1_vector@32 (line 40)
  0x00007f76b4cd230e:   mov    %r11d,%r10d
  0x00007f76b4cd2311:   and    $0x1f,%r10d
  0x00007f76b4cd2315:   cmp    %r11d,%r10d
  0x00007f76b4cd2318:   jne    0x00007f76b4cd2688           ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload1_vector@57 (line 43)
 ;; B25: #	out( B24 B26 ) <- in( B24 )  Freq: 972.859
  0x00007f76b4cd231e:   mov    %r10b,0x10(%rax,%rcx,1)      ;*invokevirtual vspecies {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.AbstractVector::asVectorRawTemplate@4 (line 173)
                                                            ; - jdk.incubator.vector.AbstractVector::asByteVectorRawTemplate@4 (line 179)
                                                            ; - jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 177)
                                                            ; - jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 41)
                                                            ; - jdk.incubator.vector.IntVector::reinterpretAsBytes@24 (line 3744)
                                                            ; - bytereverse::workload1_vector@32 (line 40)
  0x00007f76b4cd2323:   inc    %r9d
  0x00007f76b4cd2326:   cmp    $0x20,%r9d
  0x00007f76b4cd232a:   jl     0x00007f76b4cd2306           ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload1_vector@57 (line 43)
 ;; B26: #	out( B28 ) <- in( B25 )  Freq: 486.429
  0x00007f76b4cd232c:   vmovdqu 0x10(%rax),%ymm0            ;*invokevirtual asVectorRawTemplate {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.AbstractVector::asByteVectorRawTemplate@4 (line 179)
                                                            ; - jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 177)
                                                            ; - jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 41)
                                                            ; - jdk.incubator.vector.IntVector::reinterpretAsBytes@24 (line 3744)
                                                            ; - bytereverse::workload1_vector@32 (line 40)
  0x00007f76b4cd2331:   movabs $0x119017f20,%r10            ;   {oop([B{0x0000000119017f20})}
  0x00007f76b4cd233b:   vmovdqu 0x10(%r10),%ymm1            ;*invokevirtual dummyVector {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::fromArray@19 (line 2896)
                                                            ; - bytereverse::workload1_vector@25 (line 39)
  0x00007f76b4cd2341:   jmp    0x00007f76b4cd2358           ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload1_vector@57 (line 43)
 ;; B27: #	out( B28 ) <- in( B21 )  Freq: 486.431
  0x00007f76b4cd2343:   movabs $0x119017f20,%r10            ;   {oop([B{0x0000000119017f20})}
  0x00007f76b4cd234d:   vmovdqu 0x10(%r10),%ymm1
  0x00007f76b4cd2353:   vmovdqu 0x10(%rax),%ymm0            ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 52)
                                                            ; - jdk.incubator.vector.IntVector::fromArray@9 (line 2894)
                                                            ; - bytereverse::workload1_vector@25 (line 39)
 ;; B28: #	out( B58 B29 ) <- in( B26 B27 )  Freq: 972.86
  0x00007f76b4cd2358:   vpcmpb $0x1,%ymm1,%ymm0,%k7         ;*invokestatic checkFromIndexSize {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::fromArray@9 (line 2894)
                                                            ; - bytereverse::workload1_vector@25 (line 39)
  0x00007f76b4cd235f:   kmovq  0x28(%rsp),%k6
  0x00007f76b4cd2366:   ktestd %k6,%k7
  0x00007f76b4cd236b:   setne  %r11b
  0x00007f76b4cd236f:   movzbl %r11b,%r11d
  0x00007f76b4cd2373:   test   %r11d,%r11d                  ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload1_vector@57 (line 43)
  0x00007f76b4cd2376:   jne    0x00007f76b4cd2691
 ;; B29: #	out( B51 B30 ) <- in( B28 )  Freq: 972.86
  0x00007f76b4cd237c:   vperm2i128 $0x1,%ymm3,%ymm3,%ymm1
  0x00007f76b4cd2382:   vpshufb %ymm0,%ymm1,%ymm1
  0x00007f76b4cd2387:   vpshufb %ymm0,%ymm3,%ymm4
  0x00007f76b4cd238c:   vpaddb -0x7c25334(%rip),%ymm0,%ymm2        # Stub::vector_byte_shuffle_mask
                                                            ;   {external_word}
  0x00007f76b4cd2394:   vpblendvb %ymm2,%ymm1,%ymm4,%ymm4   ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.VectorIntrinsics::roundDown@3 (line 84)
                                                            ; - jdk.incubator.vector.AbstractSpecies::loopBound@5 (line 203)
                                                            ; - bytereverse::workload1_vector@12 (line 38)
  0x00007f76b4cd239a:   mov    0x8(%rsp),%ebx
  0x00007f76b4cd239e:   nop
  0x00007f76b4cd239f:   nop
  0x00007f76b4cd23a0:   cmp    0x20(%rsp),%ebx
  0x00007f76b4cd23a4:   jae    0x00007f76b4cd25f8
 ;; B30: #	out( B31 ) <- in( B29 )  Freq: 972.859
  0x00007f76b4cd23aa:   mov    (%rsp),%r13                  ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload1_vector@57 (line 43)
  0x00007f76b4cd23ae:   vmovdqu %ymm4,0x10(%r13,%rbx,4)     ;*invokeinterface length {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::fromArray@2 (line 2894)
                                                            ; - bytereverse::workload1_vector@25 (line 39)
  0x00007f76b4cd23b5:   mov    0x390(%r15),%r10             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload1_vector@57 (line 43)
  0x00007f76b4cd23bc:   add    $0x8,%ebx                    ; ImmutableOopMap {rbp=Oop r13=Oop [0]=Oop [16]=Oop [24]=NarrowOop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) bytereverse::workload1_vector@71 (line 38)
  0x00007f76b4cd23bf:   test   %eax,(%r10)                  ;   {poll}
  0x00007f76b4cd23c2:   mov    0x10(%rsp),%r11
  0x00007f76b4cd23c7:   mov    0xc(%rsp),%ecx
  0x00007f76b4cd23cb:   mov    0x18(%rsp),%esi
  0x00007f76b4cd23cf:   mov    %r8d,%r9d
  0x00007f76b4cd23d2:   mov    0x20(%rsp),%r8d
  0x00007f76b4cd23d7:   kmovq  0x28(%rsp),%k7
  0x00007f76b4cd23de:   mov    0x24(%rsp),%edx
  0x00007f76b4cd23e2:   mov    0x30(%rsp),%edi
 ;; B31: #	out( B39 B32 ) <- in( B14 B30 ) Loop( B31-B30 ) Freq: 973.859
  0x00007f76b4cd23e6:   cmp    %edi,%ebx                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload1_vector@57 (line 43)
  0x00007f76b4cd23e8:   jge    0x00007f76b4cd24e8
 ;; B32: #	out( B50 B33 ) <- in( B31 )  Freq: 972.93
  0x00007f76b4cd23ee:   cmp    %ecx,%ebx
  0x00007f76b4cd23f0:   jae    0x00007f76b4cd25c5
 ;; B33: #	out( B41 B34 ) <- in( B32 )  Freq: 972.929
  0x00007f76b4cd23f6:   mov    %edi,0x30(%rsp)
  0x00007f76b4cd23fa:   mov    %edx,0x24(%rsp)              ;*invokeinterface length {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::fromArray@2 (line 2894)
                                                            ; - bytereverse::workload1_vector@25 (line 39)
  0x00007f76b4cd23fe:   mov    0x108(%r15),%rax
  0x00007f76b4cd2405:   mov    %rax,%r10
  0x00007f76b4cd2408:   add    $0x30,%r10                   ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - bytereverse::workload1_vector@5 (line 38)
  0x00007f76b4cd240c:   vmovdqu 0x10(%r11,%rbx,4),%ymm3     ;*invokeinterface length {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::fromArray@2 (line 2894)
                                                            ; - bytereverse::workload1_vector@25 (line 39)
  0x00007f76b4cd2413:   nop
  0x00007f76b4cd2414:   nop
  0x00007f76b4cd2415:   nop
  0x00007f76b4cd2416:   nop
  0x00007f76b4cd2417:   nop
  0x00007f76b4cd2418:   nop
  0x00007f76b4cd2419:   nop
  0x00007f76b4cd241a:   nop
  0x00007f76b4cd241b:   nop
  0x00007f76b4cd241c:   nop
  0x00007f76b4cd241d:   nop
  0x00007f76b4cd241e:   nop
  0x00007f76b4cd241f:   nop
  0x00007f76b4cd2420:   cmp    0x118(%r15),%r10             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload1_vector@57 (line 43)
  0x00007f76b4cd2427:   jae    0x00007f76b4cd2508
 ;; B34: #	out( B35 ) <- in( B33 )  Freq: 972.831
  0x00007f76b4cd242d:   kmovq  %k7,0x28(%rsp)
  0x00007f76b4cd2434:   mov    %r8d,0x20(%rsp)
  0x00007f76b4cd2439:   mov    %r9d,0x1c(%rsp)
  0x00007f76b4cd243e:   mov    %esi,0x18(%rsp)
  0x00007f76b4cd2442:   mov    %ecx,0xc(%rsp)
  0x00007f76b4cd2446:   mov    %r11,0x10(%rsp)
  0x00007f76b4cd244b:   mov    %ebx,0x8(%rsp)
  0x00007f76b4cd244f:   mov    %r13,(%rsp)                  ;*invokeinterface length {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::fromArray@2 (line 2894)
                                                            ; - bytereverse::workload1_vector@25 (line 39)
  0x00007f76b4cd2453:   mov    %r10,0x108(%r15)
  0x00007f76b4cd245a:   prefetchw 0xc0(%r10)
  0x00007f76b4cd2462:   movq   $0x1,(%rax)
  0x00007f76b4cd2469:   prefetchw 0x100(%r10)
  0x00007f76b4cd2471:   movl   $0x407c0,0x8(%rax)           ;   {metadata({type array byte})}
  0x00007f76b4cd2478:   prefetchw 0x140(%r10)
  0x00007f76b4cd2480:   movl   $0x20,0xc(%rax)
  0x00007f76b4cd2487:   prefetchw 0x180(%r10)
  0x00007f76b4cd248f:   mov    %rax,%r10
  0x00007f76b4cd2492:   add    $0x10,%r10
  0x00007f76b4cd2496:   vpxor  %ymm0,%ymm0,%ymm0
  0x00007f76b4cd249a:   vmovdqu64 %ymm0,(%r10)              ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - bytereverse::workload1_vector@5 (line 38)
 ;; B35: #	out( B56 B36 ) <- in( B42 B34 )  Freq: 972.929
  0x00007f76b4cd24a0:   mov    0x18(%rsp),%r11d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload1_vector@57 (line 43)
  0x00007f76b4cd24a5:   mov    0x10(%r12,%r11,8),%r11d      ;*invokevirtual withLanes {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.AbstractVector::asVectorRawTemplate@8 (line 173)
                                                            ; - jdk.incubator.vector.AbstractVector::asByteVectorRawTemplate@4 (line 179)
                                                            ; - jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 177)
                                                            ; - jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 41)
                                                            ; - jdk.incubator.vector.IntVector::reinterpretAsBytes@24 (line 3744)
                                                            ; - bytereverse::workload1_vector@32 (line 40)
  0x00007f76b4cd24aa:   mov    %r11d,%r10d
  0x00007f76b4cd24ad:   and    $0x1f,%r10d
  0x00007f76b4cd24b1:   cmp    %r11d,%r10d
  0x00007f76b4cd24b4:   jne    0x00007f76b4cd2680
 ;; B36: #	out( B52 B37 ) <- in( B35 )  Freq: 972.928
  0x00007f76b4cd24ba:   mov    0x1c(%rsp),%r11d
  0x00007f76b4cd24bf:   nop
  0x00007f76b4cd24c0:   cmp    $0x1,%r11d
  0x00007f76b4cd24c4:   jbe    0x00007f76b4cd2630
 ;; B37: #	out( B53 B38 ) <- in( B36 )  Freq: 972.927
  0x00007f76b4cd24ca:   cmp    $0x4,%r11d
  0x00007f76b4cd24ce:   jbe    0x00007f76b4cd2644           ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload1_vector@57 (line 43)
 ;; B38: #	out( B16 ) <- in( B37 )  Freq: 972.926
  0x00007f76b4cd24d4:   mov    %r10b,0x10(%rax)             ;*invokevirtual withLanes {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.AbstractVector::asVectorRawTemplate@8 (line 173)
                                                            ; - jdk.incubator.vector.AbstractVector::asByteVectorRawTemplate@4 (line 179)
                                                            ; - jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 177)
                                                            ; - jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 41)
                                                            ; - jdk.incubator.vector.IntVector::reinterpretAsBytes@24 (line 3744)
                                                            ; - bytereverse::workload1_vector@32 (line 40)
  0x00007f76b4cd24d8:   mov    $0x1,%r9d
  0x00007f76b4cd24de:   mov    0x1c(%rsp),%r8d
  0x00007f76b4cd24e3:   jmpq   0x00007f76b4cd2253
 ;; B39: #	out( B61 B40 ) <- in( B31 )  Freq: 0.929441
  0x00007f76b4cd24e8:   cmp    %edx,%ebx                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload1_vector@57 (line 43)
  0x00007f76b4cd24ea:   jl     0x00007f76b4cd2730           ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - bytereverse::workload1_vector@5 (line 38)
 ;; B40: #	out( N690 ) <- in( B39 )  Freq: 0.92944
  0x00007f76b4cd24f0:   mov    %ebx,%eax
  0x00007f76b4cd24f2:   vzeroupper 
  0x00007f76b4cd24f5:   add    $0x70,%rsp
  0x00007f76b4cd24f9:   pop    %rbp
  0x00007f76b4cd24fa:   cmp    0x388(%r15),%rsp             ;   {poll_return}
  0x00007f76b4cd2501:   ja     0x00007f76b4cd2770
  0x00007f76b4cd2507:   retq   
 ;; B41: #	out( B62 B42 ) <- in( B33 )  Freq: 0.097309
  0x00007f76b4cd2508:   vmovdqu %ymm3,0x40(%rsp)
  0x00007f76b4cd250e:   kmovq  %k7,0x28(%rsp)
  0x00007f76b4cd2515:   mov    %r8d,0x20(%rsp)
  0x00007f76b4cd251a:   mov    %r9d,0x1c(%rsp)
  0x00007f76b4cd251f:   mov    %esi,0x18(%rsp)
  0x00007f76b4cd2523:   mov    %ecx,0xc(%rsp)
  0x00007f76b4cd2527:   mov    %r11,0x10(%rsp)
  0x00007f76b4cd252c:   mov    %ebx,0x8(%rsp)
  0x00007f76b4cd2530:   mov    %r13,(%rsp)
  0x00007f76b4cd2534:   movabs $0x8000407c0,%rsi            ;*invokevirtual shuffleFromArray {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.Byte256Vector::shuffleFromArray@3 (line 41)
                                                            ; - jdk.incubator.vector.AbstractSpecies::shuffleFromArray@6 (line 322)
                                                            ; - jdk.incubator.vector.VectorShuffle::fromArray@8 (line 314)
                                                            ; - bytereverse::workload1_vector@42 (line 41)
                                                            ;   {metadata({type array byte})}
  0x00007f76b4cd253e:   mov    $0x20,%edx                   ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - bytereverse::workload1_vector@5 (line 38)
  0x00007f76b4cd2543:   nop
  0x00007f76b4cd2544:   vzeroupper 
  0x00007f76b4cd2547:   callq  0x00007f76ad074720           ; ImmutableOopMap {rbp=Oop [0]=Oop [16]=Oop [24]=NarrowOop }
                                                            ;*newarray {reexecute=0 rethrow=0 return_oop=1}
                                                            ; - jdk.incubator.vector.AbstractShuffle::prepare@1 (line 55)
                                                            ; - jdk.incubator.vector.AbstractShuffle::<init>@4 (line 47)
                                                            ; - jdk.incubator.vector.Byte256Vector$Byte256Shuffle::<init>@6 (line 816)
                                                            ; - jdk.incubator.vector.Byte256Vector::shuffleFromArray@6 (line 161)
                                                            ; - jdk.incubator.vector.Byte256Vector::shuffleFromArray@3 (line 41)
                                                            ; - jdk.incubator.vector.AbstractSpecies::shuffleFromArray@6 (line 322)
                                                            ; - jdk.incubator.vector.VectorShuffle::fromArray@8 (line 314)
                                                            ; - bytereverse::workload1_vector@42 (line 41)
                                                            ;   {runtime_call _new_array_Java}
 ;; B42: #	out( B35 ) <- in( B41 )  Freq: 0.097307
  0x00007f76b4cd254c:   vmovdqu 0x40(%rsp),%ymm3
  0x00007f76b4cd2552:   jmpq   0x00007f76b4cd24a0
 ;; B43: #	out( B46 ) <- in( B17 )  Freq: 0.0160523
  0x00007f76b4cd2557:   inc    %r9d
  0x00007f76b4cd255a:   jmp    0x00007f76b4cd2566
 ;; B44: #	out( B46 ) <- in( B18 )  Freq: 0.0160523
  0x00007f76b4cd255c:   add    $0x2,%r9d
  0x00007f76b4cd2560:   jmp    0x00007f76b4cd2566
 ;; B45: #	out( B46 ) <- in( B19 )  Freq: 0.0160522
  0x00007f76b4cd2562:   add    $0x3,%r9d
 ;; B46: #	out( B47 ) <- in( B56 B16 B44 B43 B45 )  Freq: 0.0646955
  0x00007f76b4cd2566:   vmovdqu %ymm3,%ymm0                 ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload1_vector@57 (line 43)
 ;; B47: #	out( N690 ) <- in( B57 B46 )  Freq: 0.0651819
  0x00007f76b4cd256a:   mov    $0xffffff45,%esi             ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.Byte256Vector::shuffleFromArray@0 (line 161)
                                                            ; - jdk.incubator.vector.Byte256Vector::shuffleFromArray@3 (line 41)
                                                            ; - jdk.incubator.vector.AbstractSpecies::shuffleFromArray@6 (line 322)
                                                            ; - jdk.incubator.vector.VectorShuffle::fromArray@8 (line 314)
                                                            ; - bytereverse::workload1_vector@42 (line 41)
  0x00007f76b4cd256f:   mov    0x10(%rsp),%rbp
  0x00007f76b4cd2574:   mov    0x18(%rsp),%r8d
  0x00007f76b4cd2579:   mov    %r8d,0xc(%rsp)
  0x00007f76b4cd257e:   mov    %rax,0x10(%rsp)
  0x00007f76b4cd2583:   mov    %r9d,0x18(%rsp)
  0x00007f76b4cd2588:   mov    %r10d,0x24(%rsp)
  0x00007f76b4cd258d:   mov    %r11d,0x28(%rsp)
  0x00007f76b4cd2592:   vmovdqu %ymm0,0x40(%rsp)
  0x00007f76b4cd2598:   vzeroupper 
  0x00007f76b4cd259b:   callq  0x00007f76ad11e920           ; ImmutableOopMap {rbp=Oop [0]=Oop [12]=NarrowOop [16]=Oop }
                                                            ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) jdk.incubator.vector.AbstractShuffle::checkIndex0@12 (line 209)
                                                            ; - jdk.incubator.vector.AbstractShuffle::partiallyWrapIndex@3 (line 202)
                                                            ; - jdk.incubator.vector.AbstractShuffle::prepare@24 (line 58)
                                                            ; - jdk.incubator.vector.AbstractShuffle::<init>@4 (line 47)
                                                            ; - jdk.incubator.vector.Byte256Vector$Byte256Shuffle::<init>@6 (line 816)
                                                            ; - jdk.incubator.vector.Byte256Vector::shuffleFromArray@6 (line 161)
                                                            ; - jdk.incubator.vector.Byte256Vector::shuffleFromArray@3 (line 41)
                                                            ; - jdk.incubator.vector.AbstractSpecies::shuffleFromArray@6 (line 322)
                                                            ; - jdk.incubator.vector.VectorShuffle::fromArray@8 (line 314)
                                                            ; - bytereverse::workload1_vector@42 (line 41)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f76b4cd25a0:   movabs $0x7f76c20f0328,%rdi         ;   {external_word}
  0x00007f76b4cd25aa:   and    $0xfffffffffffffff0,%rsp
  0x00007f76b4cd25ae:   callq  0x00007f76c179e4b0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f76b4cd25b3:   hlt    
 ;; B48: #	out( B4 ) <- in( B1 )  Freq: 0.000999987
  0x00007f76b4cd25b4:   xor    %r11d,%r11d
  0x00007f76b4cd25b7:   jmpq   0x00007f76b4cd21bd
 ;; B49: #	out( B7 ) <- in( B4 )  Freq: 0.000999986
  0x00007f76b4cd25bc:   xor    %r13d,%r13d
  0x00007f76b4cd25bf:   nop
  0x00007f76b4cd25c0:   jmpq   0x00007f76b4cd21da           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.AbstractVector::convert0@192 (line 689)
                                                            ; - jdk.incubator.vector.AbstractVector::asVectorRawTemplate@11 (line 173)
                                                            ; - jdk.incubator.vector.AbstractVector::asByteVectorRawTemplate@4 (line 179)
                                                            ; - jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 177)
                                                            ; - jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 41)
                                                            ; - jdk.incubator.vector.IntVector::reinterpretAsBytes@24 (line 3744)
                                                            ; - bytereverse::workload1_vector@32 (line 40)
 ;; B50: #	out( N690 ) <- in( B32 )  Freq: 0.000985849
  0x00007f76b4cd25c5:   mov    $0xffffffe4,%esi             ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.Byte256Vector::shuffleFromArray@0 (line 161)
                                                            ; - jdk.incubator.vector.Byte256Vector::shuffleFromArray@3 (line 41)
                                                            ; - jdk.incubator.vector.AbstractSpecies::shuffleFromArray@6 (line 322)
                                                            ; - jdk.incubator.vector.VectorShuffle::fromArray@8 (line 314)
                                                            ; - bytereverse::workload1_vector@42 (line 41)
  0x00007f76b4cd25ca:   mov    %r13,(%rsp)
  0x00007f76b4cd25ce:   mov    %r11,0x10(%rsp)
  0x00007f76b4cd25d3:   mov    %ebx,0xc(%rsp)
  0x00007f76b4cd25d7:   mov    %ecx,0x18(%rsp)              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload1_vector@57 (line 43)
  0x00007f76b4cd25db:   nop
  0x00007f76b4cd25dc:   vzeroupper 
  0x00007f76b4cd25df:   callq  0x00007f76ad11e920           ; ImmutableOopMap {[0]=Oop [16]=Oop }
                                                            ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::checkIndex@3 (line 359)
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 52)
                                                            ; - jdk.incubator.vector.IntVector::fromArray@9 (line 2894)
                                                            ; - bytereverse::workload1_vector@25 (line 39)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f76b4cd25e4:   movabs $0x7f76c20f0328,%rdi         ;   {external_word}
  0x00007f76b4cd25ee:   and    $0xfffffffffffffff0,%rsp
  0x00007f76b4cd25f2:   callq  0x00007f76c179e4b0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f76b4cd25f7:   hlt                                 ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload1_vector@57 (line 43)
 ;; B51: #	out( N690 ) <- in( B29 )  Freq: 0.000985778
  0x00007f76b4cd25f8:   mov    $0xffffffe4,%esi             ;*invokestatic roundDown {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.AbstractSpecies::loopBound@5 (line 203)
                                                            ; - bytereverse::workload1_vector@12 (line 38)
  0x00007f76b4cd25fd:   mov    0x10(%rsp),%rbp
  0x00007f76b4cd2602:   mov    0x20(%rsp),%r11d
  0x00007f76b4cd2607:   mov    %r11d,0x18(%rsp)
  0x00007f76b4cd260c:   vmovdqu %ymm4,0x20(%rsp)            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload1_vector@57 (line 43)
  0x00007f76b4cd2612:   nop
  0x00007f76b4cd2613:   nop
  0x00007f76b4cd2614:   vzeroupper 
  0x00007f76b4cd2617:   callq  0x00007f76ad11e920           ; ImmutableOopMap {rbp=Oop [0]=Oop }
                                                            ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::checkIndex@3 (line 359)
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 52)
                                                            ; - jdk.incubator.vector.IntVector::intoArray@7 (line 3163)
                                                            ; - bytereverse::workload1_vector@57 (line 43)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f76b4cd261c:   movabs $0x7f76c20f0328,%rdi         ;   {external_word}
  0x00007f76b4cd2626:   and    $0xfffffffffffffff0,%rsp
  0x00007f76b4cd262a:   callq  0x00007f76c179e4b0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f76b4cd262f:   hlt    
 ;; B52: #	out( N690 ) <- in( B36 )  Freq: 0.000972928
  0x00007f76b4cd2630:   movabs $0x7f76c21650b8,%rdi         ;   {external_word}
  0x00007f76b4cd263a:   and    $0xfffffffffffffff0,%rsp
  0x00007f76b4cd263e:   callq  0x00007f76c179e4b0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f76b4cd2643:   hlt    
 ;; B53: #	out( N690 ) <- in( B37 )  Freq: 0.000972927
  0x00007f76b4cd2644:   movabs $0x7f76c21650b8,%rdi         ;   {external_word}
  0x00007f76b4cd264e:   and    $0xfffffffffffffff0,%rsp
  0x00007f76b4cd2652:   callq  0x00007f76c179e4b0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f76b4cd2657:   hlt    
 ;; B54: #	out( N690 ) <- in( B22 )  Freq: 0.00049289
  0x00007f76b4cd2658:   movabs $0x7f76c21650b8,%rdi         ;   {external_word}
  0x00007f76b4cd2662:   and    $0xfffffffffffffff0,%rsp
  0x00007f76b4cd2666:   callq  0x00007f76c179e4b0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f76b4cd266b:   hlt    
 ;; B55: #	out( N690 ) <- in( B23 )  Freq: 0.00049289
  0x00007f76b4cd266c:   movabs $0x7f76c21650b8,%rdi         ;   {external_word}
  0x00007f76b4cd2676:   and    $0xfffffffffffffff0,%rsp
  0x00007f76b4cd267a:   callq  0x00007f76c179e4b0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f76b4cd267f:   hlt    
 ;; B56: #	out( B46 ) <- in( B35 )  Freq: 0.000486464
  0x00007f76b4cd2680:   xor    %r9d,%r9d
  0x00007f76b4cd2683:   jmpq   0x00007f76b4cd2566
 ;; B57: #	out( B47 ) <- in( B24 )  Freq: 0.00048643
  0x00007f76b4cd2688:   vmovdqu %ymm3,%ymm0
  0x00007f76b4cd268c:   jmpq   0x00007f76b4cd256a
 ;; B58: #	out( N690 ) <- in( B28 )  Freq: 0.000463896
  0x00007f76b4cd2691:   mov    $0xffffff45,%esi             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload1_vector@57 (line 43)
  0x00007f76b4cd2696:   vpmovm2b %k7,%ymm0
  0x00007f76b4cd269c:   vpabsb %ymm0,%ymm0                  ;*invokestatic roundDown {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.AbstractSpecies::loopBound@5 (line 203)
                                                            ; - bytereverse::workload1_vector@12 (line 38)
  0x00007f76b4cd26a1:   mov    0x10(%rsp),%rbp
  0x00007f76b4cd26a6:   mov    %r11d,0xc(%rsp)
  0x00007f76b4cd26ab:   vmovdqu %ymm3,0x20(%rsp)
  0x00007f76b4cd26b1:   mov    %rax,0x10(%rsp)
  0x00007f76b4cd26b6:   vmovdqu %ymm0,0x40(%rsp)
  0x00007f76b4cd26bc:   vzeroupper 
  0x00007f76b4cd26bf:   callq  0x00007f76ad11e920           ; ImmutableOopMap {rbp=Oop [0]=Oop [16]=Oop }
                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) jdk.incubator.vector.AbstractShuffle::checkIndexes@32 (line 128)
                                                            ; - jdk.incubator.vector.ByteVector::rearrangeTemplate@1 (line 2259)
                                                            ; - jdk.incubator.vector.Byte256Vector::rearrange@7 (line 446)
                                                            ; - jdk.incubator.vector.Byte256Vector::rearrange@2 (line 41)
                                                            ; - bytereverse::workload1_vector@45 (line 41)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f76b4cd26c4:   movabs $0x7f76c20f0328,%rdi         ;   {external_word}
  0x00007f76b4cd26ce:   and    $0xfffffffffffffff0,%rsp
  0x00007f76b4cd26d2:   callq  0x00007f76c179e4b0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f76b4cd26d7:   hlt    
 ;; B59: #	out( N690 ) <- in( B12 B7 B8 B9 B10 B11 B13 )  Freq: 7.0398e-06
  0x00007f76b4cd26d8:   mov    $0xffffffbe,%esi             ;*getstatic LEN {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - bytereverse::workload1_vector@9 (line 38)
  0x00007f76b4cd26dd:   mov    %r11,%rbp
  0x00007f76b4cd26e0:   mov    %r13,(%rsp)
  0x00007f76b4cd26e4:   mov    %ebx,0x8(%rsp)
  0x00007f76b4cd26e8:   vzeroupper 
  0x00007f76b4cd26eb:   callq  0x00007f76ad11e920           ; ImmutableOopMap {rbp=Oop [0]=Oop }
                                                            ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - bytereverse::workload1_vector@5 (line 38)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f76b4cd26f0:   movabs $0x7f76c20f0328,%rdi         ;   {external_word}
  0x00007f76b4cd26fa:   and    $0xfffffffffffffff0,%rsp
  0x00007f76b4cd26fe:   callq  0x00007f76c179e4b0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f76b4cd2703:   hlt    
 ;; B60: #	out( N690 ) <- in( B2 B5 )  Freq: 1.998e-06
  0x00007f76b4cd2704:   mov    $0xffffff8d,%esi             ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - bytereverse::workload1_vector@5 (line 38)
  0x00007f76b4cd2709:   mov    %r13,(%rsp)
  0x00007f76b4cd270d:   mov    %ebx,0x8(%rsp)               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload1_vector@57 (line 43)
  0x00007f76b4cd2711:   nop
  0x00007f76b4cd2712:   nop
  0x00007f76b4cd2713:   nop
  0x00007f76b4cd2714:   vzeroupper 
  0x00007f76b4cd2717:   callq  0x00007f76ad11e920           ; ImmutableOopMap {rbp=Oop [0]=Oop }
                                                            ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - bytereverse::workload1_vector@5 (line 38)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f76b4cd271c:   movabs $0x7f76c20f0328,%rdi         ;   {external_word}
  0x00007f76b4cd2726:   and    $0xfffffffffffffff0,%rsp
  0x00007f76b4cd272a:   callq  0x00007f76c179e4b0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f76b4cd272f:   hlt                                 ;*invokestatic roundDown {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.AbstractSpecies::loopBound@5 (line 203)
                                                            ; - bytereverse::workload1_vector@12 (line 38)
 ;; B61: #	out( N690 ) <- in( B39 )  Freq: 4.43192e-07
  0x00007f76b4cd2730:   mov    $0xffffff45,%esi             ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.AbstractSpecies::loopBound@0 (line 203)
                                                            ; - bytereverse::workload1_vector@12 (line 38)
  0x00007f76b4cd2735:   mov    %r11,%rbp
  0x00007f76b4cd2738:   mov    %r13,(%rsp)
  0x00007f76b4cd273c:   mov    %ebx,0xc(%rsp)
  0x00007f76b4cd2740:   mov    %edx,0x10(%rsp)
  0x00007f76b4cd2744:   vzeroupper 
  0x00007f76b4cd2747:   callq  0x00007f76ad11e920           ; ImmutableOopMap {rbp=Oop [0]=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) bytereverse::workload1_vector@78 (line 46)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f76b4cd274c:   movabs $0x7f76c20f0328,%rdi         ;   {external_word}
  0x00007f76b4cd2756:   and    $0xfffffffffffffff0,%rsp
  0x00007f76b4cd275a:   callq  0x00007f76c179e4b0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f76b4cd275f:   hlt                                 ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - bytereverse::workload1_vector@5 (line 38)
 ;; B62: #	out( N690 ) <- in( B41 )  Freq: 9.7309e-07
  0x00007f76b4cd2760:   mov    %rax,%rsi
  0x00007f76b4cd2763:   vzeroupper 
  0x00007f76b4cd2766:   add    $0x70,%rsp
  0x00007f76b4cd276a:   pop    %rbp
  0x00007f76b4cd276b:   jmpq   0x00007f76ad071420           ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload1_vector@57 (line 43)
                                                            ;   {runtime_call _rethrow_Java}
  0x00007f76b4cd2770:   movabs $0x7f76b4cd24fa,%r10         ;   {internal_word}
  0x00007f76b4cd277a:   mov    %r10,0x3a0(%r15)
  0x00007f76b4cd2781:   jmpq   0x00007f76ad11d6a0           ;   {runtime_call SafepointBlob}
  0x00007f76b4cd2786:   hlt    
  0x00007f76b4cd2787:   hlt    
  0x00007f76b4cd2788:   hlt    
  0x00007f76b4cd2789:   hlt    
  0x00007f76b4cd278a:   hlt    
  0x00007f76b4cd278b:   hlt    
  0x00007f76b4cd278c:   hlt    
  0x00007f76b4cd278d:   hlt    
  0x00007f76b4cd278e:   hlt    
  0x00007f76b4cd278f:   hlt    
  0x00007f76b4cd2790:   hlt    
  0x00007f76b4cd2791:   hlt    
  0x00007f76b4cd2792:   hlt    
  0x00007f76b4cd2793:   hlt    
  0x00007f76b4cd2794:   hlt    
  0x00007f76b4cd2795:   hlt    
  0x00007f76b4cd2796:   hlt    
  0x00007f76b4cd2797:   hlt    
  0x00007f76b4cd2798:   hlt    
  0x00007f76b4cd2799:   hlt    
  0x00007f76b4cd279a:   hlt    
  0x00007f76b4cd279b:   hlt    
  0x00007f76b4cd279c:   hlt    
  0x00007f76b4cd279d:   hlt    
  0x00007f76b4cd279e:   hlt    
  0x00007f76b4cd279f:   hlt    
[Exception Handler]
  0x00007f76b4cd27a0:   jmpq   0x00007f76ad081a20           ;   {no_reloc}
[Deopt Handler Code]
  0x00007f76b4cd27a5:   callq  0x00007f76b4cd27aa
  0x00007f76b4cd27aa:   subq   $0x5,(%rsp)
  0x00007f76b4cd27af:   jmpq   0x00007f76ad11ec60           ;   {runtime_call DeoptimizationBlob}
  0x00007f76b4cd27b4:   hlt    
  0x00007f76b4cd27b5:   hlt    
  0x00007f76b4cd27b6:   hlt    
  0x00007f76b4cd27b7:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Oops:
  0x00007f76b4cd27b8:   0x0000000119017e40 a 'java/lang/Class'{0x0000000119017e40} = 'jdk/incubator/vector/Byte256Vector'
  0x00007f76b4cd27c0:   0x0000000119047f98 a 'java/lang/Class'{0x0000000119047f98} = 'jdk/incubator/vector/Byte256Vector$Byte256Shuffle'
  0x00007f76b4cd27c8:   0x000000011903baa0 a 'jdk/incubator/vector/IntVector$IntSpecies'{0x000000011903baa0}
  0x00007f76b4cd27d0:   0x0000000119023d68 a 'java/lang/Class'{0x0000000119023d68} = 'jdk/incubator/vector/Int256Vector'
  0x00007f76b4cd27d8:   0x0000000119047e88 a 'java/lang/Class'{0x0000000119047e88} = 'jdk/incubator/vector/Byte256Vector$Byte256Mask'
  0x00007f76b4cd27e0:   0x000000011903b970 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x000000011903b970}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Metadata:
  0x00007f76b4cd27e8:   0x00007f7644411bf0 {method} {0x00007f7644411bf0} 'workload1_vector' '([I[II)I' in 'bytereverse'
  0x00007f76b4cd27f0:   0x00007f764441b780 {method} {0x00007f764441b780} 'intoArray' '([II)V' in 'jdk/incubator/vector/IntVector'
  0x00007f76b4cd27f8:   0x0000000800040ba0 {type array int}
  0x00007f76b4cd2800:   0x00007f764441afd0 {method} {0x00007f764441afd0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[II)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/IntVector'
  0x00007f76b4cd2808:   0x00007f7644618218 {method} {0x00007f7644618218} 'loopBound' '(I)I' in 'jdk/incubator/vector/AbstractSpecies'
  0x00007f76b4cd2810:   0x00007f764441df10 {method} {0x00007f764441df10} 'reinterpretAsBytes' '()Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/IntVector'
  0x00007f76b4cd2818:   0x00007f764464e5e8 {method} {0x00007f764464e5e8} 'asByteVectorRaw' '()Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/Int256Vector'
  0x00007f76b4cd2820:   0x00007f7644648c88 {method} {0x00007f7644648c88} 'asByteVectorRaw' '()Ljdk/incubator/vector/Byte256Vector;' in 'jdk/incubator/vector/Int256Vector'
  0x00007f76b4cd2828:   0x00007f7644603ba8 {method} {0x00007f7644603ba8} 'asByteVectorRawTemplate' '()Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/AbstractVector'
  0x00007f76b4cd2830:   0x00007f7644603ad8 {method} {0x00007f7644603ad8} 'asVectorRawTemplate' '(Ljdk/incubator/vector/LaneType;)Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractVector'
  0x00007f76b4cd2838:   0x00007f7644605e50 {method} {0x00007f7644605e50} 'convert0' '(CLjdk/incubator/vector/AbstractSpecies;)Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractVector'
  0x00007f76b4cd2840:   0x00007f76446d9b08 {method} {0x00007f76446d9b08} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/ByteVector$ByteSpecies'
  0x00007f76b4cd2848:   0x00007f76446d8c38 {method} {0x00007f76446d8c38} 'dummyVector' '()Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector$ByteSpecies'
  0x00007f76b4cd2850:   0x00007f76446b2a80 {method} {0x00007f76446b2a80} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
  0x00007f76b4cd2858:   0x00007f76446b2d70 {method} {0x00007f76446b2d70} 'roundDown' '(II)I' in 'jdk/incubator/vector/VectorIntrinsics'
  0x00007f76b4cd2860:   0x00000008000407c0 {type array byte}
  0x00007f76b4cd2868:   0x00007f76447b4cd8 {method} {0x00007f76447b4cd8} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[II)Ljdk/incubator/vector/VectorShuffle;' in 'jdk/incubator/vector/VectorShuffle'
  0x00007f76b4cd2870:   0x00007f7644618f60 {method} {0x00007f7644618f60} 'shuffleFromArray' '([II)Ljdk/incubator/vector/VectorShuffle;' in 'jdk/incubator/vector/AbstractSpecies'
  0x00007f76b4cd2878:   0x00007f76447826f0 {method} {0x00007f76447826f0} 'shuffleFromArray' '([II)Ljdk/incubator/vector/AbstractShuffle;' in 'jdk/incubator/vector/Byte256Vector'
  0x00007f76b4cd2880:   0x00007f76446fcbf8 {method} {0x00007f76446fcbf8} 'shuffleFromArray' '([II)Ljdk/incubator/vector/Byte256Vector$Byte256Shuffle;' in 'jdk/incubator/vector/Byte256Vector'
  0x00007f76b4cd2888:   0x00007f76447b6b30 {method} {0x00007f76447b6b30} '<init>' '([II)V' in 'jdk/incubator/vector/Byte256Vector$Byte256Shuffle'
  0x00007f76b4cd2890:   0x00007f76447b8280 {method} {0x00007f76447b8280} '<init>' '(I[II)V' in 'jdk/incubator/vector/AbstractShuffle'
  0x00007f76b4cd2898:   0x00007f76447b8470 {method} {0x00007f76447b8470} 'prepare' '(I[II)[B' in 'jdk/incubator/vector/AbstractShuffle'
  0x00007f76b4cd28a0:   0x00007f76447b92d8 {method} {0x00007f76447b92d8} 'partiallyWrapIndex' '(II)I' in 'jdk/incubator/vector/AbstractShuffle'
  0x00007f76b4cd28a8:   0x00007f76447b93e8 {method} {0x00007f76447b93e8} 'checkIndex0' '(IIB)I' in 'jdk/incubator/vector/AbstractShuffle'
  0x00007f76b4cd28b0:   0x00007f76441639c8 {method} {0x00007f76441639c8} 'checkIndex' '(II)I' in 'java/util/Objects'
  0x00007f76b4cd28b8:   0x00007f7644780c78 {method} {0x00007f7644780c78} 'rearrange' '(Ljdk/incubator/vector/VectorShuffle;)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/Byte256Vector'
  0x00007f76b4cd28c0:   0x00007f76446fefe0 {method} {0x00007f76446fefe0} 'rearrange' '(Ljdk/incubator/vector/VectorShuffle;)Ljdk/incubator/vector/Byte256Vector;' in 'jdk/incubator/vector/Byte256Vector'
  0x00007f76b4cd28c8:   0x00007f76446c3230 {method} {0x00007f76446c3230} 'rearrangeTemplate' '(Ljava/lang/Class;Ljdk/incubator/vector/VectorShuffle;)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector'
  0x00007f76b4cd28d0:   0x00007f76447b8be0 {method} {0x00007f76447b8be0} 'checkIndexes' '()Ljdk/incubator/vector/VectorShuffle;' in 'jdk/incubator/vector/AbstractShuffle'
  0x00007f76b4cd28d8:   0x00000008000dd220 'jdk/incubator/vector/VectorShuffle'
  0x00007f76b4cd28e0:   0x00000008000dd710 'jdk/incubator/vector/Byte256Vector$Byte256Shuffle'
  0x00007f76b4cd28e8:   0x00000008000cc920 'jdk/incubator/vector/IntVector$IntSpecies'
  0x00007f76b4cd28f0:   0x00000008000cc158 'jdk/incubator/vector/VectorSpecies'
  0x00007f76b4cd28f8:   0x00007f7644616178 {method} {0x00007f7644616178} 'loopBound' '(I)I' in 'jdk/incubator/vector/VectorSpecies'
  0x00007f76b4cd2900:   0x00007f76446177a8 {method} {0x00007f76446177a8} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
  0x00007f76b4cd2908:   0x00007f7644615fb0 {method} {0x00007f7644615fb0} 'length' '()I' in 'jdk/incubator/vector/VectorSpecies'
  0x00007f76b4cd2910:   0x00000008000d8a78 'jdk/incubator/vector/Byte256Vector'
  0x00007f76b4cd2918:   0x00007f76446c9218 {method} {0x00007f76446c9218} 'reinterpretAsInts' '()Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/ByteVector'
  0x00007f76b4cd2920:   0x00000008000d68a0 'jdk/incubator/vector/ByteVector'
  0x00007f76b4cd2928:   0x00007f76447b49b8 {method} {0x00007f76447b49b8} 'checkIndexes' '()Ljdk/incubator/vector/VectorShuffle;' in 'jdk/incubator/vector/VectorShuffle'
  0x00007f76b4cd2930:   0x00000008000df9e0 'jdk/incubator/vector/VectorOperators$ComparisonImpl'
  0x00007f76b4cd2938:   0x00007f76447c0d08 {method} {0x00007f76447c0d08} 'opCode' '(II)I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  0x00007f76b4cd2940:   0x00000008000de600 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  0x00007f76b4cd2948:   0x00007f76447c0dd8 {method} {0x00007f76447c0dd8} 'opCodeRaw' '()I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
pc-bytecode offsets:
PcDesc(pc=0x00007f76b4cd215f offset=ffffffff bits=0):
PcDesc(pc=0x00007f76b4cd2187 offset=27 bits=0):
   bytereverse::workload1_vector@5 (line 38)
PcDesc(pc=0x00007f76b4cd21b4 offset=54 bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload1_vector@57 (line 43)
PcDesc(pc=0x00007f76b4cd21bd offset=5d bits=0):
   bytereverse::workload1_vector@5 (line 38)
PcDesc(pc=0x00007f76b4cd21d4 offset=74 bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload1_vector@57 (line 43)
PcDesc(pc=0x00007f76b4cd21da offset=7a bits=0):
   bytereverse::workload1_vector@5 (line 38)
PcDesc(pc=0x00007f76b4cd21f9 offset=99 bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload1_vector@57 (line 43)
PcDesc(pc=0x00007f76b4cd21fd offset=9d bits=0):
   jdk.incubator.vector.IntVector::fromArray@2 (line 2894)
   bytereverse::workload1_vector@25 (line 39)
PcDesc(pc=0x00007f76b4cd2231 offset=d1 bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload1_vector@57 (line 43)
PcDesc(pc=0x00007f76b4cd2235 offset=d5 bits=0):
   jdk.incubator.vector.AbstractSpecies::loopBound@5 (line 203)
   bytereverse::workload1_vector@12 (line 38)
PcDesc(pc=0x00007f76b4cd2253 offset=f3 bits=0):
   jdk.incubator.vector.AbstractVector::asByteVectorRawTemplate@7 (line 179)
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 177)
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 41)
   jdk.incubator.vector.IntVector::reinterpretAsBytes@24 (line 3744)
   bytereverse::workload1_vector@32 (line 40)
PcDesc(pc=0x00007f76b4cd2256 offset=f6 bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload1_vector@57 (line 43)
PcDesc(pc=0x00007f76b4cd225b offset=fb bits=0):
   jdk.incubator.vector.AbstractVector::convert0@192 (line 689)
   jdk.incubator.vector.AbstractVector::asVectorRawTemplate@11 (line 173)
   jdk.incubator.vector.AbstractVector::asByteVectorRawTemplate@4 (line 179)
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 177)
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 41)
   jdk.incubator.vector.IntVector::reinterpretAsBytes@24 (line 3744)
   bytereverse::workload1_vector@32 (line 40)
PcDesc(pc=0x00007f76b4cd226b offset=10b bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload1_vector@57 (line 43)
PcDesc(pc=0x00007f76b4cd2275 offset=115 bits=0):
   jdk.incubator.vector.AbstractVector::convert0@192 (line 689)
   jdk.incubator.vector.AbstractVector::asVectorRawTemplate@11 (line 173)
   jdk.incubator.vector.AbstractVector::asByteVectorRawTemplate@4 (line 179)
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 177)
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 41)
   jdk.incubator.vector.IntVector::reinterpretAsBytes@24 (line 3744)
   bytereverse::workload1_vector@32 (line 40)
PcDesc(pc=0x00007f76b4cd2289 offset=129 bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload1_vector@57 (line 43)
PcDesc(pc=0x00007f76b4cd228e offset=12e bits=0):
   jdk.incubator.vector.AbstractVector::asVectorRawTemplate@11 (line 173)
   jdk.incubator.vector.AbstractVector::asByteVectorRawTemplate@4 (line 179)
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 177)
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 41)
   jdk.incubator.vector.IntVector::reinterpretAsBytes@24 (line 3744)
   bytereverse::workload1_vector@32 (line 40)
PcDesc(pc=0x00007f76b4cd2293 offset=133 bits=0):
   jdk.incubator.vector.ByteVector$ByteSpecies::dummyVector@1 (line 4222)
   jdk.incubator.vector.ByteVector$ByteSpecies::dummyVector@1 (line 4108)
   jdk.incubator.vector.AbstractVector::convert0@159 (line 688)
   jdk.incubator.vector.AbstractVector::asVectorRawTemplate@11 (line 173)
   jdk.incubator.vector.AbstractVector::asByteVectorRawTemplate@4 (line 179)
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 177)
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 41)
   jdk.incubator.vector.IntVector::reinterpretAsBytes@24 (line 3744)
   bytereverse::workload1_vector@32 (line 40)
PcDesc(pc=0x00007f76b4cd22a9 offset=149 bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload1_vector@57 (line 43)
PcDesc(pc=0x00007f76b4cd22ae offset=14e bits=0):
   jdk.incubator.vector.ByteVector$ByteSpecies::dummyVector@1 (line 4222)
   jdk.incubator.vector.ByteVector$ByteSpecies::dummyVector@1 (line 4108)
   jdk.incubator.vector.AbstractVector::convert0@159 (line 688)
   jdk.incubator.vector.AbstractVector::asVectorRawTemplate@11 (line 173)
   jdk.incubator.vector.AbstractVector::asByteVectorRawTemplate@4 (line 179)
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 177)
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 41)
   jdk.incubator.vector.IntVector::reinterpretAsBytes@24 (line 3744)
   bytereverse::workload1_vector@32 (line 40)
PcDesc(pc=0x00007f76b4cd22b3 offset=153 bits=0):
   jdk.incubator.vector.AbstractSpecies::loopBound@5 (line 203)
   bytereverse::workload1_vector@12 (line 38)
PcDesc(pc=0x00007f76b4cd22c9 offset=169 bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload1_vector@57 (line 43)
PcDesc(pc=0x00007f76b4cd22ce offset=16e bits=0):
   bytereverse::workload1_vector@5 (line 38)
PcDesc(pc=0x00007f76b4cd22d1 offset=171 bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload1_vector@57 (line 43)
PcDesc(pc=0x00007f76b4cd230e offset=1ae bits=0):
   jdk.incubator.vector.AbstractVector::asVectorRawTemplate@4 (line 173)
   jdk.incubator.vector.AbstractVector::asByteVectorRawTemplate@4 (line 179)
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 177)
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 41)
   jdk.incubator.vector.IntVector::reinterpretAsBytes@24 (line 3744)
   bytereverse::workload1_vector@32 (line 40)
PcDesc(pc=0x00007f76b4cd231e offset=1be bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload1_vector@57 (line 43)
PcDesc(pc=0x00007f76b4cd2323 offset=1c3 bits=0):
   jdk.incubator.vector.AbstractVector::asVectorRawTemplate@4 (line 173)
   jdk.incubator.vector.AbstractVector::asByteVectorRawTemplate@4 (line 179)
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 177)
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 41)
   jdk.incubator.vector.IntVector::reinterpretAsBytes@24 (line 3744)
   bytereverse::workload1_vector@32 (line 40)
PcDesc(pc=0x00007f76b4cd232c offset=1cc bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload1_vector@57 (line 43)
PcDesc(pc=0x00007f76b4cd2331 offset=1d1 bits=0):
   jdk.incubator.vector.AbstractVector::asByteVectorRawTemplate@4 (line 179)
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 177)
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 41)
   jdk.incubator.vector.IntVector::reinterpretAsBytes@24 (line 3744)
   bytereverse::workload1_vector@32 (line 40)
PcDesc(pc=0x00007f76b4cd2341 offset=1e1 bits=0):
   jdk.incubator.vector.IntVector::fromArray@19 (line 2896)
   bytereverse::workload1_vector@25 (line 39)
PcDesc(pc=0x00007f76b4cd2343 offset=1e3 bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload1_vector@57 (line 43)
PcDesc(pc=0x00007f76b4cd2358 offset=1f8 bits=0):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 52)
   jdk.incubator.vector.IntVector::fromArray@9 (line 2894)
   bytereverse::workload1_vector@25 (line 39)
PcDesc(pc=0x00007f76b4cd235f offset=1ff bits=0):
   jdk.incubator.vector.IntVector::fromArray@9 (line 2894)
   bytereverse::workload1_vector@25 (line 39)
PcDesc(pc=0x00007f76b4cd2376 offset=216 bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload1_vector@57 (line 43)
PcDesc(pc=0x00007f76b4cd239a offset=23a bits=0):
   jdk.incubator.vector.VectorIntrinsics::roundDown@3 (line 84)
   jdk.incubator.vector.AbstractSpecies::loopBound@5 (line 203)
   bytereverse::workload1_vector@12 (line 38)
PcDesc(pc=0x00007f76b4cd23ae offset=24e bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload1_vector@57 (line 43)
PcDesc(pc=0x00007f76b4cd23b5 offset=255 bits=0):
   jdk.incubator.vector.IntVector::fromArray@2 (line 2894)
   bytereverse::workload1_vector@25 (line 39)
PcDesc(pc=0x00007f76b4cd23bc offset=25c bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload1_vector@57 (line 43)
PcDesc(pc=0x00007f76b4cd23bf offset=25f bits=1):
   bytereverse::workload1_vector@71 (line 38)  reexecute=true
   Locals
    - l0: stack[16],oop
    - l1: stack[0],oop
    - l2: empty
    - l3: reg rbx [6],int
    - l4: empty
    - l5: empty
    - l6: empty
PcDesc(pc=0x00007f76b4cd23e8 offset=288 bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload1_vector@57 (line 43)
PcDesc(pc=0x00007f76b4cd23fe offset=29e bits=0):
   jdk.incubator.vector.IntVector::fromArray@2 (line 2894)
   bytereverse::workload1_vector@25 (line 39)
PcDesc(pc=0x00007f76b4cd240c offset=2ac bits=0):
   bytereverse::workload1_vector@5 (line 38)
PcDesc(pc=0x00007f76b4cd2413 offset=2b3 bits=0):
   jdk.incubator.vector.IntVector::fromArray@2 (line 2894)
   bytereverse::workload1_vector@25 (line 39)
PcDesc(pc=0x00007f76b4cd2427 offset=2c7 bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload1_vector@57 (line 43)
PcDesc(pc=0x00007f76b4cd2453 offset=2f3 bits=0):
   jdk.incubator.vector.IntVector::fromArray@2 (line 2894)
   bytereverse::workload1_vector@25 (line 39)
PcDesc(pc=0x00007f76b4cd24a0 offset=340 bits=0):
   bytereverse::workload1_vector@5 (line 38)
PcDesc(pc=0x00007f76b4cd24a5 offset=345 bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload1_vector@57 (line 43)
PcDesc(pc=0x00007f76b4cd24aa offset=34a bits=0):
   jdk.incubator.vector.AbstractVector::asVectorRawTemplate@8 (line 173)
   jdk.incubator.vector.AbstractVector::asByteVectorRawTemplate@4 (line 179)
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 177)
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 41)
   jdk.incubator.vector.IntVector::reinterpretAsBytes@24 (line 3744)
   bytereverse::workload1_vector@32 (line 40)
PcDesc(pc=0x00007f76b4cd24d4 offset=374 bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload1_vector@57 (line 43)
PcDesc(pc=0x00007f76b4cd24d8 offset=378 bits=0):
   jdk.incubator.vector.AbstractVector::asVectorRawTemplate@8 (line 173)
   jdk.incubator.vector.AbstractVector::asByteVectorRawTemplate@4 (line 179)
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 177)
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 41)
   jdk.incubator.vector.IntVector::reinterpretAsBytes@24 (line 3744)
   bytereverse::workload1_vector@32 (line 40)
PcDesc(pc=0x00007f76b4cd24ea offset=38a bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload1_vector@57 (line 43)
PcDesc(pc=0x00007f76b4cd24f0 offset=390 bits=0):
   bytereverse::workload1_vector@5 (line 38)
PcDesc(pc=0x00007f76b4cd253e offset=3de bits=0):
   jdk.incubator.vector.Byte256Vector::shuffleFromArray@3 (line 41)
   jdk.incubator.vector.AbstractSpecies::shuffleFromArray@6 (line 322)
   jdk.incubator.vector.VectorShuffle::fromArray@8 (line 314)
   bytereverse::workload1_vector@42 (line 41)
PcDesc(pc=0x00007f76b4cd2543 offset=3e3 bits=0):
   bytereverse::workload1_vector@5 (line 38)
PcDesc(pc=0x00007f76b4cd254c offset=3ec bits=4):
   jdk.incubator.vector.AbstractShuffle::prepare@1 (line 55)
   Locals
    - l0: 32
    - l1: stack[24],narrowoop
    - l2: 0
    - l3: empty
    - l4: empty
    - l5: empty
   jdk.incubator.vector.AbstractShuffle::<init>@4 (line 47)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: obj[245]
   jdk.incubator.vector.Byte256Vector$Byte256Shuffle::<init>@6 (line 816)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.Byte256Vector::shuffleFromArray@6 (line 161)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   Expression stack
    - @0: obj[245]
   jdk.incubator.vector.Byte256Vector::shuffleFromArray@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.AbstractSpecies::shuffleFromArray@6 (line 322)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.VectorShuffle::fromArray@8 (line 314)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   bytereverse::workload1_vector@42 (line 41)
   Locals
    - l0: stack[16],oop
    - l1: stack[0],oop
    - l2: empty
    - l3: stack[8]
    - l4: empty
    - l5: empty
    - l6: empty
   Expression stack
    - @0: obj[244]
   Objects
    - 244: jdk.incubator.vector.Byte256Vector stack[64],vector
    - 245: jdk.incubator.vector.Byte256Vector$Byte256Shuffle NULL
PcDesc(pc=0x00007f76b4cd256a offset=40a bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload1_vector@57 (line 43)
PcDesc(pc=0x00007f76b4cd256f offset=40f bits=0):
   jdk.incubator.vector.Byte256Vector::shuffleFromArray@0 (line 161)
   jdk.incubator.vector.Byte256Vector::shuffleFromArray@3 (line 41)
   jdk.incubator.vector.AbstractSpecies::shuffleFromArray@6 (line 322)
   jdk.incubator.vector.VectorShuffle::fromArray@8 (line 314)
   bytereverse::workload1_vector@42 (line 41)
PcDesc(pc=0x00007f76b4cd25a0 offset=440 bits=1):
   jdk.incubator.vector.AbstractShuffle::checkIndex0@12 (line 209)  reexecute=true
   Locals
    - l0: stack[40]
    - l1: 32
    - l2: -1
    - l3: stack[36]
   Expression stack
    - @0: stack[36]
    - @1: stack[40]
   jdk.incubator.vector.AbstractShuffle::partiallyWrapIndex@3 (line 202)
   Locals
    - l0: empty
    - l1: empty
   jdk.incubator.vector.AbstractShuffle::prepare@24 (line 58)
   Locals
    - l0: 32
    - l1: stack[12],narrowoop
    - l2: 0
    - l3: stack[16],oop
    - l4: stack[24]
    - l5: empty
   jdk.incubator.vector.AbstractShuffle::<init>@4 (line 47)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: obj[314]
   jdk.incubator.vector.Byte256Vector$Byte256Shuffle::<init>@6 (line 816)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.Byte256Vector::shuffleFromArray@6 (line 161)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   Expression stack
    - @0: obj[314]
   jdk.incubator.vector.Byte256Vector::shuffleFromArray@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.AbstractSpecies::shuffleFromArray@6 (line 322)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.VectorShuffle::fromArray@8 (line 314)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   bytereverse::workload1_vector@42 (line 41)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: empty
    - l3: stack[8]
    - l4: empty
    - l5: empty
    - l6: empty
   Expression stack
    - @0: obj[313]
   Objects
    - 313: jdk.incubator.vector.Byte256Vector stack[64],vector
    - 314: jdk.incubator.vector.Byte256Vector$Byte256Shuffle NULL
PcDesc(pc=0x00007f76b4cd25c5 offset=465 bits=0):
   jdk.incubator.vector.AbstractVector::convert0@192 (line 689)
   jdk.incubator.vector.AbstractVector::asVectorRawTemplate@11 (line 173)
   jdk.incubator.vector.AbstractVector::asByteVectorRawTemplate@4 (line 179)
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 177)
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 41)
   jdk.incubator.vector.IntVector::reinterpretAsBytes@24 (line 3744)
   bytereverse::workload1_vector@32 (line 40)
PcDesc(pc=0x00007f76b4cd25ca offset=46a bits=0):
   jdk.incubator.vector.Byte256Vector::shuffleFromArray@0 (line 161)
   jdk.incubator.vector.Byte256Vector::shuffleFromArray@3 (line 41)
   jdk.incubator.vector.AbstractSpecies::shuffleFromArray@6 (line 322)
   jdk.incubator.vector.VectorShuffle::fromArray@8 (line 314)
   bytereverse::workload1_vector@42 (line 41)
PcDesc(pc=0x00007f76b4cd25db offset=47b bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload1_vector@57 (line 43)
PcDesc(pc=0x00007f76b4cd25e4 offset=484 bits=0):
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[12]
    - @1: stack[24]
    - @2: NULL
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 52)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.IntVector::fromArray@9 (line 2894)
   Locals
    - l0: a 'jdk/incubator/vector/IntVector$IntSpecies'{0x000000011903baa0}
    - l1: stack[16],oop
    - l2: empty
    - l3: empty
   bytereverse::workload1_vector@25 (line 39)
   Locals
    - l0: stack[16],oop
    - l1: stack[0],oop
    - l2: empty
    - l3: stack[12]
    - l4: empty
    - l5: empty
    - l6: empty
PcDesc(pc=0x00007f76b4cd25f8 offset=498 bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload1_vector@57 (line 43)
PcDesc(pc=0x00007f76b4cd25fd offset=49d bits=0):
   jdk.incubator.vector.AbstractSpecies::loopBound@5 (line 203)
   bytereverse::workload1_vector@12 (line 38)
PcDesc(pc=0x00007f76b4cd2612 offset=4b2 bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload1_vector@57 (line 43)
PcDesc(pc=0x00007f76b4cd261c offset=4bc bits=0):
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[8]
    - @1: stack[24]
    - @2: NULL
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 52)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.IntVector::intoArray@7 (line 3163)
   Locals
    - l0: obj[384]
    - l1: stack[0],oop
    - l2: empty
    - l3: empty
   bytereverse::workload1_vector@57 (line 43)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: empty
    - l3: stack[8]
    - l4: empty
    - l5: empty
    - l6: empty
   Objects
    - 384: jdk.incubator.vector.Int256Vector stack[32],vector
PcDesc(pc=0x00007f76b4cd2696 offset=536 bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload1_vector@57 (line 43)
PcDesc(pc=0x00007f76b4cd26a1 offset=541 bits=0):
   jdk.incubator.vector.AbstractSpecies::loopBound@5 (line 203)
   bytereverse::workload1_vector@12 (line 38)
PcDesc(pc=0x00007f76b4cd26c4 offset=564 bits=1):
   jdk.incubator.vector.AbstractShuffle::checkIndexes@32 (line 128)  reexecute=true
   Locals
    - l0: obj[360]
    - l1: empty
    - l2: obj[361]
    - l3: empty
   Expression stack
    - @0: stack[12]
   jdk.incubator.vector.ByteVector::rearrangeTemplate@1 (line 2259)
   Locals
    - l0: obj[359]
    - l1: a 'java/lang/Class'{0x0000000119047f98} = 'jdk/incubator/vector/Byte256Vector$Byte256Shuffle'
    - l2: obj[360]
   jdk.incubator.vector.Byte256Vector::rearrange@7 (line 446)
   Locals
    - l0: empty
    - l1: empty
   jdk.incubator.vector.Byte256Vector::rearrange@2 (line 41)
   Locals
    - l0: empty
    - l1: empty
   bytereverse::workload1_vector@45 (line 41)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: empty
    - l3: stack[8]
    - l4: empty
    - l5: empty
    - l6: empty
   Objects
    - 359: jdk.incubator.vector.Byte256Vector stack[32],vector
    - 360: jdk.incubator.vector.Byte256Vector$Byte256Shuffle stack[16],oop
    - 361: jdk.incubator.vector.Byte256Vector$Byte256Mask stack[64],vector
PcDesc(pc=0x00007f76b4cd26dd offset=57d bits=0):
   bytereverse::workload1_vector@9 (line 38)
PcDesc(pc=0x00007f76b4cd26f0 offset=590 bits=0):
   bytereverse::workload1_vector@5 (line 38)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: empty
    - l3: stack[8]
    - l4: empty
    - l5: empty
    - l6: empty
PcDesc(pc=0x00007f76b4cd2709 offset=5a9 bits=0):
   bytereverse::workload1_vector@5 (line 38)
PcDesc(pc=0x00007f76b4cd2711 offset=5b1 bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload1_vector@57 (line 43)
PcDesc(pc=0x00007f76b4cd271c offset=5bc bits=0):
   bytereverse::workload1_vector@5 (line 38)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: empty
    - l3: stack[8]
    - l4: empty
    - l5: empty
    - l6: empty
PcDesc(pc=0x00007f76b4cd2730 offset=5d0 bits=0):
   jdk.incubator.vector.AbstractSpecies::loopBound@5 (line 203)
   bytereverse::workload1_vector@12 (line 38)
PcDesc(pc=0x00007f76b4cd2735 offset=5d5 bits=0):
   jdk.incubator.vector.AbstractSpecies::loopBound@0 (line 203)
   bytereverse::workload1_vector@12 (line 38)
PcDesc(pc=0x00007f76b4cd274c offset=5ec bits=1):
   bytereverse::workload1_vector@78 (line 46)  reexecute=true
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: empty
    - l3: stack[12]
    - l4: empty
    - l5: empty
    - l6: empty
   Expression stack
    - @0: stack[12]
    - @1: stack[16]
PcDesc(pc=0x00007f76b4cd2760 offset=600 bits=0):
   bytereverse::workload1_vector@5 (line 38)
PcDesc(pc=0x00007f76b4cd2770 offset=610 bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload1_vector@57 (line 43)
PcDesc(pc=0x00007f76b4cd27b9 offset=659 bits=0):
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
oop maps:ImmutableOopMapSet contains 9 OopMaps

ImmutableOopMap {rbp=Oop r13=Oop [0]=Oop [16]=Oop [24]=NarrowOop } pc offsets: 607 
ImmutableOopMap {rbp=Oop [0]=Oop [16]=Oop [24]=NarrowOop } pc offsets: 1004 
ImmutableOopMap {rbp=Oop [0]=Oop [12]=NarrowOop [16]=Oop } pc offsets: 1088 
ImmutableOopMap {[0]=Oop [16]=Oop } pc offsets: 1156 
ImmutableOopMap {rbp=Oop [0]=Oop } pc offsets: 1212 
ImmutableOopMap {rbp=Oop [0]=Oop [16]=Oop } pc offsets: 1380 
ImmutableOopMap {rbp=Oop [0]=Oop } pc offsets: 1424 1468 1516 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
scopes:
ScopeDesc(pc=0x00007f76b4cd2187 offset=27):
   bytereverse::workload1_vector@5 (line 38)
ScopeDesc(pc=0x00007f76b4cd21b4 offset=54):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007f76b4cd21b4 offset=54):
   bytereverse::workload1_vector@57 (line 43)
ScopeDesc(pc=0x00007f76b4cd21bd offset=5d):
   bytereverse::workload1_vector@5 (line 38)
ScopeDesc(pc=0x00007f76b4cd21d4 offset=74):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007f76b4cd21d4 offset=74):
   bytereverse::workload1_vector@57 (line 43)
ScopeDesc(pc=0x00007f76b4cd21da offset=7a):
   bytereverse::workload1_vector@5 (line 38)
ScopeDesc(pc=0x00007f76b4cd21f9 offset=99):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007f76b4cd21f9 offset=99):
   bytereverse::workload1_vector@57 (line 43)
ScopeDesc(pc=0x00007f76b4cd21fd offset=9d):
   jdk.incubator.vector.IntVector::fromArray@2 (line 2894)
ScopeDesc(pc=0x00007f76b4cd21fd offset=9d):
   bytereverse::workload1_vector@25 (line 39)
ScopeDesc(pc=0x00007f76b4cd2231 offset=d1):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007f76b4cd2231 offset=d1):
   bytereverse::workload1_vector@57 (line 43)
ScopeDesc(pc=0x00007f76b4cd2235 offset=d5):
   jdk.incubator.vector.AbstractSpecies::loopBound@5 (line 203)
ScopeDesc(pc=0x00007f76b4cd2235 offset=d5):
   bytereverse::workload1_vector@12 (line 38)
ScopeDesc(pc=0x00007f76b4cd2253 offset=f3):
   jdk.incubator.vector.AbstractVector::asByteVectorRawTemplate@7 (line 179)
ScopeDesc(pc=0x00007f76b4cd2253 offset=f3):
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 177)
ScopeDesc(pc=0x00007f76b4cd2253 offset=f3):
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 41)
ScopeDesc(pc=0x00007f76b4cd2253 offset=f3):
   jdk.incubator.vector.IntVector::reinterpretAsBytes@24 (line 3744)
ScopeDesc(pc=0x00007f76b4cd2253 offset=f3):
   bytereverse::workload1_vector@32 (line 40)
ScopeDesc(pc=0x00007f76b4cd2256 offset=f6):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007f76b4cd2256 offset=f6):
   bytereverse::workload1_vector@57 (line 43)
ScopeDesc(pc=0x00007f76b4cd225b offset=fb):
   jdk.incubator.vector.AbstractVector::convert0@192 (line 689)
ScopeDesc(pc=0x00007f76b4cd225b offset=fb):
   jdk.incubator.vector.AbstractVector::asVectorRawTemplate@11 (line 173)
ScopeDesc(pc=0x00007f76b4cd225b offset=fb):
   jdk.incubator.vector.AbstractVector::asByteVectorRawTemplate@4 (line 179)
ScopeDesc(pc=0x00007f76b4cd225b offset=fb):
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 177)
ScopeDesc(pc=0x00007f76b4cd225b offset=fb):
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 41)
ScopeDesc(pc=0x00007f76b4cd225b offset=fb):
   jdk.incubator.vector.IntVector::reinterpretAsBytes@24 (line 3744)
ScopeDesc(pc=0x00007f76b4cd225b offset=fb):
   bytereverse::workload1_vector@32 (line 40)
ScopeDesc(pc=0x00007f76b4cd226b offset=10b):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007f76b4cd226b offset=10b):
   bytereverse::workload1_vector@57 (line 43)
ScopeDesc(pc=0x00007f76b4cd2275 offset=115):
   jdk.incubator.vector.AbstractVector::convert0@192 (line 689)
ScopeDesc(pc=0x00007f76b4cd2275 offset=115):
   jdk.incubator.vector.AbstractVector::asVectorRawTemplate@11 (line 173)
ScopeDesc(pc=0x00007f76b4cd2275 offset=115):
   jdk.incubator.vector.AbstractVector::asByteVectorRawTemplate@4 (line 179)
ScopeDesc(pc=0x00007f76b4cd2275 offset=115):
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 177)
ScopeDesc(pc=0x00007f76b4cd2275 offset=115):
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 41)
ScopeDesc(pc=0x00007f76b4cd2275 offset=115):
   jdk.incubator.vector.IntVector::reinterpretAsBytes@24 (line 3744)
ScopeDesc(pc=0x00007f76b4cd2275 offset=115):
   bytereverse::workload1_vector@32 (line 40)
ScopeDesc(pc=0x00007f76b4cd2289 offset=129):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007f76b4cd2289 offset=129):
   bytereverse::workload1_vector@57 (line 43)
ScopeDesc(pc=0x00007f76b4cd228e offset=12e):
   jdk.incubator.vector.AbstractVector::asVectorRawTemplate@11 (line 173)
ScopeDesc(pc=0x00007f76b4cd228e offset=12e):
   jdk.incubator.vector.AbstractVector::asByteVectorRawTemplate@4 (line 179)
ScopeDesc(pc=0x00007f76b4cd228e offset=12e):
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 177)
ScopeDesc(pc=0x00007f76b4cd228e offset=12e):
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 41)
ScopeDesc(pc=0x00007f76b4cd228e offset=12e):
   jdk.incubator.vector.IntVector::reinterpretAsBytes@24 (line 3744)
ScopeDesc(pc=0x00007f76b4cd228e offset=12e):
   bytereverse::workload1_vector@32 (line 40)
ScopeDesc(pc=0x00007f76b4cd2293 offset=133):
   jdk.incubator.vector.ByteVector$ByteSpecies::dummyVector@1 (line 4222)
ScopeDesc(pc=0x00007f76b4cd2293 offset=133):
   jdk.incubator.vector.ByteVector$ByteSpecies::dummyVector@1 (line 4108)
ScopeDesc(pc=0x00007f76b4cd2293 offset=133):
   jdk.incubator.vector.AbstractVector::convert0@159 (line 688)
ScopeDesc(pc=0x00007f76b4cd2293 offset=133):
   jdk.incubator.vector.AbstractVector::asVectorRawTemplate@11 (line 173)
ScopeDesc(pc=0x00007f76b4cd2293 offset=133):
   jdk.incubator.vector.AbstractVector::asByteVectorRawTemplate@4 (line 179)
ScopeDesc(pc=0x00007f76b4cd2293 offset=133):
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 177)
ScopeDesc(pc=0x00007f76b4cd2293 offset=133):
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 41)
ScopeDesc(pc=0x00007f76b4cd2293 offset=133):
   jdk.incubator.vector.IntVector::reinterpretAsBytes@24 (line 3744)
ScopeDesc(pc=0x00007f76b4cd2293 offset=133):
   bytereverse::workload1_vector@32 (line 40)
ScopeDesc(pc=0x00007f76b4cd22a9 offset=149):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007f76b4cd22a9 offset=149):
   bytereverse::workload1_vector@57 (line 43)
ScopeDesc(pc=0x00007f76b4cd22ae offset=14e):
   jdk.incubator.vector.ByteVector$ByteSpecies::dummyVector@1 (line 4222)
ScopeDesc(pc=0x00007f76b4cd22ae offset=14e):
   jdk.incubator.vector.ByteVector$ByteSpecies::dummyVector@1 (line 4108)
ScopeDesc(pc=0x00007f76b4cd22ae offset=14e):
   jdk.incubator.vector.AbstractVector::convert0@159 (line 688)
ScopeDesc(pc=0x00007f76b4cd22ae offset=14e):
   jdk.incubator.vector.AbstractVector::asVectorRawTemplate@11 (line 173)
ScopeDesc(pc=0x00007f76b4cd22ae offset=14e):
   jdk.incubator.vector.AbstractVector::asByteVectorRawTemplate@4 (line 179)
ScopeDesc(pc=0x00007f76b4cd22ae offset=14e):
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 177)
ScopeDesc(pc=0x00007f76b4cd22ae offset=14e):
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 41)
ScopeDesc(pc=0x00007f76b4cd22ae offset=14e):
   jdk.incubator.vector.IntVector::reinterpretAsBytes@24 (line 3744)
ScopeDesc(pc=0x00007f76b4cd22ae offset=14e):
   bytereverse::workload1_vector@32 (line 40)
ScopeDesc(pc=0x00007f76b4cd22b3 offset=153):
   jdk.incubator.vector.AbstractSpecies::loopBound@5 (line 203)
ScopeDesc(pc=0x00007f76b4cd22b3 offset=153):
   bytereverse::workload1_vector@12 (line 38)
ScopeDesc(pc=0x00007f76b4cd22c9 offset=169):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007f76b4cd22c9 offset=169):
   bytereverse::workload1_vector@57 (line 43)
ScopeDesc(pc=0x00007f76b4cd22ce offset=16e):
   bytereverse::workload1_vector@5 (line 38)
ScopeDesc(pc=0x00007f76b4cd22d1 offset=171):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007f76b4cd22d1 offset=171):
   bytereverse::workload1_vector@57 (line 43)
ScopeDesc(pc=0x00007f76b4cd230e offset=1ae):
   jdk.incubator.vector.AbstractVector::asVectorRawTemplate@4 (line 173)
ScopeDesc(pc=0x00007f76b4cd230e offset=1ae):
   jdk.incubator.vector.AbstractVector::asByteVectorRawTemplate@4 (line 179)
ScopeDesc(pc=0x00007f76b4cd230e offset=1ae):
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 177)
ScopeDesc(pc=0x00007f76b4cd230e offset=1ae):
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 41)
ScopeDesc(pc=0x00007f76b4cd230e offset=1ae):
   jdk.incubator.vector.IntVector::reinterpretAsBytes@24 (line 3744)
ScopeDesc(pc=0x00007f76b4cd230e offset=1ae):
   bytereverse::workload1_vector@32 (line 40)
ScopeDesc(pc=0x00007f76b4cd231e offset=1be):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007f76b4cd231e offset=1be):
   bytereverse::workload1_vector@57 (line 43)
ScopeDesc(pc=0x00007f76b4cd2323 offset=1c3):
   jdk.incubator.vector.AbstractVector::asVectorRawTemplate@4 (line 173)
ScopeDesc(pc=0x00007f76b4cd2323 offset=1c3):
   jdk.incubator.vector.AbstractVector::asByteVectorRawTemplate@4 (line 179)
ScopeDesc(pc=0x00007f76b4cd2323 offset=1c3):
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 177)
ScopeDesc(pc=0x00007f76b4cd2323 offset=1c3):
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 41)
ScopeDesc(pc=0x00007f76b4cd2323 offset=1c3):
   jdk.incubator.vector.IntVector::reinterpretAsBytes@24 (line 3744)
ScopeDesc(pc=0x00007f76b4cd2323 offset=1c3):
   bytereverse::workload1_vector@32 (line 40)
ScopeDesc(pc=0x00007f76b4cd232c offset=1cc):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007f76b4cd232c offset=1cc):
   bytereverse::workload1_vector@57 (line 43)
ScopeDesc(pc=0x00007f76b4cd2331 offset=1d1):
   jdk.incubator.vector.AbstractVector::asByteVectorRawTemplate@4 (line 179)
ScopeDesc(pc=0x00007f76b4cd2331 offset=1d1):
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 177)
ScopeDesc(pc=0x00007f76b4cd2331 offset=1d1):
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 41)
ScopeDesc(pc=0x00007f76b4cd2331 offset=1d1):
   jdk.incubator.vector.IntVector::reinterpretAsBytes@24 (line 3744)
ScopeDesc(pc=0x00007f76b4cd2331 offset=1d1):
   bytereverse::workload1_vector@32 (line 40)
ScopeDesc(pc=0x00007f76b4cd2341 offset=1e1):
   jdk.incubator.vector.IntVector::fromArray@19 (line 2896)
ScopeDesc(pc=0x00007f76b4cd2341 offset=1e1):
   bytereverse::workload1_vector@25 (line 39)
ScopeDesc(pc=0x00007f76b4cd2343 offset=1e3):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007f76b4cd2343 offset=1e3):
   bytereverse::workload1_vector@57 (line 43)
ScopeDesc(pc=0x00007f76b4cd2358 offset=1f8):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 52)
ScopeDesc(pc=0x00007f76b4cd2358 offset=1f8):
   jdk.incubator.vector.IntVector::fromArray@9 (line 2894)
ScopeDesc(pc=0x00007f76b4cd2358 offset=1f8):
   bytereverse::workload1_vector@25 (line 39)
ScopeDesc(pc=0x00007f76b4cd235f offset=1ff):
   jdk.incubator.vector.IntVector::fromArray@9 (line 2894)
ScopeDesc(pc=0x00007f76b4cd235f offset=1ff):
   bytereverse::workload1_vector@25 (line 39)
ScopeDesc(pc=0x00007f76b4cd2376 offset=216):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007f76b4cd2376 offset=216):
   bytereverse::workload1_vector@57 (line 43)
ScopeDesc(pc=0x00007f76b4cd239a offset=23a):
   jdk.incubator.vector.VectorIntrinsics::roundDown@3 (line 84)
ScopeDesc(pc=0x00007f76b4cd239a offset=23a):
   jdk.incubator.vector.AbstractSpecies::loopBound@5 (line 203)
ScopeDesc(pc=0x00007f76b4cd239a offset=23a):
   bytereverse::workload1_vector@12 (line 38)
ScopeDesc(pc=0x00007f76b4cd23ae offset=24e):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007f76b4cd23ae offset=24e):
   bytereverse::workload1_vector@57 (line 43)
ScopeDesc(pc=0x00007f76b4cd23b5 offset=255):
   jdk.incubator.vector.IntVector::fromArray@2 (line 2894)
ScopeDesc(pc=0x00007f76b4cd23b5 offset=255):
   bytereverse::workload1_vector@25 (line 39)
ScopeDesc(pc=0x00007f76b4cd23bc offset=25c):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007f76b4cd23bc offset=25c):
   bytereverse::workload1_vector@57 (line 43)
ScopeDesc(pc=0x00007f76b4cd23bf offset=25f):
   bytereverse::workload1_vector@71 (line 38)  reexecute=true
   Locals
    - l0: stack[16],oop
    - l1: stack[0],oop
    - l2: empty
    - l3: reg rbx [6],int
    - l4: empty
    - l5: empty
    - l6: empty
ScopeDesc(pc=0x00007f76b4cd23e8 offset=288):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007f76b4cd23e8 offset=288):
   bytereverse::workload1_vector@57 (line 43)
ScopeDesc(pc=0x00007f76b4cd23fe offset=29e):
   jdk.incubator.vector.IntVector::fromArray@2 (line 2894)
ScopeDesc(pc=0x00007f76b4cd23fe offset=29e):
   bytereverse::workload1_vector@25 (line 39)
ScopeDesc(pc=0x00007f76b4cd240c offset=2ac):
   bytereverse::workload1_vector@5 (line 38)
ScopeDesc(pc=0x00007f76b4cd2413 offset=2b3):
   jdk.incubator.vector.IntVector::fromArray@2 (line 2894)
ScopeDesc(pc=0x00007f76b4cd2413 offset=2b3):
   bytereverse::workload1_vector@25 (line 39)
ScopeDesc(pc=0x00007f76b4cd2427 offset=2c7):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007f76b4cd2427 offset=2c7):
   bytereverse::workload1_vector@57 (line 43)
ScopeDesc(pc=0x00007f76b4cd2453 offset=2f3):
   jdk.incubator.vector.IntVector::fromArray@2 (line 2894)
ScopeDesc(pc=0x00007f76b4cd2453 offset=2f3):
   bytereverse::workload1_vector@25 (line 39)
ScopeDesc(pc=0x00007f76b4cd24a0 offset=340):
   bytereverse::workload1_vector@5 (line 38)
ScopeDesc(pc=0x00007f76b4cd24a5 offset=345):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007f76b4cd24a5 offset=345):
   bytereverse::workload1_vector@57 (line 43)
ScopeDesc(pc=0x00007f76b4cd24aa offset=34a):
   jdk.incubator.vector.AbstractVector::asVectorRawTemplate@8 (line 173)
ScopeDesc(pc=0x00007f76b4cd24aa offset=34a):
   jdk.incubator.vector.AbstractVector::asByteVectorRawTemplate@4 (line 179)
ScopeDesc(pc=0x00007f76b4cd24aa offset=34a):
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 177)
ScopeDesc(pc=0x00007f76b4cd24aa offset=34a):
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 41)
ScopeDesc(pc=0x00007f76b4cd24aa offset=34a):
   jdk.incubator.vector.IntVector::reinterpretAsBytes@24 (line 3744)
ScopeDesc(pc=0x00007f76b4cd24aa offset=34a):
   bytereverse::workload1_vector@32 (line 40)
ScopeDesc(pc=0x00007f76b4cd24d4 offset=374):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007f76b4cd24d4 offset=374):
   bytereverse::workload1_vector@57 (line 43)
ScopeDesc(pc=0x00007f76b4cd24d8 offset=378):
   jdk.incubator.vector.AbstractVector::asVectorRawTemplate@8 (line 173)
ScopeDesc(pc=0x00007f76b4cd24d8 offset=378):
   jdk.incubator.vector.AbstractVector::asByteVectorRawTemplate@4 (line 179)
ScopeDesc(pc=0x00007f76b4cd24d8 offset=378):
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 177)
ScopeDesc(pc=0x00007f76b4cd24d8 offset=378):
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 41)
ScopeDesc(pc=0x00007f76b4cd24d8 offset=378):
   jdk.incubator.vector.IntVector::reinterpretAsBytes@24 (line 3744)
ScopeDesc(pc=0x00007f76b4cd24d8 offset=378):
   bytereverse::workload1_vector@32 (line 40)
ScopeDesc(pc=0x00007f76b4cd24ea offset=38a):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007f76b4cd24ea offset=38a):
   bytereverse::workload1_vector@57 (line 43)
ScopeDesc(pc=0x00007f76b4cd24f0 offset=390):
   bytereverse::workload1_vector@5 (line 38)
ScopeDesc(pc=0x00007f76b4cd253e offset=3de):
   jdk.incubator.vector.Byte256Vector::shuffleFromArray@3 (line 41)
ScopeDesc(pc=0x00007f76b4cd253e offset=3de):
   jdk.incubator.vector.AbstractSpecies::shuffleFromArray@6 (line 322)
ScopeDesc(pc=0x00007f76b4cd253e offset=3de):
   jdk.incubator.vector.VectorShuffle::fromArray@8 (line 314)
ScopeDesc(pc=0x00007f76b4cd253e offset=3de):
   bytereverse::workload1_vector@42 (line 41)
ScopeDesc(pc=0x00007f76b4cd2543 offset=3e3):
   bytereverse::workload1_vector@5 (line 38)
ScopeDesc(pc=0x00007f76b4cd254c offset=3ec):
   jdk.incubator.vector.AbstractShuffle::prepare@1 (line 55)
   Locals
    - l0: 32
    - l1: stack[24],narrowoop
    - l2: 0
    - l3: empty
    - l4: empty
    - l5: empty
ScopeDesc(pc=0x00007f76b4cd254c offset=3ec):
   jdk.incubator.vector.AbstractShuffle::<init>@4 (line 47)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: obj[245]
ScopeDesc(pc=0x00007f76b4cd254c offset=3ec):
   jdk.incubator.vector.Byte256Vector$Byte256Shuffle::<init>@6 (line 816)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00007f76b4cd254c offset=3ec):
   jdk.incubator.vector.Byte256Vector::shuffleFromArray@6 (line 161)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   Expression stack
    - @0: obj[245]
ScopeDesc(pc=0x00007f76b4cd254c offset=3ec):
   jdk.incubator.vector.Byte256Vector::shuffleFromArray@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00007f76b4cd254c offset=3ec):
   jdk.incubator.vector.AbstractSpecies::shuffleFromArray@6 (line 322)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00007f76b4cd254c offset=3ec):
   jdk.incubator.vector.VectorShuffle::fromArray@8 (line 314)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x00007f76b4cd254c offset=3ec):
   bytereverse::workload1_vector@42 (line 41)
   Locals
    - l0: stack[16],oop
    - l1: stack[0],oop
    - l2: empty
    - l3: stack[8]
    - l4: empty
    - l5: empty
    - l6: empty
   Expression stack
    - @0: obj[244]
   Objects
    - 244: jdk.incubator.vector.Byte256Vector stack[64],vector
    - 245: jdk.incubator.vector.Byte256Vector$Byte256Shuffle NULL
ScopeDesc(pc=0x00007f76b4cd256a offset=40a):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007f76b4cd256a offset=40a):
   bytereverse::workload1_vector@57 (line 43)
ScopeDesc(pc=0x00007f76b4cd256f offset=40f):
   jdk.incubator.vector.Byte256Vector::shuffleFromArray@0 (line 161)
ScopeDesc(pc=0x00007f76b4cd256f offset=40f):
   jdk.incubator.vector.Byte256Vector::shuffleFromArray@3 (line 41)
ScopeDesc(pc=0x00007f76b4cd256f offset=40f):
   jdk.incubator.vector.AbstractSpecies::shuffleFromArray@6 (line 322)
ScopeDesc(pc=0x00007f76b4cd256f offset=40f):
   jdk.incubator.vector.VectorShuffle::fromArray@8 (line 314)
ScopeDesc(pc=0x00007f76b4cd256f offset=40f):
   bytereverse::workload1_vector@42 (line 41)
ScopeDesc(pc=0x00007f76b4cd25a0 offset=440):
   jdk.incubator.vector.AbstractShuffle::checkIndex0@12 (line 209)  reexecute=true
   Locals
    - l0: stack[40]
    - l1: 32
    - l2: -1
    - l3: stack[36]
   Expression stack
    - @0: stack[36]
    - @1: stack[40]
ScopeDesc(pc=0x00007f76b4cd25a0 offset=440):
   jdk.incubator.vector.AbstractShuffle::partiallyWrapIndex@3 (line 202)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x00007f76b4cd25a0 offset=440):
   jdk.incubator.vector.AbstractShuffle::prepare@24 (line 58)
   Locals
    - l0: 32
    - l1: stack[12],narrowoop
    - l2: 0
    - l3: stack[16],oop
    - l4: stack[24]
    - l5: empty
ScopeDesc(pc=0x00007f76b4cd25a0 offset=440):
   jdk.incubator.vector.AbstractShuffle::<init>@4 (line 47)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: obj[314]
ScopeDesc(pc=0x00007f76b4cd25a0 offset=440):
   jdk.incubator.vector.Byte256Vector$Byte256Shuffle::<init>@6 (line 816)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00007f76b4cd25a0 offset=440):
   jdk.incubator.vector.Byte256Vector::shuffleFromArray@6 (line 161)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   Expression stack
    - @0: obj[314]
ScopeDesc(pc=0x00007f76b4cd25a0 offset=440):
   jdk.incubator.vector.Byte256Vector::shuffleFromArray@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00007f76b4cd25a0 offset=440):
   jdk.incubator.vector.AbstractSpecies::shuffleFromArray@6 (line 322)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00007f76b4cd25a0 offset=440):
   jdk.incubator.vector.VectorShuffle::fromArray@8 (line 314)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x00007f76b4cd25a0 offset=440):
   bytereverse::workload1_vector@42 (line 41)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: empty
    - l3: stack[8]
    - l4: empty
    - l5: empty
    - l6: empty
   Expression stack
    - @0: obj[313]
   Objects
    - 313: jdk.incubator.vector.Byte256Vector stack[64],vector
    - 314: jdk.incubator.vector.Byte256Vector$Byte256Shuffle NULL
ScopeDesc(pc=0x00007f76b4cd25c5 offset=465):
   jdk.incubator.vector.AbstractVector::convert0@192 (line 689)
ScopeDesc(pc=0x00007f76b4cd25c5 offset=465):
   jdk.incubator.vector.AbstractVector::asVectorRawTemplate@11 (line 173)
ScopeDesc(pc=0x00007f76b4cd25c5 offset=465):
   jdk.incubator.vector.AbstractVector::asByteVectorRawTemplate@4 (line 179)
ScopeDesc(pc=0x00007f76b4cd25c5 offset=465):
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 177)
ScopeDesc(pc=0x00007f76b4cd25c5 offset=465):
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 41)
ScopeDesc(pc=0x00007f76b4cd25c5 offset=465):
   jdk.incubator.vector.IntVector::reinterpretAsBytes@24 (line 3744)
ScopeDesc(pc=0x00007f76b4cd25c5 offset=465):
   bytereverse::workload1_vector@32 (line 40)
ScopeDesc(pc=0x00007f76b4cd25ca offset=46a):
   jdk.incubator.vector.Byte256Vector::shuffleFromArray@0 (line 161)
ScopeDesc(pc=0x00007f76b4cd25ca offset=46a):
   jdk.incubator.vector.Byte256Vector::shuffleFromArray@3 (line 41)
ScopeDesc(pc=0x00007f76b4cd25ca offset=46a):
   jdk.incubator.vector.AbstractSpecies::shuffleFromArray@6 (line 322)
ScopeDesc(pc=0x00007f76b4cd25ca offset=46a):
   jdk.incubator.vector.VectorShuffle::fromArray@8 (line 314)
ScopeDesc(pc=0x00007f76b4cd25ca offset=46a):
   bytereverse::workload1_vector@42 (line 41)
ScopeDesc(pc=0x00007f76b4cd25db offset=47b):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007f76b4cd25db offset=47b):
   bytereverse::workload1_vector@57 (line 43)
ScopeDesc(pc=0x00007f76b4cd25e4 offset=484):
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[12]
    - @1: stack[24]
    - @2: NULL
ScopeDesc(pc=0x00007f76b4cd25e4 offset=484):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 52)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00007f76b4cd25e4 offset=484):
   jdk.incubator.vector.IntVector::fromArray@9 (line 2894)
   Locals
    - l0: a 'jdk/incubator/vector/IntVector$IntSpecies'{0x000000011903baa0}
    - l1: stack[16],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x00007f76b4cd25e4 offset=484):
   bytereverse::workload1_vector@25 (line 39)
   Locals
    - l0: stack[16],oop
    - l1: stack[0],oop
    - l2: empty
    - l3: stack[12]
    - l4: empty
    - l5: empty
    - l6: empty
ScopeDesc(pc=0x00007f76b4cd25f8 offset=498):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007f76b4cd25f8 offset=498):
   bytereverse::workload1_vector@57 (line 43)
ScopeDesc(pc=0x00007f76b4cd25fd offset=49d):
   jdk.incubator.vector.AbstractSpecies::loopBound@5 (line 203)
ScopeDesc(pc=0x00007f76b4cd25fd offset=49d):
   bytereverse::workload1_vector@12 (line 38)
ScopeDesc(pc=0x00007f76b4cd2612 offset=4b2):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007f76b4cd2612 offset=4b2):
   bytereverse::workload1_vector@57 (line 43)
ScopeDesc(pc=0x00007f76b4cd261c offset=4bc):
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[8]
    - @1: stack[24]
    - @2: NULL
ScopeDesc(pc=0x00007f76b4cd261c offset=4bc):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 52)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00007f76b4cd261c offset=4bc):
   jdk.incubator.vector.IntVector::intoArray@7 (line 3163)
   Locals
    - l0: obj[384]
    - l1: stack[0],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x00007f76b4cd261c offset=4bc):
   bytereverse::workload1_vector@57 (line 43)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: empty
    - l3: stack[8]
    - l4: empty
    - l5: empty
    - l6: empty
   Objects
    - 384: jdk.incubator.vector.Int256Vector stack[32],vector
ScopeDesc(pc=0x00007f76b4cd2696 offset=536):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007f76b4cd2696 offset=536):
   bytereverse::workload1_vector@57 (line 43)
ScopeDesc(pc=0x00007f76b4cd26a1 offset=541):
   jdk.incubator.vector.AbstractSpecies::loopBound@5 (line 203)
ScopeDesc(pc=0x00007f76b4cd26a1 offset=541):
   bytereverse::workload1_vector@12 (line 38)
ScopeDesc(pc=0x00007f76b4cd26c4 offset=564):
   jdk.incubator.vector.AbstractShuffle::checkIndexes@32 (line 128)  reexecute=true
   Locals
    - l0: obj[360]
    - l1: empty
    - l2: obj[361]
    - l3: empty
   Expression stack
    - @0: stack[12]
ScopeDesc(pc=0x00007f76b4cd26c4 offset=564):
   jdk.incubator.vector.ByteVector::rearrangeTemplate@1 (line 2259)
   Locals
    - l0: obj[359]
    - l1: a 'java/lang/Class'{0x0000000119047f98} = 'jdk/incubator/vector/Byte256Vector$Byte256Shuffle'
    - l2: obj[360]
ScopeDesc(pc=0x00007f76b4cd26c4 offset=564):
   jdk.incubator.vector.Byte256Vector::rearrange@7 (line 446)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x00007f76b4cd26c4 offset=564):
   jdk.incubator.vector.Byte256Vector::rearrange@2 (line 41)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x00007f76b4cd26c4 offset=564):
   bytereverse::workload1_vector@45 (line 41)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: empty
    - l3: stack[8]
    - l4: empty
    - l5: empty
    - l6: empty
   Objects
    - 359: jdk.incubator.vector.Byte256Vector stack[32],vector
    - 360: jdk.incubator.vector.Byte256Vector$Byte256Shuffle stack[16],oop
    - 361: jdk.incubator.vector.Byte256Vector$Byte256Mask stack[64],vector
ScopeDesc(pc=0x00007f76b4cd26dd offset=57d):
   bytereverse::workload1_vector@9 (line 38)
ScopeDesc(pc=0x00007f76b4cd26f0 offset=590):
   bytereverse::workload1_vector@5 (line 38)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: empty
    - l3: stack[8]
    - l4: empty
    - l5: empty
    - l6: empty
ScopeDesc(pc=0x00007f76b4cd2709 offset=5a9):
   bytereverse::workload1_vector@5 (line 38)
ScopeDesc(pc=0x00007f76b4cd2711 offset=5b1):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007f76b4cd2711 offset=5b1):
   bytereverse::workload1_vector@57 (line 43)
ScopeDesc(pc=0x00007f76b4cd271c offset=5bc):
   bytereverse::workload1_vector@5 (line 38)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: empty
    - l3: stack[8]
    - l4: empty
    - l5: empty
    - l6: empty
ScopeDesc(pc=0x00007f76b4cd2730 offset=5d0):
   jdk.incubator.vector.AbstractSpecies::loopBound@5 (line 203)
ScopeDesc(pc=0x00007f76b4cd2730 offset=5d0):
   bytereverse::workload1_vector@12 (line 38)
ScopeDesc(pc=0x00007f76b4cd2735 offset=5d5):
   jdk.incubator.vector.AbstractSpecies::loopBound@0 (line 203)
ScopeDesc(pc=0x00007f76b4cd2735 offset=5d5):
   bytereverse::workload1_vector@12 (line 38)
ScopeDesc(pc=0x00007f76b4cd274c offset=5ec):
   bytereverse::workload1_vector@78 (line 46)  reexecute=true
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: empty
    - l3: stack[12]
    - l4: empty
    - l5: empty
    - l6: empty
   Expression stack
    - @0: stack[12]
    - @1: stack[16]
ScopeDesc(pc=0x00007f76b4cd2760 offset=600):
   bytereverse::workload1_vector@5 (line 38)
ScopeDesc(pc=0x00007f76b4cd2770 offset=610):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007f76b4cd2770 offset=610):
   bytereverse::workload1_vector@57 (line 43)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
relocations:
         @0x00007f76b4cd2080: 6400
relocInfo@0x00007f76b4cd2080 [type=6(runtime_call) addr=0x00007f76b4cd2160 offset=0 format=1] | [destination=0x00007f76c19e1cd0]
         @0x00007f76b4cd2082: f003cc4d
relocInfo@0x00007f76b4cd2084 [type=12(metadata) addr=0x00007f76b4cd21ad offset=77 format=3 data=3] | [metadata_addr=0x00007f76b4cd27f8 *=0x0000000800040ba0 offset=0]metadata_value=0x0000000800040ba0: {type array int}
         @0x00007f76b4cd2086: f003cc20
relocInfo@0x00007f76b4cd2088 [type=12(metadata) addr=0x00007f76b4cd21cd offset=32 format=3 data=3] | [metadata_addr=0x00007f76b4cd27f8 *=0x0000000800040ba0 offset=0]metadata_value=0x0000000800040ba0: {type array int}
         @0x00007f76b4cd208a: 1022
relocInfo@0x00007f76b4cd208a [type=1(oop) addr=0x00007f76b4cd21ef offset=34] | [oop_addr=0x00007f76b4cd21f1 *=0x000000011903ba00 offset=0]
         @0x00007f76b4cd208c: 1142
relocInfo@0x00007f76b4cd208c [type=1(oop) addr=0x00007f76b4cd2331 offset=322] | [oop_addr=0x00007f76b4cd2333 *=0x0000000119017f20 offset=0]
         @0x00007f76b4cd208e: 1012
relocInfo@0x00007f76b4cd208e [type=1(oop) addr=0x00007f76b4cd2343 offset=18] | [oop_addr=0x00007f76b4cd2345 *=0x0000000119017f20 offset=0]
         @0x00007f76b4cd2090: f803ad0ad0607f767449
relocInfo@0x00007f76b4cd2098 [type=7(external_word) addr=0x00007f76b4cd238c offset=73 format=1 data={ad0ad0607f76}] | [target=0x00007f76ad0ad060]
         @0x00007f76b4cd209a: a033
relocInfo@0x00007f76b4cd209a [type=10(poll) addr=0x00007f76b4cd23bf offset=51]
         @0x00007f76b4cd209c: f010ccb2
relocInfo@0x00007f76b4cd209e [type=12(metadata) addr=0x00007f76b4cd2471 offset=178 format=3 data=16] | [metadata_addr=0x00007f76b4cd2860 *=0x00000008000407c0 offset=0]metadata_value=0x00000008000407c0: {type array byte}
         @0x00007f76b4cd20a0: b089
relocInfo@0x00007f76b4cd20a0 [type=11(poll_return) addr=0x00007f76b4cd24fa offset=137]
         @0x00007f76b4cd20a2: c03a
relocInfo@0x00007f76b4cd20a2 [type=12(metadata) addr=0x00007f76b4cd2534 offset=58] | [metadata_addr=0x00007f76b4cd2536 *=0x00000008000407c0 offset=0]metadata_value=0x00000008000407c0: {type array byte}
         @0x00007f76b4cd20a4: 6413
relocInfo@0x00007f76b4cd20a4 [type=6(runtime_call) addr=0x00007f76b4cd2547 offset=19 format=1] | [destination=0x00007f76ad074720]
         @0x00007f76b4cd20a6: 6454
relocInfo@0x00007f76b4cd20a6 [type=6(runtime_call) addr=0x00007f76b4cd259b offset=84 format=1] | [destination=0x00007f76ad11e920]
         @0x00007f76b4cd20a8: f803c20f03287f767005
relocInfo@0x00007f76b4cd20b0 [type=7(external_word) addr=0x00007f76b4cd25a0 offset=5 data={c20f03287f76}] | [target=0x00007f76c20f0328]
         @0x00007f76b4cd20b2: 640e
relocInfo@0x00007f76b4cd20b2 [type=6(runtime_call) addr=0x00007f76b4cd25ae offset=14 format=1] | [destination=0x00007f76c179e4b0]
         @0x00007f76b4cd20b4: 6431
relocInfo@0x00007f76b4cd20b4 [type=6(runtime_call) addr=0x00007f76b4cd25df offset=49 format=1] | [destination=0x00007f76ad11e920]
         @0x00007f76b4cd20b6: f803c20f03287f767005
relocInfo@0x00007f76b4cd20be [type=7(external_word) addr=0x00007f76b4cd25e4 offset=5 data={c20f03287f76}] | [target=0x00007f76c20f0328]
         @0x00007f76b4cd20c0: 640e
relocInfo@0x00007f76b4cd20c0 [type=6(runtime_call) addr=0x00007f76b4cd25f2 offset=14 format=1] | [destination=0x00007f76c179e4b0]
         @0x00007f76b4cd20c2: 6425
relocInfo@0x00007f76b4cd20c2 [type=6(runtime_call) addr=0x00007f76b4cd2617 offset=37 format=1] | [destination=0x00007f76ad11e920]
         @0x00007f76b4cd20c4: f803c20f03287f767005
relocInfo@0x00007f76b4cd20cc [type=7(external_word) addr=0x00007f76b4cd261c offset=5 data={c20f03287f76}] | [target=0x00007f76c20f0328]
         @0x00007f76b4cd20ce: 640e
relocInfo@0x00007f76b4cd20ce [type=6(runtime_call) addr=0x00007f76b4cd262a offset=14 format=1] | [destination=0x00007f76c179e4b0]
         @0x00007f76b4cd20d0: f803c21650b87f767006
relocInfo@0x00007f76b4cd20d8 [type=7(external_word) addr=0x00007f76b4cd2630 offset=6 data={c21650b87f76}] | [target=0x00007f76c21650b8]
         @0x00007f76b4cd20da: 640e
relocInfo@0x00007f76b4cd20da [type=6(runtime_call) addr=0x00007f76b4cd263e offset=14 format=1] | [destination=0x00007f76c179e4b0]
         @0x00007f76b4cd20dc: f803c21650b87f767006
relocInfo@0x00007f76b4cd20e4 [type=7(external_word) addr=0x00007f76b4cd2644 offset=6 data={c21650b87f76}] | [target=0x00007f76c21650b8]
         @0x00007f76b4cd20e6: 640e
relocInfo@0x00007f76b4cd20e6 [type=6(runtime_call) addr=0x00007f76b4cd2652 offset=14 format=1] | [destination=0x00007f76c179e4b0]
         @0x00007f76b4cd20e8: f803c21650b87f767006
relocInfo@0x00007f76b4cd20f0 [type=7(external_word) addr=0x00007f76b4cd2658 offset=6 data={c21650b87f76}] | [target=0x00007f76c21650b8]
         @0x00007f76b4cd20f2: 640e
relocInfo@0x00007f76b4cd20f2 [type=6(runtime_call) addr=0x00007f76b4cd2666 offset=14 format=1] | [destination=0x00007f76c179e4b0]
         @0x00007f76b4cd20f4: f803c21650b87f767006
relocInfo@0x00007f76b4cd20fc [type=7(external_word) addr=0x00007f76b4cd266c offset=6 data={c21650b87f76}] | [target=0x00007f76c21650b8]
         @0x00007f76b4cd20fe: 640e
relocInfo@0x00007f76b4cd20fe [type=6(runtime_call) addr=0x00007f76b4cd267a offset=14 format=1] | [destination=0x00007f76c179e4b0]
         @0x00007f76b4cd2100: 6445
relocInfo@0x00007f76b4cd2100 [type=6(runtime_call) addr=0x00007f76b4cd26bf offset=69 format=1] | [destination=0x00007f76ad11e920]
         @0x00007f76b4cd2102: f803c20f03287f767005
relocInfo@0x00007f76b4cd210a [type=7(external_word) addr=0x00007f76b4cd26c4 offset=5 data={c20f03287f76}] | [target=0x00007f76c20f0328]
         @0x00007f76b4cd210c: 640e
relocInfo@0x00007f76b4cd210c [type=6(runtime_call) addr=0x00007f76b4cd26d2 offset=14 format=1] | [destination=0x00007f76c179e4b0]
         @0x00007f76b4cd210e: 6419
relocInfo@0x00007f76b4cd210e [type=6(runtime_call) addr=0x00007f76b4cd26eb offset=25 format=1] | [destination=0x00007f76ad11e920]
         @0x00007f76b4cd2110: f803c20f03287f767005
relocInfo@0x00007f76b4cd2118 [type=7(external_word) addr=0x00007f76b4cd26f0 offset=5 data={c20f03287f76}] | [target=0x00007f76c20f0328]
         @0x00007f76b4cd211a: 640e
relocInfo@0x00007f76b4cd211a [type=6(runtime_call) addr=0x00007f76b4cd26fe offset=14 format=1] | [destination=0x00007f76c179e4b0]
         @0x00007f76b4cd211c: 6419
relocInfo@0x00007f76b4cd211c [type=6(runtime_call) addr=0x00007f76b4cd2717 offset=25 format=1] | [destination=0x00007f76ad11e920]
         @0x00007f76b4cd211e: f803c20f03287f767005
relocInfo@0x00007f76b4cd2126 [type=7(external_word) addr=0x00007f76b4cd271c offset=5 data={c20f03287f76}] | [target=0x00007f76c20f0328]
         @0x00007f76b4cd2128: 640e
relocInfo@0x00007f76b4cd2128 [type=6(runtime_call) addr=0x00007f76b4cd272a offset=14 format=1] | [destination=0x00007f76c179e4b0]
         @0x00007f76b4cd212a: 641d
relocInfo@0x00007f76b4cd212a [type=6(runtime_call) addr=0x00007f76b4cd2747 offset=29 format=1] | [destination=0x00007f76ad11e920]
         @0x00007f76b4cd212c: f803c20f03287f767005
relocInfo@0x00007f76b4cd2134 [type=7(external_word) addr=0x00007f76b4cd274c offset=5 data={c20f03287f76}] | [target=0x00007f76c20f0328]
         @0x00007f76b4cd2136: 640e
relocInfo@0x00007f76b4cd2136 [type=6(runtime_call) addr=0x00007f76b4cd275a offset=14 format=1] | [destination=0x00007f76c179e4b0]
         @0x00007f76b4cd2138: 6411
relocInfo@0x00007f76b4cd2138 [type=6(runtime_call) addr=0x00007f76b4cd276b offset=17 format=1] | [destination=0x00007f76ad071420]
         @0x00007f76b4cd213a: f2768005
relocInfo@0x00007f76b4cd213c [type=8(internal_word) addr=0x00007f76b4cd2770 offset=5 data=630] | [target=0x00007f76b4cd24fa]
         @0x00007f76b4cd213e: 6411
relocInfo@0x00007f76b4cd213e [type=6(runtime_call) addr=0x00007f76b4cd2781 offset=17 format=1] | [destination=0x00007f76ad11d6a0]
         @0x00007f76b4cd2140: 001f
relocInfo@0x00007f76b4cd2140 [type=0(none) addr=0x00007f76b4cd27a0 offset=31]
         @0x00007f76b4cd2142: 6400
relocInfo@0x00007f76b4cd2142 [type=6(runtime_call) addr=0x00007f76b4cd27a0 offset=0 format=1] | [destination=0x00007f76ad081a20]
         @0x00007f76b4cd2144: 640f
relocInfo@0x00007f76b4cd2144 [type=6(runtime_call) addr=0x00007f76b4cd27af offset=15 format=1] | [destination=0x00007f76ad11ec60]
         @0x00007f76b4cd2146: 0000
relocInfo@0x00007f76b4cd2146 [type=0(none) addr=0x00007f76b4cd27af offset=0]
         @0x00007f76b4cd2148: 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Dependencies:
Dependency of type abstract_with_unique_concrete_subtype
  context = *jdk.incubator.vector.VectorShuffle
  class   = jdk.incubator.vector.Byte256Vector$Byte256Shuffle
   [nmethod<=klass]jdk.incubator.vector.VectorShuffle
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.IntVector$IntSpecies
  method  = {method} {0x00007f7644618218} 'loopBound' '(I)I' in 'jdk/incubator/vector/AbstractSpecies'
  class   = jdk.incubator.vector.VectorSpecies
  method  = *{method} {0x00007f7644616178} 'loopBound' '(I)I' in 'jdk/incubator/vector/VectorSpecies'
   [nmethod<=klass]jdk.incubator.vector.IntVector$IntSpecies
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.IntVector$IntSpecies
  method  = {method} {0x00007f76446177a8} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
  class   = jdk.incubator.vector.VectorSpecies
  method  = *{method} {0x00007f7644615fb0} 'length' '()I' in 'jdk/incubator/vector/VectorSpecies'
   [nmethod<=klass]jdk.incubator.vector.IntVector$IntSpecies
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.Byte256Vector
  method  = {method} {0x00007f76446c9218} 'reinterpretAsInts' '()Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/ByteVector'
  class   = jdk.incubator.vector.ByteVector
  method  = {method} {0x00007f76446c9218} 'reinterpretAsInts' '()Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/ByteVector'
   [nmethod<=klass]jdk.incubator.vector.Byte256Vector
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.Byte256Vector$Byte256Shuffle
  method  = {method} {0x00007f76447b8be0} 'checkIndexes' '()Ljdk/incubator/vector/VectorShuffle;' in 'jdk/incubator/vector/AbstractShuffle'
  class   = jdk.incubator.vector.VectorShuffle
  method  = *{method} {0x00007f76447b49b8} 'checkIndexes' '()Ljdk/incubator/vector/VectorShuffle;' in 'jdk/incubator/vector/VectorShuffle'
   [nmethod<=klass]jdk.incubator.vector.Byte256Vector$Byte256Shuffle
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.VectorOperators$ComparisonImpl
  method  = {method} {0x00007f76447c0d08} 'opCode' '(II)I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  class   = jdk.incubator.vector.VectorOperators$OperatorImpl
  method  = {method} {0x00007f76447c0d08} 'opCode' '(II)I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
   [nmethod<=klass]jdk.incubator.vector.VectorOperators$ComparisonImpl
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.VectorOperators$ComparisonImpl
  method  = {method} {0x00007f76447c0dd8} 'opCodeRaw' '()I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  class   = jdk.incubator.vector.VectorOperators$OperatorImpl
  method  = {method} {0x00007f76447c0dd8} 'opCodeRaw' '()I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
   [nmethod<=klass]jdk.incubator.vector.VectorOperators$ComparisonImpl
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ExceptionHandlerTable (size = 24 bytes)
catch_pco = 1004 (pc=0x00007f76b4cd254c, 1 entries)
  bci -1 at scope depth 0 -> pco 1536 (pc=0x00007f76b4cd2760)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ImplicitExceptionTable (size = 3 entries, 28 bytes):
{
   < 0x00007f76b4cd21e0, 0x00007f76b4cd26d8 > < 0x00007f76b4cd2200, 0x00007f76b4cd26d8 > < 0x00007f76b4cd2220, 0x00007f76b4cd26d8 > 
}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded oops:
#0: 0x0000000000000000 NULL-oop
#1: 0x0000000119017e40 a 'java/lang/Class'{0x0000000119017e40} = 'jdk/incubator/vector/Byte256Vector'
#2: 0x0000000119047f98 a 'java/lang/Class'{0x0000000119047f98} = 'jdk/incubator/vector/Byte256Vector$Byte256Shuffle'
#3: 0x000000011903baa0 a 'jdk/incubator/vector/IntVector$IntSpecies'{0x000000011903baa0}
#4: 0x0000000119023d68 a 'java/lang/Class'{0x0000000119023d68} = 'jdk/incubator/vector/Int256Vector'
#5: 0x0000000119047e88 a 'java/lang/Class'{0x0000000119047e88} = 'jdk/incubator/vector/Byte256Vector$Byte256Mask'
#6: 0x000000011903b970 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x000000011903b970}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded metadata:
# 0: 0x0000000000000000 NULL-oop
# 1: 0x00007f7644411bf0 {method} {0x00007f7644411bf0} 'workload1_vector' '([I[II)I' in 'bytereverse'
# 2: 0x00007f764441b780 {method} {0x00007f764441b780} 'intoArray' '([II)V' in 'jdk/incubator/vector/IntVector'
# 3: 0x0000000800040ba0 {type array int}
# 4: 0x00007f764441afd0 {method} {0x00007f764441afd0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[II)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/IntVector'
# 5: 0x00007f7644618218 {method} {0x00007f7644618218} 'loopBound' '(I)I' in 'jdk/incubator/vector/AbstractSpecies'
# 6: 0x00007f764441df10 {method} {0x00007f764441df10} 'reinterpretAsBytes' '()Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/IntVector'
# 7: 0x00007f764464e5e8 {method} {0x00007f764464e5e8} 'asByteVectorRaw' '()Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/Int256Vector'
# 8: 0x00007f7644648c88 {method} {0x00007f7644648c88} 'asByteVectorRaw' '()Ljdk/incubator/vector/Byte256Vector;' in 'jdk/incubator/vector/Int256Vector'
# 9: 0x00007f7644603ba8 {method} {0x00007f7644603ba8} 'asByteVectorRawTemplate' '()Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/AbstractVector'
#10: 0x00007f7644603ad8 {method} {0x00007f7644603ad8} 'asVectorRawTemplate' '(Ljdk/incubator/vector/LaneType;)Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractVector'
#11: 0x00007f7644605e50 {method} {0x00007f7644605e50} 'convert0' '(CLjdk/incubator/vector/AbstractSpecies;)Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractVector'
#12: 0x00007f76446d9b08 {method} {0x00007f76446d9b08} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/ByteVector$ByteSpecies'
#13: 0x00007f76446d8c38 {method} {0x00007f76446d8c38} 'dummyVector' '()Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector$ByteSpecies'
#14: 0x00007f76446b2a80 {method} {0x00007f76446b2a80} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
#15: 0x00007f76446b2d70 {method} {0x00007f76446b2d70} 'roundDown' '(II)I' in 'jdk/incubator/vector/VectorIntrinsics'
#16: 0x00000008000407c0 {type array byte}
#17: 0x00007f76447b4cd8 {method} {0x00007f76447b4cd8} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[II)Ljdk/incubator/vector/VectorShuffle;' in 'jdk/incubator/vector/VectorShuffle'
#18: 0x00007f7644618f60 {method} {0x00007f7644618f60} 'shuffleFromArray' '([II)Ljdk/incubator/vector/VectorShuffle;' in 'jdk/incubator/vector/AbstractSpecies'
#19: 0x00007f76447826f0 {method} {0x00007f76447826f0} 'shuffleFromArray' '([II)Ljdk/incubator/vector/AbstractShuffle;' in 'jdk/incubator/vector/Byte256Vector'
#20: 0x00007f76446fcbf8 {method} {0x00007f76446fcbf8} 'shuffleFromArray' '([II)Ljdk/incubator/vector/Byte256Vector$Byte256Shuffle;' in 'jdk/incubator/vector/Byte256Vector'
#21: 0x00007f76447b6b30 {method} {0x00007f76447b6b30} '<init>' '([II)V' in 'jdk/incubator/vector/Byte256Vector$Byte256Shuffle'
#22: 0x00007f76447b8280 {method} {0x00007f76447b8280} '<init>' '(I[II)V' in 'jdk/incubator/vector/AbstractShuffle'
#23: 0x00007f76447b8470 {method} {0x00007f76447b8470} 'prepare' '(I[II)[B' in 'jdk/incubator/vector/AbstractShuffle'
#24: 0x00007f76447b92d8 {method} {0x00007f76447b92d8} 'partiallyWrapIndex' '(II)I' in 'jdk/incubator/vector/AbstractShuffle'
#25: 0x00007f76447b93e8 {method} {0x00007f76447b93e8} 'checkIndex0' '(IIB)I' in 'jdk/incubator/vector/AbstractShuffle'
#26: 0x00007f76441639c8 {method} {0x00007f76441639c8} 'checkIndex' '(II)I' in 'java/util/Objects'
#27: 0x00007f7644780c78 {method} {0x00007f7644780c78} 'rearrange' '(Ljdk/incubator/vector/VectorShuffle;)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/Byte256Vector'
#28: 0x00007f76446fefe0 {method} {0x00007f76446fefe0} 'rearrange' '(Ljdk/incubator/vector/VectorShuffle;)Ljdk/incubator/vector/Byte256Vector;' in 'jdk/incubator/vector/Byte256Vector'
#29: 0x00007f76446c3230 {method} {0x00007f76446c3230} 'rearrangeTemplate' '(Ljava/lang/Class;Ljdk/incubator/vector/VectorShuffle;)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector'
#30: 0x00007f76447b8be0 {method} {0x00007f76447b8be0} 'checkIndexes' '()Ljdk/incubator/vector/VectorShuffle;' in 'jdk/incubator/vector/AbstractShuffle'
#31: 0x00000008000dd220 'jdk/incubator/vector/VectorShuffle'
#32: 0x00000008000dd710 'jdk/incubator/vector/Byte256Vector$Byte256Shuffle'
#33: 0x00000008000cc920 'jdk/incubator/vector/IntVector$IntSpecies'
#34: 0x00000008000cc158 'jdk/incubator/vector/VectorSpecies'
#35: 0x00007f7644616178 {method} {0x00007f7644616178} 'loopBound' '(I)I' in 'jdk/incubator/vector/VectorSpecies'
#36: 0x00007f76446177a8 {method} {0x00007f76446177a8} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
#37: 0x00007f7644615fb0 {method} {0x00007f7644615fb0} 'length' '()I' in 'jdk/incubator/vector/VectorSpecies'
#38: 0x00000008000d8a78 'jdk/incubator/vector/Byte256Vector'
#39: 0x00007f76446c9218 {method} {0x00007f76446c9218} 'reinterpretAsInts' '()Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/ByteVector'
#40: 0x00000008000d68a0 'jdk/incubator/vector/ByteVector'
#41: 0x00007f76447b49b8 {method} {0x00007f76447b49b8} 'checkIndexes' '()Ljdk/incubator/vector/VectorShuffle;' in 'jdk/incubator/vector/VectorShuffle'
#42: 0x00000008000df9e0 'jdk/incubator/vector/VectorOperators$ComparisonImpl'
#43: 0x00007f76447c0d08 {method} {0x00007f76447c0d08} 'opCode' '(II)I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
#44: 0x00000008000de600 'jdk/incubator/vector/VectorOperators$OperatorImpl'
#45: 0x00007f76447c0dd8 {method} {0x00007f76447c0dd8} 'opCodeRaw' '()I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

============================= C2-compiled nmethod ==============================
----------------------- MetaData before Compile_id = 1123 ------------------------
{method}
 - this oop:          0x00007f7644411bf0
 - method holder:     'bytereverse'
 - constants:         0x00007f76444110f0 constant pool [230]/operands[20] {0x00007f76444110f0} for 'bytereverse' cache=0x00007f7644700000
 - access:            0xc1000009  public static 
 - name:              'workload1_vector'
 - signature:         '([I[II)I'
 - max stack:         5
 - max locals:        7
 - size of params:    3
 - method size:       13
 - vtable index:      -2
 - i2i entry:         0x00007f76ad00dc00
 - adapters:          AHE@0x00007f76bc3aa290: 0xbba i2c: 0x00007f76ad0a8360 c2i: 0x00007f76ad0a8447 c2iUV: 0x00007f76ad0a8411 c2iNCI: 0x00007f76ad0a8484
 - compiled entry     0x00007f76ad0a8447
 - code size:         98
 - code start:        0x00007f7644411b78
 - code end (excl):   0x00007f7644411bda
 - method data:       0x00007f76447011e8
 - checked ex length: 0
 - linenumber start:  0x00007f7644411bda
 - localvar length:   0

------------------------ OptoAssembly for Compile_id = 1123 -----------------------
#
#  int ( int[int:>=0]:exact *, int[int:>=0]:exact *, int )
#
#r018 rsi:rsi   : parm 0: int[int:>=0]:exact *
#r016 rdx:rdx   : parm 1: int[int:>=0]:exact *
#r010 rcx   : parm 2: int
# -- Old rsp -- Framesize: 128 --
#r591 rsp+124: in_preserve
#r590 rsp+120: return address
#r589 rsp+116: in_preserve
#r588 rsp+112: saved fp register
#r587 rsp+108: pad2, stack alignment
#r586 rsp+104: pad2, stack alignment
#r585 rsp+100: Fixed slot 1
#r584 rsp+96: Fixed slot 0
#r615 rsp+92: spill
#r614 rsp+88: spill
#r613 rsp+84: spill
#r612 rsp+80: spill
#r611 rsp+76: spill
#r610 rsp+72: spill
#r609 rsp+68: spill
#r608 rsp+64: spill
#r607 rsp+60: spill
#r606 rsp+56: spill
#r605 rsp+52: spill
#r604 rsp+48: spill
#r603 rsp+44: spill
#r602 rsp+40: spill
#r601 rsp+36: spill
#r600 rsp+32: spill
#r599 rsp+28: spill
#r598 rsp+24: spill
#r597 rsp+20: spill
#r596 rsp+16: spill
#r595 rsp+12: spill
#r594 rsp+ 8: spill
#r593 rsp+ 4: spill
#r592 rsp+ 0: spill
#
000     N1: #	out( B1 ) <- in( B52 B53 B54 B51 B48 B49 B56 B45 B39 B47 B55 B46 )  Freq: 1

000     B1: #	out( B37 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
000     # stack bang (1240 bytes)
	pushq   rbp	# Save rbp
	subq    rsp, #112	# Create frame

00c     movq    R10, RDX	# spill
00f     movq    R9, java/lang/Class:exact *	# ptr
019     movl    R13, [R9 + #120 (8-bit)]	# int ! Field: bytereverse.LEN
01d     movl    RDX, R13	# spill
020     andl    RDX, #-8	# int
023     testl   RDX, RDX
025     jle     B37  P=0.000540 C=257331.000000

02b     B2: #	out( B52 B3 ) <- in( B1 )  Freq: 0.99946
02b     movq    RDI, RSI	# spill
02e     movl    R8, [RSI + #12 (8-bit)]	# range
032     NullCheck RSI

032     B3: #	out( B52 B4 ) <- in( B2 )  Freq: 0.999459
032     movl    R11, R8	# spill
035     addl    R11, #-7	# int
039     testl   R11, R11
        nop 	# 4 bytes pad for loops and calls
040     jl     B52  P=0.000001 C=-1.000000

046     B4: #	out( B52 B5 ) <- in( B3 )  Freq: 0.999458
046     cmpl    R8, #7
04a     je     B52  P=0.000001 C=-1.000000

050     B5: #	out( B52 B6 ) <- in( B4 )  Freq: 0.999457
050     movslq  R11, RDX	# i2l
053     movslq  R8, R8	# i2l
056     addq    R11, #7	# long
05a     addq    R8, #-7	# long
05e     andq    R11, #-8	# long
062     movl    RCX, R11	# l2i
065     movslq  R11, RCX	# i2l
068     addq    R11, #-8	# long
06c     cmpq    R11, R8	# unsigned
06f     jnb,u   B52  P=0.000001 C=-1.000000

075     B6: #	out( B53 B7 ) <- in( B5 )  Freq: 0.999456
075     movq    RCX, R10	# spill
        nop 	# 8 bytes pad for loops and calls
080     movl    R10, [R10 + #12 (8-bit)]	# range
084     NullCheck R10

084     B7: #	out( B53 B8 ) <- in( B6 )  Freq: 0.999455
084     movl    RBX, R10	# spill
087     addl    RBX, #-7	# int
08a     testl   RBX, RBX
08c     jl     B53  P=0.000001 C=-1.000000

092     B8: #	out( B53 B9 ) <- in( B7 )  Freq: 0.999454
092     cmpl    R10, #7
096     je     B53  P=0.000001 C=-1.000000

09c     B9: #	out( B53 B10 ) <- in( B8 )  Freq: 0.999453
09c     movslq  R10, R10	# i2l
09f     addq    R10, #-7	# long
0a3     cmpq    R11, R10	# unsigned
0a6     jnb,u   B53  P=0.000001 C=-1.000000

0ac     B10: #	out( B53 B11 ) <- in( B9 )  Freq: 0.999452
0ac     movl    R11, [R9 + #116 (8-bit)]	# compressed ptr ! Field: bytereverse.idx
0b0     movl    R9, [R12 + R11 << 3 + #12] (compressed oop addressing)	# range
0b5     NullCheck R11

0b5     B11: #	out( B53 B12 ) <- in( B10 )  Freq: 0.999451
0b5     testl   R9, R9	# unsigned
0b8     jbe,u   B53  P=0.000001 C=-1.000000

0be     B12: #	out( B53 B13 ) <- in( B11 )  Freq: 0.99945
        nop 	# 2 bytes pad for loops and calls
0c0     cmpl    R9, #31	# unsigned
0c4     jbe,u   B53  P=0.000001 C=-1.000000

0ca     B13: #	out( B54 B14 ) <- in( B12 )  Freq: 0.999449
0ca     cmpl    RDX, #2147483640
0d0     jg     B54  P=0.000001 C=-1.000000

0d6     B14: #	out( B31 ) <- in( B13 )  Freq: 0.999448
0d6     decode_heap_oop_not_null RBP,R11
0da     movl    R10, #-1	# int
0e0     mask_all_evexI_LE32 K6, R10 	
0e5     xorl    RBX, RBX	# int
0e7     jmp     B31
        nop 	# 4 bytes pad for loops and calls

0f0     B15: #	out( B16 ) <- in( B20 ) top-of-loop Freq: 52376.2
0f0     movl    R9, R11	# spill

0f3     B16: #	out( B45 B17 ) <- in( B36 B15 ) Loop( B16-B15 inner main of N150) Freq: 54013.1
0f3     movslq  R14, R9	# i2l
0f6     movl    R10, [RBP + #16 + R14 << #2]	# int
0fb     movl    R11, R10	# spill
0fe     andl    R11, #31	# int
102     cmpl    R11, R10
105     jne     B45  P=0.000000 C=50336.000000

10b     B17: #	out( B42 B18 ) <- in( B16 )  Freq: 54013
10b     movb    [RAX + #16 + R14], R11	# byte
110     movl    R10, [RBP + #20 + R14 << #2]	# int
115     movl    R11, R10	# spill
118     andl    R11, #31	# int
        nop 	# 4 bytes pad for loops and calls
120     cmpl    R11, R10
123     jne     B42  P=0.000000 C=50336.000000

129     B18: #	out( B43 B19 ) <- in( B17 )  Freq: 54013
129     movb    [RAX + #17 + R14], R11	# byte
12e     movl    R10, [RBP + #24 + R14 << #2]	# int
133     movl    R11, R10	# spill
136     andl    R11, #31	# int
        nop 	# 6 bytes pad for loops and calls
140     cmpl    R11, R10
143     jne     B43  P=0.000000 C=50336.000000

149     B19: #	out( B44 B20 ) <- in( B18 )  Freq: 54013
149     movb    [RAX + #18 + R14], R11	# byte
14e     movl    R10, [RBP + #28 + R14 << #2]	# int
153     movl    R11, R10	# spill
156     andl    R11, #31	# int
        nop 	# 6 bytes pad for loops and calls
160     cmpl    R11, R10
163     jne     B44  P=0.000000 C=50336.000000

169     B20: #	out( B15 B21 ) <- in( B19 )  Freq: 54013
169     movb    [RAX + #19 + R14], R11	# byte
16e     movl    R11, R9	# spill
171     addl    R11, #4	# int
175     cmpl    R11, #29
179     jl     B15	# loop end  P=0.969697 C=50304.000000

17f     B21: #	out( B27 B22 ) <- in( B20 )  Freq: 1636.75
        nop 	# 1 bytes pad for loops and calls
180     cmpl    R11, #32
184     jge     B27  P=0.500000 C=-1.000000

18a     B22: #	out( B48 B23 ) <- in( B21 )  Freq: 818.377
18a     # castII of R9
18a     addl    R9, #4	# int
18e     cmpl    R9, RSI	# unsigned
191     jnb,u   B48  P=0.000001 C=-1.000000

197     B23: #	out( B49 B24 ) <- in( B22 )  Freq: 818.377
197     cmpl    R9, #32	# unsigned
        nop 	# 5 bytes pad for loops and calls
1a0     jnb,u   B49  P=0.000001 C=-1.000000

1a6     B24: #	out( B45 B25 ) <- in( B23 B25 ) Loop( B24-B25 inner post of N433) Freq: 1636.75
1a6     movslq  R14, R9	# i2l
1a9     movl    R10, [RBP + #16 + R14 << #2]	# int
1ae     movl    R11, R10	# spill
1b1     andl    R11, #31	# int
1b5     cmpl    R11, R10
1b8     jne     B45  P=0.000000 C=50336.000000

1be     B25: #	out( B24 B26 ) <- in( B24 )  Freq: 1636.75
1be     movb    [RAX + #16 + R14], R11	# byte
1c3     incl    R9	# int
1c6     cmpl    R9, #32
1ca     jl,s   B24	# loop end  P=0.500000 C=50304.000000

1cc     B26: #	out( B28 ) <- in( B25 )  Freq: 818.375
1cc     load_vector XMM0,[RAX + #16 (8-bit)]
1d1     movq    R10, byte[int:32]<ciTypeArray length=32 type=<ciTypeArrayKlass name=[B ident=1254 address=0x00007f762801bf10> ident=1582 address=0x00007f761c08de80> *	# ptr
1db     load_vector XMM1,[R10 + #16 (8-bit)]
1e1     jmp,s   B28

1e3     B27: #	out( B28 ) <- in( B21 )  Freq: 818.377
1e3     load_vector XMM0,[RAX + #16 (8-bit)]
1e8     movq    R10, byte[int:32]<ciTypeArray length=32 type=<ciTypeArrayKlass name=[B ident=1254 address=0x00007f762801bf10> ident=1582 address=0x00007f761c08de80> *	# ptr
1f2     load_vector XMM1,[R10 + #16 (8-bit)]

1f8     B28: #	out( B51 B29 ) <- in( B26 B27 )  Freq: 1636.75
1f8     vector_compared_evex K7,XMM0,XMM1,#3	!
1ff     vptest_anytrue_lt8_evex R11,K7,K6	! using RFLAGS as TEMP
20c     testl   R11, R11
20f     jne     B51  P=0.000000 C=11499.000000

215     B29: #	out( B38 B30 ) <- in( B28 )  Freq: 1636.75
215     # TLS is in R15
215     movq    R10, [R15 + #912 (32-bit)]	# ptr
21c     vector_load_shuffle XMM0, XMM0
21c     vector_rearrange XMM1, XMM0, XMM4	! using XMM2, XMM3, R11 as TEMP
23a     vector_reinterpret XMM1	!
23a     store_vector [RCX + #16 + RBX << #2],XMM1
	
240     addl    RBX, #8	# int
243     testl   rax, [R10]	# Safepoint: poll for GC        # bytereverse::workload1_vector @ bci:71 (line 38) L[0]=RDI L[1]=RCX L[2]=_ L[3]=RBX L[4]=_ L[5]=_ L[6]=_
        # OopMap {r8=NarrowOop rcx=Oop rdi=Oop rbp=Oop off=579/0x243}
246     cmpl    RBX, RDX
248     jge     B38	# loop end  P=0.000540 C=257191.000000

24e     B30: #	out( B31 ) <- in( B29 )  Freq: 1635.87
24e     movl    R11, R8	# spill
251     movl    R9, RSI	# spill

254     B31: #	out( B40 B32 ) <- in( B14 B30 ) Loop( B31-B30 ) Freq: 1636.87
254     load_vector XMM4,[RDI + #16 + RBX << #2]
25a     # TLS is in R15
25a     movq    RAX, [R15 + #264 (32-bit)]	# ptr
261     movq    R10, RAX	# spill
264     addq    R10, #48	# ptr
268     vector_reinterpret XMM4	!
268     # TLS is in R15
268     cmpq    R10, [R15 + #280 (32-bit)]	# raw ptr
26f     jnb,u   B40  P=0.000100 C=-1.000000

275     B32: #	out( B33 ) <- in( B31 )  Freq: 1636.7
275     movl    [rsp + #40], R9	# spill
27a     movl    [rsp + #36], R11	# spill
27f     # TLS is in R15
27f     movq    [R15 + #264 (32-bit)], R10	# ptr
286     PREFETCHW [R10 + #192 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
28e     movq    [RAX], #1	# long
295     PREFETCHW [R10 + #256 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
29d     movl    [RAX + #8 (8-bit)], narrowklass: precise [byte: :Constant:exact *	# compressed klass ptr
2a4     PREFETCHW [R10 + #320 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
2ac     movl    [RAX + #12 (8-bit)], #32	# int
2b3     PREFETCHW [R10 + #384 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
2bb     movq    R11, RAX	# spill
2be     addq    R11, #16	# ptr
2c2     clear_mem_imm R11 , #4  
	

2cc     B33: #	out( B50 B34 ) <- in( B41 B32 )  Freq: 1636.87
2cc     
2cc     # checkcastPP of RAX
2cc     movl    R8, [rsp + #36]	# spill
2d1     movl    R10, [R12 + R8 << 3 + #16] (compressed oop addressing)	# int
2d6     movl    R11, R10	# spill
2d9     andl    R11, #31	# int
        nop 	# 3 bytes pad for loops and calls
2e0     cmpl    R11, R10
2e3     jne     B50  P=0.000000 C=50336.000000

2e9     B34: #	out( B46 B35 ) <- in( B33 )  Freq: 1636.87
2e9     movl    R10, [rsp + #40]	# spill
2ee     cmpl    R10, #1	# unsigned
2f2     jbe,u   B46  P=0.000001 C=-1.000000

2f8     B35: #	out( B47 B36 ) <- in( B34 )  Freq: 1636.86
        nop 	# 8 bytes pad for loops and calls
300     cmpl    R10, #4	# unsigned
304     jbe,u   B47  P=0.000001 C=-1.000000

30a     B36: #	out( B16 ) <- in( B35 )  Freq: 1636.86
30a     movb    [RAX + #16 (8-bit)], R11	# byte
30e     movl    R9, #1	# int
314     movl    RSI, [rsp + #40]	# spill
318     jmp     B16

31d     B37: #	out( B38 ) <- in( B1 )  Freq: 0.00054016
31d     xorl    RBX, RBX	# int
31f     movq    RDI, RSI	# spill
322     movq    RCX, R10	# spill

325     B38: #	out( B55 B39 ) <- in( B29 B37 )  Freq: 0.884611
325     cmpl    RBX, R13
328     jl     B55  P=0.000000 C=139.000000

32e     B39: #	out( N1 ) <- in( B38 )  Freq: 0.88461
32e     movl    RAX, RBX	# spill
330     vzeroupper
	addq    rsp, 112	# Destroy frame
	popq    rbp
	cmpq     rsp, poll_offset[r15_thread] 
	ja       #safepoint_stub	# Safepoint: poll for GC

345     ret

346     B40: #	out( B56 B41 ) <- in( B31 )  Freq: 0.163714
346     movl    [rsp + #40], R9	# spill
34b     movl    [rsp + #36], R11	# spill
350     vmovdqu [rsp + 64],XMM4	# spill
356     movl    [rsp + #32], RBX	# spill
35a     kmovq   [rsp + #24] , K6	# spill
361     movl    [rsp + #20], RDX	# spill
365     movl    [rsp + #16], R13	# spill
36a     movq    [rsp + #8], RCX	# spill
36f     movq    [rsp + #0], RDI	# spill
373     movq    RSI, precise [byte: :Constant:exact *	# ptr
37d     movl    RDX, #32	# int
        nop 	# 2 bytes pad for loops and calls
384     call,static  wrapper for: _new_array_Java
        # jdk.incubator.vector.AbstractShuffle::prepare @ bci:1 (line 55) L[0]=#32 L[1]=rsp + #36 L[2]=#0 L[3]=_ L[4]=_ L[5]=_
        # jdk.incubator.vector.AbstractShuffle::<init> @ bci:4 (line 47) L[0]=_ L[1]=_ L[2]=_ L[3]=_ STK[0]=#ScObj0
        # ScObj0 jdk/incubator/vector/Byte256Vector$Byte256Shuffle={ [payload :0]=#NULL }
        # jdk.incubator.vector.Byte256Vector$Byte256Shuffle::<init> @ bci:6 (line 816) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.Byte256Vector::shuffleFromArray @ bci:6 (line 161) L[0]=_ L[1]=_ L[2]=_ STK[0]=#ScObj0
        # ScObj0 jdk/incubator/vector/Byte256Vector$Byte256Shuffle={ [payload :0]=#NULL }
        # jdk.incubator.vector.Byte256Vector::shuffleFromArray @ bci:3 (line 41) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.AbstractSpecies::shuffleFromArray @ bci:6 (line 322) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.VectorShuffle::fromArray @ bci:8 (line 314) L[0]=_ L[1]=_ L[2]=_ L[3]=_
        # bytereverse::workload1_vector @ bci:42 (line 41) L[0]=rsp + #0 L[1]=rsp + #8 L[2]=_ L[3]=rsp + #32 L[4]=_ L[5]=_ L[6]=_ STK[0]=#ScObj0
        # ScObj0 jdk/incubator/vector/Byte256Vector={ [payload :0]=rsp + #64 }
        # OopMap {rbp=Oop [0]=Oop [8]=Oop [36]=NarrowOop off=908/0x38c}

38c     B41: #	out( B33 ) <- in( B40 )  Freq: 0.163711
        # Block is sole successor of call
38c     movq    RDI, [rsp + #0]	# spill
390     movq    RCX, [rsp + #8]	# spill
395     movl    R13, [rsp + #16]	# spill
39a     movl    RDX, [rsp + #20]	# spill
39e     kmovq   K6, [rsp + #24]	# spill
3a5     movl    RBX, [rsp + #32]	# spill
3a9     vmovdqu XMM4,[rsp + 64]	# spill
3af     jmp     B33

3b4     B42: #	out( B45 ) <- in( B17 )  Freq: 0.0270065
3b4     incl    R9	# int
3b7     jmp,s   B45

3b9     B43: #	out( B45 ) <- in( B18 )  Freq: 0.0270065
3b9     addl    R9, #2	# int
3bd     jmp,s   B45

3bf     B44: #	out( B45 ) <- in( B19 )  Freq: 0.0270065
3bf     addl    R9, #3	# int

3c3     B45: #	out( N1 ) <- in( B24 B50 B16 B43 B42 B44 )  Freq: 0.109663
3c3     movl    RSI, #-187	# int
3c8     movq    RBP, RDI	# spill
3cb     movq    [rsp + #0], RCX	# spill
3cf     movl    [rsp + #8], RBX	# spill
3d3     movl    [rsp + #12], R8	# spill
3d8     movq    [rsp + #16], RAX	# spill
3dd     movl    [rsp + #24], R9	# spill
3e2     movl    [rsp + #36], R11	# spill
3e7     movl    [rsp + #40], R10	# spill
3ec     vmovdqu [rsp + 64],XMM4	# spill
        nop 	# 2 bytes pad for loops and calls
3f4     call,static  wrapper for: uncommon_trap(reason='unstable_if' action='reinterpret' debug_id='0')
        # jdk.incubator.vector.AbstractShuffle::checkIndex0 @ bci:12 (line 209) L[0]=rsp + #40 L[1]=#32 L[2]=#-1 L[3]=rsp + #36 STK[0]=rsp + #36 STK[1]=rsp + #40
        # jdk.incubator.vector.AbstractShuffle::partiallyWrapIndex @ bci:3 (line 202) L[0]=_ L[1]=_
        # jdk.incubator.vector.AbstractShuffle::prepare @ bci:24 (line 58) L[0]=#32 L[1]=rsp + #12 L[2]=#0 L[3]=rsp + #16 L[4]=rsp + #24 L[5]=_
        # jdk.incubator.vector.AbstractShuffle::<init> @ bci:4 (line 47) L[0]=_ L[1]=_ L[2]=_ L[3]=_ STK[0]=#ScObj0
        # ScObj0 jdk/incubator/vector/Byte256Vector$Byte256Shuffle={ [payload :0]=#NULL }
        # jdk.incubator.vector.Byte256Vector$Byte256Shuffle::<init> @ bci:6 (line 816) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.Byte256Vector::shuffleFromArray @ bci:6 (line 161) L[0]=_ L[1]=_ L[2]=_ STK[0]=#ScObj0
        # ScObj0 jdk/incubator/vector/Byte256Vector$Byte256Shuffle={ [payload :0]=#NULL }
        # jdk.incubator.vector.Byte256Vector::shuffleFromArray @ bci:3 (line 41) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.AbstractSpecies::shuffleFromArray @ bci:6 (line 322) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.VectorShuffle::fromArray @ bci:8 (line 314) L[0]=_ L[1]=_ L[2]=_ L[3]=_
        # bytereverse::workload1_vector @ bci:42 (line 41) L[0]=RBP L[1]=rsp + #0 L[2]=_ L[3]=rsp + #8 L[4]=_ L[5]=_ L[6]=_ STK[0]=#ScObj0
        # ScObj0 jdk/incubator/vector/Byte256Vector={ [payload :0]=rsp + #64 }
        # OopMap {rbp=Oop [0]=Oop [12]=NarrowOop [16]=Oop off=1020/0x3fc}
3fc     stop	# ShouldNotReachHere

410     B46: #	out( N1 ) <- in( B34 )  Freq: 0.00163687
410     stop	# ShouldNotReachHere

424     B47: #	out( N1 ) <- in( B35 )  Freq: 0.00163686
424     stop	# ShouldNotReachHere

438     B48: #	out( N1 ) <- in( B22 )  Freq: 0.000829245
438     stop	# ShouldNotReachHere

44c     B49: #	out( N1 ) <- in( B23 )  Freq: 0.000829244
44c     stop	# ShouldNotReachHere

460     B50: #	out( B45 ) <- in( B33 )  Freq: 0.000818433
460     xorl    R9, R9	# int
463     jmp     B45

468     B51: #	out( N1 ) <- in( B28 )  Freq: 0.000780464
468     movl    RSI, #-187	# int
46d     vector_store_mask XMM0, K7 	! elem size is #1 byte[s]
478     movq    RBP, RDI	# spill
47b     movq    [rsp + #0], RCX	# spill
47f     movl    [rsp + #8], RBX	# spill
483     movl    [rsp + #12], R11	# spill
488     vmovdqu [rsp + 32],XMM4	# spill
48e     movq    [rsp + #16], RAX	# spill
493     vmovdqu [rsp + 64],XMM0	# spill
        nop 	# 3 bytes pad for loops and calls
49c     call,static  wrapper for: uncommon_trap(reason='unstable_if' action='reinterpret' debug_id='0')
        # jdk.incubator.vector.AbstractShuffle::checkIndexes @ bci:32 (line 128) L[0]=#ScObj0 L[1]=_ L[2]=#ScObj1 L[3]=_ STK[0]=rsp + #12
        # ScObj0 jdk/incubator/vector/Byte256Vector$Byte256Shuffle={ [payload :0]=rsp + #16 }
        # ScObj1 jdk/incubator/vector/Byte256Vector$Byte256Mask={ [payload :0]=rsp + #64 }
        # jdk.incubator.vector.ByteVector::rearrangeTemplate @ bci:1 (line 2259) L[0]=#ScObj0 L[1]=#Ptr0x00007f75ec108528 L[2]=#ScObj1
        # ScObj0 jdk/incubator/vector/Byte256Vector={ [payload :0]=rsp + #32 }
        # ScObj1 jdk/incubator/vector/Byte256Vector$Byte256Shuffle={ [payload :0]=rsp + #16 }
        # jdk.incubator.vector.Byte256Vector::rearrange @ bci:7 (line 446) L[0]=_ L[1]=_
        # jdk.incubator.vector.Byte256Vector::rearrange @ bci:2 (line 41) L[0]=_ L[1]=_
        # bytereverse::workload1_vector @ bci:45 (line 41) L[0]=RBP L[1]=rsp + #0 L[2]=_ L[3]=rsp + #8 L[4]=_ L[5]=_ L[6]=_
        # OopMap {rbp=Oop [0]=Oop [16]=Oop off=1188/0x4a4}
4a4     stop	# ShouldNotReachHere

4b8     B52: #	out( N1 ) <- in( B5 B2 B3 B4 )  Freq: 4.03765e-06
4b8     movl    RSI, #-138	# int
4bd     movq    RBP, RDI	# spill
4c0     movq    [rsp + #0], R10	# spill
4c4     movl    [rsp + #8], RDX	# spill
4c8     call,static  wrapper for: uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')
        # bytereverse::workload1_vector @ bci:17 (line 38) L[0]=RBP L[1]=rsp + #0 L[2]=_ L[3]=#0 L[4]=_ L[5]=_ L[6]=_ STK[0]=#0 STK[1]=rsp + #8
        # OopMap {rbp=Oop [0]=Oop off=1232/0x4d0}
4d0     stop	# ShouldNotReachHere

4e4     B53: #	out( N1 ) <- in( B12 B11 B10 B6 B7 B8 B9 )  Freq: 7.04926e-06
4e4     movl    RSI, #-66	# int
4e9     movq    RBP, RDI	# spill
4ec     movq    [rsp + #0], RCX	# spill
4f0     movl    [rsp + #8], RDX	# spill
4f4     call,static  wrapper for: uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')
        # bytereverse::workload1_vector @ bci:17 (line 38) L[0]=RBP L[1]=rsp + #0 L[2]=_ L[3]=#0 L[4]=_ L[5]=_ L[6]=_ STK[0]=#0 STK[1]=rsp + #8
        # OopMap {rbp=Oop [0]=Oop off=1276/0x4fc}
4fc     stop	# ShouldNotReachHere

510     B54: #	out( N1 ) <- in( B13 )  Freq: 1.01272e-06
510     movl    RSI, #-146	# int
515     movq    RBP, RDI	# spill
518     movq    [rsp + #0], RCX	# spill
51c     movl    [rsp + #8], RDX	# spill
520     call,static  wrapper for: uncommon_trap(reason='loop_limit_check' action='maybe_recompile' debug_id='0')
        # bytereverse::workload1_vector @ bci:17 (line 38) L[0]=RBP L[1]=rsp + #0 L[2]=_ L[3]=#0 L[4]=_ L[5]=_ L[6]=_ STK[0]=#0 STK[1]=rsp + #8
        # OopMap {rbp=Oop [0]=Oop off=1320/0x528}
528     stop	# ShouldNotReachHere

53c     B55: #	out( N1 ) <- in( B38 )  Freq: 4.21815e-07
53c     movl    RSI, #-187	# int
541     movq    RBP, RDI	# spill
544     movq    [rsp + #0], RCX	# spill
548     movl    [rsp + #12], RBX	# spill
54c     movl    [rsp + #16], R13	# spill
        nop 	# 3 bytes pad for loops and calls
554     call,static  wrapper for: uncommon_trap(reason='unstable_if' action='reinterpret' debug_id='0')
        # bytereverse::workload1_vector @ bci:78 (line 46) L[0]=RBP L[1]=rsp + #0 L[2]=_ L[3]=rsp + #12 L[4]=_ L[5]=_ L[6]=_ STK[0]=rsp + #12 STK[1]=rsp + #16
        # OopMap {rbp=Oop [0]=Oop off=1372/0x55c}
55c     stop	# ShouldNotReachHere

570     B56: #	out( N1 ) <- in( B40 )  Freq: 1.63714e-06
570     # exception oop is in rax; no code emitted
570     movq    RSI, RAX	# spill
573     vzeroupper
	addq    rsp, 112	# Destroy frame
	popq    rbp

57b     jmp     rethrow_stub

--------------------------------------------------------------------------------
----------------------------------- Assembly -----------------------------------

Compiled method (c2)    1891 1123       4       bytereverse::workload1_vector (98 bytes)
 total in heap  [0x00007f76b4cd3210,0x00007f76b4cd42b0] = 4256
 relocation     [0x00007f76b4cd3380,0x00007f76b4cd3430] = 176
 main code      [0x00007f76b4cd3440,0x00007f76b4cd39e0] = 1440
 stub code      [0x00007f76b4cd39e0,0x00007f76b4cd39f8] = 24
 oops           [0x00007f76b4cd39f8,0x00007f76b4cd3a18] = 32
 metadata       [0x00007f76b4cd3a18,0x00007f76b4cd3b70] = 344
 scopes data    [0x00007f76b4cd3b70,0x00007f76b4cd3e40] = 720
 scopes pcs     [0x00007f76b4cd3e40,0x00007f76b4cd4250] = 1040
 dependencies   [0x00007f76b4cd4250,0x00007f76b4cd4278] = 40
 handler table  [0x00007f76b4cd4278,0x00007f76b4cd4290] = 24
 nul chk table  [0x00007f76b4cd4290,0x00007f76b4cd42b0] = 32

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x00007f7644411bf0} 'workload1_vector' '([I[II)I' in 'bytereverse'
  # parm0:    rsi:rsi   = '[I'
  # parm1:    rdx:rdx   = '[I'
  # parm2:    rcx       = int
  #           [sp+0x80]  (sp of caller)
 ;; N1: #	out( B1 ) <- in( B52 B53 B54 B51 B48 B49 B56 B45 B39 B47 B55 B46 )  Freq: 1
 ;; B1: #	out( B37 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x00007f76b4cd3440:   mov    %eax,-0x16000(%rsp)
  0x00007f76b4cd3447:   push   %rbp
  0x00007f76b4cd3448:   sub    $0x70,%rsp                   ;*invokestatic roundDown {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.AbstractSpecies::loopBound@5 (line 203)
                                                            ; - bytereverse::workload1_vector@12 (line 38)
  0x00007f76b4cd344c:   mov    %rdx,%r10
  0x00007f76b4cd344f:   movabs $0x11903ba00,%r9             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload1_vector@57 (line 43)
                                                            ;   {oop(a 'java/lang/Class'{0x000000011903ba00} = 'bytereverse')}
  0x00007f76b4cd3459:   mov    0x78(%r9),%r13d              ;*synchronization entry
                                                            ; - java.util.Objects::checkIndex@-1 (line 359)
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 52)
                                                            ; - jdk.incubator.vector.IntVector::fromArray@9 (line 2894)
                                                            ; - bytereverse::workload1_vector@25 (line 39)
  0x00007f76b4cd345d:   mov    %r13d,%edx
  0x00007f76b4cd3460:   and    $0xfffffff8,%edx
  0x00007f76b4cd3463:   test   %edx,%edx
  0x00007f76b4cd3465:   jle    0x00007f76b4cd375d
 ;; B2: #	out( B52 B3 ) <- in( B1 )  Freq: 0.99946
  0x00007f76b4cd346b:   mov    %rsi,%rdi
  0x00007f76b4cd346e:   mov    0xc(%rsi),%r8d               ; implicit exception: dispatches to 0x00007f76b4cd38f8
 ;; B3: #	out( B52 B4 ) <- in( B2 )  Freq: 0.999459
  0x00007f76b4cd3472:   mov    %r8d,%r11d
  0x00007f76b4cd3475:   add    $0xfffffff9,%r11d
  0x00007f76b4cd3479:   test   %r11d,%r11d
  0x00007f76b4cd347c:   nop
  0x00007f76b4cd347d:   nop
  0x00007f76b4cd347e:   nop
  0x00007f76b4cd347f:   nop
  0x00007f76b4cd3480:   jl     0x00007f76b4cd38f8
 ;; B4: #	out( B52 B5 ) <- in( B3 )  Freq: 0.999458
  0x00007f76b4cd3486:   cmp    $0x7,%r8d
  0x00007f76b4cd348a:   je     0x00007f76b4cd38f8
 ;; B5: #	out( B52 B6 ) <- in( B4 )  Freq: 0.999457
  0x00007f76b4cd3490:   movslq %edx,%r11
  0x00007f76b4cd3493:   movslq %r8d,%r8
  0x00007f76b4cd3496:   add    $0x7,%r11
  0x00007f76b4cd349a:   add    $0xfffffffffffffff9,%r8
  0x00007f76b4cd349e:   and    $0xfffffffffffffff8,%r11
  0x00007f76b4cd34a2:   mov    %r11d,%ecx
  0x00007f76b4cd34a5:   movslq %ecx,%r11
  0x00007f76b4cd34a8:   add    $0xfffffffffffffff8,%r11
  0x00007f76b4cd34ac:   cmp    %r8,%r11
  0x00007f76b4cd34af:   jae    0x00007f76b4cd38f8
 ;; B6: #	out( B53 B7 ) <- in( B5 )  Freq: 0.999456
  0x00007f76b4cd34b5:   mov    %r10,%rcx
  0x00007f76b4cd34b8:   nop
  0x00007f76b4cd34b9:   nop
  0x00007f76b4cd34ba:   nop
  0x00007f76b4cd34bb:   nop
  0x00007f76b4cd34bc:   nop
  0x00007f76b4cd34bd:   nop
  0x00007f76b4cd34be:   nop
  0x00007f76b4cd34bf:   nop
  0x00007f76b4cd34c0:   mov    0xc(%r10),%r10d              ; implicit exception: dispatches to 0x00007f76b4cd3924
 ;; B7: #	out( B53 B8 ) <- in( B6 )  Freq: 0.999455
  0x00007f76b4cd34c4:   mov    %r10d,%ebx
  0x00007f76b4cd34c7:   add    $0xfffffff9,%ebx
  0x00007f76b4cd34ca:   test   %ebx,%ebx
  0x00007f76b4cd34cc:   jl     0x00007f76b4cd3924
 ;; B8: #	out( B53 B9 ) <- in( B7 )  Freq: 0.999454
  0x00007f76b4cd34d2:   cmp    $0x7,%r10d
  0x00007f76b4cd34d6:   je     0x00007f76b4cd3924
 ;; B9: #	out( B53 B10 ) <- in( B8 )  Freq: 0.999453
  0x00007f76b4cd34dc:   movslq %r10d,%r10
  0x00007f76b4cd34df:   add    $0xfffffffffffffff9,%r10
  0x00007f76b4cd34e3:   cmp    %r10,%r11
  0x00007f76b4cd34e6:   jae    0x00007f76b4cd3924           ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload1_vector@57 (line 43)
 ;; B10: #	out( B53 B11 ) <- in( B9 )  Freq: 0.999452
  0x00007f76b4cd34ec:   mov    0x74(%r9),%r11d              ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 52)
                                                            ; - jdk.incubator.vector.IntVector::fromArray@9 (line 2894)
                                                            ; - bytereverse::workload1_vector@25 (line 39)
  0x00007f76b4cd34f0:   mov    0xc(%r12,%r11,8),%r9d        ; implicit exception: dispatches to 0x00007f76b4cd3924
 ;; B11: #	out( B53 B12 ) <- in( B10 )  Freq: 0.999451
  0x00007f76b4cd34f5:   test   %r9d,%r9d
  0x00007f76b4cd34f8:   jbe    0x00007f76b4cd3924
 ;; B12: #	out( B53 B13 ) <- in( B11 )  Freq: 0.99945
  0x00007f76b4cd34fe:   nop
  0x00007f76b4cd34ff:   nop
  0x00007f76b4cd3500:   cmp    $0x1f,%r9d
  0x00007f76b4cd3504:   jbe    0x00007f76b4cd3924
 ;; B13: #	out( B54 B14 ) <- in( B12 )  Freq: 0.999449
  0x00007f76b4cd350a:   cmp    $0x7ffffff8,%edx
  0x00007f76b4cd3510:   jg     0x00007f76b4cd3950
 ;; B14: #	out( B31 ) <- in( B13 )  Freq: 0.999448
  0x00007f76b4cd3516:   lea    (%r12,%r11,8),%rbp
  0x00007f76b4cd351a:   mov    $0xffffffff,%r10d
  0x00007f76b4cd3520:   kmovd  %r10d,%k6
  0x00007f76b4cd3525:   xor    %ebx,%ebx
  0x00007f76b4cd3527:   jmpq   0x00007f76b4cd3694
  0x00007f76b4cd352c:   nop
  0x00007f76b4cd352d:   nop
  0x00007f76b4cd352e:   nop
  0x00007f76b4cd352f:   nop
 ;; B15: #	out( B16 ) <- in( B20 ) top-of-loop Freq: 52376.2
  0x00007f76b4cd3530:   mov    %r11d,%r9d                   ;*synchronization entry
                                                            ; - jdk.incubator.vector.Byte256Vector::shuffleFromArray@-1 (line 161)
                                                            ; - jdk.incubator.vector.Byte256Vector::shuffleFromArray@3 (line 41)
                                                            ; - jdk.incubator.vector.AbstractSpecies::shuffleFromArray@6 (line 322)
                                                            ; - jdk.incubator.vector.VectorShuffle::fromArray@8 (line 314)
                                                            ; - bytereverse::workload1_vector@42 (line 41)
 ;; B16: #	out( B45 B17 ) <- in( B36 B15 ) Loop( B16-B15 inner main of N150) Freq: 54013.1
  0x00007f76b4cd3533:   movslq %r9d,%r14                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload1_vector@57 (line 43)
  0x00007f76b4cd3536:   mov    0x10(%rbp,%r14,4),%r10d      ;*invokevirtual shuffleFromArray {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.VectorShuffle::fromArray@8 (line 314)
                                                            ; - bytereverse::workload1_vector@42 (line 41)
  0x00007f76b4cd353b:   mov    %r10d,%r11d
  0x00007f76b4cd353e:   and    $0x1f,%r11d
  0x00007f76b4cd3542:   cmp    %r10d,%r11d
  0x00007f76b4cd3545:   jne    0x00007f76b4cd3803           ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload1_vector@57 (line 43)
 ;; B17: #	out( B42 B18 ) <- in( B16 )  Freq: 54013
  0x00007f76b4cd354b:   mov    %r11b,0x10(%rax,%r14,1)      ;*invokevirtual shuffleFromArray {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.VectorShuffle::fromArray@8 (line 314)
                                                            ; - bytereverse::workload1_vector@42 (line 41)
  0x00007f76b4cd3550:   mov    0x14(%rbp,%r14,4),%r10d      ;*invokevirtual shuffleFromArray {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.AbstractSpecies::shuffleFromArray@6 (line 322)
                                                            ; - jdk.incubator.vector.VectorShuffle::fromArray@8 (line 314)
                                                            ; - bytereverse::workload1_vector@42 (line 41)
  0x00007f76b4cd3555:   mov    %r10d,%r11d
  0x00007f76b4cd3558:   and    $0x1f,%r11d
  0x00007f76b4cd355c:   nop
  0x00007f76b4cd355d:   nop
  0x00007f76b4cd355e:   nop
  0x00007f76b4cd355f:   nop
  0x00007f76b4cd3560:   cmp    %r10d,%r11d
  0x00007f76b4cd3563:   jne    0x00007f76b4cd37f4           ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload1_vector@57 (line 43)
 ;; B18: #	out( B43 B19 ) <- in( B17 )  Freq: 54013
  0x00007f76b4cd3569:   mov    %r11b,0x11(%rax,%r14,1)      ;*invokevirtual shuffleFromArray {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.AbstractSpecies::shuffleFromArray@6 (line 322)
                                                            ; - jdk.incubator.vector.VectorShuffle::fromArray@8 (line 314)
                                                            ; - bytereverse::workload1_vector@42 (line 41)
  0x00007f76b4cd356e:   mov    0x18(%rbp,%r14,4),%r10d      ;*getstatic idx {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - bytereverse::workload1_vector@38 (line 40)
  0x00007f76b4cd3573:   mov    %r10d,%r11d
  0x00007f76b4cd3576:   and    $0x1f,%r11d
  0x00007f76b4cd357a:   nop
  0x00007f76b4cd357b:   nop
  0x00007f76b4cd357c:   nop
  0x00007f76b4cd357d:   nop
  0x00007f76b4cd357e:   nop
  0x00007f76b4cd357f:   nop
  0x00007f76b4cd3580:   cmp    %r10d,%r11d
  0x00007f76b4cd3583:   jne    0x00007f76b4cd37f9           ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload1_vector@57 (line 43)
 ;; B19: #	out( B44 B20 ) <- in( B18 )  Freq: 54013
  0x00007f76b4cd3589:   mov    %r11b,0x12(%rax,%r14,1)      ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - bytereverse::workload1_vector@17 (line 38)
  0x00007f76b4cd358e:   mov    0x1c(%rbp,%r14,4),%r10d      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::fromArray@8 (line 2894)
                                                            ; - bytereverse::workload1_vector@25 (line 39)
  0x00007f76b4cd3593:   mov    %r10d,%r11d
  0x00007f76b4cd3596:   and    $0x1f,%r11d
  0x00007f76b4cd359a:   nop
  0x00007f76b4cd359b:   nop
  0x00007f76b4cd359c:   nop
  0x00007f76b4cd359d:   nop
  0x00007f76b4cd359e:   nop
  0x00007f76b4cd359f:   nop
  0x00007f76b4cd35a0:   cmp    %r10d,%r11d
  0x00007f76b4cd35a3:   jne    0x00007f76b4cd37ff           ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload1_vector@57 (line 43)
 ;; B20: #	out( B15 B21 ) <- in( B19 )  Freq: 54013
  0x00007f76b4cd35a9:   mov    %r11b,0x13(%rax,%r14,1)      ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - bytereverse::workload1_vector@17 (line 38)
  0x00007f76b4cd35ae:   mov    %r9d,%r11d
  0x00007f76b4cd35b1:   add    $0x4,%r11d
  0x00007f76b4cd35b5:   cmp    $0x1d,%r11d
  0x00007f76b4cd35b9:   jl     0x00007f76b4cd3530
 ;; B21: #	out( B27 B22 ) <- in( B20 )  Freq: 1636.75
  0x00007f76b4cd35bf:   nop
  0x00007f76b4cd35c0:   cmp    $0x20,%r11d
  0x00007f76b4cd35c4:   jge    0x00007f76b4cd3623
 ;; B22: #	out( B48 B23 ) <- in( B21 )  Freq: 818.377
  0x00007f76b4cd35ca:   add    $0x4,%r9d
  0x00007f76b4cd35ce:   cmp    %esi,%r9d
  0x00007f76b4cd35d1:   jae    0x00007f76b4cd3878
 ;; B23: #	out( B49 B24 ) <- in( B22 )  Freq: 818.377
  0x00007f76b4cd35d7:   cmp    $0x20,%r9d
  0x00007f76b4cd35db:   nop
  0x00007f76b4cd35dc:   nop
  0x00007f76b4cd35dd:   nop
  0x00007f76b4cd35de:   nop
  0x00007f76b4cd35df:   nop
  0x00007f76b4cd35e0:   jae    0x00007f76b4cd388c           ;*invokevirtual elementType {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.AbstractVector::convert0@148 (line 686)
                                                            ; - jdk.incubator.vector.AbstractVector::asVectorRawTemplate@11 (line 173)
                                                            ; - jdk.incubator.vector.AbstractVector::asByteVectorRawTemplate@4 (line 179)
                                                            ; - jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 177)
                                                            ; - jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 41)
                                                            ; - jdk.incubator.vector.IntVector::reinterpretAsBytes@24 (line 3744)
                                                            ; - bytereverse::workload1_vector@32 (line 40)
 ;; B24: #	out( B45 B25 ) <- in( B23 B25 ) Loop( B24-B25 inner post of N433) Freq: 1636.75
  0x00007f76b4cd35e6:   movslq %r9d,%r14                    ;*invokevirtual laneCount {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.AbstractVector::convert0@142 (line 685)
                                                            ; - jdk.incubator.vector.AbstractVector::asVectorRawTemplate@11 (line 173)
                                                            ; - jdk.incubator.vector.AbstractVector::asByteVectorRawTemplate@4 (line 179)
                                                            ; - jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 177)
                                                            ; - jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 41)
                                                            ; - jdk.incubator.vector.IntVector::reinterpretAsBytes@24 (line 3744)
                                                            ; - bytereverse::workload1_vector@32 (line 40)
  0x00007f76b4cd35e9:   mov    0x10(%rbp,%r14,4),%r10d      ;*invokevirtual convert0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.AbstractVector::asVectorRawTemplate@11 (line 173)
                                                            ; - jdk.incubator.vector.AbstractVector::asByteVectorRawTemplate@4 (line 179)
                                                            ; - jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 177)
                                                            ; - jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 41)
                                                            ; - jdk.incubator.vector.IntVector::reinterpretAsBytes@24 (line 3744)
                                                            ; - bytereverse::workload1_vector@32 (line 40)
  0x00007f76b4cd35ee:   mov    %r10d,%r11d
  0x00007f76b4cd35f1:   and    $0x1f,%r11d
  0x00007f76b4cd35f5:   cmp    %r10d,%r11d
  0x00007f76b4cd35f8:   jne    0x00007f76b4cd3803
 ;; B25: #	out( B24 B26 ) <- in( B24 )  Freq: 1636.75
  0x00007f76b4cd35fe:   mov    %r11b,0x10(%rax,%r14,1)
  0x00007f76b4cd3603:   inc    %r9d
  0x00007f76b4cd3606:   cmp    $0x20,%r9d
  0x00007f76b4cd360a:   jl     0x00007f76b4cd35e6           ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload1_vector@57 (line 43)
 ;; B26: #	out( B28 ) <- in( B25 )  Freq: 818.375
  0x00007f76b4cd360c:   vmovdqu 0x10(%rax),%ymm0
  0x00007f76b4cd3611:   movabs $0x119017f20,%r10            ;   {oop([B{0x0000000119017f20})}
  0x00007f76b4cd361b:   vmovdqu 0x10(%r10),%ymm1            ;*invokevirtual laneCount {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.AbstractVector::convert0@142 (line 685)
                                                            ; - jdk.incubator.vector.AbstractVector::asVectorRawTemplate@11 (line 173)
                                                            ; - jdk.incubator.vector.AbstractVector::asByteVectorRawTemplate@4 (line 179)
                                                            ; - jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 177)
                                                            ; - jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 41)
                                                            ; - jdk.incubator.vector.IntVector::reinterpretAsBytes@24 (line 3744)
                                                            ; - bytereverse::workload1_vector@32 (line 40)
  0x00007f76b4cd3621:   jmp    0x00007f76b4cd3638
 ;; B27: #	out( B28 ) <- in( B21 )  Freq: 818.377
  0x00007f76b4cd3623:   vmovdqu 0x10(%rax),%ymm0
  0x00007f76b4cd3628:   movabs $0x119017f20,%r10            ;   {oop([B{0x0000000119017f20})}
  0x00007f76b4cd3632:   vmovdqu 0x10(%r10),%ymm1            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload1_vector@57 (line 43)
 ;; B28: #	out( B51 B29 ) <- in( B26 B27 )  Freq: 1636.75
  0x00007f76b4cd3638:   vpcmpb $0x1,%ymm1,%ymm0,%k7         ;*invokevirtual dummyVector {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::fromArray@19 (line 2896)
                                                            ; - bytereverse::workload1_vector@25 (line 39)
  0x00007f76b4cd363f:   ktestd %k6,%k7
  0x00007f76b4cd3644:   setne  %r11b
  0x00007f76b4cd3648:   movzbl %r11b,%r11d
  0x00007f76b4cd364c:   test   %r11d,%r11d
  0x00007f76b4cd364f:   jne    0x00007f76b4cd38a8
 ;; B29: #	out( B38 B30 ) <- in( B28 )  Freq: 1636.75
  0x00007f76b4cd3655:   mov    0x390(%r15),%r10
  0x00007f76b4cd365c:   vperm2i128 $0x1,%ymm4,%ymm4,%ymm2
  0x00007f76b4cd3662:   vpshufb %ymm0,%ymm2,%ymm2
  0x00007f76b4cd3667:   vpshufb %ymm0,%ymm4,%ymm1
  0x00007f76b4cd366c:   vpaddb -0x7c26614(%rip),%ymm0,%ymm3        # Stub::vector_byte_shuffle_mask
                                                            ;   {external_word}
  0x00007f76b4cd3674:   vpblendvb %ymm3,%ymm2,%ymm1,%ymm1   ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload1_vector@57 (line 43)
  0x00007f76b4cd367a:   vmovdqu %ymm1,0x10(%rcx,%rbx,4)     ;*synchronization entry
                                                            ; - jdk.incubator.vector.AbstractSpecies::loopBound@-1 (line 203)
                                                            ; - bytereverse::workload1_vector@12 (line 38)
  0x00007f76b4cd3680:   add    $0x8,%ebx                    ; ImmutableOopMap {r8=NarrowOop rcx=Oop rdi=Oop rbp=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) bytereverse::workload1_vector@71 (line 38)
  0x00007f76b4cd3683:   test   %eax,(%r10)                  ;   {poll}
  0x00007f76b4cd3686:   cmp    %edx,%ebx
  0x00007f76b4cd3688:   jge    0x00007f76b4cd3765
 ;; B30: #	out( B31 ) <- in( B29 )  Freq: 1635.87
  0x00007f76b4cd368e:   mov    %r8d,%r11d
  0x00007f76b4cd3691:   mov    %esi,%r9d
 ;; B31: #	out( B40 B32 ) <- in( B14 B30 ) Loop( B31-B30 ) Freq: 1636.87
  0x00007f76b4cd3694:   vmovdqu 0x10(%rdi,%rbx,4),%ymm4
  0x00007f76b4cd369a:   mov    0x108(%r15),%rax
  0x00007f76b4cd36a1:   mov    %rax,%r10
  0x00007f76b4cd36a4:   add    $0x30,%r10
  0x00007f76b4cd36a8:   cmp    0x118(%r15),%r10             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload1_vector@57 (line 43)
  0x00007f76b4cd36af:   jae    0x00007f76b4cd3786
 ;; B32: #	out( B33 ) <- in( B31 )  Freq: 1636.7
  0x00007f76b4cd36b5:   mov    %r9d,0x28(%rsp)
  0x00007f76b4cd36ba:   mov    %r11d,0x24(%rsp)
  0x00007f76b4cd36bf:   mov    %r10,0x108(%r15)
  0x00007f76b4cd36c6:   prefetchw 0xc0(%r10)
  0x00007f76b4cd36ce:   movq   $0x1,(%rax)
  0x00007f76b4cd36d5:   prefetchw 0x100(%r10)
  0x00007f76b4cd36dd:   movl   $0x407c0,0x8(%rax)           ;   {metadata({type array byte})}
  0x00007f76b4cd36e4:   prefetchw 0x140(%r10)
  0x00007f76b4cd36ec:   movl   $0x20,0xc(%rax)
  0x00007f76b4cd36f3:   prefetchw 0x180(%r10)
  0x00007f76b4cd36fb:   mov    %rax,%r11
  0x00007f76b4cd36fe:   add    $0x10,%r11
  0x00007f76b4cd3702:   vpxor  %ymm0,%ymm0,%ymm0
  0x00007f76b4cd3706:   vmovdqu64 %ymm0,(%r11)              ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.VectorIntrinsics::roundDown@3 (line 84)
                                                            ; - jdk.incubator.vector.AbstractSpecies::loopBound@5 (line 203)
                                                            ; - bytereverse::workload1_vector@12 (line 38)
 ;; B33: #	out( B50 B34 ) <- in( B41 B32 )  Freq: 1636.87
  0x00007f76b4cd370c:   mov    0x24(%rsp),%r8d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload1_vector@57 (line 43)
  0x00007f76b4cd3711:   mov    0x10(%r12,%r8,8),%r10d       ;*synchronization entry
                                                            ; - jdk.incubator.vector.Int256Vector::length@-1 (line 103)
                                                            ; - jdk.incubator.vector.AbstractVector::convert0@153 (line 687)
                                                            ; - jdk.incubator.vector.AbstractVector::asVectorRawTemplate@11 (line 173)
                                                            ; - jdk.incubator.vector.AbstractVector::asByteVectorRawTemplate@4 (line 179)
                                                            ; - jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 177)
                                                            ; - jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 41)
                                                            ; - jdk.incubator.vector.IntVector::reinterpretAsBytes@24 (line 3744)
                                                            ; - bytereverse::workload1_vector@32 (line 40)
  0x00007f76b4cd3716:   mov    %r10d,%r11d
  0x00007f76b4cd3719:   and    $0x1f,%r11d
  0x00007f76b4cd371d:   nop
  0x00007f76b4cd371e:   nop
  0x00007f76b4cd371f:   nop
  0x00007f76b4cd3720:   cmp    %r10d,%r11d
  0x00007f76b4cd3723:   jne    0x00007f76b4cd38a0
 ;; B34: #	out( B46 B35 ) <- in( B33 )  Freq: 1636.87
  0x00007f76b4cd3729:   mov    0x28(%rsp),%r10d
  0x00007f76b4cd372e:   cmp    $0x1,%r10d
  0x00007f76b4cd3732:   jbe    0x00007f76b4cd3850
 ;; B35: #	out( B47 B36 ) <- in( B34 )  Freq: 1636.86
  0x00007f76b4cd3738:   nop
  0x00007f76b4cd3739:   nop
  0x00007f76b4cd373a:   nop
  0x00007f76b4cd373b:   nop
  0x00007f76b4cd373c:   nop
  0x00007f76b4cd373d:   nop
  0x00007f76b4cd373e:   nop
  0x00007f76b4cd373f:   nop
  0x00007f76b4cd3740:   cmp    $0x4,%r10d
  0x00007f76b4cd3744:   jbe    0x00007f76b4cd3864           ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload1_vector@57 (line 43)
 ;; B36: #	out( B16 ) <- in( B35 )  Freq: 1636.86
  0x00007f76b4cd374a:   mov    %r11b,0x10(%rax)             ;*invokevirtual length {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.AbstractVector::convert0@153 (line 687)
                                                            ; - jdk.incubator.vector.AbstractVector::asVectorRawTemplate@11 (line 173)
                                                            ; - jdk.incubator.vector.AbstractVector::asByteVectorRawTemplate@4 (line 179)
                                                            ; - jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 177)
                                                            ; - jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 41)
                                                            ; - jdk.incubator.vector.IntVector::reinterpretAsBytes@24 (line 3744)
                                                            ; - bytereverse::workload1_vector@32 (line 40)
  0x00007f76b4cd374e:   mov    $0x1,%r9d
  0x00007f76b4cd3754:   mov    0x28(%rsp),%esi
  0x00007f76b4cd3758:   jmpq   0x00007f76b4cd3533
 ;; B37: #	out( B38 ) <- in( B1 )  Freq: 0.00054016
  0x00007f76b4cd375d:   xor    %ebx,%ebx
  0x00007f76b4cd375f:   mov    %rsi,%rdi
  0x00007f76b4cd3762:   mov    %r10,%rcx
 ;; B38: #	out( B55 B39 ) <- in( B29 B37 )  Freq: 0.884611
  0x00007f76b4cd3765:   cmp    %r13d,%ebx
  0x00007f76b4cd3768:   jl     0x00007f76b4cd397c
 ;; B39: #	out( N1 ) <- in( B38 )  Freq: 0.88461
  0x00007f76b4cd376e:   mov    %ebx,%eax
  0x00007f76b4cd3770:   vzeroupper 
  0x00007f76b4cd3773:   add    $0x70,%rsp
  0x00007f76b4cd3777:   pop    %rbp
  0x00007f76b4cd3778:   cmp    0x388(%r15),%rsp             ;   {poll_return}
  0x00007f76b4cd377f:   ja     0x00007f76b4cd39c0
  0x00007f76b4cd3785:   retq   
 ;; B40: #	out( B56 B41 ) <- in( B31 )  Freq: 0.163714
  0x00007f76b4cd3786:   mov    %r9d,0x28(%rsp)
  0x00007f76b4cd378b:   mov    %r11d,0x24(%rsp)
  0x00007f76b4cd3790:   vmovdqu %ymm4,0x40(%rsp)
  0x00007f76b4cd3796:   mov    %ebx,0x20(%rsp)
  0x00007f76b4cd379a:   kmovq  %k6,0x18(%rsp)
  0x00007f76b4cd37a1:   mov    %edx,0x14(%rsp)
  0x00007f76b4cd37a5:   mov    %r13d,0x10(%rsp)
  0x00007f76b4cd37aa:   mov    %rcx,0x8(%rsp)
  0x00007f76b4cd37af:   mov    %rdi,(%rsp)
  0x00007f76b4cd37b3:   movabs $0x8000407c0,%rsi            ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.AbstractShuffle::prepare@13 (line 57)
                                                            ; - jdk.incubator.vector.AbstractShuffle::<init>@4 (line 47)
                                                            ; - jdk.incubator.vector.Byte256Vector$Byte256Shuffle::<init>@6 (line 816)
                                                            ; - jdk.incubator.vector.Byte256Vector::shuffleFromArray@6 (line 161)
                                                            ; - jdk.incubator.vector.Byte256Vector::shuffleFromArray@3 (line 41)
                                                            ; - jdk.incubator.vector.AbstractSpecies::shuffleFromArray@6 (line 322)
                                                            ; - jdk.incubator.vector.VectorShuffle::fromArray@8 (line 314)
                                                            ; - bytereverse::workload1_vector@42 (line 41)
                                                            ;   {metadata({type array byte})}
  0x00007f76b4cd37bd:   mov    $0x20,%edx                   ;*invokestatic roundDown {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.AbstractSpecies::loopBound@5 (line 203)
                                                            ; - bytereverse::workload1_vector@12 (line 38)
  0x00007f76b4cd37c2:   nop
  0x00007f76b4cd37c3:   nop
  0x00007f76b4cd37c4:   vzeroupper 
  0x00007f76b4cd37c7:   callq  0x00007f76ad074720           ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [36]=NarrowOop }
                                                            ;*newarray {reexecute=0 rethrow=0 return_oop=1}
                                                            ; - jdk.incubator.vector.AbstractShuffle::prepare@1 (line 55)
                                                            ; - jdk.incubator.vector.AbstractShuffle::<init>@4 (line 47)
                                                            ; - jdk.incubator.vector.Byte256Vector$Byte256Shuffle::<init>@6 (line 816)
                                                            ; - jdk.incubator.vector.Byte256Vector::shuffleFromArray@6 (line 161)
                                                            ; - jdk.incubator.vector.Byte256Vector::shuffleFromArray@3 (line 41)
                                                            ; - jdk.incubator.vector.AbstractSpecies::shuffleFromArray@6 (line 322)
                                                            ; - jdk.incubator.vector.VectorShuffle::fromArray@8 (line 314)
                                                            ; - bytereverse::workload1_vector@42 (line 41)
                                                            ;   {runtime_call _new_array_Java}
 ;; B41: #	out( B33 ) <- in( B40 )  Freq: 0.163711
  0x00007f76b4cd37cc:   mov    (%rsp),%rdi
  0x00007f76b4cd37d0:   mov    0x8(%rsp),%rcx
  0x00007f76b4cd37d5:   mov    0x10(%rsp),%r13d
  0x00007f76b4cd37da:   mov    0x14(%rsp),%edx
  0x00007f76b4cd37de:   kmovq  0x18(%rsp),%k6
  0x00007f76b4cd37e5:   mov    0x20(%rsp),%ebx
  0x00007f76b4cd37e9:   vmovdqu 0x40(%rsp),%ymm4
  0x00007f76b4cd37ef:   jmpq   0x00007f76b4cd370c
 ;; B42: #	out( B45 ) <- in( B17 )  Freq: 0.0270065
  0x00007f76b4cd37f4:   inc    %r9d
  0x00007f76b4cd37f7:   jmp    0x00007f76b4cd3803
 ;; B43: #	out( B45 ) <- in( B18 )  Freq: 0.0270065
  0x00007f76b4cd37f9:   add    $0x2,%r9d
  0x00007f76b4cd37fd:   jmp    0x00007f76b4cd3803           ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload1_vector@57 (line 43)
 ;; B44: #	out( B45 ) <- in( B19 )  Freq: 0.0270065
  0x00007f76b4cd37ff:   add    $0x3,%r9d                    ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::fromArray@8 (line 2894)
                                                            ; - bytereverse::workload1_vector@25 (line 39)
 ;; B45: #	out( N1 ) <- in( B24 B50 B16 B43 B42 B44 )  Freq: 0.109663
  0x00007f76b4cd3803:   mov    $0xffffff45,%esi             ;*synchronization entry
                                                            ; - jdk.incubator.vector.AbstractSpecies::loopBound@-1 (line 203)
                                                            ; - bytereverse::workload1_vector@12 (line 38)
  0x00007f76b4cd3808:   mov    %rdi,%rbp
  0x00007f76b4cd380b:   mov    %rcx,(%rsp)
  0x00007f76b4cd380f:   mov    %ebx,0x8(%rsp)
  0x00007f76b4cd3813:   mov    %r8d,0xc(%rsp)
  0x00007f76b4cd3818:   mov    %rax,0x10(%rsp)
  0x00007f76b4cd381d:   mov    %r9d,0x18(%rsp)
  0x00007f76b4cd3822:   mov    %r11d,0x24(%rsp)
  0x00007f76b4cd3827:   mov    %r10d,0x28(%rsp)
  0x00007f76b4cd382c:   vmovdqu %ymm4,0x40(%rsp)            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload1_vector@57 (line 43)
  0x00007f76b4cd3832:   nop
  0x00007f76b4cd3833:   nop
  0x00007f76b4cd3834:   vzeroupper 
  0x00007f76b4cd3837:   callq  0x00007f76ad11e920           ; ImmutableOopMap {rbp=Oop [0]=Oop [12]=NarrowOop [16]=Oop }
                                                            ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) jdk.incubator.vector.AbstractShuffle::checkIndex0@12 (line 209)
                                                            ; - jdk.incubator.vector.AbstractShuffle::partiallyWrapIndex@3 (line 202)
                                                            ; - jdk.incubator.vector.AbstractShuffle::prepare@24 (line 58)
                                                            ; - jdk.incubator.vector.AbstractShuffle::<init>@4 (line 47)
                                                            ; - jdk.incubator.vector.Byte256Vector$Byte256Shuffle::<init>@6 (line 816)
                                                            ; - jdk.incubator.vector.Byte256Vector::shuffleFromArray@6 (line 161)
                                                            ; - jdk.incubator.vector.Byte256Vector::shuffleFromArray@3 (line 41)
                                                            ; - jdk.incubator.vector.AbstractSpecies::shuffleFromArray@6 (line 322)
                                                            ; - jdk.incubator.vector.VectorShuffle::fromArray@8 (line 314)
                                                            ; - bytereverse::workload1_vector@42 (line 41)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f76b4cd383c:   movabs $0x7f76c20f0328,%rdi         ;   {external_word}
  0x00007f76b4cd3846:   and    $0xfffffffffffffff0,%rsp
  0x00007f76b4cd384a:   callq  0x00007f76c179e4b0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f76b4cd384f:   hlt    
 ;; B46: #	out( N1 ) <- in( B34 )  Freq: 0.00163687
  0x00007f76b4cd3850:   movabs $0x7f76c21650b8,%rdi         ;   {external_word}
  0x00007f76b4cd385a:   and    $0xfffffffffffffff0,%rsp
  0x00007f76b4cd385e:   callq  0x00007f76c179e4b0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f76b4cd3863:   hlt    
 ;; B47: #	out( N1 ) <- in( B35 )  Freq: 0.00163686
  0x00007f76b4cd3864:   movabs $0x7f76c21650b8,%rdi         ;   {external_word}
  0x00007f76b4cd386e:   and    $0xfffffffffffffff0,%rsp
  0x00007f76b4cd3872:   callq  0x00007f76c179e4b0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f76b4cd3877:   hlt    
 ;; B48: #	out( N1 ) <- in( B22 )  Freq: 0.000829245
  0x00007f76b4cd3878:   movabs $0x7f76c21650b8,%rdi         ;   {external_word}
  0x00007f76b4cd3882:   and    $0xfffffffffffffff0,%rsp
  0x00007f76b4cd3886:   callq  0x00007f76c179e4b0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f76b4cd388b:   hlt    
 ;; B49: #	out( N1 ) <- in( B23 )  Freq: 0.000829244
  0x00007f76b4cd388c:   movabs $0x7f76c21650b8,%rdi         ;   {external_word}
  0x00007f76b4cd3896:   and    $0xfffffffffffffff0,%rsp
  0x00007f76b4cd389a:   callq  0x00007f76c179e4b0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f76b4cd389f:   hlt    
 ;; B50: #	out( B45 ) <- in( B33 )  Freq: 0.000818433
  0x00007f76b4cd38a0:   xor    %r9d,%r9d
  0x00007f76b4cd38a3:   jmpq   0x00007f76b4cd3803           ;*invokestatic checkFromIndexSize {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::fromArray@9 (line 2894)
                                                            ; - bytereverse::workload1_vector@25 (line 39)
 ;; B51: #	out( N1 ) <- in( B28 )  Freq: 0.000780464
  0x00007f76b4cd38a8:   mov    $0xffffff45,%esi             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload1_vector@57 (line 43)
  0x00007f76b4cd38ad:   vpmovm2b %k7,%ymm0
  0x00007f76b4cd38b3:   vpabsb %ymm0,%ymm0                  ;*invokestatic checkFromIndexSize {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::fromArray@9 (line 2894)
                                                            ; - bytereverse::workload1_vector@25 (line 39)
  0x00007f76b4cd38b8:   mov    %rdi,%rbp
  0x00007f76b4cd38bb:   mov    %rcx,(%rsp)
  0x00007f76b4cd38bf:   mov    %ebx,0x8(%rsp)
  0x00007f76b4cd38c3:   mov    %r11d,0xc(%rsp)
  0x00007f76b4cd38c8:   vmovdqu %ymm4,0x20(%rsp)
  0x00007f76b4cd38ce:   mov    %rax,0x10(%rsp)
  0x00007f76b4cd38d3:   vmovdqu %ymm0,0x40(%rsp)            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload1_vector@57 (line 43)
  0x00007f76b4cd38d9:   nop
  0x00007f76b4cd38da:   nop
  0x00007f76b4cd38db:   nop
  0x00007f76b4cd38dc:   vzeroupper 
  0x00007f76b4cd38df:   callq  0x00007f76ad11e920           ; ImmutableOopMap {rbp=Oop [0]=Oop [16]=Oop }
                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) jdk.incubator.vector.AbstractShuffle::checkIndexes@32 (line 128)
                                                            ; - jdk.incubator.vector.ByteVector::rearrangeTemplate@1 (line 2259)
                                                            ; - jdk.incubator.vector.Byte256Vector::rearrange@7 (line 446)
                                                            ; - jdk.incubator.vector.Byte256Vector::rearrange@2 (line 41)
                                                            ; - bytereverse::workload1_vector@45 (line 41)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f76b4cd38e4:   movabs $0x7f76c20f0328,%rdi         ;   {external_word}
  0x00007f76b4cd38ee:   and    $0xfffffffffffffff0,%rsp
  0x00007f76b4cd38f2:   callq  0x00007f76c179e4b0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f76b4cd38f7:   hlt                                 ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload1_vector@57 (line 43)
 ;; B52: #	out( N1 ) <- in( B5 B2 B3 B4 )  Freq: 4.03765e-06
  0x00007f76b4cd38f8:   mov    $0xffffff76,%esi             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - bytereverse::workload1_vector@17 (line 38)
  0x00007f76b4cd38fd:   mov    %rdi,%rbp
  0x00007f76b4cd3900:   mov    %r10,(%rsp)
  0x00007f76b4cd3904:   mov    %edx,0x8(%rsp)
  0x00007f76b4cd3908:   vzeroupper 
  0x00007f76b4cd390b:   callq  0x00007f76ad11e920           ; ImmutableOopMap {rbp=Oop [0]=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) bytereverse::workload1_vector@17 (line 38)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f76b4cd3910:   movabs $0x7f76c20f0328,%rdi         ;   {external_word}
  0x00007f76b4cd391a:   and    $0xfffffffffffffff0,%rsp
  0x00007f76b4cd391e:   callq  0x00007f76c179e4b0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f76b4cd3923:   hlt                                 ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload1_vector@57 (line 43)
 ;; B53: #	out( N1 ) <- in( B12 B11 B10 B6 B7 B8 B9 )  Freq: 7.04926e-06
  0x00007f76b4cd3924:   mov    $0xffffffbe,%esi             ;*getstatic SPECIES {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - bytereverse::workload1_vector@20 (line 39)
  0x00007f76b4cd3929:   mov    %rdi,%rbp
  0x00007f76b4cd392c:   mov    %rcx,(%rsp)
  0x00007f76b4cd3930:   mov    %edx,0x8(%rsp)
  0x00007f76b4cd3934:   vzeroupper 
  0x00007f76b4cd3937:   callq  0x00007f76ad11e920           ; ImmutableOopMap {rbp=Oop [0]=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) bytereverse::workload1_vector@17 (line 38)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f76b4cd393c:   movabs $0x7f76c20f0328,%rdi         ;   {external_word}
  0x00007f76b4cd3946:   and    $0xfffffffffffffff0,%rsp
  0x00007f76b4cd394a:   callq  0x00007f76c179e4b0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f76b4cd394f:   hlt                                 ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload1_vector@57 (line 43)
 ;; B54: #	out( N1 ) <- in( B13 )  Freq: 1.01272e-06
  0x00007f76b4cd3950:   mov    $0xffffff6e,%esi             ;*getstatic SPECIES {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - bytereverse::workload1_vector@20 (line 39)
  0x00007f76b4cd3955:   mov    %rdi,%rbp
  0x00007f76b4cd3958:   mov    %rcx,(%rsp)
  0x00007f76b4cd395c:   mov    %edx,0x8(%rsp)
  0x00007f76b4cd3960:   vzeroupper 
  0x00007f76b4cd3963:   callq  0x00007f76ad11e920           ; ImmutableOopMap {rbp=Oop [0]=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) bytereverse::workload1_vector@17 (line 38)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f76b4cd3968:   movabs $0x7f76c20f0328,%rdi         ;   {external_word}
  0x00007f76b4cd3972:   and    $0xfffffffffffffff0,%rsp
  0x00007f76b4cd3976:   callq  0x00007f76c179e4b0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f76b4cd397b:   hlt                                 ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload1_vector@57 (line 43)
 ;; B55: #	out( N1 ) <- in( B38 )  Freq: 4.21815e-07
  0x00007f76b4cd397c:   mov    $0xffffff45,%esi             ;*invokestatic fromArray {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - bytereverse::workload1_vector@25 (line 39)
  0x00007f76b4cd3981:   mov    %rdi,%rbp
  0x00007f76b4cd3984:   mov    %rcx,(%rsp)
  0x00007f76b4cd3988:   mov    %ebx,0xc(%rsp)
  0x00007f76b4cd398c:   mov    %r13d,0x10(%rsp)             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload1_vector@57 (line 43)
  0x00007f76b4cd3991:   nop
  0x00007f76b4cd3992:   nop
  0x00007f76b4cd3993:   nop
  0x00007f76b4cd3994:   vzeroupper 
  0x00007f76b4cd3997:   callq  0x00007f76ad11e920           ; ImmutableOopMap {rbp=Oop [0]=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) bytereverse::workload1_vector@78 (line 46)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f76b4cd399c:   movabs $0x7f76c20f0328,%rdi         ;   {external_word}
  0x00007f76b4cd39a6:   and    $0xfffffffffffffff0,%rsp
  0x00007f76b4cd39aa:   callq  0x00007f76c179e4b0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f76b4cd39af:   hlt                                 ;*invokeinterface loopBound {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - bytereverse::workload1_vector@12 (line 38)
 ;; B56: #	out( N1 ) <- in( B40 )  Freq: 1.63714e-06
  0x00007f76b4cd39b0:   mov    %rax,%rsi
  0x00007f76b4cd39b3:   vzeroupper 
  0x00007f76b4cd39b6:   add    $0x70,%rsp
  0x00007f76b4cd39ba:   pop    %rbp
  0x00007f76b4cd39bb:   jmpq   0x00007f76ad071420           ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
                                                            ; - bytereverse::workload1_vector@57 (line 43)
                                                            ;   {runtime_call _rethrow_Java}
  0x00007f76b4cd39c0:   movabs $0x7f76b4cd3778,%r10         ;   {internal_word}
  0x00007f76b4cd39ca:   mov    %r10,0x3a0(%r15)
  0x00007f76b4cd39d1:   jmpq   0x00007f76ad11d6a0           ;   {runtime_call SafepointBlob}
  0x00007f76b4cd39d6:   hlt    
  0x00007f76b4cd39d7:   hlt    
  0x00007f76b4cd39d8:   hlt    
  0x00007f76b4cd39d9:   hlt    
  0x00007f76b4cd39da:   hlt    
  0x00007f76b4cd39db:   hlt    
  0x00007f76b4cd39dc:   hlt    
  0x00007f76b4cd39dd:   hlt    
  0x00007f76b4cd39de:   hlt    
  0x00007f76b4cd39df:   hlt    
[Exception Handler]
  0x00007f76b4cd39e0:   jmpq   0x00007f76ad081a20           ;   {no_reloc}
[Deopt Handler Code]
  0x00007f76b4cd39e5:   callq  0x00007f76b4cd39ea
  0x00007f76b4cd39ea:   subq   $0x5,(%rsp)
  0x00007f76b4cd39ef:   jmpq   0x00007f76ad11ec60           ;   {runtime_call DeoptimizationBlob}
  0x00007f76b4cd39f4:   hlt    
  0x00007f76b4cd39f5:   hlt    
  0x00007f76b4cd39f6:   hlt    
  0x00007f76b4cd39f7:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Oops:
  0x00007f76b4cd39f8:   0x0000000119017e40 a 'java/lang/Class'{0x0000000119017e40} = 'jdk/incubator/vector/Byte256Vector'
  0x00007f76b4cd3a00:   0x0000000119047f98 a 'java/lang/Class'{0x0000000119047f98} = 'jdk/incubator/vector/Byte256Vector$Byte256Shuffle'
  0x00007f76b4cd3a08:   0x0000000119047e88 a 'java/lang/Class'{0x0000000119047e88} = 'jdk/incubator/vector/Byte256Vector$Byte256Mask'
  0x00007f76b4cd3a10:   0x000000011903b970 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x000000011903b970}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Metadata:
  0x00007f76b4cd3a18:   0x00007f7644411bf0 {method} {0x00007f7644411bf0} 'workload1_vector' '([I[II)I' in 'bytereverse'
  0x00007f76b4cd3a20:   0x00007f7644618218 {method} {0x00007f7644618218} 'loopBound' '(I)I' in 'jdk/incubator/vector/AbstractSpecies'
  0x00007f76b4cd3a28:   0x00007f764441b780 {method} {0x00007f764441b780} 'intoArray' '([II)V' in 'jdk/incubator/vector/IntVector'
  0x00007f76b4cd3a30:   0x00007f764441afd0 {method} {0x00007f764441afd0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[II)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/IntVector'
  0x00007f76b4cd3a38:   0x00007f76446b2a80 {method} {0x00007f76446b2a80} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
  0x00007f76b4cd3a40:   0x00007f76441639c8 {method} {0x00007f76441639c8} 'checkIndex' '(II)I' in 'java/util/Objects'
  0x00007f76b4cd3a48:   0x00007f76447b4cd8 {method} {0x00007f76447b4cd8} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[II)Ljdk/incubator/vector/VectorShuffle;' in 'jdk/incubator/vector/VectorShuffle'
  0x00007f76b4cd3a50:   0x00007f7644618f60 {method} {0x00007f7644618f60} 'shuffleFromArray' '([II)Ljdk/incubator/vector/VectorShuffle;' in 'jdk/incubator/vector/AbstractSpecies'
  0x00007f76b4cd3a58:   0x00007f76447826f0 {method} {0x00007f76447826f0} 'shuffleFromArray' '([II)Ljdk/incubator/vector/AbstractShuffle;' in 'jdk/incubator/vector/Byte256Vector'
  0x00007f76b4cd3a60:   0x00007f76446fcbf8 {method} {0x00007f76446fcbf8} 'shuffleFromArray' '([II)Ljdk/incubator/vector/Byte256Vector$Byte256Shuffle;' in 'jdk/incubator/vector/Byte256Vector'
  0x00007f76b4cd3a68:   0x00007f764441df10 {method} {0x00007f764441df10} 'reinterpretAsBytes' '()Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/IntVector'
  0x00007f76b4cd3a70:   0x00007f764464e5e8 {method} {0x00007f764464e5e8} 'asByteVectorRaw' '()Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/Int256Vector'
  0x00007f76b4cd3a78:   0x00007f7644648c88 {method} {0x00007f7644648c88} 'asByteVectorRaw' '()Ljdk/incubator/vector/Byte256Vector;' in 'jdk/incubator/vector/Int256Vector'
  0x00007f76b4cd3a80:   0x00007f7644603ba8 {method} {0x00007f7644603ba8} 'asByteVectorRawTemplate' '()Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/AbstractVector'
  0x00007f76b4cd3a88:   0x00007f7644603ad8 {method} {0x00007f7644603ad8} 'asVectorRawTemplate' '(Ljdk/incubator/vector/LaneType;)Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractVector'
  0x00007f76b4cd3a90:   0x00007f7644605e50 {method} {0x00007f7644605e50} 'convert0' '(CLjdk/incubator/vector/AbstractSpecies;)Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractVector'
  0x00007f76b4cd3a98:   0x00000008000407c0 {type array byte}
  0x00007f76b4cd3aa0:   0x00007f76446b2d70 {method} {0x00007f76446b2d70} 'roundDown' '(II)I' in 'jdk/incubator/vector/VectorIntrinsics'
  0x00007f76b4cd3aa8:   0x00007f7644648168 {method} {0x00007f7644648168} 'length' '()I' in 'jdk/incubator/vector/Int256Vector'
  0x00007f76b4cd3ab0:   0x00007f76447b6b30 {method} {0x00007f76447b6b30} '<init>' '([II)V' in 'jdk/incubator/vector/Byte256Vector$Byte256Shuffle'
  0x00007f76b4cd3ab8:   0x00007f76447b8280 {method} {0x00007f76447b8280} '<init>' '(I[II)V' in 'jdk/incubator/vector/AbstractShuffle'
  0x00007f76b4cd3ac0:   0x00007f76447b8470 {method} {0x00007f76447b8470} 'prepare' '(I[II)[B' in 'jdk/incubator/vector/AbstractShuffle'
  0x00007f76b4cd3ac8:   0x00007f76447b92d8 {method} {0x00007f76447b92d8} 'partiallyWrapIndex' '(II)I' in 'jdk/incubator/vector/AbstractShuffle'
  0x00007f76b4cd3ad0:   0x00007f76447b93e8 {method} {0x00007f76447b93e8} 'checkIndex0' '(IIB)I' in 'jdk/incubator/vector/AbstractShuffle'
  0x00007f76b4cd3ad8:   0x00007f7644780c78 {method} {0x00007f7644780c78} 'rearrange' '(Ljdk/incubator/vector/VectorShuffle;)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/Byte256Vector'
  0x00007f76b4cd3ae0:   0x00007f76446fefe0 {method} {0x00007f76446fefe0} 'rearrange' '(Ljdk/incubator/vector/VectorShuffle;)Ljdk/incubator/vector/Byte256Vector;' in 'jdk/incubator/vector/Byte256Vector'
  0x00007f76b4cd3ae8:   0x00007f76446c3230 {method} {0x00007f76446c3230} 'rearrangeTemplate' '(Ljava/lang/Class;Ljdk/incubator/vector/VectorShuffle;)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector'
  0x00007f76b4cd3af0:   0x00007f76447b8be0 {method} {0x00007f76447b8be0} 'checkIndexes' '()Ljdk/incubator/vector/VectorShuffle;' in 'jdk/incubator/vector/AbstractShuffle'
  0x00007f76b4cd3af8:   0x00000008000dd220 'jdk/incubator/vector/VectorShuffle'
  0x00007f76b4cd3b00:   0x00000008000dd710 'jdk/incubator/vector/Byte256Vector$Byte256Shuffle'
  0x00007f76b4cd3b08:   0x00000008000cc920 'jdk/incubator/vector/IntVector$IntSpecies'
  0x00007f76b4cd3b10:   0x00000008000cc158 'jdk/incubator/vector/VectorSpecies'
  0x00007f76b4cd3b18:   0x00007f7644616178 {method} {0x00007f7644616178} 'loopBound' '(I)I' in 'jdk/incubator/vector/VectorSpecies'
  0x00007f76b4cd3b20:   0x00007f76446177a8 {method} {0x00007f76446177a8} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
  0x00007f76b4cd3b28:   0x00007f7644615fb0 {method} {0x00007f7644615fb0} 'length' '()I' in 'jdk/incubator/vector/VectorSpecies'
  0x00007f76b4cd3b30:   0x00000008000d8a78 'jdk/incubator/vector/Byte256Vector'
  0x00007f76b4cd3b38:   0x00007f76446c9218 {method} {0x00007f76446c9218} 'reinterpretAsInts' '()Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/ByteVector'
  0x00007f76b4cd3b40:   0x00000008000d68a0 'jdk/incubator/vector/ByteVector'
  0x00007f76b4cd3b48:   0x00007f76447b49b8 {method} {0x00007f76447b49b8} 'checkIndexes' '()Ljdk/incubator/vector/VectorShuffle;' in 'jdk/incubator/vector/VectorShuffle'
  0x00007f76b4cd3b50:   0x00000008000df9e0 'jdk/incubator/vector/VectorOperators$ComparisonImpl'
  0x00007f76b4cd3b58:   0x00007f76447c0d08 {method} {0x00007f76447c0d08} 'opCode' '(II)I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  0x00007f76b4cd3b60:   0x00000008000de600 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  0x00007f76b4cd3b68:   0x00007f76447c0dd8 {method} {0x00007f76447c0dd8} 'opCodeRaw' '()I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
pc-bytecode offsets:
PcDesc(pc=0x00007f76b4cd343f offset=ffffffff bits=0):
PcDesc(pc=0x00007f76b4cd344c offset=c bits=0):
   jdk.incubator.vector.AbstractSpecies::loopBound@5 (line 203)
   bytereverse::workload1_vector@12 (line 38)
PcDesc(pc=0x00007f76b4cd3459 offset=19 bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload1_vector@57 (line 43)
PcDesc(pc=0x00007f76b4cd345d offset=1d bits=0):
   java.util.Objects::checkIndex@-1 (line 359)
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 52)
   jdk.incubator.vector.IntVector::fromArray@9 (line 2894)
   bytereverse::workload1_vector@25 (line 39)
PcDesc(pc=0x00007f76b4cd34ec offset=ac bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload1_vector@57 (line 43)
PcDesc(pc=0x00007f76b4cd34f0 offset=b0 bits=0):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 52)
   jdk.incubator.vector.IntVector::fromArray@9 (line 2894)
   bytereverse::workload1_vector@25 (line 39)
PcDesc(pc=0x00007f76b4cd3533 offset=f3 bits=0):
   jdk.incubator.vector.Byte256Vector::shuffleFromArray@-1 (line 161)
   jdk.incubator.vector.Byte256Vector::shuffleFromArray@3 (line 41)
   jdk.incubator.vector.AbstractSpecies::shuffleFromArray@6 (line 322)
   jdk.incubator.vector.VectorShuffle::fromArray@8 (line 314)
   bytereverse::workload1_vector@42 (line 41)
PcDesc(pc=0x00007f76b4cd3536 offset=f6 bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload1_vector@57 (line 43)
PcDesc(pc=0x00007f76b4cd353b offset=fb bits=0):
   jdk.incubator.vector.VectorShuffle::fromArray@8 (line 314)
   bytereverse::workload1_vector@42 (line 41)
PcDesc(pc=0x00007f76b4cd354b offset=10b bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload1_vector@57 (line 43)
PcDesc(pc=0x00007f76b4cd3550 offset=110 bits=0):
   jdk.incubator.vector.VectorShuffle::fromArray@8 (line 314)
   bytereverse::workload1_vector@42 (line 41)
PcDesc(pc=0x00007f76b4cd3555 offset=115 bits=0):
   jdk.incubator.vector.AbstractSpecies::shuffleFromArray@6 (line 322)
   jdk.incubator.vector.VectorShuffle::fromArray@8 (line 314)
   bytereverse::workload1_vector@42 (line 41)
PcDesc(pc=0x00007f76b4cd3569 offset=129 bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload1_vector@57 (line 43)
PcDesc(pc=0x00007f76b4cd356e offset=12e bits=0):
   jdk.incubator.vector.AbstractSpecies::shuffleFromArray@6 (line 322)
   jdk.incubator.vector.VectorShuffle::fromArray@8 (line 314)
   bytereverse::workload1_vector@42 (line 41)
PcDesc(pc=0x00007f76b4cd3573 offset=133 bits=0):
   bytereverse::workload1_vector@38 (line 40)
PcDesc(pc=0x00007f76b4cd3589 offset=149 bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload1_vector@57 (line 43)
PcDesc(pc=0x00007f76b4cd358e offset=14e bits=0):
   bytereverse::workload1_vector@17 (line 38)
PcDesc(pc=0x00007f76b4cd3593 offset=153 bits=0):
   jdk.incubator.vector.IntVector::fromArray@8 (line 2894)
   bytereverse::workload1_vector@25 (line 39)
PcDesc(pc=0x00007f76b4cd35a9 offset=169 bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload1_vector@57 (line 43)
PcDesc(pc=0x00007f76b4cd35ae offset=16e bits=0):
   bytereverse::workload1_vector@17 (line 38)
PcDesc(pc=0x00007f76b4cd35e6 offset=1a6 bits=0):
   jdk.incubator.vector.AbstractVector::convert0@148 (line 686)
   jdk.incubator.vector.AbstractVector::asVectorRawTemplate@11 (line 173)
   jdk.incubator.vector.AbstractVector::asByteVectorRawTemplate@4 (line 179)
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 177)
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 41)
   jdk.incubator.vector.IntVector::reinterpretAsBytes@24 (line 3744)
   bytereverse::workload1_vector@32 (line 40)
PcDesc(pc=0x00007f76b4cd35e9 offset=1a9 bits=0):
   jdk.incubator.vector.AbstractVector::convert0@142 (line 685)
   jdk.incubator.vector.AbstractVector::asVectorRawTemplate@11 (line 173)
   jdk.incubator.vector.AbstractVector::asByteVectorRawTemplate@4 (line 179)
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 177)
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 41)
   jdk.incubator.vector.IntVector::reinterpretAsBytes@24 (line 3744)
   bytereverse::workload1_vector@32 (line 40)
PcDesc(pc=0x00007f76b4cd35ee offset=1ae bits=0):
   jdk.incubator.vector.AbstractVector::asVectorRawTemplate@11 (line 173)
   jdk.incubator.vector.AbstractVector::asByteVectorRawTemplate@4 (line 179)
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 177)
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 41)
   jdk.incubator.vector.IntVector::reinterpretAsBytes@24 (line 3744)
   bytereverse::workload1_vector@32 (line 40)
PcDesc(pc=0x00007f76b4cd360c offset=1cc bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload1_vector@57 (line 43)
PcDesc(pc=0x00007f76b4cd3621 offset=1e1 bits=0):
   jdk.incubator.vector.AbstractVector::convert0@142 (line 685)
   jdk.incubator.vector.AbstractVector::asVectorRawTemplate@11 (line 173)
   jdk.incubator.vector.AbstractVector::asByteVectorRawTemplate@4 (line 179)
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 177)
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 41)
   jdk.incubator.vector.IntVector::reinterpretAsBytes@24 (line 3744)
   bytereverse::workload1_vector@32 (line 40)
PcDesc(pc=0x00007f76b4cd3638 offset=1f8 bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload1_vector@57 (line 43)
PcDesc(pc=0x00007f76b4cd363f offset=1ff bits=0):
   jdk.incubator.vector.IntVector::fromArray@19 (line 2896)
   bytereverse::workload1_vector@25 (line 39)
PcDesc(pc=0x00007f76b4cd367a offset=23a bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload1_vector@57 (line 43)
PcDesc(pc=0x00007f76b4cd3680 offset=240 bits=0):
   jdk.incubator.vector.AbstractSpecies::loopBound@-1 (line 203)
   bytereverse::workload1_vector@12 (line 38)
PcDesc(pc=0x00007f76b4cd3683 offset=243 bits=1):
   bytereverse::workload1_vector@71 (line 38)  reexecute=true
   Locals
    - l0: reg rdi [14],oop
    - l1: reg rcx [2],oop
    - l2: empty
    - l3: reg rbx [6],int
    - l4: empty
    - l5: empty
    - l6: empty
PcDesc(pc=0x00007f76b4cd36af offset=26f bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload1_vector@57 (line 43)
PcDesc(pc=0x00007f76b4cd370c offset=2cc bits=0):
   jdk.incubator.vector.VectorIntrinsics::roundDown@3 (line 84)
   jdk.incubator.vector.AbstractSpecies::loopBound@5 (line 203)
   bytereverse::workload1_vector@12 (line 38)
PcDesc(pc=0x00007f76b4cd3711 offset=2d1 bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload1_vector@57 (line 43)
PcDesc(pc=0x00007f76b4cd3716 offset=2d6 bits=0):
   jdk.incubator.vector.Int256Vector::length@-1 (line 103)
   jdk.incubator.vector.AbstractVector::convert0@153 (line 687)
   jdk.incubator.vector.AbstractVector::asVectorRawTemplate@11 (line 173)
   jdk.incubator.vector.AbstractVector::asByteVectorRawTemplate@4 (line 179)
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 177)
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 41)
   jdk.incubator.vector.IntVector::reinterpretAsBytes@24 (line 3744)
   bytereverse::workload1_vector@32 (line 40)
PcDesc(pc=0x00007f76b4cd374a offset=30a bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload1_vector@57 (line 43)
PcDesc(pc=0x00007f76b4cd374e offset=30e bits=0):
   jdk.incubator.vector.AbstractVector::convert0@153 (line 687)
   jdk.incubator.vector.AbstractVector::asVectorRawTemplate@11 (line 173)
   jdk.incubator.vector.AbstractVector::asByteVectorRawTemplate@4 (line 179)
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 177)
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 41)
   jdk.incubator.vector.IntVector::reinterpretAsBytes@24 (line 3744)
   bytereverse::workload1_vector@32 (line 40)
PcDesc(pc=0x00007f76b4cd37bd offset=37d bits=0):
   jdk.incubator.vector.AbstractShuffle::prepare@13 (line 57)
   jdk.incubator.vector.AbstractShuffle::<init>@4 (line 47)
   jdk.incubator.vector.Byte256Vector$Byte256Shuffle::<init>@6 (line 816)
   jdk.incubator.vector.Byte256Vector::shuffleFromArray@6 (line 161)
   jdk.incubator.vector.Byte256Vector::shuffleFromArray@3 (line 41)
   jdk.incubator.vector.AbstractSpecies::shuffleFromArray@6 (line 322)
   jdk.incubator.vector.VectorShuffle::fromArray@8 (line 314)
   bytereverse::workload1_vector@42 (line 41)
PcDesc(pc=0x00007f76b4cd37c2 offset=382 bits=0):
   jdk.incubator.vector.AbstractSpecies::loopBound@5 (line 203)
   bytereverse::workload1_vector@12 (line 38)
PcDesc(pc=0x00007f76b4cd37cc offset=38c bits=4):
   jdk.incubator.vector.AbstractShuffle::prepare@1 (line 55)
   Locals
    - l0: 32
    - l1: stack[36],narrowoop
    - l2: 0
    - l3: empty
    - l4: empty
    - l5: empty
   jdk.incubator.vector.AbstractShuffle::<init>@4 (line 47)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: obj[261]
   jdk.incubator.vector.Byte256Vector$Byte256Shuffle::<init>@6 (line 816)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.Byte256Vector::shuffleFromArray@6 (line 161)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   Expression stack
    - @0: obj[261]
   jdk.incubator.vector.Byte256Vector::shuffleFromArray@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.AbstractSpecies::shuffleFromArray@6 (line 322)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.VectorShuffle::fromArray@8 (line 314)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   bytereverse::workload1_vector@42 (line 41)
   Locals
    - l0: stack[0],oop
    - l1: stack[8],oop
    - l2: empty
    - l3: stack[32]
    - l4: empty
    - l5: empty
    - l6: empty
   Expression stack
    - @0: obj[260]
   Objects
    - 260: jdk.incubator.vector.Byte256Vector stack[64],vector
    - 261: jdk.incubator.vector.Byte256Vector$Byte256Shuffle NULL
PcDesc(pc=0x00007f76b4cd37ff offset=3bf bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload1_vector@57 (line 43)
PcDesc(pc=0x00007f76b4cd3803 offset=3c3 bits=0):
   jdk.incubator.vector.IntVector::fromArray@8 (line 2894)
   bytereverse::workload1_vector@25 (line 39)
PcDesc(pc=0x00007f76b4cd3808 offset=3c8 bits=0):
   jdk.incubator.vector.AbstractSpecies::loopBound@-1 (line 203)
   bytereverse::workload1_vector@12 (line 38)
PcDesc(pc=0x00007f76b4cd3832 offset=3f2 bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload1_vector@57 (line 43)
PcDesc(pc=0x00007f76b4cd383c offset=3fc bits=1):
   jdk.incubator.vector.AbstractShuffle::checkIndex0@12 (line 209)  reexecute=true
   Locals
    - l0: stack[40]
    - l1: 32
    - l2: -1
    - l3: stack[36]
   Expression stack
    - @0: stack[36]
    - @1: stack[40]
   jdk.incubator.vector.AbstractShuffle::partiallyWrapIndex@3 (line 202)
   Locals
    - l0: empty
    - l1: empty
   jdk.incubator.vector.AbstractShuffle::prepare@24 (line 58)
   Locals
    - l0: 32
    - l1: stack[12],narrowoop
    - l2: 0
    - l3: stack[16],oop
    - l4: stack[24]
    - l5: empty
   jdk.incubator.vector.AbstractShuffle::<init>@4 (line 47)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: obj[339]
   jdk.incubator.vector.Byte256Vector$Byte256Shuffle::<init>@6 (line 816)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.Byte256Vector::shuffleFromArray@6 (line 161)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   Expression stack
    - @0: obj[339]
   jdk.incubator.vector.Byte256Vector::shuffleFromArray@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.AbstractSpecies::shuffleFromArray@6 (line 322)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.VectorShuffle::fromArray@8 (line 314)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   bytereverse::workload1_vector@42 (line 41)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: empty
    - l3: stack[8]
    - l4: empty
    - l5: empty
    - l6: empty
   Expression stack
    - @0: obj[338]
   Objects
    - 338: jdk.incubator.vector.Byte256Vector stack[64],vector
    - 339: jdk.incubator.vector.Byte256Vector$Byte256Shuffle NULL
PcDesc(pc=0x00007f76b4cd38a8 offset=468 bits=0):
   jdk.incubator.vector.IntVector::fromArray@9 (line 2894)
   bytereverse::workload1_vector@25 (line 39)
PcDesc(pc=0x00007f76b4cd38ad offset=46d bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload1_vector@57 (line 43)
PcDesc(pc=0x00007f76b4cd38b8 offset=478 bits=0):
   jdk.incubator.vector.IntVector::fromArray@9 (line 2894)
   bytereverse::workload1_vector@25 (line 39)
PcDesc(pc=0x00007f76b4cd38d9 offset=499 bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload1_vector@57 (line 43)
PcDesc(pc=0x00007f76b4cd38e4 offset=4a4 bits=1):
   jdk.incubator.vector.AbstractShuffle::checkIndexes@32 (line 128)  reexecute=true
   Locals
    - l0: obj[299]
    - l1: empty
    - l2: obj[300]
    - l3: empty
   Expression stack
    - @0: stack[12]
   jdk.incubator.vector.ByteVector::rearrangeTemplate@1 (line 2259)
   Locals
    - l0: obj[298]
    - l1: a 'java/lang/Class'{0x0000000119047f98} = 'jdk/incubator/vector/Byte256Vector$Byte256Shuffle'
    - l2: obj[299]
   jdk.incubator.vector.Byte256Vector::rearrange@7 (line 446)
   Locals
    - l0: empty
    - l1: empty
   jdk.incubator.vector.Byte256Vector::rearrange@2 (line 41)
   Locals
    - l0: empty
    - l1: empty
   bytereverse::workload1_vector@45 (line 41)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: empty
    - l3: stack[8]
    - l4: empty
    - l5: empty
    - l6: empty
   Objects
    - 298: jdk.incubator.vector.Byte256Vector stack[32],vector
    - 299: jdk.incubator.vector.Byte256Vector$Byte256Shuffle stack[16],oop
    - 300: jdk.incubator.vector.Byte256Vector$Byte256Mask stack[64],vector
PcDesc(pc=0x00007f76b4cd38f8 offset=4b8 bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload1_vector@57 (line 43)
PcDesc(pc=0x00007f76b4cd38fd offset=4bd bits=0):
   bytereverse::workload1_vector@17 (line 38)
PcDesc(pc=0x00007f76b4cd3910 offset=4d0 bits=1):
   bytereverse::workload1_vector@17 (line 38)  reexecute=true
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: empty
    - l3: 0
    - l4: empty
    - l5: empty
    - l6: empty
   Expression stack
    - @0: 0
    - @1: stack[8]
PcDesc(pc=0x00007f76b4cd3924 offset=4e4 bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload1_vector@57 (line 43)
PcDesc(pc=0x00007f76b4cd3929 offset=4e9 bits=0):
   bytereverse::workload1_vector@20 (line 39)
PcDesc(pc=0x00007f76b4cd393c offset=4fc bits=1):
   bytereverse::workload1_vector@17 (line 38)  reexecute=true
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: empty
    - l3: 0
    - l4: empty
    - l5: empty
    - l6: empty
   Expression stack
    - @0: 0
    - @1: stack[8]
PcDesc(pc=0x00007f76b4cd3950 offset=510 bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload1_vector@57 (line 43)
PcDesc(pc=0x00007f76b4cd3955 offset=515 bits=0):
   bytereverse::workload1_vector@20 (line 39)
PcDesc(pc=0x00007f76b4cd3968 offset=528 bits=1):
   bytereverse::workload1_vector@17 (line 38)  reexecute=true
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: empty
    - l3: 0
    - l4: empty
    - l5: empty
    - l6: empty
   Expression stack
    - @0: 0
    - @1: stack[8]
PcDesc(pc=0x00007f76b4cd397c offset=53c bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload1_vector@57 (line 43)
PcDesc(pc=0x00007f76b4cd3981 offset=541 bits=0):
   bytereverse::workload1_vector@25 (line 39)
PcDesc(pc=0x00007f76b4cd3991 offset=551 bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload1_vector@57 (line 43)
PcDesc(pc=0x00007f76b4cd399c offset=55c bits=1):
   bytereverse::workload1_vector@78 (line 46)  reexecute=true
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: empty
    - l3: stack[12]
    - l4: empty
    - l5: empty
    - l6: empty
   Expression stack
    - @0: stack[12]
    - @1: stack[16]
PcDesc(pc=0x00007f76b4cd39b0 offset=570 bits=0):
   bytereverse::workload1_vector@12 (line 38)
PcDesc(pc=0x00007f76b4cd39c0 offset=580 bits=0):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
   bytereverse::workload1_vector@57 (line 43)
PcDesc(pc=0x00007f76b4cd39f9 offset=5b9 bits=0):
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
oop maps:ImmutableOopMapSet contains 8 OopMaps

ImmutableOopMap {r8=NarrowOop rcx=Oop rdi=Oop rbp=Oop } pc offsets: 579 
ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [36]=NarrowOop } pc offsets: 908 
ImmutableOopMap {rbp=Oop [0]=Oop [12]=NarrowOop [16]=Oop } pc offsets: 1020 
ImmutableOopMap {rbp=Oop [0]=Oop [16]=Oop } pc offsets: 1188 
ImmutableOopMap {rbp=Oop [0]=Oop } pc offsets: 1232 1276 1320 1372 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
scopes:
ScopeDesc(pc=0x00007f76b4cd344c offset=c):
   jdk.incubator.vector.AbstractSpecies::loopBound@5 (line 203)
ScopeDesc(pc=0x00007f76b4cd344c offset=c):
   bytereverse::workload1_vector@12 (line 38)
ScopeDesc(pc=0x00007f76b4cd3459 offset=19):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007f76b4cd3459 offset=19):
   bytereverse::workload1_vector@57 (line 43)
ScopeDesc(pc=0x00007f76b4cd345d offset=1d):
   java.util.Objects::checkIndex@-1 (line 359)
ScopeDesc(pc=0x00007f76b4cd345d offset=1d):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 52)
ScopeDesc(pc=0x00007f76b4cd345d offset=1d):
   jdk.incubator.vector.IntVector::fromArray@9 (line 2894)
ScopeDesc(pc=0x00007f76b4cd345d offset=1d):
   bytereverse::workload1_vector@25 (line 39)
ScopeDesc(pc=0x00007f76b4cd34ec offset=ac):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007f76b4cd34ec offset=ac):
   bytereverse::workload1_vector@57 (line 43)
ScopeDesc(pc=0x00007f76b4cd34f0 offset=b0):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 52)
ScopeDesc(pc=0x00007f76b4cd34f0 offset=b0):
   jdk.incubator.vector.IntVector::fromArray@9 (line 2894)
ScopeDesc(pc=0x00007f76b4cd34f0 offset=b0):
   bytereverse::workload1_vector@25 (line 39)
ScopeDesc(pc=0x00007f76b4cd3533 offset=f3):
   jdk.incubator.vector.Byte256Vector::shuffleFromArray@-1 (line 161)
ScopeDesc(pc=0x00007f76b4cd3533 offset=f3):
   jdk.incubator.vector.Byte256Vector::shuffleFromArray@3 (line 41)
ScopeDesc(pc=0x00007f76b4cd3533 offset=f3):
   jdk.incubator.vector.AbstractSpecies::shuffleFromArray@6 (line 322)
ScopeDesc(pc=0x00007f76b4cd3533 offset=f3):
   jdk.incubator.vector.VectorShuffle::fromArray@8 (line 314)
ScopeDesc(pc=0x00007f76b4cd3533 offset=f3):
   bytereverse::workload1_vector@42 (line 41)
ScopeDesc(pc=0x00007f76b4cd3536 offset=f6):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007f76b4cd3536 offset=f6):
   bytereverse::workload1_vector@57 (line 43)
ScopeDesc(pc=0x00007f76b4cd353b offset=fb):
   jdk.incubator.vector.VectorShuffle::fromArray@8 (line 314)
ScopeDesc(pc=0x00007f76b4cd353b offset=fb):
   bytereverse::workload1_vector@42 (line 41)
ScopeDesc(pc=0x00007f76b4cd354b offset=10b):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007f76b4cd354b offset=10b):
   bytereverse::workload1_vector@57 (line 43)
ScopeDesc(pc=0x00007f76b4cd3550 offset=110):
   jdk.incubator.vector.VectorShuffle::fromArray@8 (line 314)
ScopeDesc(pc=0x00007f76b4cd3550 offset=110):
   bytereverse::workload1_vector@42 (line 41)
ScopeDesc(pc=0x00007f76b4cd3555 offset=115):
   jdk.incubator.vector.AbstractSpecies::shuffleFromArray@6 (line 322)
ScopeDesc(pc=0x00007f76b4cd3555 offset=115):
   jdk.incubator.vector.VectorShuffle::fromArray@8 (line 314)
ScopeDesc(pc=0x00007f76b4cd3555 offset=115):
   bytereverse::workload1_vector@42 (line 41)
ScopeDesc(pc=0x00007f76b4cd3569 offset=129):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007f76b4cd3569 offset=129):
   bytereverse::workload1_vector@57 (line 43)
ScopeDesc(pc=0x00007f76b4cd356e offset=12e):
   jdk.incubator.vector.AbstractSpecies::shuffleFromArray@6 (line 322)
ScopeDesc(pc=0x00007f76b4cd356e offset=12e):
   jdk.incubator.vector.VectorShuffle::fromArray@8 (line 314)
ScopeDesc(pc=0x00007f76b4cd356e offset=12e):
   bytereverse::workload1_vector@42 (line 41)
ScopeDesc(pc=0x00007f76b4cd3573 offset=133):
   bytereverse::workload1_vector@38 (line 40)
ScopeDesc(pc=0x00007f76b4cd3589 offset=149):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007f76b4cd3589 offset=149):
   bytereverse::workload1_vector@57 (line 43)
ScopeDesc(pc=0x00007f76b4cd358e offset=14e):
   bytereverse::workload1_vector@17 (line 38)
ScopeDesc(pc=0x00007f76b4cd3593 offset=153):
   jdk.incubator.vector.IntVector::fromArray@8 (line 2894)
ScopeDesc(pc=0x00007f76b4cd3593 offset=153):
   bytereverse::workload1_vector@25 (line 39)
ScopeDesc(pc=0x00007f76b4cd35a9 offset=169):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007f76b4cd35a9 offset=169):
   bytereverse::workload1_vector@57 (line 43)
ScopeDesc(pc=0x00007f76b4cd35ae offset=16e):
   bytereverse::workload1_vector@17 (line 38)
ScopeDesc(pc=0x00007f76b4cd35e6 offset=1a6):
   jdk.incubator.vector.AbstractVector::convert0@148 (line 686)
ScopeDesc(pc=0x00007f76b4cd35e6 offset=1a6):
   jdk.incubator.vector.AbstractVector::asVectorRawTemplate@11 (line 173)
ScopeDesc(pc=0x00007f76b4cd35e6 offset=1a6):
   jdk.incubator.vector.AbstractVector::asByteVectorRawTemplate@4 (line 179)
ScopeDesc(pc=0x00007f76b4cd35e6 offset=1a6):
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 177)
ScopeDesc(pc=0x00007f76b4cd35e6 offset=1a6):
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 41)
ScopeDesc(pc=0x00007f76b4cd35e6 offset=1a6):
   jdk.incubator.vector.IntVector::reinterpretAsBytes@24 (line 3744)
ScopeDesc(pc=0x00007f76b4cd35e6 offset=1a6):
   bytereverse::workload1_vector@32 (line 40)
ScopeDesc(pc=0x00007f76b4cd35e9 offset=1a9):
   jdk.incubator.vector.AbstractVector::convert0@142 (line 685)
ScopeDesc(pc=0x00007f76b4cd35e9 offset=1a9):
   jdk.incubator.vector.AbstractVector::asVectorRawTemplate@11 (line 173)
ScopeDesc(pc=0x00007f76b4cd35e9 offset=1a9):
   jdk.incubator.vector.AbstractVector::asByteVectorRawTemplate@4 (line 179)
ScopeDesc(pc=0x00007f76b4cd35e9 offset=1a9):
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 177)
ScopeDesc(pc=0x00007f76b4cd35e9 offset=1a9):
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 41)
ScopeDesc(pc=0x00007f76b4cd35e9 offset=1a9):
   jdk.incubator.vector.IntVector::reinterpretAsBytes@24 (line 3744)
ScopeDesc(pc=0x00007f76b4cd35e9 offset=1a9):
   bytereverse::workload1_vector@32 (line 40)
ScopeDesc(pc=0x00007f76b4cd35ee offset=1ae):
   jdk.incubator.vector.AbstractVector::asVectorRawTemplate@11 (line 173)
ScopeDesc(pc=0x00007f76b4cd35ee offset=1ae):
   jdk.incubator.vector.AbstractVector::asByteVectorRawTemplate@4 (line 179)
ScopeDesc(pc=0x00007f76b4cd35ee offset=1ae):
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 177)
ScopeDesc(pc=0x00007f76b4cd35ee offset=1ae):
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 41)
ScopeDesc(pc=0x00007f76b4cd35ee offset=1ae):
   jdk.incubator.vector.IntVector::reinterpretAsBytes@24 (line 3744)
ScopeDesc(pc=0x00007f76b4cd35ee offset=1ae):
   bytereverse::workload1_vector@32 (line 40)
ScopeDesc(pc=0x00007f76b4cd360c offset=1cc):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007f76b4cd360c offset=1cc):
   bytereverse::workload1_vector@57 (line 43)
ScopeDesc(pc=0x00007f76b4cd3621 offset=1e1):
   jdk.incubator.vector.AbstractVector::convert0@142 (line 685)
ScopeDesc(pc=0x00007f76b4cd3621 offset=1e1):
   jdk.incubator.vector.AbstractVector::asVectorRawTemplate@11 (line 173)
ScopeDesc(pc=0x00007f76b4cd3621 offset=1e1):
   jdk.incubator.vector.AbstractVector::asByteVectorRawTemplate@4 (line 179)
ScopeDesc(pc=0x00007f76b4cd3621 offset=1e1):
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 177)
ScopeDesc(pc=0x00007f76b4cd3621 offset=1e1):
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 41)
ScopeDesc(pc=0x00007f76b4cd3621 offset=1e1):
   jdk.incubator.vector.IntVector::reinterpretAsBytes@24 (line 3744)
ScopeDesc(pc=0x00007f76b4cd3621 offset=1e1):
   bytereverse::workload1_vector@32 (line 40)
ScopeDesc(pc=0x00007f76b4cd3638 offset=1f8):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007f76b4cd3638 offset=1f8):
   bytereverse::workload1_vector@57 (line 43)
ScopeDesc(pc=0x00007f76b4cd363f offset=1ff):
   jdk.incubator.vector.IntVector::fromArray@19 (line 2896)
ScopeDesc(pc=0x00007f76b4cd363f offset=1ff):
   bytereverse::workload1_vector@25 (line 39)
ScopeDesc(pc=0x00007f76b4cd367a offset=23a):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007f76b4cd367a offset=23a):
   bytereverse::workload1_vector@57 (line 43)
ScopeDesc(pc=0x00007f76b4cd3680 offset=240):
   jdk.incubator.vector.AbstractSpecies::loopBound@-1 (line 203)
ScopeDesc(pc=0x00007f76b4cd3680 offset=240):
   bytereverse::workload1_vector@12 (line 38)
ScopeDesc(pc=0x00007f76b4cd3683 offset=243):
   bytereverse::workload1_vector@71 (line 38)  reexecute=true
   Locals
    - l0: reg rdi [14],oop
    - l1: reg rcx [2],oop
    - l2: empty
    - l3: reg rbx [6],int
    - l4: empty
    - l5: empty
    - l6: empty
ScopeDesc(pc=0x00007f76b4cd36af offset=26f):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007f76b4cd36af offset=26f):
   bytereverse::workload1_vector@57 (line 43)
ScopeDesc(pc=0x00007f76b4cd370c offset=2cc):
   jdk.incubator.vector.VectorIntrinsics::roundDown@3 (line 84)
ScopeDesc(pc=0x00007f76b4cd370c offset=2cc):
   jdk.incubator.vector.AbstractSpecies::loopBound@5 (line 203)
ScopeDesc(pc=0x00007f76b4cd370c offset=2cc):
   bytereverse::workload1_vector@12 (line 38)
ScopeDesc(pc=0x00007f76b4cd3711 offset=2d1):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007f76b4cd3711 offset=2d1):
   bytereverse::workload1_vector@57 (line 43)
ScopeDesc(pc=0x00007f76b4cd3716 offset=2d6):
   jdk.incubator.vector.Int256Vector::length@-1 (line 103)
ScopeDesc(pc=0x00007f76b4cd3716 offset=2d6):
   jdk.incubator.vector.AbstractVector::convert0@153 (line 687)
ScopeDesc(pc=0x00007f76b4cd3716 offset=2d6):
   jdk.incubator.vector.AbstractVector::asVectorRawTemplate@11 (line 173)
ScopeDesc(pc=0x00007f76b4cd3716 offset=2d6):
   jdk.incubator.vector.AbstractVector::asByteVectorRawTemplate@4 (line 179)
ScopeDesc(pc=0x00007f76b4cd3716 offset=2d6):
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 177)
ScopeDesc(pc=0x00007f76b4cd3716 offset=2d6):
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 41)
ScopeDesc(pc=0x00007f76b4cd3716 offset=2d6):
   jdk.incubator.vector.IntVector::reinterpretAsBytes@24 (line 3744)
ScopeDesc(pc=0x00007f76b4cd3716 offset=2d6):
   bytereverse::workload1_vector@32 (line 40)
ScopeDesc(pc=0x00007f76b4cd374a offset=30a):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007f76b4cd374a offset=30a):
   bytereverse::workload1_vector@57 (line 43)
ScopeDesc(pc=0x00007f76b4cd374e offset=30e):
   jdk.incubator.vector.AbstractVector::convert0@153 (line 687)
ScopeDesc(pc=0x00007f76b4cd374e offset=30e):
   jdk.incubator.vector.AbstractVector::asVectorRawTemplate@11 (line 173)
ScopeDesc(pc=0x00007f76b4cd374e offset=30e):
   jdk.incubator.vector.AbstractVector::asByteVectorRawTemplate@4 (line 179)
ScopeDesc(pc=0x00007f76b4cd374e offset=30e):
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 177)
ScopeDesc(pc=0x00007f76b4cd374e offset=30e):
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 41)
ScopeDesc(pc=0x00007f76b4cd374e offset=30e):
   jdk.incubator.vector.IntVector::reinterpretAsBytes@24 (line 3744)
ScopeDesc(pc=0x00007f76b4cd374e offset=30e):
   bytereverse::workload1_vector@32 (line 40)
ScopeDesc(pc=0x00007f76b4cd37bd offset=37d):
   jdk.incubator.vector.AbstractShuffle::prepare@13 (line 57)
ScopeDesc(pc=0x00007f76b4cd37bd offset=37d):
   jdk.incubator.vector.AbstractShuffle::<init>@4 (line 47)
ScopeDesc(pc=0x00007f76b4cd37bd offset=37d):
   jdk.incubator.vector.Byte256Vector$Byte256Shuffle::<init>@6 (line 816)
ScopeDesc(pc=0x00007f76b4cd37bd offset=37d):
   jdk.incubator.vector.Byte256Vector::shuffleFromArray@6 (line 161)
ScopeDesc(pc=0x00007f76b4cd37bd offset=37d):
   jdk.incubator.vector.Byte256Vector::shuffleFromArray@3 (line 41)
ScopeDesc(pc=0x00007f76b4cd37bd offset=37d):
   jdk.incubator.vector.AbstractSpecies::shuffleFromArray@6 (line 322)
ScopeDesc(pc=0x00007f76b4cd37bd offset=37d):
   jdk.incubator.vector.VectorShuffle::fromArray@8 (line 314)
ScopeDesc(pc=0x00007f76b4cd37bd offset=37d):
   bytereverse::workload1_vector@42 (line 41)
ScopeDesc(pc=0x00007f76b4cd37c2 offset=382):
   jdk.incubator.vector.AbstractSpecies::loopBound@5 (line 203)
ScopeDesc(pc=0x00007f76b4cd37c2 offset=382):
   bytereverse::workload1_vector@12 (line 38)
ScopeDesc(pc=0x00007f76b4cd37cc offset=38c):
   jdk.incubator.vector.AbstractShuffle::prepare@1 (line 55)
   Locals
    - l0: 32
    - l1: stack[36],narrowoop
    - l2: 0
    - l3: empty
    - l4: empty
    - l5: empty
ScopeDesc(pc=0x00007f76b4cd37cc offset=38c):
   jdk.incubator.vector.AbstractShuffle::<init>@4 (line 47)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: obj[261]
ScopeDesc(pc=0x00007f76b4cd37cc offset=38c):
   jdk.incubator.vector.Byte256Vector$Byte256Shuffle::<init>@6 (line 816)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00007f76b4cd37cc offset=38c):
   jdk.incubator.vector.Byte256Vector::shuffleFromArray@6 (line 161)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   Expression stack
    - @0: obj[261]
ScopeDesc(pc=0x00007f76b4cd37cc offset=38c):
   jdk.incubator.vector.Byte256Vector::shuffleFromArray@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00007f76b4cd37cc offset=38c):
   jdk.incubator.vector.AbstractSpecies::shuffleFromArray@6 (line 322)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00007f76b4cd37cc offset=38c):
   jdk.incubator.vector.VectorShuffle::fromArray@8 (line 314)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x00007f76b4cd37cc offset=38c):
   bytereverse::workload1_vector@42 (line 41)
   Locals
    - l0: stack[0],oop
    - l1: stack[8],oop
    - l2: empty
    - l3: stack[32]
    - l4: empty
    - l5: empty
    - l6: empty
   Expression stack
    - @0: obj[260]
   Objects
    - 260: jdk.incubator.vector.Byte256Vector stack[64],vector
    - 261: jdk.incubator.vector.Byte256Vector$Byte256Shuffle NULL
ScopeDesc(pc=0x00007f76b4cd37ff offset=3bf):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007f76b4cd37ff offset=3bf):
   bytereverse::workload1_vector@57 (line 43)
ScopeDesc(pc=0x00007f76b4cd3803 offset=3c3):
   jdk.incubator.vector.IntVector::fromArray@8 (line 2894)
ScopeDesc(pc=0x00007f76b4cd3803 offset=3c3):
   bytereverse::workload1_vector@25 (line 39)
ScopeDesc(pc=0x00007f76b4cd3808 offset=3c8):
   jdk.incubator.vector.AbstractSpecies::loopBound@-1 (line 203)
ScopeDesc(pc=0x00007f76b4cd3808 offset=3c8):
   bytereverse::workload1_vector@12 (line 38)
ScopeDesc(pc=0x00007f76b4cd3832 offset=3f2):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007f76b4cd3832 offset=3f2):
   bytereverse::workload1_vector@57 (line 43)
ScopeDesc(pc=0x00007f76b4cd383c offset=3fc):
   jdk.incubator.vector.AbstractShuffle::checkIndex0@12 (line 209)  reexecute=true
   Locals
    - l0: stack[40]
    - l1: 32
    - l2: -1
    - l3: stack[36]
   Expression stack
    - @0: stack[36]
    - @1: stack[40]
ScopeDesc(pc=0x00007f76b4cd383c offset=3fc):
   jdk.incubator.vector.AbstractShuffle::partiallyWrapIndex@3 (line 202)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x00007f76b4cd383c offset=3fc):
   jdk.incubator.vector.AbstractShuffle::prepare@24 (line 58)
   Locals
    - l0: 32
    - l1: stack[12],narrowoop
    - l2: 0
    - l3: stack[16],oop
    - l4: stack[24]
    - l5: empty
ScopeDesc(pc=0x00007f76b4cd383c offset=3fc):
   jdk.incubator.vector.AbstractShuffle::<init>@4 (line 47)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: obj[339]
ScopeDesc(pc=0x00007f76b4cd383c offset=3fc):
   jdk.incubator.vector.Byte256Vector$Byte256Shuffle::<init>@6 (line 816)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00007f76b4cd383c offset=3fc):
   jdk.incubator.vector.Byte256Vector::shuffleFromArray@6 (line 161)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   Expression stack
    - @0: obj[339]
ScopeDesc(pc=0x00007f76b4cd383c offset=3fc):
   jdk.incubator.vector.Byte256Vector::shuffleFromArray@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00007f76b4cd383c offset=3fc):
   jdk.incubator.vector.AbstractSpecies::shuffleFromArray@6 (line 322)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00007f76b4cd383c offset=3fc):
   jdk.incubator.vector.VectorShuffle::fromArray@8 (line 314)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x00007f76b4cd383c offset=3fc):
   bytereverse::workload1_vector@42 (line 41)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: empty
    - l3: stack[8]
    - l4: empty
    - l5: empty
    - l6: empty
   Expression stack
    - @0: obj[338]
   Objects
    - 338: jdk.incubator.vector.Byte256Vector stack[64],vector
    - 339: jdk.incubator.vector.Byte256Vector$Byte256Shuffle NULL
ScopeDesc(pc=0x00007f76b4cd38a8 offset=468):
   jdk.incubator.vector.IntVector::fromArray@9 (line 2894)
ScopeDesc(pc=0x00007f76b4cd38a8 offset=468):
   bytereverse::workload1_vector@25 (line 39)
ScopeDesc(pc=0x00007f76b4cd38ad offset=46d):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007f76b4cd38ad offset=46d):
   bytereverse::workload1_vector@57 (line 43)
ScopeDesc(pc=0x00007f76b4cd38b8 offset=478):
   jdk.incubator.vector.IntVector::fromArray@9 (line 2894)
ScopeDesc(pc=0x00007f76b4cd38b8 offset=478):
   bytereverse::workload1_vector@25 (line 39)
ScopeDesc(pc=0x00007f76b4cd38d9 offset=499):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007f76b4cd38d9 offset=499):
   bytereverse::workload1_vector@57 (line 43)
ScopeDesc(pc=0x00007f76b4cd38e4 offset=4a4):
   jdk.incubator.vector.AbstractShuffle::checkIndexes@32 (line 128)  reexecute=true
   Locals
    - l0: obj[299]
    - l1: empty
    - l2: obj[300]
    - l3: empty
   Expression stack
    - @0: stack[12]
ScopeDesc(pc=0x00007f76b4cd38e4 offset=4a4):
   jdk.incubator.vector.ByteVector::rearrangeTemplate@1 (line 2259)
   Locals
    - l0: obj[298]
    - l1: a 'java/lang/Class'{0x0000000119047f98} = 'jdk/incubator/vector/Byte256Vector$Byte256Shuffle'
    - l2: obj[299]
ScopeDesc(pc=0x00007f76b4cd38e4 offset=4a4):
   jdk.incubator.vector.Byte256Vector::rearrange@7 (line 446)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x00007f76b4cd38e4 offset=4a4):
   jdk.incubator.vector.Byte256Vector::rearrange@2 (line 41)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x00007f76b4cd38e4 offset=4a4):
   bytereverse::workload1_vector@45 (line 41)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: empty
    - l3: stack[8]
    - l4: empty
    - l5: empty
    - l6: empty
   Objects
    - 298: jdk.incubator.vector.Byte256Vector stack[32],vector
    - 299: jdk.incubator.vector.Byte256Vector$Byte256Shuffle stack[16],oop
    - 300: jdk.incubator.vector.Byte256Vector$Byte256Mask stack[64],vector
ScopeDesc(pc=0x00007f76b4cd38f8 offset=4b8):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007f76b4cd38f8 offset=4b8):
   bytereverse::workload1_vector@57 (line 43)
ScopeDesc(pc=0x00007f76b4cd38fd offset=4bd):
   bytereverse::workload1_vector@17 (line 38)
ScopeDesc(pc=0x00007f76b4cd3910 offset=4d0):
   bytereverse::workload1_vector@17 (line 38)  reexecute=true
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: empty
    - l3: 0
    - l4: empty
    - l5: empty
    - l6: empty
   Expression stack
    - @0: 0
    - @1: stack[8]
ScopeDesc(pc=0x00007f76b4cd3924 offset=4e4):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007f76b4cd3924 offset=4e4):
   bytereverse::workload1_vector@57 (line 43)
ScopeDesc(pc=0x00007f76b4cd3929 offset=4e9):
   bytereverse::workload1_vector@20 (line 39)
ScopeDesc(pc=0x00007f76b4cd393c offset=4fc):
   bytereverse::workload1_vector@17 (line 38)  reexecute=true
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: empty
    - l3: 0
    - l4: empty
    - l5: empty
    - l6: empty
   Expression stack
    - @0: 0
    - @1: stack[8]
ScopeDesc(pc=0x00007f76b4cd3950 offset=510):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007f76b4cd3950 offset=510):
   bytereverse::workload1_vector@57 (line 43)
ScopeDesc(pc=0x00007f76b4cd3955 offset=515):
   bytereverse::workload1_vector@20 (line 39)
ScopeDesc(pc=0x00007f76b4cd3968 offset=528):
   bytereverse::workload1_vector@17 (line 38)  reexecute=true
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: empty
    - l3: 0
    - l4: empty
    - l5: empty
    - l6: empty
   Expression stack
    - @0: 0
    - @1: stack[8]
ScopeDesc(pc=0x00007f76b4cd397c offset=53c):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007f76b4cd397c offset=53c):
   bytereverse::workload1_vector@57 (line 43)
ScopeDesc(pc=0x00007f76b4cd3981 offset=541):
   bytereverse::workload1_vector@25 (line 39)
ScopeDesc(pc=0x00007f76b4cd3991 offset=551):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007f76b4cd3991 offset=551):
   bytereverse::workload1_vector@57 (line 43)
ScopeDesc(pc=0x00007f76b4cd399c offset=55c):
   bytereverse::workload1_vector@78 (line 46)  reexecute=true
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: empty
    - l3: stack[12]
    - l4: empty
    - l5: empty
    - l6: empty
   Expression stack
    - @0: stack[12]
    - @1: stack[16]
ScopeDesc(pc=0x00007f76b4cd39b0 offset=570):
   bytereverse::workload1_vector@12 (line 38)
ScopeDesc(pc=0x00007f76b4cd39c0 offset=580):
   jdk.incubator.vector.IntVector::intoArray@42 (line 3165)
ScopeDesc(pc=0x00007f76b4cd39c0 offset=580):
   bytereverse::workload1_vector@57 (line 43)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
relocations:
         @0x00007f76b4cd3380: 100f
relocInfo@0x00007f76b4cd3380 [type=1(oop) addr=0x00007f76b4cd344f offset=15] | [oop_addr=0x00007f76b4cd3451 *=0x000000011903ba00 offset=0]
         @0x00007f76b4cd3382: 11c2
relocInfo@0x00007f76b4cd3382 [type=1(oop) addr=0x00007f76b4cd3611 offset=450] | [oop_addr=0x00007f76b4cd3613 *=0x0000000119017f20 offset=0]
         @0x00007f76b4cd3384: 1017
relocInfo@0x00007f76b4cd3384 [type=1(oop) addr=0x00007f76b4cd3628 offset=23] | [oop_addr=0x00007f76b4cd362a *=0x0000000119017f20 offset=0]
         @0x00007f76b4cd3386: f803ad0ad0607f767444
relocInfo@0x00007f76b4cd338e [type=7(external_word) addr=0x00007f76b4cd366c offset=68 format=1 data={ad0ad0607f76}] | [target=0x00007f76ad0ad060]
         @0x00007f76b4cd3390: a017
relocInfo@0x00007f76b4cd3390 [type=10(poll) addr=0x00007f76b4cd3683 offset=23]
         @0x00007f76b4cd3392: f011cc5a
relocInfo@0x00007f76b4cd3394 [type=12(metadata) addr=0x00007f76b4cd36dd offset=90 format=3 data=17] | [metadata_addr=0x00007f76b4cd3a98 *=0x00000008000407c0 offset=0]metadata_value=0x00000008000407c0: {type array byte}
         @0x00007f76b4cd3396: b09b
relocInfo@0x00007f76b4cd3396 [type=11(poll_return) addr=0x00007f76b4cd3778 offset=155]
         @0x00007f76b4cd3398: c03b
relocInfo@0x00007f76b4cd3398 [type=12(metadata) addr=0x00007f76b4cd37b3 offset=59] | [metadata_addr=0x00007f76b4cd37b5 *=0x00000008000407c0 offset=0]metadata_value=0x00000008000407c0: {type array byte}
         @0x00007f76b4cd339a: 6414
relocInfo@0x00007f76b4cd339a [type=6(runtime_call) addr=0x00007f76b4cd37c7 offset=20 format=1] | [destination=0x00007f76ad074720]
         @0x00007f76b4cd339c: 6470
relocInfo@0x00007f76b4cd339c [type=6(runtime_call) addr=0x00007f76b4cd3837 offset=112 format=1] | [destination=0x00007f76ad11e920]
         @0x00007f76b4cd339e: f803c20f03287f767005
relocInfo@0x00007f76b4cd33a6 [type=7(external_word) addr=0x00007f76b4cd383c offset=5 data={c20f03287f76}] | [target=0x00007f76c20f0328]
         @0x00007f76b4cd33a8: 640e
relocInfo@0x00007f76b4cd33a8 [type=6(runtime_call) addr=0x00007f76b4cd384a offset=14 format=1] | [destination=0x00007f76c179e4b0]
         @0x00007f76b4cd33aa: f803c21650b87f767006
relocInfo@0x00007f76b4cd33b2 [type=7(external_word) addr=0x00007f76b4cd3850 offset=6 data={c21650b87f76}] | [target=0x00007f76c21650b8]
         @0x00007f76b4cd33b4: 640e
relocInfo@0x00007f76b4cd33b4 [type=6(runtime_call) addr=0x00007f76b4cd385e offset=14 format=1] | [destination=0x00007f76c179e4b0]
         @0x00007f76b4cd33b6: f803c21650b87f767006
relocInfo@0x00007f76b4cd33be [type=7(external_word) addr=0x00007f76b4cd3864 offset=6 data={c21650b87f76}] | [target=0x00007f76c21650b8]
         @0x00007f76b4cd33c0: 640e
relocInfo@0x00007f76b4cd33c0 [type=6(runtime_call) addr=0x00007f76b4cd3872 offset=14 format=1] | [destination=0x00007f76c179e4b0]
         @0x00007f76b4cd33c2: f803c21650b87f767006
relocInfo@0x00007f76b4cd33ca [type=7(external_word) addr=0x00007f76b4cd3878 offset=6 data={c21650b87f76}] | [target=0x00007f76c21650b8]
         @0x00007f76b4cd33cc: 640e
relocInfo@0x00007f76b4cd33cc [type=6(runtime_call) addr=0x00007f76b4cd3886 offset=14 format=1] | [destination=0x00007f76c179e4b0]
         @0x00007f76b4cd33ce: f803c21650b87f767006
relocInfo@0x00007f76b4cd33d6 [type=7(external_word) addr=0x00007f76b4cd388c offset=6 data={c21650b87f76}] | [target=0x00007f76c21650b8]
         @0x00007f76b4cd33d8: 640e
relocInfo@0x00007f76b4cd33d8 [type=6(runtime_call) addr=0x00007f76b4cd389a offset=14 format=1] | [destination=0x00007f76c179e4b0]
         @0x00007f76b4cd33da: 6445
relocInfo@0x00007f76b4cd33da [type=6(runtime_call) addr=0x00007f76b4cd38df offset=69 format=1] | [destination=0x00007f76ad11e920]
         @0x00007f76b4cd33dc: f803c20f03287f767005
relocInfo@0x00007f76b4cd33e4 [type=7(external_word) addr=0x00007f76b4cd38e4 offset=5 data={c20f03287f76}] | [target=0x00007f76c20f0328]
         @0x00007f76b4cd33e6: 640e
relocInfo@0x00007f76b4cd33e6 [type=6(runtime_call) addr=0x00007f76b4cd38f2 offset=14 format=1] | [destination=0x00007f76c179e4b0]
         @0x00007f76b4cd33e8: 6419
relocInfo@0x00007f76b4cd33e8 [type=6(runtime_call) addr=0x00007f76b4cd390b offset=25 format=1] | [destination=0x00007f76ad11e920]
         @0x00007f76b4cd33ea: f803c20f03287f767005
relocInfo@0x00007f76b4cd33f2 [type=7(external_word) addr=0x00007f76b4cd3910 offset=5 data={c20f03287f76}] | [target=0x00007f76c20f0328]
         @0x00007f76b4cd33f4: 640e
relocInfo@0x00007f76b4cd33f4 [type=6(runtime_call) addr=0x00007f76b4cd391e offset=14 format=1] | [destination=0x00007f76c179e4b0]
         @0x00007f76b4cd33f6: 6419
relocInfo@0x00007f76b4cd33f6 [type=6(runtime_call) addr=0x00007f76b4cd3937 offset=25 format=1] | [destination=0x00007f76ad11e920]
         @0x00007f76b4cd33f8: f803c20f03287f767005
relocInfo@0x00007f76b4cd3400 [type=7(external_word) addr=0x00007f76b4cd393c offset=5 data={c20f03287f76}] | [target=0x00007f76c20f0328]
         @0x00007f76b4cd3402: 640e
relocInfo@0x00007f76b4cd3402 [type=6(runtime_call) addr=0x00007f76b4cd394a offset=14 format=1] | [destination=0x00007f76c179e4b0]
         @0x00007f76b4cd3404: 6419
relocInfo@0x00007f76b4cd3404 [type=6(runtime_call) addr=0x00007f76b4cd3963 offset=25 format=1] | [destination=0x00007f76ad11e920]
         @0x00007f76b4cd3406: f803c20f03287f767005
relocInfo@0x00007f76b4cd340e [type=7(external_word) addr=0x00007f76b4cd3968 offset=5 data={c20f03287f76}] | [target=0x00007f76c20f0328]
         @0x00007f76b4cd3410: 640e
relocInfo@0x00007f76b4cd3410 [type=6(runtime_call) addr=0x00007f76b4cd3976 offset=14 format=1] | [destination=0x00007f76c179e4b0]
         @0x00007f76b4cd3412: 6421
relocInfo@0x00007f76b4cd3412 [type=6(runtime_call) addr=0x00007f76b4cd3997 offset=33 format=1] | [destination=0x00007f76ad11e920]
         @0x00007f76b4cd3414: f803c20f03287f767005
relocInfo@0x00007f76b4cd341c [type=7(external_word) addr=0x00007f76b4cd399c offset=5 data={c20f03287f76}] | [target=0x00007f76c20f0328]
         @0x00007f76b4cd341e: 640e
relocInfo@0x00007f76b4cd341e [type=6(runtime_call) addr=0x00007f76b4cd39aa offset=14 format=1] | [destination=0x00007f76c179e4b0]
         @0x00007f76b4cd3420: 6411
relocInfo@0x00007f76b4cd3420 [type=6(runtime_call) addr=0x00007f76b4cd39bb offset=17 format=1] | [destination=0x00007f76ad071420]
         @0x00007f76b4cd3422: f2488005
relocInfo@0x00007f76b4cd3424 [type=8(internal_word) addr=0x00007f76b4cd39c0 offset=5 data=584] | [target=0x00007f76b4cd3778]
         @0x00007f76b4cd3426: 6411
relocInfo@0x00007f76b4cd3426 [type=6(runtime_call) addr=0x00007f76b4cd39d1 offset=17 format=1] | [destination=0x00007f76ad11d6a0]
         @0x00007f76b4cd3428: 000f
relocInfo@0x00007f76b4cd3428 [type=0(none) addr=0x00007f76b4cd39e0 offset=15]
         @0x00007f76b4cd342a: 6400
relocInfo@0x00007f76b4cd342a [type=6(runtime_call) addr=0x00007f76b4cd39e0 offset=0 format=1] | [destination=0x00007f76ad081a20]
         @0x00007f76b4cd342c: 640f
relocInfo@0x00007f76b4cd342c [type=6(runtime_call) addr=0x00007f76b4cd39ef offset=15 format=1] | [destination=0x00007f76ad11ec60]
         @0x00007f76b4cd342e: 0000
relocInfo@0x00007f76b4cd342e [type=0(none) addr=0x00007f76b4cd39ef offset=0]
         @0x00007f76b4cd3430: 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Dependencies:
Dependency of type abstract_with_unique_concrete_subtype
  context = *jdk.incubator.vector.VectorShuffle
  class   = jdk.incubator.vector.Byte256Vector$Byte256Shuffle
   [nmethod<=klass]jdk.incubator.vector.VectorShuffle
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.IntVector$IntSpecies
  method  = {method} {0x00007f7644618218} 'loopBound' '(I)I' in 'jdk/incubator/vector/AbstractSpecies'
  class   = jdk.incubator.vector.VectorSpecies
  method  = *{method} {0x00007f7644616178} 'loopBound' '(I)I' in 'jdk/incubator/vector/VectorSpecies'
   [nmethod<=klass]jdk.incubator.vector.IntVector$IntSpecies
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.IntVector$IntSpecies
  method  = {method} {0x00007f76446177a8} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
  class   = jdk.incubator.vector.VectorSpecies
  method  = *{method} {0x00007f7644615fb0} 'length' '()I' in 'jdk/incubator/vector/VectorSpecies'
   [nmethod<=klass]jdk.incubator.vector.IntVector$IntSpecies
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.Byte256Vector
  method  = {method} {0x00007f76446c9218} 'reinterpretAsInts' '()Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/ByteVector'
  class   = jdk.incubator.vector.ByteVector
  method  = {method} {0x00007f76446c9218} 'reinterpretAsInts' '()Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/ByteVector'
   [nmethod<=klass]jdk.incubator.vector.Byte256Vector
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.Byte256Vector$Byte256Shuffle
  method  = {method} {0x00007f76447b8be0} 'checkIndexes' '()Ljdk/incubator/vector/VectorShuffle;' in 'jdk/incubator/vector/AbstractShuffle'
  class   = jdk.incubator.vector.VectorShuffle
  method  = *{method} {0x00007f76447b49b8} 'checkIndexes' '()Ljdk/incubator/vector/VectorShuffle;' in 'jdk/incubator/vector/VectorShuffle'
   [nmethod<=klass]jdk.incubator.vector.Byte256Vector$Byte256Shuffle
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.VectorOperators$ComparisonImpl
  method  = {method} {0x00007f76447c0d08} 'opCode' '(II)I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  class   = jdk.incubator.vector.VectorOperators$OperatorImpl
  method  = {method} {0x00007f76447c0d08} 'opCode' '(II)I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
   [nmethod<=klass]jdk.incubator.vector.VectorOperators$ComparisonImpl
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.VectorOperators$ComparisonImpl
  method  = {method} {0x00007f76447c0dd8} 'opCodeRaw' '()I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  class   = jdk.incubator.vector.VectorOperators$OperatorImpl
  method  = {method} {0x00007f76447c0dd8} 'opCodeRaw' '()I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
   [nmethod<=klass]jdk.incubator.vector.VectorOperators$ComparisonImpl
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ExceptionHandlerTable (size = 24 bytes)
catch_pco = 908 (pc=0x00007f76b4cd37cc, 1 entries)
  bci -1 at scope depth 0 -> pco 1392 (pc=0x00007f76b4cd39b0)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ImplicitExceptionTable (size = 3 entries, 28 bytes):
{
   < 0x00007f76b4cd346e, 0x00007f76b4cd38f8 > < 0x00007f76b4cd34c0, 0x00007f76b4cd3924 > < 0x00007f76b4cd34f0, 0x00007f76b4cd3924 > 
}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded oops:
#0: 0x0000000000000000 NULL-oop
#1: 0x0000000119017e40 a 'java/lang/Class'{0x0000000119017e40} = 'jdk/incubator/vector/Byte256Vector'
#2: 0x0000000119047f98 a 'java/lang/Class'{0x0000000119047f98} = 'jdk/incubator/vector/Byte256Vector$Byte256Shuffle'
#3: 0x0000000119047e88 a 'java/lang/Class'{0x0000000119047e88} = 'jdk/incubator/vector/Byte256Vector$Byte256Mask'
#4: 0x000000011903b970 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x000000011903b970}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded metadata:
# 0: 0x0000000000000000 NULL-oop
# 1: 0x00007f7644411bf0 {method} {0x00007f7644411bf0} 'workload1_vector' '([I[II)I' in 'bytereverse'
# 2: 0x00007f7644618218 {method} {0x00007f7644618218} 'loopBound' '(I)I' in 'jdk/incubator/vector/AbstractSpecies'
# 3: 0x00007f764441b780 {method} {0x00007f764441b780} 'intoArray' '([II)V' in 'jdk/incubator/vector/IntVector'
# 4: 0x00007f764441afd0 {method} {0x00007f764441afd0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[II)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/IntVector'
# 5: 0x00007f76446b2a80 {method} {0x00007f76446b2a80} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
# 6: 0x00007f76441639c8 {method} {0x00007f76441639c8} 'checkIndex' '(II)I' in 'java/util/Objects'
# 7: 0x00007f76447b4cd8 {method} {0x00007f76447b4cd8} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[II)Ljdk/incubator/vector/VectorShuffle;' in 'jdk/incubator/vector/VectorShuffle'
# 8: 0x00007f7644618f60 {method} {0x00007f7644618f60} 'shuffleFromArray' '([II)Ljdk/incubator/vector/VectorShuffle;' in 'jdk/incubator/vector/AbstractSpecies'
# 9: 0x00007f76447826f0 {method} {0x00007f76447826f0} 'shuffleFromArray' '([II)Ljdk/incubator/vector/AbstractShuffle;' in 'jdk/incubator/vector/Byte256Vector'
#10: 0x00007f76446fcbf8 {method} {0x00007f76446fcbf8} 'shuffleFromArray' '([II)Ljdk/incubator/vector/Byte256Vector$Byte256Shuffle;' in 'jdk/incubator/vector/Byte256Vector'
#11: 0x00007f764441df10 {method} {0x00007f764441df10} 'reinterpretAsBytes' '()Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/IntVector'
#12: 0x00007f764464e5e8 {method} {0x00007f764464e5e8} 'asByteVectorRaw' '()Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/Int256Vector'
#13: 0x00007f7644648c88 {method} {0x00007f7644648c88} 'asByteVectorRaw' '()Ljdk/incubator/vector/Byte256Vector;' in 'jdk/incubator/vector/Int256Vector'
#14: 0x00007f7644603ba8 {method} {0x00007f7644603ba8} 'asByteVectorRawTemplate' '()Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/AbstractVector'
#15: 0x00007f7644603ad8 {method} {0x00007f7644603ad8} 'asVectorRawTemplate' '(Ljdk/incubator/vector/LaneType;)Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractVector'
#16: 0x00007f7644605e50 {method} {0x00007f7644605e50} 'convert0' '(CLjdk/incubator/vector/AbstractSpecies;)Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractVector'
#17: 0x00000008000407c0 {type array byte}
#18: 0x00007f76446b2d70 {method} {0x00007f76446b2d70} 'roundDown' '(II)I' in 'jdk/incubator/vector/VectorIntrinsics'
#19: 0x00007f7644648168 {method} {0x00007f7644648168} 'length' '()I' in 'jdk/incubator/vector/Int256Vector'
#20: 0x00007f76447b6b30 {method} {0x00007f76447b6b30} '<init>' '([II)V' in 'jdk/incubator/vector/Byte256Vector$Byte256Shuffle'
#21: 0x00007f76447b8280 {method} {0x00007f76447b8280} '<init>' '(I[II)V' in 'jdk/incubator/vector/AbstractShuffle'
#22: 0x00007f76447b8470 {method} {0x00007f76447b8470} 'prepare' '(I[II)[B' in 'jdk/incubator/vector/AbstractShuffle'
#23: 0x00007f76447b92d8 {method} {0x00007f76447b92d8} 'partiallyWrapIndex' '(II)I' in 'jdk/incubator/vector/AbstractShuffle'
#24: 0x00007f76447b93e8 {method} {0x00007f76447b93e8} 'checkIndex0' '(IIB)I' in 'jdk/incubator/vector/AbstractShuffle'
#25: 0x00007f7644780c78 {method} {0x00007f7644780c78} 'rearrange' '(Ljdk/incubator/vector/VectorShuffle;)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/Byte256Vector'
#26: 0x00007f76446fefe0 {method} {0x00007f76446fefe0} 'rearrange' '(Ljdk/incubator/vector/VectorShuffle;)Ljdk/incubator/vector/Byte256Vector;' in 'jdk/incubator/vector/Byte256Vector'
#27: 0x00007f76446c3230 {method} {0x00007f76446c3230} 'rearrangeTemplate' '(Ljava/lang/Class;Ljdk/incubator/vector/VectorShuffle;)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector'
#28: 0x00007f76447b8be0 {method} {0x00007f76447b8be0} 'checkIndexes' '()Ljdk/incubator/vector/VectorShuffle;' in 'jdk/incubator/vector/AbstractShuffle'
#29: 0x00000008000dd220 'jdk/incubator/vector/VectorShuffle'
#30: 0x00000008000dd710 'jdk/incubator/vector/Byte256Vector$Byte256Shuffle'
#31: 0x00000008000cc920 'jdk/incubator/vector/IntVector$IntSpecies'
#32: 0x00000008000cc158 'jdk/incubator/vector/VectorSpecies'
#33: 0x00007f7644616178 {method} {0x00007f7644616178} 'loopBound' '(I)I' in 'jdk/incubator/vector/VectorSpecies'
#34: 0x00007f76446177a8 {method} {0x00007f76446177a8} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
#35: 0x00007f7644615fb0 {method} {0x00007f7644615fb0} 'length' '()I' in 'jdk/incubator/vector/VectorSpecies'
#36: 0x00000008000d8a78 'jdk/incubator/vector/Byte256Vector'
#37: 0x00007f76446c9218 {method} {0x00007f76446c9218} 'reinterpretAsInts' '()Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/ByteVector'
#38: 0x00000008000d68a0 'jdk/incubator/vector/ByteVector'
#39: 0x00007f76447b49b8 {method} {0x00007f76447b49b8} 'checkIndexes' '()Ljdk/incubator/vector/VectorShuffle;' in 'jdk/incubator/vector/VectorShuffle'
#40: 0x00000008000df9e0 'jdk/incubator/vector/VectorOperators$ComparisonImpl'
#41: 0x00007f76447c0d08 {method} {0x00007f76447c0d08} 'opCode' '(II)I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
#42: 0x00000008000de600 'jdk/incubator/vector/VectorOperators$OperatorImpl'
#43: 0x00007f76447c0dd8 {method} {0x00007f76447c0dd8} 'opCodeRaw' '()I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Warmup complete
Measurement complete
r[0] = -973036125
r[1] = 265357138
r[2] = 1738579930
r[3] = 1119837421
r[4] = -169723489
r[5] = -1698086670
r[6] = -886575462
r[7] = -2037483525
[Time Vector Premute] 6578 ms [Res] 983040000
Warmup complete
Measurement complete
r[0] = -973036125
r[1] = 265357138
r[2] = 1738579930
r[3] = 1119837421
r[4] = -169723489
r[5] = -1698086670
r[6] = -886575462
r[7] = -2037483525
[Time Vector Shifts] 152 ms [Res] 983040000
------------------------------------------------------------------------
static bytereverse::workload1_vector([I[II)I
  interpreter_invocation_count:         346
  invocation_counter:                   346
  backedge_counter:                  354304
  decompile_count:                        0
  mdo size: 944 bytes

0 iconst_0
1 istore_3
2 iconst_0
3 istore #4
5 iload_3
6 getstatic 19 <bytereverse.SPECIES/Ljdk/incubator/vector/VectorSpecies;> 
9 getstatic 7 <bytereverse.LEN/I> 
12 invokeinterface 23 <jdk/incubator/vector/VectorSpecies.loopBound(I)I> 
  0   bci: 12   VirtualCallData     count(0) nonprofiled_count(0) entries(1)
                                    'jdk/incubator/vector/IntVector$IntSpecies'(354443 1.00)
17 if_icmpge 74
  56  bci: 17   BranchData          taken(139) displacement(368)
                                    not taken(354304)
20 getstatic 19 <bytereverse.SPECIES/Ljdk/incubator/vector/VectorSpecies;> 
23 fast_aload_0
24 iload_3
25 invokestatic 28 <jdk/incubator/vector/IntVector.fromArray(Ljdk/incubator/vector/VectorSpecies;[II)Ljdk/incubator/vector/IntVector;> 
  88  bci: 25   CounterData         count(354304)
28 astore #5
30 aload #5
32 invokevirtual 34 <jdk/incubator/vector/IntVector.reinterpretAsBytes()Ljdk/incubator/vector/ByteVector;> 
  104 bci: 32   VirtualCallData     count(354304) nonprofiled_count(0) entries(0)
35 getstatic 38 <jdk/incubator/vector/ByteVector.SPECIES_256/Ljdk/incubator/vector/VectorSpecies;> 
38 getstatic 43 <bytereverse.idx/[I> 
41 iconst_0
42 invokestatic 47 <jdk/incubator/vector/VectorShuffle.fromArray(Ljdk/incubator/vector/VectorSpecies;[II)Ljdk/incubator/vector/VectorShuffle;> 
  160 bci: 42   CounterData         count(354304)
45 invokevirtual 52 <jdk/incubator/vector/ByteVector.rearrange(Ljdk/incubator/vector/VectorShuffle;)Ljdk/incubator/vector/ByteVector;> 
  176 bci: 45   VirtualCallData     count(0) nonprofiled_count(0) entries(1)
                                    'jdk/incubator/vector/Byte256Vector'(354304 1.00)
48 invokevirtual 56 <jdk/incubator/vector/ByteVector.reinterpretAsInts()Ljdk/incubator/vector/IntVector;> 
  232 bci: 48   VirtualCallData     count(0) nonprofiled_count(0) entries(1)
                                    'jdk/incubator/vector/Byte256Vector'(354304 1.00)
51 astore #6
53 aload #6
55 aload_1
56 iload_3
57 invokevirtual 60 <jdk/incubator/vector/IntVector.intoArray([II)V> 
  288 bci: 57   VirtualCallData     count(354304) nonprofiled_count(0) entries(0)
60 iload_3
61 getstatic 19 <bytereverse.SPECIES/Ljdk/incubator/vector/VectorSpecies;> 
64 invokeinterface 64 <jdk/incubator/vector/VectorSpecies.length()I> 
  344 bci: 64   VirtualCallData     count(0) nonprofiled_count(0) entries(1)
                                    'jdk/incubator/vector/IntVector$IntSpecies'(354304 1.00)
69 iadd
70 istore_3
71 goto 5
  400 bci: 71   JumpData            taken(354304) displacement(-400)
74 iload_3
75 getstatic 7 <bytereverse.LEN/I> 
78 if_icmpge 96
  424 bci: 78   BranchData          taken(139) displacement(72)
                                    not taken(0)
81 aload_1
82 iload_3
83 aload_0
84 iload_3
85 iaload
86 invokestatic 68 <java/lang/Integer.reverse(I)I> 
  456 bci: 86   CounterData         count(0)
89 iastore
90 iinc #3 1
93 goto 74
  472 bci: 93   JumpData            taken(0) displacement(-48)
96 iload_3
97 ireturn
------------------------------------------------------------------------
Total MDO size: 944 bytes
