CompileCommand: dontinline test_valhalla.* bool dontinline = true
CompileCommand: PrintIdealPhase test_valhalla.micro const char* PrintIdealPhase = 'AFTER_PARSING'
AFTER: AFTER_PARSING
   0  Root  === 0 39 216 217  [[ 0 1 3 79 26 34 40 41 42 73 ]] 
   1  Con  === 0  [[ ]]  #top
   3  Start  === 3 0  [[ 3 5 6 7 8 9 10 11 12 13 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:float, 6:float, 7:float, 8:int}
   5  Parm  === 3  [[ 29 ]] Control !jvms: test_valhalla::micro @ bci:-1 (line 39)
   6  Parm  === 3  [[ 44 35 ]] I_O !jvms: test_valhalla::micro @ bci:-1 (line 39)
   7  Parm  === 3  [[ 68 60 60 51 44 35 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !jvms: test_valhalla::micro @ bci:-1 (line 39)
   8  Parm  === 3  [[ 217 216 44 39 35 ]] FramePtr !jvms: test_valhalla::micro @ bci:-1 (line 39)
   9  Parm  === 3  [[ 217 216 35 ]] ReturnAdr !jvms: test_valhalla::micro @ bci:-1 (line 39)
  10  Parm  === 3  [[ 76 44 35 ]] Parm0: float !jvms: test_valhalla::micro @ bci:-1 (line 39)
  11  Parm  === 3  [[ 82 44 35 ]] Parm1: float !jvms: test_valhalla::micro @ bci:-1 (line 39)
  12  Parm  === 3  [[ 35 ]] Parm2: float !jvms: test_valhalla::micro @ bci:-1 (line 39)
  13  Parm  === 3  [[ 27 35 ]] Parm3: int !jvms: test_valhalla::micro @ bci:-1 (line 39)
  26  ConI  === 0  [[ 35 27 ]]  #int:50000
  27  CmpI  === _ 13 26  [[ 28 ]]  !jvms: test_valhalla::micro @ bci:6 (line 40)
  28  Bool  === _ 27  [[ 29 ]] [le] !jvms: test_valhalla::micro @ bci:6 (line 40)
  29  If  === 5 28  [[ 30 31 ]] P=1.000000, C=6827.000000 !jvms: test_valhalla::micro @ bci:6 (line 40)
  30  IfTrue  === 29  [[ 44 ]] #1 !jvms: test_valhalla::micro @ bci:6 (line 40)
  31  IfFalse  === 29  [[ 35 ]] #0 !jvms: test_valhalla::micro @ bci:6 (line 40)
  34  ConI  === 0  [[ 35 ]]  #int:-187
  35  CallStaticJava  === 31 6 7 8 9 (34 10 11 12 1 1 13 26 ) [[ 36 ]] # Static uncommon_trap(reason='unstable_if' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 test_valhalla::micro @ bci:6 (line 40) reexecute !jvms: test_valhalla::micro @ bci:6 (line 40)
  36  Proj  === 35  [[ 39 ]] #0 !jvms: test_valhalla::micro @ bci:6 (line 40)
  39  Halt  === 36 1 1 8 1  [[ 0 ]]  !jvms: test_valhalla::micro @ bci:6 (line 40)
  40  ConP  === 0  [[ 44 ]]  #precise TwoDPoint: 0x00007b4c880acd20:Constant:exact *  Klass:precise TwoDPoint: 0x00007b4c880acd20:Constant:exact *
  41  ConI  === 0  [[ 44 ]]  #int:0
  42  ConL  === 0  [[ 44 ]]  #long:24
  44  Allocate  === 30 6 7 8 1 (42 40 41 1 1 _ _ _ 10 11 1 1 1 ) [[ 45 46 47 54 55 56 ]]  rawptr:NotNull ( int:>=0, java/lang/Object:NotNull *, bool, top, bool, bottom, java/lang/Object:NotNull *, long ) allocationKlass:TwoDPoint test_valhalla::micro @ bci:24 (line 43) !jvms: test_valhalla::micro @ bci:24 (line 43)
  45  Proj  === 44  [[ 48 ]] #0 !jvms: test_valhalla::micro @ bci:24 (line 43)
  46  Proj  === 44  [[ 51 ]] #2 (i_o_use)  Memory: @rawptr:BotPTR, idx=Raw; !jvms: test_valhalla::micro @ bci:24 (line 43)
  47  Proj  === 44  [[ 48 217 53 ]] #1 (i_o_use) !jvms: test_valhalla::micro @ bci:24 (line 43)
  48  Catch  === 45 47  [[ 49 50 ]]  !jvms: test_valhalla::micro @ bci:24 (line 43)
  49  CatchProj  === 48  [[ 57 76 82 ]] #0@bci -1  !jvms: test_valhalla::micro @ bci:24 (line 43)
  50  CatchProj  === 48  [[ 217 53 ]] #1@bci -1  !jvms: test_valhalla::micro @ bci:24 (line 43)
  51  MergeMem  === _ 1 7 46  [[ 217 ]]  { N46:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: test_valhalla::micro @ bci:24 (line 43)
  53  CreateEx  === 50 47  [[ 217 ]]  #java/lang/Throwable (java/io/Serializable):NotNull *  Oop:java/lang/Throwable (java/io/Serializable):NotNull * !jvms: test_valhalla::micro @ bci:24 (line 43)
  54  Proj  === 44  [[ 60 76 82 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !jvms: test_valhalla::micro @ bci:24 (line 43)
  55  Proj  === 44  [[ 216 ]] #1 !jvms: test_valhalla::micro @ bci:24 (line 43)
  56  Proj  === 44  [[ 57 61 77 83 ]] #5 !jvms: test_valhalla::micro @ bci:24 (line 43)
  57  Initialize  === 49 1 60 1 1 56 76 82  [[ 58 59 ]]  !jvms: test_valhalla::micro @ bci:24 (line 43)
  58  Proj  === 57  [[ 148 61 66 ]] #0 !jvms: test_valhalla::micro @ bci:24 (line 43)
  59  Proj  === 57  [[ 147 146 145 144 143 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !jvms: test_valhalla::micro @ bci:24 (line 43)
  60  MergeMem  === _ 1 54 1 1 1 7 7  [[ 57 ]]  { - - - N7:TwoDPoint:exact+16 * N7:TwoDPoint:exact+20 * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: test_valhalla::micro @ bci:24 (line 43)
  61  CheckCastPP  === 58 56  [[ 148 80 80 74 74 ]]  #TwoDPoint:NotNull:exact *  Oop:TwoDPoint:NotNull:exact * !jvms: test_valhalla::micro @ bci:24 (line 43)
  66  Region  === _ 58  [[ 147 146 145 68 143 144 ]]  !jvms: test_valhalla::micro @ bci:30 (line 43)
  68  Phi  === 66 7  [[ 69 ]]  #memory  Memory: @BotPTR *+bot, idx=Bot; !jvms: test_valhalla::micro @ bci:30 (line 43)
  69  MergeMem  === _ 1 68 143 144 145 146 147  [[ 148 ]]  { N143:rawptr:BotPTR N144:java/lang/Object * N145:java/lang/Object+8 * [narrowklass] N146:TwoDPoint:exact+16 * N147:TwoDPoint:exact+20 * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: test_valhalla::micro @ bci:30 (line 43)
  73  ConL  === 0  [[ 74 77 ]]  #long:16
  74  AddP  === _ 61 61 73  [[ 155 ]]   Oop:TwoDPoint:NotNull:exact+16 * !jvms: TwoDPoint::<init> @ bci:2 (line 11) test_valhalla::micro @ bci:30 (line 43)
  76  StoreF  === 49 54 77 10  [[ 57 ]]  @TwoDPoint:exact+16 *, name=_x, idx=6;  Memory: @rawptr:NotNull, idx=Raw; !orig=75 !jvms: TwoDPoint::<init> @ bci:2 (line 11) test_valhalla::micro @ bci:30 (line 43)
  77  AddP  === _ 1 56 73  [[ 76 ]]  !jvms: TwoDPoint::<init> @ bci:2 (line 11) test_valhalla::micro @ bci:30 (line 43)
  79  ConL  === 0  [[ 80 83 ]]  #long:20
  80  AddP  === _ 61 61 79  [[ 157 ]]   Oop:TwoDPoint:NotNull:exact+20 * !jvms: TwoDPoint::<init> @ bci:7 (line 12) test_valhalla::micro @ bci:30 (line 43)
  82  StoreF  === 49 54 83 11  [[ 57 ]]  @TwoDPoint:exact+20 *, name=_y, idx=7;  Memory: @rawptr:NotNull, idx=Raw; !orig=81 !jvms: TwoDPoint::<init> @ bci:7 (line 12) test_valhalla::micro @ bci:30 (line 43)
  83  AddP  === _ 1 56 79  [[ 82 ]]  !jvms: TwoDPoint::<init> @ bci:7 (line 12) test_valhalla::micro @ bci:30 (line 43)
 143  Phi  === 66 59  [[ 69 ]]  #memory  Memory: @rawptr:BotPTR, idx=Raw; !orig=68 !jvms: test_valhalla::micro @ bci:30 (line 43)
 144  Phi  === 66 59  [[ 69 ]]  #memory  Memory: @java/lang/Object *, idx=4; !orig=68 !jvms: test_valhalla::micro @ bci:30 (line 43)
 145  Phi  === 66 59  [[ 69 ]]  #memory  Memory: @java/lang/Object+8 * [narrowklass], idx=5; !orig=68 !jvms: test_valhalla::micro @ bci:30 (line 43)
 146  Phi  === 66 59  [[ 69 ]]  #memory  Memory: @TwoDPoint:exact+16 *, name=_x, idx=6; !orig=68 !jvms: test_valhalla::micro @ bci:30 (line 43)
 147  Phi  === 66 59  [[ 69 ]]  #memory  Memory: @TwoDPoint:exact+20 *, name=_y, idx=7; !orig=68 !jvms: test_valhalla::micro @ bci:30 (line 43)
 148  MemBarStoreStore  === 58 1 69 1 1 61  [[ 149 150 ]]  !jvms: TwoDPoint::<init> @ bci:-1 (line 11) test_valhalla::micro @ bci:30 (line 43)
 149  Proj  === 148  [[ 216 213 ]] #0 !jvms: TwoDPoint::<init> @ bci:-1 (line 11) test_valhalla::micro @ bci:30 (line 43)
 150  Proj  === 148  [[ 216 155 157 ]] #2  Memory: @BotPTR *+bot, idx=Bot; !jvms: TwoDPoint::<init> @ bci:-1 (line 11) test_valhalla::micro @ bci:30 (line 43)
 155  LoadF  === _ 150 74  [[ 199 ]]  @TwoDPoint:exact+16 *, name=_x, idx=6; #float !jvms: test_valhalla::micro @ bci:30 (line 43)
 157  LoadF  === _ 150 80  [[ 210 ]]  @TwoDPoint:exact+20 *, name=_y, idx=7; #float !jvms: test_valhalla::micro @ bci:30 (line 43)
 199  ConvF2D  === _ 155  [[ 201 201 ]]  #double !jvms: TwoDPoint::compute_disatnce @ bci:4 (line 16) test_valhalla::micro @ bci:37 (line 45)
 201  MulD  === _ 199 199  [[ 212 ]]  !jvms: TwoDPoint::compute_disatnce @ bci:8 (line 16) test_valhalla::micro @ bci:37 (line 45)
 210  ConvF2D  === _ 157  [[ 211 211 ]]  #double !jvms: TwoDPoint::compute_disatnce @ bci:15 (line 16) test_valhalla::micro @ bci:37 (line 45)
 211  MulD  === _ 210 210  [[ 212 ]]  !jvms: TwoDPoint::compute_disatnce @ bci:19 (line 16) test_valhalla::micro @ bci:37 (line 45)
 212  AddD  === _ 201 211  [[ 213 ]]  !jvms: TwoDPoint::compute_disatnce @ bci:22 (line 16) test_valhalla::micro @ bci:37 (line 45)
 213  SqrtD  === 149 212  [[ 214 ]]  !jvms: TwoDPoint::compute_disatnce @ bci:23 (line 16) test_valhalla::micro @ bci:37 (line 45)
 214  ConvD2F  === _ 213  [[ 216 ]]  #float !jvms: TwoDPoint::compute_disatnce @ bci:26 (line 16) test_valhalla::micro @ bci:37 (line 45)
 216  Return  === 149 55 150 8 9 returns 214  [[ 0 ]] 
 217  Rethrow  === 50 47 51 8 9 exception 53  [[ 0 ]] 
AFTER: AFTER_PARSING
   0  Root  === 0 198 374 444 574 575  [[ 0 1 3 25 26 34 35 36 67 73 79 103 439 230 125 193 ]] 
   1  Con  === 0  [[ ]]  #top
   3  Start  === 3 0  [[ 3 5 6 7 8 9 10 11 12 13 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:float, 6:float, 7:float, 8:int}
   5  Parm  === 3  [[ 29 ]] Control !jvms: test_valhalla::micro @ bci:-1 (line 39)
   6  Parm  === 3  [[ 232 38 ]] I_O !jvms: test_valhalla::micro @ bci:-1 (line 39)
   7  Parm  === 3  [[ 45 404 261 248 248 232 38 62 54 54 54 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !jvms: test_valhalla::micro @ bci:-1 (line 39)
   8  Parm  === 3  [[ 575 574 440 444 370 38 374 361 232 194 198 184 ]] FramePtr !jvms: test_valhalla::micro @ bci:-1 (line 39)
   9  Parm  === 3  [[ 575 574 440 370 194 ]] ReturnAdr !jvms: test_valhalla::micro @ bci:-1 (line 39)
  10  Parm  === 3  [[ 268 232 70 38 ]] Parm0: float !jvms: test_valhalla::micro @ bci:-1 (line 39)
  11  Parm  === 3  [[ 273 232 76 38 ]] Parm1: float !jvms: test_valhalla::micro @ bci:-1 (line 39)
  12  Parm  === 3  [[ 82 38 ]] Parm2: float !jvms: test_valhalla::micro @ bci:-1 (line 39)
  13  Parm  === 3  [[ 27 ]] Parm3: int !jvms: test_valhalla::micro @ bci:-1 (line 39)
  25  ConP  === 0  [[ 338 159 ]]  #null
  26  ConI  === 0  [[ 27 ]]  #int:50000
  27  CmpI  === _ 13 26  [[ 28 ]]  !jvms: test_valhalla::micro @ bci:6 (line 40)
  28  Bool  === _ 27  [[ 29 ]] [le] !jvms: test_valhalla::micro @ bci:6 (line 40)
  29  If  === 5 28  [[ 30 31 ]] P=0.840166, C=33954.000000 !jvms: test_valhalla::micro @ bci:6 (line 40)
  30  IfTrue  === 29  [[ 232 ]] #1 !jvms: test_valhalla::micro @ bci:6 (line 40)
  31  IfFalse  === 29  [[ 38 ]] #0 !jvms: test_valhalla::micro @ bci:6 (line 40)
  34  ConP  === 0  [[ 38 423 184 ]]  #precise ThreeDPoint: 0x00007b4cd8192f20:Constant:exact *  Klass:precise ThreeDPoint: 0x00007b4cd8192f20:Constant:exact *
  35  ConI  === 0  [[ 38 361 338 232 184 159 ]]  #int:0
  36  ConL  === 0  [[ 38 184 232 361 ]]  #long:24
  38  Allocate  === 31 6 7 8 1 (36 34 35 1 1 _ _ _ 10 11 12 1 1 ) [[ 39 40 41 48 49 50 ]]  rawptr:NotNull ( int:>=0, java/lang/Object:NotNull *, bool, top, bool, bottom, java/lang/Object:NotNull *, long ) allocationKlass:ThreeDPoint test_valhalla::micro @ bci:9 (line 41) !jvms: test_valhalla::micro @ bci:9 (line 41)
  39  Proj  === 38  [[ 42 ]] #0 !jvms: test_valhalla::micro @ bci:9 (line 41)
  40  Proj  === 38  [[ 255 ]] #2 (i_o_use)  Memory: @rawptr:BotPTR, idx=Raw; !jvms: test_valhalla::micro @ bci:9 (line 41)
  41  Proj  === 38  [[ 42 253 47 ]] #1 (i_o_use) !jvms: test_valhalla::micro @ bci:9 (line 41)
  42  Catch  === 39 41  [[ 43 44 ]]  !jvms: test_valhalla::micro @ bci:9 (line 41)
  43  CatchProj  === 42  [[ 51 70 76 82 ]] #0@bci -1  !jvms: test_valhalla::micro @ bci:9 (line 41)
  44  CatchProj  === 42  [[ 252 47 ]] #1@bci -1  !jvms: test_valhalla::micro @ bci:9 (line 41)
  45  MergeMem  === _ 1 7 255  [[ 575 ]]  { N255:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: test_valhalla::micro @ bci:9 (line 41)
  47  CreateEx  === 44 41  [[ 256 ]]  #java/lang/Throwable (java/io/Serializable):NotNull *  Oop:java/lang/Throwable (java/io/Serializable):NotNull * !jvms: test_valhalla::micro @ bci:9 (line 41)
  48  Proj  === 38  [[ 54 70 76 82 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !jvms: test_valhalla::micro @ bci:9 (line 41)
  49  Proj  === 38  [[ 184 ]] #1 !jvms: test_valhalla::micro @ bci:9 (line 41)
  50  Proj  === 38  [[ 51 55 71 77 83 ]] #5 !jvms: test_valhalla::micro @ bci:9 (line 41)
  51  Initialize  === 43 1 54 1 1 50 70 76 82  [[ 52 53 ]]  !jvms: test_valhalla::micro @ bci:9 (line 41)
  52  Proj  === 51  [[ 155 55 60 ]] #0 !jvms: test_valhalla::micro @ bci:9 (line 41)
  53  Proj  === 51  [[ 154 153 152 151 150 149 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !jvms: test_valhalla::micro @ bci:9 (line 41)
  54  MergeMem  === _ 1 48 1 1 1 7 7 7  [[ 51 ]]  { - - - N7:ThreeDPoint:exact+12 * N7:ThreeDPoint:exact+16 * N7:ThreeDPoint:exact+20 * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: test_valhalla::micro @ bci:9 (line 41)
  55  CheckCastPP  === 52 50  [[ 155 80 80 74 74 68 68 ]]  #ThreeDPoint:NotNull:exact *  Oop:ThreeDPoint:NotNull:exact * !jvms: test_valhalla::micro @ bci:9 (line 41)
  60  Region  === _ 52  [[ 154 153 152 62 149 150 151 ]]  !jvms: test_valhalla::micro @ bci:16 (line 41)
  62  Phi  === 60 7  [[ 63 ]]  #memory  Memory: @BotPTR *+bot, idx=Bot; !jvms: test_valhalla::micro @ bci:16 (line 41)
  63  MergeMem  === _ 1 62 149 150 151 152 153 154  [[ 155 ]]  { N149:rawptr:BotPTR N150:java/lang/Object * N151:java/lang/Object+8 * [narrowklass] N152:ThreeDPoint:exact+12 * N153:ThreeDPoint:exact+16 * N154:ThreeDPoint:exact+20 * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: test_valhalla::micro @ bci:16 (line 41)
  67  ConL  === 0  [[ 68 71 430 211 ]]  #long:12
  68  AddP  === _ 55 55 67  [[ 162 ]]   Oop:ThreeDPoint:NotNull:exact+12 * !jvms: ThreeDPoint::<init> @ bci:2 (line 26) test_valhalla::micro @ bci:16 (line 41)
  70  StoreF  === 43 48 71 10  [[ 51 ]]  @ThreeDPoint:exact+12 *, name=_x, idx=6;  Memory: @rawptr:NotNull, idx=Raw; !orig=69 !jvms: ThreeDPoint::<init> @ bci:2 (line 26) test_valhalla::micro @ bci:16 (line 41)
  71  AddP  === _ 1 50 67  [[ 70 ]]  !jvms: ThreeDPoint::<init> @ bci:2 (line 26) test_valhalla::micro @ bci:16 (line 41)
  73  ConL  === 0  [[ 74 77 433 413 387 269 216 266 ]]  #long:16
  74  AddP  === _ 55 55 73  [[ 164 ]]   Oop:ThreeDPoint:NotNull:exact+16 * !jvms: ThreeDPoint::<init> @ bci:7 (line 27) test_valhalla::micro @ bci:16 (line 41)
  76  StoreF  === 43 48 77 11  [[ 51 ]]  @ThreeDPoint:exact+16 *, name=_y, idx=7;  Memory: @rawptr:NotNull, idx=Raw; !orig=75 !jvms: ThreeDPoint::<init> @ bci:7 (line 27) test_valhalla::micro @ bci:16 (line 41)
  77  AddP  === _ 1 50 73  [[ 76 ]]  !jvms: ThreeDPoint::<init> @ bci:7 (line 27) test_valhalla::micro @ bci:16 (line 41)
  79  ConL  === 0  [[ 80 83 435 416 392 274 271 221 ]]  #long:20
  80  AddP  === _ 55 55 79  [[ 166 ]]   Oop:ThreeDPoint:NotNull:exact+20 * !jvms: ThreeDPoint::<init> @ bci:12 (line 28) test_valhalla::micro @ bci:16 (line 41)
  82  StoreF  === 43 48 83 12  [[ 51 ]]  @ThreeDPoint:exact+20 *, name=_z, idx=8;  Memory: @rawptr:NotNull, idx=Raw; !orig=81 !jvms: ThreeDPoint::<init> @ bci:12 (line 28) test_valhalla::micro @ bci:16 (line 41)
  83  AddP  === _ 1 50 79  [[ 82 ]]  !jvms: ThreeDPoint::<init> @ bci:12 (line 28) test_valhalla::micro @ bci:16 (line 41)
 103  ConL  === 0  [[ 403 ]]  #long:8
 125  ConI  === 0  [[ 399 399 159 338 228 228 ]]  #int:1
 149  Phi  === 60 53  [[ 63 ]]  #memory  Memory: @rawptr:BotPTR, idx=Raw; !orig=62 !jvms: test_valhalla::micro @ bci:16 (line 41)
 150  Phi  === 60 53  [[ 63 ]]  #memory  Memory: @java/lang/Object *, idx=4; !orig=62 !jvms: test_valhalla::micro @ bci:16 (line 41)
 151  Phi  === 60 53  [[ 63 ]]  #memory  Memory: @java/lang/Object+8 * [narrowklass], idx=5; !orig=62 !jvms: test_valhalla::micro @ bci:16 (line 41)
 152  Phi  === 60 53  [[ 63 ]]  #memory  Memory: @ThreeDPoint:exact+12 *, name=_x, idx=6; !orig=62 !jvms: test_valhalla::micro @ bci:16 (line 41)
 153  Phi  === 60 53  [[ 63 ]]  #memory  Memory: @ThreeDPoint:exact+16 *, name=_y, idx=7; !orig=62 !jvms: test_valhalla::micro @ bci:16 (line 41)
 154  Phi  === 60 53  [[ 63 ]]  #memory  Memory: @ThreeDPoint:exact+20 *, name=_z, idx=8; !orig=62 !jvms: test_valhalla::micro @ bci:16 (line 41)
 155  MemBarStoreStore  === 52 1 63 1 1 55  [[ 156 157 ]]  !jvms: ThreeDPoint::<init> @ bci:-1 (line 26) test_valhalla::micro @ bci:16 (line 41)
 156  Proj  === 155  [[ 184 ]] #0 !jvms: ThreeDPoint::<init> @ bci:-1 (line 26) test_valhalla::micro @ bci:16 (line 41)
 157  Proj  === 155  [[ 205 162 164 166 205 183 184 191 205 ]] #2  Memory: @BotPTR *+bot, idx=Bot; !jvms: ThreeDPoint::<init> @ bci:-1 (line 26) test_valhalla::micro @ bci:16 (line 41)
 159  InlineType  === _ 25 35 125 162 164 166  [[ 194 184 184 ]]  #ThreeDPoint:NotNull:exact *  Oop:ThreeDPoint:NotNull:exact * !jvms: test_valhalla::micro @ bci:16 (line 41)
 162  LoadF  === _ 157 68  [[ 159 228 210 ]]  @ThreeDPoint:exact+12 *, name=_x, idx=6; #float !jvms: test_valhalla::micro @ bci:16 (line 41)
 164  LoadF  === _ 157 74  [[ 159 228 215 ]]  @ThreeDPoint:exact+16 *, name=_y, idx=7; #float !jvms: test_valhalla::micro @ bci:16 (line 41)
 166  LoadF  === _ 157 80  [[ 159 228 220 ]]  @ThreeDPoint:exact+20 *, name=_z, idx=8; #float !jvms: test_valhalla::micro @ bci:16 (line 41)
 183  MergeMem  === _ 1 157 204 204 204 204 204 204  [[ 223 ]]  { N204:rawptr:BotPTR N204:java/lang/Object * N204:java/lang/Object+8 * [narrowklass] N204:ThreeDPoint:exact+12 * N204:ThreeDPoint:exact+16 * N204:ThreeDPoint:exact+20 * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: test_valhalla::micro @ bci:35 (line 45)
 184  Allocate  === 156 49 157 8 1 (36 34 35 1 1 159 _ _ 1 1 1 1 159 ) [[ 185 186 187 199 200 201 ]]  rawptr:NotNull ( int:>=0, java/lang/Object:NotNull *, bool, top, bool, bottom, java/lang/Object:NotNull *, long ) allocationKlass:ThreeDPoint test_valhalla::micro @ bci:35 (line 45) reexecute !jvms: test_valhalla::micro @ bci:35 (line 45)
 185  Proj  === 184  [[ 188 ]] #0 !jvms: test_valhalla::micro @ bci:35 (line 45)
 186  Proj  === 184  [[ 191 ]] #2 (i_o_use)  Memory: @rawptr:BotPTR, idx=Raw; !jvms: test_valhalla::micro @ bci:35 (line 45)
 187  Proj  === 184  [[ 188 194 ]] #1 (i_o_use) !jvms: test_valhalla::micro @ bci:35 (line 45)
 188  Catch  === 185 187  [[ 189 190 ]]  !jvms: test_valhalla::micro @ bci:35 (line 45)
 189  CatchProj  === 188  [[ 202 210 215 220 ]] #0@bci -1  !jvms: test_valhalla::micro @ bci:35 (line 45)
 190  CatchProj  === 188  [[ 194 ]] #1@bci -1  !jvms: test_valhalla::micro @ bci:35 (line 45)
 191  MergeMem  === _ 1 157 186  [[ 194 ]]  { N186:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: test_valhalla::micro @ bci:35 (line 45)
 193  ConI  === 0  [[ 194 370 ]]  #int:-113
 194  CallStaticJava  === 190 187 191 8 9 (193 1 1 1 1 159 ) [[ 195 ]] # Static uncommon_trap(reason='unhandled' action='none' debug_id='0')  void ( int ) C=0.000100 test_valhalla::micro @ bci:35 (line 45) reexecute !jvms: test_valhalla::micro @ bci:35 (line 45)
 195  Proj  === 194  [[ 198 ]] #0 !jvms: test_valhalla::micro @ bci:35 (line 45)
 198  Halt  === 195 1 1 8 1  [[ 0 ]]  !jvms: test_valhalla::micro @ bci:35 (line 45)
 199  Proj  === 184  [[ 205 210 215 220 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !jvms: test_valhalla::micro @ bci:35 (line 45)
 200  Proj  === 184  [[ 400 ]] #1 !jvms: test_valhalla::micro @ bci:35 (line 45)
 201  Proj  === 184  [[ 202 206 211 216 221 223 ]] #5 !jvms: test_valhalla::micro @ bci:35 (line 45)
 202  Initialize  === 189 1 205 1 1 201 210 215 220  [[ 203 204 ]]  !jvms: test_valhalla::micro @ bci:35 (line 45)
 203  Proj  === 202  [[ 223 206 ]] #0 !jvms: test_valhalla::micro @ bci:35 (line 45)
 204  Proj  === 202  [[ 183 183 183 183 183 183 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !jvms: test_valhalla::micro @ bci:35 (line 45)
 205  MergeMem  === _ 1 199 1 1 1 157 157 157  [[ 202 ]]  { - - - N157:ThreeDPoint:exact+12 * N157:ThreeDPoint:exact+16 * N157:ThreeDPoint:exact+20 * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: test_valhalla::micro @ bci:35 (line 45)
 206  CheckCastPP  === 203 201  [[ 228 ]]  #ThreeDPoint:NotNull:exact *  Oop:ThreeDPoint:NotNull:exact * !jvms: test_valhalla::micro @ bci:35 (line 45)
 210  StoreF  === 189 199 211 162  [[ 202 ]]  @ThreeDPoint:exact+12 *, name=_x, idx=6;  Memory: @rawptr:NotNull, idx=Raw; !orig=209 !jvms: test_valhalla::micro @ bci:35 (line 45)
 211  AddP  === _ 1 201 67  [[ 210 ]]  !jvms: test_valhalla::micro @ bci:35 (line 45)
 215  StoreF  === 189 199 216 164  [[ 202 ]]  @ThreeDPoint:exact+16 *, name=_y, idx=7;  Memory: @rawptr:NotNull, idx=Raw; !orig=214 !jvms: test_valhalla::micro @ bci:35 (line 45)
 216  AddP  === _ 1 201 73  [[ 215 ]]  !jvms: test_valhalla::micro @ bci:35 (line 45)
 220  StoreF  === 189 199 221 166  [[ 202 ]]  @ThreeDPoint:exact+20 *, name=_z, idx=8;  Memory: @rawptr:NotNull, idx=Raw; !orig=219 !jvms: test_valhalla::micro @ bci:35 (line 45)
 221  AddP  === _ 1 201 79  [[ 220 ]]  !jvms: test_valhalla::micro @ bci:35 (line 45)
 223  MemBarStoreStore  === 203 1 183 1 1 201  [[ 224 225 ]]  !jvms: test_valhalla::micro @ bci:35 (line 45)
 224  Proj  === 223  [[ 229 ]] #0 !jvms: test_valhalla::micro @ bci:35 (line 45)
 225  Proj  === 223  [[ 401 ]] #2  Memory: @BotPTR *+bot, idx=Bot; !jvms: test_valhalla::micro @ bci:35 (line 45)
 228  InlineType  === _ 206 125 125 162 164 166  [[ 402 ]]  #ThreeDPoint:NotNull:exact *  Oop:ThreeDPoint:NotNull:exact * !orig=159 !jvms: test_valhalla::micro @ bci:16 (line 41)
 229  Region  === 229 395 224  [[ 229 408 400 401 402 ]] #reducible  !jvms: test_valhalla::micro @ bci:35 (line 45)
 230  ConP  === 0  [[ 232 406 361 ]]  #precise TwoDPoint: 0x00007b4cd8192e70:Constant:exact *  Klass:precise TwoDPoint: 0x00007b4cd8192e70:Constant:exact *
 232  Allocate  === 30 6 7 8 1 (36 230 35 1 1 _ _ _ 10 11 1 1 1 ) [[ 233 234 235 242 243 244 ]]  rawptr:NotNull ( int:>=0, java/lang/Object:NotNull *, bool, top, bool, bottom, java/lang/Object:NotNull *, long ) allocationKlass:TwoDPoint test_valhalla::micro @ bci:24 (line 43) !jvms: test_valhalla::micro @ bci:24 (line 43)
 233  Proj  === 232  [[ 236 ]] #0 !jvms: test_valhalla::micro @ bci:24 (line 43)
 234  Proj  === 232  [[ 255 ]] #2 (i_o_use)  Memory: @rawptr:BotPTR, idx=Raw; !jvms: test_valhalla::micro @ bci:24 (line 43)
 235  Proj  === 232  [[ 236 253 241 ]] #1 (i_o_use) !jvms: test_valhalla::micro @ bci:24 (line 43)
 236  Catch  === 233 235  [[ 237 238 ]]  !jvms: test_valhalla::micro @ bci:24 (line 43)
 237  CatchProj  === 236  [[ 245 268 273 ]] #0@bci -1  !jvms: test_valhalla::micro @ bci:24 (line 43)
 238  CatchProj  === 236  [[ 252 241 ]] #1@bci -1  !jvms: test_valhalla::micro @ bci:24 (line 43)
 241  CreateEx  === 238 235  [[ 256 ]]  #java/lang/Throwable (java/io/Serializable):NotNull *  Oop:java/lang/Throwable (java/io/Serializable):NotNull * !jvms: test_valhalla::micro @ bci:24 (line 43)
 242  Proj  === 232  [[ 248 268 273 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !jvms: test_valhalla::micro @ bci:24 (line 43)
 243  Proj  === 232  [[ 361 ]] #1 !jvms: test_valhalla::micro @ bci:24 (line 43)
 244  Proj  === 232  [[ 245 249 269 274 ]] #5 !jvms: test_valhalla::micro @ bci:24 (line 43)
 245  Initialize  === 237 1 248 1 1 244 268 273  [[ 246 247 ]]  !jvms: test_valhalla::micro @ bci:24 (line 43)
 246  Proj  === 245  [[ 334 249 259 ]] #0 !jvms: test_valhalla::micro @ bci:24 (line 43)
 247  Proj  === 245  [[ 333 332 331 330 329 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !jvms: test_valhalla::micro @ bci:24 (line 43)
 248  MergeMem  === _ 1 242 1 1 1 1 1 1 1 7 7  [[ 245 ]]  { - - - - - - - N7:TwoDPoint:exact+16 * N7:TwoDPoint:exact+20 * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: test_valhalla::micro @ bci:24 (line 43)
 249  CheckCastPP  === 246 244  [[ 334 271 271 266 266 ]]  #TwoDPoint:NotNull:exact *  Oop:TwoDPoint:NotNull:exact * !jvms: test_valhalla::micro @ bci:24 (line 43)
 252  Region  === 252 44 238  [[ 252 253 575 255 256 ]]  !jvms: test_valhalla::micro @ bci:24 (line 43)
 253  Phi  === 252 41 235  [[ 575 ]]  #abIO !jvms: test_valhalla::micro @ bci:24 (line 43)
 255  Phi  === 252 40 234  [[ 45 ]]  #memory  Memory: @rawptr:BotPTR, idx=Raw; !jvms: test_valhalla::micro @ bci:24 (line 43)
 256  Phi  === 252 47 241  [[ 575 ]]  #java/lang/Throwable (java/io/Serializable):NotNull *  Oop:java/lang/Throwable (java/io/Serializable):NotNull * !jvms: test_valhalla::micro @ bci:24 (line 43)
 259  Region  === _ 246  [[ 333 332 331 261 329 330 ]]  !jvms: test_valhalla::micro @ bci:30 (line 43)
 261  Phi  === 259 7  [[ 262 ]]  #memory  Memory: @BotPTR *+bot, idx=Bot; !jvms: test_valhalla::micro @ bci:30 (line 43)
 262  MergeMem  === _ 1 261 329 330 331 1 1 1 1 332 333  [[ 334 ]]  { N329:rawptr:BotPTR N330:java/lang/Object * N331:java/lang/Object+8 * [narrowklass] - - - - N332:TwoDPoint:exact+16 * N333:TwoDPoint:exact+20 * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: test_valhalla::micro @ bci:30 (line 43)
 266  AddP  === _ 249 249 73  [[ 341 ]]   Oop:TwoDPoint:NotNull:exact+16 * !jvms: TwoDPoint::<init> @ bci:2 (line 11) test_valhalla::micro @ bci:30 (line 43)
 268  StoreF  === 237 242 269 10  [[ 245 ]]  @TwoDPoint:exact+16 *, name=_x, idx=10;  Memory: @rawptr:NotNull, idx=Raw; !orig=267 !jvms: TwoDPoint::<init> @ bci:2 (line 11) test_valhalla::micro @ bci:30 (line 43)
 269  AddP  === _ 1 244 73  [[ 268 ]]  !jvms: TwoDPoint::<init> @ bci:2 (line 11) test_valhalla::micro @ bci:30 (line 43)
 271  AddP  === _ 249 249 79  [[ 343 ]]   Oop:TwoDPoint:NotNull:exact+20 * !jvms: TwoDPoint::<init> @ bci:7 (line 12) test_valhalla::micro @ bci:30 (line 43)
 273  StoreF  === 237 242 274 11  [[ 245 ]]  @TwoDPoint:exact+20 *, name=_y, idx=11;  Memory: @rawptr:NotNull, idx=Raw; !orig=272 !jvms: TwoDPoint::<init> @ bci:7 (line 12) test_valhalla::micro @ bci:30 (line 43)
 274  AddP  === _ 1 244 79  [[ 273 ]]  !jvms: TwoDPoint::<init> @ bci:7 (line 12) test_valhalla::micro @ bci:30 (line 43)
 329  Phi  === 259 247  [[ 262 ]]  #memory  Memory: @rawptr:BotPTR, idx=Raw; !orig=261 !jvms: test_valhalla::micro @ bci:30 (line 43)
 330  Phi  === 259 247  [[ 262 ]]  #memory  Memory: @java/lang/Object *, idx=4; !orig=261 !jvms: test_valhalla::micro @ bci:30 (line 43)
 331  Phi  === 259 247  [[ 262 ]]  #memory  Memory: @java/lang/Object+8 * [narrowklass], idx=5; !orig=261 !jvms: test_valhalla::micro @ bci:30 (line 43)
 332  Phi  === 259 247  [[ 262 ]]  #memory  Memory: @TwoDPoint:exact+16 *, name=_x, idx=10; !orig=261 !jvms: test_valhalla::micro @ bci:30 (line 43)
 333  Phi  === 259 247  [[ 262 ]]  #memory  Memory: @TwoDPoint:exact+20 *, name=_y, idx=11; !orig=261 !jvms: test_valhalla::micro @ bci:30 (line 43)
 334  MemBarStoreStore  === 246 1 262 1 1 249  [[ 335 336 ]]  !jvms: TwoDPoint::<init> @ bci:-1 (line 11) test_valhalla::micro @ bci:30 (line 43)
 335  Proj  === 334  [[ 361 ]] #0 !jvms: TwoDPoint::<init> @ bci:-1 (line 11) test_valhalla::micro @ bci:30 (line 43)
 336  Proj  === 334  [[ 381 341 343 381 360 361 368 ]] #2  Memory: @BotPTR *+bot, idx=Bot; !jvms: TwoDPoint::<init> @ bci:-1 (line 11) test_valhalla::micro @ bci:30 (line 43)
 338  InlineType  === _ 25 35 125 341 343  [[ 370 361 361 ]]  #TwoDPoint:NotNull:exact *  Oop:TwoDPoint:NotNull:exact * !jvms: test_valhalla::micro @ bci:30 (line 43)
 341  LoadF  === _ 336 266  [[ 338 399 386 ]]  @TwoDPoint:exact+16 *, name=_x, idx=10; #float !jvms: test_valhalla::micro @ bci:30 (line 43)
 343  LoadF  === _ 336 271  [[ 338 399 391 ]]  @TwoDPoint:exact+20 *, name=_y, idx=11; #float !jvms: test_valhalla::micro @ bci:30 (line 43)
 360  MergeMem  === _ 1 336 380 380 380 1 1 1 1 380 380  [[ 394 ]]  { N380:rawptr:BotPTR N380:java/lang/Object * N380:java/lang/Object+8 * [narrowklass] - - - - N380:TwoDPoint:exact+16 * N380:TwoDPoint:exact+20 * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: test_valhalla::micro @ bci:35 (line 45)
 361  Allocate  === 335 243 336 8 1 (36 230 35 1 1 338 _ _ 1 1 1 1 338 ) [[ 362 363 364 375 376 377 ]]  rawptr:NotNull ( int:>=0, java/lang/Object:NotNull *, bool, top, bool, bottom, java/lang/Object:NotNull *, long ) allocationKlass:TwoDPoint test_valhalla::micro @ bci:35 (line 45) reexecute !jvms: test_valhalla::micro @ bci:35 (line 45)
 362  Proj  === 361  [[ 365 ]] #0 !jvms: test_valhalla::micro @ bci:35 (line 45)
 363  Proj  === 361  [[ 368 ]] #2 (i_o_use)  Memory: @rawptr:BotPTR, idx=Raw; !jvms: test_valhalla::micro @ bci:35 (line 45)
 364  Proj  === 361  [[ 365 370 ]] #1 (i_o_use) !jvms: test_valhalla::micro @ bci:35 (line 45)
 365  Catch  === 362 364  [[ 366 367 ]]  !jvms: test_valhalla::micro @ bci:35 (line 45)
 366  CatchProj  === 365  [[ 378 386 391 ]] #0@bci -1  !jvms: test_valhalla::micro @ bci:35 (line 45)
 367  CatchProj  === 365  [[ 370 ]] #1@bci -1  !jvms: test_valhalla::micro @ bci:35 (line 45)
 368  MergeMem  === _ 1 336 363  [[ 370 ]]  { N363:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: test_valhalla::micro @ bci:35 (line 45)
 370  CallStaticJava  === 367 364 368 8 9 (193 1 1 1 1 338 ) [[ 371 ]] # Static uncommon_trap(reason='unhandled' action='none' debug_id='0')  void ( int ) C=0.000100 test_valhalla::micro @ bci:35 (line 45) reexecute !jvms: test_valhalla::micro @ bci:35 (line 45)
 371  Proj  === 370  [[ 374 ]] #0 !jvms: test_valhalla::micro @ bci:35 (line 45)
 374  Halt  === 371 1 1 8 1  [[ 0 ]]  !jvms: test_valhalla::micro @ bci:35 (line 45)
 375  Proj  === 361  [[ 381 386 391 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !jvms: test_valhalla::micro @ bci:35 (line 45)
 376  Proj  === 361  [[ 400 ]] #1 !jvms: test_valhalla::micro @ bci:35 (line 45)
 377  Proj  === 361  [[ 378 382 387 392 394 ]] #5 !jvms: test_valhalla::micro @ bci:35 (line 45)
 378  Initialize  === 366 1 381 1 1 377 386 391  [[ 379 380 ]]  !jvms: test_valhalla::micro @ bci:35 (line 45)
 379  Proj  === 378  [[ 394 382 ]] #0 !jvms: test_valhalla::micro @ bci:35 (line 45)
 380  Proj  === 378  [[ 360 360 360 360 360 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !jvms: test_valhalla::micro @ bci:35 (line 45)
 381  MergeMem  === _ 1 375 1 1 1 1 1 1 1 336 336  [[ 378 ]]  { - - - - - - - N336:TwoDPoint:exact+16 * N336:TwoDPoint:exact+20 * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: test_valhalla::micro @ bci:35 (line 45)
 382  CheckCastPP  === 379 377  [[ 399 ]]  #TwoDPoint:NotNull:exact *  Oop:TwoDPoint:NotNull:exact * !jvms: test_valhalla::micro @ bci:35 (line 45)
 386  StoreF  === 366 375 387 341  [[ 378 ]]  @TwoDPoint:exact+16 *, name=_x, idx=10;  Memory: @rawptr:NotNull, idx=Raw; !orig=385 !jvms: test_valhalla::micro @ bci:35 (line 45)
 387  AddP  === _ 1 377 73  [[ 386 ]]  !jvms: test_valhalla::micro @ bci:35 (line 45)
 391  StoreF  === 366 375 392 343  [[ 378 ]]  @TwoDPoint:exact+20 *, name=_y, idx=11;  Memory: @rawptr:NotNull, idx=Raw; !orig=390 !jvms: test_valhalla::micro @ bci:35 (line 45)
 392  AddP  === _ 1 377 79  [[ 391 ]]  !jvms: test_valhalla::micro @ bci:35 (line 45)
 394  MemBarStoreStore  === 379 1 360 1 1 377  [[ 395 396 ]]  !jvms: test_valhalla::micro @ bci:35 (line 45)
 395  Proj  === 394  [[ 229 ]] #0 !jvms: test_valhalla::micro @ bci:35 (line 45)
 396  Proj  === 394  [[ 401 ]] #2  Memory: @BotPTR *+bot, idx=Bot; !jvms: test_valhalla::micro @ bci:35 (line 45)
 399  InlineType  === _ 382 125 125 341 343  [[ 402 ]]  #TwoDPoint:NotNull:exact *  Oop:TwoDPoint:NotNull:exact * !orig=338 !jvms: test_valhalla::micro @ bci:30 (line 43)
 400  Phi  === 229 376 200  [[ 574 440 ]]  #abIO !jvms: test_valhalla::micro @ bci:35 (line 45)
 401  Phi  === 229 396 225  [[ 574 415 417 440 432 434 436 ]]  #memory  Memory: @BotPTR *+bot, idx=Bot; !jvms: test_valhalla::micro @ bci:35 (line 45)
 402  Phi  === 229 399 228  [[ 428 403 403 411 440 ]]  #AbstractPoint:NotNull *  Oop:AbstractPoint:NotNull * !jvms: test_valhalla::micro @ bci:35 (line 45)
 403  AddP  === _ 402 402 103  [[ 404 ]]   Oop:AbstractPoint:NotNull+8 * [narrowklass] !jvms: test_valhalla::micro @ bci:37 (line 45)
 404  LoadNKlass  === _ 7 403  [[ 405 ]]  @java/lang/Object+8 * [narrowklass], idx=5; #narrowklass: AbstractPoint: 0x00007b4cd8194ed8 * !jvms: test_valhalla::micro @ bci:37 (line 45)
 405  DecodeNKlass  === _ 404  [[ 406 423 ]]  #AbstractPoint: 0x00007b4cd8194ed8 *  Klass:AbstractPoint: 0x00007b4cd8194ed8 * !jvms: test_valhalla::micro @ bci:37 (line 45)
 406  CmpP  === _ 405 230  [[ 407 ]]  !jvms: test_valhalla::micro @ bci:37 (line 45)
 407  Bool  === _ 406  [[ 408 ]] [eq] !jvms: test_valhalla::micro @ bci:37 (line 45)
 408  If  === 229 407  [[ 409 410 ]] P=0.840193, C=-1.000000 !jvms: test_valhalla::micro @ bci:37 (line 45)
 409  IfTrue  === 408  [[ 571 411 569 ]] #1 !jvms: test_valhalla::micro @ bci:37 (line 45)
 410  IfFalse  === 408  [[ 425 ]] #0 !jvms: test_valhalla::micro @ bci:37 (line 45)
 411  CheckCastPP  === 409 402  [[ 416 413 413 416 ]]  #TwoDPoint:NotNull:exact *  Oop:TwoDPoint:NotNull:exact * !jvms: test_valhalla::micro @ bci:37 (line 45)
 413  AddP  === _ 411 411 73  [[ 415 ]]   Oop:TwoDPoint:NotNull:exact+16 * !jvms: test_valhalla::micro @ bci:37 (line 45)
 415  LoadF  === _ 401 413  [[ 556 ]]  @TwoDPoint:exact+16 *, name=_x, idx=10; #float !jvms: test_valhalla::micro @ bci:37 (line 45)
 416  AddP  === _ 411 411 79  [[ 417 ]]   Oop:TwoDPoint:NotNull:exact+20 * !jvms: test_valhalla::micro @ bci:37 (line 45)
 417  LoadF  === _ 401 416  [[ 566 ]]  @TwoDPoint:exact+20 *, name=_y, idx=11; #float !jvms: test_valhalla::micro @ bci:37 (line 45)
 423  CmpP  === _ 405 34  [[ 424 ]]  !jvms: test_valhalla::micro @ bci:37 (line 45)
 424  Bool  === _ 423  [[ 425 ]] [eq] !jvms: test_valhalla::micro @ bci:37 (line 45)
 425  If  === 410 424  [[ 426 427 ]] P=0.999999, C=-1.000000 !jvms: test_valhalla::micro @ bci:37 (line 45)
 426  IfTrue  === 425  [[ 571 428 513 ]] #1 !jvms: test_valhalla::micro @ bci:37 (line 45)
 427  IfFalse  === 425  [[ 440 ]] #0 !jvms: test_valhalla::micro @ bci:37 (line 45)
 428  CheckCastPP  === 426 402  [[ 435 430 430 435 433 433 ]]  #ThreeDPoint:NotNull:exact *  Oop:ThreeDPoint:NotNull:exact * !jvms: test_valhalla::micro @ bci:37 (line 45)
 430  AddP  === _ 428 428 67  [[ 432 ]]   Oop:ThreeDPoint:NotNull:exact+12 * !jvms: test_valhalla::micro @ bci:37 (line 45)
 432  LoadF  === _ 401 430  [[ 488 ]]  @ThreeDPoint:exact+12 *, name=_x, idx=6; #float !jvms: test_valhalla::micro @ bci:37 (line 45)
 433  AddP  === _ 428 428 73  [[ 434 ]]   Oop:ThreeDPoint:NotNull:exact+16 * !jvms: test_valhalla::micro @ bci:37 (line 45)
 434  LoadF  === _ 401 433  [[ 499 ]]  @ThreeDPoint:exact+16 *, name=_y, idx=7; #float !jvms: test_valhalla::micro @ bci:37 (line 45)
 435  AddP  === _ 428 428 79  [[ 436 ]]   Oop:ThreeDPoint:NotNull:exact+20 * !jvms: test_valhalla::micro @ bci:37 (line 45)
 436  LoadF  === _ 401 435  [[ 510 ]]  @ThreeDPoint:exact+20 *, name=_z, idx=8; #float !jvms: test_valhalla::micro @ bci:37 (line 45)
 439  ConI  === 0  [[ 440 ]]  #int:-58
 440  CallStaticJava  === 427 400 401 8 9 (439 1 1 1 1 1 402 ) [[ 441 ]] # Static uncommon_trap(reason='bimorphic_or_optimized_type_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 test_valhalla::micro @ bci:37 (line 45) !jvms: test_valhalla::micro @ bci:37 (line 45)
 441  Proj  === 440  [[ 444 ]] #0 !jvms: test_valhalla::micro @ bci:37 (line 45)
 444  Halt  === 441 1 1 8 1  [[ 0 ]]  !jvms: test_valhalla::micro @ bci:37 (line 45)
 488  ConvF2D  === _ 432  [[ 490 490 ]]  #double !jvms: ThreeDPoint::compute_disatnce @ bci:4 (line 32) test_valhalla::micro @ bci:37 (line 45)
 490  MulD  === _ 488 488  [[ 501 ]]  !jvms: ThreeDPoint::compute_disatnce @ bci:8 (line 32) test_valhalla::micro @ bci:37 (line 45)
 499  ConvF2D  === _ 434  [[ 500 500 ]]  #double !jvms: ThreeDPoint::compute_disatnce @ bci:15 (line 32) test_valhalla::micro @ bci:37 (line 45)
 500  MulD  === _ 499 499  [[ 501 ]]  !jvms: ThreeDPoint::compute_disatnce @ bci:19 (line 32) test_valhalla::micro @ bci:37 (line 45)
 501  AddD  === _ 490 500  [[ 512 ]]  !jvms: ThreeDPoint::compute_disatnce @ bci:22 (line 32) test_valhalla::micro @ bci:37 (line 45)
 510  ConvF2D  === _ 436  [[ 511 511 ]]  #double !jvms: ThreeDPoint::compute_disatnce @ bci:27 (line 32) test_valhalla::micro @ bci:37 (line 45)
 511  MulD  === _ 510 510  [[ 512 ]]  !jvms: ThreeDPoint::compute_disatnce @ bci:31 (line 32) test_valhalla::micro @ bci:37 (line 45)
 512  AddD  === _ 501 511  [[ 513 ]]  !jvms: ThreeDPoint::compute_disatnce @ bci:34 (line 32) test_valhalla::micro @ bci:37 (line 45)
 513  SqrtD  === 426 512  [[ 514 ]]  !jvms: ThreeDPoint::compute_disatnce @ bci:35 (line 32) test_valhalla::micro @ bci:37 (line 45)
 514  ConvD2F  === _ 513  [[ 573 ]]  #float !jvms: ThreeDPoint::compute_disatnce @ bci:38 (line 32) test_valhalla::micro @ bci:37 (line 45)
 556  ConvF2D  === _ 415  [[ 557 557 ]]  #double !jvms: TwoDPoint::compute_disatnce @ bci:4 (line 16) test_valhalla::micro @ bci:37 (line 45)
 557  MulD  === _ 556 556  [[ 568 ]]  !jvms: TwoDPoint::compute_disatnce @ bci:8 (line 16) test_valhalla::micro @ bci:37 (line 45)
 566  ConvF2D  === _ 417  [[ 567 567 ]]  #double !jvms: TwoDPoint::compute_disatnce @ bci:15 (line 16) test_valhalla::micro @ bci:37 (line 45)
 567  MulD  === _ 566 566  [[ 568 ]]  !jvms: TwoDPoint::compute_disatnce @ bci:19 (line 16) test_valhalla::micro @ bci:37 (line 45)
 568  AddD  === _ 557 567  [[ 569 ]]  !jvms: TwoDPoint::compute_disatnce @ bci:22 (line 16) test_valhalla::micro @ bci:37 (line 45)
 569  SqrtD  === 409 568  [[ 570 ]]  !jvms: TwoDPoint::compute_disatnce @ bci:23 (line 16) test_valhalla::micro @ bci:37 (line 45)
 570  ConvD2F  === _ 569  [[ 573 ]]  #float !jvms: TwoDPoint::compute_disatnce @ bci:26 (line 16) test_valhalla::micro @ bci:37 (line 45)
 571  Region  === 571 409 426  [[ 571 574 573 ]]  !jvms: test_valhalla::micro @ bci:37 (line 45)
 573  Phi  === 571 570 514  [[ 574 ]]  #float !jvms: test_valhalla::micro @ bci:37 (line 45)
 574  Return  === 571 400 401 8 9 returns 573  [[ 0 ]] 
 575  Rethrow  === 252 253 45 8 9 exception 256  [[ 0 ]] 
[time] 30 ms  [res]  8.716185E13
