CompileCommand: dontinline test_jdk.* bool dontinline = true
CompileCommand: print test_jdk.micro bool print = true
CompileCommand: compileonly test_jdk.micro bool compileonly = true

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2) 397    3             test_jdk::micro (93 bytes)
 total in heap  [0x00007175181afe08,0x00007175181b0028] = 544
 constants      [0x00007175181aff00,0x00007175181aff20] = 32
 main code      [0x00007175181aff20,0x00007175181afff8] = 216
 stub code      [0x00007175181afff8,0x00007175181b0010] = 24
 oops           [0x00007175181b0010,0x00007175181b0028] = 24
 mutable data [0x00007174c808ffd0,0x00007174c8090018] = 72
 relocation     [0x00007174c808ffd0,0x00007174c808fff0] = 32
 metadata       [0x00007174c808fff0,0x00007174c8090018] = 40
 immutable data [0x00007174c808ff40,0x00007174c808ffc8] = 136
 dependencies   [0x00007174c808ff40,0x00007174c808ff50] = 16
 scopes pcs     [0x00007174c808ff50,0x00007174c808ff80] = 48
 scopes data    [0x00007174c808ff80,0x00007174c808ffc8] = 72

[Disassembly]
--------------------------------------------------------------------------------

[Constant Pool]
             Address          hex4                    hex8      
  0x00007175181aff00:   0x41a00000      0x4120000041a00000      
  0x00007175181aff04:   0x41200000                              
  0x00007175181aff08:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x00007175181aff0c:   0xf4f4f4f4                              
  0x00007175181aff10:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x00007175181aff14:   0xf4f4f4f4                              
  0x00007175181aff18:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x00007175181aff1c:   0xf4f4f4f4                              

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x00007174e04004a8} 'micro' '(II)F' in 'test_jdk'
  # parm0:    rsi       = int
  # parm1:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x00007175181aff20:   mov    %eax,-0x14000(%rsp)          ;   {other}
  0x00007175181aff27:   push   %rbp
  0x00007175181aff28:   sub    $0x30,%rsp
  0x00007175181aff2c:   cmpl   $0x80000001,0x20(%r15)
  0x00007175181aff34:   jne    0x00007175181affea
  0x00007175181aff3a:   vpxor  %xmm0,%xmm0,%xmm0
  0x00007175181aff3e:   vcvtsi2ss %esi,%xmm0,%xmm0
  0x00007175181aff42:   vaddss -0x4a(%rip),%xmm0,%xmm3        # 0x00007175181aff00
                                                            ;   {section_word}
  0x00007175181aff4a:   vaddss -0x4e(%rip),%xmm0,%xmm2        # 0x00007175181aff04
                                                            ;   {section_word}
  0x00007175181aff52:   cmp    $0x2710,%edx
  0x00007175181aff58:   jg     0x00007175181affae
  0x00007175181aff5a:   vcvtss2sd %xmm2,%xmm2,%xmm1
  0x00007175181aff5e:   vmulsd %xmm1,%xmm1,%xmm1
  0x00007175181aff62:   vaddsd %xmm1,%xmm1,%xmm1
  0x00007175181aff66:   vcvtss2sd %xmm0,%xmm0,%xmm0
  0x00007175181aff6a:   vmulsd %xmm0,%xmm0,%xmm0
  0x00007175181aff6e:   vaddsd %xmm0,%xmm0,%xmm0
  0x00007175181aff72:   vsqrtsd %xmm1,%xmm1,%xmm1
  0x00007175181aff76:   vsqrtsd %xmm0,%xmm0,%xmm0
  0x00007175181aff7a:   vcvtsd2ss %xmm1,%xmm1,%xmm2
  0x00007175181aff7e:   vcvtsd2ss %xmm0,%xmm0,%xmm1
  0x00007175181aff82:   vaddss %xmm2,%xmm1,%xmm0
  0x00007175181aff86:   vcvtss2sd %xmm3,%xmm3,%xmm1
  0x00007175181aff8a:   vmulsd %xmm1,%xmm1,%xmm1
  0x00007175181aff8e:   vaddsd %xmm1,%xmm1,%xmm1
  0x00007175181aff92:   vsqrtsd %xmm1,%xmm1,%xmm1
  0x00007175181aff96:   vcvtsd2ss %xmm1,%xmm1,%xmm2
  0x00007175181aff9a:   vaddss %xmm2,%xmm0,%xmm0
  0x00007175181aff9e:   add    $0x30,%rsp
  0x00007175181affa2:   pop    %rbp
  0x00007175181affa3:   cmp    0x28(%r15),%rsp              ;   {poll_return}
  0x00007175181affa7:   ja     0x00007175181affd4
  0x00007175181affad:   ret    
  0x00007175181affae:   mov    $0xffffff45,%esi
  0x00007175181affb3:   mov    %edx,%ebp
  0x00007175181affb5:   vmovss %xmm3,0x4(%rsp)
  0x00007175181affbb:   vmovss %xmm2,0xc(%rsp)
  0x00007175181affc1:   vmovss %xmm0,0x14(%rsp)
  0x00007175181affc7:   call   0x00007175181a81e0           ; ImmutableOopMap {}
                                                            ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) test_jdk::micro@63 (line 27)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007175181affcc:   nopl   0x1c4(%rax,%rax,1)           ;   {post_call_nop}
  0x00007175181affd4:   movabs $0x7175181affa3,%r10         ;   {internal_word}
  0x00007175181affde:   mov    %r10,0x538(%r15)
  0x00007175181affe5:   jmp    0x0000717518166c60           ;   {runtime_call SafepointBlob}
  0x00007175181affea:   call   Stub::Stub Generator method_entry_barrier_stub
                                                            ;   {runtime_call Stub::Stub Generator method_entry_barrier_stub}
  0x00007175181affef:   jmp    0x00007175181aff3a
  0x00007175181afff4:   hlt    
  0x00007175181afff5:   hlt    
  0x00007175181afff6:   hlt    
  0x00007175181afff7:   hlt    
[Exception Handler]
  0x00007175181afff8:   jmp    0x00007175181a84e0           ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x00007175181afffd:   call   0x00007175181b0002
  0x00007175181b0002:   subq   $0x5,(%rsp)
  0x00007175181b0007:   jmp    0x0000717518166f60           ;   {runtime_call DeoptimizationBlob}
  0x00007175181b000c:   hlt    
  0x00007175181b000d:   hlt    
  0x00007175181b000e:   hlt    
  0x00007175181b000f:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2) 757    4             test_jdk::micro (93 bytes)
 total in heap  [0x00007175181ac088,0x00007175181ac430] = 936
 constants      [0x00007175181ac180,0x00007175181ac1a0] = 32
 main code      [0x00007175181ac1a0,0x00007175181ac400] = 608
 stub code      [0x00007175181ac400,0x00007175181ac418] = 24
 oops           [0x00007175181ac418,0x00007175181ac430] = 24
 mutable data [0x00007174c8090910,0x00007174c8090968] = 88
 relocation     [0x00007174c8090910,0x00007174c8090940] = 48
 metadata       [0x00007174c8090940,0x00007174c8090968] = 40
 immutable data [0x00007174c8090880,0x00007174c8090908] = 136
 dependencies   [0x00007174c8090880,0x00007174c8090890] = 16
 handler table  [0x00007174c8090890,0x00007174c80908a8] = 24
 scopes pcs     [0x00007174c80908a8,0x00007174c80908d8] = 48
 scopes data    [0x00007174c80908d8,0x00007174c8090908] = 48

[Disassembly]
--------------------------------------------------------------------------------

[Constant Pool]
             Address          hex4                    hex8      
  0x00007175181ac180:   0x41200000      0x41a0000041200000      
  0x00007175181ac184:   0x41a00000                              
  0x00007175181ac188:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x00007175181ac18c:   0xf4f4f4f4                              
  0x00007175181ac190:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x00007175181ac194:   0xf4f4f4f4                              
  0x00007175181ac198:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x00007175181ac19c:   0xf4f4f4f4                              

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x00007174e04004a8} 'micro' '(II)F' in 'test_jdk'
  # parm0:    rsi       = int
  # parm1:    rdx       = int
  #           [sp+0x30]  (sp of caller)
  0x00007175181ac1a0:   mov    %eax,-0x14000(%rsp)          ;   {other}
  0x00007175181ac1a7:   push   %rbp
  0x00007175181ac1a8:   sub    $0x20,%rsp
  0x00007175181ac1ac:   cmpl   $0x1,0x20(%r15)
  0x00007175181ac1b4:   jne    0x00007175181ac3f3
  0x00007175181ac1ba:   mov    %esi,%r8d
  0x00007175181ac1bd:   mov    %edx,(%rsp)
  0x00007175181ac1c0:   vpxor  %xmm1,%xmm1,%xmm1
  0x00007175181ac1c4:   vcvtsi2ss %esi,%xmm1,%xmm1
  0x00007175181ac1c8:   mov    0x1c8(%r15),%rax
  0x00007175181ac1cf:   mov    %rax,%r10
  0x00007175181ac1d2:   add    $0x18,%r10
  0x00007175181ac1d6:   cmp    0x1d8(%r15),%r10
  0x00007175181ac1dd:   jae    0x00007175181ac2cc
  0x00007175181ac1e3:   mov    %r10,0x1c8(%r15)
  0x00007175181ac1ea:   prefetchw 0xc0(%r10)
  0x00007175181ac1f2:   movq   $0x1,(%rax)
  0x00007175181ac1f9:   movl   $0x1040210,0x8(%rax)         ;   {metadata('Point')}
  0x00007175181ac200:   mov    %r12d,0x14(%rax)
  0x00007175181ac204:   vaddss -0x8c(%rip),%xmm1,%xmm4        # 0x00007175181ac180
                                                            ;   {section_word}
  0x00007175181ac20c:   vmovss %xmm4,0xc(%rax)
  0x00007175181ac211:   vmovss %xmm4,0x10(%rax)
  0x00007175181ac216:   mov    (%rsp),%r10d
  0x00007175181ac21a:   cmp    $0x2710,%r10d
  0x00007175181ac221:   jle    0x00007175181ac270
  0x00007175181ac223:   movabs $0xc7000000,%r10             ;   {oop(a 'java/lang/Class'{0x00000000c7000000} = 'test_jdk')}
  0x00007175181ac22d:   lea    0x78(%r10),%r8
  0x00007175181ac231:   cmpb   $0x0,0x48(%r15)
  0x00007175181ac236:   jne    0x00007175181ac304
  0x00007175181ac23c:   mov    %rax,%r9
  0x00007175181ac23f:   mov    %r9d,(%r8)
  0x00007175181ac242:   mov    %r8,%r11
  0x00007175181ac245:   xor    %rax,%r11
  0x00007175181ac248:   shr    $0x14,%r11
  0x00007175181ac24c:   je     0x00007175181ac270
  0x00007175181ac252:   mov    %r8,%r11
  0x00007175181ac255:   shr    $0x9,%r11
  0x00007175181ac259:   movabs $0x71750a55e000,%r9
  0x00007175181ac263:   add    %r9,%r11
  0x00007175181ac266:   cmpb   $0x2,(%r11)
  0x00007175181ac26a:   jne    0x00007175181ac377
  0x00007175181ac270:   vaddss -0xf4(%rip),%xmm1,%xmm0        # 0x00007175181ac184
                                                            ;   {section_word}
  0x00007175181ac278:   vcvtss2sd %xmm1,%xmm1,%xmm1
  0x00007175181ac27c:   vmulsd %xmm1,%xmm1,%xmm1
  0x00007175181ac280:   vaddsd %xmm1,%xmm1,%xmm1
  0x00007175181ac284:   vcvtss2sd %xmm0,%xmm0,%xmm0
  0x00007175181ac288:   vmulsd %xmm0,%xmm0,%xmm0
  0x00007175181ac28c:   vaddsd %xmm0,%xmm0,%xmm0
  0x00007175181ac290:   vsqrtsd %xmm1,%xmm1,%xmm1
  0x00007175181ac294:   vsqrtsd %xmm0,%xmm0,%xmm0
  0x00007175181ac298:   vcvtsd2ss %xmm1,%xmm1,%xmm2
  0x00007175181ac29c:   vcvtsd2ss %xmm0,%xmm0,%xmm0
  0x00007175181ac2a0:   vcvtss2sd %xmm4,%xmm4,%xmm1
  0x00007175181ac2a4:   vmulsd %xmm1,%xmm1,%xmm1
  0x00007175181ac2a8:   vaddsd %xmm1,%xmm1,%xmm1
  0x00007175181ac2ac:   vsqrtsd %xmm1,%xmm1,%xmm1
  0x00007175181ac2b0:   vcvtsd2ss %xmm1,%xmm1,%xmm3
  0x00007175181ac2b4:   vaddss %xmm3,%xmm2,%xmm1
  0x00007175181ac2b8:   vaddss %xmm0,%xmm1,%xmm0
  0x00007175181ac2bc:   add    $0x20,%rsp
  0x00007175181ac2c0:   pop    %rbp
  0x00007175181ac2c1:   cmp    0x28(%r15),%rsp              ;   {poll_return}
  0x00007175181ac2c5:   ja     0x00007175181ac3dd
  0x00007175181ac2cb:   ret    
  0x00007175181ac2cc:   vmovss %xmm1,0x4(%rsp)
  0x00007175181ac2d2:   movabs $0x31040210,%rsi             ;   {metadata('Point')}
  0x00007175181ac2dc:   mov    %r8d,%ebp
  0x00007175181ac2df:   call   0x00007175181ad3e0           ; ImmutableOopMap {}
                                                            ;*new {reexecute=0 rethrow=0 return_oop=1}
                                                            ; - test_jdk::micro@21 (line 24)
                                                            ;   {runtime_call C2 Runtime new_instance_blob}
  0x00007175181ac2e4:   nopl   0x25c(%rax,%rax,1)           ;   {post_call_nop}
  0x00007175181ac2ec:   vmovss 0x4(%rsp),%xmm1
  0x00007175181ac2f2:   jmp    0x00007175181ac204
  0x00007175181ac2f7:   mov    %rax,%rsi
  0x00007175181ac2fa:   add    $0x20,%rsp
  0x00007175181ac2fe:   pop    %rbp
  0x00007175181ac2ff:   jmp    0x00007175181b0160           ;   {runtime_call C2 Runtime rethrow_blob}
  0x00007175181ac304:   mov    (%r8),%r9d
  0x00007175181ac307:   cmp    $0x0,%r9
  0x00007175181ac30b:   je     0x00007175181ac23c
  0x00007175181ac311:   mov    0x38(%r15),%r11
  0x00007175181ac315:   test   %r11,%r11
  0x00007175181ac318:   je     0x00007175181ac332
  0x00007175181ac31e:   sub    $0x8,%r11
  0x00007175181ac322:   mov    %r11,0x38(%r15)
  0x00007175181ac326:   add    0x40(%r15),%r11
  0x00007175181ac32a:   mov    %r9,(%r11)
  0x00007175181ac32d:   jmp    0x00007175181ac23c
  0x00007175181ac332:   sub    $0x20,%rsp
  0x00007175181ac336:   vmovq  %xmm1,0x18(%rsp)
  0x00007175181ac33c:   vmovq  %xmm4,0x10(%rsp)
  0x00007175181ac342:   mov    %r8,0x8(%rsp)
  0x00007175181ac347:   mov    %rax,(%rsp)
  0x00007175181ac34b:   mov    %r9,%rdi
  0x00007175181ac34e:   mov    %r15,%rsi
  0x00007175181ac351:   call   0x000071751bc7e8e0           ;   {runtime_call G1BarrierSetRuntime::write_ref_field_pre_entry(oopDesc*, JavaThread*)}
  0x00007175181ac356:   mov    (%rsp),%rax
  0x00007175181ac35a:   mov    0x8(%rsp),%r8
  0x00007175181ac35f:   vzeroupper 
  0x00007175181ac362:   vmovq  0x10(%rsp),%xmm4
  0x00007175181ac368:   vmovq  0x18(%rsp),%xmm1
  0x00007175181ac36e:   add    $0x20,%rsp
  0x00007175181ac372:   jmp    0x00007175181ac23c
  0x00007175181ac377:   lock addl $0x0,-0x40(%rsp)
  0x00007175181ac37d:   cmpb   $0x0,(%r11)
  0x00007175181ac381:   je     0x00007175181ac270
  0x00007175181ac387:   movb   $0x0,(%r11)
  0x00007175181ac38b:   mov    0x50(%r15),%r9
  0x00007175181ac38f:   test   %r9,%r9
  0x00007175181ac392:   je     0x00007175181ac3ac
  0x00007175181ac398:   sub    $0x8,%r9
  0x00007175181ac39c:   mov    %r9,0x50(%r15)
  0x00007175181ac3a0:   add    0x58(%r15),%r9
  0x00007175181ac3a4:   mov    %r11,(%r9)
  0x00007175181ac3a7:   jmp    0x00007175181ac270
  0x00007175181ac3ac:   sub    $0x10,%rsp
  0x00007175181ac3b0:   vmovq  %xmm1,0x8(%rsp)
  0x00007175181ac3b6:   vmovq  %xmm4,(%rsp)
  0x00007175181ac3bb:   mov    %r11,%rdi
  0x00007175181ac3be:   mov    %r15,%rsi
  0x00007175181ac3c1:   call   0x000071751bc7e900           ;   {runtime_call G1BarrierSetRuntime::write_ref_field_post_entry(unsigned char volatile*, JavaThread*)}
  0x00007175181ac3c6:   vzeroupper 
  0x00007175181ac3c9:   vmovq  (%rsp),%xmm4
  0x00007175181ac3ce:   vmovq  0x8(%rsp),%xmm1
  0x00007175181ac3d4:   add    $0x10,%rsp
  0x00007175181ac3d8:   jmp    0x00007175181ac270
  0x00007175181ac3dd:   movabs $0x7175181ac2c1,%r10         ;   {internal_word}
  0x00007175181ac3e7:   mov    %r10,0x538(%r15)
  0x00007175181ac3ee:   jmp    0x0000717518166c60           ;   {runtime_call SafepointBlob}
  0x00007175181ac3f3:   call   Stub::Stub Generator method_entry_barrier_stub
                                                            ;   {runtime_call Stub::Stub Generator method_entry_barrier_stub}
  0x00007175181ac3f8:   jmp    0x00007175181ac1ba
  0x00007175181ac3fd:   hlt    
  0x00007175181ac3fe:   hlt    
  0x00007175181ac3ff:   hlt    
[Exception Handler]
  0x00007175181ac400:   jmp    0x00007175181a84e0           ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x00007175181ac405:   call   0x00007175181ac40a
  0x00007175181ac40a:   subq   $0x5,(%rsp)
  0x00007175181ac40f:   jmp    0x0000717518166f60           ;   {runtime_call DeoptimizationBlob}
  0x00007175181ac414:   hlt    
  0x00007175181ac415:   hlt    
  0x00007175181ac416:   hlt    
  0x00007175181ac417:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
[time]  267  ms  [res] 4.076289E14
------------------------------------------------------------------------
static test_jdk::micro(II)F
  interpreter_invocation_count:      322444
  invocation_counter:                322444
  backedge_counter:                       0
  decompile_count:                        1
  mdo size: 656 bytes

   0 iconst_3
   1 anewarray Point 
   4 astore_2
   5 aload_2
   6 iconst_0
   7 new 7 <Point>
  10 dup
  11 iload_0
  12 i2f
  13 iload_0
  14 i2f
  15 invokespecial 9 <Point.<init>(FF)V> 
  0    bci: 15   CounterData        count(320781)
  18 aastore
  16   bci: 18   ReceiverTypeData   count(0) entries(1)
                                    'Point'(320781 1.00)
  19 aload_2
  20 iconst_1
  21 new 7 <Point>
  24 dup
  25 iload_0
  26 i2f
  27 ldc 10.000000
  29 fadd
  30 iload_0
  31 i2f
  32 ldc 10.000000
  34 fadd
  35 invokespecial 9 <Point.<init>(FF)V> 
  64   bci: 35   CounterData        count(320781)
  38 aastore
  80   bci: 38   ReceiverTypeData   count(0) entries(1)
                                    'Point'(320781 1.00)
  39 aload_2
  40 iconst_2
  41 new 7 <Point>
  44 dup
  45 iload_0
  46 i2f
  47 ldc 20.000000
  49 fadd
  50 iload_0
  51 i2f
  52 ldc 20.000000
  54 fadd
  55 invokespecial 9 <Point.<init>(FF)V> 
  128  bci: 55   CounterData        count(320781)
  58 aastore
  144  bci: 58   ReceiverTypeData   count(0) entries(1)
                                    'Point'(320781 1.00)
  59 iload_1
  60 sipush 10000
  63 if_icmple 72
  192  bci: 63   BranchData         trap(intrinsic_or_type_checked_inlining recompiled) taken(8338) displacement(32)
                                    not taken(312444)
  66 aload_2
  67 iconst_1
  68 aaload
  69 putstatic 14 <test_jdk.cache:LPoint;> 
  72 aload_2
  73 iconst_0
  74 aaload
  75 invokevirtual 20 <Point.compute_distance()F> 
  224  bci: 75   VirtualCallData    count(0) entries(1)
                                    'Point'(320782 1.00)
  78 aload_2
  79 iconst_1
  80 aaload
  81 invokevirtual 20 <Point.compute_distance()F> 
  272  bci: 81   VirtualCallData    count(0) entries(1)
                                    'Point'(320782 1.00)
  84 fadd
  85 aload_2
  86 iconst_2
  87 aaload
  88 invokevirtual 20 <Point.compute_distance()F> 
  320  bci: 88   VirtualCallData    count(0) entries(1)
                                    'Point'(320782 1.00)
  91 fadd
  92 freturn
------------------------------------------------------------------------
Total MDO size: 656 bytes
