CompileCommand: print test.micro bool print = true
CompileCommand: compileonly test.micro bool compileonly = true
WARNING: Using incubator modules: jdk.incubator.vector

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     104   18 %           test::micro @ 66 (86 bytes)
 total in heap  [0x00007f1da1793290,0x00007f1da17936f8] = 1128
 relocation     [0x00007f1da17933f0,0x00007f1da1793410] = 32
 main code      [0x00007f1da1793420,0x00007f1da1793600] = 480
 stub code      [0x00007f1da1793600,0x00007f1da1793618] = 24
 oops           [0x00007f1da1793618,0x00007f1da1793620] = 8
 metadata       [0x00007f1da1793620,0x00007f1da1793630] = 16
 scopes data    [0x00007f1da1793630,0x00007f1da1793680] = 80
 scopes pcs     [0x00007f1da1793680,0x00007f1da17936e0] = 96
 dependencies   [0x00007f1da17936e0,0x00007f1da17936e8] = 8
 nul chk table  [0x00007f1da17936e8,0x00007f1da17936f8] = 16

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x00007f1d43801440} 'micro' '(I[I)I' in 'test'
  0x00007f1da1793420:   callq  0x00007f1db24e3620           ;   {runtime_call os::breakpoint()}
  0x00007f1da1793425:   data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f1da1793430:   mov    %eax,-0x14000(%rsp)
  0x00007f1da1793437:   push   %rbp
  0x00007f1da1793438:   sub    $0x30,%rsp
  0x00007f1da179343c:   mov    0x10(%rsi),%r13
  0x00007f1da1793440:   mov    0x8(%rsi),%ebx
  0x00007f1da1793443:   mov    (%rsi),%ebp
  0x00007f1da1793445:   mov    %rsi,%rdi
  0x00007f1da1793448:   movabs $0x7f1db259fe80,%r10
  0x00007f1da1793452:   callq  *%r10
  0x00007f1da1793455:   mov    0x8(%r13),%r11d              ; implicit exception: dispatches to 0x00007f1da17935c8
  0x00007f1da1793459:   nopl   0x0(%rax)
  0x00007f1da1793460:   cmp    $0x6c38,%r11d                ;   {metadata({type array int})}
  0x00007f1da1793467:   jne    0x00007f1da17935b4
  0x00007f1da179346d:   mov    0xc(%r13),%r9d
  0x00007f1da1793471:   cmp    %r9d,%ebp
  0x00007f1da1793474:   jge    0x00007f1da1793586
  0x00007f1da179347a:   mov    %ebp,%r10d
  0x00007f1da179347d:   inc    %r10d
  0x00007f1da1793480:   xor    %edi,%edi
  0x00007f1da1793482:   test   %r10d,%r10d
  0x00007f1da1793485:   cmovl  %edi,%r10d
  0x00007f1da1793489:   cmp    %r9d,%r10d
  0x00007f1da179348c:   cmovg  %r9d,%r10d
  0x00007f1da1793490:   cmp    %r9d,%ebp
  0x00007f1da1793493:   jae    0x00007f1da179359b
  0x00007f1da1793499:   imul   0x10(%r13,%rbp,4),%ebx
  0x00007f1da179349f:   inc    %ebp
  0x00007f1da17934a1:   cmp    %r10d,%ebp
  0x00007f1da17934a4:   jl     0x00007f1da1793490
  0x00007f1da17934a6:   mov    %r9d,%ecx
  0x00007f1da17934a9:   add    $0xfffffff1,%ecx
  0x00007f1da17934ac:   mov    $0x80000000,%r10d
  0x00007f1da17934b2:   cmp    %ecx,%r9d
  0x00007f1da17934b5:   cmovl  %r10d,%ecx
  0x00007f1da17934b9:   cmp    %ecx,%ebp
  0x00007f1da17934bb:   nopl   0x0(%rax,%rax,1)
  0x00007f1da17934c0:   jge    0x00007f1da179356d
  0x00007f1da17934c6:   mov    $0x3e80,%r10d
  0x00007f1da17934cc:   mov    %ecx,%r8d
  0x00007f1da17934cf:   sub    %ebp,%r8d
  0x00007f1da17934d2:   cmp    %ebp,%ecx
  0x00007f1da17934d4:   cmovl  %edi,%r8d
  0x00007f1da17934d8:   cmp    $0x3e80,%r8d
  0x00007f1da17934df:   cmova  %r10d,%r8d
  0x00007f1da17934e3:   add    %ebp,%r8d
  0x00007f1da17934e6:   data16 nopw 0x0(%rax,%rax,1)
  0x00007f1da17934f0:   imul   0x10(%r13,%rbp,4),%ebx
  0x00007f1da17934f6:   movslq %ebp,%r11
  0x00007f1da17934f9:   imul   0x14(%r13,%r11,4),%ebx
  0x00007f1da17934ff:   imul   0x18(%r13,%r11,4),%ebx
  0x00007f1da1793505:   imul   0x1c(%r13,%r11,4),%ebx
  0x00007f1da179350b:   imul   0x20(%r13,%r11,4),%ebx
  0x00007f1da1793511:   imul   0x24(%r13,%r11,4),%ebx
  0x00007f1da1793517:   imul   0x28(%r13,%r11,4),%ebx
  0x00007f1da179351d:   imul   0x2c(%r13,%r11,4),%ebx
  0x00007f1da1793523:   imul   0x30(%r13,%r11,4),%ebx
  0x00007f1da1793529:   imul   0x34(%r13,%r11,4),%ebx
  0x00007f1da179352f:   imul   0x38(%r13,%r11,4),%ebx
  0x00007f1da1793535:   imul   0x3c(%r13,%r11,4),%ebx
  0x00007f1da179353b:   imul   0x40(%r13,%r11,4),%ebx
  0x00007f1da1793541:   imul   0x44(%r13,%r11,4),%ebx
  0x00007f1da1793547:   imul   0x48(%r13,%r11,4),%ebx
  0x00007f1da179354d:   imul   0x4c(%r13,%r11,4),%ebx
  0x00007f1da1793553:   add    $0x10,%ebp
  0x00007f1da1793556:   cmp    %r8d,%ebp
  0x00007f1da1793559:   jl     0x00007f1da17934f0
  0x00007f1da179355b:   mov    0x348(%r15),%r11             ; ImmutableOopMap {r13=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) test::micro@81 (line 20)
  0x00007f1da1793562:   test   %eax,(%r11)                  ;   {poll}
  0x00007f1da1793565:   cmp    %ecx,%ebp
  0x00007f1da1793567:   jl     0x00007f1da17934cc
  0x00007f1da179356d:   cmp    %r9d,%ebp
  0x00007f1da1793570:   jge    0x00007f1da1793586
  0x00007f1da1793572:   xchg   %ax,%ax
  0x00007f1da1793574:   cmp    %r9d,%ebp
  0x00007f1da1793577:   jae    0x00007f1da17935a2
  0x00007f1da1793579:   imul   0x10(%r13,%rbp,4),%ebx
  0x00007f1da179357f:   inc    %ebp
  0x00007f1da1793581:   cmp    %r9d,%ebp
  0x00007f1da1793584:   jl     0x00007f1da1793574
  0x00007f1da1793586:   mov    %ebx,%eax
  0x00007f1da1793588:   add    $0x30,%rsp
  0x00007f1da179358c:   pop    %rbp
  0x00007f1da179358d:   cmp    0x340(%r15),%rsp             ;   {poll_return}
  0x00007f1da1793594:   ja     0x00007f1da17935d8
  0x00007f1da179359a:   retq   
  0x00007f1da179359b:   mov    %ebx,(%rsp)
  0x00007f1da179359e:   xchg   %ax,%ax
  0x00007f1da17935a0:   jmp    0x00007f1da17935a5
  0x00007f1da17935a2:   mov    %ebx,(%rsp)
  0x00007f1da17935a5:   mov    $0xffffffe4,%esi
  0x00007f1da17935aa:   mov    %r13,0x10(%rsp)
  0x00007f1da17935af:   callq  0x00007f1da176a800           ; ImmutableOopMap {[16]=Oop }
                                                            ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::micro@75 (line 21)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f1da17935b4:   mov    $0xffffff8d,%esi
  0x00007f1da17935b9:   mov    %r13,(%rsp)
  0x00007f1da17935bd:   mov    %ebx,0x8(%rsp)
  0x00007f1da17935c1:   xchg   %ax,%ax
  0x00007f1da17935c3:   callq  0x00007f1da176a800           ; ImmutableOopMap {[0]=Oop }
                                                            ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::micro@66 (line 20)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f1da17935c8:   mov    $0xffffff76,%esi
  0x00007f1da17935cd:   mov    %ebx,(%rsp)
  0x00007f1da17935d0:   data16 xchg %ax,%ax
  0x00007f1da17935d3:   callq  0x00007f1da176a800           ; ImmutableOopMap {}
                                                            ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::micro@66 (line 20)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f1da17935d8:   movabs $0x7f1da179358d,%r10         ;   {internal_word}
  0x00007f1da17935e2:   mov    %r10,0x358(%r15)
  0x00007f1da17935e9:   jmpq   0x00007f1da1769680           ;   {runtime_call SafepointBlob}
  0x00007f1da17935ee:   hlt    
  0x00007f1da17935ef:   hlt    
  0x00007f1da17935f0:   hlt    
  0x00007f1da17935f1:   hlt    
  0x00007f1da17935f2:   hlt    
  0x00007f1da17935f3:   hlt    
  0x00007f1da17935f4:   hlt    
  0x00007f1da17935f5:   hlt    
  0x00007f1da17935f6:   hlt    
  0x00007f1da17935f7:   hlt    
  0x00007f1da17935f8:   hlt    
  0x00007f1da17935f9:   hlt    
  0x00007f1da17935fa:   hlt    
  0x00007f1da17935fb:   hlt    
  0x00007f1da17935fc:   hlt    
  0x00007f1da17935fd:   hlt    
  0x00007f1da17935fe:   hlt    
  0x00007f1da17935ff:   hlt    
[Exception Handler]
  0x00007f1da1793600:   jmpq   0x00007f1da177cc80           ;   {no_reloc}
[Deopt Handler Code]
  0x00007f1da1793605:   callq  0x00007f1da179360a
  0x00007f1da179360a:   subq   $0x5,(%rsp)
  0x00007f1da179360f:   jmpq   0x00007f1da176ab20           ;   {runtime_call DeoptimizationBlob}
  0x00007f1da1793614:   hlt    
  0x00007f1da1793615:   hlt    
  0x00007f1da1793616:   hlt    
  0x00007f1da1793617:   hlt    
--------------------------------------------------------------------------------

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     118   19             test::micro (86 bytes)
 total in heap  [0x00007f1da1793710,0x00007f1da1793b30] = 1056
 relocation     [0x00007f1da1793870,0x00007f1da1793888] = 24
 main code      [0x00007f1da17938a0,0x00007f1da1793a40] = 416
 stub code      [0x00007f1da1793a40,0x00007f1da1793a58] = 24
 oops           [0x00007f1da1793a58,0x00007f1da1793a60] = 8
 metadata       [0x00007f1da1793a60,0x00007f1da1793a68] = 8
 scopes data    [0x00007f1da1793a68,0x00007f1da1793ab8] = 80
 scopes pcs     [0x00007f1da1793ab8,0x00007f1da1793b18] = 96
 dependencies   [0x00007f1da1793b18,0x00007f1da1793b20] = 8
 nul chk table  [0x00007f1da1793b20,0x00007f1da1793b30] = 16

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x00007f1d43801440} 'micro' '(I[I)I' in 'test'
  # parm0:    rsi       = int
  # parm1:    rdx:rdx   = '[I'
  #           [sp+0x30]  (sp of caller)
  0x00007f1da17938a0:   mov    %eax,-0x14000(%rsp)
  0x00007f1da17938a7:   push   %rbp
  0x00007f1da17938a8:   sub    $0x20,%rsp
  0x00007f1da17938ac:   mov    %esi,%r11d
  0x00007f1da17938af:   mov    %esi,%r10d
  0x00007f1da17938b2:   add    $0xfffffe0c,%r10d
  0x00007f1da17938b9:   nopl   0x0(%rax)
  0x00007f1da17938c0:   cmp    $0x1f5,%r10d
  0x00007f1da17938c7:   jae    0x00007f1da17939f0
  0x00007f1da17938cd:   mov    0xc(%rdx),%ebp               ; implicit exception: dispatches to 0x00007f1da1793a04
  0x00007f1da17938d0:   mov    $0x1,%r8d
  0x00007f1da17938d6:   test   %ebp,%ebp
  0x00007f1da17938d8:   jbe    0x00007f1da17939d8
  0x00007f1da17938de:   mov    %ebp,%r9d
  0x00007f1da17938e1:   dec    %r9d
  0x00007f1da17938e4:   cmp    %ebp,%r9d
  0x00007f1da17938e7:   jae    0x00007f1da17939df
  0x00007f1da17938ed:   mov    0x10(%rdx),%eax
  0x00007f1da17938f0:   mov    %ebp,%r11d
  0x00007f1da17938f3:   add    $0xfffffff1,%r11d
  0x00007f1da17938f7:   mov    $0x80000000,%ecx
  0x00007f1da17938fc:   cmp    %r11d,%r9d
  0x00007f1da17938ff:   cmovl  %ecx,%r11d
  0x00007f1da1793903:   cmp    $0x1,%r11d
  0x00007f1da1793907:   jle    0x00007f1da17939ac
  0x00007f1da179390d:   mov    $0x3e80,%r10d
  0x00007f1da1793913:   xor    %ecx,%ecx
  0x00007f1da1793915:   mov    %r11d,%ebx
  0x00007f1da1793918:   sub    %r8d,%ebx
  0x00007f1da179391b:   cmp    %r8d,%r11d
  0x00007f1da179391e:   cmovl  %ecx,%ebx
  0x00007f1da1793921:   cmp    $0x3e80,%ebx
  0x00007f1da1793927:   cmova  %r10d,%ebx
  0x00007f1da179392b:   add    %r8d,%ebx
  0x00007f1da179392e:   xchg   %ax,%ax
  0x00007f1da1793930:   imul   0x10(%rdx,%r8,4),%eax
  0x00007f1da1793936:   imul   0x14(%rdx,%r8,4),%eax
  0x00007f1da179393c:   imul   0x18(%rdx,%r8,4),%eax
  0x00007f1da1793942:   imul   0x1c(%rdx,%r8,4),%eax
  0x00007f1da1793948:   imul   0x20(%rdx,%r8,4),%eax
  0x00007f1da179394e:   imul   0x24(%rdx,%r8,4),%eax
  0x00007f1da1793954:   imul   0x28(%rdx,%r8,4),%eax
  0x00007f1da179395a:   imul   0x2c(%rdx,%r8,4),%eax
  0x00007f1da1793960:   imul   0x30(%rdx,%r8,4),%eax
  0x00007f1da1793966:   imul   0x34(%rdx,%r8,4),%eax
  0x00007f1da179396c:   imul   0x38(%rdx,%r8,4),%eax
  0x00007f1da1793972:   imul   0x3c(%rdx,%r8,4),%eax
  0x00007f1da1793978:   imul   0x40(%rdx,%r8,4),%eax
  0x00007f1da179397e:   imul   0x44(%rdx,%r8,4),%eax
  0x00007f1da1793984:   imul   0x48(%rdx,%r8,4),%eax
  0x00007f1da179398a:   imul   0x4c(%rdx,%r8,4),%eax
  0x00007f1da1793990:   add    $0x10,%r8d
  0x00007f1da1793994:   cmp    %ebx,%r8d
  0x00007f1da1793997:   jl     0x00007f1da1793930
  0x00007f1da1793999:   mov    0x348(%r15),%r9              ; ImmutableOopMap {rdx=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) test::micro@81 (line 20)
  0x00007f1da17939a0:   test   %eax,(%r9)                   ;   {poll}
  0x00007f1da17939a3:   cmp    %r11d,%r8d
  0x00007f1da17939a6:   jl     0x00007f1da1793915
  0x00007f1da17939ac:   cmp    %ebp,%r8d
  0x00007f1da17939af:   jge    0x00007f1da17939c5
  0x00007f1da17939b1:   data16 xchg %ax,%ax
  0x00007f1da17939b4:   imul   0x10(%rdx,%r8,4),%eax
  0x00007f1da17939ba:   inc    %r8d
  0x00007f1da17939bd:   data16 xchg %ax,%ax
  0x00007f1da17939c0:   cmp    %ebp,%r8d
  0x00007f1da17939c3:   jl     0x00007f1da17939b4
  0x00007f1da17939c5:   add    $0x20,%rsp
  0x00007f1da17939c9:   pop    %rbp
  0x00007f1da17939ca:   cmp    0x340(%r15),%rsp             ;   {poll_return}
  0x00007f1da17939d1:   ja     0x00007f1da1793a10
  0x00007f1da17939d7:   retq   
  0x00007f1da17939d8:   mov    $0x1,%eax
  0x00007f1da17939dd:   jmp    0x00007f1da17939c5
  0x00007f1da17939df:   mov    $0xffffff76,%esi
  0x00007f1da17939e4:   mov    %rdx,(%rsp)
  0x00007f1da17939e8:   data16 xchg %ax,%ax
  0x00007f1da17939eb:   callq  0x00007f1da176a800           ; ImmutableOopMap {[0]=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) test::micro@69 (line 20)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f1da17939f0:   mov    $0xffffff3d,%esi
  0x00007f1da17939f5:   mov    %rdx,%rbp
  0x00007f1da17939f8:   mov    %r11d,0x4(%rsp)
  0x00007f1da17939fd:   xchg   %ax,%ax
  0x00007f1da17939ff:   callq  0x00007f1da176a800           ; ImmutableOopMap {rbp=Oop }
                                                            ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) test::micro@4 (line 6)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f1da1793a04:   mov    $0xfffffff6,%esi
  0x00007f1da1793a09:   xchg   %ax,%ax
  0x00007f1da1793a0b:   callq  0x00007f1da176a800           ; ImmutableOopMap {}
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::micro@68 (line 20)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f1da1793a10:   movabs $0x7f1da17939ca,%r10         ;   {internal_word}
  0x00007f1da1793a1a:   mov    %r10,0x358(%r15)
  0x00007f1da1793a21:   jmpq   0x00007f1da1769680           ;   {runtime_call SafepointBlob}
  0x00007f1da1793a26:   hlt    
  0x00007f1da1793a27:   hlt    
  0x00007f1da1793a28:   hlt    
  0x00007f1da1793a29:   hlt    
  0x00007f1da1793a2a:   hlt    
  0x00007f1da1793a2b:   hlt    
  0x00007f1da1793a2c:   hlt    
  0x00007f1da1793a2d:   hlt    
  0x00007f1da1793a2e:   hlt    
  0x00007f1da1793a2f:   hlt    
  0x00007f1da1793a30:   hlt    
  0x00007f1da1793a31:   hlt    
  0x00007f1da1793a32:   hlt    
  0x00007f1da1793a33:   hlt    
  0x00007f1da1793a34:   hlt    
  0x00007f1da1793a35:   hlt    
  0x00007f1da1793a36:   hlt    
  0x00007f1da1793a37:   hlt    
  0x00007f1da1793a38:   hlt    
  0x00007f1da1793a39:   hlt    
  0x00007f1da1793a3a:   hlt    
  0x00007f1da1793a3b:   hlt    
  0x00007f1da1793a3c:   hlt    
  0x00007f1da1793a3d:   hlt    
  0x00007f1da1793a3e:   hlt    
  0x00007f1da1793a3f:   hlt    
[Exception Handler]
  0x00007f1da1793a40:   jmpq   0x00007f1da177cc80           ;   {no_reloc}
[Deopt Handler Code]
  0x00007f1da1793a45:   callq  0x00007f1da1793a4a
  0x00007f1da1793a4a:   subq   $0x5,(%rsp)
  0x00007f1da1793a4f:   jmpq   0x00007f1da176ab20           ;   {runtime_call DeoptimizationBlob}
  0x00007f1da1793a54:   hlt    
  0x00007f1da1793a55:   hlt    
  0x00007f1da1793a56:   hlt    
  0x00007f1da1793a57:   hlt    
--------------------------------------------------------------------------------
[time] 78ms  [res] 0
