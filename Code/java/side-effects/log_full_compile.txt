CompileCommand: print test.micro bool print = true
CompileCommand: compileonly test.micro bool compileonly = true
WARNING: Using incubator modules: jdk.incubator.vector

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     105   18 %           test::micro @ 42 (86 bytes)
 total in heap  [0x00007fdfa4989510,0x00007fdfa4989978] = 1128
 relocation     [0x00007fdfa4989670,0x00007fdfa4989690] = 32
 main code      [0x00007fdfa49896a0,0x00007fdfa4989880] = 480
 stub code      [0x00007fdfa4989880,0x00007fdfa4989898] = 24
 oops           [0x00007fdfa4989898,0x00007fdfa49898a0] = 8
 metadata       [0x00007fdfa49898a0,0x00007fdfa49898b0] = 16
 scopes data    [0x00007fdfa49898b0,0x00007fdfa4989900] = 80
 scopes pcs     [0x00007fdfa4989900,0x00007fdfa4989960] = 96
 dependencies   [0x00007fdfa4989960,0x00007fdfa4989968] = 8
 nul chk table  [0x00007fdfa4989968,0x00007fdfa4989978] = 16

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x00007fdf39801440} 'micro' '(I[I)I' in 'test'
  0x00007fdfa49896a0:   callq  0x00007fdfa87bb620           ;   {runtime_call os::breakpoint()}
  0x00007fdfa49896a5:   data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fdfa49896b0:   mov    %eax,-0x14000(%rsp)
  0x00007fdfa49896b7:   push   %rbp
  0x00007fdfa49896b8:   sub    $0x30,%rsp
  0x00007fdfa49896bc:   mov    0x10(%rsi),%r13
  0x00007fdfa49896c0:   mov    0x8(%rsi),%ebx
  0x00007fdfa49896c3:   mov    (%rsi),%ebp
  0x00007fdfa49896c5:   mov    %rsi,%rdi
  0x00007fdfa49896c8:   movabs $0x7fdfa8877e80,%r10
  0x00007fdfa49896d2:   callq  *%r10
  0x00007fdfa49896d5:   mov    0x8(%r13),%r11d              ; implicit exception: dispatches to 0x00007fdfa498983c
  0x00007fdfa49896d9:   nopl   0x0(%rax)
  0x00007fdfa49896e0:   cmp    $0x6c38,%r11d                ;   {metadata({type array int})}
  0x00007fdfa49896e7:   jne    0x00007fdfa4989828
  0x00007fdfa49896ed:   mov    0xc(%r13),%r9d
  0x00007fdfa49896f1:   cmp    %r9d,%ebp
  0x00007fdfa49896f4:   jge    0x00007fdfa49897f9
  0x00007fdfa49896fa:   mov    %ebp,%r10d
  0x00007fdfa49896fd:   inc    %r10d
  0x00007fdfa4989700:   xor    %edi,%edi
  0x00007fdfa4989702:   test   %r10d,%r10d
  0x00007fdfa4989705:   cmovl  %edi,%r10d
  0x00007fdfa4989709:   cmp    %r9d,%r10d
  0x00007fdfa498970c:   cmovg  %r9d,%r10d
  0x00007fdfa4989710:   cmp    %r9d,%ebp
  0x00007fdfa4989713:   jae    0x00007fdfa498980e
  0x00007fdfa4989719:   sub    0x10(%r13,%rbp,4),%ebx
  0x00007fdfa498971e:   inc    %ebp
  0x00007fdfa4989720:   cmp    %r10d,%ebp
  0x00007fdfa4989723:   jl     0x00007fdfa4989710
  0x00007fdfa4989725:   mov    %r9d,%ecx
  0x00007fdfa4989728:   add    $0xfffffff1,%ecx
  0x00007fdfa498972b:   mov    $0x80000000,%r10d
  0x00007fdfa4989731:   cmp    %ecx,%r9d
  0x00007fdfa4989734:   cmovl  %r10d,%ecx
  0x00007fdfa4989738:   cmp    %ecx,%ebp
  0x00007fdfa498973a:   nopw   0x0(%rax,%rax,1)
  0x00007fdfa4989740:   jge    0x00007fdfa49897dd
  0x00007fdfa4989746:   mov    $0x3e80,%r10d
  0x00007fdfa498974c:   mov    %ecx,%r8d
  0x00007fdfa498974f:   sub    %ebp,%r8d
  0x00007fdfa4989752:   cmp    %ebp,%ecx
  0x00007fdfa4989754:   cmovl  %edi,%r8d
  0x00007fdfa4989758:   cmp    $0x3e80,%r8d
  0x00007fdfa498975f:   cmova  %r10d,%r8d
  0x00007fdfa4989763:   add    %ebp,%r8d
  0x00007fdfa4989766:   data16 nopw 0x0(%rax,%rax,1)
  0x00007fdfa4989770:   sub    0x10(%r13,%rbp,4),%ebx
  0x00007fdfa4989775:   movslq %ebp,%r11
  0x00007fdfa4989778:   sub    0x14(%r13,%r11,4),%ebx
  0x00007fdfa498977d:   sub    0x18(%r13,%r11,4),%ebx
  0x00007fdfa4989782:   sub    0x1c(%r13,%r11,4),%ebx
  0x00007fdfa4989787:   sub    0x20(%r13,%r11,4),%ebx
  0x00007fdfa498978c:   sub    0x24(%r13,%r11,4),%ebx
  0x00007fdfa4989791:   sub    0x28(%r13,%r11,4),%ebx
  0x00007fdfa4989796:   sub    0x2c(%r13,%r11,4),%ebx
  0x00007fdfa498979b:   sub    0x30(%r13,%r11,4),%ebx
  0x00007fdfa49897a0:   sub    0x34(%r13,%r11,4),%ebx
  0x00007fdfa49897a5:   sub    0x38(%r13,%r11,4),%ebx
  0x00007fdfa49897aa:   sub    0x3c(%r13,%r11,4),%ebx
  0x00007fdfa49897af:   sub    0x40(%r13,%r11,4),%ebx
  0x00007fdfa49897b4:   sub    0x44(%r13,%r11,4),%ebx
  0x00007fdfa49897b9:   sub    0x48(%r13,%r11,4),%ebx
  0x00007fdfa49897be:   sub    0x4c(%r13,%r11,4),%ebx
  0x00007fdfa49897c3:   add    $0x10,%ebp
  0x00007fdfa49897c6:   cmp    %r8d,%ebp
  0x00007fdfa49897c9:   jl     0x00007fdfa4989770
  0x00007fdfa49897cb:   mov    0x348(%r15),%r11             ; ImmutableOopMap {r13=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) test::micro@57 (line 14)
  0x00007fdfa49897d2:   test   %eax,(%r11)                  ;   {poll}
  0x00007fdfa49897d5:   cmp    %ecx,%ebp
  0x00007fdfa49897d7:   jl     0x00007fdfa498974c
  0x00007fdfa49897dd:   data16 xchg %ax,%ax
  0x00007fdfa49897e0:   cmp    %r9d,%ebp
  0x00007fdfa49897e3:   jge    0x00007fdfa49897f9
  0x00007fdfa49897e5:   data16 xchg %ax,%ax
  0x00007fdfa49897e8:   cmp    %r9d,%ebp
  0x00007fdfa49897eb:   jae    0x00007fdfa4989813
  0x00007fdfa49897ed:   sub    0x10(%r13,%rbp,4),%ebx
  0x00007fdfa49897f2:   inc    %ebp
  0x00007fdfa49897f4:   cmp    %r9d,%ebp
  0x00007fdfa49897f7:   jl     0x00007fdfa49897e8
  0x00007fdfa49897f9:   mov    %ebx,%eax
  0x00007fdfa49897fb:   add    $0x30,%rsp
  0x00007fdfa49897ff:   pop    %rbp
  0x00007fdfa4989800:   cmp    0x340(%r15),%rsp             ;   {poll_return}
  0x00007fdfa4989807:   ja     0x00007fdfa498984c
  0x00007fdfa498980d:   retq   
  0x00007fdfa498980e:   mov    %ebx,(%rsp)
  0x00007fdfa4989811:   jmp    0x00007fdfa4989816
  0x00007fdfa4989813:   mov    %ebx,(%rsp)
  0x00007fdfa4989816:   mov    $0xffffffe4,%esi
  0x00007fdfa498981b:   mov    %r13,0x10(%rsp)
  0x00007fdfa4989820:   data16 xchg %ax,%ax
  0x00007fdfa4989823:   callq  0x00007fdfa4960800           ; ImmutableOopMap {[16]=Oop }
                                                            ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::micro@51 (line 15)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fdfa4989828:   mov    $0xffffff8d,%esi
  0x00007fdfa498982d:   mov    %r13,(%rsp)
  0x00007fdfa4989831:   mov    %ebx,0x8(%rsp)
  0x00007fdfa4989835:   xchg   %ax,%ax
  0x00007fdfa4989837:   callq  0x00007fdfa4960800           ; ImmutableOopMap {[0]=Oop }
                                                            ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::micro@42 (line 14)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fdfa498983c:   mov    $0xffffff76,%esi
  0x00007fdfa4989841:   mov    %ebx,(%rsp)
  0x00007fdfa4989844:   data16 xchg %ax,%ax
  0x00007fdfa4989847:   callq  0x00007fdfa4960800           ; ImmutableOopMap {}
                                                            ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::micro@42 (line 14)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fdfa498984c:   movabs $0x7fdfa4989800,%r10         ;   {internal_word}
  0x00007fdfa4989856:   mov    %r10,0x358(%r15)
  0x00007fdfa498985d:   jmpq   0x00007fdfa495f680           ;   {runtime_call SafepointBlob}
  0x00007fdfa4989862:   hlt    
  0x00007fdfa4989863:   hlt    
  0x00007fdfa4989864:   hlt    
  0x00007fdfa4989865:   hlt    
  0x00007fdfa4989866:   hlt    
  0x00007fdfa4989867:   hlt    
  0x00007fdfa4989868:   hlt    
  0x00007fdfa4989869:   hlt    
  0x00007fdfa498986a:   hlt    
  0x00007fdfa498986b:   hlt    
  0x00007fdfa498986c:   hlt    
  0x00007fdfa498986d:   hlt    
  0x00007fdfa498986e:   hlt    
  0x00007fdfa498986f:   hlt    
  0x00007fdfa4989870:   hlt    
  0x00007fdfa4989871:   hlt    
  0x00007fdfa4989872:   hlt    
  0x00007fdfa4989873:   hlt    
  0x00007fdfa4989874:   hlt    
  0x00007fdfa4989875:   hlt    
  0x00007fdfa4989876:   hlt    
  0x00007fdfa4989877:   hlt    
  0x00007fdfa4989878:   hlt    
  0x00007fdfa4989879:   hlt    
  0x00007fdfa498987a:   hlt    
  0x00007fdfa498987b:   hlt    
  0x00007fdfa498987c:   hlt    
  0x00007fdfa498987d:   hlt    
  0x00007fdfa498987e:   hlt    
  0x00007fdfa498987f:   hlt    
[Exception Handler]
  0x00007fdfa4989880:   jmpq   0x00007fdfa4972380           ;   {no_reloc}
[Deopt Handler Code]
  0x00007fdfa4989885:   callq  0x00007fdfa498988a
  0x00007fdfa498988a:   subq   $0x5,(%rsp)
  0x00007fdfa498988f:   jmpq   0x00007fdfa4960b20           ;   {runtime_call DeoptimizationBlob}
  0x00007fdfa4989894:   hlt    
  0x00007fdfa4989895:   hlt    
  0x00007fdfa4989896:   hlt    
  0x00007fdfa4989897:   hlt    
--------------------------------------------------------------------------------

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     118   19 %           test::micro @ 11 (86 bytes)
 total in heap  [0x00007fdfa4989990,0x00007fdfa4989df8] = 1128
 relocation     [0x00007fdfa4989af0,0x00007fdfa4989b10] = 32
 main code      [0x00007fdfa4989b20,0x00007fdfa4989d00] = 480
 stub code      [0x00007fdfa4989d00,0x00007fdfa4989d18] = 24
 oops           [0x00007fdfa4989d18,0x00007fdfa4989d20] = 8
 metadata       [0x00007fdfa4989d20,0x00007fdfa4989d30] = 16
 scopes data    [0x00007fdfa4989d30,0x00007fdfa4989d80] = 80
 scopes pcs     [0x00007fdfa4989d80,0x00007fdfa4989de0] = 96
 dependencies   [0x00007fdfa4989de0,0x00007fdfa4989de8] = 8
 nul chk table  [0x00007fdfa4989de8,0x00007fdfa4989df8] = 16

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x00007fdf39801440} 'micro' '(I[I)I' in 'test'
  0x00007fdfa4989b20:   callq  0x00007fdfa87bb620           ;   {runtime_call os::breakpoint()}
  0x00007fdfa4989b25:   data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fdfa4989b30:   mov    %eax,-0x14000(%rsp)
  0x00007fdfa4989b37:   push   %rbp
  0x00007fdfa4989b38:   sub    $0x30,%rsp
  0x00007fdfa4989b3c:   mov    0x10(%rsi),%r13
  0x00007fdfa4989b40:   mov    0x8(%rsi),%ebx
  0x00007fdfa4989b43:   mov    (%rsi),%ebp
  0x00007fdfa4989b45:   mov    %rsi,%rdi
  0x00007fdfa4989b48:   movabs $0x7fdfa8877e80,%r10
  0x00007fdfa4989b52:   callq  *%r10
  0x00007fdfa4989b55:   mov    0x8(%r13),%r11d              ; implicit exception: dispatches to 0x00007fdfa4989cbc
  0x00007fdfa4989b59:   nopl   0x0(%rax)
  0x00007fdfa4989b60:   cmp    $0x6c38,%r11d                ;   {metadata({type array int})}
  0x00007fdfa4989b67:   jne    0x00007fdfa4989ca8
  0x00007fdfa4989b6d:   mov    0xc(%r13),%r9d
  0x00007fdfa4989b71:   cmp    %r9d,%ebp
  0x00007fdfa4989b74:   jge    0x00007fdfa4989c79
  0x00007fdfa4989b7a:   mov    %ebp,%r10d
  0x00007fdfa4989b7d:   inc    %r10d
  0x00007fdfa4989b80:   xor    %edi,%edi
  0x00007fdfa4989b82:   test   %r10d,%r10d
  0x00007fdfa4989b85:   cmovl  %edi,%r10d
  0x00007fdfa4989b89:   cmp    %r9d,%r10d
  0x00007fdfa4989b8c:   cmovg  %r9d,%r10d
  0x00007fdfa4989b90:   cmp    %r9d,%ebp
  0x00007fdfa4989b93:   jae    0x00007fdfa4989c8e
  0x00007fdfa4989b99:   add    0x10(%r13,%rbp,4),%ebx
  0x00007fdfa4989b9e:   inc    %ebp
  0x00007fdfa4989ba0:   cmp    %r10d,%ebp
  0x00007fdfa4989ba3:   jl     0x00007fdfa4989b90
  0x00007fdfa4989ba5:   mov    %r9d,%ecx
  0x00007fdfa4989ba8:   add    $0xfffffff1,%ecx
  0x00007fdfa4989bab:   mov    $0x80000000,%r10d
  0x00007fdfa4989bb1:   cmp    %ecx,%r9d
  0x00007fdfa4989bb4:   cmovl  %r10d,%ecx
  0x00007fdfa4989bb8:   cmp    %ecx,%ebp
  0x00007fdfa4989bba:   nopw   0x0(%rax,%rax,1)
  0x00007fdfa4989bc0:   jge    0x00007fdfa4989c5d
  0x00007fdfa4989bc6:   mov    $0x3e80,%r10d
  0x00007fdfa4989bcc:   mov    %ecx,%r8d
  0x00007fdfa4989bcf:   sub    %ebp,%r8d
  0x00007fdfa4989bd2:   cmp    %ebp,%ecx
  0x00007fdfa4989bd4:   cmovl  %edi,%r8d
  0x00007fdfa4989bd8:   cmp    $0x3e80,%r8d
  0x00007fdfa4989bdf:   cmova  %r10d,%r8d
  0x00007fdfa4989be3:   add    %ebp,%r8d
  0x00007fdfa4989be6:   data16 nopw 0x0(%rax,%rax,1)
  0x00007fdfa4989bf0:   add    0x10(%r13,%rbp,4),%ebx
  0x00007fdfa4989bf5:   movslq %ebp,%r11
  0x00007fdfa4989bf8:   add    0x14(%r13,%r11,4),%ebx
  0x00007fdfa4989bfd:   add    0x18(%r13,%r11,4),%ebx
  0x00007fdfa4989c02:   add    0x1c(%r13,%r11,4),%ebx
  0x00007fdfa4989c07:   add    0x20(%r13,%r11,4),%ebx
  0x00007fdfa4989c0c:   add    0x24(%r13,%r11,4),%ebx
  0x00007fdfa4989c11:   add    0x28(%r13,%r11,4),%ebx
  0x00007fdfa4989c16:   add    0x2c(%r13,%r11,4),%ebx
  0x00007fdfa4989c1b:   add    0x30(%r13,%r11,4),%ebx
  0x00007fdfa4989c20:   add    0x34(%r13,%r11,4),%ebx
  0x00007fdfa4989c25:   add    0x38(%r13,%r11,4),%ebx
  0x00007fdfa4989c2a:   add    0x3c(%r13,%r11,4),%ebx
  0x00007fdfa4989c2f:   add    0x40(%r13,%r11,4),%ebx
  0x00007fdfa4989c34:   add    0x44(%r13,%r11,4),%ebx
  0x00007fdfa4989c39:   add    0x48(%r13,%r11,4),%ebx
  0x00007fdfa4989c3e:   add    0x4c(%r13,%r11,4),%ebx
  0x00007fdfa4989c43:   add    $0x10,%ebp
  0x00007fdfa4989c46:   cmp    %r8d,%ebp
  0x00007fdfa4989c49:   jl     0x00007fdfa4989bf0
  0x00007fdfa4989c4b:   mov    0x348(%r15),%r11             ; ImmutableOopMap {r13=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) test::micro@26 (line 8)
  0x00007fdfa4989c52:   test   %eax,(%r11)                  ;   {poll}
  0x00007fdfa4989c55:   cmp    %ecx,%ebp
  0x00007fdfa4989c57:   jl     0x00007fdfa4989bcc
  0x00007fdfa4989c5d:   data16 xchg %ax,%ax
  0x00007fdfa4989c60:   cmp    %r9d,%ebp
  0x00007fdfa4989c63:   jge    0x00007fdfa4989c79
  0x00007fdfa4989c65:   data16 xchg %ax,%ax
  0x00007fdfa4989c68:   cmp    %r9d,%ebp
  0x00007fdfa4989c6b:   jae    0x00007fdfa4989c93
  0x00007fdfa4989c6d:   add    0x10(%r13,%rbp,4),%ebx
  0x00007fdfa4989c72:   inc    %ebp
  0x00007fdfa4989c74:   cmp    %r9d,%ebp
  0x00007fdfa4989c77:   jl     0x00007fdfa4989c68
  0x00007fdfa4989c79:   mov    %ebx,%eax
  0x00007fdfa4989c7b:   add    $0x30,%rsp
  0x00007fdfa4989c7f:   pop    %rbp
  0x00007fdfa4989c80:   cmp    0x340(%r15),%rsp             ;   {poll_return}
  0x00007fdfa4989c87:   ja     0x00007fdfa4989ccc
  0x00007fdfa4989c8d:   retq   
  0x00007fdfa4989c8e:   mov    %ebx,(%rsp)
  0x00007fdfa4989c91:   jmp    0x00007fdfa4989c96
  0x00007fdfa4989c93:   mov    %ebx,(%rsp)
  0x00007fdfa4989c96:   mov    $0xffffffe4,%esi
  0x00007fdfa4989c9b:   mov    %r13,0x10(%rsp)
  0x00007fdfa4989ca0:   data16 xchg %ax,%ax
  0x00007fdfa4989ca3:   callq  0x00007fdfa4960800           ; ImmutableOopMap {[16]=Oop }
                                                            ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::micro@20 (line 9)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fdfa4989ca8:   mov    $0xffffff8d,%esi
  0x00007fdfa4989cad:   mov    %r13,(%rsp)
  0x00007fdfa4989cb1:   mov    %ebx,0x8(%rsp)
  0x00007fdfa4989cb5:   xchg   %ax,%ax
  0x00007fdfa4989cb7:   callq  0x00007fdfa4960800           ; ImmutableOopMap {[0]=Oop }
                                                            ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::micro@11 (line 8)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fdfa4989cbc:   mov    $0xffffff76,%esi
  0x00007fdfa4989cc1:   mov    %ebx,(%rsp)
  0x00007fdfa4989cc4:   data16 xchg %ax,%ax
  0x00007fdfa4989cc7:   callq  0x00007fdfa4960800           ; ImmutableOopMap {}
                                                            ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::micro@11 (line 8)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fdfa4989ccc:   movabs $0x7fdfa4989c80,%r10         ;   {internal_word}
  0x00007fdfa4989cd6:   mov    %r10,0x358(%r15)
  0x00007fdfa4989cdd:   jmpq   0x00007fdfa495f680           ;   {runtime_call SafepointBlob}
  0x00007fdfa4989ce2:   hlt    
  0x00007fdfa4989ce3:   hlt    
  0x00007fdfa4989ce4:   hlt    
  0x00007fdfa4989ce5:   hlt    
  0x00007fdfa4989ce6:   hlt    
  0x00007fdfa4989ce7:   hlt    
  0x00007fdfa4989ce8:   hlt    
  0x00007fdfa4989ce9:   hlt    
  0x00007fdfa4989cea:   hlt    
  0x00007fdfa4989ceb:   hlt    
  0x00007fdfa4989cec:   hlt    
  0x00007fdfa4989ced:   hlt    
  0x00007fdfa4989cee:   hlt    
  0x00007fdfa4989cef:   hlt    
  0x00007fdfa4989cf0:   hlt    
  0x00007fdfa4989cf1:   hlt    
  0x00007fdfa4989cf2:   hlt    
  0x00007fdfa4989cf3:   hlt    
  0x00007fdfa4989cf4:   hlt    
  0x00007fdfa4989cf5:   hlt    
  0x00007fdfa4989cf6:   hlt    
  0x00007fdfa4989cf7:   hlt    
  0x00007fdfa4989cf8:   hlt    
  0x00007fdfa4989cf9:   hlt    
  0x00007fdfa4989cfa:   hlt    
  0x00007fdfa4989cfb:   hlt    
  0x00007fdfa4989cfc:   hlt    
  0x00007fdfa4989cfd:   hlt    
  0x00007fdfa4989cfe:   hlt    
  0x00007fdfa4989cff:   hlt    
[Exception Handler]
  0x00007fdfa4989d00:   jmpq   0x00007fdfa4972380           ;   {no_reloc}
[Deopt Handler Code]
  0x00007fdfa4989d05:   callq  0x00007fdfa4989d0a
  0x00007fdfa4989d0a:   subq   $0x5,(%rsp)
  0x00007fdfa4989d0f:   jmpq   0x00007fdfa4960b20           ;   {runtime_call DeoptimizationBlob}
  0x00007fdfa4989d14:   hlt    
  0x00007fdfa4989d15:   hlt    
  0x00007fdfa4989d16:   hlt    
  0x00007fdfa4989d17:   hlt    
--------------------------------------------------------------------------------

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     129   20             test::micro (86 bytes)
 total in heap  [0x00007fdfa4987390,0x00007fdfa4987a08] = 1656
 relocation     [0x00007fdfa49874f0,0x00007fdfa4987510] = 32
 main code      [0x00007fdfa4987520,0x00007fdfa49878a0] = 896
 stub code      [0x00007fdfa49878a0,0x00007fdfa49878b8] = 24
 oops           [0x00007fdfa49878b8,0x00007fdfa49878c0] = 8
 metadata       [0x00007fdfa49878c0,0x00007fdfa49878c8] = 8
 scopes data    [0x00007fdfa49878c8,0x00007fdfa4987930] = 104
 scopes pcs     [0x00007fdfa4987930,0x00007fdfa49879e0] = 176
 dependencies   [0x00007fdfa49879e0,0x00007fdfa49879e8] = 8
 nul chk table  [0x00007fdfa49879e8,0x00007fdfa4987a08] = 32

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x00007fdf39801440} 'micro' '(I[I)I' in 'test'
  # parm0:    rsi       = int
  # parm1:    rdx:rdx   = '[I'
  #           [sp+0x30]  (sp of caller)
  0x00007fdfa4987520:   mov    %eax,-0x14000(%rsp)
  0x00007fdfa4987527:   push   %rbp
  0x00007fdfa4987528:   sub    $0x20,%rsp
  0x00007fdfa498752c:   mov    $0x1,%r10d
  0x00007fdfa4987532:   mov    $0x3e80,%r11d
  0x00007fdfa4987538:   mov    $0x80000000,%ecx
  0x00007fdfa498753d:   xor    %r9d,%r9d
  0x00007fdfa4987540:   cmp    $0x3e8,%esi
  0x00007fdfa4987546:   jle    0x00007fdfa4987630
  0x00007fdfa498754c:   mov    0xc(%rdx),%ebp               ; implicit exception: dispatches to 0x00007fdfa4987854
  0x00007fdfa498754f:   test   %ebp,%ebp
  0x00007fdfa4987551:   jbe    0x00007fdfa498780a
  0x00007fdfa4987557:   mov    %ebp,%edi
  0x00007fdfa4987559:   dec    %edi
  0x00007fdfa498755b:   cmp    %ebp,%edi
  0x00007fdfa498755d:   data16 xchg %ax,%ax
  0x00007fdfa4987560:   jae    0x00007fdfa4987825
  0x00007fdfa4987566:   mov    0x10(%rdx),%eax
  0x00007fdfa4987569:   mov    %ebp,%r8d
  0x00007fdfa498756c:   add    $0xfffffff1,%r8d
  0x00007fdfa4987570:   cmp    %r8d,%edi
  0x00007fdfa4987573:   cmovl  %ecx,%r8d
  0x00007fdfa4987577:   cmp    $0x1,%r8d
  0x00007fdfa498757b:   nopl   0x0(%rax,%rax,1)
  0x00007fdfa4987580:   jle    0x00007fdfa498760b
  0x00007fdfa4987586:   mov    %r8d,%ebx
  0x00007fdfa4987589:   sub    %r10d,%ebx
  0x00007fdfa498758c:   cmp    %r10d,%r8d
  0x00007fdfa498758f:   cmovl  %r9d,%ebx
  0x00007fdfa4987593:   cmp    $0x3e80,%ebx
  0x00007fdfa4987599:   cmova  %r11d,%ebx
  0x00007fdfa498759d:   add    %r10d,%ebx
  0x00007fdfa49875a0:   add    0x10(%rdx,%r10,4),%eax
  0x00007fdfa49875a5:   add    0x14(%rdx,%r10,4),%eax
  0x00007fdfa49875aa:   add    0x18(%rdx,%r10,4),%eax
  0x00007fdfa49875af:   add    0x1c(%rdx,%r10,4),%eax
  0x00007fdfa49875b4:   add    0x20(%rdx,%r10,4),%eax
  0x00007fdfa49875b9:   add    0x24(%rdx,%r10,4),%eax
  0x00007fdfa49875be:   add    0x28(%rdx,%r10,4),%eax
  0x00007fdfa49875c3:   add    0x2c(%rdx,%r10,4),%eax
  0x00007fdfa49875c8:   add    0x30(%rdx,%r10,4),%eax
  0x00007fdfa49875cd:   add    0x34(%rdx,%r10,4),%eax
  0x00007fdfa49875d2:   add    0x38(%rdx,%r10,4),%eax
  0x00007fdfa49875d7:   add    0x3c(%rdx,%r10,4),%eax
  0x00007fdfa49875dc:   add    0x40(%rdx,%r10,4),%eax
  0x00007fdfa49875e1:   add    0x44(%rdx,%r10,4),%eax
  0x00007fdfa49875e6:   add    0x48(%rdx,%r10,4),%eax
  0x00007fdfa49875eb:   add    0x4c(%rdx,%r10,4),%eax
  0x00007fdfa49875f0:   add    $0x10,%r10d
  0x00007fdfa49875f4:   cmp    %ebx,%r10d
  0x00007fdfa49875f7:   jl     0x00007fdfa49875a0
  0x00007fdfa49875f9:   mov    0x348(%r15),%rcx             ; ImmutableOopMap {rdx=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) test::micro@26 (line 8)
  0x00007fdfa4987600:   test   %eax,(%rcx)                  ;   {poll}
  0x00007fdfa4987602:   cmp    %r8d,%r10d
  0x00007fdfa4987605:   jl     0x00007fdfa4987586
  0x00007fdfa498760b:   cmp    %ebp,%r10d
  0x00007fdfa498760e:   jge    0x00007fdfa498761d
  0x00007fdfa4987610:   add    0x10(%rdx,%r10,4),%eax
  0x00007fdfa4987615:   inc    %r10d
  0x00007fdfa4987618:   cmp    %ebp,%r10d
  0x00007fdfa498761b:   jl     0x00007fdfa4987610
  0x00007fdfa498761d:   add    $0x20,%rsp
  0x00007fdfa4987621:   pop    %rbp
  0x00007fdfa4987622:   cmp    0x340(%r15),%rsp             ;   {poll_return}
  0x00007fdfa4987629:   ja     0x00007fdfa4987878
  0x00007fdfa498762f:   retq   
  0x00007fdfa4987630:   cmp    $0x1f4,%esi
  0x00007fdfa4987636:   jl     0x00007fdfa498772a
  0x00007fdfa498763c:   nopl   0x0(%rax)
  0x00007fdfa4987640:   mov    0xc(%rdx),%ebp               ; implicit exception: dispatches to 0x00007fdfa498786c
  0x00007fdfa4987643:   test   %ebp,%ebp
  0x00007fdfa4987645:   jbe    0x00007fdfa4987811
  0x00007fdfa498764b:   mov    %ebp,%edi
  0x00007fdfa498764d:   dec    %edi
  0x00007fdfa498764f:   cmp    %ebp,%edi
  0x00007fdfa4987651:   jae    0x00007fdfa4987844
  0x00007fdfa4987657:   mov    0x10(%rdx),%eax
  0x00007fdfa498765a:   mov    %ebp,%r8d
  0x00007fdfa498765d:   add    $0xfffffff1,%r8d
  0x00007fdfa4987661:   cmp    %r8d,%edi
  0x00007fdfa4987664:   cmovl  %ecx,%r8d
  0x00007fdfa4987668:   cmp    $0x1,%r8d
  0x00007fdfa498766c:   jle    0x00007fdfa498770b
  0x00007fdfa4987672:   mov    %r8d,%ebx
  0x00007fdfa4987675:   sub    %r10d,%ebx
  0x00007fdfa4987678:   cmp    %r10d,%r8d
  0x00007fdfa498767b:   cmovl  %r9d,%ebx
  0x00007fdfa498767f:   cmp    $0x3e80,%ebx
  0x00007fdfa4987685:   cmova  %r11d,%ebx
  0x00007fdfa4987689:   add    %r10d,%ebx
  0x00007fdfa498768c:   nopl   0x0(%rax)
  0x00007fdfa4987690:   imul   0x10(%rdx,%r10,4),%eax
  0x00007fdfa4987696:   imul   0x14(%rdx,%r10,4),%eax
  0x00007fdfa498769c:   imul   0x18(%rdx,%r10,4),%eax
  0x00007fdfa49876a2:   imul   0x1c(%rdx,%r10,4),%eax
  0x00007fdfa49876a8:   imul   0x20(%rdx,%r10,4),%eax
  0x00007fdfa49876ae:   imul   0x24(%rdx,%r10,4),%eax
  0x00007fdfa49876b4:   imul   0x28(%rdx,%r10,4),%eax
  0x00007fdfa49876ba:   imul   0x2c(%rdx,%r10,4),%eax
  0x00007fdfa49876c0:   imul   0x30(%rdx,%r10,4),%eax
  0x00007fdfa49876c6:   imul   0x34(%rdx,%r10,4),%eax
  0x00007fdfa49876cc:   imul   0x38(%rdx,%r10,4),%eax
  0x00007fdfa49876d2:   imul   0x3c(%rdx,%r10,4),%eax
  0x00007fdfa49876d8:   imul   0x40(%rdx,%r10,4),%eax
  0x00007fdfa49876de:   imul   0x44(%rdx,%r10,4),%eax
  0x00007fdfa49876e4:   imul   0x48(%rdx,%r10,4),%eax
  0x00007fdfa49876ea:   imul   0x4c(%rdx,%r10,4),%eax
  0x00007fdfa49876f0:   add    $0x10,%r10d
  0x00007fdfa49876f4:   cmp    %ebx,%r10d
  0x00007fdfa49876f7:   jl     0x00007fdfa4987690
  0x00007fdfa49876f9:   mov    0x348(%r15),%rcx             ; ImmutableOopMap {rdx=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) test::micro@81 (line 20)
  0x00007fdfa4987700:   test   %eax,(%rcx)                  ;   {poll}
  0x00007fdfa4987702:   cmp    %r8d,%r10d
  0x00007fdfa4987705:   jl     0x00007fdfa4987672
  0x00007fdfa498770b:   cmp    %ebp,%r10d
  0x00007fdfa498770e:   jge    0x00007fdfa498761d
  0x00007fdfa4987714:   imul   0x10(%rdx,%r10,4),%eax
  0x00007fdfa498771a:   inc    %r10d
  0x00007fdfa498771d:   data16 xchg %ax,%ax
  0x00007fdfa4987720:   cmp    %ebp,%r10d
  0x00007fdfa4987723:   jl     0x00007fdfa4987714
  0x00007fdfa4987725:   jmpq   0x00007fdfa498761d
  0x00007fdfa498772a:   mov    0xc(%rdx),%ebp               ; implicit exception: dispatches to 0x00007fdfa4987860
  0x00007fdfa498772d:   test   %ebp,%ebp
  0x00007fdfa498772f:   jbe    0x00007fdfa498781b
  0x00007fdfa4987735:   mov    %ebp,%r8d
  0x00007fdfa4987738:   dec    %r8d
  0x00007fdfa498773b:   nopl   0x0(%rax,%rax,1)
  0x00007fdfa4987740:   cmp    %ebp,%r8d
  0x00007fdfa4987743:   jae    0x00007fdfa4987834
  0x00007fdfa4987749:   xor    %eax,%eax
  0x00007fdfa498774b:   sub    0x10(%rdx),%eax
  0x00007fdfa498774e:   mov    %ebp,%edi
  0x00007fdfa4987750:   add    $0xfffffff1,%edi
  0x00007fdfa4987753:   cmp    %edi,%r8d
  0x00007fdfa4987756:   cmovl  %ecx,%edi
  0x00007fdfa4987759:   cmp    $0x1,%edi
  0x00007fdfa498775c:   nopl   0x0(%rax)
  0x00007fdfa4987760:   jle    0x00007fdfa49877ec
  0x00007fdfa4987766:   mov    %edi,%ecx
  0x00007fdfa4987768:   sub    %r10d,%ecx
  0x00007fdfa498776b:   cmp    %r10d,%edi
  0x00007fdfa498776e:   cmovl  %r9d,%ecx
  0x00007fdfa4987772:   cmp    $0x3e80,%ecx
  0x00007fdfa4987778:   cmova  %r11d,%ecx
  0x00007fdfa498777c:   add    %r10d,%ecx
  0x00007fdfa498777f:   nop
  0x00007fdfa4987780:   sub    0x10(%rdx,%r10,4),%eax
  0x00007fdfa4987785:   sub    0x14(%rdx,%r10,4),%eax
  0x00007fdfa498778a:   sub    0x18(%rdx,%r10,4),%eax
  0x00007fdfa498778f:   sub    0x1c(%rdx,%r10,4),%eax
  0x00007fdfa4987794:   sub    0x20(%rdx,%r10,4),%eax
  0x00007fdfa4987799:   sub    0x24(%rdx,%r10,4),%eax
  0x00007fdfa498779e:   sub    0x28(%rdx,%r10,4),%eax
  0x00007fdfa49877a3:   sub    0x2c(%rdx,%r10,4),%eax
  0x00007fdfa49877a8:   sub    0x30(%rdx,%r10,4),%eax
  0x00007fdfa49877ad:   sub    0x34(%rdx,%r10,4),%eax
  0x00007fdfa49877b2:   sub    0x38(%rdx,%r10,4),%eax
  0x00007fdfa49877b7:   sub    0x3c(%rdx,%r10,4),%eax
  0x00007fdfa49877bc:   sub    0x40(%rdx,%r10,4),%eax
  0x00007fdfa49877c1:   sub    0x44(%rdx,%r10,4),%eax
  0x00007fdfa49877c6:   sub    0x48(%rdx,%r10,4),%eax
  0x00007fdfa49877cb:   sub    0x4c(%rdx,%r10,4),%eax
  0x00007fdfa49877d0:   add    $0x10,%r10d
  0x00007fdfa49877d4:   cmp    %ecx,%r10d
  0x00007fdfa49877d7:   jl     0x00007fdfa4987780
  0x00007fdfa49877d9:   mov    0x348(%r15),%r8              ; ImmutableOopMap {rdx=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) test::micro@57 (line 14)
  0x00007fdfa49877e0:   test   %eax,(%r8)                   ;   {poll}
  0x00007fdfa49877e3:   cmp    %edi,%r10d
  0x00007fdfa49877e6:   jl     0x00007fdfa4987766
  0x00007fdfa49877ec:   cmp    %ebp,%r10d
  0x00007fdfa49877ef:   jge    0x00007fdfa498761d
  0x00007fdfa49877f5:   data16 xchg %ax,%ax
  0x00007fdfa49877f8:   sub    0x10(%rdx,%r10,4),%eax
  0x00007fdfa49877fd:   inc    %r10d
  0x00007fdfa4987800:   cmp    %ebp,%r10d
  0x00007fdfa4987803:   jl     0x00007fdfa49877f8
  0x00007fdfa4987805:   jmpq   0x00007fdfa498761d
  0x00007fdfa498780a:   xor    %eax,%eax
  0x00007fdfa498780c:   jmpq   0x00007fdfa498761d
  0x00007fdfa4987811:   mov    $0x1,%eax
  0x00007fdfa4987816:   jmpq   0x00007fdfa498761d
  0x00007fdfa498781b:   xor    %eax,%eax
  0x00007fdfa498781d:   data16 xchg %ax,%ax
  0x00007fdfa4987820:   jmpq   0x00007fdfa498761d
  0x00007fdfa4987825:   mov    $0xffffff76,%esi
  0x00007fdfa498782a:   mov    %rdx,(%rsp)
  0x00007fdfa498782e:   nop
  0x00007fdfa498782f:   callq  0x00007fdfa4960800           ; ImmutableOopMap {[0]=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) test::micro@14 (line 8)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fdfa4987834:   mov    $0xffffff76,%esi
  0x00007fdfa4987839:   mov    %rdx,(%rsp)
  0x00007fdfa498783d:   xchg   %ax,%ax
  0x00007fdfa498783f:   callq  0x00007fdfa4960800           ; ImmutableOopMap {[0]=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) test::micro@45 (line 14)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fdfa4987844:   mov    $0xffffff76,%esi
  0x00007fdfa4987849:   mov    %rdx,(%rsp)
  0x00007fdfa498784d:   xchg   %ax,%ax
  0x00007fdfa498784f:   callq  0x00007fdfa4960800           ; ImmutableOopMap {[0]=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) test::micro@69 (line 20)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fdfa4987854:   mov    $0xfffffff6,%esi
  0x00007fdfa4987859:   xchg   %ax,%ax
  0x00007fdfa498785b:   callq  0x00007fdfa4960800           ; ImmutableOopMap {}
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::micro@13 (line 8)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fdfa4987860:   mov    $0xfffffff6,%esi
  0x00007fdfa4987865:   xchg   %ax,%ax
  0x00007fdfa4987867:   callq  0x00007fdfa4960800           ; ImmutableOopMap {}
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::micro@44 (line 14)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fdfa498786c:   mov    $0xfffffff6,%esi
  0x00007fdfa4987871:   xchg   %ax,%ax
  0x00007fdfa4987873:   callq  0x00007fdfa4960800           ; ImmutableOopMap {}
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::micro@68 (line 20)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fdfa4987878:   movabs $0x7fdfa4987622,%r10         ;   {internal_word}
  0x00007fdfa4987882:   mov    %r10,0x358(%r15)
  0x00007fdfa4987889:   jmpq   0x00007fdfa495f680           ;   {runtime_call SafepointBlob}
  0x00007fdfa498788e:   hlt    
  0x00007fdfa498788f:   hlt    
  0x00007fdfa4987890:   hlt    
  0x00007fdfa4987891:   hlt    
  0x00007fdfa4987892:   hlt    
  0x00007fdfa4987893:   hlt    
  0x00007fdfa4987894:   hlt    
  0x00007fdfa4987895:   hlt    
  0x00007fdfa4987896:   hlt    
  0x00007fdfa4987897:   hlt    
  0x00007fdfa4987898:   hlt    
  0x00007fdfa4987899:   hlt    
  0x00007fdfa498789a:   hlt    
  0x00007fdfa498789b:   hlt    
  0x00007fdfa498789c:   hlt    
  0x00007fdfa498789d:   hlt    
  0x00007fdfa498789e:   hlt    
  0x00007fdfa498789f:   hlt    
[Exception Handler]
  0x00007fdfa49878a0:   jmpq   0x00007fdfa4972380           ;   {no_reloc}
[Deopt Handler Code]
  0x00007fdfa49878a5:   callq  0x00007fdfa49878aa
  0x00007fdfa49878aa:   subq   $0x5,(%rsp)
  0x00007fdfa49878af:   jmpq   0x00007fdfa4960b20           ;   {runtime_call DeoptimizationBlob}
  0x00007fdfa49878b4:   hlt    
  0x00007fdfa49878b5:   hlt    
  0x00007fdfa49878b6:   hlt    
  0x00007fdfa49878b7:   hlt    
--------------------------------------------------------------------------------
[time] 80ms  [res] 0
