CompileCommand: print polymorphic.* bool print = true
CompileCommand: compileonly polymorphic.* bool compileonly = true

============================= C2-compiled nmethod ==============================
#r018 rsi:rsi   : parm 0: polymorphic:NotNull *
#r016 rdx:rdx   : parm 1: myclassP *
#r010 rcx:rcx   : parm 2: int[int:>=0]:exact *
# -- Old rsp -- Framesize: 32 --
#r591 rsp+28: in_preserve
#r590 rsp+24: return address
#r589 rsp+20: in_preserve
#r588 rsp+16: saved fp register
#r587 rsp+12: pad2, stack alignment
#r586 rsp+ 8: pad2, stack alignment
#r585 rsp+ 4: Fixed slot 1
#r584 rsp+ 0: Fixed slot 0
#
----------------------- MetaData before Compile_id = 26 ------------------------
{method}
 - this oop:          0x00007f13ac511540
 - method holder:     'polymorphic'
 - constants:         0x00007f13ac511068 constant pool [92]/operands[15] {0x00007f13ac511068} for 'polymorphic' cache=0x00007f13ac700210
 - access:            0x81000001  public 
 - name:              'doCall'
 - signature:         '(LmyclassP;[I)I'
 - max stack:         3
 - max locals:        3
 - size of params:    3
 - method size:       14
 - vtable index:      5
 - i2i entry:         0x00007f13f8ecc340
 - adapters:          AHE@0x00007f13f437ea00: 0xbbb i2c: 0x00007f13f8f6fa60 c2i: 0x00007f13f8f6fb48 c2iUV: 0x00007f13f8f6fb12 c2iNCI: 0x00007f13f8f6fb82
 - compiled entry     0x00007f13f8f6fb48
 - code size:         9
 - code start:        0x00007f13ac511530
 - code end (excl):   0x00007f13ac511539
 - method data:       0x00007f13ac700d08
 - checked ex length: 0
 - linenumber start:  0x00007f13ac511539
 - localvar length:   0

------------------------ OptoAssembly for Compile_id = 26 -----------------------
#
#  int ( polymorphic:NotNull *, myclassP *, int[int:>=0]:exact * )
#
000     N38: #	out( B1 ) <- BLOCK HEAD IS JUNK  Freq: 1
000     movl    rscratch1, [j_rarg0 + oopDesc::klass_offset_in_bytes()]	# compressed klass
	decode_klass_not_null rscratch1, rscratch1
	cmpq    rax, rscratch1	 # Inline cache check
	jne     SharedRuntime::_ic_miss_stub
	nop	# nops to align entry point

        nop 	# 4 bytes pad for loops and calls

020     B1: #	out( B3 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
020     # stack bang (136 bytes)
	pushq   rbp	# Save rbp
	subq    rsp, #16	# Create frame

02c     movq    RSI, RDX	# spill
02f     movq    RDX, RCX	# spill
        nop 	# 3 bytes pad for loops and calls
035     movq    rax, #Universe::non_oop_word()
	call,dynamic  myclassP::doAction
        # polymorphic::doCall @ bci:2 (line 35) L[0]=_ L[1]=_ L[2]=_
        # OopMap {off=68/0x44}

044     B2: #	out( N38 ) <- in( B1 )  Freq: 0.99998
        # Block is sole successor of call
044     imull   RAX, RAX, #100	# int
047     addq    rsp, 16	# Destroy frame
	popq    rbp
	cmpq     rsp, poll_offset[r15_thread] 
	ja       #safepoint_stub	# Safepoint: poll for GC

059     ret

05a     B3: #	out( N38 ) <- in( B1 )  Freq: 1e-05
05a     # exception oop is in rax; no code emitted
05a     movq    RSI, RAX	# spill
05d     addq    rsp, 16	# Destroy frame
	popq    rbp

062     jmp     rethrow_stub

--------------------------------------------------------------------------------
----------------------------------- Assembly -----------------------------------

Compiled method (c2)    1644   26             polymorphic::doCall (9 bytes)
 total in heap  [0x00007f13f8f25110,0x00007f13f8f253e8] = 728
 relocation     [0x00007f13f8f25270,0x00007f13f8f25288] = 24
 main code      [0x00007f13f8f252a0,0x00007f13f8f25320] = 128
 stub code      [0x00007f13f8f25320,0x00007f13f8f25338] = 24
 oops           [0x00007f13f8f25338,0x00007f13f8f25340] = 8
 metadata       [0x00007f13f8f25340,0x00007f13f8f25348] = 8
 scopes data    [0x00007f13f8f25348,0x00007f13f8f25368] = 32
 scopes pcs     [0x00007f13f8f25368,0x00007f13f8f253c8] = 96
 dependencies   [0x00007f13f8f253c8,0x00007f13f8f253d0] = 8
 handler table  [0x00007f13f8f253d0,0x00007f13f8f253e8] = 24

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00007f13ac511540} 'doCall' '(LmyclassP;[I)I' in 'polymorphic'
  # this:     rsi:rsi   = 'polymorphic'
  # parm0:    rdx:rdx   = 'myclassP'
  # parm1:    rcx:rcx   = '[I'
  #           [sp+0x20]  (sp of caller)
 ;; N38: #	out( B1 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x00007f13f8f252a0:   mov    0x8(%rsi),%r10d
  0x00007f13f8f252a4:   movabs $0x800000000,%r11
  0x00007f13f8f252ae:   add    %r11,%r10
  0x00007f13f8f252b1:   cmp    %r10,%rax
  0x00007f13f8f252b4:   jne    0x00007f13f8fd7320           ;   {runtime_call ic_miss_stub}
  0x00007f13f8f252ba:   nop
  0x00007f13f8f252bb:   nop
  0x00007f13f8f252bc:   nop
  0x00007f13f8f252bd:   nop
  0x00007f13f8f252be:   nop
  0x00007f13f8f252bf:   nop
[Verified Entry Point]
 ;; B1: #	out( B3 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x00007f13f8f252c0:   mov    %eax,-0x18000(%rsp)
  0x00007f13f8f252c7:   push   %rbp
  0x00007f13f8f252c8:   sub    $0x10,%rsp                   ;*synchronization entry
                                                            ; - polymorphic::doCall@-1 (line 35)
  0x00007f13f8f252cc:   mov    %rdx,%rsi
  0x00007f13f8f252cf:   mov    %rcx,%rdx
  0x00007f13f8f252d2:   nop
  0x00007f13f8f252d3:   nop
  0x00007f13f8f252d4:   nop
  0x00007f13f8f252d5:   movabs $0xffffffffffffffff,%rax
  0x00007f13f8f252df:   callq  0x00007f13f8fd39e0           ; ImmutableOopMap {}
                                                            ;*invokevirtual doAction {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ;   {virtual_call}
 ;; B2: #	out( N38 ) <- in( B1 )  Freq: 0.99998
  0x00007f13f8f252e4:   imul   $0x64,%eax,%eax              ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - polymorphic::doCall@7 (line 35)
  0x00007f13f8f252e7:   add    $0x10,%rsp
  0x00007f13f8f252eb:   pop    %rbp
  0x00007f13f8f252ec:   cmp    0x3c8(%r15),%rsp             ;   {poll_return}
  0x00007f13f8f252f3:   ja     0x00007f13f8f25307
  0x00007f13f8f252f9:   retq                                ;*invokevirtual doAction {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - polymorphic::doCall@2 (line 35)
 ;; B3: #	out( N38 ) <- in( B1 )  Freq: 1e-05
  0x00007f13f8f252fa:   mov    %rax,%rsi
  0x00007f13f8f252fd:   add    $0x10,%rsp
  0x00007f13f8f25301:   pop    %rbp
  0x00007f13f8f25302:   jmpq   0x00007f13f8f42000           ;   {runtime_call _rethrow_Java}
  0x00007f13f8f25307:   movabs $0x7f13f8f252ec,%r10         ;   {internal_word}
  0x00007f13f8f25311:   mov    %r10,0x3e0(%r15)
  0x00007f13f8f25318:   jmpq   0x00007f13f8fde720           ;   {runtime_call SafepointBlob}
  0x00007f13f8f2531d:   hlt    
  0x00007f13f8f2531e:   hlt    
  0x00007f13f8f2531f:   hlt    
[Exception Handler]
  0x00007f13f8f25320:   jmpq   0x00007f13f8f747a0           ;   {no_reloc}
[Deopt Handler Code]
  0x00007f13f8f25325:   callq  0x00007f13f8f2532a
  0x00007f13f8f2532a:   subq   $0x5,(%rsp)
  0x00007f13f8f2532f:   jmpq   0x00007f13f8fdfb40           ;   {runtime_call DeoptimizationBlob}
  0x00007f13f8f25334:   hlt    
  0x00007f13f8f25335:   hlt    
  0x00007f13f8f25336:   hlt    
  0x00007f13f8f25337:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Oops:
  0x00007f13f8f25338:   0x000000011f8a7ec8 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x000000011f8a7ec8}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Metadata:
  0x00007f13f8f25340:   0x00007f13ac511540 {method} {0x00007f13ac511540} 'doCall' '(LmyclassP;[I)I' in 'polymorphic'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
pc-bytecode offsets:
PcDesc(pc=0x00007f13f8f2529f offset=ffffffff bits=0):
PcDesc(pc=0x00007f13f8f252cc offset=2c bits=0):
   polymorphic::doCall@-1 (line 35)
PcDesc(pc=0x00007f13f8f252e4 offset=44 bits=0):
   polymorphic::doCall@2 (line 35)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
PcDesc(pc=0x00007f13f8f252e7 offset=47 bits=0):
   polymorphic::doCall@7 (line 35)
PcDesc(pc=0x00007f13f8f252fa offset=5a bits=0):
   polymorphic::doCall@2 (line 35)
PcDesc(pc=0x00007f13f8f25339 offset=99 bits=0):
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
oop maps:ImmutableOopMapSet contains 1 OopMaps

ImmutableOopMap {} pc offsets: 68 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
scopes:
ScopeDesc(pc=0x00007f13f8f252cc offset=2c):
   polymorphic::doCall@-1 (line 35)
ScopeDesc(pc=0x00007f13f8f252e4 offset=44):
   polymorphic::doCall@2 (line 35)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00007f13f8f252e7 offset=47):
   polymorphic::doCall@7 (line 35)
ScopeDesc(pc=0x00007f13f8f252fa offset=5a):
   polymorphic::doCall@2 (line 35)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
relocations:
         @0x00007f13f8f25270: 3014
relocInfo@0x00007f13f8f25270 [type=6(runtime_call) addr=0x00007f13f8f252b4 offset=20] | [destination=0x00007f13f8fd7320]
         @0x00007f13f8f25272: 780a122b
relocInfo@0x00007f13f8f25274 [type=2(virtual_call) addr=0x00007f13f8f252df offset=43 format=1 data=10] | [destination=0x00007f13f8fd39e0 cached_value=0x00007f13f8f252d5 metadata=0x0000000000000000]
         @0x00007f13f8f25276: 580d
relocInfo@0x00007f13f8f25276 [type=11(poll_return) addr=0x00007f13f8f252ec offset=13]
         @0x00007f13f8f25278: 3216
relocInfo@0x00007f13f8f25278 [type=6(runtime_call) addr=0x00007f13f8f25302 offset=22 format=1] | [destination=0x00007f13f8f42000]
         @0x00007f13f8f2527a: 781b4005
relocInfo@0x00007f13f8f2527c [type=8(internal_word) addr=0x00007f13f8f25307 offset=5 data=27] | [target=0x00007f13f8f252ec]
         @0x00007f13f8f2527e: 3211
relocInfo@0x00007f13f8f2527e [type=6(runtime_call) addr=0x00007f13f8f25318 offset=17 format=1] | [destination=0x00007f13f8fde720]
         @0x00007f13f8f25280: 0008
relocInfo@0x00007f13f8f25280 [type=0(none) addr=0x00007f13f8f25320 offset=8]
         @0x00007f13f8f25282: 3200
relocInfo@0x00007f13f8f25282 [type=6(runtime_call) addr=0x00007f13f8f25320 offset=0 format=1] | [destination=0x00007f13f8f747a0]
         @0x00007f13f8f25284: 320f
relocInfo@0x00007f13f8f25284 [type=6(runtime_call) addr=0x00007f13f8f2532f offset=15 format=1] | [destination=0x00007f13f8fdfb40]
         @0x00007f13f8f25286: 0000
relocInfo@0x00007f13f8f25286 [type=0(none) addr=0x00007f13f8f2532f offset=0]
         @0x00007f13f8f25288: 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Dependencies:
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ExceptionHandlerTable (size = 24 bytes)
catch_pco = 68 (pc=0x00007f13f8f252e4, 1 entries)
  bci -1 at scope depth 0 -> pco 90 (pc=0x00007f13f8f252fa)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ImplicitExceptionTable is empty
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded oops:
#0: 0x0000000000000000 NULL-oop
#1: 0x000000011f8a7ec8 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x000000011f8a7ec8}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded metadata:
#0: 0x0000000000000000 NULL-oop
#1: 0x00007f13ac511540 {method} {0x00007f13ac511540} 'doCall' '(LmyclassP;[I)I' in 'polymorphic'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

============================= C2-compiled nmethod ==============================
#r018 rsi:rsi   : parm 0: rawptr:BotPTR
# -- Old rsp -- Framesize: 96 --
#r591 rsp+92: in_preserve
#r590 rsp+88: return address
#r589 rsp+84: in_preserve
#r588 rsp+80: saved fp register
#r587 rsp+76: pad2, stack alignment
#r586 rsp+72: pad2, stack alignment
#r585 rsp+68: Fixed slot 1
#r584 rsp+64: Fixed slot 0
#r607 rsp+60: spill
#r606 rsp+56: spill
#r605 rsp+52: spill
#r604 rsp+48: spill
#r603 rsp+44: spill
#r602 rsp+40: spill
#r601 rsp+36: spill
#r600 rsp+32: spill
#r599 rsp+28: spill
#r598 rsp+24: spill
#r597 rsp+20: spill
#r596 rsp+16: spill
#r595 rsp+12: spill
#r594 rsp+ 8: spill
#r593 rsp+ 4: spill
#r592 rsp+ 0: spill
#
----------------------- MetaData before Compile_id = 27 ------------------------
{method}
 - this oop:          0x00007f13ac511858
 - method holder:     'polymorphic'
 - constants:         0x00007f13ac511068 constant pool [92]/operands[15] {0x00007f13ac511068} for 'polymorphic' cache=0x00007f13ac700210
 - access:            0xc1000009  public static 
 - name:              'main'
 - signature:         '([Ljava/lang/String;)V'
 - max stack:         7
 - max locals:        13
 - size of params:    1
 - method size:       14
 - vtable index:      -2
 - i2i entry:         0x00007f13f8ecc340
 - adapters:          AHE@0x00007f13f42547e0: 0xb i2c: 0x00007f13f8fd6540 c2i: 0x00007f13f8fd65fa c2iUV: 0x00007f13f8fd65c4 c2iNCI: 0x00007f13f8fd6634
 - compiled entry     0x00007f13f8fd65fa
 - code size:         545
 - code start:        0x00007f13ac5115e8
 - code end (excl):   0x00007f13ac511809
 - method data:       0x00007f13ac700f00
 - checked ex length: 0
 - linenumber start:  0x00007f13ac511809
 - localvar length:   0

------------------------ OptoAssembly for Compile_id = 27 -----------------------
#
#  void ( rawptr:BotPTR )
#
000     N1290: #	out( B1 ) <- BLOCK HEAD IS JUNK  Freq: 1
000     # breakpoint
        nop 	# 11 bytes pad for loops and calls

010     B1: #	out( B100 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
010     # stack bang (464 bytes)
	pushq   rbp	# Save rbp
	subq    rsp, #80	# Create frame

01c     movq    RBX, [RSI + #72 (8-bit)]	# ptr
020     movq    RBP, [RSI + #64 (8-bit)]	# ptr
024     movl    R11, [RSI + #24 (8-bit)]	# int
028     movl    [rsp + #0], R11	# spill
02c     movq    R10, [RSI + #48 (8-bit)]	# ptr
030     movq    [rsp + #8], R10	# spill
035     movq    R10, [RSI + #40 (8-bit)]	# ptr
039     movq    [rsp + #16], R10	# spill
03e     movq    R10, [RSI + #32 (8-bit)]	# ptr
042     movq    [rsp + #24], R10	# spill
047     movl    R13, [RSI + #56 (8-bit)]	# int
04b     movq    RDI, RSI	# spill
04e     call_leaf,runtime  OSR_migration_end
        No JVM State Info
        # 
        nop 	# 2 bytes pad for loops and calls
060     testq   RBX, RBX	# ptr
063     je     B100  P=0.001000 C=-1.000000

069     B2: #	out( B105 B3 ) <- in( B1 )  Freq: 0.999
069     movl    R10, [RBX + #8 (8-bit)]	# compressed klass ptr
06d     cmpl    R10, narrowklass: precise [int: :Constant:exact *	# compressed klass ptr
074     jne,u   B105  P=0.000001 C=-1.000000

07a     B3: #	out( B4 ) <- in( B2 )  Freq: 0.998999
07a     movq    R9, RBX	# spill
07d     # checkcastPP of R9

07d     B4: #	out( B101 B5 ) <- in( B3 B100 )  Freq: 0.999999
07d     movq    R14, RBP	# spill
080     testq   RBP, RBP	# ptr
083     je     B101  P=0.001000 C=-1.000000

089     B5: #	out( B106 B6 ) <- in( B4 )  Freq: 0.998999
089     movl    R11, [RBP + #8 (8-bit)]	# compressed klass ptr
08d     cmpl    R11, narrowklass: precise polymorphic: 0x00007f138408aab8:Constant:exact *	# compressed klass ptr
094     jne,u   B106  P=0.000001 C=-1.000000

09a     B6: #	out( B7 ) <- in( B5 )  Freq: 0.998998
09a     movq    RCX, RBP	# spill
09d     # checkcastPP of RCX

09d     B7: #	out( B102 B8 ) <- in( B6 B101 )  Freq: 0.999998
09d     movq    R8, [rsp + #8]	# spill
0a2     testq   R8, R8	# ptr
0a5     je     B102  P=0.001000 C=-1.000000

0ab     B8: #	out( B108 B9 ) <- in( B7 )  Freq: 0.998998
0ab     movl    R10, [R8 + #8 (8-bit)]	# compressed klass ptr
0af     cmpl    R10, narrowklass: precise myclassC1: 0x00007f1384090180:Constant:exact *	# compressed klass ptr
0b6     jne,u   B108  P=0.000001 C=-1.000000

0bc     B9: #	out( B10 ) <- in( B8 )  Freq: 0.998997
0bc     movq    RDI, R8	# spill
0bf     # checkcastPP of RDI

0bf     B10: #	out( B103 B11 ) <- in( B9 B102 )  Freq: 0.999997
0bf     movq    RAX, [rsp + #16]	# spill
0c4     testq   RAX, RAX	# ptr
0c7     je     B103  P=0.001000 C=-1.000000

0cd     B11: #	out( B109 B12 ) <- in( B10 )  Freq: 0.998997
0cd     movl    R11, [RAX + #8 (8-bit)]	# compressed klass ptr
0d1     cmpl    R11, narrowklass: precise myclassC2: 0x00007f1384090410:Constant:exact *	# compressed klass ptr
0d8     jne,u   B109  P=0.000001 C=-1.000000

0de     B12: #	out( B13 ) <- in( B11 )  Freq: 0.998996
0de     movq    RDX, RAX	# spill
0e1     # checkcastPP of RDX

0e1     B13: #	out( B104 B14 ) <- in( B12 B103 )  Freq: 0.999996
0e1     movq    R11, [rsp + #24]	# spill
0e6     testq   R11, R11	# ptr
0e9     je     B104  P=0.001000 C=-1.000000

0ef     B14: #	out( B107 B15 ) <- in( B13 )  Freq: 0.998996
0ef     movl    R10, [R11 + #8 (8-bit)]	# compressed klass ptr
0f3     movq    RSI, precise myclassP: 0x00007f13840906a0:Constant:exact *	# ptr
0fd     decode_and_move_klass_not_null RBP,R10
10a     movq    R10, [RBP + #64 (8-bit)]	# class
10e     cmpq    R10, RSI	# ptr
111     jne,u   B107  P=0.000001 C=-1.000000

117     B15: #	out( B16 ) <- in( B14 )  Freq: 0.998995
117     # checkcastPP of R11
117     movq    RAX, R11	# spill

11a     B16: #	out( B70 ) <- in( B15 B104 )  Freq: 0.999995
11a     movl    R10, R9	# ptr -> int
11d     movl    RBP, R9	# ptr -> int
120     shrl    R10, #2
124     shrl    RBP, #2
127     andl    R10, #7	# int
12b     andl    RBP, #7	# int
12e     movl    R11, #3	# int
134     subl    R11, RBP	# int
137     movl    R8, #3	# int
13d     subl    R8, R10	# int
140     andl    R11, #7	# int
144     andl    R8, #7	# int
148     incl    R11	# int
14b     incl    R8	# int
14e     jmp     B70

153     B17: #	out( B84 B18 ) <- in( B71 )  Freq: 19898.6
153     testq   RCX, RCX	# ptr
156     je     B84  P=0.000001 C=-1.000000

15c     B18: #	out( B85 B19 ) <- in( B17 )  Freq: 19898.6
        nop 	# 4 bytes pad for loops and calls
160     testq   RDI, RDI	# ptr
163     je     B85  P=0.000001 C=-1.000000

169     B19: #	out( B112 B20 ) <- in( B18 )  Freq: 19898.6
169     movl    R10, [R9 + #12 (8-bit)]	# range
16d     NullCheck R9

16d     B20: #	out( B75 B21 ) <- in( B19 )  Freq: 19898.5
16d     testl   R10, R10	# unsigned
170     jbe,u   B75  P=0.000976 C=5272600.000000

176     B21: #	out( B86 B22 ) <- in( B20 )  Freq: 19879.1
176     movl    RBP, R10	# spill
179     decl    RBP	# int
        nop 	# 5 bytes pad for loops and calls
180     cmpl    RBP, R10	# unsigned
183     jae,u   B86  P=0.000001 C=-1.000000

189     B22: #	out( B23 ) <- in( B21 )  Freq: 19879.1
189     movdl   XMM20, R11	# spill
18f     movdq   XMM17, RAX	# spill
195     movdq   XMM16, RDX	# spill
19b     movq    R14, RDI	# spill
19e     movq    RAX, RCX	# spill
1a1     movq    RDI, R9	# spill
1a4     movl    RDX, [rsp + #0]	# spill
1a7     cmpl    R8, R10
1aa     movl    RCX, R8	# spill
1ad     movdl   XMM18, R8	# spill
1b3     cmovlgt RCX, R10	# min
1b7     xorl    RBX, RBX	# int
1b9     xorl    RSI, RSI	# int

1bb     B23: #	out( B25 B24 ) <- in( B22 B24 ) Loop( B23-B24 inner pre of N775 reduction) Freq: 39758.2
1bb     movl    R8, [RDI + #16 + RBX << #2]	# int
1c0     sall    R8, #20
1c4     addl    RSI, R8	# int
1c7     movl    R11, RBX	# spill
1ca     incl    R11	# int
1cd     cmpl    R11, RCX
1d0     jge,s   B25	# loop end  P=0.500000 C=5267456.000000

1d2     B24: #	out( B23 ) <- in( B23 )  Freq: 19879.1
1d2     movl    RBX, R11	# spill
1d5     jmp,s   B23

1d7     B25: #	out( B87 B26 ) <- in( B23 )  Freq: 19879.1
1d7     movl    RCX, R10	# spill
1da     addl    RCX, #-63	# int
1dd     cmpl    RBP, RCX
1df     movl    R8, #-2147483648	# int
1e5     cmovll RCX, R8	# signed, int
1e9     cmpl    R11, RCX
1ec     jge     B87  P=0.000001 C=-1.000000

1f2     B26: #	out( B88 B27 ) <- in( B25 )  Freq: 19879.1
1f2     movl    R9, RBX	# spill
1f5     # castII of R9
1f5     incl    R9	# int
1f8     cmpl    R9, R10	# unsigned
        nop 	# 5 bytes pad for loops and calls
200     jae,u   B88  P=0.000001 C=-1.000000

206     B27: #	out( B89 B28 ) <- in( B26 )  Freq: 19879.1
206     cmpl    R9, R10	# unsigned
209     jae,u   B89  P=0.000001 C=-1.000000

20f     B28: #	out( B90 B29 ) <- in( B27 )  Freq: 19879.1
20f     cmpl    R11, R10	# unsigned
212     jae,u   B90  P=0.000001 C=-1.000000

218     B29: #	out( B91 B30 ) <- in( B28 )  Freq: 19879
218     addl    RBX, #64	# int
        nop 	# 5 bytes pad for loops and calls
220     cmpl    RBX, R10	# unsigned
223     jae,u   B91  P=0.000001 C=-1.000000

229     B30: #	out( B31 ) <- in( B29 B32 ) Loop( B30-B32 ) Freq: 2.0376e+07
229     movl    RBX, RCX	# spill
22b     subl    RBX, R9	# int
22e     xorl    R11, R11	# int
231     cmpl    RCX, R9
234     cmovll RBX, R11	# signed, int
238     cmpl    RBX, #64000	# unsigned
23e     movl    R8, #64000	# int
244     cmovla RBX, R8	# unsigned, int
248     addl    RBX, R9	# int
        nop 	# 5 bytes pad for loops and calls

250     B31: #	out( B31 B32 ) <- in( B30 B31 ) Loop( B31-B31 inner main of N252 reduction strip mined) Freq: 2.08854e+10
250     load_vector XMM0,[RDI + #240 + R9 << #2]
25a     load_vector XMM2,[RDI + #208 + R9 << #2]
264     load_vector XMM3,[RDI + #176 + R9 << #2]
26e     load_vector XMM4,[RDI + #144 + R9 << #2]
278     load_vector XMM5,[RDI + #112 + R9 << #2]
27f     load_vector XMM7,[RDI + #80 + R9 << #2]
286     load_vector XMM6,[RDI + #48 + R9 << #2]
28d     load_vector XMM1,[RDI + #16 + R9 << #2]
294     vshiftd_imm  XMM0,XMM0,#20	! shift packedI
299     vshiftd_imm  XMM1,XMM1,#20	! shift packedI
29e     vshiftd_imm  XMM2,XMM2,#20	! shift packedI
2a3     vshiftd_imm  XMM3,XMM3,#20	! shift packedI
2a8     vshiftd_imm  XMM4,XMM4,#20	! shift packedI
2ad     vshiftd_imm  XMM5,XMM5,#20	! shift packedI
2b2     vshiftd_imm  XMM6,XMM6,#20	! shift packedI
2b7     vshiftd_imm  XMM7,XMM7,#20	! shift packedI
2bc     vector_reduction_int R11,RSI,XMM1 ; using XMM14, XMM15 as TEMP
2df     vector_reduction_int R8,R11,XMM6 ; using XMM1, XMM14 as TEMP
303     vector_reduction_int R11,R8,XMM7 ; using XMM1, XMM6 as TEMP
325     vector_reduction_int R8,R11,XMM5 ; using XMM1, XMM6 as TEMP
347     vector_reduction_int R11,R8,XMM4 ; using XMM1, XMM5 as TEMP
369     vector_reduction_int R8,R11,XMM3 ; using XMM13, XMM8 as TEMP
38d     vector_reduction_int R11,R8,XMM2 ; using XMM9, XMM10 as TEMP
3b1     vector_reduction_int RSI,R11,XMM0 ; using XMM11, XMM12 as TEMP
3d4     addl    R9, #64	# int
3d8     cmpl    R9, RBX
        nop 	# 5 bytes pad for loops and calls
3e0     jl     B31	# loop end  P=0.999024 C=5267456.000000

3e6     B32: #	out( B30 B33 ) <- in( B31 )  Freq: 2.0376e+07
3e6     # TLS is in R15
3e6     movq    R11, [R15 + #976 (32-bit)]	# ptr
3ed     testl   rax, [R11]	# Safepoint: poll for GC        # myclassC1::doAction @ bci:22 (line 17) L[0]=_ L[1]=RDI L[2]=RSI L[3]=R9
        # polymorphic::doCall @ bci:2 (line 35) L[0]=_ L[1]=_ L[2]=_
        # polymorphic::main @ bci:391 (line 88) L[0]=_ L[1]=_ L[2]=_ L[3]=RDI L[4]=RAX L[5]=_ L[6]=R14 L[7]=XMM16 L[8]=XMM17 L[9]=RDX L[10]=_ L[11]=_ L[12]=_ STK[0]=R13
        # OopMap {rdi=Oop rax=Oop r14=Oop xmm16=Oop xmm17=Oop off=1005/0x3ed}
3f0     cmpl    R9, RCX
3f3     jl     B30  P=0.999024 C=5267456.000000

3f9     B33: #	out( B37 B34 ) <- in( B32 )  Freq: 19879
3f9     movl    R8, R10	# spill
3fc     addl    R8, #-7	# int
400     cmpl    RBP, R8
403     movl    RCX, #-2147483648	# int
408     cmovll R8, RCX	# signed, int
40c     cmpl    R9, R8
40f     jge     B37  P=0.500000 C=-1.000000

415     B34: #	out( B96 B35 ) <- in( B33 )  Freq: 9939.51
415     # castII of R9
415     cmpl    R9, R10	# unsigned
418     jae,u   B96  P=0.000001 C=-1.000000

41e     B35: #	out( B98 B36 ) <- in( B34 )  Freq: 9939.5
41e     movl    R11, R9	# spill
421     addl    R11, #7	# int
425     cmpl    R11, R10	# unsigned
428     jae,u   B98  P=0.000001 C=-1.000000
        nop 	# 2 bytes pad for loops and calls

430     B36: #	out( B36 B37 ) <- in( B35 B36 ) Loop( B36-B36 inner post of N1491 reduction) Freq: 19879
430     load_vector XMM0,[RDI + #16 + R9 << #2]
437     vshiftd_imm  XMM0,XMM0,#20	! shift packedI
43c     vector_reduction_int RSI,RSI,XMM0 ; using XMM2, XMM1 as TEMP
45c     addl    R9, #8	# int
460     cmpl    R9, R8
463     jl,s   B36	# loop end  P=0.500000 C=5267456.000000

465     B37: #	out( B41 B38 ) <- in( B87 B36 B33 )  Freq: 19879
465     cmpl    R9, R10
468     jge,s   B41  P=0.500000 C=-1.000000

46a     B38: #	out( B97 B39 ) <- in( B37 )  Freq: 9939.51
46a     # castII of R9
46a     cmpl    R9, R10	# unsigned
46d     jae,u   B97  P=0.000001 C=-1.000000

473     B39: #	out( B99 B40 ) <- in( B38 )  Freq: 9939.5
473     movl    R8, R9	# spill
476     # castII of R8
476     cmpl    R8, R10	# unsigned
479     jae,u   B99  P=0.000001 C=-1.000000
        nop 	# 1 bytes pad for loops and calls

480     B40: #	out( B40 B41 ) <- in( B39 B40 ) Loop( B40-B40 inner post of N775 reduction) Freq: 19879
480     movl    R11, [RDI + #16 + R9 << #2]	# int
485     sall    R11, #20
489     addl    RSI, R11	# int
48c     incl    R9	# int
48f     cmpl    R9, R10
492     jl,s   B40	# loop end  P=0.500000 C=5267456.000000

494     B41: #	out( B42 ) <- in( B40 B37 )  Freq: 19879
494     imull   R10, RSI, #100	# int
498     addl    R10, R13	# int
49b     movl    RBX, RDX	# spill
49d     movq    R9, RDI	# spill
4a0     movq    RCX, RAX	# spill
4a3     movq    RDI, R14	# spill
4a6     movdq   RDX, XMM16	# spill
4ac     movdq   RAX, XMM17	# spill
4b2     movdl   R8, XMM18	# spill
4b8     movdl   R11, XMM20	# spill

4be     B42: #	out( B43 ) <- in( B41 B75 )  Freq: 19898.4
4be     movl    R13, R10	# spill

4c1     B43: #	out( B76 B44 ) <- in( B42 B72 )  Freq: 39791.8
4c1     testq   RCX, RCX	# ptr
4c4     je     B76  P=0.000001 C=-1.000000

4ca     B44: #	out( B77 B45 ) <- in( B43 )  Freq: 39791.8
4ca     testq   RDX, RDX	# ptr
4cd     je     B77  P=0.000001 C=-1.000000

4d3     B45: #	out( B111 B46 ) <- in( B44 )  Freq: 39791.8
4d3     movl    R10, [R9 + #12 (8-bit)]	# range
4d7     NullCheck R9

4d7     B46: #	out( B74 B47 ) <- in( B45 )  Freq: 39791.7
4d7     testl   R10, R10	# unsigned
        nop 	# 6 bytes pad for loops and calls
4e0     jbe,u   B74  P=0.000976 C=10567045.000000

4e6     B47: #	out( B78 B48 ) <- in( B46 )  Freq: 39752.9
4e6     movl    RBP, R10	# spill
4e9     decl    RBP	# int
4eb     cmpl    RBP, R10	# unsigned
4ee     jae,u   B78  P=0.000001 C=-1.000000

4f4     B48: #	out( B49 ) <- in( B47 )  Freq: 39752.9
4f4     movl    [rsp + #0], R8	# spill
4f8     movdq   XMM17, RAX	# spill
4fe     movdq   XMM16, RDX	# spill
504     movq    R14, RDI	# spill
507     movq    RAX, RCX	# spill
50a     movq    RDI, R9	# spill
50d     movl    RDX, RBX	# spill
50f     cmpl    R11, R10
512     movl    RCX, R11	# spill
515     movl    [rsp + #4], R11	# spill
51a     cmovlgt RCX, R10	# min
51e     xorl    RSI, RSI	# int
520     xorl    RBX, RBX	# int

522     B49: #	out( B51 B50 ) <- in( B48 B50 ) Loop( B49-B50 inner pre of N786 reduction) Freq: 79505.7
522     movl    R8, [RDI + #16 + RBX << #2]	# int
527     sall    R8, #30
52b     addl    RSI, R8	# int
52e     movl    R11, RBX	# spill
531     incl    R11	# int
534     cmpl    R11, RCX
537     jge,s   B51	# loop end  P=0.500000 C=10556735.000000

539     B50: #	out( B49 ) <- in( B49 )  Freq: 39752.9
539     movl    RBX, R11	# spill
53c     jmp,s   B49

53e     B51: #	out( B79 B52 ) <- in( B49 )  Freq: 39752.9
53e     movl    RCX, R10	# spill
541     addl    RCX, #-63	# int
544     cmpl    RBP, RCX
546     movl    R8, #-2147483648	# int
54c     cmovll RCX, R8	# signed, int
550     cmpl    R11, RCX
553     jge     B79  P=0.000001 C=-1.000000

559     B52: #	out( B80 B53 ) <- in( B51 )  Freq: 39752.8
559     movl    R9, RBX	# spill
55c     # castII of R9
55c     incl    R9	# int
        nop 	# 1 bytes pad for loops and calls
560     cmpl    R9, R10	# unsigned
563     jae,u   B80  P=0.000001 C=-1.000000

569     B53: #	out( B81 B54 ) <- in( B52 )  Freq: 39752.8
569     cmpl    R11, R10	# unsigned
56c     jae,u   B81  P=0.000001 C=-1.000000

572     B54: #	out( B82 B55 ) <- in( B53 )  Freq: 39752.7
572     addl    RBX, #64	# int
575     cmpl    RBX, R10	# unsigned
578     jae,u   B82  P=0.000001 C=-1.000000

57e     B55: #	out( B56 ) <- in( B54 B57 ) Loop( B55-B57 ) Freq: 4.07441e+07
57e     movl    RBX, RCX	# spill
580     subl    RBX, R9	# int
583     xorl    R11, R11	# int
586     cmpl    RCX, R9
589     cmovll RBX, R11	# signed, int
58d     cmpl    RBX, #64000	# unsigned
593     movl    R8, #64000	# int
599     cmovla RBX, R8	# unsigned, int
59d     addl    RBX, R9	# int

5a0     B56: #	out( B56 B57 ) <- in( B55 B56 ) Loop( B56-B56 inner main of N362 reduction strip mined) Freq: 4.17601e+10
5a0     load_vector XMM0,[RDI + #240 + R9 << #2]
5aa     load_vector XMM2,[RDI + #208 + R9 << #2]
5b4     load_vector XMM3,[RDI + #176 + R9 << #2]
5be     load_vector XMM4,[RDI + #144 + R9 << #2]
5c8     load_vector XMM5,[RDI + #112 + R9 << #2]
5cf     load_vector XMM7,[RDI + #80 + R9 << #2]
5d6     load_vector XMM6,[RDI + #48 + R9 << #2]
5dd     load_vector XMM1,[RDI + #16 + R9 << #2]
5e4     vshiftd_imm  XMM0,XMM0,#30	! shift packedI
5e9     vshiftd_imm  XMM1,XMM1,#30	! shift packedI
5ee     vshiftd_imm  XMM2,XMM2,#30	! shift packedI
5f3     vshiftd_imm  XMM3,XMM3,#30	! shift packedI
5f8     vshiftd_imm  XMM4,XMM4,#30	! shift packedI
5fd     vshiftd_imm  XMM5,XMM5,#30	! shift packedI
602     vshiftd_imm  XMM6,XMM6,#30	! shift packedI
607     vshiftd_imm  XMM7,XMM7,#30	! shift packedI
60c     vector_reduction_int R11,RSI,XMM1 ; using XMM14, XMM15 as TEMP
62f     vector_reduction_int R8,R11,XMM6 ; using XMM1, XMM14 as TEMP
653     vector_reduction_int R11,R8,XMM7 ; using XMM1, XMM6 as TEMP
675     vector_reduction_int R8,R11,XMM5 ; using XMM1, XMM6 as TEMP
697     vector_reduction_int R11,R8,XMM4 ; using XMM1, XMM5 as TEMP
6b9     vector_reduction_int R8,R11,XMM3 ; using XMM13, XMM8 as TEMP
6dd     vector_reduction_int R11,R8,XMM2 ; using XMM11, XMM12 as TEMP
701     vector_reduction_int RSI,R11,XMM0 ; using XMM9, XMM10 as TEMP
724     addl    R9, #64	# int
728     cmpl    R9, RBX
72b     jl     B56	# loop end  P=0.999024 C=10556735.000000

731     B57: #	out( B55 B58 ) <- in( B56 )  Freq: 4.07441e+07
731     # TLS is in R15
731     movq    R11, [R15 + #976 (32-bit)]	# ptr
738     testl   rax, [R11]	# Safepoint: poll for GC        # myclassC2::doAction @ bci:22 (line 26) L[0]=_ L[1]=RDI L[2]=RSI L[3]=R9
        # polymorphic::doCall @ bci:2 (line 35) L[0]=_ L[1]=_ L[2]=_
        # polymorphic::main @ bci:404 (line 89) L[0]=_ L[1]=_ L[2]=_ L[3]=RDI L[4]=RAX L[5]=_ L[6]=R14 L[7]=XMM16 L[8]=XMM17 L[9]=RDX L[10]=_ L[11]=_ L[12]=_ STK[0]=R13
        # OopMap {rdi=Oop rax=Oop r14=Oop xmm16=Oop xmm17=Oop off=1848/0x738}
        nop 	# 5 bytes pad for loops and calls
740     cmpl    R9, RCX
743     jl     B55  P=0.999024 C=10556735.000000

749     B58: #	out( B62 B59 ) <- in( B57 )  Freq: 39752.7
749     movl    R8, R10	# spill
74c     addl    R8, #-7	# int
750     cmpl    RBP, R8
753     movl    RCX, #-2147483648	# int
758     cmovll R8, RCX	# signed, int
        nop 	# 4 bytes pad for loops and calls
760     cmpl    R9, R8
763     jge     B62  P=0.500000 C=-1.000000

769     B59: #	out( B92 B60 ) <- in( B58 )  Freq: 19876.3
769     # castII of R9
769     cmpl    R9, R10	# unsigned
76c     jae,u   B92  P=0.000001 C=-1.000000

772     B60: #	out( B94 B61 ) <- in( B59 )  Freq: 19876.3
772     movl    R11, R9	# spill
775     addl    R11, #7	# int
779     cmpl    R11, R10	# unsigned
        nop 	# 4 bytes pad for loops and calls
780     jae,u   B94  P=0.000001 C=-1.000000
        nop 	# 2 bytes pad for loops and calls

788     B61: #	out( B61 B62 ) <- in( B60 B61 ) Loop( B61-B61 inner post of N1551 reduction) Freq: 39752.6
788     load_vector XMM0,[RDI + #16 + R9 << #2]
78f     vshiftd_imm  XMM0,XMM0,#30	! shift packedI
794     vector_reduction_int RSI,RSI,XMM0 ; using XMM2, XMM1 as TEMP
7b4     addl    R9, #8	# int
7b8     cmpl    R9, R8
7bb     jl,s   B61	# loop end  P=0.500000 C=10556735.000000

7bd     B62: #	out( B66 B63 ) <- in( B79 B61 B58 )  Freq: 39752.7
        nop 	# 3 bytes pad for loops and calls
7c0     cmpl    R9, R10
7c3     jge,s   B66  P=0.500000 C=-1.000000

7c5     B63: #	out( B93 B64 ) <- in( B62 )  Freq: 19876.3
7c5     # castII of R9
7c5     cmpl    R9, R10	# unsigned
7c8     jae,u   B93  P=0.000001 C=-1.000000

7ce     B64: #	out( B95 B65 ) <- in( B63 )  Freq: 19876.3
7ce     movl    R8, R9	# spill
7d1     # castII of R8
7d1     cmpl    R8, R10	# unsigned
7d4     jae,u   B95  P=0.000001 C=-1.000000
        nop 	# 2 bytes pad for loops and calls

7dc     B65: #	out( B65 B66 ) <- in( B64 B65 ) Loop( B65-B65 inner post of N786 reduction) Freq: 39752.6
7dc     movl    R11, [RDI + #16 + R9 << #2]	# int
7e1     sall    R11, #30
7e5     addl    RSI, R11	# int
7e8     incl    R9	# int
7eb     cmpl    R9, R10
7ee     jl,s   B65	# loop end  P=0.500000 C=10556735.000000

7f0     B66: #	out( B67 ) <- in( B65 B62 )  Freq: 39752.7
7f0     imull   RBP, RSI, #100	# int
7f3     addl    RBP, R13	# int
7f6     movl    RBX, RDX	# spill
7f8     movq    R9, RDI	# spill
7fb     movq    RCX, RAX	# spill
7fe     movq    RDI, R14	# spill
801     movdq   RDX, XMM16	# spill
807     movdq   RAX, XMM17	# spill

80d     B67: #	out( B110 B68 ) <- in( B66 B74 )  Freq: 39791.5
80d     movq    [rsp + #48], RAX	# spill
812     movq    [rsp + #40], RDX	# spill
817     movq    [rsp + #32], RDI	# spill
81c     movq    [rsp + #24], RCX	# spill
821     movq    [rsp + #16], R9	# spill
826     movl    [rsp + #8], RBX	# spill
82a     movq    RSI, RAX	# spill
82d     movq    RDX, R9	# spill
        nop 	# 2 bytes pad for loops and calls
832     movq    rax, #Universe::non_oop_word()
	call,dynamic  myclassP::doAction
        # polymorphic::doCall @ bci:2 (line 35) L[0]=_ L[1]=_ L[2]=_
        # polymorphic::main @ bci:417 (line 90) L[0]=_ L[1]=_ L[2]=_ L[3]=rsp + #16 L[4]=rsp + #24 L[5]=_ L[6]=rsp + #32 L[7]=rsp + #40 L[8]=rsp + #48 L[9]=rsp + #8 L[10]=_ L[11]=_ L[12]=_ STK[0]=RBP
        # OopMap {[-98469100]=Oop [-98469092]=Oop [-98469084]=Oop [-98469076]=Oop [-98469068]=Oop off=2116/0x844}

844     B68: #	out( B69 ) <- in( B67 )  Freq: 39790.7
        # Block is sole successor of call
844     imull   R13, RAX, #100	# int
848     addl    R13, RBP	# int
84b     movl    RBX, [rsp + #8]	# spill
84f     movq    R9, [rsp + #16]	# spill
854     movq    RCX, [rsp + #24]	# spill
859     movq    RDI, [rsp + #32]	# spill
85e     movq    RDX, [rsp + #40]	# spill
863     movq    RAX, [rsp + #48]	# spill
868     movl    R8, [rsp + #0]	# spill
86c     movl    R11, [rsp + #4]	# spill

871     B69: #	out( B70 ) <- in( B68 B73 ) top-of-loop Freq: 79577.5
871     # TLS is in R15
871     movq    R10, [R15 + #976 (32-bit)]	# ptr
878     incl    RBX	# int
87a     testl   rax, [R10]	# Safepoint: poll for GC        # polymorphic::main @ bci:426 (line 86) L[0]=_ L[1]=_ L[2]=_ L[3]=R9 L[4]=RCX L[5]=R13 L[6]=RDI L[7]=RDX L[8]=RAX L[9]=RBX L[10]=_ L[11]=_ L[12]=_
        # OopMap {r9=Oop rcx=Oop rdi=Oop rdx=Oop rax=Oop off=2170/0x87a}
87d     movl    [rsp + #0], RBX	# spill

880     B70: #	out( B83 B71 ) <- in( B16 B69 ) Loop( B70-B69 ) Freq: 79578.9
880     movl    RBX, [rsp + #0]	# spill
883     cmpl    RBX, #100000
889     jge     B83  P=0.000000 C=15369.000000

88f     B71: #	out( B17 B72 ) <- in( B70 )  Freq: 79578.9
88f     movl    R10, [rsp + #0]	# spill
893     andl    R10, #3	# int
897     testl   R10, R10
        nop 	# 6 bytes pad for loops and calls
8a0     je     B17  P=0.250049 C=3843.000000

8a6     B72: #	out( B43 B73 ) <- in( B71 )  Freq: 59680.3
8a6     cmpl    R10, #1
8aa     je     B43  P=0.333333 C=3842.000000

8b0     B73: #	out( B69 ) <- in( B72 )  Freq: 39786.9
8b0     jmp,s   B69

8b2     B74: #	out( B67 ) <- in( B46 )  Freq: 38.8238
8b2     movl    RBP, R13	# spill
8b5     movl    [rsp + #0], R8	# spill
8b9     movl    [rsp + #4], R11	# spill
        nop 	# 2 bytes pad for loops and calls
8c0     jmp     B67

8c5     B75: #	out( B42 ) <- in( B20 )  Freq: 19.4132
8c5     movl    R10, R13	# spill
8c8     jmp     B42

8cd     B76: #	out( N1290 ) <- in( B43 )  Freq: 0.0403202
8cd     movl    RSI, #-10	# int
8d2     movq    RBP, RDX	# spill
8d5     movq    [rsp + #0], R9	# spill
        nop 	# 3 bytes pad for loops and calls
8dc     call,static  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # polymorphic::main @ bci:404 (line 89) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=_ L[8]=_ L[9]=_ L[10]=_ L[11]=_ L[12]=_ STK[0]=_ STK[1]=#NULL STK[2]=RBP STK[3]=rsp + #0
        # OopMap {rbp=Oop [-98469116]=Oop off=2276/0x8e4}
8e4     stop	# ShouldNotReachHere

8f8     B77: #	out( N1290 ) <- in( B44 )  Freq: 0.0403202
8f8     movl    RSI, #-10	# int
8fd     movq    RBP, R9	# spill
900     call,static  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # polymorphic::doCall @ bci:2 (line 35) L[0]=_ L[1]=_ L[2]=_ STK[0]=#NULL STK[1]=RBP
        # polymorphic::main @ bci:404 (line 89) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=_ L[8]=_ L[9]=_ L[10]=_ L[11]=_ L[12]=_ STK[0]=_
        # OopMap {rbp=Oop off=2312/0x908}
908     stop	# ShouldNotReachHere

91c     B78: #	out( N1290 ) <- in( B47 )  Freq: 0.0402808
91c     movl    RSI, #-138	# int
921     movq    [rsp + #0], RCX	# spill
925     movq    [rsp + #8], RDI	# spill
92a     movq    [rsp + #16], RDX	# spill
92f     movq    [rsp + #24], RAX	# spill
934     movl    [rsp + #32], RBX	# spill
938     movl    [rsp + #36], R13	# spill
93d     movq    [rsp + #40], R9	# spill
942     movl    [rsp + #48], R10	# spill
        nop 	# 1 bytes pad for loops and calls
948     call,static  wrapper for: uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')
        # myclassC2::doAction @ bci:7 (line 26) L[0]=_ L[1]=rsp + #40 L[2]=#0 L[3]=#0 STK[0]=#0 STK[1]=rsp + #48
        # polymorphic::doCall @ bci:2 (line 35) L[0]=_ L[1]=_ L[2]=_
        # polymorphic::main @ bci:404 (line 89) L[0]=_ L[1]=_ L[2]=_ L[3]=rsp + #40 L[4]=rsp + #0 L[5]=_ L[6]=rsp + #8 L[7]=rsp + #16 L[8]=rsp + #24 L[9]=rsp + #32 L[10]=_ L[11]=_ L[12]=_ STK[0]=rsp + #36
        # OopMap {[-98469116]=Oop [-98469108]=Oop [-98469100]=Oop [-98469092]=Oop [-98469076]=Oop off=2384/0x950}
950     stop	# ShouldNotReachHere

964     B79: #	out( B62 ) <- in( B51 )  Freq: 0.0402807
964     movl    R9, R11	# spill
967     jmp     B62

96c     B80: #	out( N1290 ) <- in( B52 )  Freq: 0.0402807
96c     stop	# ShouldNotReachHere

980     B81: #	out( N1290 ) <- in( B53 )  Freq: 0.0402806
980     stop	# ShouldNotReachHere

994     B82: #	out( N1290 ) <- in( B54 )  Freq: 0.0402806
994     stop	# ShouldNotReachHere

9a8     B83: #	out( N1290 ) <- in( B70 )  Freq: 0.0379462
9a8     movl    RSI, #-187	# int
9ad     movq    RBP, R9	# spill
9b0     movq    [rsp + #0], RCX	# spill
9b4     movq    [rsp + #8], RDI	# spill
9b9     movq    [rsp + #16], RDX	# spill
9be     movq    [rsp + #24], RAX	# spill
9c3     movl    [rsp + #32], RBX	# spill
        nop 	# 1 bytes pad for loops and calls
9c8     call,static  wrapper for: uncommon_trap(reason='unstable_if' action='reinterpret' debug_id='0')
        # polymorphic::main @ bci:350 (line 86) L[0]=_ L[1]=_ L[2]=_ L[3]=RBP L[4]=rsp + #0 L[5]=_ L[6]=rsp + #8 L[7]=rsp + #16 L[8]=rsp + #24 L[9]=_ L[10]=_ L[11]=_ L[12]=_ STK[0]=rsp + #32 STK[1]=#100000
        # OopMap {rbp=Oop [-98469116]=Oop [-98469108]=Oop [-98469100]=Oop [-98469092]=Oop off=2512/0x9d0}
9d0     stop	# ShouldNotReachHere

9e4     B84: #	out( N1290 ) <- in( B17 )  Freq: 0.0201628
9e4     movl    RSI, #-10	# int
9e9     movq    RBP, RDI	# spill
9ec     movq    [rsp + #0], R9	# spill
9f0     call,static  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # polymorphic::main @ bci:391 (line 88) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=_ L[8]=_ L[9]=_ L[10]=_ L[11]=_ L[12]=_ STK[0]=_ STK[1]=#NULL STK[2]=RBP STK[3]=rsp + #0
        # OopMap {rbp=Oop [-98469116]=Oop off=2552/0x9f8}
9f8     stop	# ShouldNotReachHere

a0c     B85: #	out( N1290 ) <- in( B18 )  Freq: 0.0201628
a0c     movl    RSI, #-10	# int
a11     movq    RBP, R9	# spill
a14     call,static  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # polymorphic::doCall @ bci:2 (line 35) L[0]=_ L[1]=_ L[2]=_ STK[0]=#NULL STK[1]=RBP
        # polymorphic::main @ bci:391 (line 88) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=_ L[8]=_ L[9]=_ L[10]=_ L[11]=_ L[12]=_ STK[0]=_
        # OopMap {rbp=Oop off=2588/0xa1c}
a1c     stop	# ShouldNotReachHere

a30     B86: #	out( N1290 ) <- in( B21 )  Freq: 0.0201431
a30     movl    RSI, #-138	# int
a35     movq    [rsp + #0], RCX	# spill
a39     movq    [rsp + #8], RDI	# spill
a3e     movq    [rsp + #16], RDX	# spill
a43     movq    [rsp + #24], RAX	# spill
a48     movl    [rsp + #32], RBX	# spill
a4c     movl    [rsp + #36], R13	# spill
a51     movq    [rsp + #40], R9	# spill
a56     movl    [rsp + #48], R10	# spill
        nop 	# 1 bytes pad for loops and calls
a5c     call,static  wrapper for: uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')
        # myclassC1::doAction @ bci:7 (line 17) L[0]=_ L[1]=rsp + #40 L[2]=#0 L[3]=#0 STK[0]=#0 STK[1]=rsp + #48
        # polymorphic::doCall @ bci:2 (line 35) L[0]=_ L[1]=_ L[2]=_
        # polymorphic::main @ bci:391 (line 88) L[0]=_ L[1]=_ L[2]=_ L[3]=rsp + #40 L[4]=rsp + #0 L[5]=_ L[6]=rsp + #8 L[7]=rsp + #16 L[8]=rsp + #24 L[9]=rsp + #32 L[10]=_ L[11]=_ L[12]=_ STK[0]=rsp + #36
        # OopMap {[-98469116]=Oop [-98469108]=Oop [-98469100]=Oop [-98469092]=Oop [-98469076]=Oop off=2660/0xa64}
a64     stop	# ShouldNotReachHere

a78     B87: #	out( B37 ) <- in( B25 )  Freq: 0.0201431
a78     movl    R9, R11	# spill
        nop 	# 5 bytes pad for loops and calls
a80     jmp     B37

a85     B88: #	out( N1290 ) <- in( B26 )  Freq: 0.0201431
a85     stop	# ShouldNotReachHere

a99     B89: #	out( N1290 ) <- in( B27 )  Freq: 0.020143
a99     stop	# ShouldNotReachHere

aad     B90: #	out( N1290 ) <- in( B28 )  Freq: 0.020143
aad     stop	# ShouldNotReachHere

ac1     B91: #	out( N1290 ) <- in( B29 )  Freq: 0.020143
ac1     stop	# ShouldNotReachHere

ad5     B92: #	out( N1290 ) <- in( B59 )  Freq: 0.0201403
ad5     stop	# ShouldNotReachHere

ae9     B93: #	out( N1290 ) <- in( B63 )  Freq: 0.0201403
ae9     stop	# ShouldNotReachHere

afd     B94: #	out( N1290 ) <- in( B60 )  Freq: 0.0201403
afd     stop	# ShouldNotReachHere

b11     B95: #	out( N1290 ) <- in( B64 )  Freq: 0.0201403
b11     stop	# ShouldNotReachHere

b25     B96: #	out( N1290 ) <- in( B34 )  Freq: 0.0100715
b25     stop	# ShouldNotReachHere

b39     B97: #	out( N1290 ) <- in( B38 )  Freq: 0.0100715
b39     stop	# ShouldNotReachHere

b4d     B98: #	out( N1290 ) <- in( B35 )  Freq: 0.0100715
b4d     stop	# ShouldNotReachHere

b61     B99: #	out( N1290 ) <- in( B39 )  Freq: 0.0100715
b61     stop	# ShouldNotReachHere

b75     B100: #	out( B4 ) <- in( B1 )  Freq: 0.000999987
b75     xorl    R9, R9	# ptr
b78     jmp     B4

b7d     B101: #	out( B7 ) <- in( B4 )  Freq: 0.000999986
b7d     xorl    RCX, RCX	# ptr
        nop 	# 1 bytes pad for loops and calls
b80     jmp     B7

b85     B102: #	out( B10 ) <- in( B7 )  Freq: 0.000999985
b85     xorl    RDI, RDI	# ptr
b87     jmp     B10

b8c     B103: #	out( B13 ) <- in( B10 )  Freq: 0.000999984
b8c     xorl    RDX, RDX	# ptr
b8e     jmp     B13

b93     B104: #	out( B16 ) <- in( B13 )  Freq: 0.000999983
b93     xorl    RAX, RAX	# ptr
b95     jmp     B16

b9a     B105: #	out( B107 ) <- in( B2 )  Freq: 9.99e-07
b9a     movq    R14, RBP	# spill
b9d     movq    R8, [rsp + #8]	# spill
ba2     movq    RAX, [rsp + #16]	# spill
ba7     movq    R11, [rsp + #24]	# spill
bac     jmp,s   B107

bae     B106: #	out( B107 ) <- in( B5 )  Freq: 9.98999e-07
bae     movq    R8, [rsp + #8]	# spill
bb3     movq    RAX, [rsp + #16]	# spill
bb8     movq    R11, [rsp + #24]	# spill

bbd     B107: #	out( N1290 ) <- in( B105 B106 B108 B109 B14 )  Freq: 4.99499e-06
bbd     movl    RSI, #-115	# int
bc2     movl    RBP, R13	# spill
bc5     movq    [rsp + #8], RBX	# spill
bca     movq    [rsp + #16], R14	# spill
bcf     movq    [rsp + #24], R8	# spill
bd4     movq    [rsp + #32], RAX	# spill
bd9     movq    [rsp + #40], R11	# spill
        nop 	# 2 bytes pad for loops and calls
be0     call,static  wrapper for: uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')
        # polymorphic::main @ bci:346 (line 86) L[0]=_ L[1]=_ L[2]=_ L[3]=rsp + #8 L[4]=rsp + #16 L[5]=RBP L[6]=rsp + #24 L[7]=rsp + #32 L[8]=rsp + #40 L[9]=rsp + #0 L[10]=_ L[11]=_ L[12]=_
        # OopMap {[-98469108]=Oop [-98469100]=Oop [-98469092]=Oop [-98469084]=Oop [-98469076]=Oop off=3048/0xbe8}
be8     stop	# ShouldNotReachHere

bfc     B108: #	out( B107 ) <- in( B8 )  Freq: 9.98998e-07
bfc     movq    RAX, [rsp + #16]	# spill
c01     movq    R11, [rsp + #24]	# spill
c06     jmp,s   B107

c08     B109: #	out( B107 ) <- in( B11 )  Freq: 9.98997e-07
c08     movq    R11, [rsp + #24]	# spill
c0d     jmp,s   B107

c0f     B110: #	out( N1290 ) <- in( B67 )  Freq: 0.397915
c0f     # exception oop is in rax; no code emitted
c0f     movq    RSI, RAX	# spill
c12     vzeroupper
	addq    rsp, 80	# Destroy frame
	popq    rbp

c1a     jmp     rethrow_stub

c1f     B111: #	out( N1290 ) <- in( B45 )  Freq: 0.0403201
c1f     movl    RSI, #-10	# int
c24     call,static  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # myclassC2::doAction @ bci:6 (line 26) L[0]=_ L[1]=_ L[2]=_ L[3]=_ STK[0]=_ STK[1]=#NULL
        # polymorphic::doCall @ bci:2 (line 35) L[0]=_ L[1]=_ L[2]=_
        # polymorphic::main @ bci:404 (line 89) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=_ L[8]=_ L[9]=_ L[10]=_ L[11]=_ L[12]=_ STK[0]=_
        # OopMap {off=3116/0xc2c}
c2c     stop	# ShouldNotReachHere

c40     B112: #	out( N1290 ) <- in( B19 )  Freq: 0.0201628
c40     movl    RSI, #-10	# int
        nop 	# 3 bytes pad for loops and calls
c48     call,static  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # myclassC1::doAction @ bci:6 (line 17) L[0]=_ L[1]=_ L[2]=_ L[3]=_ STK[0]=_ STK[1]=#NULL
        # polymorphic::doCall @ bci:2 (line 35) L[0]=_ L[1]=_ L[2]=_
        # polymorphic::main @ bci:391 (line 88) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=_ L[8]=_ L[9]=_ L[10]=_ L[11]=_ L[12]=_ STK[0]=_
        # OopMap {off=3152/0xc50}
c50     stop	# ShouldNotReachHere

--------------------------------------------------------------------------------
----------------------------------- Assembly -----------------------------------

Compiled method (c2)    2308   27 %           polymorphic::main @ 346 (545 bytes)
 total in heap  [0x00007f13f8f25790,0x00007f13f8f26f18] = 6024
 relocation     [0x00007f13f8f258f0,0x00007f13f8f25a60] = 368
 main code      [0x00007f13f8f25a60,0x00007f13f8f266c8] = 3176
 stub code      [0x00007f13f8f266c8,0x00007f13f8f266e0] = 24
 oops           [0x00007f13f8f266e0,0x00007f13f8f266e8] = 8
 metadata       [0x00007f13f8f266e8,0x00007f13f8f26738] = 80
 scopes data    [0x00007f13f8f26738,0x00007f13f8f269f0] = 696
 scopes pcs     [0x00007f13f8f269f0,0x00007f13f8f26ed0] = 1248
 dependencies   [0x00007f13f8f26ed0,0x00007f13f8f26ee8] = 24
 handler table  [0x00007f13f8f26ee8,0x00007f13f8f26f00] = 24
 nul chk table  [0x00007f13f8f26f00,0x00007f13f8f26f18] = 24

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x00007f13ac511858} 'main' '([Ljava/lang/String;)V' in 'polymorphic'
 ;; N1290: #	out( B1 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x00007f13f8f25a60:   callq  0x00007f13fd536748           ;   {runtime_call os::breakpoint()}
  0x00007f13f8f25a65:   nop
  0x00007f13f8f25a66:   nop
  0x00007f13f8f25a67:   nop
  0x00007f13f8f25a68:   nop
  0x00007f13f8f25a69:   nop
  0x00007f13f8f25a6a:   nop
  0x00007f13f8f25a6b:   nop
  0x00007f13f8f25a6c:   nop
  0x00007f13f8f25a6d:   nop
  0x00007f13f8f25a6e:   nop
  0x00007f13f8f25a6f:   nop
 ;; B1: #	out( B100 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x00007f13f8f25a70:   mov    %eax,-0x18000(%rsp)
  0x00007f13f8f25a77:   push   %rbp
  0x00007f13f8f25a78:   sub    $0x50,%rsp
  0x00007f13f8f25a7c:   mov    0x48(%rsi),%rbx
  0x00007f13f8f25a80:   mov    0x40(%rsi),%rbp
  0x00007f13f8f25a84:   mov    0x18(%rsi),%r11d
  0x00007f13f8f25a88:   mov    %r11d,(%rsp)
  0x00007f13f8f25a8c:   mov    0x30(%rsi),%r10
  0x00007f13f8f25a90:   mov    %r10,0x8(%rsp)
  0x00007f13f8f25a95:   mov    0x28(%rsi),%r10
  0x00007f13f8f25a99:   mov    %r10,0x10(%rsp)
  0x00007f13f8f25a9e:   mov    0x20(%rsi),%r10
  0x00007f13f8f25aa2:   mov    %r10,0x18(%rsp)
  0x00007f13f8f25aa7:   mov    0x38(%rsi),%r13d
  0x00007f13f8f25aab:   mov    %rsi,%rdi
  0x00007f13f8f25aae:   vzeroupper 
  0x00007f13f8f25ab1:   movabs $0x7f13fd632f88,%r10
  0x00007f13f8f25abb:   callq  *%r10
  0x00007f13f8f25abe:   nop
  0x00007f13f8f25abf:   nop
  0x00007f13f8f25ac0:   test   %rbx,%rbx
  0x00007f13f8f25ac3:   je     0x00007f13f8f265d5
 ;; B2: #	out( B105 B3 ) <- in( B1 )  Freq: 0.999
  0x00007f13f8f25ac9:   mov    0x8(%rbx),%r10d
  0x00007f13f8f25acd:   cmp    $0x40dc8,%r10d               ;   {metadata({type array int})}
  0x00007f13f8f25ad4:   jne    0x00007f13f8f265fa
 ;; B3: #	out( B4 ) <- in( B2 )  Freq: 0.998999
  0x00007f13f8f25ada:   mov    %rbx,%r9
 ;; B4: #	out( B101 B5 ) <- in( B3 B100 )  Freq: 0.999999
  0x00007f13f8f25add:   mov    %rbp,%r14
  0x00007f13f8f25ae0:   test   %rbp,%rbp
  0x00007f13f8f25ae3:   je     0x00007f13f8f265dd
 ;; B5: #	out( B106 B6 ) <- in( B4 )  Freq: 0.998999
  0x00007f13f8f25ae9:   mov    0x8(%rbp),%r11d
  0x00007f13f8f25aed:   cmp    $0xc1000,%r11d               ;   {metadata('polymorphic')}
  0x00007f13f8f25af4:   jne    0x00007f13f8f2660e
 ;; B6: #	out( B7 ) <- in( B5 )  Freq: 0.998998
  0x00007f13f8f25afa:   mov    %rbp,%rcx
 ;; B7: #	out( B102 B8 ) <- in( B6 B101 )  Freq: 0.999998
  0x00007f13f8f25afd:   mov    0x8(%rsp),%r8
  0x00007f13f8f25b02:   test   %r8,%r8
  0x00007f13f8f25b05:   je     0x00007f13f8f265e5
 ;; B8: #	out( B108 B9 ) <- in( B7 )  Freq: 0.998998
  0x00007f13f8f25b0b:   mov    0x8(%r8),%r10d
  0x00007f13f8f25b0f:   cmp    $0xc1420,%r10d               ;   {metadata('myclassC1')}
  0x00007f13f8f25b16:   jne    0x00007f13f8f2665c
 ;; B9: #	out( B10 ) <- in( B8 )  Freq: 0.998997
  0x00007f13f8f25b1c:   mov    %r8,%rdi
 ;; B10: #	out( B103 B11 ) <- in( B9 B102 )  Freq: 0.999997
  0x00007f13f8f25b1f:   mov    0x10(%rsp),%rax
  0x00007f13f8f25b24:   test   %rax,%rax
  0x00007f13f8f25b27:   je     0x00007f13f8f265ec
 ;; B11: #	out( B109 B12 ) <- in( B10 )  Freq: 0.998997
  0x00007f13f8f25b2d:   mov    0x8(%rax),%r11d
  0x00007f13f8f25b31:   cmp    $0xc1638,%r11d               ;   {metadata('myclassC2')}
  0x00007f13f8f25b38:   jne    0x00007f13f8f26668
 ;; B12: #	out( B13 ) <- in( B11 )  Freq: 0.998996
  0x00007f13f8f25b3e:   mov    %rax,%rdx
 ;; B13: #	out( B104 B14 ) <- in( B12 B103 )  Freq: 0.999996
  0x00007f13f8f25b41:   mov    0x18(%rsp),%r11
  0x00007f13f8f25b46:   test   %r11,%r11
  0x00007f13f8f25b49:   je     0x00007f13f8f265f3
 ;; B14: #	out( B107 B15 ) <- in( B13 )  Freq: 0.998996
  0x00007f13f8f25b4f:   mov    0x8(%r11),%r10d
  0x00007f13f8f25b53:   movabs $0x8000c1210,%rsi            ;   {metadata('myclassP')}
  0x00007f13f8f25b5d:   movabs $0x800000000,%rbp
  0x00007f13f8f25b67:   add    %r10,%rbp
  0x00007f13f8f25b6a:   mov    0x40(%rbp),%r10
  0x00007f13f8f25b6e:   cmp    %rsi,%r10
  0x00007f13f8f25b71:   jne    0x00007f13f8f2661d
 ;; B15: #	out( B16 ) <- in( B14 )  Freq: 0.998995
  0x00007f13f8f25b77:   mov    %r11,%rax                    ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - polymorphic::main@346 (line 86)
 ;; B16: #	out( B70 ) <- in( B15 B104 )  Freq: 0.999995
  0x00007f13f8f25b7a:   mov    %r9d,%r10d
  0x00007f13f8f25b7d:   mov    %r9d,%ebp
  0x00007f13f8f25b80:   shr    $0x2,%r10d
  0x00007f13f8f25b84:   shr    $0x2,%ebp
  0x00007f13f8f25b87:   and    $0x7,%r10d
  0x00007f13f8f25b8b:   and    $0x7,%ebp
  0x00007f13f8f25b8e:   mov    $0x3,%r11d
  0x00007f13f8f25b94:   sub    %ebp,%r11d
  0x00007f13f8f25b97:   mov    $0x3,%r8d
  0x00007f13f8f25b9d:   sub    %r10d,%r8d
  0x00007f13f8f25ba0:   and    $0x7,%r11d
  0x00007f13f8f25ba4:   and    $0x7,%r8d
  0x00007f13f8f25ba8:   inc    %r11d
  0x00007f13f8f25bab:   inc    %r8d
  0x00007f13f8f25bae:   jmpq   0x00007f13f8f262e0
 ;; B17: #	out( B84 B18 ) <- in( B71 )  Freq: 19898.6
  0x00007f13f8f25bb3:   test   %rcx,%rcx
  0x00007f13f8f25bb6:   je     0x00007f13f8f26444           ;*invokevirtual doCall {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - polymorphic::main@391 (line 88)
 ;; B18: #	out( B85 B19 ) <- in( B17 )  Freq: 19898.6
  0x00007f13f8f25bbc:   nop
  0x00007f13f8f25bbd:   nop
  0x00007f13f8f25bbe:   nop
  0x00007f13f8f25bbf:   nop
  0x00007f13f8f25bc0:   test   %rdi,%rdi
  0x00007f13f8f25bc3:   je     0x00007f13f8f2646c           ;*invokevirtual doAction {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@391 (line 88)
 ;; B19: #	out( B112 B20 ) <- in( B18 )  Freq: 19898.6
  0x00007f13f8f25bc9:   mov    0xc(%r9),%r10d               ; implicit exception: dispatches to 0x00007f13f8f266a0
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC1::doAction@6 (line 17)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@391 (line 88)
 ;; B20: #	out( B75 B21 ) <- in( B19 )  Freq: 19898.5
  0x00007f13f8f25bcd:   test   %r10d,%r10d
  0x00007f13f8f25bd0:   jbe    0x00007f13f8f26325           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC1::doAction@7 (line 17)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@391 (line 88)
 ;; B21: #	out( B86 B22 ) <- in( B20 )  Freq: 19879.1
  0x00007f13f8f25bd6:   mov    %r10d,%ebp
  0x00007f13f8f25bd9:   dec    %ebp
  0x00007f13f8f25bdb:   nop
  0x00007f13f8f25bdc:   nop
  0x00007f13f8f25bdd:   nop
  0x00007f13f8f25bde:   nop
  0x00007f13f8f25bdf:   nop
  0x00007f13f8f25be0:   cmp    %r10d,%ebp
  0x00007f13f8f25be3:   jae    0x00007f13f8f26490
 ;; B22: #	out( B23 ) <- in( B21 )  Freq: 19879.1
  0x00007f13f8f25be9:   vmovd  %r11d,%xmm20
  0x00007f13f8f25bef:   vmovq  %rax,%xmm17
  0x00007f13f8f25bf5:   vmovq  %rdx,%xmm16
  0x00007f13f8f25bfb:   mov    %rdi,%r14
  0x00007f13f8f25bfe:   mov    %rcx,%rax
  0x00007f13f8f25c01:   mov    %r9,%rdi
  0x00007f13f8f25c04:   mov    (%rsp),%edx
  0x00007f13f8f25c07:   cmp    %r10d,%r8d
  0x00007f13f8f25c0a:   mov    %r8d,%ecx
  0x00007f13f8f25c0d:   vmovd  %r8d,%xmm18
  0x00007f13f8f25c13:   cmovg  %r10d,%ecx
  0x00007f13f8f25c17:   xor    %ebx,%ebx
  0x00007f13f8f25c19:   xor    %esi,%esi                    ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC1::doAction@10 (line 18)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@391 (line 88)
 ;; B23: #	out( B25 B24 ) <- in( B22 B24 ) Loop( B23-B24 inner pre of N775 reduction) Freq: 39758.2
  0x00007f13f8f25c1b:   mov    0x10(%rdi,%rbx,4),%r8d
  0x00007f13f8f25c20:   shl    $0x14,%r8d
  0x00007f13f8f25c24:   add    %r8d,%esi                    ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC1::doAction@17 (line 18)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@391 (line 88)
  0x00007f13f8f25c27:   mov    %ebx,%r11d
  0x00007f13f8f25c2a:   inc    %r11d                        ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC1::doAction@19 (line 17)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@391 (line 88)
  0x00007f13f8f25c2d:   cmp    %ecx,%r11d
  0x00007f13f8f25c30:   jge    0x00007f13f8f25c37           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC1::doAction@7 (line 17)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@391 (line 88)
 ;; B24: #	out( B23 ) <- in( B23 )  Freq: 19879.1
  0x00007f13f8f25c32:   mov    %r11d,%ebx
  0x00007f13f8f25c35:   jmp    0x00007f13f8f25c1b
 ;; B25: #	out( B87 B26 ) <- in( B23 )  Freq: 19879.1
  0x00007f13f8f25c37:   mov    %r10d,%ecx
  0x00007f13f8f25c3a:   add    $0xffffffc1,%ecx
  0x00007f13f8f25c3d:   cmp    %ecx,%ebp
  0x00007f13f8f25c3f:   mov    $0x80000000,%r8d
  0x00007f13f8f25c45:   cmovl  %r8d,%ecx
  0x00007f13f8f25c49:   cmp    %ecx,%r11d
  0x00007f13f8f25c4c:   jge    0x00007f13f8f264d8
 ;; B26: #	out( B88 B27 ) <- in( B25 )  Freq: 19879.1
  0x00007f13f8f25c52:   mov    %ebx,%r9d
  0x00007f13f8f25c55:   inc    %r9d
  0x00007f13f8f25c58:   cmp    %r10d,%r9d
  0x00007f13f8f25c5b:   nop
  0x00007f13f8f25c5c:   nop
  0x00007f13f8f25c5d:   nop
  0x00007f13f8f25c5e:   nop
  0x00007f13f8f25c5f:   nop
  0x00007f13f8f25c60:   jae    0x00007f13f8f264e5
 ;; B27: #	out( B89 B28 ) <- in( B26 )  Freq: 19879.1
  0x00007f13f8f25c66:   cmp    %r10d,%r9d
  0x00007f13f8f25c69:   jae    0x00007f13f8f264f9
 ;; B28: #	out( B90 B29 ) <- in( B27 )  Freq: 19879.1
  0x00007f13f8f25c6f:   cmp    %r10d,%r11d
  0x00007f13f8f25c72:   jae    0x00007f13f8f2650d
 ;; B29: #	out( B91 B30 ) <- in( B28 )  Freq: 19879
  0x00007f13f8f25c78:   add    $0x40,%ebx
  0x00007f13f8f25c7b:   nop
  0x00007f13f8f25c7c:   nop
  0x00007f13f8f25c7d:   nop
  0x00007f13f8f25c7e:   nop
  0x00007f13f8f25c7f:   nop
  0x00007f13f8f25c80:   cmp    %r10d,%ebx
  0x00007f13f8f25c83:   jae    0x00007f13f8f26521
 ;; B30: #	out( B31 ) <- in( B29 B32 ) Loop( B30-B32 ) Freq: 2.0376e+07
  0x00007f13f8f25c89:   mov    %ecx,%ebx
  0x00007f13f8f25c8b:   sub    %r9d,%ebx
  0x00007f13f8f25c8e:   xor    %r11d,%r11d
  0x00007f13f8f25c91:   cmp    %r9d,%ecx
  0x00007f13f8f25c94:   cmovl  %r11d,%ebx
  0x00007f13f8f25c98:   cmp    $0xfa00,%ebx
  0x00007f13f8f25c9e:   mov    $0xfa00,%r8d
  0x00007f13f8f25ca4:   cmova  %r8d,%ebx
  0x00007f13f8f25ca8:   add    %r9d,%ebx
  0x00007f13f8f25cab:   nop
  0x00007f13f8f25cac:   nop
  0x00007f13f8f25cad:   nop
  0x00007f13f8f25cae:   nop
  0x00007f13f8f25caf:   nop                                 ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC1::doAction@10 (line 18)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@391 (line 88)
 ;; B31: #	out( B31 B32 ) <- in( B30 B31 ) Loop( B31-B31 inner main of N252 reduction strip mined) Freq: 2.08854e+10
  0x00007f13f8f25cb0:   vmovdqu 0xf0(%rdi,%r9,4),%ymm0
  0x00007f13f8f25cba:   vmovdqu 0xd0(%rdi,%r9,4),%ymm2
  0x00007f13f8f25cc4:   vmovdqu 0xb0(%rdi,%r9,4),%ymm3
  0x00007f13f8f25cce:   vmovdqu 0x90(%rdi,%r9,4),%ymm4
  0x00007f13f8f25cd8:   vmovdqu 0x70(%rdi,%r9,4),%ymm5
  0x00007f13f8f25cdf:   vmovdqu 0x50(%rdi,%r9,4),%ymm7
  0x00007f13f8f25ce6:   vmovdqu 0x30(%rdi,%r9,4),%ymm6
  0x00007f13f8f25ced:   vmovdqu 0x10(%rdi,%r9,4),%ymm1
  0x00007f13f8f25cf4:   vpslld $0x14,%ymm0,%ymm0
  0x00007f13f8f25cf9:   vpslld $0x14,%ymm1,%ymm1
  0x00007f13f8f25cfe:   vpslld $0x14,%ymm2,%ymm2
  0x00007f13f8f25d03:   vpslld $0x14,%ymm3,%ymm3
  0x00007f13f8f25d08:   vpslld $0x14,%ymm4,%ymm4
  0x00007f13f8f25d0d:   vpslld $0x14,%ymm5,%ymm5
  0x00007f13f8f25d12:   vpslld $0x14,%ymm6,%ymm6
  0x00007f13f8f25d17:   vpslld $0x14,%ymm7,%ymm7
  0x00007f13f8f25d1c:   vphaddd %ymm1,%ymm1,%ymm14
  0x00007f13f8f25d21:   vextracti128 $0x1,%ymm14,%xmm15
  0x00007f13f8f25d27:   vpaddd %xmm15,%xmm14,%xmm14
  0x00007f13f8f25d2c:   vphaddd %xmm14,%xmm14,%xmm14
  0x00007f13f8f25d31:   vmovd  %esi,%xmm15
  0x00007f13f8f25d35:   vpaddd %xmm15,%xmm14,%xmm14
  0x00007f13f8f25d3a:   vmovd  %xmm14,%r11d
  0x00007f13f8f25d3f:   vphaddd %ymm6,%ymm6,%ymm1
  0x00007f13f8f25d44:   vextracti128 $0x1,%ymm1,%xmm14
  0x00007f13f8f25d4a:   vpaddd %xmm14,%xmm1,%xmm1
  0x00007f13f8f25d4f:   vphaddd %xmm1,%xmm1,%xmm1           ;   {no_reloc}
  0x00007f13f8f25d54:   vmovd  %r11d,%xmm14
  0x00007f13f8f25d59:   vpaddd %xmm14,%xmm1,%xmm1
  0x00007f13f8f25d5e:   vmovd  %xmm1,%r8d
  0x00007f13f8f25d63:   vphaddd %ymm7,%ymm7,%ymm1
  0x00007f13f8f25d68:   vextracti128 $0x1,%ymm1,%xmm6
  0x00007f13f8f25d6e:   vpaddd %xmm6,%xmm1,%xmm1
  0x00007f13f8f25d72:   vphaddd %xmm1,%xmm1,%xmm1
  0x00007f13f8f25d77:   vmovd  %r8d,%xmm6
  0x00007f13f8f25d7c:   vpaddd %xmm6,%xmm1,%xmm1
  0x00007f13f8f25d80:   vmovd  %xmm1,%r11d
  0x00007f13f8f25d85:   vphaddd %ymm5,%ymm5,%ymm1
  0x00007f13f8f25d8a:   vextracti128 $0x1,%ymm1,%xmm6
  0x00007f13f8f25d90:   vpaddd %xmm6,%xmm1,%xmm1
  0x00007f13f8f25d94:   vphaddd %xmm1,%xmm1,%xmm1
  0x00007f13f8f25d99:   vmovd  %r11d,%xmm6
  0x00007f13f8f25d9e:   vpaddd %xmm6,%xmm1,%xmm1
  0x00007f13f8f25da2:   vmovd  %xmm1,%r8d
  0x00007f13f8f25da7:   vphaddd %ymm4,%ymm4,%ymm1
  0x00007f13f8f25dac:   vextracti128 $0x1,%ymm1,%xmm5
  0x00007f13f8f25db2:   vpaddd %xmm5,%xmm1,%xmm1
  0x00007f13f8f25db6:   vphaddd %xmm1,%xmm1,%xmm1
  0x00007f13f8f25dbb:   vmovd  %r8d,%xmm5
  0x00007f13f8f25dc0:   vpaddd %xmm5,%xmm1,%xmm1
  0x00007f13f8f25dc4:   vmovd  %xmm1,%r11d
  0x00007f13f8f25dc9:   vphaddd %ymm3,%ymm3,%ymm13
  0x00007f13f8f25dce:   vextracti128 $0x1,%ymm13,%xmm8
  0x00007f13f8f25dd4:   vpaddd %xmm8,%xmm13,%xmm13
  0x00007f13f8f25dd9:   vphaddd %xmm13,%xmm13,%xmm13
  0x00007f13f8f25dde:   vmovd  %r11d,%xmm8
  0x00007f13f8f25de3:   vpaddd %xmm8,%xmm13,%xmm13
  0x00007f13f8f25de8:   vmovd  %xmm13,%r8d
  0x00007f13f8f25ded:   vphaddd %ymm2,%ymm2,%ymm9
  0x00007f13f8f25df2:   vextracti128 $0x1,%ymm9,%xmm10
  0x00007f13f8f25df8:   vpaddd %xmm10,%xmm9,%xmm9
  0x00007f13f8f25dfd:   vphaddd %xmm9,%xmm9,%xmm9
  0x00007f13f8f25e02:   vmovd  %r8d,%xmm10
  0x00007f13f8f25e07:   vpaddd %xmm10,%xmm9,%xmm9
  0x00007f13f8f25e0c:   vmovd  %xmm9,%r11d
  0x00007f13f8f25e11:   vphaddd %ymm0,%ymm0,%ymm11
  0x00007f13f8f25e16:   vextracti128 $0x1,%ymm11,%xmm12
  0x00007f13f8f25e1c:   vpaddd %xmm12,%xmm11,%xmm11
  0x00007f13f8f25e21:   vphaddd %xmm11,%xmm11,%xmm11
  0x00007f13f8f25e26:   vmovd  %r11d,%xmm12
  0x00007f13f8f25e2b:   vpaddd %xmm12,%xmm11,%xmm11
  0x00007f13f8f25e30:   vmovd  %xmm11,%esi                  ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC1::doAction@17 (line 18)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@391 (line 88)
  0x00007f13f8f25e34:   add    $0x40,%r9d                   ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC1::doAction@19 (line 17)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@391 (line 88)
  0x00007f13f8f25e38:   cmp    %ebx,%r9d
  0x00007f13f8f25e3b:   nop
  0x00007f13f8f25e3c:   nop
  0x00007f13f8f25e3d:   nop
  0x00007f13f8f25e3e:   nop
  0x00007f13f8f25e3f:   nop
  0x00007f13f8f25e40:   jl     0x00007f13f8f25cb0           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC1::doAction@22 (line 17)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@391 (line 88)
 ;; B32: #	out( B30 B33 ) <- in( B31 )  Freq: 2.0376e+07
  0x00007f13f8f25e46:   mov    0x3d0(%r15),%r11             ; ImmutableOopMap {rdi=Oop rax=Oop r14=Oop xmm16=Oop xmm17=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) myclassC1::doAction@22 (line 17)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@391 (line 88)
  0x00007f13f8f25e4d:   test   %eax,(%r11)                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC1::doAction@22 (line 17)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@391 (line 88)
                                                            ;   {poll}
  0x00007f13f8f25e50:   cmp    %ecx,%r9d
  0x00007f13f8f25e53:   jl     0x00007f13f8f25c89
 ;; B33: #	out( B37 B34 ) <- in( B32 )  Freq: 19879
  0x00007f13f8f25e59:   mov    %r10d,%r8d
  0x00007f13f8f25e5c:   add    $0xfffffff9,%r8d
  0x00007f13f8f25e60:   cmp    %r8d,%ebp
  0x00007f13f8f25e63:   mov    $0x80000000,%ecx
  0x00007f13f8f25e68:   cmovl  %ecx,%r8d
  0x00007f13f8f25e6c:   cmp    %r8d,%r9d
  0x00007f13f8f25e6f:   jge    0x00007f13f8f25ec5
 ;; B34: #	out( B96 B35 ) <- in( B33 )  Freq: 9939.51
  0x00007f13f8f25e75:   cmp    %r10d,%r9d
  0x00007f13f8f25e78:   jae    0x00007f13f8f26585
 ;; B35: #	out( B98 B36 ) <- in( B34 )  Freq: 9939.5
  0x00007f13f8f25e7e:   mov    %r9d,%r11d
  0x00007f13f8f25e81:   add    $0x7,%r11d
  0x00007f13f8f25e85:   cmp    %r10d,%r11d
  0x00007f13f8f25e88:   jae    0x00007f13f8f265ad
  0x00007f13f8f25e8e:   nop
  0x00007f13f8f25e8f:   nop                                 ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC1::doAction@10 (line 18)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@391 (line 88)
 ;; B36: #	out( B36 B37 ) <- in( B35 B36 ) Loop( B36-B36 inner post of N1491 reduction) Freq: 19879
  0x00007f13f8f25e90:   vmovdqu 0x10(%rdi,%r9,4),%ymm0
  0x00007f13f8f25e97:   vpslld $0x14,%ymm0,%ymm0
  0x00007f13f8f25e9c:   vphaddd %ymm0,%ymm0,%ymm2
  0x00007f13f8f25ea1:   vextracti128 $0x1,%ymm2,%xmm1
  0x00007f13f8f25ea7:   vpaddd %xmm1,%xmm2,%xmm2
  0x00007f13f8f25eab:   vphaddd %xmm2,%xmm2,%xmm2
  0x00007f13f8f25eb0:   vmovd  %esi,%xmm1
  0x00007f13f8f25eb4:   vpaddd %xmm1,%xmm2,%xmm2
  0x00007f13f8f25eb8:   vmovd  %xmm2,%esi                   ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC1::doAction@17 (line 18)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@391 (line 88)
  0x00007f13f8f25ebc:   add    $0x8,%r9d                    ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC1::doAction@19 (line 17)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@391 (line 88)
  0x00007f13f8f25ec0:   cmp    %r8d,%r9d
  0x00007f13f8f25ec3:   jl     0x00007f13f8f25e90           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC1::doAction@7 (line 17)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@391 (line 88)
 ;; B37: #	out( B41 B38 ) <- in( B87 B36 B33 )  Freq: 19879
  0x00007f13f8f25ec5:   cmp    %r10d,%r9d
  0x00007f13f8f25ec8:   jge    0x00007f13f8f25ef4
 ;; B38: #	out( B97 B39 ) <- in( B37 )  Freq: 9939.51
  0x00007f13f8f25eca:   cmp    %r10d,%r9d
  0x00007f13f8f25ecd:   jae    0x00007f13f8f26599
 ;; B39: #	out( B99 B40 ) <- in( B38 )  Freq: 9939.5
  0x00007f13f8f25ed3:   mov    %r9d,%r8d
  0x00007f13f8f25ed6:   cmp    %r10d,%r8d
  0x00007f13f8f25ed9:   jae    0x00007f13f8f265c1
  0x00007f13f8f25edf:   nop                                 ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC1::doAction@10 (line 18)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@391 (line 88)
 ;; B40: #	out( B40 B41 ) <- in( B39 B40 ) Loop( B40-B40 inner post of N775 reduction) Freq: 19879
  0x00007f13f8f25ee0:   mov    0x10(%rdi,%r9,4),%r11d
  0x00007f13f8f25ee5:   shl    $0x14,%r11d
  0x00007f13f8f25ee9:   add    %r11d,%esi                   ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC1::doAction@17 (line 18)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@391 (line 88)
  0x00007f13f8f25eec:   inc    %r9d                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC1::doAction@19 (line 17)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@391 (line 88)
  0x00007f13f8f25eef:   cmp    %r10d,%r9d
  0x00007f13f8f25ef2:   jl     0x00007f13f8f25ee0           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC1::doAction@7 (line 17)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@391 (line 88)
 ;; B41: #	out( B42 ) <- in( B40 B37 )  Freq: 19879
  0x00007f13f8f25ef4:   imul   $0x64,%esi,%r10d
  0x00007f13f8f25ef8:   add    %r13d,%r10d
  0x00007f13f8f25efb:   mov    %edx,%ebx
  0x00007f13f8f25efd:   mov    %rdi,%r9
  0x00007f13f8f25f00:   mov    %rax,%rcx
  0x00007f13f8f25f03:   mov    %r14,%rdi
  0x00007f13f8f25f06:   vmovq  %xmm16,%rdx
  0x00007f13f8f25f0c:   vmovq  %xmm17,%rax
  0x00007f13f8f25f12:   vmovd  %xmm18,%r8d
  0x00007f13f8f25f18:   vmovd  %xmm20,%r11d                 ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - polymorphic::main@394 (line 88)
 ;; B42: #	out( B43 ) <- in( B41 B75 )  Freq: 19898.4
  0x00007f13f8f25f1e:   mov    %r10d,%r13d                  ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - polymorphic::main@397 (line 89)
 ;; B43: #	out( B76 B44 ) <- in( B42 B72 )  Freq: 39791.8
  0x00007f13f8f25f21:   test   %rcx,%rcx
  0x00007f13f8f25f24:   je     0x00007f13f8f2632d           ;*invokevirtual doCall {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - polymorphic::main@404 (line 89)
 ;; B44: #	out( B77 B45 ) <- in( B43 )  Freq: 39791.8
  0x00007f13f8f25f2a:   test   %rdx,%rdx
  0x00007f13f8f25f2d:   je     0x00007f13f8f26358           ;*invokevirtual doAction {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@404 (line 89)
 ;; B45: #	out( B111 B46 ) <- in( B44 )  Freq: 39791.8
  0x00007f13f8f25f33:   mov    0xc(%r9),%r10d               ; implicit exception: dispatches to 0x00007f13f8f2667f
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC2::doAction@6 (line 26)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@404 (line 89)
 ;; B46: #	out( B74 B47 ) <- in( B45 )  Freq: 39791.7
  0x00007f13f8f25f37:   test   %r10d,%r10d
  0x00007f13f8f25f3a:   nop
  0x00007f13f8f25f3b:   nop
  0x00007f13f8f25f3c:   nop
  0x00007f13f8f25f3d:   nop
  0x00007f13f8f25f3e:   nop
  0x00007f13f8f25f3f:   nop
  0x00007f13f8f25f40:   jbe    0x00007f13f8f26312           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC2::doAction@7 (line 26)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@404 (line 89)
 ;; B47: #	out( B78 B48 ) <- in( B46 )  Freq: 39752.9
  0x00007f13f8f25f46:   mov    %r10d,%ebp
  0x00007f13f8f25f49:   dec    %ebp
  0x00007f13f8f25f4b:   cmp    %r10d,%ebp
  0x00007f13f8f25f4e:   jae    0x00007f13f8f2637c
 ;; B48: #	out( B49 ) <- in( B47 )  Freq: 39752.9
  0x00007f13f8f25f54:   mov    %r8d,(%rsp)
  0x00007f13f8f25f58:   vmovq  %rax,%xmm17
  0x00007f13f8f25f5e:   vmovq  %rdx,%xmm16
  0x00007f13f8f25f64:   mov    %rdi,%r14
  0x00007f13f8f25f67:   mov    %rcx,%rax
  0x00007f13f8f25f6a:   mov    %r9,%rdi
  0x00007f13f8f25f6d:   mov    %ebx,%edx
  0x00007f13f8f25f6f:   cmp    %r10d,%r11d
  0x00007f13f8f25f72:   mov    %r11d,%ecx
  0x00007f13f8f25f75:   mov    %r11d,0x4(%rsp)
  0x00007f13f8f25f7a:   cmovg  %r10d,%ecx
  0x00007f13f8f25f7e:   xor    %esi,%esi
  0x00007f13f8f25f80:   xor    %ebx,%ebx                    ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC2::doAction@10 (line 27)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@404 (line 89)
 ;; B49: #	out( B51 B50 ) <- in( B48 B50 ) Loop( B49-B50 inner pre of N786 reduction) Freq: 79505.7
  0x00007f13f8f25f82:   mov    0x10(%rdi,%rbx,4),%r8d
  0x00007f13f8f25f87:   shl    $0x1e,%r8d
  0x00007f13f8f25f8b:   add    %r8d,%esi                    ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC2::doAction@17 (line 27)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@404 (line 89)
  0x00007f13f8f25f8e:   mov    %ebx,%r11d
  0x00007f13f8f25f91:   inc    %r11d                        ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC2::doAction@19 (line 26)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@404 (line 89)
  0x00007f13f8f25f94:   cmp    %ecx,%r11d
  0x00007f13f8f25f97:   jge    0x00007f13f8f25f9e           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC2::doAction@7 (line 26)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@404 (line 89)
 ;; B50: #	out( B49 ) <- in( B49 )  Freq: 39752.9
  0x00007f13f8f25f99:   mov    %r11d,%ebx
  0x00007f13f8f25f9c:   jmp    0x00007f13f8f25f82
 ;; B51: #	out( B79 B52 ) <- in( B49 )  Freq: 39752.9
  0x00007f13f8f25f9e:   mov    %r10d,%ecx
  0x00007f13f8f25fa1:   add    $0xffffffc1,%ecx
  0x00007f13f8f25fa4:   cmp    %ecx,%ebp
  0x00007f13f8f25fa6:   mov    $0x80000000,%r8d
  0x00007f13f8f25fac:   cmovl  %r8d,%ecx
  0x00007f13f8f25fb0:   cmp    %ecx,%r11d
  0x00007f13f8f25fb3:   jge    0x00007f13f8f263c4
 ;; B52: #	out( B80 B53 ) <- in( B51 )  Freq: 39752.8
  0x00007f13f8f25fb9:   mov    %ebx,%r9d
  0x00007f13f8f25fbc:   inc    %r9d
  0x00007f13f8f25fbf:   nop
  0x00007f13f8f25fc0:   cmp    %r10d,%r9d
  0x00007f13f8f25fc3:   jae    0x00007f13f8f263cc
 ;; B53: #	out( B81 B54 ) <- in( B52 )  Freq: 39752.8
  0x00007f13f8f25fc9:   cmp    %r10d,%r11d
  0x00007f13f8f25fcc:   jae    0x00007f13f8f263e0
 ;; B54: #	out( B82 B55 ) <- in( B53 )  Freq: 39752.7
  0x00007f13f8f25fd2:   add    $0x40,%ebx
  0x00007f13f8f25fd5:   cmp    %r10d,%ebx
  0x00007f13f8f25fd8:   jae    0x00007f13f8f263f4
 ;; B55: #	out( B56 ) <- in( B54 B57 ) Loop( B55-B57 ) Freq: 4.07441e+07
  0x00007f13f8f25fde:   mov    %ecx,%ebx
  0x00007f13f8f25fe0:   sub    %r9d,%ebx
  0x00007f13f8f25fe3:   xor    %r11d,%r11d
  0x00007f13f8f25fe6:   cmp    %r9d,%ecx
  0x00007f13f8f25fe9:   cmovl  %r11d,%ebx
  0x00007f13f8f25fed:   cmp    $0xfa00,%ebx
  0x00007f13f8f25ff3:   mov    $0xfa00,%r8d
  0x00007f13f8f25ff9:   cmova  %r8d,%ebx
  0x00007f13f8f25ffd:   add    %r9d,%ebx                    ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC2::doAction@10 (line 27)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@404 (line 89)
 ;; B56: #	out( B56 B57 ) <- in( B55 B56 ) Loop( B56-B56 inner main of N362 reduction strip mined) Freq: 4.17601e+10
  0x00007f13f8f26000:   vmovdqu 0xf0(%rdi,%r9,4),%ymm0
  0x00007f13f8f2600a:   vmovdqu 0xd0(%rdi,%r9,4),%ymm2
  0x00007f13f8f26014:   vmovdqu 0xb0(%rdi,%r9,4),%ymm3
  0x00007f13f8f2601e:   vmovdqu 0x90(%rdi,%r9,4),%ymm4
  0x00007f13f8f26028:   vmovdqu 0x70(%rdi,%r9,4),%ymm5
  0x00007f13f8f2602f:   vmovdqu 0x50(%rdi,%r9,4),%ymm7
  0x00007f13f8f26036:   vmovdqu 0x30(%rdi,%r9,4),%ymm6
  0x00007f13f8f2603d:   vmovdqu 0x10(%rdi,%r9,4),%ymm1
  0x00007f13f8f26044:   vpslld $0x1e,%ymm0,%ymm0
  0x00007f13f8f26049:   vpslld $0x1e,%ymm1,%ymm1            ;   {no_reloc}
  0x00007f13f8f2604e:   vpslld $0x1e,%ymm2,%ymm2
  0x00007f13f8f26053:   vpslld $0x1e,%ymm3,%ymm3
  0x00007f13f8f26058:   vpslld $0x1e,%ymm4,%ymm4
  0x00007f13f8f2605d:   vpslld $0x1e,%ymm5,%ymm5
  0x00007f13f8f26062:   vpslld $0x1e,%ymm6,%ymm6
  0x00007f13f8f26067:   vpslld $0x1e,%ymm7,%ymm7
  0x00007f13f8f2606c:   vphaddd %ymm1,%ymm1,%ymm14
  0x00007f13f8f26071:   vextracti128 $0x1,%ymm14,%xmm15
  0x00007f13f8f26077:   vpaddd %xmm15,%xmm14,%xmm14
  0x00007f13f8f2607c:   vphaddd %xmm14,%xmm14,%xmm14
  0x00007f13f8f26081:   vmovd  %esi,%xmm15
  0x00007f13f8f26085:   vpaddd %xmm15,%xmm14,%xmm14
  0x00007f13f8f2608a:   vmovd  %xmm14,%r11d
  0x00007f13f8f2608f:   vphaddd %ymm6,%ymm6,%ymm1
  0x00007f13f8f26094:   vextracti128 $0x1,%ymm1,%xmm14
  0x00007f13f8f2609a:   vpaddd %xmm14,%xmm1,%xmm1
  0x00007f13f8f2609f:   vphaddd %xmm1,%xmm1,%xmm1
  0x00007f13f8f260a4:   vmovd  %r11d,%xmm14
  0x00007f13f8f260a9:   vpaddd %xmm14,%xmm1,%xmm1
  0x00007f13f8f260ae:   vmovd  %xmm1,%r8d
  0x00007f13f8f260b3:   vphaddd %ymm7,%ymm7,%ymm1
  0x00007f13f8f260b8:   vextracti128 $0x1,%ymm1,%xmm6
  0x00007f13f8f260be:   vpaddd %xmm6,%xmm1,%xmm1
  0x00007f13f8f260c2:   vphaddd %xmm1,%xmm1,%xmm1
  0x00007f13f8f260c7:   vmovd  %r8d,%xmm6
  0x00007f13f8f260cc:   vpaddd %xmm6,%xmm1,%xmm1
  0x00007f13f8f260d0:   vmovd  %xmm1,%r11d
  0x00007f13f8f260d5:   vphaddd %ymm5,%ymm5,%ymm1
  0x00007f13f8f260da:   vextracti128 $0x1,%ymm1,%xmm6
  0x00007f13f8f260e0:   vpaddd %xmm6,%xmm1,%xmm1
  0x00007f13f8f260e4:   vphaddd %xmm1,%xmm1,%xmm1
  0x00007f13f8f260e9:   vmovd  %r11d,%xmm6
  0x00007f13f8f260ee:   vpaddd %xmm6,%xmm1,%xmm1
  0x00007f13f8f260f2:   vmovd  %xmm1,%r8d
  0x00007f13f8f260f7:   vphaddd %ymm4,%ymm4,%ymm1
  0x00007f13f8f260fc:   vextracti128 $0x1,%ymm1,%xmm5
  0x00007f13f8f26102:   vpaddd %xmm5,%xmm1,%xmm1
  0x00007f13f8f26106:   vphaddd %xmm1,%xmm1,%xmm1
  0x00007f13f8f2610b:   vmovd  %r8d,%xmm5
  0x00007f13f8f26110:   vpaddd %xmm5,%xmm1,%xmm1
  0x00007f13f8f26114:   vmovd  %xmm1,%r11d
  0x00007f13f8f26119:   vphaddd %ymm3,%ymm3,%ymm13
  0x00007f13f8f2611e:   vextracti128 $0x1,%ymm13,%xmm8
  0x00007f13f8f26124:   vpaddd %xmm8,%xmm13,%xmm13
  0x00007f13f8f26129:   vphaddd %xmm13,%xmm13,%xmm13
  0x00007f13f8f2612e:   vmovd  %r11d,%xmm8
  0x00007f13f8f26133:   vpaddd %xmm8,%xmm13,%xmm13
  0x00007f13f8f26138:   vmovd  %xmm13,%r8d
  0x00007f13f8f2613d:   vphaddd %ymm2,%ymm2,%ymm11
  0x00007f13f8f26142:   vextracti128 $0x1,%ymm11,%xmm12
  0x00007f13f8f26148:   vpaddd %xmm12,%xmm11,%xmm11
  0x00007f13f8f2614d:   vphaddd %xmm11,%xmm11,%xmm11
  0x00007f13f8f26152:   vmovd  %r8d,%xmm12
  0x00007f13f8f26157:   vpaddd %xmm12,%xmm11,%xmm11
  0x00007f13f8f2615c:   vmovd  %xmm11,%r11d
  0x00007f13f8f26161:   vphaddd %ymm0,%ymm0,%ymm9
  0x00007f13f8f26166:   vextracti128 $0x1,%ymm9,%xmm10
  0x00007f13f8f2616c:   vpaddd %xmm10,%xmm9,%xmm9
  0x00007f13f8f26171:   vphaddd %xmm9,%xmm9,%xmm9
  0x00007f13f8f26176:   vmovd  %r11d,%xmm10
  0x00007f13f8f2617b:   vpaddd %xmm10,%xmm9,%xmm9
  0x00007f13f8f26180:   vmovd  %xmm9,%esi                   ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC2::doAction@17 (line 27)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@404 (line 89)
  0x00007f13f8f26184:   add    $0x40,%r9d                   ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC2::doAction@19 (line 26)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@404 (line 89)
  0x00007f13f8f26188:   cmp    %ebx,%r9d
  0x00007f13f8f2618b:   jl     0x00007f13f8f26000           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC1::doAction@22 (line 17)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@391 (line 88)
 ;; B57: #	out( B55 B58 ) <- in( B56 )  Freq: 4.07441e+07
  0x00007f13f8f26191:   mov    0x3d0(%r15),%r11             ; ImmutableOopMap {rdi=Oop rax=Oop r14=Oop xmm16=Oop xmm17=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) myclassC2::doAction@22 (line 26)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@404 (line 89)
  0x00007f13f8f26198:   test   %eax,(%r11)                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC2::doAction@22 (line 26)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@404 (line 89)
                                                            ;   {poll}
  0x00007f13f8f2619b:   nop
  0x00007f13f8f2619c:   nop
  0x00007f13f8f2619d:   nop
  0x00007f13f8f2619e:   nop
  0x00007f13f8f2619f:   nop
  0x00007f13f8f261a0:   cmp    %ecx,%r9d
  0x00007f13f8f261a3:   jl     0x00007f13f8f25fde
 ;; B58: #	out( B62 B59 ) <- in( B57 )  Freq: 39752.7
  0x00007f13f8f261a9:   mov    %r10d,%r8d
  0x00007f13f8f261ac:   add    $0xfffffff9,%r8d
  0x00007f13f8f261b0:   cmp    %r8d,%ebp
  0x00007f13f8f261b3:   mov    $0x80000000,%ecx
  0x00007f13f8f261b8:   cmovl  %ecx,%r8d
  0x00007f13f8f261bc:   nop
  0x00007f13f8f261bd:   nop
  0x00007f13f8f261be:   nop
  0x00007f13f8f261bf:   nop
  0x00007f13f8f261c0:   cmp    %r8d,%r9d
  0x00007f13f8f261c3:   jge    0x00007f13f8f2621d
 ;; B59: #	out( B92 B60 ) <- in( B58 )  Freq: 19876.3
  0x00007f13f8f261c9:   cmp    %r10d,%r9d
  0x00007f13f8f261cc:   jae    0x00007f13f8f26535
 ;; B60: #	out( B94 B61 ) <- in( B59 )  Freq: 19876.3
  0x00007f13f8f261d2:   mov    %r9d,%r11d
  0x00007f13f8f261d5:   add    $0x7,%r11d
  0x00007f13f8f261d9:   cmp    %r10d,%r11d
  0x00007f13f8f261dc:   nop
  0x00007f13f8f261dd:   nop
  0x00007f13f8f261de:   nop
  0x00007f13f8f261df:   nop
  0x00007f13f8f261e0:   jae    0x00007f13f8f2655d
  0x00007f13f8f261e6:   nop
  0x00007f13f8f261e7:   nop                                 ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC2::doAction@10 (line 27)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@404 (line 89)
 ;; B61: #	out( B61 B62 ) <- in( B60 B61 ) Loop( B61-B61 inner post of N1551 reduction) Freq: 39752.6
  0x00007f13f8f261e8:   vmovdqu 0x10(%rdi,%r9,4),%ymm0
  0x00007f13f8f261ef:   vpslld $0x1e,%ymm0,%ymm0
  0x00007f13f8f261f4:   vphaddd %ymm0,%ymm0,%ymm2
  0x00007f13f8f261f9:   vextracti128 $0x1,%ymm2,%xmm1
  0x00007f13f8f261ff:   vpaddd %xmm1,%xmm2,%xmm2
  0x00007f13f8f26203:   vphaddd %xmm2,%xmm2,%xmm2
  0x00007f13f8f26208:   vmovd  %esi,%xmm1
  0x00007f13f8f2620c:   vpaddd %xmm1,%xmm2,%xmm2
  0x00007f13f8f26210:   vmovd  %xmm2,%esi                   ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC2::doAction@17 (line 27)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@404 (line 89)
  0x00007f13f8f26214:   add    $0x8,%r9d                    ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC2::doAction@19 (line 26)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@404 (line 89)
  0x00007f13f8f26218:   cmp    %r8d,%r9d
  0x00007f13f8f2621b:   jl     0x00007f13f8f261e8           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC2::doAction@7 (line 26)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@404 (line 89)
 ;; B62: #	out( B66 B63 ) <- in( B79 B61 B58 )  Freq: 39752.7
  0x00007f13f8f2621d:   nop
  0x00007f13f8f2621e:   nop
  0x00007f13f8f2621f:   nop
  0x00007f13f8f26220:   cmp    %r10d,%r9d
  0x00007f13f8f26223:   jge    0x00007f13f8f26250
 ;; B63: #	out( B93 B64 ) <- in( B62 )  Freq: 19876.3
  0x00007f13f8f26225:   cmp    %r10d,%r9d
  0x00007f13f8f26228:   jae    0x00007f13f8f26549
 ;; B64: #	out( B95 B65 ) <- in( B63 )  Freq: 19876.3
  0x00007f13f8f2622e:   mov    %r9d,%r8d
  0x00007f13f8f26231:   cmp    %r10d,%r8d
  0x00007f13f8f26234:   jae    0x00007f13f8f26571
  0x00007f13f8f2623a:   nop
  0x00007f13f8f2623b:   nop                                 ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC2::doAction@10 (line 27)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@404 (line 89)
 ;; B65: #	out( B65 B66 ) <- in( B64 B65 ) Loop( B65-B65 inner post of N786 reduction) Freq: 39752.6
  0x00007f13f8f2623c:   mov    0x10(%rdi,%r9,4),%r11d
  0x00007f13f8f26241:   shl    $0x1e,%r11d
  0x00007f13f8f26245:   add    %r11d,%esi                   ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC2::doAction@17 (line 27)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@404 (line 89)
  0x00007f13f8f26248:   inc    %r9d                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC2::doAction@19 (line 26)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@404 (line 89)
  0x00007f13f8f2624b:   cmp    %r10d,%r9d
  0x00007f13f8f2624e:   jl     0x00007f13f8f2623c           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC2::doAction@7 (line 26)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@404 (line 89)
 ;; B66: #	out( B67 ) <- in( B65 B62 )  Freq: 39752.7
  0x00007f13f8f26250:   imul   $0x64,%esi,%ebp
  0x00007f13f8f26253:   add    %r13d,%ebp
  0x00007f13f8f26256:   mov    %edx,%ebx
  0x00007f13f8f26258:   mov    %rdi,%r9
  0x00007f13f8f2625b:   mov    %rax,%rcx
  0x00007f13f8f2625e:   mov    %r14,%rdi
  0x00007f13f8f26261:   vmovq  %xmm16,%rdx
  0x00007f13f8f26267:   vmovq  %xmm17,%rax                  ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - polymorphic::main@407 (line 89)
 ;; B67: #	out( B110 B68 ) <- in( B66 B74 )  Freq: 39791.5
  0x00007f13f8f2626d:   mov    %rax,0x30(%rsp)
  0x00007f13f8f26272:   mov    %rdx,0x28(%rsp)
  0x00007f13f8f26277:   mov    %rdi,0x20(%rsp)
  0x00007f13f8f2627c:   mov    %rcx,0x18(%rsp)
  0x00007f13f8f26281:   mov    %r9,0x10(%rsp)
  0x00007f13f8f26286:   mov    %ebx,0x8(%rsp)               ;*synchronization entry
                                                            ; - polymorphic::doCall@-1 (line 35)
                                                            ; - polymorphic::main@417 (line 90)
  0x00007f13f8f2628a:   mov    %rax,%rsi
  0x00007f13f8f2628d:   mov    %r9,%rdx
  0x00007f13f8f26290:   nop
  0x00007f13f8f26291:   nop
  0x00007f13f8f26292:   vzeroupper 
  0x00007f13f8f26295:   movabs $0xffffffffffffffff,%rax
  0x00007f13f8f2629f:   callq  0x00007f13f8fd3a20           ; ImmutableOopMap {[-98469100]=Oop [-98469092]=Oop [-98469084]=Oop [-98469076]=Oop [-98469068]=Oop }
                                                            ;*invokevirtual doAction {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@417 (line 90)
                                                            ;   {virtual_call}
 ;; B68: #	out( B69 ) <- in( B67 )  Freq: 39790.7
  0x00007f13f8f262a4:   imul   $0x64,%eax,%r13d
  0x00007f13f8f262a8:   add    %ebp,%r13d                   ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - polymorphic::main@420 (line 90)
  0x00007f13f8f262ab:   mov    0x8(%rsp),%ebx
  0x00007f13f8f262af:   mov    0x10(%rsp),%r9
  0x00007f13f8f262b4:   mov    0x18(%rsp),%rcx
  0x00007f13f8f262b9:   mov    0x20(%rsp),%rdi
  0x00007f13f8f262be:   mov    0x28(%rsp),%rdx
  0x00007f13f8f262c3:   mov    0x30(%rsp),%rax
  0x00007f13f8f262c8:   mov    (%rsp),%r8d
  0x00007f13f8f262cc:   mov    0x4(%rsp),%r11d              ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC1::doAction@22 (line 17)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@391 (line 88)
 ;; B69: #	out( B70 ) <- in( B68 B73 ) top-of-loop Freq: 79577.5
  0x00007f13f8f262d1:   mov    0x3d0(%r15),%r10
  0x00007f13f8f262d8:   inc    %ebx                         ; ImmutableOopMap {r9=Oop rcx=Oop rdi=Oop rdx=Oop rax=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) polymorphic::main@426 (line 86)
  0x00007f13f8f262da:   test   %eax,(%r10)                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - polymorphic::main@426 (line 86)
                                                            ;   {poll}
  0x00007f13f8f262dd:   mov    %ebx,(%rsp)                  ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - polymorphic::main@346 (line 86)
 ;; B70: #	out( B83 B71 ) <- in( B16 B69 ) Loop( B70-B69 ) Freq: 79578.9
  0x00007f13f8f262e0:   mov    (%rsp),%ebx
  0x00007f13f8f262e3:   cmp    $0x186a0,%ebx
  0x00007f13f8f262e9:   jge    0x00007f13f8f26408           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - polymorphic::main@350 (line 86)
 ;; B71: #	out( B17 B72 ) <- in( B70 )  Freq: 79578.9
  0x00007f13f8f262ef:   mov    (%rsp),%r10d
  0x00007f13f8f262f3:   and    $0x3,%r10d                   ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - polymorphic::main@356 (line 87)
  0x00007f13f8f262f7:   test   %r10d,%r10d
  0x00007f13f8f262fa:   nop
  0x00007f13f8f262fb:   nop
  0x00007f13f8f262fc:   nop
  0x00007f13f8f262fd:   nop
  0x00007f13f8f262fe:   nop
  0x00007f13f8f262ff:   nop
  0x00007f13f8f26300:   je     0x00007f13f8f25bb3
 ;; B72: #	out( B43 B73 ) <- in( B71 )  Freq: 59680.3
  0x00007f13f8f26306:   cmp    $0x1,%r10d
  0x00007f13f8f2630a:   je     0x00007f13f8f25f21           ;*lookupswitch {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - polymorphic::main@357 (line 87)
 ;; B73: #	out( B69 ) <- in( B72 )  Freq: 39786.9
  0x00007f13f8f26310:   jmp    0x00007f13f8f262d1
 ;; B74: #	out( B67 ) <- in( B46 )  Freq: 38.8238
  0x00007f13f8f26312:   mov    %r13d,%ebp
  0x00007f13f8f26315:   mov    %r8d,(%rsp)
  0x00007f13f8f26319:   mov    %r11d,0x4(%rsp)
  0x00007f13f8f2631e:   nop
  0x00007f13f8f2631f:   nop
  0x00007f13f8f26320:   jmpq   0x00007f13f8f2626d
 ;; B75: #	out( B42 ) <- in( B20 )  Freq: 19.4132
  0x00007f13f8f26325:   mov    %r13d,%r10d
  0x00007f13f8f26328:   jmpq   0x00007f13f8f25f1e
 ;; B76: #	out( N1290 ) <- in( B43 )  Freq: 0.0403202
  0x00007f13f8f2632d:   mov    $0xfffffff6,%esi
  0x00007f13f8f26332:   mov    %rdx,%rbp
  0x00007f13f8f26335:   mov    %r9,(%rsp)
  0x00007f13f8f26339:   nop
  0x00007f13f8f2633a:   nop
  0x00007f13f8f2633b:   nop
  0x00007f13f8f2633c:   vzeroupper 
  0x00007f13f8f2633f:   callq  0x00007f13f8fdf820           ; ImmutableOopMap {rbp=Oop [-98469116]=Oop }
                                                            ;*invokevirtual doCall {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - polymorphic::main@404 (line 89)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f13f8f26344:   movabs $0x7f13fdc92548,%rdi         ;   {external_word}
  0x00007f13f8f2634e:   and    $0xfffffffffffffff0,%rsp
  0x00007f13f8f26352:   callq  0x00007f13fd3b2bb4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f13f8f26357:   hlt    
 ;; B77: #	out( N1290 ) <- in( B44 )  Freq: 0.0403202
  0x00007f13f8f26358:   mov    $0xfffffff6,%esi
  0x00007f13f8f2635d:   mov    %r9,%rbp
  0x00007f13f8f26360:   vzeroupper 
  0x00007f13f8f26363:   callq  0x00007f13f8fdf820           ; ImmutableOopMap {rbp=Oop }
                                                            ;*invokevirtual doAction {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@404 (line 89)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f13f8f26368:   movabs $0x7f13fdc92548,%rdi         ;   {external_word}
  0x00007f13f8f26372:   and    $0xfffffffffffffff0,%rsp
  0x00007f13f8f26376:   callq  0x00007f13fd3b2bb4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f13f8f2637b:   hlt                                 ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC2::doAction@7 (line 26)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@404 (line 89)
 ;; B78: #	out( N1290 ) <- in( B47 )  Freq: 0.0402808
  0x00007f13f8f2637c:   mov    $0xffffff76,%esi
  0x00007f13f8f26381:   mov    %rcx,(%rsp)
  0x00007f13f8f26385:   mov    %rdi,0x8(%rsp)
  0x00007f13f8f2638a:   mov    %rdx,0x10(%rsp)
  0x00007f13f8f2638f:   mov    %rax,0x18(%rsp)
  0x00007f13f8f26394:   mov    %ebx,0x20(%rsp)
  0x00007f13f8f26398:   mov    %r13d,0x24(%rsp)
  0x00007f13f8f2639d:   mov    %r9,0x28(%rsp)
  0x00007f13f8f263a2:   mov    %r10d,0x30(%rsp)
  0x00007f13f8f263a7:   nop
  0x00007f13f8f263a8:   vzeroupper 
  0x00007f13f8f263ab:   callq  0x00007f13f8fdf820           ; ImmutableOopMap {[-98469116]=Oop [-98469108]=Oop [-98469100]=Oop [-98469092]=Oop [-98469076]=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) myclassC2::doAction@7 (line 26)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@404 (line 89)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f13f8f263b0:   movabs $0x7f13fdc92548,%rdi         ;   {external_word}
  0x00007f13f8f263ba:   and    $0xfffffffffffffff0,%rsp
  0x00007f13f8f263be:   callq  0x00007f13fd3b2bb4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f13f8f263c3:   hlt                                 ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC2::doAction@7 (line 26)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@404 (line 89)
 ;; B79: #	out( B62 ) <- in( B51 )  Freq: 0.0402807
  0x00007f13f8f263c4:   mov    %r11d,%r9d
  0x00007f13f8f263c7:   jmpq   0x00007f13f8f2621d
 ;; B80: #	out( N1290 ) <- in( B52 )  Freq: 0.0402807
  0x00007f13f8f263cc:   movabs $0x7f13fde3d268,%rdi         ;   {external_word}
  0x00007f13f8f263d6:   and    $0xfffffffffffffff0,%rsp
  0x00007f13f8f263da:   callq  0x00007f13fd3b2bb4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f13f8f263df:   hlt    
 ;; B81: #	out( N1290 ) <- in( B53 )  Freq: 0.0402806
  0x00007f13f8f263e0:   movabs $0x7f13fde3d268,%rdi         ;   {external_word}
  0x00007f13f8f263ea:   and    $0xfffffffffffffff0,%rsp
  0x00007f13f8f263ee:   callq  0x00007f13fd3b2bb4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f13f8f263f3:   hlt    
 ;; B82: #	out( N1290 ) <- in( B54 )  Freq: 0.0402806
  0x00007f13f8f263f4:   movabs $0x7f13fde3d268,%rdi         ;   {external_word}
  0x00007f13f8f263fe:   and    $0xfffffffffffffff0,%rsp
  0x00007f13f8f26402:   callq  0x00007f13fd3b2bb4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f13f8f26407:   hlt                                 ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - polymorphic::main@350 (line 86)
 ;; B83: #	out( N1290 ) <- in( B70 )  Freq: 0.0379462
  0x00007f13f8f26408:   mov    $0xffffff45,%esi
  0x00007f13f8f2640d:   mov    %r9,%rbp
  0x00007f13f8f26410:   mov    %rcx,(%rsp)
  0x00007f13f8f26414:   mov    %rdi,0x8(%rsp)
  0x00007f13f8f26419:   mov    %rdx,0x10(%rsp)
  0x00007f13f8f2641e:   mov    %rax,0x18(%rsp)
  0x00007f13f8f26423:   mov    %ebx,0x20(%rsp)
  0x00007f13f8f26427:   nop
  0x00007f13f8f26428:   vzeroupper 
  0x00007f13f8f2642b:   callq  0x00007f13f8fdf820           ; ImmutableOopMap {rbp=Oop [-98469116]=Oop [-98469108]=Oop [-98469100]=Oop [-98469092]=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) polymorphic::main@350 (line 86)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f13f8f26430:   movabs $0x7f13fdc92548,%rdi         ;   {external_word}
  0x00007f13f8f2643a:   and    $0xfffffffffffffff0,%rsp
  0x00007f13f8f2643e:   callq  0x00007f13fd3b2bb4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f13f8f26443:   hlt    
 ;; B84: #	out( N1290 ) <- in( B17 )  Freq: 0.0201628
  0x00007f13f8f26444:   mov    $0xfffffff6,%esi
  0x00007f13f8f26449:   mov    %rdi,%rbp
  0x00007f13f8f2644c:   mov    %r9,(%rsp)
  0x00007f13f8f26450:   vzeroupper 
  0x00007f13f8f26453:   callq  0x00007f13f8fdf820           ; ImmutableOopMap {rbp=Oop [-98469116]=Oop }
                                                            ;*invokevirtual doCall {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - polymorphic::main@391 (line 88)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f13f8f26458:   movabs $0x7f13fdc92548,%rdi         ;   {external_word}
  0x00007f13f8f26462:   and    $0xfffffffffffffff0,%rsp
  0x00007f13f8f26466:   callq  0x00007f13fd3b2bb4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f13f8f2646b:   hlt    
 ;; B85: #	out( N1290 ) <- in( B18 )  Freq: 0.0201628
  0x00007f13f8f2646c:   mov    $0xfffffff6,%esi
  0x00007f13f8f26471:   mov    %r9,%rbp
  0x00007f13f8f26474:   vzeroupper 
  0x00007f13f8f26477:   callq  0x00007f13f8fdf820           ; ImmutableOopMap {rbp=Oop }
                                                            ;*invokevirtual doAction {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@391 (line 88)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f13f8f2647c:   movabs $0x7f13fdc92548,%rdi         ;   {external_word}
  0x00007f13f8f26486:   and    $0xfffffffffffffff0,%rsp
  0x00007f13f8f2648a:   callq  0x00007f13fd3b2bb4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f13f8f2648f:   hlt                                 ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC1::doAction@7 (line 17)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@391 (line 88)
 ;; B86: #	out( N1290 ) <- in( B21 )  Freq: 0.0201431
  0x00007f13f8f26490:   mov    $0xffffff76,%esi
  0x00007f13f8f26495:   mov    %rcx,(%rsp)
  0x00007f13f8f26499:   mov    %rdi,0x8(%rsp)
  0x00007f13f8f2649e:   mov    %rdx,0x10(%rsp)
  0x00007f13f8f264a3:   mov    %rax,0x18(%rsp)
  0x00007f13f8f264a8:   mov    %ebx,0x20(%rsp)
  0x00007f13f8f264ac:   mov    %r13d,0x24(%rsp)
  0x00007f13f8f264b1:   mov    %r9,0x28(%rsp)
  0x00007f13f8f264b6:   mov    %r10d,0x30(%rsp)
  0x00007f13f8f264bb:   nop
  0x00007f13f8f264bc:   vzeroupper 
  0x00007f13f8f264bf:   callq  0x00007f13f8fdf820           ; ImmutableOopMap {[-98469116]=Oop [-98469108]=Oop [-98469100]=Oop [-98469092]=Oop [-98469076]=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) myclassC1::doAction@7 (line 17)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@391 (line 88)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f13f8f264c4:   movabs $0x7f13fdc92548,%rdi         ;   {external_word}
  0x00007f13f8f264ce:   and    $0xfffffffffffffff0,%rsp
  0x00007f13f8f264d2:   callq  0x00007f13fd3b2bb4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f13f8f264d7:   hlt                                 ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC1::doAction@7 (line 17)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@391 (line 88)
 ;; B87: #	out( B37 ) <- in( B25 )  Freq: 0.0201431
  0x00007f13f8f264d8:   mov    %r11d,%r9d
  0x00007f13f8f264db:   nop
  0x00007f13f8f264dc:   nop
  0x00007f13f8f264dd:   nop
  0x00007f13f8f264de:   nop
  0x00007f13f8f264df:   nop
  0x00007f13f8f264e0:   jmpq   0x00007f13f8f25ec5
 ;; B88: #	out( N1290 ) <- in( B26 )  Freq: 0.0201431
  0x00007f13f8f264e5:   movabs $0x7f13fde3d268,%rdi         ;   {external_word}
  0x00007f13f8f264ef:   and    $0xfffffffffffffff0,%rsp
  0x00007f13f8f264f3:   callq  0x00007f13fd3b2bb4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f13f8f264f8:   hlt    
 ;; B89: #	out( N1290 ) <- in( B27 )  Freq: 0.020143
  0x00007f13f8f264f9:   movabs $0x7f13fde3d268,%rdi         ;   {external_word}
  0x00007f13f8f26503:   and    $0xfffffffffffffff0,%rsp
  0x00007f13f8f26507:   callq  0x00007f13fd3b2bb4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f13f8f2650c:   hlt    
 ;; B90: #	out( N1290 ) <- in( B28 )  Freq: 0.020143
  0x00007f13f8f2650d:   movabs $0x7f13fde3d268,%rdi         ;   {external_word}
  0x00007f13f8f26517:   and    $0xfffffffffffffff0,%rsp
  0x00007f13f8f2651b:   callq  0x00007f13fd3b2bb4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f13f8f26520:   hlt    
 ;; B91: #	out( N1290 ) <- in( B29 )  Freq: 0.020143
  0x00007f13f8f26521:   movabs $0x7f13fde3d268,%rdi         ;   {external_word}
  0x00007f13f8f2652b:   and    $0xfffffffffffffff0,%rsp
  0x00007f13f8f2652f:   callq  0x00007f13fd3b2bb4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f13f8f26534:   hlt    
 ;; B92: #	out( N1290 ) <- in( B59 )  Freq: 0.0201403
  0x00007f13f8f26535:   movabs $0x7f13fde3d268,%rdi         ;   {external_word}
  0x00007f13f8f2653f:   and    $0xfffffffffffffff0,%rsp
  0x00007f13f8f26543:   callq  0x00007f13fd3b2bb4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f13f8f26548:   hlt    
 ;; B93: #	out( N1290 ) <- in( B63 )  Freq: 0.0201403
  0x00007f13f8f26549:   movabs $0x7f13fde3d268,%rdi         ;   {external_word}
  0x00007f13f8f26553:   and    $0xfffffffffffffff0,%rsp
  0x00007f13f8f26557:   callq  0x00007f13fd3b2bb4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f13f8f2655c:   hlt    
 ;; B94: #	out( N1290 ) <- in( B60 )  Freq: 0.0201403
  0x00007f13f8f2655d:   movabs $0x7f13fde3d268,%rdi         ;   {external_word}
  0x00007f13f8f26567:   and    $0xfffffffffffffff0,%rsp
  0x00007f13f8f2656b:   callq  0x00007f13fd3b2bb4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f13f8f26570:   hlt    
 ;; B95: #	out( N1290 ) <- in( B64 )  Freq: 0.0201403
  0x00007f13f8f26571:   movabs $0x7f13fde3d268,%rdi         ;   {external_word}
  0x00007f13f8f2657b:   and    $0xfffffffffffffff0,%rsp
  0x00007f13f8f2657f:   callq  0x00007f13fd3b2bb4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f13f8f26584:   hlt    
 ;; B96: #	out( N1290 ) <- in( B34 )  Freq: 0.0100715
  0x00007f13f8f26585:   movabs $0x7f13fde3d268,%rdi         ;   {external_word}
  0x00007f13f8f2658f:   and    $0xfffffffffffffff0,%rsp
  0x00007f13f8f26593:   callq  0x00007f13fd3b2bb4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f13f8f26598:   hlt    
 ;; B97: #	out( N1290 ) <- in( B38 )  Freq: 0.0100715
  0x00007f13f8f26599:   movabs $0x7f13fde3d268,%rdi         ;   {external_word}
  0x00007f13f8f265a3:   and    $0xfffffffffffffff0,%rsp
  0x00007f13f8f265a7:   callq  0x00007f13fd3b2bb4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f13f8f265ac:   hlt    
 ;; B98: #	out( N1290 ) <- in( B35 )  Freq: 0.0100715
  0x00007f13f8f265ad:   movabs $0x7f13fde3d268,%rdi         ;   {external_word}
  0x00007f13f8f265b7:   and    $0xfffffffffffffff0,%rsp
  0x00007f13f8f265bb:   callq  0x00007f13fd3b2bb4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f13f8f265c0:   hlt    
 ;; B99: #	out( N1290 ) <- in( B39 )  Freq: 0.0100715
  0x00007f13f8f265c1:   movabs $0x7f13fde3d268,%rdi         ;   {external_word}
  0x00007f13f8f265cb:   and    $0xfffffffffffffff0,%rsp
  0x00007f13f8f265cf:   callq  0x00007f13fd3b2bb4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f13f8f265d4:   hlt    
 ;; B100: #	out( B4 ) <- in( B1 )  Freq: 0.000999987
  0x00007f13f8f265d5:   xor    %r9d,%r9d
  0x00007f13f8f265d8:   jmpq   0x00007f13f8f25add
 ;; B101: #	out( B7 ) <- in( B4 )  Freq: 0.000999986
  0x00007f13f8f265dd:   xor    %ecx,%ecx
  0x00007f13f8f265df:   nop
  0x00007f13f8f265e0:   jmpq   0x00007f13f8f25afd
 ;; B102: #	out( B10 ) <- in( B7 )  Freq: 0.000999985
  0x00007f13f8f265e5:   xor    %edi,%edi
  0x00007f13f8f265e7:   jmpq   0x00007f13f8f25b1f
 ;; B103: #	out( B13 ) <- in( B10 )  Freq: 0.000999984
  0x00007f13f8f265ec:   xor    %edx,%edx
  0x00007f13f8f265ee:   jmpq   0x00007f13f8f25b41
 ;; B104: #	out( B16 ) <- in( B13 )  Freq: 0.000999983
  0x00007f13f8f265f3:   xor    %eax,%eax
  0x00007f13f8f265f5:   jmpq   0x00007f13f8f25b7a
 ;; B105: #	out( B107 ) <- in( B2 )  Freq: 9.99e-07
  0x00007f13f8f265fa:   mov    %rbp,%r14
  0x00007f13f8f265fd:   mov    0x8(%rsp),%r8
  0x00007f13f8f26602:   mov    0x10(%rsp),%rax
  0x00007f13f8f26607:   mov    0x18(%rsp),%r11
  0x00007f13f8f2660c:   jmp    0x00007f13f8f2661d
 ;; B106: #	out( B107 ) <- in( B5 )  Freq: 9.98999e-07
  0x00007f13f8f2660e:   mov    0x8(%rsp),%r8
  0x00007f13f8f26613:   mov    0x10(%rsp),%rax
  0x00007f13f8f26618:   mov    0x18(%rsp),%r11
 ;; B107: #	out( N1290 ) <- in( B105 B106 B108 B109 B14 )  Freq: 4.99499e-06
  0x00007f13f8f2661d:   mov    $0xffffff8d,%esi
  0x00007f13f8f26622:   mov    %r13d,%ebp
  0x00007f13f8f26625:   mov    %rbx,0x8(%rsp)
  0x00007f13f8f2662a:   mov    %r14,0x10(%rsp)
  0x00007f13f8f2662f:   mov    %r8,0x18(%rsp)
  0x00007f13f8f26634:   mov    %rax,0x20(%rsp)
  0x00007f13f8f26639:   mov    %r11,0x28(%rsp)
  0x00007f13f8f2663e:   nop
  0x00007f13f8f2663f:   nop
  0x00007f13f8f26640:   vzeroupper 
  0x00007f13f8f26643:   callq  0x00007f13f8fdf820           ; ImmutableOopMap {[-98469108]=Oop [-98469100]=Oop [-98469092]=Oop [-98469084]=Oop [-98469076]=Oop }
                                                            ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - polymorphic::main@346 (line 86)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f13f8f26648:   movabs $0x7f13fdc92548,%rdi         ;   {external_word}
  0x00007f13f8f26652:   and    $0xfffffffffffffff0,%rsp
  0x00007f13f8f26656:   callq  0x00007f13fd3b2bb4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f13f8f2665b:   hlt                                 ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - polymorphic::main@346 (line 86)
 ;; B108: #	out( B107 ) <- in( B8 )  Freq: 9.98998e-07
  0x00007f13f8f2665c:   mov    0x10(%rsp),%rax
  0x00007f13f8f26661:   mov    0x18(%rsp),%r11
  0x00007f13f8f26666:   jmp    0x00007f13f8f2661d
 ;; B109: #	out( B107 ) <- in( B11 )  Freq: 9.98997e-07
  0x00007f13f8f26668:   mov    0x18(%rsp),%r11
  0x00007f13f8f2666d:   jmp    0x00007f13f8f2661d           ;*invokevirtual doAction {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@417 (line 90)
 ;; B110: #	out( N1290 ) <- in( B67 )  Freq: 0.397915
  0x00007f13f8f2666f:   mov    %rax,%rsi
  0x00007f13f8f26672:   vzeroupper 
  0x00007f13f8f26675:   add    $0x50,%rsp
  0x00007f13f8f26679:   pop    %rbp
  0x00007f13f8f2667a:   jmpq   0x00007f13f8f42000           ;   {runtime_call _rethrow_Java}
 ;; B111: #	out( N1290 ) <- in( B45 )  Freq: 0.0403201
  0x00007f13f8f2667f:   mov    $0xfffffff6,%esi
  0x00007f13f8f26684:   vzeroupper 
  0x00007f13f8f26687:   callq  0x00007f13f8fdf820           ; ImmutableOopMap {}
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC2::doAction@6 (line 26)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@404 (line 89)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f13f8f2668c:   movabs $0x7f13fdc92548,%rdi         ;   {external_word}
  0x00007f13f8f26696:   and    $0xfffffffffffffff0,%rsp
  0x00007f13f8f2669a:   callq  0x00007f13fd3b2bb4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f13f8f2669f:   hlt    
 ;; B112: #	out( N1290 ) <- in( B19 )  Freq: 0.0201628
  0x00007f13f8f266a0:   mov    $0xfffffff6,%esi
  0x00007f13f8f266a5:   nop
  0x00007f13f8f266a6:   nop
  0x00007f13f8f266a7:   nop
  0x00007f13f8f266a8:   vzeroupper 
  0x00007f13f8f266ab:   callq  0x00007f13f8fdf820           ; ImmutableOopMap {}
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC1::doAction@6 (line 17)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@391 (line 88)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f13f8f266b0:   movabs $0x7f13fdc92548,%rdi         ;   {external_word}
  0x00007f13f8f266ba:   and    $0xfffffffffffffff0,%rsp
  0x00007f13f8f266be:   callq  0x00007f13fd3b2bb4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f13f8f266c3:   hlt                                 ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC2::doAction@22 (line 26)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@404 (line 89)
  0x00007f13f8f266c4:   hlt    
  0x00007f13f8f266c5:   hlt    
  0x00007f13f8f266c6:   hlt    
  0x00007f13f8f266c7:   hlt    
[Exception Handler]
  0x00007f13f8f266c8:   jmpq   0x00007f13f8f747a0           ;   {no_reloc}
[Deopt Handler Code]
  0x00007f13f8f266cd:   callq  0x00007f13f8f266d2
  0x00007f13f8f266d2:   subq   $0x5,(%rsp)
  0x00007f13f8f266d7:   jmpq   0x00007f13f8fdfb40           ;   {runtime_call DeoptimizationBlob}
  0x00007f13f8f266dc:   hlt    
  0x00007f13f8f266dd:   hlt    
  0x00007f13f8f266de:   hlt    
  0x00007f13f8f266df:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Oops:
  0x00007f13f8f266e0:   0x000000011f8a7ec8 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x000000011f8a7ec8}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Metadata:
  0x00007f13f8f266e8:   0x0000000800040dc8 {type array int}
  0x00007f13f8f266f0:   0x00000008000c1000 'polymorphic'
  0x00007f13f8f266f8:   0x00000008000c1420 'myclassC1'
  0x00007f13f8f26700:   0x00000008000c1638 'myclassC2'
  0x00007f13f8f26708:   0x00007f13ac511858 {method} {0x00007f13ac511858} 'main' '([Ljava/lang/String;)V' in 'polymorphic'
  0x00007f13f8f26710:   0x00007f13ac511540 {method} {0x00007f13ac511540} 'doCall' '(LmyclassP;[I)I' in 'polymorphic'
  0x00007f13f8f26718:   0x00007f13ac511eb8 {method} {0x00007f13ac511eb8} 'doAction' '([I)I' in 'myclassC1'
  0x00007f13f8f26720:   0x00007f13ac7001a0 {method} {0x00007f13ac7001a0} 'doAction' '([I)I' in 'myclassC2'
  0x00007f13f8f26728:   0x00000008000c1210 'myclassP'
  0x00007f13f8f26730:   0x00007f13ac511bf0 {method} {0x00007f13ac511bf0} 'doAction' '([I)I' in 'myclassP'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
pc-bytecode offsets:
PcDesc(pc=0x00007f13f8f25a5f offset=ffffffff bits=0):
PcDesc(pc=0x00007f13f8f25b7a offset=11a bits=0):
   polymorphic::main@346 (line 86)
PcDesc(pc=0x00007f13f8f25bbc offset=15c bits=0):
   polymorphic::main@391 (line 88)
PcDesc(pc=0x00007f13f8f25bc9 offset=169 bits=0):
   polymorphic::doCall@2 (line 35)
   polymorphic::main@391 (line 88)
PcDesc(pc=0x00007f13f8f25bcd offset=16d bits=0):
   myclassC1::doAction@6 (line 17)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@391 (line 88)
PcDesc(pc=0x00007f13f8f25bd6 offset=176 bits=0):
   myclassC1::doAction@7 (line 17)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@391 (line 88)
PcDesc(pc=0x00007f13f8f25c1b offset=1bb bits=0):
   myclassC1::doAction@10 (line 18)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@391 (line 88)
PcDesc(pc=0x00007f13f8f25c27 offset=1c7 bits=0):
   myclassC1::doAction@17 (line 18)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@391 (line 88)
PcDesc(pc=0x00007f13f8f25c2d offset=1cd bits=0):
   myclassC1::doAction@19 (line 17)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@391 (line 88)
PcDesc(pc=0x00007f13f8f25c32 offset=1d2 bits=0):
   myclassC1::doAction@7 (line 17)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@391 (line 88)
PcDesc(pc=0x00007f13f8f25cb0 offset=250 bits=0):
   myclassC1::doAction@10 (line 18)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@391 (line 88)
PcDesc(pc=0x00007f13f8f25e34 offset=3d4 bits=0):
   myclassC1::doAction@17 (line 18)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@391 (line 88)
PcDesc(pc=0x00007f13f8f25e38 offset=3d8 bits=0):
   myclassC1::doAction@19 (line 17)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@391 (line 88)
PcDesc(pc=0x00007f13f8f25e46 offset=3e6 bits=0):
   myclassC1::doAction@22 (line 17)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@391 (line 88)
PcDesc(pc=0x00007f13f8f25e4d offset=3ed bits=1):
   myclassC1::doAction@22 (line 17)  reexecute=true
   Locals
    - l0: empty
    - l1: reg rdi [14],oop
    - l2: reg rsi [12],int
    - l3: reg r9 [18],int
   polymorphic::doCall@2 (line 35)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   polymorphic::main@391 (line 88)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: reg rdi [14],oop
    - l4: reg rax [0],oop
    - l5: empty
    - l6: reg r14 [28],oop
    - l7: reg xmm16 [304],oop
    - l8: reg xmm17 [320],oop
    - l9: reg rdx [4],int
    - l10: empty
    - l11: empty
    - l12: empty
   Expression stack
    - @0: reg r13 [26],int
PcDesc(pc=0x00007f13f8f25e50 offset=3f0 bits=0):
   myclassC1::doAction@22 (line 17)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@391 (line 88)
PcDesc(pc=0x00007f13f8f25e90 offset=430 bits=0):
   myclassC1::doAction@10 (line 18)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@391 (line 88)
PcDesc(pc=0x00007f13f8f25ebc offset=45c bits=0):
   myclassC1::doAction@17 (line 18)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@391 (line 88)
PcDesc(pc=0x00007f13f8f25ec0 offset=460 bits=0):
   myclassC1::doAction@19 (line 17)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@391 (line 88)
PcDesc(pc=0x00007f13f8f25ec5 offset=465 bits=0):
   myclassC1::doAction@7 (line 17)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@391 (line 88)
PcDesc(pc=0x00007f13f8f25ee0 offset=480 bits=0):
   myclassC1::doAction@10 (line 18)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@391 (line 88)
PcDesc(pc=0x00007f13f8f25eec offset=48c bits=0):
   myclassC1::doAction@17 (line 18)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@391 (line 88)
PcDesc(pc=0x00007f13f8f25eef offset=48f bits=0):
   myclassC1::doAction@19 (line 17)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@391 (line 88)
PcDesc(pc=0x00007f13f8f25ef4 offset=494 bits=0):
   myclassC1::doAction@7 (line 17)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@391 (line 88)
PcDesc(pc=0x00007f13f8f25f1e offset=4be bits=0):
   polymorphic::main@394 (line 88)
PcDesc(pc=0x00007f13f8f25f21 offset=4c1 bits=0):
   polymorphic::main@397 (line 89)
PcDesc(pc=0x00007f13f8f25f2a offset=4ca bits=0):
   polymorphic::main@404 (line 89)
PcDesc(pc=0x00007f13f8f25f33 offset=4d3 bits=0):
   polymorphic::doCall@2 (line 35)
   polymorphic::main@404 (line 89)
PcDesc(pc=0x00007f13f8f25f37 offset=4d7 bits=0):
   myclassC2::doAction@6 (line 26)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@404 (line 89)
PcDesc(pc=0x00007f13f8f25f46 offset=4e6 bits=0):
   myclassC2::doAction@7 (line 26)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@404 (line 89)
PcDesc(pc=0x00007f13f8f25f82 offset=522 bits=0):
   myclassC2::doAction@10 (line 27)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@404 (line 89)
PcDesc(pc=0x00007f13f8f25f8e offset=52e bits=0):
   myclassC2::doAction@17 (line 27)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@404 (line 89)
PcDesc(pc=0x00007f13f8f25f94 offset=534 bits=0):
   myclassC2::doAction@19 (line 26)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@404 (line 89)
PcDesc(pc=0x00007f13f8f25f99 offset=539 bits=0):
   myclassC2::doAction@7 (line 26)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@404 (line 89)
PcDesc(pc=0x00007f13f8f26000 offset=5a0 bits=0):
   myclassC2::doAction@10 (line 27)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@404 (line 89)
PcDesc(pc=0x00007f13f8f26184 offset=724 bits=0):
   myclassC2::doAction@17 (line 27)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@404 (line 89)
PcDesc(pc=0x00007f13f8f26188 offset=728 bits=0):
   myclassC2::doAction@19 (line 26)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@404 (line 89)
PcDesc(pc=0x00007f13f8f26191 offset=731 bits=0):
   myclassC1::doAction@22 (line 17)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@391 (line 88)
PcDesc(pc=0x00007f13f8f26198 offset=738 bits=1):
   myclassC2::doAction@22 (line 26)  reexecute=true
   Locals
    - l0: empty
    - l1: reg rdi [14],oop
    - l2: reg rsi [12],int
    - l3: reg r9 [18],int
   polymorphic::doCall@2 (line 35)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   polymorphic::main@404 (line 89)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: reg rdi [14],oop
    - l4: reg rax [0],oop
    - l5: empty
    - l6: reg r14 [28],oop
    - l7: reg xmm16 [304],oop
    - l8: reg xmm17 [320],oop
    - l9: reg rdx [4],int
    - l10: empty
    - l11: empty
    - l12: empty
   Expression stack
    - @0: reg r13 [26],int
PcDesc(pc=0x00007f13f8f2619b offset=73b bits=0):
   myclassC2::doAction@22 (line 26)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@404 (line 89)
PcDesc(pc=0x00007f13f8f261e8 offset=788 bits=0):
   myclassC2::doAction@10 (line 27)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@404 (line 89)
PcDesc(pc=0x00007f13f8f26214 offset=7b4 bits=0):
   myclassC2::doAction@17 (line 27)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@404 (line 89)
PcDesc(pc=0x00007f13f8f26218 offset=7b8 bits=0):
   myclassC2::doAction@19 (line 26)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@404 (line 89)
PcDesc(pc=0x00007f13f8f2621d offset=7bd bits=0):
   myclassC2::doAction@7 (line 26)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@404 (line 89)
PcDesc(pc=0x00007f13f8f2623c offset=7dc bits=0):
   myclassC2::doAction@10 (line 27)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@404 (line 89)
PcDesc(pc=0x00007f13f8f26248 offset=7e8 bits=0):
   myclassC2::doAction@17 (line 27)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@404 (line 89)
PcDesc(pc=0x00007f13f8f2624b offset=7eb bits=0):
   myclassC2::doAction@19 (line 26)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@404 (line 89)
PcDesc(pc=0x00007f13f8f26250 offset=7f0 bits=0):
   myclassC2::doAction@7 (line 26)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@404 (line 89)
PcDesc(pc=0x00007f13f8f2626d offset=80d bits=0):
   polymorphic::main@407 (line 89)
PcDesc(pc=0x00007f13f8f2628a offset=82a bits=0):
   polymorphic::doCall@-1 (line 35)
   polymorphic::main@417 (line 90)
PcDesc(pc=0x00007f13f8f262a4 offset=844 bits=0):
   polymorphic::doCall@2 (line 35)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   polymorphic::main@417 (line 90)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: stack[16],oop
    - l4: stack[24],oop
    - l5: empty
    - l6: stack[32],oop
    - l7: stack[40],oop
    - l8: stack[48],oop
    - l9: stack[8]
    - l10: empty
    - l11: empty
    - l12: empty
   Expression stack
    - @0: reg rbp [10],int
PcDesc(pc=0x00007f13f8f262ab offset=84b bits=0):
   polymorphic::main@420 (line 90)
PcDesc(pc=0x00007f13f8f262d1 offset=871 bits=0):
   myclassC1::doAction@22 (line 17)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@391 (line 88)
PcDesc(pc=0x00007f13f8f262da offset=87a bits=1):
   polymorphic::main@426 (line 86)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: reg r9 [18],oop
    - l4: reg rcx [2],oop
    - l5: reg r13 [26],int
    - l6: reg rdi [14],oop
    - l7: reg rdx [4],oop
    - l8: reg rax [0],oop
    - l9: reg rbx [6],int
    - l10: empty
    - l11: empty
    - l12: empty
PcDesc(pc=0x00007f13f8f262dd offset=87d bits=0):
   polymorphic::main@426 (line 86)
PcDesc(pc=0x00007f13f8f262e0 offset=880 bits=0):
   polymorphic::main@346 (line 86)
PcDesc(pc=0x00007f13f8f262ef offset=88f bits=0):
   polymorphic::main@350 (line 86)
PcDesc(pc=0x00007f13f8f262f7 offset=897 bits=0):
   polymorphic::main@356 (line 87)
PcDesc(pc=0x00007f13f8f26310 offset=8b0 bits=0):
   polymorphic::main@357 (line 87)
PcDesc(pc=0x00007f13f8f26344 offset=8e4 bits=0):
   polymorphic::main@404 (line 89)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
   Expression stack
    - @0: empty
    - @1: NULL
    - @2: reg rbp [10],oop
    - @3: stack[0],oop
PcDesc(pc=0x00007f13f8f26368 offset=908 bits=0):
   polymorphic::doCall@2 (line 35)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   Expression stack
    - @0: NULL
    - @1: reg rbp [10],oop
   polymorphic::main@404 (line 89)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
   Expression stack
    - @0: empty
PcDesc(pc=0x00007f13f8f2637c offset=91c bits=0):
   myclassC2::doAction@7 (line 26)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@404 (line 89)
PcDesc(pc=0x00007f13f8f263b0 offset=950 bits=1):
   myclassC2::doAction@7 (line 26)  reexecute=true
   Locals
    - l0: empty
    - l1: stack[40],oop
    - l2: 0
    - l3: 0
   Expression stack
    - @0: 0
    - @1: stack[48]
   polymorphic::doCall@2 (line 35)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   polymorphic::main@404 (line 89)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: stack[40],oop
    - l4: stack[0],oop
    - l5: empty
    - l6: stack[8],oop
    - l7: stack[16],oop
    - l8: stack[24],oop
    - l9: stack[32]
    - l10: empty
    - l11: empty
    - l12: empty
   Expression stack
    - @0: stack[36]
PcDesc(pc=0x00007f13f8f263c4 offset=964 bits=0):
   myclassC2::doAction@7 (line 26)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@404 (line 89)
PcDesc(pc=0x00007f13f8f26408 offset=9a8 bits=0):
   polymorphic::main@350 (line 86)
PcDesc(pc=0x00007f13f8f26430 offset=9d0 bits=1):
   polymorphic::main@350 (line 86)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: reg rbp [10],oop
    - l4: stack[0],oop
    - l5: empty
    - l6: stack[8],oop
    - l7: stack[16],oop
    - l8: stack[24],oop
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
   Expression stack
    - @0: stack[32]
    - @1: 100000
PcDesc(pc=0x00007f13f8f26458 offset=9f8 bits=0):
   polymorphic::main@391 (line 88)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
   Expression stack
    - @0: empty
    - @1: NULL
    - @2: reg rbp [10],oop
    - @3: stack[0],oop
PcDesc(pc=0x00007f13f8f2647c offset=a1c bits=0):
   polymorphic::doCall@2 (line 35)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   Expression stack
    - @0: NULL
    - @1: reg rbp [10],oop
   polymorphic::main@391 (line 88)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
   Expression stack
    - @0: empty
PcDesc(pc=0x00007f13f8f26490 offset=a30 bits=0):
   myclassC1::doAction@7 (line 17)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@391 (line 88)
PcDesc(pc=0x00007f13f8f264c4 offset=a64 bits=1):
   myclassC1::doAction@7 (line 17)  reexecute=true
   Locals
    - l0: empty
    - l1: stack[40],oop
    - l2: 0
    - l3: 0
   Expression stack
    - @0: 0
    - @1: stack[48]
   polymorphic::doCall@2 (line 35)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   polymorphic::main@391 (line 88)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: stack[40],oop
    - l4: stack[0],oop
    - l5: empty
    - l6: stack[8],oop
    - l7: stack[16],oop
    - l8: stack[24],oop
    - l9: stack[32]
    - l10: empty
    - l11: empty
    - l12: empty
   Expression stack
    - @0: stack[36]
PcDesc(pc=0x00007f13f8f264d8 offset=a78 bits=0):
   myclassC1::doAction@7 (line 17)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@391 (line 88)
PcDesc(pc=0x00007f13f8f26648 offset=be8 bits=0):
   polymorphic::main@346 (line 86)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: stack[8],oop
    - l4: stack[16],oop
    - l5: reg rbp [10],int
    - l6: stack[24],oop
    - l7: stack[32],oop
    - l8: stack[40],oop
    - l9: stack[0]
    - l10: empty
    - l11: empty
    - l12: empty
PcDesc(pc=0x00007f13f8f2665c offset=bfc bits=0):
   polymorphic::main@346 (line 86)
PcDesc(pc=0x00007f13f8f2666f offset=c0f bits=0):
   polymorphic::doCall@2 (line 35)
   polymorphic::main@417 (line 90)
PcDesc(pc=0x00007f13f8f2668c offset=c2c bits=0):
   myclassC2::doAction@6 (line 26)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: empty
    - @1: NULL
   polymorphic::doCall@2 (line 35)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   polymorphic::main@404 (line 89)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
   Expression stack
    - @0: empty
PcDesc(pc=0x00007f13f8f266b0 offset=c50 bits=0):
   myclassC1::doAction@6 (line 17)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: empty
    - @1: NULL
   polymorphic::doCall@2 (line 35)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   polymorphic::main@391 (line 88)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
   Expression stack
    - @0: empty
PcDesc(pc=0x00007f13f8f266c4 offset=c64 bits=0):
   myclassC2::doAction@22 (line 26)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@404 (line 89)
PcDesc(pc=0x00007f13f8f266e1 offset=c81 bits=0):
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
oop maps:ImmutableOopMapSet contains 14 OopMaps

ImmutableOopMap {rdi=Oop rax=Oop r14=Oop xmm16=Oop xmm17=Oop } pc offsets: 1005 1848 
ImmutableOopMap {[-98469100]=Oop [-98469092]=Oop [-98469084]=Oop [-98469076]=Oop [-98469068]=Oop } pc offsets: 2116 
ImmutableOopMap {r9=Oop rcx=Oop rdi=Oop rdx=Oop rax=Oop } pc offsets: 2170 
ImmutableOopMap {rbp=Oop [-98469116]=Oop } pc offsets: 2276 
ImmutableOopMap {rbp=Oop } pc offsets: 2312 
ImmutableOopMap {[-98469116]=Oop [-98469108]=Oop [-98469100]=Oop [-98469092]=Oop [-98469076]=Oop } pc offsets: 2384 
ImmutableOopMap {rbp=Oop [-98469116]=Oop [-98469108]=Oop [-98469100]=Oop [-98469092]=Oop } pc offsets: 2512 
ImmutableOopMap {rbp=Oop [-98469116]=Oop } pc offsets: 2552 
ImmutableOopMap {rbp=Oop } pc offsets: 2588 
ImmutableOopMap {[-98469116]=Oop [-98469108]=Oop [-98469100]=Oop [-98469092]=Oop [-98469076]=Oop } pc offsets: 2660 
ImmutableOopMap {[-98469108]=Oop [-98469100]=Oop [-98469092]=Oop [-98469084]=Oop [-98469076]=Oop } pc offsets: 3048 
ImmutableOopMap {} pc offsets: 3116 3152 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
scopes:
ScopeDesc(pc=0x00007f13f8f25b7a offset=11a):
   polymorphic::main@346 (line 86)
ScopeDesc(pc=0x00007f13f8f25bbc offset=15c):
   polymorphic::main@391 (line 88)
ScopeDesc(pc=0x00007f13f8f25bc9 offset=169):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f25bc9 offset=169):
   polymorphic::main@391 (line 88)
ScopeDesc(pc=0x00007f13f8f25bcd offset=16d):
   myclassC1::doAction@6 (line 17)
ScopeDesc(pc=0x00007f13f8f25bcd offset=16d):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f25bcd offset=16d):
   polymorphic::main@391 (line 88)
ScopeDesc(pc=0x00007f13f8f25bd6 offset=176):
   myclassC1::doAction@7 (line 17)
ScopeDesc(pc=0x00007f13f8f25bd6 offset=176):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f25bd6 offset=176):
   polymorphic::main@391 (line 88)
ScopeDesc(pc=0x00007f13f8f25c1b offset=1bb):
   myclassC1::doAction@10 (line 18)
ScopeDesc(pc=0x00007f13f8f25c1b offset=1bb):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f25c1b offset=1bb):
   polymorphic::main@391 (line 88)
ScopeDesc(pc=0x00007f13f8f25c27 offset=1c7):
   myclassC1::doAction@17 (line 18)
ScopeDesc(pc=0x00007f13f8f25c27 offset=1c7):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f25c27 offset=1c7):
   polymorphic::main@391 (line 88)
ScopeDesc(pc=0x00007f13f8f25c2d offset=1cd):
   myclassC1::doAction@19 (line 17)
ScopeDesc(pc=0x00007f13f8f25c2d offset=1cd):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f25c2d offset=1cd):
   polymorphic::main@391 (line 88)
ScopeDesc(pc=0x00007f13f8f25c32 offset=1d2):
   myclassC1::doAction@7 (line 17)
ScopeDesc(pc=0x00007f13f8f25c32 offset=1d2):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f25c32 offset=1d2):
   polymorphic::main@391 (line 88)
ScopeDesc(pc=0x00007f13f8f25cb0 offset=250):
   myclassC1::doAction@10 (line 18)
ScopeDesc(pc=0x00007f13f8f25cb0 offset=250):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f25cb0 offset=250):
   polymorphic::main@391 (line 88)
ScopeDesc(pc=0x00007f13f8f25e34 offset=3d4):
   myclassC1::doAction@17 (line 18)
ScopeDesc(pc=0x00007f13f8f25e34 offset=3d4):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f25e34 offset=3d4):
   polymorphic::main@391 (line 88)
ScopeDesc(pc=0x00007f13f8f25e38 offset=3d8):
   myclassC1::doAction@19 (line 17)
ScopeDesc(pc=0x00007f13f8f25e38 offset=3d8):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f25e38 offset=3d8):
   polymorphic::main@391 (line 88)
ScopeDesc(pc=0x00007f13f8f25e46 offset=3e6):
   myclassC1::doAction@22 (line 17)
ScopeDesc(pc=0x00007f13f8f25e46 offset=3e6):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f25e46 offset=3e6):
   polymorphic::main@391 (line 88)
ScopeDesc(pc=0x00007f13f8f25e4d offset=3ed):
   myclassC1::doAction@22 (line 17)  reexecute=true
   Locals
    - l0: empty
    - l1: reg rdi [14],oop
    - l2: reg rsi [12],int
    - l3: reg r9 [18],int
ScopeDesc(pc=0x00007f13f8f25e4d offset=3ed):
   polymorphic::doCall@2 (line 35)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00007f13f8f25e4d offset=3ed):
   polymorphic::main@391 (line 88)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: reg rdi [14],oop
    - l4: reg rax [0],oop
    - l5: empty
    - l6: reg r14 [28],oop
    - l7: reg xmm16 [304],oop
    - l8: reg xmm17 [320],oop
    - l9: reg rdx [4],int
    - l10: empty
    - l11: empty
    - l12: empty
   Expression stack
    - @0: reg r13 [26],int
ScopeDesc(pc=0x00007f13f8f25e50 offset=3f0):
   myclassC1::doAction@22 (line 17)
ScopeDesc(pc=0x00007f13f8f25e50 offset=3f0):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f25e50 offset=3f0):
   polymorphic::main@391 (line 88)
ScopeDesc(pc=0x00007f13f8f25e90 offset=430):
   myclassC1::doAction@10 (line 18)
ScopeDesc(pc=0x00007f13f8f25e90 offset=430):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f25e90 offset=430):
   polymorphic::main@391 (line 88)
ScopeDesc(pc=0x00007f13f8f25ebc offset=45c):
   myclassC1::doAction@17 (line 18)
ScopeDesc(pc=0x00007f13f8f25ebc offset=45c):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f25ebc offset=45c):
   polymorphic::main@391 (line 88)
ScopeDesc(pc=0x00007f13f8f25ec0 offset=460):
   myclassC1::doAction@19 (line 17)
ScopeDesc(pc=0x00007f13f8f25ec0 offset=460):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f25ec0 offset=460):
   polymorphic::main@391 (line 88)
ScopeDesc(pc=0x00007f13f8f25ec5 offset=465):
   myclassC1::doAction@7 (line 17)
ScopeDesc(pc=0x00007f13f8f25ec5 offset=465):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f25ec5 offset=465):
   polymorphic::main@391 (line 88)
ScopeDesc(pc=0x00007f13f8f25ee0 offset=480):
   myclassC1::doAction@10 (line 18)
ScopeDesc(pc=0x00007f13f8f25ee0 offset=480):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f25ee0 offset=480):
   polymorphic::main@391 (line 88)
ScopeDesc(pc=0x00007f13f8f25eec offset=48c):
   myclassC1::doAction@17 (line 18)
ScopeDesc(pc=0x00007f13f8f25eec offset=48c):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f25eec offset=48c):
   polymorphic::main@391 (line 88)
ScopeDesc(pc=0x00007f13f8f25eef offset=48f):
   myclassC1::doAction@19 (line 17)
ScopeDesc(pc=0x00007f13f8f25eef offset=48f):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f25eef offset=48f):
   polymorphic::main@391 (line 88)
ScopeDesc(pc=0x00007f13f8f25ef4 offset=494):
   myclassC1::doAction@7 (line 17)
ScopeDesc(pc=0x00007f13f8f25ef4 offset=494):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f25ef4 offset=494):
   polymorphic::main@391 (line 88)
ScopeDesc(pc=0x00007f13f8f25f1e offset=4be):
   polymorphic::main@394 (line 88)
ScopeDesc(pc=0x00007f13f8f25f21 offset=4c1):
   polymorphic::main@397 (line 89)
ScopeDesc(pc=0x00007f13f8f25f2a offset=4ca):
   polymorphic::main@404 (line 89)
ScopeDesc(pc=0x00007f13f8f25f33 offset=4d3):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f25f33 offset=4d3):
   polymorphic::main@404 (line 89)
ScopeDesc(pc=0x00007f13f8f25f37 offset=4d7):
   myclassC2::doAction@6 (line 26)
ScopeDesc(pc=0x00007f13f8f25f37 offset=4d7):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f25f37 offset=4d7):
   polymorphic::main@404 (line 89)
ScopeDesc(pc=0x00007f13f8f25f46 offset=4e6):
   myclassC2::doAction@7 (line 26)
ScopeDesc(pc=0x00007f13f8f25f46 offset=4e6):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f25f46 offset=4e6):
   polymorphic::main@404 (line 89)
ScopeDesc(pc=0x00007f13f8f25f82 offset=522):
   myclassC2::doAction@10 (line 27)
ScopeDesc(pc=0x00007f13f8f25f82 offset=522):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f25f82 offset=522):
   polymorphic::main@404 (line 89)
ScopeDesc(pc=0x00007f13f8f25f8e offset=52e):
   myclassC2::doAction@17 (line 27)
ScopeDesc(pc=0x00007f13f8f25f8e offset=52e):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f25f8e offset=52e):
   polymorphic::main@404 (line 89)
ScopeDesc(pc=0x00007f13f8f25f94 offset=534):
   myclassC2::doAction@19 (line 26)
ScopeDesc(pc=0x00007f13f8f25f94 offset=534):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f25f94 offset=534):
   polymorphic::main@404 (line 89)
ScopeDesc(pc=0x00007f13f8f25f99 offset=539):
   myclassC2::doAction@7 (line 26)
ScopeDesc(pc=0x00007f13f8f25f99 offset=539):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f25f99 offset=539):
   polymorphic::main@404 (line 89)
ScopeDesc(pc=0x00007f13f8f26000 offset=5a0):
   myclassC2::doAction@10 (line 27)
ScopeDesc(pc=0x00007f13f8f26000 offset=5a0):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f26000 offset=5a0):
   polymorphic::main@404 (line 89)
ScopeDesc(pc=0x00007f13f8f26184 offset=724):
   myclassC2::doAction@17 (line 27)
ScopeDesc(pc=0x00007f13f8f26184 offset=724):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f26184 offset=724):
   polymorphic::main@404 (line 89)
ScopeDesc(pc=0x00007f13f8f26188 offset=728):
   myclassC2::doAction@19 (line 26)
ScopeDesc(pc=0x00007f13f8f26188 offset=728):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f26188 offset=728):
   polymorphic::main@404 (line 89)
ScopeDesc(pc=0x00007f13f8f26191 offset=731):
   myclassC1::doAction@22 (line 17)
ScopeDesc(pc=0x00007f13f8f26191 offset=731):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f26191 offset=731):
   polymorphic::main@391 (line 88)
ScopeDesc(pc=0x00007f13f8f26198 offset=738):
   myclassC2::doAction@22 (line 26)  reexecute=true
   Locals
    - l0: empty
    - l1: reg rdi [14],oop
    - l2: reg rsi [12],int
    - l3: reg r9 [18],int
ScopeDesc(pc=0x00007f13f8f26198 offset=738):
   polymorphic::doCall@2 (line 35)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00007f13f8f26198 offset=738):
   polymorphic::main@404 (line 89)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: reg rdi [14],oop
    - l4: reg rax [0],oop
    - l5: empty
    - l6: reg r14 [28],oop
    - l7: reg xmm16 [304],oop
    - l8: reg xmm17 [320],oop
    - l9: reg rdx [4],int
    - l10: empty
    - l11: empty
    - l12: empty
   Expression stack
    - @0: reg r13 [26],int
ScopeDesc(pc=0x00007f13f8f2619b offset=73b):
   myclassC2::doAction@22 (line 26)
ScopeDesc(pc=0x00007f13f8f2619b offset=73b):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f2619b offset=73b):
   polymorphic::main@404 (line 89)
ScopeDesc(pc=0x00007f13f8f261e8 offset=788):
   myclassC2::doAction@10 (line 27)
ScopeDesc(pc=0x00007f13f8f261e8 offset=788):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f261e8 offset=788):
   polymorphic::main@404 (line 89)
ScopeDesc(pc=0x00007f13f8f26214 offset=7b4):
   myclassC2::doAction@17 (line 27)
ScopeDesc(pc=0x00007f13f8f26214 offset=7b4):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f26214 offset=7b4):
   polymorphic::main@404 (line 89)
ScopeDesc(pc=0x00007f13f8f26218 offset=7b8):
   myclassC2::doAction@19 (line 26)
ScopeDesc(pc=0x00007f13f8f26218 offset=7b8):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f26218 offset=7b8):
   polymorphic::main@404 (line 89)
ScopeDesc(pc=0x00007f13f8f2621d offset=7bd):
   myclassC2::doAction@7 (line 26)
ScopeDesc(pc=0x00007f13f8f2621d offset=7bd):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f2621d offset=7bd):
   polymorphic::main@404 (line 89)
ScopeDesc(pc=0x00007f13f8f2623c offset=7dc):
   myclassC2::doAction@10 (line 27)
ScopeDesc(pc=0x00007f13f8f2623c offset=7dc):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f2623c offset=7dc):
   polymorphic::main@404 (line 89)
ScopeDesc(pc=0x00007f13f8f26248 offset=7e8):
   myclassC2::doAction@17 (line 27)
ScopeDesc(pc=0x00007f13f8f26248 offset=7e8):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f26248 offset=7e8):
   polymorphic::main@404 (line 89)
ScopeDesc(pc=0x00007f13f8f2624b offset=7eb):
   myclassC2::doAction@19 (line 26)
ScopeDesc(pc=0x00007f13f8f2624b offset=7eb):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f2624b offset=7eb):
   polymorphic::main@404 (line 89)
ScopeDesc(pc=0x00007f13f8f26250 offset=7f0):
   myclassC2::doAction@7 (line 26)
ScopeDesc(pc=0x00007f13f8f26250 offset=7f0):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f26250 offset=7f0):
   polymorphic::main@404 (line 89)
ScopeDesc(pc=0x00007f13f8f2626d offset=80d):
   polymorphic::main@407 (line 89)
ScopeDesc(pc=0x00007f13f8f2628a offset=82a):
   polymorphic::doCall@-1 (line 35)
ScopeDesc(pc=0x00007f13f8f2628a offset=82a):
   polymorphic::main@417 (line 90)
ScopeDesc(pc=0x00007f13f8f262a4 offset=844):
   polymorphic::doCall@2 (line 35)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00007f13f8f262a4 offset=844):
   polymorphic::main@417 (line 90)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: stack[16],oop
    - l4: stack[24],oop
    - l5: empty
    - l6: stack[32],oop
    - l7: stack[40],oop
    - l8: stack[48],oop
    - l9: stack[8]
    - l10: empty
    - l11: empty
    - l12: empty
   Expression stack
    - @0: reg rbp [10],int
ScopeDesc(pc=0x00007f13f8f262ab offset=84b):
   polymorphic::main@420 (line 90)
ScopeDesc(pc=0x00007f13f8f262d1 offset=871):
   myclassC1::doAction@22 (line 17)
ScopeDesc(pc=0x00007f13f8f262d1 offset=871):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f262d1 offset=871):
   polymorphic::main@391 (line 88)
ScopeDesc(pc=0x00007f13f8f262da offset=87a):
   polymorphic::main@426 (line 86)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: reg r9 [18],oop
    - l4: reg rcx [2],oop
    - l5: reg r13 [26],int
    - l6: reg rdi [14],oop
    - l7: reg rdx [4],oop
    - l8: reg rax [0],oop
    - l9: reg rbx [6],int
    - l10: empty
    - l11: empty
    - l12: empty
ScopeDesc(pc=0x00007f13f8f262dd offset=87d):
   polymorphic::main@426 (line 86)
ScopeDesc(pc=0x00007f13f8f262e0 offset=880):
   polymorphic::main@346 (line 86)
ScopeDesc(pc=0x00007f13f8f262ef offset=88f):
   polymorphic::main@350 (line 86)
ScopeDesc(pc=0x00007f13f8f262f7 offset=897):
   polymorphic::main@356 (line 87)
ScopeDesc(pc=0x00007f13f8f26310 offset=8b0):
   polymorphic::main@357 (line 87)
ScopeDesc(pc=0x00007f13f8f26344 offset=8e4):
   polymorphic::main@404 (line 89)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
   Expression stack
    - @0: empty
    - @1: NULL
    - @2: reg rbp [10],oop
    - @3: stack[0],oop
ScopeDesc(pc=0x00007f13f8f26368 offset=908):
   polymorphic::doCall@2 (line 35)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   Expression stack
    - @0: NULL
    - @1: reg rbp [10],oop
ScopeDesc(pc=0x00007f13f8f26368 offset=908):
   polymorphic::main@404 (line 89)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
   Expression stack
    - @0: empty
ScopeDesc(pc=0x00007f13f8f2637c offset=91c):
   myclassC2::doAction@7 (line 26)
ScopeDesc(pc=0x00007f13f8f2637c offset=91c):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f2637c offset=91c):
   polymorphic::main@404 (line 89)
ScopeDesc(pc=0x00007f13f8f263b0 offset=950):
   myclassC2::doAction@7 (line 26)  reexecute=true
   Locals
    - l0: empty
    - l1: stack[40],oop
    - l2: 0
    - l3: 0
   Expression stack
    - @0: 0
    - @1: stack[48]
ScopeDesc(pc=0x00007f13f8f263b0 offset=950):
   polymorphic::doCall@2 (line 35)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00007f13f8f263b0 offset=950):
   polymorphic::main@404 (line 89)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: stack[40],oop
    - l4: stack[0],oop
    - l5: empty
    - l6: stack[8],oop
    - l7: stack[16],oop
    - l8: stack[24],oop
    - l9: stack[32]
    - l10: empty
    - l11: empty
    - l12: empty
   Expression stack
    - @0: stack[36]
ScopeDesc(pc=0x00007f13f8f263c4 offset=964):
   myclassC2::doAction@7 (line 26)
ScopeDesc(pc=0x00007f13f8f263c4 offset=964):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f263c4 offset=964):
   polymorphic::main@404 (line 89)
ScopeDesc(pc=0x00007f13f8f26408 offset=9a8):
   polymorphic::main@350 (line 86)
ScopeDesc(pc=0x00007f13f8f26430 offset=9d0):
   polymorphic::main@350 (line 86)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: reg rbp [10],oop
    - l4: stack[0],oop
    - l5: empty
    - l6: stack[8],oop
    - l7: stack[16],oop
    - l8: stack[24],oop
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
   Expression stack
    - @0: stack[32]
    - @1: 100000
ScopeDesc(pc=0x00007f13f8f26458 offset=9f8):
   polymorphic::main@391 (line 88)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
   Expression stack
    - @0: empty
    - @1: NULL
    - @2: reg rbp [10],oop
    - @3: stack[0],oop
ScopeDesc(pc=0x00007f13f8f2647c offset=a1c):
   polymorphic::doCall@2 (line 35)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   Expression stack
    - @0: NULL
    - @1: reg rbp [10],oop
ScopeDesc(pc=0x00007f13f8f2647c offset=a1c):
   polymorphic::main@391 (line 88)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
   Expression stack
    - @0: empty
ScopeDesc(pc=0x00007f13f8f26490 offset=a30):
   myclassC1::doAction@7 (line 17)
ScopeDesc(pc=0x00007f13f8f26490 offset=a30):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f26490 offset=a30):
   polymorphic::main@391 (line 88)
ScopeDesc(pc=0x00007f13f8f264c4 offset=a64):
   myclassC1::doAction@7 (line 17)  reexecute=true
   Locals
    - l0: empty
    - l1: stack[40],oop
    - l2: 0
    - l3: 0
   Expression stack
    - @0: 0
    - @1: stack[48]
ScopeDesc(pc=0x00007f13f8f264c4 offset=a64):
   polymorphic::doCall@2 (line 35)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00007f13f8f264c4 offset=a64):
   polymorphic::main@391 (line 88)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: stack[40],oop
    - l4: stack[0],oop
    - l5: empty
    - l6: stack[8],oop
    - l7: stack[16],oop
    - l8: stack[24],oop
    - l9: stack[32]
    - l10: empty
    - l11: empty
    - l12: empty
   Expression stack
    - @0: stack[36]
ScopeDesc(pc=0x00007f13f8f264d8 offset=a78):
   myclassC1::doAction@7 (line 17)
ScopeDesc(pc=0x00007f13f8f264d8 offset=a78):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f264d8 offset=a78):
   polymorphic::main@391 (line 88)
ScopeDesc(pc=0x00007f13f8f26648 offset=be8):
   polymorphic::main@346 (line 86)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: stack[8],oop
    - l4: stack[16],oop
    - l5: reg rbp [10],int
    - l6: stack[24],oop
    - l7: stack[32],oop
    - l8: stack[40],oop
    - l9: stack[0]
    - l10: empty
    - l11: empty
    - l12: empty
ScopeDesc(pc=0x00007f13f8f2665c offset=bfc):
   polymorphic::main@346 (line 86)
ScopeDesc(pc=0x00007f13f8f2666f offset=c0f):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f2666f offset=c0f):
   polymorphic::main@417 (line 90)
ScopeDesc(pc=0x00007f13f8f2668c offset=c2c):
   myclassC2::doAction@6 (line 26)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: empty
    - @1: NULL
ScopeDesc(pc=0x00007f13f8f2668c offset=c2c):
   polymorphic::doCall@2 (line 35)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00007f13f8f2668c offset=c2c):
   polymorphic::main@404 (line 89)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
   Expression stack
    - @0: empty
ScopeDesc(pc=0x00007f13f8f266b0 offset=c50):
   myclassC1::doAction@6 (line 17)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: empty
    - @1: NULL
ScopeDesc(pc=0x00007f13f8f266b0 offset=c50):
   polymorphic::doCall@2 (line 35)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00007f13f8f266b0 offset=c50):
   polymorphic::main@391 (line 88)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
   Expression stack
    - @0: empty
ScopeDesc(pc=0x00007f13f8f266c4 offset=c64):
   myclassC2::doAction@22 (line 26)
ScopeDesc(pc=0x00007f13f8f266c4 offset=c64):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f266c4 offset=c64):
   polymorphic::main@404 (line 89)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
relocations:
         @0x00007f13f8f258f0: 3200
relocInfo@0x00007f13f8f258f0 [type=6(runtime_call) addr=0x00007f13f8f25a60 offset=0 format=1] | [destination=0x00007f13fd536748]
         @0x00007f13f8f258f2: 7801666d
relocInfo@0x00007f13f8f258f4 [type=12(metadata) addr=0x00007f13f8f25acd offset=109 format=3 data=1] | [metadata_addr=0x00007f13f8f266e8 *=0x0000000800040dc8 offset=0]metadata_value=0x0000000800040dc8: {type array int}
         @0x00007f13f8f258f6: 78026620
relocInfo@0x00007f13f8f258f8 [type=12(metadata) addr=0x00007f13f8f25aed offset=32 format=3 data=2] | [metadata_addr=0x00007f13f8f266f0 *=0x00000008000c1000 offset=0]metadata_value=0x00000008000c1000: 'polymorphic'
         @0x00007f13f8f258fa: 78036622
relocInfo@0x00007f13f8f258fc [type=12(metadata) addr=0x00007f13f8f25b0f offset=34 format=3 data=3] | [metadata_addr=0x00007f13f8f266f8 *=0x00000008000c1420 offset=0]metadata_value=0x00000008000c1420: 'myclassC1'
         @0x00007f13f8f258fe: 78046622
relocInfo@0x00007f13f8f25900 [type=12(metadata) addr=0x00007f13f8f25b31 offset=34 format=3 data=4] | [metadata_addr=0x00007f13f8f26700 *=0x00000008000c1638 offset=0]metadata_value=0x00000008000c1638: 'myclassC2'
         @0x00007f13f8f25902: 6022
relocInfo@0x00007f13f8f25902 [type=12(metadata) addr=0x00007f13f8f25b53 offset=34] | [metadata_addr=0x00007f13f8f25b55 *=0x00000008000c1210 offset=0]metadata_value=0x00000008000c1210: 'myclassP'
         @0x00007f13f8f25904: 01ff
relocInfo@0x00007f13f8f25904 [type=0(none) addr=0x00007f13f8f25d52 offset=511]
         @0x00007f13f8f25906: 50fb
relocInfo@0x00007f13f8f25906 [type=10(poll) addr=0x00007f13f8f25e4d offset=251]
         @0x00007f13f8f25908: 01ff
relocInfo@0x00007f13f8f25908 [type=0(none) addr=0x00007f13f8f2604c offset=511]
         @0x00007f13f8f2590a: 514c
relocInfo@0x00007f13f8f2590a [type=10(poll) addr=0x00007f13f8f26198 offset=332]
         @0x00007f13f8f2590c: 780a1307
relocInfo@0x00007f13f8f2590e [type=2(virtual_call) addr=0x00007f13f8f2629f offset=263 format=1 data=10] | [destination=0x00007f13f8fd3a20 cached_value=0x00007f13f8f26295 metadata=0x0000000000000000]
         @0x00007f13f8f25910: 503b
relocInfo@0x00007f13f8f25910 [type=10(poll) addr=0x00007f13f8f262da offset=59]
         @0x00007f13f8f25912: 3265
relocInfo@0x00007f13f8f25912 [type=6(runtime_call) addr=0x00007f13f8f2633f offset=101 format=1] | [destination=0x00007f13f8fdf820]
         @0x00007f13f8f25914: 7c03fdc925487f133805
relocInfo@0x00007f13f8f2591c [type=7(external_word) addr=0x00007f13f8f26344 offset=5 data={fdc925487f13}] | [target=0x00007f13fdc92548]
         @0x00007f13f8f2591e: 320e
relocInfo@0x00007f13f8f2591e [type=6(runtime_call) addr=0x00007f13f8f26352 offset=14 format=1] | [destination=0x00007f13fd3b2bb4]
         @0x00007f13f8f25920: 3211
relocInfo@0x00007f13f8f25920 [type=6(runtime_call) addr=0x00007f13f8f26363 offset=17 format=1] | [destination=0x00007f13f8fdf820]
         @0x00007f13f8f25922: 7c03fdc925487f133805
relocInfo@0x00007f13f8f2592a [type=7(external_word) addr=0x00007f13f8f26368 offset=5 data={fdc925487f13}] | [target=0x00007f13fdc92548]
         @0x00007f13f8f2592c: 320e
relocInfo@0x00007f13f8f2592c [type=6(runtime_call) addr=0x00007f13f8f26376 offset=14 format=1] | [destination=0x00007f13fd3b2bb4]
         @0x00007f13f8f2592e: 3235
relocInfo@0x00007f13f8f2592e [type=6(runtime_call) addr=0x00007f13f8f263ab offset=53 format=1] | [destination=0x00007f13f8fdf820]
         @0x00007f13f8f25930: 7c03fdc925487f133805
relocInfo@0x00007f13f8f25938 [type=7(external_word) addr=0x00007f13f8f263b0 offset=5 data={fdc925487f13}] | [target=0x00007f13fdc92548]
         @0x00007f13f8f2593a: 320e
relocInfo@0x00007f13f8f2593a [type=6(runtime_call) addr=0x00007f13f8f263be offset=14 format=1] | [destination=0x00007f13fd3b2bb4]
         @0x00007f13f8f2593c: 7c03fde3d2687f13380e
relocInfo@0x00007f13f8f25944 [type=7(external_word) addr=0x00007f13f8f263cc offset=14 data={fde3d2687f13}] | [target=0x00007f13fde3d268]
         @0x00007f13f8f25946: 320e
relocInfo@0x00007f13f8f25946 [type=6(runtime_call) addr=0x00007f13f8f263da offset=14 format=1] | [destination=0x00007f13fd3b2bb4]
         @0x00007f13f8f25948: 7c03fde3d2687f133806
relocInfo@0x00007f13f8f25950 [type=7(external_word) addr=0x00007f13f8f263e0 offset=6 data={fde3d2687f13}] | [target=0x00007f13fde3d268]
         @0x00007f13f8f25952: 320e
relocInfo@0x00007f13f8f25952 [type=6(runtime_call) addr=0x00007f13f8f263ee offset=14 format=1] | [destination=0x00007f13fd3b2bb4]
         @0x00007f13f8f25954: 7c03fde3d2687f133806
relocInfo@0x00007f13f8f2595c [type=7(external_word) addr=0x00007f13f8f263f4 offset=6 data={fde3d2687f13}] | [target=0x00007f13fde3d268]
         @0x00007f13f8f2595e: 320e
relocInfo@0x00007f13f8f2595e [type=6(runtime_call) addr=0x00007f13f8f26402 offset=14 format=1] | [destination=0x00007f13fd3b2bb4]
         @0x00007f13f8f25960: 3229
relocInfo@0x00007f13f8f25960 [type=6(runtime_call) addr=0x00007f13f8f2642b offset=41 format=1] | [destination=0x00007f13f8fdf820]
         @0x00007f13f8f25962: 7c03fdc925487f133805
relocInfo@0x00007f13f8f2596a [type=7(external_word) addr=0x00007f13f8f26430 offset=5 data={fdc925487f13}] | [target=0x00007f13fdc92548]
         @0x00007f13f8f2596c: 320e
relocInfo@0x00007f13f8f2596c [type=6(runtime_call) addr=0x00007f13f8f2643e offset=14 format=1] | [destination=0x00007f13fd3b2bb4]
         @0x00007f13f8f2596e: 3215
relocInfo@0x00007f13f8f2596e [type=6(runtime_call) addr=0x00007f13f8f26453 offset=21 format=1] | [destination=0x00007f13f8fdf820]
         @0x00007f13f8f25970: 7c03fdc925487f133805
relocInfo@0x00007f13f8f25978 [type=7(external_word) addr=0x00007f13f8f26458 offset=5 data={fdc925487f13}] | [target=0x00007f13fdc92548]
         @0x00007f13f8f2597a: 320e
relocInfo@0x00007f13f8f2597a [type=6(runtime_call) addr=0x00007f13f8f26466 offset=14 format=1] | [destination=0x00007f13fd3b2bb4]
         @0x00007f13f8f2597c: 3211
relocInfo@0x00007f13f8f2597c [type=6(runtime_call) addr=0x00007f13f8f26477 offset=17 format=1] | [destination=0x00007f13f8fdf820]
         @0x00007f13f8f2597e: 7c03fdc925487f133805
relocInfo@0x00007f13f8f25986 [type=7(external_word) addr=0x00007f13f8f2647c offset=5 data={fdc925487f13}] | [target=0x00007f13fdc92548]
         @0x00007f13f8f25988: 320e
relocInfo@0x00007f13f8f25988 [type=6(runtime_call) addr=0x00007f13f8f2648a offset=14 format=1] | [destination=0x00007f13fd3b2bb4]
         @0x00007f13f8f2598a: 3235
relocInfo@0x00007f13f8f2598a [type=6(runtime_call) addr=0x00007f13f8f264bf offset=53 format=1] | [destination=0x00007f13f8fdf820]
         @0x00007f13f8f2598c: 7c03fdc925487f133805
relocInfo@0x00007f13f8f25994 [type=7(external_word) addr=0x00007f13f8f264c4 offset=5 data={fdc925487f13}] | [target=0x00007f13fdc92548]
         @0x00007f13f8f25996: 320e
relocInfo@0x00007f13f8f25996 [type=6(runtime_call) addr=0x00007f13f8f264d2 offset=14 format=1] | [destination=0x00007f13fd3b2bb4]
         @0x00007f13f8f25998: 7c03fde3d2687f133813
relocInfo@0x00007f13f8f259a0 [type=7(external_word) addr=0x00007f13f8f264e5 offset=19 data={fde3d2687f13}] | [target=0x00007f13fde3d268]
         @0x00007f13f8f259a2: 320e
relocInfo@0x00007f13f8f259a2 [type=6(runtime_call) addr=0x00007f13f8f264f3 offset=14 format=1] | [destination=0x00007f13fd3b2bb4]
         @0x00007f13f8f259a4: 7c03fde3d2687f133806
relocInfo@0x00007f13f8f259ac [type=7(external_word) addr=0x00007f13f8f264f9 offset=6 data={fde3d2687f13}] | [target=0x00007f13fde3d268]
         @0x00007f13f8f259ae: 320e
relocInfo@0x00007f13f8f259ae [type=6(runtime_call) addr=0x00007f13f8f26507 offset=14 format=1] | [destination=0x00007f13fd3b2bb4]
         @0x00007f13f8f259b0: 7c03fde3d2687f133806
relocInfo@0x00007f13f8f259b8 [type=7(external_word) addr=0x00007f13f8f2650d offset=6 data={fde3d2687f13}] | [target=0x00007f13fde3d268]
         @0x00007f13f8f259ba: 320e
relocInfo@0x00007f13f8f259ba [type=6(runtime_call) addr=0x00007f13f8f2651b offset=14 format=1] | [destination=0x00007f13fd3b2bb4]
         @0x00007f13f8f259bc: 7c03fde3d2687f133806
relocInfo@0x00007f13f8f259c4 [type=7(external_word) addr=0x00007f13f8f26521 offset=6 data={fde3d2687f13}] | [target=0x00007f13fde3d268]
         @0x00007f13f8f259c6: 320e
relocInfo@0x00007f13f8f259c6 [type=6(runtime_call) addr=0x00007f13f8f2652f offset=14 format=1] | [destination=0x00007f13fd3b2bb4]
         @0x00007f13f8f259c8: 7c03fde3d2687f133806
relocInfo@0x00007f13f8f259d0 [type=7(external_word) addr=0x00007f13f8f26535 offset=6 data={fde3d2687f13}] | [target=0x00007f13fde3d268]
         @0x00007f13f8f259d2: 320e
relocInfo@0x00007f13f8f259d2 [type=6(runtime_call) addr=0x00007f13f8f26543 offset=14 format=1] | [destination=0x00007f13fd3b2bb4]
         @0x00007f13f8f259d4: 7c03fde3d2687f133806
relocInfo@0x00007f13f8f259dc [type=7(external_word) addr=0x00007f13f8f26549 offset=6 data={fde3d2687f13}] | [target=0x00007f13fde3d268]
         @0x00007f13f8f259de: 320e
relocInfo@0x00007f13f8f259de [type=6(runtime_call) addr=0x00007f13f8f26557 offset=14 format=1] | [destination=0x00007f13fd3b2bb4]
         @0x00007f13f8f259e0: 7c03fde3d2687f133806
relocInfo@0x00007f13f8f259e8 [type=7(external_word) addr=0x00007f13f8f2655d offset=6 data={fde3d2687f13}] | [target=0x00007f13fde3d268]
         @0x00007f13f8f259ea: 320e
relocInfo@0x00007f13f8f259ea [type=6(runtime_call) addr=0x00007f13f8f2656b offset=14 format=1] | [destination=0x00007f13fd3b2bb4]
         @0x00007f13f8f259ec: 7c03fde3d2687f133806
relocInfo@0x00007f13f8f259f4 [type=7(external_word) addr=0x00007f13f8f26571 offset=6 data={fde3d2687f13}] | [target=0x00007f13fde3d268]
         @0x00007f13f8f259f6: 320e
relocInfo@0x00007f13f8f259f6 [type=6(runtime_call) addr=0x00007f13f8f2657f offset=14 format=1] | [destination=0x00007f13fd3b2bb4]
         @0x00007f13f8f259f8: 7c03fde3d2687f133806
relocInfo@0x00007f13f8f25a00 [type=7(external_word) addr=0x00007f13f8f26585 offset=6 data={fde3d2687f13}] | [target=0x00007f13fde3d268]
         @0x00007f13f8f25a02: 320e
relocInfo@0x00007f13f8f25a02 [type=6(runtime_call) addr=0x00007f13f8f26593 offset=14 format=1] | [destination=0x00007f13fd3b2bb4]
         @0x00007f13f8f25a04: 7c03fde3d2687f133806
relocInfo@0x00007f13f8f25a0c [type=7(external_word) addr=0x00007f13f8f26599 offset=6 data={fde3d2687f13}] | [target=0x00007f13fde3d268]
         @0x00007f13f8f25a0e: 320e
relocInfo@0x00007f13f8f25a0e [type=6(runtime_call) addr=0x00007f13f8f265a7 offset=14 format=1] | [destination=0x00007f13fd3b2bb4]
         @0x00007f13f8f25a10: 7c03fde3d2687f133806
relocInfo@0x00007f13f8f25a18 [type=7(external_word) addr=0x00007f13f8f265ad offset=6 data={fde3d2687f13}] | [target=0x00007f13fde3d268]
         @0x00007f13f8f25a1a: 320e
relocInfo@0x00007f13f8f25a1a [type=6(runtime_call) addr=0x00007f13f8f265bb offset=14 format=1] | [destination=0x00007f13fd3b2bb4]
         @0x00007f13f8f25a1c: 7c03fde3d2687f133806
relocInfo@0x00007f13f8f25a24 [type=7(external_word) addr=0x00007f13f8f265c1 offset=6 data={fde3d2687f13}] | [target=0x00007f13fde3d268]
         @0x00007f13f8f25a26: 320e
relocInfo@0x00007f13f8f25a26 [type=6(runtime_call) addr=0x00007f13f8f265cf offset=14 format=1] | [destination=0x00007f13fd3b2bb4]
         @0x00007f13f8f25a28: 3274
relocInfo@0x00007f13f8f25a28 [type=6(runtime_call) addr=0x00007f13f8f26643 offset=116 format=1] | [destination=0x00007f13f8fdf820]
         @0x00007f13f8f25a2a: 7c03fdc925487f133805
relocInfo@0x00007f13f8f25a32 [type=7(external_word) addr=0x00007f13f8f26648 offset=5 data={fdc925487f13}] | [target=0x00007f13fdc92548]
         @0x00007f13f8f25a34: 320e
relocInfo@0x00007f13f8f25a34 [type=6(runtime_call) addr=0x00007f13f8f26656 offset=14 format=1] | [destination=0x00007f13fd3b2bb4]
         @0x00007f13f8f25a36: 3224
relocInfo@0x00007f13f8f25a36 [type=6(runtime_call) addr=0x00007f13f8f2667a offset=36 format=1] | [destination=0x00007f13f8f42000]
         @0x00007f13f8f25a38: 320d
relocInfo@0x00007f13f8f25a38 [type=6(runtime_call) addr=0x00007f13f8f26687 offset=13 format=1] | [destination=0x00007f13f8fdf820]
         @0x00007f13f8f25a3a: 7c03fdc925487f133805
relocInfo@0x00007f13f8f25a42 [type=7(external_word) addr=0x00007f13f8f2668c offset=5 data={fdc925487f13}] | [target=0x00007f13fdc92548]
         @0x00007f13f8f25a44: 320e
relocInfo@0x00007f13f8f25a44 [type=6(runtime_call) addr=0x00007f13f8f2669a offset=14 format=1] | [destination=0x00007f13fd3b2bb4]
         @0x00007f13f8f25a46: 3211
relocInfo@0x00007f13f8f25a46 [type=6(runtime_call) addr=0x00007f13f8f266ab offset=17 format=1] | [destination=0x00007f13f8fdf820]
         @0x00007f13f8f25a48: 7c03fdc925487f133805
relocInfo@0x00007f13f8f25a50 [type=7(external_word) addr=0x00007f13f8f266b0 offset=5 data={fdc925487f13}] | [target=0x00007f13fdc92548]
         @0x00007f13f8f25a52: 320e
relocInfo@0x00007f13f8f25a52 [type=6(runtime_call) addr=0x00007f13f8f266be offset=14 format=1] | [destination=0x00007f13fd3b2bb4]
         @0x00007f13f8f25a54: 000a
relocInfo@0x00007f13f8f25a54 [type=0(none) addr=0x00007f13f8f266c8 offset=10]
         @0x00007f13f8f25a56: 3200
relocInfo@0x00007f13f8f25a56 [type=6(runtime_call) addr=0x00007f13f8f266c8 offset=0 format=1] | [destination=0x00007f13f8f747a0]
         @0x00007f13f8f25a58: 320f
relocInfo@0x00007f13f8f25a58 [type=6(runtime_call) addr=0x00007f13f8f266d7 offset=15 format=1] | [destination=0x00007f13f8fdfb40]
         @0x00007f13f8f25a5a: 0000
relocInfo@0x00007f13f8f25a5a [type=0(none) addr=0x00007f13f8f266d7 offset=0]
         @0x00007f13f8f25a5c: 0000
relocInfo@0x00007f13f8f25a5c [type=0(none) addr=0x00007f13f8f266d7 offset=0]
         @0x00007f13f8f25a5e: 0000
relocInfo@0x00007f13f8f25a5e [type=0(none) addr=0x00007f13f8f266d7 offset=0]
         @0x00007f13f8f25a60: 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Dependencies:
Dependency of type leaf_type
  context = polymorphic
   [nmethod<=klass]polymorphic
Dependency of type leaf_type
  context = myclassC1
   [nmethod<=klass]myclassC1
Dependency of type leaf_type
  context = myclassC2
   [nmethod<=klass]myclassC2
Dependency of type unique_concrete_method_4
  context = polymorphic
  method  = {method} {0x00007f13ac511540} 'doCall' '(LmyclassP;[I)I' in 'polymorphic'
  class   = polymorphic
  method  = {method} {0x00007f13ac511540} 'doCall' '(LmyclassP;[I)I' in 'polymorphic'
   [nmethod<=klass]polymorphic
Dependency of type unique_concrete_method_4
  context = myclassC1
  method  = {method} {0x00007f13ac511eb8} 'doAction' '([I)I' in 'myclassC1'
  class   = myclassP
  method  = {method} {0x00007f13ac511bf0} 'doAction' '([I)I' in 'myclassP'
   [nmethod<=klass]myclassC1
Dependency of type unique_concrete_method_4
  context = myclassC2
  method  = {method} {0x00007f13ac7001a0} 'doAction' '([I)I' in 'myclassC2'
  class   = myclassP
  method  = {method} {0x00007f13ac511bf0} 'doAction' '([I)I' in 'myclassP'
   [nmethod<=klass]myclassC2
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ExceptionHandlerTable (size = 24 bytes)
catch_pco = 2116 (pc=0x00007f13f8f262a4, 1 entries)
  bci -1 at scope depth 0 -> pco 3087 (pc=0x00007f13f8f2666f)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ImplicitExceptionTable (size = 2 entries, 20 bytes):
{
   < 0x00007f13f8f25bc9, 0x00007f13f8f266a0 > < 0x00007f13f8f25f33, 0x00007f13f8f2667f > 
}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded oops:
#0: 0x0000000000000000 NULL-oop
#1: 0x000000011f8a7ec8 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x000000011f8a7ec8}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded metadata:
# 0: 0x0000000000000000 NULL-oop
# 1: 0x0000000800040dc8 {type array int}
# 2: 0x00000008000c1000 'polymorphic'
# 3: 0x00000008000c1420 'myclassC1'
# 4: 0x00000008000c1638 'myclassC2'
# 5: 0x00007f13ac511858 {method} {0x00007f13ac511858} 'main' '([Ljava/lang/String;)V' in 'polymorphic'
# 6: 0x00007f13ac511540 {method} {0x00007f13ac511540} 'doCall' '(LmyclassP;[I)I' in 'polymorphic'
# 7: 0x00007f13ac511eb8 {method} {0x00007f13ac511eb8} 'doAction' '([I)I' in 'myclassC1'
# 8: 0x00007f13ac7001a0 {method} {0x00007f13ac7001a0} 'doAction' '([I)I' in 'myclassC2'
# 9: 0x00000008000c1210 'myclassP'
#10: 0x00007f13ac511bf0 {method} {0x00007f13ac511bf0} 'doAction' '([I)I' in 'myclassP'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

============================= C2-compiled nmethod ==============================
#r018 rsi:rsi   : parm 0: rawptr:BotPTR
# -- Old rsp -- Framesize: 96 --
#r591 rsp+92: in_preserve
#r590 rsp+88: return address
#r589 rsp+84: in_preserve
#r588 rsp+80: saved fp register
#r587 rsp+76: pad2, stack alignment
#r586 rsp+72: pad2, stack alignment
#r585 rsp+68: Fixed slot 1
#r584 rsp+64: Fixed slot 0
#r607 rsp+60: spill
#r606 rsp+56: spill
#r605 rsp+52: spill
#r604 rsp+48: spill
#r603 rsp+44: spill
#r602 rsp+40: spill
#r601 rsp+36: spill
#r600 rsp+32: spill
#r599 rsp+28: spill
#r598 rsp+24: spill
#r597 rsp+20: spill
#r596 rsp+16: spill
#r595 rsp+12: spill
#r594 rsp+ 8: spill
#r593 rsp+ 4: spill
#r592 rsp+ 0: spill
#
----------------------- MetaData before Compile_id = 28 ------------------------
{method}
 - this oop:          0x00007f13ac511858
 - method holder:     'polymorphic'
 - constants:         0x00007f13ac511068 constant pool [92]/operands[15] {0x00007f13ac511068} for 'polymorphic' cache=0x00007f13ac700210
 - access:            0xc1000009  public static 
 - name:              'main'
 - signature:         '([Ljava/lang/String;)V'
 - max stack:         7
 - max locals:        13
 - size of params:    1
 - method size:       14
 - vtable index:      -2
 - i2i entry:         0x00007f13f8ecc340
 - adapters:          AHE@0x00007f13f42547e0: 0xb i2c: 0x00007f13f8fd6540 c2i: 0x00007f13f8fd65fa c2iUV: 0x00007f13f8fd65c4 c2iNCI: 0x00007f13f8fd6634
 - compiled entry     0x00007f13f8fd65fa
 - code size:         545
 - code start:        0x00007f13ac5115e8
 - code end (excl):   0x00007f13ac511809
 - method data:       0x00007f13ac700f00
 - checked ex length: 0
 - linenumber start:  0x00007f13ac511809
 - localvar length:   0

------------------------ OptoAssembly for Compile_id = 28 -----------------------
#
#  void ( rawptr:BotPTR )
#
000     N1343: #	out( B1 ) <- BLOCK HEAD IS JUNK  Freq: 1
000     # breakpoint
        nop 	# 11 bytes pad for loops and calls

010     B1: #	out( B100 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
010     # stack bang (464 bytes)
	pushq   rbp	# Save rbp
	subq    rsp, #80	# Create frame

01c     movq    RBX, [RSI + #72 (8-bit)]	# ptr
020     movq    RBP, [RSI + #64 (8-bit)]	# ptr
024     movl    R11, [RSI + #8 (8-bit)]	# int
028     movl    [rsp + #8], R11	# spill
02d     movq    R10, [RSI + #48 (8-bit)]	# ptr
031     movq    [rsp + #0], R10	# spill
035     movq    R10, [RSI + #40 (8-bit)]	# ptr
039     movq    [rsp + #16], R10	# spill
03e     movq    R10, [RSI + #32 (8-bit)]	# ptr
042     movq    [rsp + #24], R10	# spill
047     movl    R14, [RSI + #56 (8-bit)]	# int
04b     movq    R10, [RSI + #16 (8-bit)]	# long
04f     movq    [rsp + #32], R10	# spill
054     movq    RDI, RSI	# spill
        nop 	# 9 bytes pad for loops and calls
060     call_leaf,runtime  OSR_migration_end
        No JVM State Info
        # 
070     testq   RBX, RBX	# ptr
073     je     B100  P=0.001000 C=-1.000000

079     B2: #	out( B105 B3 ) <- in( B1 )  Freq: 0.999
079     movl    R11, [RBX + #8 (8-bit)]	# compressed klass ptr
        nop 	# 3 bytes pad for loops and calls
080     cmpl    R11, narrowklass: precise [int: :Constant:exact *	# compressed klass ptr
087     jne,u   B105  P=0.000001 C=-1.000000

08d     B3: #	out( B4 ) <- in( B2 )  Freq: 0.998999
08d     movq    RCX, RBX	# spill
090     # checkcastPP of RCX

090     B4: #	out( B101 B5 ) <- in( B3 B100 )  Freq: 0.999999
090     movq    R13, RBP	# spill
093     testq   RBP, RBP	# ptr
096     je     B101  P=0.001000 C=-1.000000

09c     B5: #	out( B106 B6 ) <- in( B4 )  Freq: 0.998999
09c     movl    R10, [RBP + #8 (8-bit)]	# compressed klass ptr
0a0     cmpl    R10, narrowklass: precise polymorphic: 0x00007f13842a52c8:Constant:exact *	# compressed klass ptr
0a7     jne,u   B106  P=0.000001 C=-1.000000

0ad     B6: #	out( B7 ) <- in( B5 )  Freq: 0.998998
0ad     movq    R11, RBP	# spill
0b0     # checkcastPP of R11

0b0     B7: #	out( B102 B8 ) <- in( B6 B101 )  Freq: 0.999998
0b0     movq    R9, [rsp + #0]	# spill
0b4     testq   R9, R9	# ptr
0b7     je     B102  P=0.001000 C=-1.000000

0bd     B8: #	out( B108 B9 ) <- in( B7 )  Freq: 0.998998
0bd     movl    R8, [R9 + #8 (8-bit)]	# compressed klass ptr
0c1     cmpl    R8, narrowklass: precise myclassC1: 0x00007f13842aa990:Constant:exact *	# compressed klass ptr
0c8     jne,u   B108  P=0.000001 C=-1.000000

0ce     B9: #	out( B10 ) <- in( B8 )  Freq: 0.998997
0ce     movq    R8, R9	# spill
0d1     # checkcastPP of R8

0d1     B10: #	out( B103 B11 ) <- in( B9 B102 )  Freq: 0.999997
0d1     movq    RDI, [rsp + #16]	# spill
0d6     testq   RDI, RDI	# ptr
0d9     je     B103  P=0.001000 C=-1.000000

0df     B11: #	out( B107 B12 ) <- in( B10 )  Freq: 0.998997
0df     movl    R10, [RDI + #8 (8-bit)]	# compressed klass ptr
0e3     cmpl    R10, narrowklass: precise myclassC2: 0x00007f13842aac20:Constant:exact *	# compressed klass ptr
0ea     jne,u   B107  P=0.000001 C=-1.000000

0f0     B12: #	out( B13 ) <- in( B11 )  Freq: 0.998996
0f0     movq    RAX, RDI	# spill
0f3     # checkcastPP of RAX

0f3     B13: #	out( B104 B14 ) <- in( B12 B103 )  Freq: 0.999996
0f3     movq    R10, [rsp + #24]	# spill
0f8     testq   R10, R10	# ptr
        nop 	# 5 bytes pad for loops and calls
100     je     B104  P=0.001000 C=-1.000000

106     B14: #	out( B107 B15 ) <- in( B13 )  Freq: 0.998996
106     movq    RSI, R8	# spill
109     movl    R10, [R10 + #8 (8-bit)]	# compressed klass ptr
10d     movq    R8, precise myclassP: 0x00007f13842aaeb0:Constant:exact *	# ptr
117     decode_and_move_klass_not_null RDX,R10
124     movq    R10, [RDX + #64 (8-bit)]	# class
128     cmpq    R10, R8	# ptr
12b     jne,u   B107  P=0.000001 C=-1.000000

131     B15: #	out( B16 ) <- in( B14 )  Freq: 0.998995
131     movq    R10, [rsp + #24]	# spill
136     # checkcastPP of R10
136     movq    R8, RSI	# spill
139     movq    RSI, R10	# spill

13c     B16: #	out( B22 ) <- in( B15 B104 )  Freq: 0.999995
13c     movl    R10, RCX	# ptr -> int
13f     movl    R9, RCX	# ptr -> int
142     shrl    R10, #2
146     shrl    R9, #2
14a     andl    R10, #7	# int
14e     andl    R9, #7	# int
152     movl    RDI, #3	# int
157     subl    RDI, R9	# int
15a     movl    RDX, #3	# int
15f     subl    RDX, R10	# int
162     andl    RDI, #7	# int
165     andl    RDX, #7	# int
168     incl    RDI	# int
16a     incl    RDX	# int
16c     jmp     B22
        nop 	# 3 bytes pad for loops and calls

174     B17: #	out( B17 B18 ) <- in( B73 B17 ) Loop( B17-B17 inner post of N800 reduction) Freq: 40320.5
174     movl    R11, [R13 + #16 + RCX << #2]	# int
179     sall    R11, #30
17d     addl    RAX, R11	# int
180     incl    RCX	# int
182     cmpl    RCX, R10
185     jl,s   B17	# loop end  P=0.500000 C=19994624.000000

187     B18: #	out( B19 ) <- in( B17 B71 ) top-of-loop Freq: 40320.6
187     imull   RBP, RAX, #100	# int
18a     addl    RBP, R14	# int
18d     movl    RBX, RSI	# spill
18f     movq    RCX, R13	# spill
192     movdq   R11, XMM16	# spill
198     movdq   R8, XMM17	# spill
19e     movdq   RAX, XMM18	# spill
1a4     movdq   RSI, XMM19	# spill

1aa     B19: #	out( B109 B20 ) <- in( B18 B75 )  Freq: 40360
1aa     movq    [rsp + #56], RSI	# spill
1af     movq    [rsp + #48], RAX	# spill
1b4     movq    [rsp + #40], R8	# spill
1b9     movq    [rsp + #24], R11	# spill
1be     movq    [rsp + #16], RCX	# spill
1c3     movl    [rsp + #8], RBX	# spill
1c7     movq    RDX, RCX	# spill
1ca     movq    rax, #Universe::non_oop_word()
	call,dynamic  myclassP::doAction
        # polymorphic::doCall @ bci:2 (line 35) L[0]=_ L[1]=_ L[2]=_
        # polymorphic::main @ bci:509 (line 99) L[0]=_ L[1]=_ L[2]=_ L[3]=rsp + #16 L[4]=rsp + #24 L[5]=_ L[6]=rsp + #40 L[7]=rsp + #48 L[8]=rsp + #56 L[9]=rsp + #32 L[10]=_ L[11]=rsp + #8 L[12]=_ STK[0]=RBP
        # OopMap {[-98469100]=Oop [-98469092]=Oop [-98469076]=Oop [-98469068]=Oop [-98469060]=Oop off=476/0x1dc}

1dc     B20: #	out( B21 ) <- in( B19 )  Freq: 40359.2
        # Block is sole successor of call
1dc     imull   R14, RAX, #100	# int
1e0     addl    R14, RBP	# int
1e3     movl    RBX, [rsp + #8]	# spill
1e7     movq    RCX, [rsp + #16]	# spill
1ec     movq    R11, [rsp + #24]	# spill
1f1     movq    R8, [rsp + #40]	# spill
1f6     movq    RAX, [rsp + #48]	# spill
1fb     movq    RSI, [rsp + #56]	# spill
200     movl    RDX, [rsp + #0]	# spill
203     movl    RDI, [rsp + #4]	# spill

207     B21: #	out( B22 ) <- in( B20 B51 B50 ) top-of-loop Freq: 75966.1
207     # TLS is in R15
207     movq    R10, [R15 + #976 (32-bit)]	# ptr
20e     incl    RBX	# int
210     testl   rax, [R10]	# Safepoint: poll for GC        # polymorphic::main @ bci:518 (line 95) L[0]=_ L[1]=_ L[2]=_ L[3]=RCX L[4]=R11 L[5]=R14 L[6]=R8 L[7]=RAX L[8]=RSI L[9]=rsp + #32 L[10]=_ L[11]=RBX L[12]=_
        # OopMap {r11=Oop r8=Oop rcx=Oop rsi=Oop rax=Oop off=528/0x210}
213     movl    [rsp + #8], RBX	# spill

217     B22: #	out( B84 B23 ) <- in( B16 B21 ) Loop( B22-B21 ) Freq: 75967.5
217     movl    RBX, [rsp + #8]	# spill
        nop 	# 5 bytes pad for loops and calls
220     cmpl    RBX, #100000
226     jge     B84  P=0.000000 C=15365.000000

22c     B23: #	out( B50 B24 ) <- in( B22 )  Freq: 75967.5
22c     movl    R10, [rsp + #8]	# spill
231     andl    R10, #3	# int
235     testl   R10, R10
238     jne     B50  P=0.749951 C=3842.000000

23e     B24: #	out( B88 B25 ) <- in( B23 )  Freq: 18995.6
        nop 	# 2 bytes pad for loops and calls
240     testq   R11, R11	# ptr
243     je     B88  P=0.000001 C=-1.000000

249     B25: #	out( B89 B26 ) <- in( B24 )  Freq: 18995.6
249     testq   R8, R8	# ptr
24c     je     B89  P=0.000001 C=-1.000000

252     B26: #	out( B111 B27 ) <- in( B25 )  Freq: 18995.5
252     movl    R10, [RCX + #12 (8-bit)]	# range
256     NullCheck RCX

256     B27: #	out( B76 B28 ) <- in( B26 )  Freq: 18995.5
256     testl   R10, R10	# unsigned
259     jbe,u   B76  P=0.000976 C=9995390.000000

25f     B28: #	out( B90 B29 ) <- in( B27 )  Freq: 18977
25f     movl    R9, R10	# spill
262     decl    R9	# int
265     cmpl    R9, R10	# unsigned
268     jae,u   B90  P=0.000001 C=-1.000000

26e     B29: #	out( B30 ) <- in( B28 )  Freq: 18977
26e     movdl   XMM20, RDI	# spill
274     movdq   XMM17, RSI	# spill
27a     movdq   XMM16, RAX	# spill
280     movq    R13, R8	# spill
283     movq    RBP, R11	# spill
286     movq    RSI, RCX	# spill
289     movl    RAX, [rsp + #8]	# spill
28d     cmpl    RDX, R10
290     movdl   XMM18, RDX	# spill
296     movl    RBX, RDX	# spill
298     cmovlgt RBX, R10	# min
29c     xorl    RDI, RDI	# int
29e     xorl    RDX, RDX	# int

2a0     B30: #	out( B32 B31 ) <- in( B29 B31 ) Loop( B30-B31 inner pre of N789 reduction) Freq: 37954
2a0     movl    R8, [RSI + #16 + RDI << #2]	# int
2a5     sall    R8, #20
2a9     addl    RDX, R8	# int
2ac     movl    R11, RDI	# spill
2af     incl    R11	# int
2b2     cmpl    R11, RBX
2b5     jge,s   B32	# loop end  P=0.500000 C=9985635.000000

2b7     B31: #	out( B30 ) <- in( B30 )  Freq: 18977
2b7     movl    RDI, R11	# spill
2ba     jmp,s   B30

2bc     B32: #	out( B91 B33 ) <- in( B30 )  Freq: 18977
2bc     movl    RBX, R10	# spill
2bf     addl    RBX, #-63	# int
2c2     cmpl    R9, RBX
2c5     movl    R8, #-2147483648	# int
2cb     cmovll RBX, R8	# signed, int
2cf     cmpl    R11, RBX
2d2     jge     B91  P=0.000001 C=-1.000000

2d8     B33: #	out( B92 B34 ) <- in( B32 )  Freq: 18977
2d8     movl    RCX, RDI	# spill
2da     # castII of RCX
2da     incl    RCX	# int
        nop 	# 4 bytes pad for loops and calls
2e0     cmpl    RCX, R10	# unsigned
2e3     jae,u   B92  P=0.000001 C=-1.000000

2e9     B34: #	out( B93 B35 ) <- in( B33 )  Freq: 18976.9
2e9     cmpl    RCX, R10	# unsigned
2ec     jae,u   B93  P=0.000001 C=-1.000000

2f2     B35: #	out( B94 B36 ) <- in( B34 )  Freq: 18976.9
2f2     cmpl    R11, R10	# unsigned
2f5     jae,u   B94  P=0.000001 C=-1.000000

2fb     B36: #	out( B95 B37 ) <- in( B35 )  Freq: 18976.9
2fb     addl    RDI, #64	# int
        nop 	# 2 bytes pad for loops and calls
300     cmpl    RDI, R10	# unsigned
303     jae,u   B95  P=0.000001 C=-1.000000

309     B37: #	out( B38 ) <- in( B36 B39 ) Loop( B37-B39 ) Freq: 1.94501e+07
309     movl    RDI, RBX	# spill
30b     subl    RDI, RCX	# int
30d     xorl    R11, R11	# int
310     cmpl    RBX, RCX
312     cmovll RDI, R11	# signed, int
316     cmpl    RDI, #64000	# unsigned
31c     movl    R8, #64000	# int
322     cmovla RDI, R8	# unsigned, int
326     addl    RDI, RCX	# int
        nop 	# 8 bytes pad for loops and calls

330     B38: #	out( B38 B39 ) <- in( B37 B38 ) Loop( B38-B38 inner main of N253 reduction strip mined) Freq: 1.99352e+10
330     load_vector XMM0,[RSI + #240 + RCX << #2]
339     load_vector XMM2,[RSI + #208 + RCX << #2]
342     load_vector XMM3,[RSI + #176 + RCX << #2]
34b     load_vector XMM4,[RSI + #144 + RCX << #2]
354     load_vector XMM5,[RSI + #112 + RCX << #2]
35a     load_vector XMM7,[RSI + #80 + RCX << #2]
360     load_vector XMM6,[RSI + #48 + RCX << #2]
366     load_vector XMM1,[RSI + #16 + RCX << #2]
36c     vshiftd_imm  XMM0,XMM0,#20	! shift packedI
371     vshiftd_imm  XMM1,XMM1,#20	! shift packedI
376     vshiftd_imm  XMM2,XMM2,#20	! shift packedI
37b     vshiftd_imm  XMM3,XMM3,#20	! shift packedI
380     vshiftd_imm  XMM4,XMM4,#20	! shift packedI
385     vshiftd_imm  XMM5,XMM5,#20	! shift packedI
38a     vshiftd_imm  XMM6,XMM6,#20	! shift packedI
38f     vshiftd_imm  XMM7,XMM7,#20	! shift packedI
394     vector_reduction_int R11,RDX,XMM1 ; using XMM14, XMM15 as TEMP
3b7     vector_reduction_int R8,R11,XMM6 ; using XMM1, XMM14 as TEMP
3db     vector_reduction_int R11,R8,XMM7 ; using XMM1, XMM6 as TEMP
3fd     vector_reduction_int R8,R11,XMM5 ; using XMM1, XMM6 as TEMP
41f     vector_reduction_int R11,R8,XMM4 ; using XMM1, XMM5 as TEMP
441     vector_reduction_int R8,R11,XMM3 ; using XMM13, XMM8 as TEMP
465     vector_reduction_int R11,R8,XMM2 ; using XMM9, XMM10 as TEMP
489     vector_reduction_int RDX,R11,XMM0 ; using XMM11, XMM12 as TEMP
4ac     addl    RCX, #64	# int
4af     cmpl    RCX, RDI
4b1     jl     B38	# loop end  P=0.999024 C=9985635.000000

4b7     B39: #	out( B37 B40 ) <- in( B38 )  Freq: 1.94501e+07
4b7     # TLS is in R15
4b7     movq    R11, [R15 + #976 (32-bit)]	# ptr
4be     testl   rax, [R11]	# Safepoint: poll for GC        # myclassC1::doAction @ bci:22 (line 17) L[0]=_ L[1]=RSI L[2]=RDX L[3]=RCX
        # polymorphic::doCall @ bci:2 (line 35) L[0]=_ L[1]=_ L[2]=_
        # polymorphic::main @ bci:483 (line 97) L[0]=_ L[1]=_ L[2]=_ L[3]=RSI L[4]=RBP L[5]=_ L[6]=R13 L[7]=XMM16 L[8]=XMM17 L[9]=rsp + #32 L[10]=_ L[11]=RAX L[12]=_ STK[0]=R14
        # OopMap {rsi=Oop rbp=Oop r13=Oop xmm16=Oop xmm17=Oop off=1214/0x4be}
4c1     cmpl    RCX, RBX
4c3     jl     B37  P=0.999024 C=9985635.000000

4c9     B40: #	out( B44 B41 ) <- in( B39 )  Freq: 18976.9
4c9     movl    R8, R10	# spill
4cc     addl    R8, #-7	# int
4d0     cmpl    R9, R8
4d3     movl    R9, #-2147483648	# int
4d9     cmovll R8, R9	# signed, int
        nop 	# 3 bytes pad for loops and calls
4e0     cmpl    RCX, R8
4e3     jge     B44  P=0.500000 C=-1.000000

4e9     B41: #	out( B96 B42 ) <- in( B40 )  Freq: 9488.44
4e9     # castII of RCX
4e9     cmpl    RCX, R10	# unsigned
4ec     jae,u   B96  P=0.000001 C=-1.000000

4f2     B42: #	out( B98 B43 ) <- in( B41 )  Freq: 9488.43
4f2     movl    R11, RCX	# spill
4f5     addl    R11, #7	# int
4f9     cmpl    R11, R10	# unsigned
        nop 	# 4 bytes pad for loops and calls
500     jae,u   B98  P=0.000001 C=-1.000000
        nop 	# 2 bytes pad for loops and calls

508     B43: #	out( B43 B44 ) <- in( B42 B43 ) Loop( B43-B43 inner post of N1505 reduction) Freq: 18976.8
508     load_vector XMM0,[RSI + #16 + RCX << #2]
50e     vshiftd_imm  XMM0,XMM0,#20	! shift packedI
513     vector_reduction_int RDX,RDX,XMM0 ; using XMM2, XMM1 as TEMP
533     addl    RCX, #8	# int
536     cmpl    RCX, R8
539     jl,s   B43	# loop end  P=0.500000 C=9985635.000000

53b     B44: #	out( B48 B45 ) <- in( B91 B43 B40 )  Freq: 18976.9
        nop 	# 5 bytes pad for loops and calls
540     cmpl    RCX, R10
543     jge,s   B48  P=0.500000 C=-1.000000

545     B45: #	out( B97 B46 ) <- in( B44 )  Freq: 9488.44
545     # castII of RCX
545     cmpl    RCX, R10	# unsigned
548     jae,u   B97  P=0.000001 C=-1.000000

54e     B46: #	out( B99 B47 ) <- in( B45 )  Freq: 9488.43
54e     movl    R8, RCX	# spill
551     # castII of R8
551     cmpl    R8, R10	# unsigned
554     jae,u   B99  P=0.000001 C=-1.000000
        nop 	# 2 bytes pad for loops and calls

55c     B47: #	out( B47 B48 ) <- in( B46 B47 ) Loop( B47-B47 inner post of N789 reduction) Freq: 18976.8
55c     movl    R11, [RSI + #16 + RCX << #2]	# int
561     sall    R11, #20
565     addl    RDX, R11	# int
568     incl    RCX	# int
56a     cmpl    RCX, R10
56d     jl,s   B47	# loop end  P=0.500000 C=9985635.000000

56f     B48: #	out( B49 ) <- in( B47 B44 )  Freq: 18976.9
56f     imull   R10, RDX, #100	# int
573     addl    R10, R14	# int
576     movl    RBX, RAX	# spill
578     movq    RCX, RSI	# spill
57b     movq    R11, RBP	# spill
57e     movq    R8, R13	# spill
581     movdq   RAX, XMM16	# spill
587     movdq   RSI, XMM17	# spill
58d     movdl   RDX, XMM18	# spill
593     movdl   RDI, XMM20	# spill

599     B49: #	out( B52 ) <- in( B48 B76 )  Freq: 18995.4
599     movl    R14, R10	# spill
59c     jmp,s   B52

59e     B50: #	out( B21 B51 ) <- in( B23 )  Freq: 56971.9
59e     movl    R9, R10	# spill
5a1     addl    R9, #-2147483648	# int
5a8     cmpl    R9, #-2147483648	# unsigned
5af     jbe,u   B21  P=0.249984 C=3841.000000

5b5     B51: #	out( B21 B52 ) <- in( B50 )  Freq: 42729.9
5b5     cmpl    R10, #1
5b9     jne     B21  P=0.500000 C=3841.000000

5bf     B52: #	out( B77 B53 ) <- in( B49 B51 )  Freq: 40360.3
        nop 	# 1 bytes pad for loops and calls
5c0     testq   R11, R11	# ptr
5c3     je     B77  P=0.000001 C=-1.000000

5c9     B53: #	out( B78 B54 ) <- in( B52 )  Freq: 40360.3
5c9     testq   RAX, RAX	# ptr
5cc     je     B78  P=0.000001 C=-1.000000

5d2     B54: #	out( B110 B55 ) <- in( B53 )  Freq: 40360.2
5d2     movl    R10, [RCX + #12 (8-bit)]	# range
5d6     NullCheck RCX

5d6     B55: #	out( B75 B56 ) <- in( B54 )  Freq: 40360.2
5d6     testl   R10, R10	# unsigned
5d9     jbe,u   B75  P=0.000976 C=20014152.000000

5df     B56: #	out( B79 B57 ) <- in( B55 )  Freq: 40320.8
5df     movl    R9, R10	# spill
5e2     decl    R9	# int
5e5     cmpl    R9, R10	# unsigned
5e8     jae,u   B79  P=0.000001 C=-1.000000

5ee     B57: #	out( B58 ) <- in( B56 )  Freq: 40320.8
5ee     movl    [rsp + #0], RDX	# spill
5f1     movdq   XMM19, RSI	# spill
5f7     movdq   XMM18, RAX	# spill
5fd     movdq   XMM17, R8	# spill
603     movdq   XMM16, R11	# spill
609     movq    R13, RCX	# spill
60c     movl    RSI, RBX	# spill
60e     cmpl    RDI, R10
611     movl    [rsp + #4], RDI	# spill
615     movl    RCX, RDI	# spill
617     cmovlgt RCX, R10	# min
61b     xorl    RAX, RAX	# int
61d     xorl    R11, R11	# int

620     B58: #	out( B60 B59 ) <- in( B57 B59 ) Loop( B58-B59 inner pre of N800 reduction) Freq: 80641.6
620     movl    R8, [R13 + #16 + R11 << #2]	# int
625     sall    R8, #30
629     addl    RAX, R8	# int
62c     movl    RDI, R11	# spill
62f     incl    RDI	# int
631     cmpl    RDI, RCX
633     jge,s   B60	# loop end  P=0.500000 C=19994624.000000

635     B59: #	out( B58 ) <- in( B58 )  Freq: 40320.8
635     movl    R11, RDI	# spill
638     jmp,s   B58

63a     B60: #	out( B80 B61 ) <- in( B58 )  Freq: 40320.8
63a     movl    RBX, R10	# spill
63d     addl    RBX, #-63	# int
640     cmpl    R9, RBX
643     movl    RCX, #-2147483648	# int
648     cmovll RBX, RCX	# signed, int
64b     cmpl    RDI, RBX
64d     jge     B80  P=0.000001 C=-1.000000

653     B61: #	out( B81 B62 ) <- in( B60 )  Freq: 40320.7
653     movl    RCX, R11	# spill
656     # castII of RCX
656     incl    RCX	# int
658     cmpl    RCX, R10	# unsigned
        nop 	# 5 bytes pad for loops and calls
660     jae,u   B81  P=0.000001 C=-1.000000

666     B62: #	out( B82 B63 ) <- in( B61 )  Freq: 40320.7
666     cmpl    RDI, R10	# unsigned
669     jae,u   B82  P=0.000001 C=-1.000000

66f     B63: #	out( B83 B64 ) <- in( B62 )  Freq: 40320.7
66f     addl    R11, #64	# int
673     cmpl    R11, R10	# unsigned
676     jae,u   B83  P=0.000001 C=-1.000000

67c     B64: #	out( B65 ) <- in( B63 B66 ) Loop( B64-B66 ) Freq: 4.13262e+07
67c     movl    RDX, RBX	# spill
67e     subl    RDX, RCX	# int
680     xorl    R8, R8	# int
683     cmpl    RBX, RCX
685     cmovll RDX, R8	# signed, int
689     cmpl    RDX, #64000	# unsigned
68f     movl    R11, #64000	# int
695     cmovla RDX, R11	# unsigned, int
699     addl    RDX, RCX	# int
        nop 	# 5 bytes pad for loops and calls

6a0     B65: #	out( B65 B66 ) <- in( B64 B65 ) Loop( B65-B65 inner main of N363 reduction strip mined) Freq: 4.23568e+10
6a0     load_vector XMM0,[R13 + #240 + RCX << #2]
6aa     load_vector XMM2,[R13 + #208 + RCX << #2]
6b4     load_vector XMM3,[R13 + #176 + RCX << #2]
6be     load_vector XMM4,[R13 + #144 + RCX << #2]
6c8     load_vector XMM5,[R13 + #112 + RCX << #2]
6cf     load_vector XMM7,[R13 + #80 + RCX << #2]
6d6     load_vector XMM6,[R13 + #48 + RCX << #2]
6dd     load_vector XMM1,[R13 + #16 + RCX << #2]
6e4     vshiftd_imm  XMM0,XMM0,#30	! shift packedI
6e9     vshiftd_imm  XMM1,XMM1,#30	! shift packedI
6ee     vshiftd_imm  XMM2,XMM2,#30	! shift packedI
6f3     vshiftd_imm  XMM3,XMM3,#30	! shift packedI
6f8     vshiftd_imm  XMM4,XMM4,#30	! shift packedI
6fd     vshiftd_imm  XMM5,XMM5,#30	! shift packedI
702     vshiftd_imm  XMM6,XMM6,#30	! shift packedI
707     vshiftd_imm  XMM7,XMM7,#30	! shift packedI
70c     vector_reduction_int R11,RAX,XMM1 ; using XMM14, XMM15 as TEMP
72f     vector_reduction_int R8,R11,XMM6 ; using XMM1, XMM14 as TEMP
753     vector_reduction_int R11,R8,XMM7 ; using XMM1, XMM6 as TEMP
775     vector_reduction_int R8,R11,XMM5 ; using XMM1, XMM6 as TEMP
797     vector_reduction_int R11,R8,XMM4 ; using XMM1, XMM5 as TEMP
7b9     vector_reduction_int R8,R11,XMM3 ; using XMM13, XMM8 as TEMP
7dd     vector_reduction_int R11,R8,XMM2 ; using XMM11, XMM12 as TEMP
801     vector_reduction_int RAX,R11,XMM0 ; using XMM9, XMM10 as TEMP
824     addl    RCX, #64	# int
827     cmpl    RCX, RDX
829     jl     B65	# loop end  P=0.999024 C=19994624.000000

82f     B66: #	out( B64 B67 ) <- in( B65 )  Freq: 4.13262e+07
82f     # TLS is in R15
82f     movq    R11, [R15 + #976 (32-bit)]	# ptr
836     testl   rax, [R11]	# Safepoint: poll for GC        # myclassC2::doAction @ bci:22 (line 26) L[0]=_ L[1]=R13 L[2]=RAX L[3]=RCX
        # polymorphic::doCall @ bci:2 (line 35) L[0]=_ L[1]=_ L[2]=_
        # polymorphic::main @ bci:496 (line 98) L[0]=_ L[1]=_ L[2]=_ L[3]=R13 L[4]=XMM16 L[5]=_ L[6]=XMM17 L[7]=XMM18 L[8]=XMM19 L[9]=rsp + #32 L[10]=_ L[11]=RSI L[12]=_ STK[0]=R14
        # OopMap {r13=Oop xmm16=Oop xmm17=Oop xmm18=Oop xmm19=Oop off=2102/0x836}
839     cmpl    RCX, RBX
        nop 	# 5 bytes pad for loops and calls
840     jl     B64  P=0.999024 C=19994624.000000

846     B67: #	out( B71 B68 ) <- in( B66 )  Freq: 40320.6
846     movl    R11, R10	# spill
849     addl    R11, #-7	# int
84d     cmpl    R9, R11
850     movl    R8, #-2147483648	# int
856     cmovll R11, R8	# signed, int
        nop 	# 6 bytes pad for loops and calls
860     cmpl    RCX, R11
863     jge     B71  P=0.500000 C=-1.000000

869     B68: #	out( B85 B69 ) <- in( B67 )  Freq: 20160.3
869     # castII of RCX
869     cmpl    RCX, R10	# unsigned
86c     jae,u   B85  P=0.000001 C=-1.000000

872     B69: #	out( B87 B70 ) <- in( B68 )  Freq: 20160.3
872     movl    R9, RCX	# spill
875     addl    R9, #7	# int
879     cmpl    R9, R10	# unsigned
        nop 	# 4 bytes pad for loops and calls
880     jae,u   B87  P=0.000001 C=-1.000000
        nop 	# 2 bytes pad for loops and calls

888     B70: #	out( B70 B71 ) <- in( B69 B70 ) Loop( B70-B70 inner post of N1565 reduction) Freq: 40320.5
888     load_vector XMM0,[R13 + #16 + RCX << #2]
88f     vshiftd_imm  XMM0,XMM0,#30	! shift packedI
894     vector_reduction_int RAX,RAX,XMM0 ; using XMM2, XMM1 as TEMP
8b4     addl    RCX, #8	# int
8b7     cmpl    RCX, R11
8ba     jl,s   B70	# loop end  P=0.500000 C=19994624.000000

8bc     B71: #	out( B18 B72 ) <- in( B80 B70 B67 )  Freq: 40320.6
        nop 	# 4 bytes pad for loops and calls
8c0     cmpl    RCX, R10
8c3     jge     B18  P=0.500000 C=-1.000000

8c9     B72: #	out( B86 B73 ) <- in( B71 )  Freq: 20160.3
8c9     # castII of RCX
8c9     cmpl    RCX, R10	# unsigned
8cc     jae,u   B86  P=0.000001 C=-1.000000

8d2     B73: #	out( B17 B74 ) <- in( B72 )  Freq: 20160.3
8d2     movl    R8, RCX	# spill
8d5     # castII of R8
8d5     cmpl    R8, R10	# unsigned
8d8     jb,u   B17  P=0.999999 C=-1.000000

8de     B74: #	out( N1343 ) <- in( B73 )  Freq: 0.020428
8de     stop	# ShouldNotReachHere

8f2     B75: #	out( B19 ) <- in( B55 )  Freq: 39.3778
8f2     movl    RBP, R14	# spill
8f5     movl    [rsp + #0], RDX	# spill
8f8     movl    [rsp + #4], RDI	# spill
        nop 	# 4 bytes pad for loops and calls
900     jmp     B19

905     B76: #	out( B49 ) <- in( B27 )  Freq: 18.533
905     movl    R10, R14	# spill
908     jmp     B49

90d     B77: #	out( N1343 ) <- in( B52 )  Freq: 0.0408963
90d     movl    RSI, #-10	# int
912     movq    RBP, RAX	# spill
915     movq    [rsp + #0], RCX	# spill
        nop 	# 3 bytes pad for loops and calls
91c     call,static  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # polymorphic::main @ bci:496 (line 98) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=_ L[8]=_ L[9]=_ L[10]=_ L[11]=_ L[12]=_ STK[0]=_ STK[1]=#NULL STK[2]=RBP STK[3]=rsp + #0
        # OopMap {rbp=Oop [-98469116]=Oop off=2340/0x924}
924     stop	# ShouldNotReachHere

938     B78: #	out( N1343 ) <- in( B53 )  Freq: 0.0408962
938     movl    RSI, #-10	# int
93d     movq    RBP, RCX	# spill
940     call,static  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # polymorphic::doCall @ bci:2 (line 35) L[0]=_ L[1]=_ L[2]=_ STK[0]=#NULL STK[1]=RBP
        # polymorphic::main @ bci:496 (line 98) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=_ L[8]=_ L[9]=_ L[10]=_ L[11]=_ L[12]=_ STK[0]=_
        # OopMap {rbp=Oop off=2376/0x948}
948     stop	# ShouldNotReachHere

95c     B79: #	out( N1343 ) <- in( B56 )  Freq: 0.0408562
95c     movq    [rsp + #0], R11	# spill
960     movq    [rsp + #8], R8	# spill
965     movq    [rsp + #16], RAX	# spill
96a     movq    [rsp + #24], RSI	# spill
96f     movl    [rsp + #40], RBX	# spill
973     movl    [rsp + #44], R14	# spill
978     movq    [rsp + #48], RCX	# spill
97d     movl    [rsp + #56], R10	# spill
982     movl    RSI, #-138	# int
        nop 	# 1 bytes pad for loops and calls
988     call,static  wrapper for: uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')
        # myclassC2::doAction @ bci:7 (line 26) L[0]=_ L[1]=rsp + #48 L[2]=#0 L[3]=#0 STK[0]=#0 STK[1]=rsp + #56
        # polymorphic::doCall @ bci:2 (line 35) L[0]=_ L[1]=_ L[2]=_
        # polymorphic::main @ bci:496 (line 98) L[0]=_ L[1]=_ L[2]=_ L[3]=rsp + #48 L[4]=rsp + #0 L[5]=_ L[6]=rsp + #8 L[7]=rsp + #16 L[8]=rsp + #24 L[9]=rsp + #32 L[10]=_ L[11]=rsp + #40 L[12]=_ STK[0]=rsp + #44
        # OopMap {[-98469116]=Oop [-98469108]=Oop [-98469100]=Oop [-98469092]=Oop [-98469068]=Oop off=2448/0x990}
990     stop	# ShouldNotReachHere

9a4     B80: #	out( B71 ) <- in( B60 )  Freq: 0.0408562
9a4     movl    RCX, RDI	# spill
9a6     jmp     B71

9ab     B81: #	out( N1343 ) <- in( B61 )  Freq: 0.0408562
9ab     stop	# ShouldNotReachHere

9bf     B82: #	out( N1343 ) <- in( B62 )  Freq: 0.0408561
9bf     stop	# ShouldNotReachHere

9d3     B83: #	out( N1343 ) <- in( B63 )  Freq: 0.0408561
9d3     stop	# ShouldNotReachHere

9e7     B84: #	out( N1343 ) <- in( B22 )  Freq: 0.0362241
9e7     movl    RSI, #-187	# int
9ec     movl    RBP, R14	# spill
        nop 	# 1 bytes pad for loops and calls
9f0     call,static  wrapper for: uncommon_trap(reason='unstable_if' action='reinterpret' debug_id='0')
        # polymorphic::main @ bci:444 (line 95) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=RBP L[6]=_ L[7]=_ L[8]=_ L[9]=rsp + #32 L[10]=_ L[11]=_ L[12]=_ STK[0]=rsp + #8 STK[1]=#100000
        # OopMap {off=2552/0x9f8}
9f8     stop	# ShouldNotReachHere

a0c     B85: #	out( N1343 ) <- in( B68 )  Freq: 0.020428
a0c     stop	# ShouldNotReachHere

a20     B86: #	out( N1343 ) <- in( B72 )  Freq: 0.020428
a20     stop	# ShouldNotReachHere

a34     B87: #	out( N1343 ) <- in( B69 )  Freq: 0.020428
a34     stop	# ShouldNotReachHere

a48     B88: #	out( N1343 ) <- in( B24 )  Freq: 0.0192478
a48     movl    RSI, #-10	# int
a4d     movq    RBP, R8	# spill
a50     movq    [rsp + #0], RCX	# spill
a54     call,static  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # polymorphic::main @ bci:483 (line 97) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=_ L[8]=_ L[9]=_ L[10]=_ L[11]=_ L[12]=_ STK[0]=_ STK[1]=#NULL STK[2]=RBP STK[3]=rsp + #0
        # OopMap {rbp=Oop [-98469116]=Oop off=2652/0xa5c}
a5c     stop	# ShouldNotReachHere

a70     B89: #	out( N1343 ) <- in( B25 )  Freq: 0.0192478
a70     movl    RSI, #-10	# int
a75     movq    RBP, RCX	# spill
a78     call,static  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # polymorphic::doCall @ bci:2 (line 35) L[0]=_ L[1]=_ L[2]=_ STK[0]=#NULL STK[1]=RBP
        # polymorphic::main @ bci:483 (line 97) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=_ L[8]=_ L[9]=_ L[10]=_ L[11]=_ L[12]=_ STK[0]=_
        # OopMap {rbp=Oop off=2688/0xa80}
a80     stop	# ShouldNotReachHere

a94     B90: #	out( N1343 ) <- in( B28 )  Freq: 0.019229
a94     movq    [rsp + #0], R11	# spill
a98     movq    [rsp + #8], R8	# spill
a9d     movq    [rsp + #16], RAX	# spill
aa2     movq    [rsp + #24], RSI	# spill
aa7     movl    [rsp + #40], RBX	# spill
aab     movl    [rsp + #44], R14	# spill
ab0     movq    [rsp + #48], RCX	# spill
ab5     movl    [rsp + #56], R10	# spill
aba     movl    RSI, #-138	# int
        nop 	# 1 bytes pad for loops and calls
ac0     call,static  wrapper for: uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')
        # myclassC1::doAction @ bci:7 (line 17) L[0]=_ L[1]=rsp + #48 L[2]=#0 L[3]=#0 STK[0]=#0 STK[1]=rsp + #56
        # polymorphic::doCall @ bci:2 (line 35) L[0]=_ L[1]=_ L[2]=_
        # polymorphic::main @ bci:483 (line 97) L[0]=_ L[1]=_ L[2]=_ L[3]=rsp + #48 L[4]=rsp + #0 L[5]=_ L[6]=rsp + #8 L[7]=rsp + #16 L[8]=rsp + #24 L[9]=rsp + #32 L[10]=_ L[11]=rsp + #40 L[12]=_ STK[0]=rsp + #44
        # OopMap {[-98469116]=Oop [-98469108]=Oop [-98469100]=Oop [-98469092]=Oop [-98469068]=Oop off=2760/0xac8}
ac8     stop	# ShouldNotReachHere

adc     B91: #	out( B44 ) <- in( B32 )  Freq: 0.019229
adc     movl    RCX, R11	# spill
        nop 	# 1 bytes pad for loops and calls
ae0     jmp     B44

ae5     B92: #	out( N1343 ) <- in( B33 )  Freq: 0.019229
ae5     stop	# ShouldNotReachHere

af9     B93: #	out( N1343 ) <- in( B34 )  Freq: 0.0192289
af9     stop	# ShouldNotReachHere

b0d     B94: #	out( N1343 ) <- in( B35 )  Freq: 0.0192289
b0d     stop	# ShouldNotReachHere

b21     B95: #	out( N1343 ) <- in( B36 )  Freq: 0.0192289
b21     stop	# ShouldNotReachHere

b35     B96: #	out( N1343 ) <- in( B41 )  Freq: 0.00961444
b35     stop	# ShouldNotReachHere

b49     B97: #	out( N1343 ) <- in( B45 )  Freq: 0.00961444
b49     stop	# ShouldNotReachHere

b5d     B98: #	out( N1343 ) <- in( B42 )  Freq: 0.00961443
b5d     stop	# ShouldNotReachHere

b71     B99: #	out( N1343 ) <- in( B46 )  Freq: 0.00961443
b71     stop	# ShouldNotReachHere

b85     B100: #	out( B4 ) <- in( B1 )  Freq: 0.000999987
b85     xorl    RCX, RCX	# ptr
b87     jmp     B4

b8c     B101: #	out( B7 ) <- in( B4 )  Freq: 0.000999986
b8c     xorl    R11, R11	# ptr
b8f     jmp     B7

b94     B102: #	out( B10 ) <- in( B7 )  Freq: 0.000999985
b94     xorl    R8, R8	# ptr
b97     jmp     B10

b9c     B103: #	out( B13 ) <- in( B10 )  Freq: 0.000999984
b9c     xorl    RAX, RAX	# ptr
        nop 	# 2 bytes pad for loops and calls
ba0     jmp     B13

ba5     B104: #	out( B16 ) <- in( B13 )  Freq: 0.000999983
ba5     xorl    RSI, RSI	# ptr
ba7     jmp     B16

bac     B105: #	out( B107 ) <- in( B2 )  Freq: 9.99e-07
bac     movq    R13, RBP	# spill
baf     movq    R9, [rsp + #0]	# spill
bb3     movq    RDI, [rsp + #16]	# spill
bb8     jmp,s   B107

bba     B106: #	out( B107 ) <- in( B5 )  Freq: 9.98999e-07
bba     movq    R9, [rsp + #0]	# spill
bbe     movq    RDI, [rsp + #16]	# spill

bc3     B107: #	out( N1343 ) <- in( B105 B106 B108 B11 B14 )  Freq: 4.99499e-06
bc3     movl    RSI, #-115	# int
bc8     movl    RBP, R14	# spill
bcb     movq    R10, [rsp + #32]	# spill
bd0     movq    [rsp + #0], R10	# spill
bd4     movq    [rsp + #16], RBX	# spill
bd9     movq    [rsp + #32], R13	# spill
bde     movq    [rsp + #40], R9	# spill
be3     movq    [rsp + #48], RDI	# spill
be8     call,static  wrapper for: uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')
        # polymorphic::main @ bci:440 (line 95) L[0]=_ L[1]=_ L[2]=_ L[3]=rsp + #16 L[4]=rsp + #32 L[5]=RBP L[6]=rsp + #40 L[7]=rsp + #48 L[8]=rsp + #24 L[9]=rsp + #0 L[10]=_ L[11]=rsp + #8 L[12]=_
        # OopMap {[-98469100]=Oop [-98469092]=Oop [-98469084]=Oop [-98469076]=Oop [-98469068]=Oop off=3056/0xbf0}
bf0     stop	# ShouldNotReachHere

c04     B108: #	out( B107 ) <- in( B8 )  Freq: 9.98998e-07
c04     movq    RDI, [rsp + #16]	# spill
c09     jmp,s   B107

c0b     B109: #	out( N1343 ) <- in( B19 )  Freq: 0.4036
c0b     # exception oop is in rax; no code emitted
c0b     movq    RSI, RAX	# spill
c0e     vzeroupper
	addq    rsp, 80	# Destroy frame
	popq    rbp

c16     jmp     rethrow_stub

c1b     B110: #	out( N1343 ) <- in( B54 )  Freq: 0.0408962
c1b     movl    RSI, #-10	# int
c20     call,static  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # myclassC2::doAction @ bci:6 (line 26) L[0]=_ L[1]=_ L[2]=_ L[3]=_ STK[0]=_ STK[1]=#NULL
        # polymorphic::doCall @ bci:2 (line 35) L[0]=_ L[1]=_ L[2]=_
        # polymorphic::main @ bci:496 (line 98) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=_ L[8]=_ L[9]=_ L[10]=_ L[11]=_ L[12]=_ STK[0]=_
        # OopMap {off=3112/0xc28}
c28     stop	# ShouldNotReachHere

c3c     B111: #	out( N1343 ) <- in( B26 )  Freq: 0.0192478
c3c     movl    RSI, #-10	# int
        nop 	# 3 bytes pad for loops and calls
c44     call,static  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # myclassC1::doAction @ bci:6 (line 17) L[0]=_ L[1]=_ L[2]=_ L[3]=_ STK[0]=_ STK[1]=#NULL
        # polymorphic::doCall @ bci:2 (line 35) L[0]=_ L[1]=_ L[2]=_
        # polymorphic::main @ bci:483 (line 97) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=_ L[8]=_ L[9]=_ L[10]=_ L[11]=_ L[12]=_ STK[0]=_
        # OopMap {off=3148/0xc4c}
c4c     stop	# ShouldNotReachHere

--------------------------------------------------------------------------------
----------------------------------- Assembly -----------------------------------

Compiled method (c2)    4279   28 %           polymorphic::main @ 440 (545 bytes)
 total in heap  [0x00007f13f8f18710,0x00007f13f8f19ed8] = 6088
 relocation     [0x00007f13f8f18870,0x00007f13f8f189e0] = 368
 main code      [0x00007f13f8f189e0,0x00007f13f8f19640] = 3168
 stub code      [0x00007f13f8f19640,0x00007f13f8f19658] = 24
 oops           [0x00007f13f8f19658,0x00007f13f8f19660] = 8
 metadata       [0x00007f13f8f19660,0x00007f13f8f196b0] = 80
 scopes data    [0x00007f13f8f196b0,0x00007f13f8f199a0] = 752
 scopes pcs     [0x00007f13f8f199a0,0x00007f13f8f19e90] = 1264
 dependencies   [0x00007f13f8f19e90,0x00007f13f8f19ea8] = 24
 handler table  [0x00007f13f8f19ea8,0x00007f13f8f19ec0] = 24
 nul chk table  [0x00007f13f8f19ec0,0x00007f13f8f19ed8] = 24

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x00007f13ac511858} 'main' '([Ljava/lang/String;)V' in 'polymorphic'
 ;; N1343: #	out( B1 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x00007f13f8f189e0:   callq  0x00007f13fd536748           ;   {runtime_call os::breakpoint()}
  0x00007f13f8f189e5:   nop
  0x00007f13f8f189e6:   nop
  0x00007f13f8f189e7:   nop
  0x00007f13f8f189e8:   nop
  0x00007f13f8f189e9:   nop
  0x00007f13f8f189ea:   nop
  0x00007f13f8f189eb:   nop
  0x00007f13f8f189ec:   nop
  0x00007f13f8f189ed:   nop
  0x00007f13f8f189ee:   nop
  0x00007f13f8f189ef:   nop
 ;; B1: #	out( B100 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x00007f13f8f189f0:   mov    %eax,-0x18000(%rsp)
  0x00007f13f8f189f7:   push   %rbp
  0x00007f13f8f189f8:   sub    $0x50,%rsp
  0x00007f13f8f189fc:   mov    0x48(%rsi),%rbx
  0x00007f13f8f18a00:   mov    0x40(%rsi),%rbp
  0x00007f13f8f18a04:   mov    0x8(%rsi),%r11d
  0x00007f13f8f18a08:   mov    %r11d,0x8(%rsp)
  0x00007f13f8f18a0d:   mov    0x30(%rsi),%r10
  0x00007f13f8f18a11:   mov    %r10,(%rsp)
  0x00007f13f8f18a15:   mov    0x28(%rsi),%r10
  0x00007f13f8f18a19:   mov    %r10,0x10(%rsp)
  0x00007f13f8f18a1e:   mov    0x20(%rsi),%r10
  0x00007f13f8f18a22:   mov    %r10,0x18(%rsp)
  0x00007f13f8f18a27:   mov    0x38(%rsi),%r14d
  0x00007f13f8f18a2b:   mov    0x10(%rsi),%r10
  0x00007f13f8f18a2f:   mov    %r10,0x20(%rsp)
  0x00007f13f8f18a34:   mov    %rsi,%rdi
  0x00007f13f8f18a37:   nop
  0x00007f13f8f18a38:   nop
  0x00007f13f8f18a39:   nop
  0x00007f13f8f18a3a:   nop
  0x00007f13f8f18a3b:   nop
  0x00007f13f8f18a3c:   nop
  0x00007f13f8f18a3d:   nop
  0x00007f13f8f18a3e:   nop
  0x00007f13f8f18a3f:   nop
  0x00007f13f8f18a40:   vzeroupper 
  0x00007f13f8f18a43:   movabs $0x7f13fd632f88,%r10
  0x00007f13f8f18a4d:   callq  *%r10
  0x00007f13f8f18a50:   test   %rbx,%rbx
  0x00007f13f8f18a53:   je     0x00007f13f8f19565
 ;; B2: #	out( B105 B3 ) <- in( B1 )  Freq: 0.999
  0x00007f13f8f18a59:   mov    0x8(%rbx),%r11d
  0x00007f13f8f18a5d:   nop
  0x00007f13f8f18a5e:   nop
  0x00007f13f8f18a5f:   nop
  0x00007f13f8f18a60:   cmp    $0x40dc8,%r11d               ;   {metadata({type array int})}
  0x00007f13f8f18a67:   jne    0x00007f13f8f1958c
 ;; B3: #	out( B4 ) <- in( B2 )  Freq: 0.998999
  0x00007f13f8f18a6d:   mov    %rbx,%rcx
 ;; B4: #	out( B101 B5 ) <- in( B3 B100 )  Freq: 0.999999
  0x00007f13f8f18a70:   mov    %rbp,%r13
  0x00007f13f8f18a73:   test   %rbp,%rbp
  0x00007f13f8f18a76:   je     0x00007f13f8f1956c
 ;; B5: #	out( B106 B6 ) <- in( B4 )  Freq: 0.998999
  0x00007f13f8f18a7c:   mov    0x8(%rbp),%r10d
  0x00007f13f8f18a80:   cmp    $0xc1000,%r10d               ;   {metadata('polymorphic')}
  0x00007f13f8f18a87:   jne    0x00007f13f8f1959a
 ;; B6: #	out( B7 ) <- in( B5 )  Freq: 0.998998
  0x00007f13f8f18a8d:   mov    %rbp,%r11
 ;; B7: #	out( B102 B8 ) <- in( B6 B101 )  Freq: 0.999998
  0x00007f13f8f18a90:   mov    (%rsp),%r9
  0x00007f13f8f18a94:   test   %r9,%r9
  0x00007f13f8f18a97:   je     0x00007f13f8f19574
 ;; B8: #	out( B108 B9 ) <- in( B7 )  Freq: 0.998998
  0x00007f13f8f18a9d:   mov    0x8(%r9),%r8d
  0x00007f13f8f18aa1:   cmp    $0xc1420,%r8d                ;   {metadata('myclassC1')}
  0x00007f13f8f18aa8:   jne    0x00007f13f8f195e4
 ;; B9: #	out( B10 ) <- in( B8 )  Freq: 0.998997
  0x00007f13f8f18aae:   mov    %r9,%r8
 ;; B10: #	out( B103 B11 ) <- in( B9 B102 )  Freq: 0.999997
  0x00007f13f8f18ab1:   mov    0x10(%rsp),%rdi
  0x00007f13f8f18ab6:   test   %rdi,%rdi
  0x00007f13f8f18ab9:   je     0x00007f13f8f1957c
 ;; B11: #	out( B107 B12 ) <- in( B10 )  Freq: 0.998997
  0x00007f13f8f18abf:   mov    0x8(%rdi),%r10d
  0x00007f13f8f18ac3:   cmp    $0xc1638,%r10d               ;   {metadata('myclassC2')}
  0x00007f13f8f18aca:   jne    0x00007f13f8f195a3
 ;; B12: #	out( B13 ) <- in( B11 )  Freq: 0.998996
  0x00007f13f8f18ad0:   mov    %rdi,%rax
 ;; B13: #	out( B104 B14 ) <- in( B12 B103 )  Freq: 0.999996
  0x00007f13f8f18ad3:   mov    0x18(%rsp),%r10
  0x00007f13f8f18ad8:   test   %r10,%r10
  0x00007f13f8f18adb:   nop
  0x00007f13f8f18adc:   nop
  0x00007f13f8f18add:   nop
  0x00007f13f8f18ade:   nop
  0x00007f13f8f18adf:   nop
  0x00007f13f8f18ae0:   je     0x00007f13f8f19585
 ;; B14: #	out( B107 B15 ) <- in( B13 )  Freq: 0.998996
  0x00007f13f8f18ae6:   mov    %r8,%rsi
  0x00007f13f8f18ae9:   mov    0x8(%r10),%r10d
  0x00007f13f8f18aed:   movabs $0x8000c1210,%r8             ;   {metadata('myclassP')}
  0x00007f13f8f18af7:   movabs $0x800000000,%rdx
  0x00007f13f8f18b01:   add    %r10,%rdx
  0x00007f13f8f18b04:   mov    0x40(%rdx),%r10
  0x00007f13f8f18b08:   cmp    %r8,%r10
  0x00007f13f8f18b0b:   jne    0x00007f13f8f195a3
 ;; B15: #	out( B16 ) <- in( B14 )  Freq: 0.998995
  0x00007f13f8f18b11:   mov    0x18(%rsp),%r10
  0x00007f13f8f18b16:   mov    %rsi,%r8
  0x00007f13f8f18b19:   mov    %r10,%rsi                    ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - polymorphic::main@440 (line 95)
 ;; B16: #	out( B22 ) <- in( B15 B104 )  Freq: 0.999995
  0x00007f13f8f18b1c:   mov    %ecx,%r10d
  0x00007f13f8f18b1f:   mov    %ecx,%r9d
  0x00007f13f8f18b22:   shr    $0x2,%r10d
  0x00007f13f8f18b26:   shr    $0x2,%r9d
  0x00007f13f8f18b2a:   and    $0x7,%r10d
  0x00007f13f8f18b2e:   and    $0x7,%r9d
  0x00007f13f8f18b32:   mov    $0x3,%edi
  0x00007f13f8f18b37:   sub    %r9d,%edi
  0x00007f13f8f18b3a:   mov    $0x3,%edx
  0x00007f13f8f18b3f:   sub    %r10d,%edx
  0x00007f13f8f18b42:   and    $0x7,%edi
  0x00007f13f8f18b45:   and    $0x7,%edx
  0x00007f13f8f18b48:   inc    %edi
  0x00007f13f8f18b4a:   inc    %edx
  0x00007f13f8f18b4c:   jmpq   0x00007f13f8f18bf7
  0x00007f13f8f18b51:   nop
  0x00007f13f8f18b52:   nop
  0x00007f13f8f18b53:   nop                                 ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC2::doAction@10 (line 27)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@496 (line 98)
 ;; B17: #	out( B17 B18 ) <- in( B73 B17 ) Loop( B17-B17 inner post of N800 reduction) Freq: 40320.5
  0x00007f13f8f18b54:   mov    0x10(%r13,%rcx,4),%r11d
  0x00007f13f8f18b59:   shl    $0x1e,%r11d
  0x00007f13f8f18b5d:   add    %r11d,%eax                   ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC2::doAction@17 (line 27)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@496 (line 98)
  0x00007f13f8f18b60:   inc    %ecx                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC2::doAction@19 (line 26)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@496 (line 98)
  0x00007f13f8f18b62:   cmp    %r10d,%ecx
  0x00007f13f8f18b65:   jl     0x00007f13f8f18b54           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC2::doAction@7 (line 26)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@496 (line 98)
 ;; B18: #	out( B19 ) <- in( B17 B71 ) top-of-loop Freq: 40320.6
  0x00007f13f8f18b67:   imul   $0x64,%eax,%ebp
  0x00007f13f8f18b6a:   add    %r14d,%ebp
  0x00007f13f8f18b6d:   mov    %esi,%ebx
  0x00007f13f8f18b6f:   mov    %r13,%rcx
  0x00007f13f8f18b72:   vmovq  %xmm16,%r11
  0x00007f13f8f18b78:   vmovq  %xmm17,%r8
  0x00007f13f8f18b7e:   vmovq  %xmm18,%rax
  0x00007f13f8f18b84:   vmovq  %xmm19,%rsi                  ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - polymorphic::main@499 (line 98)
 ;; B19: #	out( B109 B20 ) <- in( B18 B75 )  Freq: 40360
  0x00007f13f8f18b8a:   mov    %rsi,0x38(%rsp)
  0x00007f13f8f18b8f:   mov    %rax,0x30(%rsp)
  0x00007f13f8f18b94:   mov    %r8,0x28(%rsp)
  0x00007f13f8f18b99:   mov    %r11,0x18(%rsp)
  0x00007f13f8f18b9e:   mov    %rcx,0x10(%rsp)
  0x00007f13f8f18ba3:   mov    %ebx,0x8(%rsp)               ;*synchronization entry
                                                            ; - polymorphic::doCall@-1 (line 35)
                                                            ; - polymorphic::main@509 (line 99)
  0x00007f13f8f18ba7:   mov    %rcx,%rdx
  0x00007f13f8f18baa:   vzeroupper 
  0x00007f13f8f18bad:   movabs $0xffffffffffffffff,%rax
  0x00007f13f8f18bb7:   callq  0x00007f13f8fd39a0           ; ImmutableOopMap {[-98469100]=Oop [-98469092]=Oop [-98469076]=Oop [-98469068]=Oop [-98469060]=Oop }
                                                            ;*invokevirtual doAction {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@509 (line 99)
                                                            ;   {virtual_call}
 ;; B20: #	out( B21 ) <- in( B19 )  Freq: 40359.2
  0x00007f13f8f18bbc:   imul   $0x64,%eax,%r14d
  0x00007f13f8f18bc0:   add    %ebp,%r14d                   ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - polymorphic::main@512 (line 99)
  0x00007f13f8f18bc3:   mov    0x8(%rsp),%ebx
  0x00007f13f8f18bc7:   mov    0x10(%rsp),%rcx
  0x00007f13f8f18bcc:   mov    0x18(%rsp),%r11
  0x00007f13f8f18bd1:   mov    0x28(%rsp),%r8
  0x00007f13f8f18bd6:   mov    0x30(%rsp),%rax
  0x00007f13f8f18bdb:   mov    0x38(%rsp),%rsi
  0x00007f13f8f18be0:   mov    (%rsp),%edx
  0x00007f13f8f18be3:   mov    0x4(%rsp),%edi               ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC1::doAction@22 (line 17)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@483 (line 97)
 ;; B21: #	out( B22 ) <- in( B20 B51 B50 ) top-of-loop Freq: 75966.1
  0x00007f13f8f18be7:   mov    0x3d0(%r15),%r10
  0x00007f13f8f18bee:   inc    %ebx                         ; ImmutableOopMap {r11=Oop r8=Oop rcx=Oop rsi=Oop rax=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) polymorphic::main@518 (line 95)
  0x00007f13f8f18bf0:   test   %eax,(%r10)                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - polymorphic::main@518 (line 95)
                                                            ;   {poll}
  0x00007f13f8f18bf3:   mov    %ebx,0x8(%rsp)               ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - polymorphic::main@440 (line 95)
 ;; B22: #	out( B84 B23 ) <- in( B16 B21 ) Loop( B22-B21 ) Freq: 75967.5
  0x00007f13f8f18bf7:   mov    0x8(%rsp),%ebx
  0x00007f13f8f18bfb:   nop
  0x00007f13f8f18bfc:   nop
  0x00007f13f8f18bfd:   nop
  0x00007f13f8f18bfe:   nop
  0x00007f13f8f18bff:   nop
  0x00007f13f8f18c00:   cmp    $0x186a0,%ebx
  0x00007f13f8f18c06:   jge    0x00007f13f8f193c7           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - polymorphic::main@444 (line 95)
 ;; B23: #	out( B50 B24 ) <- in( B22 )  Freq: 75967.5
  0x00007f13f8f18c0c:   mov    0x8(%rsp),%r10d
  0x00007f13f8f18c11:   and    $0x3,%r10d                   ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - polymorphic::main@450 (line 96)
  0x00007f13f8f18c15:   test   %r10d,%r10d
  0x00007f13f8f18c18:   jne    0x00007f13f8f18f7e           ;*lookupswitch {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - polymorphic::main@451 (line 96)
 ;; B24: #	out( B88 B25 ) <- in( B23 )  Freq: 18995.6
  0x00007f13f8f18c1e:   nop
  0x00007f13f8f18c1f:   nop
  0x00007f13f8f18c20:   test   %r11,%r11
  0x00007f13f8f18c23:   je     0x00007f13f8f19428           ;*invokevirtual doCall {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - polymorphic::main@483 (line 97)
 ;; B25: #	out( B89 B26 ) <- in( B24 )  Freq: 18995.6
  0x00007f13f8f18c29:   test   %r8,%r8
  0x00007f13f8f18c2c:   je     0x00007f13f8f19450           ;*invokevirtual doAction {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@483 (line 97)
 ;; B26: #	out( B111 B27 ) <- in( B25 )  Freq: 18995.5
  0x00007f13f8f18c32:   mov    0xc(%rcx),%r10d              ; implicit exception: dispatches to 0x00007f13f8f1961c
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC1::doAction@6 (line 17)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@483 (line 97)
 ;; B27: #	out( B76 B28 ) <- in( B26 )  Freq: 18995.5
  0x00007f13f8f18c36:   test   %r10d,%r10d
  0x00007f13f8f18c39:   jbe    0x00007f13f8f192e5           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC1::doAction@7 (line 17)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@483 (line 97)
 ;; B28: #	out( B90 B29 ) <- in( B27 )  Freq: 18977
  0x00007f13f8f18c3f:   mov    %r10d,%r9d
  0x00007f13f8f18c42:   dec    %r9d
  0x00007f13f8f18c45:   cmp    %r10d,%r9d
  0x00007f13f8f18c48:   jae    0x00007f13f8f19474
 ;; B29: #	out( B30 ) <- in( B28 )  Freq: 18977
  0x00007f13f8f18c4e:   vmovd  %edi,%xmm20
  0x00007f13f8f18c54:   vmovq  %rsi,%xmm17
  0x00007f13f8f18c5a:   vmovq  %rax,%xmm16
  0x00007f13f8f18c60:   mov    %r8,%r13
  0x00007f13f8f18c63:   mov    %r11,%rbp
  0x00007f13f8f18c66:   mov    %rcx,%rsi
  0x00007f13f8f18c69:   mov    0x8(%rsp),%eax
  0x00007f13f8f18c6d:   cmp    %r10d,%edx
  0x00007f13f8f18c70:   vmovd  %edx,%xmm18
  0x00007f13f8f18c76:   mov    %edx,%ebx
  0x00007f13f8f18c78:   cmovg  %r10d,%ebx
  0x00007f13f8f18c7c:   xor    %edi,%edi
  0x00007f13f8f18c7e:   xor    %edx,%edx                    ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC1::doAction@10 (line 18)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@483 (line 97)
 ;; B30: #	out( B32 B31 ) <- in( B29 B31 ) Loop( B30-B31 inner pre of N789 reduction) Freq: 37954
  0x00007f13f8f18c80:   mov    0x10(%rsi,%rdi,4),%r8d
  0x00007f13f8f18c85:   shl    $0x14,%r8d
  0x00007f13f8f18c89:   add    %r8d,%edx                    ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC1::doAction@17 (line 18)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@483 (line 97)
  0x00007f13f8f18c8c:   mov    %edi,%r11d
  0x00007f13f8f18c8f:   inc    %r11d                        ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC1::doAction@19 (line 17)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@483 (line 97)
  0x00007f13f8f18c92:   cmp    %ebx,%r11d
  0x00007f13f8f18c95:   jge    0x00007f13f8f18c9c           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC1::doAction@7 (line 17)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@483 (line 97)
 ;; B31: #	out( B30 ) <- in( B30 )  Freq: 18977
  0x00007f13f8f18c97:   mov    %r11d,%edi
  0x00007f13f8f18c9a:   jmp    0x00007f13f8f18c80
 ;; B32: #	out( B91 B33 ) <- in( B30 )  Freq: 18977
  0x00007f13f8f18c9c:   mov    %r10d,%ebx
  0x00007f13f8f18c9f:   add    $0xffffffc1,%ebx
  0x00007f13f8f18ca2:   cmp    %ebx,%r9d
  0x00007f13f8f18ca5:   mov    $0x80000000,%r8d
  0x00007f13f8f18cab:   cmovl  %r8d,%ebx
  0x00007f13f8f18caf:   cmp    %ebx,%r11d
  0x00007f13f8f18cb2:   jge    0x00007f13f8f194bc
 ;; B33: #	out( B92 B34 ) <- in( B32 )  Freq: 18977
  0x00007f13f8f18cb8:   mov    %edi,%ecx
  0x00007f13f8f18cba:   inc    %ecx
  0x00007f13f8f18cbc:   nop
  0x00007f13f8f18cbd:   nop
  0x00007f13f8f18cbe:   nop
  0x00007f13f8f18cbf:   nop
  0x00007f13f8f18cc0:   cmp    %r10d,%ecx
  0x00007f13f8f18cc3:   jae    0x00007f13f8f194c5
 ;; B34: #	out( B93 B35 ) <- in( B33 )  Freq: 18976.9
  0x00007f13f8f18cc9:   cmp    %r10d,%ecx
  0x00007f13f8f18ccc:   jae    0x00007f13f8f194d9
 ;; B35: #	out( B94 B36 ) <- in( B34 )  Freq: 18976.9
  0x00007f13f8f18cd2:   cmp    %r10d,%r11d
  0x00007f13f8f18cd5:   jae    0x00007f13f8f194ed
 ;; B36: #	out( B95 B37 ) <- in( B35 )  Freq: 18976.9
  0x00007f13f8f18cdb:   add    $0x40,%edi
  0x00007f13f8f18cde:   nop
  0x00007f13f8f18cdf:   nop
  0x00007f13f8f18ce0:   cmp    %r10d,%edi
  0x00007f13f8f18ce3:   jae    0x00007f13f8f19501
 ;; B37: #	out( B38 ) <- in( B36 B39 ) Loop( B37-B39 ) Freq: 1.94501e+07
  0x00007f13f8f18ce9:   mov    %ebx,%edi
  0x00007f13f8f18ceb:   sub    %ecx,%edi
  0x00007f13f8f18ced:   xor    %r11d,%r11d
  0x00007f13f8f18cf0:   cmp    %ecx,%ebx
  0x00007f13f8f18cf2:   cmovl  %r11d,%edi
  0x00007f13f8f18cf6:   cmp    $0xfa00,%edi
  0x00007f13f8f18cfc:   mov    $0xfa00,%r8d
  0x00007f13f8f18d02:   cmova  %r8d,%edi
  0x00007f13f8f18d06:   add    %ecx,%edi
  0x00007f13f8f18d08:   nop
  0x00007f13f8f18d09:   nop
  0x00007f13f8f18d0a:   nop
  0x00007f13f8f18d0b:   nop
  0x00007f13f8f18d0c:   nop
  0x00007f13f8f18d0d:   nop
  0x00007f13f8f18d0e:   nop
  0x00007f13f8f18d0f:   nop                                 ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC1::doAction@10 (line 18)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@483 (line 97)
 ;; B38: #	out( B38 B39 ) <- in( B37 B38 ) Loop( B38-B38 inner main of N253 reduction strip mined) Freq: 1.99352e+10
  0x00007f13f8f18d10:   vmovdqu 0xf0(%rsi,%rcx,4),%ymm0
  0x00007f13f8f18d19:   vmovdqu 0xd0(%rsi,%rcx,4),%ymm2
  0x00007f13f8f18d22:   vmovdqu 0xb0(%rsi,%rcx,4),%ymm3
  0x00007f13f8f18d2b:   vmovdqu 0x90(%rsi,%rcx,4),%ymm4
  0x00007f13f8f18d34:   vmovdqu 0x70(%rsi,%rcx,4),%ymm5
  0x00007f13f8f18d3a:   vmovdqu 0x50(%rsi,%rcx,4),%ymm7
  0x00007f13f8f18d40:   vmovdqu 0x30(%rsi,%rcx,4),%ymm6
  0x00007f13f8f18d46:   vmovdqu 0x10(%rsi,%rcx,4),%ymm1
  0x00007f13f8f18d4c:   vpslld $0x14,%ymm0,%ymm0
  0x00007f13f8f18d51:   vpslld $0x14,%ymm1,%ymm1
  0x00007f13f8f18d56:   vpslld $0x14,%ymm2,%ymm2
  0x00007f13f8f18d5b:   vpslld $0x14,%ymm3,%ymm3
  0x00007f13f8f18d60:   vpslld $0x14,%ymm4,%ymm4
  0x00007f13f8f18d65:   vpslld $0x14,%ymm5,%ymm5
  0x00007f13f8f18d6a:   vpslld $0x14,%ymm6,%ymm6
  0x00007f13f8f18d6f:   vpslld $0x14,%ymm7,%ymm7
  0x00007f13f8f18d74:   vphaddd %ymm1,%ymm1,%ymm14
  0x00007f13f8f18d79:   vextracti128 $0x1,%ymm14,%xmm15
  0x00007f13f8f18d7f:   vpaddd %xmm15,%xmm14,%xmm14
  0x00007f13f8f18d84:   vphaddd %xmm14,%xmm14,%xmm14
  0x00007f13f8f18d89:   vmovd  %edx,%xmm15
  0x00007f13f8f18d8d:   vpaddd %xmm15,%xmm14,%xmm14
  0x00007f13f8f18d92:   vmovd  %xmm14,%r11d
  0x00007f13f8f18d97:   vphaddd %ymm6,%ymm6,%ymm1
  0x00007f13f8f18d9c:   vextracti128 $0x1,%ymm1,%xmm14
  0x00007f13f8f18da2:   vpaddd %xmm14,%xmm1,%xmm1
  0x00007f13f8f18da7:   vphaddd %xmm1,%xmm1,%xmm1
  0x00007f13f8f18dac:   vmovd  %r11d,%xmm14
  0x00007f13f8f18db1:   vpaddd %xmm14,%xmm1,%xmm1
  0x00007f13f8f18db6:   vmovd  %xmm1,%r8d
  0x00007f13f8f18dbb:   vphaddd %ymm7,%ymm7,%ymm1
  0x00007f13f8f18dc0:   vextracti128 $0x1,%ymm1,%xmm6
  0x00007f13f8f18dc6:   vpaddd %xmm6,%xmm1,%xmm1
  0x00007f13f8f18dca:   vphaddd %xmm1,%xmm1,%xmm1
  0x00007f13f8f18dcf:   vmovd  %r8d,%xmm6
  0x00007f13f8f18dd4:   vpaddd %xmm6,%xmm1,%xmm1
  0x00007f13f8f18dd8:   vmovd  %xmm1,%r11d
  0x00007f13f8f18ddd:   vphaddd %ymm5,%ymm5,%ymm1
  0x00007f13f8f18de2:   vextracti128 $0x1,%ymm1,%xmm6
  0x00007f13f8f18de8:   vpaddd %xmm6,%xmm1,%xmm1
  0x00007f13f8f18dec:   vphaddd %xmm1,%xmm1,%xmm1           ;   {no_reloc}
  0x00007f13f8f18df1:   vmovd  %r11d,%xmm6
  0x00007f13f8f18df6:   vpaddd %xmm6,%xmm1,%xmm1
  0x00007f13f8f18dfa:   vmovd  %xmm1,%r8d
  0x00007f13f8f18dff:   vphaddd %ymm4,%ymm4,%ymm1
  0x00007f13f8f18e04:   vextracti128 $0x1,%ymm1,%xmm5
  0x00007f13f8f18e0a:   vpaddd %xmm5,%xmm1,%xmm1
  0x00007f13f8f18e0e:   vphaddd %xmm1,%xmm1,%xmm1
  0x00007f13f8f18e13:   vmovd  %r8d,%xmm5
  0x00007f13f8f18e18:   vpaddd %xmm5,%xmm1,%xmm1
  0x00007f13f8f18e1c:   vmovd  %xmm1,%r11d
  0x00007f13f8f18e21:   vphaddd %ymm3,%ymm3,%ymm13
  0x00007f13f8f18e26:   vextracti128 $0x1,%ymm13,%xmm8
  0x00007f13f8f18e2c:   vpaddd %xmm8,%xmm13,%xmm13
  0x00007f13f8f18e31:   vphaddd %xmm13,%xmm13,%xmm13
  0x00007f13f8f18e36:   vmovd  %r11d,%xmm8
  0x00007f13f8f18e3b:   vpaddd %xmm8,%xmm13,%xmm13
  0x00007f13f8f18e40:   vmovd  %xmm13,%r8d
  0x00007f13f8f18e45:   vphaddd %ymm2,%ymm2,%ymm9
  0x00007f13f8f18e4a:   vextracti128 $0x1,%ymm9,%xmm10
  0x00007f13f8f18e50:   vpaddd %xmm10,%xmm9,%xmm9
  0x00007f13f8f18e55:   vphaddd %xmm9,%xmm9,%xmm9
  0x00007f13f8f18e5a:   vmovd  %r8d,%xmm10
  0x00007f13f8f18e5f:   vpaddd %xmm10,%xmm9,%xmm9
  0x00007f13f8f18e64:   vmovd  %xmm9,%r11d
  0x00007f13f8f18e69:   vphaddd %ymm0,%ymm0,%ymm11
  0x00007f13f8f18e6e:   vextracti128 $0x1,%ymm11,%xmm12
  0x00007f13f8f18e74:   vpaddd %xmm12,%xmm11,%xmm11
  0x00007f13f8f18e79:   vphaddd %xmm11,%xmm11,%xmm11
  0x00007f13f8f18e7e:   vmovd  %r11d,%xmm12
  0x00007f13f8f18e83:   vpaddd %xmm12,%xmm11,%xmm11
  0x00007f13f8f18e88:   vmovd  %xmm11,%edx                  ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC1::doAction@17 (line 18)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@483 (line 97)
  0x00007f13f8f18e8c:   add    $0x40,%ecx                   ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC1::doAction@19 (line 17)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@483 (line 97)
  0x00007f13f8f18e8f:   cmp    %edi,%ecx
  0x00007f13f8f18e91:   jl     0x00007f13f8f18d10           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC1::doAction@22 (line 17)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@483 (line 97)
 ;; B39: #	out( B37 B40 ) <- in( B38 )  Freq: 1.94501e+07
  0x00007f13f8f18e97:   mov    0x3d0(%r15),%r11             ; ImmutableOopMap {rsi=Oop rbp=Oop r13=Oop xmm16=Oop xmm17=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) myclassC1::doAction@22 (line 17)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@483 (line 97)
  0x00007f13f8f18e9e:   test   %eax,(%r11)                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC1::doAction@22 (line 17)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@483 (line 97)
                                                            ;   {poll}
  0x00007f13f8f18ea1:   cmp    %ebx,%ecx
  0x00007f13f8f18ea3:   jl     0x00007f13f8f18ce9
 ;; B40: #	out( B44 B41 ) <- in( B39 )  Freq: 18976.9
  0x00007f13f8f18ea9:   mov    %r10d,%r8d
  0x00007f13f8f18eac:   add    $0xfffffff9,%r8d
  0x00007f13f8f18eb0:   cmp    %r8d,%r9d
  0x00007f13f8f18eb3:   mov    $0x80000000,%r9d
  0x00007f13f8f18eb9:   cmovl  %r9d,%r8d
  0x00007f13f8f18ebd:   nop
  0x00007f13f8f18ebe:   nop
  0x00007f13f8f18ebf:   nop
  0x00007f13f8f18ec0:   cmp    %r8d,%ecx
  0x00007f13f8f18ec3:   jge    0x00007f13f8f18f1b
 ;; B41: #	out( B96 B42 ) <- in( B40 )  Freq: 9488.44
  0x00007f13f8f18ec9:   cmp    %r10d,%ecx
  0x00007f13f8f18ecc:   jae    0x00007f13f8f19515
 ;; B42: #	out( B98 B43 ) <- in( B41 )  Freq: 9488.43
  0x00007f13f8f18ed2:   mov    %ecx,%r11d
  0x00007f13f8f18ed5:   add    $0x7,%r11d
  0x00007f13f8f18ed9:   cmp    %r10d,%r11d
  0x00007f13f8f18edc:   nop
  0x00007f13f8f18edd:   nop
  0x00007f13f8f18ede:   nop
  0x00007f13f8f18edf:   nop
  0x00007f13f8f18ee0:   jae    0x00007f13f8f1953d
  0x00007f13f8f18ee6:   nop
  0x00007f13f8f18ee7:   nop                                 ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC1::doAction@10 (line 18)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@483 (line 97)
 ;; B43: #	out( B43 B44 ) <- in( B42 B43 ) Loop( B43-B43 inner post of N1505 reduction) Freq: 18976.8
  0x00007f13f8f18ee8:   vmovdqu 0x10(%rsi,%rcx,4),%ymm0
  0x00007f13f8f18eee:   vpslld $0x14,%ymm0,%ymm0
  0x00007f13f8f18ef3:   vphaddd %ymm0,%ymm0,%ymm2
  0x00007f13f8f18ef8:   vextracti128 $0x1,%ymm2,%xmm1
  0x00007f13f8f18efe:   vpaddd %xmm1,%xmm2,%xmm2
  0x00007f13f8f18f02:   vphaddd %xmm2,%xmm2,%xmm2
  0x00007f13f8f18f07:   vmovd  %edx,%xmm1
  0x00007f13f8f18f0b:   vpaddd %xmm1,%xmm2,%xmm2
  0x00007f13f8f18f0f:   vmovd  %xmm2,%edx                   ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC1::doAction@17 (line 18)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@483 (line 97)
  0x00007f13f8f18f13:   add    $0x8,%ecx                    ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC1::doAction@19 (line 17)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@483 (line 97)
  0x00007f13f8f18f16:   cmp    %r8d,%ecx
  0x00007f13f8f18f19:   jl     0x00007f13f8f18ee8           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC1::doAction@7 (line 17)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@483 (line 97)
 ;; B44: #	out( B48 B45 ) <- in( B91 B43 B40 )  Freq: 18976.9
  0x00007f13f8f18f1b:   nop
  0x00007f13f8f18f1c:   nop
  0x00007f13f8f18f1d:   nop
  0x00007f13f8f18f1e:   nop
  0x00007f13f8f18f1f:   nop
  0x00007f13f8f18f20:   cmp    %r10d,%ecx
  0x00007f13f8f18f23:   jge    0x00007f13f8f18f4f
 ;; B45: #	out( B97 B46 ) <- in( B44 )  Freq: 9488.44
  0x00007f13f8f18f25:   cmp    %r10d,%ecx
  0x00007f13f8f18f28:   jae    0x00007f13f8f19529
 ;; B46: #	out( B99 B47 ) <- in( B45 )  Freq: 9488.43
  0x00007f13f8f18f2e:   mov    %ecx,%r8d
  0x00007f13f8f18f31:   cmp    %r10d,%r8d
  0x00007f13f8f18f34:   jae    0x00007f13f8f19551
  0x00007f13f8f18f3a:   nop
  0x00007f13f8f18f3b:   nop                                 ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC1::doAction@10 (line 18)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@483 (line 97)
 ;; B47: #	out( B47 B48 ) <- in( B46 B47 ) Loop( B47-B47 inner post of N789 reduction) Freq: 18976.8
  0x00007f13f8f18f3c:   mov    0x10(%rsi,%rcx,4),%r11d
  0x00007f13f8f18f41:   shl    $0x14,%r11d
  0x00007f13f8f18f45:   add    %r11d,%edx                   ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC1::doAction@17 (line 18)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@483 (line 97)
  0x00007f13f8f18f48:   inc    %ecx                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC1::doAction@19 (line 17)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@483 (line 97)
  0x00007f13f8f18f4a:   cmp    %r10d,%ecx
  0x00007f13f8f18f4d:   jl     0x00007f13f8f18f3c           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC1::doAction@7 (line 17)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@483 (line 97)
 ;; B48: #	out( B49 ) <- in( B47 B44 )  Freq: 18976.9
  0x00007f13f8f18f4f:   imul   $0x64,%edx,%r10d
  0x00007f13f8f18f53:   add    %r14d,%r10d
  0x00007f13f8f18f56:   mov    %eax,%ebx
  0x00007f13f8f18f58:   mov    %rsi,%rcx
  0x00007f13f8f18f5b:   mov    %rbp,%r11
  0x00007f13f8f18f5e:   mov    %r13,%r8
  0x00007f13f8f18f61:   vmovq  %xmm16,%rax
  0x00007f13f8f18f67:   vmovq  %xmm17,%rsi
  0x00007f13f8f18f6d:   vmovd  %xmm18,%edx
  0x00007f13f8f18f73:   vmovd  %xmm20,%edi                  ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - polymorphic::main@486 (line 97)
 ;; B49: #	out( B52 ) <- in( B48 B76 )  Freq: 18995.4
  0x00007f13f8f18f79:   mov    %r10d,%r14d
  0x00007f13f8f18f7c:   jmp    0x00007f13f8f18f9f
 ;; B50: #	out( B21 B51 ) <- in( B23 )  Freq: 56971.9
  0x00007f13f8f18f7e:   mov    %r10d,%r9d
  0x00007f13f8f18f81:   add    $0x80000000,%r9d
  0x00007f13f8f18f88:   cmp    $0x80000000,%r9d
  0x00007f13f8f18f8f:   jbe    0x00007f13f8f18be7
 ;; B51: #	out( B21 B52 ) <- in( B50 )  Freq: 42729.9
  0x00007f13f8f18f95:   cmp    $0x1,%r10d
  0x00007f13f8f18f99:   jne    0x00007f13f8f18be7           ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - polymorphic::main@489 (line 98)
 ;; B52: #	out( B77 B53 ) <- in( B49 B51 )  Freq: 40360.3
  0x00007f13f8f18f9f:   nop
  0x00007f13f8f18fa0:   test   %r11,%r11
  0x00007f13f8f18fa3:   je     0x00007f13f8f192ed           ;*invokevirtual doCall {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - polymorphic::main@496 (line 98)
 ;; B53: #	out( B78 B54 ) <- in( B52 )  Freq: 40360.3
  0x00007f13f8f18fa9:   test   %rax,%rax
  0x00007f13f8f18fac:   je     0x00007f13f8f19318           ;*invokevirtual doAction {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@496 (line 98)
 ;; B54: #	out( B110 B55 ) <- in( B53 )  Freq: 40360.2
  0x00007f13f8f18fb2:   mov    0xc(%rcx),%r10d              ; implicit exception: dispatches to 0x00007f13f8f195fb
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC2::doAction@6 (line 26)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@496 (line 98)
 ;; B55: #	out( B75 B56 ) <- in( B54 )  Freq: 40360.2
  0x00007f13f8f18fb6:   test   %r10d,%r10d
  0x00007f13f8f18fb9:   jbe    0x00007f13f8f192d2           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC2::doAction@7 (line 26)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@496 (line 98)
 ;; B56: #	out( B79 B57 ) <- in( B55 )  Freq: 40320.8
  0x00007f13f8f18fbf:   mov    %r10d,%r9d
  0x00007f13f8f18fc2:   dec    %r9d
  0x00007f13f8f18fc5:   cmp    %r10d,%r9d
  0x00007f13f8f18fc8:   jae    0x00007f13f8f1933c
 ;; B57: #	out( B58 ) <- in( B56 )  Freq: 40320.8
  0x00007f13f8f18fce:   mov    %edx,(%rsp)
  0x00007f13f8f18fd1:   vmovq  %rsi,%xmm19
  0x00007f13f8f18fd7:   vmovq  %rax,%xmm18
  0x00007f13f8f18fdd:   vmovq  %r8,%xmm17
  0x00007f13f8f18fe3:   vmovq  %r11,%xmm16
  0x00007f13f8f18fe9:   mov    %rcx,%r13
  0x00007f13f8f18fec:   mov    %ebx,%esi
  0x00007f13f8f18fee:   cmp    %r10d,%edi
  0x00007f13f8f18ff1:   mov    %edi,0x4(%rsp)
  0x00007f13f8f18ff5:   mov    %edi,%ecx
  0x00007f13f8f18ff7:   cmovg  %r10d,%ecx
  0x00007f13f8f18ffb:   xor    %eax,%eax
  0x00007f13f8f18ffd:   xor    %r11d,%r11d                  ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC2::doAction@10 (line 27)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@496 (line 98)
 ;; B58: #	out( B60 B59 ) <- in( B57 B59 ) Loop( B58-B59 inner pre of N800 reduction) Freq: 80641.6
  0x00007f13f8f19000:   mov    0x10(%r13,%r11,4),%r8d
  0x00007f13f8f19005:   shl    $0x1e,%r8d
  0x00007f13f8f19009:   add    %r8d,%eax                    ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC2::doAction@17 (line 27)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@496 (line 98)
  0x00007f13f8f1900c:   mov    %r11d,%edi
  0x00007f13f8f1900f:   inc    %edi                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC2::doAction@19 (line 26)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@496 (line 98)
  0x00007f13f8f19011:   cmp    %ecx,%edi
  0x00007f13f8f19013:   jge    0x00007f13f8f1901a           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC2::doAction@7 (line 26)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@496 (line 98)
 ;; B59: #	out( B58 ) <- in( B58 )  Freq: 40320.8
  0x00007f13f8f19015:   mov    %edi,%r11d
  0x00007f13f8f19018:   jmp    0x00007f13f8f19000
 ;; B60: #	out( B80 B61 ) <- in( B58 )  Freq: 40320.8
  0x00007f13f8f1901a:   mov    %r10d,%ebx
  0x00007f13f8f1901d:   add    $0xffffffc1,%ebx
  0x00007f13f8f19020:   cmp    %ebx,%r9d
  0x00007f13f8f19023:   mov    $0x80000000,%ecx
  0x00007f13f8f19028:   cmovl  %ecx,%ebx
  0x00007f13f8f1902b:   cmp    %ebx,%edi
  0x00007f13f8f1902d:   jge    0x00007f13f8f19384
 ;; B61: #	out( B81 B62 ) <- in( B60 )  Freq: 40320.7
  0x00007f13f8f19033:   mov    %r11d,%ecx
  0x00007f13f8f19036:   inc    %ecx
  0x00007f13f8f19038:   cmp    %r10d,%ecx
  0x00007f13f8f1903b:   nop
  0x00007f13f8f1903c:   nop
  0x00007f13f8f1903d:   nop
  0x00007f13f8f1903e:   nop
  0x00007f13f8f1903f:   nop
  0x00007f13f8f19040:   jae    0x00007f13f8f1938b
 ;; B62: #	out( B82 B63 ) <- in( B61 )  Freq: 40320.7
  0x00007f13f8f19046:   cmp    %r10d,%edi
  0x00007f13f8f19049:   jae    0x00007f13f8f1939f
 ;; B63: #	out( B83 B64 ) <- in( B62 )  Freq: 40320.7
  0x00007f13f8f1904f:   add    $0x40,%r11d
  0x00007f13f8f19053:   cmp    %r10d,%r11d
  0x00007f13f8f19056:   jae    0x00007f13f8f193b3
 ;; B64: #	out( B65 ) <- in( B63 B66 ) Loop( B64-B66 ) Freq: 4.13262e+07
  0x00007f13f8f1905c:   mov    %ebx,%edx
  0x00007f13f8f1905e:   sub    %ecx,%edx
  0x00007f13f8f19060:   xor    %r8d,%r8d
  0x00007f13f8f19063:   cmp    %ecx,%ebx
  0x00007f13f8f19065:   cmovl  %r8d,%edx
  0x00007f13f8f19069:   cmp    $0xfa00,%edx
  0x00007f13f8f1906f:   mov    $0xfa00,%r11d
  0x00007f13f8f19075:   cmova  %r11d,%edx
  0x00007f13f8f19079:   add    %ecx,%edx
  0x00007f13f8f1907b:   nop
  0x00007f13f8f1907c:   nop
  0x00007f13f8f1907d:   nop
  0x00007f13f8f1907e:   nop
  0x00007f13f8f1907f:   nop                                 ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC2::doAction@10 (line 27)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@496 (line 98)
 ;; B65: #	out( B65 B66 ) <- in( B64 B65 ) Loop( B65-B65 inner main of N363 reduction strip mined) Freq: 4.23568e+10
  0x00007f13f8f19080:   vmovdqu 0xf0(%r13,%rcx,4),%ymm0
  0x00007f13f8f1908a:   vmovdqu 0xd0(%r13,%rcx,4),%ymm2
  0x00007f13f8f19094:   vmovdqu 0xb0(%r13,%rcx,4),%ymm3     ;   {no_reloc}
  0x00007f13f8f1909e:   vmovdqu 0x90(%r13,%rcx,4),%ymm4
  0x00007f13f8f190a8:   vmovdqu 0x70(%r13,%rcx,4),%ymm5
  0x00007f13f8f190af:   vmovdqu 0x50(%r13,%rcx,4),%ymm7
  0x00007f13f8f190b6:   vmovdqu 0x30(%r13,%rcx,4),%ymm6
  0x00007f13f8f190bd:   vmovdqu 0x10(%r13,%rcx,4),%ymm1
  0x00007f13f8f190c4:   vpslld $0x1e,%ymm0,%ymm0
  0x00007f13f8f190c9:   vpslld $0x1e,%ymm1,%ymm1
  0x00007f13f8f190ce:   vpslld $0x1e,%ymm2,%ymm2
  0x00007f13f8f190d3:   vpslld $0x1e,%ymm3,%ymm3
  0x00007f13f8f190d8:   vpslld $0x1e,%ymm4,%ymm4
  0x00007f13f8f190dd:   vpslld $0x1e,%ymm5,%ymm5
  0x00007f13f8f190e2:   vpslld $0x1e,%ymm6,%ymm6
  0x00007f13f8f190e7:   vpslld $0x1e,%ymm7,%ymm7
  0x00007f13f8f190ec:   vphaddd %ymm1,%ymm1,%ymm14
  0x00007f13f8f190f1:   vextracti128 $0x1,%ymm14,%xmm15
  0x00007f13f8f190f7:   vpaddd %xmm15,%xmm14,%xmm14
  0x00007f13f8f190fc:   vphaddd %xmm14,%xmm14,%xmm14
  0x00007f13f8f19101:   vmovd  %eax,%xmm15
  0x00007f13f8f19105:   vpaddd %xmm15,%xmm14,%xmm14
  0x00007f13f8f1910a:   vmovd  %xmm14,%r11d
  0x00007f13f8f1910f:   vphaddd %ymm6,%ymm6,%ymm1
  0x00007f13f8f19114:   vextracti128 $0x1,%ymm1,%xmm14
  0x00007f13f8f1911a:   vpaddd %xmm14,%xmm1,%xmm1
  0x00007f13f8f1911f:   vphaddd %xmm1,%xmm1,%xmm1
  0x00007f13f8f19124:   vmovd  %r11d,%xmm14
  0x00007f13f8f19129:   vpaddd %xmm14,%xmm1,%xmm1
  0x00007f13f8f1912e:   vmovd  %xmm1,%r8d
  0x00007f13f8f19133:   vphaddd %ymm7,%ymm7,%ymm1
  0x00007f13f8f19138:   vextracti128 $0x1,%ymm1,%xmm6
  0x00007f13f8f1913e:   vpaddd %xmm6,%xmm1,%xmm1
  0x00007f13f8f19142:   vphaddd %xmm1,%xmm1,%xmm1
  0x00007f13f8f19147:   vmovd  %r8d,%xmm6
  0x00007f13f8f1914c:   vpaddd %xmm6,%xmm1,%xmm1
  0x00007f13f8f19150:   vmovd  %xmm1,%r11d
  0x00007f13f8f19155:   vphaddd %ymm5,%ymm5,%ymm1
  0x00007f13f8f1915a:   vextracti128 $0x1,%ymm1,%xmm6
  0x00007f13f8f19160:   vpaddd %xmm6,%xmm1,%xmm1
  0x00007f13f8f19164:   vphaddd %xmm1,%xmm1,%xmm1
  0x00007f13f8f19169:   vmovd  %r11d,%xmm6
  0x00007f13f8f1916e:   vpaddd %xmm6,%xmm1,%xmm1
  0x00007f13f8f19172:   vmovd  %xmm1,%r8d
  0x00007f13f8f19177:   vphaddd %ymm4,%ymm4,%ymm1
  0x00007f13f8f1917c:   vextracti128 $0x1,%ymm1,%xmm5
  0x00007f13f8f19182:   vpaddd %xmm5,%xmm1,%xmm1
  0x00007f13f8f19186:   vphaddd %xmm1,%xmm1,%xmm1
  0x00007f13f8f1918b:   vmovd  %r8d,%xmm5
  0x00007f13f8f19190:   vpaddd %xmm5,%xmm1,%xmm1
  0x00007f13f8f19194:   vmovd  %xmm1,%r11d
  0x00007f13f8f19199:   vphaddd %ymm3,%ymm3,%ymm13
  0x00007f13f8f1919e:   vextracti128 $0x1,%ymm13,%xmm8
  0x00007f13f8f191a4:   vpaddd %xmm8,%xmm13,%xmm13
  0x00007f13f8f191a9:   vphaddd %xmm13,%xmm13,%xmm13
  0x00007f13f8f191ae:   vmovd  %r11d,%xmm8
  0x00007f13f8f191b3:   vpaddd %xmm8,%xmm13,%xmm13
  0x00007f13f8f191b8:   vmovd  %xmm13,%r8d
  0x00007f13f8f191bd:   vphaddd %ymm2,%ymm2,%ymm11
  0x00007f13f8f191c2:   vextracti128 $0x1,%ymm11,%xmm12
  0x00007f13f8f191c8:   vpaddd %xmm12,%xmm11,%xmm11
  0x00007f13f8f191cd:   vphaddd %xmm11,%xmm11,%xmm11
  0x00007f13f8f191d2:   vmovd  %r8d,%xmm12
  0x00007f13f8f191d7:   vpaddd %xmm12,%xmm11,%xmm11
  0x00007f13f8f191dc:   vmovd  %xmm11,%r11d
  0x00007f13f8f191e1:   vphaddd %ymm0,%ymm0,%ymm9
  0x00007f13f8f191e6:   vextracti128 $0x1,%ymm9,%xmm10
  0x00007f13f8f191ec:   vpaddd %xmm10,%xmm9,%xmm9
  0x00007f13f8f191f1:   vphaddd %xmm9,%xmm9,%xmm9
  0x00007f13f8f191f6:   vmovd  %r11d,%xmm10
  0x00007f13f8f191fb:   vpaddd %xmm10,%xmm9,%xmm9
  0x00007f13f8f19200:   vmovd  %xmm9,%eax                   ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC2::doAction@17 (line 27)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@496 (line 98)
  0x00007f13f8f19204:   add    $0x40,%ecx                   ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC2::doAction@19 (line 26)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@496 (line 98)
  0x00007f13f8f19207:   cmp    %edx,%ecx
  0x00007f13f8f19209:   jl     0x00007f13f8f19080           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC1::doAction@22 (line 17)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@483 (line 97)
 ;; B66: #	out( B64 B67 ) <- in( B65 )  Freq: 4.13262e+07
  0x00007f13f8f1920f:   mov    0x3d0(%r15),%r11             ; ImmutableOopMap {r13=Oop xmm16=Oop xmm17=Oop xmm18=Oop xmm19=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) myclassC2::doAction@22 (line 26)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@496 (line 98)
  0x00007f13f8f19216:   test   %eax,(%r11)                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC2::doAction@22 (line 26)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@496 (line 98)
                                                            ;   {poll}
  0x00007f13f8f19219:   cmp    %ebx,%ecx
  0x00007f13f8f1921b:   nop
  0x00007f13f8f1921c:   nop
  0x00007f13f8f1921d:   nop
  0x00007f13f8f1921e:   nop
  0x00007f13f8f1921f:   nop
  0x00007f13f8f19220:   jl     0x00007f13f8f1905c
 ;; B67: #	out( B71 B68 ) <- in( B66 )  Freq: 40320.6
  0x00007f13f8f19226:   mov    %r10d,%r11d
  0x00007f13f8f19229:   add    $0xfffffff9,%r11d
  0x00007f13f8f1922d:   cmp    %r11d,%r9d
  0x00007f13f8f19230:   mov    $0x80000000,%r8d
  0x00007f13f8f19236:   cmovl  %r8d,%r11d
  0x00007f13f8f1923a:   nop
  0x00007f13f8f1923b:   nop
  0x00007f13f8f1923c:   nop
  0x00007f13f8f1923d:   nop
  0x00007f13f8f1923e:   nop
  0x00007f13f8f1923f:   nop
  0x00007f13f8f19240:   cmp    %r11d,%ecx
  0x00007f13f8f19243:   jge    0x00007f13f8f1929c
 ;; B68: #	out( B85 B69 ) <- in( B67 )  Freq: 20160.3
  0x00007f13f8f19249:   cmp    %r10d,%ecx
  0x00007f13f8f1924c:   jae    0x00007f13f8f193ec
 ;; B69: #	out( B87 B70 ) <- in( B68 )  Freq: 20160.3
  0x00007f13f8f19252:   mov    %ecx,%r9d
  0x00007f13f8f19255:   add    $0x7,%r9d
  0x00007f13f8f19259:   cmp    %r10d,%r9d
  0x00007f13f8f1925c:   nop
  0x00007f13f8f1925d:   nop
  0x00007f13f8f1925e:   nop
  0x00007f13f8f1925f:   nop
  0x00007f13f8f19260:   jae    0x00007f13f8f19414
  0x00007f13f8f19266:   nop
  0x00007f13f8f19267:   nop                                 ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC2::doAction@10 (line 27)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@496 (line 98)
 ;; B70: #	out( B70 B71 ) <- in( B69 B70 ) Loop( B70-B70 inner post of N1565 reduction) Freq: 40320.5
  0x00007f13f8f19268:   vmovdqu 0x10(%r13,%rcx,4),%ymm0
  0x00007f13f8f1926f:   vpslld $0x1e,%ymm0,%ymm0
  0x00007f13f8f19274:   vphaddd %ymm0,%ymm0,%ymm2
  0x00007f13f8f19279:   vextracti128 $0x1,%ymm2,%xmm1
  0x00007f13f8f1927f:   vpaddd %xmm1,%xmm2,%xmm2
  0x00007f13f8f19283:   vphaddd %xmm2,%xmm2,%xmm2
  0x00007f13f8f19288:   vmovd  %eax,%xmm1
  0x00007f13f8f1928c:   vpaddd %xmm1,%xmm2,%xmm2
  0x00007f13f8f19290:   vmovd  %xmm2,%eax                   ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC2::doAction@17 (line 27)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@496 (line 98)
  0x00007f13f8f19294:   add    $0x8,%ecx                    ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC2::doAction@19 (line 26)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@496 (line 98)
  0x00007f13f8f19297:   cmp    %r11d,%ecx
  0x00007f13f8f1929a:   jl     0x00007f13f8f19268           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC2::doAction@7 (line 26)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@496 (line 98)
 ;; B71: #	out( B18 B72 ) <- in( B80 B70 B67 )  Freq: 40320.6
  0x00007f13f8f1929c:   nop
  0x00007f13f8f1929d:   nop
  0x00007f13f8f1929e:   nop
  0x00007f13f8f1929f:   nop
  0x00007f13f8f192a0:   cmp    %r10d,%ecx
  0x00007f13f8f192a3:   jge    0x00007f13f8f18b67
 ;; B72: #	out( B86 B73 ) <- in( B71 )  Freq: 20160.3
  0x00007f13f8f192a9:   cmp    %r10d,%ecx
  0x00007f13f8f192ac:   jae    0x00007f13f8f19400
 ;; B73: #	out( B17 B74 ) <- in( B72 )  Freq: 20160.3
  0x00007f13f8f192b2:   mov    %ecx,%r8d
  0x00007f13f8f192b5:   cmp    %r10d,%r8d
  0x00007f13f8f192b8:   jb     0x00007f13f8f18b54
 ;; B74: #	out( N1343 ) <- in( B73 )  Freq: 0.020428
  0x00007f13f8f192be:   movabs $0x7f13fde3d268,%rdi         ;   {external_word}
  0x00007f13f8f192c8:   and    $0xfffffffffffffff0,%rsp
  0x00007f13f8f192cc:   callq  0x00007f13fd3b2bb4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f13f8f192d1:   hlt    
 ;; B75: #	out( B19 ) <- in( B55 )  Freq: 39.3778
  0x00007f13f8f192d2:   mov    %r14d,%ebp
  0x00007f13f8f192d5:   mov    %edx,(%rsp)
  0x00007f13f8f192d8:   mov    %edi,0x4(%rsp)
  0x00007f13f8f192dc:   nop
  0x00007f13f8f192dd:   nop
  0x00007f13f8f192de:   nop
  0x00007f13f8f192df:   nop
  0x00007f13f8f192e0:   jmpq   0x00007f13f8f18b8a
 ;; B76: #	out( B49 ) <- in( B27 )  Freq: 18.533
  0x00007f13f8f192e5:   mov    %r14d,%r10d
  0x00007f13f8f192e8:   jmpq   0x00007f13f8f18f79
 ;; B77: #	out( N1343 ) <- in( B52 )  Freq: 0.0408963
  0x00007f13f8f192ed:   mov    $0xfffffff6,%esi
  0x00007f13f8f192f2:   mov    %rax,%rbp
  0x00007f13f8f192f5:   mov    %rcx,(%rsp)
  0x00007f13f8f192f9:   nop
  0x00007f13f8f192fa:   nop
  0x00007f13f8f192fb:   nop
  0x00007f13f8f192fc:   vzeroupper 
  0x00007f13f8f192ff:   callq  0x00007f13f8fdf820           ; ImmutableOopMap {rbp=Oop [-98469116]=Oop }
                                                            ;*invokevirtual doCall {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - polymorphic::main@496 (line 98)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f13f8f19304:   movabs $0x7f13fdc92548,%rdi         ;   {external_word}
  0x00007f13f8f1930e:   and    $0xfffffffffffffff0,%rsp
  0x00007f13f8f19312:   callq  0x00007f13fd3b2bb4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f13f8f19317:   hlt    
 ;; B78: #	out( N1343 ) <- in( B53 )  Freq: 0.0408962
  0x00007f13f8f19318:   mov    $0xfffffff6,%esi
  0x00007f13f8f1931d:   mov    %rcx,%rbp
  0x00007f13f8f19320:   vzeroupper 
  0x00007f13f8f19323:   callq  0x00007f13f8fdf820           ; ImmutableOopMap {rbp=Oop }
                                                            ;*invokevirtual doAction {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@496 (line 98)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f13f8f19328:   movabs $0x7f13fdc92548,%rdi         ;   {external_word}
  0x00007f13f8f19332:   and    $0xfffffffffffffff0,%rsp
  0x00007f13f8f19336:   callq  0x00007f13fd3b2bb4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f13f8f1933b:   hlt                                 ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC2::doAction@7 (line 26)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@496 (line 98)
 ;; B79: #	out( N1343 ) <- in( B56 )  Freq: 0.0408562
  0x00007f13f8f1933c:   mov    %r11,(%rsp)
  0x00007f13f8f19340:   mov    %r8,0x8(%rsp)
  0x00007f13f8f19345:   mov    %rax,0x10(%rsp)
  0x00007f13f8f1934a:   mov    %rsi,0x18(%rsp)
  0x00007f13f8f1934f:   mov    %ebx,0x28(%rsp)
  0x00007f13f8f19353:   mov    %r14d,0x2c(%rsp)
  0x00007f13f8f19358:   mov    %rcx,0x30(%rsp)
  0x00007f13f8f1935d:   mov    %r10d,0x38(%rsp)
  0x00007f13f8f19362:   mov    $0xffffff76,%esi
  0x00007f13f8f19367:   nop
  0x00007f13f8f19368:   vzeroupper 
  0x00007f13f8f1936b:   callq  0x00007f13f8fdf820           ; ImmutableOopMap {[-98469116]=Oop [-98469108]=Oop [-98469100]=Oop [-98469092]=Oop [-98469068]=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) myclassC2::doAction@7 (line 26)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@496 (line 98)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f13f8f19370:   movabs $0x7f13fdc92548,%rdi         ;   {external_word}
  0x00007f13f8f1937a:   and    $0xfffffffffffffff0,%rsp
  0x00007f13f8f1937e:   callq  0x00007f13fd3b2bb4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f13f8f19383:   hlt                                 ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC2::doAction@7 (line 26)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@496 (line 98)
 ;; B80: #	out( B71 ) <- in( B60 )  Freq: 0.0408562
  0x00007f13f8f19384:   mov    %edi,%ecx
  0x00007f13f8f19386:   jmpq   0x00007f13f8f1929c
 ;; B81: #	out( N1343 ) <- in( B61 )  Freq: 0.0408562
  0x00007f13f8f1938b:   movabs $0x7f13fde3d268,%rdi         ;   {external_word}
  0x00007f13f8f19395:   and    $0xfffffffffffffff0,%rsp
  0x00007f13f8f19399:   callq  0x00007f13fd3b2bb4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f13f8f1939e:   hlt    
 ;; B82: #	out( N1343 ) <- in( B62 )  Freq: 0.0408561
  0x00007f13f8f1939f:   movabs $0x7f13fde3d268,%rdi         ;   {external_word}
  0x00007f13f8f193a9:   and    $0xfffffffffffffff0,%rsp
  0x00007f13f8f193ad:   callq  0x00007f13fd3b2bb4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f13f8f193b2:   hlt    
 ;; B83: #	out( N1343 ) <- in( B63 )  Freq: 0.0408561
  0x00007f13f8f193b3:   movabs $0x7f13fde3d268,%rdi         ;   {external_word}
  0x00007f13f8f193bd:   and    $0xfffffffffffffff0,%rsp
  0x00007f13f8f193c1:   callq  0x00007f13fd3b2bb4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f13f8f193c6:   hlt                                 ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - polymorphic::main@444 (line 95)
 ;; B84: #	out( N1343 ) <- in( B22 )  Freq: 0.0362241
  0x00007f13f8f193c7:   mov    $0xffffff45,%esi
  0x00007f13f8f193cc:   mov    %r14d,%ebp
  0x00007f13f8f193cf:   nop
  0x00007f13f8f193d0:   vzeroupper 
  0x00007f13f8f193d3:   callq  0x00007f13f8fdf820           ; ImmutableOopMap {}
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) polymorphic::main@444 (line 95)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f13f8f193d8:   movabs $0x7f13fdc92548,%rdi         ;   {external_word}
  0x00007f13f8f193e2:   and    $0xfffffffffffffff0,%rsp
  0x00007f13f8f193e6:   callq  0x00007f13fd3b2bb4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f13f8f193eb:   hlt                                 ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - polymorphic::main@444 (line 95)
 ;; B85: #	out( N1343 ) <- in( B68 )  Freq: 0.020428
  0x00007f13f8f193ec:   movabs $0x7f13fde3d268,%rdi         ;   {external_word}
  0x00007f13f8f193f6:   and    $0xfffffffffffffff0,%rsp
  0x00007f13f8f193fa:   callq  0x00007f13fd3b2bb4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f13f8f193ff:   hlt    
 ;; B86: #	out( N1343 ) <- in( B72 )  Freq: 0.020428
  0x00007f13f8f19400:   movabs $0x7f13fde3d268,%rdi         ;   {external_word}
  0x00007f13f8f1940a:   and    $0xfffffffffffffff0,%rsp
  0x00007f13f8f1940e:   callq  0x00007f13fd3b2bb4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f13f8f19413:   hlt    
 ;; B87: #	out( N1343 ) <- in( B69 )  Freq: 0.020428
  0x00007f13f8f19414:   movabs $0x7f13fde3d268,%rdi         ;   {external_word}
  0x00007f13f8f1941e:   and    $0xfffffffffffffff0,%rsp
  0x00007f13f8f19422:   callq  0x00007f13fd3b2bb4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f13f8f19427:   hlt    
 ;; B88: #	out( N1343 ) <- in( B24 )  Freq: 0.0192478
  0x00007f13f8f19428:   mov    $0xfffffff6,%esi
  0x00007f13f8f1942d:   mov    %r8,%rbp
  0x00007f13f8f19430:   mov    %rcx,(%rsp)
  0x00007f13f8f19434:   vzeroupper 
  0x00007f13f8f19437:   callq  0x00007f13f8fdf820           ; ImmutableOopMap {rbp=Oop [-98469116]=Oop }
                                                            ;*invokevirtual doCall {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - polymorphic::main@483 (line 97)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f13f8f1943c:   movabs $0x7f13fdc92548,%rdi         ;   {external_word}
  0x00007f13f8f19446:   and    $0xfffffffffffffff0,%rsp
  0x00007f13f8f1944a:   callq  0x00007f13fd3b2bb4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f13f8f1944f:   hlt    
 ;; B89: #	out( N1343 ) <- in( B25 )  Freq: 0.0192478
  0x00007f13f8f19450:   mov    $0xfffffff6,%esi
  0x00007f13f8f19455:   mov    %rcx,%rbp
  0x00007f13f8f19458:   vzeroupper 
  0x00007f13f8f1945b:   callq  0x00007f13f8fdf820           ; ImmutableOopMap {rbp=Oop }
                                                            ;*invokevirtual doAction {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@483 (line 97)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f13f8f19460:   movabs $0x7f13fdc92548,%rdi         ;   {external_word}
  0x00007f13f8f1946a:   and    $0xfffffffffffffff0,%rsp
  0x00007f13f8f1946e:   callq  0x00007f13fd3b2bb4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f13f8f19473:   hlt                                 ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC1::doAction@7 (line 17)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@483 (line 97)
 ;; B90: #	out( N1343 ) <- in( B28 )  Freq: 0.019229
  0x00007f13f8f19474:   mov    %r11,(%rsp)
  0x00007f13f8f19478:   mov    %r8,0x8(%rsp)
  0x00007f13f8f1947d:   mov    %rax,0x10(%rsp)
  0x00007f13f8f19482:   mov    %rsi,0x18(%rsp)
  0x00007f13f8f19487:   mov    %ebx,0x28(%rsp)
  0x00007f13f8f1948b:   mov    %r14d,0x2c(%rsp)
  0x00007f13f8f19490:   mov    %rcx,0x30(%rsp)
  0x00007f13f8f19495:   mov    %r10d,0x38(%rsp)
  0x00007f13f8f1949a:   mov    $0xffffff76,%esi
  0x00007f13f8f1949f:   nop
  0x00007f13f8f194a0:   vzeroupper 
  0x00007f13f8f194a3:   callq  0x00007f13f8fdf820           ; ImmutableOopMap {[-98469116]=Oop [-98469108]=Oop [-98469100]=Oop [-98469092]=Oop [-98469068]=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) myclassC1::doAction@7 (line 17)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@483 (line 97)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f13f8f194a8:   movabs $0x7f13fdc92548,%rdi         ;   {external_word}
  0x00007f13f8f194b2:   and    $0xfffffffffffffff0,%rsp
  0x00007f13f8f194b6:   callq  0x00007f13fd3b2bb4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f13f8f194bb:   hlt                                 ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC1::doAction@7 (line 17)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@483 (line 97)
 ;; B91: #	out( B44 ) <- in( B32 )  Freq: 0.019229
  0x00007f13f8f194bc:   mov    %r11d,%ecx
  0x00007f13f8f194bf:   nop
  0x00007f13f8f194c0:   jmpq   0x00007f13f8f18f1b
 ;; B92: #	out( N1343 ) <- in( B33 )  Freq: 0.019229
  0x00007f13f8f194c5:   movabs $0x7f13fde3d268,%rdi         ;   {external_word}
  0x00007f13f8f194cf:   and    $0xfffffffffffffff0,%rsp
  0x00007f13f8f194d3:   callq  0x00007f13fd3b2bb4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f13f8f194d8:   hlt    
 ;; B93: #	out( N1343 ) <- in( B34 )  Freq: 0.0192289
  0x00007f13f8f194d9:   movabs $0x7f13fde3d268,%rdi         ;   {external_word}
  0x00007f13f8f194e3:   and    $0xfffffffffffffff0,%rsp
  0x00007f13f8f194e7:   callq  0x00007f13fd3b2bb4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f13f8f194ec:   hlt    
 ;; B94: #	out( N1343 ) <- in( B35 )  Freq: 0.0192289
  0x00007f13f8f194ed:   movabs $0x7f13fde3d268,%rdi         ;   {external_word}
  0x00007f13f8f194f7:   and    $0xfffffffffffffff0,%rsp
  0x00007f13f8f194fb:   callq  0x00007f13fd3b2bb4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f13f8f19500:   hlt    
 ;; B95: #	out( N1343 ) <- in( B36 )  Freq: 0.0192289
  0x00007f13f8f19501:   movabs $0x7f13fde3d268,%rdi         ;   {external_word}
  0x00007f13f8f1950b:   and    $0xfffffffffffffff0,%rsp
  0x00007f13f8f1950f:   callq  0x00007f13fd3b2bb4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f13f8f19514:   hlt    
 ;; B96: #	out( N1343 ) <- in( B41 )  Freq: 0.00961444
  0x00007f13f8f19515:   movabs $0x7f13fde3d268,%rdi         ;   {external_word}
  0x00007f13f8f1951f:   and    $0xfffffffffffffff0,%rsp
  0x00007f13f8f19523:   callq  0x00007f13fd3b2bb4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f13f8f19528:   hlt    
 ;; B97: #	out( N1343 ) <- in( B45 )  Freq: 0.00961444
  0x00007f13f8f19529:   movabs $0x7f13fde3d268,%rdi         ;   {external_word}
  0x00007f13f8f19533:   and    $0xfffffffffffffff0,%rsp
  0x00007f13f8f19537:   callq  0x00007f13fd3b2bb4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f13f8f1953c:   hlt    
 ;; B98: #	out( N1343 ) <- in( B42 )  Freq: 0.00961443
  0x00007f13f8f1953d:   movabs $0x7f13fde3d268,%rdi         ;   {external_word}
  0x00007f13f8f19547:   and    $0xfffffffffffffff0,%rsp
  0x00007f13f8f1954b:   callq  0x00007f13fd3b2bb4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f13f8f19550:   hlt    
 ;; B99: #	out( N1343 ) <- in( B46 )  Freq: 0.00961443
  0x00007f13f8f19551:   movabs $0x7f13fde3d268,%rdi         ;   {external_word}
  0x00007f13f8f1955b:   and    $0xfffffffffffffff0,%rsp
  0x00007f13f8f1955f:   callq  0x00007f13fd3b2bb4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f13f8f19564:   hlt    
 ;; B100: #	out( B4 ) <- in( B1 )  Freq: 0.000999987
  0x00007f13f8f19565:   xor    %ecx,%ecx
  0x00007f13f8f19567:   jmpq   0x00007f13f8f18a70
 ;; B101: #	out( B7 ) <- in( B4 )  Freq: 0.000999986
  0x00007f13f8f1956c:   xor    %r11d,%r11d
  0x00007f13f8f1956f:   jmpq   0x00007f13f8f18a90
 ;; B102: #	out( B10 ) <- in( B7 )  Freq: 0.000999985
  0x00007f13f8f19574:   xor    %r8d,%r8d
  0x00007f13f8f19577:   jmpq   0x00007f13f8f18ab1
 ;; B103: #	out( B13 ) <- in( B10 )  Freq: 0.000999984
  0x00007f13f8f1957c:   xor    %eax,%eax
  0x00007f13f8f1957e:   nop
  0x00007f13f8f1957f:   nop
  0x00007f13f8f19580:   jmpq   0x00007f13f8f18ad3
 ;; B104: #	out( B16 ) <- in( B13 )  Freq: 0.000999983
  0x00007f13f8f19585:   xor    %esi,%esi
  0x00007f13f8f19587:   jmpq   0x00007f13f8f18b1c
 ;; B105: #	out( B107 ) <- in( B2 )  Freq: 9.99e-07
  0x00007f13f8f1958c:   mov    %rbp,%r13
  0x00007f13f8f1958f:   mov    (%rsp),%r9
  0x00007f13f8f19593:   mov    0x10(%rsp),%rdi
  0x00007f13f8f19598:   jmp    0x00007f13f8f195a3
 ;; B106: #	out( B107 ) <- in( B5 )  Freq: 9.98999e-07
  0x00007f13f8f1959a:   mov    (%rsp),%r9
  0x00007f13f8f1959e:   mov    0x10(%rsp),%rdi
 ;; B107: #	out( N1343 ) <- in( B105 B106 B108 B11 B14 )  Freq: 4.99499e-06
  0x00007f13f8f195a3:   mov    $0xffffff8d,%esi
  0x00007f13f8f195a8:   mov    %r14d,%ebp
  0x00007f13f8f195ab:   mov    0x20(%rsp),%r10
  0x00007f13f8f195b0:   mov    %r10,(%rsp)
  0x00007f13f8f195b4:   mov    %rbx,0x10(%rsp)
  0x00007f13f8f195b9:   mov    %r13,0x20(%rsp)
  0x00007f13f8f195be:   mov    %r9,0x28(%rsp)
  0x00007f13f8f195c3:   mov    %rdi,0x30(%rsp)
  0x00007f13f8f195c8:   vzeroupper 
  0x00007f13f8f195cb:   callq  0x00007f13f8fdf820           ; ImmutableOopMap {[-98469100]=Oop [-98469092]=Oop [-98469084]=Oop [-98469076]=Oop [-98469068]=Oop }
                                                            ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - polymorphic::main@440 (line 95)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f13f8f195d0:   movabs $0x7f13fdc92548,%rdi         ;   {external_word}
  0x00007f13f8f195da:   and    $0xfffffffffffffff0,%rsp
  0x00007f13f8f195de:   callq  0x00007f13fd3b2bb4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f13f8f195e3:   hlt                                 ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - polymorphic::main@440 (line 95)
 ;; B108: #	out( B107 ) <- in( B8 )  Freq: 9.98998e-07
  0x00007f13f8f195e4:   mov    0x10(%rsp),%rdi
  0x00007f13f8f195e9:   jmp    0x00007f13f8f195a3           ;*invokevirtual doAction {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@509 (line 99)
 ;; B109: #	out( N1343 ) <- in( B19 )  Freq: 0.4036
  0x00007f13f8f195eb:   mov    %rax,%rsi
  0x00007f13f8f195ee:   vzeroupper 
  0x00007f13f8f195f1:   add    $0x50,%rsp
  0x00007f13f8f195f5:   pop    %rbp
  0x00007f13f8f195f6:   jmpq   0x00007f13f8f42000           ;   {runtime_call _rethrow_Java}
 ;; B110: #	out( N1343 ) <- in( B54 )  Freq: 0.0408962
  0x00007f13f8f195fb:   mov    $0xfffffff6,%esi
  0x00007f13f8f19600:   vzeroupper 
  0x00007f13f8f19603:   callq  0x00007f13f8fdf820           ; ImmutableOopMap {}
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC2::doAction@6 (line 26)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@496 (line 98)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f13f8f19608:   movabs $0x7f13fdc92548,%rdi         ;   {external_word}
  0x00007f13f8f19612:   and    $0xfffffffffffffff0,%rsp
  0x00007f13f8f19616:   callq  0x00007f13fd3b2bb4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f13f8f1961b:   hlt    
 ;; B111: #	out( N1343 ) <- in( B26 )  Freq: 0.0192478
  0x00007f13f8f1961c:   mov    $0xfffffff6,%esi
  0x00007f13f8f19621:   nop
  0x00007f13f8f19622:   nop
  0x00007f13f8f19623:   nop
  0x00007f13f8f19624:   vzeroupper 
  0x00007f13f8f19627:   callq  0x00007f13f8fdf820           ; ImmutableOopMap {}
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC1::doAction@6 (line 17)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@483 (line 97)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f13f8f1962c:   movabs $0x7f13fdc92548,%rdi         ;   {external_word}
  0x00007f13f8f19636:   and    $0xfffffffffffffff0,%rsp
  0x00007f13f8f1963a:   callq  0x00007f13fd3b2bb4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f13f8f1963f:   hlt                                 ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - myclassC2::doAction@22 (line 26)
                                                            ; - polymorphic::doCall@2 (line 35)
                                                            ; - polymorphic::main@496 (line 98)
[Exception Handler]
  0x00007f13f8f19640:   jmpq   0x00007f13f8f747a0           ;   {no_reloc}
[Deopt Handler Code]
  0x00007f13f8f19645:   callq  0x00007f13f8f1964a
  0x00007f13f8f1964a:   subq   $0x5,(%rsp)
  0x00007f13f8f1964f:   jmpq   0x00007f13f8fdfb40           ;   {runtime_call DeoptimizationBlob}
  0x00007f13f8f19654:   hlt    
  0x00007f13f8f19655:   hlt    
  0x00007f13f8f19656:   hlt    
  0x00007f13f8f19657:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Oops:
  0x00007f13f8f19658:   0x000000011f8a7ec8 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x000000011f8a7ec8}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Metadata:
  0x00007f13f8f19660:   0x0000000800040dc8 {type array int}
  0x00007f13f8f19668:   0x00000008000c1000 'polymorphic'
  0x00007f13f8f19670:   0x00000008000c1420 'myclassC1'
  0x00007f13f8f19678:   0x00000008000c1638 'myclassC2'
  0x00007f13f8f19680:   0x00007f13ac511858 {method} {0x00007f13ac511858} 'main' '([Ljava/lang/String;)V' in 'polymorphic'
  0x00007f13f8f19688:   0x00007f13ac511540 {method} {0x00007f13ac511540} 'doCall' '(LmyclassP;[I)I' in 'polymorphic'
  0x00007f13f8f19690:   0x00007f13ac7001a0 {method} {0x00007f13ac7001a0} 'doAction' '([I)I' in 'myclassC2'
  0x00007f13f8f19698:   0x00007f13ac511eb8 {method} {0x00007f13ac511eb8} 'doAction' '([I)I' in 'myclassC1'
  0x00007f13f8f196a0:   0x00000008000c1210 'myclassP'
  0x00007f13f8f196a8:   0x00007f13ac511bf0 {method} {0x00007f13ac511bf0} 'doAction' '([I)I' in 'myclassP'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
pc-bytecode offsets:
PcDesc(pc=0x00007f13f8f189df offset=ffffffff bits=0):
PcDesc(pc=0x00007f13f8f18b1c offset=13c bits=0):
   polymorphic::main@440 (line 95)
PcDesc(pc=0x00007f13f8f18b54 offset=174 bits=0):
   myclassC2::doAction@10 (line 27)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@496 (line 98)
PcDesc(pc=0x00007f13f8f18b60 offset=180 bits=0):
   myclassC2::doAction@17 (line 27)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@496 (line 98)
PcDesc(pc=0x00007f13f8f18b62 offset=182 bits=0):
   myclassC2::doAction@19 (line 26)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@496 (line 98)
PcDesc(pc=0x00007f13f8f18b67 offset=187 bits=0):
   myclassC2::doAction@7 (line 26)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@496 (line 98)
PcDesc(pc=0x00007f13f8f18b8a offset=1aa bits=0):
   polymorphic::main@499 (line 98)
PcDesc(pc=0x00007f13f8f18ba7 offset=1c7 bits=0):
   polymorphic::doCall@-1 (line 35)
   polymorphic::main@509 (line 99)
PcDesc(pc=0x00007f13f8f18bbc offset=1dc bits=0):
   polymorphic::doCall@2 (line 35)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   polymorphic::main@509 (line 99)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: stack[16],oop
    - l4: stack[24],oop
    - l5: empty
    - l6: stack[40],oop
    - l7: stack[48],oop
    - l8: stack[56],oop
    - l9: 0
    - l10: stack[32],long
    - l11: stack[8]
    - l12: empty
   Expression stack
    - @0: reg rbp [10],int
PcDesc(pc=0x00007f13f8f18bc3 offset=1e3 bits=0):
   polymorphic::main@512 (line 99)
PcDesc(pc=0x00007f13f8f18be7 offset=207 bits=0):
   myclassC1::doAction@22 (line 17)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@483 (line 97)
PcDesc(pc=0x00007f13f8f18bf0 offset=210 bits=1):
   polymorphic::main@518 (line 95)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: reg rcx [2],oop
    - l4: reg r11 [22],oop
    - l5: reg r14 [28],int
    - l6: reg r8 [16],oop
    - l7: reg rax [0],oop
    - l8: reg rsi [12],oop
    - l9: 0
    - l10: stack[32],long
    - l11: reg rbx [6],int
    - l12: empty
PcDesc(pc=0x00007f13f8f18bf3 offset=213 bits=0):
   polymorphic::main@518 (line 95)
PcDesc(pc=0x00007f13f8f18bf7 offset=217 bits=0):
   polymorphic::main@440 (line 95)
PcDesc(pc=0x00007f13f8f18c0c offset=22c bits=0):
   polymorphic::main@444 (line 95)
PcDesc(pc=0x00007f13f8f18c15 offset=235 bits=0):
   polymorphic::main@450 (line 96)
PcDesc(pc=0x00007f13f8f18c1e offset=23e bits=0):
   polymorphic::main@451 (line 96)
PcDesc(pc=0x00007f13f8f18c29 offset=249 bits=0):
   polymorphic::main@483 (line 97)
PcDesc(pc=0x00007f13f8f18c32 offset=252 bits=0):
   polymorphic::doCall@2 (line 35)
   polymorphic::main@483 (line 97)
PcDesc(pc=0x00007f13f8f18c36 offset=256 bits=0):
   myclassC1::doAction@6 (line 17)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@483 (line 97)
PcDesc(pc=0x00007f13f8f18c3f offset=25f bits=0):
   myclassC1::doAction@7 (line 17)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@483 (line 97)
PcDesc(pc=0x00007f13f8f18c80 offset=2a0 bits=0):
   myclassC1::doAction@10 (line 18)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@483 (line 97)
PcDesc(pc=0x00007f13f8f18c8c offset=2ac bits=0):
   myclassC1::doAction@17 (line 18)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@483 (line 97)
PcDesc(pc=0x00007f13f8f18c92 offset=2b2 bits=0):
   myclassC1::doAction@19 (line 17)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@483 (line 97)
PcDesc(pc=0x00007f13f8f18c97 offset=2b7 bits=0):
   myclassC1::doAction@7 (line 17)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@483 (line 97)
PcDesc(pc=0x00007f13f8f18d10 offset=330 bits=0):
   myclassC1::doAction@10 (line 18)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@483 (line 97)
PcDesc(pc=0x00007f13f8f18e8c offset=4ac bits=0):
   myclassC1::doAction@17 (line 18)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@483 (line 97)
PcDesc(pc=0x00007f13f8f18e8f offset=4af bits=0):
   myclassC1::doAction@19 (line 17)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@483 (line 97)
PcDesc(pc=0x00007f13f8f18e97 offset=4b7 bits=0):
   myclassC1::doAction@22 (line 17)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@483 (line 97)
PcDesc(pc=0x00007f13f8f18e9e offset=4be bits=1):
   myclassC1::doAction@22 (line 17)  reexecute=true
   Locals
    - l0: empty
    - l1: reg rsi [12],oop
    - l2: reg rdx [4],int
    - l3: reg rcx [2],int
   polymorphic::doCall@2 (line 35)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   polymorphic::main@483 (line 97)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: reg rsi [12],oop
    - l4: reg rbp [10],oop
    - l5: empty
    - l6: reg r13 [26],oop
    - l7: reg xmm16 [304],oop
    - l8: reg xmm17 [320],oop
    - l9: 0
    - l10: stack[32],long
    - l11: reg rax [0],int
    - l12: empty
   Expression stack
    - @0: reg r14 [28],int
PcDesc(pc=0x00007f13f8f18ea1 offset=4c1 bits=0):
   myclassC1::doAction@22 (line 17)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@483 (line 97)
PcDesc(pc=0x00007f13f8f18ee8 offset=508 bits=0):
   myclassC1::doAction@10 (line 18)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@483 (line 97)
PcDesc(pc=0x00007f13f8f18f13 offset=533 bits=0):
   myclassC1::doAction@17 (line 18)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@483 (line 97)
PcDesc(pc=0x00007f13f8f18f16 offset=536 bits=0):
   myclassC1::doAction@19 (line 17)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@483 (line 97)
PcDesc(pc=0x00007f13f8f18f1b offset=53b bits=0):
   myclassC1::doAction@7 (line 17)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@483 (line 97)
PcDesc(pc=0x00007f13f8f18f3c offset=55c bits=0):
   myclassC1::doAction@10 (line 18)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@483 (line 97)
PcDesc(pc=0x00007f13f8f18f48 offset=568 bits=0):
   myclassC1::doAction@17 (line 18)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@483 (line 97)
PcDesc(pc=0x00007f13f8f18f4a offset=56a bits=0):
   myclassC1::doAction@19 (line 17)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@483 (line 97)
PcDesc(pc=0x00007f13f8f18f4f offset=56f bits=0):
   myclassC1::doAction@7 (line 17)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@483 (line 97)
PcDesc(pc=0x00007f13f8f18f79 offset=599 bits=0):
   polymorphic::main@486 (line 97)
PcDesc(pc=0x00007f13f8f18f9f offset=5bf bits=0):
   polymorphic::main@489 (line 98)
PcDesc(pc=0x00007f13f8f18fa9 offset=5c9 bits=0):
   polymorphic::main@496 (line 98)
PcDesc(pc=0x00007f13f8f18fb2 offset=5d2 bits=0):
   polymorphic::doCall@2 (line 35)
   polymorphic::main@496 (line 98)
PcDesc(pc=0x00007f13f8f18fb6 offset=5d6 bits=0):
   myclassC2::doAction@6 (line 26)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@496 (line 98)
PcDesc(pc=0x00007f13f8f18fbf offset=5df bits=0):
   myclassC2::doAction@7 (line 26)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@496 (line 98)
PcDesc(pc=0x00007f13f8f19000 offset=620 bits=0):
   myclassC2::doAction@10 (line 27)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@496 (line 98)
PcDesc(pc=0x00007f13f8f1900c offset=62c bits=0):
   myclassC2::doAction@17 (line 27)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@496 (line 98)
PcDesc(pc=0x00007f13f8f19011 offset=631 bits=0):
   myclassC2::doAction@19 (line 26)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@496 (line 98)
PcDesc(pc=0x00007f13f8f19015 offset=635 bits=0):
   myclassC2::doAction@7 (line 26)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@496 (line 98)
PcDesc(pc=0x00007f13f8f19080 offset=6a0 bits=0):
   myclassC2::doAction@10 (line 27)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@496 (line 98)
PcDesc(pc=0x00007f13f8f19204 offset=824 bits=0):
   myclassC2::doAction@17 (line 27)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@496 (line 98)
PcDesc(pc=0x00007f13f8f19207 offset=827 bits=0):
   myclassC2::doAction@19 (line 26)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@496 (line 98)
PcDesc(pc=0x00007f13f8f1920f offset=82f bits=0):
   myclassC1::doAction@22 (line 17)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@483 (line 97)
PcDesc(pc=0x00007f13f8f19216 offset=836 bits=1):
   myclassC2::doAction@22 (line 26)  reexecute=true
   Locals
    - l0: empty
    - l1: reg r13 [26],oop
    - l2: reg rax [0],int
    - l3: reg rcx [2],int
   polymorphic::doCall@2 (line 35)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   polymorphic::main@496 (line 98)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: reg r13 [26],oop
    - l4: reg xmm16 [304],oop
    - l5: empty
    - l6: reg xmm17 [320],oop
    - l7: reg xmm18 [336],oop
    - l8: reg xmm19 [352],oop
    - l9: 0
    - l10: stack[32],long
    - l11: reg rsi [12],int
    - l12: empty
   Expression stack
    - @0: reg r14 [28],int
PcDesc(pc=0x00007f13f8f19219 offset=839 bits=0):
   myclassC2::doAction@22 (line 26)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@496 (line 98)
PcDesc(pc=0x00007f13f8f19268 offset=888 bits=0):
   myclassC2::doAction@10 (line 27)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@496 (line 98)
PcDesc(pc=0x00007f13f8f19294 offset=8b4 bits=0):
   myclassC2::doAction@17 (line 27)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@496 (line 98)
PcDesc(pc=0x00007f13f8f19297 offset=8b7 bits=0):
   myclassC2::doAction@19 (line 26)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@496 (line 98)
PcDesc(pc=0x00007f13f8f1929c offset=8bc bits=0):
   myclassC2::doAction@7 (line 26)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@496 (line 98)
PcDesc(pc=0x00007f13f8f19304 offset=924 bits=0):
   polymorphic::main@496 (line 98)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
   Expression stack
    - @0: empty
    - @1: NULL
    - @2: reg rbp [10],oop
    - @3: stack[0],oop
PcDesc(pc=0x00007f13f8f19328 offset=948 bits=0):
   polymorphic::doCall@2 (line 35)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   Expression stack
    - @0: NULL
    - @1: reg rbp [10],oop
   polymorphic::main@496 (line 98)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
   Expression stack
    - @0: empty
PcDesc(pc=0x00007f13f8f1933c offset=95c bits=0):
   myclassC2::doAction@7 (line 26)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@496 (line 98)
PcDesc(pc=0x00007f13f8f19370 offset=990 bits=1):
   myclassC2::doAction@7 (line 26)  reexecute=true
   Locals
    - l0: empty
    - l1: stack[48],oop
    - l2: 0
    - l3: 0
   Expression stack
    - @0: 0
    - @1: stack[56]
   polymorphic::doCall@2 (line 35)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   polymorphic::main@496 (line 98)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: stack[48],oop
    - l4: stack[0],oop
    - l5: empty
    - l6: stack[8],oop
    - l7: stack[16],oop
    - l8: stack[24],oop
    - l9: 0
    - l10: stack[32],long
    - l11: stack[40]
    - l12: empty
   Expression stack
    - @0: stack[44]
PcDesc(pc=0x00007f13f8f19384 offset=9a4 bits=0):
   myclassC2::doAction@7 (line 26)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@496 (line 98)
PcDesc(pc=0x00007f13f8f193c7 offset=9e7 bits=0):
   polymorphic::main@444 (line 95)
PcDesc(pc=0x00007f13f8f193d8 offset=9f8 bits=1):
   polymorphic::main@444 (line 95)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: reg rbp [10],int
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: 0
    - l10: stack[32],long
    - l11: empty
    - l12: empty
   Expression stack
    - @0: stack[8]
    - @1: 100000
PcDesc(pc=0x00007f13f8f193ec offset=a0c bits=0):
   polymorphic::main@444 (line 95)
PcDesc(pc=0x00007f13f8f1943c offset=a5c bits=0):
   polymorphic::main@483 (line 97)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
   Expression stack
    - @0: empty
    - @1: NULL
    - @2: reg rbp [10],oop
    - @3: stack[0],oop
PcDesc(pc=0x00007f13f8f19460 offset=a80 bits=0):
   polymorphic::doCall@2 (line 35)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   Expression stack
    - @0: NULL
    - @1: reg rbp [10],oop
   polymorphic::main@483 (line 97)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
   Expression stack
    - @0: empty
PcDesc(pc=0x00007f13f8f19474 offset=a94 bits=0):
   myclassC1::doAction@7 (line 17)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@483 (line 97)
PcDesc(pc=0x00007f13f8f194a8 offset=ac8 bits=1):
   myclassC1::doAction@7 (line 17)  reexecute=true
   Locals
    - l0: empty
    - l1: stack[48],oop
    - l2: 0
    - l3: 0
   Expression stack
    - @0: 0
    - @1: stack[56]
   polymorphic::doCall@2 (line 35)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   polymorphic::main@483 (line 97)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: stack[48],oop
    - l4: stack[0],oop
    - l5: empty
    - l6: stack[8],oop
    - l7: stack[16],oop
    - l8: stack[24],oop
    - l9: 0
    - l10: stack[32],long
    - l11: stack[40]
    - l12: empty
   Expression stack
    - @0: stack[44]
PcDesc(pc=0x00007f13f8f194bc offset=adc bits=0):
   myclassC1::doAction@7 (line 17)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@483 (line 97)
PcDesc(pc=0x00007f13f8f195d0 offset=bf0 bits=0):
   polymorphic::main@440 (line 95)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: stack[16],oop
    - l4: stack[32],oop
    - l5: reg rbp [10],int
    - l6: stack[40],oop
    - l7: stack[48],oop
    - l8: stack[24],oop
    - l9: 0
    - l10: stack[0],long
    - l11: stack[8]
    - l12: empty
PcDesc(pc=0x00007f13f8f195e4 offset=c04 bits=0):
   polymorphic::main@440 (line 95)
PcDesc(pc=0x00007f13f8f195eb offset=c0b bits=0):
   polymorphic::doCall@2 (line 35)
   polymorphic::main@509 (line 99)
PcDesc(pc=0x00007f13f8f19608 offset=c28 bits=0):
   myclassC2::doAction@6 (line 26)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: empty
    - @1: NULL
   polymorphic::doCall@2 (line 35)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   polymorphic::main@496 (line 98)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
   Expression stack
    - @0: empty
PcDesc(pc=0x00007f13f8f1962c offset=c4c bits=0):
   myclassC1::doAction@6 (line 17)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: empty
    - @1: NULL
   polymorphic::doCall@2 (line 35)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   polymorphic::main@483 (line 97)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
   Expression stack
    - @0: empty
PcDesc(pc=0x00007f13f8f19640 offset=c60 bits=0):
   myclassC2::doAction@22 (line 26)
   polymorphic::doCall@2 (line 35)
   polymorphic::main@496 (line 98)
PcDesc(pc=0x00007f13f8f19659 offset=c79 bits=0):
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
oop maps:ImmutableOopMapSet contains 14 OopMaps

ImmutableOopMap {[-98469100]=Oop [-98469092]=Oop [-98469076]=Oop [-98469068]=Oop [-98469060]=Oop } pc offsets: 476 
ImmutableOopMap {r11=Oop r8=Oop rcx=Oop rsi=Oop rax=Oop } pc offsets: 528 
ImmutableOopMap {rsi=Oop rbp=Oop r13=Oop xmm16=Oop xmm17=Oop } pc offsets: 1214 
ImmutableOopMap {r13=Oop xmm16=Oop xmm17=Oop xmm18=Oop xmm19=Oop } pc offsets: 2102 
ImmutableOopMap {rbp=Oop [-98469116]=Oop } pc offsets: 2340 
ImmutableOopMap {rbp=Oop } pc offsets: 2376 
ImmutableOopMap {[-98469116]=Oop [-98469108]=Oop [-98469100]=Oop [-98469092]=Oop [-98469068]=Oop } pc offsets: 2448 
ImmutableOopMap {} pc offsets: 2552 
ImmutableOopMap {rbp=Oop [-98469116]=Oop } pc offsets: 2652 
ImmutableOopMap {rbp=Oop } pc offsets: 2688 
ImmutableOopMap {[-98469116]=Oop [-98469108]=Oop [-98469100]=Oop [-98469092]=Oop [-98469068]=Oop } pc offsets: 2760 
ImmutableOopMap {[-98469100]=Oop [-98469092]=Oop [-98469084]=Oop [-98469076]=Oop [-98469068]=Oop } pc offsets: 3056 
ImmutableOopMap {} pc offsets: 3112 3148 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
scopes:
ScopeDesc(pc=0x00007f13f8f18b1c offset=13c):
   polymorphic::main@440 (line 95)
ScopeDesc(pc=0x00007f13f8f18b54 offset=174):
   myclassC2::doAction@10 (line 27)
ScopeDesc(pc=0x00007f13f8f18b54 offset=174):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f18b54 offset=174):
   polymorphic::main@496 (line 98)
ScopeDesc(pc=0x00007f13f8f18b60 offset=180):
   myclassC2::doAction@17 (line 27)
ScopeDesc(pc=0x00007f13f8f18b60 offset=180):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f18b60 offset=180):
   polymorphic::main@496 (line 98)
ScopeDesc(pc=0x00007f13f8f18b62 offset=182):
   myclassC2::doAction@19 (line 26)
ScopeDesc(pc=0x00007f13f8f18b62 offset=182):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f18b62 offset=182):
   polymorphic::main@496 (line 98)
ScopeDesc(pc=0x00007f13f8f18b67 offset=187):
   myclassC2::doAction@7 (line 26)
ScopeDesc(pc=0x00007f13f8f18b67 offset=187):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f18b67 offset=187):
   polymorphic::main@496 (line 98)
ScopeDesc(pc=0x00007f13f8f18b8a offset=1aa):
   polymorphic::main@499 (line 98)
ScopeDesc(pc=0x00007f13f8f18ba7 offset=1c7):
   polymorphic::doCall@-1 (line 35)
ScopeDesc(pc=0x00007f13f8f18ba7 offset=1c7):
   polymorphic::main@509 (line 99)
ScopeDesc(pc=0x00007f13f8f18bbc offset=1dc):
   polymorphic::doCall@2 (line 35)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00007f13f8f18bbc offset=1dc):
   polymorphic::main@509 (line 99)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: stack[16],oop
    - l4: stack[24],oop
    - l5: empty
    - l6: stack[40],oop
    - l7: stack[48],oop
    - l8: stack[56],oop
    - l9: 0
    - l10: stack[32],long
    - l11: stack[8]
    - l12: empty
   Expression stack
    - @0: reg rbp [10],int
ScopeDesc(pc=0x00007f13f8f18bc3 offset=1e3):
   polymorphic::main@512 (line 99)
ScopeDesc(pc=0x00007f13f8f18be7 offset=207):
   myclassC1::doAction@22 (line 17)
ScopeDesc(pc=0x00007f13f8f18be7 offset=207):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f18be7 offset=207):
   polymorphic::main@483 (line 97)
ScopeDesc(pc=0x00007f13f8f18bf0 offset=210):
   polymorphic::main@518 (line 95)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: reg rcx [2],oop
    - l4: reg r11 [22],oop
    - l5: reg r14 [28],int
    - l6: reg r8 [16],oop
    - l7: reg rax [0],oop
    - l8: reg rsi [12],oop
    - l9: 0
    - l10: stack[32],long
    - l11: reg rbx [6],int
    - l12: empty
ScopeDesc(pc=0x00007f13f8f18bf3 offset=213):
   polymorphic::main@518 (line 95)
ScopeDesc(pc=0x00007f13f8f18bf7 offset=217):
   polymorphic::main@440 (line 95)
ScopeDesc(pc=0x00007f13f8f18c0c offset=22c):
   polymorphic::main@444 (line 95)
ScopeDesc(pc=0x00007f13f8f18c15 offset=235):
   polymorphic::main@450 (line 96)
ScopeDesc(pc=0x00007f13f8f18c1e offset=23e):
   polymorphic::main@451 (line 96)
ScopeDesc(pc=0x00007f13f8f18c29 offset=249):
   polymorphic::main@483 (line 97)
ScopeDesc(pc=0x00007f13f8f18c32 offset=252):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f18c32 offset=252):
   polymorphic::main@483 (line 97)
ScopeDesc(pc=0x00007f13f8f18c36 offset=256):
   myclassC1::doAction@6 (line 17)
ScopeDesc(pc=0x00007f13f8f18c36 offset=256):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f18c36 offset=256):
   polymorphic::main@483 (line 97)
ScopeDesc(pc=0x00007f13f8f18c3f offset=25f):
   myclassC1::doAction@7 (line 17)
ScopeDesc(pc=0x00007f13f8f18c3f offset=25f):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f18c3f offset=25f):
   polymorphic::main@483 (line 97)
ScopeDesc(pc=0x00007f13f8f18c80 offset=2a0):
   myclassC1::doAction@10 (line 18)
ScopeDesc(pc=0x00007f13f8f18c80 offset=2a0):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f18c80 offset=2a0):
   polymorphic::main@483 (line 97)
ScopeDesc(pc=0x00007f13f8f18c8c offset=2ac):
   myclassC1::doAction@17 (line 18)
ScopeDesc(pc=0x00007f13f8f18c8c offset=2ac):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f18c8c offset=2ac):
   polymorphic::main@483 (line 97)
ScopeDesc(pc=0x00007f13f8f18c92 offset=2b2):
   myclassC1::doAction@19 (line 17)
ScopeDesc(pc=0x00007f13f8f18c92 offset=2b2):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f18c92 offset=2b2):
   polymorphic::main@483 (line 97)
ScopeDesc(pc=0x00007f13f8f18c97 offset=2b7):
   myclassC1::doAction@7 (line 17)
ScopeDesc(pc=0x00007f13f8f18c97 offset=2b7):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f18c97 offset=2b7):
   polymorphic::main@483 (line 97)
ScopeDesc(pc=0x00007f13f8f18d10 offset=330):
   myclassC1::doAction@10 (line 18)
ScopeDesc(pc=0x00007f13f8f18d10 offset=330):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f18d10 offset=330):
   polymorphic::main@483 (line 97)
ScopeDesc(pc=0x00007f13f8f18e8c offset=4ac):
   myclassC1::doAction@17 (line 18)
ScopeDesc(pc=0x00007f13f8f18e8c offset=4ac):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f18e8c offset=4ac):
   polymorphic::main@483 (line 97)
ScopeDesc(pc=0x00007f13f8f18e8f offset=4af):
   myclassC1::doAction@19 (line 17)
ScopeDesc(pc=0x00007f13f8f18e8f offset=4af):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f18e8f offset=4af):
   polymorphic::main@483 (line 97)
ScopeDesc(pc=0x00007f13f8f18e97 offset=4b7):
   myclassC1::doAction@22 (line 17)
ScopeDesc(pc=0x00007f13f8f18e97 offset=4b7):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f18e97 offset=4b7):
   polymorphic::main@483 (line 97)
ScopeDesc(pc=0x00007f13f8f18e9e offset=4be):
   myclassC1::doAction@22 (line 17)  reexecute=true
   Locals
    - l0: empty
    - l1: reg rsi [12],oop
    - l2: reg rdx [4],int
    - l3: reg rcx [2],int
ScopeDesc(pc=0x00007f13f8f18e9e offset=4be):
   polymorphic::doCall@2 (line 35)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00007f13f8f18e9e offset=4be):
   polymorphic::main@483 (line 97)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: reg rsi [12],oop
    - l4: reg rbp [10],oop
    - l5: empty
    - l6: reg r13 [26],oop
    - l7: reg xmm16 [304],oop
    - l8: reg xmm17 [320],oop
    - l9: 0
    - l10: stack[32],long
    - l11: reg rax [0],int
    - l12: empty
   Expression stack
    - @0: reg r14 [28],int
ScopeDesc(pc=0x00007f13f8f18ea1 offset=4c1):
   myclassC1::doAction@22 (line 17)
ScopeDesc(pc=0x00007f13f8f18ea1 offset=4c1):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f18ea1 offset=4c1):
   polymorphic::main@483 (line 97)
ScopeDesc(pc=0x00007f13f8f18ee8 offset=508):
   myclassC1::doAction@10 (line 18)
ScopeDesc(pc=0x00007f13f8f18ee8 offset=508):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f18ee8 offset=508):
   polymorphic::main@483 (line 97)
ScopeDesc(pc=0x00007f13f8f18f13 offset=533):
   myclassC1::doAction@17 (line 18)
ScopeDesc(pc=0x00007f13f8f18f13 offset=533):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f18f13 offset=533):
   polymorphic::main@483 (line 97)
ScopeDesc(pc=0x00007f13f8f18f16 offset=536):
   myclassC1::doAction@19 (line 17)
ScopeDesc(pc=0x00007f13f8f18f16 offset=536):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f18f16 offset=536):
   polymorphic::main@483 (line 97)
ScopeDesc(pc=0x00007f13f8f18f1b offset=53b):
   myclassC1::doAction@7 (line 17)
ScopeDesc(pc=0x00007f13f8f18f1b offset=53b):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f18f1b offset=53b):
   polymorphic::main@483 (line 97)
ScopeDesc(pc=0x00007f13f8f18f3c offset=55c):
   myclassC1::doAction@10 (line 18)
ScopeDesc(pc=0x00007f13f8f18f3c offset=55c):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f18f3c offset=55c):
   polymorphic::main@483 (line 97)
ScopeDesc(pc=0x00007f13f8f18f48 offset=568):
   myclassC1::doAction@17 (line 18)
ScopeDesc(pc=0x00007f13f8f18f48 offset=568):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f18f48 offset=568):
   polymorphic::main@483 (line 97)
ScopeDesc(pc=0x00007f13f8f18f4a offset=56a):
   myclassC1::doAction@19 (line 17)
ScopeDesc(pc=0x00007f13f8f18f4a offset=56a):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f18f4a offset=56a):
   polymorphic::main@483 (line 97)
ScopeDesc(pc=0x00007f13f8f18f4f offset=56f):
   myclassC1::doAction@7 (line 17)
ScopeDesc(pc=0x00007f13f8f18f4f offset=56f):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f18f4f offset=56f):
   polymorphic::main@483 (line 97)
ScopeDesc(pc=0x00007f13f8f18f79 offset=599):
   polymorphic::main@486 (line 97)
ScopeDesc(pc=0x00007f13f8f18f9f offset=5bf):
   polymorphic::main@489 (line 98)
ScopeDesc(pc=0x00007f13f8f18fa9 offset=5c9):
   polymorphic::main@496 (line 98)
ScopeDesc(pc=0x00007f13f8f18fb2 offset=5d2):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f18fb2 offset=5d2):
   polymorphic::main@496 (line 98)
ScopeDesc(pc=0x00007f13f8f18fb6 offset=5d6):
   myclassC2::doAction@6 (line 26)
ScopeDesc(pc=0x00007f13f8f18fb6 offset=5d6):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f18fb6 offset=5d6):
   polymorphic::main@496 (line 98)
ScopeDesc(pc=0x00007f13f8f18fbf offset=5df):
   myclassC2::doAction@7 (line 26)
ScopeDesc(pc=0x00007f13f8f18fbf offset=5df):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f18fbf offset=5df):
   polymorphic::main@496 (line 98)
ScopeDesc(pc=0x00007f13f8f19000 offset=620):
   myclassC2::doAction@10 (line 27)
ScopeDesc(pc=0x00007f13f8f19000 offset=620):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f19000 offset=620):
   polymorphic::main@496 (line 98)
ScopeDesc(pc=0x00007f13f8f1900c offset=62c):
   myclassC2::doAction@17 (line 27)
ScopeDesc(pc=0x00007f13f8f1900c offset=62c):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f1900c offset=62c):
   polymorphic::main@496 (line 98)
ScopeDesc(pc=0x00007f13f8f19011 offset=631):
   myclassC2::doAction@19 (line 26)
ScopeDesc(pc=0x00007f13f8f19011 offset=631):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f19011 offset=631):
   polymorphic::main@496 (line 98)
ScopeDesc(pc=0x00007f13f8f19015 offset=635):
   myclassC2::doAction@7 (line 26)
ScopeDesc(pc=0x00007f13f8f19015 offset=635):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f19015 offset=635):
   polymorphic::main@496 (line 98)
ScopeDesc(pc=0x00007f13f8f19080 offset=6a0):
   myclassC2::doAction@10 (line 27)
ScopeDesc(pc=0x00007f13f8f19080 offset=6a0):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f19080 offset=6a0):
   polymorphic::main@496 (line 98)
ScopeDesc(pc=0x00007f13f8f19204 offset=824):
   myclassC2::doAction@17 (line 27)
ScopeDesc(pc=0x00007f13f8f19204 offset=824):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f19204 offset=824):
   polymorphic::main@496 (line 98)
ScopeDesc(pc=0x00007f13f8f19207 offset=827):
   myclassC2::doAction@19 (line 26)
ScopeDesc(pc=0x00007f13f8f19207 offset=827):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f19207 offset=827):
   polymorphic::main@496 (line 98)
ScopeDesc(pc=0x00007f13f8f1920f offset=82f):
   myclassC1::doAction@22 (line 17)
ScopeDesc(pc=0x00007f13f8f1920f offset=82f):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f1920f offset=82f):
   polymorphic::main@483 (line 97)
ScopeDesc(pc=0x00007f13f8f19216 offset=836):
   myclassC2::doAction@22 (line 26)  reexecute=true
   Locals
    - l0: empty
    - l1: reg r13 [26],oop
    - l2: reg rax [0],int
    - l3: reg rcx [2],int
ScopeDesc(pc=0x00007f13f8f19216 offset=836):
   polymorphic::doCall@2 (line 35)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00007f13f8f19216 offset=836):
   polymorphic::main@496 (line 98)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: reg r13 [26],oop
    - l4: reg xmm16 [304],oop
    - l5: empty
    - l6: reg xmm17 [320],oop
    - l7: reg xmm18 [336],oop
    - l8: reg xmm19 [352],oop
    - l9: 0
    - l10: stack[32],long
    - l11: reg rsi [12],int
    - l12: empty
   Expression stack
    - @0: reg r14 [28],int
ScopeDesc(pc=0x00007f13f8f19219 offset=839):
   myclassC2::doAction@22 (line 26)
ScopeDesc(pc=0x00007f13f8f19219 offset=839):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f19219 offset=839):
   polymorphic::main@496 (line 98)
ScopeDesc(pc=0x00007f13f8f19268 offset=888):
   myclassC2::doAction@10 (line 27)
ScopeDesc(pc=0x00007f13f8f19268 offset=888):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f19268 offset=888):
   polymorphic::main@496 (line 98)
ScopeDesc(pc=0x00007f13f8f19294 offset=8b4):
   myclassC2::doAction@17 (line 27)
ScopeDesc(pc=0x00007f13f8f19294 offset=8b4):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f19294 offset=8b4):
   polymorphic::main@496 (line 98)
ScopeDesc(pc=0x00007f13f8f19297 offset=8b7):
   myclassC2::doAction@19 (line 26)
ScopeDesc(pc=0x00007f13f8f19297 offset=8b7):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f19297 offset=8b7):
   polymorphic::main@496 (line 98)
ScopeDesc(pc=0x00007f13f8f1929c offset=8bc):
   myclassC2::doAction@7 (line 26)
ScopeDesc(pc=0x00007f13f8f1929c offset=8bc):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f1929c offset=8bc):
   polymorphic::main@496 (line 98)
ScopeDesc(pc=0x00007f13f8f19304 offset=924):
   polymorphic::main@496 (line 98)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
   Expression stack
    - @0: empty
    - @1: NULL
    - @2: reg rbp [10],oop
    - @3: stack[0],oop
ScopeDesc(pc=0x00007f13f8f19328 offset=948):
   polymorphic::doCall@2 (line 35)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   Expression stack
    - @0: NULL
    - @1: reg rbp [10],oop
ScopeDesc(pc=0x00007f13f8f19328 offset=948):
   polymorphic::main@496 (line 98)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
   Expression stack
    - @0: empty
ScopeDesc(pc=0x00007f13f8f1933c offset=95c):
   myclassC2::doAction@7 (line 26)
ScopeDesc(pc=0x00007f13f8f1933c offset=95c):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f1933c offset=95c):
   polymorphic::main@496 (line 98)
ScopeDesc(pc=0x00007f13f8f19370 offset=990):
   myclassC2::doAction@7 (line 26)  reexecute=true
   Locals
    - l0: empty
    - l1: stack[48],oop
    - l2: 0
    - l3: 0
   Expression stack
    - @0: 0
    - @1: stack[56]
ScopeDesc(pc=0x00007f13f8f19370 offset=990):
   polymorphic::doCall@2 (line 35)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00007f13f8f19370 offset=990):
   polymorphic::main@496 (line 98)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: stack[48],oop
    - l4: stack[0],oop
    - l5: empty
    - l6: stack[8],oop
    - l7: stack[16],oop
    - l8: stack[24],oop
    - l9: 0
    - l10: stack[32],long
    - l11: stack[40]
    - l12: empty
   Expression stack
    - @0: stack[44]
ScopeDesc(pc=0x00007f13f8f19384 offset=9a4):
   myclassC2::doAction@7 (line 26)
ScopeDesc(pc=0x00007f13f8f19384 offset=9a4):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f19384 offset=9a4):
   polymorphic::main@496 (line 98)
ScopeDesc(pc=0x00007f13f8f193c7 offset=9e7):
   polymorphic::main@444 (line 95)
ScopeDesc(pc=0x00007f13f8f193d8 offset=9f8):
   polymorphic::main@444 (line 95)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: reg rbp [10],int
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: 0
    - l10: stack[32],long
    - l11: empty
    - l12: empty
   Expression stack
    - @0: stack[8]
    - @1: 100000
ScopeDesc(pc=0x00007f13f8f193ec offset=a0c):
   polymorphic::main@444 (line 95)
ScopeDesc(pc=0x00007f13f8f1943c offset=a5c):
   polymorphic::main@483 (line 97)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
   Expression stack
    - @0: empty
    - @1: NULL
    - @2: reg rbp [10],oop
    - @3: stack[0],oop
ScopeDesc(pc=0x00007f13f8f19460 offset=a80):
   polymorphic::doCall@2 (line 35)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   Expression stack
    - @0: NULL
    - @1: reg rbp [10],oop
ScopeDesc(pc=0x00007f13f8f19460 offset=a80):
   polymorphic::main@483 (line 97)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
   Expression stack
    - @0: empty
ScopeDesc(pc=0x00007f13f8f19474 offset=a94):
   myclassC1::doAction@7 (line 17)
ScopeDesc(pc=0x00007f13f8f19474 offset=a94):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f19474 offset=a94):
   polymorphic::main@483 (line 97)
ScopeDesc(pc=0x00007f13f8f194a8 offset=ac8):
   myclassC1::doAction@7 (line 17)  reexecute=true
   Locals
    - l0: empty
    - l1: stack[48],oop
    - l2: 0
    - l3: 0
   Expression stack
    - @0: 0
    - @1: stack[56]
ScopeDesc(pc=0x00007f13f8f194a8 offset=ac8):
   polymorphic::doCall@2 (line 35)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00007f13f8f194a8 offset=ac8):
   polymorphic::main@483 (line 97)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: stack[48],oop
    - l4: stack[0],oop
    - l5: empty
    - l6: stack[8],oop
    - l7: stack[16],oop
    - l8: stack[24],oop
    - l9: 0
    - l10: stack[32],long
    - l11: stack[40]
    - l12: empty
   Expression stack
    - @0: stack[44]
ScopeDesc(pc=0x00007f13f8f194bc offset=adc):
   myclassC1::doAction@7 (line 17)
ScopeDesc(pc=0x00007f13f8f194bc offset=adc):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f194bc offset=adc):
   polymorphic::main@483 (line 97)
ScopeDesc(pc=0x00007f13f8f195d0 offset=bf0):
   polymorphic::main@440 (line 95)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: stack[16],oop
    - l4: stack[32],oop
    - l5: reg rbp [10],int
    - l6: stack[40],oop
    - l7: stack[48],oop
    - l8: stack[24],oop
    - l9: 0
    - l10: stack[0],long
    - l11: stack[8]
    - l12: empty
ScopeDesc(pc=0x00007f13f8f195e4 offset=c04):
   polymorphic::main@440 (line 95)
ScopeDesc(pc=0x00007f13f8f195eb offset=c0b):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f195eb offset=c0b):
   polymorphic::main@509 (line 99)
ScopeDesc(pc=0x00007f13f8f19608 offset=c28):
   myclassC2::doAction@6 (line 26)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: empty
    - @1: NULL
ScopeDesc(pc=0x00007f13f8f19608 offset=c28):
   polymorphic::doCall@2 (line 35)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00007f13f8f19608 offset=c28):
   polymorphic::main@496 (line 98)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
   Expression stack
    - @0: empty
ScopeDesc(pc=0x00007f13f8f1962c offset=c4c):
   myclassC1::doAction@6 (line 17)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: empty
    - @1: NULL
ScopeDesc(pc=0x00007f13f8f1962c offset=c4c):
   polymorphic::doCall@2 (line 35)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00007f13f8f1962c offset=c4c):
   polymorphic::main@483 (line 97)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
   Expression stack
    - @0: empty
ScopeDesc(pc=0x00007f13f8f19640 offset=c60):
   myclassC2::doAction@22 (line 26)
ScopeDesc(pc=0x00007f13f8f19640 offset=c60):
   polymorphic::doCall@2 (line 35)
ScopeDesc(pc=0x00007f13f8f19640 offset=c60):
   polymorphic::main@496 (line 98)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
relocations:
         @0x00007f13f8f18870: 3200
relocInfo@0x00007f13f8f18870 [type=6(runtime_call) addr=0x00007f13f8f189e0 offset=0 format=1] | [destination=0x00007f13fd536748]
         @0x00007f13f8f18872: 78016680
relocInfo@0x00007f13f8f18874 [type=12(metadata) addr=0x00007f13f8f18a60 offset=128 format=3 data=1] | [metadata_addr=0x00007f13f8f19660 *=0x0000000800040dc8 offset=0]metadata_value=0x0000000800040dc8: {type array int}
         @0x00007f13f8f18876: 78026620
relocInfo@0x00007f13f8f18878 [type=12(metadata) addr=0x00007f13f8f18a80 offset=32 format=3 data=2] | [metadata_addr=0x00007f13f8f19668 *=0x00000008000c1000 offset=0]metadata_value=0x00000008000c1000: 'polymorphic'
         @0x00007f13f8f1887a: 78036621
relocInfo@0x00007f13f8f1887c [type=12(metadata) addr=0x00007f13f8f18aa1 offset=33 format=3 data=3] | [metadata_addr=0x00007f13f8f19670 *=0x00000008000c1420 offset=0]metadata_value=0x00000008000c1420: 'myclassC1'
         @0x00007f13f8f1887e: 78046622
relocInfo@0x00007f13f8f18880 [type=12(metadata) addr=0x00007f13f8f18ac3 offset=34 format=3 data=4] | [metadata_addr=0x00007f13f8f19678 *=0x00000008000c1638 offset=0]metadata_value=0x00000008000c1638: 'myclassC2'
         @0x00007f13f8f18882: 602a
relocInfo@0x00007f13f8f18882 [type=12(metadata) addr=0x00007f13f8f18aed offset=42] | [metadata_addr=0x00007f13f8f18aef *=0x00000008000c1210 offset=0]metadata_value=0x00000008000c1210: 'myclassP'
         @0x00007f13f8f18884: 780a12ca
relocInfo@0x00007f13f8f18886 [type=2(virtual_call) addr=0x00007f13f8f18bb7 offset=202 format=1 data=10] | [destination=0x00007f13f8fd39a0 cached_value=0x00007f13f8f18bad metadata=0x0000000000000000]
         @0x00007f13f8f18888: 5039
relocInfo@0x00007f13f8f18888 [type=10(poll) addr=0x00007f13f8f18bf0 offset=57]
         @0x00007f13f8f1888a: 01ff
relocInfo@0x00007f13f8f1888a [type=0(none) addr=0x00007f13f8f18def offset=511]
         @0x00007f13f8f1888c: 50af
relocInfo@0x00007f13f8f1888c [type=10(poll) addr=0x00007f13f8f18e9e offset=175]
         @0x00007f13f8f1888e: 01ff
relocInfo@0x00007f13f8f1888e [type=0(none) addr=0x00007f13f8f1909d offset=511]
         @0x00007f13f8f18890: 5179
relocInfo@0x00007f13f8f18890 [type=10(poll) addr=0x00007f13f8f19216 offset=377]
         @0x00007f13f8f18892: 7c03fde3d2687f1338a8
relocInfo@0x00007f13f8f1889a [type=7(external_word) addr=0x00007f13f8f192be offset=168 data={fde3d2687f13}] | [target=0x00007f13fde3d268]
         @0x00007f13f8f1889c: 320e
relocInfo@0x00007f13f8f1889c [type=6(runtime_call) addr=0x00007f13f8f192cc offset=14 format=1] | [destination=0x00007f13fd3b2bb4]
         @0x00007f13f8f1889e: 3233
relocInfo@0x00007f13f8f1889e [type=6(runtime_call) addr=0x00007f13f8f192ff offset=51 format=1] | [destination=0x00007f13f8fdf820]
         @0x00007f13f8f188a0: 7c03fdc925487f133805
relocInfo@0x00007f13f8f188a8 [type=7(external_word) addr=0x00007f13f8f19304 offset=5 data={fdc925487f13}] | [target=0x00007f13fdc92548]
         @0x00007f13f8f188aa: 320e
relocInfo@0x00007f13f8f188aa [type=6(runtime_call) addr=0x00007f13f8f19312 offset=14 format=1] | [destination=0x00007f13fd3b2bb4]
         @0x00007f13f8f188ac: 3211
relocInfo@0x00007f13f8f188ac [type=6(runtime_call) addr=0x00007f13f8f19323 offset=17 format=1] | [destination=0x00007f13f8fdf820]
         @0x00007f13f8f188ae: 7c03fdc925487f133805
relocInfo@0x00007f13f8f188b6 [type=7(external_word) addr=0x00007f13f8f19328 offset=5 data={fdc925487f13}] | [target=0x00007f13fdc92548]
         @0x00007f13f8f188b8: 320e
relocInfo@0x00007f13f8f188b8 [type=6(runtime_call) addr=0x00007f13f8f19336 offset=14 format=1] | [destination=0x00007f13fd3b2bb4]
         @0x00007f13f8f188ba: 3235
relocInfo@0x00007f13f8f188ba [type=6(runtime_call) addr=0x00007f13f8f1936b offset=53 format=1] | [destination=0x00007f13f8fdf820]
         @0x00007f13f8f188bc: 7c03fdc925487f133805
relocInfo@0x00007f13f8f188c4 [type=7(external_word) addr=0x00007f13f8f19370 offset=5 data={fdc925487f13}] | [target=0x00007f13fdc92548]
         @0x00007f13f8f188c6: 320e
relocInfo@0x00007f13f8f188c6 [type=6(runtime_call) addr=0x00007f13f8f1937e offset=14 format=1] | [destination=0x00007f13fd3b2bb4]
         @0x00007f13f8f188c8: 7c03fde3d2687f13380d
relocInfo@0x00007f13f8f188d0 [type=7(external_word) addr=0x00007f13f8f1938b offset=13 data={fde3d2687f13}] | [target=0x00007f13fde3d268]
         @0x00007f13f8f188d2: 320e
relocInfo@0x00007f13f8f188d2 [type=6(runtime_call) addr=0x00007f13f8f19399 offset=14 format=1] | [destination=0x00007f13fd3b2bb4]
         @0x00007f13f8f188d4: 7c03fde3d2687f133806
relocInfo@0x00007f13f8f188dc [type=7(external_word) addr=0x00007f13f8f1939f offset=6 data={fde3d2687f13}] | [target=0x00007f13fde3d268]
         @0x00007f13f8f188de: 320e
relocInfo@0x00007f13f8f188de [type=6(runtime_call) addr=0x00007f13f8f193ad offset=14 format=1] | [destination=0x00007f13fd3b2bb4]
         @0x00007f13f8f188e0: 7c03fde3d2687f133806
relocInfo@0x00007f13f8f188e8 [type=7(external_word) addr=0x00007f13f8f193b3 offset=6 data={fde3d2687f13}] | [target=0x00007f13fde3d268]
         @0x00007f13f8f188ea: 320e
relocInfo@0x00007f13f8f188ea [type=6(runtime_call) addr=0x00007f13f8f193c1 offset=14 format=1] | [destination=0x00007f13fd3b2bb4]
         @0x00007f13f8f188ec: 3212
relocInfo@0x00007f13f8f188ec [type=6(runtime_call) addr=0x00007f13f8f193d3 offset=18 format=1] | [destination=0x00007f13f8fdf820]
         @0x00007f13f8f188ee: 7c03fdc925487f133805
relocInfo@0x00007f13f8f188f6 [type=7(external_word) addr=0x00007f13f8f193d8 offset=5 data={fdc925487f13}] | [target=0x00007f13fdc92548]
         @0x00007f13f8f188f8: 320e
relocInfo@0x00007f13f8f188f8 [type=6(runtime_call) addr=0x00007f13f8f193e6 offset=14 format=1] | [destination=0x00007f13fd3b2bb4]
         @0x00007f13f8f188fa: 7c03fde3d2687f133806
relocInfo@0x00007f13f8f18902 [type=7(external_word) addr=0x00007f13f8f193ec offset=6 data={fde3d2687f13}] | [target=0x00007f13fde3d268]
         @0x00007f13f8f18904: 320e
relocInfo@0x00007f13f8f18904 [type=6(runtime_call) addr=0x00007f13f8f193fa offset=14 format=1] | [destination=0x00007f13fd3b2bb4]
         @0x00007f13f8f18906: 7c03fde3d2687f133806
relocInfo@0x00007f13f8f1890e [type=7(external_word) addr=0x00007f13f8f19400 offset=6 data={fde3d2687f13}] | [target=0x00007f13fde3d268]
         @0x00007f13f8f18910: 320e
relocInfo@0x00007f13f8f18910 [type=6(runtime_call) addr=0x00007f13f8f1940e offset=14 format=1] | [destination=0x00007f13fd3b2bb4]
         @0x00007f13f8f18912: 7c03fde3d2687f133806
relocInfo@0x00007f13f8f1891a [type=7(external_word) addr=0x00007f13f8f19414 offset=6 data={fde3d2687f13}] | [target=0x00007f13fde3d268]
         @0x00007f13f8f1891c: 320e
relocInfo@0x00007f13f8f1891c [type=6(runtime_call) addr=0x00007f13f8f19422 offset=14 format=1] | [destination=0x00007f13fd3b2bb4]
         @0x00007f13f8f1891e: 3215
relocInfo@0x00007f13f8f1891e [type=6(runtime_call) addr=0x00007f13f8f19437 offset=21 format=1] | [destination=0x00007f13f8fdf820]
         @0x00007f13f8f18920: 7c03fdc925487f133805
relocInfo@0x00007f13f8f18928 [type=7(external_word) addr=0x00007f13f8f1943c offset=5 data={fdc925487f13}] | [target=0x00007f13fdc92548]
         @0x00007f13f8f1892a: 320e
relocInfo@0x00007f13f8f1892a [type=6(runtime_call) addr=0x00007f13f8f1944a offset=14 format=1] | [destination=0x00007f13fd3b2bb4]
         @0x00007f13f8f1892c: 3211
relocInfo@0x00007f13f8f1892c [type=6(runtime_call) addr=0x00007f13f8f1945b offset=17 format=1] | [destination=0x00007f13f8fdf820]
         @0x00007f13f8f1892e: 7c03fdc925487f133805
relocInfo@0x00007f13f8f18936 [type=7(external_word) addr=0x00007f13f8f19460 offset=5 data={fdc925487f13}] | [target=0x00007f13fdc92548]
         @0x00007f13f8f18938: 320e
relocInfo@0x00007f13f8f18938 [type=6(runtime_call) addr=0x00007f13f8f1946e offset=14 format=1] | [destination=0x00007f13fd3b2bb4]
         @0x00007f13f8f1893a: 3235
relocInfo@0x00007f13f8f1893a [type=6(runtime_call) addr=0x00007f13f8f194a3 offset=53 format=1] | [destination=0x00007f13f8fdf820]
         @0x00007f13f8f1893c: 7c03fdc925487f133805
relocInfo@0x00007f13f8f18944 [type=7(external_word) addr=0x00007f13f8f194a8 offset=5 data={fdc925487f13}] | [target=0x00007f13fdc92548]
         @0x00007f13f8f18946: 320e
relocInfo@0x00007f13f8f18946 [type=6(runtime_call) addr=0x00007f13f8f194b6 offset=14 format=1] | [destination=0x00007f13fd3b2bb4]
         @0x00007f13f8f18948: 7c03fde3d2687f13380f
relocInfo@0x00007f13f8f18950 [type=7(external_word) addr=0x00007f13f8f194c5 offset=15 data={fde3d2687f13}] | [target=0x00007f13fde3d268]
         @0x00007f13f8f18952: 320e
relocInfo@0x00007f13f8f18952 [type=6(runtime_call) addr=0x00007f13f8f194d3 offset=14 format=1] | [destination=0x00007f13fd3b2bb4]
         @0x00007f13f8f18954: 7c03fde3d2687f133806
relocInfo@0x00007f13f8f1895c [type=7(external_word) addr=0x00007f13f8f194d9 offset=6 data={fde3d2687f13}] | [target=0x00007f13fde3d268]
         @0x00007f13f8f1895e: 320e
relocInfo@0x00007f13f8f1895e [type=6(runtime_call) addr=0x00007f13f8f194e7 offset=14 format=1] | [destination=0x00007f13fd3b2bb4]
         @0x00007f13f8f18960: 7c03fde3d2687f133806
relocInfo@0x00007f13f8f18968 [type=7(external_word) addr=0x00007f13f8f194ed offset=6 data={fde3d2687f13}] | [target=0x00007f13fde3d268]
         @0x00007f13f8f1896a: 320e
relocInfo@0x00007f13f8f1896a [type=6(runtime_call) addr=0x00007f13f8f194fb offset=14 format=1] | [destination=0x00007f13fd3b2bb4]
         @0x00007f13f8f1896c: 7c03fde3d2687f133806
relocInfo@0x00007f13f8f18974 [type=7(external_word) addr=0x00007f13f8f19501 offset=6 data={fde3d2687f13}] | [target=0x00007f13fde3d268]
         @0x00007f13f8f18976: 320e
relocInfo@0x00007f13f8f18976 [type=6(runtime_call) addr=0x00007f13f8f1950f offset=14 format=1] | [destination=0x00007f13fd3b2bb4]
         @0x00007f13f8f18978: 7c03fde3d2687f133806
relocInfo@0x00007f13f8f18980 [type=7(external_word) addr=0x00007f13f8f19515 offset=6 data={fde3d2687f13}] | [target=0x00007f13fde3d268]
         @0x00007f13f8f18982: 320e
relocInfo@0x00007f13f8f18982 [type=6(runtime_call) addr=0x00007f13f8f19523 offset=14 format=1] | [destination=0x00007f13fd3b2bb4]
         @0x00007f13f8f18984: 7c03fde3d2687f133806
relocInfo@0x00007f13f8f1898c [type=7(external_word) addr=0x00007f13f8f19529 offset=6 data={fde3d2687f13}] | [target=0x00007f13fde3d268]
         @0x00007f13f8f1898e: 320e
relocInfo@0x00007f13f8f1898e [type=6(runtime_call) addr=0x00007f13f8f19537 offset=14 format=1] | [destination=0x00007f13fd3b2bb4]
         @0x00007f13f8f18990: 7c03fde3d2687f133806
relocInfo@0x00007f13f8f18998 [type=7(external_word) addr=0x00007f13f8f1953d offset=6 data={fde3d2687f13}] | [target=0x00007f13fde3d268]
         @0x00007f13f8f1899a: 320e
relocInfo@0x00007f13f8f1899a [type=6(runtime_call) addr=0x00007f13f8f1954b offset=14 format=1] | [destination=0x00007f13fd3b2bb4]
         @0x00007f13f8f1899c: 7c03fde3d2687f133806
relocInfo@0x00007f13f8f189a4 [type=7(external_word) addr=0x00007f13f8f19551 offset=6 data={fde3d2687f13}] | [target=0x00007f13fde3d268]
         @0x00007f13f8f189a6: 320e
relocInfo@0x00007f13f8f189a6 [type=6(runtime_call) addr=0x00007f13f8f1955f offset=14 format=1] | [destination=0x00007f13fd3b2bb4]
         @0x00007f13f8f189a8: 326c
relocInfo@0x00007f13f8f189a8 [type=6(runtime_call) addr=0x00007f13f8f195cb offset=108 format=1] | [destination=0x00007f13f8fdf820]
         @0x00007f13f8f189aa: 7c03fdc925487f133805
relocInfo@0x00007f13f8f189b2 [type=7(external_word) addr=0x00007f13f8f195d0 offset=5 data={fdc925487f13}] | [target=0x00007f13fdc92548]
         @0x00007f13f8f189b4: 320e
relocInfo@0x00007f13f8f189b4 [type=6(runtime_call) addr=0x00007f13f8f195de offset=14 format=1] | [destination=0x00007f13fd3b2bb4]
         @0x00007f13f8f189b6: 3218
relocInfo@0x00007f13f8f189b6 [type=6(runtime_call) addr=0x00007f13f8f195f6 offset=24 format=1] | [destination=0x00007f13f8f42000]
         @0x00007f13f8f189b8: 320d
relocInfo@0x00007f13f8f189b8 [type=6(runtime_call) addr=0x00007f13f8f19603 offset=13 format=1] | [destination=0x00007f13f8fdf820]
         @0x00007f13f8f189ba: 7c03fdc925487f133805
relocInfo@0x00007f13f8f189c2 [type=7(external_word) addr=0x00007f13f8f19608 offset=5 data={fdc925487f13}] | [target=0x00007f13fdc92548]
         @0x00007f13f8f189c4: 320e
relocInfo@0x00007f13f8f189c4 [type=6(runtime_call) addr=0x00007f13f8f19616 offset=14 format=1] | [destination=0x00007f13fd3b2bb4]
         @0x00007f13f8f189c6: 3211
relocInfo@0x00007f13f8f189c6 [type=6(runtime_call) addr=0x00007f13f8f19627 offset=17 format=1] | [destination=0x00007f13f8fdf820]
         @0x00007f13f8f189c8: 7c03fdc925487f133805
relocInfo@0x00007f13f8f189d0 [type=7(external_word) addr=0x00007f13f8f1962c offset=5 data={fdc925487f13}] | [target=0x00007f13fdc92548]
         @0x00007f13f8f189d2: 320e
relocInfo@0x00007f13f8f189d2 [type=6(runtime_call) addr=0x00007f13f8f1963a offset=14 format=1] | [destination=0x00007f13fd3b2bb4]
         @0x00007f13f8f189d4: 0006
relocInfo@0x00007f13f8f189d4 [type=0(none) addr=0x00007f13f8f19640 offset=6]
         @0x00007f13f8f189d6: 3200
relocInfo@0x00007f13f8f189d6 [type=6(runtime_call) addr=0x00007f13f8f19640 offset=0 format=1] | [destination=0x00007f13f8f747a0]
         @0x00007f13f8f189d8: 320f
relocInfo@0x00007f13f8f189d8 [type=6(runtime_call) addr=0x00007f13f8f1964f offset=15 format=1] | [destination=0x00007f13f8fdfb40]
         @0x00007f13f8f189da: 0000
relocInfo@0x00007f13f8f189da [type=0(none) addr=0x00007f13f8f1964f offset=0]
         @0x00007f13f8f189dc: 0000
relocInfo@0x00007f13f8f189dc [type=0(none) addr=0x00007f13f8f1964f offset=0]
         @0x00007f13f8f189de: 0000
relocInfo@0x00007f13f8f189de [type=0(none) addr=0x00007f13f8f1964f offset=0]
         @0x00007f13f8f189e0: 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Dependencies:
Dependency of type leaf_type
  context = polymorphic
   [nmethod<=klass]polymorphic
Dependency of type leaf_type
  context = myclassC1
   [nmethod<=klass]myclassC1
Dependency of type leaf_type
  context = myclassC2
   [nmethod<=klass]myclassC2
Dependency of type unique_concrete_method_4
  context = polymorphic
  method  = {method} {0x00007f13ac511540} 'doCall' '(LmyclassP;[I)I' in 'polymorphic'
  class   = polymorphic
  method  = {method} {0x00007f13ac511540} 'doCall' '(LmyclassP;[I)I' in 'polymorphic'
   [nmethod<=klass]polymorphic
Dependency of type unique_concrete_method_4
  context = myclassC1
  method  = {method} {0x00007f13ac511eb8} 'doAction' '([I)I' in 'myclassC1'
  class   = myclassP
  method  = {method} {0x00007f13ac511bf0} 'doAction' '([I)I' in 'myclassP'
   [nmethod<=klass]myclassC1
Dependency of type unique_concrete_method_4
  context = myclassC2
  method  = {method} {0x00007f13ac7001a0} 'doAction' '([I)I' in 'myclassC2'
  class   = myclassP
  method  = {method} {0x00007f13ac511bf0} 'doAction' '([I)I' in 'myclassP'
   [nmethod<=klass]myclassC2
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ExceptionHandlerTable (size = 24 bytes)
catch_pco = 476 (pc=0x00007f13f8f18bbc, 1 entries)
  bci -1 at scope depth 0 -> pco 3083 (pc=0x00007f13f8f195eb)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ImplicitExceptionTable (size = 2 entries, 20 bytes):
{
   < 0x00007f13f8f18c32, 0x00007f13f8f1961c > < 0x00007f13f8f18fb2, 0x00007f13f8f195fb > 
}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded oops:
#0: 0x0000000000000000 NULL-oop
#1: 0x000000011f8a7ec8 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x000000011f8a7ec8}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded metadata:
# 0: 0x0000000000000000 NULL-oop
# 1: 0x0000000800040dc8 {type array int}
# 2: 0x00000008000c1000 'polymorphic'
# 3: 0x00000008000c1420 'myclassC1'
# 4: 0x00000008000c1638 'myclassC2'
# 5: 0x00007f13ac511858 {method} {0x00007f13ac511858} 'main' '([Ljava/lang/String;)V' in 'polymorphic'
# 6: 0x00007f13ac511540 {method} {0x00007f13ac511540} 'doCall' '(LmyclassP;[I)I' in 'polymorphic'
# 7: 0x00007f13ac7001a0 {method} {0x00007f13ac7001a0} 'doAction' '([I)I' in 'myclassC2'
# 8: 0x00007f13ac511eb8 {method} {0x00007f13ac511eb8} 'doAction' '([I)I' in 'myclassC1'
# 9: 0x00000008000c1210 'myclassP'
#10: 0x00007f13ac511bf0 {method} {0x00007f13ac511bf0} 'doAction' '([I)I' in 'myclassP'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
[Poly-morphic Res] -1275068416  [Time] 1881 ms
------------------------------------------------------------------------
polymorphic::doCall(LmyclassP;[I)I
  interpreter_invocation_count:        6872
  invocation_counter:                  6872
  backedge_counter:                       0
  decompile_count:                        0
  mdo size: 504 bytes

0 aload_1
1 aload_2
2 invokevirtual 7 <myclassP.doAction([I)I> 
  0   bci: 2    VirtualCallData     count(1042) nonprofiled_count(0) entries(2)
                                    'myclassC2'(2084 0.40)
                                    'myclassP'(2083 0.40)
5 bipush 100
7 imul
8 ireturn
------------------------------------------------------------------------
static polymorphic::main([Ljava/lang/String;)V
  interpreter_invocation_count:           1
  invocation_counter:                     1
  backedge_counter:                   41984
  decompile_count:                        2
  mdo size: 2344 bytes

0 fast_aload_0
1 iconst_0
2 aaload
3 invokestatic 13 <java/lang/Integer.parseInt(Ljava/lang/String;)I> 
  0   bci: 3    CounterData         count(0)
6 istore_1
7 fast_aload_0
8 iconst_1
9 aaload
10 invokestatic 13 <java/lang/Integer.parseInt(Ljava/lang/String;)I> 
  16  bci: 10   CounterData         count(0)
13 istore_2
14 iload_1
15 newarray int
17 astore_3
18 aload_3
19 iconst_1
20 invokestatic 19 <java/util/Arrays.fill([II)V> 
  32  bci: 20   CounterData         count(0)
23 new 25 <polymorphic>
26 dup
27 invokespecial 27 <polymorphic.<init>()V> 
  48  bci: 27   CounterData         count(0)
30 astore #4
32 iload_2
33 ifne 140
  64  bci: 33   BranchData          taken(0) displacement(416)
                                    not taken(0)
36 iconst_0
37 istore #5
39 new 8 <myclassP>
42 dup
43 invokespecial 28 <myclassP.<init>()V> 
  96  bci: 43   CounterData         count(0)
46 astore #6
48 iconst_0
49 istore #7
51 iload #7
53 ldc 100000
55 if_icmpge 77
  112 bci: 55   BranchData          taken(0) displacement(112)
                                    not taken(0)
58 iload #5
60 aload #4
62 aload #6
64 aload_3
65 invokevirtual 30 <polymorphic.doCall(LmyclassP;[I)I> 
  144 bci: 65   VirtualCallData     count(0) nonprofiled_count(0) entries(0)
68 iadd
69 istore #5
71 iinc #7 1
74 goto 51
  200 bci: 74   JumpData            taken(0) displacement(-88)
77 iconst_0
78 istore #5
80 invokestatic 34 <java/lang/System.currentTimeMillis()J> 
  224 bci: 80   CounterData         count(0)
83 lstore #7
85 iconst_0
86 istore #9
88 iload #9
90 ldc 100000
92 if_icmpge 114
  240 bci: 92   BranchData          taken(0) displacement(112)
                                    not taken(0)
95 iload #5
97 aload #4
99 aload #6
101 aload_3
102 invokevirtual 30 <polymorphic.doCall(LmyclassP;[I)I> 
  272 bci: 102  VirtualCallData     count(0) nonprofiled_count(0) entries(0)
105 iadd
106 istore #5
108 iinc #9 1
111 goto 88
  328 bci: 111  JumpData            taken(0) displacement(-88)
114 invokestatic 34 <java/lang/System.currentTimeMillis()J> 
  352 bci: 114  CounterData         count(0)
117 lstore #9
119 getstatic 40 <java/lang/System.out/Ljava/io/PrintStream;> 
122 iload #5
124 lload #9
126 lload #7
128 lsub
129 invokedynamic bsm=74 44 <makeConcatWithConstants(IJ)Ljava/lang/String;>
  368 bci: 129  CounterData         count(0)
                return type         none
134 invokevirtual 48 <java/io/PrintStream.println(Ljava/lang/String;)V> 
  400 bci: 134  VirtualCallData     count(0) nonprofiled_count(0) entries(0)
137 goto 544
  456 bci: 137  JumpData            taken(0) displacement(1456)
140 iload_2
141 iconst_1
142 if_icmpne 308
  480 bci: 142  BranchData          taken(0) displacement(656)
                                    not taken(0)
145 iconst_0
146 istore #5
148 new 54 <myclassC1>
151 dup
152 invokespecial 56 <myclassC1.<init>()V> 
  512 bci: 152  CounterData         count(0)
155 astore #6
157 new 57 <myclassC2>
160 dup
161 invokespecial 59 <myclassC2.<init>()V> 
  528 bci: 161  CounterData         count(0)
164 astore #7
166 iconst_0
167 istore #8
169 iload #8
171 ldc 100000
173 if_icmpge 220
  544 bci: 173  BranchData          taken(0) displacement(224)
                                    not taken(0)
176 iload #8
178 sipush 128
181 iand
182 ifne 201
  576 bci: 182  BranchData          taken(0) displacement(112)
                                    not taken(0)
185 iload #5
187 aload #4
189 aload #6
191 aload_3
192 invokevirtual 30 <polymorphic.doCall(LmyclassP;[I)I> 
  608 bci: 192  VirtualCallData     count(0) nonprofiled_count(0) entries(0)
195 iadd
196 istore #5
198 goto 214
  664 bci: 198  JumpData            taken(0) displacement(80)
201 iload #5
203 aload #4
205 aload #7
207 aload_3
208 invokevirtual 30 <polymorphic.doCall(LmyclassP;[I)I> 
  688 bci: 208  VirtualCallData     count(0) nonprofiled_count(0) entries(0)
211 iadd
212 istore #5
214 iinc #8 1
217 goto 169
  744 bci: 217  JumpData            taken(0) displacement(-200)
220 iconst_0
221 istore #5
223 invokestatic 34 <java/lang/System.currentTimeMillis()J> 
  768 bci: 223  CounterData         count(0)
226 lstore #8
228 iconst_0
229 istore #10
231 iload #10
233 ldc 100000
235 if_icmpge 282
  784 bci: 235  BranchData          taken(0) displacement(224)
                                    not taken(0)
238 iload #10
240 sipush 128
243 iand
244 ifne 263
  816 bci: 244  BranchData          taken(0) displacement(112)
                                    not taken(0)
247 iload #5
249 aload #4
251 aload #6
253 aload_3
254 invokevirtual 30 <polymorphic.doCall(LmyclassP;[I)I> 
  848 bci: 254  VirtualCallData     count(0) nonprofiled_count(0) entries(0)
257 iadd
258 istore #5
260 goto 276
  904 bci: 260  JumpData            taken(0) displacement(80)
263 iload #5
265 aload #4
267 aload #7
269 aload_3
270 invokevirtual 30 <polymorphic.doCall(LmyclassP;[I)I> 
  928 bci: 270  VirtualCallData     count(0) nonprofiled_count(0) entries(0)
273 iadd
274 istore #5
276 iinc #10 1
279 goto 231
  984 bci: 279  JumpData            taken(0) displacement(-200)
282 invokestatic 34 <java/lang/System.currentTimeMillis()J> 
  1008bci: 282  CounterData         count(0)
285 lstore #10
287 getstatic 40 <java/lang/System.out/Ljava/io/PrintStream;> 
290 iload #5
292 lload #10
294 lload #8
296 lsub
297 invokedynamic bsm=74 60 <makeConcatWithConstants(IJ)Ljava/lang/String;>
  1024bci: 297  CounterData         count(0)
                return type         none
302 invokevirtual 48 <java/io/PrintStream.println(Ljava/lang/String;)V> 
  1056bci: 302  VirtualCallData     count(0) nonprofiled_count(0) entries(0)
305 goto 544
  1112bci: 305  JumpData            taken(0) displacement(800)
308 iload_2
309 iconst_2
310 if_icmpne 544
  1136bci: 310  BranchData          taken(0) displacement(776)
                                    not taken(0)
313 iconst_0
314 istore #5
316 new 54 <myclassC1>
319 dup
320 invokespecial 56 <myclassC1.<init>()V> 
  1168bci: 320  CounterData         count(0)
323 astore #6
325 new 57 <myclassC2>
328 dup
329 invokespecial 59 <myclassC2.<init>()V> 
  1184bci: 329  CounterData         count(0)
332 astore #7
334 new 8 <myclassP>
337 dup
338 invokespecial 28 <myclassP.<init>()V> 
  1200bci: 338  CounterData         count(0)
341 astore #8
343 iconst_0
344 istore #9
346 fast_iload #9
348 ldc 100000
350 if_icmpge 429
  1216bci: 350  BranchData          trap(intrinsic_or_type_checked_inlining recompiled) taken(1) displacement(288)
                                    not taken(18432)
353 fast_iload #9
355 iconst_3
356 iand
357 fast_linearswitch 423 2  0:384, 1:397
  1248bci: 357  MultiBranchData     default_count(9216) displacement(232)
                                    count(4608) displacement(64)
                                    count(4608) displacement(120)
384 fast_iload #5
386 aload #4
388 aload #6
390 aload_3
391 invokevirtual 30 <polymorphic.doCall(LmyclassP;[I)I> 
  1312bci: 391  VirtualCallData     count(0) nonprofiled_count(0) entries(1)
                                    'polymorphic'(4608 1.00)
394 iadd
395 istore #5
397 fast_iload #5
399 aload #4
401 aload #7
403 aload_3
404 invokevirtual 30 <polymorphic.doCall(LmyclassP;[I)I> 
  1368bci: 404  VirtualCallData     count(0) nonprofiled_count(0) entries(1)
                                    'polymorphic'(9216 1.00)
407 iadd
408 istore #5
410 fast_iload #5
412 aload #4
414 aload #8
416 aload_3
417 invokevirtual 30 <polymorphic.doCall(LmyclassP;[I)I> 
  1424bci: 417  VirtualCallData     count(0) nonprofiled_count(0) entries(1)
                                    'polymorphic'(9216 1.00)
420 iadd
421 istore #5
423 iinc #9 1
426 goto 346
  1480bci: 426  JumpData            taken(18432) displacement(-264)
429 iconst_0
430 istore #5
432 invokestatic 34 <java/lang/System.currentTimeMillis()J> 
  1504bci: 432  CounterData         count(1)
435 lstore #9
437 iconst_0
438 istore #11
440 fast_iload #11
442 ldc 100000
444 if_icmpge 521
  1520bci: 444  BranchData          trap(intrinsic_or_type_checked_inlining recompiled) taken(1) displacement(288)
                                    not taken(18432)
447 fast_iload #11
449 iconst_3
450 iand
451 fast_linearswitch 515 2  0:476, 1:489
  1552bci: 451  MultiBranchData     default_count(9216) displacement(232)
                                    count(4608) displacement(64)
                                    count(4608) displacement(120)
476 fast_iload #5
478 aload #4
480 aload #6
482 aload_3
483 invokevirtual 30 <polymorphic.doCall(LmyclassP;[I)I> 
  1616bci: 483  VirtualCallData     count(0) nonprofiled_count(0) entries(1)
                                    'polymorphic'(4608 1.00)
486 iadd
487 istore #5
489 fast_iload #5
491 aload #4
493 aload #7
495 aload_3
496 invokevirtual 30 <polymorphic.doCall(LmyclassP;[I)I> 
  1672bci: 496  VirtualCallData     count(0) nonprofiled_count(0) entries(1)
                                    'polymorphic'(9216 1.00)
499 iadd
500 istore #5
502 fast_iload #5
504 aload #4
506 aload #8
508 aload_3
509 invokevirtual 30 <polymorphic.doCall(LmyclassP;[I)I> 
  1728bci: 509  VirtualCallData     count(0) nonprofiled_count(0) entries(1)
                                    'polymorphic'(9216 1.00)
512 iadd
513 istore #5
515 iinc #11 1
518 goto 440
  1784bci: 518  JumpData            taken(18432) displacement(-264)
521 invokestatic 34 <java/lang/System.currentTimeMillis()J> 
  1808bci: 521  CounterData         count(1)
524 lstore #11
526 getstatic 40 <java/lang/System.out/Ljava/io/PrintStream;> 
529 fast_iload #5
531 lload #11
533 lload #9
535 lsub
536 invokedynamic bsm=74 61 <makeConcatWithConstants(IJ)Ljava/lang/String;>
  1824bci: 536  CounterData         count(1)
                return type         'java/lang/String'
541 invokevirtual 48 <java/io/PrintStream.println(Ljava/lang/String;)V> 
  1856bci: 541  VirtualCallData     count(0) nonprofiled_count(0) entries(1)
                                    'java/io/PrintStream'(1 1.00)
544 return
------------------------------------------------------------------------
Total MDO size: 2848 bytes
