CompileCommand: print test_buffering_in_loop.micro bool print = true
CompileCommand: PrintIdealPhase test_buffering_in_loop.micro const char* PrintIdealPhase = 'AFTER_PARSING'
CompileCommand: dontinline test_buffering_in_loop.leaf bool dontinline = true
AFTER: AFTER_PARSING
   0  Root  === 0 70 89 100 111 122 153 198 247  |155  [[ 0 1 3 20 244 193 176 29 173 33 158 45 48 65 79 84 95 106 117 139 148 157 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 37 38 26 30 34 ]] Control !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
   6  Parm  === 3  [[ 74 66 ]] I_O !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
   7  Parm  === 3  [[ 75 42 38 26 30 34 37 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
   8  Parm  === 3  [[ 247 194 198 38 70 66 149 89 85 100 96 111 107 122 118 153 ]] FramePtr !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
   9  Parm  === 3  [[ 247 194 149 66 118 85 96 107 ]] ReturnAdr !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  10  Parm  === 3  [[ 38 22 22 37 32 32 28 28 ]] Parm0: rawptr:BotPTR !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  16  MergeMem  === _ 1 126 127  [[ 247 ]]  { N127:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot;
  20  ConL  === 0  [[ 22 ]]  #long:24
  22  AddP  === _ 10 10 20  [[ 26 ]]  !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  26  LoadP  === 5 7 22  [[ 54 66 49 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  28  AddP  === _ 10 10 29  [[ 30 ]]  !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  29  ConL  === 0  [[ 28 168 ]]  #long:16
  30  LoadI  === 5 7 28  [[ 66 132 155 85 96 107 118 149 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  32  AddP  === _ 10 10 33  [[ 34 ]]  !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  33  ConL  === 0  [[ 32 ]]  #long:8
  34  LoadF  === 5 7 32  [[ 66 77 ]]  @rawptr:BotPTR, idx=Raw; #float (does not depend only on test, raw access) !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  37  LoadI  === 5 7 10  [[ 66 78 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  38  CallLeaf  === 5 1 7 8 1 (10 ) [[ 39 41 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  39  Proj  === 38  [[ 51 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  41  Proj  === 38  [[ 76 42 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  42  MergeMem  === _ 1 7 41  [[ 66 ]]  { N41:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  45  ConP  === 0  [[ 55 ]]  #precise MyValue: 0x000074a378105988:Constant:exact *  Klass:precise MyValue: 0x000074a378105988:Constant:exact *
  46  Region  === 46 62 52  [[ 46 47 73 ]]  !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  47  Phi  === 46 64 48  [[ 183 166 85 96 107 118 149 167 161 155 ]]  #MyValue:exact *  Oop:MyValue:exact * !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  48  ConP  === 0  [[ 49 47 161 ]]  #null
  49  CmpP  === _ 26 48  [[ 50 ]]  !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  50  Bool  === _ 49  [[ 51 ]] [ne] !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  51  If  === 39 50  [[ 52 53 ]] P=0.999000, C=-1.000000 !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  52  IfFalse  === 51  [[ 46 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  53  IfTrue  === 51  [[ 61 54 ]] #1 !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  54  CastPP  === 53 26  [[ 55 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  55  SubTypeCheck  === _ 54 45  [[ 60 ]]  profiled at: test_buffering_in_loop::micro:4 !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  60  Bool  === _ 55  [[ 61 ]] [eq] !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  61  If  === 53 60  [[ 62 63 ]] P=0.900000, C=-1.000000 !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  62  IfTrue  === 61  [[ 46 64 ]] #1 !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  63  IfFalse  === 61  [[ 66 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  64  CheckCastPP  === 62 54  [[ 47 ]]  #MyValue:NotNull:exact *  Oop:MyValue:NotNull:exact * !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  65  ConI  === 0  [[ 66 ]]  #int:-123
  66  CallStaticJava  === 63 6 42 8 9 (65 26 30 34 37 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 test_buffering_in_loop::micro @ bci:4 (line 25) !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  73  Region  === 73 _ 46  [[ 73 80 74 75 76 77 78 ]] #reducible  !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  74  Phi  === 73 _ 6  [[ 125 85 96 107 118 ]]  #abIO !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  75  Phi  === 73 _ 7  [[ 126 82 115 93 104 ]]  #memory  Memory: @BotPTR *+bot, idx=Bot; !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  76  Phi  === 73 _ 41  [[ 127 82 115 93 104 ]]  #memory  Memory: @rawptr:BotPTR, idx=Raw; !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  77  Phi  === 73 _ 34  [[ 128 85 96 107 118 ]]  #float !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  78  Phi  === 73 _ 37  [[ 129 85 96 107 118 ]]  #int !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  79  ConI  === 0  [[ 80 91 102 113 154 167 ]]  #int:1
  80  ParsePredicate  === 73 79  [[ 81 90 ]]  #Loop  !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  81  IfFalse  === 80  [[ 85 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  82  MergeMem  === _ 1 75 76  [[ 85 ]]  { N76:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  84  ConI  === 0  [[ 85 ]]  #int:-146
  85  CallStaticJava  === 81 74 82 8 9 (84 47 30 77 78 ) [[ 86 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 test_buffering_in_loop::micro @ bci:4 (line 25) !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  86  Proj  === 85  [[ 89 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  89  Halt  === 86 1 1 8 1  [[ 0 ]]  !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  90  IfTrue  === 80  [[ 91 ]] #1 !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  91  ParsePredicate  === 90 79  [[ 92 101 ]]  #Profiled Loop  !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  92  IfFalse  === 91  [[ 96 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  93  MergeMem  === _ 1 75 76  [[ 96 ]]  { N76:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  95  ConI  === 0  [[ 96 ]]  #int:-66
  96  CallStaticJava  === 92 74 93 8 9 (95 47 30 77 78 ) [[ 97 ]] # Static uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 test_buffering_in_loop::micro @ bci:4 (line 25) !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  97  Proj  === 96  [[ 100 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
 100  Halt  === 97 1 1 8 1  [[ 0 ]]  !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
 101  IfTrue  === 91  [[ 102 ]] #1 !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
 102  ParsePredicate  === 101 79  [[ 103 112 ]]  #Auto_Vectorization_Check  !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
 103  IfFalse  === 102  [[ 107 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
 104  MergeMem  === _ 1 75 76  [[ 107 ]]  { N76:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
 106  ConI  === 0  [[ 107 ]]  #int:-74
 107  CallStaticJava  === 103 74 104 8 9 (106 47 30 77 78 ) [[ 108 ]] # Static uncommon_trap(reason='auto_vectorization_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 test_buffering_in_loop::micro @ bci:4 (line 25) !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
 108  Proj  === 107  [[ 111 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
 111  Halt  === 108 1 1 8 1  [[ 0 ]]  !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
 112  IfTrue  === 102  [[ 113 ]] #1 !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
 113  ParsePredicate  === 112 79  [[ 114 123 ]]  #Loop Limit Check  !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
 114  IfFalse  === 113  [[ 118 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
 115  MergeMem  === _ 1 75 76  [[ 118 ]]  { N76:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
 117  ConI  === 0  [[ 118 ]]  #int:-154
 118  CallStaticJava  === 114 74 115 8 9 (117 47 30 77 78 ) [[ 119 ]] # Static uncommon_trap(reason='loop_limit_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 test_buffering_in_loop::micro @ bci:4 (line 25) !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
 119  Proj  === 118  [[ 122 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
 122  Halt  === 119 1 1 8 1  [[ 0 ]]  !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
 123  IfTrue  === 113  [[ 124 ]] #1 !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
 124  Region  === 124 155 123  [[ 124 134 125 126 127 128 129 ]] #reducible  !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
 125  Phi  === 124 125 74  [[ 125 149 247 194 ]]  #abIO !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
 126  Phi  === 124 126 75  [[ 126 130 16 188 174 156 170 ]]  #memory  Memory: @BotPTR *+bot, idx=Bot; !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
 127  Phi  === 124 127 76  [[ 127 130 16 188 160 156 ]]  #memory  Memory: @rawptr:BotPTR, idx=Raw; !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
 128  Phi  === 124 128 77  [[ 128 149 155 ]]  #float !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
 129  Phi  === 124 154 78  [[ 154 149 140 132 149 ]]  #int !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
 130  MergeMem  === _ 1 126 127  [[ 149 ]]  { N127:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
 132  CmpI  === _ 129 30  [[ 133 ]]  !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
 133  Bool  === _ 132  [[ 134 ]] [lt] !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
 134  If  === 124 133  [[ 135 136 ]] P=0.993467, C=31075.000000 !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
 135  IfTrue  === 134  [[ 142 ]] #1 !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
 136  IfFalse  === 134  [[ 163 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
 139  ConI  === 0  [[ 149 140 ]]  #int:500
 140  CmpI  === _ 129 139  [[ 141 ]]  !jvms: test_buffering_in_loop::micro @ bci:13 (line 26)
 141  Bool  === _ 140  [[ 142 ]] [le] !jvms: test_buffering_in_loop::micro @ bci:13 (line 26)
 142  If  === 135 141  [[ 143 144 ]] P=1.000000, C=30872.000000 !jvms: test_buffering_in_loop::micro @ bci:13 (line 26)
 143  IfTrue  === 142  [[ 155 160 ]] #1 !jvms: test_buffering_in_loop::micro @ bci:13 (line 26)
 144  IfFalse  === 142  [[ 149 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:13 (line 26)
 148  ConI  === 0  [[ 149 ]]  #int:-187
 149  CallStaticJava  === 144 125 130 8 9 (148 47 30 128 129 129 139 ) [[ 150 ]] # Static uncommon_trap(reason='unstable_if' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 test_buffering_in_loop::micro @ bci:13 (line 26) reexecute !jvms: test_buffering_in_loop::micro @ bci:13 (line 26)
 150  Proj  === 149  [[ 153 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:13 (line 26)
 153  Halt  === 150 1 1 8 1  [[ 0 ]]  !jvms: test_buffering_in_loop::micro @ bci:13 (line 26)
 154  AddI  === _ 129 79  [[ 129 155 ]]  !jvms: test_buffering_in_loop::micro @ bci:23 (line 25)
 155  SafePoint  === 143 1 156 1 1 160 47 30 128 154  [[ 124 0 ]]  SafePoint  !jvms: test_buffering_in_loop::micro @ bci:26 (line 25)
 156  MergeMem  === _ 1 126 127  [[ 155 ]]  { N127:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: test_buffering_in_loop::micro @ bci:26 (line 25)
 157  ThreadLocal  === 0  [[ 159 ]]  !jvms: test_buffering_in_loop::micro @ bci:26 (line 25)
 158  ConL  === 0  [[ 159 ]]  #long:48
 159  AddP  === _ 1 157 158  [[ 160 ]]  !jvms: test_buffering_in_loop::micro @ bci:26 (line 25)
 160  LoadP  === 143 127 159  [[ 155 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !jvms: test_buffering_in_loop::micro @ bci:26 (line 25)
 161  CmpP  === _ 47 48  [[ 162 ]]  !jvms: test_buffering_in_loop::micro @ bci:30 (line 30)
 162  Bool  === _ 161  [[ 163 190 ]] [ne] !jvms: test_buffering_in_loop::micro @ bci:30 (line 30)
 163  If  === 136 162  [[ 164 165 ]] P=0.999000, C=-1.000000 !jvms: test_buffering_in_loop::micro @ bci:30 (line 30)
 164  IfFalse  === 163  [[ 177 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:30 (line 30)
 165  IfTrue  === 163  [[ 177 166 ]] #1 !jvms: test_buffering_in_loop::micro @ bci:30 (line 30)
 166  CastPP  === 165 47  [[ 172 168 168 172 ]]  #MyValue:NotNull:exact *  Oop:MyValue:NotNull:exact * !jvms: test_buffering_in_loop::micro @ bci:30 (line 30)
 167  InlineType  === _ 47 79 183 181 182  [[ 194 ]]  #MyValue:exact *  Oop:MyValue:exact * !jvms: test_buffering_in_loop::micro @ bci:30 (line 30)
 168  AddP  === _ 166 166 29  [[ 170 ]]   Oop:MyValue:NotNull:exact+16 * !jvms: test_buffering_in_loop::micro @ bci:30 (line 30)
 170  LoadF  === _ 126 168  [[ 181 ]]  @MyValue:exact+16 *, name=f1, idx=5; #float !jvms: test_buffering_in_loop::micro @ bci:30 (line 30)
 172  AddP  === _ 166 166 173  [[ 174 ]]   Oop:MyValue:NotNull:exact+20 * !jvms: test_buffering_in_loop::micro @ bci:30 (line 30)
 173  ConL  === 0  [[ 172 ]]  #long:20
 174  LoadF  === _ 126 172  [[ 182 ]]  @MyValue:exact+20 *, name=f2, idx=6; #float !jvms: test_buffering_in_loop::micro @ bci:30 (line 30)
 176  ConF  === 0  [[ 182 181 ]]  #ftcon:0.000000
 177  Region  === 177 165 164  [[ 177 190 182 181 ]]  !jvms: test_buffering_in_loop::micro @ bci:30 (line 30)
 181  Phi  === 177 170 176  [[ 167 241 ]]  #float !jvms: test_buffering_in_loop::micro @ bci:30 (line 30)
 182  Phi  === 177 174 176  [[ 167 241 ]]  #float !jvms: test_buffering_in_loop::micro @ bci:30 (line 30)
 183  Conv2B  === _ 47  [[ 167 ]]  !jvms: test_buffering_in_loop::micro @ bci:30 (line 30)
 188  MergeMem  === _ 1 126 127  [[ 194 ]]  { N127:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: test_buffering_in_loop::micro @ bci:30 (line 30)
 190  If  === 177 162  [[ 191 192 ]] P=0.999999, C=-1.000000 !jvms: test_buffering_in_loop::micro @ bci:30 (line 30)
 191  IfTrue  === 190  [[ 247 ]] #1 !jvms: test_buffering_in_loop::micro @ bci:30 (line 30)
 192  IfFalse  === 190  [[ 194 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:30 (line 30)
 193  ConI  === 0  [[ 194 ]]  #int:-10
 194  CallStaticJava  === 192 125 188 8 9 (193 1 1 1 1 167 ) [[ 195 ]] # Static uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 test_buffering_in_loop::micro @ bci:30 (line 30) !jvms: test_buffering_in_loop::micro @ bci:30 (line 30)
 195  Proj  === 194  [[ 198 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:30 (line 30)
 198  Halt  === 195 1 1 8 1  [[ 0 ]]  !jvms: test_buffering_in_loop::micro @ bci:30 (line 30)
 241  AddF  === _ 181 182  [[ 245 ]]  !jvms: MyValue::getAccum @ bci:8 (line 14) test_buffering_in_loop::micro @ bci:30 (line 30)
 244  ConF  === 0  [[ 245 ]]  #ftcon:10.000000
 245  AddF  === _ 241 244  [[ 247 ]]  !jvms: test_buffering_in_loop::micro @ bci:35 (line 30)
 247  Return  === 191 125 16 8 9 returns 245  [[ 0 ]] 

============================= C2-compiled nmethod ==============================
#r018 rsi:rsi   : parm 0: rawptr:BotPTR
# -- Old rsp -- Framesize: 48 --
#r623 rsp+44: in_preserve
#r622 rsp+40: return address
#r621 rsp+36: in_preserve
#r620 rsp+32: saved fp register
#r619 rsp+28: Fixed slot 3
#r618 rsp+24: Fixed slot 2
#r617 rsp+20: Fixed slot 1
#r616 rsp+16: Fixed slot 0
#r627 rsp+12: spill
#r626 rsp+ 8: spill
#r625 rsp+ 4: spill
#r624 rsp+ 0: spill
#
----------------------- MetaData before Compile_id = 99 ------------------------
{method}
 - this oop:          0x000074a304402548
 - method holder:     'test_buffering_in_loop'
 - constants:         0x000074a304402050 constant pool [71]/operands[5] {0x000074a304402050} for 'test_buffering_in_loop' cache=0x000074a3044031a0
 - access:            0x9  public static value 
 - flags:             0x16080  queued_for_compilation has_loops_flag has_loops_flag_init has_scalarized_args 
 - name:              'micro'
 - signature:         '(LMyValue;I)F'
 - max stack:         3
 - max locals:        4
 - size of params:    2
 - method size:       16
 - vtable index:      -2
 - i2i entry:         0x000074a37c44ff20
 - adapters:          AHE@0x000074a3782657f0: 0x244319ea i2c: 0x000074a37c5e6960 c2i: 0x000074a37c5e6ec7 c2iVE: 0x000074a37c5e73ab c2iVROE: 0x000074a37c5e6a3f c2iUE: 0x000074a37c5e6a1e c2iUVE: 0x000074a37c5e738a c2iNCI: 0x000074a37c5e73e6
 - compiled entry           0x000074a37c5e6ec7
 - compiled inline entry    0x000074a37c5e73ab
 - compiled inline ro entry 0x000074a37c5e6a3f
 - code size:         37
 - code start:        0x000074a304402518
 - code end (excl):   0x000074a30440253d
 - method data:       0x000074a3044033c0
 - checked ex length: 0
 - linenumber start:  0x000074a30440253d
 - localvar length:   0

------------------------ OptoAssembly for Compile_id = 99 -----------------------
#
#  float ( rawptr:BotPTR )
#
000     N214: #	out( B1 ) <- BLOCK HEAD IS JUNK  Freq: 1
000     # breakpoint
        nop 	# 11 bytes pad for loops and calls

010     B1: #	out( B15 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
010     # stack bang (144 bytes)
	pushq   rbp	# Save rbp
	subq    rsp, #32	# Create frame

02a     movq    R14, [RSI + #24 (8-bit)]	# ptr
02e     movl    RBX, [RSI + #16 (8-bit)]	# int
031     movl    R13, [RSI]	# int
034     movss   XMM1, [RSI + #8 (8-bit)]	# float
039     movss   [rsp + #0], XMM1	# spill
03e     movq    RDI, RSI	# spill
041     call_leaf,runtime  OSR_migration_end
        No JVM State Info
        # 
056     testq   R14, R14	# ptr
059     je     B15  P=0.001000 C=-1.000000

05f     B2: #	out( B17 B3 ) <- in( B1 )  Freq: 0.999
05f     movl    R10, [R14 + #8 (8-bit)]	# compressed klass ptr
063     cmpl    R10, narrowklass: precise MyValue: 0x000074a378105988:Constant:exact *	# compressed klass ptr
06a     jne,u   B17  P=0.000001 C=-1.000000

070     B3: #	out( B4 ) <- in( B2 )  Freq: 0.998999
070     # checkcastPP of R14

070     B4: #	out( B13 B5 ) <- in( B3 B15 )  Freq: 0.999999
070     cmpl    R13, RBX
073     jge     B13  P=0.006533 C=31075.000000

079     B5: #	out( B6 ) <- in( B4 )  Freq: 0.993466
079     leal    R10, [R13 + #1]
07d     movslq  R11, R10	# i2l
080     movq    R8, #-2147483647	# long (32-bit)
087     cmpl    R10, #-2147483647
08e     cmovql R11, R8	# signed, long
092     movl    R11, R11	# l2i
095     cmpl    R11, RBX
098     cmovlgt R11, RBX	# min

09c     B6: #	out( B18 B7 ) <- in( B5 B7 ) Loop( B6-B7 inner pre of N323 multiversion_fast) Freq: 1.98693
09c     cmpl    R13, #500
0a3     jg     B18  P=0.000000 C=30872.000000

0a9     B7: #	out( B6 B8 ) <- in( B6 )  Freq: 1.98693
0a9     incl    R13	# int
0ac     cmpl    R13, R11
0af     jl,s   B6	# loop end  P=0.500000 C=31075.000000

0b1     B8: #	out( B16 B9 ) <- in( B7 )  Freq: 0.993465
0b1     movslq  R10, RBX	# i2l
0b4     movl    R11, #501	# long (unsigned 32-bit)
0ba     cmpl    RBX, #501
0c0     cmovqg R10, R11	# signed, long
0c4     decq    R10	# long
0c7     movq    R11, #-2147483648	# long (32-bit)
0ce     cmpq    R10, #-2147483648
0d5     cmovql R10, R11	# signed, long
0d9     movl    R8, R10	# l2i
0dc     cmpl    R13, R8
0df     jge,s   B16  P=0.000001 C=-1.000000

0e1     B9: #	out( B10 ) <- in( B8 )  Freq: 0.993464
0e1     movslq  R11, R13	# i2l
0e4     subq    R10, R11	# long
0e7     incq    R10	# long
0ea     andq    R10, #-2	# long
0ee     movl    RBP, R10	# l2i
0f1     addl    RBP, R13	# int
0f4     # castII of RBP

0f4     B10: #	out( B13 B11 ) <- in( B16 B9 )  Freq: 0.993465
0f4     cmpl    RBP, RBX
0f6     jge,s   B13  P=0.500000 C=-1.000000

0f8     B11: #	out( B19 B12 ) <- in( B10 B12 ) Loop( B11-B12 inner post of N323 multiversion_fast) Freq: 0.993465
0f8     cmpl    RBP, #500
0fe     jg,s   B19  P=0.000000 C=30872.000000

100     B12: #	out( B11 B13 ) <- in( B11 )  Freq: 0.993464
100     incl    RBP	# int
102     cmpl    RBP, RBX
104     jl,s   B11	# loop end  P=0.500000 C=31075.000000

106     B13: #	out( B20 B14 ) <- in( B4 B12 B10 )  Freq: 0.999998
106     movss   XMM0, [R14 + #20 (8-bit)]	# float ! Field: MyValue.f2 (constant)
10c     NullCheck R14

10c     B14: #	out( N214 ) <- in( B13 )  Freq: 0.999997
10c     vaddss  XMM1, XMM0, [R14 + #16 (8-bit)]
112     # MachConstantBaseNode (empty encoding)
112     vaddss  XMM0, XMM1, [constant table base + #0]	# load from constant table: float=#10.000000
11a     addq    rsp, 32	# Destroy frame
	popq    rbp
	cmpq    rsp, poll_offset[r15_thread] 
	ja      #safepoint_stub	# Safepoint: poll for GC

129     ret

12a     B15: #	out( B4 ) <- in( B1 )  Freq: 0.000999987
12a     xorl    R14, R14	# ptr
12d     jmp     B4

132     B16: #	out( B10 ) <- in( B8 )  Freq: 1.00666e-06
132     movl    RBP, R13	# spill
135     jmp,s   B10

137     B17: #	out( N214 ) <- in( B2 )  Freq: 9.99e-07
137     movl    RSI, #-123	# int
13c     movl    RBP, R13	# spill
13f     movq    [rsp + #8], R14	# spill
144     movl    [rsp + #4], RBX	# spill
        nop 	# 3 bytes pad for loops and calls
14b     call,static  wrapper for: uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')
        # test_buffering_in_loop::micro @ bci:4 (line 25) L[0]=rsp + #8 L[1]=rsp + #4 L[2]=rsp + #0 L[3]=RBP
        # OopMap {[8]=Oop off=336/0x150}
158     stop	# ShouldNotReachHere

16c     B18: #	out( B19 ) <- in( B6 )  Freq: 9.47443e-07
16c     movl    RBP, R13	# spill

16f     B19: #	out( N214 ) <- in( B11 B18 )  Freq: 1.42116e-06
16f     movl    RSI, #-187	# int
174     movq    [rsp + #8], R14	# spill
179     movl    [rsp + #4], RBX	# spill
        nop 	# 2 bytes pad for loops and calls
17f     call,static  wrapper for: uncommon_trap(reason='unstable_if' action='reinterpret' debug_id='0')
        # test_buffering_in_loop::micro @ bci:13 (line 26) L[0]=rsp + #8 L[1]=rsp + #4 L[2]=rsp + #0 L[3]=RBP STK[0]=RBP STK[1]=#500
        # OopMap {[8]=Oop off=388/0x184}
18c     stop	# ShouldNotReachHere

1a0     B20: #	out( N214 ) <- in( B13 )  Freq: 1.01328e-06
1a0     xorl    RBP, RBP	# int
1a2     testq   R14, R14	# ptr
1a5     setbne RBP	# signed, int
1a9     movl    RSI, #-10	# int
        nop 	# 1 bytes pad for loops and calls
1af     call,static  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # test_buffering_in_loop::micro @ bci:30 (line 30) L[0]=_ L[1]=_ L[2]=_ L[3]=_ STK[0]=#ScObj0
        # ScObj0 MyValue={ [is_init :-1]=RBP [f1 :0]=#0.000000F, [f2 :1]=#0.000000F }
        # OopMap {off=436/0x1b4}
1bc     stop	# ShouldNotReachHere

--------------------------------------------------------------------------------
----------------------------------- Assembly -----------------------------------

Compiled method (c2) 871   99 %           test_buffering_in_loop::micro @ 4 (37 bytes)
 total in heap  [0x000074a37c5e9f88,0x000074a37c5ea2d8] = 848
 constants      [0x000074a37c5ea0a0,0x000074a37c5ea0c0] = 32
 main code      [0x000074a37c5ea0c0,0x000074a37c5ea2b0] = 496
 stub code      [0x000074a37c5ea2b0,0x000074a37c5ea2c8] = 24
 oops           [0x000074a37c5ea2c8,0x000074a37c5ea2d8] = 16
 mutable data [0x000074a2f023d900,0x000074a2f023d958] = 88
 relocation     [0x000074a2f023d900,0x000074a2f023d940] = 64
 metadata       [0x000074a2f023d940,0x000074a2f023d958] = 24
 immutable data [0x000074a2f023e2e0,0x000074a2f023e480] = 416
 dependencies   [0x000074a2f023e2e0,0x000074a2f023e2e8] = 8
 nul chk table  [0x000074a2f023e2e8,0x000074a2f023e2f8] = 16
 scopes pcs     [0x000074a2f023e2f8,0x000074a2f023e418] = 288
 scopes data    [0x000074a2f023e418,0x000074a2f023e480] = 104

[Disassembly]
--------------------------------------------------------------------------------

[Constant Pool]
             Address          hex4                    hex8      
  0x000074a37c5ea0a0:   0x41200000      0xf4f4f4f441200000      
  0x000074a37c5ea0a4:   0xf4f4f4f4                              
  0x000074a37c5ea0a8:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x000074a37c5ea0ac:   0xf4f4f4f4                              
  0x000074a37c5ea0b0:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x000074a37c5ea0b4:   0xf4f4f4f4                              
  0x000074a37c5ea0b8:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x000074a37c5ea0bc:   0xf4f4f4f4                              

--------------------------------------------------------------------------------

[Entry Point]
[Inline Entry Point]
[Verified Entry Point]
 ;; N214: #	out( B1 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x000074a37c5ea0c0:   call   0x000074a380f2c9a4           ;   {runtime_call os::breakpoint()}
  0x000074a37c5ea0c5:   nop
  0x000074a37c5ea0c6:   nop
  0x000074a37c5ea0c7:   nop
  0x000074a37c5ea0c8:   nop
  0x000074a37c5ea0c9:   nop
  0x000074a37c5ea0ca:   nop
  0x000074a37c5ea0cb:   nop
  0x000074a37c5ea0cc:   nop
  0x000074a37c5ea0cd:   nop
  0x000074a37c5ea0ce:   nop
  0x000074a37c5ea0cf:   nop
 ;; B1: #	out( B15 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x000074a37c5ea0d0:   mov    %eax,-0x18000(%rsp)
  0x000074a37c5ea0d7:   push   %rbp
  0x000074a37c5ea0d8:   sub    $0x20,%rsp
  0x000074a37c5ea0dc:   cmpl   $0x0,0x20(%r15)
  0x000074a37c5ea0e4:   jne    0x000074a37c5ea2a6
  0x000074a37c5ea0ea:   mov    0x18(%rsi),%r14
  0x000074a37c5ea0ee:   mov    0x10(%rsi),%ebx
  0x000074a37c5ea0f1:   mov    (%rsi),%r13d
  0x000074a37c5ea0f4:   vmovss 0x8(%rsi),%xmm1
  0x000074a37c5ea0f9:   vmovss %xmm1,(%rsp)
  0x000074a37c5ea0fe:   mov    %rsi,%rdi
  0x000074a37c5ea101:   movabs $0x74a381060140,%r10
  0x000074a37c5ea10b:   call   *%r10
  0x000074a37c5ea10e:   nopl   0x0(%rax,%rax,1)             ;   {post_call_nop}
  0x000074a37c5ea116:   test   %r14,%r14
  0x000074a37c5ea119:   je     0x000074a37c5ea1ea
 ;; B2: #	out( B17 B3 ) <- in( B1 )  Freq: 0.999
  0x000074a37c5ea11f:   mov    0x8(%r14),%r10d
  0x000074a37c5ea123:   cmp    $0x1041238,%r10d             ;   {metadata('MyValue')}
  0x000074a37c5ea12a:   jne    0x000074a37c5ea1f7           ;*iload_3 {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - test_buffering_in_loop::micro@4 (line 25)
 ;; B3: #	out( B4 ) <- in( B2 )  Freq: 0.998999
 ;; B4: #	out( B13 B5 ) <- in( B3 B15 )  Freq: 0.999999
  0x000074a37c5ea130:   cmp    %ebx,%r13d
  0x000074a37c5ea133:   jge    0x000074a37c5ea1c6           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - test_buffering_in_loop::micro@6 (line 25)
 ;; B5: #	out( B6 ) <- in( B4 )  Freq: 0.993466
  0x000074a37c5ea139:   lea    0x1(%r13),%r10d
  0x000074a37c5ea13d:   movslq %r10d,%r11
  0x000074a37c5ea140:   mov    $0xffffffff80000001,%r8
  0x000074a37c5ea147:   cmp    $0x80000001,%r10d
  0x000074a37c5ea14e:   cmovl  %r8,%r11
  0x000074a37c5ea152:   mov    %r11d,%r11d
  0x000074a37c5ea155:   cmp    %ebx,%r11d
  0x000074a37c5ea158:   cmovg  %ebx,%r11d
 ;; B6: #	out( B18 B7 ) <- in( B5 B7 ) Loop( B6-B7 inner pre of N323 multiversion_fast) Freq: 1.98693
  0x000074a37c5ea15c:   cmp    $0x1f4,%r13d
  0x000074a37c5ea163:   jg     0x000074a37c5ea22c           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - test_buffering_in_loop::micro@13 (line 26)
 ;; B7: #	out( B6 B8 ) <- in( B6 )  Freq: 1.98693
  0x000074a37c5ea169:   inc    %r13d                        ;*iinc {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - test_buffering_in_loop::micro@23 (line 25)
  0x000074a37c5ea16c:   cmp    %r11d,%r13d
  0x000074a37c5ea16f:   jl     0x000074a37c5ea15c           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - test_buffering_in_loop::micro@6 (line 25)
 ;; B8: #	out( B16 B9 ) <- in( B7 )  Freq: 0.993465
  0x000074a37c5ea171:   movslq %ebx,%r10
  0x000074a37c5ea174:   mov    $0x1f5,%r11d
  0x000074a37c5ea17a:   cmp    $0x1f5,%ebx
  0x000074a37c5ea180:   cmovg  %r11,%r10
  0x000074a37c5ea184:   dec    %r10
  0x000074a37c5ea187:   mov    $0xffffffff80000000,%r11
  0x000074a37c5ea18e:   cmp    $0xffffffff80000000,%r10
  0x000074a37c5ea195:   cmovl  %r11,%r10
  0x000074a37c5ea199:   mov    %r10d,%r8d
  0x000074a37c5ea19c:   cmp    %r8d,%r13d
  0x000074a37c5ea19f:   jge    0x000074a37c5ea1f2
 ;; B9: #	out( B10 ) <- in( B8 )  Freq: 0.993464
  0x000074a37c5ea1a1:   movslq %r13d,%r11
  0x000074a37c5ea1a4:   sub    %r11,%r10
  0x000074a37c5ea1a7:   inc    %r10
  0x000074a37c5ea1aa:   and    $0xfffffffffffffffe,%r10
  0x000074a37c5ea1ae:   mov    %r10d,%ebp
  0x000074a37c5ea1b1:   add    %r13d,%ebp                   ;*iinc {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - test_buffering_in_loop::micro@23 (line 25)
 ;; B10: #	out( B13 B11 ) <- in( B16 B9 )  Freq: 0.993465
  0x000074a37c5ea1b4:   cmp    %ebx,%ebp
  0x000074a37c5ea1b6:   jge    0x000074a37c5ea1c6
 ;; B11: #	out( B19 B12 ) <- in( B10 B12 ) Loop( B11-B12 inner post of N323 multiversion_fast) Freq: 0.993465
  0x000074a37c5ea1b8:   cmp    $0x1f4,%ebp
  0x000074a37c5ea1be:   jg     0x000074a37c5ea22f           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - test_buffering_in_loop::micro@13 (line 26)
 ;; B12: #	out( B11 B13 ) <- in( B11 )  Freq: 0.993464
  0x000074a37c5ea1c0:   inc    %ebp                         ;*iinc {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - test_buffering_in_loop::micro@23 (line 25)
  0x000074a37c5ea1c2:   cmp    %ebx,%ebp
  0x000074a37c5ea1c4:   jl     0x000074a37c5ea1b8           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - test_buffering_in_loop::micro@6 (line 25)
 ;; B13: #	out( B20 B14 ) <- in( B4 B12 B10 )  Freq: 0.999998
  0x000074a37c5ea1c6:   vmovss 0x14(%r14),%xmm0             ; implicit exception: dispatches to 0x000074a37c5ea260
 ;; B14: #	out( N214 ) <- in( B13 )  Freq: 0.999997
  0x000074a37c5ea1cc:   vaddss 0x10(%r14),%xmm0,%xmm1       ;*iload_3 {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - test_buffering_in_loop::micro@4 (line 25)
  0x000074a37c5ea1d2:   vaddss -0x13a(%rip),%xmm1,%xmm0        # 0x000074a37c5ea0a0
                                                            ;*fadd {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - test_buffering_in_loop::micro@35 (line 30)
                                                            ;   {section_word}
  0x000074a37c5ea1da:   add    $0x20,%rsp
  0x000074a37c5ea1de:   pop    %rbp
  0x000074a37c5ea1df:   cmp    0x28(%r15),%rsp              ;   {poll_return}
  0x000074a37c5ea1e3:   ja     0x000074a37c5ea290
  0x000074a37c5ea1e9:   ret    
 ;; B15: #	out( B4 ) <- in( B1 )  Freq: 0.000999987
  0x000074a37c5ea1ea:   xor    %r14d,%r14d
  0x000074a37c5ea1ed:   jmp    0x000074a37c5ea130
 ;; B16: #	out( B10 ) <- in( B8 )  Freq: 1.00666e-06
  0x000074a37c5ea1f2:   mov    %r13d,%ebp
  0x000074a37c5ea1f5:   jmp    0x000074a37c5ea1b4
 ;; B17: #	out( N214 ) <- in( B2 )  Freq: 9.99e-07
  0x000074a37c5ea1f7:   mov    $0xffffff85,%esi
  0x000074a37c5ea1fc:   mov    %r13d,%ebp
  0x000074a37c5ea1ff:   mov    %r14,0x8(%rsp)
  0x000074a37c5ea204:   mov    %ebx,0x4(%rsp)
  0x000074a37c5ea208:   nop
  0x000074a37c5ea209:   nop
  0x000074a37c5ea20a:   nop
  0x000074a37c5ea20b:   call   0x000074a37c4728e0           ; ImmutableOopMap {[8]=Oop }
                                                            ;*iload_3 {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - test_buffering_in_loop::micro@4 (line 25)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000074a37c5ea210:   nopl   0x288(%rax,%rax,1)           ;   {post_call_nop}
  0x000074a37c5ea218:   movabs $0x74a2f023e000,%rdi         ;   {external_word}
  0x000074a37c5ea222:   and    $0xfffffffffffffff0,%rsp
  0x000074a37c5ea226:   call   0x000074a380d89c48           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x000074a37c5ea22b:   hlt    
 ;; B18: #	out( B19 ) <- in( B6 )  Freq: 9.47443e-07
  0x000074a37c5ea22c:   mov    %r13d,%ebp                   ;*iload_3 {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - test_buffering_in_loop::micro@4 (line 25)
 ;; B19: #	out( N214 ) <- in( B11 B18 )  Freq: 1.42116e-06
  0x000074a37c5ea22f:   mov    $0xffffff45,%esi
  0x000074a37c5ea234:   mov    %r14,0x8(%rsp)
  0x000074a37c5ea239:   mov    %ebx,0x4(%rsp)
  0x000074a37c5ea23d:   nop
  0x000074a37c5ea23e:   nop
  0x000074a37c5ea23f:   call   0x000074a37c4728e0           ; ImmutableOopMap {[8]=Oop }
                                                            ;*if_icmple {reexecute=1 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - (reexecute) test_buffering_in_loop::micro@13 (line 26)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000074a37c5ea244:   nopl   0x10002bc(%rax,%rax,1)       ;   {post_call_nop}
  0x000074a37c5ea24c:   movabs $0x74a2f023e000,%rdi         ;   {external_word}
  0x000074a37c5ea256:   and    $0xfffffffffffffff0,%rsp
  0x000074a37c5ea25a:   call   0x000074a380d89c48           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x000074a37c5ea25f:   hlt    
 ;; B20: #	out( N214 ) <- in( B13 )  Freq: 1.01328e-06
  0x000074a37c5ea260:   xor    %ebp,%ebp
  0x000074a37c5ea262:   test   %r14,%r14
  0x000074a37c5ea265:   setne  %bpl
  0x000074a37c5ea269:   mov    $0xfffffff6,%esi
  0x000074a37c5ea26e:   nop
  0x000074a37c5ea26f:   call   0x000074a37c4728e0           ; ImmutableOopMap {}
                                                            ;*invokevirtual getAccum {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - test_buffering_in_loop::micro@30 (line 30)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000074a37c5ea274:   nopl   0x20002ec(%rax,%rax,1)       ;   {post_call_nop}
  0x000074a37c5ea27c:   movabs $0x74a2f023e000,%rdi         ;   {external_word}
  0x000074a37c5ea286:   and    $0xfffffffffffffff0,%rsp
  0x000074a37c5ea28a:   call   0x000074a380d89c48           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x000074a37c5ea28f:   hlt                                 ;*invokevirtual getAccum {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - test_buffering_in_loop::micro@30 (line 30)
  0x000074a37c5ea290:   movabs $0x74a37c5ea1df,%r10         ;   {internal_word}
  0x000074a37c5ea29a:   mov    %r10,0x4a8(%r15)
  0x000074a37c5ea2a1:   jmp    0x000074a37c575760           ;   {runtime_call SafepointBlob}
  0x000074a37c5ea2a6:   call   Stub::method_entry_barrier   ;   {runtime_call Stub::method_entry_barrier}
  0x000074a37c5ea2ab:   jmp    0x000074a37c5ea0ea
[Exception Handler]
  0x000074a37c5ea2b0:   jmp    0x000074a37c599060           ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x000074a37c5ea2b5:   call   0x000074a37c5ea2ba
  0x000074a37c5ea2ba:   subq   $0x5,(%rsp)
  0x000074a37c5ea2bf:   jmp    0x000074a37c575a80           ;   {runtime_call DeoptimizationBlob}
  0x000074a37c5ea2c4:   hlt    
  0x000074a37c5ea2c5:   hlt    
  0x000074a37c5ea2c6:   hlt    
  0x000074a37c5ea2c7:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Oops:
  0x000074a37c5ea2c8:   0x00000000c8d58808 a 'java/lang/Class'{0x00000000c8d58808} = 'MyValue'
  0x000074a37c5ea2d0:   0x00000000c8e67928 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x00000000c8e67928}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Metadata:
  0x000074a2f023d940:   0x000074a30f041238 'MyValue'
  0x000074a2f023d948:   0x000074a304402548 {method} {0x000074a304402548} 'micro' '(LMyValue;I)F' in 'test_buffering_in_loop'
  0x000074a2f023d950:   0x000074a3044029d0 {method} {0x000074a3044029d0} 'getAccum' '()F' in 'MyValue'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
pc-bytecode offsets:
PcDesc(pc=0x000074a37c5ea0bf offset=ffffffff bits=0):
PcDesc(pc=0x000074a37c5ea130 offset=70 bits=0):
   test_buffering_in_loop::micro@4 (line 25)
PcDesc(pc=0x000074a37c5ea139 offset=79 bits=0):
   test_buffering_in_loop::micro@6 (line 25)
PcDesc(pc=0x000074a37c5ea169 offset=a9 bits=0):
   test_buffering_in_loop::micro@13 (line 26)
PcDesc(pc=0x000074a37c5ea16c offset=ac bits=0):
   test_buffering_in_loop::micro@23 (line 25)
PcDesc(pc=0x000074a37c5ea171 offset=b1 bits=0):
   test_buffering_in_loop::micro@6 (line 25)
PcDesc(pc=0x000074a37c5ea1b4 offset=f4 bits=0):
   test_buffering_in_loop::micro@23 (line 25)
PcDesc(pc=0x000074a37c5ea1c0 offset=100 bits=0):
   test_buffering_in_loop::micro@13 (line 26)
PcDesc(pc=0x000074a37c5ea1c2 offset=102 bits=0):
   test_buffering_in_loop::micro@23 (line 25)
PcDesc(pc=0x000074a37c5ea1c6 offset=106 bits=0):
   test_buffering_in_loop::micro@6 (line 25)
PcDesc(pc=0x000074a37c5ea1d2 offset=112 bits=0):
   test_buffering_in_loop::micro@4 (line 25)
PcDesc(pc=0x000074a37c5ea1da offset=11a bits=0):
   test_buffering_in_loop::micro@35 (line 30)
PcDesc(pc=0x000074a37c5ea210 offset=150 bits=0):
   test_buffering_in_loop::micro@4 (line 25)
   Locals
    - l0: stack[8],oop
    - l1: stack[4]
    - l2: stack[0]
    - l3: reg rbp [10],int
PcDesc(pc=0x000074a37c5ea22f offset=16f bits=0):
   test_buffering_in_loop::micro@4 (line 25)
PcDesc(pc=0x000074a37c5ea244 offset=184 bits=1):
   test_buffering_in_loop::micro@13 (line 26)  reexecute=true
   Locals
    - l0: stack[8],oop
    - l1: stack[4]
    - l2: stack[0]
    - l3: reg rbp [10],int
   Expression stack
    - @0: reg rbp [10],int
    - @1: 500
PcDesc(pc=0x000074a37c5ea274 offset=1b4 bits=0):
   test_buffering_in_loop::micro@30 (line 30)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: obj[123]
   Objects
    - 0: R obj[123], MyValue
        Fields: 0, 0
PcDesc(pc=0x000074a37c5ea290 offset=1d0 bits=0):
   test_buffering_in_loop::micro@30 (line 30)
PcDesc(pc=0x000074a37c5ea2e9 offset=229 bits=0):
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
oop maps:ImmutableOopMapSet contains 3 OopMaps

ImmutableOopMap {[8]=Oop } pc offsets: 336 388 
ImmutableOopMap {} pc offsets: 436 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
scopes:
ScopeDesc(pc=0x000074a37c5ea130 offset=70):
   test_buffering_in_loop::micro@4 (line 25)
ScopeDesc(pc=0x000074a37c5ea139 offset=79):
   test_buffering_in_loop::micro@6 (line 25)
ScopeDesc(pc=0x000074a37c5ea169 offset=a9):
   test_buffering_in_loop::micro@13 (line 26)
ScopeDesc(pc=0x000074a37c5ea16c offset=ac):
   test_buffering_in_loop::micro@23 (line 25)
ScopeDesc(pc=0x000074a37c5ea171 offset=b1):
   test_buffering_in_loop::micro@6 (line 25)
ScopeDesc(pc=0x000074a37c5ea1b4 offset=f4):
   test_buffering_in_loop::micro@23 (line 25)
ScopeDesc(pc=0x000074a37c5ea1c0 offset=100):
   test_buffering_in_loop::micro@13 (line 26)
ScopeDesc(pc=0x000074a37c5ea1c2 offset=102):
   test_buffering_in_loop::micro@23 (line 25)
ScopeDesc(pc=0x000074a37c5ea1c6 offset=106):
   test_buffering_in_loop::micro@6 (line 25)
ScopeDesc(pc=0x000074a37c5ea1d2 offset=112):
   test_buffering_in_loop::micro@4 (line 25)
ScopeDesc(pc=0x000074a37c5ea1da offset=11a):
   test_buffering_in_loop::micro@35 (line 30)
ScopeDesc(pc=0x000074a37c5ea210 offset=150):
   test_buffering_in_loop::micro@4 (line 25)
   Locals
    - l0: stack[8],oop
    - l1: stack[4]
    - l2: stack[0]
    - l3: reg rbp [10],int
ScopeDesc(pc=0x000074a37c5ea22f offset=16f):
   test_buffering_in_loop::micro@4 (line 25)
ScopeDesc(pc=0x000074a37c5ea244 offset=184):
   test_buffering_in_loop::micro@13 (line 26)  reexecute=true
   Locals
    - l0: stack[8],oop
    - l1: stack[4]
    - l2: stack[0]
    - l3: reg rbp [10],int
   Expression stack
    - @0: reg rbp [10],int
    - @1: 500
ScopeDesc(pc=0x000074a37c5ea274 offset=1b4):
   test_buffering_in_loop::micro@30 (line 30)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: obj[123]
   Objects
    - 0: R obj[123], MyValue
        Fields: 0, 0
ScopeDesc(pc=0x000074a37c5ea290 offset=1d0):
   test_buffering_in_loop::micro@30 (line 30)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
relocations:
         @0x000074a2f023d900: 0020
relocInfo@0x000074a2f023d900 [type=0(none) addr=0x000074a37c5ea0c0 offset=32]
         @0x000074a2f023d902: 3100
relocInfo@0x000074a2f023d902 [type=6(runtime_call) addr=0x000074a37c5ea0c0 offset=0 format=1] | [destination=0x000074a380f2c9a4] os::breakpoint()
         @0x000074a2f023d904: 804e
relocInfo@0x000074a2f023d904 [type=16(post_call_nop) addr=0x000074a37c5ea10e offset=78]
         @0x000074a2f023d906: 78016315
relocInfo@0x000074a2f023d908 [type=12(metadata) addr=0x000074a37c5ea123 offset=21 format=3 data=1] | [metadata_addr=0x000074a2f023d940 *=0x000074a30f041238]metadata_value=0x000074a30f041238: 'MyValue'
         @0x000074a2f023d90a: 49af
relocInfo@0x000074a2f023d90a [type=9(section_word) addr=0x000074a37c5ea1d2 offset=175 format=1] | [target=0x000074a37c5ea0a0]
         @0x000074a2f023d90c: 580d
relocInfo@0x000074a2f023d90c [type=11(poll_return) addr=0x000074a37c5ea1df offset=13]
         @0x000074a2f023d90e: 312c
relocInfo@0x000074a2f023d90e [type=6(runtime_call) addr=0x000074a37c5ea20b offset=44 format=1] | [destination=0x000074a37c4728e0] UncommonTrapBlob
         @0x000074a2f023d910: 8005
relocInfo@0x000074a2f023d910 [type=16(post_call_nop) addr=0x000074a37c5ea210 offset=5]
         @0x000074a2f023d912: 783a3808
relocInfo@0x000074a2f023d914 [type=7(external_word) addr=0x000074a37c5ea218 offset=8 data=58] | [target=0x000074a2f023e000]
         @0x000074a2f023d916: 310e
relocInfo@0x000074a2f023d916 [type=6(runtime_call) addr=0x000074a37c5ea226 offset=14 format=1] | [destination=0x000074a380d89c48] MacroAssembler::debug64(char*, long, long*)
         @0x000074a2f023d918: 3119
relocInfo@0x000074a2f023d918 [type=6(runtime_call) addr=0x000074a37c5ea23f offset=25 format=1] | [destination=0x000074a37c4728e0] UncommonTrapBlob
         @0x000074a2f023d91a: 8005
relocInfo@0x000074a2f023d91a [type=16(post_call_nop) addr=0x000074a37c5ea244 offset=5]
         @0x000074a2f023d91c: 783a3808
relocInfo@0x000074a2f023d91e [type=7(external_word) addr=0x000074a37c5ea24c offset=8 data=58] | [target=0x000074a2f023e000]
         @0x000074a2f023d920: 310e
relocInfo@0x000074a2f023d920 [type=6(runtime_call) addr=0x000074a37c5ea25a offset=14 format=1] | [destination=0x000074a380d89c48] MacroAssembler::debug64(char*, long, long*)
         @0x000074a2f023d922: 3115
relocInfo@0x000074a2f023d922 [type=6(runtime_call) addr=0x000074a37c5ea26f offset=21 format=1] | [destination=0x000074a37c4728e0] UncommonTrapBlob
         @0x000074a2f023d924: 8005
relocInfo@0x000074a2f023d924 [type=16(post_call_nop) addr=0x000074a37c5ea274 offset=5]
         @0x000074a2f023d926: 783a3808
relocInfo@0x000074a2f023d928 [type=7(external_word) addr=0x000074a37c5ea27c offset=8 data=58] | [target=0x000074a2f023e000]
         @0x000074a2f023d92a: 310e
relocInfo@0x000074a2f023d92a [type=6(runtime_call) addr=0x000074a37c5ea28a offset=14 format=1] | [destination=0x000074a380d89c48] MacroAssembler::debug64(char*, long, long*)
         @0x000074a2f023d92c: 78b14006
relocInfo@0x000074a2f023d92e [type=8(internal_word) addr=0x000074a37c5ea290 offset=6 data=177] | [target=0x000074a37c5ea1df]
         @0x000074a2f023d930: 3111
relocInfo@0x000074a2f023d930 [type=6(runtime_call) addr=0x000074a37c5ea2a1 offset=17 format=1] | [destination=0x000074a37c575760] SafepointBlob
         @0x000074a2f023d932: 3105
relocInfo@0x000074a2f023d932 [type=6(runtime_call) addr=0x000074a37c5ea2a6 offset=5 format=1] | [destination=0x000074a37c4e00e0] Stub::method_entry_barrier
         @0x000074a2f023d934: 000a
relocInfo@0x000074a2f023d934 [type=0(none) addr=0x000074a37c5ea2b0 offset=10]
         @0x000074a2f023d936: 3100
relocInfo@0x000074a2f023d936 [type=6(runtime_call) addr=0x000074a37c5ea2b0 offset=0 format=1] | [destination=0x000074a37c599060] ExceptionBlob
         @0x000074a2f023d938: 310f
relocInfo@0x000074a2f023d938 [type=6(runtime_call) addr=0x000074a37c5ea2bf offset=15 format=1] | [destination=0x000074a37c575a80] DeoptimizationBlob
         @0x000074a2f023d93a: 0000
relocInfo@0x000074a2f023d93a [type=0(none) addr=0x000074a37c5ea2bf offset=0]
         @0x000074a2f023d93c: 0000
relocInfo@0x000074a2f023d93c [type=0(none) addr=0x000074a37c5ea2bf offset=0]
         @0x000074a2f023d93e: 0000
relocInfo@0x000074a2f023d93e [type=0(none) addr=0x000074a37c5ea2bf offset=0]
         @0x000074a2f023d940: 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Dependencies:
Dependency of type evol_method
  method  = *{method} {0x000074a304402548} 'micro' '(LMyValue;I)F' in 'test_buffering_in_loop'
Dependency of type evol_method
  method  = {method} {0x000074a3044029d0} 'getAccum' '()F' in 'MyValue'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ExceptionHandlerTable (size = 0 bytes)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ImplicitExceptionTable (size = 1 entries, 12 bytes):
{
   < 0x000074a37c5ea1c6, 0x000074a37c5ea260 > 
}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded oops:
#0: 0x0000000000000000 nullptr-oop
#1: 0x00000000c8d58808 a 'java/lang/Class'{0x00000000c8d58808} = 'MyValue'
#2: 0x00000000c8e67928 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x00000000c8e67928}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded metadata:
#0: 0x0000000000000000 nullptr-oop
#1: 0x000074a30f041238 'MyValue'
#2: 0x000074a304402548 {method} {0x000074a304402548} 'micro' '(LMyValue;I)F' in 'test_buffering_in_loop'
#3: 0x000074a3044029d0 {method} {0x000074a3044029d0} 'getAccum' '()F' in 'MyValue'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
AFTER: AFTER_PARSING
   0  Root  === 0 59 70 81 92 120 149 197  |122  [[ 0 1 3 11 13 14 37 54 65 76 87 106 115 124 125 144 195 ]] 
   1  Con  === 0  [[ ]]  #top
   3  Start  === 3 0  [[ 3 5 6 7 8 9 15 22 23 24 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:bool, 6:float, 7:float, 8:int}
   5  Parm  === 3  [[ 18 ]] Control !jvms: test_buffering_in_loop::micro @ bci:-1 (line 24)
   6  Parm  === 3  [[ 88 77 95 135 55 66 ]] I_O !jvms: test_buffering_in_loop::micro @ bci:-1 (line 24)
   7  Parm  === 3  [[ 88 77 66 55 96 136 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !jvms: test_buffering_in_loop::micro @ bci:-1 (line 24)
   8  Parm  === 3  [[ 197 145 149 116 120 59 55 70 66 81 77 92 88 ]] FramePtr !jvms: test_buffering_in_loop::micro @ bci:-1 (line 24)
   9  Parm  === 3  [[ 197 145 116 88 77 55 66 ]] ReturnAdr !jvms: test_buffering_in_loop::micro @ bci:-1 (line 24)
  11  ConP  === 0  [[ 12 ]]  #null
  12  InlineType  === _ 11 13 15 22 23  [[ 122 116 88 145 55 66 77 ]]  #MyValue:exact *  Oop:MyValue:exact * !jvms: test_buffering_in_loop::micro @ bci:-1 (line 24)
  13  ConI  === 0  [[ 12 16 98 88 77 41 88 55 55 66 66 77 ]]  #int:0
  14  ConI  === 0  [[ 50 61 72 83 121 ]]  #int:1
  15  Parm  === 3  [[ 12 16 ]] Parm0: bool !jvms: test_buffering_in_loop::micro @ bci:-1 (line 24)
  16  CmpI  === _ 15 13  [[ 17 ]]  !jvms: test_buffering_in_loop::micro @ bci:-1 (line 24)
  17  Bool  === _ 16  [[ 18 141 ]] [ne] !jvms: test_buffering_in_loop::micro @ bci:-1 (line 24)
  18  If  === 5 17  [[ 19 20 ]] P=0.999000, C=-1.000000 !jvms: test_buffering_in_loop::micro @ bci:-1 (line 24)
  19  IfFalse  === 18  [[ 21 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:-1 (line 24)
  20  IfTrue  === 18  [[ 21 ]] #1 !jvms: test_buffering_in_loop::micro @ bci:-1 (line 24)
  21  Region  === 21 20 19  [[ 21 38 ]]  !jvms: test_buffering_in_loop::micro @ bci:-1 (line 24)
  22  Parm  === 3  [[ 12 193 ]] Parm1: float !jvms: test_buffering_in_loop::micro @ bci:-1 (line 24)
  23  Parm  === 3  [[ 12 193 ]] Parm2: float !jvms: test_buffering_in_loop::micro @ bci:-1 (line 24)
  24  Parm  === 3  [[ 122 116 88 88 77 41 128 55 55 66 66 77 ]] Parm3: int !jvms: test_buffering_in_loop::micro @ bci:-1 (line 24)
  37  ConF  === 0  [[ 97 88 55 66 77 ]]  #ftcon:0.000000
  38  Region  === _ 21  [[ 44 ]] #reducible  !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  41  CmpI  === _ 24 13  [[ 43 ]]  !orig=39 !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
  43  Bool  === _ 41  [[ 44 ]] [le] !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
  44  If  === 38 43  [[ 45 46 ]] P=0.006533, C=31075.000000 !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
  45  IfTrue  === 44  [[ 49 ]] #1 !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
  46  IfFalse  === 44  [[ 50 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
  49  Region  === 49 132 45  [[ 49 141 135 136 ]] #reducible  !jvms: test_buffering_in_loop::micro @ bci:29 (line 30)
  50  ParsePredicate  === 46 14  [[ 51 60 ]]  #Loop  !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
  51  IfFalse  === 50  [[ 55 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
  54  ConI  === 0  [[ 55 ]]  #int:-146
  55  CallStaticJava  === 51 6 7 8 9 (54 12 24 37 13 13 24 ) [[ 56 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 test_buffering_in_loop::micro @ bci:6 (line 25) reexecute !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
  56  Proj  === 55  [[ 59 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
  59  Halt  === 56 1 1 8 1  [[ 0 ]]  !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
  60  IfTrue  === 50  [[ 61 ]] #1 !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
  61  ParsePredicate  === 60 14  [[ 62 71 ]]  #Profiled Loop  !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
  62  IfFalse  === 61  [[ 66 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
  65  ConI  === 0  [[ 66 ]]  #int:-66
  66  CallStaticJava  === 62 6 7 8 9 (65 12 24 37 13 13 24 ) [[ 67 ]] # Static uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 test_buffering_in_loop::micro @ bci:6 (line 25) reexecute !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
  71  IfTrue  === 61  [[ 72 ]] #1 !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
  72  ParsePredicate  === 71 14  [[ 73 82 ]]  #Auto_Vectorization_Check  !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
  73  IfFalse  === 72  [[ 77 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
  76  ConI  === 0  [[ 77 ]]  #int:-74
  77  CallStaticJava  === 73 6 7 8 9 (76 12 24 37 13 13 24 ) [[ 78 ]] # Static uncommon_trap(reason='auto_vectorization_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 test_buffering_in_loop::micro @ bci:6 (line 25) reexecute !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
  78  Proj  === 77  [[ 81 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
  81  Halt  === 78 1 1 8 1  [[ 0 ]]  !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
  82  IfTrue  === 72  [[ 83 ]] #1 !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
  83  ParsePredicate  === 82 14  [[ 84 93 ]]  #Loop Limit Check  !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
  84  IfFalse  === 83  [[ 88 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
  87  ConI  === 0  [[ 88 ]]  #int:-154
  88  CallStaticJava  === 84 6 7 8 9 (87 12 24 37 13 13 24 ) [[ 89 ]] # Static uncommon_trap(reason='loop_limit_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 test_buffering_in_loop::micro @ bci:6 (line 25) reexecute !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
  89  Proj  === 88  [[ 92 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
  92  Halt  === 89 1 1 8 1  [[ 0 ]]  !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
  93  IfTrue  === 83  [[ 94 ]] #1 !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
  94  Region  === 94 _ 93  [[ 94 99 95 96 97 98 ]] #reducible  !jvms: test_buffering_in_loop::micro @ bci:9 (line 26)
  95  Phi  === 94 _ 6  [[ 100 ]]  #abIO !jvms: test_buffering_in_loop::micro @ bci:9 (line 26)
  96  Phi  === 94 _ 7  [[ 101 ]]  #memory  Memory: @BotPTR *+bot, idx=Bot; !jvms: test_buffering_in_loop::micro @ bci:9 (line 26)
  97  Phi  === 94 _ 37  [[ 102 ]]  #float !jvms: test_buffering_in_loop::micro @ bci:9 (line 26)
  98  Phi  === 94 _ 13  [[ 103 ]]  #int !jvms: test_buffering_in_loop::micro @ bci:9 (line 26)
  99  Region  === 99 131 94  [[ 99 109 100 101 102 103 ]] #reducible  !jvms: test_buffering_in_loop::micro @ bci:9 (line 26)
 100  Phi  === 99 100 95  [[ 100 116 135 ]]  #abIO !jvms: test_buffering_in_loop::micro @ bci:9 (line 26)
 101  Phi  === 99 101 96  [[ 101 136 127 116 122 ]]  #memory  Memory: @BotPTR *+bot, idx=Bot; !jvms: test_buffering_in_loop::micro @ bci:9 (line 26)
 102  Phi  === 99 102 97  [[ 102 116 122 ]]  #float !jvms: test_buffering_in_loop::micro @ bci:9 (line 26)
 103  Phi  === 99 121 98  [[ 121 116 116 107 ]]  #int !jvms: test_buffering_in_loop::micro @ bci:9 (line 26)
 106  ConI  === 0  [[ 116 107 ]]  #int:500
 107  CmpI  === _ 103 106  [[ 108 ]]  !jvms: test_buffering_in_loop::micro @ bci:13 (line 26)
 108  Bool  === _ 107  [[ 109 ]] [le] !jvms: test_buffering_in_loop::micro @ bci:13 (line 26)
 109  If  === 99 108  [[ 110 111 ]] P=1.000000, C=30872.000000 !jvms: test_buffering_in_loop::micro @ bci:13 (line 26)
 110  IfTrue  === 109  [[ 122 127 ]] #1 !jvms: test_buffering_in_loop::micro @ bci:13 (line 26)
 111  IfFalse  === 109  [[ 116 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:13 (line 26)
 115  ConI  === 0  [[ 116 ]]  #int:-187
 116  CallStaticJava  === 111 100 101 8 9 (115 12 24 102 103 103 106 ) [[ 117 ]] # Static uncommon_trap(reason='unstable_if' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 test_buffering_in_loop::micro @ bci:13 (line 26) reexecute !jvms: test_buffering_in_loop::micro @ bci:13 (line 26)
 117  Proj  === 116  [[ 120 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:13 (line 26)
 120  Halt  === 117 1 1 8 1  [[ 0 ]]  !jvms: test_buffering_in_loop::micro @ bci:13 (line 26)
 121  AddI  === _ 103 14  [[ 103 122 128 ]]  !jvms: test_buffering_in_loop::micro @ bci:23 (line 25)
 122  SafePoint  === 110 1 101 1 1 127 12 24 102 121  [[ 130 0 ]]  SafePoint  !jvms: test_buffering_in_loop::micro @ bci:26 (line 25)
 124  ThreadLocal  === 0  [[ 126 ]]  !jvms: test_buffering_in_loop::micro @ bci:26 (line 25)
 125  ConL  === 0  [[ 126 ]]  #long:48
 126  AddP  === _ 1 124 125  [[ 127 ]]  !jvms: test_buffering_in_loop::micro @ bci:26 (line 25)
 127  LoadP  === 110 101 126  [[ 122 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !jvms: test_buffering_in_loop::micro @ bci:26 (line 25)
 128  CmpI  === _ 121 24  [[ 129 ]]  !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
 129  Bool  === _ 128  [[ 130 ]] [lt] !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
 130  If  === 122 129  [[ 131 132 ]] P=0.993467, C=30872.000000 !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
 131  IfTrue  === 130  [[ 99 ]] #1 !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
 132  IfFalse  === 130  [[ 49 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
 135  Phi  === 49 100 6  [[ 197 145 ]]  #abIO !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
 136  Phi  === 49 101 7  [[ 197 145 ]]  #memory  Memory: @BotPTR *+bot, idx=Bot; !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
 141  If  === 49 17  [[ 142 143 ]] P=0.999999, C=-1.000000 !jvms: test_buffering_in_loop::micro @ bci:30 (line 30)
 142  IfTrue  === 141  [[ 197 ]] #1 !jvms: test_buffering_in_loop::micro @ bci:30 (line 30)
 143  IfFalse  === 141  [[ 145 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:30 (line 30)
 144  ConI  === 0  [[ 145 ]]  #int:-10
 145  CallStaticJava  === 143 135 136 8 9 (144 1 1 1 1 12 ) [[ 146 ]] # Static uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 test_buffering_in_loop::micro @ bci:30 (line 30) !jvms: test_buffering_in_loop::micro @ bci:30 (line 30)
 146  Proj  === 145  [[ 149 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:30 (line 30)
 149  Halt  === 146 1 1 8 1  [[ 0 ]]  !jvms: test_buffering_in_loop::micro @ bci:30 (line 30)
 193  AddF  === _ 22 23  [[ 196 ]]  !jvms: MyValue::getAccum @ bci:8 (line 14) test_buffering_in_loop::micro @ bci:30 (line 30)
 195  ConF  === 0  [[ 196 ]]  #ftcon:10.000000
 196  AddF  === _ 193 195  [[ 197 ]]  !jvms: test_buffering_in_loop::micro @ bci:35 (line 30)
 197  Return  === 142 135 136 8 9 returns 196  [[ 0 ]] 

============================= C2-compiled nmethod ==============================
#r018 rsi   : parm 0: bool
#r064 xmm0   : parm 1: float
#r080 xmm1   : parm 2: float
#r016 rdx   : parm 3: int
# -- Old rsp -- Framesize: 64 --
#r623 rsp+60: in_preserve
#r622 rsp+56: return address
#r621 rsp+52: in_preserve
#r620 rsp+48: saved fp register
#r619 rsp+44: Fixed slot 3
#r618 rsp+40: Fixed slot 2
#r617 rsp+36: Fixed slot 1
#r616 rsp+32: Fixed slot 0
#r631 rsp+28: spill
#r630 rsp+24: spill
#r629 rsp+20: spill
#r628 rsp+16: spill
#r627 rsp+12: spill
#r626 rsp+ 8: spill
#r625 rsp+ 4: spill
#r624 rsp+ 0: spill
#
----------------------- MetaData before Compile_id = 100 ------------------------
{method}
 - this oop:          0x000074a304402548
 - method holder:     'test_buffering_in_loop'
 - constants:         0x000074a304402050 constant pool [71]/operands[5] {0x000074a304402050} for 'test_buffering_in_loop' cache=0x000074a3044031a0
 - access:            0x9  public static value 
 - flags:             0x16080  queued_for_compilation has_loops_flag has_loops_flag_init has_scalarized_args 
 - name:              'micro'
 - signature:         '(LMyValue;I)F'
 - max stack:         3
 - max locals:        4
 - size of params:    2
 - method size:       16
 - vtable index:      -2
 - i2i entry:         0x000074a37c44ff20
 - adapters:          AHE@0x000074a3782657f0: 0x244319ea i2c: 0x000074a37c5e6960 c2i: 0x000074a37c5e6ec7 c2iVE: 0x000074a37c5e73ab c2iVROE: 0x000074a37c5e6a3f c2iUE: 0x000074a37c5e6a1e c2iUVE: 0x000074a37c5e738a c2iNCI: 0x000074a37c5e73e6
 - compiled entry           0x000074a37c5e6ec7
 - compiled inline entry    0x000074a37c5e73ab
 - compiled inline ro entry 0x000074a37c5e6a3f
 - code size:         37
 - code start:        0x000074a304402518
 - code end (excl):   0x000074a30440253d
 - method data:       0x000074a3044033c0
 - checked ex length: 0
 - linenumber start:  0x000074a30440253d
 - localvar length:   0

------------------------ OptoAssembly for Compile_id = 100 -----------------------
#
#  float ( MyValue:exact *, int )
#
000     N121: #	out( B1 ) <- BLOCK HEAD IS JUNK  Freq: 1
000     MachVEPNode

        nop 	# 4 bytes pad for loops and calls

060     B1: #	out( B7 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
060     # stack bang (144 bytes)
	pushq   rbp	# Save rbp
	subq    rsp, #48	# Create frame

07a     movl    R9, RSI	# spill
07d     testl   RDX, RDX
07f     jle,s   B7  P=0.006533 C=31075.000000

081     B2: #	out( B10 B3 ) <- in( B1 )  Freq: 0.993467
081     movslq  R10, RDX	# i2l
084     movl    R11, #501	# long (unsigned 32-bit)
08a     cmpl    RDX, #501
090     cmovqg R10, R11	# signed, long
094     decq    R10	# long
097     movq    R11, #-2147483648	# long (32-bit)
09e     cmpq    R10, #-2147483648
0a5     cmovql R10, R11	# signed, long
0a9     movl    R10, R10	# l2i
0ac     cmpl    R10, #1
0b0     jle     B10  P=0.000001 C=-1.000000

0b6     B3: #	out( B4 ) <- in( B2 )  Freq: 0.993466
0b6     movl    R11, R10	# spill
0b9     shrl    R11, #31
0bd     addl    R11, R10	# int
0c0     andl    R11, #-2	# int
0c4     # castII of R11
0c4     incl    R11	# int

0c7     B4: #	out( B7 B5 ) <- in( B10 B3 )  Freq: 0.993467
0c7     cmpl    R11, RDX
0ca     jge,s   B7  P=0.500000 C=-1.000000

0cc     B5: #	out( B11 B6 ) <- in( B4 B6 ) Loop( B5-B6 inner post of N215) Freq: 0.993467
0cc     cmpl    R11, #500
0d3     jg,s   B11  P=0.000000 C=30872.000000

0d5     B6: #	out( B5 B7 ) <- in( B5 )  Freq: 0.993466
0d5     incl    R11	# int
0d8     cmpl    R11, RDX
0db     jl,s   B5	# loop end  P=0.500000 C=30872.000000

0dd     B7: #	out( B9 B8 ) <- in( B4 B1 B6 )  Freq: 0.999999
0dd     testl   R9, R9
0e0     je,s   B9  P=0.000001 C=-1.000000

0e2     B8: #	out( N121 ) <- in( B7 )  Freq: 0.999998
0e2     vaddss  XMM0, XMM0, XMM1
0e6     # MachConstantBaseNode (empty encoding)
0e6     vaddss  XMM0, XMM0, [constant table base + #0]	# load from constant table: float=#10.000000
0ee     addq    rsp, 48	# Destroy frame
	popq    rbp
	cmpq    rsp, poll_offset[r15_thread] 
	ja      #safepoint_stub	# Safepoint: poll for GC

0fd     ret

0fe     B9: #	out( N121 ) <- in( B7 )  Freq: 1.01328e-06
0fe     movl    RSI, #-10	# int
103     movl    RBP, R9	# spill
106     movss   [rsp + #0], XMM0	# spill
10b     movss   [rsp + #4], XMM1	# spill
        nop 	# 2 bytes pad for loops and calls
113     call,static  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # test_buffering_in_loop::micro @ bci:30 (line 30) L[0]=_ L[1]=_ L[2]=_ L[3]=_ STK[0]=#ScObj0
        # ScObj0 MyValue={ [is_init :-1]=RBP [f1 :0]=rsp + #0, [f2 :1]=rsp + #4 }
        # OopMap {off=280/0x118}
120     stop	# ShouldNotReachHere

134     B10: #	out( B4 ) <- in( B2 )  Freq: 1.00666e-06
134     movl    R11, #1	# int
13a     jmp,s   B4

13c     B11: #	out( N121 ) <- in( B5 )  Freq: 4.73722e-07
13c     movl    RSI, #-187	# int
141     movl    RBP, RDX	# spill
143     movl    [rsp + #4], R11	# spill
148     movl    [rsp + #8], R9	# spill
14d     movss   [rsp + #12], XMM0	# spill
153     movss   [rsp + #16], XMM1	# spill
        nop 	# 2 bytes pad for loops and calls
15b     call,static  wrapper for: uncommon_trap(reason='unstable_if' action='reinterpret' debug_id='0')
        # test_buffering_in_loop::micro @ bci:13 (line 26) L[0]=#ScObj0 L[1]=RBP L[2]=#0.000000F L[3]=rsp + #4 STK[0]=rsp + #4 STK[1]=#500
        # ScObj0 MyValue={ [is_init :-1]=rsp + #8 [f1 :0]=rsp + #12, [f2 :1]=rsp + #16 }
        # OopMap {off=352/0x160}
168     stop	# ShouldNotReachHere

--------------------------------------------------------------------------------
----------------------------------- Assembly -----------------------------------

Compiled method (c2) 1070  100             test_buffering_in_loop::micro (37 bytes)
 total in heap  [0x000074a37c5ea308,0x000074a37c5ea610] = 776
 constants      [0x000074a37c5ea420,0x000074a37c5ea440] = 32
 main code      [0x000074a37c5ea440,0x000074a37c5ea5e8] = 424
 stub code      [0x000074a37c5ea5e8,0x000074a37c5ea600] = 24
 oops           [0x000074a37c5ea600,0x000074a37c5ea610] = 16
 mutable data [0x000074a2f02f2b60,0x000074a2f02f2ba0] = 64
 relocation     [0x000074a2f02f2b60,0x000074a2f02f2b90] = 48
 metadata       [0x000074a2f02f2b90,0x000074a2f02f2ba0] = 16
 immutable data [0x000074a378225bd0,0x000074a378225d40] = 368
 dependencies   [0x000074a378225bd0,0x000074a378225bd8] = 8
 scopes pcs     [0x000074a378225bd8,0x000074a378225cc8] = 240
 scopes data    [0x000074a378225cc8,0x000074a378225d40] = 120

[Disassembly]
--------------------------------------------------------------------------------

[Constant Pool]
             Address          hex4                    hex8      
  0x000074a37c5ea420:   0x41200000      0xf4f4f4f441200000      
  0x000074a37c5ea424:   0xf4f4f4f4                              
  0x000074a37c5ea428:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x000074a37c5ea42c:   0xf4f4f4f4                              
  0x000074a37c5ea430:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x000074a37c5ea434:   0xf4f4f4f4                              
  0x000074a37c5ea438:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x000074a37c5ea43c:   0xf4f4f4f4                              

--------------------------------------------------------------------------------

[Inline Entry Point]
[Verified Inline Entry Point]
  # {method} {0x000074a304402548} 'micro' '(LMyValue;I)F' in 'test_buffering_in_loop'
  # parm0:    rsi:rsi   = 'MyValue'
  # parm1:    rdx       = int
  #           [sp+0x40]  (sp of caller)
 ;; N121: #	out( B1 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x000074a37c5ea440:   mov    %eax,-0x18000(%rsp)          ;   {other}
  0x000074a37c5ea447:   push   %rbp
  0x000074a37c5ea448:   sub    $0x30,%rsp
  0x000074a37c5ea44c:   cmpl   $0x0,0x20(%r15)
  0x000074a37c5ea454:   jne    0x000074a37c5ea5dc
  0x000074a37c5ea45a:   add    $0x30,%rsp
  0x000074a37c5ea45e:   pop    %rbp
  0x000074a37c5ea45f:   test   %rsi,%rsi
  0x000074a37c5ea462:   je     0x000074a37c5ea472
  0x000074a37c5ea468:   vmovss 0x14(%rsi),%xmm1
  0x000074a37c5ea46d:   vmovss 0x10(%rsi),%xmm0
  0x000074a37c5ea472:   test   %rsi,%rsi
  0x000074a37c5ea475:   je     0x000074a37c5ea487
  0x000074a37c5ea47b:   mov    $0x1,%rsi
  0x000074a37c5ea482:   jmp    0x000074a37c5ea48a
  0x000074a37c5ea487:   xor    %rsi,%rsi
  0x000074a37c5ea48a:   mov    %eax,-0x18000(%rsp)
  0x000074a37c5ea491:   push   %rbp
  0x000074a37c5ea492:   sub    $0x30,%rsp
  0x000074a37c5ea496:   jmp    0x000074a37c5ea4ba
  0x000074a37c5ea49b:   nop
  0x000074a37c5ea49c:   nop
  0x000074a37c5ea49d:   nop
  0x000074a37c5ea49e:   nop
  0x000074a37c5ea49f:   nop
[Entry Point]
[Verified Entry Point]
[Verified Inline Entry Point (RO)]
  # parm0:    rsi       = boolean (null marker)
  # parm1:    xmm0      = float
  # parm2:    xmm1      = float
  # parm3:    rdx       = int
  #           [sp+0x40]  (sp of caller)
 ;; B1: #	out( B7 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x000074a37c5ea4a0:   mov    %eax,-0x18000(%rsp)
  0x000074a37c5ea4a7:   push   %rbp
  0x000074a37c5ea4a8:   sub    $0x30,%rsp
  0x000074a37c5ea4ac:   cmpl   $0x0,0x20(%r15)
  0x000074a37c5ea4b4:   jne    0x000074a37c5ea5d2           ;*synchronization entry
                                                            ; - test_buffering_in_loop::micro@-1 (line 24)
  0x000074a37c5ea4ba:   mov    %esi,%r9d
  0x000074a37c5ea4bd:   test   %edx,%edx
  0x000074a37c5ea4bf:   jle    0x000074a37c5ea51d           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - test_buffering_in_loop::micro@6 (line 25)
 ;; B2: #	out( B10 B3 ) <- in( B1 )  Freq: 0.993467
  0x000074a37c5ea4c1:   movslq %edx,%r10
  0x000074a37c5ea4c4:   mov    $0x1f5,%r11d
  0x000074a37c5ea4ca:   cmp    $0x1f5,%edx
  0x000074a37c5ea4d0:   cmovg  %r11,%r10
  0x000074a37c5ea4d4:   dec    %r10
  0x000074a37c5ea4d7:   mov    $0xffffffff80000000,%r11
  0x000074a37c5ea4de:   cmp    $0xffffffff80000000,%r10
  0x000074a37c5ea4e5:   cmovl  %r11,%r10
  0x000074a37c5ea4e9:   mov    %r10d,%r10d
  0x000074a37c5ea4ec:   cmp    $0x1,%r10d
  0x000074a37c5ea4f0:   jle    0x000074a37c5ea574
 ;; B3: #	out( B4 ) <- in( B2 )  Freq: 0.993466
  0x000074a37c5ea4f6:   mov    %r10d,%r11d
  0x000074a37c5ea4f9:   shr    $0x1f,%r11d
  0x000074a37c5ea4fd:   add    %r10d,%r11d
  0x000074a37c5ea500:   and    $0xfffffffe,%r11d
  0x000074a37c5ea504:   inc    %r11d                        ;*iinc {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - test_buffering_in_loop::micro@23 (line 25)
 ;; B4: #	out( B7 B5 ) <- in( B10 B3 )  Freq: 0.993467
  0x000074a37c5ea507:   cmp    %edx,%r11d
  0x000074a37c5ea50a:   jge    0x000074a37c5ea51d           ;*iload_3 {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - test_buffering_in_loop::micro@9 (line 26)
 ;; B5: #	out( B11 B6 ) <- in( B4 B6 ) Loop( B5-B6 inner post of N215) Freq: 0.993467
  0x000074a37c5ea50c:   cmp    $0x1f4,%r11d
  0x000074a37c5ea513:   jg     0x000074a37c5ea57c           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - test_buffering_in_loop::micro@13 (line 26)
 ;; B6: #	out( B5 B7 ) <- in( B5 )  Freq: 0.993466
  0x000074a37c5ea515:   inc    %r11d                        ;*iinc {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - test_buffering_in_loop::micro@23 (line 25)
  0x000074a37c5ea518:   cmp    %edx,%r11d
  0x000074a37c5ea51b:   jl     0x000074a37c5ea50c           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - test_buffering_in_loop::micro@29 (line 30)
 ;; B7: #	out( B9 B8 ) <- in( B4 B1 B6 )  Freq: 0.999999
  0x000074a37c5ea51d:   test   %r9d,%r9d
  0x000074a37c5ea520:   je     0x000074a37c5ea53e           ;*invokevirtual getAccum {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - test_buffering_in_loop::micro@30 (line 30)
 ;; B8: #	out( N121 ) <- in( B7 )  Freq: 0.999998
  0x000074a37c5ea522:   vaddss %xmm1,%xmm0,%xmm0
  0x000074a37c5ea526:   vaddss -0x10e(%rip),%xmm0,%xmm0        # 0x000074a37c5ea420
                                                            ;*fadd {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - test_buffering_in_loop::micro@35 (line 30)
                                                            ;   {section_word}
  0x000074a37c5ea52e:   add    $0x30,%rsp
  0x000074a37c5ea532:   pop    %rbp
  0x000074a37c5ea533:   cmp    0x28(%r15),%rsp              ;   {poll_return}
  0x000074a37c5ea537:   ja     0x000074a37c5ea5bc
  0x000074a37c5ea53d:   ret    
 ;; B9: #	out( N121 ) <- in( B7 )  Freq: 1.01328e-06
  0x000074a37c5ea53e:   mov    $0xfffffff6,%esi
  0x000074a37c5ea543:   mov    %r9d,%ebp
  0x000074a37c5ea546:   vmovss %xmm0,(%rsp)
  0x000074a37c5ea54b:   vmovss %xmm1,0x4(%rsp)
  0x000074a37c5ea551:   nop
  0x000074a37c5ea552:   nop
  0x000074a37c5ea553:   call   0x000074a37c4728e0           ; ImmutableOopMap {}
                                                            ;*invokevirtual getAccum {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - test_buffering_in_loop::micro@30 (line 30)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000074a37c5ea558:   nopl   0x250(%rax,%rax,1)           ;   {post_call_nop}
  0x000074a37c5ea560:   movabs $0x74a2f023fb20,%rdi         ;   {external_word}
  0x000074a37c5ea56a:   and    $0xfffffffffffffff0,%rsp
  0x000074a37c5ea56e:   call   0x000074a380d89c48           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x000074a37c5ea573:   hlt                                 ;*invokevirtual getAccum {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - test_buffering_in_loop::micro@30 (line 30)
 ;; B10: #	out( B4 ) <- in( B2 )  Freq: 1.00666e-06
  0x000074a37c5ea574:   mov    $0x1,%r11d
  0x000074a37c5ea57a:   jmp    0x000074a37c5ea507
 ;; B11: #	out( N121 ) <- in( B5 )  Freq: 4.73722e-07
  0x000074a37c5ea57c:   mov    $0xffffff45,%esi
  0x000074a37c5ea581:   mov    %edx,%ebp
  0x000074a37c5ea583:   mov    %r11d,0x4(%rsp)
  0x000074a37c5ea588:   mov    %r9d,0x8(%rsp)
  0x000074a37c5ea58d:   vmovss %xmm0,0xc(%rsp)
  0x000074a37c5ea593:   vmovss %xmm1,0x10(%rsp)
  0x000074a37c5ea599:   nop
  0x000074a37c5ea59a:   nop
  0x000074a37c5ea59b:   call   0x000074a37c4728e0           ; ImmutableOopMap {}
                                                            ;*if_icmple {reexecute=1 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - (reexecute) test_buffering_in_loop::micro@13 (line 26)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000074a37c5ea5a0:   nopl   0x1000298(%rax,%rax,1)       ;   {post_call_nop}
  0x000074a37c5ea5a8:   movabs $0x74a2f023fb20,%rdi         ;   {external_word}
  0x000074a37c5ea5b2:   and    $0xfffffffffffffff0,%rsp
  0x000074a37c5ea5b6:   call   0x000074a380d89c48           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x000074a37c5ea5bb:   hlt                                 ;*if_icmple {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - test_buffering_in_loop::micro@13 (line 26)
  0x000074a37c5ea5bc:   movabs $0x74a37c5ea533,%r10         ;   {internal_word}
  0x000074a37c5ea5c6:   mov    %r10,0x4a8(%r15)
  0x000074a37c5ea5cd:   jmp    0x000074a37c575760           ;   {runtime_call SafepointBlob}
  0x000074a37c5ea5d2:   call   Stub::method_entry_barrier   ;   {runtime_call Stub::method_entry_barrier}
  0x000074a37c5ea5d7:   jmp    0x000074a37c5ea4ba
  0x000074a37c5ea5dc:   call   Stub::method_entry_barrier   ;   {runtime_call Stub::method_entry_barrier}
  0x000074a37c5ea5e1:   jmp    0x000074a37c5ea45a
  0x000074a37c5ea5e6:   hlt    
  0x000074a37c5ea5e7:   hlt    
[Exception Handler]
  0x000074a37c5ea5e8:   jmp    0x000074a37c599060           ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x000074a37c5ea5ed:   call   0x000074a37c5ea5f2
  0x000074a37c5ea5f2:   subq   $0x5,(%rsp)
  0x000074a37c5ea5f7:   jmp    0x000074a37c575a80           ;   {runtime_call DeoptimizationBlob}
  0x000074a37c5ea5fc:   hlt    
  0x000074a37c5ea5fd:   hlt    
  0x000074a37c5ea5fe:   hlt    
  0x000074a37c5ea5ff:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Oops:
  0x000074a37c5ea600:   0x00000000c8d58808 a 'java/lang/Class'{0x00000000c8d58808} = 'MyValue'
  0x000074a37c5ea608:   0x00000000c8e67928 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x00000000c8e67928}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Metadata:
  0x000074a2f02f2b90:   0x000074a304402548 {method} {0x000074a304402548} 'micro' '(LMyValue;I)F' in 'test_buffering_in_loop'
  0x000074a2f02f2b98:   0x000074a3044029d0 {method} {0x000074a3044029d0} 'getAccum' '()F' in 'MyValue'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
pc-bytecode offsets:
PcDesc(pc=0x000074a37c5ea43f offset=ffffffff bits=0):
PcDesc(pc=0x000074a37c5ea4ba offset=7a bits=0):
   test_buffering_in_loop::micro@-1 (line 24)
PcDesc(pc=0x000074a37c5ea4c1 offset=81 bits=0):
   test_buffering_in_loop::micro@6 (line 25)
PcDesc(pc=0x000074a37c5ea507 offset=c7 bits=0):
   test_buffering_in_loop::micro@23 (line 25)
PcDesc(pc=0x000074a37c5ea50c offset=cc bits=0):
   test_buffering_in_loop::micro@9 (line 26)
PcDesc(pc=0x000074a37c5ea515 offset=d5 bits=0):
   test_buffering_in_loop::micro@13 (line 26)
PcDesc(pc=0x000074a37c5ea518 offset=d8 bits=0):
   test_buffering_in_loop::micro@23 (line 25)
PcDesc(pc=0x000074a37c5ea51d offset=dd bits=0):
   test_buffering_in_loop::micro@29 (line 30)
PcDesc(pc=0x000074a37c5ea522 offset=e2 bits=0):
   test_buffering_in_loop::micro@30 (line 30)
PcDesc(pc=0x000074a37c5ea52e offset=ee bits=0):
   test_buffering_in_loop::micro@35 (line 30)
PcDesc(pc=0x000074a37c5ea558 offset=118 bits=0):
   test_buffering_in_loop::micro@30 (line 30)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: obj[80]
   Objects
    - 0: R obj[80], MyValue
        Fields: stack[0], stack[4]
PcDesc(pc=0x000074a37c5ea574 offset=134 bits=0):
   test_buffering_in_loop::micro@30 (line 30)
PcDesc(pc=0x000074a37c5ea5a0 offset=160 bits=1):
   test_buffering_in_loop::micro@13 (line 26)  reexecute=true
   Locals
    - l0: obj[73]
    - l1: reg rbp [10],int
    - l2: 0
    - l3: stack[4]
   Expression stack
    - @0: stack[4]
    - @1: 500
   Objects
    - 0: R obj[73], MyValue
        Fields: stack[12], stack[16]
PcDesc(pc=0x000074a37c5ea5bc offset=17c bits=0):
   test_buffering_in_loop::micro@13 (line 26)
PcDesc(pc=0x000074a37c5ea621 offset=1e1 bits=0):
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
oop maps:ImmutableOopMapSet contains 2 OopMaps

ImmutableOopMap {} pc offsets: 280 352 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
scopes:
ScopeDesc(pc=0x000074a37c5ea4ba offset=7a):
   test_buffering_in_loop::micro@-1 (line 24)
ScopeDesc(pc=0x000074a37c5ea4c1 offset=81):
   test_buffering_in_loop::micro@6 (line 25)
ScopeDesc(pc=0x000074a37c5ea507 offset=c7):
   test_buffering_in_loop::micro@23 (line 25)
ScopeDesc(pc=0x000074a37c5ea50c offset=cc):
   test_buffering_in_loop::micro@9 (line 26)
ScopeDesc(pc=0x000074a37c5ea515 offset=d5):
   test_buffering_in_loop::micro@13 (line 26)
ScopeDesc(pc=0x000074a37c5ea518 offset=d8):
   test_buffering_in_loop::micro@23 (line 25)
ScopeDesc(pc=0x000074a37c5ea51d offset=dd):
   test_buffering_in_loop::micro@29 (line 30)
ScopeDesc(pc=0x000074a37c5ea522 offset=e2):
   test_buffering_in_loop::micro@30 (line 30)
ScopeDesc(pc=0x000074a37c5ea52e offset=ee):
   test_buffering_in_loop::micro@35 (line 30)
ScopeDesc(pc=0x000074a37c5ea558 offset=118):
   test_buffering_in_loop::micro@30 (line 30)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: obj[80]
   Objects
    - 0: R obj[80], MyValue
        Fields: stack[0], stack[4]
ScopeDesc(pc=0x000074a37c5ea574 offset=134):
   test_buffering_in_loop::micro@30 (line 30)
ScopeDesc(pc=0x000074a37c5ea5a0 offset=160):
   test_buffering_in_loop::micro@13 (line 26)  reexecute=true
   Locals
    - l0: obj[73]
    - l1: reg rbp [10],int
    - l2: 0
    - l3: stack[4]
   Expression stack
    - @0: stack[4]
    - @1: 500
   Objects
    - 0: R obj[73], MyValue
        Fields: stack[12], stack[16]
ScopeDesc(pc=0x000074a37c5ea5bc offset=17c):
   test_buffering_in_loop::micro@13 (line 26)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
relocations:
         @0x000074a2f02f2b60: 0020
relocInfo@0x000074a2f02f2b60 [type=0(none) addr=0x000074a37c5ea440 offset=32]
         @0x000074a2f02f2b62: 49e6
relocInfo@0x000074a2f02f2b62 [type=9(section_word) addr=0x000074a37c5ea526 offset=230 format=1] | [target=0x000074a37c5ea420]
         @0x000074a2f02f2b64: 580d
relocInfo@0x000074a2f02f2b64 [type=11(poll_return) addr=0x000074a37c5ea533 offset=13]
         @0x000074a2f02f2b66: 3120
relocInfo@0x000074a2f02f2b66 [type=6(runtime_call) addr=0x000074a37c5ea553 offset=32 format=1] | [destination=0x000074a37c4728e0] UncommonTrapBlob
         @0x000074a2f02f2b68: 8005
relocInfo@0x000074a2f02f2b68 [type=16(post_call_nop) addr=0x000074a37c5ea558 offset=5]
         @0x000074a2f02f2b6a: 783b3808
relocInfo@0x000074a2f02f2b6c [type=7(external_word) addr=0x000074a37c5ea560 offset=8 data=59] | [target=0x000074a2f023fb20]
         @0x000074a2f02f2b6e: 310e
relocInfo@0x000074a2f02f2b6e [type=6(runtime_call) addr=0x000074a37c5ea56e offset=14 format=1] | [destination=0x000074a380d89c48] MacroAssembler::debug64(char*, long, long*)
         @0x000074a2f02f2b70: 312d
relocInfo@0x000074a2f02f2b70 [type=6(runtime_call) addr=0x000074a37c5ea59b offset=45 format=1] | [destination=0x000074a37c4728e0] UncommonTrapBlob
         @0x000074a2f02f2b72: 8005
relocInfo@0x000074a2f02f2b72 [type=16(post_call_nop) addr=0x000074a37c5ea5a0 offset=5]
         @0x000074a2f02f2b74: 783b3808
relocInfo@0x000074a2f02f2b76 [type=7(external_word) addr=0x000074a37c5ea5a8 offset=8 data=59] | [target=0x000074a2f023fb20]
         @0x000074a2f02f2b78: 310e
relocInfo@0x000074a2f02f2b78 [type=6(runtime_call) addr=0x000074a37c5ea5b6 offset=14 format=1] | [destination=0x000074a380d89c48] MacroAssembler::debug64(char*, long, long*)
         @0x000074a2f02f2b7a: 78894006
relocInfo@0x000074a2f02f2b7c [type=8(internal_word) addr=0x000074a37c5ea5bc offset=6 data=137] | [target=0x000074a37c5ea533]
         @0x000074a2f02f2b7e: 3111
relocInfo@0x000074a2f02f2b7e [type=6(runtime_call) addr=0x000074a37c5ea5cd offset=17 format=1] | [destination=0x000074a37c575760] SafepointBlob
         @0x000074a2f02f2b80: 3105
relocInfo@0x000074a2f02f2b80 [type=6(runtime_call) addr=0x000074a37c5ea5d2 offset=5 format=1] | [destination=0x000074a37c4e00e0] Stub::method_entry_barrier
         @0x000074a2f02f2b82: 310a
relocInfo@0x000074a2f02f2b82 [type=6(runtime_call) addr=0x000074a37c5ea5dc offset=10 format=1] | [destination=0x000074a37c4e00e0] Stub::method_entry_barrier
         @0x000074a2f02f2b84: 000c
relocInfo@0x000074a2f02f2b84 [type=0(none) addr=0x000074a37c5ea5e8 offset=12]
         @0x000074a2f02f2b86: 3100
relocInfo@0x000074a2f02f2b86 [type=6(runtime_call) addr=0x000074a37c5ea5e8 offset=0 format=1] | [destination=0x000074a37c599060] ExceptionBlob
         @0x000074a2f02f2b88: 310f
relocInfo@0x000074a2f02f2b88 [type=6(runtime_call) addr=0x000074a37c5ea5f7 offset=15 format=1] | [destination=0x000074a37c575a80] DeoptimizationBlob
         @0x000074a2f02f2b8a: 0000
relocInfo@0x000074a2f02f2b8a [type=0(none) addr=0x000074a37c5ea5f7 offset=0]
         @0x000074a2f02f2b8c: 0000
relocInfo@0x000074a2f02f2b8c [type=0(none) addr=0x000074a37c5ea5f7 offset=0]
         @0x000074a2f02f2b8e: 0000
relocInfo@0x000074a2f02f2b8e [type=0(none) addr=0x000074a37c5ea5f7 offset=0]
         @0x000074a2f02f2b90: 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Dependencies:
Dependency of type evol_method
  method  = *{method} {0x000074a304402548} 'micro' '(LMyValue;I)F' in 'test_buffering_in_loop'
Dependency of type evol_method
  method  = {method} {0x000074a3044029d0} 'getAccum' '()F' in 'MyValue'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ExceptionHandlerTable (size = 0 bytes)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ImplicitExceptionTable is empty
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded oops:
#0: 0x0000000000000000 nullptr-oop
#1: 0x00000000c8d58808 a 'java/lang/Class'{0x00000000c8d58808} = 'MyValue'
#2: 0x00000000c8e67928 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x00000000c8e67928}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded metadata:
#0: 0x0000000000000000 nullptr-oop
#1: 0x000074a304402548 {method} {0x000074a304402548} 'micro' '(LMyValue;I)F' in 'test_buffering_in_loop'
#2: 0x000074a3044029d0 {method} {0x000074a3044029d0} 'getAccum' '()F' in 'MyValue'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
AFTER: AFTER_PARSING
   0  Root  === 0 70 89 100 111 122 233 284 285  |193  [[ 0 1 3 20 279 228 196 29 195 33 163 45 48 65 79 84 95 106 117 139 160 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 37 38 26 30 34 ]] Control !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
   6  Parm  === 3  [[ 74 66 ]] I_O !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
   7  Parm  === 3  [[ 75 42 38 26 30 34 37 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
   8  Parm  === 3  [[ 285 284 229 38 70 66 233 89 85 100 96 111 107 122 118 171 ]] FramePtr !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
   9  Parm  === 3  [[ 285 284 229 66 118 85 96 107 ]] ReturnAdr !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  10  Parm  === 3  [[ 38 22 22 37 32 32 28 28 ]] Parm0: rawptr:BotPTR !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  16  MergeMem  === _ 1 126 127  [[ 284 ]]  { N127:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot;
  20  ConL  === 0  [[ 22 ]]  #long:24
  22  AddP  === _ 10 10 20  [[ 26 ]]  !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  26  LoadP  === 5 7 22  [[ 54 66 49 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  28  AddP  === _ 10 10 29  [[ 30 ]]  !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  29  ConL  === 0  [[ 28 155 206 ]]  #long:16
  30  LoadI  === 5 7 28  [[ 66 171 132 85 96 107 118 193 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  32  AddP  === _ 10 10 33  [[ 34 ]]  !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  33  ConL  === 0  [[ 32 ]]  #long:8
  34  LoadF  === 5 7 32  [[ 66 77 ]]  @rawptr:BotPTR, idx=Raw; #float (does not depend only on test, raw access) !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  37  LoadI  === 5 7 10  [[ 66 78 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  38  CallLeaf  === 5 1 7 8 1 (10 ) [[ 39 41 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  39  Proj  === 38  [[ 51 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  41  Proj  === 38  [[ 76 42 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  42  MergeMem  === _ 1 7 41  [[ 66 ]]  { N41:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  45  ConP  === 0  [[ 55 ]]  #precise MyValue: 0x000074a2f0284aa8:Constant:exact *  Klass:precise MyValue: 0x000074a2f0284aa8:Constant:exact *
  46  Region  === 46 62 52  [[ 46 47 73 ]]  !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  47  Phi  === 46 64 48  [[ 204 153 85 96 107 118 170 205 190 154 148 ]]  #MyValue:exact *  Oop:MyValue:exact * !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  48  ConP  === 0  [[ 49 47 148 ]]  #null
  49  CmpP  === _ 26 48  [[ 50 ]]  !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  50  Bool  === _ 49  [[ 51 ]] [ne] !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  51  If  === 39 50  [[ 52 53 ]] P=0.999000, C=-1.000000 !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  52  IfFalse  === 51  [[ 46 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  53  IfTrue  === 51  [[ 61 54 ]] #1 !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  54  CastPP  === 53 26  [[ 55 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  55  SubTypeCheck  === _ 54 45  [[ 60 ]]  profiled at: test_buffering_in_loop::micro:4 !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  60  Bool  === _ 55  [[ 61 ]] [eq] !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  61  If  === 53 60  [[ 62 63 ]] P=0.900000, C=-1.000000 !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  62  IfTrue  === 61  [[ 46 64 ]] #1 !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  63  IfFalse  === 61  [[ 66 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  64  CheckCastPP  === 62 54  [[ 47 ]]  #MyValue:NotNull:exact *  Oop:MyValue:NotNull:exact * !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  65  ConI  === 0  [[ 66 ]]  #int:-123
  66  CallStaticJava  === 63 6 42 8 9 (65 26 30 34 37 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 test_buffering_in_loop::micro @ bci:4 (line 25) !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  73  Region  === 73 _ 46  [[ 73 80 74 75 76 77 78 ]] #reducible  !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  74  Phi  === 73 _ 6  [[ 125 85 96 107 118 ]]  #abIO !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  75  Phi  === 73 _ 7  [[ 126 82 115 93 104 ]]  #memory  Memory: @BotPTR *+bot, idx=Bot; !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  76  Phi  === 73 _ 41  [[ 127 82 115 93 104 ]]  #memory  Memory: @rawptr:BotPTR, idx=Raw; !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  77  Phi  === 73 _ 34  [[ 128 85 96 107 118 ]]  #float !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  78  Phi  === 73 _ 37  [[ 129 85 96 107 118 ]]  #int !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  79  ConI  === 0  [[ 80 91 102 113 205 192 154 ]]  #int:1
  80  ParsePredicate  === 73 79  [[ 81 90 ]]  #Loop  !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  81  IfFalse  === 80  [[ 85 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  82  MergeMem  === _ 1 75 76  [[ 85 ]]  { N76:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  84  ConI  === 0  [[ 85 ]]  #int:-146
  85  CallStaticJava  === 81 74 82 8 9 (84 47 30 77 78 ) [[ 86 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 test_buffering_in_loop::micro @ bci:4 (line 25) !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  86  Proj  === 85  [[ 89 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  89  Halt  === 86 1 1 8 1  [[ 0 ]]  !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  90  IfTrue  === 80  [[ 91 ]] #1 !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  91  ParsePredicate  === 90 79  [[ 92 101 ]]  #Profiled Loop  !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  92  IfFalse  === 91  [[ 96 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  93  MergeMem  === _ 1 75 76  [[ 96 ]]  { N76:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  95  ConI  === 0  [[ 96 ]]  #int:-66
  96  CallStaticJava  === 92 74 93 8 9 (95 47 30 77 78 ) [[ 97 ]] # Static uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 test_buffering_in_loop::micro @ bci:4 (line 25) !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  97  Proj  === 96  [[ 100 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
 100  Halt  === 97 1 1 8 1  [[ 0 ]]  !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
 101  IfTrue  === 91  [[ 102 ]] #1 !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
 102  ParsePredicate  === 101 79  [[ 103 112 ]]  #Auto_Vectorization_Check  !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
 103  IfFalse  === 102  [[ 107 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
 104  MergeMem  === _ 1 75 76  [[ 107 ]]  { N76:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
 106  ConI  === 0  [[ 107 ]]  #int:-74
 107  CallStaticJava  === 103 74 104 8 9 (106 47 30 77 78 ) [[ 108 ]] # Static uncommon_trap(reason='auto_vectorization_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 test_buffering_in_loop::micro @ bci:4 (line 25) !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
 108  Proj  === 107  [[ 111 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
 111  Halt  === 108 1 1 8 1  [[ 0 ]]  !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
 112  IfTrue  === 102  [[ 113 ]] #1 !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
 113  ParsePredicate  === 112 79  [[ 114 123 ]]  #Loop Limit Check  !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
 114  IfFalse  === 113  [[ 118 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
 115  MergeMem  === _ 1 75 76  [[ 118 ]]  { N76:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
 117  ConI  === 0  [[ 118 ]]  #int:-154
 118  CallStaticJava  === 114 74 115 8 9 (117 47 30 77 78 ) [[ 119 ]] # Static uncommon_trap(reason='loop_limit_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 test_buffering_in_loop::micro @ bci:4 (line 25) !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
 119  Proj  === 118  [[ 122 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
 122  Halt  === 119 1 1 8 1  [[ 0 ]]  !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
 123  IfTrue  === 113  [[ 124 ]] #1 !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
 124  Region  === 124 193 123  [[ 124 134 125 126 127 128 129 ]] #reducible  !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
 125  Phi  === 124 187 74  [[ 187 171 284 229 ]]  #abIO !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
 126  Phi  === 124 188 75  [[ 161 130 16 188 157 223 208 210 ]]  #memory  Memory: @BotPTR *+bot, idx=Bot; !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
 127  Phi  === 124 189 76  [[ 189 130 16 223 ]]  #memory  Memory: @rawptr:BotPTR, idx=Raw; !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
 128  Phi  === 124 191 77  [[ 171 186 191 ]]  #float !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
 129  Phi  === 124 192 78  [[ 171 140 192 132 ]]  #int !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
 130  MergeMem  === _ 1 126 127  [[ 171 ]]  { N127:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
 132  CmpI  === _ 129 30  [[ 133 ]]  !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
 133  Bool  === _ 132  [[ 134 ]] [lt] !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
 134  If  === 124 133  [[ 135 136 ]] P=0.995796, C=56140.000000 !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
 135  IfTrue  === 134  [[ 142 ]] #1 !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
 136  IfFalse  === 134  [[ 201 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
 139  ConI  === 0  [[ 140 ]]  #int:500
 140  CmpI  === _ 129 139  [[ 141 ]]  !jvms: test_buffering_in_loop::micro @ bci:13 (line 26)
 141  Bool  === _ 140  [[ 142 ]] [le] !jvms: test_buffering_in_loop::micro @ bci:13 (line 26)
 142  If  === 135 141  [[ 143 144 ]] P=0.982328, C=55907.000000 !jvms: test_buffering_in_loop::micro @ bci:13 (line 26)
 143  IfTrue  === 142  [[ 147 ]] #1 !jvms: test_buffering_in_loop::micro @ bci:13 (line 26)
 144  IfFalse  === 142  [[ 150 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:13 (line 26)
 147  Region  === 147 178 143  [[ 147 198 187 188 189 190 191 193 ]] #reducible  !jvms: test_buffering_in_loop::micro @ bci:23 (line 25)
 148  CmpP  === _ 47 48  [[ 149 ]]  !jvms: test_buffering_in_loop::micro @ bci:18 (line 27)
 149  Bool  === _ 148  [[ 150 201 225 ]] [ne] !jvms: test_buffering_in_loop::micro @ bci:18 (line 27)
 150  If  === 144 149  [[ 151 152 ]] P=0.999000, C=-1.000000 !jvms: test_buffering_in_loop::micro @ bci:18 (line 27)
 151  IfFalse  === 150  [[ 164 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:18 (line 27)
 152  IfTrue  === 150  [[ 164 153 ]] #1 !jvms: test_buffering_in_loop::micro @ bci:18 (line 27)
 153  CastPP  === 152 47  [[ 159 155 155 159 ]]  #MyValue:NotNull:exact *  Oop:MyValue:NotNull:exact * !jvms: test_buffering_in_loop::micro @ bci:18 (line 27)
 154  InlineType  === _ 47 79 170 168 169  [[ 190 171 171 ]]  #MyValue:exact *  Oop:MyValue:exact * !jvms: test_buffering_in_loop::micro @ bci:18 (line 27)
 155  AddP  === _ 153 153 29  [[ 157 ]]   Oop:MyValue:NotNull:exact+16 * !jvms: test_buffering_in_loop::micro @ bci:18 (line 27)
 157  LoadF  === _ 126 155  [[ 168 ]]  @MyValue:exact+16 *, name=f1, idx=5; #float !jvms: test_buffering_in_loop::micro @ bci:18 (line 27)
 159  AddP  === _ 153 153 160  [[ 161 ]]   Oop:MyValue:NotNull:exact+20 * !jvms: test_buffering_in_loop::micro @ bci:18 (line 27)
 160  ConL  === 0  [[ 159 209 ]]  #long:20
 161  LoadF  === _ 126 159  [[ 169 ]]  @MyValue:exact+20 *, name=f2, idx=6; #float !jvms: test_buffering_in_loop::micro @ bci:18 (line 27)
 163  ConF  === 0  [[ 217 216 168 169 ]]  #ftcon:0.000000
 164  Region  === 164 152 151  [[ 164 171 169 168 ]]  !jvms: test_buffering_in_loop::micro @ bci:18 (line 27)
 168  Phi  === 164 157 163  [[ 154 ]]  #float !jvms: test_buffering_in_loop::micro @ bci:18 (line 27)
 169  Phi  === 164 161 163  [[ 154 ]]  #float !jvms: test_buffering_in_loop::micro @ bci:18 (line 27)
 170  Conv2B  === _ 47  [[ 154 205 ]]  !jvms: test_buffering_in_loop::micro @ bci:18 (line 27)
 171  CallStaticJava  === 164 125 130 8 1 (154 154 30 1 129 128 ) [[ 172 173 174 183 ]] # Static  test_buffering_in_loop::leaf float ( MyAbsValue * ) test_buffering_in_loop::micro @ bci:18 (line 27) !jvms: test_buffering_in_loop::micro @ bci:18 (line 27)
 172  Proj  === 171  [[ 177 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:18 (line 27)
 173  Proj  === 171  [[ 285 177 187 182 ]] #1 !jvms: test_buffering_in_loop::micro @ bci:18 (line 27)
 174  Proj  === 171  [[ 285 189 188 ]] #2  Memory: @BotPTR *+bot, idx=Bot; !jvms: test_buffering_in_loop::micro @ bci:18 (line 27)
 177  Catch  === 172 173  [[ 178 179 ]]  !jvms: test_buffering_in_loop::micro @ bci:18 (line 27)
 178  CatchProj  === 177  [[ 147 ]] #0@bci -1  !jvms: test_buffering_in_loop::micro @ bci:18 (line 27)
 179  CatchProj  === 177  [[ 285 182 ]] #1@bci -1  !jvms: test_buffering_in_loop::micro @ bci:18 (line 27)
 182  CreateEx  === 179 173  [[ 285 ]]  #java/lang/Throwable (java/io/Serializable):NotNull *  Oop:java/lang/Throwable (java/io/Serializable):NotNull * !jvms: test_buffering_in_loop::micro @ bci:18 (line 27)
 183  Proj  === 171  [[ 186 ]] #5 !jvms: test_buffering_in_loop::micro @ bci:18 (line 27)
 186  AddF  === _ 128 183  [[ 191 ]]  !jvms: test_buffering_in_loop::micro @ bci:21 (line 27)
 187  Phi  === 147 173 125  [[ 125 ]]  #abIO !jvms: test_buffering_in_loop::micro @ bci:23 (line 25)
 188  Phi  === 147 174 126  [[ 126 194 ]]  #memory  Memory: @BotPTR *+bot, idx=Bot; !jvms: test_buffering_in_loop::micro @ bci:23 (line 25)
 189  Phi  === 147 174 127  [[ 127 194 198 ]]  #memory  Memory: @rawptr:BotPTR, idx=Raw; !jvms: test_buffering_in_loop::micro @ bci:23 (line 25)
 190  Phi  === 147 154 47  [[ 193 ]]  #MyValue:exact *  Oop:MyValue:exact * !jvms: test_buffering_in_loop::micro @ bci:23 (line 25)
 191  Phi  === 147 186 128  [[ 128 193 ]]  #float !jvms: test_buffering_in_loop::micro @ bci:23 (line 25)
 192  AddI  === _ 129 79  [[ 129 193 ]]  !jvms: test_buffering_in_loop::micro @ bci:23 (line 25)
 193  SafePoint  === 147 1 194 1 1 198 190 30 191 192  [[ 124 0 ]]  SafePoint  !jvms: test_buffering_in_loop::micro @ bci:26 (line 25)
 194  MergeMem  === _ 1 188 189  [[ 193 ]]  { N189:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: test_buffering_in_loop::micro @ bci:26 (line 25)
 195  ThreadLocal  === 0  [[ 197 ]]  !jvms: test_buffering_in_loop::micro @ bci:26 (line 25)
 196  ConL  === 0  [[ 197 ]]  #long:48
 197  AddP  === _ 1 195 196  [[ 198 ]]  !jvms: test_buffering_in_loop::micro @ bci:26 (line 25)
 198  LoadP  === 147 189 197  [[ 193 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !jvms: test_buffering_in_loop::micro @ bci:26 (line 25)
 201  If  === 136 149  [[ 202 203 ]] P=0.999000, C=-1.000000 !jvms: test_buffering_in_loop::micro @ bci:30 (line 30)
 202  IfFalse  === 201  [[ 212 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:30 (line 30)
 203  IfTrue  === 201  [[ 212 204 ]] #1 !jvms: test_buffering_in_loop::micro @ bci:30 (line 30)
 204  CastPP  === 203 47  [[ 209 206 206 209 ]]  #MyValue:NotNull:exact *  Oop:MyValue:NotNull:exact * !jvms: test_buffering_in_loop::micro @ bci:30 (line 30)
 205  InlineType  === _ 47 79 170 216 217  [[ 229 ]]  #MyValue:exact *  Oop:MyValue:exact * !jvms: test_buffering_in_loop::micro @ bci:30 (line 30)
 206  AddP  === _ 204 204 29  [[ 208 ]]   Oop:MyValue:NotNull:exact+16 * !jvms: test_buffering_in_loop::micro @ bci:30 (line 30)
 208  LoadF  === _ 126 206  [[ 216 ]]  @MyValue:exact+16 *, name=f1, idx=5; #float !jvms: test_buffering_in_loop::micro @ bci:30 (line 30)
 209  AddP  === _ 204 204 160  [[ 210 ]]   Oop:MyValue:NotNull:exact+20 * !jvms: test_buffering_in_loop::micro @ bci:30 (line 30)
 210  LoadF  === _ 126 209  [[ 217 ]]  @MyValue:exact+20 *, name=f2, idx=6; #float !jvms: test_buffering_in_loop::micro @ bci:30 (line 30)
 212  Region  === 212 203 202  [[ 212 225 217 216 ]]  !jvms: test_buffering_in_loop::micro @ bci:30 (line 30)
 216  Phi  === 212 208 163  [[ 205 276 ]]  #float !jvms: test_buffering_in_loop::micro @ bci:30 (line 30)
 217  Phi  === 212 210 163  [[ 205 276 ]]  #float !jvms: test_buffering_in_loop::micro @ bci:30 (line 30)
 223  MergeMem  === _ 1 126 127  [[ 229 ]]  { N127:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: test_buffering_in_loop::micro @ bci:30 (line 30)
 225  If  === 212 149  [[ 226 227 ]] P=0.999999, C=-1.000000 !jvms: test_buffering_in_loop::micro @ bci:30 (line 30)
 226  IfTrue  === 225  [[ 284 ]] #1 !jvms: test_buffering_in_loop::micro @ bci:30 (line 30)
 227  IfFalse  === 225  [[ 229 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:30 (line 30)
 228  ConI  === 0  [[ 229 ]]  #int:-10
 229  CallStaticJava  === 227 125 223 8 9 (228 1 1 1 1 205 ) [[ 230 ]] # Static uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 test_buffering_in_loop::micro @ bci:30 (line 30) !jvms: test_buffering_in_loop::micro @ bci:30 (line 30)
 230  Proj  === 229  [[ 233 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:30 (line 30)
 233  Halt  === 230 1 1 8 1  [[ 0 ]]  !jvms: test_buffering_in_loop::micro @ bci:30 (line 30)
 276  AddF  === _ 216 217  [[ 280 ]]  !jvms: MyValue::getAccum @ bci:8 (line 14) test_buffering_in_loop::micro @ bci:30 (line 30)
 279  ConF  === 0  [[ 280 ]]  #ftcon:10.000000
 280  AddF  === _ 276 279  [[ 284 ]]  !jvms: test_buffering_in_loop::micro @ bci:35 (line 30)
 284  Return  === 226 125 16 8 9 returns 280  [[ 0 ]] 
 285  Rethrow  === 179 173 174 8 9 exception 182  [[ 0 ]] 

============================= C2-compiled nmethod ==============================
#r018 rsi:rsi   : parm 0: rawptr:BotPTR
# -- Old rsp -- Framesize: 64 --
#r623 rsp+60: in_preserve
#r622 rsp+56: return address
#r621 rsp+52: in_preserve
#r620 rsp+48: saved fp register
#r619 rsp+44: Fixed slot 3
#r618 rsp+40: Fixed slot 2
#r617 rsp+36: Fixed slot 1
#r616 rsp+32: Fixed slot 0
#r631 rsp+28: spill
#r630 rsp+24: spill
#r629 rsp+20: spill
#r628 rsp+16: spill
#r627 rsp+12: spill
#r626 rsp+ 8: spill
#r625 rsp+ 4: spill
#r624 rsp+ 0: spill
#
----------------------- MetaData before Compile_id = 101 ------------------------
{method}
 - this oop:          0x000074a304402548
 - method holder:     'test_buffering_in_loop'
 - constants:         0x000074a304402050 constant pool [71]/operands[5] {0x000074a304402050} for 'test_buffering_in_loop' cache=0x000074a3044031a0
 - access:            0x9  public static value 
 - flags:             0x16080  queued_for_compilation has_loops_flag has_loops_flag_init has_scalarized_args 
 - name:              'micro'
 - signature:         '(LMyValue;I)F'
 - max stack:         3
 - max locals:        4
 - size of params:    2
 - method size:       16
 - highest level:     4
 - vtable index:      -2
 - i2i entry:         0x000074a37c44ff20
 - adapters:          AHE@0x000074a3782657f0: 0x244319ea i2c: 0x000074a37c5e6960 c2i: 0x000074a37c5e6ec7 c2iVE: 0x000074a37c5e73ab c2iVROE: 0x000074a37c5e6a3f c2iUE: 0x000074a37c5e6a1e c2iUVE: 0x000074a37c5e738a c2iNCI: 0x000074a37c5e73e6
 - compiled entry           0x000074a37c5e6ec7
 - compiled inline entry    0x000074a37c5e73ab
 - compiled inline ro entry 0x000074a37c5e6a3f
 - code size:         37
 - code start:        0x000074a304402518
 - code end (excl):   0x000074a30440253d
 - method data:       0x000074a3044033c0
 - checked ex length: 0
 - linenumber start:  0x000074a30440253d
 - localvar length:   0

------------------------ OptoAssembly for Compile_id = 101 -----------------------
#
#  float ( rawptr:BotPTR )
#
000     N197: #	out( B1 ) <- BLOCK HEAD IS JUNK  Freq: 1
000     # breakpoint
        nop 	# 11 bytes pad for loops and calls

010     B1: #	out( B15 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
010     # stack bang (144 bytes)
	pushq   rbp	# Save rbp
	subq    rsp, #48	# Create frame

02a     movq    RBX, [RSI + #24 (8-bit)]	# ptr
02e     movl    R13, [RSI + #16 (8-bit)]	# int
032     movl    RBP, [RSI]	# int
034     movss   XMM1, [RSI + #8 (8-bit)]	# float
039     movss   [rsp + #0], XMM1	# spill
03e     movq    RDI, RSI	# spill
041     call_leaf,runtime  OSR_migration_end
        No JVM State Info
        # 
056     testq   RBX, RBX	# ptr
059     je     B15  P=0.001000 C=-1.000000

05f     B2: #	out( B16 B3 ) <- in( B1 )  Freq: 0.999
05f     movl    R10, [RBX + #8 (8-bit)]	# compressed klass ptr
063     cmpl    R10, narrowklass: precise MyValue: 0x000074a2f0284aa8:Constant:exact *	# compressed klass ptr
06a     jne,u   B16  P=0.000001 C=-1.000000

070     B3: #	out( B6 ) <- in( B2 )  Freq: 0.998999
070     # checkcastPP of RBX
070     movl    R11, #1	# int
076     jmp,s   B6
        nop 	# 8 bytes pad for loops and calls

080     B4: #	out( B5 ) <- in( B7 ) top-of-loop Freq: 232.684
080     movss   XMM1, [rsp + #0]	# spill

085     B5: #	out( B6 ) <- in( B11 B4 )  Freq: 236.87
085     # TLS is in R15
085     movq    R10, [R15 + #48 (8-bit)]	# ptr
089     incl    RBP	# int
08b     testl   rax, [R10]	# Safepoint: poll for GC        # test_buffering_in_loop::micro @ bci:26 (line 25) L[0]=RBX L[1]=R13 L[2]=XMM1 L[3]=RBP
        # OopMap {rbx=Oop off=139/0x8b}
08e     movss   [rsp + #0], XMM1	# spill

093     B6: #	out( B12 B7 ) <- in( B3 B15 B5 ) Loop( B6-B5 inner ) Freq: 237.87
093     cmpl    RBP, R13
096     jge,s   B12  P=0.004204 C=56140.000000

098     B7: #	out( B4 B8 ) <- in( B6 )  Freq: 236.87
098     cmpl    RBP, #500
09e     jle,s   B4  P=0.982328 C=55907.000000

0a0     B8: #	out( B14 B9 ) <- in( B7 )  Freq: 4.18601
0a0     testq   RBX, RBX	# ptr
0a3     je,s   B14  P=0.001000 C=-1.000000

0a5     B9: #	out( B10 ) <- in( B8 )  Freq: 4.18182
0a5     movss   XMM0, [RBX + #16 (8-bit)]	# float ! Field: MyValue.f1 (constant)
0aa     movss   XMM2, [RBX + #20 (8-bit)]	# float ! Field: MyValue.f2 (constant)

0af     B10: #	out( B17 B11 ) <- in( B9 B14 )  Freq: 4.18601
0af     movl    [rsp + #12], R11	# spill
0b4     movl    [rsp + #8], RBP	# spill
0b8     movl    [rsp + #4], R13	# spill
0bd     movq    RBP, RBX	# spill
0c0     movq    RSI, RBX	# spill
0c3     movss   [rsp + #16], XMM0	# spill
0c9     movss   [rsp + #20], XMM2	# spill
0cf     call,static  test_buffering_in_loop::leaf
        # test_buffering_in_loop::micro @ bci:18 (line 27) L[0]=#ScObj0 L[1]=rsp + #4 L[2]=_ L[3]=rsp + #8 STK[0]=rsp + #0
        # ScObj0 MyValue={ [is_init :-1]=rsp + #12 [f1 :0]=rsp + #16, [f2 :1]=rsp + #20 }
        # OopMap {rbp=Oop off=212/0xd4}

0dc     B11: #	out( B5 ) <- in( B10 )  Freq: 4.18593
        # Block is sole successor of call
0dc     vaddss  XMM1, XMM0, [RSP + #0 (32-bit)]
0e1     movq    RBX, RBP	# spill
0e4     movl    R13, [rsp + #4]	# spill
0e9     movl    RBP, [rsp + #8]	# spill
0ed     movl    R11, [rsp + #12]	# spill
0f2     jmp,s   B5

0f4     B12: #	out( B18 B13 ) <- in( B6 )  Freq: 0.999957
0f4     movss   XMM0, [RBX + #20 (8-bit)]	# float ! Field: MyValue.f2 (constant)
0f9     NullCheck RBX

0f9     B13: #	out( N197 ) <- in( B12 )  Freq: 0.999956
0f9     vaddss  XMM1, XMM0, [RBX + #16 (8-bit)]
0fe     # MachConstantBaseNode (empty encoding)
0fe     vaddss  XMM0, XMM1, [constant table base + #0]	# load from constant table: float=#10.000000
106     addq    rsp, 48	# Destroy frame
	popq    rbp
	cmpq    rsp, poll_offset[r15_thread] 
	ja      #safepoint_stub	# Safepoint: poll for GC

115     ret

116     B14: #	out( B10 ) <- in( B8 )  Freq: 0.00418596
116     xorps   XMM0, XMM0	# float 0.0
11a     xorps   XMM2, XMM2	# float 0.0
11e     jmp,s   B10

120     B15: #	out( B6 ) <- in( B1 )  Freq: 0.000999987
120     xorl    RBX, RBX	# ptr
122     xorl    R11, R11	# int
125     jmp     B6

12a     B16: #	out( N197 ) <- in( B2 )  Freq: 9.99e-07
12a     movl    RSI, #-123	# int
12f     movl    [rsp + #4], R13	# spill
134     movq    [rsp + #8], RBX	# spill
        nop 	# 2 bytes pad for loops and calls
13b     call,static  wrapper for: uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')
        # test_buffering_in_loop::micro @ bci:4 (line 25) L[0]=rsp + #8 L[1]=rsp + #4 L[2]=rsp + #0 L[3]=RBP
        # OopMap {[8]=Oop off=320/0x140}
148     stop	# ShouldNotReachHere

15c     B17: #	out( N197 ) <- in( B10 )  Freq: 4.18601e-05
15c     # exception oop is in rax; no code emitted
15c     movq    RSI, RAX	# spill
15f     addq    rsp, 48	# Destroy frame
	popq    rbp

164     jmp     rethrow_stub

169     B18: #	out( N197 ) <- in( B12 )  Freq: 1.01324e-06
169     movl    RSI, #-10	# int
16e     movl    RBP, R11	# spill
        nop 	# 2 bytes pad for loops and calls
173     call,static  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # test_buffering_in_loop::micro @ bci:30 (line 30) L[0]=_ L[1]=_ L[2]=_ L[3]=_ STK[0]=#ScObj0
        # ScObj0 MyValue={ [is_init :-1]=RBP [f1 :0]=#0.000000F, [f2 :1]=#0.000000F }
        # OopMap {off=376/0x178}
180     stop	# ShouldNotReachHere

--------------------------------------------------------------------------------
----------------------------------- Assembly -----------------------------------

Compiled method (c2) 1097  101 %           test_buffering_in_loop::micro @ 4 (37 bytes)
 total in heap  [0x000074a37c5ea688,0x000074a37c5ea9b0] = 808
 constants      [0x000074a37c5ea7a0,0x000074a37c5ea7c0] = 32
 main code      [0x000074a37c5ea7c0,0x000074a37c5ea978] = 440
 stub code      [0x000074a37c5ea978,0x000074a37c5ea9a0] = 40
 oops           [0x000074a37c5ea9a0,0x000074a37c5ea9b0] = 16
 mutable data [0x000074a2f023f4e0,0x000074a2f023f540] = 96
 relocation     [0x000074a2f023f4e0,0x000074a2f023f528] = 72
 metadata       [0x000074a2f023f528,0x000074a2f023f540] = 24
 immutable data [0x000074a2f02f8db0,0x000074a2f02f8fb0] = 512
 dependencies   [0x000074a2f02f8db0,0x000074a2f02f8db8] = 8
 nul chk table  [0x000074a2f02f8db8,0x000074a2f02f8dc8] = 16
 handler table  [0x000074a2f02f8dc8,0x000074a2f02f8de0] = 24
 scopes pcs     [0x000074a2f02f8de0,0x000074a2f02f8f20] = 320
 scopes data    [0x000074a2f02f8f20,0x000074a2f02f8fb0] = 144

[Disassembly]
--------------------------------------------------------------------------------

[Constant Pool]
             Address          hex4                    hex8      
  0x000074a37c5ea7a0:   0x41200000      0xf4f4f4f441200000      
  0x000074a37c5ea7a4:   0xf4f4f4f4                              
  0x000074a37c5ea7a8:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x000074a37c5ea7ac:   0xf4f4f4f4                              
  0x000074a37c5ea7b0:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x000074a37c5ea7b4:   0xf4f4f4f4                              
  0x000074a37c5ea7b8:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x000074a37c5ea7bc:   0xf4f4f4f4                              

--------------------------------------------------------------------------------

[Entry Point]
[Inline Entry Point]
[Verified Entry Point]
 ;; N197: #	out( B1 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x000074a37c5ea7c0:   call   0x000074a380f2c9a4           ;   {runtime_call os::breakpoint()}
  0x000074a37c5ea7c5:   nop
  0x000074a37c5ea7c6:   nop
  0x000074a37c5ea7c7:   nop
  0x000074a37c5ea7c8:   nop
  0x000074a37c5ea7c9:   nop
  0x000074a37c5ea7ca:   nop
  0x000074a37c5ea7cb:   nop
  0x000074a37c5ea7cc:   nop
  0x000074a37c5ea7cd:   nop
  0x000074a37c5ea7ce:   nop
  0x000074a37c5ea7cf:   nop
 ;; B1: #	out( B15 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x000074a37c5ea7d0:   mov    %eax,-0x18000(%rsp)
  0x000074a37c5ea7d7:   push   %rbp
  0x000074a37c5ea7d8:   sub    $0x30,%rsp
  0x000074a37c5ea7dc:   cmpl   $0x0,0x20(%r15)
  0x000074a37c5ea7e4:   jne    0x000074a37c5ea96a
  0x000074a37c5ea7ea:   mov    0x18(%rsi),%rbx
  0x000074a37c5ea7ee:   mov    0x10(%rsi),%r13d
  0x000074a37c5ea7f2:   mov    (%rsi),%ebp
  0x000074a37c5ea7f4:   vmovss 0x8(%rsi),%xmm1
  0x000074a37c5ea7f9:   vmovss %xmm1,(%rsp)
  0x000074a37c5ea7fe:   mov    %rsi,%rdi
  0x000074a37c5ea801:   movabs $0x74a381060140,%r10
  0x000074a37c5ea80b:   call   *%r10
  0x000074a37c5ea80e:   nopl   0x0(%rax,%rax,1)             ;   {post_call_nop}
  0x000074a37c5ea816:   test   %rbx,%rbx
  0x000074a37c5ea819:   je     0x000074a37c5ea8e0
 ;; B2: #	out( B16 B3 ) <- in( B1 )  Freq: 0.999
  0x000074a37c5ea81f:   mov    0x8(%rbx),%r10d
  0x000074a37c5ea823:   cmp    $0x1041238,%r10d             ;   {metadata('MyValue')}
  0x000074a37c5ea82a:   jne    0x000074a37c5ea8ea           ;*iload_3 {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - test_buffering_in_loop::micro@4 (line 25)
 ;; B3: #	out( B6 ) <- in( B2 )  Freq: 0.998999
  0x000074a37c5ea830:   mov    $0x1,%r11d
  0x000074a37c5ea836:   jmp    0x000074a37c5ea853
  0x000074a37c5ea838:   nop
  0x000074a37c5ea839:   nop
  0x000074a37c5ea83a:   nop
  0x000074a37c5ea83b:   nop
  0x000074a37c5ea83c:   nop
  0x000074a37c5ea83d:   nop
  0x000074a37c5ea83e:   nop
  0x000074a37c5ea83f:   nop
 ;; B4: #	out( B5 ) <- in( B7 ) top-of-loop Freq: 232.684
  0x000074a37c5ea840:   vmovss (%rsp),%xmm1                 ;*goto {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - test_buffering_in_loop::micro@26 (line 25)
 ;; B5: #	out( B6 ) <- in( B11 B4 )  Freq: 236.87
  0x000074a37c5ea845:   mov    0x30(%r15),%r10
  0x000074a37c5ea849:   inc    %ebp                         ; ImmutableOopMap {rbx=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - (reexecute) test_buffering_in_loop::micro@26 (line 25)
  0x000074a37c5ea84b:   test   %eax,(%r10)                  ;*goto {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - test_buffering_in_loop::micro@26 (line 25)
                                                            ;   {poll}
  0x000074a37c5ea84e:   vmovss %xmm1,(%rsp)                 ;*iload_3 {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - test_buffering_in_loop::micro@4 (line 25)
 ;; B6: #	out( B12 B7 ) <- in( B3 B15 B5 ) Loop( B6-B5 inner ) Freq: 237.87
  0x000074a37c5ea853:   cmp    %r13d,%ebp
  0x000074a37c5ea856:   jge    0x000074a37c5ea8b4           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - test_buffering_in_loop::micro@6 (line 25)
 ;; B7: #	out( B4 B8 ) <- in( B6 )  Freq: 236.87
  0x000074a37c5ea858:   cmp    $0x1f4,%ebp
  0x000074a37c5ea85e:   jle    0x000074a37c5ea840           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - test_buffering_in_loop::micro@13 (line 26)
 ;; B8: #	out( B14 B9 ) <- in( B7 )  Freq: 4.18601
  0x000074a37c5ea860:   test   %rbx,%rbx
  0x000074a37c5ea863:   je     0x000074a37c5ea8d6
 ;; B9: #	out( B10 ) <- in( B8 )  Freq: 4.18182
  0x000074a37c5ea865:   vmovss 0x10(%rbx),%xmm0
  0x000074a37c5ea86a:   vmovss 0x14(%rbx),%xmm2             ;*invokestatic leaf {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - test_buffering_in_loop::micro@18 (line 27)
 ;; B10: #	out( B17 B11 ) <- in( B9 B14 )  Freq: 4.18601
  0x000074a37c5ea86f:   mov    %r11d,0xc(%rsp)
  0x000074a37c5ea874:   mov    %ebp,0x8(%rsp)
  0x000074a37c5ea878:   mov    %r13d,0x4(%rsp)
  0x000074a37c5ea87d:   mov    %rbx,%rbp                    ;*iload_3 {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - test_buffering_in_loop::micro@4 (line 25)
  0x000074a37c5ea880:   mov    %rbx,%rsi
  0x000074a37c5ea883:   vmovss %xmm0,0x10(%rsp)
  0x000074a37c5ea889:   vmovss %xmm2,0x14(%rsp)
  0x000074a37c5ea88f:   call   0x000074a37c5664e0           ; ImmutableOopMap {rbp=Oop }
                                                            ;*invokestatic leaf {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - test_buffering_in_loop::micro@18 (line 27)
                                                            ;   {static_call}
  0x000074a37c5ea894:   nopl   0x100020c(%rax,%rax,1)       ;*invokestatic leaf {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - test_buffering_in_loop::micro@18 (line 27)
                                                            ;   {post_call_nop}
 ;; B11: #	out( B5 ) <- in( B10 )  Freq: 4.18593
  0x000074a37c5ea89c:   vaddss (%rsp),%xmm0,%xmm1           ;*fadd {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - test_buffering_in_loop::micro@21 (line 27)
  0x000074a37c5ea8a1:   mov    %rbp,%rbx
  0x000074a37c5ea8a4:   mov    0x4(%rsp),%r13d
  0x000074a37c5ea8a9:   mov    0x8(%rsp),%ebp
  0x000074a37c5ea8ad:   mov    0xc(%rsp),%r11d
  0x000074a37c5ea8b2:   jmp    0x000074a37c5ea845
 ;; B12: #	out( B18 B13 ) <- in( B6 )  Freq: 0.999957
  0x000074a37c5ea8b4:   vmovss 0x14(%rbx),%xmm0             ; implicit exception: dispatches to 0x000074a37c5ea929
 ;; B13: #	out( N197 ) <- in( B12 )  Freq: 0.999956
  0x000074a37c5ea8b9:   vaddss 0x10(%rbx),%xmm0,%xmm1       ;*iload_3 {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - test_buffering_in_loop::micro@4 (line 25)
  0x000074a37c5ea8be:   vaddss -0x126(%rip),%xmm1,%xmm0        # 0x000074a37c5ea7a0
                                                            ;*fadd {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - test_buffering_in_loop::micro@35 (line 30)
                                                            ;   {section_word}
  0x000074a37c5ea8c6:   add    $0x30,%rsp
  0x000074a37c5ea8ca:   pop    %rbp
  0x000074a37c5ea8cb:   cmp    0x28(%r15),%rsp              ;   {poll_return}
  0x000074a37c5ea8cf:   ja     0x000074a37c5ea954
  0x000074a37c5ea8d5:   ret    
 ;; B14: #	out( B10 ) <- in( B8 )  Freq: 0.00418596
  0x000074a37c5ea8d6:   vxorps %xmm0,%xmm0,%xmm0
  0x000074a37c5ea8da:   vxorps %xmm2,%xmm2,%xmm2
  0x000074a37c5ea8de:   jmp    0x000074a37c5ea86f
 ;; B15: #	out( B6 ) <- in( B1 )  Freq: 0.000999987
  0x000074a37c5ea8e0:   xor    %ebx,%ebx
  0x000074a37c5ea8e2:   xor    %r11d,%r11d
  0x000074a37c5ea8e5:   jmp    0x000074a37c5ea853
 ;; B16: #	out( N197 ) <- in( B2 )  Freq: 9.99e-07
  0x000074a37c5ea8ea:   mov    $0xffffff85,%esi
  0x000074a37c5ea8ef:   mov    %r13d,0x4(%rsp)
  0x000074a37c5ea8f4:   mov    %rbx,0x8(%rsp)
  0x000074a37c5ea8f9:   nop
  0x000074a37c5ea8fa:   nop
  0x000074a37c5ea8fb:   call   0x000074a37c4728e0           ; ImmutableOopMap {[8]=Oop }
                                                            ;*iload_3 {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - test_buffering_in_loop::micro@4 (line 25)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000074a37c5ea900:   nopl   0x2000278(%rax,%rax,1)       ;   {post_call_nop}
  0x000074a37c5ea908:   movabs $0x74a2f02f8b70,%rdi         ;   {external_word}
  0x000074a37c5ea912:   and    $0xfffffffffffffff0,%rsp
  0x000074a37c5ea916:   call   0x000074a380d89c48           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x000074a37c5ea91b:   hlt                                 ;*invokestatic leaf {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - test_buffering_in_loop::micro@18 (line 27)
 ;; B17: #	out( N197 ) <- in( B10 )  Freq: 4.18601e-05
  0x000074a37c5ea91c:   mov    %rax,%rsi
  0x000074a37c5ea91f:   add    $0x30,%rsp
  0x000074a37c5ea923:   pop    %rbp
  0x000074a37c5ea924:   jmp    0x000074a37c5a9d60           ;   {runtime_call C2 Runtime rethrow}
 ;; B18: #	out( N197 ) <- in( B12 )  Freq: 1.01324e-06
  0x000074a37c5ea929:   mov    $0xfffffff6,%esi
  0x000074a37c5ea92e:   mov    %r11d,%ebp
  0x000074a37c5ea931:   nop
  0x000074a37c5ea932:   nop
  0x000074a37c5ea933:   call   0x000074a37c4728e0           ; ImmutableOopMap {}
                                                            ;*invokevirtual getAccum {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - test_buffering_in_loop::micro@30 (line 30)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000074a37c5ea938:   nopl   0x30002b0(%rax,%rax,1)       ;   {post_call_nop}
  0x000074a37c5ea940:   movabs $0x74a2f02f8b70,%rdi         ;   {external_word}
  0x000074a37c5ea94a:   and    $0xfffffffffffffff0,%rsp
  0x000074a37c5ea94e:   call   0x000074a380d89c48           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x000074a37c5ea953:   hlt                                 ;*invokestatic leaf {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - test_buffering_in_loop::micro@18 (line 27)
  0x000074a37c5ea954:   movabs $0x74a37c5ea8cb,%r10         ;   {internal_word}
  0x000074a37c5ea95e:   mov    %r10,0x4a8(%r15)
  0x000074a37c5ea965:   jmp    0x000074a37c575760           ;   {runtime_call SafepointBlob}
  0x000074a37c5ea96a:   call   Stub::method_entry_barrier   ;   {runtime_call Stub::method_entry_barrier}
  0x000074a37c5ea96f:   jmp    0x000074a37c5ea7ea
  0x000074a37c5ea974:   hlt    
  0x000074a37c5ea975:   hlt    
  0x000074a37c5ea976:   hlt    
  0x000074a37c5ea977:   hlt    
[Stub Code]
  0x000074a37c5ea978:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000074a37c5ea982:   jmp    0x000074a37c5ea982           ;   {runtime_call nmethod}
[Exception Handler]
  0x000074a37c5ea987:   jmp    0x000074a37c599060           ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x000074a37c5ea98c:   call   0x000074a37c5ea991
  0x000074a37c5ea991:   subq   $0x5,(%rsp)
  0x000074a37c5ea996:   jmp    0x000074a37c575a80           ;   {runtime_call DeoptimizationBlob}
  0x000074a37c5ea99b:   hlt    
  0x000074a37c5ea99c:   hlt    
  0x000074a37c5ea99d:   hlt    
  0x000074a37c5ea99e:   hlt    
  0x000074a37c5ea99f:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Oops:
  0x000074a37c5ea9a0:   0x00000000c8d58808 a 'java/lang/Class'{0x00000000c8d58808} = 'MyValue'
  0x000074a37c5ea9a8:   0x00000000c8e67928 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x00000000c8e67928}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Metadata:
  0x000074a2f023f528:   0x000074a30f041238 'MyValue'
  0x000074a2f023f530:   0x000074a304402548 {method} {0x000074a304402548} 'micro' '(LMyValue;I)F' in 'test_buffering_in_loop'
  0x000074a2f023f538:   0x000074a3044029d0 {method} {0x000074a3044029d0} 'getAccum' '()F' in 'MyValue'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
pc-bytecode offsets:
PcDesc(pc=0x000074a37c5ea7bf offset=ffffffff bits=0):
PcDesc(pc=0x000074a37c5ea830 offset=70 bits=0):
   test_buffering_in_loop::micro@4 (line 25)
PcDesc(pc=0x000074a37c5ea845 offset=85 bits=0):
   test_buffering_in_loop::micro@26 (line 25)
PcDesc(pc=0x000074a37c5ea84b offset=8b bits=1):
   test_buffering_in_loop::micro@26 (line 25)  reexecute=true
   Locals
    - l0: reg rbx [6],oop
    - l1: reg r13 [26],int
    - l2: reg xmm1 [96]
    - l3: reg rbp [10],int
PcDesc(pc=0x000074a37c5ea84e offset=8e bits=0):
   test_buffering_in_loop::micro@26 (line 25)
PcDesc(pc=0x000074a37c5ea853 offset=93 bits=0):
   test_buffering_in_loop::micro@4 (line 25)
PcDesc(pc=0x000074a37c5ea858 offset=98 bits=0):
   test_buffering_in_loop::micro@6 (line 25)
PcDesc(pc=0x000074a37c5ea860 offset=a0 bits=0):
   test_buffering_in_loop::micro@13 (line 26)
PcDesc(pc=0x000074a37c5ea86f offset=af bits=0):
   test_buffering_in_loop::micro@18 (line 27)
PcDesc(pc=0x000074a37c5ea880 offset=c0 bits=0):
   test_buffering_in_loop::micro@4 (line 25)
PcDesc(pc=0x000074a37c5ea894 offset=d4 bits=0):
   test_buffering_in_loop::micro@18 (line 27)
   Locals
    - l0: obj[79]
    - l1: stack[4]
    - l2: empty
    - l3: stack[8]
   Expression stack
    - @0: stack[0]
   Objects
    - 0: R obj[79], MyValue
        Fields: stack[16], stack[20]
PcDesc(pc=0x000074a37c5ea89c offset=dc bits=0):
   test_buffering_in_loop::micro@18 (line 27)
PcDesc(pc=0x000074a37c5ea8a1 offset=e1 bits=0):
   test_buffering_in_loop::micro@21 (line 27)
PcDesc(pc=0x000074a37c5ea8be offset=fe bits=0):
   test_buffering_in_loop::micro@4 (line 25)
PcDesc(pc=0x000074a37c5ea8c6 offset=106 bits=0):
   test_buffering_in_loop::micro@35 (line 30)
PcDesc(pc=0x000074a37c5ea900 offset=140 bits=0):
   test_buffering_in_loop::micro@4 (line 25)
   Locals
    - l0: stack[8],oop
    - l1: stack[4]
    - l2: stack[0]
    - l3: reg rbp [10],int
PcDesc(pc=0x000074a37c5ea91c offset=15c bits=0):
   test_buffering_in_loop::micro@18 (line 27)
PcDesc(pc=0x000074a37c5ea938 offset=178 bits=0):
   test_buffering_in_loop::micro@30 (line 30)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: obj[109]
   Objects
    - 0: R obj[109], MyValue
        Fields: 0, 0
PcDesc(pc=0x000074a37c5ea954 offset=194 bits=0):
   test_buffering_in_loop::micro@18 (line 27)
PcDesc(pc=0x000074a37c5ea9c1 offset=201 bits=0):
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
oop maps:ImmutableOopMapSet contains 4 OopMaps

ImmutableOopMap {rbx=Oop } pc offsets: 139 
ImmutableOopMap {rbp=Oop } pc offsets: 212 
ImmutableOopMap {[8]=Oop } pc offsets: 320 
ImmutableOopMap {} pc offsets: 376 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
scopes:
ScopeDesc(pc=0x000074a37c5ea830 offset=70):
   test_buffering_in_loop::micro@4 (line 25)
ScopeDesc(pc=0x000074a37c5ea845 offset=85):
   test_buffering_in_loop::micro@26 (line 25)
ScopeDesc(pc=0x000074a37c5ea84b offset=8b):
   test_buffering_in_loop::micro@26 (line 25)  reexecute=true
   Locals
    - l0: reg rbx [6],oop
    - l1: reg r13 [26],int
    - l2: reg xmm1 [96]
    - l3: reg rbp [10],int
ScopeDesc(pc=0x000074a37c5ea84e offset=8e):
   test_buffering_in_loop::micro@26 (line 25)
ScopeDesc(pc=0x000074a37c5ea853 offset=93):
   test_buffering_in_loop::micro@4 (line 25)
ScopeDesc(pc=0x000074a37c5ea858 offset=98):
   test_buffering_in_loop::micro@6 (line 25)
ScopeDesc(pc=0x000074a37c5ea860 offset=a0):
   test_buffering_in_loop::micro@13 (line 26)
ScopeDesc(pc=0x000074a37c5ea86f offset=af):
   test_buffering_in_loop::micro@18 (line 27)
ScopeDesc(pc=0x000074a37c5ea880 offset=c0):
   test_buffering_in_loop::micro@4 (line 25)
ScopeDesc(pc=0x000074a37c5ea894 offset=d4):
   test_buffering_in_loop::micro@18 (line 27)
   Locals
    - l0: obj[79]
    - l1: stack[4]
    - l2: empty
    - l3: stack[8]
   Expression stack
    - @0: stack[0]
   Objects
    - 0: R obj[79], MyValue
        Fields: stack[16], stack[20]
ScopeDesc(pc=0x000074a37c5ea89c offset=dc):
   test_buffering_in_loop::micro@18 (line 27)
ScopeDesc(pc=0x000074a37c5ea8a1 offset=e1):
   test_buffering_in_loop::micro@21 (line 27)
ScopeDesc(pc=0x000074a37c5ea8be offset=fe):
   test_buffering_in_loop::micro@4 (line 25)
ScopeDesc(pc=0x000074a37c5ea8c6 offset=106):
   test_buffering_in_loop::micro@35 (line 30)
ScopeDesc(pc=0x000074a37c5ea900 offset=140):
   test_buffering_in_loop::micro@4 (line 25)
   Locals
    - l0: stack[8],oop
    - l1: stack[4]
    - l2: stack[0]
    - l3: reg rbp [10],int
ScopeDesc(pc=0x000074a37c5ea91c offset=15c):
   test_buffering_in_loop::micro@18 (line 27)
ScopeDesc(pc=0x000074a37c5ea938 offset=178):
   test_buffering_in_loop::micro@30 (line 30)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: obj[109]
   Objects
    - 0: R obj[109], MyValue
        Fields: 0, 0
ScopeDesc(pc=0x000074a37c5ea954 offset=194):
   test_buffering_in_loop::micro@18 (line 27)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
relocations:
         @0x000074a2f023f4e0: 0020
relocInfo@0x000074a2f023f4e0 [type=0(none) addr=0x000074a37c5ea7c0 offset=32]
         @0x000074a2f023f4e2: 3100
relocInfo@0x000074a2f023f4e2 [type=6(runtime_call) addr=0x000074a37c5ea7c0 offset=0 format=1] | [destination=0x000074a380f2c9a4] os::breakpoint()
         @0x000074a2f023f4e4: 804e
relocInfo@0x000074a2f023f4e4 [type=16(post_call_nop) addr=0x000074a37c5ea80e offset=78]
         @0x000074a2f023f4e6: 78016315
relocInfo@0x000074a2f023f4e8 [type=12(metadata) addr=0x000074a37c5ea823 offset=21 format=3 data=1] | [metadata_addr=0x000074a2f023f528 *=0x000074a30f041238]metadata_value=0x000074a30f041238: 'MyValue'
         @0x000074a2f023f4ea: 5028
relocInfo@0x000074a2f023f4ea [type=10(poll) addr=0x000074a37c5ea84b offset=40]
         @0x000074a2f023f4ec: 2144
relocInfo@0x000074a2f023f4ec [type=4(static_call) addr=0x000074a37c5ea88f offset=68 format=1] | [destination=0x000074a37c5664e0 metadata=0x0000000000000000] Blob::Shared Runtime resolve_static_call_blob
         @0x000074a2f023f4ee: 8005
relocInfo@0x000074a2f023f4ee [type=16(post_call_nop) addr=0x000074a37c5ea894 offset=5]
         @0x000074a2f023f4f0: 492a
relocInfo@0x000074a2f023f4f0 [type=9(section_word) addr=0x000074a37c5ea8be offset=42 format=1] | [target=0x000074a37c5ea7a0]
         @0x000074a2f023f4f2: 580d
relocInfo@0x000074a2f023f4f2 [type=11(poll_return) addr=0x000074a37c5ea8cb offset=13]
         @0x000074a2f023f4f4: 3130
relocInfo@0x000074a2f023f4f4 [type=6(runtime_call) addr=0x000074a37c5ea8fb offset=48 format=1] | [destination=0x000074a37c4728e0] UncommonTrapBlob
         @0x000074a2f023f4f6: 8005
relocInfo@0x000074a2f023f4f6 [type=16(post_call_nop) addr=0x000074a37c5ea900 offset=5]
         @0x000074a2f023f4f8: 783c3808
relocInfo@0x000074a2f023f4fa [type=7(external_word) addr=0x000074a37c5ea908 offset=8 data=60] | [target=0x000074a2f02f8b70]
         @0x000074a2f023f4fc: 310e
relocInfo@0x000074a2f023f4fc [type=6(runtime_call) addr=0x000074a37c5ea916 offset=14 format=1] | [destination=0x000074a380d89c48] MacroAssembler::debug64(char*, long, long*)
         @0x000074a2f023f4fe: 310e
relocInfo@0x000074a2f023f4fe [type=6(runtime_call) addr=0x000074a37c5ea924 offset=14 format=1] | [destination=0x000074a37c5a9d60] C2 Runtime rethrow
         @0x000074a2f023f500: 310f
relocInfo@0x000074a2f023f500 [type=6(runtime_call) addr=0x000074a37c5ea933 offset=15 format=1] | [destination=0x000074a37c4728e0] UncommonTrapBlob
         @0x000074a2f023f502: 8005
relocInfo@0x000074a2f023f502 [type=16(post_call_nop) addr=0x000074a37c5ea938 offset=5]
         @0x000074a2f023f504: 783c3808
relocInfo@0x000074a2f023f506 [type=7(external_word) addr=0x000074a37c5ea940 offset=8 data=60] | [target=0x000074a2f02f8b70]
         @0x000074a2f023f508: 310e
relocInfo@0x000074a2f023f508 [type=6(runtime_call) addr=0x000074a37c5ea94e offset=14 format=1] | [destination=0x000074a380d89c48] MacroAssembler::debug64(char*, long, long*)
         @0x000074a2f023f50a: 78894006
relocInfo@0x000074a2f023f50c [type=8(internal_word) addr=0x000074a37c5ea954 offset=6 data=137] | [target=0x000074a37c5ea8cb]
         @0x000074a2f023f50e: 3111
relocInfo@0x000074a2f023f50e [type=6(runtime_call) addr=0x000074a37c5ea965 offset=17 format=1] | [destination=0x000074a37c575760] SafepointBlob
         @0x000074a2f023f510: 3105
relocInfo@0x000074a2f023f510 [type=6(runtime_call) addr=0x000074a37c5ea96a offset=5 format=1] | [destination=0x000074a37c4e00e0] Stub::method_entry_barrier
         @0x000074a2f023f512: 000e
relocInfo@0x000074a2f023f512 [type=0(none) addr=0x000074a37c5ea978 offset=14]
         @0x000074a2f023f514: 7c01ff312800
relocInfo@0x000074a2f023f518 [type=5(static_stub) addr=0x000074a37c5ea978 offset=0 data=-207] | [static_call=0x000074a37c5ea88f]
         @0x000074a2f023f51a: 6000
relocInfo@0x000074a2f023f51a [type=12(metadata) addr=0x000074a37c5ea978 offset=0] | [metadata_addr=0x000074a37c5ea97a *=0x0000000000000000]
         @0x000074a2f023f51c: 310a
relocInfo@0x000074a2f023f51c [type=6(runtime_call) addr=0x000074a37c5ea982 offset=10 format=1] | [destination=0x000074a37c5ea982] nmethod
         @0x000074a2f023f51e: 3105
relocInfo@0x000074a2f023f51e [type=6(runtime_call) addr=0x000074a37c5ea987 offset=5 format=1] | [destination=0x000074a37c599060] ExceptionBlob
         @0x000074a2f023f520: 310f
relocInfo@0x000074a2f023f520 [type=6(runtime_call) addr=0x000074a37c5ea996 offset=15 format=1] | [destination=0x000074a37c575a80] DeoptimizationBlob
         @0x000074a2f023f522: 0000
relocInfo@0x000074a2f023f522 [type=0(none) addr=0x000074a37c5ea996 offset=0]
         @0x000074a2f023f524: 0000
relocInfo@0x000074a2f023f524 [type=0(none) addr=0x000074a37c5ea996 offset=0]
         @0x000074a2f023f526: 0000
relocInfo@0x000074a2f023f526 [type=0(none) addr=0x000074a37c5ea996 offset=0]
         @0x000074a2f023f528: 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Dependencies:
Dependency of type evol_method
  method  = *{method} {0x000074a304402548} 'micro' '(LMyValue;I)F' in 'test_buffering_in_loop'
Dependency of type evol_method
  method  = {method} {0x000074a3044029d0} 'getAccum' '()F' in 'MyValue'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ExceptionHandlerTable (size = 24 bytes)
catch_pco = 212 (pc=0x000074a37c5ea894, 1 entries)
  bci -1 at scope depth 0 -> pco 348 (pc=0x000074a37c5ea91c)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ImplicitExceptionTable (size = 1 entries, 12 bytes):
{
   < 0x000074a37c5ea8b4, 0x000074a37c5ea929 > 
}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded oops:
#0: 0x0000000000000000 nullptr-oop
#1: 0x00000000c8d58808 a 'java/lang/Class'{0x00000000c8d58808} = 'MyValue'
#2: 0x00000000c8e67928 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x00000000c8e67928}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded metadata:
#0: 0x0000000000000000 nullptr-oop
#1: 0x000074a30f041238 'MyValue'
#2: 0x000074a304402548 {method} {0x000074a304402548} 'micro' '(LMyValue;I)F' in 'test_buffering_in_loop'
#3: 0x000074a3044029d0 {method} {0x000074a3044029d0} 'getAccum' '()F' in 'MyValue'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
AFTER: AFTER_PARSING
   0  Root  === 0 59 70 81 92 149 237 286 287  |204  [[ 0 1 3 11 13 14 37 54 65 76 87 106 132 133 144 158 282 232 168 206 207 ]] 
   1  Con  === 0  [[ ]]  #top
   3  Start  === 3 0  [[ 3 5 6 7 8 9 15 22 23 24 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:bool, 6:float, 7:float, 8:int}
   5  Parm  === 3  [[ 18 ]] Control !jvms: test_buffering_in_loop::micro @ bci:-1 (line 24)
   6  Parm  === 3  [[ 88 77 95 217 55 66 ]] I_O !jvms: test_buffering_in_loop::micro @ bci:-1 (line 24)
   7  Parm  === 3  [[ 88 77 66 55 96 218 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !jvms: test_buffering_in_loop::micro @ bci:-1 (line 24)
   8  Parm  === 3  [[ 287 286 233 237 115 59 55 70 66 81 77 92 88 145 149 135 ]] FramePtr !jvms: test_buffering_in_loop::micro @ bci:-1 (line 24)
   9  Parm  === 3  [[ 287 286 233 145 88 55 66 77 ]] ReturnAdr !jvms: test_buffering_in_loop::micro @ bci:-1 (line 24)
  11  ConP  === 0  [[ 12 220 197 127 ]]  #null
  12  InlineType  === _ 11 13 15 22 23  [[ 135 135 145 135 55 66 77 88 145 ]]  #MyValue:exact *  Oop:MyValue:exact * !jvms: test_buffering_in_loop::micro @ bci:-1 (line 24)
  13  ConI  === 0  [[ 12 16 98 88 198 41 221 55 55 66 66 77 77 88 135 ]]  #int:0
  14  ConI  === 0  [[ 50 61 72 83 178 198 203 ]]  #int:1
  15  Parm  === 3  [[ 12 16 219 178 196 ]] Parm0: bool !jvms: test_buffering_in_loop::micro @ bci:-1 (line 24)
  16  CmpI  === _ 15 13  [[ 17 ]]  !jvms: test_buffering_in_loop::micro @ bci:-1 (line 24)
  17  Bool  === _ 16  [[ 18 123 229 ]] [ne] !jvms: test_buffering_in_loop::micro @ bci:-1 (line 24)
  18  If  === 5 17  [[ 19 20 ]] P=0.999000, C=-1.000000 !jvms: test_buffering_in_loop::micro @ bci:-1 (line 24)
  19  IfFalse  === 18  [[ 21 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:-1 (line 24)
  20  IfTrue  === 18  [[ 21 ]] #1 !jvms: test_buffering_in_loop::micro @ bci:-1 (line 24)
  21  Region  === 21 20 19  [[ 21 38 ]]  !jvms: test_buffering_in_loop::micro @ bci:-1 (line 24)
  22  Parm  === 3  [[ 12 280 163 178 219 196 ]] Parm1: float !jvms: test_buffering_in_loop::micro @ bci:-1 (line 24)
  23  Parm  === 3  [[ 12 280 170 178 219 196 ]] Parm2: float !jvms: test_buffering_in_loop::micro @ bci:-1 (line 24)
  24  Parm  === 3  [[ 204 115 145 88 135 41 210 55 55 66 66 77 77 88 ]] Parm3: int !jvms: test_buffering_in_loop::micro @ bci:-1 (line 24)
  37  ConF  === 0  [[ 97 88 55 66 77 ]]  #ftcon:0.000000
  38  Region  === _ 21  [[ 44 ]] #reducible  !jvms: test_buffering_in_loop::micro @ bci:4 (line 25)
  41  CmpI  === _ 24 13  [[ 43 ]]  !orig=39 !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
  43  Bool  === _ 41  [[ 44 ]] [le] !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
  44  If  === 38 43  [[ 45 46 ]] P=0.004204, C=56140.000000 !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
  45  IfTrue  === 44  [[ 49 ]] #1 !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
  46  IfFalse  === 44  [[ 50 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
  49  Region  === 49 214 45  [[ 49 229 217 218 220 221 ]] #reducible  !jvms: test_buffering_in_loop::micro @ bci:29 (line 30)
  50  ParsePredicate  === 46 14  [[ 51 60 ]]  #Loop  !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
  51  IfFalse  === 50  [[ 55 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
  54  ConI  === 0  [[ 55 ]]  #int:-146
  55  CallStaticJava  === 51 6 7 8 9 (54 12 24 37 13 13 24 ) [[ 56 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 test_buffering_in_loop::micro @ bci:6 (line 25) reexecute !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
  56  Proj  === 55  [[ 59 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
  59  Halt  === 56 1 1 8 1  [[ 0 ]]  !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
  60  IfTrue  === 50  [[ 61 ]] #1 !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
  61  ParsePredicate  === 60 14  [[ 62 71 ]]  #Profiled Loop  !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
  62  IfFalse  === 61  [[ 66 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
  65  ConI  === 0  [[ 66 ]]  #int:-66
  66  CallStaticJava  === 62 6 7 8 9 (65 12 24 37 13 13 24 ) [[ 67 ]] # Static uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 test_buffering_in_loop::micro @ bci:6 (line 25) reexecute !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
  71  IfTrue  === 61  [[ 72 ]] #1 !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
  72  ParsePredicate  === 71 14  [[ 73 82 ]]  #Auto_Vectorization_Check  !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
  73  IfFalse  === 72  [[ 77 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
  76  ConI  === 0  [[ 77 ]]  #int:-74
  77  CallStaticJava  === 73 6 7 8 9 (76 12 24 37 13 13 24 ) [[ 78 ]] # Static uncommon_trap(reason='auto_vectorization_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 test_buffering_in_loop::micro @ bci:6 (line 25) reexecute !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
  78  Proj  === 77  [[ 81 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
  81  Halt  === 78 1 1 8 1  [[ 0 ]]  !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
  82  IfTrue  === 72  [[ 83 ]] #1 !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
  83  ParsePredicate  === 82 14  [[ 84 93 ]]  #Loop Limit Check  !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
  84  IfFalse  === 83  [[ 88 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
  87  ConI  === 0  [[ 88 ]]  #int:-154
  88  CallStaticJava  === 84 6 7 8 9 (87 12 24 37 13 13 24 ) [[ 89 ]] # Static uncommon_trap(reason='loop_limit_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 test_buffering_in_loop::micro @ bci:6 (line 25) reexecute !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
  89  Proj  === 88  [[ 92 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
  92  Halt  === 89 1 1 8 1  [[ 0 ]]  !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
  93  IfTrue  === 83  [[ 94 ]] #1 !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
  94  Region  === 94 _ 93  [[ 94 99 95 96 97 98 ]] #reducible  !jvms: test_buffering_in_loop::micro @ bci:9 (line 26)
  95  Phi  === 94 _ 6  [[ 100 ]]  #abIO !jvms: test_buffering_in_loop::micro @ bci:9 (line 26)
  96  Phi  === 94 _ 7  [[ 101 ]]  #memory  Memory: @BotPTR *+bot, idx=Bot; !jvms: test_buffering_in_loop::micro @ bci:9 (line 26)
  97  Phi  === 94 _ 37  [[ 102 ]]  #float !jvms: test_buffering_in_loop::micro @ bci:9 (line 26)
  98  Phi  === 94 _ 13  [[ 103 ]]  #int !jvms: test_buffering_in_loop::micro @ bci:9 (line 26)
  99  Region  === 99 213 94  [[ 99 109 100 101 102 103 ]] #reducible  !jvms: test_buffering_in_loop::micro @ bci:9 (line 26)
 100  Phi  === 99 194 95  [[ 128 135 194 ]]  #abIO !jvms: test_buffering_in_loop::micro @ bci:9 (line 26)
 101  Phi  === 99 195 96  [[ 156 104 195 156 134 135 142 ]]  #memory  Memory: @BotPTR *+bot, idx=Bot; !jvms: test_buffering_in_loop::micro @ bci:9 (line 26)
 102  Phi  === 99 202 97  [[ 115 193 202 145 135 ]]  #float !jvms: test_buffering_in_loop::micro @ bci:9 (line 26)
 103  Phi  === 99 203 98  [[ 115 145 203 107 135 ]]  #int !jvms: test_buffering_in_loop::micro @ bci:9 (line 26)
 104  MergeMem  === _ 1 101 1  [[ 129 ]]  { - }  Memory: @BotPTR *+bot, idx=Bot; !jvms: test_buffering_in_loop::micro @ bci:9 (line 26)
 106  ConI  === 0  [[ 107 ]]  #int:500
 107  CmpI  === _ 103 106  [[ 108 ]]  !jvms: test_buffering_in_loop::micro @ bci:13 (line 26)
 108  Bool  === _ 107  [[ 109 ]] [le] !jvms: test_buffering_in_loop::micro @ bci:13 (line 26)
 109  If  === 99 108  [[ 110 111 ]] P=0.982328, C=55907.000000 !jvms: test_buffering_in_loop::micro @ bci:13 (line 26)
 110  IfTrue  === 109  [[ 114 ]] #1 !jvms: test_buffering_in_loop::micro @ bci:13 (line 26)
 111  IfFalse  === 109  [[ 123 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:13 (line 26)
 114  Region  === 114 185 110  [[ 114 209 194 195 197 198 204 202 ]] #reducible  !jvms: test_buffering_in_loop::micro @ bci:23 (line 25)
 115  CallStaticJava  === 126 128 129 8 1 (178 178 24 1 103 102 ) [[ 179 180 181 190 ]] # Static  test_buffering_in_loop::leaf float ( MyAbsValue * ) test_buffering_in_loop::micro @ bci:18 (line 27) !jvms: test_buffering_in_loop::micro @ bci:18 (line 27)
 123  If  === 111 17  [[ 124 125 ]] P=0.999000, C=-1.000000 !jvms: test_buffering_in_loop::micro @ bci:18 (line 27)
 124  IfFalse  === 123  [[ 126 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:18 (line 27)
 125  IfTrue  === 123  [[ 135 ]] #1 !jvms: test_buffering_in_loop::micro @ bci:18 (line 27)
 126  Region  === 126 _ 124 174  [[ 126 127 128 129 115 ]]  !jvms: test_buffering_in_loop::micro @ bci:18 (line 27)
 127  Phi  === 126 1 11 157  [[ 178 197 ]]  #MyValue:exact *  Oop:MyValue:exact * !jvms: test_buffering_in_loop::micro @ bci:18 (line 27)
 128  Phi  === 126 1 100 151  [[ 115 ]]  #abIO !jvms: test_buffering_in_loop::micro @ bci:18 (line 27)
 129  Phi  === 126 1 104 176  [[ 115 ]]  #memory  Memory: @BotPTR *+bot, idx=Bot; !jvms: test_buffering_in_loop::micro @ bci:18 (line 27)
 132  ConP  === 0  [[ 135 ]]  #precise MyValue: 0x000074a2f0274a88:Constant:exact *  Klass:precise MyValue: 0x000074a2f0274a88:Constant:exact *
 133  ConL  === 0  [[ 135 ]]  #long:24
 134  MergeMem  === _ 1 101 155 155 155 155 155  [[ 173 ]]  { N155:rawptr:BotPTR N155:java/lang/Object * N155:java/lang/Object+8 * [narrowklass] N155:MyValue:exact+16 * N155:MyValue:exact+20 * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: test_buffering_in_loop::micro @ bci:18 (line 27)
 135  Allocate  === 125 100 101 8 1 (133 132 13 1 1 12 _ _ 12 24 1 103 102 12 ) [[ 136 137 138 150 151 152 ]]  rawptr:NotNull ( int:>=0, java/lang/Object:NotNull *, bool, top, bool, bottom, java/lang/Object:NotNull *, long ) allocationKlass:MyValue test_buffering_in_loop::micro @ bci:18 (line 27) reexecute !jvms: test_buffering_in_loop::micro @ bci:18 (line 27)
 136  Proj  === 135  [[ 139 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:18 (line 27)
 137  Proj  === 135  [[ 142 ]] #2 (i_o_use)  Memory: @rawptr:BotPTR, idx=Raw; !jvms: test_buffering_in_loop::micro @ bci:18 (line 27)
 138  Proj  === 135  [[ 139 145 ]] #1 (i_o_use) !jvms: test_buffering_in_loop::micro @ bci:18 (line 27)
 139  Catch  === 136 138  [[ 140 141 ]]  !jvms: test_buffering_in_loop::micro @ bci:18 (line 27)
 140  CatchProj  === 139  [[ 153 163 170 ]] #0@bci -1  !jvms: test_buffering_in_loop::micro @ bci:18 (line 27)
 141  CatchProj  === 139  [[ 145 ]] #1@bci -1  !jvms: test_buffering_in_loop::micro @ bci:18 (line 27)
 142  MergeMem  === _ 1 101 137  [[ 145 ]]  { N137:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: test_buffering_in_loop::micro @ bci:18 (line 27)
 144  ConI  === 0  [[ 145 ]]  #int:-113
 145  CallStaticJava  === 141 138 142 8 9 (144 12 24 1 103 102 12 ) [[ 146 ]] # Static uncommon_trap(reason='unhandled' action='none' debug_id='0')  void ( int ) C=0.000100 test_buffering_in_loop::micro @ bci:18 (line 27) reexecute !jvms: test_buffering_in_loop::micro @ bci:18 (line 27)
 146  Proj  === 145  [[ 149 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:18 (line 27)
 149  Halt  === 146 1 1 8 1  [[ 0 ]]  !jvms: test_buffering_in_loop::micro @ bci:18 (line 27)
 150  Proj  === 135  [[ 156 163 170 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !jvms: test_buffering_in_loop::micro @ bci:18 (line 27)
 151  Proj  === 135  [[ 128 ]] #1 !jvms: test_buffering_in_loop::micro @ bci:18 (line 27)
 152  Proj  === 135  [[ 153 157 164 171 173 ]] #5 !jvms: test_buffering_in_loop::micro @ bci:18 (line 27)
 153  Initialize  === 140 1 156 1 1 152 163 170  [[ 154 155 ]]  !jvms: test_buffering_in_loop::micro @ bci:18 (line 27)
 154  Proj  === 153  [[ 173 157 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:18 (line 27)
 155  Proj  === 153  [[ 134 134 134 134 134 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !jvms: test_buffering_in_loop::micro @ bci:18 (line 27)
 156  MergeMem  === _ 1 150 1 1 1 101 101  [[ 153 ]]  { - - - N101:MyValue:exact+16 * N101:MyValue:exact+20 * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: test_buffering_in_loop::micro @ bci:18 (line 27)
 157  CheckCastPP  === 154 152  [[ 127 ]]  #MyValue:NotNull:exact *  Oop:MyValue:NotNull:exact * !jvms: test_buffering_in_loop::micro @ bci:18 (line 27)
 158  ConL  === 0  [[ 164 ]]  #long:16
 163  StoreF  === 140 150 164 22  [[ 153 ]]  @MyValue:exact+16 *, name=f1, idx=6;  Memory: @rawptr:NotNull, idx=Raw; !orig=162 !jvms: test_buffering_in_loop::micro @ bci:18 (line 27)
 164  AddP  === _ 1 152 158  [[ 163 ]]  !jvms: test_buffering_in_loop::micro @ bci:18 (line 27)
 168  ConL  === 0  [[ 171 ]]  #long:20
 170  StoreF  === 140 150 171 23  [[ 153 ]]  @MyValue:exact+20 *, name=f2, idx=7;  Memory: @rawptr:NotNull, idx=Raw; !orig=169 !jvms: test_buffering_in_loop::micro @ bci:18 (line 27)
 171  AddP  === _ 1 152 168  [[ 170 ]]  !jvms: test_buffering_in_loop::micro @ bci:18 (line 27)
 173  MemBarStoreStore  === 154 1 134 1 1 152  [[ 174 175 ]]  !jvms: test_buffering_in_loop::micro @ bci:18 (line 27)
 174  Proj  === 173  [[ 126 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:18 (line 27)
 175  Proj  === 173  [[ 176 ]] #2  Memory: @BotPTR *+bot, idx=Bot; !jvms: test_buffering_in_loop::micro @ bci:18 (line 27)
 176  MergeMem  === _ 1 175 1  [[ 129 ]]  { - }  Memory: @BotPTR *+bot, idx=Bot; !jvms: test_buffering_in_loop::micro @ bci:18 (line 27)
 178  InlineType  === _ 127 14 15 22 23  [[ 115 115 ]]  #MyValue:exact *  Oop:MyValue:exact * !orig=12 !jvms: test_buffering_in_loop::micro @ bci:-1 (line 24)
 179  Proj  === 115  [[ 184 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:18 (line 27)
 180  Proj  === 115  [[ 287 184 194 189 ]] #1 !jvms: test_buffering_in_loop::micro @ bci:18 (line 27)
 181  Proj  === 115  [[ 287 195 ]] #2  Memory: @BotPTR *+bot, idx=Bot; !jvms: test_buffering_in_loop::micro @ bci:18 (line 27)
 184  Catch  === 179 180  [[ 185 186 ]]  !jvms: test_buffering_in_loop::micro @ bci:18 (line 27)
 185  CatchProj  === 184  [[ 114 ]] #0@bci -1  !jvms: test_buffering_in_loop::micro @ bci:18 (line 27)
 186  CatchProj  === 184  [[ 287 189 ]] #1@bci -1  !jvms: test_buffering_in_loop::micro @ bci:18 (line 27)
 189  CreateEx  === 186 180  [[ 287 ]]  #java/lang/Throwable (java/io/Serializable):NotNull *  Oop:java/lang/Throwable (java/io/Serializable):NotNull * !jvms: test_buffering_in_loop::micro @ bci:18 (line 27)
 190  Proj  === 115  [[ 193 ]] #5 !jvms: test_buffering_in_loop::micro @ bci:18 (line 27)
 193  AddF  === _ 102 190  [[ 202 ]]  !jvms: test_buffering_in_loop::micro @ bci:21 (line 27)
 194  Phi  === 114 180 100  [[ 100 217 ]]  #abIO !jvms: test_buffering_in_loop::micro @ bci:23 (line 25)
 195  Phi  === 114 181 101  [[ 101 218 204 209 ]]  #memory  Memory: @BotPTR *+bot, idx=Bot; !jvms: test_buffering_in_loop::micro @ bci:23 (line 25)
 196  InlineType  === _ 197 198 15 22 23  [[ 204 ]]  #MyValue:exact *  Oop:MyValue:exact * !orig=12 !jvms: test_buffering_in_loop::micro @ bci:-1 (line 24)
 197  Phi  === 114 127 11  [[ 196 220 ]]  #MyValue:exact *  Oop:MyValue:exact * !jvms: test_buffering_in_loop::micro @ bci:23 (line 25)
 198  Phi  === 114 14 13  [[ 196 221 ]]  #bool !jvms: test_buffering_in_loop::micro @ bci:23 (line 25)
 202  Phi  === 114 193 102  [[ 102 204 ]]  #float !jvms: test_buffering_in_loop::micro @ bci:23 (line 25)
 203  AddI  === _ 103 14  [[ 103 204 210 ]]  !jvms: test_buffering_in_loop::micro @ bci:23 (line 25)
 204  SafePoint  === 114 1 195 1 1 209 196 24 202 203  [[ 212 0 ]]  SafePoint  !jvms: test_buffering_in_loop::micro @ bci:26 (line 25)
 206  ThreadLocal  === 0  [[ 208 ]]  !jvms: test_buffering_in_loop::micro @ bci:26 (line 25)
 207  ConL  === 0  [[ 208 ]]  #long:48
 208  AddP  === _ 1 206 207  [[ 209 ]]  !jvms: test_buffering_in_loop::micro @ bci:26 (line 25)
 209  LoadP  === 114 195 208  [[ 204 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !jvms: test_buffering_in_loop::micro @ bci:26 (line 25)
 210  CmpI  === _ 203 24  [[ 211 ]]  !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
 211  Bool  === _ 210  [[ 212 ]] [lt] !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
 212  If  === 204 211  [[ 213 214 ]] P=0.995796, C=55907.000000 !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
 213  IfTrue  === 212  [[ 99 ]] #1 !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
 214  IfFalse  === 212  [[ 49 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
 217  Phi  === 49 194 6  [[ 286 233 ]]  #abIO !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
 218  Phi  === 49 195 7  [[ 286 233 ]]  #memory  Memory: @BotPTR *+bot, idx=Bot; !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
 219  InlineType  === _ 220 221 15 22 23  [[ 233 ]]  #MyValue:exact *  Oop:MyValue:exact * !orig=12 !jvms: test_buffering_in_loop::micro @ bci:-1 (line 24)
 220  Phi  === 49 197 11  [[ 219 ]]  #MyValue:exact *  Oop:MyValue:exact * !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
 221  Phi  === 49 198 13  [[ 219 ]]  #bool !jvms: test_buffering_in_loop::micro @ bci:6 (line 25)
 229  If  === 49 17  [[ 230 231 ]] P=0.999999, C=-1.000000 !jvms: test_buffering_in_loop::micro @ bci:30 (line 30)
 230  IfTrue  === 229  [[ 286 ]] #1 !jvms: test_buffering_in_loop::micro @ bci:30 (line 30)
 231  IfFalse  === 229  [[ 233 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:30 (line 30)
 232  ConI  === 0  [[ 233 ]]  #int:-10
 233  CallStaticJava  === 231 217 218 8 9 (232 1 1 1 1 219 ) [[ 234 ]] # Static uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 test_buffering_in_loop::micro @ bci:30 (line 30) !jvms: test_buffering_in_loop::micro @ bci:30 (line 30)
 234  Proj  === 233  [[ 237 ]] #0 !jvms: test_buffering_in_loop::micro @ bci:30 (line 30)
 237  Halt  === 234 1 1 8 1  [[ 0 ]]  !jvms: test_buffering_in_loop::micro @ bci:30 (line 30)
 280  AddF  === _ 22 23  [[ 283 ]]  !jvms: MyValue::getAccum @ bci:8 (line 14) test_buffering_in_loop::micro @ bci:30 (line 30)
 282  ConF  === 0  [[ 283 ]]  #ftcon:10.000000
 283  AddF  === _ 280 282  [[ 286 ]]  !jvms: test_buffering_in_loop::micro @ bci:35 (line 30)
 286  Return  === 230 217 218 8 9 returns 283  [[ 0 ]] 
 287  Rethrow  === 186 180 181 8 9 exception 189  [[ 0 ]] 

============================= C2-compiled nmethod ==============================
#r018 rsi   : parm 0: bool
#r064 xmm0   : parm 1: float
#r080 xmm1   : parm 2: float
#r016 rdx   : parm 3: int
# -- Old rsp -- Framesize: 64 --
#r623 rsp+60: in_preserve
#r622 rsp+56: return address
#r621 rsp+52: in_preserve
#r620 rsp+48: saved fp register
#r619 rsp+44: Fixed slot 3
#r618 rsp+40: Fixed slot 2
#r617 rsp+36: Fixed slot 1
#r616 rsp+32: Fixed slot 0
#r631 rsp+28: spill
#r630 rsp+24: spill
#r629 rsp+20: spill
#r628 rsp+16: spill
#r627 rsp+12: spill
#r626 rsp+ 8: spill
#r625 rsp+ 4: spill
#r624 rsp+ 0: spill
#
----------------------- MetaData before Compile_id = 102 ------------------------
{method}
 - this oop:          0x000074a304402548
 - method holder:     'test_buffering_in_loop'
 - constants:         0x000074a304402050 constant pool [71]/operands[5] {0x000074a304402050} for 'test_buffering_in_loop' cache=0x000074a3044031a0
 - access:            0x9  public static value 
 - flags:             0x16080  queued_for_compilation has_loops_flag has_loops_flag_init has_scalarized_args 
 - name:              'micro'
 - signature:         '(LMyValue;I)F'
 - max stack:         3
 - max locals:        4
 - size of params:    2
 - method size:       16
 - highest level:     4
 - vtable index:      -2
 - i2i entry:         0x000074a37c44ff20
 - adapters:          AHE@0x000074a3782657f0: 0x244319ea i2c: 0x000074a37c5e6960 c2i: 0x000074a37c5e6ec7 c2iVE: 0x000074a37c5e73ab c2iVROE: 0x000074a37c5e6a3f c2iUE: 0x000074a37c5e6a1e c2iUVE: 0x000074a37c5e738a c2iNCI: 0x000074a37c5e73e6
 - compiled entry           0x000074a37c5e6ec7
 - compiled inline entry    0x000074a37c5e73ab
 - compiled inline ro entry 0x000074a37c5e6a3f
 - code size:         37
 - code start:        0x000074a304402518
 - code end (excl):   0x000074a30440253d
 - method data:       0x000074a3044033c0
 - checked ex length: 0
 - linenumber start:  0x000074a30440253d
 - localvar length:   0

------------------------ OptoAssembly for Compile_id = 102 -----------------------
#
#  float ( MyValue:exact *, int )
#
000     N245: #	out( B1 ) <- BLOCK HEAD IS JUNK  Freq: 1
000     MachVEPNode

        nop 	# 4 bytes pad for loops and calls

060     B1: #	out( B13 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
060     # stack bang (144 bytes)
	pushq   rbp	# Save rbp
	subq    rsp, #48	# Create frame

07a     movss   [rsp + #8], XMM1	# spill
080     movss   [rsp + #4], XMM0	# spill
086     movl    [rsp + #0], RSI	# spill
089     testl   RDX, RDX
08b     jle     B13  P=0.004204 C=56140.000000

091     B2: #	out( B8 ) <- in( B1 )  Freq: 0.995796
091     xorl    RBP, RBP	# int
093     xorps   XMM0, XMM0	# float 0.0
097     jmp     B8

09c     B3: #	out( B4 ) <- in( B10 ) top-of-loop Freq: 4.18141
09c     # TLS is in R15
09c     movq    [R15 + #464 (32-bit)], R10	# ptr
0a3     PREFETCHW [R10 + #192 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
0ab     movq    R10, precise MyValue: 0x000074a2f0274a88:Constant:exact *	# ptr
0b5     movq    R10, [R10 + #168 (32-bit)]	# long
0bc     movq    [RSI], R10	# long
0bf     movl    [RSI + #8 (8-bit)], narrowklass: precise MyValue: 0x000074a2f0274a88:Constant:exact *	# compressed klass ptr
0c6     movl    [RSI + #12 (8-bit)], R12	# int (R12_heapbase==0)

0ca     B4: #	out( B5 ) <- in( B12 B3 ) top-of-loop Freq: 4.18183
0ca     movss   XMM1, [rsp + #4]	# spill
0d0     movss   [RSI + #16 (8-bit)], XMM1	# float
0d5     movss   XMM3, [rsp + #8]	# spill
0db     movss   [RSI + #20 (8-bit)], XMM3	# float
0e0     
0e0     MEMBAR-storestore (empty encoding)
0e0     # checkcastPP of RSI

0e0     B5: #	out( B17 B6 ) <- in( B4 B15 )  Freq: 4.18602
0e0     movss   [rsp + #16], XMM0	# spill
0e6     movss   [rsp + #8], XMM3	# spill
0ec     movss   [rsp + #4], XMM1	# spill
0f2     movl    [rsp + #0], R8	# spill
0f6     movl    [rsp + #12], RDX	# spill
        nop 	# 1 bytes pad for loops and calls
0fb     call,static  test_buffering_in_loop::leaf
        # test_buffering_in_loop::micro @ bci:18 (line 27) L[0]=#ScObj0 L[1]=rsp + #12 L[2]=_ L[3]=RBP STK[0]=rsp + #16
        # ScObj0 MyValue={ [is_init :-1]=rsp + #0 [f1 :0]=rsp + #4, [f2 :1]=rsp + #8 }
        # OopMap {off=256/0x100}

108     B6: #	out( B7 ) <- in( B5 )  Freq: 4.18593
        # Block is sole successor of call
108     vaddss  XMM0, XMM0, [RSP + #16 (32-bit)]
10e     movl    RDX, [rsp + #12]	# spill

112     B7: #	out( B13 B8 ) <- in( B6 B8 ) top-of-loop Freq: 236.87
112     incl    RBP	# int
114     cmpl    RBP, RDX
116     jge,s   B13	# loop end  P=0.004204 C=55907.000000

118     B8: #	out( B7 B9 ) <- in( B2 B7 ) Loop( B8-B7 inner ) Freq: 236.87
118     cmpl    RBP, #500
11e     jle,s   B7  P=0.982328 C=55907.000000

120     B9: #	out( B15 B10 ) <- in( B8 )  Freq: 4.18602
120     movl    R8, [rsp + #0]	# spill
124     testl   R8, R8
127     je     B15  P=0.001000 C=-1.000000

12d     B10: #	out( B3 B11 ) <- in( B9 )  Freq: 4.18183
12d     # TLS is in R15
12d     movq    RSI, [R15 + #464 (32-bit)]	# ptr
134     movq    R10, RSI	# spill
137     addq    R10, #24	# ptr
13b     # TLS is in R15
13b     cmpq    R10, [R15 + #480 (32-bit)]	# raw ptr
142     jb,u   B3  P=0.999900 C=-1.000000

148     B11: #	out( B18 B12 ) <- in( B10 )  Freq: 0.000418252
148     movss   [rsp + #0], XMM0	# spill
14d     movl    [rsp + #16], R8	# spill
152     movl    [rsp + #12], RDX	# spill
156     movq    RSI, precise MyValue: 0x000074a2f0274a88:Constant:exact *	# ptr
160     xorl    RDX, RDX	# int
        nop 	# 1 bytes pad for loops and calls
163     call,static  wrapper for: C2 Runtime new_instance
        # test_buffering_in_loop::micro @ bci:18 (line 27) L[0]=#ScObj0 L[1]=rsp + #12 L[2]=_ L[3]=RBP STK[0]=rsp + #0 STK[1]=#ScObj0
        # ScObj0 MyValue={ [is_init :-1]=rsp + #16 [f1 :0]=rsp + #4, [f2 :1]=rsp + #8 }
        # OopMap {off=360/0x168}

170     B12: #	out( B4 ) <- in( B11 )  Freq: 0.000418244
        # Block is sole successor of call
170     movq    RSI, RAX	# spill
173     movl    RDX, [rsp + #12]	# spill
177     movl    R8, [rsp + #16]	# spill
17c     movss   XMM0, [rsp + #0]	# spill
181     jmp     B4

186     B13: #	out( B16 B14 ) <- in( B7 B1 )  Freq: 0.999958
186     movl    R11, [rsp + #0]	# spill
18a     testl   R11, R11
18d     je,s   B16  P=0.000001 C=-1.000000

18f     B14: #	out( N245 ) <- in( B13 )  Freq: 0.999957
18f     movss   XMM0, [rsp + #4]	# spill
195     vaddss  XMM0, XMM0, [RSP + #8 (32-bit)]
19b     # MachConstantBaseNode (empty encoding)
19b     vaddss  XMM0, XMM0, [constant table base + #0]	# load from constant table: float=#10.000000
1a3     addq    rsp, 48	# Destroy frame
	popq    rbp
	cmpq    rsp, poll_offset[r15_thread] 
	ja      #safepoint_stub	# Safepoint: poll for GC

1b2     ret

1b3     B15: #	out( B5 ) <- in( B9 )  Freq: 0.00418596
1b3     xorl    RSI, RSI	# ptr
1b5     movss   XMM1, [rsp + #4]	# spill
1bb     movss   XMM3, [rsp + #8]	# spill
1c1     jmp     B5

1c6     B16: #	out( N245 ) <- in( B13 )  Freq: 1.01324e-06
1c6     movl    RSI, #-10	# int
1cb     movl    RBP, [rsp + #0]	# spill
1ce     movq    [rsp - #8], rax	# 32-bit mem-mem spill
	movl    rax, [rsp + #4]
	movl    [rsp + #0], rax
	movq    rax, [rsp - #8]
1df     call,static  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # test_buffering_in_loop::micro @ bci:30 (line 30) L[0]=_ L[1]=_ L[2]=_ L[3]=_ STK[0]=#ScObj0
        # ScObj0 MyValue={ [is_init :-1]=RBP [f1 :0]=rsp + #0, [f2 :1]=rsp + #8 }
        # OopMap {off=484/0x1e4}
1ec     stop	# ShouldNotReachHere

200     B17: #	out( N245 ) <- in( B5 )  Freq: 4.18602e-05
200     # exception oop is in rax; no code emitted
200     movq    RSI, RAX	# spill
203     addq    rsp, 48	# Destroy frame
	popq    rbp

208     jmp     rethrow_stub

20d     B18: #	out( N245 ) <- in( B11 )  Freq: 4.18252e-09
20d     movl    RSI, #-113	# int
        nop 	# 1 bytes pad for loops and calls
213     call,static  wrapper for: uncommon_trap(reason='unhandled' action='none' debug_id='0')
        # test_buffering_in_loop::micro @ bci:18 (line 27) L[0]=#ScObj0 L[1]=rsp + #12 L[2]=_ L[3]=RBP STK[0]=rsp + #0 STK[1]=#ScObj0
        # ScObj0 MyValue={ [is_init :-1]=rsp + #16 [f1 :0]=rsp + #4, [f2 :1]=rsp + #8 }
        # OopMap {off=536/0x218}
220     stop	# ShouldNotReachHere

--------------------------------------------------------------------------------
----------------------------------- Assembly -----------------------------------

Compiled method (c2) 1127  102             test_buffering_in_loop::micro (37 bytes)
 total in heap  [0x000074a37c5e9108,0x000074a37c5e94d8] = 976
 constants      [0x000074a37c5e9220,0x000074a37c5e9240] = 32
 main code      [0x000074a37c5e9240,0x000074a37c5e94a0] = 608
 stub code      [0x000074a37c5e94a0,0x000074a37c5e94c8] = 40
 oops           [0x000074a37c5e94c8,0x000074a37c5e94d8] = 16
 mutable data [0x000074a2f02fe6f0,0x000074a2f02fe750] = 96
 relocation     [0x000074a2f02fe6f0,0x000074a2f02fe738] = 72
 metadata       [0x000074a2f02fe738,0x000074a2f02fe750] = 24
 immutable data [0x000074a2f02ff3c0,0x000074a2f02ff5f8] = 568
 dependencies   [0x000074a2f02ff3c0,0x000074a2f02ff3c8] = 8
 handler table  [0x000074a2f02ff3c8,0x000074a2f02ff3f8] = 48
 scopes pcs     [0x000074a2f02ff3f8,0x000074a2f02ff538] = 320
 scopes data    [0x000074a2f02ff538,0x000074a2f02ff5f8] = 192

[Disassembly]
--------------------------------------------------------------------------------

[Constant Pool]
             Address          hex4                    hex8      
  0x000074a37c5e9220:   0x41200000      0xf4f4f4f441200000      
  0x000074a37c5e9224:   0xf4f4f4f4                              
  0x000074a37c5e9228:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x000074a37c5e922c:   0xf4f4f4f4                              
  0x000074a37c5e9230:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x000074a37c5e9234:   0xf4f4f4f4                              
  0x000074a37c5e9238:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x000074a37c5e923c:   0xf4f4f4f4                              

--------------------------------------------------------------------------------

[Inline Entry Point]
[Verified Inline Entry Point]
  # {method} {0x000074a304402548} 'micro' '(LMyValue;I)F' in 'test_buffering_in_loop'
  # parm0:    rsi:rsi   = 'MyValue'
  # parm1:    rdx       = int
  #           [sp+0x40]  (sp of caller)
 ;; N245: #	out( B1 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x000074a37c5e9240:   mov    %eax,-0x18000(%rsp)          ;   {other}
  0x000074a37c5e9247:   push   %rbp
  0x000074a37c5e9248:   sub    $0x30,%rsp
  0x000074a37c5e924c:   cmpl   $0x0,0x20(%r15)
  0x000074a37c5e9254:   jne    0x000074a37c5e9494
  0x000074a37c5e925a:   add    $0x30,%rsp
  0x000074a37c5e925e:   pop    %rbp
  0x000074a37c5e925f:   test   %rsi,%rsi
  0x000074a37c5e9262:   je     0x000074a37c5e9272
  0x000074a37c5e9268:   vmovss 0x14(%rsi),%xmm1
  0x000074a37c5e926d:   vmovss 0x10(%rsi),%xmm0
  0x000074a37c5e9272:   test   %rsi,%rsi
  0x000074a37c5e9275:   je     0x000074a37c5e9287
  0x000074a37c5e927b:   mov    $0x1,%rsi
  0x000074a37c5e9282:   jmp    0x000074a37c5e928a
  0x000074a37c5e9287:   xor    %rsi,%rsi
  0x000074a37c5e928a:   mov    %eax,-0x18000(%rsp)
  0x000074a37c5e9291:   push   %rbp
  0x000074a37c5e9292:   sub    $0x30,%rsp
  0x000074a37c5e9296:   jmp    0x000074a37c5e92ba
  0x000074a37c5e929b:   nop
  0x000074a37c5e929c:   nop
  0x000074a37c5e929d:   nop
  0x000074a37c5e929e:   nop
  0x000074a37c5e929f:   nop
[Entry Point]
[Verified Entry Point]
[Verified Inline Entry Point (RO)]
  # parm0:    rsi       = boolean (null marker)
  # parm1:    xmm0      = float
  # parm2:    xmm1      = float
  # parm3:    rdx       = int
  #           [sp+0x40]  (sp of caller)
 ;; B1: #	out( B13 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x000074a37c5e92a0:   mov    %eax,-0x18000(%rsp)
  0x000074a37c5e92a7:   push   %rbp
  0x000074a37c5e92a8:   sub    $0x30,%rsp
  0x000074a37c5e92ac:   cmpl   $0x0,0x20(%r15)
  0x000074a37c5e92b4:   jne    0x000074a37c5e948a           ;*synchronization entry
                                                            ; - test_buffering_in_loop::micro@-1 (line 24)
  0x000074a37c5e92ba:   vmovss %xmm1,0x8(%rsp)
  0x000074a37c5e92c0:   vmovss %xmm0,0x4(%rsp)
  0x000074a37c5e92c6:   mov    %esi,(%rsp)
  0x000074a37c5e92c9:   test   %edx,%edx
  0x000074a37c5e92cb:   jle    0x000074a37c5e93c6           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - test_buffering_in_loop::micro@6 (line 25)
 ;; B2: #	out( B8 ) <- in( B1 )  Freq: 0.995796
  0x000074a37c5e92d1:   xor    %ebp,%ebp
  0x000074a37c5e92d3:   vxorps %xmm0,%xmm0,%xmm0
  0x000074a37c5e92d7:   jmp    0x000074a37c5e9358
 ;; B3: #	out( B4 ) <- in( B10 ) top-of-loop Freq: 4.18141
  0x000074a37c5e92dc:   mov    %r10,0x1d0(%r15)
  0x000074a37c5e92e3:   prefetchw 0xc0(%r10)
  0x000074a37c5e92eb:   movabs $0x74a30f041238,%r10         ;   {metadata('MyValue')}
  0x000074a37c5e92f5:   mov    0xa8(%r10),%r10
  0x000074a37c5e92fc:   mov    %r10,(%rsi)
  0x000074a37c5e92ff:   movl   $0x1041238,0x8(%rsi)         ;   {metadata('MyValue')}
  0x000074a37c5e9306:   mov    %r12d,0xc(%rsi)
 ;; B4: #	out( B5 ) <- in( B12 B3 ) top-of-loop Freq: 4.18183
  0x000074a37c5e930a:   vmovss 0x4(%rsp),%xmm1
  0x000074a37c5e9310:   vmovss %xmm1,0x10(%rsi)
  0x000074a37c5e9315:   vmovss 0x8(%rsp),%xmm3
  0x000074a37c5e931b:   vmovss %xmm3,0x14(%rsi)
 ;; B5: #	out( B17 B6 ) <- in( B4 B15 )  Freq: 4.18602
  0x000074a37c5e9320:   vmovss %xmm0,0x10(%rsp)
  0x000074a37c5e9326:   vmovss %xmm3,0x8(%rsp)
  0x000074a37c5e932c:   vmovss %xmm1,0x4(%rsp)
  0x000074a37c5e9332:   mov    %r8d,(%rsp)
  0x000074a37c5e9336:   mov    %edx,0xc(%rsp)
  0x000074a37c5e933a:   nop
  0x000074a37c5e933b:   call   0x000074a37c5664e0           ; ImmutableOopMap {}
                                                            ;*invokestatic leaf {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - test_buffering_in_loop::micro@18 (line 27)
                                                            ;   {static_call}
  0x000074a37c5e9340:   nopl   0x238(%rax,%rax,1)           ;*invokestatic leaf {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - test_buffering_in_loop::micro@18 (line 27)
                                                            ;   {post_call_nop}
 ;; B6: #	out( B7 ) <- in( B5 )  Freq: 4.18593
  0x000074a37c5e9348:   vaddss 0x10(%rsp),%xmm0,%xmm0       ;*fadd {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - test_buffering_in_loop::micro@21 (line 27)
  0x000074a37c5e934e:   mov    0xc(%rsp),%edx
 ;; B7: #	out( B13 B8 ) <- in( B6 B8 ) top-of-loop Freq: 236.87
  0x000074a37c5e9352:   inc    %ebp                         ;*iinc {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - test_buffering_in_loop::micro@23 (line 25)
  0x000074a37c5e9354:   cmp    %edx,%ebp
  0x000074a37c5e9356:   jge    0x000074a37c5e93c6           ;*iload_3 {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - test_buffering_in_loop::micro@9 (line 26)
 ;; B8: #	out( B7 B9 ) <- in( B2 B7 ) Loop( B8-B7 inner ) Freq: 236.87
  0x000074a37c5e9358:   cmp    $0x1f4,%ebp
  0x000074a37c5e935e:   jle    0x000074a37c5e9352           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - test_buffering_in_loop::micro@13 (line 26)
 ;; B9: #	out( B15 B10 ) <- in( B8 )  Freq: 4.18602
  0x000074a37c5e9360:   mov    (%rsp),%r8d
  0x000074a37c5e9364:   test   %r8d,%r8d
  0x000074a37c5e9367:   je     0x000074a37c5e93f3           ;*invokestatic leaf {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - test_buffering_in_loop::micro@18 (line 27)
 ;; B10: #	out( B3 B11 ) <- in( B9 )  Freq: 4.18183
  0x000074a37c5e936d:   mov    0x1d0(%r15),%rsi
  0x000074a37c5e9374:   mov    %rsi,%r10
  0x000074a37c5e9377:   add    $0x18,%r10
  0x000074a37c5e937b:   cmp    0x1e0(%r15),%r10
  0x000074a37c5e9382:   jb     0x000074a37c5e92dc
 ;; B11: #	out( B18 B12 ) <- in( B10 )  Freq: 0.000418252
  0x000074a37c5e9388:   vmovss %xmm0,(%rsp)
  0x000074a37c5e938d:   mov    %r8d,0x10(%rsp)
  0x000074a37c5e9392:   mov    %edx,0xc(%rsp)
  0x000074a37c5e9396:   movabs $0x74a30f041238,%rsi         ;   {metadata('MyValue')}
  0x000074a37c5e93a0:   xor    %edx,%edx
  0x000074a37c5e93a2:   nop
  0x000074a37c5e93a3:   call   0x000074a37c599960           ; ImmutableOopMap {}
                                                            ;*invokestatic leaf {reexecute=1 rethrow=0 return_oop=1 return_scalarized=0}
                                                            ; - (reexecute) test_buffering_in_loop::micro@18 (line 27)
                                                            ;   {runtime_call C2 Runtime new_instance}
  0x000074a37c5e93a8:   nopl   0x10002a0(%rax,%rax,1)       ;*invokestatic leaf {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - test_buffering_in_loop::micro@18 (line 27)
                                                            ;   {post_call_nop}
 ;; B12: #	out( B4 ) <- in( B11 )  Freq: 0.000418244
  0x000074a37c5e93b0:   mov    %rax,%rsi
  0x000074a37c5e93b3:   mov    0xc(%rsp),%edx
  0x000074a37c5e93b7:   mov    0x10(%rsp),%r8d
  0x000074a37c5e93bc:   vmovss (%rsp),%xmm0
  0x000074a37c5e93c1:   jmp    0x000074a37c5e930a           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - test_buffering_in_loop::micro@6 (line 25)
 ;; B13: #	out( B16 B14 ) <- in( B7 B1 )  Freq: 0.999958
  0x000074a37c5e93c6:   mov    (%rsp),%r11d
  0x000074a37c5e93ca:   test   %r11d,%r11d
  0x000074a37c5e93cd:   je     0x000074a37c5e9406           ;*invokevirtual getAccum {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - test_buffering_in_loop::micro@30 (line 30)
 ;; B14: #	out( N245 ) <- in( B13 )  Freq: 0.999957
  0x000074a37c5e93cf:   vmovss 0x4(%rsp),%xmm0
  0x000074a37c5e93d5:   vaddss 0x8(%rsp),%xmm0,%xmm0
  0x000074a37c5e93db:   vaddss -0x1c3(%rip),%xmm0,%xmm0        # 0x000074a37c5e9220
                                                            ;*fadd {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - test_buffering_in_loop::micro@35 (line 30)
                                                            ;   {section_word}
  0x000074a37c5e93e3:   add    $0x30,%rsp
  0x000074a37c5e93e7:   pop    %rbp
  0x000074a37c5e93e8:   cmp    0x28(%r15),%rsp              ;   {poll_return}
  0x000074a37c5e93ec:   ja     0x000074a37c5e9474
  0x000074a37c5e93f2:   ret    
 ;; B15: #	out( B5 ) <- in( B9 )  Freq: 0.00418596
  0x000074a37c5e93f3:   xor    %esi,%esi
  0x000074a37c5e93f5:   vmovss 0x4(%rsp),%xmm1
  0x000074a37c5e93fb:   vmovss 0x8(%rsp),%xmm3
  0x000074a37c5e9401:   jmp    0x000074a37c5e9320
 ;; B16: #	out( N245 ) <- in( B13 )  Freq: 1.01324e-06
  0x000074a37c5e9406:   mov    $0xfffffff6,%esi
  0x000074a37c5e940b:   mov    (%rsp),%ebp
  0x000074a37c5e940e:   mov    %rax,-0x8(%rsp)
  0x000074a37c5e9413:   mov    0x4(%rsp),%eax
  0x000074a37c5e9417:   mov    %eax,(%rsp)
  0x000074a37c5e941a:   mov    -0x8(%rsp),%rax
  0x000074a37c5e941f:   call   0x000074a37c4728e0           ; ImmutableOopMap {}
                                                            ;*invokevirtual getAccum {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - test_buffering_in_loop::micro@30 (line 30)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000074a37c5e9424:   nopl   0x200031c(%rax,%rax,1)       ;   {post_call_nop}
  0x000074a37c5e942c:   movabs $0x74a2f02ff180,%rdi         ;   {external_word}
  0x000074a37c5e9436:   and    $0xfffffffffffffff0,%rsp
  0x000074a37c5e943a:   call   0x000074a380d89c48           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x000074a37c5e943f:   hlt    
 ;; B17: #	out( N245 ) <- in( B5 )  Freq: 4.18602e-05
  0x000074a37c5e9440:   mov    %rax,%rsi
  0x000074a37c5e9443:   add    $0x30,%rsp
  0x000074a37c5e9447:   pop    %rbp
  0x000074a37c5e9448:   jmp    0x000074a37c5a9d60           ;*invokestatic leaf {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - test_buffering_in_loop::micro@18 (line 27)
                                                            ;   {runtime_call C2 Runtime rethrow}
 ;; B18: #	out( N245 ) <- in( B11 )  Freq: 4.18252e-09
  0x000074a37c5e944d:   mov    $0xffffff8f,%esi
  0x000074a37c5e9452:   nop
  0x000074a37c5e9453:   call   0x000074a37c4728e0           ; ImmutableOopMap {}
                                                            ;*invokestatic leaf {reexecute=1 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - (reexecute) test_buffering_in_loop::micro@18 (line 27)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000074a37c5e9458:   nopl   0x3000350(%rax,%rax,1)       ;   {post_call_nop}
  0x000074a37c5e9460:   movabs $0x74a2f02ff180,%rdi         ;   {external_word}
  0x000074a37c5e946a:   and    $0xfffffffffffffff0,%rsp
  0x000074a37c5e946e:   call   0x000074a380d89c48           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x000074a37c5e9473:   hlt                                 ;*invokestatic leaf {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - test_buffering_in_loop::micro@18 (line 27)
  0x000074a37c5e9474:   movabs $0x74a37c5e93e8,%r10         ;   {internal_word}
  0x000074a37c5e947e:   mov    %r10,0x4a8(%r15)
  0x000074a37c5e9485:   jmp    0x000074a37c575760           ;   {runtime_call SafepointBlob}
  0x000074a37c5e948a:   call   Stub::method_entry_barrier   ;   {runtime_call Stub::method_entry_barrier}
  0x000074a37c5e948f:   jmp    0x000074a37c5e92ba
  0x000074a37c5e9494:   call   Stub::method_entry_barrier   ;   {runtime_call Stub::method_entry_barrier}
  0x000074a37c5e9499:   jmp    0x000074a37c5e925a
  0x000074a37c5e949e:   hlt    
  0x000074a37c5e949f:   hlt    
[Stub Code]
  0x000074a37c5e94a0:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000074a37c5e94aa:   jmp    0x000074a37c5e94aa           ;   {runtime_call nmethod}
[Exception Handler]
  0x000074a37c5e94af:   jmp    0x000074a37c599060           ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x000074a37c5e94b4:   call   0x000074a37c5e94b9
  0x000074a37c5e94b9:   subq   $0x5,(%rsp)
  0x000074a37c5e94be:   jmp    0x000074a37c575a80           ;   {runtime_call DeoptimizationBlob}
  0x000074a37c5e94c3:   hlt    
  0x000074a37c5e94c4:   hlt    
  0x000074a37c5e94c5:   hlt    
  0x000074a37c5e94c6:   hlt    
  0x000074a37c5e94c7:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Oops:
  0x000074a37c5e94c8:   0x00000000c8d58808 a 'java/lang/Class'{0x00000000c8d58808} = 'MyValue'
  0x000074a37c5e94d0:   0x00000000c8e67928 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x00000000c8e67928}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Metadata:
  0x000074a2f02fe738:   0x000074a304402548 {method} {0x000074a304402548} 'micro' '(LMyValue;I)F' in 'test_buffering_in_loop'
  0x000074a2f02fe740:   0x000074a30f041238 'MyValue'
  0x000074a2f02fe748:   0x000074a3044029d0 {method} {0x000074a3044029d0} 'getAccum' '()F' in 'MyValue'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
pc-bytecode offsets:
PcDesc(pc=0x000074a37c5e923f offset=ffffffff bits=0):
PcDesc(pc=0x000074a37c5e92ba offset=7a bits=0):
   test_buffering_in_loop::micro@-1 (line 24)
PcDesc(pc=0x000074a37c5e92d1 offset=91 bits=0):
   test_buffering_in_loop::micro@6 (line 25)
PcDesc(pc=0x000074a37c5e9340 offset=100 bits=0):
   test_buffering_in_loop::micro@18 (line 27)
   Locals
    - l0: obj[100]
    - l1: stack[12]
    - l2: empty
    - l3: reg rbp [10],int
   Expression stack
    - @0: stack[16]
   Objects
    - 0: R obj[100], MyValue
        Fields: stack[4], stack[8]
PcDesc(pc=0x000074a37c5e9348 offset=108 bits=0):
   test_buffering_in_loop::micro@18 (line 27)
PcDesc(pc=0x000074a37c5e934e offset=10e bits=0):
   test_buffering_in_loop::micro@21 (line 27)
PcDesc(pc=0x000074a37c5e9354 offset=114 bits=0):
   test_buffering_in_loop::micro@23 (line 25)
PcDesc(pc=0x000074a37c5e9358 offset=118 bits=0):
   test_buffering_in_loop::micro@9 (line 26)
PcDesc(pc=0x000074a37c5e9360 offset=120 bits=0):
   test_buffering_in_loop::micro@13 (line 26)
PcDesc(pc=0x000074a37c5e936d offset=12d bits=0):
   test_buffering_in_loop::micro@18 (line 27)
PcDesc(pc=0x000074a37c5e93a8 offset=168 bits=5):
   test_buffering_in_loop::micro@18 (line 27)  reexecute=true
   Locals
    - l0: obj[57]
    - l1: stack[12]
    - l2: empty
    - l3: reg rbp [10],int
   Expression stack
    - @0: stack[0]
    - @1: obj[57]
   Objects
    - 0: R obj[57], MyValue
        Fields: stack[4], stack[8]
PcDesc(pc=0x000074a37c5e93b0 offset=170 bits=0):
   test_buffering_in_loop::micro@18 (line 27)
PcDesc(pc=0x000074a37c5e93c6 offset=186 bits=0):
   test_buffering_in_loop::micro@6 (line 25)
PcDesc(pc=0x000074a37c5e93cf offset=18f bits=0):
   test_buffering_in_loop::micro@30 (line 30)
PcDesc(pc=0x000074a37c5e93e3 offset=1a3 bits=0):
   test_buffering_in_loop::micro@35 (line 30)
PcDesc(pc=0x000074a37c5e9424 offset=1e4 bits=0):
   test_buffering_in_loop::micro@30 (line 30)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: obj[121]
   Objects
    - 0: R obj[121], MyValue
        Fields: stack[0], stack[8]
PcDesc(pc=0x000074a37c5e944d offset=20d bits=0):
   test_buffering_in_loop::micro@18 (line 27)
PcDesc(pc=0x000074a37c5e9458 offset=218 bits=1):
   test_buffering_in_loop::micro@18 (line 27)  reexecute=true
   Locals
    - l0: obj[129]
    - l1: stack[12]
    - l2: empty
    - l3: reg rbp [10],int
   Expression stack
    - @0: stack[0]
    - @1: obj[129]
   Objects
    - 0: R obj[129], MyValue
        Fields: stack[4], stack[8]
PcDesc(pc=0x000074a37c5e9474 offset=234 bits=0):
   test_buffering_in_loop::micro@18 (line 27)
PcDesc(pc=0x000074a37c5e94e9 offset=2a9 bits=0):
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
oop maps:ImmutableOopMapSet contains 4 OopMaps

ImmutableOopMap {} pc offsets: 256 360 484 536 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
scopes:
ScopeDesc(pc=0x000074a37c5e92ba offset=7a):
   test_buffering_in_loop::micro@-1 (line 24)
ScopeDesc(pc=0x000074a37c5e92d1 offset=91):
   test_buffering_in_loop::micro@6 (line 25)
ScopeDesc(pc=0x000074a37c5e9340 offset=100):
   test_buffering_in_loop::micro@18 (line 27)
   Locals
    - l0: obj[100]
    - l1: stack[12]
    - l2: empty
    - l3: reg rbp [10],int
   Expression stack
    - @0: stack[16]
   Objects
    - 0: R obj[100], MyValue
        Fields: stack[4], stack[8]
ScopeDesc(pc=0x000074a37c5e9348 offset=108):
   test_buffering_in_loop::micro@18 (line 27)
ScopeDesc(pc=0x000074a37c5e934e offset=10e):
   test_buffering_in_loop::micro@21 (line 27)
ScopeDesc(pc=0x000074a37c5e9354 offset=114):
   test_buffering_in_loop::micro@23 (line 25)
ScopeDesc(pc=0x000074a37c5e9358 offset=118):
   test_buffering_in_loop::micro@9 (line 26)
ScopeDesc(pc=0x000074a37c5e9360 offset=120):
   test_buffering_in_loop::micro@13 (line 26)
ScopeDesc(pc=0x000074a37c5e936d offset=12d):
   test_buffering_in_loop::micro@18 (line 27)
ScopeDesc(pc=0x000074a37c5e93a8 offset=168):
   test_buffering_in_loop::micro@18 (line 27)  reexecute=true
   Locals
    - l0: obj[57]
    - l1: stack[12]
    - l2: empty
    - l3: reg rbp [10],int
   Expression stack
    - @0: stack[0]
    - @1: obj[57]
   Objects
    - 0: R obj[57], MyValue
        Fields: stack[4], stack[8]
ScopeDesc(pc=0x000074a37c5e93b0 offset=170):
   test_buffering_in_loop::micro@18 (line 27)
ScopeDesc(pc=0x000074a37c5e93c6 offset=186):
   test_buffering_in_loop::micro@6 (line 25)
ScopeDesc(pc=0x000074a37c5e93cf offset=18f):
   test_buffering_in_loop::micro@30 (line 30)
ScopeDesc(pc=0x000074a37c5e93e3 offset=1a3):
   test_buffering_in_loop::micro@35 (line 30)
ScopeDesc(pc=0x000074a37c5e9424 offset=1e4):
   test_buffering_in_loop::micro@30 (line 30)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: obj[121]
   Objects
    - 0: R obj[121], MyValue
        Fields: stack[0], stack[8]
ScopeDesc(pc=0x000074a37c5e944d offset=20d):
   test_buffering_in_loop::micro@18 (line 27)
ScopeDesc(pc=0x000074a37c5e9458 offset=218):
   test_buffering_in_loop::micro@18 (line 27)  reexecute=true
   Locals
    - l0: obj[129]
    - l1: stack[12]
    - l2: empty
    - l3: reg rbp [10],int
   Expression stack
    - @0: stack[0]
    - @1: obj[129]
   Objects
    - 0: R obj[129], MyValue
        Fields: stack[4], stack[8]
ScopeDesc(pc=0x000074a37c5e9474 offset=234):
   test_buffering_in_loop::micro@18 (line 27)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
relocations:
         @0x000074a2f02fe6f0: 0020
relocInfo@0x000074a2f02fe6f0 [type=0(none) addr=0x000074a37c5e9240 offset=32]
         @0x000074a2f02fe6f2: 60ab
relocInfo@0x000074a2f02fe6f2 [type=12(metadata) addr=0x000074a37c5e92eb offset=171] | [metadata_addr=0x000074a37c5e92ed *=0x000074a30f041238]metadata_value=0x000074a30f041238: 'MyValue'
         @0x000074a2f02fe6f4: 78026314
relocInfo@0x000074a2f02fe6f6 [type=12(metadata) addr=0x000074a37c5e92ff offset=20 format=3 data=2] | [metadata_addr=0x000074a2f02fe740 *=0x000074a30f041238]metadata_value=0x000074a30f041238: 'MyValue'
         @0x000074a2f02fe6f8: 213c
relocInfo@0x000074a2f02fe6f8 [type=4(static_call) addr=0x000074a37c5e933b offset=60 format=1] | [destination=0x000074a37c5664e0 metadata=0x0000000000000000] Blob::Shared Runtime resolve_static_call_blob
         @0x000074a2f02fe6fa: 8005
relocInfo@0x000074a2f02fe6fa [type=16(post_call_nop) addr=0x000074a37c5e9340 offset=5]
         @0x000074a2f02fe6fc: 6056
relocInfo@0x000074a2f02fe6fc [type=12(metadata) addr=0x000074a37c5e9396 offset=86] | [metadata_addr=0x000074a37c5e9398 *=0x000074a30f041238]metadata_value=0x000074a30f041238: 'MyValue'
         @0x000074a2f02fe6fe: 310d
relocInfo@0x000074a2f02fe6fe [type=6(runtime_call) addr=0x000074a37c5e93a3 offset=13 format=1] | [destination=0x000074a37c599960] C2 Runtime new_instance
         @0x000074a2f02fe700: 8005
relocInfo@0x000074a2f02fe700 [type=16(post_call_nop) addr=0x000074a37c5e93a8 offset=5]
         @0x000074a2f02fe702: 4933
relocInfo@0x000074a2f02fe702 [type=9(section_word) addr=0x000074a37c5e93db offset=51 format=1] | [target=0x000074a37c5e9220]
         @0x000074a2f02fe704: 580d
relocInfo@0x000074a2f02fe704 [type=11(poll_return) addr=0x000074a37c5e93e8 offset=13]
         @0x000074a2f02fe706: 3137
relocInfo@0x000074a2f02fe706 [type=6(runtime_call) addr=0x000074a37c5e941f offset=55 format=1] | [destination=0x000074a37c4728e0] UncommonTrapBlob
         @0x000074a2f02fe708: 8005
relocInfo@0x000074a2f02fe708 [type=16(post_call_nop) addr=0x000074a37c5e9424 offset=5]
         @0x000074a2f02fe70a: 783d3808
relocInfo@0x000074a2f02fe70c [type=7(external_word) addr=0x000074a37c5e942c offset=8 data=61] | [target=0x000074a2f02ff180]
         @0x000074a2f02fe70e: 310e
relocInfo@0x000074a2f02fe70e [type=6(runtime_call) addr=0x000074a37c5e943a offset=14 format=1] | [destination=0x000074a380d89c48] MacroAssembler::debug64(char*, long, long*)
         @0x000074a2f02fe710: 310e
relocInfo@0x000074a2f02fe710 [type=6(runtime_call) addr=0x000074a37c5e9448 offset=14 format=1] | [destination=0x000074a37c5a9d60] C2 Runtime rethrow
         @0x000074a2f02fe712: 310b
relocInfo@0x000074a2f02fe712 [type=6(runtime_call) addr=0x000074a37c5e9453 offset=11 format=1] | [destination=0x000074a37c4728e0] UncommonTrapBlob
         @0x000074a2f02fe714: 8005
relocInfo@0x000074a2f02fe714 [type=16(post_call_nop) addr=0x000074a37c5e9458 offset=5]
         @0x000074a2f02fe716: 783d3808
relocInfo@0x000074a2f02fe718 [type=7(external_word) addr=0x000074a37c5e9460 offset=8 data=61] | [target=0x000074a2f02ff180]
         @0x000074a2f02fe71a: 310e
relocInfo@0x000074a2f02fe71a [type=6(runtime_call) addr=0x000074a37c5e946e offset=14 format=1] | [destination=0x000074a380d89c48] MacroAssembler::debug64(char*, long, long*)
         @0x000074a2f02fe71c: 788c4006
relocInfo@0x000074a2f02fe71e [type=8(internal_word) addr=0x000074a37c5e9474 offset=6 data=140] | [target=0x000074a37c5e93e8]
         @0x000074a2f02fe720: 3111
relocInfo@0x000074a2f02fe720 [type=6(runtime_call) addr=0x000074a37c5e9485 offset=17 format=1] | [destination=0x000074a37c575760] SafepointBlob
         @0x000074a2f02fe722: 3105
relocInfo@0x000074a2f02fe722 [type=6(runtime_call) addr=0x000074a37c5e948a offset=5 format=1] | [destination=0x000074a37c4e00e0] Stub::method_entry_barrier
         @0x000074a2f02fe724: 310a
relocInfo@0x000074a2f02fe724 [type=6(runtime_call) addr=0x000074a37c5e9494 offset=10 format=1] | [destination=0x000074a37c4e00e0] Stub::method_entry_barrier
         @0x000074a2f02fe726: 000c
relocInfo@0x000074a2f02fe726 [type=0(none) addr=0x000074a37c5e94a0 offset=12]
         @0x000074a2f02fe728: 7c01ff052800
relocInfo@0x000074a2f02fe72c [type=5(static_stub) addr=0x000074a37c5e94a0 offset=0 data=-251] | [static_call=0x000074a37c5e933b]
         @0x000074a2f02fe72e: 6000
relocInfo@0x000074a2f02fe72e [type=12(metadata) addr=0x000074a37c5e94a0 offset=0] | [metadata_addr=0x000074a37c5e94a2 *=0x0000000000000000]
         @0x000074a2f02fe730: 310a
relocInfo@0x000074a2f02fe730 [type=6(runtime_call) addr=0x000074a37c5e94aa offset=10 format=1] | [destination=0x000074a37c5e94aa] nmethod
         @0x000074a2f02fe732: 3105
relocInfo@0x000074a2f02fe732 [type=6(runtime_call) addr=0x000074a37c5e94af offset=5 format=1] | [destination=0x000074a37c599060] ExceptionBlob
         @0x000074a2f02fe734: 310f
relocInfo@0x000074a2f02fe734 [type=6(runtime_call) addr=0x000074a37c5e94be offset=15 format=1] | [destination=0x000074a37c575a80] DeoptimizationBlob
         @0x000074a2f02fe736: 0000
relocInfo@0x000074a2f02fe736 [type=0(none) addr=0x000074a37c5e94be offset=0]
         @0x000074a2f02fe738: 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Dependencies:
Dependency of type evol_method
  method  = *{method} {0x000074a304402548} 'micro' '(LMyValue;I)F' in 'test_buffering_in_loop'
Dependency of type evol_method
  method  = {method} {0x000074a3044029d0} 'getAccum' '()F' in 'MyValue'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ExceptionHandlerTable (size = 48 bytes)
catch_pco = 256 (pc=0x000074a37c5e9340, 1 entries)
  bci -1 at scope depth 0 -> pco 512 (pc=0x000074a37c5e9440)
catch_pco = 360 (pc=0x000074a37c5e93a8, 1 entries)
  bci -1 at scope depth 0 -> pco 525 (pc=0x000074a37c5e944d)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ImplicitExceptionTable is empty
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded oops:
#0: 0x0000000000000000 nullptr-oop
#1: 0x00000000c8d58808 a 'java/lang/Class'{0x00000000c8d58808} = 'MyValue'
#2: 0x00000000c8e67928 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x00000000c8e67928}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded metadata:
#0: 0x0000000000000000 nullptr-oop
#1: 0x000074a304402548 {method} {0x000074a304402548} 'micro' '(LMyValue;I)F' in 'test_buffering_in_loop'
#2: 0x000074a30f041238 'MyValue'
#3: 0x000074a3044029d0 {method} {0x000074a3044029d0} 'getAccum' '()F' in 'MyValue'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
[res] 5.039288E7
------------------------------------------------------------------------
static test_buffering_in_loop::micro(LMyValue;I)F
  interpreter_invocation_count:         236
  invocation_counter:                   236
  backedge_counter:                   36864
  decompile_count:                        2
  mdo size: 576 bytes

   0 fconst_0
   1 fstore_2
   2 iconst_0
   3 istore_3
   4 iload_3
   5 iload_1
   6 if_icmpge 29
  0    bci: 6    BranchData         taken(134) displacement(104)
                                    not taken(31742)
   9 iload_3
  10 sipush 500
  13 if_icmple 23
  32   bci: 13   BranchData         trap(intrinsic_or_type_checked_inlining recompiled) taken(31183) displacement(48)
                                    not taken(561)
  16 fload_2
  17 fast_aload_0
  18 invokestatic 13 <test_buffering_in_loop.leaf(LMyAbsValue;)F> 
  64   bci: 18   CounterData        count(561)
  21 fadd
  22 fstore_2
  23 iinc #3 1
  26 goto 4
  80   bci: 26   JumpData           taken(31744) displacement(-80)
  29 fast_aload_0
  30 invokevirtual 19 <MyValue.getAccum()F> 
  104  bci: 30   VirtualCallData    count(134) entries(0)
  33 ldc 10.000000
  35 fadd
  36 freturn
------------------------------------------------------------------------
Total MDO size: 576 bytes
