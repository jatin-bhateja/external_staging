CompileCommand: print bug1.micro bool print = true
WARNING: Using incubator modules: jdk.incubator.vector

============================= C2-compiled nmethod ==============================
#r018 rsi:rsi   : parm 0: int[int:>=0]:exact *
#r016 rdx:rdx   : parm 1: int[int:>=0]:exact *
#r010 rcx:rcx   : parm 2: int[int:>=0]:exact *
#r004 r8   : parm 3: int
# -- Old rsp -- Framesize: 288 --
#r591 rsp+284: in_preserve
#r590 rsp+280: return address
#r589 rsp+276: in_preserve
#r588 rsp+272: saved fp register
#r587 rsp+268: Fixed slot 3
#r586 rsp+264: Fixed slot 2
#r585 rsp+260: Fixed slot 1
#r584 rsp+256: Fixed slot 0
#r655 rsp+252: spill
#r654 rsp+248: spill
#r653 rsp+244: spill
#r652 rsp+240: spill
#r651 rsp+236: spill
#r650 rsp+232: spill
#r649 rsp+228: spill
#r648 rsp+224: spill
#r647 rsp+220: spill
#r646 rsp+216: spill
#r645 rsp+212: spill
#r644 rsp+208: spill
#r643 rsp+204: spill
#r642 rsp+200: spill
#r641 rsp+196: spill
#r640 rsp+192: spill
#r639 rsp+188: spill
#r638 rsp+184: spill
#r637 rsp+180: spill
#r636 rsp+176: spill
#r635 rsp+172: spill
#r634 rsp+168: spill
#r633 rsp+164: spill
#r632 rsp+160: spill
#r631 rsp+156: spill
#r630 rsp+152: spill
#r629 rsp+148: spill
#r628 rsp+144: spill
#r627 rsp+140: spill
#r626 rsp+136: spill
#r625 rsp+132: spill
#r624 rsp+128: spill
#r623 rsp+124: spill
#r622 rsp+120: spill
#r621 rsp+116: spill
#r620 rsp+112: spill
#r619 rsp+108: spill
#r618 rsp+104: spill
#r617 rsp+100: spill
#r616 rsp+96: spill
#r615 rsp+92: spill
#r614 rsp+88: spill
#r613 rsp+84: spill
#r612 rsp+80: spill
#r611 rsp+76: spill
#r610 rsp+72: spill
#r609 rsp+68: spill
#r608 rsp+64: spill
#r607 rsp+60: spill
#r606 rsp+56: spill
#r605 rsp+52: spill
#r604 rsp+48: spill
#r603 rsp+44: spill
#r602 rsp+40: spill
#r601 rsp+36: spill
#r600 rsp+32: spill
#r599 rsp+28: spill
#r598 rsp+24: spill
#r597 rsp+20: spill
#r596 rsp+16: spill
#r595 rsp+12: spill
#r594 rsp+ 8: spill
#r593 rsp+ 4: spill
#r592 rsp+ 0: spill
#
----------------------- MetaData before Compile_id = 185 ------------------------
{method}
 - this oop:          0x00007fcd98401528
 - method holder:     'bug1'
 - constants:         0x00007fcd98401058 constant pool [81] {0x00007fcd98401058} for 'bug1' cache=0x00007fcd98401808
 - access:            0xc1000009  public static 
 - name:              'micro'
 - signature:         '([I[I[II)I'
 - max stack:         4
 - max locals:        7
 - size of params:    4
 - method size:       16
 - vtable index:      -2
 - i2i entry:         0x00007fcde0c50580
 - adapters:          AHE@0x00007fcdec317d10: 0xbbba0000 i2c: 0x00007fcde0caf580 c2i: 0x00007fcde0caf669 c2iVE: 0x00007fcde0caf669 c2iVROE: 0x00007fcde0caf669 c2iUE: 0x00007fcde0caf637 c2iUVE: 0x00007fcde0caf637 c2iNCI: 0x00007fcde0caf6a3
 - compiled entry           0x00007fcde0caf669
 - compiled inline entry    0x00007fcde0caf669
 - compiled inline ro entry 0x00007fcde0caf669
 - code size:         68
 - code start:        0x00007fcd984014d8
 - code end (excl):   0x00007fcd9840151c
 - method data:       0x00007fcd98401aa0
 - checked ex length: 0
 - linenumber start:  0x00007fcd9840151c
 - localvar length:   0

------------------------ OptoAssembly for Compile_id = 185 -----------------------
#
#  int ( int[int:>=0]:exact *, int[int:>=0]:exact *, int[int:>=0]:exact *, int )
#
000     N1: #	out( B1 ) <- in( B52 B44 B53 B45 B41 B56 B47 B59 B42 B54 B46 B50 B49 B38 B40 B39 B37 B51 B48 B57 B55 B58 B30 B43 )  Freq: 1

000     B1: #	out( B52 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
000     # stack bang (704 bytes)
	pushq   rbp	# Save rbp
	subq    rsp, #272	# Create frame

01e     movq    R10, RSI	# spill
021     movl    [rsp + #136], R8	# spill
029     movq    [rsp + #128], RCX	# spill
031     movq    [rsp + #0], RDX	# spill
035     movq    R11, java/lang/Class:exact *	# ptr
03f     movl    RBP, [R11 + #120 (8-bit)]	# compressed ptr ! Field: bug1.I_SPECIES
043     movl    R11, [R12 + RBP << 3 + #8] (compressed oop addressing)	# compressed klass ptr
048     NullCheck RBP

048     B2: #	out( B44 B3 ) <- in( B1 )  Freq: 0.999999
048     cmpl    R11, narrowklass: precise jdk/incubator/vector/IntVector$IntSpecies: 0x00007fcd780bb500:Constant:exact *	# compressed klass ptr
04f     jne,u   B44  P=0.000001 C=-1.000000

055     B3: #	out( B53 B4 ) <- in( B2 )  Freq: 0.999998
055     movq    R11, RSI	# spill
        nop 	# 8 bytes pad for loops and calls
060     movl    R10, [RSI + #12 (8-bit)]	# range
064     NullCheck RSI

064     B4: #	out( B45 B5 ) <- in( B3 )  Freq: 0.999997
064     decode_heap_oop_not_null R8,RBP
068     # checkcastPP of R8
068     subl    R10, [R8 + #12 (8-bit)]	# int
06c     leal    RBP, [R10 + #1]
070     testl   RBP, RBP
072     jl     B45  P=0.000001 C=-1.000000

078     B5: #	out( B41 B6 ) <- in( B4 )  Freq: 0.999996
        nop 	# 8 bytes pad for loops and calls
080     cmpl    R10, #-1
084     je     B41  P=0.000001 C=-1.000000

08a     B6: #	out( B56 B7 ) <- in( B5 )  Freq: 0.999995
08a     movl    RBP, [R8 + #72 (8-bit)]	# compressed ptr ! Field: jdk/incubator/vector/AbstractSpecies.dummyVectorMF (constant)
08e     movl    R10, [R12 + RBP << 3 + #8] (compressed oop addressing)	# compressed klass ptr
093     NullCheck RBP

093     B7: #	out( B47 B8 ) <- in( B6 )  Freq: 0.999994
        nop 	# 13 bytes pad for loops and calls
0a0     cmpl    R10, narrowklass: precise jdk/incubator/vector/Int512Vector: 0x00007fcd780c09c8:Constant:exact *	# compressed klass ptr
0a7     jne,u   B47  P=0.000000 C=-1.000000

0ad     B8: #	out( B35 B9 ) <- in( B7 )  Freq: 0.999994
0ad     # TLS is in R15
0ad     movq    R8, [R15 + #264 (32-bit)]	# ptr
0b4     movq    R10, R8	# spill
0b7     addq    R10, #80	# ptr
0bb     # TLS is in R15
        nop 	# 5 bytes pad for loops and calls
0c0     cmpq    R10, [R15 + #280 (32-bit)]	# raw ptr
0c7     jae,u   B35  P=0.000100 C=-1.000000

0cd     B9: #	out( B10 ) <- in( B8 )  Freq: 0.999894
0cd     # TLS is in R15
0cd     movq    [R15 + #264 (32-bit)], R10	# ptr
0d4     PREFETCHW [R10 + #192 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
0dc     movq    R10, precise jdk/incubator/vector/Int512Vector: 0x00007fcd780c09c8:Constant:exact *	# ptr
0e6     movq    R10, [R10 + #184 (32-bit)]	# long
0ed     movq    [R8], R10	# long
0f0     movq    R10, R8	# spill
0f3     addq    R10, #16	# ptr
0f7     movl    [R8 + #8 (8-bit)], narrowklass: precise jdk/incubator/vector/Int512Vector: 0x00007fcd780c09c8:Constant:exact *	# compressed klass ptr
0ff     movl    [R8 + #12 (8-bit)], R12	# int (R12_heapbase==0)
103     xorl    RAX, RAX	# long
105     clear_mem_imm R10 , #8  
	

114     B10: #	out( B54 B11 ) <- in( B36 B9 )  Freq: 0.999994
114     
114     # checkcastPP of R8
114     load_vector XMM1,[R11 + #16 (8-bit)]
11e     store_vector [R8 + #16 (8-bit)],XMM1
	 ! Field: jdk/incubator/vector/Int512Vector.mfield (constant)
128     
128     movq    R8, [rsp + #0]	# spill
12c     movl    R10, [R8 + #12 (8-bit)]	# range
130     NullCheck R8

130     B11: #	out( B13 ) <- in( B10 )  Freq: 0.999993
130     movq    R11, java/lang/Class:exact *	# ptr
13a     movl    R11, [R11 + #120 (8-bit)]	# compressed ptr ! Field: bug1.I_SPECIES
13e     xorl    RCX, RCX	# int
140     jmp,s   B13
        nop 	# 14 bytes pad for loops and calls

150     B12: #	out( B13 ) <- in( B25 ) top-of-loop Freq: 63.9725
150     movl    RCX, R9	# spill

153     B13: #	out( B49 B14 ) <- in( B11 B12 ) Loop( B13-B12 inner ) Freq: 64.9725
153     movl    R9, [R12 + R11 << 3 + #8] (compressed oop addressing)	# compressed klass ptr
158     NullCheck R11

158     B14: #	out( B38 B15 ) <- in( B13 )  Freq: 64.9724
        nop 	# 8 bytes pad for loops and calls
160     cmpl    R9, narrowklass: precise jdk/incubator/vector/IntVector$IntSpecies: 0x00007fcd780bb500:Constant:exact *	# compressed klass ptr
167     jne,u   B38  P=0.000001 C=-1.000000

16d     B15: #	out( B39 B16 ) <- in( B14 )  Freq: 64.9723
16d     decode_heap_oop_not_null RDI,R11
171     # checkcastPP of RDI
171     movl    R9, [RDI + #12 (8-bit)]	# int ! Field: jdk/incubator/vector/AbstractSpecies.laneCount (constant)
175     movl    RBP, R10	# spill
178     subl    RBP, R9	# int
17b     incl    RBP	# int
        nop 	# 3 bytes pad for loops and calls
180     testl   RBP, RBP
182     jl     B39  P=0.000001 C=-1.000000

188     B16: #	out( B37 B17 ) <- in( B15 )  Freq: 64.9723
188     cmpl    RCX, RBP	# unsigned
18a     jae,u   B37  P=0.000001 C=-1.000000

190     B17: #	out( B51 B18 ) <- in( B16 )  Freq: 64.9722
190     movl    R11, [RDI + #72 (8-bit)]	# compressed ptr ! Field: jdk/incubator/vector/AbstractSpecies.dummyVectorMF (constant)
194     movl    R9, RCX	# spill
197     # castII of R9
        nop 	# 9 bytes pad for loops and calls
1a0     movl    RBX, [R12 + R11 << 3 + #8] (compressed oop addressing)	# compressed klass ptr
1a5     NullCheck R11

1a5     B18: #	out( B48 B19 ) <- in( B17 )  Freq: 64.9722
1a5     cmpl    RBX, narrowklass: precise jdk/incubator/vector/Int512Vector: 0x00007fcd780c09c8:Constant:exact *	# compressed klass ptr
1ab     jne,u   B48  P=0.000000 C=-1.000000

1b1     B19: #	out( B31 B20 ) <- in( B18 )  Freq: 64.9722
1b1     # TLS is in R15
1b1     movq    RDX, [R15 + #264 (32-bit)]	# ptr
1b8     movq    RBX, RDX	# spill
1bb     addq    RBX, #80	# ptr
1bf     movslq  R11, R9	# i2l
1c2     leaq    RDI, [R11 << #2]
1ca     # TLS is in R15
1ca     cmpq    RBX, [R15 + #280 (32-bit)]	# raw ptr
1d1     jae,u   B31  P=0.000100 C=-1.000000

1d7     B20: #	out( B21 ) <- in( B19 )  Freq: 64.9657
1d7     # TLS is in R15
1d7     movq    [R15 + #264 (32-bit)], RBX	# ptr
1de     PREFETCHW [RBX + #192 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
1e5     movq    R11, precise jdk/incubator/vector/Int512Vector: 0x00007fcd780c09c8:Constant:exact *	# ptr
1ef     movq    R11, [R11 + #184 (32-bit)]	# long
1f6     movq    [RDX], R11	# long
1f9     movq    R11, RDX	# spill
1fc     addq    R11, #16	# ptr
200     movl    [RDX + #8 (8-bit)], narrowklass: precise jdk/incubator/vector/Int512Vector: 0x00007fcd780c09c8:Constant:exact *	# compressed klass ptr
207     movl    [RDX + #12 (8-bit)], R12	# int (R12_heapbase==0)
20b     xorl    RAX, RAX	# long
20d     clear_mem_imm R11 , #8  
	

21c     B21: #	out( B33 B22 ) <- in( B32 B20 )  Freq: 64.9722
21c     
21c     # checkcastPP of RDX
21c     load_vector XMM2,[R8 + #16 + RDI]
227     store_vector [RDX + #16 (8-bit)],XMM2
	 ! Field: jdk/incubator/vector/Int512Vector.mfield (constant)
231     
231     # TLS is in R15
231     movq    RCX, [R15 + #264 (32-bit)]	# ptr
238     movq    R11, RCX	# spill
23b     addq    R11, #80	# ptr
23f     # TLS is in R15
        nop 	# 1 bytes pad for loops and calls
240     cmpq    R11, [R15 + #280 (32-bit)]	# raw ptr
247     jae,u   B33  P=0.000100 C=-1.000000

24d     B22: #	out( B23 ) <- in( B21 )  Freq: 64.9657
24d     # TLS is in R15
24d     movq    [R15 + #264 (32-bit)], R11	# ptr
254     PREFETCHW [R11 + #192 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
25c     movq    R11, precise jdk/incubator/vector/Int512Vector: 0x00007fcd780c09c8:Constant:exact *	# ptr
266     movq    R11, [R11 + #184 (32-bit)]	# long
26d     movq    [RCX], R11	# long
270     movq    R11, RCX	# spill
273     addq    R11, #16	# ptr
277     movl    [RCX + #8 (8-bit)], narrowklass: precise jdk/incubator/vector/Int512Vector: 0x00007fcd780c09c8:Constant:exact *	# compressed klass ptr
27e     movl    [RCX + #12 (8-bit)], R12	# int (R12_heapbase==0)
282     xorl    RAX, RAX	# long
284     clear_mem_imm R11 , #8  
	

293     B23: #	out( B50 B24 ) <- in( B34 B22 )  Freq: 64.9722
293     
293     # checkcastPP of RCX
293     vpand   XMM1,XMM1,XMM2	! and vectors
299     store_vector [RCX + #16 (8-bit)],XMM1
	 ! Field: jdk/incubator/vector/Int512Vector.mfield (constant)
2a3     
2a3     movq    R11, java/lang/Class:exact *	# ptr
2ad     movl    R11, [R11 + #120 (8-bit)]	# compressed ptr ! Field: bug1.I_SPECIES
2b1     movl    RCX, [R12 + R11 << 3 + #8] (compressed oop addressing)	# compressed klass ptr
2b6     NullCheck R11

2b6     B24: #	out( B40 B25 ) <- in( B23 )  Freq: 64.9721
        nop 	# 10 bytes pad for loops and calls
2c0     cmpl    RCX, narrowklass: precise jdk/incubator/vector/IntVector$IntSpecies: 0x00007fcd780bb500:Constant:exact *	# compressed klass ptr
2c6     jne,u   B40  P=0.000001 C=-1.000000

2cc     B25: #	out( B12 B26 ) <- in( B24 )  Freq: 64.972
2cc     # TLS is in R15
2cc     movq    RCX, [R15 + #968 (32-bit)]	# ptr
2d3     decode_heap_oop_not_null RBX,R11
2d7     # checkcastPP of RBX
2d7     addl    R9, [RBX + #12 (8-bit)]	# int
2db     testl   rax, [RCX]	# Safepoint: poll for GC        # bug1::micro @ bci:54 (line 13) L[0]=_ L[1]=R8 L[2]=rsp + #128 L[3]=rsp + #136 L[4]=#ScObj0 L[5]=R9 L[6]=_
        # ScObj0 jdk/incubator/vector/Int512Vector={ [mfield :0]=XMM1 }
        # OopMap {r11=NarrowOop r8=Oop [128]=Oop off=731/0x2db}
        nop 	# 3 bytes pad for loops and calls
2e0     cmpl    R9, #1024
2e7     jl     B12  P=0.984615 C=61632.000000

2ed     B26: #	out( B55 B27 ) <- in( B25 )  Freq: 0.99957
2ed     movq    R11, [rsp + #128]	# spill
2f5     movl    R10, [R11 + #12 (8-bit)]	# range
2f9     NullCheck R11

2f9     B27: #	out( B46 B28 ) <- in( B26 )  Freq: 0.999569
2f9     leal    RBP, [R10 + #-15]
        nop 	# 3 bytes pad for loops and calls
300     testl   RBP, RBP
302     jl     B46  P=0.000001 C=-1.000000

308     B28: #	out( B42 B29 ) <- in( B27 )  Freq: 0.999568
308     cmpl    R10, #15
30c     je     B42  P=0.000001 C=-1.000000

312     B29: #	out( B43 B30 ) <- in( B28 )  Freq: 0.999567
312     store_vector [R11 + #16 (8-bit)],XMM1
	
31c     movl    R8, [rsp + #136]	# spill
324     cmpl    R8, R10	# unsigned
327     jae,u   B43  P=0.000001 C=-1.000000

32d     B30: #	out( N1 ) <- in( B29 )  Freq: 0.999566
32d     movl    RAX, [R11 + #16 + R8 << #2]	# int
332     vzeroupper
	addq    rsp, 272	# Destroy frame
	popq    rbp
	cmpq    rsp, poll_offset[r15_thread] 
	ja      #safepoint_stub	# Safepoint: poll for GC

34a     ret

34b     B31: #	out( B57 B32 ) <- in( B19 )  Freq: 0.0064983
34b     movq    [rsp + #24], R11	# spill
350     movl    [rsp + #16], R9	# spill
355     movl    [rsp + #4], RCX	# spill
359     movl    [rsp + #0], R10	# spill
35d     vmovdqu [rsp + 64],XMM1	# spill
365     movq    [rsp + #8], R8	# spill
36a     movq    RBP, RDI	# spill
36d     movq    [rsp + #32], RDI	# spill
372     addq    RBP, #16	# long
376     movq    RSI, precise jdk/incubator/vector/Int512Vector: 0x00007fcd780c09c8:Constant:exact *	# ptr
380     xorl    RDX, RDX	# int
        nop 	# 2 bytes pad for loops and calls
384     call,static  wrapper for: _new_instance_Java
        # jdk.incubator.vector.IntVector::fromArray0Template @ bci:32 (line 3554) L[0]=_ L[1]=_ L[2]=_ L[3]=_ STK[0]=#Ptr0x00007fcd4800d2c0 STK[1]=#Ptr0x00007fcd4800e6d0 STK[2]=#16 STK[3]=rsp + #8 STK[4]=RBP STK[5]=_ STK[6]=rsp + #8 STK[7]=rsp + #24 STK[8]=_ STK[9]=#Ptr0x00007fcd4800d2f0 STK[10]=#Ptr0x00007fcd4c00a938
        # jdk.incubator.vector.Int512Vector::fromArray0 @ bci:3 (line 898) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.IntVector::fromArray @ bci:24 (line 3066) L[0]=_ L[1]=_ L[2]=_ L[3]=_
        # bug1::micro @ bci:27 (line 14) L[0]=_ L[1]=rsp + #8 L[2]=rsp + #128 L[3]=rsp + #136 L[4]=#ScObj0 L[5]=rsp + #4 L[6]=_
        # ScObj0 jdk/incubator/vector/Int512Vector={ [mfield :0]=rsp + #64 }
        # OopMap {[8]=Oop [128]=Oop off=908/0x38c}

38c     B32: #	out( B21 ) <- in( B31 )  Freq: 0.00649817
        # Block is sole successor of call
38c     movq    R8, [rsp + #8]	# spill
391     vmovdqu XMM1,[rsp + 64]	# spill
399     movl    R10, [rsp + #0]	# spill
39d     movl    R9, [rsp + #16]	# spill
3a2     movq    RDX, RAX	# spill
3a5     movq    RDI, [rsp + #32]	# spill
3aa     jmp     B21

3af     B33: #	out( B58 B34 ) <- in( B21 )  Freq: 0.0064983
3af     vmovdqu [rsp + 192],XMM2	# spill
3b7     movl    [rsp + #72], R9	# spill
3bc     movl    RBP, R10	# spill
3bf     vmovdqu [rsp + 0],XMM1	# spill
3c6     movq    [rsp + #64], R8	# spill
3cb     movq    RSI, precise jdk/incubator/vector/Int512Vector: 0x00007fcd780c09c8:Constant:exact *	# ptr
3d5     xorl    RDX, RDX	# int
        nop 	# 1 bytes pad for loops and calls
3d8     call,static  wrapper for: _new_instance_Java
        # jdk.incubator.vector.IntVector::lanewiseTemplate @ bci:154 (line 856) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ STK[0]=#10 STK[1]=#Ptr0x00007fcd4800d2c0 STK[2]=#NULL STK[3]=#Ptr0x00007fcd4800e6d0 STK[4]=#16 STK[5]=#ScObj0 STK[6]=#ScObj1 STK[7]=#NULL STK[8]=#Ptr0x00007fcd640a4080
        # ScObj0 jdk/incubator/vector/Int512Vector={ [mfield :0]=rsp + #0 }
        # ScObj1 jdk/incubator/vector/Int512Vector={ [mfield :0]=rsp + #192 }
        # jdk.incubator.vector.Int512Vector::lanewise @ bci:3 (line 304) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.Int512Vector::lanewise @ bci:3 (line 42) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.IntVector::and @ bci:5 (line 1866) L[0]=_ L[1]=_
        # bug1::micro @ bci:36 (line 15) L[0]=_ L[1]=rsp + #64 L[2]=rsp + #128 L[3]=rsp + #136 L[4]=_ L[5]=rsp + #72 L[6]=_
        # OopMap {[64]=Oop [128]=Oop off=992/0x3e0}

3e0     B34: #	out( B23 ) <- in( B33 )  Freq: 0.00649817
        # Block is sole successor of call
3e0     movq    R8, [rsp + #64]	# spill
3e5     vmovdqu XMM1,[rsp + 0]	# spill
3ec     movl    R10, RBP	# spill
3ef     movl    R9, [rsp + #72]	# spill
3f4     vmovdqu XMM2,[rsp + 192]	# spill
3fc     movq    RCX, RAX	# spill
        nop 	# 1 bytes pad for loops and calls
400     jmp     B23

405     B35: #	out( B59 B36 ) <- in( B8 )  Freq: 0.000100016
405     movq    RBP, RSI	# spill
408     movq    RSI, precise jdk/incubator/vector/Int512Vector: 0x00007fcd780c09c8:Constant:exact *	# ptr
412     xorl    RDX, RDX	# int
414     call,static  wrapper for: _new_instance_Java
        # jdk.incubator.vector.IntVector::fromArray0Template @ bci:32 (line 3554) L[0]=_ L[1]=_ L[2]=_ L[3]=_ STK[0]=#Ptr0x00007fcd4800d2c0 STK[1]=#Ptr0x00007fcd4800e6d0 STK[2]=#16 STK[3]=RBP STK[4]=#16 STK[5]=_ STK[6]=RBP STK[7]=#0 STK[8]=_ STK[9]=#Ptr0x00007fcd4800d2f0 STK[10]=#Ptr0x00007fcd4c00a938
        # jdk.incubator.vector.Int512Vector::fromArray0 @ bci:3 (line 898) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.IntVector::fromArray @ bci:24 (line 3066) L[0]=_ L[1]=_ L[2]=_ L[3]=_
        # bug1::micro @ bci:5 (line 12) L[0]=_ L[1]=rsp + #0 L[2]=rsp + #128 L[3]=rsp + #136 L[4]=_ L[5]=_ L[6]=_
        # OopMap {rbp=Oop [0]=Oop [128]=Oop off=1052/0x41c}

41c     B36: #	out( B10 ) <- in( B35 )  Freq: 0.000100014
        # Block is sole successor of call
41c     movq    R11, RBP	# spill
41f     movq    R8, RAX	# spill
422     jmp     B10

427     B37: #	out( N1 ) <- in( B16 )  Freq: 6.5835e-05
427     movl    RSI, #-28	# int
42c     movl    [rsp + #4], RCX	# spill
430     vmovdqu [rsp + 64],XMM1	# spill
438     movq    [rsp + #32], RDI	# spill
43d     movq    [rsp + #40], R8	# spill
        nop 	# 2 bytes pad for loops and calls
444     call,static  wrapper for: uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')
        # java.util.Objects::checkIndex @ bci:3 (line 473) L[0]=_ L[1]=_ STK[0]=rsp + #4 STK[1]=RBP STK[2]=#NULL
        # jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize @ bci:43 (line 57) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.IntVector::fromArray @ bci:9 (line 3064) L[0]=rsp + #32 L[1]=rsp + #40 L[2]=_ L[3]=_
        # bug1::micro @ bci:27 (line 14) L[0]=_ L[1]=rsp + #40 L[2]=rsp + #128 L[3]=rsp + #136 L[4]=#ScObj0 L[5]=rsp + #4 L[6]=_
        # ScObj0 jdk/incubator/vector/Int512Vector={ [mfield :0]=rsp + #64 }
        # OopMap {[32]=Oop [40]=Oop [128]=Oop off=1100/0x44c}
44c     stop	# ShouldNotReachHere

460     B38: #	out( N1 ) <- in( B14 )  Freq: 6.49724e-05
460     movl    RSI, #-34	# int
465     movl    [rsp + #4], RCX	# spill
469     movl    [rsp + #8], R11	# spill
46e     vmovdqu [rsp + 64],XMM1	# spill
476     movq    [rsp + #32], R8	# spill
        nop 	# 1 bytes pad for loops and calls
47c     call,static  wrapper for: uncommon_trap(reason='class_check' action='maybe_recompile' debug_id='0')
        # jdk.incubator.vector.IntVector::fromArray @ bci:2 (line 3064) L[0]=rsp + #8 L[1]=rsp + #32 L[2]=_ L[3]=_ STK[0]=rsp + #4 STK[1]=rsp + #8
        # bug1::micro @ bci:27 (line 14) L[0]=_ L[1]=rsp + #32 L[2]=rsp + #128 L[3]=rsp + #136 L[4]=#ScObj0 L[5]=rsp + #4 L[6]=_
        # ScObj0 jdk/incubator/vector/Int512Vector={ [mfield :0]=rsp + #64 }
        # OopMap {[8]=NarrowOop [32]=Oop [128]=Oop off=1156/0x484}
484     stop	# ShouldNotReachHere

498     B39: #	out( N1 ) <- in( B15 )  Freq: 6.49723e-05
498     movl    RSI, #-52	# int
49d     movl    [rsp + #4], RCX	# spill
4a1     vmovdqu [rsp + 64],XMM1	# spill
4a9     movq    [rsp + #32], RDI	# spill
4ae     movq    [rsp + #40], R8	# spill
        nop 	# 1 bytes pad for loops and calls
4b4     call,static  wrapper for: uncommon_trap(reason='intrinsic_or_type_checked_inlining' action='make_not_entrant' debug_id='0')
        # java.util.Objects::checkIndex @ bci:3 (line 473) L[0]=_ L[1]=_ STK[0]=rsp + #4 STK[1]=RBP STK[2]=#NULL
        # jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize @ bci:43 (line 57) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.IntVector::fromArray @ bci:9 (line 3064) L[0]=rsp + #32 L[1]=rsp + #40 L[2]=_ L[3]=_
        # bug1::micro @ bci:27 (line 14) L[0]=_ L[1]=rsp + #40 L[2]=rsp + #128 L[3]=rsp + #136 L[4]=#ScObj0 L[5]=rsp + #4 L[6]=_
        # ScObj0 jdk/incubator/vector/Int512Vector={ [mfield :0]=rsp + #64 }
        # OopMap {[32]=Oop [40]=Oop [128]=Oop off=1212/0x4bc}
4bc     stop	# ShouldNotReachHere

4d0     B40: #	out( N1 ) <- in( B24 )  Freq: 6.49721e-05
4d0     movl    RSI, #-34	# int
4d5     movl    RBP, R9	# spill
4d8     movl    [rsp + #0], R11	# spill
4dc     vmovdqu [rsp + 64],XMM1	# spill
4e4     movq    [rsp + #8], R8	# spill
        nop 	# 3 bytes pad for loops and calls
4ec     call,static  wrapper for: uncommon_trap(reason='class_check' action='maybe_recompile' debug_id='0')
        # bug1::micro @ bci:46 (line 13) L[0]=_ L[1]=rsp + #8 L[2]=rsp + #128 L[3]=rsp + #136 L[4]=#ScObj0 L[5]=_ L[6]=_ STK[0]=RBP STK[1]=rsp + #0
        # ScObj0 jdk/incubator/vector/Int512Vector={ [mfield :0]=rsp + #64 }
        # OopMap {[0]=NarrowOop [8]=Oop [128]=Oop off=1268/0x4f4}
4f4     stop	# ShouldNotReachHere

508     B41: #	out( N1 ) <- in( B5 )  Freq: 1.01327e-06
508     movl    RSI, #-28	# int
50d     movq    [rsp + #24], R8	# spill
512     movq    [rsp + #32], R11	# spill
        nop 	# 1 bytes pad for loops and calls
518     call,static  wrapper for: uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')
        # java.util.Objects::checkIndex @ bci:3 (line 473) L[0]=_ L[1]=_ STK[0]=#0 STK[1]=RBP STK[2]=#NULL
        # jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize @ bci:43 (line 57) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.IntVector::fromArray @ bci:9 (line 3064) L[0]=rsp + #24 L[1]=rsp + #32 L[2]=_ L[3]=_
        # bug1::micro @ bci:5 (line 12) L[0]=_ L[1]=rsp + #0 L[2]=rsp + #128 L[3]=rsp + #136 L[4]=_ L[5]=_ L[6]=_
        # OopMap {[0]=Oop [24]=Oop [32]=Oop [128]=Oop off=1312/0x520}
520     stop	# ShouldNotReachHere

534     B42: #	out( N1 ) <- in( B28 )  Freq: 1.01284e-06
534     movl    RSI, #-28	# int
539     vmovdqu [rsp + 0],XMM1	# spill
540     movq    [rsp + #80], R11	# spill
        nop 	# 3 bytes pad for loops and calls
548     call,static  wrapper for: uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')
        # java.util.Objects::checkIndex @ bci:3 (line 473) L[0]=_ L[1]=_ STK[0]=#0 STK[1]=RBP STK[2]=#NULL
        # jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize @ bci:43 (line 57) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.IntVector::intoArray @ bci:7 (line 3337) L[0]=#ScObj0 L[1]=rsp + #128 L[2]=_ L[3]=_
        # ScObj0 jdk/incubator/vector/Int512Vector={ [mfield :0]=rsp + #0 }
        # bug1::micro @ bci:61 (line 17) L[0]=_ L[1]=_ L[2]=rsp + #80 L[3]=rsp + #136 L[4]=_ L[5]=_ L[6]=_
        # OopMap {[80]=Oop [128]=Oop off=1360/0x550}
550     stop	# ShouldNotReachHere

564     B43: #	out( N1 ) <- in( B29 )  Freq: 1.01284e-06
564     movl    RSI, #-28	# int
569     movq    RBP, R11	# spill
56c     call,static  wrapper for: uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')
        # bug1::micro @ bci:66 (line 18) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_ STK[0]=RBP STK[1]=rsp + #136
        # OopMap {rbp=Oop off=1396/0x574}
574     stop	# ShouldNotReachHere

588     B44: #	out( N1 ) <- in( B2 )  Freq: 9.99999e-07
588     movl    RSI, #-34	# int
58d     movq    [rsp + #24], R10	# spill
        nop 	# 2 bytes pad for loops and calls
594     call,static  wrapper for: uncommon_trap(reason='class_check' action='maybe_recompile' debug_id='0')
        # jdk.incubator.vector.IntVector::fromArray @ bci:2 (line 3064) L[0]=RBP L[1]=rsp + #24 L[2]=_ L[3]=_ STK[0]=#0 STK[1]=RBP
        # bug1::micro @ bci:5 (line 12) L[0]=_ L[1]=rsp + #0 L[2]=rsp + #128 L[3]=rsp + #136 L[4]=_ L[5]=_ L[6]=_
        # OopMap {rbp=NarrowOop [0]=Oop [24]=Oop [128]=Oop off=1436/0x59c}
59c     stop	# ShouldNotReachHere

5b0     B45: #	out( N1 ) <- in( B4 )  Freq: 9.99997e-07
5b0     movl    RSI, #-52	# int
5b5     movq    [rsp + #24], R8	# spill
5ba     movq    [rsp + #32], R11	# spill
        nop 	# 1 bytes pad for loops and calls
5c0     call,static  wrapper for: uncommon_trap(reason='intrinsic_or_type_checked_inlining' action='make_not_entrant' debug_id='0')
        # java.util.Objects::checkIndex @ bci:3 (line 473) L[0]=_ L[1]=_ STK[0]=#0 STK[1]=RBP STK[2]=#NULL
        # jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize @ bci:43 (line 57) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.IntVector::fromArray @ bci:9 (line 3064) L[0]=rsp + #24 L[1]=rsp + #32 L[2]=_ L[3]=_
        # bug1::micro @ bci:5 (line 12) L[0]=_ L[1]=rsp + #0 L[2]=rsp + #128 L[3]=rsp + #136 L[4]=_ L[5]=_ L[6]=_
        # OopMap {[0]=Oop [24]=Oop [32]=Oop [128]=Oop off=1480/0x5c8}
5c8     stop	# ShouldNotReachHere

5dc     B46: #	out( N1 ) <- in( B27 )  Freq: 9.99569e-07
5dc     movl    RSI, #-52	# int
5e1     vmovdqu [rsp + 0],XMM1	# spill
5e8     movq    [rsp + #80], R11	# spill
        nop 	# 3 bytes pad for loops and calls
5f0     call,static  wrapper for: uncommon_trap(reason='intrinsic_or_type_checked_inlining' action='make_not_entrant' debug_id='0')
        # java.util.Objects::checkIndex @ bci:3 (line 473) L[0]=_ L[1]=_ STK[0]=#0 STK[1]=RBP STK[2]=#NULL
        # jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize @ bci:43 (line 57) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.IntVector::intoArray @ bci:7 (line 3337) L[0]=#ScObj0 L[1]=rsp + #128 L[2]=_ L[3]=_
        # ScObj0 jdk/incubator/vector/Int512Vector={ [mfield :0]=rsp + #0 }
        # bug1::micro @ bci:61 (line 17) L[0]=_ L[1]=_ L[2]=rsp + #80 L[3]=rsp + #136 L[4]=_ L[5]=_ L[6]=_
        # OopMap {[80]=Oop [128]=Oop off=1528/0x5f8}
5f8     stop	# ShouldNotReachHere

60c     B47: #	out( N1 ) <- in( B7 )  Freq: 1e-35
60c     movl    RSI, #-34	# int
611     movq    [rsp + #24], R11	# spill
        nop 	# 2 bytes pad for loops and calls
618     call,static  wrapper for: uncommon_trap(reason='class_check' action='maybe_recompile' debug_id='0')
        # jdk.incubator.vector.IntVector$IntSpecies::dummyVectorMF @ bci:4 (line 4036) L[0]=_ STK[0]=RBP
        # jdk.incubator.vector.IntVector::fromArray @ bci:19 (line 3066) L[0]=_ L[1]=rsp + #24 L[2]=#0 L[3]=_
        # bug1::micro @ bci:5 (line 12) L[0]=_ L[1]=rsp + #0 L[2]=rsp + #128 L[3]=rsp + #136 L[4]=_ L[5]=_ L[6]=_
        # OopMap {rbp=NarrowOop [0]=Oop [24]=Oop [128]=Oop off=1568/0x620}
620     stop	# ShouldNotReachHere

634     B48: #	out( N1 ) <- in( B18 )  Freq: 1e-35
634     movl    RSI, #-34	# int
639     movl    RBP, RCX	# spill
63b     movl    [rsp + #0], R9	# spill
63f     vmovdqu [rsp + 64],XMM1	# spill
647     movq    [rsp + #24], R8	# spill
64c     movl    [rsp + #32], R11	# spill
        nop 	# 3 bytes pad for loops and calls
654     call,static  wrapper for: uncommon_trap(reason='class_check' action='maybe_recompile' debug_id='0')
        # jdk.incubator.vector.IntVector$IntSpecies::dummyVectorMF @ bci:4 (line 4036) L[0]=_ STK[0]=rsp + #32
        # jdk.incubator.vector.IntVector::fromArray @ bci:19 (line 3066) L[0]=_ L[1]=rsp + #24 L[2]=rsp + #0 L[3]=_
        # bug1::micro @ bci:27 (line 14) L[0]=_ L[1]=rsp + #24 L[2]=rsp + #128 L[3]=rsp + #136 L[4]=#ScObj0 L[5]=RBP L[6]=_
        # ScObj0 jdk/incubator/vector/Int512Vector={ [mfield :0]=rsp + #64 }
        # OopMap {[24]=Oop [32]=NarrowOop [128]=Oop off=1628/0x65c}
65c     stop	# ShouldNotReachHere

670     B49: #	out( N1 ) <- in( B13 )  Freq: 6.58352e-05
670     movl    RSI, #-10	# int
        nop 	# 3 bytes pad for loops and calls
678     call,static  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # jdk.incubator.vector.IntVector::fromArray @ bci:2 (line 3064) L[0]=_ L[1]=_ L[2]=_ L[3]=_ STK[0]=_ STK[1]=#NULL
        # bug1::micro @ bci:27 (line 14) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_
        # OopMap {off=1664/0x680}
680     stop	# ShouldNotReachHere

694     B50: #	out( N1 ) <- in( B23 )  Freq: 6.58349e-05
694     movl    RSI, #-10	# int
        nop 	# 3 bytes pad for loops and calls
69c     call,static  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # bug1::micro @ bci:46 (line 13) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_ STK[0]=_ STK[1]=#NULL
        # OopMap {off=1700/0x6a4}
6a4     stop	# ShouldNotReachHere

6b8     B51: #	out( N1 ) <- in( B17 )  Freq: 3.09812e-05
6b8     movl    RSI, #-187	# int
6bd     movl    RBP, RCX	# spill
6bf     movl    [rsp + #0], R9	# spill
6c3     vmovdqu [rsp + 64],XMM1	# spill
6cb     movq    [rsp + #24], R8	# spill
6d0     movq    [rsp + #32], RDI	# spill
6d5     movl    [rsp + #44], R11	# spill
        nop 	# 2 bytes pad for loops and calls
6dc     call,static  wrapper for: uncommon_trap(reason='unstable_if' action='reinterpret' debug_id='0')
        # jdk.incubator.vector.AbstractSpecies::dummyVectorMF @ bci:6 (line 323) L[0]=rsp + #32 L[1]=rsp + #44 STK[0]=rsp + #44
        # jdk.incubator.vector.IntVector$IntSpecies::dummyVectorMF @ bci:1 (line 4036) L[0]=_
        # jdk.incubator.vector.IntVector::fromArray @ bci:19 (line 3066) L[0]=_ L[1]=rsp + #24 L[2]=rsp + #0 L[3]=_
        # bug1::micro @ bci:27 (line 14) L[0]=_ L[1]=rsp + #24 L[2]=rsp + #128 L[3]=rsp + #136 L[4]=#ScObj0 L[5]=RBP L[6]=_
        # ScObj0 jdk/incubator/vector/Int512Vector={ [mfield :0]=rsp + #64 }
        # OopMap {[24]=Oop [32]=Oop [44]=NarrowOop [128]=Oop off=1764/0x6e4}
6e4     stop	# ShouldNotReachHere

6f8     B52: #	out( N1 ) <- in( B1 )  Freq: 1.01328e-06
6f8     movl    RSI, #-10	# int
        nop 	# 3 bytes pad for loops and calls
700     call,static  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # jdk.incubator.vector.IntVector::fromArray @ bci:2 (line 3064) L[0]=_ L[1]=_ L[2]=_ L[3]=_ STK[0]=_ STK[1]=#NULL
        # bug1::micro @ bci:5 (line 12) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_
        # OopMap {off=1800/0x708}
708     stop	# ShouldNotReachHere

71c     B53: #	out( N1 ) <- in( B3 )  Freq: 1.01328e-06
71c     movl    RSI, #-10	# int
        nop 	# 3 bytes pad for loops and calls
724     call,static  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # jdk.incubator.vector.IntVector::fromArray @ bci:8 (line 3064) L[0]=_ L[1]=_ L[2]=_ L[3]=_ STK[0]=_ STK[1]=_ STK[2]=#NULL
        # bug1::micro @ bci:5 (line 12) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_
        # OopMap {off=1836/0x72c}
72c     stop	# ShouldNotReachHere

740     B54: #	out( N1 ) <- in( B10 )  Freq: 1.01327e-06
740     movl    RSI, #-138	# int
745     vmovdqu [rsp + 0],XMM1	# spill
74c     movq    RBP, R8	# spill
        nop 	# 1 bytes pad for loops and calls
750     call,static  wrapper for: uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')
        # bug1::micro @ bci:18 (line 13) L[0]=_ L[1]=RBP L[2]=rsp + #128 L[3]=rsp + #136 L[4]=#ScObj0 L[5]=#0 L[6]=_ STK[0]=#0 STK[1]=#1024
        # ScObj0 jdk/incubator/vector/Int512Vector={ [mfield :0]=rsp + #0 }
        # OopMap {rbp=Oop [128]=Oop off=1880/0x758}
758     stop	# ShouldNotReachHere

76c     B55: #	out( N1 ) <- in( B26 )  Freq: 1.01284e-06
76c     movl    RSI, #-10	# int
        nop 	# 3 bytes pad for loops and calls
774     call,static  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # jdk.incubator.vector.IntVector::intoArray @ bci:6 (line 3337) L[0]=_ L[1]=_ L[2]=_ L[3]=_ STK[0]=_ STK[1]=_ STK[2]=#NULL
        # bug1::micro @ bci:61 (line 17) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_
        # OopMap {off=1916/0x77c}
77c     stop	# ShouldNotReachHere

790     B56: #	out( N1 ) <- in( B6 )  Freq: 4.76835e-07
790     movl    RSI, #-187	# int
795     movq    [rsp + #24], R11	# spill
79a     movq    [rsp + #32], R8	# spill
        nop 	# 1 bytes pad for loops and calls
7a0     call,static  wrapper for: uncommon_trap(reason='unstable_if' action='reinterpret' debug_id='0')
        # jdk.incubator.vector.AbstractSpecies::dummyVectorMF @ bci:6 (line 323) L[0]=rsp + #32 L[1]=RBP STK[0]=RBP
        # jdk.incubator.vector.IntVector$IntSpecies::dummyVectorMF @ bci:1 (line 4036) L[0]=_
        # jdk.incubator.vector.IntVector::fromArray @ bci:19 (line 3066) L[0]=_ L[1]=rsp + #24 L[2]=#0 L[3]=_
        # bug1::micro @ bci:5 (line 12) L[0]=_ L[1]=rsp + #0 L[2]=rsp + #128 L[3]=rsp + #136 L[4]=_ L[5]=_ L[6]=_
        # OopMap {rbp=NarrowOop [0]=Oop [24]=Oop [32]=Oop [128]=Oop off=1960/0x7a8}
7a8     stop	# ShouldNotReachHere

7bc     B57: #	out( N1 ) <- in( B31 )  Freq: 6.4983e-08
7bc     movl    RSI, #-105	# int
7c1     movq    [rsp - #8], rax	# 32-bit mem-mem spill
	movl    rax, [rsp + #4]
	movl    [rsp + #0], rax
	movq    rax, [rsp - #8]
        nop 	# 2 bytes pad for loops and calls
7d4     call,static  wrapper for: uncommon_trap(reason='unhandled' action='none' debug_id='0')
        # jdk.incubator.vector.IntVector::fromArray0Template @ bci:32 (line 3554) L[0]=_ L[1]=_ L[2]=_ L[3]=_ STK[0]=#Ptr0x00007fcd4800d2c0 STK[1]=#Ptr0x00007fcd4800e6d0 STK[2]=#16 STK[3]=rsp + #8 STK[4]=RBP STK[5]=_ STK[6]=rsp + #8 STK[7]=rsp + #24 STK[8]=_ STK[9]=#Ptr0x00007fcd4800d2f0 STK[10]=#Ptr0x00007fcd4c00a938
        # jdk.incubator.vector.Int512Vector::fromArray0 @ bci:3 (line 898) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.IntVector::fromArray @ bci:24 (line 3066) L[0]=_ L[1]=_ L[2]=_ L[3]=_
        # bug1::micro @ bci:27 (line 14) L[0]=_ L[1]=rsp + #8 L[2]=rsp + #128 L[3]=rsp + #136 L[4]=#ScObj0 L[5]=rsp + #0 L[6]=_
        # ScObj0 jdk/incubator/vector/Int512Vector={ [mfield :0]=rsp + #64 }
        # OopMap {[8]=Oop [128]=Oop off=2012/0x7dc}
7dc     stop	# ShouldNotReachHere

7f0     B58: #	out( N1 ) <- in( B33 )  Freq: 6.4983e-08
7f0     movl    RSI, #-105	# int
7f5     movl    RBP, [rsp + #72]	# spill
7f9     pushq   [rsp + #128]	# 64-bit mem-mem spill
	popq    [rsp + #72]
806     movq    [rsp - #8], rax	# 32-bit mem-mem spill
	movl    rax, [rsp + #136]
	movl    [rsp + #80], rax
	movq    rax, [rsp - #8]
        nop 	# 1 bytes pad for loops and calls
81c     call,static  wrapper for: uncommon_trap(reason='unhandled' action='none' debug_id='0')
        # jdk.incubator.vector.IntVector::lanewiseTemplate @ bci:154 (line 856) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ STK[0]=#10 STK[1]=#Ptr0x00007fcd4800d2c0 STK[2]=#NULL STK[3]=#Ptr0x00007fcd4800e6d0 STK[4]=#16 STK[5]=#ScObj0 STK[6]=#ScObj1 STK[7]=#NULL STK[8]=#Ptr0x00007fcd640a4080
        # ScObj0 jdk/incubator/vector/Int512Vector={ [mfield :0]=rsp + #0 }
        # ScObj1 jdk/incubator/vector/Int512Vector={ [mfield :0]=rsp + #192 }
        # jdk.incubator.vector.Int512Vector::lanewise @ bci:3 (line 304) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.Int512Vector::lanewise @ bci:3 (line 42) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.IntVector::and @ bci:5 (line 1866) L[0]=_ L[1]=_
        # bug1::micro @ bci:36 (line 15) L[0]=_ L[1]=rsp + #64 L[2]=rsp + #72 L[3]=rsp + #80 L[4]=_ L[5]=RBP L[6]=_
        # OopMap {[64]=Oop [72]=Oop off=2084/0x824}
824     stop	# ShouldNotReachHere

838     B59: #	out( N1 ) <- in( B35 )  Freq: 1.00016e-09
838     movl    RSI, #-105	# int
        nop 	# 3 bytes pad for loops and calls
840     call,static  wrapper for: uncommon_trap(reason='unhandled' action='none' debug_id='0')
        # jdk.incubator.vector.IntVector::fromArray0Template @ bci:32 (line 3554) L[0]=_ L[1]=_ L[2]=_ L[3]=_ STK[0]=#Ptr0x00007fcd4800d2c0 STK[1]=#Ptr0x00007fcd4800e6d0 STK[2]=#16 STK[3]=RBP STK[4]=#16 STK[5]=_ STK[6]=RBP STK[7]=#0 STK[8]=_ STK[9]=#Ptr0x00007fcd4800d2f0 STK[10]=#Ptr0x00007fcd4c00a938
        # jdk.incubator.vector.Int512Vector::fromArray0 @ bci:3 (line 898) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.IntVector::fromArray @ bci:24 (line 3066) L[0]=_ L[1]=_ L[2]=_ L[3]=_
        # bug1::micro @ bci:5 (line 12) L[0]=_ L[1]=rsp + #0 L[2]=rsp + #128 L[3]=rsp + #136 L[4]=_ L[5]=_ L[6]=_
        # OopMap {rbp=Oop [0]=Oop [128]=Oop off=2120/0x848}
848     stop	# ShouldNotReachHere

--------------------------------------------------------------------------------
----------------------------------- Assembly -----------------------------------

Compiled method (c2)    1315  185             bug1::micro (68 bytes)
 total in heap  [0x00007fcde0de2090,0x00007fcde0de3908] = 6264
 relocation     [0x00007fcde0de2200,0x00007fcde0de2390] = 400
 main code      [0x00007fcde0de23a0,0x00007fcde0de2c20] = 2176
 stub code      [0x00007fcde0de2c20,0x00007fcde0de2c38] = 24
 oops           [0x00007fcde0de2c38,0x00007fcde0de2c68] = 48
 metadata       [0x00007fcde0de2c68,0x00007fcde0de2d38] = 208
 scopes data    [0x00007fcde0de2d38,0x00007fcde0de3308] = 1488
 scopes pcs     [0x00007fcde0de3308,0x00007fcde0de3858] = 1360
 dependencies   [0x00007fcde0de3858,0x00007fcde0de3878] = 32
 handler table  [0x00007fcde0de3878,0x00007fcde0de38c0] = 72
 nul chk table  [0x00007fcde0de38c0,0x00007fcde0de3908] = 72

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
[Inline Entry Point]
[Verified Entry Point]
[Verified Inline Entry Point]
[Verified Inline Entry Point (RO)]
  # {method} {0x00007fcd98401528} 'micro' '([I[I[II)I' in 'bug1'
  # parm0:    rsi:rsi   = '[I'
  # parm1:    rdx:rdx   = '[I'
  # parm2:    rcx:rcx   = '[I'
  # parm3:    r8        = int
  #           [sp+0x120]  (sp of caller)
 ;; N1: #	out( B1 ) <- in( B52 B44 B53 B45 B41 B56 B47 B59 B42 B54 B46 B50 B49 B38 B40 B39 B37 B51 B48 B57 B55 B58 B30 B43 )  Freq: 1
 ;; B1: #	out( B52 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x00007fcde0de23a0:   mov    %eax,-0x18000(%rsp)
  0x00007fcde0de23a7:   push   %rbp
  0x00007fcde0de23a8:   sub    $0x110,%rsp
  0x00007fcde0de23af:   nop
  0x00007fcde0de23b0:   cmpl   $0x1,0x20(%r15)
  0x00007fcde0de23b8:   jne    0x00007fcde0de2c12           ;*synchronization entry
                                                            ; - bug1::micro@-1 (line 12)
  0x00007fcde0de23be:   mov    %rsi,%r10
  0x00007fcde0de23c1:   mov    %r8d,0x88(%rsp)
  0x00007fcde0de23c9:   mov    %rcx,0x80(%rsp)
  0x00007fcde0de23d1:   mov    %rdx,(%rsp)                  ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
                                                            ; - bug1::micro@61 (line 17)
  0x00007fcde0de23d5:   movabs $0x11f0dc138,%r11            ;   {oop(a 'java/lang/Class'{0x000000011f0dc138} = 'bug1')}
  0x00007fcde0de23df:   mov    0x78(%r11),%ebp              ;*getstatic I_SPECIES {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - bug1::micro@0 (line 12)
  0x00007fcde0de23e3:   mov    0x8(%r12,%rbp,8),%r11d       ; implicit exception: dispatches to 0x00007fcde0de2a98
 ;; B2: #	out( B44 B3 ) <- in( B1 )  Freq: 0.999999
  0x00007fcde0de23e8:   cmp    $0x1048770,%r11d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
                                                            ; - bug1::micro@61 (line 17)
                                                            ;   {metadata('jdk/incubator/vector/IntVector$IntSpecies')}
  0x00007fcde0de23ef:   jne    0x00007fcde0de2928
 ;; B3: #	out( B53 B4 ) <- in( B2 )  Freq: 0.999998
  0x00007fcde0de23f5:   mov    %rsi,%r11
  0x00007fcde0de23f8:   nop
  0x00007fcde0de23f9:   nop
  0x00007fcde0de23fa:   nop
  0x00007fcde0de23fb:   nop
  0x00007fcde0de23fc:   nop
  0x00007fcde0de23fd:   nop
  0x00007fcde0de23fe:   nop
  0x00007fcde0de23ff:   nop
  0x00007fcde0de2400:   mov    0xc(%rsi),%r10d              ; implicit exception: dispatches to 0x00007fcde0de2abc
 ;; B4: #	out( B45 B5 ) <- in( B3 )  Freq: 0.999997
  0x00007fcde0de2404:   lea    (%r12,%rbp,8),%r8            ;*invokeinterface length {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - jdk.incubator.vector.IntVector::fromArray@2 (line 3064)
                                                            ; - bug1::micro@5 (line 12)
  0x00007fcde0de2408:   sub    0xc(%r8),%r10d
  0x00007fcde0de240c:   lea    0x1(%r10),%ebp
  0x00007fcde0de2410:   test   %ebp,%ebp
  0x00007fcde0de2412:   jl     0x00007fcde0de2950
 ;; B5: #	out( B41 B6 ) <- in( B4 )  Freq: 0.999996
  0x00007fcde0de2418:   nop
  0x00007fcde0de2419:   nop
  0x00007fcde0de241a:   nop
  0x00007fcde0de241b:   nop
  0x00007fcde0de241c:   nop
  0x00007fcde0de241d:   nop
  0x00007fcde0de241e:   nop
  0x00007fcde0de241f:   nop
  0x00007fcde0de2420:   cmp    $0xffffffff,%r10d
  0x00007fcde0de2424:   je     0x00007fcde0de28a8           ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
                                                            ; - bug1::micro@61 (line 17)
 ;; B6: #	out( B56 B7 ) <- in( B5 )  Freq: 0.999995
  0x00007fcde0de242a:   mov    0x48(%r8),%ebp               ;*getfield dummyVectorMF {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - jdk.incubator.vector.AbstractSpecies::dummyVectorMF@1 (line 322)
                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::dummyVectorMF@1 (line 4036)
                                                            ; - jdk.incubator.vector.IntVector::fromArray@19 (line 3066)
                                                            ; - bug1::micro@5 (line 12)
  0x00007fcde0de242e:   mov    0x8(%r12,%rbp,8),%r10d       ; implicit exception: dispatches to 0x00007fcde0de2b30
 ;; B7: #	out( B47 B8 ) <- in( B6 )  Freq: 0.999994
  0x00007fcde0de2433:   nop
  0x00007fcde0de2434:   nop
  0x00007fcde0de2435:   nop
  0x00007fcde0de2436:   nop
  0x00007fcde0de2437:   nop
  0x00007fcde0de2438:   nop
  0x00007fcde0de2439:   nop
  0x00007fcde0de243a:   nop
  0x00007fcde0de243b:   nop
  0x00007fcde0de243c:   nop
  0x00007fcde0de243d:   nop
  0x00007fcde0de243e:   nop
  0x00007fcde0de243f:   nop
  0x00007fcde0de2440:   cmp    $0x104d540,%r10d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
                                                            ; - bug1::micro@61 (line 17)
                                                            ;   {metadata('jdk/incubator/vector/Int512Vector')}
  0x00007fcde0de2447:   jne    0x00007fcde0de29ac
 ;; B8: #	out( B35 B9 ) <- in( B7 )  Freq: 0.999994
  0x00007fcde0de244d:   mov    0x108(%r15),%r8
  0x00007fcde0de2454:   mov    %r8,%r10
  0x00007fcde0de2457:   add    $0x50,%r10
  0x00007fcde0de245b:   nop
  0x00007fcde0de245c:   nop
  0x00007fcde0de245d:   nop
  0x00007fcde0de245e:   nop
  0x00007fcde0de245f:   nop
  0x00007fcde0de2460:   cmp    0x118(%r15),%r10
  0x00007fcde0de2467:   jae    0x00007fcde0de27a5           ;*goto {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - bug1::micro@54 (line 13)
 ;; B9: #	out( B10 ) <- in( B8 )  Freq: 0.999894
  0x00007fcde0de246d:   mov    %r10,0x108(%r15)
  0x00007fcde0de2474:   prefetchw 0xc0(%r10)
  0x00007fcde0de247c:   movabs $0x80104d540,%r10            ;   {metadata('jdk/incubator/vector/Int512Vector')}
  0x00007fcde0de2486:   mov    0xb8(%r10),%r10
  0x00007fcde0de248d:   mov    %r10,(%r8)
  0x00007fcde0de2490:   mov    %r8,%r10
  0x00007fcde0de2493:   add    $0x10,%r10
  0x00007fcde0de2497:   movl   $0x104d540,0x8(%r8)          ;   {metadata('jdk/incubator/vector/Int512Vector')}
  0x00007fcde0de249f:   mov    %r12d,0xc(%r8)
  0x00007fcde0de24a3:   xor    %eax,%eax
  0x00007fcde0de24a5:   vpxor  %ymm0,%ymm0,%ymm0
  0x00007fcde0de24a9:   vmovdqu %ymm0,(%r10)
  0x00007fcde0de24ae:   vmovdqu %ymm0,0x20(%r10)
 ;; B10: #	out( B54 B11 ) <- in( B36 B9 )  Freq: 0.999994
  0x00007fcde0de24b4:   vmovdqu32 0x10(%r11),%zmm1
  0x00007fcde0de24be:   vmovdqu32 %zmm1,0x10(%r8)           ;*invokestatic load {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - jdk.incubator.vector.IntVector::fromArray0Template@32 (line 3554)
                                                            ; - jdk.incubator.vector.Int512Vector::fromArray0@3 (line 898)
                                                            ; - jdk.incubator.vector.IntVector::fromArray@24 (line 3066)
                                                            ; - bug1::micro@5 (line 12)
  0x00007fcde0de24c8:   mov    (%rsp),%r8
  0x00007fcde0de24cc:   mov    0xc(%r8),%r10d               ; implicit exception: dispatches to 0x00007fcde0de2ae0
 ;; B11: #	out( B13 ) <- in( B10 )  Freq: 0.999993
  0x00007fcde0de24d0:   movabs $0x11f0dc138,%r11            ;   {oop(a 'java/lang/Class'{0x000000011f0dc138} = 'bug1')}
  0x00007fcde0de24da:   mov    0x78(%r11),%r11d
  0x00007fcde0de24de:   xor    %ecx,%ecx
  0x00007fcde0de24e0:   jmp    0x00007fcde0de24f3
  0x00007fcde0de24e2:   nop
  0x00007fcde0de24e3:   nop
  0x00007fcde0de24e4:   nop
  0x00007fcde0de24e5:   nop
  0x00007fcde0de24e6:   nop
  0x00007fcde0de24e7:   nop
  0x00007fcde0de24e8:   nop
  0x00007fcde0de24e9:   nop
  0x00007fcde0de24ea:   nop
  0x00007fcde0de24eb:   nop
  0x00007fcde0de24ec:   nop
  0x00007fcde0de24ed:   nop
  0x00007fcde0de24ee:   nop
  0x00007fcde0de24ef:   nop
 ;; B12: #	out( B13 ) <- in( B25 ) top-of-loop Freq: 63.9725
  0x00007fcde0de24f0:   mov    %r9d,%ecx
 ;; B13: #	out( B49 B14 ) <- in( B11 B12 ) Loop( B13-B12 inner ) Freq: 64.9725
  0x00007fcde0de24f3:   mov    0x8(%r12,%r11,8),%r9d        ; implicit exception: dispatches to 0x00007fcde0de2a10
 ;; B14: #	out( B38 B15 ) <- in( B13 )  Freq: 64.9724
  0x00007fcde0de24f8:   nop
  0x00007fcde0de24f9:   nop
  0x00007fcde0de24fa:   nop
  0x00007fcde0de24fb:   nop
  0x00007fcde0de24fc:   nop
  0x00007fcde0de24fd:   nop
  0x00007fcde0de24fe:   nop
  0x00007fcde0de24ff:   nop
  0x00007fcde0de2500:   cmp    $0x1048770,%r9d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
                                                            ; - bug1::micro@61 (line 17)
                                                            ;   {metadata('jdk/incubator/vector/IntVector$IntSpecies')}
  0x00007fcde0de2507:   jne    0x00007fcde0de2800
 ;; B15: #	out( B39 B16 ) <- in( B14 )  Freq: 64.9723
  0x00007fcde0de250d:   lea    (%r12,%r11,8),%rdi           ;*invokeinterface length {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - jdk.incubator.vector.IntVector::fromArray@2 (line 3064)
                                                            ; - bug1::micro@27 (line 14)
  0x00007fcde0de2511:   mov    0xc(%rdi),%r9d               ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - jdk.incubator.vector.AbstractSpecies::length@1 (line 122)
                                                            ; - jdk.incubator.vector.IntVector::fromArray@2 (line 3064)
                                                            ; - bug1::micro@27 (line 14)
  0x00007fcde0de2515:   mov    %r10d,%ebp
  0x00007fcde0de2518:   sub    %r9d,%ebp
  0x00007fcde0de251b:   inc    %ebp
  0x00007fcde0de251d:   nop
  0x00007fcde0de251e:   nop
  0x00007fcde0de251f:   nop
  0x00007fcde0de2520:   test   %ebp,%ebp
  0x00007fcde0de2522:   jl     0x00007fcde0de2838
 ;; B16: #	out( B37 B17 ) <- in( B15 )  Freq: 64.9723
  0x00007fcde0de2528:   cmp    %ebp,%ecx
  0x00007fcde0de252a:   jae    0x00007fcde0de27c7           ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
                                                            ; - bug1::micro@61 (line 17)
 ;; B17: #	out( B51 B18 ) <- in( B16 )  Freq: 64.9722
  0x00007fcde0de2530:   mov    0x48(%rdi),%r11d             ;*getfield dummyVectorMF {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - jdk.incubator.vector.AbstractSpecies::dummyVectorMF@1 (line 322)
                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::dummyVectorMF@1 (line 4036)
                                                            ; - jdk.incubator.vector.IntVector::fromArray@19 (line 3066)
                                                            ; - bug1::micro@27 (line 14)
  0x00007fcde0de2534:   mov    %ecx,%r9d                    ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - java.util.Objects::checkIndex@3 (line 473)
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 57)
                                                            ; - jdk.incubator.vector.IntVector::fromArray@9 (line 3064)
                                                            ; - bug1::micro@27 (line 14)
  0x00007fcde0de2537:   nop
  0x00007fcde0de2538:   nop
  0x00007fcde0de2539:   nop
  0x00007fcde0de253a:   nop
  0x00007fcde0de253b:   nop
  0x00007fcde0de253c:   nop
  0x00007fcde0de253d:   nop
  0x00007fcde0de253e:   nop
  0x00007fcde0de253f:   nop
  0x00007fcde0de2540:   mov    0x8(%r12,%r11,8),%ebx        ; implicit exception: dispatches to 0x00007fcde0de2a58
 ;; B18: #	out( B48 B19 ) <- in( B17 )  Freq: 64.9722
  0x00007fcde0de2545:   cmp    $0x104d540,%ebx              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
                                                            ; - bug1::micro@61 (line 17)
                                                            ;   {metadata('jdk/incubator/vector/Int512Vector')}
  0x00007fcde0de254b:   jne    0x00007fcde0de29d4           ;*goto {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - bug1::micro@54 (line 13)
 ;; B19: #	out( B31 B20 ) <- in( B18 )  Freq: 64.9722
  0x00007fcde0de2551:   mov    0x108(%r15),%rdx
  0x00007fcde0de2558:   mov    %rdx,%rbx
  0x00007fcde0de255b:   add    $0x50,%rbx                   ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
                                                            ; - bug1::micro@61 (line 17)
  0x00007fcde0de255f:   movslq %r9d,%r11                    ;*i2l {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - jdk.incubator.vector.IntVector::arrayAddress@4 (line 3803)
                                                            ; - jdk.incubator.vector.IntVector::fromArray0Template@20 (line 3556)
                                                            ; - jdk.incubator.vector.Int512Vector::fromArray0@3 (line 898)
                                                            ; - jdk.incubator.vector.IntVector::fromArray@24 (line 3066)
                                                            ; - bug1::micro@27 (line 14)
  0x00007fcde0de2562:   lea    0x0(,%r11,4),%rdi
  0x00007fcde0de256a:   cmp    0x118(%r15),%rbx
  0x00007fcde0de2571:   jae    0x00007fcde0de26eb
 ;; B20: #	out( B21 ) <- in( B19 )  Freq: 64.9657
  0x00007fcde0de2577:   mov    %rbx,0x108(%r15)
  0x00007fcde0de257e:   prefetchw 0xc0(%rbx)
  0x00007fcde0de2585:   movabs $0x80104d540,%r11            ;   {metadata('jdk/incubator/vector/Int512Vector')}
  0x00007fcde0de258f:   mov    0xb8(%r11),%r11
  0x00007fcde0de2596:   mov    %r11,(%rdx)
  0x00007fcde0de2599:   mov    %rdx,%r11
  0x00007fcde0de259c:   add    $0x10,%r11
  0x00007fcde0de25a0:   movl   $0x104d540,0x8(%rdx)         ;   {metadata('jdk/incubator/vector/Int512Vector')}
  0x00007fcde0de25a7:   mov    %r12d,0xc(%rdx)
  0x00007fcde0de25ab:   xor    %eax,%eax
  0x00007fcde0de25ad:   vpxor  %ymm0,%ymm0,%ymm0
  0x00007fcde0de25b1:   vmovdqu %ymm0,(%r11)
  0x00007fcde0de25b6:   vmovdqu %ymm0,0x20(%r11)
 ;; B21: #	out( B33 B22 ) <- in( B32 B20 )  Freq: 64.9722
  0x00007fcde0de25bc:   vmovdqu32 0x10(%r8,%rdi,1),%zmm2
  0x00007fcde0de25c7:   vmovdqu32 %zmm2,0x10(%rdx)
  0x00007fcde0de25d1:   mov    0x108(%r15),%rcx
  0x00007fcde0de25d8:   mov    %rcx,%r11
  0x00007fcde0de25db:   add    $0x50,%r11
  0x00007fcde0de25df:   nop
  0x00007fcde0de25e0:   cmp    0x118(%r15),%r11
  0x00007fcde0de25e7:   jae    0x00007fcde0de274f           ;*goto {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - bug1::micro@54 (line 13)
 ;; B22: #	out( B23 ) <- in( B21 )  Freq: 64.9657
  0x00007fcde0de25ed:   mov    %r11,0x108(%r15)
  0x00007fcde0de25f4:   prefetchw 0xc0(%r11)
  0x00007fcde0de25fc:   movabs $0x80104d540,%r11            ;   {metadata('jdk/incubator/vector/Int512Vector')}
  0x00007fcde0de2606:   mov    0xb8(%r11),%r11
  0x00007fcde0de260d:   mov    %r11,(%rcx)
  0x00007fcde0de2610:   mov    %rcx,%r11
  0x00007fcde0de2613:   add    $0x10,%r11
  0x00007fcde0de2617:   movl   $0x104d540,0x8(%rcx)         ;   {metadata('jdk/incubator/vector/Int512Vector')}
  0x00007fcde0de261e:   mov    %r12d,0xc(%rcx)
  0x00007fcde0de2622:   xor    %eax,%eax
  0x00007fcde0de2624:   vpxor  %ymm0,%ymm0,%ymm0
  0x00007fcde0de2628:   vmovdqu %ymm0,(%r11)
  0x00007fcde0de262d:   vmovdqu %ymm0,0x20(%r11)
 ;; B23: #	out( B50 B24 ) <- in( B34 B22 )  Freq: 64.9722
  0x00007fcde0de2633:   vpandd %zmm2,%zmm1,%zmm1
  0x00007fcde0de2639:   vmovdqu32 %zmm1,0x10(%rcx)          ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - jdk.incubator.vector.IntVector::lanewiseTemplate@154 (line 856)
                                                            ; - jdk.incubator.vector.Int512Vector::lanewise@3 (line 304)
                                                            ; - jdk.incubator.vector.Int512Vector::lanewise@3 (line 42)
                                                            ; - jdk.incubator.vector.IntVector::and@5 (line 1866)
                                                            ; - bug1::micro@36 (line 15)
  0x00007fcde0de2643:   movabs $0x11f0dc138,%r11            ;   {oop(a 'java/lang/Class'{0x000000011f0dc138} = 'bug1')}
  0x00007fcde0de264d:   mov    0x78(%r11),%r11d             ;*getstatic I_SPECIES {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - bug1::micro@43 (line 13)
  0x00007fcde0de2651:   mov    0x8(%r12,%r11,8),%ecx        ; implicit exception: dispatches to 0x00007fcde0de2a34
 ;; B24: #	out( B40 B25 ) <- in( B23 )  Freq: 64.9721
  0x00007fcde0de2656:   nop
  0x00007fcde0de2657:   nop
  0x00007fcde0de2658:   nop
  0x00007fcde0de2659:   nop
  0x00007fcde0de265a:   nop
  0x00007fcde0de265b:   nop
  0x00007fcde0de265c:   nop
  0x00007fcde0de265d:   nop
  0x00007fcde0de265e:   nop
  0x00007fcde0de265f:   nop
  0x00007fcde0de2660:   cmp    $0x1048770,%ecx              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
                                                            ; - bug1::micro@61 (line 17)
                                                            ;   {metadata('jdk/incubator/vector/IntVector$IntSpecies')}
  0x00007fcde0de2666:   jne    0x00007fcde0de2870           ;*goto {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - bug1::micro@54 (line 13)
 ;; B25: #	out( B12 B26 ) <- in( B24 )  Freq: 64.972
  0x00007fcde0de266c:   mov    0x3c8(%r15),%rcx
  0x00007fcde0de2673:   lea    (%r12,%r11,8),%rbx           ;*invokeinterface length {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - bug1::micro@46 (line 13)
  0x00007fcde0de2677:   add    0xc(%rbx),%r9d               ; ImmutableOopMap {r11=NarrowOop r8=Oop [128]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - (reexecute) bug1::micro@54 (line 13)
  0x00007fcde0de267b:   test   %eax,(%rcx)                  ;   {poll}
  0x00007fcde0de267d:   nop
  0x00007fcde0de267e:   nop
  0x00007fcde0de267f:   nop
  0x00007fcde0de2680:   cmp    $0x400,%r9d
  0x00007fcde0de2687:   jl     0x00007fcde0de24f0
 ;; B26: #	out( B55 B27 ) <- in( B25 )  Freq: 0.99957
  0x00007fcde0de268d:   mov    0x80(%rsp),%r11
  0x00007fcde0de2695:   mov    0xc(%r11),%r10d              ; implicit exception: dispatches to 0x00007fcde0de2b0c
 ;; B27: #	out( B46 B28 ) <- in( B26 )  Freq: 0.999569
  0x00007fcde0de2699:   lea    -0xf(%r10),%ebp
  0x00007fcde0de269d:   nop
  0x00007fcde0de269e:   nop
  0x00007fcde0de269f:   nop
  0x00007fcde0de26a0:   test   %ebp,%ebp
  0x00007fcde0de26a2:   jl     0x00007fcde0de297c
 ;; B28: #	out( B42 B29 ) <- in( B27 )  Freq: 0.999568
  0x00007fcde0de26a8:   cmp    $0xf,%r10d
  0x00007fcde0de26ac:   je     0x00007fcde0de28d4
 ;; B29: #	out( B43 B30 ) <- in( B28 )  Freq: 0.999567
  0x00007fcde0de26b2:   vmovdqu32 %zmm1,0x10(%r11)
  0x00007fcde0de26bc:   mov    0x88(%rsp),%r8d
  0x00007fcde0de26c4:   cmp    %r10d,%r8d
  0x00007fcde0de26c7:   jae    0x00007fcde0de2904           ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
                                                            ; - bug1::micro@61 (line 17)
 ;; B30: #	out( N1 ) <- in( B29 )  Freq: 0.999566
  0x00007fcde0de26cd:   mov    0x10(%r11,%r8,4),%eax        ;*iaload {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - bug1::micro@66 (line 18)
  0x00007fcde0de26d2:   vzeroupper 
  0x00007fcde0de26d5:   add    $0x110,%rsp
  0x00007fcde0de26dc:   pop    %rbp
  0x00007fcde0de26dd:   cmp    0x3c0(%r15),%rsp             ;   {poll_return}
  0x00007fcde0de26e4:   ja     0x00007fcde0de2bfc
  0x00007fcde0de26ea:   retq   
 ;; B31: #	out( B57 B32 ) <- in( B19 )  Freq: 0.0064983
  0x00007fcde0de26eb:   mov    %r11,0x18(%rsp)
  0x00007fcde0de26f0:   mov    %r9d,0x10(%rsp)
  0x00007fcde0de26f5:   mov    %ecx,0x4(%rsp)
  0x00007fcde0de26f9:   mov    %r10d,(%rsp)
  0x00007fcde0de26fd:   vmovdqu64 %zmm1,0x40(%rsp)
  0x00007fcde0de2705:   mov    %r8,0x8(%rsp)
  0x00007fcde0de270a:   mov    %rdi,%rbp
  0x00007fcde0de270d:   mov    %rdi,0x20(%rsp)
  0x00007fcde0de2712:   add    $0x10,%rbp
  0x00007fcde0de2716:   movabs $0x80104d540,%rsi            ;   {metadata('jdk/incubator/vector/Int512Vector')}
  0x00007fcde0de2720:   xor    %edx,%edx                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
                                                            ; - bug1::micro@61 (line 17)
  0x00007fcde0de2722:   nop
  0x00007fcde0de2723:   nop
  0x00007fcde0de2724:   vzeroupper 
  0x00007fcde0de2727:   callq  0x00007fcde0c7fa80           ; ImmutableOopMap {[8]=Oop [128]=Oop }
                                                            ;*invokestatic load {reexecute=1 rethrow=0 return_oop=1 return_scalarized=0}
                                                            ; - (reexecute) jdk.incubator.vector.IntVector::fromArray0Template@32 (line 3554)
                                                            ; - jdk.incubator.vector.Int512Vector::fromArray0@3 (line 898)
                                                            ; - jdk.incubator.vector.IntVector::fromArray@24 (line 3066)
                                                            ; - bug1::micro@27 (line 14)
                                                            ;   {runtime_call _new_instance_Java}
 ;; B32: #	out( B21 ) <- in( B31 )  Freq: 0.00649817
  0x00007fcde0de272c:   mov    0x8(%rsp),%r8
  0x00007fcde0de2731:   vmovdqu64 0x40(%rsp),%zmm1
  0x00007fcde0de2739:   mov    (%rsp),%r10d
  0x00007fcde0de273d:   mov    0x10(%rsp),%r9d
  0x00007fcde0de2742:   mov    %rax,%rdx
  0x00007fcde0de2745:   mov    0x20(%rsp),%rdi
  0x00007fcde0de274a:   jmpq   0x00007fcde0de25bc
 ;; B33: #	out( B58 B34 ) <- in( B21 )  Freq: 0.0064983
  0x00007fcde0de274f:   vmovdqu64 %zmm2,0xc0(%rsp)
  0x00007fcde0de2757:   mov    %r9d,0x48(%rsp)
  0x00007fcde0de275c:   mov    %r10d,%ebp
  0x00007fcde0de275f:   vmovdqu64 %zmm1,(%rsp)
  0x00007fcde0de2766:   mov    %r8,0x40(%rsp)
  0x00007fcde0de276b:   movabs $0x80104d540,%rsi            ;   {metadata('jdk/incubator/vector/Int512Vector')}
  0x00007fcde0de2775:   xor    %edx,%edx                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
                                                            ; - bug1::micro@61 (line 17)
  0x00007fcde0de2777:   nop
  0x00007fcde0de2778:   vzeroupper 
  0x00007fcde0de277b:   callq  0x00007fcde0c7fa80           ; ImmutableOopMap {[64]=Oop [128]=Oop }
                                                            ;*invokestatic binaryOp {reexecute=1 rethrow=0 return_oop=1 return_scalarized=0}
                                                            ; - (reexecute) jdk.incubator.vector.IntVector::lanewiseTemplate@154 (line 856)
                                                            ; - jdk.incubator.vector.Int512Vector::lanewise@3 (line 304)
                                                            ; - jdk.incubator.vector.Int512Vector::lanewise@3 (line 42)
                                                            ; - jdk.incubator.vector.IntVector::and@5 (line 1866)
                                                            ; - bug1::micro@36 (line 15)
                                                            ;   {runtime_call _new_instance_Java}
 ;; B34: #	out( B23 ) <- in( B33 )  Freq: 0.00649817
  0x00007fcde0de2780:   mov    0x40(%rsp),%r8
  0x00007fcde0de2785:   vmovdqu64 (%rsp),%zmm1
  0x00007fcde0de278c:   mov    %ebp,%r10d
  0x00007fcde0de278f:   mov    0x48(%rsp),%r9d
  0x00007fcde0de2794:   vmovdqu64 0xc0(%rsp),%zmm2
  0x00007fcde0de279c:   mov    %rax,%rcx
  0x00007fcde0de279f:   nop
  0x00007fcde0de27a0:   jmpq   0x00007fcde0de2633
 ;; B35: #	out( B59 B36 ) <- in( B8 )  Freq: 0.000100016
  0x00007fcde0de27a5:   mov    %rsi,%rbp
  0x00007fcde0de27a8:   movabs $0x80104d540,%rsi            ;   {metadata('jdk/incubator/vector/Int512Vector')}
  0x00007fcde0de27b2:   xor    %edx,%edx
  0x00007fcde0de27b4:   vzeroupper 
  0x00007fcde0de27b7:   callq  0x00007fcde0c7fa80           ; ImmutableOopMap {rbp=Oop [0]=Oop [128]=Oop }
                                                            ;*invokestatic load {reexecute=1 rethrow=0 return_oop=1 return_scalarized=0}
                                                            ; - (reexecute) jdk.incubator.vector.IntVector::fromArray0Template@32 (line 3554)
                                                            ; - jdk.incubator.vector.Int512Vector::fromArray0@3 (line 898)
                                                            ; - jdk.incubator.vector.IntVector::fromArray@24 (line 3066)
                                                            ; - bug1::micro@5 (line 12)
                                                            ;   {runtime_call _new_instance_Java}
 ;; B36: #	out( B10 ) <- in( B35 )  Freq: 0.000100014
  0x00007fcde0de27bc:   mov    %rbp,%r11
  0x00007fcde0de27bf:   mov    %rax,%r8
  0x00007fcde0de27c2:   jmpq   0x00007fcde0de24b4
 ;; B37: #	out( N1 ) <- in( B16 )  Freq: 6.5835e-05
  0x00007fcde0de27c7:   mov    $0xffffffe4,%esi
  0x00007fcde0de27cc:   mov    %ecx,0x4(%rsp)
  0x00007fcde0de27d0:   vmovdqu64 %zmm1,0x40(%rsp)
  0x00007fcde0de27d8:   mov    %rdi,0x20(%rsp)
  0x00007fcde0de27dd:   mov    %r8,0x28(%rsp)               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
                                                            ; - bug1::micro@61 (line 17)
  0x00007fcde0de27e2:   nop
  0x00007fcde0de27e3:   nop
  0x00007fcde0de27e4:   vzeroupper 
  0x00007fcde0de27e7:   callq  0x00007fcde0c4aea0           ; ImmutableOopMap {[32]=Oop [40]=Oop [128]=Oop }
                                                            ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - java.util.Objects::checkIndex@3 (line 473)
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 57)
                                                            ; - jdk.incubator.vector.IntVector::fromArray@9 (line 3064)
                                                            ; - bug1::micro@27 (line 14)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fcde0de27ec:   movabs $0x7fcdf23306c8,%rdi         ;   {external_word}
  0x00007fcde0de27f6:   and    $0xfffffffffffffff0,%rsp
  0x00007fcde0de27fa:   callq  0x00007fcdf19ab8f4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fcde0de27ff:   hlt    
 ;; B38: #	out( N1 ) <- in( B14 )  Freq: 6.49724e-05
  0x00007fcde0de2800:   mov    $0xffffffde,%esi
  0x00007fcde0de2805:   mov    %ecx,0x4(%rsp)
  0x00007fcde0de2809:   mov    %r11d,0x8(%rsp)
  0x00007fcde0de280e:   vmovdqu64 %zmm1,0x40(%rsp)
  0x00007fcde0de2816:   mov    %r8,0x20(%rsp)               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
                                                            ; - bug1::micro@61 (line 17)
  0x00007fcde0de281b:   nop
  0x00007fcde0de281c:   vzeroupper 
  0x00007fcde0de281f:   callq  0x00007fcde0c4aea0           ; ImmutableOopMap {[8]=NarrowOop [32]=Oop [128]=Oop }
                                                            ;*invokeinterface length {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - jdk.incubator.vector.IntVector::fromArray@2 (line 3064)
                                                            ; - bug1::micro@27 (line 14)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fcde0de2824:   movabs $0x7fcdf23306c8,%rdi         ;   {external_word}
  0x00007fcde0de282e:   and    $0xfffffffffffffff0,%rsp
  0x00007fcde0de2832:   callq  0x00007fcdf19ab8f4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fcde0de2837:   hlt    
 ;; B39: #	out( N1 ) <- in( B15 )  Freq: 6.49723e-05
  0x00007fcde0de2838:   mov    $0xffffffcc,%esi
  0x00007fcde0de283d:   mov    %ecx,0x4(%rsp)
  0x00007fcde0de2841:   vmovdqu64 %zmm1,0x40(%rsp)
  0x00007fcde0de2849:   mov    %rdi,0x20(%rsp)
  0x00007fcde0de284e:   mov    %r8,0x28(%rsp)               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
                                                            ; - bug1::micro@61 (line 17)
  0x00007fcde0de2853:   nop
  0x00007fcde0de2854:   vzeroupper 
  0x00007fcde0de2857:   callq  0x00007fcde0c4aea0           ; ImmutableOopMap {[32]=Oop [40]=Oop [128]=Oop }
                                                            ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - java.util.Objects::checkIndex@3 (line 473)
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 57)
                                                            ; - jdk.incubator.vector.IntVector::fromArray@9 (line 3064)
                                                            ; - bug1::micro@27 (line 14)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fcde0de285c:   movabs $0x7fcdf23306c8,%rdi         ;   {external_word}
  0x00007fcde0de2866:   and    $0xfffffffffffffff0,%rsp
  0x00007fcde0de286a:   callq  0x00007fcdf19ab8f4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fcde0de286f:   hlt    
 ;; B40: #	out( N1 ) <- in( B24 )  Freq: 6.49721e-05
  0x00007fcde0de2870:   mov    $0xffffffde,%esi
  0x00007fcde0de2875:   mov    %r9d,%ebp
  0x00007fcde0de2878:   mov    %r11d,(%rsp)
  0x00007fcde0de287c:   vmovdqu64 %zmm1,0x40(%rsp)
  0x00007fcde0de2884:   mov    %r8,0x8(%rsp)                ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
                                                            ; - bug1::micro@61 (line 17)
  0x00007fcde0de2889:   nop
  0x00007fcde0de288a:   nop
  0x00007fcde0de288b:   nop
  0x00007fcde0de288c:   vzeroupper 
  0x00007fcde0de288f:   callq  0x00007fcde0c4aea0           ; ImmutableOopMap {[0]=NarrowOop [8]=Oop [128]=Oop }
                                                            ;*invokeinterface length {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - bug1::micro@46 (line 13)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fcde0de2894:   movabs $0x7fcdf23306c8,%rdi         ;   {external_word}
  0x00007fcde0de289e:   and    $0xfffffffffffffff0,%rsp
  0x00007fcde0de28a2:   callq  0x00007fcdf19ab8f4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fcde0de28a7:   hlt    
 ;; B41: #	out( N1 ) <- in( B5 )  Freq: 1.01327e-06
  0x00007fcde0de28a8:   mov    $0xffffffe4,%esi
  0x00007fcde0de28ad:   mov    %r8,0x18(%rsp)
  0x00007fcde0de28b2:   mov    %r11,0x20(%rsp)              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
                                                            ; - bug1::micro@61 (line 17)
  0x00007fcde0de28b7:   nop
  0x00007fcde0de28b8:   vzeroupper 
  0x00007fcde0de28bb:   callq  0x00007fcde0c4aea0           ; ImmutableOopMap {[0]=Oop [24]=Oop [32]=Oop [128]=Oop }
                                                            ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - java.util.Objects::checkIndex@3 (line 473)
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 57)
                                                            ; - jdk.incubator.vector.IntVector::fromArray@9 (line 3064)
                                                            ; - bug1::micro@5 (line 12)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fcde0de28c0:   movabs $0x7fcdf23306c8,%rdi         ;   {external_word}
  0x00007fcde0de28ca:   and    $0xfffffffffffffff0,%rsp
  0x00007fcde0de28ce:   callq  0x00007fcdf19ab8f4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fcde0de28d3:   hlt    
 ;; B42: #	out( N1 ) <- in( B28 )  Freq: 1.01284e-06
  0x00007fcde0de28d4:   mov    $0xffffffe4,%esi
  0x00007fcde0de28d9:   vmovdqu64 %zmm1,(%rsp)
  0x00007fcde0de28e0:   mov    %r11,0x50(%rsp)              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
                                                            ; - bug1::micro@61 (line 17)
  0x00007fcde0de28e5:   nop
  0x00007fcde0de28e6:   nop
  0x00007fcde0de28e7:   nop
  0x00007fcde0de28e8:   vzeroupper 
  0x00007fcde0de28eb:   callq  0x00007fcde0c4aea0           ; ImmutableOopMap {[80]=Oop [128]=Oop }
                                                            ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - java.util.Objects::checkIndex@3 (line 473)
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 57)
                                                            ; - jdk.incubator.vector.IntVector::intoArray@7 (line 3337)
                                                            ; - bug1::micro@61 (line 17)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fcde0de28f0:   movabs $0x7fcdf23306c8,%rdi         ;   {external_word}
  0x00007fcde0de28fa:   and    $0xfffffffffffffff0,%rsp
  0x00007fcde0de28fe:   callq  0x00007fcdf19ab8f4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fcde0de2903:   hlt    
 ;; B43: #	out( N1 ) <- in( B29 )  Freq: 1.01284e-06
  0x00007fcde0de2904:   mov    $0xffffffe4,%esi
  0x00007fcde0de2909:   mov    %r11,%rbp
  0x00007fcde0de290c:   vzeroupper 
  0x00007fcde0de290f:   callq  0x00007fcde0c4aea0           ; ImmutableOopMap {rbp=Oop }
                                                            ;*iaload {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - bug1::micro@66 (line 18)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fcde0de2914:   movabs $0x7fcdf23306c8,%rdi         ;   {external_word}
  0x00007fcde0de291e:   and    $0xfffffffffffffff0,%rsp
  0x00007fcde0de2922:   callq  0x00007fcdf19ab8f4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fcde0de2927:   hlt    
 ;; B44: #	out( N1 ) <- in( B2 )  Freq: 9.99999e-07
  0x00007fcde0de2928:   mov    $0xffffffde,%esi
  0x00007fcde0de292d:   mov    %r10,0x18(%rsp)              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
                                                            ; - bug1::micro@61 (line 17)
  0x00007fcde0de2932:   nop
  0x00007fcde0de2933:   nop
  0x00007fcde0de2934:   vzeroupper 
  0x00007fcde0de2937:   callq  0x00007fcde0c4aea0           ; ImmutableOopMap {rbp=NarrowOop [0]=Oop [24]=Oop [128]=Oop }
                                                            ;*invokeinterface length {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - jdk.incubator.vector.IntVector::fromArray@2 (line 3064)
                                                            ; - bug1::micro@5 (line 12)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fcde0de293c:   movabs $0x7fcdf23306c8,%rdi         ;   {external_word}
  0x00007fcde0de2946:   and    $0xfffffffffffffff0,%rsp
  0x00007fcde0de294a:   callq  0x00007fcdf19ab8f4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fcde0de294f:   hlt    
 ;; B45: #	out( N1 ) <- in( B4 )  Freq: 9.99997e-07
  0x00007fcde0de2950:   mov    $0xffffffcc,%esi
  0x00007fcde0de2955:   mov    %r8,0x18(%rsp)
  0x00007fcde0de295a:   mov    %r11,0x20(%rsp)              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
                                                            ; - bug1::micro@61 (line 17)
  0x00007fcde0de295f:   nop
  0x00007fcde0de2960:   vzeroupper 
  0x00007fcde0de2963:   callq  0x00007fcde0c4aea0           ; ImmutableOopMap {[0]=Oop [24]=Oop [32]=Oop [128]=Oop }
                                                            ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - java.util.Objects::checkIndex@3 (line 473)
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 57)
                                                            ; - jdk.incubator.vector.IntVector::fromArray@9 (line 3064)
                                                            ; - bug1::micro@5 (line 12)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fcde0de2968:   movabs $0x7fcdf23306c8,%rdi         ;   {external_word}
  0x00007fcde0de2972:   and    $0xfffffffffffffff0,%rsp
  0x00007fcde0de2976:   callq  0x00007fcdf19ab8f4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fcde0de297b:   hlt    
 ;; B46: #	out( N1 ) <- in( B27 )  Freq: 9.99569e-07
  0x00007fcde0de297c:   mov    $0xffffffcc,%esi
  0x00007fcde0de2981:   vmovdqu64 %zmm1,(%rsp)
  0x00007fcde0de2988:   mov    %r11,0x50(%rsp)              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
                                                            ; - bug1::micro@61 (line 17)
  0x00007fcde0de298d:   nop
  0x00007fcde0de298e:   nop
  0x00007fcde0de298f:   nop
  0x00007fcde0de2990:   vzeroupper 
  0x00007fcde0de2993:   callq  0x00007fcde0c4aea0           ; ImmutableOopMap {[80]=Oop [128]=Oop }
                                                            ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - java.util.Objects::checkIndex@3 (line 473)
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 57)
                                                            ; - jdk.incubator.vector.IntVector::intoArray@7 (line 3337)
                                                            ; - bug1::micro@61 (line 17)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fcde0de2998:   movabs $0x7fcdf23306c8,%rdi         ;   {external_word}
  0x00007fcde0de29a2:   and    $0xfffffffffffffff0,%rsp
  0x00007fcde0de29a6:   callq  0x00007fcdf19ab8f4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fcde0de29ab:   hlt    
 ;; B47: #	out( N1 ) <- in( B7 )  Freq: 1e-35
  0x00007fcde0de29ac:   mov    $0xffffffde,%esi
  0x00007fcde0de29b1:   mov    %r11,0x18(%rsp)              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
                                                            ; - bug1::micro@61 (line 17)
  0x00007fcde0de29b6:   nop
  0x00007fcde0de29b7:   nop
  0x00007fcde0de29b8:   vzeroupper 
  0x00007fcde0de29bb:   callq  0x00007fcde0c4aea0           ; ImmutableOopMap {rbp=NarrowOop [0]=Oop [24]=Oop [128]=Oop }
                                                            ;*checkcast {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::dummyVectorMF@4 (line 4036)
                                                            ; - jdk.incubator.vector.IntVector::fromArray@19 (line 3066)
                                                            ; - bug1::micro@5 (line 12)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fcde0de29c0:   movabs $0x7fcdf23306c8,%rdi         ;   {external_word}
  0x00007fcde0de29ca:   and    $0xfffffffffffffff0,%rsp
  0x00007fcde0de29ce:   callq  0x00007fcdf19ab8f4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fcde0de29d3:   hlt    
 ;; B48: #	out( N1 ) <- in( B18 )  Freq: 1e-35
  0x00007fcde0de29d4:   mov    $0xffffffde,%esi
  0x00007fcde0de29d9:   mov    %ecx,%ebp
  0x00007fcde0de29db:   mov    %r9d,(%rsp)
  0x00007fcde0de29df:   vmovdqu64 %zmm1,0x40(%rsp)
  0x00007fcde0de29e7:   mov    %r8,0x18(%rsp)
  0x00007fcde0de29ec:   mov    %r11d,0x20(%rsp)             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
                                                            ; - bug1::micro@61 (line 17)
  0x00007fcde0de29f1:   nop
  0x00007fcde0de29f2:   nop
  0x00007fcde0de29f3:   nop
  0x00007fcde0de29f4:   vzeroupper 
  0x00007fcde0de29f7:   callq  0x00007fcde0c4aea0           ; ImmutableOopMap {[24]=Oop [32]=NarrowOop [128]=Oop }
                                                            ;*checkcast {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::dummyVectorMF@4 (line 4036)
                                                            ; - jdk.incubator.vector.IntVector::fromArray@19 (line 3066)
                                                            ; - bug1::micro@27 (line 14)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fcde0de29fc:   movabs $0x7fcdf23306c8,%rdi         ;   {external_word}
  0x00007fcde0de2a06:   and    $0xfffffffffffffff0,%rsp
  0x00007fcde0de2a0a:   callq  0x00007fcdf19ab8f4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fcde0de2a0f:   hlt    
 ;; B49: #	out( N1 ) <- in( B13 )  Freq: 6.58352e-05
  0x00007fcde0de2a10:   mov    $0xfffffff6,%esi             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
                                                            ; - bug1::micro@61 (line 17)
  0x00007fcde0de2a15:   nop
  0x00007fcde0de2a16:   nop
  0x00007fcde0de2a17:   nop
  0x00007fcde0de2a18:   vzeroupper 
  0x00007fcde0de2a1b:   callq  0x00007fcde0c4aea0           ; ImmutableOopMap {}
                                                            ;*invokeinterface length {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - jdk.incubator.vector.IntVector::fromArray@2 (line 3064)
                                                            ; - bug1::micro@27 (line 14)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fcde0de2a20:   movabs $0x7fcdf23306c8,%rdi         ;   {external_word}
  0x00007fcde0de2a2a:   and    $0xfffffffffffffff0,%rsp
  0x00007fcde0de2a2e:   callq  0x00007fcdf19ab8f4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fcde0de2a33:   hlt    
 ;; B50: #	out( N1 ) <- in( B23 )  Freq: 6.58349e-05
  0x00007fcde0de2a34:   mov    $0xfffffff6,%esi             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
                                                            ; - bug1::micro@61 (line 17)
  0x00007fcde0de2a39:   nop
  0x00007fcde0de2a3a:   nop
  0x00007fcde0de2a3b:   nop
  0x00007fcde0de2a3c:   vzeroupper 
  0x00007fcde0de2a3f:   callq  0x00007fcde0c4aea0           ; ImmutableOopMap {}
                                                            ;*invokeinterface length {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - bug1::micro@46 (line 13)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fcde0de2a44:   movabs $0x7fcdf23306c8,%rdi         ;   {external_word}
  0x00007fcde0de2a4e:   and    $0xfffffffffffffff0,%rsp
  0x00007fcde0de2a52:   callq  0x00007fcdf19ab8f4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fcde0de2a57:   hlt    
 ;; B51: #	out( N1 ) <- in( B17 )  Freq: 3.09812e-05
  0x00007fcde0de2a58:   mov    $0xffffff45,%esi
  0x00007fcde0de2a5d:   mov    %ecx,%ebp
  0x00007fcde0de2a5f:   mov    %r9d,(%rsp)
  0x00007fcde0de2a63:   vmovdqu64 %zmm1,0x40(%rsp)
  0x00007fcde0de2a6b:   mov    %r8,0x18(%rsp)
  0x00007fcde0de2a70:   mov    %rdi,0x20(%rsp)
  0x00007fcde0de2a75:   mov    %r11d,0x2c(%rsp)             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
                                                            ; - bug1::micro@61 (line 17)
  0x00007fcde0de2a7a:   nop
  0x00007fcde0de2a7b:   nop
  0x00007fcde0de2a7c:   vzeroupper 
  0x00007fcde0de2a7f:   callq  0x00007fcde0c4aea0           ; ImmutableOopMap {[24]=Oop [32]=Oop [44]=NarrowOop [128]=Oop }
                                                            ;*ifnull {reexecute=1 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - (reexecute) jdk.incubator.vector.AbstractSpecies::dummyVectorMF@6 (line 323)
                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::dummyVectorMF@1 (line 4036)
                                                            ; - jdk.incubator.vector.IntVector::fromArray@19 (line 3066)
                                                            ; - bug1::micro@27 (line 14)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fcde0de2a84:   movabs $0x7fcdf23306c8,%rdi         ;   {external_word}
  0x00007fcde0de2a8e:   and    $0xfffffffffffffff0,%rsp
  0x00007fcde0de2a92:   callq  0x00007fcdf19ab8f4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fcde0de2a97:   hlt    
 ;; B52: #	out( N1 ) <- in( B1 )  Freq: 1.01328e-06
  0x00007fcde0de2a98:   mov    $0xfffffff6,%esi             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
                                                            ; - bug1::micro@61 (line 17)
  0x00007fcde0de2a9d:   nop
  0x00007fcde0de2a9e:   nop
  0x00007fcde0de2a9f:   nop
  0x00007fcde0de2aa0:   vzeroupper 
  0x00007fcde0de2aa3:   callq  0x00007fcde0c4aea0           ; ImmutableOopMap {}
                                                            ;*invokeinterface length {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - jdk.incubator.vector.IntVector::fromArray@2 (line 3064)
                                                            ; - bug1::micro@5 (line 12)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fcde0de2aa8:   movabs $0x7fcdf23306c8,%rdi         ;   {external_word}
  0x00007fcde0de2ab2:   and    $0xfffffffffffffff0,%rsp
  0x00007fcde0de2ab6:   callq  0x00007fcdf19ab8f4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fcde0de2abb:   hlt    
 ;; B53: #	out( N1 ) <- in( B3 )  Freq: 1.01328e-06
  0x00007fcde0de2abc:   mov    $0xfffffff6,%esi             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
                                                            ; - bug1::micro@61 (line 17)
  0x00007fcde0de2ac1:   nop
  0x00007fcde0de2ac2:   nop
  0x00007fcde0de2ac3:   nop
  0x00007fcde0de2ac4:   vzeroupper 
  0x00007fcde0de2ac7:   callq  0x00007fcde0c4aea0           ; ImmutableOopMap {}
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - jdk.incubator.vector.IntVector::fromArray@8 (line 3064)
                                                            ; - bug1::micro@5 (line 12)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fcde0de2acc:   movabs $0x7fcdf23306c8,%rdi         ;   {external_word}
  0x00007fcde0de2ad6:   and    $0xfffffffffffffff0,%rsp
  0x00007fcde0de2ada:   callq  0x00007fcdf19ab8f4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fcde0de2adf:   hlt    
 ;; B54: #	out( N1 ) <- in( B10 )  Freq: 1.01327e-06
  0x00007fcde0de2ae0:   mov    $0xffffff76,%esi
  0x00007fcde0de2ae5:   vmovdqu64 %zmm1,(%rsp)
  0x00007fcde0de2aec:   mov    %r8,%rbp                     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
                                                            ; - bug1::micro@61 (line 17)
  0x00007fcde0de2aef:   nop
  0x00007fcde0de2af0:   vzeroupper 
  0x00007fcde0de2af3:   callq  0x00007fcde0c4aea0           ; ImmutableOopMap {rbp=Oop [128]=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - (reexecute) bug1::micro@18 (line 13)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fcde0de2af8:   movabs $0x7fcdf23306c8,%rdi         ;   {external_word}
  0x00007fcde0de2b02:   and    $0xfffffffffffffff0,%rsp
  0x00007fcde0de2b06:   callq  0x00007fcdf19ab8f4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fcde0de2b0b:   hlt    
 ;; B55: #	out( N1 ) <- in( B26 )  Freq: 1.01284e-06
  0x00007fcde0de2b0c:   mov    $0xfffffff6,%esi             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
                                                            ; - bug1::micro@61 (line 17)
  0x00007fcde0de2b11:   nop
  0x00007fcde0de2b12:   nop
  0x00007fcde0de2b13:   nop
  0x00007fcde0de2b14:   vzeroupper 
  0x00007fcde0de2b17:   callq  0x00007fcde0c4aea0           ; ImmutableOopMap {}
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@6 (line 3337)
                                                            ; - bug1::micro@61 (line 17)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fcde0de2b1c:   movabs $0x7fcdf23306c8,%rdi         ;   {external_word}
  0x00007fcde0de2b26:   and    $0xfffffffffffffff0,%rsp
  0x00007fcde0de2b2a:   callq  0x00007fcdf19ab8f4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fcde0de2b2f:   hlt    
 ;; B56: #	out( N1 ) <- in( B6 )  Freq: 4.76835e-07
  0x00007fcde0de2b30:   mov    $0xffffff45,%esi
  0x00007fcde0de2b35:   mov    %r11,0x18(%rsp)
  0x00007fcde0de2b3a:   mov    %r8,0x20(%rsp)               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
                                                            ; - bug1::micro@61 (line 17)
  0x00007fcde0de2b3f:   nop
  0x00007fcde0de2b40:   vzeroupper 
  0x00007fcde0de2b43:   callq  0x00007fcde0c4aea0           ; ImmutableOopMap {rbp=NarrowOop [0]=Oop [24]=Oop [32]=Oop [128]=Oop }
                                                            ;*ifnull {reexecute=1 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - (reexecute) jdk.incubator.vector.AbstractSpecies::dummyVectorMF@6 (line 323)
                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::dummyVectorMF@1 (line 4036)
                                                            ; - jdk.incubator.vector.IntVector::fromArray@19 (line 3066)
                                                            ; - bug1::micro@5 (line 12)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fcde0de2b48:   movabs $0x7fcdf23306c8,%rdi         ;   {external_word}
  0x00007fcde0de2b52:   and    $0xfffffffffffffff0,%rsp
  0x00007fcde0de2b56:   callq  0x00007fcdf19ab8f4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fcde0de2b5b:   hlt                                 ;*invokestatic load {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - jdk.incubator.vector.IntVector::fromArray0Template@32 (line 3554)
                                                            ; - jdk.incubator.vector.Int512Vector::fromArray0@3 (line 898)
                                                            ; - jdk.incubator.vector.IntVector::fromArray@24 (line 3066)
                                                            ; - bug1::micro@27 (line 14)
 ;; B57: #	out( N1 ) <- in( B31 )  Freq: 6.4983e-08
  0x00007fcde0de2b5c:   mov    $0xffffff97,%esi
  0x00007fcde0de2b61:   mov    %rax,-0x8(%rsp)
  0x00007fcde0de2b66:   mov    0x4(%rsp),%eax
  0x00007fcde0de2b6a:   mov    %eax,(%rsp)
  0x00007fcde0de2b6d:   mov    -0x8(%rsp),%rax              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
                                                            ; - bug1::micro@61 (line 17)
  0x00007fcde0de2b72:   nop
  0x00007fcde0de2b73:   nop
  0x00007fcde0de2b74:   vzeroupper 
  0x00007fcde0de2b77:   callq  0x00007fcde0c4aea0           ; ImmutableOopMap {[8]=Oop [128]=Oop }
                                                            ;*invokestatic load {reexecute=1 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - (reexecute) jdk.incubator.vector.IntVector::fromArray0Template@32 (line 3554)
                                                            ; - jdk.incubator.vector.Int512Vector::fromArray0@3 (line 898)
                                                            ; - jdk.incubator.vector.IntVector::fromArray@24 (line 3066)
                                                            ; - bug1::micro@27 (line 14)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fcde0de2b7c:   movabs $0x7fcdf23306c8,%rdi         ;   {external_word}
  0x00007fcde0de2b86:   and    $0xfffffffffffffff0,%rsp
  0x00007fcde0de2b8a:   callq  0x00007fcdf19ab8f4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fcde0de2b8f:   hlt                                 ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - jdk.incubator.vector.IntVector::lanewiseTemplate@154 (line 856)
                                                            ; - jdk.incubator.vector.Int512Vector::lanewise@3 (line 304)
                                                            ; - jdk.incubator.vector.Int512Vector::lanewise@3 (line 42)
                                                            ; - jdk.incubator.vector.IntVector::and@5 (line 1866)
                                                            ; - bug1::micro@36 (line 15)
 ;; B58: #	out( N1 ) <- in( B33 )  Freq: 6.4983e-08
  0x00007fcde0de2b90:   mov    $0xffffff97,%esi
  0x00007fcde0de2b95:   mov    0x48(%rsp),%ebp
  0x00007fcde0de2b99:   rex.W pushq 0x80(%rsp)
  0x00007fcde0de2ba1:   rex.W popq 0x48(%rsp)
  0x00007fcde0de2ba6:   mov    %rax,-0x8(%rsp)
  0x00007fcde0de2bab:   mov    0x88(%rsp),%eax
  0x00007fcde0de2bb2:   mov    %eax,0x50(%rsp)
  0x00007fcde0de2bb6:   mov    -0x8(%rsp),%rax              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
                                                            ; - bug1::micro@61 (line 17)
  0x00007fcde0de2bbb:   nop
  0x00007fcde0de2bbc:   vzeroupper 
  0x00007fcde0de2bbf:   callq  0x00007fcde0c4aea0           ; ImmutableOopMap {[64]=Oop [72]=Oop }
                                                            ;*invokestatic binaryOp {reexecute=1 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - (reexecute) jdk.incubator.vector.IntVector::lanewiseTemplate@154 (line 856)
                                                            ; - jdk.incubator.vector.Int512Vector::lanewise@3 (line 304)
                                                            ; - jdk.incubator.vector.Int512Vector::lanewise@3 (line 42)
                                                            ; - jdk.incubator.vector.IntVector::and@5 (line 1866)
                                                            ; - bug1::micro@36 (line 15)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fcde0de2bc4:   movabs $0x7fcdf23306c8,%rdi         ;   {external_word}
  0x00007fcde0de2bce:   and    $0xfffffffffffffff0,%rsp
  0x00007fcde0de2bd2:   callq  0x00007fcdf19ab8f4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fcde0de2bd7:   hlt                                 ;*invokestatic load {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - jdk.incubator.vector.IntVector::fromArray0Template@32 (line 3554)
                                                            ; - jdk.incubator.vector.Int512Vector::fromArray0@3 (line 898)
                                                            ; - jdk.incubator.vector.IntVector::fromArray@24 (line 3066)
                                                            ; - bug1::micro@5 (line 12)
 ;; B59: #	out( N1 ) <- in( B35 )  Freq: 1.00016e-09
  0x00007fcde0de2bd8:   mov    $0xffffff97,%esi             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
                                                            ; - bug1::micro@61 (line 17)
  0x00007fcde0de2bdd:   nop
  0x00007fcde0de2bde:   nop
  0x00007fcde0de2bdf:   nop
  0x00007fcde0de2be0:   vzeroupper 
  0x00007fcde0de2be3:   callq  0x00007fcde0c4aea0           ; ImmutableOopMap {rbp=Oop [0]=Oop [128]=Oop }
                                                            ;*invokestatic load {reexecute=1 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - (reexecute) jdk.incubator.vector.IntVector::fromArray0Template@32 (line 3554)
                                                            ; - jdk.incubator.vector.Int512Vector::fromArray0@3 (line 898)
                                                            ; - jdk.incubator.vector.IntVector::fromArray@24 (line 3066)
                                                            ; - bug1::micro@5 (line 12)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fcde0de2be8:   movabs $0x7fcdf23306c8,%rdi         ;   {external_word}
  0x00007fcde0de2bf2:   and    $0xfffffffffffffff0,%rsp
  0x00007fcde0de2bf6:   callq  0x00007fcdf19ab8f4           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fcde0de2bfb:   hlt                                 ;*invokestatic load {reexecute=0 rethrow=0 return_oop=0 return_scalarized=0}
                                                            ; - jdk.incubator.vector.IntVector::fromArray0Template@32 (line 3554)
                                                            ; - jdk.incubator.vector.Int512Vector::fromArray0@3 (line 898)
                                                            ; - jdk.incubator.vector.IntVector::fromArray@24 (line 3066)
                                                            ; - bug1::micro@5 (line 12)
  0x00007fcde0de2bfc:   movabs $0x7fcde0de26dd,%r10         ;   {internal_word}
  0x00007fcde0de2c06:   mov    %r10,0x3d8(%r15)
  0x00007fcde0de2c0d:   jmpq   0x00007fcde0d77520           ;   {runtime_call SafepointBlob}
  0x00007fcde0de2c12:   callq  Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x00007fcde0de2c17:   jmpq   0x00007fcde0de23be
  0x00007fcde0de2c1c:   hlt    
  0x00007fcde0de2c1d:   hlt    
  0x00007fcde0de2c1e:   hlt    
  0x00007fcde0de2c1f:   hlt    
[Exception Handler]
  0x00007fcde0de2c20:   jmpq   0x00007fcde0c7f7a0           ;   {no_reloc}
[Deopt Handler Code]
  0x00007fcde0de2c25:   callq  0x00007fcde0de2c2a
  0x00007fcde0de2c2a:   subq   $0x5,(%rsp)
  0x00007fcde0de2c2f:   jmpq   0x00007fcde0d789c0           ;   {runtime_call DeoptimizationBlob}
  0x00007fcde0de2c34:   hlt    
  0x00007fcde0de2c35:   hlt    
  0x00007fcde0de2c36:   hlt    
  0x00007fcde0de2c37:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Oops:
  0x00007fcde0de2c38:   0x000000011f0ed5b0 a 'java/lang/Class'{0x000000011f0ed5b0} = 'jdk/incubator/vector/Int512Vector'
  0x00007fcde0de2c40:   0x00000007fef002d0 a 'java/lang/Class'{0x00000007fef002d0} = int
  0x00007fcde0de2c48:   0x000000011f0ed560 a 'jdk/incubator/vector/IntVector$IntSpecies'{0x000000011f0ed560}
  0x00007fcde0de2c50:   0x000000011f10aae0 a 'jdk/incubator/vector/IntVector$$Lambda$22+0x0000000801053240'{0x000000011f10aae0}
  0x00007fcde0de2c58:   0x000000011f188ef0 a 'jdk/incubator/vector/IntVector$$Lambda$25+0x0000000801057fa0'{0x000000011f188ef0}
  0x00007fcde0de2c60:   0x000000011f014348 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x000000011f014348}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Metadata:
  0x00007fcde0de2c68:   0x00007fcd98401528 {method} {0x00007fcd98401528} 'micro' '([I[I[II)I' in 'bug1'
  0x00007fcde0de2c70:   0x00007fcd98045a08 {method} {0x00007fcd98045a08} 'intoArray' '([II)V' in 'jdk/incubator/vector/IntVector'
  0x00007fcde0de2c78:   0x0000000801048770 'jdk/incubator/vector/IntVector$IntSpecies'
  0x00007fcde0de2c80:   0x00007fcd980451a8 {method} {0x00007fcd980451a8} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[II)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/IntVector'
  0x00007fcde0de2c88:   0x00007fcd98091f40 {method} {0x00007fcd98091f40} 'dummyVectorMF' '()Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/IntVector$IntSpecies'
  0x00007fcde0de2c90:   0x00007fcd98097bf8 {method} {0x00007fcd98097bf8} 'dummyVectorMF' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
  0x00007fcde0de2c98:   0x000000080104d540 'jdk/incubator/vector/Int512Vector'
  0x00007fcde0de2ca0:   0x00007fcd980e4bc0 {method} {0x00007fcd980e4bc0} 'fromArray0' '([II)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/Int512Vector'
  0x00007fcde0de2ca8:   0x00007fcd98046300 {method} {0x00007fcd98046300} 'fromArray0Template' '([II)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/IntVector'
  0x00007fcde0de2cb0:   0x00007fcd980960c0 {method} {0x00007fcd980960c0} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
  0x00007fcde0de2cb8:   0x00007fcd980ef9b8 {method} {0x00007fcd980ef9b8} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
  0x00007fcde0de2cc0:   0x0000000800078940 {method} {0x0000000800078940} 'checkIndex' '(II)I' in 'java/util/Objects'
  0x00007fcde0de2cc8:   0x00007fcd98047b78 {method} {0x00007fcd98047b78} 'arrayAddress' '([II)J' in 'jdk/incubator/vector/IntVector'
  0x00007fcde0de2cd0:   0x00007fcd98040258 {method} {0x00007fcd98040258} 'and' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/IntVector'
  0x00007fcde0de2cd8:   0x00007fcd980e6ce0 {method} {0x00007fcd980e6ce0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/Int512Vector'
  0x00007fcde0de2ce0:   0x00007fcd980e2578 {method} {0x00007fcd980e2578} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/Int512Vector;' in 'jdk/incubator/vector/Int512Vector'
  0x00007fcde0de2ce8:   0x00007fcd9803cf98 {method} {0x00007fcd9803cf98} 'lanewiseTemplate' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/IntVector'
  0x00007fcde0de2cf0:   0x00000008010422f8 'jdk/incubator/vector/IntVector'
  0x00007fcde0de2cf8:   0x00007fcd9803cdc0 {method} {0x00007fcd9803cdc0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/IntVector'
  0x00007fcde0de2d00:   0x00000008010541a0 'jdk/incubator/vector/VectorOperators$AssociativeImpl'
  0x00007fcde0de2d08:   0x00007fcd98167ea8 {method} {0x00007fcd98167ea8} 'opKind' '(I)Z' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  0x00007fcde0de2d10:   0x0000000801053910 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  0x00007fcde0de2d18:   0x00007fcd981679e0 {method} {0x00007fcd981679e0} 'opCode' '(II)I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  0x00007fcde0de2d20:   0x00007fcd98167ad0 {method} {0x00007fcd98167ad0} 'opCodeRaw' '()I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  0x00007fcde0de2d28:   0x00007fcd9808aa48 {method} {0x00007fcd9808aa48} 'find' '(Ljdk/incubator/vector/VectorOperators$Operator;ILjava/util/function/IntFunction;)Ljava/lang/Object;' in 'jdk/incubator/vector/VectorOperators$ImplCache'
  0x00007fcde0de2d30:   0x0000000801046f70 'jdk/incubator/vector/VectorOperators$ImplCache'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
pc-bytecode offsets:
PcDesc(pc=0x00007fcde0de239f offset=ffffffff bits=0):
PcDesc(pc=0x00007fcde0de23be offset=1e bits=0):
   bug1::micro@-1 (line 12)
PcDesc(pc=0x00007fcde0de23d5 offset=35 bits=0):
   jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
   bug1::micro@61 (line 17)
PcDesc(pc=0x00007fcde0de23e3 offset=43 bits=0):
   bug1::micro@0 (line 12)
PcDesc(pc=0x00007fcde0de23ef offset=4f bits=0):
   jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
   bug1::micro@61 (line 17)
PcDesc(pc=0x00007fcde0de2408 offset=68 bits=0):
   jdk.incubator.vector.IntVector::fromArray@2 (line 3064)
   bug1::micro@5 (line 12)
PcDesc(pc=0x00007fcde0de242a offset=8a bits=0):
   jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
   bug1::micro@61 (line 17)
PcDesc(pc=0x00007fcde0de242e offset=8e bits=0):
   jdk.incubator.vector.AbstractSpecies::dummyVectorMF@1 (line 322)
   jdk.incubator.vector.IntVector$IntSpecies::dummyVectorMF@1 (line 4036)
   jdk.incubator.vector.IntVector::fromArray@19 (line 3066)
   bug1::micro@5 (line 12)
PcDesc(pc=0x00007fcde0de2447 offset=a7 bits=0):
   jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
   bug1::micro@61 (line 17)
PcDesc(pc=0x00007fcde0de246d offset=cd bits=0):
   bug1::micro@54 (line 13)
PcDesc(pc=0x00007fcde0de24c8 offset=128 bits=0):
   jdk.incubator.vector.IntVector::fromArray0Template@32 (line 3554)
   jdk.incubator.vector.Int512Vector::fromArray0@3 (line 898)
   jdk.incubator.vector.IntVector::fromArray@24 (line 3066)
   bug1::micro@5 (line 12)
PcDesc(pc=0x00007fcde0de2507 offset=167 bits=0):
   jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
   bug1::micro@61 (line 17)
PcDesc(pc=0x00007fcde0de2511 offset=171 bits=0):
   jdk.incubator.vector.IntVector::fromArray@2 (line 3064)
   bug1::micro@27 (line 14)
PcDesc(pc=0x00007fcde0de2515 offset=175 bits=0):
   jdk.incubator.vector.AbstractSpecies::length@1 (line 122)
   jdk.incubator.vector.IntVector::fromArray@2 (line 3064)
   bug1::micro@27 (line 14)
PcDesc(pc=0x00007fcde0de2530 offset=190 bits=0):
   jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
   bug1::micro@61 (line 17)
PcDesc(pc=0x00007fcde0de2534 offset=194 bits=0):
   jdk.incubator.vector.AbstractSpecies::dummyVectorMF@1 (line 322)
   jdk.incubator.vector.IntVector$IntSpecies::dummyVectorMF@1 (line 4036)
   jdk.incubator.vector.IntVector::fromArray@19 (line 3066)
   bug1::micro@27 (line 14)
PcDesc(pc=0x00007fcde0de2537 offset=197 bits=0):
   java.util.Objects::checkIndex@3 (line 473)
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 57)
   jdk.incubator.vector.IntVector::fromArray@9 (line 3064)
   bug1::micro@27 (line 14)
PcDesc(pc=0x00007fcde0de254b offset=1ab bits=0):
   jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
   bug1::micro@61 (line 17)
PcDesc(pc=0x00007fcde0de2551 offset=1b1 bits=0):
   bug1::micro@54 (line 13)
PcDesc(pc=0x00007fcde0de255f offset=1bf bits=0):
   jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
   bug1::micro@61 (line 17)
PcDesc(pc=0x00007fcde0de2562 offset=1c2 bits=0):
   jdk.incubator.vector.IntVector::arrayAddress@4 (line 3803)
   jdk.incubator.vector.IntVector::fromArray0Template@20 (line 3556)
   jdk.incubator.vector.Int512Vector::fromArray0@3 (line 898)
   jdk.incubator.vector.IntVector::fromArray@24 (line 3066)
   bug1::micro@27 (line 14)
PcDesc(pc=0x00007fcde0de25ed offset=24d bits=0):
   bug1::micro@54 (line 13)
PcDesc(pc=0x00007fcde0de2643 offset=2a3 bits=0):
   jdk.incubator.vector.IntVector::lanewiseTemplate@154 (line 856)
   jdk.incubator.vector.Int512Vector::lanewise@3 (line 304)
   jdk.incubator.vector.Int512Vector::lanewise@3 (line 42)
   jdk.incubator.vector.IntVector::and@5 (line 1866)
   bug1::micro@36 (line 15)
PcDesc(pc=0x00007fcde0de2651 offset=2b1 bits=0):
   bug1::micro@43 (line 13)
PcDesc(pc=0x00007fcde0de2666 offset=2c6 bits=0):
   jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
   bug1::micro@61 (line 17)
PcDesc(pc=0x00007fcde0de266c offset=2cc bits=0):
   bug1::micro@54 (line 13)
PcDesc(pc=0x00007fcde0de2677 offset=2d7 bits=0):
   bug1::micro@46 (line 13)
PcDesc(pc=0x00007fcde0de267b offset=2db bits=1):
   bug1::micro@54 (line 13)  reexecute=true
   Locals
    - l0: empty
    - l1: reg r8 [16],oop
    - l2: stack[128],oop
    - l3: stack[136]
    - l4: obj[345]
    - l5: reg r9 [18],int
    - l6: empty
   Objects
    - 345: jdk.incubator.vector.Int512Vector reg xmm1 [64],vector
PcDesc(pc=0x00007fcde0de26cd offset=32d bits=0):
   jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
   bug1::micro@61 (line 17)
PcDesc(pc=0x00007fcde0de26d2 offset=332 bits=0):
   bug1::micro@66 (line 18)
PcDesc(pc=0x00007fcde0de2722 offset=382 bits=0):
   jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
   bug1::micro@61 (line 17)
PcDesc(pc=0x00007fcde0de272c offset=38c bits=5):
   jdk.incubator.vector.IntVector::fromArray0Template@32 (line 3554)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x000000011f0ed5b0} = 'jdk/incubator/vector/Int512Vector'
    - @1: a 'java/lang/Class'{0x00000007fef002d0} = int
    - @2: 16
    - @3: stack[8],oop
    - @4: 0
    - @5: reg rbp [10],long
    - @6: stack[8],oop
    - @7: 0
    - @8: stack[24],long
    - @9: a 'jdk/incubator/vector/IntVector$IntSpecies'{0x000000011f0ed560}
    - @10: a 'jdk/incubator/vector/IntVector$$Lambda$22+0x0000000801053240'{0x000000011f10aae0}
   jdk.incubator.vector.Int512Vector::fromArray0@3 (line 898)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.IntVector::fromArray@24 (line 3066)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   bug1::micro@27 (line 14)
   Locals
    - l0: empty
    - l1: stack[8],oop
    - l2: stack[128],oop
    - l3: stack[136]
    - l4: obj[283]
    - l5: stack[4]
    - l6: empty
   Objects
    - 283: jdk.incubator.vector.Int512Vector stack[64],vector
PcDesc(pc=0x00007fcde0de2777 offset=3d7 bits=0):
   jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
   bug1::micro@61 (line 17)
PcDesc(pc=0x00007fcde0de2780 offset=3e0 bits=5):
   jdk.incubator.vector.IntVector::lanewiseTemplate@154 (line 856)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 10
    - @1: a 'java/lang/Class'{0x000000011f0ed5b0} = 'jdk/incubator/vector/Int512Vector'
    - @2: NULL
    - @3: a 'java/lang/Class'{0x00000007fef002d0} = int
    - @4: 16
    - @5: obj[320]
    - @6: obj[321]
    - @7: NULL
    - @8: a 'jdk/incubator/vector/IntVector$$Lambda$25+0x0000000801057fa0'{0x000000011f188ef0}
   jdk.incubator.vector.Int512Vector::lanewise@3 (line 304)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.Int512Vector::lanewise@3 (line 42)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.IntVector::and@5 (line 1866)
   Locals
    - l0: empty
    - l1: empty
   bug1::micro@36 (line 15)
   Locals
    - l0: empty
    - l1: stack[64],oop
    - l2: stack[128],oop
    - l3: stack[136]
    - l4: empty
    - l5: stack[72]
    - l6: empty
   Objects
    - 320: jdk.incubator.vector.Int512Vector stack[0],vector
    - 321: jdk.incubator.vector.Int512Vector stack[192],vector
PcDesc(pc=0x00007fcde0de27bc offset=41c bits=5):
   jdk.incubator.vector.IntVector::fromArray0Template@32 (line 3554)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x000000011f0ed5b0} = 'jdk/incubator/vector/Int512Vector'
    - @1: a 'java/lang/Class'{0x00000007fef002d0} = int
    - @2: 16
    - @3: reg rbp [10],oop
    - @4: 0
    - @5: 16
    - @6: reg rbp [10],oop
    - @7: 0
    - @8: 0
    - @9: a 'jdk/incubator/vector/IntVector$IntSpecies'{0x000000011f0ed560}
    - @10: a 'jdk/incubator/vector/IntVector$$Lambda$22+0x0000000801053240'{0x000000011f10aae0}
   jdk.incubator.vector.Int512Vector::fromArray0@3 (line 898)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.IntVector::fromArray@24 (line 3066)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   bug1::micro@5 (line 12)
   Locals
    - l0: empty
    - l1: stack[0],oop
    - l2: stack[128],oop
    - l3: stack[136]
    - l4: empty
    - l5: empty
    - l6: empty
PcDesc(pc=0x00007fcde0de27e2 offset=442 bits=0):
   jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
   bug1::micro@61 (line 17)
PcDesc(pc=0x00007fcde0de27ec offset=44c bits=0):
   java.util.Objects::checkIndex@3 (line 473)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[4]
    - @1: reg rbp [10],int
    - @2: NULL
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 57)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.IntVector::fromArray@9 (line 3064)
   Locals
    - l0: stack[32],oop
    - l1: stack[40],oop
    - l2: empty
    - l3: empty
   bug1::micro@27 (line 14)
   Locals
    - l0: empty
    - l1: stack[40],oop
    - l2: stack[128],oop
    - l3: stack[136]
    - l4: obj[420]
    - l5: stack[4]
    - l6: empty
   Objects
    - 420: jdk.incubator.vector.Int512Vector stack[64],vector
PcDesc(pc=0x00007fcde0de281b offset=47b bits=0):
   jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
   bug1::micro@61 (line 17)
PcDesc(pc=0x00007fcde0de2824 offset=484 bits=0):
   jdk.incubator.vector.IntVector::fromArray@2 (line 3064)
   Locals
    - l0: stack[8],narrowoop
    - l1: stack[32],oop
    - l2: empty
    - l3: empty
   Expression stack
    - @0: stack[4]
    - @1: stack[8],narrowoop
   bug1::micro@27 (line 14)
   Locals
    - l0: empty
    - l1: stack[32],oop
    - l2: stack[128],oop
    - l3: stack[136]
    - l4: obj[397]
    - l5: stack[4]
    - l6: empty
   Objects
    - 397: jdk.incubator.vector.Int512Vector stack[64],vector
PcDesc(pc=0x00007fcde0de2853 offset=4b3 bits=0):
   jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
   bug1::micro@61 (line 17)
PcDesc(pc=0x00007fcde0de285c offset=4bc bits=0):
   java.util.Objects::checkIndex@3 (line 473)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[4]
    - @1: reg rbp [10],int
    - @2: NULL
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 57)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.IntVector::fromArray@9 (line 3064)
   Locals
    - l0: stack[32],oop
    - l1: stack[40],oop
    - l2: empty
    - l3: empty
   bug1::micro@27 (line 14)
   Locals
    - l0: empty
    - l1: stack[40],oop
    - l2: stack[128],oop
    - l3: stack[136]
    - l4: obj[412]
    - l5: stack[4]
    - l6: empty
   Objects
    - 412: jdk.incubator.vector.Int512Vector stack[64],vector
PcDesc(pc=0x00007fcde0de2889 offset=4e9 bits=0):
   jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
   bug1::micro@61 (line 17)
PcDesc(pc=0x00007fcde0de2894 offset=4f4 bits=0):
   bug1::micro@46 (line 13)
   Locals
    - l0: empty
    - l1: stack[8],oop
    - l2: stack[128],oop
    - l3: stack[136]
    - l4: obj[404]
    - l5: empty
    - l6: empty
   Expression stack
    - @0: reg rbp [10],int
    - @1: stack[0],narrowoop
   Objects
    - 404: jdk.incubator.vector.Int512Vector stack[64],vector
PcDesc(pc=0x00007fcde0de28b7 offset=517 bits=0):
   jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
   bug1::micro@61 (line 17)
PcDesc(pc=0x00007fcde0de28c0 offset=520 bits=0):
   java.util.Objects::checkIndex@3 (line 473)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: 0
    - @1: reg rbp [10],int
    - @2: NULL
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 57)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.IntVector::fromArray@9 (line 3064)
   Locals
    - l0: stack[24],oop
    - l1: stack[32],oop
    - l2: empty
    - l3: empty
   bug1::micro@5 (line 12)
   Locals
    - l0: empty
    - l1: stack[0],oop
    - l2: stack[128],oop
    - l3: stack[136]
    - l4: empty
    - l5: empty
    - l6: empty
PcDesc(pc=0x00007fcde0de28e5 offset=545 bits=0):
   jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
   bug1::micro@61 (line 17)
PcDesc(pc=0x00007fcde0de28f0 offset=550 bits=0):
   java.util.Objects::checkIndex@3 (line 473)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: 0
    - @1: reg rbp [10],int
    - @2: NULL
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 57)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.IntVector::intoArray@7 (line 3337)
   Locals
    - l0: obj[357]
    - l1: stack[128],oop
    - l2: empty
    - l3: empty
   bug1::micro@61 (line 17)
   Locals
    - l0: empty
    - l1: empty
    - l2: stack[80],oop
    - l3: stack[136]
    - l4: empty
    - l5: empty
    - l6: empty
   Objects
    - 357: jdk.incubator.vector.Int512Vector stack[0],vector
PcDesc(pc=0x00007fcde0de2914 offset=574 bits=0):
   bug1::micro@66 (line 18)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
   Expression stack
    - @0: reg rbp [10],oop
    - @1: stack[136]
PcDesc(pc=0x00007fcde0de2932 offset=592 bits=0):
   jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
   bug1::micro@61 (line 17)
PcDesc(pc=0x00007fcde0de293c offset=59c bits=0):
   jdk.incubator.vector.IntVector::fromArray@2 (line 3064)
   Locals
    - l0: reg rbp [10],narrowoop
    - l1: stack[24],oop
    - l2: empty
    - l3: empty
   Expression stack
    - @0: 0
    - @1: reg rbp [10],narrowoop
   bug1::micro@5 (line 12)
   Locals
    - l0: empty
    - l1: stack[0],oop
    - l2: stack[128],oop
    - l3: stack[136]
    - l4: empty
    - l5: empty
    - l6: empty
PcDesc(pc=0x00007fcde0de295f offset=5bf bits=0):
   jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
   bug1::micro@61 (line 17)
PcDesc(pc=0x00007fcde0de2968 offset=5c8 bits=0):
   java.util.Objects::checkIndex@3 (line 473)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: 0
    - @1: reg rbp [10],int
    - @2: NULL
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 57)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.IntVector::fromArray@9 (line 3064)
   Locals
    - l0: stack[24],oop
    - l1: stack[32],oop
    - l2: empty
    - l3: empty
   bug1::micro@5 (line 12)
   Locals
    - l0: empty
    - l1: stack[0],oop
    - l2: stack[128],oop
    - l3: stack[136]
    - l4: empty
    - l5: empty
    - l6: empty
PcDesc(pc=0x00007fcde0de298d offset=5ed bits=0):
   jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
   bug1::micro@61 (line 17)
PcDesc(pc=0x00007fcde0de2998 offset=5f8 bits=0):
   java.util.Objects::checkIndex@3 (line 473)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: 0
    - @1: reg rbp [10],int
    - @2: NULL
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 57)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.IntVector::intoArray@7 (line 3337)
   Locals
    - l0: obj[376]
    - l1: stack[128],oop
    - l2: empty
    - l3: empty
   bug1::micro@61 (line 17)
   Locals
    - l0: empty
    - l1: empty
    - l2: stack[80],oop
    - l3: stack[136]
    - l4: empty
    - l5: empty
    - l6: empty
   Objects
    - 376: jdk.incubator.vector.Int512Vector stack[0],vector
PcDesc(pc=0x00007fcde0de29b6 offset=616 bits=0):
   jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
   bug1::micro@61 (line 17)
PcDesc(pc=0x00007fcde0de29c0 offset=620 bits=0):
   jdk.incubator.vector.IntVector$IntSpecies::dummyVectorMF@4 (line 4036)
   Locals
    - l0: empty
   Expression stack
    - @0: reg rbp [10],narrowoop
   jdk.incubator.vector.IntVector::fromArray@19 (line 3066)
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: 0
    - l3: empty
   bug1::micro@5 (line 12)
   Locals
    - l0: empty
    - l1: stack[0],oop
    - l2: stack[128],oop
    - l3: stack[136]
    - l4: empty
    - l5: empty
    - l6: empty
PcDesc(pc=0x00007fcde0de29f1 offset=651 bits=0):
   jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
   bug1::micro@61 (line 17)
PcDesc(pc=0x00007fcde0de29fc offset=65c bits=0):
   jdk.incubator.vector.IntVector$IntSpecies::dummyVectorMF@4 (line 4036)
   Locals
    - l0: empty
   Expression stack
    - @0: stack[32],narrowoop
   jdk.incubator.vector.IntVector::fromArray@19 (line 3066)
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: stack[0]
    - l3: empty
   bug1::micro@27 (line 14)
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: stack[128],oop
    - l3: stack[136]
    - l4: obj[434]
    - l5: reg rbp [10],int
    - l6: empty
   Objects
    - 434: jdk.incubator.vector.Int512Vector stack[64],vector
PcDesc(pc=0x00007fcde0de2a15 offset=675 bits=0):
   jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
   bug1::micro@61 (line 17)
PcDesc(pc=0x00007fcde0de2a20 offset=680 bits=0):
   jdk.incubator.vector.IntVector::fromArray@2 (line 3064)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: empty
    - @1: NULL
   bug1::micro@27 (line 14)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
PcDesc(pc=0x00007fcde0de2a39 offset=699 bits=0):
   jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
   bug1::micro@61 (line 17)
PcDesc(pc=0x00007fcde0de2a44 offset=6a4 bits=0):
   bug1::micro@46 (line 13)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
   Expression stack
    - @0: empty
    - @1: NULL
PcDesc(pc=0x00007fcde0de2a7a offset=6da bits=0):
   jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
   bug1::micro@61 (line 17)
PcDesc(pc=0x00007fcde0de2a84 offset=6e4 bits=1):
   jdk.incubator.vector.AbstractSpecies::dummyVectorMF@6 (line 323)  reexecute=true
   Locals
    - l0: stack[32],oop
    - l1: stack[44],narrowoop
   Expression stack
    - @0: stack[44],narrowoop
   jdk.incubator.vector.IntVector$IntSpecies::dummyVectorMF@1 (line 4036)
   Locals
    - l0: empty
   jdk.incubator.vector.IntVector::fromArray@19 (line 3066)
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: stack[0]
    - l3: empty
   bug1::micro@27 (line 14)
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: stack[128],oop
    - l3: stack[136]
    - l4: obj[427]
    - l5: reg rbp [10],int
    - l6: empty
   Objects
    - 427: jdk.incubator.vector.Int512Vector stack[64],vector
PcDesc(pc=0x00007fcde0de2a9d offset=6fd bits=0):
   jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
   bug1::micro@61 (line 17)
PcDesc(pc=0x00007fcde0de2aa8 offset=708 bits=0):
   jdk.incubator.vector.IntVector::fromArray@2 (line 3064)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: empty
    - @1: NULL
   bug1::micro@5 (line 12)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
PcDesc(pc=0x00007fcde0de2ac1 offset=721 bits=0):
   jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
   bug1::micro@61 (line 17)
PcDesc(pc=0x00007fcde0de2acc offset=72c bits=0):
   jdk.incubator.vector.IntVector::fromArray@8 (line 3064)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: empty
    - @1: empty
    - @2: NULL
   bug1::micro@5 (line 12)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
PcDesc(pc=0x00007fcde0de2aef offset=74f bits=0):
   jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
   bug1::micro@61 (line 17)
PcDesc(pc=0x00007fcde0de2af8 offset=758 bits=1):
   bug1::micro@18 (line 13)  reexecute=true
   Locals
    - l0: empty
    - l1: reg rbp [10],oop
    - l2: stack[128],oop
    - l3: stack[136]
    - l4: obj[367]
    - l5: 0
    - l6: empty
   Expression stack
    - @0: 0
    - @1: 1024
   Objects
    - 367: jdk.incubator.vector.Int512Vector stack[0],vector
PcDesc(pc=0x00007fcde0de2b11 offset=771 bits=0):
   jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
   bug1::micro@61 (line 17)
PcDesc(pc=0x00007fcde0de2b1c offset=77c bits=0):
   jdk.incubator.vector.IntVector::intoArray@6 (line 3337)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: empty
    - @1: empty
    - @2: NULL
   bug1::micro@61 (line 17)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
PcDesc(pc=0x00007fcde0de2b3f offset=79f bits=0):
   jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
   bug1::micro@61 (line 17)
PcDesc(pc=0x00007fcde0de2b48 offset=7a8 bits=1):
   jdk.incubator.vector.AbstractSpecies::dummyVectorMF@6 (line 323)  reexecute=true
   Locals
    - l0: stack[32],oop
    - l1: reg rbp [10],narrowoop
   Expression stack
    - @0: reg rbp [10],narrowoop
   jdk.incubator.vector.IntVector$IntSpecies::dummyVectorMF@1 (line 4036)
   Locals
    - l0: empty
   jdk.incubator.vector.IntVector::fromArray@19 (line 3066)
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: 0
    - l3: empty
   bug1::micro@5 (line 12)
   Locals
    - l0: empty
    - l1: stack[0],oop
    - l2: stack[128],oop
    - l3: stack[136]
    - l4: empty
    - l5: empty
    - l6: empty
PcDesc(pc=0x00007fcde0de2b5c offset=7bc bits=0):
   jdk.incubator.vector.IntVector::fromArray0Template@32 (line 3554)
   jdk.incubator.vector.Int512Vector::fromArray0@3 (line 898)
   jdk.incubator.vector.IntVector::fromArray@24 (line 3066)
   bug1::micro@27 (line 14)
PcDesc(pc=0x00007fcde0de2b72 offset=7d2 bits=0):
   jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
   bug1::micro@61 (line 17)
PcDesc(pc=0x00007fcde0de2b7c offset=7dc bits=1):
   jdk.incubator.vector.IntVector::fromArray0Template@32 (line 3554)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x000000011f0ed5b0} = 'jdk/incubator/vector/Int512Vector'
    - @1: a 'java/lang/Class'{0x00000007fef002d0} = int
    - @2: 16
    - @3: stack[8],oop
    - @4: 0
    - @5: reg rbp [10],long
    - @6: stack[8],oop
    - @7: 0
    - @8: stack[24],long
    - @9: a 'jdk/incubator/vector/IntVector$IntSpecies'{0x000000011f0ed560}
    - @10: a 'jdk/incubator/vector/IntVector$$Lambda$22+0x0000000801053240'{0x000000011f10aae0}
   jdk.incubator.vector.Int512Vector::fromArray0@3 (line 898)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.IntVector::fromArray@24 (line 3066)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   bug1::micro@27 (line 14)
   Locals
    - l0: empty
    - l1: stack[8],oop
    - l2: stack[128],oop
    - l3: stack[136]
    - l4: obj[447]
    - l5: stack[0]
    - l6: empty
   Objects
    - 447: jdk.incubator.vector.Int512Vector stack[64],vector
PcDesc(pc=0x00007fcde0de2b90 offset=7f0 bits=0):
   jdk.incubator.vector.IntVector::lanewiseTemplate@154 (line 856)
   jdk.incubator.vector.Int512Vector::lanewise@3 (line 304)
   jdk.incubator.vector.Int512Vector::lanewise@3 (line 42)
   jdk.incubator.vector.IntVector::and@5 (line 1866)
   bug1::micro@36 (line 15)
PcDesc(pc=0x00007fcde0de2bbb offset=81b bits=0):
   jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
   bug1::micro@61 (line 17)
PcDesc(pc=0x00007fcde0de2bc4 offset=824 bits=1):
   jdk.incubator.vector.IntVector::lanewiseTemplate@154 (line 856)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 10
    - @1: a 'java/lang/Class'{0x000000011f0ed5b0} = 'jdk/incubator/vector/Int512Vector'
    - @2: NULL
    - @3: a 'java/lang/Class'{0x00000007fef002d0} = int
    - @4: 16
    - @5: obj[469]
    - @6: obj[470]
    - @7: NULL
    - @8: a 'jdk/incubator/vector/IntVector$$Lambda$25+0x0000000801057fa0'{0x000000011f188ef0}
   jdk.incubator.vector.Int512Vector::lanewise@3 (line 304)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.Int512Vector::lanewise@3 (line 42)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.IntVector::and@5 (line 1866)
   Locals
    - l0: empty
    - l1: empty
   bug1::micro@36 (line 15)
   Locals
    - l0: empty
    - l1: stack[64],oop
    - l2: stack[72],oop
    - l3: stack[80]
    - l4: empty
    - l5: reg rbp [10],int
    - l6: empty
   Objects
    - 469: jdk.incubator.vector.Int512Vector stack[0],vector
    - 470: jdk.incubator.vector.Int512Vector stack[192],vector
PcDesc(pc=0x00007fcde0de2bd8 offset=838 bits=0):
   jdk.incubator.vector.IntVector::fromArray0Template@32 (line 3554)
   jdk.incubator.vector.Int512Vector::fromArray0@3 (line 898)
   jdk.incubator.vector.IntVector::fromArray@24 (line 3066)
   bug1::micro@5 (line 12)
PcDesc(pc=0x00007fcde0de2bdd offset=83d bits=0):
   jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
   bug1::micro@61 (line 17)
PcDesc(pc=0x00007fcde0de2be8 offset=848 bits=1):
   jdk.incubator.vector.IntVector::fromArray0Template@32 (line 3554)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x000000011f0ed5b0} = 'jdk/incubator/vector/Int512Vector'
    - @1: a 'java/lang/Class'{0x00000007fef002d0} = int
    - @2: 16
    - @3: reg rbp [10],oop
    - @4: 0
    - @5: 16
    - @6: reg rbp [10],oop
    - @7: 0
    - @8: 0
    - @9: a 'jdk/incubator/vector/IntVector$IntSpecies'{0x000000011f0ed560}
    - @10: a 'jdk/incubator/vector/IntVector$$Lambda$22+0x0000000801053240'{0x000000011f10aae0}
   jdk.incubator.vector.Int512Vector::fromArray0@3 (line 898)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.IntVector::fromArray@24 (line 3066)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   bug1::micro@5 (line 12)
   Locals
    - l0: empty
    - l1: stack[0],oop
    - l2: stack[128],oop
    - l3: stack[136]
    - l4: empty
    - l5: empty
    - l6: empty
PcDesc(pc=0x00007fcde0de2bfc offset=85c bits=0):
   jdk.incubator.vector.IntVector::fromArray0Template@32 (line 3554)
   jdk.incubator.vector.Int512Vector::fromArray0@3 (line 898)
   jdk.incubator.vector.IntVector::fromArray@24 (line 3066)
   bug1::micro@5 (line 12)
PcDesc(pc=0x00007fcde0de2c39 offset=899 bits=0):
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
oop maps:ImmutableOopMapSet contains 27 OopMaps

ImmutableOopMap {r11=NarrowOop r8=Oop [128]=Oop } pc offsets: 731 
ImmutableOopMap {[8]=Oop [128]=Oop } pc offsets: 908 
ImmutableOopMap {[64]=Oop [128]=Oop } pc offsets: 992 
ImmutableOopMap {rbp=Oop [0]=Oop [128]=Oop } pc offsets: 1052 
ImmutableOopMap {[32]=Oop [40]=Oop [128]=Oop } pc offsets: 1100 
ImmutableOopMap {[8]=NarrowOop [32]=Oop [128]=Oop } pc offsets: 1156 
ImmutableOopMap {[32]=Oop [40]=Oop [128]=Oop } pc offsets: 1212 
ImmutableOopMap {[0]=NarrowOop [8]=Oop [128]=Oop } pc offsets: 1268 
ImmutableOopMap {[0]=Oop [24]=Oop [32]=Oop [128]=Oop } pc offsets: 1312 
ImmutableOopMap {[80]=Oop [128]=Oop } pc offsets: 1360 
ImmutableOopMap {rbp=Oop } pc offsets: 1396 
ImmutableOopMap {rbp=NarrowOop [0]=Oop [24]=Oop [128]=Oop } pc offsets: 1436 
ImmutableOopMap {[0]=Oop [24]=Oop [32]=Oop [128]=Oop } pc offsets: 1480 
ImmutableOopMap {[80]=Oop [128]=Oop } pc offsets: 1528 
ImmutableOopMap {rbp=NarrowOop [0]=Oop [24]=Oop [128]=Oop } pc offsets: 1568 
ImmutableOopMap {[24]=Oop [32]=NarrowOop [128]=Oop } pc offsets: 1628 
ImmutableOopMap {} pc offsets: 1664 1700 
ImmutableOopMap {[24]=Oop [32]=Oop [44]=NarrowOop [128]=Oop } pc offsets: 1764 
ImmutableOopMap {} pc offsets: 1800 1836 
ImmutableOopMap {rbp=Oop [128]=Oop } pc offsets: 1880 
ImmutableOopMap {} pc offsets: 1916 
ImmutableOopMap {rbp=NarrowOop [0]=Oop [24]=Oop [32]=Oop [128]=Oop } pc offsets: 1960 
ImmutableOopMap {[8]=Oop [128]=Oop } pc offsets: 2012 
ImmutableOopMap {[64]=Oop [72]=Oop } pc offsets: 2084 
ImmutableOopMap {rbp=Oop [0]=Oop [128]=Oop } pc offsets: 2120 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
scopes:
ScopeDesc(pc=0x00007fcde0de23be offset=1e):
   bug1::micro@-1 (line 12)
ScopeDesc(pc=0x00007fcde0de23d5 offset=35):
   jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
ScopeDesc(pc=0x00007fcde0de23d5 offset=35):
   bug1::micro@61 (line 17)
ScopeDesc(pc=0x00007fcde0de23e3 offset=43):
   bug1::micro@0 (line 12)
ScopeDesc(pc=0x00007fcde0de23ef offset=4f):
   jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
ScopeDesc(pc=0x00007fcde0de23ef offset=4f):
   bug1::micro@61 (line 17)
ScopeDesc(pc=0x00007fcde0de2408 offset=68):
   jdk.incubator.vector.IntVector::fromArray@2 (line 3064)
ScopeDesc(pc=0x00007fcde0de2408 offset=68):
   bug1::micro@5 (line 12)
ScopeDesc(pc=0x00007fcde0de242a offset=8a):
   jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
ScopeDesc(pc=0x00007fcde0de242a offset=8a):
   bug1::micro@61 (line 17)
ScopeDesc(pc=0x00007fcde0de242e offset=8e):
   jdk.incubator.vector.AbstractSpecies::dummyVectorMF@1 (line 322)
ScopeDesc(pc=0x00007fcde0de242e offset=8e):
   jdk.incubator.vector.IntVector$IntSpecies::dummyVectorMF@1 (line 4036)
ScopeDesc(pc=0x00007fcde0de242e offset=8e):
   jdk.incubator.vector.IntVector::fromArray@19 (line 3066)
ScopeDesc(pc=0x00007fcde0de242e offset=8e):
   bug1::micro@5 (line 12)
ScopeDesc(pc=0x00007fcde0de2447 offset=a7):
   jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
ScopeDesc(pc=0x00007fcde0de2447 offset=a7):
   bug1::micro@61 (line 17)
ScopeDesc(pc=0x00007fcde0de246d offset=cd):
   bug1::micro@54 (line 13)
ScopeDesc(pc=0x00007fcde0de24c8 offset=128):
   jdk.incubator.vector.IntVector::fromArray0Template@32 (line 3554)
ScopeDesc(pc=0x00007fcde0de24c8 offset=128):
   jdk.incubator.vector.Int512Vector::fromArray0@3 (line 898)
ScopeDesc(pc=0x00007fcde0de24c8 offset=128):
   jdk.incubator.vector.IntVector::fromArray@24 (line 3066)
ScopeDesc(pc=0x00007fcde0de24c8 offset=128):
   bug1::micro@5 (line 12)
ScopeDesc(pc=0x00007fcde0de2507 offset=167):
   jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
ScopeDesc(pc=0x00007fcde0de2507 offset=167):
   bug1::micro@61 (line 17)
ScopeDesc(pc=0x00007fcde0de2511 offset=171):
   jdk.incubator.vector.IntVector::fromArray@2 (line 3064)
ScopeDesc(pc=0x00007fcde0de2511 offset=171):
   bug1::micro@27 (line 14)
ScopeDesc(pc=0x00007fcde0de2515 offset=175):
   jdk.incubator.vector.AbstractSpecies::length@1 (line 122)
ScopeDesc(pc=0x00007fcde0de2515 offset=175):
   jdk.incubator.vector.IntVector::fromArray@2 (line 3064)
ScopeDesc(pc=0x00007fcde0de2515 offset=175):
   bug1::micro@27 (line 14)
ScopeDesc(pc=0x00007fcde0de2530 offset=190):
   jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
ScopeDesc(pc=0x00007fcde0de2530 offset=190):
   bug1::micro@61 (line 17)
ScopeDesc(pc=0x00007fcde0de2534 offset=194):
   jdk.incubator.vector.AbstractSpecies::dummyVectorMF@1 (line 322)
ScopeDesc(pc=0x00007fcde0de2534 offset=194):
   jdk.incubator.vector.IntVector$IntSpecies::dummyVectorMF@1 (line 4036)
ScopeDesc(pc=0x00007fcde0de2534 offset=194):
   jdk.incubator.vector.IntVector::fromArray@19 (line 3066)
ScopeDesc(pc=0x00007fcde0de2534 offset=194):
   bug1::micro@27 (line 14)
ScopeDesc(pc=0x00007fcde0de2537 offset=197):
   java.util.Objects::checkIndex@3 (line 473)
ScopeDesc(pc=0x00007fcde0de2537 offset=197):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 57)
ScopeDesc(pc=0x00007fcde0de2537 offset=197):
   jdk.incubator.vector.IntVector::fromArray@9 (line 3064)
ScopeDesc(pc=0x00007fcde0de2537 offset=197):
   bug1::micro@27 (line 14)
ScopeDesc(pc=0x00007fcde0de254b offset=1ab):
   jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
ScopeDesc(pc=0x00007fcde0de254b offset=1ab):
   bug1::micro@61 (line 17)
ScopeDesc(pc=0x00007fcde0de2551 offset=1b1):
   bug1::micro@54 (line 13)
ScopeDesc(pc=0x00007fcde0de255f offset=1bf):
   jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
ScopeDesc(pc=0x00007fcde0de255f offset=1bf):
   bug1::micro@61 (line 17)
ScopeDesc(pc=0x00007fcde0de2562 offset=1c2):
   jdk.incubator.vector.IntVector::arrayAddress@4 (line 3803)
ScopeDesc(pc=0x00007fcde0de2562 offset=1c2):
   jdk.incubator.vector.IntVector::fromArray0Template@20 (line 3556)
ScopeDesc(pc=0x00007fcde0de2562 offset=1c2):
   jdk.incubator.vector.Int512Vector::fromArray0@3 (line 898)
ScopeDesc(pc=0x00007fcde0de2562 offset=1c2):
   jdk.incubator.vector.IntVector::fromArray@24 (line 3066)
ScopeDesc(pc=0x00007fcde0de2562 offset=1c2):
   bug1::micro@27 (line 14)
ScopeDesc(pc=0x00007fcde0de25ed offset=24d):
   bug1::micro@54 (line 13)
ScopeDesc(pc=0x00007fcde0de2643 offset=2a3):
   jdk.incubator.vector.IntVector::lanewiseTemplate@154 (line 856)
ScopeDesc(pc=0x00007fcde0de2643 offset=2a3):
   jdk.incubator.vector.Int512Vector::lanewise@3 (line 304)
ScopeDesc(pc=0x00007fcde0de2643 offset=2a3):
   jdk.incubator.vector.Int512Vector::lanewise@3 (line 42)
ScopeDesc(pc=0x00007fcde0de2643 offset=2a3):
   jdk.incubator.vector.IntVector::and@5 (line 1866)
ScopeDesc(pc=0x00007fcde0de2643 offset=2a3):
   bug1::micro@36 (line 15)
ScopeDesc(pc=0x00007fcde0de2651 offset=2b1):
   bug1::micro@43 (line 13)
ScopeDesc(pc=0x00007fcde0de2666 offset=2c6):
   jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
ScopeDesc(pc=0x00007fcde0de2666 offset=2c6):
   bug1::micro@61 (line 17)
ScopeDesc(pc=0x00007fcde0de266c offset=2cc):
   bug1::micro@54 (line 13)
ScopeDesc(pc=0x00007fcde0de2677 offset=2d7):
   bug1::micro@46 (line 13)
ScopeDesc(pc=0x00007fcde0de267b offset=2db):
   bug1::micro@54 (line 13)  reexecute=true
   Locals
    - l0: empty
    - l1: reg r8 [16],oop
    - l2: stack[128],oop
    - l3: stack[136]
    - l4: obj[345]
    - l5: reg r9 [18],int
    - l6: empty
   Objects
    - 345: jdk.incubator.vector.Int512Vector reg xmm1 [64],vector
ScopeDesc(pc=0x00007fcde0de26cd offset=32d):
   jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
ScopeDesc(pc=0x00007fcde0de26cd offset=32d):
   bug1::micro@61 (line 17)
ScopeDesc(pc=0x00007fcde0de26d2 offset=332):
   bug1::micro@66 (line 18)
ScopeDesc(pc=0x00007fcde0de2722 offset=382):
   jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
ScopeDesc(pc=0x00007fcde0de2722 offset=382):
   bug1::micro@61 (line 17)
ScopeDesc(pc=0x00007fcde0de272c offset=38c):
   jdk.incubator.vector.IntVector::fromArray0Template@32 (line 3554)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x000000011f0ed5b0} = 'jdk/incubator/vector/Int512Vector'
    - @1: a 'java/lang/Class'{0x00000007fef002d0} = int
    - @2: 16
    - @3: stack[8],oop
    - @4: 0
    - @5: reg rbp [10],long
    - @6: stack[8],oop
    - @7: 0
    - @8: stack[24],long
    - @9: a 'jdk/incubator/vector/IntVector$IntSpecies'{0x000000011f0ed560}
    - @10: a 'jdk/incubator/vector/IntVector$$Lambda$22+0x0000000801053240'{0x000000011f10aae0}
ScopeDesc(pc=0x00007fcde0de272c offset=38c):
   jdk.incubator.vector.Int512Vector::fromArray0@3 (line 898)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00007fcde0de272c offset=38c):
   jdk.incubator.vector.IntVector::fromArray@24 (line 3066)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x00007fcde0de272c offset=38c):
   bug1::micro@27 (line 14)
   Locals
    - l0: empty
    - l1: stack[8],oop
    - l2: stack[128],oop
    - l3: stack[136]
    - l4: obj[283]
    - l5: stack[4]
    - l6: empty
   Objects
    - 283: jdk.incubator.vector.Int512Vector stack[64],vector
ScopeDesc(pc=0x00007fcde0de2777 offset=3d7):
   jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
ScopeDesc(pc=0x00007fcde0de2777 offset=3d7):
   bug1::micro@61 (line 17)
ScopeDesc(pc=0x00007fcde0de2780 offset=3e0):
   jdk.incubator.vector.IntVector::lanewiseTemplate@154 (line 856)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 10
    - @1: a 'java/lang/Class'{0x000000011f0ed5b0} = 'jdk/incubator/vector/Int512Vector'
    - @2: NULL
    - @3: a 'java/lang/Class'{0x00000007fef002d0} = int
    - @4: 16
    - @5: obj[320]
    - @6: obj[321]
    - @7: NULL
    - @8: a 'jdk/incubator/vector/IntVector$$Lambda$25+0x0000000801057fa0'{0x000000011f188ef0}
ScopeDesc(pc=0x00007fcde0de2780 offset=3e0):
   jdk.incubator.vector.Int512Vector::lanewise@3 (line 304)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00007fcde0de2780 offset=3e0):
   jdk.incubator.vector.Int512Vector::lanewise@3 (line 42)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00007fcde0de2780 offset=3e0):
   jdk.incubator.vector.IntVector::and@5 (line 1866)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x00007fcde0de2780 offset=3e0):
   bug1::micro@36 (line 15)
   Locals
    - l0: empty
    - l1: stack[64],oop
    - l2: stack[128],oop
    - l3: stack[136]
    - l4: empty
    - l5: stack[72]
    - l6: empty
   Objects
    - 320: jdk.incubator.vector.Int512Vector stack[0],vector
    - 321: jdk.incubator.vector.Int512Vector stack[192],vector
ScopeDesc(pc=0x00007fcde0de27bc offset=41c):
   jdk.incubator.vector.IntVector::fromArray0Template@32 (line 3554)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x000000011f0ed5b0} = 'jdk/incubator/vector/Int512Vector'
    - @1: a 'java/lang/Class'{0x00000007fef002d0} = int
    - @2: 16
    - @3: reg rbp [10],oop
    - @4: 0
    - @5: 16
    - @6: reg rbp [10],oop
    - @7: 0
    - @8: 0
    - @9: a 'jdk/incubator/vector/IntVector$IntSpecies'{0x000000011f0ed560}
    - @10: a 'jdk/incubator/vector/IntVector$$Lambda$22+0x0000000801053240'{0x000000011f10aae0}
ScopeDesc(pc=0x00007fcde0de27bc offset=41c):
   jdk.incubator.vector.Int512Vector::fromArray0@3 (line 898)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00007fcde0de27bc offset=41c):
   jdk.incubator.vector.IntVector::fromArray@24 (line 3066)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x00007fcde0de27bc offset=41c):
   bug1::micro@5 (line 12)
   Locals
    - l0: empty
    - l1: stack[0],oop
    - l2: stack[128],oop
    - l3: stack[136]
    - l4: empty
    - l5: empty
    - l6: empty
ScopeDesc(pc=0x00007fcde0de27e2 offset=442):
   jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
ScopeDesc(pc=0x00007fcde0de27e2 offset=442):
   bug1::micro@61 (line 17)
ScopeDesc(pc=0x00007fcde0de27ec offset=44c):
   java.util.Objects::checkIndex@3 (line 473)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[4]
    - @1: reg rbp [10],int
    - @2: NULL
ScopeDesc(pc=0x00007fcde0de27ec offset=44c):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 57)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00007fcde0de27ec offset=44c):
   jdk.incubator.vector.IntVector::fromArray@9 (line 3064)
   Locals
    - l0: stack[32],oop
    - l1: stack[40],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x00007fcde0de27ec offset=44c):
   bug1::micro@27 (line 14)
   Locals
    - l0: empty
    - l1: stack[40],oop
    - l2: stack[128],oop
    - l3: stack[136]
    - l4: obj[420]
    - l5: stack[4]
    - l6: empty
   Objects
    - 420: jdk.incubator.vector.Int512Vector stack[64],vector
ScopeDesc(pc=0x00007fcde0de281b offset=47b):
   jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
ScopeDesc(pc=0x00007fcde0de281b offset=47b):
   bug1::micro@61 (line 17)
ScopeDesc(pc=0x00007fcde0de2824 offset=484):
   jdk.incubator.vector.IntVector::fromArray@2 (line 3064)
   Locals
    - l0: stack[8],narrowoop
    - l1: stack[32],oop
    - l2: empty
    - l3: empty
   Expression stack
    - @0: stack[4]
    - @1: stack[8],narrowoop
ScopeDesc(pc=0x00007fcde0de2824 offset=484):
   bug1::micro@27 (line 14)
   Locals
    - l0: empty
    - l1: stack[32],oop
    - l2: stack[128],oop
    - l3: stack[136]
    - l4: obj[397]
    - l5: stack[4]
    - l6: empty
   Objects
    - 397: jdk.incubator.vector.Int512Vector stack[64],vector
ScopeDesc(pc=0x00007fcde0de2853 offset=4b3):
   jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
ScopeDesc(pc=0x00007fcde0de2853 offset=4b3):
   bug1::micro@61 (line 17)
ScopeDesc(pc=0x00007fcde0de285c offset=4bc):
   java.util.Objects::checkIndex@3 (line 473)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[4]
    - @1: reg rbp [10],int
    - @2: NULL
ScopeDesc(pc=0x00007fcde0de285c offset=4bc):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 57)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00007fcde0de285c offset=4bc):
   jdk.incubator.vector.IntVector::fromArray@9 (line 3064)
   Locals
    - l0: stack[32],oop
    - l1: stack[40],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x00007fcde0de285c offset=4bc):
   bug1::micro@27 (line 14)
   Locals
    - l0: empty
    - l1: stack[40],oop
    - l2: stack[128],oop
    - l3: stack[136]
    - l4: obj[412]
    - l5: stack[4]
    - l6: empty
   Objects
    - 412: jdk.incubator.vector.Int512Vector stack[64],vector
ScopeDesc(pc=0x00007fcde0de2889 offset=4e9):
   jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
ScopeDesc(pc=0x00007fcde0de2889 offset=4e9):
   bug1::micro@61 (line 17)
ScopeDesc(pc=0x00007fcde0de2894 offset=4f4):
   bug1::micro@46 (line 13)
   Locals
    - l0: empty
    - l1: stack[8],oop
    - l2: stack[128],oop
    - l3: stack[136]
    - l4: obj[404]
    - l5: empty
    - l6: empty
   Expression stack
    - @0: reg rbp [10],int
    - @1: stack[0],narrowoop
   Objects
    - 404: jdk.incubator.vector.Int512Vector stack[64],vector
ScopeDesc(pc=0x00007fcde0de28b7 offset=517):
   jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
ScopeDesc(pc=0x00007fcde0de28b7 offset=517):
   bug1::micro@61 (line 17)
ScopeDesc(pc=0x00007fcde0de28c0 offset=520):
   java.util.Objects::checkIndex@3 (line 473)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: 0
    - @1: reg rbp [10],int
    - @2: NULL
ScopeDesc(pc=0x00007fcde0de28c0 offset=520):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 57)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00007fcde0de28c0 offset=520):
   jdk.incubator.vector.IntVector::fromArray@9 (line 3064)
   Locals
    - l0: stack[24],oop
    - l1: stack[32],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x00007fcde0de28c0 offset=520):
   bug1::micro@5 (line 12)
   Locals
    - l0: empty
    - l1: stack[0],oop
    - l2: stack[128],oop
    - l3: stack[136]
    - l4: empty
    - l5: empty
    - l6: empty
ScopeDesc(pc=0x00007fcde0de28e5 offset=545):
   jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
ScopeDesc(pc=0x00007fcde0de28e5 offset=545):
   bug1::micro@61 (line 17)
ScopeDesc(pc=0x00007fcde0de28f0 offset=550):
   java.util.Objects::checkIndex@3 (line 473)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: 0
    - @1: reg rbp [10],int
    - @2: NULL
ScopeDesc(pc=0x00007fcde0de28f0 offset=550):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 57)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00007fcde0de28f0 offset=550):
   jdk.incubator.vector.IntVector::intoArray@7 (line 3337)
   Locals
    - l0: obj[357]
    - l1: stack[128],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x00007fcde0de28f0 offset=550):
   bug1::micro@61 (line 17)
   Locals
    - l0: empty
    - l1: empty
    - l2: stack[80],oop
    - l3: stack[136]
    - l4: empty
    - l5: empty
    - l6: empty
   Objects
    - 357: jdk.incubator.vector.Int512Vector stack[0],vector
ScopeDesc(pc=0x00007fcde0de2914 offset=574):
   bug1::micro@66 (line 18)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
   Expression stack
    - @0: reg rbp [10],oop
    - @1: stack[136]
ScopeDesc(pc=0x00007fcde0de2932 offset=592):
   jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
ScopeDesc(pc=0x00007fcde0de2932 offset=592):
   bug1::micro@61 (line 17)
ScopeDesc(pc=0x00007fcde0de293c offset=59c):
   jdk.incubator.vector.IntVector::fromArray@2 (line 3064)
   Locals
    - l0: reg rbp [10],narrowoop
    - l1: stack[24],oop
    - l2: empty
    - l3: empty
   Expression stack
    - @0: 0
    - @1: reg rbp [10],narrowoop
ScopeDesc(pc=0x00007fcde0de293c offset=59c):
   bug1::micro@5 (line 12)
   Locals
    - l0: empty
    - l1: stack[0],oop
    - l2: stack[128],oop
    - l3: stack[136]
    - l4: empty
    - l5: empty
    - l6: empty
ScopeDesc(pc=0x00007fcde0de295f offset=5bf):
   jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
ScopeDesc(pc=0x00007fcde0de295f offset=5bf):
   bug1::micro@61 (line 17)
ScopeDesc(pc=0x00007fcde0de2968 offset=5c8):
   java.util.Objects::checkIndex@3 (line 473)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: 0
    - @1: reg rbp [10],int
    - @2: NULL
ScopeDesc(pc=0x00007fcde0de2968 offset=5c8):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 57)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00007fcde0de2968 offset=5c8):
   jdk.incubator.vector.IntVector::fromArray@9 (line 3064)
   Locals
    - l0: stack[24],oop
    - l1: stack[32],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x00007fcde0de2968 offset=5c8):
   bug1::micro@5 (line 12)
   Locals
    - l0: empty
    - l1: stack[0],oop
    - l2: stack[128],oop
    - l3: stack[136]
    - l4: empty
    - l5: empty
    - l6: empty
ScopeDesc(pc=0x00007fcde0de298d offset=5ed):
   jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
ScopeDesc(pc=0x00007fcde0de298d offset=5ed):
   bug1::micro@61 (line 17)
ScopeDesc(pc=0x00007fcde0de2998 offset=5f8):
   java.util.Objects::checkIndex@3 (line 473)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: 0
    - @1: reg rbp [10],int
    - @2: NULL
ScopeDesc(pc=0x00007fcde0de2998 offset=5f8):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 57)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00007fcde0de2998 offset=5f8):
   jdk.incubator.vector.IntVector::intoArray@7 (line 3337)
   Locals
    - l0: obj[376]
    - l1: stack[128],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x00007fcde0de2998 offset=5f8):
   bug1::micro@61 (line 17)
   Locals
    - l0: empty
    - l1: empty
    - l2: stack[80],oop
    - l3: stack[136]
    - l4: empty
    - l5: empty
    - l6: empty
   Objects
    - 376: jdk.incubator.vector.Int512Vector stack[0],vector
ScopeDesc(pc=0x00007fcde0de29b6 offset=616):
   jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
ScopeDesc(pc=0x00007fcde0de29b6 offset=616):
   bug1::micro@61 (line 17)
ScopeDesc(pc=0x00007fcde0de29c0 offset=620):
   jdk.incubator.vector.IntVector$IntSpecies::dummyVectorMF@4 (line 4036)
   Locals
    - l0: empty
   Expression stack
    - @0: reg rbp [10],narrowoop
ScopeDesc(pc=0x00007fcde0de29c0 offset=620):
   jdk.incubator.vector.IntVector::fromArray@19 (line 3066)
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: 0
    - l3: empty
ScopeDesc(pc=0x00007fcde0de29c0 offset=620):
   bug1::micro@5 (line 12)
   Locals
    - l0: empty
    - l1: stack[0],oop
    - l2: stack[128],oop
    - l3: stack[136]
    - l4: empty
    - l5: empty
    - l6: empty
ScopeDesc(pc=0x00007fcde0de29f1 offset=651):
   jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
ScopeDesc(pc=0x00007fcde0de29f1 offset=651):
   bug1::micro@61 (line 17)
ScopeDesc(pc=0x00007fcde0de29fc offset=65c):
   jdk.incubator.vector.IntVector$IntSpecies::dummyVectorMF@4 (line 4036)
   Locals
    - l0: empty
   Expression stack
    - @0: stack[32],narrowoop
ScopeDesc(pc=0x00007fcde0de29fc offset=65c):
   jdk.incubator.vector.IntVector::fromArray@19 (line 3066)
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: stack[0]
    - l3: empty
ScopeDesc(pc=0x00007fcde0de29fc offset=65c):
   bug1::micro@27 (line 14)
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: stack[128],oop
    - l3: stack[136]
    - l4: obj[434]
    - l5: reg rbp [10],int
    - l6: empty
   Objects
    - 434: jdk.incubator.vector.Int512Vector stack[64],vector
ScopeDesc(pc=0x00007fcde0de2a15 offset=675):
   jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
ScopeDesc(pc=0x00007fcde0de2a15 offset=675):
   bug1::micro@61 (line 17)
ScopeDesc(pc=0x00007fcde0de2a20 offset=680):
   jdk.incubator.vector.IntVector::fromArray@2 (line 3064)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: empty
    - @1: NULL
ScopeDesc(pc=0x00007fcde0de2a20 offset=680):
   bug1::micro@27 (line 14)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
ScopeDesc(pc=0x00007fcde0de2a39 offset=699):
   jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
ScopeDesc(pc=0x00007fcde0de2a39 offset=699):
   bug1::micro@61 (line 17)
ScopeDesc(pc=0x00007fcde0de2a44 offset=6a4):
   bug1::micro@46 (line 13)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
   Expression stack
    - @0: empty
    - @1: NULL
ScopeDesc(pc=0x00007fcde0de2a7a offset=6da):
   jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
ScopeDesc(pc=0x00007fcde0de2a7a offset=6da):
   bug1::micro@61 (line 17)
ScopeDesc(pc=0x00007fcde0de2a84 offset=6e4):
   jdk.incubator.vector.AbstractSpecies::dummyVectorMF@6 (line 323)  reexecute=true
   Locals
    - l0: stack[32],oop
    - l1: stack[44],narrowoop
   Expression stack
    - @0: stack[44],narrowoop
ScopeDesc(pc=0x00007fcde0de2a84 offset=6e4):
   jdk.incubator.vector.IntVector$IntSpecies::dummyVectorMF@1 (line 4036)
   Locals
    - l0: empty
ScopeDesc(pc=0x00007fcde0de2a84 offset=6e4):
   jdk.incubator.vector.IntVector::fromArray@19 (line 3066)
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: stack[0]
    - l3: empty
ScopeDesc(pc=0x00007fcde0de2a84 offset=6e4):
   bug1::micro@27 (line 14)
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: stack[128],oop
    - l3: stack[136]
    - l4: obj[427]
    - l5: reg rbp [10],int
    - l6: empty
   Objects
    - 427: jdk.incubator.vector.Int512Vector stack[64],vector
ScopeDesc(pc=0x00007fcde0de2a9d offset=6fd):
   jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
ScopeDesc(pc=0x00007fcde0de2a9d offset=6fd):
   bug1::micro@61 (line 17)
ScopeDesc(pc=0x00007fcde0de2aa8 offset=708):
   jdk.incubator.vector.IntVector::fromArray@2 (line 3064)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: empty
    - @1: NULL
ScopeDesc(pc=0x00007fcde0de2aa8 offset=708):
   bug1::micro@5 (line 12)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
ScopeDesc(pc=0x00007fcde0de2ac1 offset=721):
   jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
ScopeDesc(pc=0x00007fcde0de2ac1 offset=721):
   bug1::micro@61 (line 17)
ScopeDesc(pc=0x00007fcde0de2acc offset=72c):
   jdk.incubator.vector.IntVector::fromArray@8 (line 3064)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: empty
    - @1: empty
    - @2: NULL
ScopeDesc(pc=0x00007fcde0de2acc offset=72c):
   bug1::micro@5 (line 12)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
ScopeDesc(pc=0x00007fcde0de2aef offset=74f):
   jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
ScopeDesc(pc=0x00007fcde0de2aef offset=74f):
   bug1::micro@61 (line 17)
ScopeDesc(pc=0x00007fcde0de2af8 offset=758):
   bug1::micro@18 (line 13)  reexecute=true
   Locals
    - l0: empty
    - l1: reg rbp [10],oop
    - l2: stack[128],oop
    - l3: stack[136]
    - l4: obj[367]
    - l5: 0
    - l6: empty
   Expression stack
    - @0: 0
    - @1: 1024
   Objects
    - 367: jdk.incubator.vector.Int512Vector stack[0],vector
ScopeDesc(pc=0x00007fcde0de2b11 offset=771):
   jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
ScopeDesc(pc=0x00007fcde0de2b11 offset=771):
   bug1::micro@61 (line 17)
ScopeDesc(pc=0x00007fcde0de2b1c offset=77c):
   jdk.incubator.vector.IntVector::intoArray@6 (line 3337)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: empty
    - @1: empty
    - @2: NULL
ScopeDesc(pc=0x00007fcde0de2b1c offset=77c):
   bug1::micro@61 (line 17)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
ScopeDesc(pc=0x00007fcde0de2b3f offset=79f):
   jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
ScopeDesc(pc=0x00007fcde0de2b3f offset=79f):
   bug1::micro@61 (line 17)
ScopeDesc(pc=0x00007fcde0de2b48 offset=7a8):
   jdk.incubator.vector.AbstractSpecies::dummyVectorMF@6 (line 323)  reexecute=true
   Locals
    - l0: stack[32],oop
    - l1: reg rbp [10],narrowoop
   Expression stack
    - @0: reg rbp [10],narrowoop
ScopeDesc(pc=0x00007fcde0de2b48 offset=7a8):
   jdk.incubator.vector.IntVector$IntSpecies::dummyVectorMF@1 (line 4036)
   Locals
    - l0: empty
ScopeDesc(pc=0x00007fcde0de2b48 offset=7a8):
   jdk.incubator.vector.IntVector::fromArray@19 (line 3066)
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: 0
    - l3: empty
ScopeDesc(pc=0x00007fcde0de2b48 offset=7a8):
   bug1::micro@5 (line 12)
   Locals
    - l0: empty
    - l1: stack[0],oop
    - l2: stack[128],oop
    - l3: stack[136]
    - l4: empty
    - l5: empty
    - l6: empty
ScopeDesc(pc=0x00007fcde0de2b5c offset=7bc):
   jdk.incubator.vector.IntVector::fromArray0Template@32 (line 3554)
ScopeDesc(pc=0x00007fcde0de2b5c offset=7bc):
   jdk.incubator.vector.Int512Vector::fromArray0@3 (line 898)
ScopeDesc(pc=0x00007fcde0de2b5c offset=7bc):
   jdk.incubator.vector.IntVector::fromArray@24 (line 3066)
ScopeDesc(pc=0x00007fcde0de2b5c offset=7bc):
   bug1::micro@27 (line 14)
ScopeDesc(pc=0x00007fcde0de2b72 offset=7d2):
   jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
ScopeDesc(pc=0x00007fcde0de2b72 offset=7d2):
   bug1::micro@61 (line 17)
ScopeDesc(pc=0x00007fcde0de2b7c offset=7dc):
   jdk.incubator.vector.IntVector::fromArray0Template@32 (line 3554)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x000000011f0ed5b0} = 'jdk/incubator/vector/Int512Vector'
    - @1: a 'java/lang/Class'{0x00000007fef002d0} = int
    - @2: 16
    - @3: stack[8],oop
    - @4: 0
    - @5: reg rbp [10],long
    - @6: stack[8],oop
    - @7: 0
    - @8: stack[24],long
    - @9: a 'jdk/incubator/vector/IntVector$IntSpecies'{0x000000011f0ed560}
    - @10: a 'jdk/incubator/vector/IntVector$$Lambda$22+0x0000000801053240'{0x000000011f10aae0}
ScopeDesc(pc=0x00007fcde0de2b7c offset=7dc):
   jdk.incubator.vector.Int512Vector::fromArray0@3 (line 898)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00007fcde0de2b7c offset=7dc):
   jdk.incubator.vector.IntVector::fromArray@24 (line 3066)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x00007fcde0de2b7c offset=7dc):
   bug1::micro@27 (line 14)
   Locals
    - l0: empty
    - l1: stack[8],oop
    - l2: stack[128],oop
    - l3: stack[136]
    - l4: obj[447]
    - l5: stack[0]
    - l6: empty
   Objects
    - 447: jdk.incubator.vector.Int512Vector stack[64],vector
ScopeDesc(pc=0x00007fcde0de2b90 offset=7f0):
   jdk.incubator.vector.IntVector::lanewiseTemplate@154 (line 856)
ScopeDesc(pc=0x00007fcde0de2b90 offset=7f0):
   jdk.incubator.vector.Int512Vector::lanewise@3 (line 304)
ScopeDesc(pc=0x00007fcde0de2b90 offset=7f0):
   jdk.incubator.vector.Int512Vector::lanewise@3 (line 42)
ScopeDesc(pc=0x00007fcde0de2b90 offset=7f0):
   jdk.incubator.vector.IntVector::and@5 (line 1866)
ScopeDesc(pc=0x00007fcde0de2b90 offset=7f0):
   bug1::micro@36 (line 15)
ScopeDesc(pc=0x00007fcde0de2bbb offset=81b):
   jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
ScopeDesc(pc=0x00007fcde0de2bbb offset=81b):
   bug1::micro@61 (line 17)
ScopeDesc(pc=0x00007fcde0de2bc4 offset=824):
   jdk.incubator.vector.IntVector::lanewiseTemplate@154 (line 856)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 10
    - @1: a 'java/lang/Class'{0x000000011f0ed5b0} = 'jdk/incubator/vector/Int512Vector'
    - @2: NULL
    - @3: a 'java/lang/Class'{0x00000007fef002d0} = int
    - @4: 16
    - @5: obj[469]
    - @6: obj[470]
    - @7: NULL
    - @8: a 'jdk/incubator/vector/IntVector$$Lambda$25+0x0000000801057fa0'{0x000000011f188ef0}
ScopeDesc(pc=0x00007fcde0de2bc4 offset=824):
   jdk.incubator.vector.Int512Vector::lanewise@3 (line 304)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00007fcde0de2bc4 offset=824):
   jdk.incubator.vector.Int512Vector::lanewise@3 (line 42)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00007fcde0de2bc4 offset=824):
   jdk.incubator.vector.IntVector::and@5 (line 1866)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x00007fcde0de2bc4 offset=824):
   bug1::micro@36 (line 15)
   Locals
    - l0: empty
    - l1: stack[64],oop
    - l2: stack[72],oop
    - l3: stack[80]
    - l4: empty
    - l5: reg rbp [10],int
    - l6: empty
   Objects
    - 469: jdk.incubator.vector.Int512Vector stack[0],vector
    - 470: jdk.incubator.vector.Int512Vector stack[192],vector
ScopeDesc(pc=0x00007fcde0de2bd8 offset=838):
   jdk.incubator.vector.IntVector::fromArray0Template@32 (line 3554)
ScopeDesc(pc=0x00007fcde0de2bd8 offset=838):
   jdk.incubator.vector.Int512Vector::fromArray0@3 (line 898)
ScopeDesc(pc=0x00007fcde0de2bd8 offset=838):
   jdk.incubator.vector.IntVector::fromArray@24 (line 3066)
ScopeDesc(pc=0x00007fcde0de2bd8 offset=838):
   bug1::micro@5 (line 12)
ScopeDesc(pc=0x00007fcde0de2bdd offset=83d):
   jdk.incubator.vector.IntVector::intoArray@43 (line 3339)
ScopeDesc(pc=0x00007fcde0de2bdd offset=83d):
   bug1::micro@61 (line 17)
ScopeDesc(pc=0x00007fcde0de2be8 offset=848):
   jdk.incubator.vector.IntVector::fromArray0Template@32 (line 3554)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x000000011f0ed5b0} = 'jdk/incubator/vector/Int512Vector'
    - @1: a 'java/lang/Class'{0x00000007fef002d0} = int
    - @2: 16
    - @3: reg rbp [10],oop
    - @4: 0
    - @5: 16
    - @6: reg rbp [10],oop
    - @7: 0
    - @8: 0
    - @9: a 'jdk/incubator/vector/IntVector$IntSpecies'{0x000000011f0ed560}
    - @10: a 'jdk/incubator/vector/IntVector$$Lambda$22+0x0000000801053240'{0x000000011f10aae0}
ScopeDesc(pc=0x00007fcde0de2be8 offset=848):
   jdk.incubator.vector.Int512Vector::fromArray0@3 (line 898)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00007fcde0de2be8 offset=848):
   jdk.incubator.vector.IntVector::fromArray@24 (line 3066)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x00007fcde0de2be8 offset=848):
   bug1::micro@5 (line 12)
   Locals
    - l0: empty
    - l1: stack[0],oop
    - l2: stack[128],oop
    - l3: stack[136]
    - l4: empty
    - l5: empty
    - l6: empty
ScopeDesc(pc=0x00007fcde0de2bfc offset=85c):
   jdk.incubator.vector.IntVector::fromArray0Template@32 (line 3554)
ScopeDesc(pc=0x00007fcde0de2bfc offset=85c):
   jdk.incubator.vector.Int512Vector::fromArray0@3 (line 898)
ScopeDesc(pc=0x00007fcde0de2bfc offset=85c):
   jdk.incubator.vector.IntVector::fromArray@24 (line 3066)
ScopeDesc(pc=0x00007fcde0de2bfc offset=85c):
   bug1::micro@5 (line 12)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
relocations:
         @0x00007fcde0de2200: 0835
relocInfo@0x00007fcde0de2200 [type=1(oop) addr=0x00007fcde0de23d5 offset=53] | [oop_addr=0x00007fcde0de23d7 *=0x000000011f0dc138 offset=0]
         @0x00007fcde0de2202: 78036613
relocInfo@0x00007fcde0de2204 [type=12(metadata) addr=0x00007fcde0de23e8 offset=19 format=3 data=3] | [metadata_addr=0x00007fcde0de2c78 *=0x0000000801048770 offset=0]metadata_value=0x0000000801048770: 'jdk/incubator/vector/IntVector$IntSpecies'
         @0x00007fcde0de2206: 78076658
relocInfo@0x00007fcde0de2208 [type=12(metadata) addr=0x00007fcde0de2440 offset=88 format=3 data=7] | [metadata_addr=0x00007fcde0de2c98 *=0x000000080104d540 offset=0]metadata_value=0x000000080104d540: 'jdk/incubator/vector/Int512Vector'
         @0x00007fcde0de220a: 603c
relocInfo@0x00007fcde0de220a [type=12(metadata) addr=0x00007fcde0de247c offset=60] | [metadata_addr=0x00007fcde0de247e *=0x000000080104d540 offset=0]metadata_value=0x000000080104d540: 'jdk/incubator/vector/Int512Vector'
         @0x00007fcde0de220c: 7807661b
relocInfo@0x00007fcde0de220e [type=12(metadata) addr=0x00007fcde0de2497 offset=27 format=3 data=7] | [metadata_addr=0x00007fcde0de2c98 *=0x000000080104d540 offset=0]metadata_value=0x000000080104d540: 'jdk/incubator/vector/Int512Vector'
         @0x00007fcde0de2210: 0839
relocInfo@0x00007fcde0de2210 [type=1(oop) addr=0x00007fcde0de24d0 offset=57] | [oop_addr=0x00007fcde0de24d2 *=0x000000011f0dc138 offset=0]
         @0x00007fcde0de2212: 78036630
relocInfo@0x00007fcde0de2214 [type=12(metadata) addr=0x00007fcde0de2500 offset=48 format=3 data=3] | [metadata_addr=0x00007fcde0de2c78 *=0x0000000801048770 offset=0]metadata_value=0x0000000801048770: 'jdk/incubator/vector/IntVector$IntSpecies'
         @0x00007fcde0de2216: 78076645
relocInfo@0x00007fcde0de2218 [type=12(metadata) addr=0x00007fcde0de2545 offset=69 format=3 data=7] | [metadata_addr=0x00007fcde0de2c98 *=0x000000080104d540 offset=0]metadata_value=0x000000080104d540: 'jdk/incubator/vector/Int512Vector'
         @0x00007fcde0de221a: 6040
relocInfo@0x00007fcde0de221a [type=12(metadata) addr=0x00007fcde0de2585 offset=64] | [metadata_addr=0x00007fcde0de2587 *=0x000000080104d540 offset=0]metadata_value=0x000000080104d540: 'jdk/incubator/vector/Int512Vector'
         @0x00007fcde0de221c: 7807661b
relocInfo@0x00007fcde0de221e [type=12(metadata) addr=0x00007fcde0de25a0 offset=27 format=3 data=7] | [metadata_addr=0x00007fcde0de2c98 *=0x000000080104d540 offset=0]metadata_value=0x000000080104d540: 'jdk/incubator/vector/Int512Vector'
         @0x00007fcde0de2220: 605c
relocInfo@0x00007fcde0de2220 [type=12(metadata) addr=0x00007fcde0de25fc offset=92] | [metadata_addr=0x00007fcde0de25fe *=0x000000080104d540 offset=0]metadata_value=0x000000080104d540: 'jdk/incubator/vector/Int512Vector'
         @0x00007fcde0de2222: 7807661b
relocInfo@0x00007fcde0de2224 [type=12(metadata) addr=0x00007fcde0de2617 offset=27 format=3 data=7] | [metadata_addr=0x00007fcde0de2c98 *=0x000000080104d540 offset=0]metadata_value=0x000000080104d540: 'jdk/incubator/vector/Int512Vector'
         @0x00007fcde0de2226: 082c
relocInfo@0x00007fcde0de2226 [type=1(oop) addr=0x00007fcde0de2643 offset=44] | [oop_addr=0x00007fcde0de2645 *=0x000000011f0dc138 offset=0]
         @0x00007fcde0de2228: 7803661d
relocInfo@0x00007fcde0de222a [type=12(metadata) addr=0x00007fcde0de2660 offset=29 format=3 data=3] | [metadata_addr=0x00007fcde0de2c78 *=0x0000000801048770 offset=0]metadata_value=0x0000000801048770: 'jdk/incubator/vector/IntVector$IntSpecies'
         @0x00007fcde0de222c: 501b
relocInfo@0x00007fcde0de222c [type=10(poll) addr=0x00007fcde0de267b offset=27]
         @0x00007fcde0de222e: 5862
relocInfo@0x00007fcde0de222e [type=11(poll_return) addr=0x00007fcde0de26dd offset=98]
         @0x00007fcde0de2230: 6039
relocInfo@0x00007fcde0de2230 [type=12(metadata) addr=0x00007fcde0de2716 offset=57] | [metadata_addr=0x00007fcde0de2718 *=0x000000080104d540 offset=0]metadata_value=0x000000080104d540: 'jdk/incubator/vector/Int512Vector'
         @0x00007fcde0de2232: 3211
relocInfo@0x00007fcde0de2232 [type=6(runtime_call) addr=0x00007fcde0de2727 offset=17 format=1] | [destination=0x00007fcde0c7fa80]
         @0x00007fcde0de2234: 6044
relocInfo@0x00007fcde0de2234 [type=12(metadata) addr=0x00007fcde0de276b offset=68] | [metadata_addr=0x00007fcde0de276d *=0x000000080104d540 offset=0]metadata_value=0x000000080104d540: 'jdk/incubator/vector/Int512Vector'
         @0x00007fcde0de2236: 3210
relocInfo@0x00007fcde0de2236 [type=6(runtime_call) addr=0x00007fcde0de277b offset=16 format=1] | [destination=0x00007fcde0c7fa80]
         @0x00007fcde0de2238: 602d
relocInfo@0x00007fcde0de2238 [type=12(metadata) addr=0x00007fcde0de27a8 offset=45] | [metadata_addr=0x00007fcde0de27aa *=0x000000080104d540 offset=0]metadata_value=0x000000080104d540: 'jdk/incubator/vector/Int512Vector'
         @0x00007fcde0de223a: 320f
relocInfo@0x00007fcde0de223a [type=6(runtime_call) addr=0x00007fcde0de27b7 offset=15 format=1] | [destination=0x00007fcde0c7fa80]
         @0x00007fcde0de223c: 3230
relocInfo@0x00007fcde0de223c [type=6(runtime_call) addr=0x00007fcde0de27e7 offset=48 format=1] | [destination=0x00007fcde0c4aea0]
         @0x00007fcde0de223e: 7c03f23306c87fcd3805
relocInfo@0x00007fcde0de2246 [type=7(external_word) addr=0x00007fcde0de27ec offset=5 data={f23306c87fcd}] | [target=0x00007fcdf23306c8]
         @0x00007fcde0de2248: 320e
relocInfo@0x00007fcde0de2248 [type=6(runtime_call) addr=0x00007fcde0de27fa offset=14 format=1] | [destination=0x00007fcdf19ab8f4]
         @0x00007fcde0de224a: 3225
relocInfo@0x00007fcde0de224a [type=6(runtime_call) addr=0x00007fcde0de281f offset=37 format=1] | [destination=0x00007fcde0c4aea0]
         @0x00007fcde0de224c: 7c03f23306c87fcd3805
relocInfo@0x00007fcde0de2254 [type=7(external_word) addr=0x00007fcde0de2824 offset=5 data={f23306c87fcd}] | [target=0x00007fcdf23306c8]
         @0x00007fcde0de2256: 320e
relocInfo@0x00007fcde0de2256 [type=6(runtime_call) addr=0x00007fcde0de2832 offset=14 format=1] | [destination=0x00007fcdf19ab8f4]
         @0x00007fcde0de2258: 3225
relocInfo@0x00007fcde0de2258 [type=6(runtime_call) addr=0x00007fcde0de2857 offset=37 format=1] | [destination=0x00007fcde0c4aea0]
         @0x00007fcde0de225a: 7c03f23306c87fcd3805
relocInfo@0x00007fcde0de2262 [type=7(external_word) addr=0x00007fcde0de285c offset=5 data={f23306c87fcd}] | [target=0x00007fcdf23306c8]
         @0x00007fcde0de2264: 320e
relocInfo@0x00007fcde0de2264 [type=6(runtime_call) addr=0x00007fcde0de286a offset=14 format=1] | [destination=0x00007fcdf19ab8f4]
         @0x00007fcde0de2266: 3225
relocInfo@0x00007fcde0de2266 [type=6(runtime_call) addr=0x00007fcde0de288f offset=37 format=1] | [destination=0x00007fcde0c4aea0]
         @0x00007fcde0de2268: 7c03f23306c87fcd3805
relocInfo@0x00007fcde0de2270 [type=7(external_word) addr=0x00007fcde0de2894 offset=5 data={f23306c87fcd}] | [target=0x00007fcdf23306c8]
         @0x00007fcde0de2272: 320e
relocInfo@0x00007fcde0de2272 [type=6(runtime_call) addr=0x00007fcde0de28a2 offset=14 format=1] | [destination=0x00007fcdf19ab8f4]
         @0x00007fcde0de2274: 3219
relocInfo@0x00007fcde0de2274 [type=6(runtime_call) addr=0x00007fcde0de28bb offset=25 format=1] | [destination=0x00007fcde0c4aea0]
         @0x00007fcde0de2276: 7c03f23306c87fcd3805
relocInfo@0x00007fcde0de227e [type=7(external_word) addr=0x00007fcde0de28c0 offset=5 data={f23306c87fcd}] | [target=0x00007fcdf23306c8]
         @0x00007fcde0de2280: 320e
relocInfo@0x00007fcde0de2280 [type=6(runtime_call) addr=0x00007fcde0de28ce offset=14 format=1] | [destination=0x00007fcdf19ab8f4]
         @0x00007fcde0de2282: 321d
relocInfo@0x00007fcde0de2282 [type=6(runtime_call) addr=0x00007fcde0de28eb offset=29 format=1] | [destination=0x00007fcde0c4aea0]
         @0x00007fcde0de2284: 7c03f23306c87fcd3805
relocInfo@0x00007fcde0de228c [type=7(external_word) addr=0x00007fcde0de28f0 offset=5 data={f23306c87fcd}] | [target=0x00007fcdf23306c8]
         @0x00007fcde0de228e: 320e
relocInfo@0x00007fcde0de228e [type=6(runtime_call) addr=0x00007fcde0de28fe offset=14 format=1] | [destination=0x00007fcdf19ab8f4]
         @0x00007fcde0de2290: 3211
relocInfo@0x00007fcde0de2290 [type=6(runtime_call) addr=0x00007fcde0de290f offset=17 format=1] | [destination=0x00007fcde0c4aea0]
         @0x00007fcde0de2292: 7c03f23306c87fcd3805
relocInfo@0x00007fcde0de229a [type=7(external_word) addr=0x00007fcde0de2914 offset=5 data={f23306c87fcd}] | [target=0x00007fcdf23306c8]
         @0x00007fcde0de229c: 320e
relocInfo@0x00007fcde0de229c [type=6(runtime_call) addr=0x00007fcde0de2922 offset=14 format=1] | [destination=0x00007fcdf19ab8f4]
         @0x00007fcde0de229e: 3215
relocInfo@0x00007fcde0de229e [type=6(runtime_call) addr=0x00007fcde0de2937 offset=21 format=1] | [destination=0x00007fcde0c4aea0]
         @0x00007fcde0de22a0: 7c03f23306c87fcd3805
relocInfo@0x00007fcde0de22a8 [type=7(external_word) addr=0x00007fcde0de293c offset=5 data={f23306c87fcd}] | [target=0x00007fcdf23306c8]
         @0x00007fcde0de22aa: 320e
relocInfo@0x00007fcde0de22aa [type=6(runtime_call) addr=0x00007fcde0de294a offset=14 format=1] | [destination=0x00007fcdf19ab8f4]
         @0x00007fcde0de22ac: 3219
relocInfo@0x00007fcde0de22ac [type=6(runtime_call) addr=0x00007fcde0de2963 offset=25 format=1] | [destination=0x00007fcde0c4aea0]
         @0x00007fcde0de22ae: 7c03f23306c87fcd3805
relocInfo@0x00007fcde0de22b6 [type=7(external_word) addr=0x00007fcde0de2968 offset=5 data={f23306c87fcd}] | [target=0x00007fcdf23306c8]
         @0x00007fcde0de22b8: 320e
relocInfo@0x00007fcde0de22b8 [type=6(runtime_call) addr=0x00007fcde0de2976 offset=14 format=1] | [destination=0x00007fcdf19ab8f4]
         @0x00007fcde0de22ba: 321d
relocInfo@0x00007fcde0de22ba [type=6(runtime_call) addr=0x00007fcde0de2993 offset=29 format=1] | [destination=0x00007fcde0c4aea0]
         @0x00007fcde0de22bc: 7c03f23306c87fcd3805
relocInfo@0x00007fcde0de22c4 [type=7(external_word) addr=0x00007fcde0de2998 offset=5 data={f23306c87fcd}] | [target=0x00007fcdf23306c8]
         @0x00007fcde0de22c6: 320e
relocInfo@0x00007fcde0de22c6 [type=6(runtime_call) addr=0x00007fcde0de29a6 offset=14 format=1] | [destination=0x00007fcdf19ab8f4]
         @0x00007fcde0de22c8: 3215
relocInfo@0x00007fcde0de22c8 [type=6(runtime_call) addr=0x00007fcde0de29bb offset=21 format=1] | [destination=0x00007fcde0c4aea0]
         @0x00007fcde0de22ca: 7c03f23306c87fcd3805
relocInfo@0x00007fcde0de22d2 [type=7(external_word) addr=0x00007fcde0de29c0 offset=5 data={f23306c87fcd}] | [target=0x00007fcdf23306c8]
         @0x00007fcde0de22d4: 320e
relocInfo@0x00007fcde0de22d4 [type=6(runtime_call) addr=0x00007fcde0de29ce offset=14 format=1] | [destination=0x00007fcdf19ab8f4]
         @0x00007fcde0de22d6: 3229
relocInfo@0x00007fcde0de22d6 [type=6(runtime_call) addr=0x00007fcde0de29f7 offset=41 format=1] | [destination=0x00007fcde0c4aea0]
         @0x00007fcde0de22d8: 7c03f23306c87fcd3805
relocInfo@0x00007fcde0de22e0 [type=7(external_word) addr=0x00007fcde0de29fc offset=5 data={f23306c87fcd}] | [target=0x00007fcdf23306c8]
         @0x00007fcde0de22e2: 320e
relocInfo@0x00007fcde0de22e2 [type=6(runtime_call) addr=0x00007fcde0de2a0a offset=14 format=1] | [destination=0x00007fcdf19ab8f4]
         @0x00007fcde0de22e4: 3211
relocInfo@0x00007fcde0de22e4 [type=6(runtime_call) addr=0x00007fcde0de2a1b offset=17 format=1] | [destination=0x00007fcde0c4aea0]
         @0x00007fcde0de22e6: 7c03f23306c87fcd3805
relocInfo@0x00007fcde0de22ee [type=7(external_word) addr=0x00007fcde0de2a20 offset=5 data={f23306c87fcd}] | [target=0x00007fcdf23306c8]
         @0x00007fcde0de22f0: 320e
relocInfo@0x00007fcde0de22f0 [type=6(runtime_call) addr=0x00007fcde0de2a2e offset=14 format=1] | [destination=0x00007fcdf19ab8f4]
         @0x00007fcde0de22f2: 3211
relocInfo@0x00007fcde0de22f2 [type=6(runtime_call) addr=0x00007fcde0de2a3f offset=17 format=1] | [destination=0x00007fcde0c4aea0]
         @0x00007fcde0de22f4: 7c03f23306c87fcd3805
relocInfo@0x00007fcde0de22fc [type=7(external_word) addr=0x00007fcde0de2a44 offset=5 data={f23306c87fcd}] | [target=0x00007fcdf23306c8]
         @0x00007fcde0de22fe: 320e
relocInfo@0x00007fcde0de22fe [type=6(runtime_call) addr=0x00007fcde0de2a52 offset=14 format=1] | [destination=0x00007fcdf19ab8f4]
         @0x00007fcde0de2300: 322d
relocInfo@0x00007fcde0de2300 [type=6(runtime_call) addr=0x00007fcde0de2a7f offset=45 format=1] | [destination=0x00007fcde0c4aea0]
         @0x00007fcde0de2302: 7c03f23306c87fcd3805
relocInfo@0x00007fcde0de230a [type=7(external_word) addr=0x00007fcde0de2a84 offset=5 data={f23306c87fcd}] | [target=0x00007fcdf23306c8]
         @0x00007fcde0de230c: 320e
relocInfo@0x00007fcde0de230c [type=6(runtime_call) addr=0x00007fcde0de2a92 offset=14 format=1] | [destination=0x00007fcdf19ab8f4]
         @0x00007fcde0de230e: 3211
relocInfo@0x00007fcde0de230e [type=6(runtime_call) addr=0x00007fcde0de2aa3 offset=17 format=1] | [destination=0x00007fcde0c4aea0]
         @0x00007fcde0de2310: 7c03f23306c87fcd3805
relocInfo@0x00007fcde0de2318 [type=7(external_word) addr=0x00007fcde0de2aa8 offset=5 data={f23306c87fcd}] | [target=0x00007fcdf23306c8]
         @0x00007fcde0de231a: 320e
relocInfo@0x00007fcde0de231a [type=6(runtime_call) addr=0x00007fcde0de2ab6 offset=14 format=1] | [destination=0x00007fcdf19ab8f4]
         @0x00007fcde0de231c: 3211
relocInfo@0x00007fcde0de231c [type=6(runtime_call) addr=0x00007fcde0de2ac7 offset=17 format=1] | [destination=0x00007fcde0c4aea0]
         @0x00007fcde0de231e: 7c03f23306c87fcd3805
relocInfo@0x00007fcde0de2326 [type=7(external_word) addr=0x00007fcde0de2acc offset=5 data={f23306c87fcd}] | [target=0x00007fcdf23306c8]
         @0x00007fcde0de2328: 320e
relocInfo@0x00007fcde0de2328 [type=6(runtime_call) addr=0x00007fcde0de2ada offset=14 format=1] | [destination=0x00007fcdf19ab8f4]
         @0x00007fcde0de232a: 3219
relocInfo@0x00007fcde0de232a [type=6(runtime_call) addr=0x00007fcde0de2af3 offset=25 format=1] | [destination=0x00007fcde0c4aea0]
         @0x00007fcde0de232c: 7c03f23306c87fcd3805
relocInfo@0x00007fcde0de2334 [type=7(external_word) addr=0x00007fcde0de2af8 offset=5 data={f23306c87fcd}] | [target=0x00007fcdf23306c8]
         @0x00007fcde0de2336: 320e
relocInfo@0x00007fcde0de2336 [type=6(runtime_call) addr=0x00007fcde0de2b06 offset=14 format=1] | [destination=0x00007fcdf19ab8f4]
         @0x00007fcde0de2338: 3211
relocInfo@0x00007fcde0de2338 [type=6(runtime_call) addr=0x00007fcde0de2b17 offset=17 format=1] | [destination=0x00007fcde0c4aea0]
         @0x00007fcde0de233a: 7c03f23306c87fcd3805
relocInfo@0x00007fcde0de2342 [type=7(external_word) addr=0x00007fcde0de2b1c offset=5 data={f23306c87fcd}] | [target=0x00007fcdf23306c8]
         @0x00007fcde0de2344: 320e
relocInfo@0x00007fcde0de2344 [type=6(runtime_call) addr=0x00007fcde0de2b2a offset=14 format=1] | [destination=0x00007fcdf19ab8f4]
         @0x00007fcde0de2346: 3219
relocInfo@0x00007fcde0de2346 [type=6(runtime_call) addr=0x00007fcde0de2b43 offset=25 format=1] | [destination=0x00007fcde0c4aea0]
         @0x00007fcde0de2348: 7c03f23306c87fcd3805
relocInfo@0x00007fcde0de2350 [type=7(external_word) addr=0x00007fcde0de2b48 offset=5 data={f23306c87fcd}] | [target=0x00007fcdf23306c8]
         @0x00007fcde0de2352: 320e
relocInfo@0x00007fcde0de2352 [type=6(runtime_call) addr=0x00007fcde0de2b56 offset=14 format=1] | [destination=0x00007fcdf19ab8f4]
         @0x00007fcde0de2354: 3221
relocInfo@0x00007fcde0de2354 [type=6(runtime_call) addr=0x00007fcde0de2b77 offset=33 format=1] | [destination=0x00007fcde0c4aea0]
         @0x00007fcde0de2356: 7c03f23306c87fcd3805
relocInfo@0x00007fcde0de235e [type=7(external_word) addr=0x00007fcde0de2b7c offset=5 data={f23306c87fcd}] | [target=0x00007fcdf23306c8]
         @0x00007fcde0de2360: 320e
relocInfo@0x00007fcde0de2360 [type=6(runtime_call) addr=0x00007fcde0de2b8a offset=14 format=1] | [destination=0x00007fcdf19ab8f4]
         @0x00007fcde0de2362: 3235
relocInfo@0x00007fcde0de2362 [type=6(runtime_call) addr=0x00007fcde0de2bbf offset=53 format=1] | [destination=0x00007fcde0c4aea0]
         @0x00007fcde0de2364: 7c03f23306c87fcd3805
relocInfo@0x00007fcde0de236c [type=7(external_word) addr=0x00007fcde0de2bc4 offset=5 data={f23306c87fcd}] | [target=0x00007fcdf23306c8]
         @0x00007fcde0de236e: 320e
relocInfo@0x00007fcde0de236e [type=6(runtime_call) addr=0x00007fcde0de2bd2 offset=14 format=1] | [destination=0x00007fcdf19ab8f4]
         @0x00007fcde0de2370: 3211
relocInfo@0x00007fcde0de2370 [type=6(runtime_call) addr=0x00007fcde0de2be3 offset=17 format=1] | [destination=0x00007fcde0c4aea0]
         @0x00007fcde0de2372: 7c03f23306c87fcd3805
relocInfo@0x00007fcde0de237a [type=7(external_word) addr=0x00007fcde0de2be8 offset=5 data={f23306c87fcd}] | [target=0x00007fcdf23306c8]
         @0x00007fcde0de237c: 320e
relocInfo@0x00007fcde0de237c [type=6(runtime_call) addr=0x00007fcde0de2bf6 offset=14 format=1] | [destination=0x00007fcdf19ab8f4]
         @0x00007fcde0de237e: 7c01051f4006
relocInfo@0x00007fcde0de2382 [type=8(internal_word) addr=0x00007fcde0de2bfc offset=6 data=1311] | [target=0x00007fcde0de26dd]
         @0x00007fcde0de2384: 3211
relocInfo@0x00007fcde0de2384 [type=6(runtime_call) addr=0x00007fcde0de2c0d offset=17 format=1] | [destination=0x00007fcde0d77520]
         @0x00007fcde0de2386: 3205
relocInfo@0x00007fcde0de2386 [type=6(runtime_call) addr=0x00007fcde0de2c12 offset=5 format=1] | [destination=0x00007fcde0cd2800]
         @0x00007fcde0de2388: 000e
relocInfo@0x00007fcde0de2388 [type=0(none) addr=0x00007fcde0de2c20 offset=14]
         @0x00007fcde0de238a: 3200
relocInfo@0x00007fcde0de238a [type=6(runtime_call) addr=0x00007fcde0de2c20 offset=0 format=1] | [destination=0x00007fcde0c7f7a0]
         @0x00007fcde0de238c: 320f
relocInfo@0x00007fcde0de238c [type=6(runtime_call) addr=0x00007fcde0de2c2f offset=15 format=1] | [destination=0x00007fcde0d789c0]
         @0x00007fcde0de238e: 0000
relocInfo@0x00007fcde0de238e [type=0(none) addr=0x00007fcde0de2c2f offset=0]
         @0x00007fcde0de2390: 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Dependencies:
Dependency of type unique_concrete_method_4
  context = *jdk.incubator.vector.IntVector
  method  = {method} {0x00007fcd980e6ce0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/Int512Vector'
  class   = jdk.incubator.vector.IntVector
  method  = *{method} {0x00007fcd9803cdc0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/IntVector'
   [nmethod<=klass]jdk.incubator.vector.IntVector
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.VectorOperators$AssociativeImpl
  method  = {method} {0x00007fcd98167ea8} 'opKind' '(I)Z' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  class   = jdk.incubator.vector.VectorOperators$OperatorImpl
  method  = {method} {0x00007fcd98167ea8} 'opKind' '(I)Z' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
   [nmethod<=klass]jdk.incubator.vector.VectorOperators$AssociativeImpl
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.VectorOperators$AssociativeImpl
  method  = {method} {0x00007fcd981679e0} 'opCode' '(II)I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  class   = jdk.incubator.vector.VectorOperators$OperatorImpl
  method  = {method} {0x00007fcd981679e0} 'opCode' '(II)I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
   [nmethod<=klass]jdk.incubator.vector.VectorOperators$AssociativeImpl
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.VectorOperators$AssociativeImpl
  method  = {method} {0x00007fcd98167ad0} 'opCodeRaw' '()I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  class   = jdk.incubator.vector.VectorOperators$OperatorImpl
  method  = {method} {0x00007fcd98167ad0} 'opCodeRaw' '()I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
   [nmethod<=klass]jdk.incubator.vector.VectorOperators$AssociativeImpl
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.VectorOperators$ImplCache
  method  = {method} {0x00007fcd9808aa48} 'find' '(Ljdk/incubator/vector/VectorOperators$Operator;ILjava/util/function/IntFunction;)Ljava/lang/Object;' in 'jdk/incubator/vector/VectorOperators$ImplCache'
  class   = jdk.incubator.vector.VectorOperators$ImplCache
  method  = {method} {0x00007fcd9808aa48} 'find' '(Ljdk/incubator/vector/VectorOperators$Operator;ILjava/util/function/IntFunction;)Ljava/lang/Object;' in 'jdk/incubator/vector/VectorOperators$ImplCache'
   [nmethod<=klass]jdk.incubator.vector.VectorOperators$ImplCache
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ExceptionHandlerTable (size = 72 bytes)
catch_pco = 908 (pc=0x00007fcde0de272c, 1 entries)
  bci -1 at scope depth 0 -> pco 1980 (pc=0x00007fcde0de2b5c)
catch_pco = 992 (pc=0x00007fcde0de2780, 1 entries)
  bci -1 at scope depth 0 -> pco 2032 (pc=0x00007fcde0de2b90)
catch_pco = 1052 (pc=0x00007fcde0de27bc, 1 entries)
  bci -1 at scope depth 0 -> pco 2104 (pc=0x00007fcde0de2bd8)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ImplicitExceptionTable (size = 8 entries, 68 bytes):
{
   < 0x00007fcde0de23e3, 0x00007fcde0de2a98 > < 0x00007fcde0de2400, 0x00007fcde0de2abc > < 0x00007fcde0de242e, 0x00007fcde0de2b30 > 
   < 0x00007fcde0de24cc, 0x00007fcde0de2ae0 > < 0x00007fcde0de24f3, 0x00007fcde0de2a10 > < 0x00007fcde0de2540, 0x00007fcde0de2a58 > 
   < 0x00007fcde0de2651, 0x00007fcde0de2a34 > < 0x00007fcde0de2695, 0x00007fcde0de2b0c > 
}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded oops:
#0: 0x0000000000000000 NULL-oop
#1: 0x000000011f0ed5b0 a 'java/lang/Class'{0x000000011f0ed5b0} = 'jdk/incubator/vector/Int512Vector'
#2: 0x00000007fef002d0 a 'java/lang/Class'{0x00000007fef002d0} = int
#3: 0x000000011f0ed560 a 'jdk/incubator/vector/IntVector$IntSpecies'{0x000000011f0ed560}
#4: 0x000000011f10aae0 a 'jdk/incubator/vector/IntVector$$Lambda$22+0x0000000801053240'{0x000000011f10aae0}
#5: 0x000000011f188ef0 a 'jdk/incubator/vector/IntVector$$Lambda$25+0x0000000801057fa0'{0x000000011f188ef0}
#6: 0x000000011f014348 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x000000011f014348}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded metadata:
# 0: 0x0000000000000000 NULL-oop
# 1: 0x00007fcd98401528 {method} {0x00007fcd98401528} 'micro' '([I[I[II)I' in 'bug1'
# 2: 0x00007fcd98045a08 {method} {0x00007fcd98045a08} 'intoArray' '([II)V' in 'jdk/incubator/vector/IntVector'
# 3: 0x0000000801048770 'jdk/incubator/vector/IntVector$IntSpecies'
# 4: 0x00007fcd980451a8 {method} {0x00007fcd980451a8} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[II)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/IntVector'
# 5: 0x00007fcd98091f40 {method} {0x00007fcd98091f40} 'dummyVectorMF' '()Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/IntVector$IntSpecies'
# 6: 0x00007fcd98097bf8 {method} {0x00007fcd98097bf8} 'dummyVectorMF' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
# 7: 0x000000080104d540 'jdk/incubator/vector/Int512Vector'
# 8: 0x00007fcd980e4bc0 {method} {0x00007fcd980e4bc0} 'fromArray0' '([II)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/Int512Vector'
# 9: 0x00007fcd98046300 {method} {0x00007fcd98046300} 'fromArray0Template' '([II)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/IntVector'
#10: 0x00007fcd980960c0 {method} {0x00007fcd980960c0} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
#11: 0x00007fcd980ef9b8 {method} {0x00007fcd980ef9b8} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
#12: 0x0000000800078940 {method} {0x0000000800078940} 'checkIndex' '(II)I' in 'java/util/Objects'
#13: 0x00007fcd98047b78 {method} {0x00007fcd98047b78} 'arrayAddress' '([II)J' in 'jdk/incubator/vector/IntVector'
#14: 0x00007fcd98040258 {method} {0x00007fcd98040258} 'and' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/IntVector'
#15: 0x00007fcd980e6ce0 {method} {0x00007fcd980e6ce0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/Int512Vector'
#16: 0x00007fcd980e2578 {method} {0x00007fcd980e2578} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/Int512Vector;' in 'jdk/incubator/vector/Int512Vector'
#17: 0x00007fcd9803cf98 {method} {0x00007fcd9803cf98} 'lanewiseTemplate' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/IntVector'
#18: 0x00000008010422f8 'jdk/incubator/vector/IntVector'
#19: 0x00007fcd9803cdc0 {method} {0x00007fcd9803cdc0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/IntVector'
#20: 0x00000008010541a0 'jdk/incubator/vector/VectorOperators$AssociativeImpl'
#21: 0x00007fcd98167ea8 {method} {0x00007fcd98167ea8} 'opKind' '(I)Z' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
#22: 0x0000000801053910 'jdk/incubator/vector/VectorOperators$OperatorImpl'
#23: 0x00007fcd981679e0 {method} {0x00007fcd981679e0} 'opCode' '(II)I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
#24: 0x00007fcd98167ad0 {method} {0x00007fcd98167ad0} 'opCodeRaw' '()I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
#25: 0x00007fcd9808aa48 {method} {0x00007fcd9808aa48} 'find' '(Ljdk/incubator/vector/VectorOperators$Operator;ILjava/util/function/IntFunction;)Ljava/lang/Object;' in 'jdk/incubator/vector/VectorOperators$ImplCache'
#26: 0x0000000801046f70 'jdk/incubator/vector/VectorOperators$ImplCache'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
100000
------------------------------------------------------------------------
static bug1::micro([I[I[II)I
  interpreter_invocation_count:        3367
  invocation_counter:                  3367
  backedge_counter:                  215488
  decompile_count:                        0
  mdo size: 696 bytes

   0 getstatic 7 <bug1.I_SPECIES/Ljdk/incubator/vector/VectorSpecies;> 
   3 fast_aload_0
   4 iconst_0
   5 invokestatic 13 <jdk/incubator/vector/IntVector.fromArray(Ljdk/incubator/vector/VectorSpecies;[II)Ljdk/incubator/vector/IntVector;> 
  0   bci: 5    CounterData         count(3240)
   8 astore #4
  10 iconst_0
  11 istore #5
  13 fast_iload #5
  15 sipush 1024
  18 if_icmpge 57
  16  bci: 18   BranchData          taken(3240) displacement(184)
                                    not taken(207360)
  21 getstatic 7 <bug1.I_SPECIES/Ljdk/incubator/vector/VectorSpecies;> 
  24 aload_1
  25 fast_iload #5
  27 invokestatic 13 <jdk/incubator/vector/IntVector.fromArray(Ljdk/incubator/vector/VectorSpecies;[II)Ljdk/incubator/vector/IntVector;> 
  48  bci: 27   CounterData         count(207360)
  30 astore #6
  32 aload #4
  34 aload #6
  36 invokevirtual 19 <jdk/incubator/vector/IntVector.and(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/IntVector;> 
  64  bci: 36   VirtualCallData     count(207360) nonprofiled_count(0) entries(0)
  39 astore #4
  41 fast_iload #5
  43 getstatic 7 <bug1.I_SPECIES/Ljdk/incubator/vector/VectorSpecies;> 
  46 invokeinterface 23 <jdk/incubator/vector/VectorSpecies.length()I> 
  120 bci: 46   VirtualCallData     count(0) nonprofiled_count(0) entries(1)
                                    'jdk/incubator/vector/IntVector$IntSpecies'(207360 1.00)
  51 iadd
  52 istore #5
  54 goto 13
  176 bci: 54   JumpData            taken(207360) displacement(-160)
  57 aload #4
  59 aload_2
  60 iconst_0
  61 invokevirtual 29 <jdk/incubator/vector/IntVector.intoArray([II)V> 
  200 bci: 61   VirtualCallData     count(3240) nonprofiled_count(0) entries(0)
  64 aload_2
  65 iload_3
  66 iaload
  67 ireturn
------------------------------------------------------------------------
Total MDO size: 696 bytes
