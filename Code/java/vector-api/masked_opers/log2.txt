CompileCommand: print storem.workload bool print = true

============================= C2-compiled nmethod ==============================
#r018 rsi:rsi   : parm 0: rawptr:BotPTR
# -- Old rsp -- Framesize: 160 --
#r591 rsp+156: in_preserve
#r590 rsp+152: return address
#r589 rsp+148: in_preserve
#r588 rsp+144: saved fp register
#r587 rsp+140: pad2, stack alignment
#r586 rsp+136: pad2, stack alignment
#r585 rsp+132: Fixed slot 1
#r584 rsp+128: Fixed slot 0
#r623 rsp+124: spill
#r622 rsp+120: spill
#r621 rsp+116: spill
#r620 rsp+112: spill
#r619 rsp+108: spill
#r618 rsp+104: spill
#r617 rsp+100: spill
#r616 rsp+96: spill
#r615 rsp+92: spill
#r614 rsp+88: spill
#r613 rsp+84: spill
#r612 rsp+80: spill
#r611 rsp+76: spill
#r610 rsp+72: spill
#r609 rsp+68: spill
#r608 rsp+64: spill
#r607 rsp+60: spill
#r606 rsp+56: spill
#r605 rsp+52: spill
#r604 rsp+48: spill
#r603 rsp+44: spill
#r602 rsp+40: spill
#r601 rsp+36: spill
#r600 rsp+32: spill
#r599 rsp+28: spill
#r598 rsp+24: spill
#r597 rsp+20: spill
#r596 rsp+16: spill
#r595 rsp+12: spill
#r594 rsp+ 8: spill
#r593 rsp+ 4: spill
#r592 rsp+ 0: spill
#
----------------------- MetaData before Compile_id = 229 ------------------------
{method}
 - this oop:          0x00007fe838510e08
 - method holder:     'storem'
 - constants:         0x00007fe838510878 constant pool [107]/operands[10] {0x00007fe838510878} for 'storem' cache=0x00007fe838700128
 - access:            0xc1000009  public static 
 - name:              'workload'
 - signature:         '([B[BI)B'
 - max stack:         5
 - max locals:        6
 - size of params:    3
 - method size:       14
 - vtable index:      -2
 - i2i entry:         0x00007fe8a4ad5400
 - adapters:          AHE@0x00007fe8a037f720: 0xbba i2c: 0x00007fe8a4b70ae0 c2i: 0x00007fe8a4b70bc7 c2iUV: 0x00007fe8a4b70b91 c2iNCI: 0x00007fe8a4b70c01
 - compiled entry     0x00007fe8a4b70bc7
 - code size:         64
 - code start:        0x00007fe838510db8
 - code end (excl):   0x00007fe838510df8
 - method data:       0x00007fe838700428
 - checked ex length: 0
 - linenumber start:  0x00007fe838510df8
 - localvar length:   0

------------------------ OptoAssembly for Compile_id = 229 -----------------------
#
#  byte ( rawptr:BotPTR )
#
000     N266: #	out( B1 ) <- BLOCK HEAD IS JUNK  Freq: 1
000     # breakpoint
        nop 	# 11 bytes pad for loops and calls

010     B1: #	out( B17 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
010     # stack bang (504 bytes)
	pushq   rbp	# Save rbp
	subq    rsp, #144	# Create frame

01f     movq    RBP, [RSI + #40 (8-bit)]	# ptr
023     movq    R14, [RSI + #32 (8-bit)]	# ptr
027     movl    RBX, [RSI + #16 (8-bit)]	# int
02a     movl    R13, [RSI + #24 (8-bit)]	# int
02e     movq    RDI, RSI	# spill
        nop 	# 15 bytes pad for loops and calls
040     call_leaf,runtime  OSR_migration_end
        No JVM State Info
        # 
050     testq   RBP, RBP	# ptr
053     je     B17  P=0.001000 C=-1.000000

059     B2: #	out( B20 B3 ) <- in( B1 )  Freq: 0.999
059     movl    R10, [RBP + #8 (8-bit)]	# compressed klass ptr
        nop 	# 3 bytes pad for loops and calls
060     cmpl    R10, narrowklass: precise [byte: :Constant:exact *	# compressed klass ptr
067     jne,u   B20  P=0.000001 C=-1.000000

06d     B3: #	out( B4 ) <- in( B2 )  Freq: 0.998999
06d     movq    R11, RBP	# spill
070     # checkcastPP of R11

070     B4: #	out( B22 B5 ) <- in( B3 B17 )  Freq: 0.999999
070     movl    R10, [R14 + #8 (8-bit)]	# compressed klass ptr
074     NullCheck R14

074     B5: #	out( B20 B6 ) <- in( B4 )  Freq: 0.999998
        nop 	# 12 bytes pad for loops and calls
080     cmpl    R10, narrowklass: precise [byte: :Constant:exact *	# compressed klass ptr
087     jne,u   B20  P=0.000001 C=-1.000000

08d     B6: #	out( B21 B7 ) <- in( B5 )  Freq: 0.999997
08d     # checkcastPP of R14
08d     movl    R8, [R14 + #12 (8-bit)]	# range
091     movl    R10, R8	# spill
094     addl    R10, #-31	# int
098     testl   R10, R10
        nop 	# 5 bytes pad for loops and calls
0a0     jl     B21  P=0.000001 C=-1.000000

0a6     B7: #	out( B21 B8 ) <- in( B6 )  Freq: 0.999996
0a6     movl    R9, #32767	# long (unsigned 32-bit)
0ac     vallones XMM1
0b0     long_to_mask_avx XMM4, R9	! using RCX, RDI, XMM2, as TEMP
129     vector_loadmask_byte XMM0, XMM4
	
131     vptest_alltrue_ge16  RCX,XMM0, XMM1	! using RFLAGS as TEMP
        nop 	# 4 bytes pad for loops and calls
140     testl   RCX, RCX
142     jne     B21  P=0.000001 C=-1.000000

148     B8: #	out( B21 B9 ) <- in( B7 )  Freq: 0.999995
148     movl    R9, [R11 + #12 (8-bit)]	# range
14c     NullCheck R11

14c     B9: #	out( B11 ) <- in( B8 )  Freq: 0.999994
14c     movslq  RCX, R9	# i2l
14f     andl    R8, #-32	# int
153     addq    RCX, #-32	# long
157     # TLS is in R15
157     jmp     B11
        nop 	# 4 bytes pad for loops and calls

160     B10: #	out( B11 ) <- in( B13 ) top-of-loop Freq: 31.9745
160     movdl   XMM1, R10	# spill
165     movq    RDX, R11	# spill
168     movq    RAX, [R15 + #976 (32-bit)]	# ptr
16f     addl    RBX, #32	# int
172     vector_masked_store [RDX + #16 + RDI], XMM5, XMM0 	! using XMM2, XMM3, RSI, RBP, R10 and R11 as TEMP
1d1     testl   rax, [RAX]	# Safepoint: poll for GC        # storem::workload @ bci:57 (line 9) L[0]=RDX L[1]=R14 L[2]=R13 L[3]=RBX L[4]=_ L[5]=_
        # OopMap {rdx=Oop r14=Oop off=465/0x1d1}
1d3     movq    R11, RDX	# spill
1d6     movdl   R10, XMM1	# spill

1db     B11: #	out( B15 B12 ) <- in( B9 B10 ) Loop( B11-B10 inner ) Freq: 32.9745
        nop 	# 5 bytes pad for loops and calls
1e0     cmpl    RBX, R8
1e3     jge     B15  P=0.030325 C=24996.000000

1e9     B12: #	out( B18 B13 ) <- in( B11 )  Freq: 31.9745
1e9     cmpl    RBX, R10	# unsigned
1ec     jae,u   B18  P=0.000001 C=-1.000000

1f2     B13: #	out( B10 B14 ) <- in( B12 )  Freq: 31.9745
1f2     # castII of RBX
1f2     movslq  RDI, RBX	# i2l
1f5     load_vector XMM5,[R14 + #16 + RDI]
        nop 	# 4 bytes pad for loops and calls
200     cmpq    RDI, RCX
203     jle     B10  P=1.000000 C=8222.000000

209     B14: #	out( N266 ) <- in( B13 )  Freq: 1.52466e-05
209     cmpq    RDI, RCX	# CmpL3
	movl    RBP, -1
	jl,s    done
	setne   RBP
	movzbl  RBP, RBP
	done:
21b     movl    RSI, #-187	# int
220     movq    [rsp + #8], R14	# spill
225     movl    [rsp + #16], R13	# spill
22a     movq    [rsp + #24], R11	# spill
22f     movl    [rsp + #32], RBX	# spill
233     vmovdqu [rsp + 64],XMM5	# spill
239     vmovdqu [rsp + 96],XMM4	# spill
        nop 	# 1 bytes pad for loops and calls
240     call,static  wrapper for: uncommon_trap(reason='unstable_if' action='reinterpret' debug_id='0')
        # jdk.incubator.vector.VectorIntrinsics::indexInRange @ bci:12 (line 49) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ STK[0]=RBP
        # jdk.incubator.vector.ByteVector::intoArray @ bci:33 (line 3424) L[0]=#ScObj0 L[1]=rsp + #24 L[2]=rsp + #32 L[3]=#ScObj1 L[4]=#Ptr0x00007fe80804eee8
        # ScObj0 jdk/incubator/vector/Byte256Vector={ [payload :0]=rsp + #64 }
        # ScObj1 jdk/incubator/vector/Byte256Vector$Byte256Mask={ [payload :0]=rsp + #96 }
        # storem::workload @ bci:43 (line 13) L[0]=rsp + #24 L[1]=rsp + #8 L[2]=rsp + #16 L[3]=rsp + #32 L[4]=_ L[5]=_
        # OopMap {[8]=Oop [24]=Oop off=584/0x248}
248     stop	# ShouldNotReachHere

25c     B15: #	out( B19 B16 ) <- in( B11 )  Freq: 0.999946
        nop 	# 4 bytes pad for loops and calls
260     cmpl    R13, R9	# unsigned
263     jae,us  B19  P=0.000001 C=-1.000000

265     B16: #	out( N266 ) <- in( B15 )  Freq: 0.999945
265     movsbl  RAX, [R11 + #16 + R13]	# byte
26b     vzeroupper
	addq    rsp, 144	# Destroy frame
	popq    rbp
	cmpq     rsp, poll_offset[r15_thread] 
	ja       #safepoint_stub	# Safepoint: poll for GC

283     ret

284     B17: #	out( B4 ) <- in( B1 )  Freq: 0.000999987
284     xorl    R11, R11	# ptr
287     jmp     B4

28c     B18: #	out( N266 ) <- in( B12 )  Freq: 3.23991e-05
28c     movl    RSI, #-28	# int
291     movq    RBP, R11	# spill
294     movl    [rsp + #8], R13	# spill
299     movq    [rsp + #16], R14	# spill
29e     movl    [rsp + #24], RBX	# spill
2a2     movl    [rsp + #28], R10	# spill
2a7     vmovdqu [rsp + 32],XMM4	# spill
        nop 	# 3 bytes pad for loops and calls
2b0     call,static  wrapper for: uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')
        # java.util.Objects::checkIndex @ bci:3 (line 385) L[0]=_ L[1]=_ STK[0]=rsp + #24 STK[1]=rsp + #28 STK[2]=#NULL
        # jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize @ bci:43 (line 57) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.ByteVector::fromArray @ bci:9 (line 2979) L[0]=#Ptr0x00007fe80804eee8 L[1]=rsp + #16 L[2]=_ L[3]=_
        # storem::workload @ bci:32 (line 12) L[0]=RBP L[1]=rsp + #16 L[2]=rsp + #8 L[3]=rsp + #24 L[4]=#ScObj0 L[5]=_
        # ScObj0 jdk/incubator/vector/Byte256Vector$Byte256Mask={ [payload :0]=rsp + #32 }
        # OopMap {rbp=Oop [16]=Oop off=696/0x2b8}
2b8     stop	# ShouldNotReachHere

2cc     B19: #	out( N266 ) <- in( B15 )  Freq: 1.01322e-06
2cc     movl    RSI, #-28	# int
2d1     movq    RBP, R11	# spill
2d4     movl    [rsp + #0], R13	# spill
2d8     call,static  wrapper for: uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')
        # storem::workload @ bci:62 (line 15) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ STK[0]=RBP STK[1]=rsp + #0
        # OopMap {rbp=Oop off=736/0x2e0}
2e0     stop	# ShouldNotReachHere

2f4     B20: #	out( N266 ) <- in( B2 B5 )  Freq: 1.999e-06
2f4     movl    RSI, #-115	# int
2f9     movq    [rsp + #0], R14	# spill
2fd     movl    [rsp + #8], R13	# spill
302     movl    [rsp + #12], RBX	# spill
        nop 	# 2 bytes pad for loops and calls
308     call,static  wrapper for: uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')
        # storem::workload @ bci:2 (line 9) L[0]=RBP L[1]=rsp + #0 L[2]=rsp + #8 L[3]=rsp + #12 L[4]=_ L[5]=_
        # OopMap {rbp=Oop [0]=Oop off=784/0x310}
310     stop	# ShouldNotReachHere

324     B21: #	out( N266 ) <- in( B8 B6 B7 )  Freq: 3.01327e-06
324     movl    RSI, #-66	# int
329     movq    RBP, R11	# spill
32c     movq    [rsp + #0], R14	# spill
330     movl    [rsp + #8], R13	# spill
335     movl    [rsp + #12], RBX	# spill
        nop 	# 3 bytes pad for loops and calls
33c     call,static  wrapper for: uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')
        # storem::workload @ bci:2 (line 9) L[0]=RBP L[1]=rsp + #0 L[2]=rsp + #8 L[3]=rsp + #12 L[4]=_ L[5]=_
        # OopMap {rbp=Oop [0]=Oop off=836/0x344}
344     stop	# ShouldNotReachHere

358     B22: #	out( N266 ) <- in( B4 )  Freq: 1.01328e-06
358     movl    RSI, #-138	# int
35d     movq    RBP, R11	# spill
360     movl    [rsp + #0], R13	# spill
364     movl    [rsp + #4], RBX	# spill
368     call,static  wrapper for: uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')
        # storem::workload @ bci:2 (line 9) L[0]=RBP L[1]=#NULL L[2]=rsp + #0 L[3]=rsp + #4 L[4]=_ L[5]=_
        # OopMap {rbp=Oop off=880/0x370}
370     stop	# ShouldNotReachHere

--------------------------------------------------------------------------------
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     626  229 %           storem::workload @ 2 (64 bytes)
 total in heap  [0x00007fe8a4c07690,0x00007fe8a4c080d8] = 2632
 relocation     [0x00007fe8a4c07808,0x00007fe8a4c07878] = 112
 main code      [0x00007fe8a4c07880,0x00007fe8a4c07c20] = 928
 stub code      [0x00007fe8a4c07c20,0x00007fe8a4c07c38] = 24
 oops           [0x00007fe8a4c07c38,0x00007fe8a4c07c58] = 32
 metadata       [0x00007fe8a4c07c58,0x00007fe8a4c07d18] = 192
 scopes data    [0x00007fe8a4c07d18,0x00007fe8a4c07e88] = 368
 scopes pcs     [0x00007fe8a4c07e88,0x00007fe8a4c080a8] = 544
 dependencies   [0x00007fe8a4c080a8,0x00007fe8a4c080c0] = 24
 nul chk table  [0x00007fe8a4c080c0,0x00007fe8a4c080d8] = 24

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x00007fe838510e08} 'workload' '([B[BI)B' in 'storem'
 ;; N266: #	out( B1 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x00007fe8a4c07880:   callq  0x00007fe8a94aa4b0           ;   {runtime_call os::breakpoint()}
  0x00007fe8a4c07885:   nop
  0x00007fe8a4c07886:   nop
  0x00007fe8a4c07887:   nop
  0x00007fe8a4c07888:   nop
  0x00007fe8a4c07889:   nop
  0x00007fe8a4c0788a:   nop
  0x00007fe8a4c0788b:   nop
  0x00007fe8a4c0788c:   nop
  0x00007fe8a4c0788d:   nop
  0x00007fe8a4c0788e:   nop
  0x00007fe8a4c0788f:   nop
 ;; B1: #	out( B17 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x00007fe8a4c07890:   mov    %eax,-0x18000(%rsp)
  0x00007fe8a4c07897:   push   %rbp
  0x00007fe8a4c07898:   sub    $0x90,%rsp
  0x00007fe8a4c0789f:   mov    0x28(%rsi),%rbp
  0x00007fe8a4c078a3:   mov    0x20(%rsi),%r14
  0x00007fe8a4c078a7:   mov    0x10(%rsi),%ebx
  0x00007fe8a4c078aa:   mov    0x18(%rsi),%r13d             ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - storem::workload@2 (line 9)
  0x00007fe8a4c078ae:   mov    %rsi,%rdi
  0x00007fe8a4c078b1:   nop
  0x00007fe8a4c078b2:   nop
  0x00007fe8a4c078b3:   nop
  0x00007fe8a4c078b4:   nop
  0x00007fe8a4c078b5:   nop
  0x00007fe8a4c078b6:   nop
  0x00007fe8a4c078b7:   nop
  0x00007fe8a4c078b8:   nop
  0x00007fe8a4c078b9:   nop
  0x00007fe8a4c078ba:   nop
  0x00007fe8a4c078bb:   nop
  0x00007fe8a4c078bc:   nop
  0x00007fe8a4c078bd:   nop
  0x00007fe8a4c078be:   nop
  0x00007fe8a4c078bf:   nop
  0x00007fe8a4c078c0:   vzeroupper 
  0x00007fe8a4c078c3:   movabs $0x7fe8a9632d80,%r10
  0x00007fe8a4c078cd:   callq  *%r10
  0x00007fe8a4c078d0:   test   %rbp,%rbp                    ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
                                                            ; - jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
                                                            ; - storem::workload@43 (line 13)
  0x00007fe8a4c078d3:   je     0x00007fe8a4c07b04
 ;; B2: #	out( B20 B3 ) <- in( B1 )  Freq: 0.999
  0x00007fe8a4c078d9:   mov    0x8(%rbp),%r10d
  0x00007fe8a4c078dd:   nop
  0x00007fe8a4c078de:   nop
  0x00007fe8a4c078df:   nop
  0x00007fe8a4c078e0:   cmp    $0x409d8,%r10d               ;   {metadata({type array byte})}
  0x00007fe8a4c078e7:   jne    0x00007fe8a4c07b74
 ;; B3: #	out( B4 ) <- in( B2 )  Freq: 0.998999
  0x00007fe8a4c078ed:   mov    %rbp,%r11
 ;; B4: #	out( B22 B5 ) <- in( B3 B17 )  Freq: 0.999999
  0x00007fe8a4c078f0:   mov    0x8(%r14),%r10d              ; implicit exception: dispatches to 0x00007fe8a4c07bd8
 ;; B5: #	out( B20 B6 ) <- in( B4 )  Freq: 0.999998
  0x00007fe8a4c078f4:   nop
  0x00007fe8a4c078f5:   nop
  0x00007fe8a4c078f6:   nop
  0x00007fe8a4c078f7:   nop
  0x00007fe8a4c078f8:   nop
  0x00007fe8a4c078f9:   nop
  0x00007fe8a4c078fa:   nop
  0x00007fe8a4c078fb:   nop
  0x00007fe8a4c078fc:   nop
  0x00007fe8a4c078fd:   nop
  0x00007fe8a4c078fe:   nop
  0x00007fe8a4c078ff:   nop
  0x00007fe8a4c07900:   cmp    $0x409d8,%r10d               ;   {metadata({type array byte})}
  0x00007fe8a4c07907:   jne    0x00007fe8a4c07b74           ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - storem::workload@2 (line 9)
 ;; B6: #	out( B21 B7 ) <- in( B5 )  Freq: 0.999997
  0x00007fe8a4c0790d:   mov    0xc(%r14),%r8d               ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - storem::workload@7 (line 9)
  0x00007fe8a4c07911:   mov    %r8d,%r10d
  0x00007fe8a4c07914:   add    $0xffffffe1,%r10d
  0x00007fe8a4c07918:   test   %r10d,%r10d
  0x00007fe8a4c0791b:   nop
  0x00007fe8a4c0791c:   nop
  0x00007fe8a4c0791d:   nop
  0x00007fe8a4c0791e:   nop
  0x00007fe8a4c0791f:   nop
  0x00007fe8a4c07920:   jl     0x00007fe8a4c07ba4
 ;; B7: #	out( B21 B8 ) <- in( B6 )  Freq: 0.999996
  0x00007fe8a4c07926:   mov    $0x7fff,%r9d
  0x00007fe8a4c0792c:   vpcmpeqb %ymm1,%ymm1,%ymm1
  0x00007fe8a4c07930:   movabs $0x101010101010101,%rcx
  0x00007fe8a4c0793a:   pdep   %rcx,%r9,%rcx
  0x00007fe8a4c0793f:   mov    %r9,%rdi
  0x00007fe8a4c07942:   vpxor  %ymm2,%ymm2,%ymm2
  0x00007fe8a4c07946:   vmovq  %rcx,%xmm2
  0x00007fe8a4c0794b:   vmovq  %rcx,%xmm4
  0x00007fe8a4c07950:   movabs $0x101010101010101,%rcx
  0x00007fe8a4c0795a:   shr    $0x8,%rdi
  0x00007fe8a4c0795e:   pdep   %rcx,%rdi,%rcx
  0x00007fe8a4c07963:   vpinsrq $0x1,%rcx,%xmm2,%xmm2
  0x00007fe8a4c07969:   vmovdqu %ymm2,%ymm4
  0x00007fe8a4c0796d:   vpxor  %xmm2,%xmm2,%xmm2
  0x00007fe8a4c07971:   movabs $0x101010101010101,%rcx
  0x00007fe8a4c0797b:   shr    $0x8,%rdi
  0x00007fe8a4c0797f:   pdep   %rcx,%rdi,%rcx
  0x00007fe8a4c07984:   vpinsrq $0x0,%rcx,%xmm2,%xmm2
  0x00007fe8a4c0798a:   movabs $0x101010101010101,%rcx
  0x00007fe8a4c07994:   shr    $0x8,%rdi
  0x00007fe8a4c07998:   pdep   %rcx,%rdi,%rcx
  0x00007fe8a4c0799d:   vpinsrq $0x1,%rcx,%xmm2,%xmm2
  0x00007fe8a4c079a3:   vinsertf128 $0x1,%xmm2,%ymm4,%ymm4  ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
                                                            ; - jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
                                                            ; - storem::workload@43 (line 13)
  0x00007fe8a4c079a9:   vpxor  %ymm0,%ymm0,%ymm0
  0x00007fe8a4c079ad:   vpsubb %ymm4,%ymm0,%ymm0            ;*invokestatic fromBitsCoerced {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.VectorMask::fromLong@39 (line 242)
                                                            ; - storem::workload@22 (line 10)
  0x00007fe8a4c079b1:   vptest %ymm1,%ymm0
  0x00007fe8a4c079b6:   setb   %cl
  0x00007fe8a4c079b9:   movzbl %cl,%ecx
  0x00007fe8a4c079bc:   nop
  0x00007fe8a4c079bd:   nop
  0x00007fe8a4c079be:   nop
  0x00007fe8a4c079bf:   nop
  0x00007fe8a4c079c0:   test   %ecx,%ecx
  0x00007fe8a4c079c2:   jne    0x00007fe8a4c07ba4
 ;; B8: #	out( B21 B9 ) <- in( B7 )  Freq: 0.999995
  0x00007fe8a4c079c8:   mov    0xc(%r11),%r9d               ; implicit exception: dispatches to 0x00007fe8a4c07ba4
 ;; B9: #	out( B11 ) <- in( B8 )  Freq: 0.999994
  0x00007fe8a4c079cc:   movslq %r9d,%rcx
  0x00007fe8a4c079cf:   and    $0xffffffe0,%r8d             ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
                                                            ; - jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
                                                            ; - storem::workload@43 (line 13)
  0x00007fe8a4c079d3:   add    $0xffffffffffffffe0,%rcx     ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - storem::workload@57 (line 9)
  0x00007fe8a4c079d7:   jmpq   0x00007fe8a4c07a5b
  0x00007fe8a4c079dc:   nop
  0x00007fe8a4c079dd:   nop
  0x00007fe8a4c079de:   nop
  0x00007fe8a4c079df:   nop
 ;; B10: #	out( B11 ) <- in( B13 ) top-of-loop Freq: 31.9745
  0x00007fe8a4c079e0:   vmovd  %r10d,%xmm1
  0x00007fe8a4c079e5:   mov    %r11,%rdx
  0x00007fe8a4c079e8:   mov    0x3d0(%r15),%rax             ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
                                                            ; - jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
                                                            ; - storem::workload@43 (line 13)
  0x00007fe8a4c079ef:   add    $0x20,%ebx
  0x00007fe8a4c079f2:   vpabsb %ymm0,%ymm3
  0x00007fe8a4c079f7:   vpxor  %ymm2,%ymm2,%ymm2
  0x00007fe8a4c079fb:   vpsubb %ymm3,%ymm2,%ymm3
  0x00007fe8a4c079ff:   vpmovmskb %ymm3,%ebp
  0x00007fe8a4c07a03:   cmp    $0x0,%ebp
  0x00007fe8a4c07a06:   je     0x00007fe8a4c07a51
  0x00007fe8a4c07a0c:   bsf    %rbp,%r10
  0x00007fe8a4c07a10:   mov    %r10,%rsi
  0x00007fe8a4c07a13:   shr    $0x2,%rsi
  0x00007fe8a4c07a17:   vmovd  %esi,%xmm2
  0x00007fe8a4c07a1b:   vpbroadcastd %xmm2,%ymm2
  0x00007fe8a4c07a20:   vpermd %ymm5,%ymm2,%ymm2
  0x00007fe8a4c07a25:   vmovd  %xmm2,%r11d
  0x00007fe8a4c07a2a:   mov    %r10,%rsi
  0x00007fe8a4c07a2d:   and    $0x3,%r10d
  0x00007fe8a4c07a31:   shl    $0x3,%r10d
  0x00007fe8a4c07a35:   shrx   %r10d,%r11d,%r11d
  0x00007fe8a4c07a3a:   and    $0xff,%r11d
  0x00007fe8a4c07a41:   lea    0x10(%rdx,%rdi,1),%r10
  0x00007fe8a4c07a46:   mov    %r11b,(%r10,%rsi,1)
  0x00007fe8a4c07a4a:   blsr   %rbp,%rbp
  0x00007fe8a4c07a4f:   jne    0x00007fe8a4c07a03           ; ImmutableOopMap {rdx=Oop r14=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) storem::workload@57 (line 9)
  0x00007fe8a4c07a51:   test   %eax,(%rax)                  ;   {poll}
  0x00007fe8a4c07a53:   mov    %rdx,%r11
  0x00007fe8a4c07a56:   vmovd  %xmm1,%r10d
 ;; B11: #	out( B15 B12 ) <- in( B9 B10 ) Loop( B11-B10 inner ) Freq: 32.9745
  0x00007fe8a4c07a5b:   nop
  0x00007fe8a4c07a5c:   nop
  0x00007fe8a4c07a5d:   nop
  0x00007fe8a4c07a5e:   nop
  0x00007fe8a4c07a5f:   nop
  0x00007fe8a4c07a60:   cmp    %r8d,%ebx                    ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
                                                            ; - jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
                                                            ; - storem::workload@43 (line 13)
  0x00007fe8a4c07a63:   jge    0x00007fe8a4c07adc           ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.VectorMask::fromLong@34 (line 242)
                                                            ; - storem::workload@22 (line 10)
 ;; B12: #	out( B18 B13 ) <- in( B11 )  Freq: 31.9745
  0x00007fe8a4c07a69:   cmp    %r10d,%ebx
  0x00007fe8a4c07a6c:   jae    0x00007fe8a4c07b0c           ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::checkIndex@3 (line 385)
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 57)
                                                            ; - jdk.incubator.vector.ByteVector::fromArray@9 (line 2979)
                                                            ; - storem::workload@32 (line 12)
 ;; B13: #	out( B10 B14 ) <- in( B12 )  Freq: 31.9745
  0x00007fe8a4c07a72:   movslq %ebx,%rdi                    ;*i2l {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::arrayAddress@4 (line 3974)
                                                            ; - jdk.incubator.vector.ByteVector::fromArray0Template@20 (line 3748)
                                                            ; - jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 907)
                                                            ; - jdk.incubator.vector.ByteVector::fromArray@24 (line 2981)
                                                            ; - storem::workload@32 (line 12)
  0x00007fe8a4c07a75:   vmovdqu 0x10(%r14,%rdi,1),%ymm5     ;*invokestatic load {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::fromArray0Template@32 (line 3746)
                                                            ; - jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 907)
                                                            ; - jdk.incubator.vector.ByteVector::fromArray@24 (line 2981)
                                                            ; - storem::workload@32 (line 12)
  0x00007fe8a4c07a7c:   nop
  0x00007fe8a4c07a7d:   nop
  0x00007fe8a4c07a7e:   nop
  0x00007fe8a4c07a7f:   nop
  0x00007fe8a4c07a80:   cmp    %rcx,%rdi
  0x00007fe8a4c07a83:   jle    0x00007fe8a4c079e0
 ;; B14: #	out( N266 ) <- in( B13 )  Freq: 1.52466e-05
  0x00007fe8a4c07a89:   cmp    %rcx,%rdi
  0x00007fe8a4c07a8c:   mov    $0xffffffff,%ebp
  0x00007fe8a4c07a91:   jl     0x00007fe8a4c07a9b
  0x00007fe8a4c07a93:   setne  %bpl
  0x00007fe8a4c07a97:   movzbl %bpl,%ebp
  0x00007fe8a4c07a9b:   mov    $0xffffff45,%esi
  0x00007fe8a4c07aa0:   mov    %r14,0x8(%rsp)
  0x00007fe8a4c07aa5:   mov    %r13d,0x10(%rsp)
  0x00007fe8a4c07aaa:   mov    %r11,0x18(%rsp)
  0x00007fe8a4c07aaf:   mov    %ebx,0x20(%rsp)
  0x00007fe8a4c07ab3:   vmovdqu %ymm5,0x40(%rsp)
  0x00007fe8a4c07ab9:   vmovdqu %ymm4,0x60(%rsp)            ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
                                                            ; - jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
                                                            ; - storem::workload@43 (line 13)
  0x00007fe8a4c07abf:   nop
  0x00007fe8a4c07ac0:   vzeroupper 
  0x00007fe8a4c07ac3:   callq  0x00007fe8a4be72a0           ; ImmutableOopMap {[8]=Oop [24]=Oop }
                                                            ;*ifgt {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) jdk.incubator.vector.VectorIntrinsics::indexInRange@12 (line 49)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@33 (line 3424)
                                                            ; - storem::workload@43 (line 13)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fe8a4c07ac8:   movabs $0x7fe8a9bf5108,%rdi         ;   {external_word}
  0x00007fe8a4c07ad2:   and    $0xfffffffffffffff0,%rsp
  0x00007fe8a4c07ad6:   callq  0x00007fe8a925c010           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fe8a4c07adb:   hlt    
 ;; B15: #	out( B19 B16 ) <- in( B11 )  Freq: 0.999946
  0x00007fe8a4c07adc:   nop
  0x00007fe8a4c07add:   nop
  0x00007fe8a4c07ade:   nop
  0x00007fe8a4c07adf:   nop
  0x00007fe8a4c07ae0:   cmp    %r9d,%r13d
  0x00007fe8a4c07ae3:   jae    0x00007fe8a4c07b4c           ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
                                                            ; - jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
                                                            ; - storem::workload@43 (line 13)
 ;; B16: #	out( N266 ) <- in( B15 )  Freq: 0.999945
  0x00007fe8a4c07ae5:   movsbl 0x10(%r11,%r13,1),%eax       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - storem::workload@62 (line 15)
  0x00007fe8a4c07aeb:   vzeroupper 
  0x00007fe8a4c07aee:   add    $0x90,%rsp
  0x00007fe8a4c07af5:   pop    %rbp
  0x00007fe8a4c07af6:   cmp    0x3c8(%r15),%rsp             ;   {poll_return}
  0x00007fe8a4c07afd:   ja     0x00007fe8a4c07c04
  0x00007fe8a4c07b03:   retq   
 ;; B17: #	out( B4 ) <- in( B1 )  Freq: 0.000999987
  0x00007fe8a4c07b04:   xor    %r11d,%r11d
  0x00007fe8a4c07b07:   jmpq   0x00007fe8a4c078f0
 ;; B18: #	out( N266 ) <- in( B12 )  Freq: 3.23991e-05
  0x00007fe8a4c07b0c:   mov    $0xffffffe4,%esi
  0x00007fe8a4c07b11:   mov    %r11,%rbp
  0x00007fe8a4c07b14:   mov    %r13d,0x8(%rsp)
  0x00007fe8a4c07b19:   mov    %r14,0x10(%rsp)
  0x00007fe8a4c07b1e:   mov    %ebx,0x18(%rsp)
  0x00007fe8a4c07b22:   mov    %r10d,0x1c(%rsp)
  0x00007fe8a4c07b27:   vmovdqu %ymm4,0x20(%rsp)            ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
                                                            ; - jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
                                                            ; - storem::workload@43 (line 13)
  0x00007fe8a4c07b2d:   nop
  0x00007fe8a4c07b2e:   nop
  0x00007fe8a4c07b2f:   nop
  0x00007fe8a4c07b30:   vzeroupper 
  0x00007fe8a4c07b33:   callq  0x00007fe8a4be72a0           ; ImmutableOopMap {rbp=Oop [16]=Oop }
                                                            ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::checkIndex@3 (line 385)
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 57)
                                                            ; - jdk.incubator.vector.ByteVector::fromArray@9 (line 2979)
                                                            ; - storem::workload@32 (line 12)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fe8a4c07b38:   movabs $0x7fe8a9bf5108,%rdi         ;   {external_word}
  0x00007fe8a4c07b42:   and    $0xfffffffffffffff0,%rsp
  0x00007fe8a4c07b46:   callq  0x00007fe8a925c010           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fe8a4c07b4b:   hlt                                 ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - storem::workload@62 (line 15)
 ;; B19: #	out( N266 ) <- in( B15 )  Freq: 1.01322e-06
  0x00007fe8a4c07b4c:   mov    $0xffffffe4,%esi
  0x00007fe8a4c07b51:   mov    %r11,%rbp
  0x00007fe8a4c07b54:   mov    %r13d,(%rsp)
  0x00007fe8a4c07b58:   vzeroupper 
  0x00007fe8a4c07b5b:   callq  0x00007fe8a4be72a0           ; ImmutableOopMap {rbp=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - storem::workload@62 (line 15)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fe8a4c07b60:   movabs $0x7fe8a9bf5108,%rdi         ;   {external_word}
  0x00007fe8a4c07b6a:   and    $0xfffffffffffffff0,%rsp
  0x00007fe8a4c07b6e:   callq  0x00007fe8a925c010           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fe8a4c07b73:   hlt                                 ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - storem::workload@2 (line 9)
 ;; B20: #	out( N266 ) <- in( B2 B5 )  Freq: 1.999e-06
  0x00007fe8a4c07b74:   mov    $0xffffff8d,%esi
  0x00007fe8a4c07b79:   mov    %r14,(%rsp)
  0x00007fe8a4c07b7d:   mov    %r13d,0x8(%rsp)
  0x00007fe8a4c07b82:   mov    %ebx,0xc(%rsp)               ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
                                                            ; - jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
                                                            ; - storem::workload@43 (line 13)
  0x00007fe8a4c07b86:   nop
  0x00007fe8a4c07b87:   nop
  0x00007fe8a4c07b88:   vzeroupper 
  0x00007fe8a4c07b8b:   callq  0x00007fe8a4be72a0           ; ImmutableOopMap {rbp=Oop [0]=Oop }
                                                            ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - storem::workload@2 (line 9)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fe8a4c07b90:   movabs $0x7fe8a9bf5108,%rdi         ;   {external_word}
  0x00007fe8a4c07b9a:   and    $0xfffffffffffffff0,%rsp
  0x00007fe8a4c07b9e:   callq  0x00007fe8a925c010           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fe8a4c07ba3:   hlt                                 ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - storem::workload@2 (line 9)
 ;; B21: #	out( N266 ) <- in( B8 B6 B7 )  Freq: 3.01327e-06
  0x00007fe8a4c07ba4:   mov    $0xffffffbe,%esi
  0x00007fe8a4c07ba9:   mov    %r11,%rbp
  0x00007fe8a4c07bac:   mov    %r14,(%rsp)
  0x00007fe8a4c07bb0:   mov    %r13d,0x8(%rsp)
  0x00007fe8a4c07bb5:   mov    %ebx,0xc(%rsp)               ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
                                                            ; - jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
                                                            ; - storem::workload@43 (line 13)
  0x00007fe8a4c07bb9:   nop
  0x00007fe8a4c07bba:   nop
  0x00007fe8a4c07bbb:   nop
  0x00007fe8a4c07bbc:   vzeroupper 
  0x00007fe8a4c07bbf:   callq  0x00007fe8a4be72a0           ; ImmutableOopMap {rbp=Oop [0]=Oop }
                                                            ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - storem::workload@2 (line 9)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fe8a4c07bc4:   movabs $0x7fe8a9bf5108,%rdi         ;   {external_word}
  0x00007fe8a4c07bce:   and    $0xfffffffffffffff0,%rsp
  0x00007fe8a4c07bd2:   callq  0x00007fe8a925c010           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fe8a4c07bd7:   hlt                                 ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - storem::workload@2 (line 9)
 ;; B22: #	out( N266 ) <- in( B4 )  Freq: 1.01328e-06
  0x00007fe8a4c07bd8:   mov    $0xffffff76,%esi
  0x00007fe8a4c07bdd:   mov    %r11,%rbp
  0x00007fe8a4c07be0:   mov    %r13d,(%rsp)
  0x00007fe8a4c07be4:   mov    %ebx,0x4(%rsp)
  0x00007fe8a4c07be8:   vzeroupper 
  0x00007fe8a4c07beb:   callq  0x00007fe8a4be72a0           ; ImmutableOopMap {rbp=Oop }
                                                            ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - storem::workload@2 (line 9)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fe8a4c07bf0:   movabs $0x7fe8a9bf5108,%rdi         ;   {external_word}
  0x00007fe8a4c07bfa:   and    $0xfffffffffffffff0,%rsp
  0x00007fe8a4c07bfe:   callq  0x00007fe8a925c010           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fe8a4c07c03:   hlt                                 ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
                                                            ; - jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
                                                            ; - storem::workload@43 (line 13)
  0x00007fe8a4c07c04:   movabs $0x7fe8a4c07af6,%r10         ;   {internal_word}
  0x00007fe8a4c07c0e:   mov    %r10,0x3e0(%r15)
  0x00007fe8a4c07c15:   jmpq   0x00007fe8a4be6420           ;   {runtime_call SafepointBlob}
  0x00007fe8a4c07c1a:   hlt    
  0x00007fe8a4c07c1b:   hlt    
  0x00007fe8a4c07c1c:   hlt    
  0x00007fe8a4c07c1d:   hlt    
  0x00007fe8a4c07c1e:   hlt    
  0x00007fe8a4c07c1f:   hlt    
[Exception Handler]
  0x00007fe8a4c07c20:   jmpq   0x00007fe8a4b49ea0           ;   {no_reloc}
[Deopt Handler Code]
  0x00007fe8a4c07c25:   callq  0x00007fe8a4c07c2a
  0x00007fe8a4c07c2a:   subq   $0x5,(%rsp)
  0x00007fe8a4c07c2f:   jmpq   0x00007fe8a4be52e0           ;   {runtime_call DeoptimizationBlob}
  0x00007fe8a4c07c34:   hlt    
  0x00007fe8a4c07c35:   hlt    
  0x00007fe8a4c07c36:   hlt    
  0x00007fe8a4c07c37:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Oops:
  0x00007fe8a4c07c38:   0x000000011f97c880 a 'java/lang/Class'{0x000000011f97c880} = 'jdk/incubator/vector/Byte256Vector'
  0x00007fe8a4c07c40:   0x000000011f97c910 a 'java/lang/Class'{0x000000011f97c910} = 'jdk/incubator/vector/Byte256Vector$Byte256Mask'
  0x00007fe8a4c07c48:   0x000000011f97c838 a 'jdk/incubator/vector/ByteVector$ByteSpecies'{0x000000011f97c838}
  0x00007fe8a4c07c50:   0x000000011f8a3948 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x000000011f8a3948}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Metadata:
  0x00007fe8a4c07c58:   0x00007fe838510e08 {method} {0x00007fe838510e08} 'workload' '([B[BI)B' in 'storem'
  0x00007fe8a4c07c60:   0x00007fe8386332f0 {method} {0x00007fe8386332f0} 'intoArray' '([BILjdk/incubator/vector/VectorMask;)V' in 'jdk/incubator/vector/ByteVector'
  0x00007fe8a4c07c68:   0x00007fe8386ad8c8 {method} {0x00007fe8386ad8c8} 'intoArray0' '([BILjdk/incubator/vector/VectorMask;)V' in 'jdk/incubator/vector/Byte256Vector'
  0x00007fe8a4c07c70:   0x00007fe838634c10 {method} {0x00007fe838634c10} 'intoArray0Template' '(Ljava/lang/Class;[BILjdk/incubator/vector/VectorMask;)V' in 'jdk/incubator/vector/ByteVector'
  0x00007fe8a4c07c78:   0x00000008000409d8 {type array byte}
  0x00007fe8a4c07c80:   0x00007fe838692b58 {method} {0x00007fe838692b58} 'fromLong' '(Ljdk/incubator/vector/VectorSpecies;J)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/VectorMask'
  0x00007fe8a4c07c88:   0x00007fe838632568 {method} {0x00007fe838632568} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[BI)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector'
  0x00007fe8a4c07c90:   0x00007fe8386da850 {method} {0x00007fe8386da850} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
  0x00007fe8a4c07c98:   0x00007fe83818ea98 {method} {0x00007fe83818ea98} 'checkIndex' '(II)I' in 'java/util/Objects'
  0x00007fe8a4c07ca0:   0x00007fe8386ad190 {method} {0x00007fe8386ad190} 'fromArray0' '([BI)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/Byte256Vector'
  0x00007fe8a4c07ca8:   0x00007fe838633e78 {method} {0x00007fe838633e78} 'fromArray0Template' '([BI)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector'
  0x00007fe8a4c07cb0:   0x00007fe8386356b8 {method} {0x00007fe8386356b8} 'arrayAddress' '([BI)J' in 'jdk/incubator/vector/ByteVector'
  0x00007fe8a4c07cb8:   0x00007fe8386da728 {method} {0x00007fe8386da728} 'indexInRange' '(JJJ)Z' in 'jdk/incubator/vector/VectorIntrinsics'
  0x00007fe8a4c07cc0:   0x0000000800094a08 'jdk/incubator/vector/AbstractSpecies'
  0x00007fe8a4c07cc8:   0x0000000800094df0 'jdk/incubator/vector/ByteVector$ByteSpecies'
  0x00007fe8a4c07cd0:   0x00007fe838674f28 {method} {0x00007fe838674f28} 'loopBound' '(I)I' in 'jdk/incubator/vector/AbstractSpecies'
  0x00007fe8a4c07cd8:   0x0000000800094600 'jdk/incubator/vector/VectorSpecies'
  0x00007fe8a4c07ce0:   0x00007fe838672ac0 {method} {0x00007fe838672ac0} 'loopBound' '(I)I' in 'jdk/incubator/vector/VectorSpecies'
  0x00007fe8a4c07ce8:   0x00007fe8386743e8 {method} {0x00007fe8386743e8} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
  0x00007fe8a4c07cf0:   0x00007fe8386728c8 {method} {0x00007fe8386728c8} 'length' '()I' in 'jdk/incubator/vector/VectorSpecies'
  0x00007fe8a4c07cf8:   0x0000000800098a40 'jdk/incubator/vector/Byte256Vector$Byte256Mask'
  0x00007fe8a4c07d00:   0x00007fe8386901c8 {method} {0x00007fe8386901c8} 'check' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/AbstractMask'
  0x00007fe8a4c07d08:   0x0000000800096cc0 'jdk/incubator/vector/VectorMask'
  0x00007fe8a4c07d10:   0x00007fe8386938e0 {method} {0x00007fe8386938e0} 'check' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/VectorMask'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
pc-bytecode offsets:
PcDesc(pc=0x00007fe8a4c0787f offset=ffffffff bits=0):
PcDesc(pc=0x00007fe8a4c078ae offset=2e bits=0):
   storem::workload@2 (line 9)
PcDesc(pc=0x00007fe8a4c078d3 offset=53 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
   storem::workload@43 (line 13)
PcDesc(pc=0x00007fe8a4c0790d offset=8d bits=0):
   storem::workload@2 (line 9)
PcDesc(pc=0x00007fe8a4c07911 offset=91 bits=0):
   storem::workload@7 (line 9)
PcDesc(pc=0x00007fe8a4c079a9 offset=129 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
   storem::workload@43 (line 13)
PcDesc(pc=0x00007fe8a4c079b1 offset=131 bits=0):
   jdk.incubator.vector.VectorMask::fromLong@39 (line 242)
   storem::workload@22 (line 10)
PcDesc(pc=0x00007fe8a4c079d3 offset=153 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
   storem::workload@43 (line 13)
PcDesc(pc=0x00007fe8a4c079d7 offset=157 bits=0):
   storem::workload@57 (line 9)
PcDesc(pc=0x00007fe8a4c079ef offset=16f bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
   storem::workload@43 (line 13)
PcDesc(pc=0x00007fe8a4c07a51 offset=1d1 bits=1):
   storem::workload@57 (line 9)  reexecute=true
   Locals
    - l0: reg rdx [4],oop
    - l1: reg r14 [28],oop
    - l2: reg r13 [26],int
    - l3: reg rbx [6],int
    - l4: empty
    - l5: empty
PcDesc(pc=0x00007fe8a4c07a63 offset=1e3 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
   storem::workload@43 (line 13)
PcDesc(pc=0x00007fe8a4c07a69 offset=1e9 bits=0):
   jdk.incubator.vector.VectorMask::fromLong@34 (line 242)
   storem::workload@22 (line 10)
PcDesc(pc=0x00007fe8a4c07a72 offset=1f2 bits=0):
   java.util.Objects::checkIndex@3 (line 385)
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 57)
   jdk.incubator.vector.ByteVector::fromArray@9 (line 2979)
   storem::workload@32 (line 12)
PcDesc(pc=0x00007fe8a4c07a75 offset=1f5 bits=0):
   jdk.incubator.vector.ByteVector::arrayAddress@4 (line 3974)
   jdk.incubator.vector.ByteVector::fromArray0Template@20 (line 3748)
   jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 907)
   jdk.incubator.vector.ByteVector::fromArray@24 (line 2981)
   storem::workload@32 (line 12)
PcDesc(pc=0x00007fe8a4c07a7c offset=1fc bits=0):
   jdk.incubator.vector.ByteVector::fromArray0Template@32 (line 3746)
   jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 907)
   jdk.incubator.vector.ByteVector::fromArray@24 (line 2981)
   storem::workload@32 (line 12)
PcDesc(pc=0x00007fe8a4c07abf offset=23f bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
   storem::workload@43 (line 13)
PcDesc(pc=0x00007fe8a4c07ac8 offset=248 bits=1):
   jdk.incubator.vector.VectorIntrinsics::indexInRange@12 (line 49)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
   Expression stack
    - @0: reg rbp [10],int
   jdk.incubator.vector.ByteVector::intoArray@33 (line 3424)
   Locals
    - l0: obj[148]
    - l1: stack[24],oop
    - l2: stack[32]
    - l3: obj[149]
    - l4: a 'jdk/incubator/vector/ByteVector$ByteSpecies'{0x000000011f97c838}
   storem::workload@43 (line 13)
   Locals
    - l0: stack[24],oop
    - l1: stack[8],oop
    - l2: stack[16]
    - l3: stack[32]
    - l4: empty
    - l5: empty
   Objects
    - 148: jdk.incubator.vector.Byte256Vector stack[64],vector
    - 149: jdk.incubator.vector.Byte256Vector$Byte256Mask stack[96],vector
PcDesc(pc=0x00007fe8a4c07ae5 offset=265 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
   storem::workload@43 (line 13)
PcDesc(pc=0x00007fe8a4c07aeb offset=26b bits=0):
   storem::workload@62 (line 15)
PcDesc(pc=0x00007fe8a4c07b2d offset=2ad bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
   storem::workload@43 (line 13)
PcDesc(pc=0x00007fe8a4c07b38 offset=2b8 bits=0):
   java.util.Objects::checkIndex@3 (line 385)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[24]
    - @1: stack[28]
    - @2: NULL
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 57)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.ByteVector::fromArray@9 (line 2979)
   Locals
    - l0: a 'jdk/incubator/vector/ByteVector$ByteSpecies'{0x000000011f97c838}
    - l1: stack[16],oop
    - l2: empty
    - l3: empty
   storem::workload@32 (line 12)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[16],oop
    - l2: stack[8]
    - l3: stack[24]
    - l4: obj[160]
    - l5: empty
   Objects
    - 160: jdk.incubator.vector.Byte256Vector$Byte256Mask stack[32],vector
PcDesc(pc=0x00007fe8a4c07b4c offset=2cc bits=0):
   storem::workload@62 (line 15)
PcDesc(pc=0x00007fe8a4c07b60 offset=2e0 bits=0):
   storem::workload@62 (line 15)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
   Expression stack
    - @0: reg rbp [10],oop
    - @1: stack[0]
PcDesc(pc=0x00007fe8a4c07b74 offset=2f4 bits=0):
   storem::workload@2 (line 9)
PcDesc(pc=0x00007fe8a4c07b86 offset=306 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
   storem::workload@43 (line 13)
PcDesc(pc=0x00007fe8a4c07b90 offset=310 bits=0):
   storem::workload@2 (line 9)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8]
    - l3: stack[12]
    - l4: empty
    - l5: empty
PcDesc(pc=0x00007fe8a4c07ba4 offset=324 bits=0):
   storem::workload@2 (line 9)
PcDesc(pc=0x00007fe8a4c07bb9 offset=339 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
   storem::workload@43 (line 13)
PcDesc(pc=0x00007fe8a4c07bc4 offset=344 bits=0):
   storem::workload@2 (line 9)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8]
    - l3: stack[12]
    - l4: empty
    - l5: empty
PcDesc(pc=0x00007fe8a4c07bd8 offset=358 bits=0):
   storem::workload@2 (line 9)
PcDesc(pc=0x00007fe8a4c07bf0 offset=370 bits=0):
   storem::workload@2 (line 9)
   Locals
    - l0: reg rbp [10],oop
    - l1: NULL
    - l2: stack[0]
    - l3: stack[4]
    - l4: empty
    - l5: empty
PcDesc(pc=0x00007fe8a4c07c04 offset=384 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
   storem::workload@43 (line 13)
PcDesc(pc=0x00007fe8a4c07c39 offset=3b9 bits=0):
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
oop maps:ImmutableOopMapSet contains 7 OopMaps

ImmutableOopMap {rdx=Oop r14=Oop } pc offsets: 465 
ImmutableOopMap {[8]=Oop [24]=Oop } pc offsets: 584 
ImmutableOopMap {rbp=Oop [16]=Oop } pc offsets: 696 
ImmutableOopMap {rbp=Oop } pc offsets: 736 
ImmutableOopMap {rbp=Oop [0]=Oop } pc offsets: 784 836 
ImmutableOopMap {rbp=Oop } pc offsets: 880 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
scopes:
ScopeDesc(pc=0x00007fe8a4c078ae offset=2e):
   storem::workload@2 (line 9)
ScopeDesc(pc=0x00007fe8a4c078d3 offset=53):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
ScopeDesc(pc=0x00007fe8a4c078d3 offset=53):
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
ScopeDesc(pc=0x00007fe8a4c078d3 offset=53):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
ScopeDesc(pc=0x00007fe8a4c078d3 offset=53):
   storem::workload@43 (line 13)
ScopeDesc(pc=0x00007fe8a4c0790d offset=8d):
   storem::workload@2 (line 9)
ScopeDesc(pc=0x00007fe8a4c07911 offset=91):
   storem::workload@7 (line 9)
ScopeDesc(pc=0x00007fe8a4c079a9 offset=129):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
ScopeDesc(pc=0x00007fe8a4c079a9 offset=129):
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
ScopeDesc(pc=0x00007fe8a4c079a9 offset=129):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
ScopeDesc(pc=0x00007fe8a4c079a9 offset=129):
   storem::workload@43 (line 13)
ScopeDesc(pc=0x00007fe8a4c079b1 offset=131):
   jdk.incubator.vector.VectorMask::fromLong@39 (line 242)
ScopeDesc(pc=0x00007fe8a4c079b1 offset=131):
   storem::workload@22 (line 10)
ScopeDesc(pc=0x00007fe8a4c079d3 offset=153):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
ScopeDesc(pc=0x00007fe8a4c079d3 offset=153):
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
ScopeDesc(pc=0x00007fe8a4c079d3 offset=153):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
ScopeDesc(pc=0x00007fe8a4c079d3 offset=153):
   storem::workload@43 (line 13)
ScopeDesc(pc=0x00007fe8a4c079d7 offset=157):
   storem::workload@57 (line 9)
ScopeDesc(pc=0x00007fe8a4c079ef offset=16f):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
ScopeDesc(pc=0x00007fe8a4c079ef offset=16f):
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
ScopeDesc(pc=0x00007fe8a4c079ef offset=16f):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
ScopeDesc(pc=0x00007fe8a4c079ef offset=16f):
   storem::workload@43 (line 13)
ScopeDesc(pc=0x00007fe8a4c07a51 offset=1d1):
   storem::workload@57 (line 9)  reexecute=true
   Locals
    - l0: reg rdx [4],oop
    - l1: reg r14 [28],oop
    - l2: reg r13 [26],int
    - l3: reg rbx [6],int
    - l4: empty
    - l5: empty
ScopeDesc(pc=0x00007fe8a4c07a63 offset=1e3):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
ScopeDesc(pc=0x00007fe8a4c07a63 offset=1e3):
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
ScopeDesc(pc=0x00007fe8a4c07a63 offset=1e3):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
ScopeDesc(pc=0x00007fe8a4c07a63 offset=1e3):
   storem::workload@43 (line 13)
ScopeDesc(pc=0x00007fe8a4c07a69 offset=1e9):
   jdk.incubator.vector.VectorMask::fromLong@34 (line 242)
ScopeDesc(pc=0x00007fe8a4c07a69 offset=1e9):
   storem::workload@22 (line 10)
ScopeDesc(pc=0x00007fe8a4c07a72 offset=1f2):
   java.util.Objects::checkIndex@3 (line 385)
ScopeDesc(pc=0x00007fe8a4c07a72 offset=1f2):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 57)
ScopeDesc(pc=0x00007fe8a4c07a72 offset=1f2):
   jdk.incubator.vector.ByteVector::fromArray@9 (line 2979)
ScopeDesc(pc=0x00007fe8a4c07a72 offset=1f2):
   storem::workload@32 (line 12)
ScopeDesc(pc=0x00007fe8a4c07a75 offset=1f5):
   jdk.incubator.vector.ByteVector::arrayAddress@4 (line 3974)
ScopeDesc(pc=0x00007fe8a4c07a75 offset=1f5):
   jdk.incubator.vector.ByteVector::fromArray0Template@20 (line 3748)
ScopeDesc(pc=0x00007fe8a4c07a75 offset=1f5):
   jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 907)
ScopeDesc(pc=0x00007fe8a4c07a75 offset=1f5):
   jdk.incubator.vector.ByteVector::fromArray@24 (line 2981)
ScopeDesc(pc=0x00007fe8a4c07a75 offset=1f5):
   storem::workload@32 (line 12)
ScopeDesc(pc=0x00007fe8a4c07a7c offset=1fc):
   jdk.incubator.vector.ByteVector::fromArray0Template@32 (line 3746)
ScopeDesc(pc=0x00007fe8a4c07a7c offset=1fc):
   jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 907)
ScopeDesc(pc=0x00007fe8a4c07a7c offset=1fc):
   jdk.incubator.vector.ByteVector::fromArray@24 (line 2981)
ScopeDesc(pc=0x00007fe8a4c07a7c offset=1fc):
   storem::workload@32 (line 12)
ScopeDesc(pc=0x00007fe8a4c07abf offset=23f):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
ScopeDesc(pc=0x00007fe8a4c07abf offset=23f):
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
ScopeDesc(pc=0x00007fe8a4c07abf offset=23f):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
ScopeDesc(pc=0x00007fe8a4c07abf offset=23f):
   storem::workload@43 (line 13)
ScopeDesc(pc=0x00007fe8a4c07ac8 offset=248):
   jdk.incubator.vector.VectorIntrinsics::indexInRange@12 (line 49)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
   Expression stack
    - @0: reg rbp [10],int
ScopeDesc(pc=0x00007fe8a4c07ac8 offset=248):
   jdk.incubator.vector.ByteVector::intoArray@33 (line 3424)
   Locals
    - l0: obj[148]
    - l1: stack[24],oop
    - l2: stack[32]
    - l3: obj[149]
    - l4: a 'jdk/incubator/vector/ByteVector$ByteSpecies'{0x000000011f97c838}
ScopeDesc(pc=0x00007fe8a4c07ac8 offset=248):
   storem::workload@43 (line 13)
   Locals
    - l0: stack[24],oop
    - l1: stack[8],oop
    - l2: stack[16]
    - l3: stack[32]
    - l4: empty
    - l5: empty
   Objects
    - 148: jdk.incubator.vector.Byte256Vector stack[64],vector
    - 149: jdk.incubator.vector.Byte256Vector$Byte256Mask stack[96],vector
ScopeDesc(pc=0x00007fe8a4c07ae5 offset=265):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
ScopeDesc(pc=0x00007fe8a4c07ae5 offset=265):
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
ScopeDesc(pc=0x00007fe8a4c07ae5 offset=265):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
ScopeDesc(pc=0x00007fe8a4c07ae5 offset=265):
   storem::workload@43 (line 13)
ScopeDesc(pc=0x00007fe8a4c07aeb offset=26b):
   storem::workload@62 (line 15)
ScopeDesc(pc=0x00007fe8a4c07b2d offset=2ad):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
ScopeDesc(pc=0x00007fe8a4c07b2d offset=2ad):
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
ScopeDesc(pc=0x00007fe8a4c07b2d offset=2ad):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
ScopeDesc(pc=0x00007fe8a4c07b2d offset=2ad):
   storem::workload@43 (line 13)
ScopeDesc(pc=0x00007fe8a4c07b38 offset=2b8):
   java.util.Objects::checkIndex@3 (line 385)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[24]
    - @1: stack[28]
    - @2: NULL
ScopeDesc(pc=0x00007fe8a4c07b38 offset=2b8):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 57)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00007fe8a4c07b38 offset=2b8):
   jdk.incubator.vector.ByteVector::fromArray@9 (line 2979)
   Locals
    - l0: a 'jdk/incubator/vector/ByteVector$ByteSpecies'{0x000000011f97c838}
    - l1: stack[16],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x00007fe8a4c07b38 offset=2b8):
   storem::workload@32 (line 12)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[16],oop
    - l2: stack[8]
    - l3: stack[24]
    - l4: obj[160]
    - l5: empty
   Objects
    - 160: jdk.incubator.vector.Byte256Vector$Byte256Mask stack[32],vector
ScopeDesc(pc=0x00007fe8a4c07b4c offset=2cc):
   storem::workload@62 (line 15)
ScopeDesc(pc=0x00007fe8a4c07b60 offset=2e0):
   storem::workload@62 (line 15)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
   Expression stack
    - @0: reg rbp [10],oop
    - @1: stack[0]
ScopeDesc(pc=0x00007fe8a4c07b74 offset=2f4):
   storem::workload@2 (line 9)
ScopeDesc(pc=0x00007fe8a4c07b86 offset=306):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
ScopeDesc(pc=0x00007fe8a4c07b86 offset=306):
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
ScopeDesc(pc=0x00007fe8a4c07b86 offset=306):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
ScopeDesc(pc=0x00007fe8a4c07b86 offset=306):
   storem::workload@43 (line 13)
ScopeDesc(pc=0x00007fe8a4c07b90 offset=310):
   storem::workload@2 (line 9)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8]
    - l3: stack[12]
    - l4: empty
    - l5: empty
ScopeDesc(pc=0x00007fe8a4c07ba4 offset=324):
   storem::workload@2 (line 9)
ScopeDesc(pc=0x00007fe8a4c07bb9 offset=339):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
ScopeDesc(pc=0x00007fe8a4c07bb9 offset=339):
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
ScopeDesc(pc=0x00007fe8a4c07bb9 offset=339):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
ScopeDesc(pc=0x00007fe8a4c07bb9 offset=339):
   storem::workload@43 (line 13)
ScopeDesc(pc=0x00007fe8a4c07bc4 offset=344):
   storem::workload@2 (line 9)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8]
    - l3: stack[12]
    - l4: empty
    - l5: empty
ScopeDesc(pc=0x00007fe8a4c07bd8 offset=358):
   storem::workload@2 (line 9)
ScopeDesc(pc=0x00007fe8a4c07bf0 offset=370):
   storem::workload@2 (line 9)
   Locals
    - l0: reg rbp [10],oop
    - l1: NULL
    - l2: stack[0]
    - l3: stack[4]
    - l4: empty
    - l5: empty
ScopeDesc(pc=0x00007fe8a4c07c04 offset=384):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
ScopeDesc(pc=0x00007fe8a4c07c04 offset=384):
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
ScopeDesc(pc=0x00007fe8a4c07c04 offset=384):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
ScopeDesc(pc=0x00007fe8a4c07c04 offset=384):
   storem::workload@43 (line 13)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
relocations:
         @0x00007fe8a4c07808: 3200
relocInfo@0x00007fe8a4c07808 [type=6(runtime_call) addr=0x00007fe8a4c07880 offset=0 format=1] | [destination=0x00007fe8a94aa4b0]
         @0x00007fe8a4c0780a: 78056660
relocInfo@0x00007fe8a4c0780c [type=12(metadata) addr=0x00007fe8a4c078e0 offset=96 format=3 data=5] | [metadata_addr=0x00007fe8a4c07c78 *=0x00000008000409d8 offset=0]metadata_value=0x00000008000409d8: {type array byte}
         @0x00007fe8a4c0780e: 78056620
relocInfo@0x00007fe8a4c07810 [type=12(metadata) addr=0x00007fe8a4c07900 offset=32 format=3 data=5] | [metadata_addr=0x00007fe8a4c07c78 *=0x00000008000409d8 offset=0]metadata_value=0x00000008000409d8: {type array byte}
         @0x00007fe8a4c07812: 5151
relocInfo@0x00007fe8a4c07812 [type=10(poll) addr=0x00007fe8a4c07a51 offset=337]
         @0x00007fe8a4c07814: 3272
relocInfo@0x00007fe8a4c07814 [type=6(runtime_call) addr=0x00007fe8a4c07ac3 offset=114 format=1] | [destination=0x00007fe8a4be72a0]
         @0x00007fe8a4c07816: 7c03a9bf51087fe83805
relocInfo@0x00007fe8a4c0781e [type=7(external_word) addr=0x00007fe8a4c07ac8 offset=5 data={a9bf51087fe8}] | [target=0x00007fe8a9bf5108]
         @0x00007fe8a4c07820: 320e
relocInfo@0x00007fe8a4c07820 [type=6(runtime_call) addr=0x00007fe8a4c07ad6 offset=14 format=1] | [destination=0x00007fe8a925c010]
         @0x00007fe8a4c07822: 5820
relocInfo@0x00007fe8a4c07822 [type=11(poll_return) addr=0x00007fe8a4c07af6 offset=32]
         @0x00007fe8a4c07824: 323d
relocInfo@0x00007fe8a4c07824 [type=6(runtime_call) addr=0x00007fe8a4c07b33 offset=61 format=1] | [destination=0x00007fe8a4be72a0]
         @0x00007fe8a4c07826: 7c03a9bf51087fe83805
relocInfo@0x00007fe8a4c0782e [type=7(external_word) addr=0x00007fe8a4c07b38 offset=5 data={a9bf51087fe8}] | [target=0x00007fe8a9bf5108]
         @0x00007fe8a4c07830: 320e
relocInfo@0x00007fe8a4c07830 [type=6(runtime_call) addr=0x00007fe8a4c07b46 offset=14 format=1] | [destination=0x00007fe8a925c010]
         @0x00007fe8a4c07832: 3215
relocInfo@0x00007fe8a4c07832 [type=6(runtime_call) addr=0x00007fe8a4c07b5b offset=21 format=1] | [destination=0x00007fe8a4be72a0]
         @0x00007fe8a4c07834: 7c03a9bf51087fe83805
relocInfo@0x00007fe8a4c0783c [type=7(external_word) addr=0x00007fe8a4c07b60 offset=5 data={a9bf51087fe8}] | [target=0x00007fe8a9bf5108]
         @0x00007fe8a4c0783e: 320e
relocInfo@0x00007fe8a4c0783e [type=6(runtime_call) addr=0x00007fe8a4c07b6e offset=14 format=1] | [destination=0x00007fe8a925c010]
         @0x00007fe8a4c07840: 321d
relocInfo@0x00007fe8a4c07840 [type=6(runtime_call) addr=0x00007fe8a4c07b8b offset=29 format=1] | [destination=0x00007fe8a4be72a0]
         @0x00007fe8a4c07842: 7c03a9bf51087fe83805
relocInfo@0x00007fe8a4c0784a [type=7(external_word) addr=0x00007fe8a4c07b90 offset=5 data={a9bf51087fe8}] | [target=0x00007fe8a9bf5108]
         @0x00007fe8a4c0784c: 320e
relocInfo@0x00007fe8a4c0784c [type=6(runtime_call) addr=0x00007fe8a4c07b9e offset=14 format=1] | [destination=0x00007fe8a925c010]
         @0x00007fe8a4c0784e: 3221
relocInfo@0x00007fe8a4c0784e [type=6(runtime_call) addr=0x00007fe8a4c07bbf offset=33 format=1] | [destination=0x00007fe8a4be72a0]
         @0x00007fe8a4c07850: 7c03a9bf51087fe83805
relocInfo@0x00007fe8a4c07858 [type=7(external_word) addr=0x00007fe8a4c07bc4 offset=5 data={a9bf51087fe8}] | [target=0x00007fe8a9bf5108]
         @0x00007fe8a4c0785a: 320e
relocInfo@0x00007fe8a4c0785a [type=6(runtime_call) addr=0x00007fe8a4c07bd2 offset=14 format=1] | [destination=0x00007fe8a925c010]
         @0x00007fe8a4c0785c: 3219
relocInfo@0x00007fe8a4c0785c [type=6(runtime_call) addr=0x00007fe8a4c07beb offset=25 format=1] | [destination=0x00007fe8a4be72a0]
         @0x00007fe8a4c0785e: 7c03a9bf51087fe83805
relocInfo@0x00007fe8a4c07866 [type=7(external_word) addr=0x00007fe8a4c07bf0 offset=5 data={a9bf51087fe8}] | [target=0x00007fe8a9bf5108]
         @0x00007fe8a4c07868: 320e
relocInfo@0x00007fe8a4c07868 [type=6(runtime_call) addr=0x00007fe8a4c07bfe offset=14 format=1] | [destination=0x00007fe8a925c010]
         @0x00007fe8a4c0786a: 790e4006
relocInfo@0x00007fe8a4c0786c [type=8(internal_word) addr=0x00007fe8a4c07c04 offset=6 data=270] | [target=0x00007fe8a4c07af6]
         @0x00007fe8a4c0786e: 3211
relocInfo@0x00007fe8a4c0786e [type=6(runtime_call) addr=0x00007fe8a4c07c15 offset=17 format=1] | [destination=0x00007fe8a4be6420]
         @0x00007fe8a4c07870: 000b
relocInfo@0x00007fe8a4c07870 [type=0(none) addr=0x00007fe8a4c07c20 offset=11]
         @0x00007fe8a4c07872: 3200
relocInfo@0x00007fe8a4c07872 [type=6(runtime_call) addr=0x00007fe8a4c07c20 offset=0 format=1] | [destination=0x00007fe8a4b49ea0]
         @0x00007fe8a4c07874: 320f
relocInfo@0x00007fe8a4c07874 [type=6(runtime_call) addr=0x00007fe8a4c07c2f offset=15 format=1] | [destination=0x00007fe8a4be52e0]
         @0x00007fe8a4c07876: 0000
relocInfo@0x00007fe8a4c07876 [type=0(none) addr=0x00007fe8a4c07c2f offset=0]
         @0x00007fe8a4c07878: 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Dependencies:
Dependency of type abstract_with_unique_concrete_subtype
  context = *jdk.incubator.vector.AbstractSpecies
  class   = jdk.incubator.vector.ByteVector$ByteSpecies
   [nmethod<=klass]jdk.incubator.vector.AbstractSpecies
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.ByteVector$ByteSpecies
  method  = {method} {0x00007fe838674f28} 'loopBound' '(I)I' in 'jdk/incubator/vector/AbstractSpecies'
  class   = jdk.incubator.vector.VectorSpecies
  method  = *{method} {0x00007fe838672ac0} 'loopBound' '(I)I' in 'jdk/incubator/vector/VectorSpecies'
   [nmethod<=klass]jdk.incubator.vector.ByteVector$ByteSpecies
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.ByteVector$ByteSpecies
  method  = {method} {0x00007fe8386743e8} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
  class   = jdk.incubator.vector.VectorSpecies
  method  = *{method} {0x00007fe8386728c8} 'length' '()I' in 'jdk/incubator/vector/VectorSpecies'
   [nmethod<=klass]jdk.incubator.vector.ByteVector$ByteSpecies
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.Byte256Vector$Byte256Mask
  method  = {method} {0x00007fe8386901c8} 'check' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/AbstractMask'
  class   = jdk.incubator.vector.VectorMask
  method  = *{method} {0x00007fe8386938e0} 'check' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/VectorMask'
   [nmethod<=klass]jdk.incubator.vector.Byte256Vector$Byte256Mask
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ExceptionHandlerTable (size = 0 bytes)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ImplicitExceptionTable (size = 2 entries, 20 bytes):
{
   < 0x00007fe8a4c078f0, 0x00007fe8a4c07bd8 > < 0x00007fe8a4c079c8, 0x00007fe8a4c07ba4 > 
}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded oops:
#0: 0x0000000000000000 NULL-oop
#1: 0x000000011f97c880 a 'java/lang/Class'{0x000000011f97c880} = 'jdk/incubator/vector/Byte256Vector'
#2: 0x000000011f97c910 a 'java/lang/Class'{0x000000011f97c910} = 'jdk/incubator/vector/Byte256Vector$Byte256Mask'
#3: 0x000000011f97c838 a 'jdk/incubator/vector/ByteVector$ByteSpecies'{0x000000011f97c838}
#4: 0x000000011f8a3948 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x000000011f8a3948}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded metadata:
# 0: 0x0000000000000000 NULL-oop
# 1: 0x00007fe838510e08 {method} {0x00007fe838510e08} 'workload' '([B[BI)B' in 'storem'
# 2: 0x00007fe8386332f0 {method} {0x00007fe8386332f0} 'intoArray' '([BILjdk/incubator/vector/VectorMask;)V' in 'jdk/incubator/vector/ByteVector'
# 3: 0x00007fe8386ad8c8 {method} {0x00007fe8386ad8c8} 'intoArray0' '([BILjdk/incubator/vector/VectorMask;)V' in 'jdk/incubator/vector/Byte256Vector'
# 4: 0x00007fe838634c10 {method} {0x00007fe838634c10} 'intoArray0Template' '(Ljava/lang/Class;[BILjdk/incubator/vector/VectorMask;)V' in 'jdk/incubator/vector/ByteVector'
# 5: 0x00000008000409d8 {type array byte}
# 6: 0x00007fe838692b58 {method} {0x00007fe838692b58} 'fromLong' '(Ljdk/incubator/vector/VectorSpecies;J)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/VectorMask'
# 7: 0x00007fe838632568 {method} {0x00007fe838632568} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[BI)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector'
# 8: 0x00007fe8386da850 {method} {0x00007fe8386da850} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
# 9: 0x00007fe83818ea98 {method} {0x00007fe83818ea98} 'checkIndex' '(II)I' in 'java/util/Objects'
#10: 0x00007fe8386ad190 {method} {0x00007fe8386ad190} 'fromArray0' '([BI)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/Byte256Vector'
#11: 0x00007fe838633e78 {method} {0x00007fe838633e78} 'fromArray0Template' '([BI)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector'
#12: 0x00007fe8386356b8 {method} {0x00007fe8386356b8} 'arrayAddress' '([BI)J' in 'jdk/incubator/vector/ByteVector'
#13: 0x00007fe8386da728 {method} {0x00007fe8386da728} 'indexInRange' '(JJJ)Z' in 'jdk/incubator/vector/VectorIntrinsics'
#14: 0x0000000800094a08 'jdk/incubator/vector/AbstractSpecies'
#15: 0x0000000800094df0 'jdk/incubator/vector/ByteVector$ByteSpecies'
#16: 0x00007fe838674f28 {method} {0x00007fe838674f28} 'loopBound' '(I)I' in 'jdk/incubator/vector/AbstractSpecies'
#17: 0x0000000800094600 'jdk/incubator/vector/VectorSpecies'
#18: 0x00007fe838672ac0 {method} {0x00007fe838672ac0} 'loopBound' '(I)I' in 'jdk/incubator/vector/VectorSpecies'
#19: 0x00007fe8386743e8 {method} {0x00007fe8386743e8} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
#20: 0x00007fe8386728c8 {method} {0x00007fe8386728c8} 'length' '()I' in 'jdk/incubator/vector/VectorSpecies'
#21: 0x0000000800098a40 'jdk/incubator/vector/Byte256Vector$Byte256Mask'
#22: 0x00007fe8386901c8 {method} {0x00007fe8386901c8} 'check' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/AbstractMask'
#23: 0x0000000800096cc0 'jdk/incubator/vector/VectorMask'
#24: 0x00007fe8386938e0 {method} {0x00007fe8386938e0} 'check' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/VectorMask'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

============================= C2-compiled nmethod ==============================
#r018 rsi:rsi   : parm 0: byte[int:>=0]:exact *
#r016 rdx:rdx   : parm 1: byte[int:>=0]:exact *
#r010 rcx   : parm 2: int
# -- Old rsp -- Framesize: 160 --
#r591 rsp+156: in_preserve
#r590 rsp+152: return address
#r589 rsp+148: in_preserve
#r588 rsp+144: saved fp register
#r587 rsp+140: pad2, stack alignment
#r586 rsp+136: pad2, stack alignment
#r585 rsp+132: Fixed slot 1
#r584 rsp+128: Fixed slot 0
#r623 rsp+124: spill
#r622 rsp+120: spill
#r621 rsp+116: spill
#r620 rsp+112: spill
#r619 rsp+108: spill
#r618 rsp+104: spill
#r617 rsp+100: spill
#r616 rsp+96: spill
#r615 rsp+92: spill
#r614 rsp+88: spill
#r613 rsp+84: spill
#r612 rsp+80: spill
#r611 rsp+76: spill
#r610 rsp+72: spill
#r609 rsp+68: spill
#r608 rsp+64: spill
#r607 rsp+60: spill
#r606 rsp+56: spill
#r605 rsp+52: spill
#r604 rsp+48: spill
#r603 rsp+44: spill
#r602 rsp+40: spill
#r601 rsp+36: spill
#r600 rsp+32: spill
#r599 rsp+28: spill
#r598 rsp+24: spill
#r597 rsp+20: spill
#r596 rsp+16: spill
#r595 rsp+12: spill
#r594 rsp+ 8: spill
#r593 rsp+ 4: spill
#r592 rsp+ 0: spill
#
----------------------- MetaData before Compile_id = 230 ------------------------
{method}
 - this oop:          0x00007fe838510e08
 - method holder:     'storem'
 - constants:         0x00007fe838510878 constant pool [107]/operands[10] {0x00007fe838510878} for 'storem' cache=0x00007fe838700128
 - access:            0xc1000009  public static 
 - name:              'workload'
 - signature:         '([B[BI)B'
 - max stack:         5
 - max locals:        6
 - size of params:    3
 - method size:       14
 - vtable index:      -2
 - i2i entry:         0x00007fe8a4ad5400
 - adapters:          AHE@0x00007fe8a037f720: 0xbba i2c: 0x00007fe8a4b70ae0 c2i: 0x00007fe8a4b70bc7 c2iUV: 0x00007fe8a4b70b91 c2iNCI: 0x00007fe8a4b70c01
 - compiled entry     0x00007fe8a4b70bc7
 - code size:         64
 - code start:        0x00007fe838510db8
 - code end (excl):   0x00007fe838510df8
 - method data:       0x00007fe838700428
 - checked ex length: 0
 - linenumber start:  0x00007fe838510df8
 - localvar length:   0

------------------------ OptoAssembly for Compile_id = 230 -----------------------
#
#  byte ( byte[int:>=0]:exact *, byte[int:>=0]:exact *, int )
#
000     N1: #	out( B1 ) <- in( B48 B40 B45 B41 B31 B49 B38 B39 B42 B43 B44 )  Freq: 1

000     B1: #	out( B48 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
000     # stack bang (456 bytes)
	pushq   rbp	# Save rbp
	subq    rsp, #144	# Create frame

00f     movdl   XMM0, RCX	# spill
013     movl    R10, [RDX + #12 (8-bit)]	# range
017     NullCheck RDX

017     B2: #	out( B29 B3 ) <- in( B1 )  Freq: 0.999999
017     movl    R8, R10	# spill
01a     andl    R8, #-32	# int
        nop 	# 2 bytes pad for loops and calls
020     testl   R8, R8
023     jle     B29  P=0.029798 C=106653.000000

029     B3: #	out( B40 B4 ) <- in( B2 )  Freq: 0.970201
029     movl    R11, R10	# spill
02c     addl    R11, #-31	# int
030     testl   R11, R11
033     jl     B40  P=0.000001 C=-1.000000

039     B4: #	out( B40 B5 ) <- in( B3 )  Freq: 0.9702
        nop 	# 7 bytes pad for loops and calls
040     cmpl    R10, #31
044     je     B40  P=0.000001 C=-1.000000

04a     B5: #	out( B40 B6 ) <- in( B4 )  Freq: 0.970199
04a     movslq  R10, R10	# i2l
04d     movslq  R9, R8	# i2l
050     addq    R10, #-31	# long
054     addq    R9, #31	# long
058     andq    R9, #-32	# long
05c     movl    RCX, R9	# l2i
05f     movslq  R9, RCX	# i2l
062     addq    R9, #-32	# long
066     cmpq    R9, R10	# unsigned
069     jae,u   B40  P=0.000001 C=-1.000000

06f     B6: #	out( B40 B7 ) <- in( B5 )  Freq: 0.970199
06f     movl    R10, #32767	# long (unsigned 32-bit)
075     vallones XMM1
079     vmovdqu XMM6,XMM2	# spill
07d     long_to_mask_avx XMM6, R10	! using R9, RCX, XMM3, as TEMP
0f6     vector_loadmask_byte XMM7, XMM6
	
0fe     vptest_alltrue_ge16  R9,XMM7, XMM1	! using RFLAGS as TEMP
10b     testl   R9, R9
10e     jne     B40  P=0.000001 C=-1.000000

114     B7: #	out( B40 B8 ) <- in( B6 )  Freq: 0.970198
114     movl    R10, [RSI + #12 (8-bit)]	# range
118     NullCheck RSI

118     B8: #	out( B41 B9 ) <- in( B7 )  Freq: 0.970197
        nop 	# 8 bytes pad for loops and calls
120     cmpl    R8, #2147483616
127     jg     B41  P=0.000001 C=-1.000000

12d     B9: #	out( B46 B10 ) <- in( B8 )  Freq: 0.970196
12d     load_vector XMM1,[RDX + #16 (8-bit)]
132     movslq  RAX, R10	# i2l
135     addq    RAX, #-32	# long
139     testq   RAX, RAX
        nop 	# 4 bytes pad for loops and calls
140     jl     B46  P=0.000000 C=8222.000000

146     B10: #	out( B24 B11 ) <- in( B9 )  Freq: 0.970195
146     movl    R9, R8	# spill
149     addl    R9, #-96	# int
14d     movl    RCX, #-2147483648	# int
152     cmpl    R8, R9
155     cmovll R9, RCX	# signed, int
159     movl    R10, #32	# int
15f     vector_masked_store [RSI + #16 (8-bit)], XMM1, XMM7 	! using XMM2, XMM3, RBP, RBX, RCX and RDI as TEMP
        nop 	# 7 bytes pad for loops and calls
1c0     cmpl    R9, #32
1c4     jle     B24  P=0.000001 C=-1.000000

1ca     B11: #	out( B42 B12 ) <- in( B10 )  Freq: 0.970194
1ca     cmpl    R11, #32	# unsigned
1ce     jbe,u   B42  P=0.000001 C=-1.000000

1d4     B12: #	out( B43 B13 ) <- in( B11 )  Freq: 0.970193
        nop 	# 12 bytes pad for loops and calls
1e0     cmpl    R11, #128	# unsigned
1e7     jbe,u   B43  P=0.000001 C=-1.000000

1ed     B13: #	out( B22 ) <- in( B12 )  Freq: 0.970192
1ed     movl    RBX, #128000	# int
1f2     # TLS is in R15
1f2     jmp     B22
        nop 	# 9 bytes pad for loops and calls

200     B14: #	out( B15 ) <- in( B19 ) top-of-loop Freq: 1057.86
200     movq    RSI, R14	# spill
203     movdl   R8, XMM1	# spill
208     movdl   R11, XMM3	# spill

20d     B15: #	out( B32 B16 ) <- in( B22 B14 ) Loop( B15-B14 inner main of N139 strip mined) Freq: 1090.35
20d     movslq  RBP, R10	# i2l
210     load_vector XMM2,[RDX + #16 + RBP]
216     cmpq    RBP, RAX
219     jg     B32  P=0.000000 C=8222.000000

21f     B16: #	out( B36 B17 ) <- in( B15 )  Freq: 1090.35
21f     movdl   XMM3, R11	# spill
224     movdl   XMM1, R8	# spill
229     movq    R14, RSI	# spill
22c     movq    R13, RBP	# spill
22f     addq    R13, #32	# long
233     vector_masked_store [R14 + #16 + RBP], XMM2, XMM7 	! using XMM4, XMM5, RDI, RSI, R8 and R11 as TEMP
292     load_vector XMM2,[RDX + #48 + RBP]
298     cmpq    R13, RAX
        nop 	# 5 bytes pad for loops and calls
2a0     jg     B36  P=0.000000 C=8222.000000

2a6     B17: #	out( B33 B18 ) <- in( B16 )  Freq: 1090.35
2a6     movq    R13, RBP	# spill
2a9     addq    R13, #64	# long
2ad     vector_masked_store [R14 + #48 + RBP], XMM2, XMM7 	! using XMM4, XMM5, RDI, RSI, R8 and R11 as TEMP
30c     load_vector XMM2,[RDX + #80 + RBP]
312     cmpq    R13, RAX
315     jg     B33  P=0.000000 C=8222.000000

31b     B18: #	out( B35 B19 ) <- in( B17 )  Freq: 1090.35
31b     movq    R13, RBP	# spill
31e     addq    R13, #96	# long
322     vector_masked_store [R14 + #80 + RBP], XMM2, XMM7 	! using XMM4, XMM5, RDI, RSI, R8 and R11 as TEMP
381     load_vector XMM2,[RDX + #112 + RBP]
387     cmpq    R13, RAX
38a     jg     B35  P=0.000000 C=8222.000000

390     B19: #	out( B14 B20 ) <- in( B18 )  Freq: 1090.35
390     vector_masked_store [R14 + #112 + RBP], XMM2, XMM7 	! using XMM4, XMM5, RSI, R8, R11 and RDI as TEMP
3ee     addl    R10, #128	# int
3f5     cmpl    R10, RCX
3f8     jl     B14	# loop end  P=0.970202 C=103474.000000

3fe     B20: #	out( B23 B21 ) <- in( B19 )  Freq: 32.4897
3fe     movq    R11, [R15 + #976 (32-bit)]	# ptr
405     testl   rax, [R11]	# Safepoint: poll for GC        # storem::workload @ bci:57 (line 9) L[0]=R14 L[1]=RDX L[2]=XMM0 L[3]=R10 L[4]=_ L[5]=_
        # OopMap {rdx=Oop r14=Oop off=1029/0x405}
408     cmpl    R10, R9
40b     jge,s   B23  P=0.029798 C=103474.000000

40d     B21: #	out( B22 ) <- in( B20 )  Freq: 31.5216
40d     movq    RSI, R14	# spill
410     movdl   R8, XMM1	# spill
415     movdl   R11, XMM3	# spill

41a     B22: #	out( B15 ) <- in( B13 B21 ) Loop( B22-B21 ) Freq: 32.4917
41a     movl    RCX, R9	# spill
41d     subl    RCX, R10	# int
420     xorl    RBP, RBP	# int
422     cmpl    R9, R10
425     cmovll RCX, RBP	# signed, int
428     cmpl    RCX, #128000	# unsigned
42e     cmovla RCX, RBX	# unsigned, int
431     addl    RCX, R10	# int
434     jmp     B15

439     B23: #	out( B24 ) <- in( B20 )  Freq: 0.968112
439     movq    RSI, R14	# spill
43c     movdl   R8, XMM1	# spill
441     movdl   R11, XMM3	# spill

446     B24: #	out( B29 B25 ) <- in( B10 B23 )  Freq: 0.968113
446     cmpl    R10, R8
449     jge     B29  P=0.500000 C=-1.000000

44f     B25: #	out( B44 B26 ) <- in( B24 )  Freq: 0.484057
44f     # castII of R10
44f     cmpl    R10, R11	# unsigned
452     jae,u   B44  P=0.000001 C=-1.000000

458     B26: #	out( B45 B27 ) <- in( B25 )  Freq: 0.484056
458     movl    RCX, R10	# spill
45b     # castII of RCX
        nop 	# 5 bytes pad for loops and calls
460     cmpl    RCX, R11	# unsigned
463     jae,u   B45  P=0.000001 C=-1.000000
        nop 	# 3 bytes pad for loops and calls

46c     B27: #	out( B47 B28 ) <- in( B26 B28 ) Loop( B27-B28 inner post of N1677) Freq: 0.968111
46c     movslq  R13, R10	# i2l
46f     load_vector XMM1,[RDX + #16 + R13]
476     cmpq    R13, RAX
479     jg     B47  P=0.000000 C=8222.000000

47f     B28: #	out( B27 B29 ) <- in( B27 )  Freq: 0.968111
47f     vector_masked_store [RSI + #16 + R13], XMM1, XMM7 	! using XMM3, XMM2, R11, R9, RBX and RCX as TEMP
4dc     addl    R10, #32	# int
4e0     cmpl    R10, R8
4e3     jl,s   B27	# loop end  P=0.500000 C=103474.000000

4e5     B29: #	out( B49 B30 ) <- in( B28 B24 B2 )  Freq: 0.99791
4e5     movl    R10, [RSI + #12 (8-bit)]	# range
4e9     NullCheck RSI

4e9     B30: #	out( B39 B31 ) <- in( B29 )  Freq: 0.997909
4e9     movdl   R11, XMM0	# spill
4ee     cmpl    R11, R10	# unsigned
4f1     jae,u   B39  P=0.000001 C=-1.000000

4f7     B31: #	out( N1 ) <- in( B30 )  Freq: 0.997908
4f7     movsbl  RAX, [RSI + #16 + R11]	# byte
4fd     vzeroupper
	addq    rsp, 144	# Destroy frame
	popq    rbp
	cmpq     rsp, poll_offset[r15_thread] 
	ja       #safepoint_stub	# Safepoint: poll for GC

515     ret

516     B32: #	out( B34 ) <- in( B15 )  Freq: 0.000519919
516     movq    R13, RBP	# spill
519     jmp,s   B34

51b     B33: #	out( B34 ) <- in( B17 )  Freq: 0.000519918
51b     # castII of R10
51b     addl    R10, #64	# int
51f     movq    RSI, R14	# spill

522     B34: #	out( B37 ) <- in( B32 B33 )  Freq: 0.00103984
522     vmovdqu [rsp + 0],XMM2	# spill
527     jmp,s   B37

529     B35: #	out( B36 ) <- in( B18 )  Freq: 0.000519918
529     # castII of R10
529     addl    R10, #64	# int

52d     B36: #	out( B37 ) <- in( B16 B35 )  Freq: 0.00103984
52d     addl    R10, #32	# int
531     vmovdqu [rsp + 0],XMM2	# spill
536     movq    RSI, R14	# spill

539     B37: #	out( B38 ) <- in( B46 B34 B36 )  Freq: 0.00208014
539     vmovdqu XMM1,XMM6	# spill

53d     B38: #	out( N1 ) <- in( B47 B37 )  Freq: 0.0020806
53d     cmpq    R13, RAX	# CmpL3
	movl    RBP, -1
	jl,s    done
	setne   RBP
	movzbl  RBP, RBP
	done:
54f     movq    [rsp + #40], RDX	# spill
554     movq    [rsp + #56], RSI	# spill
559     movl    [rsp + #52], R10	# spill
55e     movss   [rsp + #64], XMM0	# spill
564     vmovdqu [rsp + 96],XMM1	# spill
56a     movl    RSI, #-187	# int
        nop 	# 1 bytes pad for loops and calls
570     call,static  wrapper for: uncommon_trap(reason='unstable_if' action='reinterpret' debug_id='0')
        # jdk.incubator.vector.VectorIntrinsics::indexInRange @ bci:12 (line 49) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ STK[0]=RBP
        # jdk.incubator.vector.ByteVector::intoArray @ bci:33 (line 3424) L[0]=#ScObj0 L[1]=rsp + #56 L[2]=rsp + #52 L[3]=#ScObj1 L[4]=#Ptr0x00007fe80c03dce0
        # ScObj0 jdk/incubator/vector/Byte256Vector={ [payload :0]=rsp + #0 }
        # ScObj1 jdk/incubator/vector/Byte256Vector$Byte256Mask={ [payload :0]=rsp + #96 }
        # storem::workload @ bci:43 (line 13) L[0]=rsp + #56 L[1]=rsp + #40 L[2]=rsp + #64 L[3]=rsp + #52 L[4]=_ L[5]=_
        # OopMap {[40]=Oop [56]=Oop off=1400/0x578}
578     stop	# ShouldNotReachHere

58c     B39: #	out( N1 ) <- in( B30 )  Freq: 1.01116e-06
58c     movq    RBP, RSI	# spill
58f     movl    [rsp + #0], R11	# spill
593     movl    RSI, #-28	# int
598     call,static  wrapper for: uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')
        # storem::workload @ bci:62 (line 15) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ STK[0]=RBP STK[1]=rsp + #0
        # OopMap {rbp=Oop off=1440/0x5a0}
5a0     stop	# ShouldNotReachHere

5b4     B40: #	out( N1 ) <- in( B7 B3 B4 B5 B6 )  Freq: 4.88965e-06
5b4     movq    RBP, RSI	# spill
5b7     movq    [rsp + #0], RDX	# spill
5bb     movss   [rsp + #8], XMM0	# spill
5c1     movl    [rsp + #12], R8	# spill
5c6     movl    RSI, #-138	# int
        nop 	# 1 bytes pad for loops and calls
5cc     call,static  wrapper for: uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')
        # storem::workload @ bci:13 (line 9) L[0]=RBP L[1]=rsp + #0 L[2]=rsp + #8 L[3]=#0 L[4]=_ L[5]=_ STK[0]=#0 STK[1]=rsp + #12
        # OopMap {rbp=Oop [0]=Oop off=1492/0x5d4}
5d4     stop	# ShouldNotReachHere

5e8     B41: #	out( N1 ) <- in( B8 )  Freq: 9.8308e-07
5e8     movq    RBP, RSI	# spill
5eb     movq    [rsp + #0], RDX	# spill
5ef     movss   [rsp + #8], XMM0	# spill
5f5     movl    [rsp + #12], R8	# spill
5fa     movl    RSI, #-146	# int
        nop 	# 1 bytes pad for loops and calls
600     call,static  wrapper for: uncommon_trap(reason='loop_limit_check' action='maybe_recompile' debug_id='0')
        # storem::workload @ bci:13 (line 9) L[0]=RBP L[1]=rsp + #0 L[2]=rsp + #8 L[3]=#0 L[4]=_ L[5]=_ STK[0]=#0 STK[1]=rsp + #12
        # OopMap {rbp=Oop [0]=Oop off=1544/0x608}
608     stop	# ShouldNotReachHere

61c     B42: #	out( N1 ) <- in( B11 )  Freq: 9.70194e-07
61c     stop	# ShouldNotReachHere

630     B43: #	out( N1 ) <- in( B12 )  Freq: 9.70193e-07
630     stop	# ShouldNotReachHere

644     B44: #	out( N1 ) <- in( B25 )  Freq: 4.90485e-07
644     stop	# ShouldNotReachHere

658     B45: #	out( N1 ) <- in( B26 )  Freq: 4.90484e-07
658     stop	# ShouldNotReachHere

66c     B46: #	out( B37 ) <- in( B9 )  Freq: 4.62625e-07
66c     xorl    R13, R13	# long
66f     vmovdqu [rsp + 0],XMM1	# spill
674     xorl    R10, R10	# int
677     jmp     B37

67c     B47: #	out( B38 ) <- in( B27 )  Freq: 4.61631e-07
67c     vmovdqu [rsp + 0],XMM1	# spill
681     vmovdqu XMM1,XMM6	# spill
685     jmp     B38

68a     B48: #	out( N1 ) <- in( B1 )  Freq: 1.01328e-06
68a     movl    RSI, #-10	# int
        nop 	# 1 bytes pad for loops and calls
690     call,static  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # storem::workload @ bci:7 (line 9) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ STK[0]=_ STK[1]=_ STK[2]=#NULL
        # OopMap {off=1688/0x698}
698     stop	# ShouldNotReachHere

6ac     B49: #	out( N1 ) <- in( B29 )  Freq: 1.01116e-06
6ac     movl    RSI, #-10	# int
6b1     movdl   RBP, XMM0	# spill
        nop 	# 3 bytes pad for loops and calls
6b8     call,static  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # storem::workload @ bci:62 (line 15) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ STK[0]=#NULL STK[1]=RBP
        # OopMap {off=1728/0x6c0}
6c0     stop	# ShouldNotReachHere

--------------------------------------------------------------------------------
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     666  230             storem::workload (64 bytes)
 total in heap  [0x00007fe8a4c06690,0x00007fe8a4c07408] = 3448
 relocation     [0x00007fe8a4c06808,0x00007fe8a4c068a0] = 152
 main code      [0x00007fe8a4c068a0,0x00007fe8a4c06f90] = 1776
 stub code      [0x00007fe8a4c06f90,0x00007fe8a4c06fa8] = 24
 oops           [0x00007fe8a4c06fa8,0x00007fe8a4c06fc8] = 32
 metadata       [0x00007fe8a4c06fc8,0x00007fe8a4c07070] = 168
 scopes data    [0x00007fe8a4c07070,0x00007fe8a4c07180] = 272
 scopes pcs     [0x00007fe8a4c07180,0x00007fe8a4c073d0] = 592
 dependencies   [0x00007fe8a4c073d0,0x00007fe8a4c073e8] = 24
 nul chk table  [0x00007fe8a4c073e8,0x00007fe8a4c07408] = 32

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x00007fe838510e08} 'workload' '([B[BI)B' in 'storem'
  # parm0:    rsi:rsi   = '[B'
  # parm1:    rdx:rdx   = '[B'
  # parm2:    rcx       = int
  #           [sp+0xa0]  (sp of caller)
 ;; N1: #	out( B1 ) <- in( B48 B40 B45 B41 B31 B49 B38 B39 B42 B43 B44 )  Freq: 1
 ;; B1: #	out( B48 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x00007fe8a4c068a0:   mov    %eax,-0x18000(%rsp)
  0x00007fe8a4c068a7:   push   %rbp
  0x00007fe8a4c068a8:   sub    $0x90,%rsp                   ;*synchronization entry
                                                            ; - storem::workload@-1 (line 9)
  0x00007fe8a4c068af:   vmovd  %ecx,%xmm0
  0x00007fe8a4c068b3:   mov    0xc(%rdx),%r10d              ; implicit exception: dispatches to 0x00007fe8a4c06f2a
 ;; B2: #	out( B29 B3 ) <- in( B1 )  Freq: 0.999999
  0x00007fe8a4c068b7:   mov    %r10d,%r8d
  0x00007fe8a4c068ba:   and    $0xffffffe0,%r8d
  0x00007fe8a4c068be:   nop
  0x00007fe8a4c068bf:   nop
  0x00007fe8a4c068c0:   test   %r8d,%r8d
  0x00007fe8a4c068c3:   jle    0x00007fe8a4c06d85
 ;; B3: #	out( B40 B4 ) <- in( B2 )  Freq: 0.970201
  0x00007fe8a4c068c9:   mov    %r10d,%r11d
  0x00007fe8a4c068cc:   add    $0xffffffe1,%r11d
  0x00007fe8a4c068d0:   test   %r11d,%r11d
  0x00007fe8a4c068d3:   jl     0x00007fe8a4c06e54
 ;; B4: #	out( B40 B5 ) <- in( B3 )  Freq: 0.9702
  0x00007fe8a4c068d9:   nop
  0x00007fe8a4c068da:   nop
  0x00007fe8a4c068db:   nop
  0x00007fe8a4c068dc:   nop
  0x00007fe8a4c068dd:   nop
  0x00007fe8a4c068de:   nop
  0x00007fe8a4c068df:   nop
  0x00007fe8a4c068e0:   cmp    $0x1f,%r10d
  0x00007fe8a4c068e4:   je     0x00007fe8a4c06e54
 ;; B5: #	out( B40 B6 ) <- in( B4 )  Freq: 0.970199
  0x00007fe8a4c068ea:   movslq %r10d,%r10
  0x00007fe8a4c068ed:   movslq %r8d,%r9
  0x00007fe8a4c068f0:   add    $0xffffffffffffffe1,%r10
  0x00007fe8a4c068f4:   add    $0x1f,%r9
  0x00007fe8a4c068f8:   and    $0xffffffffffffffe0,%r9
  0x00007fe8a4c068fc:   mov    %r9d,%ecx
  0x00007fe8a4c068ff:   movslq %ecx,%r9
  0x00007fe8a4c06902:   add    $0xffffffffffffffe0,%r9
  0x00007fe8a4c06906:   cmp    %r10,%r9
  0x00007fe8a4c06909:   jae    0x00007fe8a4c06e54
 ;; B6: #	out( B40 B7 ) <- in( B5 )  Freq: 0.970199
  0x00007fe8a4c0690f:   mov    $0x7fff,%r10d
  0x00007fe8a4c06915:   vpcmpeqb %ymm1,%ymm1,%ymm1
  0x00007fe8a4c06919:   vmovdqu %ymm2,%ymm6
  0x00007fe8a4c0691d:   movabs $0x101010101010101,%r9
  0x00007fe8a4c06927:   pdep   %r9,%r10,%r9
  0x00007fe8a4c0692c:   mov    %r10,%rcx
  0x00007fe8a4c0692f:   vpxor  %ymm3,%ymm3,%ymm3
  0x00007fe8a4c06933:   vmovq  %r9,%xmm3
  0x00007fe8a4c06938:   vmovq  %r9,%xmm6
  0x00007fe8a4c0693d:   movabs $0x101010101010101,%r9
  0x00007fe8a4c06947:   shr    $0x8,%rcx
  0x00007fe8a4c0694b:   pdep   %r9,%rcx,%r9
  0x00007fe8a4c06950:   vpinsrq $0x1,%r9,%xmm3,%xmm3
  0x00007fe8a4c06956:   vmovdqu %ymm3,%ymm6
  0x00007fe8a4c0695a:   vpxor  %xmm3,%xmm3,%xmm3
  0x00007fe8a4c0695e:   movabs $0x101010101010101,%r9
  0x00007fe8a4c06968:   shr    $0x8,%rcx
  0x00007fe8a4c0696c:   pdep   %r9,%rcx,%r9
  0x00007fe8a4c06971:   vpinsrq $0x0,%r9,%xmm3,%xmm3
  0x00007fe8a4c06977:   movabs $0x101010101010101,%r9
  0x00007fe8a4c06981:   shr    $0x8,%rcx
  0x00007fe8a4c06985:   pdep   %r9,%rcx,%r9
  0x00007fe8a4c0698a:   vpinsrq $0x1,%r9,%xmm3,%xmm3
  0x00007fe8a4c06990:   vinsertf128 $0x1,%xmm3,%ymm6,%ymm6  ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
                                                            ; - jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
                                                            ; - storem::workload@43 (line 13)
  0x00007fe8a4c06996:   vpxor  %ymm7,%ymm7,%ymm7
  0x00007fe8a4c0699a:   vpsubb %ymm6,%ymm7,%ymm7            ;*invokestatic fromBitsCoerced {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.VectorMask::fromLong@39 (line 242)
                                                            ; - storem::workload@22 (line 10)
  0x00007fe8a4c0699e:   vptest %ymm1,%ymm7
  0x00007fe8a4c069a3:   setb   %r9b
  0x00007fe8a4c069a7:   movzbl %r9b,%r9d
  0x00007fe8a4c069ab:   test   %r9d,%r9d
  0x00007fe8a4c069ae:   jne    0x00007fe8a4c06e54
 ;; B7: #	out( B40 B8 ) <- in( B6 )  Freq: 0.970198
  0x00007fe8a4c069b4:   mov    0xc(%rsi),%r10d              ; implicit exception: dispatches to 0x00007fe8a4c06e54
 ;; B8: #	out( B41 B9 ) <- in( B7 )  Freq: 0.970197
  0x00007fe8a4c069b8:   nop
  0x00007fe8a4c069b9:   nop
  0x00007fe8a4c069ba:   nop
  0x00007fe8a4c069bb:   nop
  0x00007fe8a4c069bc:   nop
  0x00007fe8a4c069bd:   nop
  0x00007fe8a4c069be:   nop
  0x00007fe8a4c069bf:   nop
  0x00007fe8a4c069c0:   cmp    $0x7fffffe0,%r8d
  0x00007fe8a4c069c7:   jg     0x00007fe8a4c06e88           ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
                                                            ; - jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
                                                            ; - storem::workload@43 (line 13)
 ;; B9: #	out( B46 B10 ) <- in( B8 )  Freq: 0.970196
  0x00007fe8a4c069cd:   vmovdqu 0x10(%rdx),%ymm1            ;*invokestatic load {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::fromArray0Template@32 (line 3746)
                                                            ; - jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 907)
                                                            ; - jdk.incubator.vector.ByteVector::fromArray@24 (line 2981)
                                                            ; - storem::workload@32 (line 12)
  0x00007fe8a4c069d2:   movslq %r10d,%rax
  0x00007fe8a4c069d5:   add    $0xffffffffffffffe0,%rax
  0x00007fe8a4c069d9:   test   %rax,%rax                    ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
                                                            ; - jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
                                                            ; - storem::workload@43 (line 13)
  0x00007fe8a4c069dc:   nop
  0x00007fe8a4c069dd:   nop
  0x00007fe8a4c069de:   nop
  0x00007fe8a4c069df:   nop
  0x00007fe8a4c069e0:   jl     0x00007fe8a4c06f0c
 ;; B10: #	out( B24 B11 ) <- in( B9 )  Freq: 0.970195
  0x00007fe8a4c069e6:   mov    %r8d,%r9d
  0x00007fe8a4c069e9:   add    $0xffffffa0,%r9d
  0x00007fe8a4c069ed:   mov    $0x80000000,%ecx
  0x00007fe8a4c069f2:   cmp    %r9d,%r8d
  0x00007fe8a4c069f5:   cmovl  %ecx,%r9d
  0x00007fe8a4c069f9:   mov    $0x20,%r10d
  0x00007fe8a4c069ff:   vpabsb %ymm7,%ymm3
  0x00007fe8a4c06a04:   vpxor  %ymm2,%ymm2,%ymm2
  0x00007fe8a4c06a08:   vpsubb %ymm3,%ymm2,%ymm3
  0x00007fe8a4c06a0c:   vpmovmskb %ymm3,%ebx
  0x00007fe8a4c06a10:   cmp    $0x0,%ebx
  0x00007fe8a4c06a13:   je     0x00007fe8a4c06a59
  0x00007fe8a4c06a19:   bsf    %rbx,%rcx
  0x00007fe8a4c06a1d:   mov    %rcx,%rbp
  0x00007fe8a4c06a20:   shr    $0x2,%rbp
  0x00007fe8a4c06a24:   vmovd  %ebp,%xmm2
  0x00007fe8a4c06a28:   vpbroadcastd %xmm2,%ymm2
  0x00007fe8a4c06a2d:   vpermd %ymm1,%ymm2,%ymm2
  0x00007fe8a4c06a32:   vmovd  %xmm2,%edi
  0x00007fe8a4c06a36:   mov    %rcx,%rbp
  0x00007fe8a4c06a39:   and    $0x3,%ecx
  0x00007fe8a4c06a3c:   shl    $0x3,%ecx
  0x00007fe8a4c06a3f:   shrx   %ecx,%edi,%edi
  0x00007fe8a4c06a44:   and    $0xff,%edi
  0x00007fe8a4c06a4a:   lea    0x10(%rsi),%rcx
  0x00007fe8a4c06a4e:   mov    %dil,(%rcx,%rbp,1)
  0x00007fe8a4c06a52:   blsr   %rbx,%rbx
  0x00007fe8a4c06a57:   jne    0x00007fe8a4c06a10
  0x00007fe8a4c06a59:   nop
  0x00007fe8a4c06a5a:   nop
  0x00007fe8a4c06a5b:   nop
  0x00007fe8a4c06a5c:   nop
  0x00007fe8a4c06a5d:   nop
  0x00007fe8a4c06a5e:   nop
  0x00007fe8a4c06a5f:   nop
  0x00007fe8a4c06a60:   cmp    $0x20,%r9d
  0x00007fe8a4c06a64:   jle    0x00007fe8a4c06ce6
 ;; B11: #	out( B42 B12 ) <- in( B10 )  Freq: 0.970194
  0x00007fe8a4c06a6a:   cmp    $0x20,%r11d
  0x00007fe8a4c06a6e:   jbe    0x00007fe8a4c06ebc
 ;; B12: #	out( B43 B13 ) <- in( B11 )  Freq: 0.970193
  0x00007fe8a4c06a74:   nop
  0x00007fe8a4c06a75:   nop
  0x00007fe8a4c06a76:   nop
  0x00007fe8a4c06a77:   nop
  0x00007fe8a4c06a78:   nop
  0x00007fe8a4c06a79:   nop
  0x00007fe8a4c06a7a:   nop
  0x00007fe8a4c06a7b:   nop
  0x00007fe8a4c06a7c:   nop
  0x00007fe8a4c06a7d:   nop
  0x00007fe8a4c06a7e:   nop
  0x00007fe8a4c06a7f:   nop
  0x00007fe8a4c06a80:   cmp    $0x80,%r11d
  0x00007fe8a4c06a87:   jbe    0x00007fe8a4c06ed0
 ;; B13: #	out( B22 ) <- in( B12 )  Freq: 0.970192
  0x00007fe8a4c06a8d:   mov    $0x1f400,%ebx                ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - storem::workload@57 (line 9)
  0x00007fe8a4c06a92:   jmpq   0x00007fe8a4c06cba
  0x00007fe8a4c06a97:   nop
  0x00007fe8a4c06a98:   nop
  0x00007fe8a4c06a99:   nop
  0x00007fe8a4c06a9a:   nop
  0x00007fe8a4c06a9b:   nop
  0x00007fe8a4c06a9c:   nop
  0x00007fe8a4c06a9d:   nop
  0x00007fe8a4c06a9e:   nop
  0x00007fe8a4c06a9f:   nop                                 ;   {no_reloc}
 ;; B14: #	out( B15 ) <- in( B19 ) top-of-loop Freq: 1057.86
  0x00007fe8a4c06aa0:   mov    %r14,%rsi
  0x00007fe8a4c06aa3:   vmovd  %xmm1,%r8d
  0x00007fe8a4c06aa8:   vmovd  %xmm3,%r11d
 ;; B15: #	out( B32 B16 ) <- in( B22 B14 ) Loop( B15-B14 inner main of N139 strip mined) Freq: 1090.35
  0x00007fe8a4c06aad:   movslq %r10d,%rbp                   ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
                                                            ; - jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
                                                            ; - storem::workload@43 (line 13)
  0x00007fe8a4c06ab0:   vmovdqu 0x10(%rdx,%rbp,1),%ymm2     ;*invokestatic load {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::fromArray0Template@32 (line 3746)
                                                            ; - jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 907)
                                                            ; - jdk.incubator.vector.ByteVector::fromArray@24 (line 2981)
                                                            ; - storem::workload@32 (line 12)
  0x00007fe8a4c06ab6:   cmp    %rax,%rbp
  0x00007fe8a4c06ab9:   jg     0x00007fe8a4c06db6
 ;; B16: #	out( B36 B17 ) <- in( B15 )  Freq: 1090.35
  0x00007fe8a4c06abf:   vmovd  %r11d,%xmm3
  0x00007fe8a4c06ac4:   vmovd  %r8d,%xmm1
  0x00007fe8a4c06ac9:   mov    %rsi,%r14
  0x00007fe8a4c06acc:   mov    %rbp,%r13
  0x00007fe8a4c06acf:   add    $0x20,%r13
  0x00007fe8a4c06ad3:   vpabsb %ymm7,%ymm5
  0x00007fe8a4c06ad8:   vpxor  %ymm4,%ymm4,%ymm4
  0x00007fe8a4c06adc:   vpsubb %ymm5,%ymm4,%ymm5
  0x00007fe8a4c06ae0:   vpmovmskb %ymm5,%esi
  0x00007fe8a4c06ae4:   cmp    $0x0,%esi
  0x00007fe8a4c06ae7:   je     0x00007fe8a4c06b32
  0x00007fe8a4c06aed:   bsf    %rsi,%r8
  0x00007fe8a4c06af1:   mov    %r8,%rdi
  0x00007fe8a4c06af4:   shr    $0x2,%rdi
  0x00007fe8a4c06af8:   vmovd  %edi,%xmm4
  0x00007fe8a4c06afc:   vpbroadcastd %xmm4,%ymm4
  0x00007fe8a4c06b01:   vpermd %ymm2,%ymm4,%ymm4
  0x00007fe8a4c06b06:   vmovd  %xmm4,%r11d
  0x00007fe8a4c06b0b:   mov    %r8,%rdi
  0x00007fe8a4c06b0e:   and    $0x3,%r8d
  0x00007fe8a4c06b12:   shl    $0x3,%r8d
  0x00007fe8a4c06b16:   shrx   %r8d,%r11d,%r11d
  0x00007fe8a4c06b1b:   and    $0xff,%r11d
  0x00007fe8a4c06b22:   lea    0x10(%r14,%rbp,1),%r8
  0x00007fe8a4c06b27:   mov    %r11b,(%r8,%rdi,1)
  0x00007fe8a4c06b2b:   blsr   %rsi,%rsi
  0x00007fe8a4c06b30:   jne    0x00007fe8a4c06ae4           ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
                                                            ; - jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
                                                            ; - storem::workload@43 (line 13)
  0x00007fe8a4c06b32:   vmovdqu 0x30(%rdx,%rbp,1),%ymm2     ;*invokestatic load {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::fromArray0Template@32 (line 3746)
                                                            ; - jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 907)
                                                            ; - jdk.incubator.vector.ByteVector::fromArray@24 (line 2981)
                                                            ; - storem::workload@32 (line 12)
  0x00007fe8a4c06b38:   cmp    %rax,%r13
  0x00007fe8a4c06b3b:   nop
  0x00007fe8a4c06b3c:   nop
  0x00007fe8a4c06b3d:   nop
  0x00007fe8a4c06b3e:   nop
  0x00007fe8a4c06b3f:   nop
  0x00007fe8a4c06b40:   jg     0x00007fe8a4c06dcd
 ;; B17: #	out( B33 B18 ) <- in( B16 )  Freq: 1090.35
  0x00007fe8a4c06b46:   mov    %rbp,%r13
  0x00007fe8a4c06b49:   add    $0x40,%r13
  0x00007fe8a4c06b4d:   vpabsb %ymm7,%ymm5
  0x00007fe8a4c06b52:   vpxor  %ymm4,%ymm4,%ymm4
  0x00007fe8a4c06b56:   vpsubb %ymm5,%ymm4,%ymm5
  0x00007fe8a4c06b5a:   vpmovmskb %ymm5,%esi
  0x00007fe8a4c06b5e:   cmp    $0x0,%esi
  0x00007fe8a4c06b61:   je     0x00007fe8a4c06bac
  0x00007fe8a4c06b67:   bsf    %rsi,%r8
  0x00007fe8a4c06b6b:   mov    %r8,%rdi
  0x00007fe8a4c06b6e:   shr    $0x2,%rdi
  0x00007fe8a4c06b72:   vmovd  %edi,%xmm4
  0x00007fe8a4c06b76:   vpbroadcastd %xmm4,%ymm4
  0x00007fe8a4c06b7b:   vpermd %ymm2,%ymm4,%ymm4
  0x00007fe8a4c06b80:   vmovd  %xmm4,%r11d
  0x00007fe8a4c06b85:   mov    %r8,%rdi
  0x00007fe8a4c06b88:   and    $0x3,%r8d
  0x00007fe8a4c06b8c:   shl    $0x3,%r8d
  0x00007fe8a4c06b90:   shrx   %r8d,%r11d,%r11d
  0x00007fe8a4c06b95:   and    $0xff,%r11d
  0x00007fe8a4c06b9c:   lea    0x30(%r14,%rbp,1),%r8
  0x00007fe8a4c06ba1:   mov    %r11b,(%r8,%rdi,1)
  0x00007fe8a4c06ba5:   blsr   %rsi,%rsi
  0x00007fe8a4c06baa:   jne    0x00007fe8a4c06b5e           ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
                                                            ; - jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
                                                            ; - storem::workload@43 (line 13)
  0x00007fe8a4c06bac:   vmovdqu 0x50(%rdx,%rbp,1),%ymm2     ;*invokestatic load {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::fromArray0Template@32 (line 3746)
                                                            ; - jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 907)
                                                            ; - jdk.incubator.vector.ByteVector::fromArray@24 (line 2981)
                                                            ; - storem::workload@32 (line 12)
  0x00007fe8a4c06bb2:   cmp    %rax,%r13
  0x00007fe8a4c06bb5:   jg     0x00007fe8a4c06dbb
 ;; B18: #	out( B35 B19 ) <- in( B17 )  Freq: 1090.35
  0x00007fe8a4c06bbb:   mov    %rbp,%r13
  0x00007fe8a4c06bbe:   add    $0x60,%r13
  0x00007fe8a4c06bc2:   vpabsb %ymm7,%ymm5
  0x00007fe8a4c06bc7:   vpxor  %ymm4,%ymm4,%ymm4
  0x00007fe8a4c06bcb:   vpsubb %ymm5,%ymm4,%ymm5
  0x00007fe8a4c06bcf:   vpmovmskb %ymm5,%esi
  0x00007fe8a4c06bd3:   cmp    $0x0,%esi
  0x00007fe8a4c06bd6:   je     0x00007fe8a4c06c21
  0x00007fe8a4c06bdc:   bsf    %rsi,%r8
  0x00007fe8a4c06be0:   mov    %r8,%rdi
  0x00007fe8a4c06be3:   shr    $0x2,%rdi
  0x00007fe8a4c06be7:   vmovd  %edi,%xmm4
  0x00007fe8a4c06beb:   vpbroadcastd %xmm4,%ymm4
  0x00007fe8a4c06bf0:   vpermd %ymm2,%ymm4,%ymm4
  0x00007fe8a4c06bf5:   vmovd  %xmm4,%r11d
  0x00007fe8a4c06bfa:   mov    %r8,%rdi
  0x00007fe8a4c06bfd:   and    $0x3,%r8d
  0x00007fe8a4c06c01:   shl    $0x3,%r8d
  0x00007fe8a4c06c05:   shrx   %r8d,%r11d,%r11d
  0x00007fe8a4c06c0a:   and    $0xff,%r11d
  0x00007fe8a4c06c11:   lea    0x50(%r14,%rbp,1),%r8
  0x00007fe8a4c06c16:   mov    %r11b,(%r8,%rdi,1)
  0x00007fe8a4c06c1a:   blsr   %rsi,%rsi
  0x00007fe8a4c06c1f:   jne    0x00007fe8a4c06bd3           ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
                                                            ; - jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
                                                            ; - storem::workload@43 (line 13)
  0x00007fe8a4c06c21:   vmovdqu 0x70(%rdx,%rbp,1),%ymm2     ;*invokestatic load {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::fromArray0Template@32 (line 3746)
                                                            ; - jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 907)
                                                            ; - jdk.incubator.vector.ByteVector::fromArray@24 (line 2981)
                                                            ; - storem::workload@32 (line 12)
  0x00007fe8a4c06c27:   cmp    %rax,%r13
  0x00007fe8a4c06c2a:   jg     0x00007fe8a4c06dc9
 ;; B19: #	out( B14 B20 ) <- in( B18 )  Freq: 1090.35
  0x00007fe8a4c06c30:   vpabsb %ymm7,%ymm5
  0x00007fe8a4c06c35:   vpxor  %ymm4,%ymm4,%ymm4
  0x00007fe8a4c06c39:   vpsubb %ymm5,%ymm4,%ymm5
  0x00007fe8a4c06c3d:   vpmovmskb %ymm5,%r8d
  0x00007fe8a4c06c41:   cmp    $0x0,%r8d
  0x00007fe8a4c06c45:   je     0x00007fe8a4c06c8e
  0x00007fe8a4c06c4b:   bsf    %r8,%r11
  0x00007fe8a4c06c4f:   mov    %r11,%rsi
  0x00007fe8a4c06c52:   shr    $0x2,%rsi
  0x00007fe8a4c06c56:   vmovd  %esi,%xmm4
  0x00007fe8a4c06c5a:   vpbroadcastd %xmm4,%ymm4
  0x00007fe8a4c06c5f:   vpermd %ymm2,%ymm4,%ymm4
  0x00007fe8a4c06c64:   vmovd  %xmm4,%edi
  0x00007fe8a4c06c68:   mov    %r11,%rsi
  0x00007fe8a4c06c6b:   and    $0x3,%r11d
  0x00007fe8a4c06c6f:   shl    $0x3,%r11d
  0x00007fe8a4c06c73:   shrx   %r11d,%edi,%edi
  0x00007fe8a4c06c78:   and    $0xff,%edi
  0x00007fe8a4c06c7e:   lea    0x70(%r14,%rbp,1),%r11
  0x00007fe8a4c06c83:   mov    %dil,(%r11,%rsi,1)
  0x00007fe8a4c06c87:   blsr   %r8,%r8
  0x00007fe8a4c06c8c:   jne    0x00007fe8a4c06c41           ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
                                                            ; - jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
                                                            ; - storem::workload@43 (line 13)
  0x00007fe8a4c06c8e:   add    $0x80,%r10d
  0x00007fe8a4c06c95:   cmp    %ecx,%r10d
  0x00007fe8a4c06c98:   jl     0x00007fe8a4c06aa0
 ;; B20: #	out( B23 B21 ) <- in( B19 )  Freq: 32.4897
  0x00007fe8a4c06c9e:   mov    0x3d0(%r15),%r11             ; ImmutableOopMap {rdx=Oop r14=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) storem::workload@57 (line 9)
                                                            ;   {no_reloc}
  0x00007fe8a4c06ca5:   test   %eax,(%r11)                  ;   {poll}
  0x00007fe8a4c06ca8:   cmp    %r9d,%r10d
  0x00007fe8a4c06cab:   jge    0x00007fe8a4c06cd9
 ;; B21: #	out( B22 ) <- in( B20 )  Freq: 31.5216
  0x00007fe8a4c06cad:   mov    %r14,%rsi
  0x00007fe8a4c06cb0:   vmovd  %xmm1,%r8d
  0x00007fe8a4c06cb5:   vmovd  %xmm3,%r11d
 ;; B22: #	out( B15 ) <- in( B13 B21 ) Loop( B22-B21 ) Freq: 32.4917
  0x00007fe8a4c06cba:   mov    %r9d,%ecx
  0x00007fe8a4c06cbd:   sub    %r10d,%ecx
  0x00007fe8a4c06cc0:   xor    %ebp,%ebp
  0x00007fe8a4c06cc2:   cmp    %r10d,%r9d
  0x00007fe8a4c06cc5:   cmovl  %ebp,%ecx
  0x00007fe8a4c06cc8:   cmp    $0x1f400,%ecx
  0x00007fe8a4c06cce:   cmova  %ebx,%ecx
  0x00007fe8a4c06cd1:   add    %r10d,%ecx
  0x00007fe8a4c06cd4:   jmpq   0x00007fe8a4c06aad
 ;; B23: #	out( B24 ) <- in( B20 )  Freq: 0.968112
  0x00007fe8a4c06cd9:   mov    %r14,%rsi
  0x00007fe8a4c06cdc:   vmovd  %xmm1,%r8d
  0x00007fe8a4c06ce1:   vmovd  %xmm3,%r11d
 ;; B24: #	out( B29 B25 ) <- in( B10 B23 )  Freq: 0.968113
  0x00007fe8a4c06ce6:   cmp    %r8d,%r10d
  0x00007fe8a4c06ce9:   jge    0x00007fe8a4c06d85
 ;; B25: #	out( B44 B26 ) <- in( B24 )  Freq: 0.484057
  0x00007fe8a4c06cef:   cmp    %r11d,%r10d
  0x00007fe8a4c06cf2:   jae    0x00007fe8a4c06ee4
 ;; B26: #	out( B45 B27 ) <- in( B25 )  Freq: 0.484056
  0x00007fe8a4c06cf8:   mov    %r10d,%ecx
  0x00007fe8a4c06cfb:   nop
  0x00007fe8a4c06cfc:   nop
  0x00007fe8a4c06cfd:   nop
  0x00007fe8a4c06cfe:   nop
  0x00007fe8a4c06cff:   nop
  0x00007fe8a4c06d00:   cmp    %r11d,%ecx
  0x00007fe8a4c06d03:   jae    0x00007fe8a4c06ef8
  0x00007fe8a4c06d09:   nop
  0x00007fe8a4c06d0a:   nop
  0x00007fe8a4c06d0b:   nop                                 ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
                                                            ; - jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
                                                            ; - storem::workload@43 (line 13)
 ;; B27: #	out( B47 B28 ) <- in( B26 B28 ) Loop( B27-B28 inner post of N1677) Freq: 0.968111
  0x00007fe8a4c06d0c:   movslq %r10d,%r13                   ;*i2l {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::arrayAddress@4 (line 3974)
                                                            ; - jdk.incubator.vector.ByteVector::fromArray0Template@20 (line 3748)
                                                            ; - jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 907)
                                                            ; - jdk.incubator.vector.ByteVector::fromArray@24 (line 2981)
                                                            ; - storem::workload@32 (line 12)
  0x00007fe8a4c06d0f:   vmovdqu 0x10(%rdx,%r13,1),%ymm1     ;*invokestatic load {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::fromArray0Template@32 (line 3746)
                                                            ; - jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 907)
                                                            ; - jdk.incubator.vector.ByteVector::fromArray@24 (line 2981)
                                                            ; - storem::workload@32 (line 12)
  0x00007fe8a4c06d16:   cmp    %rax,%r13
  0x00007fe8a4c06d19:   jg     0x00007fe8a4c06f1c
 ;; B28: #	out( B27 B29 ) <- in( B27 )  Freq: 0.968111
  0x00007fe8a4c06d1f:   vpabsb %ymm7,%ymm2
  0x00007fe8a4c06d24:   vpxor  %ymm3,%ymm3,%ymm3
  0x00007fe8a4c06d28:   vpsubb %ymm2,%ymm3,%ymm2
  0x00007fe8a4c06d2c:   vpmovmskb %ymm2,%r9d
  0x00007fe8a4c06d30:   cmp    $0x0,%r9d
  0x00007fe8a4c06d34:   je     0x00007fe8a4c06d7c
  0x00007fe8a4c06d3a:   bsf    %r9,%rbx
  0x00007fe8a4c06d3e:   mov    %rbx,%r11
  0x00007fe8a4c06d41:   shr    $0x2,%r11
  0x00007fe8a4c06d45:   vmovd  %r11d,%xmm3
  0x00007fe8a4c06d4a:   vpbroadcastd %xmm3,%ymm3
  0x00007fe8a4c06d4f:   vpermd %ymm1,%ymm3,%ymm3
  0x00007fe8a4c06d54:   vmovd  %xmm3,%ecx
  0x00007fe8a4c06d58:   mov    %rbx,%r11
  0x00007fe8a4c06d5b:   and    $0x3,%ebx
  0x00007fe8a4c06d5e:   shl    $0x3,%ebx
  0x00007fe8a4c06d61:   shrx   %ebx,%ecx,%ecx
  0x00007fe8a4c06d66:   and    $0xff,%ecx
  0x00007fe8a4c06d6c:   lea    0x10(%rsi,%r13,1),%rbx
  0x00007fe8a4c06d71:   mov    %cl,(%rbx,%r11,1)
  0x00007fe8a4c06d75:   blsr   %r9,%r9
  0x00007fe8a4c06d7a:   jne    0x00007fe8a4c06d30
  0x00007fe8a4c06d7c:   add    $0x20,%r10d
  0x00007fe8a4c06d80:   cmp    %r8d,%r10d
  0x00007fe8a4c06d83:   jl     0x00007fe8a4c06d0c
 ;; B29: #	out( B49 B30 ) <- in( B28 B24 B2 )  Freq: 0.99791
  0x00007fe8a4c06d85:   mov    0xc(%rsi),%r10d              ; implicit exception: dispatches to 0x00007fe8a4c06f4c
 ;; B30: #	out( B39 B31 ) <- in( B29 )  Freq: 0.997909
  0x00007fe8a4c06d89:   vmovd  %xmm0,%r11d
  0x00007fe8a4c06d8e:   cmp    %r10d,%r11d
  0x00007fe8a4c06d91:   jae    0x00007fe8a4c06e2c           ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
                                                            ; - jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
                                                            ; - storem::workload@43 (line 13)
 ;; B31: #	out( N1 ) <- in( B30 )  Freq: 0.997908
  0x00007fe8a4c06d97:   movsbl 0x10(%rsi,%r11,1),%eax       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - storem::workload@62 (line 15)
  0x00007fe8a4c06d9d:   vzeroupper 
  0x00007fe8a4c06da0:   add    $0x90,%rsp
  0x00007fe8a4c06da7:   pop    %rbp
  0x00007fe8a4c06da8:   cmp    0x3c8(%r15),%rsp             ;   {poll_return}
  0x00007fe8a4c06daf:   ja     0x00007fe8a4c06f74
  0x00007fe8a4c06db5:   retq   
 ;; B32: #	out( B34 ) <- in( B15 )  Freq: 0.000519919
  0x00007fe8a4c06db6:   mov    %rbp,%r13
  0x00007fe8a4c06db9:   jmp    0x00007fe8a4c06dc2
 ;; B33: #	out( B34 ) <- in( B17 )  Freq: 0.000519918
  0x00007fe8a4c06dbb:   add    $0x40,%r10d
  0x00007fe8a4c06dbf:   mov    %r14,%rsi
 ;; B34: #	out( B37 ) <- in( B32 B33 )  Freq: 0.00103984
  0x00007fe8a4c06dc2:   vmovdqu %ymm2,(%rsp)
  0x00007fe8a4c06dc7:   jmp    0x00007fe8a4c06dd9
 ;; B35: #	out( B36 ) <- in( B18 )  Freq: 0.000519918
  0x00007fe8a4c06dc9:   add    $0x40,%r10d
 ;; B36: #	out( B37 ) <- in( B16 B35 )  Freq: 0.00103984
  0x00007fe8a4c06dcd:   add    $0x20,%r10d
  0x00007fe8a4c06dd1:   vmovdqu %ymm2,(%rsp)
  0x00007fe8a4c06dd6:   mov    %r14,%rsi
 ;; B37: #	out( B38 ) <- in( B46 B34 B36 )  Freq: 0.00208014
  0x00007fe8a4c06dd9:   vmovdqu %ymm6,%ymm1
 ;; B38: #	out( N1 ) <- in( B47 B37 )  Freq: 0.0020806
  0x00007fe8a4c06ddd:   cmp    %rax,%r13
  0x00007fe8a4c06de0:   mov    $0xffffffff,%ebp
  0x00007fe8a4c06de5:   jl     0x00007fe8a4c06def
  0x00007fe8a4c06de7:   setne  %bpl
  0x00007fe8a4c06deb:   movzbl %bpl,%ebp
  0x00007fe8a4c06def:   mov    %rdx,0x28(%rsp)
  0x00007fe8a4c06df4:   mov    %rsi,0x38(%rsp)
  0x00007fe8a4c06df9:   mov    %r10d,0x34(%rsp)
  0x00007fe8a4c06dfe:   vmovss %xmm0,0x40(%rsp)
  0x00007fe8a4c06e04:   vmovdqu %ymm1,0x60(%rsp)            ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
                                                            ; - jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
                                                            ; - storem::workload@43 (line 13)
  0x00007fe8a4c06e0a:   mov    $0xffffff45,%esi
  0x00007fe8a4c06e0f:   nop
  0x00007fe8a4c06e10:   vzeroupper 
  0x00007fe8a4c06e13:   callq  0x00007fe8a4be72a0           ; ImmutableOopMap {[40]=Oop [56]=Oop }
                                                            ;*ifgt {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) jdk.incubator.vector.VectorIntrinsics::indexInRange@12 (line 49)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@33 (line 3424)
                                                            ; - storem::workload@43 (line 13)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fe8a4c06e18:   movabs $0x7fe8a9bf5108,%rdi         ;   {external_word}
  0x00007fe8a4c06e22:   and    $0xfffffffffffffff0,%rsp
  0x00007fe8a4c06e26:   callq  0x00007fe8a925c010           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fe8a4c06e2b:   hlt    
 ;; B39: #	out( N1 ) <- in( B30 )  Freq: 1.01116e-06
  0x00007fe8a4c06e2c:   mov    %rsi,%rbp
  0x00007fe8a4c06e2f:   mov    %r11d,(%rsp)                 ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
                                                            ; - jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
                                                            ; - storem::workload@43 (line 13)
  0x00007fe8a4c06e33:   mov    $0xffffffe4,%esi
  0x00007fe8a4c06e38:   vzeroupper 
  0x00007fe8a4c06e3b:   callq  0x00007fe8a4be72a0           ; ImmutableOopMap {rbp=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - storem::workload@62 (line 15)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fe8a4c06e40:   movabs $0x7fe8a9bf5108,%rdi         ;   {external_word}
  0x00007fe8a4c06e4a:   and    $0xfffffffffffffff0,%rsp
  0x00007fe8a4c06e4e:   callq  0x00007fe8a925c010           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fe8a4c06e53:   hlt    
 ;; B40: #	out( N1 ) <- in( B7 B3 B4 B5 B6 )  Freq: 4.88965e-06
  0x00007fe8a4c06e54:   mov    %rsi,%rbp
  0x00007fe8a4c06e57:   mov    %rdx,(%rsp)
  0x00007fe8a4c06e5b:   vmovss %xmm0,0x8(%rsp)
  0x00007fe8a4c06e61:   mov    %r8d,0xc(%rsp)               ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
                                                            ; - jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
                                                            ; - storem::workload@43 (line 13)
  0x00007fe8a4c06e66:   mov    $0xffffff76,%esi
  0x00007fe8a4c06e6b:   nop
  0x00007fe8a4c06e6c:   vzeroupper 
  0x00007fe8a4c06e6f:   callq  0x00007fe8a4be72a0           ; ImmutableOopMap {rbp=Oop [0]=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) storem::workload@13 (line 9)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fe8a4c06e74:   movabs $0x7fe8a9bf5108,%rdi         ;   {external_word}
  0x00007fe8a4c06e7e:   and    $0xfffffffffffffff0,%rsp
  0x00007fe8a4c06e82:   callq  0x00007fe8a925c010           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fe8a4c06e87:   hlt    
 ;; B41: #	out( N1 ) <- in( B8 )  Freq: 9.8308e-07
  0x00007fe8a4c06e88:   mov    %rsi,%rbp
  0x00007fe8a4c06e8b:   mov    %rdx,(%rsp)
  0x00007fe8a4c06e8f:   vmovss %xmm0,0x8(%rsp)
  0x00007fe8a4c06e95:   mov    %r8d,0xc(%rsp)               ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
                                                            ; - jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
                                                            ; - storem::workload@43 (line 13)
  0x00007fe8a4c06e9a:   mov    $0xffffff6e,%esi
  0x00007fe8a4c06e9f:   nop
  0x00007fe8a4c06ea0:   vzeroupper 
  0x00007fe8a4c06ea3:   callq  0x00007fe8a4be72a0           ; ImmutableOopMap {rbp=Oop [0]=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) storem::workload@13 (line 9)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fe8a4c06ea8:   movabs $0x7fe8a9bf5108,%rdi         ;   {external_word}
  0x00007fe8a4c06eb2:   and    $0xfffffffffffffff0,%rsp
  0x00007fe8a4c06eb6:   callq  0x00007fe8a925c010           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fe8a4c06ebb:   hlt    
 ;; B42: #	out( N1 ) <- in( B11 )  Freq: 9.70194e-07
  0x00007fe8a4c06ebc:   movabs $0x7fe8a9c6d780,%rdi         ;   {external_word}
  0x00007fe8a4c06ec6:   and    $0xfffffffffffffff0,%rsp
  0x00007fe8a4c06eca:   callq  0x00007fe8a925c010           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fe8a4c06ecf:   hlt    
 ;; B43: #	out( N1 ) <- in( B12 )  Freq: 9.70193e-07
  0x00007fe8a4c06ed0:   movabs $0x7fe8a9c6d780,%rdi         ;   {external_word}
  0x00007fe8a4c06eda:   and    $0xfffffffffffffff0,%rsp
  0x00007fe8a4c06ede:   callq  0x00007fe8a925c010           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fe8a4c06ee3:   hlt    
 ;; B44: #	out( N1 ) <- in( B25 )  Freq: 4.90485e-07
  0x00007fe8a4c06ee4:   movabs $0x7fe8a9c6d780,%rdi         ;   {external_word}
  0x00007fe8a4c06eee:   and    $0xfffffffffffffff0,%rsp
  0x00007fe8a4c06ef2:   callq  0x00007fe8a925c010           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fe8a4c06ef7:   hlt    
 ;; B45: #	out( N1 ) <- in( B26 )  Freq: 4.90484e-07
  0x00007fe8a4c06ef8:   movabs $0x7fe8a9c6d780,%rdi         ;   {external_word}
  0x00007fe8a4c06f02:   and    $0xfffffffffffffff0,%rsp
  0x00007fe8a4c06f06:   callq  0x00007fe8a925c010           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fe8a4c06f0b:   hlt    
 ;; B46: #	out( B37 ) <- in( B9 )  Freq: 4.62625e-07
  0x00007fe8a4c06f0c:   xor    %r13d,%r13d
  0x00007fe8a4c06f0f:   vmovdqu %ymm1,(%rsp)
  0x00007fe8a4c06f14:   xor    %r10d,%r10d
  0x00007fe8a4c06f17:   jmpq   0x00007fe8a4c06dd9
 ;; B47: #	out( B38 ) <- in( B27 )  Freq: 4.61631e-07
  0x00007fe8a4c06f1c:   vmovdqu %ymm1,(%rsp)
  0x00007fe8a4c06f21:   vmovdqu %ymm6,%ymm1
  0x00007fe8a4c06f25:   jmpq   0x00007fe8a4c06ddd
 ;; B48: #	out( N1 ) <- in( B1 )  Freq: 1.01328e-06
  0x00007fe8a4c06f2a:   mov    $0xfffffff6,%esi             ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
                                                            ; - jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
                                                            ; - storem::workload@43 (line 13)
  0x00007fe8a4c06f2f:   nop
  0x00007fe8a4c06f30:   vzeroupper 
  0x00007fe8a4c06f33:   callq  0x00007fe8a4be72a0           ; ImmutableOopMap {}
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - storem::workload@7 (line 9)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fe8a4c06f38:   movabs $0x7fe8a9bf5108,%rdi         ;   {external_word}
  0x00007fe8a4c06f42:   and    $0xfffffffffffffff0,%rsp
  0x00007fe8a4c06f46:   callq  0x00007fe8a925c010           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fe8a4c06f4b:   hlt    
 ;; B49: #	out( N1 ) <- in( B29 )  Freq: 1.01116e-06
  0x00007fe8a4c06f4c:   mov    $0xfffffff6,%esi
  0x00007fe8a4c06f51:   vmovd  %xmm0,%ebp                   ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
                                                            ; - jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
                                                            ; - storem::workload@43 (line 13)
  0x00007fe8a4c06f55:   nop
  0x00007fe8a4c06f56:   nop
  0x00007fe8a4c06f57:   nop
  0x00007fe8a4c06f58:   vzeroupper 
  0x00007fe8a4c06f5b:   callq  0x00007fe8a4be72a0           ; ImmutableOopMap {}
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - storem::workload@62 (line 15)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fe8a4c06f60:   movabs $0x7fe8a9bf5108,%rdi         ;   {external_word}
  0x00007fe8a4c06f6a:   and    $0xfffffffffffffff0,%rsp
  0x00007fe8a4c06f6e:   callq  0x00007fe8a925c010           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fe8a4c06f73:   hlt                                 ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
                                                            ; - jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
                                                            ; - storem::workload@43 (line 13)
  0x00007fe8a4c06f74:   movabs $0x7fe8a4c06da8,%r10         ;   {internal_word}
  0x00007fe8a4c06f7e:   mov    %r10,0x3e0(%r15)
  0x00007fe8a4c06f85:   jmpq   0x00007fe8a4be6420           ;   {runtime_call SafepointBlob}
  0x00007fe8a4c06f8a:   hlt    
  0x00007fe8a4c06f8b:   hlt    
  0x00007fe8a4c06f8c:   hlt    
  0x00007fe8a4c06f8d:   hlt    
  0x00007fe8a4c06f8e:   hlt    
  0x00007fe8a4c06f8f:   hlt    
[Exception Handler]
  0x00007fe8a4c06f90:   jmpq   0x00007fe8a4b49ea0           ;   {no_reloc}
[Deopt Handler Code]
  0x00007fe8a4c06f95:   callq  0x00007fe8a4c06f9a
  0x00007fe8a4c06f9a:   subq   $0x5,(%rsp)
  0x00007fe8a4c06f9f:   jmpq   0x00007fe8a4be52e0           ;   {runtime_call DeoptimizationBlob}
  0x00007fe8a4c06fa4:   hlt    
  0x00007fe8a4c06fa5:   hlt    
  0x00007fe8a4c06fa6:   hlt    
  0x00007fe8a4c06fa7:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Oops:
  0x00007fe8a4c06fa8:   0x000000011f97c880 a 'java/lang/Class'{0x000000011f97c880} = 'jdk/incubator/vector/Byte256Vector'
  0x00007fe8a4c06fb0:   0x000000011f97c910 a 'java/lang/Class'{0x000000011f97c910} = 'jdk/incubator/vector/Byte256Vector$Byte256Mask'
  0x00007fe8a4c06fb8:   0x000000011f97c838 a 'jdk/incubator/vector/ByteVector$ByteSpecies'{0x000000011f97c838}
  0x00007fe8a4c06fc0:   0x000000011f8a3948 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x000000011f8a3948}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Metadata:
  0x00007fe8a4c06fc8:   0x00007fe838510e08 {method} {0x00007fe838510e08} 'workload' '([B[BI)B' in 'storem'
  0x00007fe8a4c06fd0:   0x00007fe8386332f0 {method} {0x00007fe8386332f0} 'intoArray' '([BILjdk/incubator/vector/VectorMask;)V' in 'jdk/incubator/vector/ByteVector'
  0x00007fe8a4c06fd8:   0x00007fe8386ad8c8 {method} {0x00007fe8386ad8c8} 'intoArray0' '([BILjdk/incubator/vector/VectorMask;)V' in 'jdk/incubator/vector/Byte256Vector'
  0x00007fe8a4c06fe0:   0x00007fe838634c10 {method} {0x00007fe838634c10} 'intoArray0Template' '(Ljava/lang/Class;[BILjdk/incubator/vector/VectorMask;)V' in 'jdk/incubator/vector/ByteVector'
  0x00007fe8a4c06fe8:   0x00007fe838692b58 {method} {0x00007fe838692b58} 'fromLong' '(Ljdk/incubator/vector/VectorSpecies;J)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/VectorMask'
  0x00007fe8a4c06ff0:   0x00007fe838632568 {method} {0x00007fe838632568} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[BI)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector'
  0x00007fe8a4c06ff8:   0x00007fe8386ad190 {method} {0x00007fe8386ad190} 'fromArray0' '([BI)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/Byte256Vector'
  0x00007fe8a4c07000:   0x00007fe838633e78 {method} {0x00007fe838633e78} 'fromArray0Template' '([BI)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector'
  0x00007fe8a4c07008:   0x00007fe8386356b8 {method} {0x00007fe8386356b8} 'arrayAddress' '([BI)J' in 'jdk/incubator/vector/ByteVector'
  0x00007fe8a4c07010:   0x00007fe8386da728 {method} {0x00007fe8386da728} 'indexInRange' '(JJJ)Z' in 'jdk/incubator/vector/VectorIntrinsics'
  0x00007fe8a4c07018:   0x0000000800094a08 'jdk/incubator/vector/AbstractSpecies'
  0x00007fe8a4c07020:   0x0000000800094df0 'jdk/incubator/vector/ByteVector$ByteSpecies'
  0x00007fe8a4c07028:   0x00007fe838674f28 {method} {0x00007fe838674f28} 'loopBound' '(I)I' in 'jdk/incubator/vector/AbstractSpecies'
  0x00007fe8a4c07030:   0x0000000800094600 'jdk/incubator/vector/VectorSpecies'
  0x00007fe8a4c07038:   0x00007fe838672ac0 {method} {0x00007fe838672ac0} 'loopBound' '(I)I' in 'jdk/incubator/vector/VectorSpecies'
  0x00007fe8a4c07040:   0x00007fe8386743e8 {method} {0x00007fe8386743e8} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
  0x00007fe8a4c07048:   0x00007fe8386728c8 {method} {0x00007fe8386728c8} 'length' '()I' in 'jdk/incubator/vector/VectorSpecies'
  0x00007fe8a4c07050:   0x0000000800098a40 'jdk/incubator/vector/Byte256Vector$Byte256Mask'
  0x00007fe8a4c07058:   0x00007fe8386901c8 {method} {0x00007fe8386901c8} 'check' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/AbstractMask'
  0x00007fe8a4c07060:   0x0000000800096cc0 'jdk/incubator/vector/VectorMask'
  0x00007fe8a4c07068:   0x00007fe8386938e0 {method} {0x00007fe8386938e0} 'check' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/VectorMask'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
pc-bytecode offsets:
PcDesc(pc=0x00007fe8a4c0689f offset=ffffffff bits=0):
PcDesc(pc=0x00007fe8a4c068af offset=f bits=0):
   storem::workload@-1 (line 9)
PcDesc(pc=0x00007fe8a4c06996 offset=f6 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
   storem::workload@43 (line 13)
PcDesc(pc=0x00007fe8a4c0699e offset=fe bits=0):
   jdk.incubator.vector.VectorMask::fromLong@39 (line 242)
   storem::workload@22 (line 10)
PcDesc(pc=0x00007fe8a4c069cd offset=12d bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
   storem::workload@43 (line 13)
PcDesc(pc=0x00007fe8a4c069d2 offset=132 bits=0):
   jdk.incubator.vector.ByteVector::fromArray0Template@32 (line 3746)
   jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 907)
   jdk.incubator.vector.ByteVector::fromArray@24 (line 2981)
   storem::workload@32 (line 12)
PcDesc(pc=0x00007fe8a4c069dc offset=13c bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
   storem::workload@43 (line 13)
PcDesc(pc=0x00007fe8a4c06a92 offset=1f2 bits=0):
   storem::workload@57 (line 9)
PcDesc(pc=0x00007fe8a4c06ab0 offset=210 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
   storem::workload@43 (line 13)
PcDesc(pc=0x00007fe8a4c06ab6 offset=216 bits=0):
   jdk.incubator.vector.ByteVector::fromArray0Template@32 (line 3746)
   jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 907)
   jdk.incubator.vector.ByteVector::fromArray@24 (line 2981)
   storem::workload@32 (line 12)
PcDesc(pc=0x00007fe8a4c06b32 offset=292 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
   storem::workload@43 (line 13)
PcDesc(pc=0x00007fe8a4c06b38 offset=298 bits=0):
   jdk.incubator.vector.ByteVector::fromArray0Template@32 (line 3746)
   jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 907)
   jdk.incubator.vector.ByteVector::fromArray@24 (line 2981)
   storem::workload@32 (line 12)
PcDesc(pc=0x00007fe8a4c06bac offset=30c bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
   storem::workload@43 (line 13)
PcDesc(pc=0x00007fe8a4c06bb2 offset=312 bits=0):
   jdk.incubator.vector.ByteVector::fromArray0Template@32 (line 3746)
   jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 907)
   jdk.incubator.vector.ByteVector::fromArray@24 (line 2981)
   storem::workload@32 (line 12)
PcDesc(pc=0x00007fe8a4c06c21 offset=381 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
   storem::workload@43 (line 13)
PcDesc(pc=0x00007fe8a4c06c27 offset=387 bits=0):
   jdk.incubator.vector.ByteVector::fromArray0Template@32 (line 3746)
   jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 907)
   jdk.incubator.vector.ByteVector::fromArray@24 (line 2981)
   storem::workload@32 (line 12)
PcDesc(pc=0x00007fe8a4c06c8e offset=3ee bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
   storem::workload@43 (line 13)
PcDesc(pc=0x00007fe8a4c06ca5 offset=405 bits=1):
   storem::workload@57 (line 9)  reexecute=true
   Locals
    - l0: reg r14 [28],oop
    - l1: reg rdx [4],oop
    - l2: reg xmm0 [48],int
    - l3: reg r10 [20],int
    - l4: empty
    - l5: empty
PcDesc(pc=0x00007fe8a4c06d0c offset=46c bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
   storem::workload@43 (line 13)
PcDesc(pc=0x00007fe8a4c06d0f offset=46f bits=0):
   jdk.incubator.vector.ByteVector::arrayAddress@4 (line 3974)
   jdk.incubator.vector.ByteVector::fromArray0Template@20 (line 3748)
   jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 907)
   jdk.incubator.vector.ByteVector::fromArray@24 (line 2981)
   storem::workload@32 (line 12)
PcDesc(pc=0x00007fe8a4c06d16 offset=476 bits=0):
   jdk.incubator.vector.ByteVector::fromArray0Template@32 (line 3746)
   jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 907)
   jdk.incubator.vector.ByteVector::fromArray@24 (line 2981)
   storem::workload@32 (line 12)
PcDesc(pc=0x00007fe8a4c06d97 offset=4f7 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
   storem::workload@43 (line 13)
PcDesc(pc=0x00007fe8a4c06d9d offset=4fd bits=0):
   storem::workload@62 (line 15)
PcDesc(pc=0x00007fe8a4c06e0a offset=56a bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
   storem::workload@43 (line 13)
PcDesc(pc=0x00007fe8a4c06e18 offset=578 bits=1):
   jdk.incubator.vector.VectorIntrinsics::indexInRange@12 (line 49)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
   Expression stack
    - @0: reg rbp [10],int
   jdk.incubator.vector.ByteVector::intoArray@33 (line 3424)
   Locals
    - l0: obj[310]
    - l1: stack[56],oop
    - l2: stack[52]
    - l3: obj[311]
    - l4: a 'jdk/incubator/vector/ByteVector$ByteSpecies'{0x000000011f97c838}
   storem::workload@43 (line 13)
   Locals
    - l0: stack[56],oop
    - l1: stack[40],oop
    - l2: stack[64]
    - l3: stack[52]
    - l4: empty
    - l5: empty
   Objects
    - 310: jdk.incubator.vector.Byte256Vector stack[0],vector
    - 311: jdk.incubator.vector.Byte256Vector$Byte256Mask stack[96],vector
PcDesc(pc=0x00007fe8a4c06e33 offset=593 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
   storem::workload@43 (line 13)
PcDesc(pc=0x00007fe8a4c06e40 offset=5a0 bits=0):
   storem::workload@62 (line 15)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
   Expression stack
    - @0: reg rbp [10],oop
    - @1: stack[0]
PcDesc(pc=0x00007fe8a4c06e66 offset=5c6 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
   storem::workload@43 (line 13)
PcDesc(pc=0x00007fe8a4c06e74 offset=5d4 bits=1):
   storem::workload@13 (line 9)  reexecute=true
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8]
    - l3: 0
    - l4: empty
    - l5: empty
   Expression stack
    - @0: 0
    - @1: stack[12]
PcDesc(pc=0x00007fe8a4c06e9a offset=5fa bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
   storem::workload@43 (line 13)
PcDesc(pc=0x00007fe8a4c06ea8 offset=608 bits=1):
   storem::workload@13 (line 9)  reexecute=true
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8]
    - l3: 0
    - l4: empty
    - l5: empty
   Expression stack
    - @0: 0
    - @1: stack[12]
PcDesc(pc=0x00007fe8a4c06f2f offset=68f bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
   storem::workload@43 (line 13)
PcDesc(pc=0x00007fe8a4c06f38 offset=698 bits=0):
   storem::workload@7 (line 9)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
   Expression stack
    - @0: empty
    - @1: empty
    - @2: NULL
PcDesc(pc=0x00007fe8a4c06f55 offset=6b5 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
   storem::workload@43 (line 13)
PcDesc(pc=0x00007fe8a4c06f60 offset=6c0 bits=0):
   storem::workload@62 (line 15)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
   Expression stack
    - @0: NULL
    - @1: reg rbp [10],int
PcDesc(pc=0x00007fe8a4c06f74 offset=6d4 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
   storem::workload@43 (line 13)
PcDesc(pc=0x00007fe8a4c06fa9 offset=709 bits=0):
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
oop maps:ImmutableOopMapSet contains 7 OopMaps

ImmutableOopMap {rdx=Oop r14=Oop } pc offsets: 1029 
ImmutableOopMap {[40]=Oop [56]=Oop } pc offsets: 1400 
ImmutableOopMap {rbp=Oop } pc offsets: 1440 
ImmutableOopMap {rbp=Oop [0]=Oop } pc offsets: 1492 1544 
ImmutableOopMap {} pc offsets: 1688 1728 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
scopes:
ScopeDesc(pc=0x00007fe8a4c068af offset=f):
   storem::workload@-1 (line 9)
ScopeDesc(pc=0x00007fe8a4c06996 offset=f6):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
ScopeDesc(pc=0x00007fe8a4c06996 offset=f6):
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
ScopeDesc(pc=0x00007fe8a4c06996 offset=f6):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
ScopeDesc(pc=0x00007fe8a4c06996 offset=f6):
   storem::workload@43 (line 13)
ScopeDesc(pc=0x00007fe8a4c0699e offset=fe):
   jdk.incubator.vector.VectorMask::fromLong@39 (line 242)
ScopeDesc(pc=0x00007fe8a4c0699e offset=fe):
   storem::workload@22 (line 10)
ScopeDesc(pc=0x00007fe8a4c069cd offset=12d):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
ScopeDesc(pc=0x00007fe8a4c069cd offset=12d):
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
ScopeDesc(pc=0x00007fe8a4c069cd offset=12d):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
ScopeDesc(pc=0x00007fe8a4c069cd offset=12d):
   storem::workload@43 (line 13)
ScopeDesc(pc=0x00007fe8a4c069d2 offset=132):
   jdk.incubator.vector.ByteVector::fromArray0Template@32 (line 3746)
ScopeDesc(pc=0x00007fe8a4c069d2 offset=132):
   jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 907)
ScopeDesc(pc=0x00007fe8a4c069d2 offset=132):
   jdk.incubator.vector.ByteVector::fromArray@24 (line 2981)
ScopeDesc(pc=0x00007fe8a4c069d2 offset=132):
   storem::workload@32 (line 12)
ScopeDesc(pc=0x00007fe8a4c069dc offset=13c):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
ScopeDesc(pc=0x00007fe8a4c069dc offset=13c):
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
ScopeDesc(pc=0x00007fe8a4c069dc offset=13c):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
ScopeDesc(pc=0x00007fe8a4c069dc offset=13c):
   storem::workload@43 (line 13)
ScopeDesc(pc=0x00007fe8a4c06a92 offset=1f2):
   storem::workload@57 (line 9)
ScopeDesc(pc=0x00007fe8a4c06ab0 offset=210):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
ScopeDesc(pc=0x00007fe8a4c06ab0 offset=210):
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
ScopeDesc(pc=0x00007fe8a4c06ab0 offset=210):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
ScopeDesc(pc=0x00007fe8a4c06ab0 offset=210):
   storem::workload@43 (line 13)
ScopeDesc(pc=0x00007fe8a4c06ab6 offset=216):
   jdk.incubator.vector.ByteVector::fromArray0Template@32 (line 3746)
ScopeDesc(pc=0x00007fe8a4c06ab6 offset=216):
   jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 907)
ScopeDesc(pc=0x00007fe8a4c06ab6 offset=216):
   jdk.incubator.vector.ByteVector::fromArray@24 (line 2981)
ScopeDesc(pc=0x00007fe8a4c06ab6 offset=216):
   storem::workload@32 (line 12)
ScopeDesc(pc=0x00007fe8a4c06b32 offset=292):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
ScopeDesc(pc=0x00007fe8a4c06b32 offset=292):
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
ScopeDesc(pc=0x00007fe8a4c06b32 offset=292):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
ScopeDesc(pc=0x00007fe8a4c06b32 offset=292):
   storem::workload@43 (line 13)
ScopeDesc(pc=0x00007fe8a4c06b38 offset=298):
   jdk.incubator.vector.ByteVector::fromArray0Template@32 (line 3746)
ScopeDesc(pc=0x00007fe8a4c06b38 offset=298):
   jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 907)
ScopeDesc(pc=0x00007fe8a4c06b38 offset=298):
   jdk.incubator.vector.ByteVector::fromArray@24 (line 2981)
ScopeDesc(pc=0x00007fe8a4c06b38 offset=298):
   storem::workload@32 (line 12)
ScopeDesc(pc=0x00007fe8a4c06bac offset=30c):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
ScopeDesc(pc=0x00007fe8a4c06bac offset=30c):
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
ScopeDesc(pc=0x00007fe8a4c06bac offset=30c):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
ScopeDesc(pc=0x00007fe8a4c06bac offset=30c):
   storem::workload@43 (line 13)
ScopeDesc(pc=0x00007fe8a4c06bb2 offset=312):
   jdk.incubator.vector.ByteVector::fromArray0Template@32 (line 3746)
ScopeDesc(pc=0x00007fe8a4c06bb2 offset=312):
   jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 907)
ScopeDesc(pc=0x00007fe8a4c06bb2 offset=312):
   jdk.incubator.vector.ByteVector::fromArray@24 (line 2981)
ScopeDesc(pc=0x00007fe8a4c06bb2 offset=312):
   storem::workload@32 (line 12)
ScopeDesc(pc=0x00007fe8a4c06c21 offset=381):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
ScopeDesc(pc=0x00007fe8a4c06c21 offset=381):
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
ScopeDesc(pc=0x00007fe8a4c06c21 offset=381):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
ScopeDesc(pc=0x00007fe8a4c06c21 offset=381):
   storem::workload@43 (line 13)
ScopeDesc(pc=0x00007fe8a4c06c27 offset=387):
   jdk.incubator.vector.ByteVector::fromArray0Template@32 (line 3746)
ScopeDesc(pc=0x00007fe8a4c06c27 offset=387):
   jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 907)
ScopeDesc(pc=0x00007fe8a4c06c27 offset=387):
   jdk.incubator.vector.ByteVector::fromArray@24 (line 2981)
ScopeDesc(pc=0x00007fe8a4c06c27 offset=387):
   storem::workload@32 (line 12)
ScopeDesc(pc=0x00007fe8a4c06c8e offset=3ee):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
ScopeDesc(pc=0x00007fe8a4c06c8e offset=3ee):
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
ScopeDesc(pc=0x00007fe8a4c06c8e offset=3ee):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
ScopeDesc(pc=0x00007fe8a4c06c8e offset=3ee):
   storem::workload@43 (line 13)
ScopeDesc(pc=0x00007fe8a4c06ca5 offset=405):
   storem::workload@57 (line 9)  reexecute=true
   Locals
    - l0: reg r14 [28],oop
    - l1: reg rdx [4],oop
    - l2: reg xmm0 [48],int
    - l3: reg r10 [20],int
    - l4: empty
    - l5: empty
ScopeDesc(pc=0x00007fe8a4c06d0c offset=46c):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
ScopeDesc(pc=0x00007fe8a4c06d0c offset=46c):
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
ScopeDesc(pc=0x00007fe8a4c06d0c offset=46c):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
ScopeDesc(pc=0x00007fe8a4c06d0c offset=46c):
   storem::workload@43 (line 13)
ScopeDesc(pc=0x00007fe8a4c06d0f offset=46f):
   jdk.incubator.vector.ByteVector::arrayAddress@4 (line 3974)
ScopeDesc(pc=0x00007fe8a4c06d0f offset=46f):
   jdk.incubator.vector.ByteVector::fromArray0Template@20 (line 3748)
ScopeDesc(pc=0x00007fe8a4c06d0f offset=46f):
   jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 907)
ScopeDesc(pc=0x00007fe8a4c06d0f offset=46f):
   jdk.incubator.vector.ByteVector::fromArray@24 (line 2981)
ScopeDesc(pc=0x00007fe8a4c06d0f offset=46f):
   storem::workload@32 (line 12)
ScopeDesc(pc=0x00007fe8a4c06d16 offset=476):
   jdk.incubator.vector.ByteVector::fromArray0Template@32 (line 3746)
ScopeDesc(pc=0x00007fe8a4c06d16 offset=476):
   jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 907)
ScopeDesc(pc=0x00007fe8a4c06d16 offset=476):
   jdk.incubator.vector.ByteVector::fromArray@24 (line 2981)
ScopeDesc(pc=0x00007fe8a4c06d16 offset=476):
   storem::workload@32 (line 12)
ScopeDesc(pc=0x00007fe8a4c06d97 offset=4f7):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
ScopeDesc(pc=0x00007fe8a4c06d97 offset=4f7):
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
ScopeDesc(pc=0x00007fe8a4c06d97 offset=4f7):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
ScopeDesc(pc=0x00007fe8a4c06d97 offset=4f7):
   storem::workload@43 (line 13)
ScopeDesc(pc=0x00007fe8a4c06d9d offset=4fd):
   storem::workload@62 (line 15)
ScopeDesc(pc=0x00007fe8a4c06e0a offset=56a):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
ScopeDesc(pc=0x00007fe8a4c06e0a offset=56a):
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
ScopeDesc(pc=0x00007fe8a4c06e0a offset=56a):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
ScopeDesc(pc=0x00007fe8a4c06e0a offset=56a):
   storem::workload@43 (line 13)
ScopeDesc(pc=0x00007fe8a4c06e18 offset=578):
   jdk.incubator.vector.VectorIntrinsics::indexInRange@12 (line 49)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
   Expression stack
    - @0: reg rbp [10],int
ScopeDesc(pc=0x00007fe8a4c06e18 offset=578):
   jdk.incubator.vector.ByteVector::intoArray@33 (line 3424)
   Locals
    - l0: obj[310]
    - l1: stack[56],oop
    - l2: stack[52]
    - l3: obj[311]
    - l4: a 'jdk/incubator/vector/ByteVector$ByteSpecies'{0x000000011f97c838}
ScopeDesc(pc=0x00007fe8a4c06e18 offset=578):
   storem::workload@43 (line 13)
   Locals
    - l0: stack[56],oop
    - l1: stack[40],oop
    - l2: stack[64]
    - l3: stack[52]
    - l4: empty
    - l5: empty
   Objects
    - 310: jdk.incubator.vector.Byte256Vector stack[0],vector
    - 311: jdk.incubator.vector.Byte256Vector$Byte256Mask stack[96],vector
ScopeDesc(pc=0x00007fe8a4c06e33 offset=593):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
ScopeDesc(pc=0x00007fe8a4c06e33 offset=593):
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
ScopeDesc(pc=0x00007fe8a4c06e33 offset=593):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
ScopeDesc(pc=0x00007fe8a4c06e33 offset=593):
   storem::workload@43 (line 13)
ScopeDesc(pc=0x00007fe8a4c06e40 offset=5a0):
   storem::workload@62 (line 15)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
   Expression stack
    - @0: reg rbp [10],oop
    - @1: stack[0]
ScopeDesc(pc=0x00007fe8a4c06e66 offset=5c6):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
ScopeDesc(pc=0x00007fe8a4c06e66 offset=5c6):
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
ScopeDesc(pc=0x00007fe8a4c06e66 offset=5c6):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
ScopeDesc(pc=0x00007fe8a4c06e66 offset=5c6):
   storem::workload@43 (line 13)
ScopeDesc(pc=0x00007fe8a4c06e74 offset=5d4):
   storem::workload@13 (line 9)  reexecute=true
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8]
    - l3: 0
    - l4: empty
    - l5: empty
   Expression stack
    - @0: 0
    - @1: stack[12]
ScopeDesc(pc=0x00007fe8a4c06e9a offset=5fa):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
ScopeDesc(pc=0x00007fe8a4c06e9a offset=5fa):
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
ScopeDesc(pc=0x00007fe8a4c06e9a offset=5fa):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
ScopeDesc(pc=0x00007fe8a4c06e9a offset=5fa):
   storem::workload@43 (line 13)
ScopeDesc(pc=0x00007fe8a4c06ea8 offset=608):
   storem::workload@13 (line 9)  reexecute=true
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8]
    - l3: 0
    - l4: empty
    - l5: empty
   Expression stack
    - @0: 0
    - @1: stack[12]
ScopeDesc(pc=0x00007fe8a4c06f2f offset=68f):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
ScopeDesc(pc=0x00007fe8a4c06f2f offset=68f):
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
ScopeDesc(pc=0x00007fe8a4c06f2f offset=68f):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
ScopeDesc(pc=0x00007fe8a4c06f2f offset=68f):
   storem::workload@43 (line 13)
ScopeDesc(pc=0x00007fe8a4c06f38 offset=698):
   storem::workload@7 (line 9)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
   Expression stack
    - @0: empty
    - @1: empty
    - @2: NULL
ScopeDesc(pc=0x00007fe8a4c06f55 offset=6b5):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
ScopeDesc(pc=0x00007fe8a4c06f55 offset=6b5):
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
ScopeDesc(pc=0x00007fe8a4c06f55 offset=6b5):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
ScopeDesc(pc=0x00007fe8a4c06f55 offset=6b5):
   storem::workload@43 (line 13)
ScopeDesc(pc=0x00007fe8a4c06f60 offset=6c0):
   storem::workload@62 (line 15)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
   Expression stack
    - @0: NULL
    - @1: reg rbp [10],int
ScopeDesc(pc=0x00007fe8a4c06f74 offset=6d4):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
ScopeDesc(pc=0x00007fe8a4c06f74 offset=6d4):
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
ScopeDesc(pc=0x00007fe8a4c06f74 offset=6d4):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
ScopeDesc(pc=0x00007fe8a4c06f74 offset=6d4):
   storem::workload@43 (line 13)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
relocations:
         @0x00007fe8a4c06808: 01ff
relocInfo@0x00007fe8a4c06808 [type=0(none) addr=0x00007fe8a4c06a9f offset=511]
         @0x00007fe8a4c0680a: 01ff
relocInfo@0x00007fe8a4c0680a [type=0(none) addr=0x00007fe8a4c06c9e offset=511]
         @0x00007fe8a4c0680c: 5007
relocInfo@0x00007fe8a4c0680c [type=10(poll) addr=0x00007fe8a4c06ca5 offset=7]
         @0x00007fe8a4c0680e: 5903
relocInfo@0x00007fe8a4c0680e [type=11(poll_return) addr=0x00007fe8a4c06da8 offset=259]
         @0x00007fe8a4c06810: 326b
relocInfo@0x00007fe8a4c06810 [type=6(runtime_call) addr=0x00007fe8a4c06e13 offset=107 format=1] | [destination=0x00007fe8a4be72a0]
         @0x00007fe8a4c06812: 7c03a9bf51087fe83805
relocInfo@0x00007fe8a4c0681a [type=7(external_word) addr=0x00007fe8a4c06e18 offset=5 data={a9bf51087fe8}] | [target=0x00007fe8a9bf5108]
         @0x00007fe8a4c0681c: 320e
relocInfo@0x00007fe8a4c0681c [type=6(runtime_call) addr=0x00007fe8a4c06e26 offset=14 format=1] | [destination=0x00007fe8a925c010]
         @0x00007fe8a4c0681e: 3215
relocInfo@0x00007fe8a4c0681e [type=6(runtime_call) addr=0x00007fe8a4c06e3b offset=21 format=1] | [destination=0x00007fe8a4be72a0]
         @0x00007fe8a4c06820: 7c03a9bf51087fe83805
relocInfo@0x00007fe8a4c06828 [type=7(external_word) addr=0x00007fe8a4c06e40 offset=5 data={a9bf51087fe8}] | [target=0x00007fe8a9bf5108]
         @0x00007fe8a4c0682a: 320e
relocInfo@0x00007fe8a4c0682a [type=6(runtime_call) addr=0x00007fe8a4c06e4e offset=14 format=1] | [destination=0x00007fe8a925c010]
         @0x00007fe8a4c0682c: 3221
relocInfo@0x00007fe8a4c0682c [type=6(runtime_call) addr=0x00007fe8a4c06e6f offset=33 format=1] | [destination=0x00007fe8a4be72a0]
         @0x00007fe8a4c0682e: 7c03a9bf51087fe83805
relocInfo@0x00007fe8a4c06836 [type=7(external_word) addr=0x00007fe8a4c06e74 offset=5 data={a9bf51087fe8}] | [target=0x00007fe8a9bf5108]
         @0x00007fe8a4c06838: 320e
relocInfo@0x00007fe8a4c06838 [type=6(runtime_call) addr=0x00007fe8a4c06e82 offset=14 format=1] | [destination=0x00007fe8a925c010]
         @0x00007fe8a4c0683a: 3221
relocInfo@0x00007fe8a4c0683a [type=6(runtime_call) addr=0x00007fe8a4c06ea3 offset=33 format=1] | [destination=0x00007fe8a4be72a0]
         @0x00007fe8a4c0683c: 7c03a9bf51087fe83805
relocInfo@0x00007fe8a4c06844 [type=7(external_word) addr=0x00007fe8a4c06ea8 offset=5 data={a9bf51087fe8}] | [target=0x00007fe8a9bf5108]
         @0x00007fe8a4c06846: 320e
relocInfo@0x00007fe8a4c06846 [type=6(runtime_call) addr=0x00007fe8a4c06eb6 offset=14 format=1] | [destination=0x00007fe8a925c010]
         @0x00007fe8a4c06848: 7c03a9c6d7807fe83806
relocInfo@0x00007fe8a4c06850 [type=7(external_word) addr=0x00007fe8a4c06ebc offset=6 data={a9c6d7807fe8}] | [target=0x00007fe8a9c6d780]
         @0x00007fe8a4c06852: 320e
relocInfo@0x00007fe8a4c06852 [type=6(runtime_call) addr=0x00007fe8a4c06eca offset=14 format=1] | [destination=0x00007fe8a925c010]
         @0x00007fe8a4c06854: 7c03a9c6d7807fe83806
relocInfo@0x00007fe8a4c0685c [type=7(external_word) addr=0x00007fe8a4c06ed0 offset=6 data={a9c6d7807fe8}] | [target=0x00007fe8a9c6d780]
         @0x00007fe8a4c0685e: 320e
relocInfo@0x00007fe8a4c0685e [type=6(runtime_call) addr=0x00007fe8a4c06ede offset=14 format=1] | [destination=0x00007fe8a925c010]
         @0x00007fe8a4c06860: 7c03a9c6d7807fe83806
relocInfo@0x00007fe8a4c06868 [type=7(external_word) addr=0x00007fe8a4c06ee4 offset=6 data={a9c6d7807fe8}] | [target=0x00007fe8a9c6d780]
         @0x00007fe8a4c0686a: 320e
relocInfo@0x00007fe8a4c0686a [type=6(runtime_call) addr=0x00007fe8a4c06ef2 offset=14 format=1] | [destination=0x00007fe8a925c010]
         @0x00007fe8a4c0686c: 7c03a9c6d7807fe83806
relocInfo@0x00007fe8a4c06874 [type=7(external_word) addr=0x00007fe8a4c06ef8 offset=6 data={a9c6d7807fe8}] | [target=0x00007fe8a9c6d780]
         @0x00007fe8a4c06876: 320e
relocInfo@0x00007fe8a4c06876 [type=6(runtime_call) addr=0x00007fe8a4c06f06 offset=14 format=1] | [destination=0x00007fe8a925c010]
         @0x00007fe8a4c06878: 322d
relocInfo@0x00007fe8a4c06878 [type=6(runtime_call) addr=0x00007fe8a4c06f33 offset=45 format=1] | [destination=0x00007fe8a4be72a0]
         @0x00007fe8a4c0687a: 7c03a9bf51087fe83805
relocInfo@0x00007fe8a4c06882 [type=7(external_word) addr=0x00007fe8a4c06f38 offset=5 data={a9bf51087fe8}] | [target=0x00007fe8a9bf5108]
         @0x00007fe8a4c06884: 320e
relocInfo@0x00007fe8a4c06884 [type=6(runtime_call) addr=0x00007fe8a4c06f46 offset=14 format=1] | [destination=0x00007fe8a925c010]
         @0x00007fe8a4c06886: 3215
relocInfo@0x00007fe8a4c06886 [type=6(runtime_call) addr=0x00007fe8a4c06f5b offset=21 format=1] | [destination=0x00007fe8a4be72a0]
         @0x00007fe8a4c06888: 7c03a9bf51087fe83805
relocInfo@0x00007fe8a4c06890 [type=7(external_word) addr=0x00007fe8a4c06f60 offset=5 data={a9bf51087fe8}] | [target=0x00007fe8a9bf5108]
         @0x00007fe8a4c06892: 320e
relocInfo@0x00007fe8a4c06892 [type=6(runtime_call) addr=0x00007fe8a4c06f6e offset=14 format=1] | [destination=0x00007fe8a925c010]
         @0x00007fe8a4c06894: 79cc4006
relocInfo@0x00007fe8a4c06896 [type=8(internal_word) addr=0x00007fe8a4c06f74 offset=6 data=460] | [target=0x00007fe8a4c06da8]
         @0x00007fe8a4c06898: 3211
relocInfo@0x00007fe8a4c06898 [type=6(runtime_call) addr=0x00007fe8a4c06f85 offset=17 format=1] | [destination=0x00007fe8a4be6420]
         @0x00007fe8a4c0689a: 000b
relocInfo@0x00007fe8a4c0689a [type=0(none) addr=0x00007fe8a4c06f90 offset=11]
         @0x00007fe8a4c0689c: 3200
relocInfo@0x00007fe8a4c0689c [type=6(runtime_call) addr=0x00007fe8a4c06f90 offset=0 format=1] | [destination=0x00007fe8a4b49ea0]
         @0x00007fe8a4c0689e: 320f
relocInfo@0x00007fe8a4c0689e [type=6(runtime_call) addr=0x00007fe8a4c06f9f offset=15 format=1] | [destination=0x00007fe8a4be52e0]
         @0x00007fe8a4c068a0: 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Dependencies:
Dependency of type abstract_with_unique_concrete_subtype
  context = *jdk.incubator.vector.AbstractSpecies
  class   = jdk.incubator.vector.ByteVector$ByteSpecies
   [nmethod<=klass]jdk.incubator.vector.AbstractSpecies
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.ByteVector$ByteSpecies
  method  = {method} {0x00007fe838674f28} 'loopBound' '(I)I' in 'jdk/incubator/vector/AbstractSpecies'
  class   = jdk.incubator.vector.VectorSpecies
  method  = *{method} {0x00007fe838672ac0} 'loopBound' '(I)I' in 'jdk/incubator/vector/VectorSpecies'
   [nmethod<=klass]jdk.incubator.vector.ByteVector$ByteSpecies
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.ByteVector$ByteSpecies
  method  = {method} {0x00007fe8386743e8} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
  class   = jdk.incubator.vector.VectorSpecies
  method  = *{method} {0x00007fe8386728c8} 'length' '()I' in 'jdk/incubator/vector/VectorSpecies'
   [nmethod<=klass]jdk.incubator.vector.ByteVector$ByteSpecies
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.Byte256Vector$Byte256Mask
  method  = {method} {0x00007fe8386901c8} 'check' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/AbstractMask'
  class   = jdk.incubator.vector.VectorMask
  method  = *{method} {0x00007fe8386938e0} 'check' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/VectorMask'
   [nmethod<=klass]jdk.incubator.vector.Byte256Vector$Byte256Mask
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ExceptionHandlerTable (size = 0 bytes)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ImplicitExceptionTable (size = 3 entries, 28 bytes):
{
   < 0x00007fe8a4c068b3, 0x00007fe8a4c06f2a > < 0x00007fe8a4c069b4, 0x00007fe8a4c06e54 > < 0x00007fe8a4c06d85, 0x00007fe8a4c06f4c > 
}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded oops:
#0: 0x0000000000000000 NULL-oop
#1: 0x000000011f97c880 a 'java/lang/Class'{0x000000011f97c880} = 'jdk/incubator/vector/Byte256Vector'
#2: 0x000000011f97c910 a 'java/lang/Class'{0x000000011f97c910} = 'jdk/incubator/vector/Byte256Vector$Byte256Mask'
#3: 0x000000011f97c838 a 'jdk/incubator/vector/ByteVector$ByteSpecies'{0x000000011f97c838}
#4: 0x000000011f8a3948 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x000000011f8a3948}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded metadata:
# 0: 0x0000000000000000 NULL-oop
# 1: 0x00007fe838510e08 {method} {0x00007fe838510e08} 'workload' '([B[BI)B' in 'storem'
# 2: 0x00007fe8386332f0 {method} {0x00007fe8386332f0} 'intoArray' '([BILjdk/incubator/vector/VectorMask;)V' in 'jdk/incubator/vector/ByteVector'
# 3: 0x00007fe8386ad8c8 {method} {0x00007fe8386ad8c8} 'intoArray0' '([BILjdk/incubator/vector/VectorMask;)V' in 'jdk/incubator/vector/Byte256Vector'
# 4: 0x00007fe838634c10 {method} {0x00007fe838634c10} 'intoArray0Template' '(Ljava/lang/Class;[BILjdk/incubator/vector/VectorMask;)V' in 'jdk/incubator/vector/ByteVector'
# 5: 0x00007fe838692b58 {method} {0x00007fe838692b58} 'fromLong' '(Ljdk/incubator/vector/VectorSpecies;J)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/VectorMask'
# 6: 0x00007fe838632568 {method} {0x00007fe838632568} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[BI)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector'
# 7: 0x00007fe8386ad190 {method} {0x00007fe8386ad190} 'fromArray0' '([BI)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/Byte256Vector'
# 8: 0x00007fe838633e78 {method} {0x00007fe838633e78} 'fromArray0Template' '([BI)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector'
# 9: 0x00007fe8386356b8 {method} {0x00007fe8386356b8} 'arrayAddress' '([BI)J' in 'jdk/incubator/vector/ByteVector'
#10: 0x00007fe8386da728 {method} {0x00007fe8386da728} 'indexInRange' '(JJJ)Z' in 'jdk/incubator/vector/VectorIntrinsics'
#11: 0x0000000800094a08 'jdk/incubator/vector/AbstractSpecies'
#12: 0x0000000800094df0 'jdk/incubator/vector/ByteVector$ByteSpecies'
#13: 0x00007fe838674f28 {method} {0x00007fe838674f28} 'loopBound' '(I)I' in 'jdk/incubator/vector/AbstractSpecies'
#14: 0x0000000800094600 'jdk/incubator/vector/VectorSpecies'
#15: 0x00007fe838672ac0 {method} {0x00007fe838672ac0} 'loopBound' '(I)I' in 'jdk/incubator/vector/VectorSpecies'
#16: 0x00007fe8386743e8 {method} {0x00007fe8386743e8} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
#17: 0x00007fe8386728c8 {method} {0x00007fe8386728c8} 'length' '()I' in 'jdk/incubator/vector/VectorSpecies'
#18: 0x0000000800098a40 'jdk/incubator/vector/Byte256Vector$Byte256Mask'
#19: 0x00007fe8386901c8 {method} {0x00007fe8386901c8} 'check' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/AbstractMask'
#20: 0x0000000800096cc0 'jdk/incubator/vector/VectorMask'
#21: 0x00007fe8386938e0 {method} {0x00007fe8386938e0} 'check' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/VectorMask'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
r[0] = 0
r[1] = 1
r[2] = 2
r[3] = 3
r[4] = 4
r[5] = 5
r[6] = 6
r[7] = 7
r[8] = 8
r[9] = 9
r[10] = 10
r[11] = 11
r[12] = 12
r[13] = 13
r[14] = 14
r[15] = 0
r[16] = 0
r[17] = 0
r[18] = 0
r[19] = 0
r[20] = 0
r[21] = 0
r[22] = 0
r[23] = 0
r[24] = 0
r[25] = 0
r[26] = 0
r[27] = 0
r[28] = 0
r[29] = 0
r[30] = 0
r[31] = 0
[Res] -16 [Time] 85 ms 
------------------------------------------------------------------------
static storem::workload([B[BI)B
  interpreter_invocation_count:        4596
  invocation_counter:                  4596
  backedge_counter:                  147072
  decompile_count:                        0
  mdo size: 704 bytes

0 iconst_0
1 istore_3
2 iload_3
3 getstatic 7 <storem.SPECIES/Ljdk/incubator/vector/VectorSpecies;> 
6 aload_1
7 arraylength
8 invokeinterface 13 <jdk/incubator/vector/VectorSpecies.loopBound(I)I> 
  0   bci: 8    VirtualCallData     count(0) nonprofiled_count(0) entries(1)
                                    'jdk/incubator/vector/ByteVector$ByteSpecies'(146294 1.00)
13 if_icmpge 60
  56  bci: 13   BranchData          taken(4342) displacement(200)
                                    not taken(141952)
16 getstatic 7 <storem.SPECIES/Ljdk/incubator/vector/VectorSpecies;> 
19 ldc2_w 32767
22 invokestatic 21 <jdk/incubator/vector/VectorMask.fromLong(Ljdk/incubator/vector/VectorSpecies;J)Ljdk/incubator/vector/VectorMask;> 
  88  bci: 22   CounterData         count(141952)
25 astore #4
27 getstatic 7 <storem.SPECIES/Ljdk/incubator/vector/VectorSpecies;> 
30 aload_1
31 iload_3
32 invokestatic 27 <jdk/incubator/vector/ByteVector.fromArray(Ljdk/incubator/vector/VectorSpecies;[BI)Ljdk/incubator/vector/ByteVector;> 
  104 bci: 32   CounterData         count(141952)
35 astore #5
37 aload #5
39 fast_aload_0
40 iload_3
41 aload #4
43 invokevirtual 33 <jdk/incubator/vector/ByteVector.intoArray([BILjdk/incubator/vector/VectorMask;)V> 
  120 bci: 43   VirtualCallData     count(141952) nonprofiled_count(0) entries(0)
46 iload_3
47 getstatic 7 <storem.SPECIES/Ljdk/incubator/vector/VectorSpecies;> 
50 invokeinterface 37 <jdk/incubator/vector/VectorSpecies.length()I> 
  176 bci: 50   VirtualCallData     count(0) nonprofiled_count(0) entries(1)
                                    'jdk/incubator/vector/ByteVector$ByteSpecies'(141952 1.00)
55 iadd
56 istore_3
57 goto 2
  232 bci: 57   JumpData            taken(141952) displacement(-232)
60 fast_aload_0
61 iload_2
62 baload
63 ireturn
------------------------------------------------------------------------
Total MDO size: 704 bytes
