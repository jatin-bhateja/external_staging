CompileCommand: print loadm.workload bool print = true

============================= C2-compiled nmethod ==============================
#r018 rsi:rsi   : parm 0: byte[int:>=0]:exact *
#r016 rdx:rdx   : parm 1: byte[int:>=0]:exact *
#r010 rcx   : parm 2: int
# -- Old rsp -- Framesize: 96 --
#r591 rsp+92: in_preserve
#r590 rsp+88: return address
#r589 rsp+84: in_preserve
#r588 rsp+80: saved fp register
#r587 rsp+76: pad2, stack alignment
#r586 rsp+72: pad2, stack alignment
#r585 rsp+68: Fixed slot 1
#r584 rsp+64: Fixed slot 0
#r607 rsp+60: spill
#r606 rsp+56: spill
#r605 rsp+52: spill
#r604 rsp+48: spill
#r603 rsp+44: spill
#r602 rsp+40: spill
#r601 rsp+36: spill
#r600 rsp+32: spill
#r599 rsp+28: spill
#r598 rsp+24: spill
#r597 rsp+20: spill
#r596 rsp+16: spill
#r595 rsp+12: spill
#r594 rsp+ 8: spill
#r593 rsp+ 4: spill
#r592 rsp+ 0: spill
#
----------------------- MetaData before Compile_id = 198 ------------------------
{method}
 - this oop:          0x00007fce54511638
 - method holder:     'loadm'
 - constants:         0x00007fce54511080 constant pool [114]/operands[10] {0x00007fce54511080} for 'loadm' cache=0x00007fce54511950
 - access:            0x81000009  public static 
 - name:              'workload'
 - signature:         '([B[BI)B'
 - max stack:         5
 - max locals:        5
 - size of params:    3
 - method size:       14
 - vtable index:      -2
 - i2i entry:         0x00007fcebd01f400
 - adapters:          AHE@0x00007fcec037f720: 0xbba i2c: 0x00007fcebd0baae0 c2i: 0x00007fcebd0babc7 c2iUV: 0x00007fcebd0bab91 c2iNCI: 0x00007fcebd0bac01
 - compiled entry     0x00007fcebd0babc7
 - code size:         34
 - code start:        0x00007fce54511608
 - code end (excl):   0x00007fce5451162a
 - method data:       0x00007fce54511c70
 - checked ex length: 0
 - linenumber start:  0x00007fce5451162a
 - localvar length:   0

------------------------ OptoAssembly for Compile_id = 198 -----------------------
#
#  byte ( byte[int:>=0]:exact *, byte[int:>=0]:exact *, int )
#
000     N1: #	out( B1 ) <- in( B10 B9 B12 B11 B7 B8 B13 )  Freq: 1

000     B1: #	out( B12 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
000     # stack bang (496 bytes)
	pushq   rbp	# Save rbp
	subq    rsp, #80	# Create frame

00c     movq    R10, RSI	# spill
00f     movl    R11, [RDX + #12 (8-bit)]	# range
013     NullCheck RDX

013     B2: #	out( B11 B3 ) <- in( B1 )  Freq: 0.999999
013     movslq  R11, R11	# i2l
016     addq    R11, #-32	# long
01a     movl    R8, #15	# long (unsigned 32-bit)
020     long_to_mask_avx XMM1, R8	! using RBX, R9, XMM0, as TEMP
        nop 	# 7 bytes pad for loops and calls
0a0     cmpq    R11, #992
0a7     jl     B11  P=0.000000 C=7049.000000

0ad     B3: #	out( B13 B4 ) <- in( B2 )  Freq: 0.999999
0ad     movl    RBX, [RSI + #12 (8-bit)]	# range
0b0     NullCheck RSI

0b0     B4: #	out( B10 B5 ) <- in( B3 )  Freq: 0.999997
0b0     movl    RBP, RBX	# spill
0b2     addl    RBP, #-31	# int
0b5     vector_loadmask_byte XMM0, XMM1
	
0bd     vector_masked_load XMM5, [RDX + #1008 (32-bit)], XMM0 	! using XMM1, XMM2, XMM3, XMM4, RDI, RSI, R8, R11, RAX and R9
153     testl   RBP, RBP
155     jl     B10  P=0.000001 C=-1.000000

15b     B5: #	out( B8 B6 ) <- in( B4 )  Freq: 0.999996
        nop 	# 5 bytes pad for loops and calls
160     cmpl    RBX, #31
163     je,s   B8  P=0.000001 C=-1.000000

165     B6: #	out( B9 B7 ) <- in( B5 )  Freq: 0.999995
165     store_vector [R10 + #16 (8-bit)],XMM5
	
16b     cmpl    RCX, RBX	# unsigned
16d     jae,us  B9  P=0.000001 C=-1.000000

16f     B7: #	out( N1 ) <- in( B6 )  Freq: 0.999994
16f     movsbl  RAX, [R10 + #16 + RCX]	# byte
175     vzeroupper
	addq    rsp, 80	# Destroy frame
	popq    rbp
	cmpq     rsp, poll_offset[r15_thread] 
	ja       #safepoint_stub	# Safepoint: poll for GC

18a     ret

18b     B8: #	out( N1 ) <- in( B5 )  Freq: 1.01328e-06
18b     movl    RSI, #-28	# int
190     movl    [rsp + #8], RCX	# spill
194     movq    [rsp + #16], R10	# spill
199     vmovdqu [rsp + 32],XMM5	# spill
        nop 	# 1 bytes pad for loops and calls
1a0     call,static  wrapper for: uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')
        # java.util.Objects::checkIndex @ bci:3 (line 385) L[0]=_ L[1]=_ STK[0]=#0 STK[1]=RBP STK[2]=#NULL
        # jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize @ bci:43 (line 57) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.ByteVector::intoArray @ bci:7 (line 3380) L[0]=#ScObj0 L[1]=rsp + #16 L[2]=_ L[3]=_
        # ScObj0 jdk/incubator/vector/Byte256Vector={ [payload :0]=rsp + #32 }
        # loadm::workload @ bci:27 (line 14) L[0]=rsp + #16 L[1]=_ L[2]=rsp + #8 L[3]=_ L[4]=_
        # OopMap {[16]=Oop off=424/0x1a8}
1a8     stop	# ShouldNotReachHere

1bc     B9: #	out( N1 ) <- in( B6 )  Freq: 1.01327e-06
1bc     movl    RSI, #-28	# int
1c1     movq    RBP, R10	# spill
1c4     movl    [rsp + #0], RCX	# spill
        nop 	# 1 bytes pad for loops and calls
1c8     call,static  wrapper for: uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')
        # loadm::workload @ bci:32 (line 16) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ STK[0]=RBP STK[1]=rsp + #0
        # OopMap {rbp=Oop off=464/0x1d0}
1d0     stop	# ShouldNotReachHere

1e4     B10: #	out( N1 ) <- in( B4 )  Freq: 9.99997e-07
1e4     movl    RSI, #-52	# int
1e9     movl    [rsp + #8], RCX	# spill
1ed     movq    [rsp + #16], R10	# spill
1f2     vmovdqu [rsp + 32],XMM5	# spill
1f8     call,static  wrapper for: uncommon_trap(reason='intrinsic_or_type_checked_inlining' action='make_not_entrant' debug_id='0')
        # java.util.Objects::checkIndex @ bci:3 (line 385) L[0]=_ L[1]=_ STK[0]=#0 STK[1]=RBP STK[2]=#NULL
        # jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize @ bci:43 (line 57) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.ByteVector::intoArray @ bci:7 (line 3380) L[0]=#ScObj0 L[1]=rsp + #16 L[2]=_ L[3]=_
        # ScObj0 jdk/incubator/vector/Byte256Vector={ [payload :0]=rsp + #32 }
        # loadm::workload @ bci:27 (line 14) L[0]=rsp + #16 L[1]=_ L[2]=rsp + #8 L[3]=_ L[4]=_
        # OopMap {[16]=Oop off=512/0x200}
200     stop	# ShouldNotReachHere

214     B11: #	out( N1 ) <- in( B2 )  Freq: 4.99999e-07
214     movl    RSI, #-187	# int
219     movl    R8, #992	# long (unsigned 32-bit)
21f     cmpq    R8, R11	# CmpL3
	movl    RBP, -1
	jl,s    done
	setne   RBP
	movzbl  RBP, RBP
	done:
231     movq    [rsp + #0], R10	# spill
235     movl    [rsp + #8], RCX	# spill
239     movq    [rsp + #16], RDX	# spill
23e     vmovdqu [rsp + 32],XMM1	# spill
244     call,static  wrapper for: uncommon_trap(reason='unstable_if' action='reinterpret' debug_id='0')
        # jdk.incubator.vector.VectorIntrinsics::indexInRange @ bci:12 (line 49) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ STK[0]=RBP
        # jdk.incubator.vector.ByteVector::fromArray @ bci:17 (line 3011) L[0]=_ L[1]=rsp + #16 L[2]=#992 L[3]=#ScObj0 L[4]=#Ptr0x00007fce381cf8c8
        # ScObj0 jdk/incubator/vector/Byte256Vector$Byte256Mask={ [payload :0]=rsp + #32 }
        # loadm::workload @ bci:18 (line 13) L[0]=rsp + #0 L[1]=_ L[2]=rsp + #8 L[3]=_ L[4]=_
        # OopMap {[0]=Oop [16]=Oop off=588/0x24c}
24c     stop	# ShouldNotReachHere

260     B12: #	out( N1 ) <- in( B1 )  Freq: 1.01328e-06
260     movl    RSI, #-10	# int
        nop 	# 3 bytes pad for loops and calls
268     call,static  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # jdk.incubator.vector.ByteVector::fromArray @ bci:15 (line 3011) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ STK[0]=_ STK[1]=_ STK[2]=_ STK[3]=_ STK[4]=#NULL
        # loadm::workload @ bci:18 (line 13) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_
        # OopMap {off=624/0x270}
270     stop	# ShouldNotReachHere

284     B13: #	out( N1 ) <- in( B3 )  Freq: 1.01328e-06
284     movl    RSI, #-10	# int
        nop 	# 3 bytes pad for loops and calls
28c     call,static  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # jdk.incubator.vector.ByteVector::intoArray @ bci:6 (line 3380) L[0]=_ L[1]=_ L[2]=_ L[3]=_ STK[0]=_ STK[1]=_ STK[2]=#NULL
        # loadm::workload @ bci:27 (line 14) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_
        # OopMap {off=660/0x294}
294     stop	# ShouldNotReachHere

--------------------------------------------------------------------------------
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     585  198             loadm::workload (34 bytes)
 total in heap  [0x00007fcebd157590,0x00007fcebd157d80] = 2032
 relocation     [0x00007fcebd157708,0x00007fcebd157770] = 104
 main code      [0x00007fcebd157780,0x00007fcebd157a40] = 704
 stub code      [0x00007fcebd157a40,0x00007fcebd157a58] = 24
 oops           [0x00007fcebd157a58,0x00007fcebd157a78] = 32
 metadata       [0x00007fcebd157a78,0x00007fcebd157ae8] = 112
 scopes data    [0x00007fcebd157ae8,0x00007fcebd157c28] = 320
 scopes pcs     [0x00007fcebd157c28,0x00007fcebd157d58] = 304
 dependencies   [0x00007fcebd157d58,0x00007fcebd157d68] = 16
 nul chk table  [0x00007fcebd157d68,0x00007fcebd157d80] = 24

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x00007fce54511638} 'workload' '([B[BI)B' in 'loadm'
  # parm0:    rsi:rsi   = '[B'
  # parm1:    rdx:rdx   = '[B'
  # parm2:    rcx       = int
  #           [sp+0x60]  (sp of caller)
 ;; N1: #	out( B1 ) <- in( B10 B9 B12 B11 B7 B8 B13 )  Freq: 1
 ;; B1: #	out( B12 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x00007fcebd157780:   mov    %eax,-0x18000(%rsp)
  0x00007fcebd157787:   push   %rbp
  0x00007fcebd157788:   sub    $0x50,%rsp                   ;*synchronization entry
                                                            ; - loadm::workload@-1 (line 12)
  0x00007fcebd15778c:   mov    %rsi,%r10
  0x00007fcebd15778f:   mov    0xc(%rdx),%r11d              ; implicit exception: dispatches to 0x00007fcebd1579e0
 ;; B2: #	out( B11 B3 ) <- in( B1 )  Freq: 0.999999
  0x00007fcebd157793:   movslq %r11d,%r11
  0x00007fcebd157796:   add    $0xffffffffffffffe0,%r11
  0x00007fcebd15779a:   mov    $0xf,%r8d
  0x00007fcebd1577a0:   movabs $0x101010101010101,%rbx
  0x00007fcebd1577aa:   pdep   %rbx,%r8,%rbx
  0x00007fcebd1577af:   mov    %r8,%r9
  0x00007fcebd1577b2:   vpxor  %ymm0,%ymm0,%ymm0
  0x00007fcebd1577b6:   vmovq  %rbx,%xmm0
  0x00007fcebd1577bb:   vmovq  %rbx,%xmm1
  0x00007fcebd1577c0:   movabs $0x101010101010101,%rbx
  0x00007fcebd1577ca:   shr    $0x8,%r9
  0x00007fcebd1577ce:   pdep   %rbx,%r9,%rbx
  0x00007fcebd1577d3:   vpinsrq $0x1,%rbx,%xmm0,%xmm0
  0x00007fcebd1577d9:   vmovdqu %ymm0,%ymm1
  0x00007fcebd1577dd:   vpxor  %xmm0,%xmm0,%xmm0
  0x00007fcebd1577e1:   movabs $0x101010101010101,%rbx
  0x00007fcebd1577eb:   shr    $0x8,%r9
  0x00007fcebd1577ef:   pdep   %rbx,%r9,%rbx
  0x00007fcebd1577f4:   vpinsrq $0x0,%rbx,%xmm0,%xmm0
  0x00007fcebd1577fa:   movabs $0x101010101010101,%rbx
  0x00007fcebd157804:   shr    $0x8,%r9
  0x00007fcebd157808:   pdep   %rbx,%r9,%rbx
  0x00007fcebd15780d:   vpinsrq $0x1,%rbx,%xmm0,%xmm0
  0x00007fcebd157813:   vinsertf128 $0x1,%xmm0,%ymm1,%ymm1
  0x00007fcebd157819:   nop
  0x00007fcebd15781a:   nop
  0x00007fcebd15781b:   nop
  0x00007fcebd15781c:   nop
  0x00007fcebd15781d:   nop
  0x00007fcebd15781e:   nop
  0x00007fcebd15781f:   nop
  0x00007fcebd157820:   cmp    $0x3e0,%r11
  0x00007fcebd157827:   jl     0x00007fcebd157994
 ;; B3: #	out( B13 B4 ) <- in( B2 )  Freq: 0.999999
  0x00007fcebd15782d:   mov    0xc(%rsi),%ebx               ; implicit exception: dispatches to 0x00007fcebd157a04
 ;; B4: #	out( B10 B5 ) <- in( B3 )  Freq: 0.999997
  0x00007fcebd157830:   mov    %ebx,%ebp
  0x00007fcebd157832:   add    $0xffffffe1,%ebp
  0x00007fcebd157835:   vpxor  %ymm0,%ymm0,%ymm0
  0x00007fcebd157839:   vpsubb %ymm1,%ymm0,%ymm0            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@43 (line 3382)
                                                            ; - loadm::workload@27 (line 14)
  0x00007fcebd15783d:   vpabsb %ymm0,%ymm4
  0x00007fcebd157842:   vpxor  %ymm3,%ymm3,%ymm3
  0x00007fcebd157846:   vpsubb %ymm4,%ymm3,%ymm4
  0x00007fcebd15784a:   vpxor  %ymm3,%ymm3,%ymm3
  0x00007fcebd15784e:   vpxor  %ymm5,%ymm5,%ymm5
  0x00007fcebd157852:   lea    0x3f0(%rdx),%r11
  0x00007fcebd157859:   vpmovmskb %ymm4,%edi
  0x00007fcebd15785d:   vpor   %ymm3,%ymm5,%ymm5
  0x00007fcebd157861:   vpxor  %ymm3,%ymm3,%ymm3
  0x00007fcebd157865:   cmp    $0x0,%edi
  0x00007fcebd157868:   je     0x00007fcebd1578d3
  0x00007fcebd15786e:   xor    %r9,%r9
  0x00007fcebd157871:   bsf    %rdi,%rsi
  0x00007fcebd157875:   blsr   %rdi,%rdi
  0x00007fcebd15787a:   mov    %esi,%r8d
  0x00007fcebd15787d:   mov    (%r11,%r8,1),%r9b
  0x00007fcebd157881:   and    $0x7,%r8
  0x00007fcebd157885:   shl    $0x3,%r8
  0x00007fcebd157889:   shr    $0x3,%rsi
  0x00007fcebd15788d:   shlx   %r8,%r9,%r9
  0x00007fcebd157892:   lea    0x8(%rip),%rax        # 0x00007fcebd1578a1
  0x00007fcebd157899:   shl    %rsi
  0x00007fcebd15789c:   add    %rsi,%rax
  0x00007fcebd15789f:   jmpq   *%rax
  0x00007fcebd1578a1:   jmp    0x00007fcebd1578a9
  0x00007fcebd1578a3:   jmp    0x00007fcebd1578b0
  0x00007fcebd1578a5:   jmp    0x00007fcebd1578b8
  0x00007fcebd1578a7:   jmp    0x00007fcebd1578c5
  0x00007fcebd1578a9:   vmovq  %r9,%xmm3
  0x00007fcebd1578ae:   jmp    0x00007fcebd15785d
  0x00007fcebd1578b0:   vpinsrq $0x1,%r9,%xmm3,%xmm3
  0x00007fcebd1578b6:   jmp    0x00007fcebd15785d
  0x00007fcebd1578b8:   vmovq  %r9,%xmm1
  0x00007fcebd1578bd:   vinserti128 $0x1,%xmm1,%ymm3,%ymm3
  0x00007fcebd1578c3:   jmp    0x00007fcebd15785d
  0x00007fcebd1578c5:   vpinsrq $0x1,%r9,%xmm1,%xmm1
  0x00007fcebd1578cb:   vinserti128 $0x1,%xmm1,%ymm3,%ymm3
  0x00007fcebd1578d1:   jmp    0x00007fcebd15785d           ;*invokestatic loadMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::fromArray0Template@52 (line 3763)
                                                            ; - jdk.incubator.vector.Byte256Vector::fromArray0@11 (line 914)
                                                            ; - jdk.incubator.vector.ByteVector::fromArray@32 (line 3012)
                                                            ; - loadm::workload@18 (line 13)
  0x00007fcebd1578d3:   test   %ebp,%ebp
  0x00007fcebd1578d5:   jl     0x00007fcebd157964
 ;; B5: #	out( B8 B6 ) <- in( B4 )  Freq: 0.999996
  0x00007fcebd1578db:   nop
  0x00007fcebd1578dc:   nop
  0x00007fcebd1578dd:   nop
  0x00007fcebd1578de:   nop
  0x00007fcebd1578df:   nop
  0x00007fcebd1578e0:   cmp    $0x1f,%ebx
  0x00007fcebd1578e3:   je     0x00007fcebd15790b
 ;; B6: #	out( B9 B7 ) <- in( B5 )  Freq: 0.999995
  0x00007fcebd1578e5:   vmovdqu %ymm5,0x10(%r10)
  0x00007fcebd1578eb:   cmp    %ebx,%ecx
  0x00007fcebd1578ed:   jae    0x00007fcebd15793c           ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@43 (line 3382)
                                                            ; - loadm::workload@27 (line 14)
 ;; B7: #	out( N1 ) <- in( B6 )  Freq: 0.999994
  0x00007fcebd1578ef:   movsbl 0x10(%r10,%rcx,1),%eax       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - loadm::workload@32 (line 16)
  0x00007fcebd1578f5:   vzeroupper 
  0x00007fcebd1578f8:   add    $0x50,%rsp
  0x00007fcebd1578fc:   pop    %rbp
  0x00007fcebd1578fd:   cmp    0x3c8(%r15),%rsp             ;   {poll_return}
  0x00007fcebd157904:   ja     0x00007fcebd157a28
  0x00007fcebd15790a:   retq   
 ;; B8: #	out( N1 ) <- in( B5 )  Freq: 1.01328e-06
  0x00007fcebd15790b:   mov    $0xffffffe4,%esi
  0x00007fcebd157910:   mov    %ecx,0x8(%rsp)
  0x00007fcebd157914:   mov    %r10,0x10(%rsp)
  0x00007fcebd157919:   vmovdqu %ymm5,0x20(%rsp)            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@43 (line 3382)
                                                            ; - loadm::workload@27 (line 14)
  0x00007fcebd15791f:   nop
  0x00007fcebd157920:   vzeroupper 
  0x00007fcebd157923:   callq  0x00007fcebd1312a0           ; ImmutableOopMap {[16]=Oop }
                                                            ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::checkIndex@3 (line 385)
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 57)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@7 (line 3380)
                                                            ; - loadm::workload@27 (line 14)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fcebd157928:   movabs $0x7fcec68d0108,%rdi         ;   {external_word}
  0x00007fcebd157932:   and    $0xfffffffffffffff0,%rsp
  0x00007fcebd157936:   callq  0x00007fcec5f37010           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fcebd15793b:   hlt    
 ;; B9: #	out( N1 ) <- in( B6 )  Freq: 1.01327e-06
  0x00007fcebd15793c:   mov    $0xffffffe4,%esi
  0x00007fcebd157941:   mov    %r10,%rbp
  0x00007fcebd157944:   mov    %ecx,(%rsp)                  ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@43 (line 3382)
                                                            ; - loadm::workload@27 (line 14)
  0x00007fcebd157947:   nop
  0x00007fcebd157948:   vzeroupper 
  0x00007fcebd15794b:   callq  0x00007fcebd1312a0           ; ImmutableOopMap {rbp=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - loadm::workload@32 (line 16)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fcebd157950:   movabs $0x7fcec68d0108,%rdi         ;   {external_word}
  0x00007fcebd15795a:   and    $0xfffffffffffffff0,%rsp
  0x00007fcebd15795e:   callq  0x00007fcec5f37010           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fcebd157963:   hlt    
 ;; B10: #	out( N1 ) <- in( B4 )  Freq: 9.99997e-07
  0x00007fcebd157964:   mov    $0xffffffcc,%esi
  0x00007fcebd157969:   mov    %ecx,0x8(%rsp)
  0x00007fcebd15796d:   mov    %r10,0x10(%rsp)
  0x00007fcebd157972:   vmovdqu %ymm5,0x20(%rsp)
  0x00007fcebd157978:   vzeroupper 
  0x00007fcebd15797b:   callq  0x00007fcebd1312a0           ; ImmutableOopMap {[16]=Oop }
                                                            ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::checkIndex@3 (line 385)
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 57)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@7 (line 3380)
                                                            ; - loadm::workload@27 (line 14)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fcebd157980:   movabs $0x7fcec68d0108,%rdi         ;   {external_word}
  0x00007fcebd15798a:   and    $0xfffffffffffffff0,%rsp
  0x00007fcebd15798e:   callq  0x00007fcec5f37010           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fcebd157993:   hlt    
 ;; B11: #	out( N1 ) <- in( B2 )  Freq: 4.99999e-07
  0x00007fcebd157994:   mov    $0xffffff45,%esi
  0x00007fcebd157999:   mov    $0x3e0,%r8d                  ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@43 (line 3382)
                                                            ; - loadm::workload@27 (line 14)
  0x00007fcebd15799f:   cmp    %r11,%r8
  0x00007fcebd1579a2:   mov    $0xffffffff,%ebp
  0x00007fcebd1579a7:   jl     0x00007fcebd1579b1
  0x00007fcebd1579a9:   setne  %bpl
  0x00007fcebd1579ad:   movzbl %bpl,%ebp
  0x00007fcebd1579b1:   mov    %r10,(%rsp)
  0x00007fcebd1579b5:   mov    %ecx,0x8(%rsp)
  0x00007fcebd1579b9:   mov    %rdx,0x10(%rsp)
  0x00007fcebd1579be:   vmovdqu %ymm1,0x20(%rsp)
  0x00007fcebd1579c4:   vzeroupper 
  0x00007fcebd1579c7:   callq  0x00007fcebd1312a0           ; ImmutableOopMap {[0]=Oop [16]=Oop }
                                                            ;*ifgt {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) jdk.incubator.vector.VectorIntrinsics::indexInRange@12 (line 49)
                                                            ; - jdk.incubator.vector.ByteVector::fromArray@17 (line 3011)
                                                            ; - loadm::workload@18 (line 13)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fcebd1579cc:   movabs $0x7fcec68d0108,%rdi         ;   {external_word}
  0x00007fcebd1579d6:   and    $0xfffffffffffffff0,%rsp
  0x00007fcebd1579da:   callq  0x00007fcec5f37010           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fcebd1579df:   hlt    
 ;; B12: #	out( N1 ) <- in( B1 )  Freq: 1.01328e-06
  0x00007fcebd1579e0:   mov    $0xfffffff6,%esi             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@43 (line 3382)
                                                            ; - loadm::workload@27 (line 14)
  0x00007fcebd1579e5:   nop
  0x00007fcebd1579e6:   nop
  0x00007fcebd1579e7:   nop
  0x00007fcebd1579e8:   vzeroupper 
  0x00007fcebd1579eb:   callq  0x00007fcebd1312a0           ; ImmutableOopMap {}
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::fromArray@15 (line 3011)
                                                            ; - loadm::workload@18 (line 13)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fcebd1579f0:   movabs $0x7fcec68d0108,%rdi         ;   {external_word}
  0x00007fcebd1579fa:   and    $0xfffffffffffffff0,%rsp
  0x00007fcebd1579fe:   callq  0x00007fcec5f37010           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fcebd157a03:   hlt    
 ;; B13: #	out( N1 ) <- in( B3 )  Freq: 1.01328e-06
  0x00007fcebd157a04:   mov    $0xfffffff6,%esi             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@43 (line 3382)
                                                            ; - loadm::workload@27 (line 14)
  0x00007fcebd157a09:   nop
  0x00007fcebd157a0a:   nop
  0x00007fcebd157a0b:   nop
  0x00007fcebd157a0c:   vzeroupper 
  0x00007fcebd157a0f:   callq  0x00007fcebd1312a0           ; ImmutableOopMap {}
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@6 (line 3380)
                                                            ; - loadm::workload@27 (line 14)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fcebd157a14:   movabs $0x7fcec68d0108,%rdi         ;   {external_word}
  0x00007fcebd157a1e:   and    $0xfffffffffffffff0,%rsp
  0x00007fcebd157a22:   callq  0x00007fcec5f37010           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fcebd157a27:   hlt                                 ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@6 (line 3380)
                                                            ; - loadm::workload@27 (line 14)
  0x00007fcebd157a28:   movabs $0x7fcebd1578fd,%r10         ;   {internal_word}
  0x00007fcebd157a32:   mov    %r10,0x3e0(%r15)
  0x00007fcebd157a39:   jmpq   0x00007fcebd130420           ;   {runtime_call SafepointBlob}
  0x00007fcebd157a3e:   hlt    
  0x00007fcebd157a3f:   hlt    
[Exception Handler]
  0x00007fcebd157a40:   jmpq   0x00007fcebd093ea0           ;   {no_reloc}
[Deopt Handler Code]
  0x00007fcebd157a45:   callq  0x00007fcebd157a4a
  0x00007fcebd157a4a:   subq   $0x5,(%rsp)
  0x00007fcebd157a4f:   jmpq   0x00007fcebd12f2e0           ;   {runtime_call DeoptimizationBlob}
  0x00007fcebd157a54:   hlt    
  0x00007fcebd157a55:   hlt    
  0x00007fcebd157a56:   hlt    
  0x00007fcebd157a57:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Oops:
  0x00007fcebd157a58:   0x000000011f97c900 a 'java/lang/Class'{0x000000011f97c900} = 'jdk/incubator/vector/Byte256Vector'
  0x00007fcebd157a60:   0x000000011f97c990 a 'java/lang/Class'{0x000000011f97c990} = 'jdk/incubator/vector/Byte256Vector$Byte256Mask'
  0x00007fcebd157a68:   0x000000011f97c8b8 a 'jdk/incubator/vector/ByteVector$ByteSpecies'{0x000000011f97c8b8}
  0x00007fcebd157a70:   0x000000011f8a3a28 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x000000011f8a3a28}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Metadata:
  0x00007fcebd157a78:   0x00007fce54511638 {method} {0x00007fce54511638} 'workload' '([B[BI)B' in 'loadm'
  0x00007fcebd157a80:   0x00007fce54633ba8 {method} {0x00007fce54633ba8} 'intoArray' '([BI)V' in 'jdk/incubator/vector/ByteVector'
  0x00007fcebd157a88:   0x00007fce546330b0 {method} {0x00007fce546330b0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[BILjdk/incubator/vector/VectorMask;)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector'
  0x00007fcebd157a90:   0x00007fce546adca8 {method} {0x00007fce546adca8} 'fromArray0' '([BILjdk/incubator/vector/VectorMask;I)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/Byte256Vector'
  0x00007fcebd157a98:   0x00007fce54634a88 {method} {0x00007fce54634a88} 'fromArray0Template' '(Ljava/lang/Class;[BILjdk/incubator/vector/VectorMask;I)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector'
  0x00007fcebd157aa0:   0x00007fce546dd728 {method} {0x00007fce546dd728} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
  0x00007fcebd157aa8:   0x00007fce5418ea98 {method} {0x00007fce5418ea98} 'checkIndex' '(II)I' in 'java/util/Objects'
  0x00007fcebd157ab0:   0x00007fce546dd600 {method} {0x00007fce546dd600} 'indexInRange' '(JJJ)Z' in 'jdk/incubator/vector/VectorIntrinsics'
  0x00007fcebd157ab8:   0x0000000800094a08 'jdk/incubator/vector/AbstractSpecies'
  0x00007fcebd157ac0:   0x0000000800094df0 'jdk/incubator/vector/ByteVector$ByteSpecies'
  0x00007fcebd157ac8:   0x0000000800098a40 'jdk/incubator/vector/Byte256Vector$Byte256Mask'
  0x00007fcebd157ad0:   0x00007fce54690bc8 {method} {0x00007fce54690bc8} 'check' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/AbstractMask'
  0x00007fcebd157ad8:   0x0000000800096cc0 'jdk/incubator/vector/VectorMask'
  0x00007fcebd157ae0:   0x00007fce546942e0 {method} {0x00007fce546942e0} 'check' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/VectorMask'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
pc-bytecode offsets:
PcDesc(pc=0x00007fcebd15777f offset=ffffffff bits=0):
PcDesc(pc=0x00007fcebd15778c offset=c bits=0):
   loadm::workload@-1 (line 12)
PcDesc(pc=0x00007fcebd15783d offset=bd bits=0):
   jdk.incubator.vector.ByteVector::intoArray@43 (line 3382)
   loadm::workload@27 (line 14)
PcDesc(pc=0x00007fcebd1578d3 offset=153 bits=0):
   jdk.incubator.vector.ByteVector::fromArray0Template@52 (line 3763)
   jdk.incubator.vector.Byte256Vector::fromArray0@11 (line 914)
   jdk.incubator.vector.ByteVector::fromArray@32 (line 3012)
   loadm::workload@18 (line 13)
PcDesc(pc=0x00007fcebd1578ef offset=16f bits=0):
   jdk.incubator.vector.ByteVector::intoArray@43 (line 3382)
   loadm::workload@27 (line 14)
PcDesc(pc=0x00007fcebd1578f5 offset=175 bits=0):
   loadm::workload@32 (line 16)
PcDesc(pc=0x00007fcebd15791f offset=19f bits=0):
   jdk.incubator.vector.ByteVector::intoArray@43 (line 3382)
   loadm::workload@27 (line 14)
PcDesc(pc=0x00007fcebd157928 offset=1a8 bits=0):
   java.util.Objects::checkIndex@3 (line 385)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: 0
    - @1: reg rbp [10],int
    - @2: NULL
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 57)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.ByteVector::intoArray@7 (line 3380)
   Locals
    - l0: obj[103]
    - l1: stack[16],oop
    - l2: empty
    - l3: empty
   loadm::workload@27 (line 14)
   Locals
    - l0: stack[16],oop
    - l1: empty
    - l2: stack[8]
    - l3: empty
    - l4: empty
   Objects
    - 103: jdk.incubator.vector.Byte256Vector stack[32],vector
PcDesc(pc=0x00007fcebd157947 offset=1c7 bits=0):
   jdk.incubator.vector.ByteVector::intoArray@43 (line 3382)
   loadm::workload@27 (line 14)
PcDesc(pc=0x00007fcebd157950 offset=1d0 bits=0):
   loadm::workload@32 (line 16)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: reg rbp [10],oop
    - @1: stack[0]
PcDesc(pc=0x00007fcebd157980 offset=200 bits=0):
   java.util.Objects::checkIndex@3 (line 385)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: 0
    - @1: reg rbp [10],int
    - @2: NULL
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 57)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.ByteVector::intoArray@7 (line 3380)
   Locals
    - l0: obj[37]
    - l1: stack[16],oop
    - l2: empty
    - l3: empty
   loadm::workload@27 (line 14)
   Locals
    - l0: stack[16],oop
    - l1: empty
    - l2: stack[8]
    - l3: empty
    - l4: empty
   Objects
    - 37: jdk.incubator.vector.Byte256Vector stack[32],vector
PcDesc(pc=0x00007fcebd15799f offset=21f bits=0):
   jdk.incubator.vector.ByteVector::intoArray@43 (line 3382)
   loadm::workload@27 (line 14)
PcDesc(pc=0x00007fcebd1579cc offset=24c bits=1):
   jdk.incubator.vector.VectorIntrinsics::indexInRange@12 (line 49)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
   Expression stack
    - @0: reg rbp [10],int
   jdk.incubator.vector.ByteVector::fromArray@17 (line 3011)
   Locals
    - l0: empty
    - l1: stack[16],oop
    - l2: 992
    - l3: obj[88]
    - l4: a 'jdk/incubator/vector/ByteVector$ByteSpecies'{0x000000011f97c8b8}
   loadm::workload@18 (line 13)
   Locals
    - l0: stack[0],oop
    - l1: empty
    - l2: stack[8]
    - l3: empty
    - l4: empty
   Objects
    - 88: jdk.incubator.vector.Byte256Vector$Byte256Mask stack[32],vector
PcDesc(pc=0x00007fcebd1579e5 offset=265 bits=0):
   jdk.incubator.vector.ByteVector::intoArray@43 (line 3382)
   loadm::workload@27 (line 14)
PcDesc(pc=0x00007fcebd1579f0 offset=270 bits=0):
   jdk.incubator.vector.ByteVector::fromArray@15 (line 3011)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: empty
    - @1: empty
    - @2: empty
    - @3: empty
    - @4: NULL
   loadm::workload@18 (line 13)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
PcDesc(pc=0x00007fcebd157a09 offset=289 bits=0):
   jdk.incubator.vector.ByteVector::intoArray@43 (line 3382)
   loadm::workload@27 (line 14)
PcDesc(pc=0x00007fcebd157a14 offset=294 bits=0):
   jdk.incubator.vector.ByteVector::intoArray@6 (line 3380)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: empty
    - @1: empty
    - @2: NULL
   loadm::workload@27 (line 14)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
PcDesc(pc=0x00007fcebd157a28 offset=2a8 bits=0):
   jdk.incubator.vector.ByteVector::intoArray@6 (line 3380)
   loadm::workload@27 (line 14)
PcDesc(pc=0x00007fcebd157a59 offset=2d9 bits=0):
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
oop maps:ImmutableOopMapSet contains 6 OopMaps

ImmutableOopMap {[16]=Oop } pc offsets: 424 
ImmutableOopMap {rbp=Oop } pc offsets: 464 
ImmutableOopMap {[16]=Oop } pc offsets: 512 
ImmutableOopMap {[0]=Oop [16]=Oop } pc offsets: 588 
ImmutableOopMap {} pc offsets: 624 660 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
scopes:
ScopeDesc(pc=0x00007fcebd15778c offset=c):
   loadm::workload@-1 (line 12)
ScopeDesc(pc=0x00007fcebd15783d offset=bd):
   jdk.incubator.vector.ByteVector::intoArray@43 (line 3382)
ScopeDesc(pc=0x00007fcebd15783d offset=bd):
   loadm::workload@27 (line 14)
ScopeDesc(pc=0x00007fcebd1578d3 offset=153):
   jdk.incubator.vector.ByteVector::fromArray0Template@52 (line 3763)
ScopeDesc(pc=0x00007fcebd1578d3 offset=153):
   jdk.incubator.vector.Byte256Vector::fromArray0@11 (line 914)
ScopeDesc(pc=0x00007fcebd1578d3 offset=153):
   jdk.incubator.vector.ByteVector::fromArray@32 (line 3012)
ScopeDesc(pc=0x00007fcebd1578d3 offset=153):
   loadm::workload@18 (line 13)
ScopeDesc(pc=0x00007fcebd1578ef offset=16f):
   jdk.incubator.vector.ByteVector::intoArray@43 (line 3382)
ScopeDesc(pc=0x00007fcebd1578ef offset=16f):
   loadm::workload@27 (line 14)
ScopeDesc(pc=0x00007fcebd1578f5 offset=175):
   loadm::workload@32 (line 16)
ScopeDesc(pc=0x00007fcebd15791f offset=19f):
   jdk.incubator.vector.ByteVector::intoArray@43 (line 3382)
ScopeDesc(pc=0x00007fcebd15791f offset=19f):
   loadm::workload@27 (line 14)
ScopeDesc(pc=0x00007fcebd157928 offset=1a8):
   java.util.Objects::checkIndex@3 (line 385)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: 0
    - @1: reg rbp [10],int
    - @2: NULL
ScopeDesc(pc=0x00007fcebd157928 offset=1a8):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 57)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00007fcebd157928 offset=1a8):
   jdk.incubator.vector.ByteVector::intoArray@7 (line 3380)
   Locals
    - l0: obj[103]
    - l1: stack[16],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x00007fcebd157928 offset=1a8):
   loadm::workload@27 (line 14)
   Locals
    - l0: stack[16],oop
    - l1: empty
    - l2: stack[8]
    - l3: empty
    - l4: empty
   Objects
    - 103: jdk.incubator.vector.Byte256Vector stack[32],vector
ScopeDesc(pc=0x00007fcebd157947 offset=1c7):
   jdk.incubator.vector.ByteVector::intoArray@43 (line 3382)
ScopeDesc(pc=0x00007fcebd157947 offset=1c7):
   loadm::workload@27 (line 14)
ScopeDesc(pc=0x00007fcebd157950 offset=1d0):
   loadm::workload@32 (line 16)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: reg rbp [10],oop
    - @1: stack[0]
ScopeDesc(pc=0x00007fcebd157980 offset=200):
   java.util.Objects::checkIndex@3 (line 385)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: 0
    - @1: reg rbp [10],int
    - @2: NULL
ScopeDesc(pc=0x00007fcebd157980 offset=200):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 57)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00007fcebd157980 offset=200):
   jdk.incubator.vector.ByteVector::intoArray@7 (line 3380)
   Locals
    - l0: obj[37]
    - l1: stack[16],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x00007fcebd157980 offset=200):
   loadm::workload@27 (line 14)
   Locals
    - l0: stack[16],oop
    - l1: empty
    - l2: stack[8]
    - l3: empty
    - l4: empty
   Objects
    - 37: jdk.incubator.vector.Byte256Vector stack[32],vector
ScopeDesc(pc=0x00007fcebd15799f offset=21f):
   jdk.incubator.vector.ByteVector::intoArray@43 (line 3382)
ScopeDesc(pc=0x00007fcebd15799f offset=21f):
   loadm::workload@27 (line 14)
ScopeDesc(pc=0x00007fcebd1579cc offset=24c):
   jdk.incubator.vector.VectorIntrinsics::indexInRange@12 (line 49)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
   Expression stack
    - @0: reg rbp [10],int
ScopeDesc(pc=0x00007fcebd1579cc offset=24c):
   jdk.incubator.vector.ByteVector::fromArray@17 (line 3011)
   Locals
    - l0: empty
    - l1: stack[16],oop
    - l2: 992
    - l3: obj[88]
    - l4: a 'jdk/incubator/vector/ByteVector$ByteSpecies'{0x000000011f97c8b8}
ScopeDesc(pc=0x00007fcebd1579cc offset=24c):
   loadm::workload@18 (line 13)
   Locals
    - l0: stack[0],oop
    - l1: empty
    - l2: stack[8]
    - l3: empty
    - l4: empty
   Objects
    - 88: jdk.incubator.vector.Byte256Vector$Byte256Mask stack[32],vector
ScopeDesc(pc=0x00007fcebd1579e5 offset=265):
   jdk.incubator.vector.ByteVector::intoArray@43 (line 3382)
ScopeDesc(pc=0x00007fcebd1579e5 offset=265):
   loadm::workload@27 (line 14)
ScopeDesc(pc=0x00007fcebd1579f0 offset=270):
   jdk.incubator.vector.ByteVector::fromArray@15 (line 3011)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: empty
    - @1: empty
    - @2: empty
    - @3: empty
    - @4: NULL
ScopeDesc(pc=0x00007fcebd1579f0 offset=270):
   loadm::workload@18 (line 13)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
ScopeDesc(pc=0x00007fcebd157a09 offset=289):
   jdk.incubator.vector.ByteVector::intoArray@43 (line 3382)
ScopeDesc(pc=0x00007fcebd157a09 offset=289):
   loadm::workload@27 (line 14)
ScopeDesc(pc=0x00007fcebd157a14 offset=294):
   jdk.incubator.vector.ByteVector::intoArray@6 (line 3380)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: empty
    - @1: empty
    - @2: NULL
ScopeDesc(pc=0x00007fcebd157a14 offset=294):
   loadm::workload@27 (line 14)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
ScopeDesc(pc=0x00007fcebd157a28 offset=2a8):
   jdk.incubator.vector.ByteVector::intoArray@6 (line 3380)
ScopeDesc(pc=0x00007fcebd157a28 offset=2a8):
   loadm::workload@27 (line 14)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
relocations:
         @0x00007fcebd157708: 597d
relocInfo@0x00007fcebd157708 [type=11(poll_return) addr=0x00007fcebd1578fd offset=381]
         @0x00007fcebd15770a: 3226
relocInfo@0x00007fcebd15770a [type=6(runtime_call) addr=0x00007fcebd157923 offset=38 format=1] | [destination=0x00007fcebd1312a0]
         @0x00007fcebd15770c: 7c03c68d01087fce3805
relocInfo@0x00007fcebd157714 [type=7(external_word) addr=0x00007fcebd157928 offset=5 data={c68d01087fce}] | [target=0x00007fcec68d0108]
         @0x00007fcebd157716: 320e
relocInfo@0x00007fcebd157716 [type=6(runtime_call) addr=0x00007fcebd157936 offset=14 format=1] | [destination=0x00007fcec5f37010]
         @0x00007fcebd157718: 3215
relocInfo@0x00007fcebd157718 [type=6(runtime_call) addr=0x00007fcebd15794b offset=21 format=1] | [destination=0x00007fcebd1312a0]
         @0x00007fcebd15771a: 7c03c68d01087fce3805
relocInfo@0x00007fcebd157722 [type=7(external_word) addr=0x00007fcebd157950 offset=5 data={c68d01087fce}] | [target=0x00007fcec68d0108]
         @0x00007fcebd157724: 320e
relocInfo@0x00007fcebd157724 [type=6(runtime_call) addr=0x00007fcebd15795e offset=14 format=1] | [destination=0x00007fcec5f37010]
         @0x00007fcebd157726: 321d
relocInfo@0x00007fcebd157726 [type=6(runtime_call) addr=0x00007fcebd15797b offset=29 format=1] | [destination=0x00007fcebd1312a0]
         @0x00007fcebd157728: 7c03c68d01087fce3805
relocInfo@0x00007fcebd157730 [type=7(external_word) addr=0x00007fcebd157980 offset=5 data={c68d01087fce}] | [target=0x00007fcec68d0108]
         @0x00007fcebd157732: 320e
relocInfo@0x00007fcebd157732 [type=6(runtime_call) addr=0x00007fcebd15798e offset=14 format=1] | [destination=0x00007fcec5f37010]
         @0x00007fcebd157734: 3239
relocInfo@0x00007fcebd157734 [type=6(runtime_call) addr=0x00007fcebd1579c7 offset=57 format=1] | [destination=0x00007fcebd1312a0]
         @0x00007fcebd157736: 7c03c68d01087fce3805
relocInfo@0x00007fcebd15773e [type=7(external_word) addr=0x00007fcebd1579cc offset=5 data={c68d01087fce}] | [target=0x00007fcec68d0108]
         @0x00007fcebd157740: 320e
relocInfo@0x00007fcebd157740 [type=6(runtime_call) addr=0x00007fcebd1579da offset=14 format=1] | [destination=0x00007fcec5f37010]
         @0x00007fcebd157742: 3211
relocInfo@0x00007fcebd157742 [type=6(runtime_call) addr=0x00007fcebd1579eb offset=17 format=1] | [destination=0x00007fcebd1312a0]
         @0x00007fcebd157744: 7c03c68d01087fce3805
relocInfo@0x00007fcebd15774c [type=7(external_word) addr=0x00007fcebd1579f0 offset=5 data={c68d01087fce}] | [target=0x00007fcec68d0108]
         @0x00007fcebd15774e: 320e
relocInfo@0x00007fcebd15774e [type=6(runtime_call) addr=0x00007fcebd1579fe offset=14 format=1] | [destination=0x00007fcec5f37010]
         @0x00007fcebd157750: 3211
relocInfo@0x00007fcebd157750 [type=6(runtime_call) addr=0x00007fcebd157a0f offset=17 format=1] | [destination=0x00007fcebd1312a0]
         @0x00007fcebd157752: 7c03c68d01087fce3805
relocInfo@0x00007fcebd15775a [type=7(external_word) addr=0x00007fcebd157a14 offset=5 data={c68d01087fce}] | [target=0x00007fcec68d0108]
         @0x00007fcebd15775c: 320e
relocInfo@0x00007fcebd15775c [type=6(runtime_call) addr=0x00007fcebd157a22 offset=14 format=1] | [destination=0x00007fcec5f37010]
         @0x00007fcebd15775e: 792b4006
relocInfo@0x00007fcebd157760 [type=8(internal_word) addr=0x00007fcebd157a28 offset=6 data=299] | [target=0x00007fcebd1578fd]
         @0x00007fcebd157762: 3211
relocInfo@0x00007fcebd157762 [type=6(runtime_call) addr=0x00007fcebd157a39 offset=17 format=1] | [destination=0x00007fcebd130420]
         @0x00007fcebd157764: 0007
relocInfo@0x00007fcebd157764 [type=0(none) addr=0x00007fcebd157a40 offset=7]
         @0x00007fcebd157766: 3200
relocInfo@0x00007fcebd157766 [type=6(runtime_call) addr=0x00007fcebd157a40 offset=0 format=1] | [destination=0x00007fcebd093ea0]
         @0x00007fcebd157768: 320f
relocInfo@0x00007fcebd157768 [type=6(runtime_call) addr=0x00007fcebd157a4f offset=15 format=1] | [destination=0x00007fcebd12f2e0]
         @0x00007fcebd15776a: 0000
relocInfo@0x00007fcebd15776a [type=0(none) addr=0x00007fcebd157a4f offset=0]
         @0x00007fcebd15776c: 0000
relocInfo@0x00007fcebd15776c [type=0(none) addr=0x00007fcebd157a4f offset=0]
         @0x00007fcebd15776e: 0000
relocInfo@0x00007fcebd15776e [type=0(none) addr=0x00007fcebd157a4f offset=0]
         @0x00007fcebd157770: 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Dependencies:
Dependency of type abstract_with_unique_concrete_subtype
  context = *jdk.incubator.vector.AbstractSpecies
  class   = jdk.incubator.vector.ByteVector$ByteSpecies
   [nmethod<=klass]jdk.incubator.vector.AbstractSpecies
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.Byte256Vector$Byte256Mask
  method  = {method} {0x00007fce54690bc8} 'check' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/AbstractMask'
  class   = jdk.incubator.vector.VectorMask
  method  = *{method} {0x00007fce546942e0} 'check' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/VectorMask'
   [nmethod<=klass]jdk.incubator.vector.Byte256Vector$Byte256Mask
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ExceptionHandlerTable (size = 0 bytes)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ImplicitExceptionTable (size = 2 entries, 20 bytes):
{
   < 0x00007fcebd15778f, 0x00007fcebd1579e0 > < 0x00007fcebd15782d, 0x00007fcebd157a04 > 
}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded oops:
#0: 0x0000000000000000 NULL-oop
#1: 0x000000011f97c900 a 'java/lang/Class'{0x000000011f97c900} = 'jdk/incubator/vector/Byte256Vector'
#2: 0x000000011f97c990 a 'java/lang/Class'{0x000000011f97c990} = 'jdk/incubator/vector/Byte256Vector$Byte256Mask'
#3: 0x000000011f97c8b8 a 'jdk/incubator/vector/ByteVector$ByteSpecies'{0x000000011f97c8b8}
#4: 0x000000011f8a3a28 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x000000011f8a3a28}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded metadata:
# 0: 0x0000000000000000 NULL-oop
# 1: 0x00007fce54511638 {method} {0x00007fce54511638} 'workload' '([B[BI)B' in 'loadm'
# 2: 0x00007fce54633ba8 {method} {0x00007fce54633ba8} 'intoArray' '([BI)V' in 'jdk/incubator/vector/ByteVector'
# 3: 0x00007fce546330b0 {method} {0x00007fce546330b0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[BILjdk/incubator/vector/VectorMask;)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector'
# 4: 0x00007fce546adca8 {method} {0x00007fce546adca8} 'fromArray0' '([BILjdk/incubator/vector/VectorMask;I)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/Byte256Vector'
# 5: 0x00007fce54634a88 {method} {0x00007fce54634a88} 'fromArray0Template' '(Ljava/lang/Class;[BILjdk/incubator/vector/VectorMask;I)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector'
# 6: 0x00007fce546dd728 {method} {0x00007fce546dd728} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
# 7: 0x00007fce5418ea98 {method} {0x00007fce5418ea98} 'checkIndex' '(II)I' in 'java/util/Objects'
# 8: 0x00007fce546dd600 {method} {0x00007fce546dd600} 'indexInRange' '(JJJ)Z' in 'jdk/incubator/vector/VectorIntrinsics'
# 9: 0x0000000800094a08 'jdk/incubator/vector/AbstractSpecies'
#10: 0x0000000800094df0 'jdk/incubator/vector/ByteVector$ByteSpecies'
#11: 0x0000000800098a40 'jdk/incubator/vector/Byte256Vector$Byte256Mask'
#12: 0x00007fce54690bc8 {method} {0x00007fce54690bc8} 'check' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/AbstractMask'
#13: 0x0000000800096cc0 'jdk/incubator/vector/VectorMask'
#14: 0x00007fce546942e0 {method} {0x00007fce546942e0} 'check' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/VectorMask'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
r[0] = -32
r[1] = -31
r[2] = -30
r[3] = -29
r[4] = 0
r[5] = 0
r[6] = 0
r[7] = 0
r[8] = 0
r[9] = 0
r[10] = 0
r[11] = 0
r[12] = 0
r[13] = 0
r[14] = 0
r[15] = 0
r[16] = 0
r[17] = 0
r[18] = 0
r[19] = 0
r[20] = 0
r[21] = 0
r[22] = 0
r[23] = 0
r[24] = 0
r[25] = 0
r[26] = 0
r[27] = 0
r[28] = 0
r[29] = 0
r[30] = 0
r[31] = 0
[Res] 112 [Time] 28 ms 
------------------------------------------------------------------------
static loadm::workload([B[BI)B
  interpreter_invocation_count:        8726
  invocation_counter:                  8726
  backedge_counter:                       0
  decompile_count:                        0
  mdo size: 536 bytes

0 getstatic 7 <jdk/incubator/vector/ByteVector.SPECIES_256/Ljdk/incubator/vector/VectorSpecies;> 
3 ldc2_w 15
6 invokestatic 15 <jdk/incubator/vector/VectorMask.fromLong(Ljdk/incubator/vector/VectorSpecies;J)Ljdk/incubator/vector/VectorMask;> 
  0   bci: 6    CounterData         count(7063)
9 astore_3
10 getstatic 21 <loadm.SPECIES/Ljdk/incubator/vector/VectorSpecies;> 
13 aload_1
14 sipush 992
17 aload_3
18 invokestatic 26 <jdk/incubator/vector/ByteVector.fromArray(Ljdk/incubator/vector/VectorSpecies;[BILjdk/incubator/vector/VectorMask;)Ljdk/incubator/vector/ByteVector;> 
  16  bci: 18   CounterData         count(7063)
21 astore #4
23 aload #4
25 fast_aload_0
26 iconst_0
27 invokevirtual 30 <jdk/incubator/vector/ByteVector.intoArray([BI)V> 
  32  bci: 27   VirtualCallData     count(7063) nonprofiled_count(0) entries(0)
30 fast_aload_0
31 iload_2
32 baload
33 ireturn
------------------------------------------------------------------------
Total MDO size: 536 bytes
