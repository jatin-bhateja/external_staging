CompileCommand: print storem.workload bool print = true

============================= C2-compiled nmethod ==============================
#r018 rsi:rsi   : parm 0: rawptr:BotPTR
# -- Old rsp -- Framesize: 256 --
#r591 rsp+252: in_preserve
#r590 rsp+248: return address
#r589 rsp+244: in_preserve
#r588 rsp+240: saved fp register
#r587 rsp+236: pad2, stack alignment
#r586 rsp+232: pad2, stack alignment
#r585 rsp+228: Fixed slot 1
#r584 rsp+224: Fixed slot 0
#r647 rsp+220: spill
#r646 rsp+216: spill
#r645 rsp+212: spill
#r644 rsp+208: spill
#r643 rsp+204: spill
#r642 rsp+200: spill
#r641 rsp+196: spill
#r640 rsp+192: spill
#r639 rsp+188: spill
#r638 rsp+184: spill
#r637 rsp+180: spill
#r636 rsp+176: spill
#r635 rsp+172: spill
#r634 rsp+168: spill
#r633 rsp+164: spill
#r632 rsp+160: spill
#r631 rsp+156: spill
#r630 rsp+152: spill
#r629 rsp+148: spill
#r628 rsp+144: spill
#r627 rsp+140: spill
#r626 rsp+136: spill
#r625 rsp+132: spill
#r624 rsp+128: spill
#r623 rsp+124: spill
#r622 rsp+120: spill
#r621 rsp+116: spill
#r620 rsp+112: spill
#r619 rsp+108: spill
#r618 rsp+104: spill
#r617 rsp+100: spill
#r616 rsp+96: spill
#r615 rsp+92: spill
#r614 rsp+88: spill
#r613 rsp+84: spill
#r612 rsp+80: spill
#r611 rsp+76: spill
#r610 rsp+72: spill
#r609 rsp+68: spill
#r608 rsp+64: spill
#r607 rsp+60: spill
#r606 rsp+56: spill
#r605 rsp+52: spill
#r604 rsp+48: spill
#r603 rsp+44: spill
#r602 rsp+40: spill
#r601 rsp+36: outgoing argument
#r600 rsp+32: outgoing argument
#r599 rsp+28: outgoing argument
#r598 rsp+24: outgoing argument
#r597 rsp+20: outgoing argument
#r596 rsp+16: outgoing argument
#r595 rsp+12: outgoing argument
#r594 rsp+ 8: outgoing argument
#r593 rsp+ 4: outgoing argument
#r592 rsp+ 0: outgoing argument
#
----------------------- MetaData before Compile_id = 230 ------------------------
{method}
 - this oop:          0x00007f9f3c510e08
 - method holder:     'storem'
 - constants:         0x00007f9f3c510878 constant pool [107]/operands[10] {0x00007f9f3c510878} for 'storem' cache=0x00007f9f3c700128
 - access:            0xc1000009  public static 
 - name:              'workload'
 - signature:         '([B[BI)B'
 - max stack:         5
 - max locals:        6
 - size of params:    3
 - method size:       14
 - vtable index:      -2
 - i2i entry:         0x00007f9fa8510400
 - adapters:          AHE@0x00007f9fa437f720: 0xbba i2c: 0x00007f9fa85abae0 c2i: 0x00007f9fa85abbc7 c2iUV: 0x00007f9fa85abb91 c2iNCI: 0x00007f9fa85abc01
 - compiled entry     0x00007f9fa85abbc7
 - code size:         64
 - code start:        0x00007f9f3c510db8
 - code end (excl):   0x00007f9f3c510df8
 - method data:       0x00007f9f3c700428
 - checked ex length: 0
 - linenumber start:  0x00007f9f3c510df8
 - localvar length:   0

------------------------ OptoAssembly for Compile_id = 230 -----------------------
#
#  byte ( rawptr:BotPTR )
#
000     N741: #	out( B1 ) <- BLOCK HEAD IS JUNK  Freq: 1
000     # breakpoint
        nop 	# 11 bytes pad for loops and calls

010     B1: #	out( B33 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
010     # stack bang (632 bytes)
	pushq   rbp	# Save rbp
	subq    rsp, #240	# Create frame

01f     movq    RBP, [RSI + #40 (8-bit)]	# ptr
023     movq    R13, [RSI + #32 (8-bit)]	# ptr
027     movl    RBX, [RSI + #16 (8-bit)]	# int
02a     movl    R10, [RSI + #24 (8-bit)]	# int
02e     movl    [rsp + #100], R10	# spill
033     movq    RDI, RSI	# spill
        nop 	# 10 bytes pad for loops and calls
040     call_leaf,runtime  OSR_migration_end
        No JVM State Info
        # 
050     testq   RBP, RBP	# ptr
053     je     B33  P=0.001000 C=-1.000000

059     B2: #	out( B37 B3 ) <- in( B1 )  Freq: 0.999
059     movl    R11, [RBP + #8 (8-bit)]	# compressed klass ptr
        nop 	# 3 bytes pad for loops and calls
060     cmpl    R11, narrowklass: precise [byte: :Constant:exact *	# compressed klass ptr
067     jne,u   B37  P=0.000001 C=-1.000000

06d     B3: #	out( B4 ) <- in( B2 )  Freq: 0.998999
06d     movq    R11, RBP	# spill
070     # checkcastPP of R11

070     B4: #	out( B39 B5 ) <- in( B3 B33 )  Freq: 0.999999
070     movl    R8, [R13 + #8 (8-bit)]	# compressed klass ptr
074     NullCheck R13

074     B5: #	out( B37 B6 ) <- in( B4 )  Freq: 0.999998
        nop 	# 12 bytes pad for loops and calls
080     cmpl    R8, narrowklass: precise [byte: :Constant:exact *	# compressed klass ptr
087     jne,u   B37  P=0.000001 C=-1.000000

08d     B6: #	out( B38 B7 ) <- in( B5 )  Freq: 0.999997
08d     # checkcastPP of R13
08d     movl    R10, [R13 + #12 (8-bit)]	# range
091     movl    R8, R10	# spill
094     addl    R8, #-31	# int
098     testl   R8, R8
        nop 	# 5 bytes pad for loops and calls
0a0     jl     B38  P=0.000001 C=-1.000000

0a6     B7: #	out( B38 B8 ) <- in( B6 )  Freq: 0.999996
0a6     movl    R9, #32767	# long (unsigned 32-bit)
0ac     vallones XMM0
0b0     long_to_mask_avx XMM2, R9	! using RDI, RCX, XMM1, as TEMP
129     vector_loadmask_byte XMM1, XMM2
	
131     vptest_alltrue_ge16  R9,XMM1, XMM0	! using RFLAGS as TEMP
        nop 	# 2 bytes pad for loops and calls
140     testl   R9, R9
143     jne     B38  P=0.000001 C=-1.000000

149     B8: #	out( B38 B9 ) <- in( B7 )  Freq: 0.999995
149     movl    RBP, [R11 + #12 (8-bit)]	# range
14d     NullCheck R11

14d     B9: #	out( B14 ) <- in( B8 )  Freq: 0.999994
14d     movslq  RCX, RBP	# i2l
150     andl    R10, #-32	# int
154     addq    RCX, #-32	# long
158     jmp     B14
        nop 	# 3 bytes pad for loops and calls

160     B10: #	out( B11 ) <- in( B22 ) top-of-loop Freq: 31.9522
160     # TLS is in R15
160     movq    [R15 + #272 (32-bit)], R10	# ptr
167     PREFETCHW [R10 + #192 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
16f     movq    [RAX], #1	# long
176     movl    [RAX + #8 (8-bit)], narrowklass: precise jdk/incubator/vector/Byte256Vector: 0x00007f9f100b0ec8:Constant:exact *	# compressed klass ptr

17d     B11: #	out( B35 B12 ) <- in( B24 B10 ) top-of-loop Freq: 31.9554
17d     movq    R10, [rsp + #120]	# spill
182     encode_heap_oop_not_null R11,R10
1c7     movl    [RAX + #12 (8-bit)], R11	# compressed ptr
1cb     
1cb     MEMBAR-storestore (empty encoding)
1cb     # checkcastPP of RAX
1cb     movq    RBP, [rsp + #104]	# spill
1d0     cmpq    RBP, [RSP + #72 (32-bit)]
1d5     jg     B35  P=0.000000 C=13955.000000

1db     B12: #	out( B46 B13 ) <- in( B11 )  Freq: 31.9554
1db     vmovdqu [rsp + 128],XMM2	# spill
1e4     movq    RSI, java/lang/Class:exact *	# ptr
1ee     movq    RDX, java/lang/Class:exact *	# ptr
1f8     movq    RCX, java/lang/Class:exact *	# ptr
202     movl    R8, #32	# int
208     movq    R9, [rsp + #56]	# spill
20d     movq    RDI, [rsp + #112]	# spill
212     movq    [rsp + #0], RAX	# spill
216     movq    R10, [rsp + #80]	# spill
21b     movq    [rsp + #8], R10	# spill
220     movq    [rsp + #16], R9	# spill
225     pushq   [rsp + #104]	# 64-bit mem-mem spill
	popq    [rsp + #24]
22f     movq    R10, jdk/incubator/vector/ByteVector$$Lambda$40+0x000000080009c238:exact *	# ptr
239     movq    [rsp + #32], R10	# spill
        nop 	# 2 bytes pad for loops and calls
240     call,static  jdk.internal.vm.vector.VectorSupport::storeMasked
        # jdk.incubator.vector.ByteVector::intoArray0Template @ bci:49 (line 3862) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_
        # jdk.incubator.vector.Byte256Vector::intoArray0 @ bci:9 (line 958) L[0]=_ L[1]=_ L[2]=_ L[3]=_
        # jdk.incubator.vector.ByteVector::intoArray @ bci:53 (line 3427) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_
        # storem::workload @ bci:43 (line 13) L[0]=rsp + #56 L[1]=rsp + #40 L[2]=rsp + #100 L[3]=rsp + #88 L[4]=_ L[5]=_
        # OopMap {[40]=Oop [56]=Oop off=584/0x248}

248     B13: #	out( B14 ) <- in( B12 )  Freq: 31.9547
        # Block is sole successor of call
248     # TLS is in R15
248     movq    R10, [R15 + #976 (32-bit)]	# ptr
24f     movl    RBX, [rsp + #88]	# spill
253     addl    RBX, #32	# int
256     testl   rax, [R10]	# Safepoint: poll for GC        # storem::workload @ bci:57 (line 9) L[0]=rsp + #56 L[1]=rsp + #40 L[2]=rsp + #100 L[3]=RBX L[4]=_ L[5]=_
        # OopMap {[40]=Oop [56]=Oop off=598/0x256}
259     movq    R13, [rsp + #40]	# spill
25e     movq    R11, [rsp + #56]	# spill
263     movl    R10, [rsp + #52]	# spill
268     movl    R8, [rsp + #64]	# spill
26d     vmovdqu XMM2,[rsp + 128]	# spill
276     movl    RBP, [rsp + #68]	# spill
27a     movq    RCX, [rsp + #72]	# spill

27f     B14: #	out( B25 B15 ) <- in( B9 B13 ) Loop( B14-B13 inner ) Freq: 32.955
        nop 	# 1 bytes pad for loops and calls
280     cmpl    RBX, R10
283     jge     B25  P=0.030333 C=21198.000000

289     B15: #	out( B27 B16 ) <- in( B14 )  Freq: 31.9554
289     # TLS is in R15
289     movq    RDI, [R15 + #272 (32-bit)]	# ptr
290     movq    R9, RDI	# spill
293     addq    R9, #48	# ptr
297     # TLS is in R15
        nop 	# 9 bytes pad for loops and calls
2a0     cmpq    R9, [R15 + #288 (32-bit)]	# raw ptr
2a7     jae,u   B27  P=0.000100 C=-1.000000

2ad     B16: #	out( B17 ) <- in( B15 )  Freq: 31.9522
2ad     # TLS is in R15
2ad     movq    [R15 + #272 (32-bit)], R9	# ptr
2b4     PREFETCHW [R9 + #192 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
2bc     movq    [RDI], #1	# long
2c3     PREFETCHW [R9 + #256 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
2cb     movl    [RDI + #8 (8-bit)], narrowklass: precise [bool: :Constant:exact *	# compressed klass ptr
2d2     PREFETCHW [R9 + #320 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
2da     movl    [RDI + #12 (8-bit)], #32	# int
2e1     PREFETCHW [R9 + #384 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
2e9     movq    [RDI + #16 (8-bit)], R12	# long (R12_heapbase==0)
2ed     movq    [RDI + #24 (8-bit)], R12	# long (R12_heapbase==0)
2f1     movq    [RDI + #32 (8-bit)], R12	# long (R12_heapbase==0)
2f5     movq    [RDI + #40 (8-bit)], R12	# long (R12_heapbase==0)

2f9     B17: #	out( B29 B18 ) <- in( B28 B16 )  Freq: 31.9554
2f9     
2f9     MEMBAR-storestore (empty encoding)
2f9     # checkcastPP of RDI
2f9     store_vector [RDI + #16 (8-bit)],XMM2
	
2fe     # TLS is in R15
2fe     movq    RAX, [R15 + #272 (32-bit)]	# ptr
305     movq    R9, RAX	# spill
308     addq    R9, #16	# ptr
30c     # TLS is in R15
30c     cmpq    R9, [R15 + #288 (32-bit)]	# raw ptr
313     jae,u   B29  P=0.000100 C=-1.000000

319     B18: #	out( B19 ) <- in( B17 )  Freq: 31.9522
319     # TLS is in R15
319     movq    [R15 + #272 (32-bit)], R9	# ptr
320     PREFETCHW [R9 + #192 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
328     movq    [RAX], #1	# long
32f     movl    [RAX + #8 (8-bit)], narrowklass: precise jdk/incubator/vector/Byte256Vector$Byte256Mask: 0x00007f9f2022ce98:Constant:exact *	# compressed klass ptr

336     B19: #	out( B34 B20 ) <- in( B30 B18 )  Freq: 31.9554
336     encode_heap_oop_not_null R9,RDI
37b     movl    [RAX + #12 (8-bit)], R9	# compressed ptr
37f     
37f     MEMBAR-storestore (empty encoding)
37f     movq    RDX, RAX	# spill
382     # checkcastPP of RDX
382     cmpl    RBX, R8	# unsigned
385     jae,u   B34  P=0.000001 C=-1.000000

38b     B20: #	out( B31 B21 ) <- in( B19 )  Freq: 31.9554
38b     # TLS is in R15
38b     movq    RSI, [R15 + #272 (32-bit)]	# ptr
392     movq    RDI, RSI	# spill
395     addq    RDI, #48	# ptr
399     movl    R9, RBX	# spill
39c     # castII of R9
39c     movslq  R14, R9	# i2l
39f     movq    RAX, R14	# spill
3a2     addq    RAX, #16	# long
3a6     # TLS is in R15
3a6     cmpq    RDI, [R15 + #288 (32-bit)]	# raw ptr
3ad     jae,u   B31  P=0.000100 C=-1.000000

3b3     B21: #	out( B22 ) <- in( B20 )  Freq: 31.9522
3b3     # TLS is in R15
3b3     movq    [R15 + #272 (32-bit)], RDI	# ptr
3ba     PREFETCHW [RDI + #192 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
3c1     movq    [RSI], #1	# long
3c8     PREFETCHW [RDI + #256 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
3cf     movl    [RSI + #8 (8-bit)], narrowklass: precise [byte: :Constant:exact *	# compressed klass ptr
3d6     PREFETCHW [RDI + #320 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
3dd     movl    [RSI + #12 (8-bit)], #32	# int
3e4     PREFETCHW [RDI + #384 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
3eb     movq    [RSI + #16 (8-bit)], R12	# long (R12_heapbase==0)
3ef     movq    [RSI + #24 (8-bit)], R12	# long (R12_heapbase==0)
3f3     movq    [RSI + #32 (8-bit)], R12	# long (R12_heapbase==0)
3f7     movq    [RSI + #40 (8-bit)], R12	# long (R12_heapbase==0)
3fb     movq    [rsp + #40], R13	# spill
400     movl    [rsp + #48], RBX	# spill
404     movq    [rsp + #56], R11	# spill
409     movl    [rsp + #52], R10	# spill
40e     movl    [rsp + #64], R8	# spill
413     movl    [rsp + #68], RBP	# spill
417     movq    [rsp + #72], RCX	# spill
41c     movq    [rsp + #80], RDX	# spill
421     movl    [rsp + #88], R9	# spill
426     movq    [rsp + #104], R14	# spill
42b     movq    [rsp + #112], RAX	# spill

430     B22: #	out( B10 B23 ) <- in( B32 B21 )  Freq: 31.9554
430     
430     MEMBAR-storestore (empty encoding)
430     # checkcastPP of RSI
430     movq    R10, [rsp + #40]	# spill
435     movq    R11, [rsp + #104]	# spill
43a     load_vector XMM0,[R10 + #16 + R11]
441     store_vector [RSI + #16 (8-bit)],XMM0
	
446     movq    [rsp + #120], RSI	# spill
44b     # TLS is in R15
44b     movq    RAX, [R15 + #272 (32-bit)]	# ptr
452     movq    R10, RAX	# spill
455     addq    R10, #16	# ptr
459     # TLS is in R15
        nop 	# 7 bytes pad for loops and calls
460     cmpq    R10, [R15 + #288 (32-bit)]	# raw ptr
467     jb,u   B10  P=0.999900 C=-1.000000

46d     B23: #	out( B40 B24 ) <- in( B22 )  Freq: 0.00319607
46d     vmovdqu [rsp + 160],XMM0	# spill
476     vmovdqu [rsp + 128],XMM2	# spill
47f     movq    RSI, precise jdk/incubator/vector/Byte256Vector: 0x00007f9f100b0ec8:Constant:exact *	# ptr
489     movl    RBP, [rsp + #48]	# spill
        nop 	# 3 bytes pad for loops and calls
490     call,static  wrapper for: _new_instance_Java
        # jdk.incubator.vector.ByteVector::fromArray0Template @ bci:32 (line 3746) L[0]=_ L[1]=_ L[2]=_ L[3]=_ STK[0]=#Ptr0x00007f9f08138fb0 STK[1]=#Ptr0x00007f9f100ac8b8 STK[2]=#32 STK[3]=rsp + #40 STK[4]=rsp + #112 STK[5]=_ STK[6]=rsp + #40 STK[7]=rsp + #104 STK[8]=_ STK[9]=#Ptr0x00007f9f0c02f728 STK[10]=#Ptr0x00007f9f0813b380
        # jdk.incubator.vector.Byte256Vector::fromArray0 @ bci:3 (line 907) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.ByteVector::fromArray @ bci:24 (line 2981) L[0]=_ L[1]=_ L[2]=_ L[3]=_
        # storem::workload @ bci:32 (line 12) L[0]=rsp + #56 L[1]=rsp + #40 L[2]=rsp + #100 L[3]=RBP L[4]=#ScObj0 L[5]=_
        # ScObj0 jdk/incubator/vector/Byte256Vector$Byte256Mask={ [payload :0]=rsp + #128 }
        # OopMap {[40]=Oop [56]=Oop [80]=Oop [120]=Oop off=1176/0x498}

498     B24: #	out( B11 ) <- in( B23 )  Freq: 0.003196
        # Block is sole successor of call
498     vmovdqu XMM2,[rsp + 128]	# spill
4a1     vmovdqu XMM0,[rsp + 160]	# spill
4aa     jmp     B11

4af     B25: #	out( B36 B26 ) <- in( B14 )  Freq: 0.999627
4af     movl    R10, [rsp + #100]	# spill
4b4     cmpl    R10, RBP	# unsigned
4b7     jae,u   B36  P=0.000001 C=-1.000000

4bd     B26: #	out( N741 ) <- in( B25 )  Freq: 0.999626
4bd     movsbl  RAX, [R11 + #16 + R10]	# byte
4c3     vzeroupper
	addq    rsp, 240	# Destroy frame
	popq    rbp
	cmpq     rsp, poll_offset[r15_thread] 
	ja       #safepoint_stub	# Safepoint: poll for GC

4db     ret

4dc     B27: #	out( B44 B28 ) <- in( B15 )  Freq: 0.00319607
4dc     movq    [rsp + #104], RCX	# spill
4e1     movl    [rsp + #96], RBP	# spill
4e5     vmovdqu [rsp + 64],XMM2	# spill
4eb     movl    [rsp + #60], R8	# spill
4f0     movl    [rsp + #56], R10	# spill
4f5     movq    [rsp + #48], R11	# spill
4fa     movl    [rsp + #40], RBX	# spill
4fe     movq    RBP, R13	# spill
501     movq    RSI, precise [bool: :Constant:exact *	# ptr
50b     movl    RDX, #32	# int
510     call,static  wrapper for: _new_array_Java
        # jdk.incubator.vector.VectorMask::fromLong @ bci:39 (line 242) L[0]=_ L[1]=_ L[2]=_ L[3]=_ STK[0]=#Ptr0x00007f9f2022ec60 STK[1]=#Ptr0x00007f9f100ac8b8 STK[2]=#32 STK[3]=#32767 STK[4]=_ STK[5]=#1 STK[6]=#Ptr0x00007f9f0c02f728 STK[7]=#Ptr0x00007f9f100af8d0
        # storem::workload @ bci:22 (line 10) L[0]=rsp + #48 L[1]=RBP L[2]=rsp + #100 L[3]=rsp + #40 L[4]=_ L[5]=_
        # OopMap {rbp=Oop [48]=Oop off=1304/0x518}

518     B28: #	out( B17 ) <- in( B27 )  Freq: 0.00319601
        # Block is sole successor of call
518     movq    R13, RBP	# spill
51b     movl    RBX, [rsp + #40]	# spill
51f     movq    R11, [rsp + #48]	# spill
524     movl    R10, [rsp + #56]	# spill
529     movl    R8, [rsp + #60]	# spill
52e     vmovdqu XMM2,[rsp + 64]	# spill
534     movl    RBP, [rsp + #96]	# spill
538     movq    RCX, [rsp + #104]	# spill
53d     movq    RDI, RAX	# spill
540     jmp     B17

545     B29: #	out( B43 B30 ) <- in( B17 )  Freq: 0.00319607
545     movq    [rsp + #112], RDI	# spill
54a     movq    [rsp + #104], RCX	# spill
54f     movl    [rsp + #96], RBP	# spill
553     vmovdqu [rsp + 64],XMM2	# spill
559     movl    [rsp + #60], R8	# spill
55e     movl    [rsp + #56], R10	# spill
563     movq    [rsp + #48], R11	# spill
568     movl    [rsp + #40], RBX	# spill
56c     movq    RBP, R13	# spill
56f     movq    RSI, precise jdk/incubator/vector/Byte256Vector$Byte256Mask: 0x00007f9f2022ce98:Constant:exact *	# ptr
        nop 	# 3 bytes pad for loops and calls
57c     call,static  wrapper for: _new_instance_Java
        # jdk.incubator.vector.VectorMask::fromLong @ bci:39 (line 242) L[0]=_ L[1]=_ L[2]=_ L[3]=_ STK[0]=#Ptr0x00007f9f2022ec60 STK[1]=#Ptr0x00007f9f100ac8b8 STK[2]=#32 STK[3]=#32767 STK[4]=_ STK[5]=#1 STK[6]=#Ptr0x00007f9f0c02f728 STK[7]=#Ptr0x00007f9f100af8d0
        # storem::workload @ bci:22 (line 10) L[0]=rsp + #48 L[1]=RBP L[2]=rsp + #100 L[3]=rsp + #40 L[4]=_ L[5]=_
        # OopMap {rbp=Oop [48]=Oop [112]=Oop off=1412/0x584}

584     B30: #	out( B19 ) <- in( B29 )  Freq: 0.00319601
        # Block is sole successor of call
584     movq    R13, RBP	# spill
587     movl    RBX, [rsp + #40]	# spill
58b     movq    R11, [rsp + #48]	# spill
590     movl    R10, [rsp + #56]	# spill
595     movl    R8, [rsp + #60]	# spill
59a     vmovdqu XMM2,[rsp + 64]	# spill
5a0     movl    RBP, [rsp + #96]	# spill
5a4     movq    RCX, [rsp + #104]	# spill
5a9     movq    RDI, [rsp + #112]	# spill
5ae     jmp     B19

5b3     B31: #	out( B41 B32 ) <- in( B20 )  Freq: 0.00319607
5b3     movq    [rsp + #112], RAX	# spill
5b8     movq    [rsp + #104], R14	# spill
5bd     movl    [rsp + #88], R9	# spill
5c2     movq    [rsp + #80], RDX	# spill
5c7     movq    [rsp + #72], RCX	# spill
5cc     movl    [rsp + #68], RBP	# spill
5d0     vmovdqu [rsp + 128],XMM2	# spill
5d9     movl    [rsp + #64], R8	# spill
5de     movl    [rsp + #52], R10	# spill
5e3     movq    [rsp + #56], R11	# spill
5e8     movl    [rsp + #48], RBX	# spill
5ec     movq    [rsp + #40], R13	# spill
5f1     movq    RSI, precise [byte: :Constant:exact *	# ptr
5fb     movl    RDX, #32	# int
600     call,static  wrapper for: _new_array_Java
        # jdk.incubator.vector.ByteVector::fromArray0Template @ bci:32 (line 3746) L[0]=_ L[1]=_ L[2]=_ L[3]=_ STK[0]=#Ptr0x00007f9f08138fb0 STK[1]=#Ptr0x00007f9f100ac8b8 STK[2]=#32 STK[3]=rsp + #40 STK[4]=rsp + #112 STK[5]=_ STK[6]=rsp + #40 STK[7]=rsp + #104 STK[8]=_ STK[9]=#Ptr0x00007f9f0c02f728 STK[10]=#Ptr0x00007f9f0813b380
        # jdk.incubator.vector.Byte256Vector::fromArray0 @ bci:3 (line 907) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.ByteVector::fromArray @ bci:24 (line 2981) L[0]=_ L[1]=_ L[2]=_ L[3]=_
        # storem::workload @ bci:32 (line 12) L[0]=rsp + #56 L[1]=rsp + #40 L[2]=rsp + #100 L[3]=rsp + #48 L[4]=#ScObj0 L[5]=_
        # ScObj0 jdk/incubator/vector/Byte256Vector$Byte256Mask={ [payload :0]=rsp + #128 }
        # OopMap {[40]=Oop [56]=Oop [80]=Oop off=1544/0x608}

608     B32: #	out( B22 ) <- in( B31 )  Freq: 0.003196
        # Block is sole successor of call
608     vmovdqu XMM2,[rsp + 128]	# spill
611     movq    RSI, RAX	# spill
614     jmp     B22

619     B33: #	out( B4 ) <- in( B1 )  Freq: 0.000999987
619     xorl    R11, R11	# ptr
        nop 	# 4 bytes pad for loops and calls
620     jmp     B4

625     B34: #	out( N741 ) <- in( B19 )  Freq: 3.23797e-05
625     movl    RSI, #-28	# int
62a     movl    [rsp + #40], RBX	# spill
62e     movq    [rsp + #48], R11	# spill
633     movq    [rsp - #8], rax	# 32-bit mem-mem spill
	movl    rax, [rsp + #100]
	movl    [rsp + #44], rax
	movq    rax, [rsp - #8]
645     movq    [rsp + #64], R13	# spill
64a     movl    [rsp + #72], R8	# spill
64f     vmovdqu [rsp + 96],XMM2	# spill
        nop 	# 3 bytes pad for loops and calls
658     call,static  wrapper for: uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')
        # java.util.Objects::checkIndex @ bci:3 (line 385) L[0]=_ L[1]=_ STK[0]=rsp + #40 STK[1]=rsp + #72 STK[2]=#NULL
        # jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize @ bci:43 (line 57) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.ByteVector::fromArray @ bci:9 (line 2979) L[0]=#Ptr0x00007f9f0c02f728 L[1]=rsp + #64 L[2]=_ L[3]=_
        # storem::workload @ bci:32 (line 12) L[0]=rsp + #48 L[1]=rsp + #64 L[2]=rsp + #44 L[3]=rsp + #40 L[4]=#ScObj0 L[5]=_
        # ScObj0 jdk/incubator/vector/Byte256Vector$Byte256Mask={ [payload :0]=rsp + #96 }
        # OopMap {[48]=Oop [64]=Oop off=1632/0x660}
660     stop	# ShouldNotReachHere

674     B35: #	out( N741 ) <- in( B11 )  Freq: 1.52375e-05
674     vmovdqu XMM1,XMM0	# spill
678     movq    R10, [rsp + #72]	# spill
67d     cmpq    RBP, R10	# CmpL3
	movl    RBP, -1
	jl,s    done
	setne   RBP
	movzbl  RBP, RBP
	done:
68f     movl    RSI, #-187	# int
694     movl    R11, [rsp + #100]	# spill
699     movl    [rsp + #64], R11	# spill
69e     vmovdqu [rsp + 96],XMM1	# spill
6a4     vmovdqu [rsp + 128],XMM2	# spill
        nop 	# 3 bytes pad for loops and calls
6b0     call,static  wrapper for: uncommon_trap(reason='unstable_if' action='reinterpret' debug_id='0')
        # jdk.incubator.vector.VectorIntrinsics::indexInRange @ bci:12 (line 49) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ STK[0]=RBP
        # jdk.incubator.vector.ByteVector::intoArray @ bci:33 (line 3424) L[0]=#ScObj0 L[1]=rsp + #56 L[2]=rsp + #88 L[3]=#ScObj1 L[4]=#Ptr0x00007f9f0c02f728
        # ScObj0 jdk/incubator/vector/Byte256Vector={ [payload :0]=rsp + #96 }
        # ScObj1 jdk/incubator/vector/Byte256Vector$Byte256Mask={ [payload :0]=rsp + #128 }
        # storem::workload @ bci:43 (line 13) L[0]=rsp + #56 L[1]=rsp + #40 L[2]=rsp + #64 L[3]=rsp + #88 L[4]=_ L[5]=_
        # OopMap {[40]=Oop [56]=Oop off=1720/0x6b8}
6b8     stop	# ShouldNotReachHere

6cc     B36: #	out( N741 ) <- in( B25 )  Freq: 1.0129e-06
6cc     movl    RSI, #-28	# int
6d1     movq    RBP, R11	# spill
6d4     call,static  wrapper for: uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')
        # storem::workload @ bci:62 (line 15) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ STK[0]=RBP STK[1]=rsp + #100
        # OopMap {rbp=Oop off=1756/0x6dc}
6dc     stop	# ShouldNotReachHere

6f0     B37: #	out( N741 ) <- in( B2 B5 )  Freq: 1.999e-06
6f0     movl    RSI, #-115	# int
6f5     movl    [rsp + #40], RBX	# spill
6f9     movq    [rsp + #48], R13	# spill
        nop 	# 2 bytes pad for loops and calls
700     call,static  wrapper for: uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')
        # storem::workload @ bci:2 (line 9) L[0]=RBP L[1]=rsp + #48 L[2]=rsp + #100 L[3]=rsp + #40 L[4]=_ L[5]=_
        # OopMap {rbp=Oop [48]=Oop off=1800/0x708}
708     stop	# ShouldNotReachHere

71c     B38: #	out( N741 ) <- in( B8 B6 B7 )  Freq: 3.01327e-06
71c     movl    RSI, #-66	# int
721     movl    RBP, RBX	# spill
723     movq    [rsp + #40], R11	# spill
728     movq    [rsp + #48], R13	# spill
        nop 	# 3 bytes pad for loops and calls
730     call,static  wrapper for: uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')
        # storem::workload @ bci:2 (line 9) L[0]=rsp + #40 L[1]=rsp + #48 L[2]=rsp + #100 L[3]=RBP L[4]=_ L[5]=_
        # OopMap {[40]=Oop [48]=Oop off=1848/0x738}
738     stop	# ShouldNotReachHere

74c     B39: #	out( N741 ) <- in( B4 )  Freq: 1.01328e-06
74c     movl    RSI, #-138	# int
751     movl    RBP, RBX	# spill
753     movq    [rsp + #40], R11	# spill
758     call,static  wrapper for: uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')
        # storem::workload @ bci:2 (line 9) L[0]=rsp + #40 L[1]=#NULL L[2]=rsp + #100 L[3]=RBP L[4]=_ L[5]=_
        # OopMap {[40]=Oop off=1888/0x760}
760     stop	# ShouldNotReachHere

774     B40: #	out( B42 ) <- in( B23 )  Freq: 3.19607e-08
774     # exception oop is in rax; no code emitted
774     jmp,s   B42

776     B41: #	out( B42 ) <- in( B31 )  Freq: 3.19607e-08
776     # exception oop is in rax; no code emitted

776     B42: #	out( B47 ) <- in( B41 B40 )  Freq: 6.39214e-08
776     movq    RSI, RAX	# spill
779     jmp,s   B47

77b     B43: #	out( B45 ) <- in( B29 )  Freq: 3.19607e-08
77b     # exception oop is in rax; no code emitted
77b     jmp,s   B45

77d     B44: #	out( B45 ) <- in( B27 )  Freq: 3.19607e-08
77d     # exception oop is in rax; no code emitted

77d     B45: #	out( B47 ) <- in( B44 B43 )  Freq: 6.39214e-08
77d     movq    RSI, RAX	# spill
780     jmp,s   B47

782     B46: #	out( B47 ) <- in( B12 )  Freq: 0.000319554
782     # exception oop is in rax; no code emitted
782     movq    RSI, RAX	# spill

785     B47: #	out( N741 ) <- in( B45 B42 B46 )  Freq: 0.000319682
785     vzeroupper
	addq    rsp, 240	# Destroy frame
	popq    rbp

790     jmp     rethrow_stub

--------------------------------------------------------------------------------
----------------------------------- Assembly -----------------------------------

Compiled method (c2)    1218  230 %           storem::workload @ 2 (64 bytes)
 total in heap  [0x00007f9fa8652c10,0x00007f9fa8653dc0] = 4528
 relocation     [0x00007f9fa8652d88,0x00007f9fa8652e70] = 232
 main code      [0x00007f9fa8652e80,0x00007f9fa8653630] = 1968
 stub code      [0x00007f9fa8653630,0x00007f9fa8653658] = 40
 oops           [0x00007f9fa8653658,0x00007f9fa8653690] = 56
 metadata       [0x00007f9fa8653690,0x00007f9fa8653760] = 208
 scopes data    [0x00007f9fa8653760,0x00007f9fa8653a08] = 680
 scopes pcs     [0x00007f9fa8653a08,0x00007f9fa8653d18] = 784
 dependencies   [0x00007f9fa8653d18,0x00007f9fa8653d30] = 24
 handler table  [0x00007f9fa8653d30,0x00007f9fa8653da8] = 120
 nul chk table  [0x00007f9fa8653da8,0x00007f9fa8653dc0] = 24

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x00007f9f3c510e08} 'workload' '([B[BI)B' in 'storem'
 ;; N741: #	out( B1 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x00007f9fa8652e80:   callq  0x00007f9facedcfe0           ;   {runtime_call os::breakpoint()}
  0x00007f9fa8652e85:   nop
  0x00007f9fa8652e86:   nop
  0x00007f9fa8652e87:   nop
  0x00007f9fa8652e88:   nop
  0x00007f9fa8652e89:   nop
  0x00007f9fa8652e8a:   nop
  0x00007f9fa8652e8b:   nop
  0x00007f9fa8652e8c:   nop
  0x00007f9fa8652e8d:   nop
  0x00007f9fa8652e8e:   nop
  0x00007f9fa8652e8f:   nop
 ;; B1: #	out( B33 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x00007f9fa8652e90:   mov    %eax,-0x18000(%rsp)
  0x00007f9fa8652e97:   push   %rbp
  0x00007f9fa8652e98:   sub    $0xf0,%rsp
  0x00007f9fa8652e9f:   mov    0x28(%rsi),%rbp
  0x00007f9fa8652ea3:   mov    0x20(%rsi),%r13
  0x00007f9fa8652ea7:   mov    0x10(%rsi),%ebx
  0x00007f9fa8652eaa:   mov    0x18(%rsi),%r10d             ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - storem::workload@2 (line 9)
  0x00007f9fa8652eae:   mov    %r10d,0x64(%rsp)
  0x00007f9fa8652eb3:   mov    %rsi,%rdi
  0x00007f9fa8652eb6:   nop
  0x00007f9fa8652eb7:   nop
  0x00007f9fa8652eb8:   nop
  0x00007f9fa8652eb9:   nop
  0x00007f9fa8652eba:   nop
  0x00007f9fa8652ebb:   nop
  0x00007f9fa8652ebc:   nop
  0x00007f9fa8652ebd:   nop
  0x00007f9fa8652ebe:   nop
  0x00007f9fa8652ebf:   nop
  0x00007f9fa8652ec0:   vzeroupper 
  0x00007f9fa8652ec3:   movabs $0x7f9fad065870,%r10
  0x00007f9fa8652ecd:   callq  *%r10
  0x00007f9fa8652ed0:   test   %rbp,%rbp                    ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
                                                            ; - jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
                                                            ; - storem::workload@43 (line 13)
  0x00007f9fa8652ed3:   je     0x00007f9fa8653499
 ;; B2: #	out( B37 B3 ) <- in( B1 )  Freq: 0.999
  0x00007f9fa8652ed9:   mov    0x8(%rbp),%r11d
  0x00007f9fa8652edd:   nop
  0x00007f9fa8652ede:   nop
  0x00007f9fa8652edf:   nop
  0x00007f9fa8652ee0:   cmp    $0x409d8,%r11d               ;   {metadata({type array byte})}
  0x00007f9fa8652ee7:   jne    0x00007f9fa8653570
 ;; B3: #	out( B4 ) <- in( B2 )  Freq: 0.998999
  0x00007f9fa8652eed:   mov    %rbp,%r11
 ;; B4: #	out( B39 B5 ) <- in( B3 B33 )  Freq: 0.999999
  0x00007f9fa8652ef0:   mov    0x8(%r13),%r8d               ; implicit exception: dispatches to 0x00007f9fa86535cc
 ;; B5: #	out( B37 B6 ) <- in( B4 )  Freq: 0.999998
  0x00007f9fa8652ef4:   nop
  0x00007f9fa8652ef5:   nop
  0x00007f9fa8652ef6:   nop
  0x00007f9fa8652ef7:   nop
  0x00007f9fa8652ef8:   nop
  0x00007f9fa8652ef9:   nop
  0x00007f9fa8652efa:   nop
  0x00007f9fa8652efb:   nop
  0x00007f9fa8652efc:   nop
  0x00007f9fa8652efd:   nop
  0x00007f9fa8652efe:   nop
  0x00007f9fa8652eff:   nop
  0x00007f9fa8652f00:   cmp    $0x409d8,%r8d                ;   {metadata({type array byte})}
  0x00007f9fa8652f07:   jne    0x00007f9fa8653570           ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - storem::workload@2 (line 9)
 ;; B6: #	out( B38 B7 ) <- in( B5 )  Freq: 0.999997
  0x00007f9fa8652f0d:   mov    0xc(%r13),%r10d              ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - storem::workload@7 (line 9)
  0x00007f9fa8652f11:   mov    %r10d,%r8d
  0x00007f9fa8652f14:   add    $0xffffffe1,%r8d
  0x00007f9fa8652f18:   test   %r8d,%r8d
  0x00007f9fa8652f1b:   nop
  0x00007f9fa8652f1c:   nop
  0x00007f9fa8652f1d:   nop
  0x00007f9fa8652f1e:   nop
  0x00007f9fa8652f1f:   nop
  0x00007f9fa8652f20:   jl     0x00007f9fa865359c
 ;; B7: #	out( B38 B8 ) <- in( B6 )  Freq: 0.999996
  0x00007f9fa8652f26:   mov    $0x7fff,%r9d
  0x00007f9fa8652f2c:   vpcmpeqb %ymm0,%ymm0,%ymm0
  0x00007f9fa8652f30:   movabs $0x101010101010101,%rdi
  0x00007f9fa8652f3a:   pdep   %rdi,%r9,%rdi
  0x00007f9fa8652f3f:   mov    %r9,%rcx
  0x00007f9fa8652f42:   vpxor  %ymm1,%ymm1,%ymm1
  0x00007f9fa8652f46:   vmovq  %rdi,%xmm1
  0x00007f9fa8652f4b:   vmovq  %rdi,%xmm2
  0x00007f9fa8652f50:   movabs $0x101010101010101,%rdi
  0x00007f9fa8652f5a:   shr    $0x8,%rcx
  0x00007f9fa8652f5e:   pdep   %rdi,%rcx,%rdi
  0x00007f9fa8652f63:   vpinsrq $0x1,%rdi,%xmm1,%xmm1
  0x00007f9fa8652f69:   vmovdqu %ymm1,%ymm2
  0x00007f9fa8652f6d:   vpxor  %xmm1,%xmm1,%xmm1
  0x00007f9fa8652f71:   movabs $0x101010101010101,%rdi
  0x00007f9fa8652f7b:   shr    $0x8,%rcx
  0x00007f9fa8652f7f:   pdep   %rdi,%rcx,%rdi
  0x00007f9fa8652f84:   vpinsrq $0x0,%rdi,%xmm1,%xmm1
  0x00007f9fa8652f8a:   movabs $0x101010101010101,%rdi
  0x00007f9fa8652f94:   shr    $0x8,%rcx
  0x00007f9fa8652f98:   pdep   %rdi,%rcx,%rdi
  0x00007f9fa8652f9d:   vpinsrq $0x1,%rdi,%xmm1,%xmm1
  0x00007f9fa8652fa3:   vinsertf128 $0x1,%xmm1,%ymm2,%ymm2  ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
                                                            ; - jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
                                                            ; - storem::workload@43 (line 13)
  0x00007f9fa8652fa9:   vpxor  %ymm1,%ymm1,%ymm1
  0x00007f9fa8652fad:   vpsubb %ymm2,%ymm1,%ymm1            ;*invokestatic fromBitsCoerced {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.VectorMask::fromLong@39 (line 242)
                                                            ; - storem::workload@22 (line 10)
  0x00007f9fa8652fb1:   vptest %ymm0,%ymm1
  0x00007f9fa8652fb6:   setb   %r9b
  0x00007f9fa8652fba:   movzbl %r9b,%r9d
  0x00007f9fa8652fbe:   nop
  0x00007f9fa8652fbf:   nop
  0x00007f9fa8652fc0:   test   %r9d,%r9d
  0x00007f9fa8652fc3:   jne    0x00007f9fa865359c
 ;; B8: #	out( B38 B9 ) <- in( B7 )  Freq: 0.999995
  0x00007f9fa8652fc9:   mov    0xc(%r11),%ebp               ; implicit exception: dispatches to 0x00007f9fa865359c
 ;; B9: #	out( B14 ) <- in( B8 )  Freq: 0.999994
  0x00007f9fa8652fcd:   movslq %ebp,%rcx
  0x00007f9fa8652fd0:   and    $0xffffffe0,%r10d            ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
                                                            ; - jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
                                                            ; - storem::workload@43 (line 13)
  0x00007f9fa8652fd4:   add    $0xffffffffffffffe0,%rcx
  0x00007f9fa8652fd8:   jmpq   0x00007f9fa86530ff
  0x00007f9fa8652fdd:   nop
  0x00007f9fa8652fde:   nop
  0x00007f9fa8652fdf:   nop                                 ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - storem::workload@57 (line 9)
 ;; B10: #	out( B11 ) <- in( B22 ) top-of-loop Freq: 31.9522
  0x00007f9fa8652fe0:   mov    %r10,0x110(%r15)
  0x00007f9fa8652fe7:   prefetchw 0xc0(%r10)
  0x00007f9fa8652fef:   movq   $0x1,(%rax)
  0x00007f9fa8652ff6:   movl   $0x983b0,0x8(%rax)           ;   {metadata('jdk/incubator/vector/Byte256Vector')}
 ;; B11: #	out( B35 B12 ) <- in( B24 B10 ) top-of-loop Freq: 31.9554
  0x00007f9fa8652ffd:   mov    0x78(%rsp),%r10
  0x00007f9fa8653002:   cmp    0x5484f87(%rip),%r12        # 0x00007f9fadad7f90
                                                            ;   {external_word}
  0x00007f9fa8653009:   je     0x00007f9fa8653023
 ;; MacroAssembler::encode_heap_oop_not_null2: heap base corrupted?
  0x00007f9fa865300f:   movabs $0x7f9fad6ab8b8,%rdi         ;   {external_word}
  0x00007f9fa8653019:   and    $0xfffffffffffffff0,%rsp
  0x00007f9fa865301d:   callq  0x00007f9facc8ebf0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f9fa8653022:   hlt    
  0x00007f9fa8653023:   test   %r10,%r10
  0x00007f9fa8653026:   jne    0x00007f9fa8653040
 ;; null oop passed to encode_heap_oop_not_null2
  0x00007f9fa865302c:   movabs $0x7f9fad6ab8f8,%rdi         ;   {external_word}
  0x00007f9fa8653036:   and    $0xfffffffffffffff0,%rsp
  0x00007f9fa865303a:   callq  0x00007f9facc8ebf0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f9fa865303f:   hlt    
  0x00007f9fa8653040:   mov    %r10,%r11
  0x00007f9fa8653043:   shr    $0x3,%r11
  0x00007f9fa8653047:   mov    %r11d,0xc(%rax)
  0x00007f9fa865304b:   mov    0x68(%rsp),%rbp
  0x00007f9fa8653050:   cmp    0x48(%rsp),%rbp              ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
                                                            ; - jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
                                                            ; - storem::workload@43 (line 13)
  0x00007f9fa8653055:   jg     0x00007f9fa86534f4
 ;; B12: #	out( B46 B13 ) <- in( B11 )  Freq: 31.9554
  0x00007f9fa865305b:   vmovdqu %ymm2,0x80(%rsp)
  0x00007f9fa8653064:   movabs $0x11f97c888,%rsi            ;   {oop(a 'java/lang/Class'{0x000000011f97c888} = 'jdk/incubator/vector/Byte256Vector')}
  0x00007f9fa865306e:   movabs $0x11f97c918,%rdx            ;   {oop(a 'java/lang/Class'{0x000000011f97c918} = 'jdk/incubator/vector/Byte256Vector$Byte256Mask')}
  0x00007f9fa8653078:   movabs $0x11f0001c0,%rcx            ;   {oop(a 'java/lang/Class'{0x000000011f0001c0} = byte)}
  0x00007f9fa8653082:   mov    $0x20,%r8d
  0x00007f9fa8653088:   mov    0x38(%rsp),%r9
  0x00007f9fa865308d:   mov    0x70(%rsp),%rdi
  0x00007f9fa8653092:   mov    %rax,(%rsp)
  0x00007f9fa8653096:   mov    0x50(%rsp),%r10
  0x00007f9fa865309b:   mov    %r10,0x8(%rsp)
  0x00007f9fa86530a0:   mov    %r9,0x10(%rsp)
  0x00007f9fa86530a5:   rex.W pushq 0x68(%rsp)
  0x00007f9fa86530aa:   rex.W popq 0x18(%rsp)
  0x00007f9fa86530af:   movabs $0x11f9bbcc0,%r10            ;   {oop(a 'jdk/incubator/vector/ByteVector$$Lambda$40+0x000000080009c238'{0x000000011f9bbcc0})}
  0x00007f9fa86530b9:   mov    %r10,0x20(%rsp)
  0x00007f9fa86530be:   nop
  0x00007f9fa86530bf:   nop
  0x00007f9fa86530c0:   vzeroupper 
  0x00007f9fa86530c3:   callq  0x00007f9fa861b5a0           ; ImmutableOopMap {[40]=Oop [56]=Oop }
                                                            ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
                                                            ; - jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
                                                            ; - storem::workload@43 (line 13)
                                                            ;   {static_call}
 ;; B13: #	out( B14 ) <- in( B12 )  Freq: 31.9547
  0x00007f9fa86530c8:   mov    0x3d0(%r15),%r10
  0x00007f9fa86530cf:   mov    0x58(%rsp),%ebx              ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
                                                            ; - jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
                                                            ; - storem::workload@43 (line 13)
  0x00007f9fa86530d3:   add    $0x20,%ebx                   ; ImmutableOopMap {[40]=Oop [56]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) storem::workload@57 (line 9)
  0x00007f9fa86530d6:   test   %eax,(%r10)                  ;   {poll}
  0x00007f9fa86530d9:   mov    0x28(%rsp),%r13
  0x00007f9fa86530de:   mov    0x38(%rsp),%r11
  0x00007f9fa86530e3:   mov    0x34(%rsp),%r10d
  0x00007f9fa86530e8:   mov    0x40(%rsp),%r8d
  0x00007f9fa86530ed:   vmovdqu 0x80(%rsp),%ymm2
  0x00007f9fa86530f6:   mov    0x44(%rsp),%ebp
  0x00007f9fa86530fa:   mov    0x48(%rsp),%rcx
 ;; B14: #	out( B25 B15 ) <- in( B9 B13 ) Loop( B14-B13 inner ) Freq: 32.955
  0x00007f9fa86530ff:   nop
  0x00007f9fa8653100:   cmp    %r10d,%ebx                   ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
                                                            ; - jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
                                                            ; - storem::workload@43 (line 13)
  0x00007f9fa8653103:   jge    0x00007f9fa865332f
 ;; B15: #	out( B27 B16 ) <- in( B14 )  Freq: 31.9554
  0x00007f9fa8653109:   mov    0x110(%r15),%rdi
  0x00007f9fa8653110:   mov    %rdi,%r9
  0x00007f9fa8653113:   add    $0x30,%r9
  0x00007f9fa8653117:   nop
  0x00007f9fa8653118:   nop
  0x00007f9fa8653119:   nop
  0x00007f9fa865311a:   nop
  0x00007f9fa865311b:   nop
  0x00007f9fa865311c:   nop
  0x00007f9fa865311d:   nop
  0x00007f9fa865311e:   nop
  0x00007f9fa865311f:   nop
  0x00007f9fa8653120:   cmp    0x120(%r15),%r9
  0x00007f9fa8653127:   jae    0x00007f9fa865335c
 ;; B16: #	out( B17 ) <- in( B15 )  Freq: 31.9522
  0x00007f9fa865312d:   mov    %r9,0x110(%r15)
  0x00007f9fa8653134:   prefetchw 0xc0(%r9)
  0x00007f9fa865313c:   movq   $0x1,(%rdi)
  0x00007f9fa8653143:   prefetchw 0x100(%r9)
  0x00007f9fa865314b:   movl   $0x401f8,0x8(%rdi)           ;   {metadata({type array bool})}
  0x00007f9fa8653152:   prefetchw 0x140(%r9)
  0x00007f9fa865315a:   movl   $0x20,0xc(%rdi)
  0x00007f9fa8653161:   prefetchw 0x180(%r9)
  0x00007f9fa8653169:   mov    %r12,0x10(%rdi)
  0x00007f9fa865316d:   mov    %r12,0x18(%rdi)
  0x00007f9fa8653171:   mov    %r12,0x20(%rdi)
  0x00007f9fa8653175:   mov    %r12,0x28(%rdi)
 ;; B17: #	out( B29 B18 ) <- in( B28 B16 )  Freq: 31.9554
  0x00007f9fa8653179:   vmovdqu %ymm2,0x10(%rdi)
  0x00007f9fa865317e:   mov    0x110(%r15),%rax
  0x00007f9fa8653185:   mov    %rax,%r9
  0x00007f9fa8653188:   add    $0x10,%r9
  0x00007f9fa865318c:   cmp    0x120(%r15),%r9
  0x00007f9fa8653193:   jae    0x00007f9fa86533c5
 ;; B18: #	out( B19 ) <- in( B17 )  Freq: 31.9522
  0x00007f9fa8653199:   mov    %r9,0x110(%r15)
  0x00007f9fa86531a0:   prefetchw 0xc0(%r9)
  0x00007f9fa86531a8:   movq   $0x1,(%rax)
  0x00007f9fa86531af:   movl   $0x98a40,0x8(%rax)           ;   {metadata('jdk/incubator/vector/Byte256Vector$Byte256Mask')}
 ;; B19: #	out( B34 B20 ) <- in( B30 B18 )  Freq: 31.9554
  0x00007f9fa86531b6:   cmp    0x5484dd3(%rip),%r12        # 0x00007f9fadad7f90
                                                            ;   {external_word}
  0x00007f9fa86531bd:   je     0x00007f9fa86531d7
 ;; MacroAssembler::encode_heap_oop_not_null2: heap base corrupted?
  0x00007f9fa86531c3:   movabs $0x7f9fad6ab8b8,%rdi         ;   {external_word}
  0x00007f9fa86531cd:   and    $0xfffffffffffffff0,%rsp
  0x00007f9fa86531d1:   callq  0x00007f9facc8ebf0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f9fa86531d6:   hlt    
  0x00007f9fa86531d7:   test   %rdi,%rdi
  0x00007f9fa86531da:   jne    0x00007f9fa86531f4
 ;; null oop passed to encode_heap_oop_not_null2
  0x00007f9fa86531e0:   movabs $0x7f9fad6ab8f8,%rdi         ;   {external_word}
  0x00007f9fa86531ea:   and    $0xfffffffffffffff0,%rsp
  0x00007f9fa86531ee:   callq  0x00007f9facc8ebf0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f9fa86531f3:   hlt    
  0x00007f9fa86531f4:   mov    %rdi,%r9
  0x00007f9fa86531f7:   shr    $0x3,%r9
  0x00007f9fa86531fb:   mov    %r9d,0xc(%rax)
  0x00007f9fa86531ff:   mov    %rax,%rdx
  0x00007f9fa8653202:   cmp    %r8d,%ebx
  0x00007f9fa8653205:   jae    0x00007f9fa86534a5           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - storem::workload@57 (line 9)
 ;; B20: #	out( B31 B21 ) <- in( B19 )  Freq: 31.9554
  0x00007f9fa865320b:   mov    0x110(%r15),%rsi
  0x00007f9fa8653212:   mov    %rsi,%rdi
  0x00007f9fa8653215:   add    $0x30,%rdi
  0x00007f9fa8653219:   mov    %ebx,%r9d                    ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::checkIndex@3 (line 385)
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 57)
                                                            ; - jdk.incubator.vector.ByteVector::fromArray@9 (line 2979)
                                                            ; - storem::workload@32 (line 12)
  0x00007f9fa865321c:   movslq %r9d,%r14                    ;*i2l {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::arrayAddress@4 (line 3972)
                                                            ; - jdk.incubator.vector.ByteVector::fromArray0Template@20 (line 3748)
                                                            ; - jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 907)
                                                            ; - jdk.incubator.vector.ByteVector::fromArray@24 (line 2981)
                                                            ; - storem::workload@32 (line 12)
  0x00007f9fa865321f:   mov    %r14,%rax                    ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
                                                            ; - jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
                                                            ; - storem::workload@43 (line 13)
  0x00007f9fa8653222:   add    $0x10,%rax
  0x00007f9fa8653226:   cmp    0x120(%r15),%rdi
  0x00007f9fa865322d:   jae    0x00007f9fa8653433           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - storem::workload@57 (line 9)
 ;; B21: #	out( B22 ) <- in( B20 )  Freq: 31.9522
  0x00007f9fa8653233:   mov    %rdi,0x110(%r15)
  0x00007f9fa865323a:   prefetchw 0xc0(%rdi)
  0x00007f9fa8653241:   movq   $0x1,(%rsi)
  0x00007f9fa8653248:   prefetchw 0x100(%rdi)
  0x00007f9fa865324f:   movl   $0x409d8,0x8(%rsi)           ;   {metadata({type array byte})}
  0x00007f9fa8653256:   prefetchw 0x140(%rdi)
  0x00007f9fa865325d:   movl   $0x20,0xc(%rsi)
  0x00007f9fa8653264:   prefetchw 0x180(%rdi)
  0x00007f9fa865326b:   mov    %r12,0x10(%rsi)
  0x00007f9fa865326f:   mov    %r12,0x18(%rsi)
  0x00007f9fa8653273:   mov    %r12,0x20(%rsi)
  0x00007f9fa8653277:   mov    %r12,0x28(%rsi)
  0x00007f9fa865327b:   mov    %r13,0x28(%rsp)
  0x00007f9fa8653280:   mov    %ebx,0x30(%rsp)
  0x00007f9fa8653284:   mov    %r11,0x38(%rsp)
  0x00007f9fa8653289:   mov    %r10d,0x34(%rsp)
  0x00007f9fa865328e:   mov    %r8d,0x40(%rsp)
  0x00007f9fa8653293:   mov    %ebp,0x44(%rsp)
  0x00007f9fa8653297:   mov    %rcx,0x48(%rsp)
  0x00007f9fa865329c:   mov    %rdx,0x50(%rsp)
  0x00007f9fa86532a1:   mov    %r9d,0x58(%rsp)
  0x00007f9fa86532a6:   mov    %r14,0x68(%rsp)
  0x00007f9fa86532ab:   mov    %rax,0x70(%rsp)
 ;; B22: #	out( B10 B23 ) <- in( B32 B21 )  Freq: 31.9554
  0x00007f9fa86532b0:   mov    0x28(%rsp),%r10
  0x00007f9fa86532b5:   mov    0x68(%rsp),%r11              ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
                                                            ; - jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
                                                            ; - storem::workload@43 (line 13)
  0x00007f9fa86532ba:   vmovdqu 0x10(%r10,%r11,1),%ymm0     ;*invokestatic load {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::fromArray0Template@32 (line 3746)
                                                            ; - jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 907)
                                                            ; - jdk.incubator.vector.ByteVector::fromArray@24 (line 2981)
                                                            ; - storem::workload@32 (line 12)
  0x00007f9fa86532c1:   vmovdqu %ymm0,0x10(%rsi)
  0x00007f9fa86532c6:   mov    %rsi,0x78(%rsp)
  0x00007f9fa86532cb:   mov    0x110(%r15),%rax
  0x00007f9fa86532d2:   mov    %rax,%r10
  0x00007f9fa86532d5:   add    $0x10,%r10                   ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - storem::workload@57 (line 9)
  0x00007f9fa86532d9:   nop
  0x00007f9fa86532da:   nop
  0x00007f9fa86532db:   nop
  0x00007f9fa86532dc:   nop
  0x00007f9fa86532dd:   nop
  0x00007f9fa86532de:   nop
  0x00007f9fa86532df:   nop
  0x00007f9fa86532e0:   cmp    0x120(%r15),%r10
  0x00007f9fa86532e7:   jb     0x00007f9fa8652fe0
 ;; B23: #	out( B40 B24 ) <- in( B22 )  Freq: 0.00319607
  0x00007f9fa86532ed:   vmovdqu %ymm0,0xa0(%rsp)
  0x00007f9fa86532f6:   vmovdqu %ymm2,0x80(%rsp)
  0x00007f9fa86532ff:   movabs $0x8000983b0,%rsi            ;   {metadata('jdk/incubator/vector/Byte256Vector')}
  0x00007f9fa8653309:   mov    0x30(%rsp),%ebp              ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
                                                            ; - jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
                                                            ; - storem::workload@43 (line 13)
  0x00007f9fa865330d:   nop
  0x00007f9fa865330e:   nop
  0x00007f9fa865330f:   nop
  0x00007f9fa8653310:   vzeroupper 
  0x00007f9fa8653313:   callq  0x00007f9fa8581220           ; ImmutableOopMap {[40]=Oop [56]=Oop [80]=Oop [120]=Oop }
                                                            ;*invokestatic load {reexecute=1 rethrow=0 return_oop=1}
                                                            ; - (reexecute) jdk.incubator.vector.ByteVector::fromArray0Template@32 (line 3746)
                                                            ; - jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 907)
                                                            ; - jdk.incubator.vector.ByteVector::fromArray@24 (line 2981)
                                                            ; - storem::workload@32 (line 12)
                                                            ;   {runtime_call _new_instance_Java}
 ;; B24: #	out( B11 ) <- in( B23 )  Freq: 0.003196
  0x00007f9fa8653318:   vmovdqu 0x80(%rsp),%ymm2
  0x00007f9fa8653321:   vmovdqu 0xa0(%rsp),%ymm0
  0x00007f9fa865332a:   jmpq   0x00007f9fa8652ffd
 ;; B25: #	out( B36 B26 ) <- in( B14 )  Freq: 0.999627
  0x00007f9fa865332f:   mov    0x64(%rsp),%r10d
  0x00007f9fa8653334:   cmp    %ebp,%r10d
  0x00007f9fa8653337:   jae    0x00007f9fa865354c           ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
                                                            ; - jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
                                                            ; - storem::workload@43 (line 13)
 ;; B26: #	out( N741 ) <- in( B25 )  Freq: 0.999626
  0x00007f9fa865333d:   movsbl 0x10(%r11,%r10,1),%eax
  0x00007f9fa8653343:   vzeroupper 
  0x00007f9fa8653346:   add    $0xf0,%rsp
  0x00007f9fa865334d:   pop    %rbp
  0x00007f9fa865334e:   cmp    0x3c8(%r15),%rsp             ;   {poll_return}
  0x00007f9fa8653355:   ja     0x00007f9fa8653615
  0x00007f9fa865335b:   retq   
 ;; B27: #	out( B44 B28 ) <- in( B15 )  Freq: 0.00319607
  0x00007f9fa865335c:   mov    %rcx,0x68(%rsp)
  0x00007f9fa8653361:   mov    %ebp,0x60(%rsp)
  0x00007f9fa8653365:   vmovdqu %ymm2,0x40(%rsp)
  0x00007f9fa865336b:   mov    %r8d,0x3c(%rsp)
  0x00007f9fa8653370:   mov    %r10d,0x38(%rsp)
  0x00007f9fa8653375:   mov    %r11,0x30(%rsp)
  0x00007f9fa865337a:   mov    %ebx,0x28(%rsp)
  0x00007f9fa865337e:   mov    %r13,%rbp                    ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.VectorMask::fromLong@34 (line 242)
                                                            ; - storem::workload@22 (line 10)
  0x00007f9fa8653381:   movabs $0x8000401f8,%rsi            ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
                                                            ; - jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
                                                            ; - storem::workload@43 (line 13)
                                                            ;   {metadata({type array bool})}
  0x00007f9fa865338b:   mov    $0x20,%edx
  0x00007f9fa8653390:   vzeroupper 
  0x00007f9fa8653393:   callq  0x00007f9fa8580f20           ; ImmutableOopMap {rbp=Oop [48]=Oop }
                                                            ;*invokestatic fromBitsCoerced {reexecute=1 rethrow=0 return_oop=1}
                                                            ; - (reexecute) jdk.incubator.vector.VectorMask::fromLong@39 (line 242)
                                                            ; - storem::workload@22 (line 10)
                                                            ;   {runtime_call _new_array_Java}
 ;; B28: #	out( B17 ) <- in( B27 )  Freq: 0.00319601
  0x00007f9fa8653398:   mov    %rbp,%r13
  0x00007f9fa865339b:   mov    0x28(%rsp),%ebx
  0x00007f9fa865339f:   mov    0x30(%rsp),%r11
  0x00007f9fa86533a4:   mov    0x38(%rsp),%r10d
  0x00007f9fa86533a9:   mov    0x3c(%rsp),%r8d
  0x00007f9fa86533ae:   vmovdqu 0x40(%rsp),%ymm2
  0x00007f9fa86533b4:   mov    0x60(%rsp),%ebp
  0x00007f9fa86533b8:   mov    0x68(%rsp),%rcx
  0x00007f9fa86533bd:   mov    %rax,%rdi
  0x00007f9fa86533c0:   jmpq   0x00007f9fa8653179
 ;; B29: #	out( B43 B30 ) <- in( B17 )  Freq: 0.00319607
  0x00007f9fa86533c5:   mov    %rdi,0x70(%rsp)
  0x00007f9fa86533ca:   mov    %rcx,0x68(%rsp)
  0x00007f9fa86533cf:   mov    %ebp,0x60(%rsp)
  0x00007f9fa86533d3:   vmovdqu %ymm2,0x40(%rsp)
  0x00007f9fa86533d9:   mov    %r8d,0x3c(%rsp)
  0x00007f9fa86533de:   mov    %r10d,0x38(%rsp)
  0x00007f9fa86533e3:   mov    %r11,0x30(%rsp)
  0x00007f9fa86533e8:   mov    %ebx,0x28(%rsp)
  0x00007f9fa86533ec:   mov    %r13,%rbp
  0x00007f9fa86533ef:   movabs $0x800098a40,%rsi            ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
                                                            ; - jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
                                                            ; - storem::workload@43 (line 13)
                                                            ;   {metadata('jdk/incubator/vector/Byte256Vector$Byte256Mask')}
  0x00007f9fa86533f9:   nop
  0x00007f9fa86533fa:   nop
  0x00007f9fa86533fb:   nop
  0x00007f9fa86533fc:   vzeroupper 
  0x00007f9fa86533ff:   callq  0x00007f9fa8581220           ; ImmutableOopMap {rbp=Oop [48]=Oop [112]=Oop }
                                                            ;*invokestatic fromBitsCoerced {reexecute=1 rethrow=0 return_oop=1}
                                                            ; - (reexecute) jdk.incubator.vector.VectorMask::fromLong@39 (line 242)
                                                            ; - storem::workload@22 (line 10)
                                                            ;   {runtime_call _new_instance_Java}
 ;; B30: #	out( B19 ) <- in( B29 )  Freq: 0.00319601
  0x00007f9fa8653404:   mov    %rbp,%r13
  0x00007f9fa8653407:   mov    0x28(%rsp),%ebx
  0x00007f9fa865340b:   mov    0x30(%rsp),%r11
  0x00007f9fa8653410:   mov    0x38(%rsp),%r10d
  0x00007f9fa8653415:   mov    0x3c(%rsp),%r8d
  0x00007f9fa865341a:   vmovdqu 0x40(%rsp),%ymm2
  0x00007f9fa8653420:   mov    0x60(%rsp),%ebp
  0x00007f9fa8653424:   mov    0x68(%rsp),%rcx
  0x00007f9fa8653429:   mov    0x70(%rsp),%rdi
  0x00007f9fa865342e:   jmpq   0x00007f9fa86531b6
 ;; B31: #	out( B41 B32 ) <- in( B20 )  Freq: 0.00319607
  0x00007f9fa8653433:   mov    %rax,0x70(%rsp)
  0x00007f9fa8653438:   mov    %r14,0x68(%rsp)
  0x00007f9fa865343d:   mov    %r9d,0x58(%rsp)
  0x00007f9fa8653442:   mov    %rdx,0x50(%rsp)
  0x00007f9fa8653447:   mov    %rcx,0x48(%rsp)
  0x00007f9fa865344c:   mov    %ebp,0x44(%rsp)
  0x00007f9fa8653450:   vmovdqu %ymm2,0x80(%rsp)
  0x00007f9fa8653459:   mov    %r8d,0x40(%rsp)
  0x00007f9fa865345e:   mov    %r10d,0x34(%rsp)
  0x00007f9fa8653463:   mov    %r11,0x38(%rsp)
  0x00007f9fa8653468:   mov    %ebx,0x30(%rsp)
  0x00007f9fa865346c:   mov    %r13,0x28(%rsp)
  0x00007f9fa8653471:   movabs $0x8000409d8,%rsi            ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
                                                            ; - jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
                                                            ; - storem::workload@43 (line 13)
                                                            ;   {metadata({type array byte})}
  0x00007f9fa865347b:   mov    $0x20,%edx
  0x00007f9fa8653480:   vzeroupper 
  0x00007f9fa8653483:   callq  0x00007f9fa8580f20           ; ImmutableOopMap {[40]=Oop [56]=Oop [80]=Oop }
                                                            ;*invokestatic load {reexecute=1 rethrow=0 return_oop=1}
                                                            ; - (reexecute) jdk.incubator.vector.ByteVector::fromArray0Template@32 (line 3746)
                                                            ; - jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 907)
                                                            ; - jdk.incubator.vector.ByteVector::fromArray@24 (line 2981)
                                                            ; - storem::workload@32 (line 12)
                                                            ;   {runtime_call _new_array_Java}
 ;; B32: #	out( B22 ) <- in( B31 )  Freq: 0.003196
  0x00007f9fa8653488:   vmovdqu 0x80(%rsp),%ymm2
  0x00007f9fa8653491:   mov    %rax,%rsi
  0x00007f9fa8653494:   jmpq   0x00007f9fa86532b0
 ;; B33: #	out( B4 ) <- in( B1 )  Freq: 0.000999987
  0x00007f9fa8653499:   xor    %r11d,%r11d
  0x00007f9fa865349c:   nop
  0x00007f9fa865349d:   nop
  0x00007f9fa865349e:   nop
  0x00007f9fa865349f:   nop
  0x00007f9fa86534a0:   jmpq   0x00007f9fa8652ef0
 ;; B34: #	out( N741 ) <- in( B19 )  Freq: 3.23797e-05
  0x00007f9fa86534a5:   mov    $0xffffffe4,%esi
  0x00007f9fa86534aa:   mov    %ebx,0x28(%rsp)
  0x00007f9fa86534ae:   mov    %r11,0x30(%rsp)
  0x00007f9fa86534b3:   mov    %rax,-0x8(%rsp)
  0x00007f9fa86534b8:   mov    0x64(%rsp),%eax
  0x00007f9fa86534bc:   mov    %eax,0x2c(%rsp)
  0x00007f9fa86534c0:   mov    -0x8(%rsp),%rax
  0x00007f9fa86534c5:   mov    %r13,0x40(%rsp)
  0x00007f9fa86534ca:   mov    %r8d,0x48(%rsp)
  0x00007f9fa86534cf:   vmovdqu %ymm2,0x60(%rsp)            ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
                                                            ; - jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
                                                            ; - storem::workload@43 (line 13)
  0x00007f9fa86534d5:   nop
  0x00007f9fa86534d6:   nop
  0x00007f9fa86534d7:   nop
  0x00007f9fa86534d8:   vzeroupper 
  0x00007f9fa86534db:   callq  0x00007f9fa86222a0           ; ImmutableOopMap {[48]=Oop [64]=Oop }
                                                            ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::checkIndex@3 (line 385)
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 57)
                                                            ; - jdk.incubator.vector.ByteVector::fromArray@9 (line 2979)
                                                            ; - storem::workload@32 (line 12)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f9fa86534e0:   movabs $0x7f9fad627fe8,%rdi         ;   {external_word}
  0x00007f9fa86534ea:   and    $0xfffffffffffffff0,%rsp
  0x00007f9fa86534ee:   callq  0x00007f9facc8ebf0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f9fa86534f3:   hlt    
 ;; B35: #	out( N741 ) <- in( B11 )  Freq: 1.52375e-05
  0x00007f9fa86534f4:   vmovdqu %ymm0,%ymm1
  0x00007f9fa86534f8:   mov    0x48(%rsp),%r10
  0x00007f9fa86534fd:   cmp    %r10,%rbp
  0x00007f9fa8653500:   mov    $0xffffffff,%ebp
  0x00007f9fa8653505:   jl     0x00007f9fa865350f
  0x00007f9fa8653507:   setne  %bpl
  0x00007f9fa865350b:   movzbl %bpl,%ebp
  0x00007f9fa865350f:   mov    $0xffffff45,%esi
  0x00007f9fa8653514:   mov    0x64(%rsp),%r11d
  0x00007f9fa8653519:   mov    %r11d,0x40(%rsp)
  0x00007f9fa865351e:   vmovdqu %ymm1,0x60(%rsp)
  0x00007f9fa8653524:   vmovdqu %ymm2,0x80(%rsp)            ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
                                                            ; - jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
                                                            ; - storem::workload@43 (line 13)
  0x00007f9fa865352d:   nop
  0x00007f9fa865352e:   nop
  0x00007f9fa865352f:   nop
  0x00007f9fa8653530:   vzeroupper 
  0x00007f9fa8653533:   callq  0x00007f9fa86222a0           ; ImmutableOopMap {[40]=Oop [56]=Oop }
                                                            ;*ifgt {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) jdk.incubator.vector.VectorIntrinsics::indexInRange@12 (line 49)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@33 (line 3424)
                                                            ; - storem::workload@43 (line 13)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f9fa8653538:   movabs $0x7f9fad627fe8,%rdi         ;   {external_word}
  0x00007f9fa8653542:   and    $0xfffffffffffffff0,%rsp
  0x00007f9fa8653546:   callq  0x00007f9facc8ebf0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f9fa865354b:   hlt                                 ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - storem::workload@62 (line 15)
 ;; B36: #	out( N741 ) <- in( B25 )  Freq: 1.0129e-06
  0x00007f9fa865354c:   mov    $0xffffffe4,%esi
  0x00007f9fa8653551:   mov    %r11,%rbp
  0x00007f9fa8653554:   vzeroupper 
  0x00007f9fa8653557:   callq  0x00007f9fa86222a0           ; ImmutableOopMap {rbp=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - storem::workload@62 (line 15)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f9fa865355c:   movabs $0x7f9fad627fe8,%rdi         ;   {external_word}
  0x00007f9fa8653566:   and    $0xfffffffffffffff0,%rsp
  0x00007f9fa865356a:   callq  0x00007f9facc8ebf0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f9fa865356f:   hlt                                 ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - storem::workload@2 (line 9)
 ;; B37: #	out( N741 ) <- in( B2 B5 )  Freq: 1.999e-06
  0x00007f9fa8653570:   mov    $0xffffff8d,%esi
  0x00007f9fa8653575:   mov    %ebx,0x28(%rsp)
  0x00007f9fa8653579:   mov    %r13,0x30(%rsp)              ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
                                                            ; - jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
                                                            ; - storem::workload@43 (line 13)
  0x00007f9fa865357e:   nop
  0x00007f9fa865357f:   nop
  0x00007f9fa8653580:   vzeroupper 
  0x00007f9fa8653583:   callq  0x00007f9fa86222a0           ; ImmutableOopMap {rbp=Oop [48]=Oop }
                                                            ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - storem::workload@2 (line 9)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f9fa8653588:   movabs $0x7f9fad627fe8,%rdi         ;   {external_word}
  0x00007f9fa8653592:   and    $0xfffffffffffffff0,%rsp
  0x00007f9fa8653596:   callq  0x00007f9facc8ebf0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f9fa865359b:   hlt                                 ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - storem::workload@2 (line 9)
 ;; B38: #	out( N741 ) <- in( B8 B6 B7 )  Freq: 3.01327e-06
  0x00007f9fa865359c:   mov    $0xffffffbe,%esi
  0x00007f9fa86535a1:   mov    %ebx,%ebp
  0x00007f9fa86535a3:   mov    %r11,0x28(%rsp)
  0x00007f9fa86535a8:   mov    %r13,0x30(%rsp)              ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
                                                            ; - jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
                                                            ; - storem::workload@43 (line 13)
  0x00007f9fa86535ad:   nop
  0x00007f9fa86535ae:   nop
  0x00007f9fa86535af:   nop
  0x00007f9fa86535b0:   vzeroupper 
  0x00007f9fa86535b3:   callq  0x00007f9fa86222a0           ; ImmutableOopMap {[40]=Oop [48]=Oop }
                                                            ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - storem::workload@2 (line 9)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f9fa86535b8:   movabs $0x7f9fad627fe8,%rdi         ;   {external_word}
  0x00007f9fa86535c2:   and    $0xfffffffffffffff0,%rsp
  0x00007f9fa86535c6:   callq  0x00007f9facc8ebf0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f9fa86535cb:   hlt                                 ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - storem::workload@2 (line 9)
 ;; B39: #	out( N741 ) <- in( B4 )  Freq: 1.01328e-06
  0x00007f9fa86535cc:   mov    $0xffffff76,%esi
  0x00007f9fa86535d1:   mov    %ebx,%ebp
  0x00007f9fa86535d3:   mov    %r11,0x28(%rsp)
  0x00007f9fa86535d8:   vzeroupper 
  0x00007f9fa86535db:   callq  0x00007f9fa86222a0           ; ImmutableOopMap {[40]=Oop }
                                                            ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - storem::workload@2 (line 9)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f9fa86535e0:   movabs $0x7f9fad627fe8,%rdi         ;   {external_word}
  0x00007f9fa86535ea:   and    $0xfffffffffffffff0,%rsp
  0x00007f9fa86535ee:   callq  0x00007f9facc8ebf0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f9fa86535f3:   hlt    
 ;; B40: #	out( B42 ) <- in( B23 )  Freq: 3.19607e-08
  0x00007f9fa86535f4:   jmp    0x00007f9fa86535f6
 ;; B41: #	out( B42 ) <- in( B31 )  Freq: 3.19607e-08
 ;; B42: #	out( B47 ) <- in( B41 B40 )  Freq: 6.39214e-08
  0x00007f9fa86535f6:   mov    %rax,%rsi
  0x00007f9fa86535f9:   jmp    0x00007f9fa8653605
 ;; B43: #	out( B45 ) <- in( B29 )  Freq: 3.19607e-08
  0x00007f9fa86535fb:   jmp    0x00007f9fa86535fd
 ;; B44: #	out( B45 ) <- in( B27 )  Freq: 3.19607e-08
 ;; B45: #	out( B47 ) <- in( B44 B43 )  Freq: 6.39214e-08
  0x00007f9fa86535fd:   mov    %rax,%rsi
  0x00007f9fa8653600:   jmp    0x00007f9fa8653605
 ;; B46: #	out( B47 ) <- in( B12 )  Freq: 0.000319554
  0x00007f9fa8653602:   mov    %rax,%rsi                    ;*synchronization entry
                                                            ; - storem::workload@-1 (line 9)
 ;; B47: #	out( N741 ) <- in( B45 B42 B46 )  Freq: 0.000319682
  0x00007f9fa8653605:   vzeroupper 
  0x00007f9fa8653608:   add    $0xf0,%rsp
  0x00007f9fa865360f:   pop    %rbp
  0x00007f9fa8653610:   jmpq   0x00007f9fa8582d20           ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
                                                            ; - jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
                                                            ; - storem::workload@43 (line 13)
                                                            ;   {runtime_call _rethrow_Java}
  0x00007f9fa8653615:   movabs $0x7f9fa865334e,%r10         ;   {internal_word}
  0x00007f9fa865361f:   mov    %r10,0x3e0(%r15)
  0x00007f9fa8653626:   jmpq   0x00007f9fa8621420           ;   {runtime_call SafepointBlob}
  0x00007f9fa865362b:   hlt    
  0x00007f9fa865362c:   hlt    
  0x00007f9fa865362d:   hlt    
  0x00007f9fa865362e:   hlt    
  0x00007f9fa865362f:   hlt    
[Stub Code]
  0x00007f9fa8653630:   movabs $0x0,%rbx                    ;   {no_reloc}
  0x00007f9fa865363a:   jmpq   0x00007f9fa865363a           ;   {runtime_call}
[Exception Handler]
  0x00007f9fa865363f:   jmpq   0x00007f9fa8584ea0           ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x00007f9fa8653644:   callq  0x00007f9fa8653649
  0x00007f9fa8653649:   subq   $0x5,(%rsp)
  0x00007f9fa865364e:   jmpq   0x00007f9fa86202e0           ;   {runtime_call DeoptimizationBlob}
  0x00007f9fa8653653:   hlt    
  0x00007f9fa8653654:   hlt    
  0x00007f9fa8653655:   hlt    
  0x00007f9fa8653656:   hlt    
  0x00007f9fa8653657:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Oops:
  0x00007f9fa8653658:   0x000000011f97c918 a 'java/lang/Class'{0x000000011f97c918} = 'jdk/incubator/vector/Byte256Vector$Byte256Mask'
  0x00007f9fa8653660:   0x000000011f97c888 a 'java/lang/Class'{0x000000011f97c888} = 'jdk/incubator/vector/Byte256Vector'
  0x00007f9fa8653668:   0x000000011f0001c0 a 'java/lang/Class'{0x000000011f0001c0} = byte
  0x00007f9fa8653670:   0x000000011f97c840 a 'jdk/incubator/vector/ByteVector$ByteSpecies'{0x000000011f97c840}
  0x00007f9fa8653678:   0x000000011f9a8128 a 'jdk/incubator/vector/ByteVector$$Lambda$36+0x000000080009b5a8'{0x000000011f9a8128}
  0x00007f9fa8653680:   0x000000011f98bf48 a 'jdk/incubator/vector/VectorMask$$Lambda$33+0x000000080009ab40'{0x000000011f98bf48}
  0x00007f9fa8653688:   0x000000011f8a3a70 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x000000011f8a3a70}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Metadata:
  0x00007f9fa8653690:   0x00007f9f3c510e08 {method} {0x00007f9f3c510e08} 'workload' '([B[BI)B' in 'storem'
  0x00007f9fa8653698:   0x00007f9f3c6332f0 {method} {0x00007f9f3c6332f0} 'intoArray' '([BILjdk/incubator/vector/VectorMask;)V' in 'jdk/incubator/vector/ByteVector'
  0x00007f9fa86536a0:   0x00007f9f3c6ad898 {method} {0x00007f9f3c6ad898} 'intoArray0' '([BILjdk/incubator/vector/VectorMask;)V' in 'jdk/incubator/vector/Byte256Vector'
  0x00007f9fa86536a8:   0x00007f9f3c634c10 {method} {0x00007f9f3c634c10} 'intoArray0Template' '(Ljava/lang/Class;[BILjdk/incubator/vector/VectorMask;)V' in 'jdk/incubator/vector/ByteVector'
  0x00007f9fa86536b0:   0x00000008000409d8 {type array byte}
  0x00007f9fa86536b8:   0x00007f9f3c692b28 {method} {0x00007f9f3c692b28} 'fromLong' '(Ljdk/incubator/vector/VectorSpecies;J)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/VectorMask'
  0x00007f9fa86536c0:   0x00000008000983b0 'jdk/incubator/vector/Byte256Vector'
  0x00007f9fa86536c8:   0x00000008000401f8 {type array bool}
  0x00007f9fa86536d0:   0x0000000800098a40 'jdk/incubator/vector/Byte256Vector$Byte256Mask'
  0x00007f9fa86536d8:   0x00007f9f3c632568 {method} {0x00007f9f3c632568} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[BI)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector'
  0x00007f9fa86536e0:   0x00007f9f3c6da820 {method} {0x00007f9f3c6da820} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
  0x00007f9fa86536e8:   0x00007f9f3c18ea98 {method} {0x00007f9f3c18ea98} 'checkIndex' '(II)I' in 'java/util/Objects'
  0x00007f9fa86536f0:   0x00007f9f3c6ad160 {method} {0x00007f9f3c6ad160} 'fromArray0' '([BI)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/Byte256Vector'
  0x00007f9fa86536f8:   0x00007f9f3c633e78 {method} {0x00007f9f3c633e78} 'fromArray0Template' '([BI)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector'
  0x00007f9fa8653700:   0x00007f9f3c635688 {method} {0x00007f9f3c635688} 'arrayAddress' '([BI)J' in 'jdk/incubator/vector/ByteVector'
  0x00007f9fa8653708:   0x00007f9f3c6da6f8 {method} {0x00007f9f3c6da6f8} 'indexInRange' '(JJJ)Z' in 'jdk/incubator/vector/VectorIntrinsics'
  0x00007f9fa8653710:   0x0000000800094a08 'jdk/incubator/vector/AbstractSpecies'
  0x00007f9fa8653718:   0x0000000800094df0 'jdk/incubator/vector/ByteVector$ByteSpecies'
  0x00007f9fa8653720:   0x00007f9f3c674ef8 {method} {0x00007f9f3c674ef8} 'loopBound' '(I)I' in 'jdk/incubator/vector/AbstractSpecies'
  0x00007f9fa8653728:   0x0000000800094600 'jdk/incubator/vector/VectorSpecies'
  0x00007f9fa8653730:   0x00007f9f3c672a90 {method} {0x00007f9f3c672a90} 'loopBound' '(I)I' in 'jdk/incubator/vector/VectorSpecies'
  0x00007f9fa8653738:   0x00007f9f3c6743b8 {method} {0x00007f9f3c6743b8} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
  0x00007f9fa8653740:   0x00007f9f3c672898 {method} {0x00007f9f3c672898} 'length' '()I' in 'jdk/incubator/vector/VectorSpecies'
  0x00007f9fa8653748:   0x00007f9f3c690198 {method} {0x00007f9f3c690198} 'check' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/AbstractMask'
  0x00007f9fa8653750:   0x0000000800096cc0 'jdk/incubator/vector/VectorMask'
  0x00007f9fa8653758:   0x00007f9f3c6938b0 {method} {0x00007f9f3c6938b0} 'check' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/VectorMask'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
pc-bytecode offsets:
PcDesc(pc=0x00007f9fa8652e7f offset=ffffffff bits=0):
PcDesc(pc=0x00007f9fa8652eae offset=2e bits=0):
   storem::workload@2 (line 9)
PcDesc(pc=0x00007f9fa8652ed3 offset=53 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
   storem::workload@43 (line 13)
PcDesc(pc=0x00007f9fa8652f0d offset=8d bits=0):
   storem::workload@2 (line 9)
PcDesc(pc=0x00007f9fa8652f11 offset=91 bits=0):
   storem::workload@7 (line 9)
PcDesc(pc=0x00007f9fa8652fa9 offset=129 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
   storem::workload@43 (line 13)
PcDesc(pc=0x00007f9fa8652fb1 offset=131 bits=0):
   jdk.incubator.vector.VectorMask::fromLong@39 (line 242)
   storem::workload@22 (line 10)
PcDesc(pc=0x00007f9fa8652fd4 offset=154 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
   storem::workload@43 (line 13)
PcDesc(pc=0x00007f9fa8652fe0 offset=160 bits=0):
   storem::workload@57 (line 9)
PcDesc(pc=0x00007f9fa8653055 offset=1d5 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
   storem::workload@43 (line 13)
PcDesc(pc=0x00007f9fa86530c8 offset=248 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   storem::workload@43 (line 13)
   Locals
    - l0: stack[56],oop
    - l1: stack[40],oop
    - l2: stack[100]
    - l3: stack[88]
    - l4: empty
    - l5: empty
PcDesc(pc=0x00007f9fa86530d3 offset=253 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
   storem::workload@43 (line 13)
PcDesc(pc=0x00007f9fa86530d6 offset=256 bits=1):
   storem::workload@57 (line 9)  reexecute=true
   Locals
    - l0: stack[56],oop
    - l1: stack[40],oop
    - l2: stack[100]
    - l3: reg rbx [6],int
    - l4: empty
    - l5: empty
PcDesc(pc=0x00007f9fa8653103 offset=283 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
   storem::workload@43 (line 13)
PcDesc(pc=0x00007f9fa865320b offset=38b bits=0):
   storem::workload@57 (line 9)
PcDesc(pc=0x00007f9fa865321c offset=39c bits=0):
   java.util.Objects::checkIndex@3 (line 385)
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 57)
   jdk.incubator.vector.ByteVector::fromArray@9 (line 2979)
   storem::workload@32 (line 12)
PcDesc(pc=0x00007f9fa865321f offset=39f bits=0):
   jdk.incubator.vector.ByteVector::arrayAddress@4 (line 3972)
   jdk.incubator.vector.ByteVector::fromArray0Template@20 (line 3748)
   jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 907)
   jdk.incubator.vector.ByteVector::fromArray@24 (line 2981)
   storem::workload@32 (line 12)
PcDesc(pc=0x00007f9fa8653222 offset=3a2 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
   storem::workload@43 (line 13)
PcDesc(pc=0x00007f9fa8653233 offset=3b3 bits=0):
   storem::workload@57 (line 9)
PcDesc(pc=0x00007f9fa86532ba offset=43a bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
   storem::workload@43 (line 13)
PcDesc(pc=0x00007f9fa86532c1 offset=441 bits=0):
   jdk.incubator.vector.ByteVector::fromArray0Template@32 (line 3746)
   jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 907)
   jdk.incubator.vector.ByteVector::fromArray@24 (line 2981)
   storem::workload@32 (line 12)
PcDesc(pc=0x00007f9fa86532d9 offset=459 bits=0):
   storem::workload@57 (line 9)
PcDesc(pc=0x00007f9fa865330d offset=48d bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
   storem::workload@43 (line 13)
PcDesc(pc=0x00007f9fa8653318 offset=498 bits=5):
   jdk.incubator.vector.ByteVector::fromArray0Template@32 (line 3746)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x000000011f97c888} = 'jdk/incubator/vector/Byte256Vector'
    - @1: a 'java/lang/Class'{0x000000011f0001c0} = byte
    - @2: 32
    - @3: stack[40],oop
    - @4: 0
    - @5: stack[112],long
    - @6: stack[40],oop
    - @7: 0
    - @8: stack[104],long
    - @9: a 'jdk/incubator/vector/ByteVector$ByteSpecies'{0x000000011f97c840}
    - @10: a 'jdk/incubator/vector/ByteVector$$Lambda$36+0x000000080009b5a8'{0x000000011f9a8128}
   jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 907)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.ByteVector::fromArray@24 (line 2981)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   storem::workload@32 (line 12)
   Locals
    - l0: stack[56],oop
    - l1: stack[40],oop
    - l2: stack[100]
    - l3: reg rbp [10],int
    - l4: obj[244]
    - l5: empty
   Objects
    - 244: jdk.incubator.vector.Byte256Vector$Byte256Mask stack[128],vector
PcDesc(pc=0x00007f9fa865333d offset=4bd bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
   storem::workload@43 (line 13)
PcDesc(pc=0x00007f9fa8653381 offset=501 bits=0):
   jdk.incubator.vector.VectorMask::fromLong@34 (line 242)
   storem::workload@22 (line 10)
PcDesc(pc=0x00007f9fa865338b offset=50b bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
   storem::workload@43 (line 13)
PcDesc(pc=0x00007f9fa8653398 offset=518 bits=5):
   jdk.incubator.vector.VectorMask::fromLong@39 (line 242)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x000000011f97c918} = 'jdk/incubator/vector/Byte256Vector$Byte256Mask'
    - @1: a 'java/lang/Class'{0x000000011f0001c0} = byte
    - @2: 32
    - @3: 0
    - @4: 32767
    - @5: 1
    - @6: a 'jdk/incubator/vector/ByteVector$ByteSpecies'{0x000000011f97c840}
    - @7: a 'jdk/incubator/vector/VectorMask$$Lambda$33+0x000000080009ab40'{0x000000011f98bf48}
   storem::workload@22 (line 10)
   Locals
    - l0: stack[48],oop
    - l1: reg rbp [10],oop
    - l2: stack[100]
    - l3: stack[40]
    - l4: empty
    - l5: empty
PcDesc(pc=0x00007f9fa86533f9 offset=579 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
   storem::workload@43 (line 13)
PcDesc(pc=0x00007f9fa8653404 offset=584 bits=5):
   jdk.incubator.vector.VectorMask::fromLong@39 (line 242)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x000000011f97c918} = 'jdk/incubator/vector/Byte256Vector$Byte256Mask'
    - @1: a 'java/lang/Class'{0x000000011f0001c0} = byte
    - @2: 32
    - @3: 0
    - @4: 32767
    - @5: 1
    - @6: a 'jdk/incubator/vector/ByteVector$ByteSpecies'{0x000000011f97c840}
    - @7: a 'jdk/incubator/vector/VectorMask$$Lambda$33+0x000000080009ab40'{0x000000011f98bf48}
   storem::workload@22 (line 10)
   Locals
    - l0: stack[48],oop
    - l1: reg rbp [10],oop
    - l2: stack[100]
    - l3: stack[40]
    - l4: empty
    - l5: empty
PcDesc(pc=0x00007f9fa865347b offset=5fb bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
   storem::workload@43 (line 13)
PcDesc(pc=0x00007f9fa8653488 offset=608 bits=5):
   jdk.incubator.vector.ByteVector::fromArray0Template@32 (line 3746)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x000000011f97c888} = 'jdk/incubator/vector/Byte256Vector'
    - @1: a 'java/lang/Class'{0x000000011f0001c0} = byte
    - @2: 32
    - @3: stack[40],oop
    - @4: 0
    - @5: stack[112],long
    - @6: stack[40],oop
    - @7: 0
    - @8: stack[104],long
    - @9: a 'jdk/incubator/vector/ByteVector$ByteSpecies'{0x000000011f97c840}
    - @10: a 'jdk/incubator/vector/ByteVector$$Lambda$36+0x000000080009b5a8'{0x000000011f9a8128}
   jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 907)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.ByteVector::fromArray@24 (line 2981)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   storem::workload@32 (line 12)
   Locals
    - l0: stack[56],oop
    - l1: stack[40],oop
    - l2: stack[100]
    - l3: stack[48]
    - l4: obj[215]
    - l5: empty
   Objects
    - 215: jdk.incubator.vector.Byte256Vector$Byte256Mask stack[128],vector
PcDesc(pc=0x00007f9fa86534d5 offset=655 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
   storem::workload@43 (line 13)
PcDesc(pc=0x00007f9fa86534e0 offset=660 bits=0):
   java.util.Objects::checkIndex@3 (line 385)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[40]
    - @1: stack[72]
    - @2: NULL
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 57)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.ByteVector::fromArray@9 (line 2979)
   Locals
    - l0: a 'jdk/incubator/vector/ByteVector$ByteSpecies'{0x000000011f97c840}
    - l1: stack[64],oop
    - l2: empty
    - l3: empty
   storem::workload@32 (line 12)
   Locals
    - l0: stack[48],oop
    - l1: stack[64],oop
    - l2: stack[44]
    - l3: stack[40]
    - l4: obj[325]
    - l5: empty
   Objects
    - 325: jdk.incubator.vector.Byte256Vector$Byte256Mask stack[96],vector
PcDesc(pc=0x00007f9fa865352d offset=6ad bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
   storem::workload@43 (line 13)
PcDesc(pc=0x00007f9fa8653538 offset=6b8 bits=1):
   jdk.incubator.vector.VectorIntrinsics::indexInRange@12 (line 49)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
   Expression stack
    - @0: reg rbp [10],int
   jdk.incubator.vector.ByteVector::intoArray@33 (line 3424)
   Locals
    - l0: obj[333]
    - l1: stack[56],oop
    - l2: stack[88]
    - l3: obj[334]
    - l4: a 'jdk/incubator/vector/ByteVector$ByteSpecies'{0x000000011f97c840}
   storem::workload@43 (line 13)
   Locals
    - l0: stack[56],oop
    - l1: stack[40],oop
    - l2: stack[64]
    - l3: stack[88]
    - l4: empty
    - l5: empty
   Objects
    - 333: jdk.incubator.vector.Byte256Vector stack[96],vector
    - 334: jdk.incubator.vector.Byte256Vector$Byte256Mask stack[128],vector
PcDesc(pc=0x00007f9fa865354c offset=6cc bits=0):
   storem::workload@62 (line 15)
PcDesc(pc=0x00007f9fa865355c offset=6dc bits=0):
   storem::workload@62 (line 15)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
   Expression stack
    - @0: reg rbp [10],oop
    - @1: stack[100]
PcDesc(pc=0x00007f9fa8653570 offset=6f0 bits=0):
   storem::workload@2 (line 9)
PcDesc(pc=0x00007f9fa865357e offset=6fe bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
   storem::workload@43 (line 13)
PcDesc(pc=0x00007f9fa8653588 offset=708 bits=0):
   storem::workload@2 (line 9)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[48],oop
    - l2: stack[100]
    - l3: stack[40]
    - l4: empty
    - l5: empty
PcDesc(pc=0x00007f9fa865359c offset=71c bits=0):
   storem::workload@2 (line 9)
PcDesc(pc=0x00007f9fa86535ad offset=72d bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
   storem::workload@43 (line 13)
PcDesc(pc=0x00007f9fa86535b8 offset=738 bits=0):
   storem::workload@2 (line 9)
   Locals
    - l0: stack[40],oop
    - l1: stack[48],oop
    - l2: stack[100]
    - l3: reg rbp [10],int
    - l4: empty
    - l5: empty
PcDesc(pc=0x00007f9fa86535cc offset=74c bits=0):
   storem::workload@2 (line 9)
PcDesc(pc=0x00007f9fa86535e0 offset=760 bits=0):
   storem::workload@2 (line 9)
   Locals
    - l0: stack[40],oop
    - l1: NULL
    - l2: stack[100]
    - l3: reg rbp [10],int
    - l4: empty
    - l5: empty
PcDesc(pc=0x00007f9fa8653605 offset=785 bits=0):
   storem::workload@-1 (line 9)
PcDesc(pc=0x00007f9fa8653615 offset=795 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
   storem::workload@43 (line 13)
PcDesc(pc=0x00007f9fa8653659 offset=7d9 bits=0):
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
oop maps:ImmutableOopMapSet contains 12 OopMaps

ImmutableOopMap {[40]=Oop [56]=Oop } pc offsets: 584 598 
ImmutableOopMap {[40]=Oop [56]=Oop [80]=Oop [120]=Oop } pc offsets: 1176 
ImmutableOopMap {rbp=Oop [48]=Oop } pc offsets: 1304 
ImmutableOopMap {rbp=Oop [48]=Oop [112]=Oop } pc offsets: 1412 
ImmutableOopMap {[40]=Oop [56]=Oop [80]=Oop } pc offsets: 1544 
ImmutableOopMap {[48]=Oop [64]=Oop } pc offsets: 1632 
ImmutableOopMap {[40]=Oop [56]=Oop } pc offsets: 1720 
ImmutableOopMap {rbp=Oop } pc offsets: 1756 
ImmutableOopMap {rbp=Oop [48]=Oop } pc offsets: 1800 
ImmutableOopMap {[40]=Oop [48]=Oop } pc offsets: 1848 
ImmutableOopMap {[40]=Oop } pc offsets: 1888 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
scopes:
ScopeDesc(pc=0x00007f9fa8652eae offset=2e):
   storem::workload@2 (line 9)
ScopeDesc(pc=0x00007f9fa8652ed3 offset=53):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
ScopeDesc(pc=0x00007f9fa8652ed3 offset=53):
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
ScopeDesc(pc=0x00007f9fa8652ed3 offset=53):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
ScopeDesc(pc=0x00007f9fa8652ed3 offset=53):
   storem::workload@43 (line 13)
ScopeDesc(pc=0x00007f9fa8652f0d offset=8d):
   storem::workload@2 (line 9)
ScopeDesc(pc=0x00007f9fa8652f11 offset=91):
   storem::workload@7 (line 9)
ScopeDesc(pc=0x00007f9fa8652fa9 offset=129):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
ScopeDesc(pc=0x00007f9fa8652fa9 offset=129):
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
ScopeDesc(pc=0x00007f9fa8652fa9 offset=129):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
ScopeDesc(pc=0x00007f9fa8652fa9 offset=129):
   storem::workload@43 (line 13)
ScopeDesc(pc=0x00007f9fa8652fb1 offset=131):
   jdk.incubator.vector.VectorMask::fromLong@39 (line 242)
ScopeDesc(pc=0x00007f9fa8652fb1 offset=131):
   storem::workload@22 (line 10)
ScopeDesc(pc=0x00007f9fa8652fd4 offset=154):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
ScopeDesc(pc=0x00007f9fa8652fd4 offset=154):
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
ScopeDesc(pc=0x00007f9fa8652fd4 offset=154):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
ScopeDesc(pc=0x00007f9fa8652fd4 offset=154):
   storem::workload@43 (line 13)
ScopeDesc(pc=0x00007f9fa8652fe0 offset=160):
   storem::workload@57 (line 9)
ScopeDesc(pc=0x00007f9fa8653055 offset=1d5):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
ScopeDesc(pc=0x00007f9fa8653055 offset=1d5):
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
ScopeDesc(pc=0x00007f9fa8653055 offset=1d5):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
ScopeDesc(pc=0x00007f9fa8653055 offset=1d5):
   storem::workload@43 (line 13)
ScopeDesc(pc=0x00007f9fa86530c8 offset=248):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
ScopeDesc(pc=0x00007f9fa86530c8 offset=248):
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x00007f9fa86530c8 offset=248):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
ScopeDesc(pc=0x00007f9fa86530c8 offset=248):
   storem::workload@43 (line 13)
   Locals
    - l0: stack[56],oop
    - l1: stack[40],oop
    - l2: stack[100]
    - l3: stack[88]
    - l4: empty
    - l5: empty
ScopeDesc(pc=0x00007f9fa86530d3 offset=253):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
ScopeDesc(pc=0x00007f9fa86530d3 offset=253):
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
ScopeDesc(pc=0x00007f9fa86530d3 offset=253):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
ScopeDesc(pc=0x00007f9fa86530d3 offset=253):
   storem::workload@43 (line 13)
ScopeDesc(pc=0x00007f9fa86530d6 offset=256):
   storem::workload@57 (line 9)  reexecute=true
   Locals
    - l0: stack[56],oop
    - l1: stack[40],oop
    - l2: stack[100]
    - l3: reg rbx [6],int
    - l4: empty
    - l5: empty
ScopeDesc(pc=0x00007f9fa8653103 offset=283):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
ScopeDesc(pc=0x00007f9fa8653103 offset=283):
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
ScopeDesc(pc=0x00007f9fa8653103 offset=283):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
ScopeDesc(pc=0x00007f9fa8653103 offset=283):
   storem::workload@43 (line 13)
ScopeDesc(pc=0x00007f9fa865320b offset=38b):
   storem::workload@57 (line 9)
ScopeDesc(pc=0x00007f9fa865321c offset=39c):
   java.util.Objects::checkIndex@3 (line 385)
ScopeDesc(pc=0x00007f9fa865321c offset=39c):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 57)
ScopeDesc(pc=0x00007f9fa865321c offset=39c):
   jdk.incubator.vector.ByteVector::fromArray@9 (line 2979)
ScopeDesc(pc=0x00007f9fa865321c offset=39c):
   storem::workload@32 (line 12)
ScopeDesc(pc=0x00007f9fa865321f offset=39f):
   jdk.incubator.vector.ByteVector::arrayAddress@4 (line 3972)
ScopeDesc(pc=0x00007f9fa865321f offset=39f):
   jdk.incubator.vector.ByteVector::fromArray0Template@20 (line 3748)
ScopeDesc(pc=0x00007f9fa865321f offset=39f):
   jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 907)
ScopeDesc(pc=0x00007f9fa865321f offset=39f):
   jdk.incubator.vector.ByteVector::fromArray@24 (line 2981)
ScopeDesc(pc=0x00007f9fa865321f offset=39f):
   storem::workload@32 (line 12)
ScopeDesc(pc=0x00007f9fa8653222 offset=3a2):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
ScopeDesc(pc=0x00007f9fa8653222 offset=3a2):
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
ScopeDesc(pc=0x00007f9fa8653222 offset=3a2):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
ScopeDesc(pc=0x00007f9fa8653222 offset=3a2):
   storem::workload@43 (line 13)
ScopeDesc(pc=0x00007f9fa8653233 offset=3b3):
   storem::workload@57 (line 9)
ScopeDesc(pc=0x00007f9fa86532ba offset=43a):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
ScopeDesc(pc=0x00007f9fa86532ba offset=43a):
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
ScopeDesc(pc=0x00007f9fa86532ba offset=43a):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
ScopeDesc(pc=0x00007f9fa86532ba offset=43a):
   storem::workload@43 (line 13)
ScopeDesc(pc=0x00007f9fa86532c1 offset=441):
   jdk.incubator.vector.ByteVector::fromArray0Template@32 (line 3746)
ScopeDesc(pc=0x00007f9fa86532c1 offset=441):
   jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 907)
ScopeDesc(pc=0x00007f9fa86532c1 offset=441):
   jdk.incubator.vector.ByteVector::fromArray@24 (line 2981)
ScopeDesc(pc=0x00007f9fa86532c1 offset=441):
   storem::workload@32 (line 12)
ScopeDesc(pc=0x00007f9fa86532d9 offset=459):
   storem::workload@57 (line 9)
ScopeDesc(pc=0x00007f9fa865330d offset=48d):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
ScopeDesc(pc=0x00007f9fa865330d offset=48d):
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
ScopeDesc(pc=0x00007f9fa865330d offset=48d):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
ScopeDesc(pc=0x00007f9fa865330d offset=48d):
   storem::workload@43 (line 13)
ScopeDesc(pc=0x00007f9fa8653318 offset=498):
   jdk.incubator.vector.ByteVector::fromArray0Template@32 (line 3746)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x000000011f97c888} = 'jdk/incubator/vector/Byte256Vector'
    - @1: a 'java/lang/Class'{0x000000011f0001c0} = byte
    - @2: 32
    - @3: stack[40],oop
    - @4: 0
    - @5: stack[112],long
    - @6: stack[40],oop
    - @7: 0
    - @8: stack[104],long
    - @9: a 'jdk/incubator/vector/ByteVector$ByteSpecies'{0x000000011f97c840}
    - @10: a 'jdk/incubator/vector/ByteVector$$Lambda$36+0x000000080009b5a8'{0x000000011f9a8128}
ScopeDesc(pc=0x00007f9fa8653318 offset=498):
   jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 907)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00007f9fa8653318 offset=498):
   jdk.incubator.vector.ByteVector::fromArray@24 (line 2981)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x00007f9fa8653318 offset=498):
   storem::workload@32 (line 12)
   Locals
    - l0: stack[56],oop
    - l1: stack[40],oop
    - l2: stack[100]
    - l3: reg rbp [10],int
    - l4: obj[244]
    - l5: empty
   Objects
    - 244: jdk.incubator.vector.Byte256Vector$Byte256Mask stack[128],vector
ScopeDesc(pc=0x00007f9fa865333d offset=4bd):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
ScopeDesc(pc=0x00007f9fa865333d offset=4bd):
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
ScopeDesc(pc=0x00007f9fa865333d offset=4bd):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
ScopeDesc(pc=0x00007f9fa865333d offset=4bd):
   storem::workload@43 (line 13)
ScopeDesc(pc=0x00007f9fa8653381 offset=501):
   jdk.incubator.vector.VectorMask::fromLong@34 (line 242)
ScopeDesc(pc=0x00007f9fa8653381 offset=501):
   storem::workload@22 (line 10)
ScopeDesc(pc=0x00007f9fa865338b offset=50b):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
ScopeDesc(pc=0x00007f9fa865338b offset=50b):
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
ScopeDesc(pc=0x00007f9fa865338b offset=50b):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
ScopeDesc(pc=0x00007f9fa865338b offset=50b):
   storem::workload@43 (line 13)
ScopeDesc(pc=0x00007f9fa8653398 offset=518):
   jdk.incubator.vector.VectorMask::fromLong@39 (line 242)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x000000011f97c918} = 'jdk/incubator/vector/Byte256Vector$Byte256Mask'
    - @1: a 'java/lang/Class'{0x000000011f0001c0} = byte
    - @2: 32
    - @3: 0
    - @4: 32767
    - @5: 1
    - @6: a 'jdk/incubator/vector/ByteVector$ByteSpecies'{0x000000011f97c840}
    - @7: a 'jdk/incubator/vector/VectorMask$$Lambda$33+0x000000080009ab40'{0x000000011f98bf48}
ScopeDesc(pc=0x00007f9fa8653398 offset=518):
   storem::workload@22 (line 10)
   Locals
    - l0: stack[48],oop
    - l1: reg rbp [10],oop
    - l2: stack[100]
    - l3: stack[40]
    - l4: empty
    - l5: empty
ScopeDesc(pc=0x00007f9fa86533f9 offset=579):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
ScopeDesc(pc=0x00007f9fa86533f9 offset=579):
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
ScopeDesc(pc=0x00007f9fa86533f9 offset=579):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
ScopeDesc(pc=0x00007f9fa86533f9 offset=579):
   storem::workload@43 (line 13)
ScopeDesc(pc=0x00007f9fa8653404 offset=584):
   jdk.incubator.vector.VectorMask::fromLong@39 (line 242)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x000000011f97c918} = 'jdk/incubator/vector/Byte256Vector$Byte256Mask'
    - @1: a 'java/lang/Class'{0x000000011f0001c0} = byte
    - @2: 32
    - @3: 0
    - @4: 32767
    - @5: 1
    - @6: a 'jdk/incubator/vector/ByteVector$ByteSpecies'{0x000000011f97c840}
    - @7: a 'jdk/incubator/vector/VectorMask$$Lambda$33+0x000000080009ab40'{0x000000011f98bf48}
ScopeDesc(pc=0x00007f9fa8653404 offset=584):
   storem::workload@22 (line 10)
   Locals
    - l0: stack[48],oop
    - l1: reg rbp [10],oop
    - l2: stack[100]
    - l3: stack[40]
    - l4: empty
    - l5: empty
ScopeDesc(pc=0x00007f9fa865347b offset=5fb):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
ScopeDesc(pc=0x00007f9fa865347b offset=5fb):
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
ScopeDesc(pc=0x00007f9fa865347b offset=5fb):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
ScopeDesc(pc=0x00007f9fa865347b offset=5fb):
   storem::workload@43 (line 13)
ScopeDesc(pc=0x00007f9fa8653488 offset=608):
   jdk.incubator.vector.ByteVector::fromArray0Template@32 (line 3746)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x000000011f97c888} = 'jdk/incubator/vector/Byte256Vector'
    - @1: a 'java/lang/Class'{0x000000011f0001c0} = byte
    - @2: 32
    - @3: stack[40],oop
    - @4: 0
    - @5: stack[112],long
    - @6: stack[40],oop
    - @7: 0
    - @8: stack[104],long
    - @9: a 'jdk/incubator/vector/ByteVector$ByteSpecies'{0x000000011f97c840}
    - @10: a 'jdk/incubator/vector/ByteVector$$Lambda$36+0x000000080009b5a8'{0x000000011f9a8128}
ScopeDesc(pc=0x00007f9fa8653488 offset=608):
   jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 907)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00007f9fa8653488 offset=608):
   jdk.incubator.vector.ByteVector::fromArray@24 (line 2981)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x00007f9fa8653488 offset=608):
   storem::workload@32 (line 12)
   Locals
    - l0: stack[56],oop
    - l1: stack[40],oop
    - l2: stack[100]
    - l3: stack[48]
    - l4: obj[215]
    - l5: empty
   Objects
    - 215: jdk.incubator.vector.Byte256Vector$Byte256Mask stack[128],vector
ScopeDesc(pc=0x00007f9fa86534d5 offset=655):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
ScopeDesc(pc=0x00007f9fa86534d5 offset=655):
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
ScopeDesc(pc=0x00007f9fa86534d5 offset=655):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
ScopeDesc(pc=0x00007f9fa86534d5 offset=655):
   storem::workload@43 (line 13)
ScopeDesc(pc=0x00007f9fa86534e0 offset=660):
   java.util.Objects::checkIndex@3 (line 385)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[40]
    - @1: stack[72]
    - @2: NULL
ScopeDesc(pc=0x00007f9fa86534e0 offset=660):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 57)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00007f9fa86534e0 offset=660):
   jdk.incubator.vector.ByteVector::fromArray@9 (line 2979)
   Locals
    - l0: a 'jdk/incubator/vector/ByteVector$ByteSpecies'{0x000000011f97c840}
    - l1: stack[64],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x00007f9fa86534e0 offset=660):
   storem::workload@32 (line 12)
   Locals
    - l0: stack[48],oop
    - l1: stack[64],oop
    - l2: stack[44]
    - l3: stack[40]
    - l4: obj[325]
    - l5: empty
   Objects
    - 325: jdk.incubator.vector.Byte256Vector$Byte256Mask stack[96],vector
ScopeDesc(pc=0x00007f9fa865352d offset=6ad):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
ScopeDesc(pc=0x00007f9fa865352d offset=6ad):
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
ScopeDesc(pc=0x00007f9fa865352d offset=6ad):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
ScopeDesc(pc=0x00007f9fa865352d offset=6ad):
   storem::workload@43 (line 13)
ScopeDesc(pc=0x00007f9fa8653538 offset=6b8):
   jdk.incubator.vector.VectorIntrinsics::indexInRange@12 (line 49)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
   Expression stack
    - @0: reg rbp [10],int
ScopeDesc(pc=0x00007f9fa8653538 offset=6b8):
   jdk.incubator.vector.ByteVector::intoArray@33 (line 3424)
   Locals
    - l0: obj[333]
    - l1: stack[56],oop
    - l2: stack[88]
    - l3: obj[334]
    - l4: a 'jdk/incubator/vector/ByteVector$ByteSpecies'{0x000000011f97c840}
ScopeDesc(pc=0x00007f9fa8653538 offset=6b8):
   storem::workload@43 (line 13)
   Locals
    - l0: stack[56],oop
    - l1: stack[40],oop
    - l2: stack[64]
    - l3: stack[88]
    - l4: empty
    - l5: empty
   Objects
    - 333: jdk.incubator.vector.Byte256Vector stack[96],vector
    - 334: jdk.incubator.vector.Byte256Vector$Byte256Mask stack[128],vector
ScopeDesc(pc=0x00007f9fa865354c offset=6cc):
   storem::workload@62 (line 15)
ScopeDesc(pc=0x00007f9fa865355c offset=6dc):
   storem::workload@62 (line 15)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
   Expression stack
    - @0: reg rbp [10],oop
    - @1: stack[100]
ScopeDesc(pc=0x00007f9fa8653570 offset=6f0):
   storem::workload@2 (line 9)
ScopeDesc(pc=0x00007f9fa865357e offset=6fe):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
ScopeDesc(pc=0x00007f9fa865357e offset=6fe):
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
ScopeDesc(pc=0x00007f9fa865357e offset=6fe):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
ScopeDesc(pc=0x00007f9fa865357e offset=6fe):
   storem::workload@43 (line 13)
ScopeDesc(pc=0x00007f9fa8653588 offset=708):
   storem::workload@2 (line 9)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[48],oop
    - l2: stack[100]
    - l3: stack[40]
    - l4: empty
    - l5: empty
ScopeDesc(pc=0x00007f9fa865359c offset=71c):
   storem::workload@2 (line 9)
ScopeDesc(pc=0x00007f9fa86535ad offset=72d):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
ScopeDesc(pc=0x00007f9fa86535ad offset=72d):
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
ScopeDesc(pc=0x00007f9fa86535ad offset=72d):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
ScopeDesc(pc=0x00007f9fa86535ad offset=72d):
   storem::workload@43 (line 13)
ScopeDesc(pc=0x00007f9fa86535b8 offset=738):
   storem::workload@2 (line 9)
   Locals
    - l0: stack[40],oop
    - l1: stack[48],oop
    - l2: stack[100]
    - l3: reg rbp [10],int
    - l4: empty
    - l5: empty
ScopeDesc(pc=0x00007f9fa86535cc offset=74c):
   storem::workload@2 (line 9)
ScopeDesc(pc=0x00007f9fa86535e0 offset=760):
   storem::workload@2 (line 9)
   Locals
    - l0: stack[40],oop
    - l1: NULL
    - l2: stack[100]
    - l3: reg rbp [10],int
    - l4: empty
    - l5: empty
ScopeDesc(pc=0x00007f9fa8653605 offset=785):
   storem::workload@-1 (line 9)
ScopeDesc(pc=0x00007f9fa8653615 offset=795):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
ScopeDesc(pc=0x00007f9fa8653615 offset=795):
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
ScopeDesc(pc=0x00007f9fa8653615 offset=795):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
ScopeDesc(pc=0x00007f9fa8653615 offset=795):
   storem::workload@43 (line 13)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
relocations:
         @0x00007f9fa8652d88: 3200
relocInfo@0x00007f9fa8652d88 [type=6(runtime_call) addr=0x00007f9fa8652e80 offset=0 format=1] | [destination=0x00007f9facedcfe0]
         @0x00007f9fa8652d8a: 78056660
relocInfo@0x00007f9fa8652d8c [type=12(metadata) addr=0x00007f9fa8652ee0 offset=96 format=3 data=5] | [metadata_addr=0x00007f9fa86536b0 *=0x00000008000409d8 offset=0]metadata_value=0x00000008000409d8: {type array byte}
         @0x00007f9fa8652d8e: 78056620
relocInfo@0x00007f9fa8652d90 [type=12(metadata) addr=0x00007f9fa8652f00 offset=32 format=3 data=5] | [metadata_addr=0x00007f9fa86536b0 *=0x00000008000409d8 offset=0]metadata_value=0x00000008000409d8: {type array byte}
         @0x00007f9fa8652d92: 780766f6
relocInfo@0x00007f9fa8652d94 [type=12(metadata) addr=0x00007f9fa8652ff6 offset=246 format=3 data=7] | [metadata_addr=0x00007f9fa86536c0 *=0x00000008000983b0 offset=0]metadata_value=0x00000008000983b0: 'jdk/incubator/vector/Byte256Vector'
         @0x00007f9fa8652d96: 7c03adad7f907f9f3a0c
relocInfo@0x00007f9fa8652d9e [type=7(external_word) addr=0x00007f9fa8653002 offset=12 format=1 data={adad7f907f9f}] | [target=0x00007f9fadad7f90]
         @0x00007f9fa8652da0: 7c03ad6ab8b87f9f380d
relocInfo@0x00007f9fa8652da8 [type=7(external_word) addr=0x00007f9fa865300f offset=13 data={ad6ab8b87f9f}] | [target=0x00007f9fad6ab8b8]
         @0x00007f9fa8652daa: 320e
relocInfo@0x00007f9fa8652daa [type=6(runtime_call) addr=0x00007f9fa865301d offset=14 format=1] | [destination=0x00007f9facc8ebf0]
         @0x00007f9fa8652dac: 7c03ad6ab8f87f9f380f
relocInfo@0x00007f9fa8652db4 [type=7(external_word) addr=0x00007f9fa865302c offset=15 data={ad6ab8f87f9f}] | [target=0x00007f9fad6ab8f8]
         @0x00007f9fa8652db6: 320e
relocInfo@0x00007f9fa8652db6 [type=6(runtime_call) addr=0x00007f9fa865303a offset=14 format=1] | [destination=0x00007f9facc8ebf0]
         @0x00007f9fa8652db8: 082a
relocInfo@0x00007f9fa8652db8 [type=1(oop) addr=0x00007f9fa8653064 offset=42] | [oop_addr=0x00007f9fa8653066 *=0x000000011f97c888 offset=0]
         @0x00007f9fa8652dba: 080a
relocInfo@0x00007f9fa8652dba [type=1(oop) addr=0x00007f9fa865306e offset=10] | [oop_addr=0x00007f9fa8653070 *=0x000000011f97c918 offset=0]
         @0x00007f9fa8652dbc: 080a
relocInfo@0x00007f9fa8652dbc [type=1(oop) addr=0x00007f9fa8653078 offset=10] | [oop_addr=0x00007f9fa865307a *=0x000000011f0001c0 offset=0]
         @0x00007f9fa8652dbe: 0837
relocInfo@0x00007f9fa8652dbe [type=1(oop) addr=0x00007f9fa86530af offset=55] | [oop_addr=0x00007f9fa86530b1 *=0x000000011f9bbcc0 offset=0]
         @0x00007f9fa8652dc0: 2214
relocInfo@0x00007f9fa8652dc0 [type=4(static_call) addr=0x00007f9fa86530c3 offset=20 format=1] | [destination=0x00007f9fa861b5a0 metadata=0x0000000000000000]
         @0x00007f9fa8652dc2: 5013
relocInfo@0x00007f9fa8652dc2 [type=10(poll) addr=0x00007f9fa86530d6 offset=19]
         @0x00007f9fa8652dc4: 78086675
relocInfo@0x00007f9fa8652dc6 [type=12(metadata) addr=0x00007f9fa865314b offset=117 format=3 data=8] | [metadata_addr=0x00007f9fa86536c8 *=0x00000008000401f8 offset=0]metadata_value=0x00000008000401f8: {type array bool}
         @0x00007f9fa8652dc8: 78096664
relocInfo@0x00007f9fa8652dca [type=12(metadata) addr=0x00007f9fa86531af offset=100 format=3 data=9] | [metadata_addr=0x00007f9fa86536d0 *=0x0000000800098a40 offset=0]metadata_value=0x0000000800098a40: 'jdk/incubator/vector/Byte256Vector$Byte256Mask'
         @0x00007f9fa8652dcc: 7c03adad7f907f9f3a07
relocInfo@0x00007f9fa8652dd4 [type=7(external_word) addr=0x00007f9fa86531b6 offset=7 format=1 data={adad7f907f9f}] | [target=0x00007f9fadad7f90]
         @0x00007f9fa8652dd6: 7c03ad6ab8b87f9f380d
relocInfo@0x00007f9fa8652dde [type=7(external_word) addr=0x00007f9fa86531c3 offset=13 data={ad6ab8b87f9f}] | [target=0x00007f9fad6ab8b8]
         @0x00007f9fa8652de0: 320e
relocInfo@0x00007f9fa8652de0 [type=6(runtime_call) addr=0x00007f9fa86531d1 offset=14 format=1] | [destination=0x00007f9facc8ebf0]
         @0x00007f9fa8652de2: 7c03ad6ab8f87f9f380f
relocInfo@0x00007f9fa8652dea [type=7(external_word) addr=0x00007f9fa86531e0 offset=15 data={ad6ab8f87f9f}] | [target=0x00007f9fad6ab8f8]
         @0x00007f9fa8652dec: 320e
relocInfo@0x00007f9fa8652dec [type=6(runtime_call) addr=0x00007f9fa86531ee offset=14 format=1] | [destination=0x00007f9facc8ebf0]
         @0x00007f9fa8652dee: 78056661
relocInfo@0x00007f9fa8652df0 [type=12(metadata) addr=0x00007f9fa865324f offset=97 format=3 data=5] | [metadata_addr=0x00007f9fa86536b0 *=0x00000008000409d8 offset=0]metadata_value=0x00000008000409d8: {type array byte}
         @0x00007f9fa8652df2: 60b0
relocInfo@0x00007f9fa8652df2 [type=12(metadata) addr=0x00007f9fa86532ff offset=176] | [metadata_addr=0x00007f9fa8653301 *=0x00000008000983b0 offset=0]metadata_value=0x00000008000983b0: 'jdk/incubator/vector/Byte256Vector'
         @0x00007f9fa8652df4: 3214
relocInfo@0x00007f9fa8652df4 [type=6(runtime_call) addr=0x00007f9fa8653313 offset=20 format=1] | [destination=0x00007f9fa8581220]
         @0x00007f9fa8652df6: 583b
relocInfo@0x00007f9fa8652df6 [type=11(poll_return) addr=0x00007f9fa865334e offset=59]
         @0x00007f9fa8652df8: 6033
relocInfo@0x00007f9fa8652df8 [type=12(metadata) addr=0x00007f9fa8653381 offset=51] | [metadata_addr=0x00007f9fa8653383 *=0x00000008000401f8 offset=0]metadata_value=0x00000008000401f8: {type array bool}
         @0x00007f9fa8652dfa: 3212
relocInfo@0x00007f9fa8652dfa [type=6(runtime_call) addr=0x00007f9fa8653393 offset=18 format=1] | [destination=0x00007f9fa8580f20]
         @0x00007f9fa8652dfc: 605c
relocInfo@0x00007f9fa8652dfc [type=12(metadata) addr=0x00007f9fa86533ef offset=92] | [metadata_addr=0x00007f9fa86533f1 *=0x0000000800098a40 offset=0]metadata_value=0x0000000800098a40: 'jdk/incubator/vector/Byte256Vector$Byte256Mask'
         @0x00007f9fa8652dfe: 3210
relocInfo@0x00007f9fa8652dfe [type=6(runtime_call) addr=0x00007f9fa86533ff offset=16 format=1] | [destination=0x00007f9fa8581220]
         @0x00007f9fa8652e00: 6072
relocInfo@0x00007f9fa8652e00 [type=12(metadata) addr=0x00007f9fa8653471 offset=114] | [metadata_addr=0x00007f9fa8653473 *=0x00000008000409d8 offset=0]metadata_value=0x00000008000409d8: {type array byte}
         @0x00007f9fa8652e02: 3212
relocInfo@0x00007f9fa8652e02 [type=6(runtime_call) addr=0x00007f9fa8653483 offset=18 format=1] | [destination=0x00007f9fa8580f20]
         @0x00007f9fa8652e04: 3258
relocInfo@0x00007f9fa8652e04 [type=6(runtime_call) addr=0x00007f9fa86534db offset=88 format=1] | [destination=0x00007f9fa86222a0]
         @0x00007f9fa8652e06: 7c03ad627fe87f9f3805
relocInfo@0x00007f9fa8652e0e [type=7(external_word) addr=0x00007f9fa86534e0 offset=5 data={ad627fe87f9f}] | [target=0x00007f9fad627fe8]
         @0x00007f9fa8652e10: 320e
relocInfo@0x00007f9fa8652e10 [type=6(runtime_call) addr=0x00007f9fa86534ee offset=14 format=1] | [destination=0x00007f9facc8ebf0]
         @0x00007f9fa8652e12: 3245
relocInfo@0x00007f9fa8652e12 [type=6(runtime_call) addr=0x00007f9fa8653533 offset=69 format=1] | [destination=0x00007f9fa86222a0]
         @0x00007f9fa8652e14: 7c03ad627fe87f9f3805
relocInfo@0x00007f9fa8652e1c [type=7(external_word) addr=0x00007f9fa8653538 offset=5 data={ad627fe87f9f}] | [target=0x00007f9fad627fe8]
         @0x00007f9fa8652e1e: 320e
relocInfo@0x00007f9fa8652e1e [type=6(runtime_call) addr=0x00007f9fa8653546 offset=14 format=1] | [destination=0x00007f9facc8ebf0]
         @0x00007f9fa8652e20: 3211
relocInfo@0x00007f9fa8652e20 [type=6(runtime_call) addr=0x00007f9fa8653557 offset=17 format=1] | [destination=0x00007f9fa86222a0]
         @0x00007f9fa8652e22: 7c03ad627fe87f9f3805
relocInfo@0x00007f9fa8652e2a [type=7(external_word) addr=0x00007f9fa865355c offset=5 data={ad627fe87f9f}] | [target=0x00007f9fad627fe8]
         @0x00007f9fa8652e2c: 320e
relocInfo@0x00007f9fa8652e2c [type=6(runtime_call) addr=0x00007f9fa865356a offset=14 format=1] | [destination=0x00007f9facc8ebf0]
         @0x00007f9fa8652e2e: 3219
relocInfo@0x00007f9fa8652e2e [type=6(runtime_call) addr=0x00007f9fa8653583 offset=25 format=1] | [destination=0x00007f9fa86222a0]
         @0x00007f9fa8652e30: 7c03ad627fe87f9f3805
relocInfo@0x00007f9fa8652e38 [type=7(external_word) addr=0x00007f9fa8653588 offset=5 data={ad627fe87f9f}] | [target=0x00007f9fad627fe8]
         @0x00007f9fa8652e3a: 320e
relocInfo@0x00007f9fa8652e3a [type=6(runtime_call) addr=0x00007f9fa8653596 offset=14 format=1] | [destination=0x00007f9facc8ebf0]
         @0x00007f9fa8652e3c: 321d
relocInfo@0x00007f9fa8652e3c [type=6(runtime_call) addr=0x00007f9fa86535b3 offset=29 format=1] | [destination=0x00007f9fa86222a0]
         @0x00007f9fa8652e3e: 7c03ad627fe87f9f3805
relocInfo@0x00007f9fa8652e46 [type=7(external_word) addr=0x00007f9fa86535b8 offset=5 data={ad627fe87f9f}] | [target=0x00007f9fad627fe8]
         @0x00007f9fa8652e48: 320e
relocInfo@0x00007f9fa8652e48 [type=6(runtime_call) addr=0x00007f9fa86535c6 offset=14 format=1] | [destination=0x00007f9facc8ebf0]
         @0x00007f9fa8652e4a: 3215
relocInfo@0x00007f9fa8652e4a [type=6(runtime_call) addr=0x00007f9fa86535db offset=21 format=1] | [destination=0x00007f9fa86222a0]
         @0x00007f9fa8652e4c: 7c03ad627fe87f9f3805
relocInfo@0x00007f9fa8652e54 [type=7(external_word) addr=0x00007f9fa86535e0 offset=5 data={ad627fe87f9f}] | [target=0x00007f9fad627fe8]
         @0x00007f9fa8652e56: 320e
relocInfo@0x00007f9fa8652e56 [type=6(runtime_call) addr=0x00007f9fa86535ee offset=14 format=1] | [destination=0x00007f9facc8ebf0]
         @0x00007f9fa8652e58: 3222
relocInfo@0x00007f9fa8652e58 [type=6(runtime_call) addr=0x00007f9fa8653610 offset=34 format=1] | [destination=0x00007f9fa8582d20]
         @0x00007f9fa8652e5a: 7ac74005
relocInfo@0x00007f9fa8652e5c [type=8(internal_word) addr=0x00007f9fa8653615 offset=5 data=711] | [target=0x00007f9fa865334e]
         @0x00007f9fa8652e5e: 3211
relocInfo@0x00007f9fa8652e5e [type=6(runtime_call) addr=0x00007f9fa8653626 offset=17 format=1] | [destination=0x00007f9fa8621420]
         @0x00007f9fa8652e60: 000a
relocInfo@0x00007f9fa8652e60 [type=0(none) addr=0x00007f9fa8653630 offset=10]
         @0x00007f9fa8652e62: 7c01fdbd2800
relocInfo@0x00007f9fa8652e66 [type=5(static_stub) addr=0x00007f9fa8653630 offset=0 data=-579] | [static_call=0x00007f9fa86530c3]
         @0x00007f9fa8652e68: 6000
relocInfo@0x00007f9fa8652e68 [type=12(metadata) addr=0x00007f9fa8653630 offset=0] | [metadata_addr=0x00007f9fa8653632 *=0x0000000000000000 offset=0]
         @0x00007f9fa8652e6a: 320a
relocInfo@0x00007f9fa8652e6a [type=6(runtime_call) addr=0x00007f9fa865363a offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x00007f9fa8652e6c: 3205
relocInfo@0x00007f9fa8652e6c [type=6(runtime_call) addr=0x00007f9fa865363f offset=5 format=1] | [destination=0x00007f9fa8584ea0]
         @0x00007f9fa8652e6e: 320f
relocInfo@0x00007f9fa8652e6e [type=6(runtime_call) addr=0x00007f9fa865364e offset=15 format=1] | [destination=0x00007f9fa86202e0]
         @0x00007f9fa8652e70: 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Dependencies:
Dependency of type abstract_with_unique_concrete_subtype
  context = *jdk.incubator.vector.AbstractSpecies
  class   = jdk.incubator.vector.ByteVector$ByteSpecies
   [nmethod<=klass]jdk.incubator.vector.AbstractSpecies
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.ByteVector$ByteSpecies
  method  = {method} {0x00007f9f3c674ef8} 'loopBound' '(I)I' in 'jdk/incubator/vector/AbstractSpecies'
  class   = jdk.incubator.vector.VectorSpecies
  method  = *{method} {0x00007f9f3c672a90} 'loopBound' '(I)I' in 'jdk/incubator/vector/VectorSpecies'
   [nmethod<=klass]jdk.incubator.vector.ByteVector$ByteSpecies
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.ByteVector$ByteSpecies
  method  = {method} {0x00007f9f3c6743b8} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
  class   = jdk.incubator.vector.VectorSpecies
  method  = *{method} {0x00007f9f3c672898} 'length' '()I' in 'jdk/incubator/vector/VectorSpecies'
   [nmethod<=klass]jdk.incubator.vector.ByteVector$ByteSpecies
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.Byte256Vector$Byte256Mask
  method  = {method} {0x00007f9f3c690198} 'check' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/AbstractMask'
  class   = jdk.incubator.vector.VectorMask
  method  = *{method} {0x00007f9f3c6938b0} 'check' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/VectorMask'
   [nmethod<=klass]jdk.incubator.vector.Byte256Vector$Byte256Mask
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ExceptionHandlerTable (size = 120 bytes)
catch_pco = 584 (pc=0x00007f9fa86530c8, 1 entries)
  bci -1 at scope depth 0 -> pco 1922 (pc=0x00007f9fa8653602)
catch_pco = 1176 (pc=0x00007f9fa8653318, 1 entries)
  bci -1 at scope depth 0 -> pco 1908 (pc=0x00007f9fa86535f4)
catch_pco = 1304 (pc=0x00007f9fa8653398, 1 entries)
  bci -1 at scope depth 0 -> pco 1917 (pc=0x00007f9fa86535fd)
catch_pco = 1412 (pc=0x00007f9fa8653404, 1 entries)
  bci -1 at scope depth 0 -> pco 1915 (pc=0x00007f9fa86535fb)
catch_pco = 1544 (pc=0x00007f9fa8653488, 1 entries)
  bci -1 at scope depth 0 -> pco 1910 (pc=0x00007f9fa86535f6)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ImplicitExceptionTable (size = 2 entries, 20 bytes):
{
   < 0x00007f9fa8652ef0, 0x00007f9fa86535cc > < 0x00007f9fa8652fc9, 0x00007f9fa865359c > 
}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded oops:
#0: 0x0000000000000000 NULL-oop
#1: 0x000000011f97c918 a 'java/lang/Class'{0x000000011f97c918} = 'jdk/incubator/vector/Byte256Vector$Byte256Mask'
#2: 0x000000011f97c888 a 'java/lang/Class'{0x000000011f97c888} = 'jdk/incubator/vector/Byte256Vector'
#3: 0x000000011f0001c0 a 'java/lang/Class'{0x000000011f0001c0} = byte
#4: 0x000000011f97c840 a 'jdk/incubator/vector/ByteVector$ByteSpecies'{0x000000011f97c840}
#5: 0x000000011f9a8128 a 'jdk/incubator/vector/ByteVector$$Lambda$36+0x000000080009b5a8'{0x000000011f9a8128}
#6: 0x000000011f98bf48 a 'jdk/incubator/vector/VectorMask$$Lambda$33+0x000000080009ab40'{0x000000011f98bf48}
#7: 0x000000011f8a3a70 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x000000011f8a3a70}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded metadata:
# 0: 0x0000000000000000 NULL-oop
# 1: 0x00007f9f3c510e08 {method} {0x00007f9f3c510e08} 'workload' '([B[BI)B' in 'storem'
# 2: 0x00007f9f3c6332f0 {method} {0x00007f9f3c6332f0} 'intoArray' '([BILjdk/incubator/vector/VectorMask;)V' in 'jdk/incubator/vector/ByteVector'
# 3: 0x00007f9f3c6ad898 {method} {0x00007f9f3c6ad898} 'intoArray0' '([BILjdk/incubator/vector/VectorMask;)V' in 'jdk/incubator/vector/Byte256Vector'
# 4: 0x00007f9f3c634c10 {method} {0x00007f9f3c634c10} 'intoArray0Template' '(Ljava/lang/Class;[BILjdk/incubator/vector/VectorMask;)V' in 'jdk/incubator/vector/ByteVector'
# 5: 0x00000008000409d8 {type array byte}
# 6: 0x00007f9f3c692b28 {method} {0x00007f9f3c692b28} 'fromLong' '(Ljdk/incubator/vector/VectorSpecies;J)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/VectorMask'
# 7: 0x00000008000983b0 'jdk/incubator/vector/Byte256Vector'
# 8: 0x00000008000401f8 {type array bool}
# 9: 0x0000000800098a40 'jdk/incubator/vector/Byte256Vector$Byte256Mask'
#10: 0x00007f9f3c632568 {method} {0x00007f9f3c632568} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[BI)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector'
#11: 0x00007f9f3c6da820 {method} {0x00007f9f3c6da820} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
#12: 0x00007f9f3c18ea98 {method} {0x00007f9f3c18ea98} 'checkIndex' '(II)I' in 'java/util/Objects'
#13: 0x00007f9f3c6ad160 {method} {0x00007f9f3c6ad160} 'fromArray0' '([BI)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/Byte256Vector'
#14: 0x00007f9f3c633e78 {method} {0x00007f9f3c633e78} 'fromArray0Template' '([BI)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector'
#15: 0x00007f9f3c635688 {method} {0x00007f9f3c635688} 'arrayAddress' '([BI)J' in 'jdk/incubator/vector/ByteVector'
#16: 0x00007f9f3c6da6f8 {method} {0x00007f9f3c6da6f8} 'indexInRange' '(JJJ)Z' in 'jdk/incubator/vector/VectorIntrinsics'
#17: 0x0000000800094a08 'jdk/incubator/vector/AbstractSpecies'
#18: 0x0000000800094df0 'jdk/incubator/vector/ByteVector$ByteSpecies'
#19: 0x00007f9f3c674ef8 {method} {0x00007f9f3c674ef8} 'loopBound' '(I)I' in 'jdk/incubator/vector/AbstractSpecies'
#20: 0x0000000800094600 'jdk/incubator/vector/VectorSpecies'
#21: 0x00007f9f3c672a90 {method} {0x00007f9f3c672a90} 'loopBound' '(I)I' in 'jdk/incubator/vector/VectorSpecies'
#22: 0x00007f9f3c6743b8 {method} {0x00007f9f3c6743b8} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
#23: 0x00007f9f3c672898 {method} {0x00007f9f3c672898} 'length' '()I' in 'jdk/incubator/vector/VectorSpecies'
#24: 0x00007f9f3c690198 {method} {0x00007f9f3c690198} 'check' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/AbstractMask'
#25: 0x0000000800096cc0 'jdk/incubator/vector/VectorMask'
#26: 0x00007f9f3c6938b0 {method} {0x00007f9f3c6938b0} 'check' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/VectorMask'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

============================= C2-compiled nmethod ==============================
#r018 rsi:rsi   : parm 0: byte[int:>=0]:exact *
#r016 rdx:rdx   : parm 1: byte[int:>=0]:exact *
#r010 rcx   : parm 2: int
# -- Old rsp -- Framesize: 224 --
#r591 rsp+220: in_preserve
#r590 rsp+216: return address
#r589 rsp+212: in_preserve
#r588 rsp+208: saved fp register
#r587 rsp+204: pad2, stack alignment
#r586 rsp+200: pad2, stack alignment
#r585 rsp+196: Fixed slot 1
#r584 rsp+192: Fixed slot 0
#r639 rsp+188: spill
#r638 rsp+184: spill
#r637 rsp+180: spill
#r636 rsp+176: spill
#r635 rsp+172: spill
#r634 rsp+168: spill
#r633 rsp+164: spill
#r632 rsp+160: spill
#r631 rsp+156: spill
#r630 rsp+152: spill
#r629 rsp+148: spill
#r628 rsp+144: spill
#r627 rsp+140: spill
#r626 rsp+136: spill
#r625 rsp+132: spill
#r624 rsp+128: spill
#r623 rsp+124: spill
#r622 rsp+120: spill
#r621 rsp+116: spill
#r620 rsp+112: spill
#r619 rsp+108: spill
#r618 rsp+104: spill
#r617 rsp+100: spill
#r616 rsp+96: spill
#r615 rsp+92: spill
#r614 rsp+88: spill
#r613 rsp+84: spill
#r612 rsp+80: spill
#r611 rsp+76: spill
#r610 rsp+72: spill
#r609 rsp+68: spill
#r608 rsp+64: spill
#r607 rsp+60: spill
#r606 rsp+56: spill
#r605 rsp+52: spill
#r604 rsp+48: spill
#r603 rsp+44: spill
#r602 rsp+40: spill
#r601 rsp+36: outgoing argument
#r600 rsp+32: outgoing argument
#r599 rsp+28: outgoing argument
#r598 rsp+24: outgoing argument
#r597 rsp+20: outgoing argument
#r596 rsp+16: outgoing argument
#r595 rsp+12: outgoing argument
#r594 rsp+ 8: outgoing argument
#r593 rsp+ 4: outgoing argument
#r592 rsp+ 0: outgoing argument
#
----------------------- MetaData before Compile_id = 231 ------------------------
{method}
 - this oop:          0x00007f9f3c510e08
 - method holder:     'storem'
 - constants:         0x00007f9f3c510878 constant pool [107]/operands[10] {0x00007f9f3c510878} for 'storem' cache=0x00007f9f3c700128
 - access:            0xc1000009  public static 
 - name:              'workload'
 - signature:         '([B[BI)B'
 - max stack:         5
 - max locals:        6
 - size of params:    3
 - method size:       14
 - vtable index:      -2
 - i2i entry:         0x00007f9fa8510400
 - adapters:          AHE@0x00007f9fa437f720: 0xbba i2c: 0x00007f9fa85abae0 c2i: 0x00007f9fa85abbc7 c2iUV: 0x00007f9fa85abb91 c2iNCI: 0x00007f9fa85abc01
 - compiled entry     0x00007f9fa85abbc7
 - code size:         64
 - code start:        0x00007f9f3c510db8
 - code end (excl):   0x00007f9f3c510df8
 - method data:       0x00007f9f3c700428
 - checked ex length: 0
 - linenumber start:  0x00007f9f3c510df8
 - localvar length:   0

------------------------ OptoAssembly for Compile_id = 231 -----------------------
#
#  byte ( byte[int:>=0]:exact *, byte[int:>=0]:exact *, int )
#
000     N1: #	out( B1 ) <- in( B41 B37 B24 B38 B50 B42 B34 B33 )  Freq: 1

000     B1: #	out( B41 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
000     # stack bang (632 bytes)
	pushq   rbp	# Save rbp
	subq    rsp, #208	# Create frame

00f     movl    [rsp + #56], RCX	# spill
013     movq    RBP, RSI	# spill
016     movl    R11, [RDX + #12 (8-bit)]	# range
01a     NullCheck RDX

01a     B2: #	out( B22 B3 ) <- in( B1 )  Freq: 0.999999
01a     movl    R10, R11	# spill
01d     andl    R10, #-32	# int
021     testl   R10, R10
024     jle     B22  P=0.029765 C=130957.000000

02a     B3: #	out( B39 B4 ) <- in( B2 )  Freq: 0.970234
02a     movl    R9, R11	# spill
02d     addl    R9, #-31	# int
031     testl   R9, R9
034     jl     B39  P=0.000001 C=-1.000000

03a     B4: #	out( B35 B5 ) <- in( B3 )  Freq: 0.970233
        nop 	# 6 bytes pad for loops and calls
040     cmpl    R11, #31
044     je     B35  P=0.000001 C=-1.000000

04a     B5: #	out( B36 B6 ) <- in( B4 )  Freq: 0.970232
04a     movslq  R11, R11	# i2l
04d     movslq  R8, R10	# i2l
050     addq    R11, #-31	# long
054     addq    R8, #31	# long
058     andq    R8, #-32	# long
05c     movl    R8, R8	# l2i
05f     movslq  R8, R8	# i2l
062     addq    R8, #-32	# long
066     cmpq    R8, R11	# unsigned
069     jae,u   B36  P=0.000001 C=-1.000000

06f     B6: #	out( B40 B7 ) <- in( B5 )  Freq: 0.970231
06f     movl    R11, #32767	# long (unsigned 32-bit)
075     vallones XMM0
079     long_to_mask_avx XMM2, R11	! using R9, R8, XMM1, as TEMP
0f2     vector_loadmask_byte XMM1, XMM2
	
0fa     vptest_alltrue_ge16  R11,XMM1, XMM0	! using RFLAGS as TEMP
107     testl   R11, R11
10a     jne     B40  P=0.000001 C=-1.000000

110     B7: #	out( B37 B8 ) <- in( B6 )  Freq: 0.97023
110     movq    R11, RSI	# spill
113     movl    R9, [RSI + #12 (8-bit)]	# range
117     NullCheck RSI

117     B8: #	out( B38 B9 ) <- in( B7 )  Freq: 0.970229
        nop 	# 9 bytes pad for loops and calls
120     cmpl    R10, #2147483616
127     jg     B38  P=0.000001 C=-1.000000

12d     B9: #	out( B11 ) <- in( B8 )  Freq: 0.970228
12d     movslq  RCX, R9	# i2l
130     addq    RCX, #-32	# long
134     xorl    R9, R9	# int
137     jmp,s   B11
        nop 	# 7 bytes pad for loops and calls

140     B10: #	out( B11 ) <- in( B21 ) top-of-loop Freq: 31.6144
140     movq    RDX, [rsp + #40]	# spill
145     movq    R11, RBP	# spill
148     movl    R10, [rsp + #48]	# spill
14d     vmovdqu XMM2,[rsp + 64]	# spill
153     movq    RCX, [rsp + #96]	# spill

158     B11: #	out( B25 B12 ) <- in( B9 B10 ) Loop( B11-B10 inner ) Freq: 32.5849
158     # TLS is in R15
158     movq    RBX, [R15 + #272 (32-bit)]	# ptr
15f     movq    R8, RBX	# spill
162     addq    R8, #48	# ptr
166     # TLS is in R15
166     cmpq    R8, [R15 + #288 (32-bit)]	# raw ptr
16d     jae,u   B25  P=0.000100 C=-1.000000

173     B12: #	out( B13 ) <- in( B11 )  Freq: 32.5817
173     # TLS is in R15
173     movq    [R15 + #272 (32-bit)], R8	# ptr
17a     PREFETCHW [R8 + #192 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
182     movq    [RBX], #1	# long
189     PREFETCHW [R8 + #256 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
191     movl    [RBX + #8 (8-bit)], narrowklass: precise [bool: :Constant:exact *	# compressed klass ptr
198     PREFETCHW [R8 + #320 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
1a0     movl    [RBX + #12 (8-bit)], #32	# int
1a7     PREFETCHW [R8 + #384 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
1af     movq    [RBX + #16 (8-bit)], R12	# long (R12_heapbase==0)
1b3     movq    [RBX + #24 (8-bit)], R12	# long (R12_heapbase==0)
1b7     movq    [RBX + #32 (8-bit)], R12	# long (R12_heapbase==0)
1bb     movq    [RBX + #40 (8-bit)], R12	# long (R12_heapbase==0)

1bf     B13: #	out( B27 B14 ) <- in( B26 B12 )  Freq: 32.5849
1bf     
1bf     MEMBAR-storestore (empty encoding)
1bf     # checkcastPP of RBX
1bf     store_vector [RBX + #16 (8-bit)],XMM2
	
1c4     # TLS is in R15
1c4     movq    RAX, [R15 + #272 (32-bit)]	# ptr
1cb     movq    R8, RAX	# spill
1ce     addq    R8, #16	# ptr
1d2     # TLS is in R15
        nop 	# 14 bytes pad for loops and calls
1e0     cmpq    R8, [R15 + #288 (32-bit)]	# raw ptr
1e7     jae,u   B27  P=0.000100 C=-1.000000

1ed     B14: #	out( B15 ) <- in( B13 )  Freq: 32.5817
1ed     # TLS is in R15
1ed     movq    [R15 + #272 (32-bit)], R8	# ptr
1f4     PREFETCHW [R8 + #192 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
1fc     movq    [RAX], #1	# long
203     movl    [RAX + #8 (8-bit)], narrowklass: precise jdk/incubator/vector/Byte256Vector$Byte256Mask: 0x00007f9f0808e888:Constant:exact *	# compressed klass ptr

20a     B15: #	out( B29 B16 ) <- in( B28 B14 )  Freq: 32.5849
20a     encode_heap_oop_not_null R8,RBX
24f     movl    [RAX + #12 (8-bit)], R8	# compressed ptr
253     
253     MEMBAR-storestore (empty encoding)
253     movq    RBX, RAX	# spill
256     # checkcastPP of RBX
256     # TLS is in R15
256     movq    R8, [R15 + #272 (32-bit)]	# ptr
25d     movq    RAX, R8	# spill
260     addq    RAX, #48	# ptr
264     movslq  RDI, R9	# i2l
267     movq    RSI, RDI	# spill
26a     addq    RSI, #16	# long
26e     # TLS is in R15
26e     cmpq    RAX, [R15 + #288 (32-bit)]	# raw ptr
275     jae,u   B29  P=0.000100 C=-1.000000

27b     B16: #	out( B17 ) <- in( B15 )  Freq: 32.5817
27b     # TLS is in R15
27b     movq    [R15 + #272 (32-bit)], RAX	# ptr
282     PREFETCHW [RAX + #192 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
289     movq    [R8], #1	# long
290     PREFETCHW [RAX + #256 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
297     movl    [R8 + #8 (8-bit)], narrowklass: precise [byte: :Constant:exact *	# compressed klass ptr
29f     PREFETCHW [RAX + #320 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
2a6     movl    [R8 + #12 (8-bit)], #32	# int
2ae     PREFETCHW [RAX + #384 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
2b5     movq    [R8 + #16 (8-bit)], R12	# long (R12_heapbase==0)
2b9     movq    [R8 + #24 (8-bit)], R12	# long (R12_heapbase==0)
2bd     movq    [R8 + #32 (8-bit)], R12	# long (R12_heapbase==0)
2c1     movq    [R8 + #40 (8-bit)], R12	# long (R12_heapbase==0)

2c5     B17: #	out( B31 B18 ) <- in( B30 B16 )  Freq: 32.5849
2c5     
2c5     MEMBAR-storestore (empty encoding)
2c5     # checkcastPP of R8
2c5     load_vector XMM0,[RDX + #16 + RDI]
2cb     store_vector [R8 + #16 (8-bit)],XMM0
	
2d1     # TLS is in R15
2d1     movq    RAX, [R15 + #272 (32-bit)]	# ptr
2d8     movq    RBP, RAX	# spill
2db     addq    RBP, #16	# ptr
2df     # TLS is in R15
        nop 	# 1 bytes pad for loops and calls
2e0     cmpq    RBP, [R15 + #288 (32-bit)]	# raw ptr
2e7     jae,u   B31  P=0.000100 C=-1.000000

2ed     B18: #	out( B19 ) <- in( B17 )  Freq: 32.5817
2ed     # TLS is in R15
2ed     movq    [R15 + #272 (32-bit)], RBP	# ptr
2f4     PREFETCHW [RBP + #192 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
2fb     movq    [RAX], #1	# long
302     movl    [RAX + #8 (8-bit)], narrowklass: precise jdk/incubator/vector/Byte256Vector: 0x00007f9f081232f0:Constant:exact *	# compressed klass ptr

309     B19: #	out( B33 B20 ) <- in( B32 B18 )  Freq: 32.5849
309     encode_heap_oop_not_null R8,R8
34b     movl    [RAX + #12 (8-bit)], R8	# compressed ptr
34f     
34f     MEMBAR-storestore (empty encoding)
34f     # checkcastPP of RAX
34f     cmpq    RDI, RCX
352     jg     B33  P=0.000000 C=13955.000000

358     B20: #	out( B49 B21 ) <- in( B19 )  Freq: 32.5849
358     movq    R14, RSI	# spill
35b     movq    R13, RDI	# spill
35e     movl    [rsp + #52], R9	# spill
363     movq    [rsp + #96], RCX	# spill
368     vmovdqu [rsp + 64],XMM2	# spill
36e     movl    [rsp + #48], R10	# spill
373     movq    RBP, R11	# spill
376     movq    [rsp + #40], RDX	# spill
37b     movq    RSI, java/lang/Class:exact *	# ptr
385     movq    RDX, java/lang/Class:exact *	# ptr
38f     movq    RCX, java/lang/Class:exact *	# ptr
399     movl    R8, #32	# int
39f     movq    R9, R11	# spill
3a2     movq    RDI, R14	# spill
3a5     movq    [rsp + #0], RAX	# spill
3a9     movq    [rsp + #8], RBX	# spill
3ae     movq    [rsp + #16], R11	# spill
3b3     movq    [rsp + #24], R13	# spill
3b8     movq    R10, jdk/incubator/vector/ByteVector$$Lambda$40+0x000000080009c238:exact *	# ptr
3c2     movq    [rsp + #32], R10	# spill
        nop 	# 1 bytes pad for loops and calls
3c8     call,static  jdk.internal.vm.vector.VectorSupport::storeMasked
        # jdk.incubator.vector.ByteVector::intoArray0Template @ bci:49 (line 3862) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_
        # jdk.incubator.vector.Byte256Vector::intoArray0 @ bci:9 (line 958) L[0]=_ L[1]=_ L[2]=_ L[3]=_
        # jdk.incubator.vector.ByteVector::intoArray @ bci:53 (line 3427) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_
        # storem::workload @ bci:43 (line 13) L[0]=RBP L[1]=rsp + #40 L[2]=rsp + #56 L[3]=rsp + #52 L[4]=_ L[5]=_
        # OopMap {rbp=Oop [40]=Oop off=976/0x3d0}

3d0     B21: #	out( B10 B22 ) <- in( B20 )  Freq: 32.5843
        # Block is sole successor of call
3d0     movl    R9, [rsp + #52]	# spill
3d5     addl    R9, #32	# int
        nop 	# 7 bytes pad for loops and calls
3e0     cmpl    R9, [RSP + #48 (32-bit)]
3e5     jl     B10	# loop end  P=0.970235 C=127058.000000

3eb     B22: #	out( B42 B23 ) <- in( B21 B2 )  Freq: 0.999652
3eb     movl    R10, [RBP + #12 (8-bit)]	# range
3ef     NullCheck RBP

3ef     B23: #	out( B34 B24 ) <- in( B22 )  Freq: 0.999651
3ef     movl    R11, [rsp + #56]	# spill
3f4     cmpl    R11, R10	# unsigned
3f7     jae,u   B34  P=0.000001 C=-1.000000

3fd     B24: #	out( N1 ) <- in( B23 )  Freq: 0.99965
3fd     movsbl  RAX, [RBP + #16 + R11]	# byte
403     vzeroupper
	addq    rsp, 208	# Destroy frame
	popq    rbp
	cmpq     rsp, poll_offset[r15_thread] 
	ja       #safepoint_stub	# Safepoint: poll for GC

41b     ret

41c     B25: #	out( B44 B26 ) <- in( B11 )  Freq: 0.00325903
41c     movl    [rsp + #52], R9	# spill
421     movq    [rsp + #96], RCX	# spill
426     vmovdqu [rsp + 64],XMM2	# spill
42c     movl    [rsp + #48], R10	# spill
431     movq    [rsp + #40], R11	# spill
436     movq    RBP, RDX	# spill
439     movq    RSI, precise [bool: :Constant:exact *	# ptr
443     movl    RDX, #32	# int
448     call,static  wrapper for: _new_array_Java
        # jdk.incubator.vector.VectorMask::fromLong @ bci:39 (line 242) L[0]=_ L[1]=_ L[2]=_ L[3]=_ STK[0]=#Ptr0x00007f9f08090650 STK[1]=#Ptr0x00007f9f08091440 STK[2]=#32 STK[3]=#32767 STK[4]=_ STK[5]=#1 STK[6]=#Ptr0x00007f9f040dbdc0 STK[7]=#Ptr0x00007f9f08121cf8
        # storem::workload @ bci:22 (line 10) L[0]=rsp + #40 L[1]=RBP L[2]=rsp + #56 L[3]=rsp + #52 L[4]=_ L[5]=_
        # OopMap {rbp=Oop [40]=Oop off=1104/0x450}

450     B26: #	out( B13 ) <- in( B25 )  Freq: 0.00325897
        # Block is sole successor of call
450     movq    RDX, RBP	# spill
453     movq    R11, [rsp + #40]	# spill
458     movl    R10, [rsp + #48]	# spill
45d     vmovdqu XMM2,[rsp + 64]	# spill
463     movq    RCX, [rsp + #96]	# spill
468     movl    R9, [rsp + #52]	# spill
46d     movq    RBX, RAX	# spill
470     jmp     B13

475     B27: #	out( B43 B28 ) <- in( B13 )  Freq: 0.00325903
475     movq    [rsp + #104], RBX	# spill
47a     movl    [rsp + #52], R9	# spill
47f     movq    [rsp + #96], RCX	# spill
484     vmovdqu [rsp + 64],XMM2	# spill
48a     movl    [rsp + #48], R10	# spill
48f     movq    [rsp + #40], R11	# spill
494     movq    RBP, RDX	# spill
497     movq    RSI, precise jdk/incubator/vector/Byte256Vector$Byte256Mask: 0x00007f9f0808e888:Constant:exact *	# ptr
        nop 	# 3 bytes pad for loops and calls
4a4     call,static  wrapper for: _new_instance_Java
        # jdk.incubator.vector.VectorMask::fromLong @ bci:39 (line 242) L[0]=_ L[1]=_ L[2]=_ L[3]=_ STK[0]=#Ptr0x00007f9f08090650 STK[1]=#Ptr0x00007f9f08091440 STK[2]=#32 STK[3]=#32767 STK[4]=_ STK[5]=#1 STK[6]=#Ptr0x00007f9f040dbdc0 STK[7]=#Ptr0x00007f9f08121cf8
        # storem::workload @ bci:22 (line 10) L[0]=rsp + #40 L[1]=RBP L[2]=rsp + #56 L[3]=rsp + #52 L[4]=_ L[5]=_
        # OopMap {rbp=Oop [40]=Oop [104]=Oop off=1196/0x4ac}

4ac     B28: #	out( B15 ) <- in( B27 )  Freq: 0.00325897
        # Block is sole successor of call
4ac     movq    RDX, RBP	# spill
4af     movq    R11, [rsp + #40]	# spill
4b4     movl    R10, [rsp + #48]	# spill
4b9     vmovdqu XMM2,[rsp + 64]	# spill
4bf     movq    RCX, [rsp + #96]	# spill
4c4     movl    R9, [rsp + #52]	# spill
4c9     movq    RBX, [rsp + #104]	# spill
4ce     jmp     B15

4d3     B29: #	out( B47 B30 ) <- in( B15 )  Freq: 0.00325903
4d3     movq    [rsp + #120], RSI	# spill
4d8     movq    [rsp + #112], RDI	# spill
4dd     movq    [rsp + #104], RBX	# spill
4e2     movl    [rsp + #52], R9	# spill
4e7     movq    [rsp + #96], RCX	# spill
4ec     vmovdqu [rsp + 64],XMM2	# spill
4f2     movl    [rsp + #48], R10	# spill
4f7     movq    [rsp + #40], R11	# spill
4fc     movq    RBP, RDX	# spill
4ff     movq    RSI, precise [byte: :Constant:exact *	# ptr
509     movl    RDX, #32	# int
        nop 	# 2 bytes pad for loops and calls
510     call,static  wrapper for: _new_array_Java
        # jdk.incubator.vector.ByteVector::fromArray0Template @ bci:32 (line 3746) L[0]=_ L[1]=_ L[2]=_ L[3]=_ STK[0]=#Ptr0x00007f9f10018f88 STK[1]=#Ptr0x00007f9f08091440 STK[2]=#32 STK[3]=RBP STK[4]=rsp + #120 STK[5]=_ STK[6]=RBP STK[7]=rsp + #112 STK[8]=_ STK[9]=#Ptr0x00007f9f040dbdc0 STK[10]=#Ptr0x00007f9f10058b10
        # jdk.incubator.vector.Byte256Vector::fromArray0 @ bci:3 (line 907) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.ByteVector::fromArray @ bci:24 (line 2981) L[0]=_ L[1]=_ L[2]=_ L[3]=_
        # storem::workload @ bci:32 (line 12) L[0]=rsp + #40 L[1]=RBP L[2]=rsp + #56 L[3]=rsp + #52 L[4]=#ScObj0 L[5]=_
        # ScObj0 jdk/incubator/vector/Byte256Vector$Byte256Mask={ [payload :0]=rsp + #64 }
        # OopMap {rbp=Oop [40]=Oop [104]=Oop off=1304/0x518}

518     B30: #	out( B17 ) <- in( B29 )  Freq: 0.00325897
        # Block is sole successor of call
518     movq    RDX, RBP	# spill
51b     movq    R11, [rsp + #40]	# spill
520     movl    R10, [rsp + #48]	# spill
525     vmovdqu XMM2,[rsp + 64]	# spill
52b     movq    RCX, [rsp + #96]	# spill
530     movl    R9, [rsp + #52]	# spill
535     movq    RBX, [rsp + #104]	# spill
53a     movq    R8, RAX	# spill
53d     movq    RDI, [rsp + #112]	# spill
542     movq    RSI, [rsp + #120]	# spill
547     jmp     B17

54c     B31: #	out( B46 B32 ) <- in( B17 )  Freq: 0.00325903
54c     vmovdqu [rsp + 160],XMM0	# spill
555     movq    [rsp + #128], RSI	# spill
55d     movq    [rsp + #120], RDI	# spill
562     movq    [rsp + #112], R8	# spill
567     movq    [rsp + #104], RBX	# spill
56c     movl    [rsp + #52], R9	# spill
571     movq    [rsp + #96], RCX	# spill
576     vmovdqu [rsp + 64],XMM2	# spill
57c     movl    [rsp + #48], R10	# spill
581     movq    [rsp + #40], R11	# spill
586     movq    RBP, RDX	# spill
589     movq    RSI, precise jdk/incubator/vector/Byte256Vector: 0x00007f9f081232f0:Constant:exact *	# ptr
        nop 	# 1 bytes pad for loops and calls
594     call,static  wrapper for: _new_instance_Java
        # jdk.incubator.vector.ByteVector::fromArray0Template @ bci:32 (line 3746) L[0]=_ L[1]=_ L[2]=_ L[3]=_ STK[0]=#Ptr0x00007f9f10018f88 STK[1]=#Ptr0x00007f9f08091440 STK[2]=#32 STK[3]=RBP STK[4]=rsp + #128 STK[5]=_ STK[6]=RBP STK[7]=rsp + #120 STK[8]=_ STK[9]=#Ptr0x00007f9f040dbdc0 STK[10]=#Ptr0x00007f9f10058b10
        # jdk.incubator.vector.Byte256Vector::fromArray0 @ bci:3 (line 907) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.ByteVector::fromArray @ bci:24 (line 2981) L[0]=_ L[1]=_ L[2]=_ L[3]=_
        # storem::workload @ bci:32 (line 12) L[0]=rsp + #40 L[1]=RBP L[2]=rsp + #56 L[3]=rsp + #52 L[4]=#ScObj0 L[5]=_
        # ScObj0 jdk/incubator/vector/Byte256Vector$Byte256Mask={ [payload :0]=rsp + #64 }
        # OopMap {rbp=Oop [40]=Oop [104]=Oop [112]=Oop off=1436/0x59c}

59c     B32: #	out( B19 ) <- in( B31 )  Freq: 0.00325897
        # Block is sole successor of call
59c     movq    RDX, RBP	# spill
59f     movq    R11, [rsp + #40]	# spill
5a4     movl    R10, [rsp + #48]	# spill
5a9     vmovdqu XMM2,[rsp + 64]	# spill
5af     movq    RCX, [rsp + #96]	# spill
5b4     movl    R9, [rsp + #52]	# spill
5b9     movq    RBX, [rsp + #104]	# spill
5be     movq    R8, [rsp + #112]	# spill
5c3     movq    RDI, [rsp + #120]	# spill
5c8     movq    RSI, [rsp + #128]	# spill
5d0     vmovdqu XMM0,[rsp + 160]	# spill
5d9     jmp     B19

5de     B33: #	out( N1 ) <- in( B19 )  Freq: 1.55377e-05
5de     cmpq    RDI, RCX	# CmpL3
	movl    RBP, -1
	jl,s    done
	setne   RBP
	movzbl  RBP, RBP
	done:
5f0     movl    RSI, #-187	# int
5f5     movq    [rsp + #40], RDX	# spill
5fa     movl    [rsp + #52], R9	# spill
5ff     vmovdqu [rsp + 64],XMM0	# spill
605     vmovdqu [rsp + 96],XMM2	# spill
60b     movq    [rsp + #136], R11	# spill
        nop 	# 1 bytes pad for loops and calls
614     call,static  wrapper for: uncommon_trap(reason='unstable_if' action='reinterpret' debug_id='0')
        # jdk.incubator.vector.VectorIntrinsics::indexInRange @ bci:12 (line 49) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ STK[0]=RBP
        # jdk.incubator.vector.ByteVector::intoArray @ bci:33 (line 3424) L[0]=#ScObj0 L[1]=rsp + #136 L[2]=rsp + #52 L[3]=#ScObj1 L[4]=#Ptr0x00007f9f040dbdc0
        # ScObj0 jdk/incubator/vector/Byte256Vector={ [payload :0]=rsp + #64 }
        # ScObj1 jdk/incubator/vector/Byte256Vector$Byte256Mask={ [payload :0]=rsp + #96 }
        # storem::workload @ bci:43 (line 13) L[0]=rsp + #136 L[1]=rsp + #40 L[2]=rsp + #56 L[3]=rsp + #52 L[4]=_ L[5]=_
        # OopMap {[40]=Oop [136]=Oop off=1564/0x61c}
61c     stop	# ShouldNotReachHere

630     B34: #	out( N1 ) <- in( B23 )  Freq: 1.01292e-06
630     movl    RSI, #-28	# int
        nop 	# 3 bytes pad for loops and calls
638     call,static  wrapper for: uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')
        # storem::workload @ bci:62 (line 15) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ STK[0]=RBP STK[1]=rsp + #56
        # OopMap {rbp=Oop off=1600/0x640}
640     stop	# ShouldNotReachHere

654     B35: #	out( B37 ) <- in( B4 )  Freq: 9.83116e-07
654     movq    R11, RSI	# spill
657     jmp,s   B37

659     B36: #	out( B37 ) <- in( B5 )  Freq: 9.83115e-07
659     movq    R11, RSI	# spill

65c     B37: #	out( N1 ) <- in( B7 B39 B35 B36 B40 )  Freq: 4.88981e-06
65c     movl    RSI, #-138	# int
661     movq    RBP, RDX	# spill
664     movq    [rsp + #40], R11	# spill
669     movl    [rsp + #52], R10	# spill
        nop 	# 2 bytes pad for loops and calls
670     call,static  wrapper for: uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')
        # storem::workload @ bci:13 (line 9) L[0]=rsp + #40 L[1]=RBP L[2]=rsp + #56 L[3]=#0 L[4]=_ L[5]=_ STK[0]=#0 STK[1]=rsp + #52
        # OopMap {rbp=Oop [40]=Oop off=1656/0x678}
678     stop	# ShouldNotReachHere

68c     B38: #	out( N1 ) <- in( B8 )  Freq: 9.83112e-07
68c     movl    RSI, #-146	# int
691     movq    RBP, RDX	# spill
694     movq    [rsp + #40], R11	# spill
699     movl    [rsp + #52], R10	# spill
        nop 	# 2 bytes pad for loops and calls
6a0     call,static  wrapper for: uncommon_trap(reason='loop_limit_check' action='maybe_recompile' debug_id='0')
        # storem::workload @ bci:13 (line 9) L[0]=rsp + #40 L[1]=RBP L[2]=rsp + #56 L[3]=#0 L[4]=_ L[5]=_ STK[0]=#0 STK[1]=rsp + #52
        # OopMap {rbp=Oop [40]=Oop off=1704/0x6a8}
6a8     stop	# ShouldNotReachHere

6bc     B39: #	out( B37 ) <- in( B3 )  Freq: 9.70234e-07
6bc     movq    R11, RSI	# spill
        nop 	# 1 bytes pad for loops and calls
6c0     jmp,s   B37

6c2     B40: #	out( B37 ) <- in( B6 )  Freq: 9.70231e-07
6c2     movq    R11, RSI	# spill
6c5     jmp,s   B37

6c7     B41: #	out( N1 ) <- in( B1 )  Freq: 1.01328e-06
6c7     movl    RSI, #-10	# int
6cc     call,static  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # storem::workload @ bci:7 (line 9) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ STK[0]=_ STK[1]=_ STK[2]=#NULL
        # OopMap {off=1748/0x6d4}
6d4     stop	# ShouldNotReachHere

6e8     B42: #	out( N1 ) <- in( B22 )  Freq: 1.01293e-06
6e8     movl    RSI, #-10	# int
6ed     movl    RBP, [rsp + #56]	# spill
        nop 	# 3 bytes pad for loops and calls
6f4     call,static  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # storem::workload @ bci:62 (line 15) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ STK[0]=#NULL STK[1]=RBP
        # OopMap {off=1788/0x6fc}
6fc     stop	# ShouldNotReachHere

710     B43: #	out( B45 ) <- in( B27 )  Freq: 3.25903e-08
710     # exception oop is in rax; no code emitted
710     jmp,s   B45

712     B44: #	out( B45 ) <- in( B25 )  Freq: 3.25903e-08
712     # exception oop is in rax; no code emitted

712     B45: #	out( B50 ) <- in( B44 B43 )  Freq: 6.51807e-08
712     movq    RSI, RAX	# spill
715     jmp,s   B50

717     B46: #	out( B48 ) <- in( B31 )  Freq: 3.25903e-08
717     # exception oop is in rax; no code emitted
717     jmp,s   B48

719     B47: #	out( B48 ) <- in( B29 )  Freq: 3.25903e-08
719     # exception oop is in rax; no code emitted

719     B48: #	out( B50 ) <- in( B47 B46 )  Freq: 6.51807e-08
719     movq    RSI, RAX	# spill
71c     jmp,s   B50

71e     B49: #	out( B50 ) <- in( B20 )  Freq: 0.000325849
71e     # exception oop is in rax; no code emitted
71e     movq    RSI, RAX	# spill

721     B50: #	out( N1 ) <- in( B45 B48 B49 )  Freq: 0.000325979
721     vzeroupper
	addq    rsp, 208	# Destroy frame
	popq    rbp

72c     jmp     rethrow_stub

--------------------------------------------------------------------------------
----------------------------------- Assembly -----------------------------------

Compiled method (c2)    1296  231             storem::workload (64 bytes)
 total in heap  [0x00007f9fa8655110,0x00007f9fa86560d0] = 4032
 relocation     [0x00007f9fa8655288,0x00007f9fa8655368] = 224
 main code      [0x00007f9fa8655380,0x00007f9fa8655ac8] = 1864
 stub code      [0x00007f9fa8655ac8,0x00007f9fa8655af0] = 40
 oops           [0x00007f9fa8655af0,0x00007f9fa8655b28] = 56
 metadata       [0x00007f9fa8655b28,0x00007f9fa8655be8] = 192
 scopes data    [0x00007f9fa8655be8,0x00007f9fa8655e00] = 536
 scopes pcs     [0x00007f9fa8655e00,0x00007f9fa8656020] = 544
 dependencies   [0x00007f9fa8656020,0x00007f9fa8656038] = 24
 handler table  [0x00007f9fa8656038,0x00007f9fa86560b0] = 120
 nul chk table  [0x00007f9fa86560b0,0x00007f9fa86560d0] = 32

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x00007f9f3c510e08} 'workload' '([B[BI)B' in 'storem'
  # parm0:    rsi:rsi   = '[B'
  # parm1:    rdx:rdx   = '[B'
  # parm2:    rcx       = int
  #           [sp+0xe0]  (sp of caller)
 ;; N1: #	out( B1 ) <- in( B41 B37 B24 B38 B50 B42 B34 B33 )  Freq: 1
 ;; B1: #	out( B41 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x00007f9fa8655380:   mov    %eax,-0x18000(%rsp)
  0x00007f9fa8655387:   push   %rbp
  0x00007f9fa8655388:   sub    $0xd0,%rsp                   ;*synchronization entry
                                                            ; - storem::workload@-1 (line 9)
  0x00007f9fa865538f:   mov    %ecx,0x38(%rsp)
  0x00007f9fa8655393:   mov    %rsi,%rbp
  0x00007f9fa8655396:   mov    0xc(%rdx),%r11d              ; implicit exception: dispatches to 0x00007f9fa8655a47
 ;; B2: #	out( B22 B3 ) <- in( B1 )  Freq: 0.999999
  0x00007f9fa865539a:   mov    %r11d,%r10d
  0x00007f9fa865539d:   and    $0xffffffe0,%r10d
  0x00007f9fa86553a1:   test   %r10d,%r10d
  0x00007f9fa86553a4:   jle    0x00007f9fa865576b
 ;; B3: #	out( B39 B4 ) <- in( B2 )  Freq: 0.970234
  0x00007f9fa86553aa:   mov    %r11d,%r9d
  0x00007f9fa86553ad:   add    $0xffffffe1,%r9d
  0x00007f9fa86553b1:   test   %r9d,%r9d
  0x00007f9fa86553b4:   jl     0x00007f9fa8655a3c
 ;; B4: #	out( B35 B5 ) <- in( B3 )  Freq: 0.970233
  0x00007f9fa86553ba:   nop
  0x00007f9fa86553bb:   nop
  0x00007f9fa86553bc:   nop
  0x00007f9fa86553bd:   nop
  0x00007f9fa86553be:   nop
  0x00007f9fa86553bf:   nop
  0x00007f9fa86553c0:   cmp    $0x1f,%r11d
  0x00007f9fa86553c4:   je     0x00007f9fa86559d4
 ;; B5: #	out( B36 B6 ) <- in( B4 )  Freq: 0.970232
  0x00007f9fa86553ca:   movslq %r11d,%r11
  0x00007f9fa86553cd:   movslq %r10d,%r8
  0x00007f9fa86553d0:   add    $0xffffffffffffffe1,%r11
  0x00007f9fa86553d4:   add    $0x1f,%r8
  0x00007f9fa86553d8:   and    $0xffffffffffffffe0,%r8
  0x00007f9fa86553dc:   mov    %r8d,%r8d
  0x00007f9fa86553df:   movslq %r8d,%r8
  0x00007f9fa86553e2:   add    $0xffffffffffffffe0,%r8
  0x00007f9fa86553e6:   cmp    %r11,%r8
  0x00007f9fa86553e9:   jae    0x00007f9fa86559d9
 ;; B6: #	out( B40 B7 ) <- in( B5 )  Freq: 0.970231
  0x00007f9fa86553ef:   mov    $0x7fff,%r11d
  0x00007f9fa86553f5:   vpcmpeqb %ymm0,%ymm0,%ymm0
  0x00007f9fa86553f9:   movabs $0x101010101010101,%r9
  0x00007f9fa8655403:   pdep   %r9,%r11,%r9
  0x00007f9fa8655408:   mov    %r11,%r8
  0x00007f9fa865540b:   vpxor  %ymm1,%ymm1,%ymm1
  0x00007f9fa865540f:   vmovq  %r9,%xmm1
  0x00007f9fa8655414:   vmovq  %r9,%xmm2
  0x00007f9fa8655419:   movabs $0x101010101010101,%r9
  0x00007f9fa8655423:   shr    $0x8,%r8
  0x00007f9fa8655427:   pdep   %r9,%r8,%r9
  0x00007f9fa865542c:   vpinsrq $0x1,%r9,%xmm1,%xmm1
  0x00007f9fa8655432:   vmovdqu %ymm1,%ymm2
  0x00007f9fa8655436:   vpxor  %xmm1,%xmm1,%xmm1
  0x00007f9fa865543a:   movabs $0x101010101010101,%r9
  0x00007f9fa8655444:   shr    $0x8,%r8
  0x00007f9fa8655448:   pdep   %r9,%r8,%r9
  0x00007f9fa865544d:   vpinsrq $0x0,%r9,%xmm1,%xmm1
  0x00007f9fa8655453:   movabs $0x101010101010101,%r9
  0x00007f9fa865545d:   shr    $0x8,%r8
  0x00007f9fa8655461:   pdep   %r9,%r8,%r9
  0x00007f9fa8655466:   vpinsrq $0x1,%r9,%xmm1,%xmm1
  0x00007f9fa865546c:   vinsertf128 $0x1,%xmm1,%ymm2,%ymm2  ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
                                                            ; - jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
                                                            ; - storem::workload@43 (line 13)
  0x00007f9fa8655472:   vpxor  %ymm1,%ymm1,%ymm1
  0x00007f9fa8655476:   vpsubb %ymm2,%ymm1,%ymm1            ;*invokestatic fromBitsCoerced {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.VectorMask::fromLong@39 (line 242)
                                                            ; - storem::workload@22 (line 10)
  0x00007f9fa865547a:   vptest %ymm0,%ymm1
  0x00007f9fa865547f:   setb   %r11b
  0x00007f9fa8655483:   movzbl %r11b,%r11d
  0x00007f9fa8655487:   test   %r11d,%r11d
  0x00007f9fa865548a:   jne    0x00007f9fa8655a42
 ;; B7: #	out( B37 B8 ) <- in( B6 )  Freq: 0.97023
  0x00007f9fa8655490:   mov    %rsi,%r11
  0x00007f9fa8655493:   mov    0xc(%rsi),%r9d               ; implicit exception: dispatches to 0x00007f9fa86559dc
 ;; B8: #	out( B38 B9 ) <- in( B7 )  Freq: 0.970229
  0x00007f9fa8655497:   nop
  0x00007f9fa8655498:   nop
  0x00007f9fa8655499:   nop
  0x00007f9fa865549a:   nop
  0x00007f9fa865549b:   nop
  0x00007f9fa865549c:   nop
  0x00007f9fa865549d:   nop
  0x00007f9fa865549e:   nop
  0x00007f9fa865549f:   nop
  0x00007f9fa86554a0:   cmp    $0x7fffffe0,%r10d
  0x00007f9fa86554a7:   jg     0x00007f9fa8655a0c
 ;; B9: #	out( B11 ) <- in( B8 )  Freq: 0.970228
  0x00007f9fa86554ad:   movslq %r9d,%rcx
  0x00007f9fa86554b0:   add    $0xffffffffffffffe0,%rcx
  0x00007f9fa86554b4:   xor    %r9d,%r9d
  0x00007f9fa86554b7:   jmp    0x00007f9fa86554d8
  0x00007f9fa86554b9:   nop
  0x00007f9fa86554ba:   nop
  0x00007f9fa86554bb:   nop
  0x00007f9fa86554bc:   nop
  0x00007f9fa86554bd:   nop
  0x00007f9fa86554be:   nop
  0x00007f9fa86554bf:   nop
 ;; B10: #	out( B11 ) <- in( B21 ) top-of-loop Freq: 31.6144
  0x00007f9fa86554c0:   mov    0x28(%rsp),%rdx
  0x00007f9fa86554c5:   mov    %rbp,%r11
  0x00007f9fa86554c8:   mov    0x30(%rsp),%r10d
  0x00007f9fa86554cd:   vmovdqu 0x40(%rsp),%ymm2
  0x00007f9fa86554d3:   mov    0x60(%rsp),%rcx
 ;; B11: #	out( B25 B12 ) <- in( B9 B10 ) Loop( B11-B10 inner ) Freq: 32.5849
  0x00007f9fa86554d8:   mov    0x110(%r15),%rbx
  0x00007f9fa86554df:   mov    %rbx,%r8
  0x00007f9fa86554e2:   add    $0x30,%r8
  0x00007f9fa86554e6:   cmp    0x120(%r15),%r8
  0x00007f9fa86554ed:   jae    0x00007f9fa865579c
 ;; B12: #	out( B13 ) <- in( B11 )  Freq: 32.5817
  0x00007f9fa86554f3:   mov    %r8,0x110(%r15)
  0x00007f9fa86554fa:   prefetchw 0xc0(%r8)
  0x00007f9fa8655502:   movq   $0x1,(%rbx)
  0x00007f9fa8655509:   prefetchw 0x100(%r8)
  0x00007f9fa8655511:   movl   $0x401f8,0x8(%rbx)           ;   {metadata({type array bool})}
  0x00007f9fa8655518:   prefetchw 0x140(%r8)
  0x00007f9fa8655520:   movl   $0x20,0xc(%rbx)
  0x00007f9fa8655527:   prefetchw 0x180(%r8)
  0x00007f9fa865552f:   mov    %r12,0x10(%rbx)
  0x00007f9fa8655533:   mov    %r12,0x18(%rbx)
  0x00007f9fa8655537:   mov    %r12,0x20(%rbx)
  0x00007f9fa865553b:   mov    %r12,0x28(%rbx)
 ;; B13: #	out( B27 B14 ) <- in( B26 B12 )  Freq: 32.5849
  0x00007f9fa865553f:   vmovdqu %ymm2,0x10(%rbx)
  0x00007f9fa8655544:   mov    0x110(%r15),%rax
  0x00007f9fa865554b:   mov    %rax,%r8
  0x00007f9fa865554e:   add    $0x10,%r8
  0x00007f9fa8655552:   nop
  0x00007f9fa8655553:   nop
  0x00007f9fa8655554:   nop
  0x00007f9fa8655555:   nop
  0x00007f9fa8655556:   nop
  0x00007f9fa8655557:   nop
  0x00007f9fa8655558:   nop
  0x00007f9fa8655559:   nop
  0x00007f9fa865555a:   nop
  0x00007f9fa865555b:   nop
  0x00007f9fa865555c:   nop
  0x00007f9fa865555d:   nop
  0x00007f9fa865555e:   nop
  0x00007f9fa865555f:   nop
  0x00007f9fa8655560:   cmp    0x120(%r15),%r8
  0x00007f9fa8655567:   jae    0x00007f9fa86557f5
 ;; B14: #	out( B15 ) <- in( B13 )  Freq: 32.5817
  0x00007f9fa865556d:   mov    %r8,0x110(%r15)
  0x00007f9fa8655574:   prefetchw 0xc0(%r8)
  0x00007f9fa865557c:   movq   $0x1,(%rax)
  0x00007f9fa8655583:   movl   $0x98a40,0x8(%rax)           ;   {metadata('jdk/incubator/vector/Byte256Vector$Byte256Mask')}
 ;; B15: #	out( B29 B16 ) <- in( B28 B14 )  Freq: 32.5849
  0x00007f9fa865558a:   cmp    0x54829ff(%rip),%r12        # 0x00007f9fadad7f90
                                                            ;   {external_word}
  0x00007f9fa8655591:   je     0x00007f9fa86555ab
 ;; MacroAssembler::encode_heap_oop_not_null2: heap base corrupted?
  0x00007f9fa8655597:   movabs $0x7f9fad6ab8b8,%rdi         ;   {external_word}
  0x00007f9fa86555a1:   and    $0xfffffffffffffff0,%rsp
  0x00007f9fa86555a5:   callq  0x00007f9facc8ebf0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f9fa86555aa:   hlt    
  0x00007f9fa86555ab:   test   %rbx,%rbx
  0x00007f9fa86555ae:   jne    0x00007f9fa86555c8
 ;; null oop passed to encode_heap_oop_not_null2
  0x00007f9fa86555b4:   movabs $0x7f9fad6ab8f8,%rdi         ;   {external_word}
  0x00007f9fa86555be:   and    $0xfffffffffffffff0,%rsp
  0x00007f9fa86555c2:   callq  0x00007f9facc8ebf0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f9fa86555c7:   hlt    
  0x00007f9fa86555c8:   mov    %rbx,%r8
  0x00007f9fa86555cb:   shr    $0x3,%r8
  0x00007f9fa86555cf:   mov    %r8d,0xc(%rax)
  0x00007f9fa86555d3:   mov    %rax,%rbx
  0x00007f9fa86555d6:   mov    0x110(%r15),%r8
  0x00007f9fa86555dd:   mov    %r8,%rax
  0x00007f9fa86555e0:   add    $0x30,%rax                   ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
                                                            ; - jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
                                                            ; - storem::workload@43 (line 13)
  0x00007f9fa86555e4:   movslq %r9d,%rdi                    ;*i2l {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::arrayAddress@4 (line 3972)
                                                            ; - jdk.incubator.vector.ByteVector::fromArray0Template@20 (line 3748)
                                                            ; - jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 907)
                                                            ; - jdk.incubator.vector.ByteVector::fromArray@24 (line 2981)
                                                            ; - storem::workload@32 (line 12)
  0x00007f9fa86555e7:   mov    %rdi,%rsi
  0x00007f9fa86555ea:   add    $0x10,%rsi
  0x00007f9fa86555ee:   cmp    0x120(%r15),%rax
  0x00007f9fa86555f5:   jae    0x00007f9fa8655853
 ;; B16: #	out( B17 ) <- in( B15 )  Freq: 32.5817
  0x00007f9fa86555fb:   mov    %rax,0x110(%r15)
  0x00007f9fa8655602:   prefetchw 0xc0(%rax)
  0x00007f9fa8655609:   movq   $0x1,(%r8)
  0x00007f9fa8655610:   prefetchw 0x100(%rax)
  0x00007f9fa8655617:   movl   $0x409d8,0x8(%r8)            ;   {metadata({type array byte})}
  0x00007f9fa865561f:   prefetchw 0x140(%rax)
  0x00007f9fa8655626:   movl   $0x20,0xc(%r8)
  0x00007f9fa865562e:   prefetchw 0x180(%rax)
  0x00007f9fa8655635:   mov    %r12,0x10(%r8)
  0x00007f9fa8655639:   mov    %r12,0x18(%r8)
  0x00007f9fa865563d:   mov    %r12,0x20(%r8)
  0x00007f9fa8655641:   mov    %r12,0x28(%r8)               ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
                                                            ; - jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
                                                            ; - storem::workload@43 (line 13)
 ;; B17: #	out( B31 B18 ) <- in( B30 B16 )  Freq: 32.5849
  0x00007f9fa8655645:   vmovdqu 0x10(%rdx,%rdi,1),%ymm0     ;*invokestatic load {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::fromArray0Template@32 (line 3746)
                                                            ; - jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 907)
                                                            ; - jdk.incubator.vector.ByteVector::fromArray@24 (line 2981)
                                                            ; - storem::workload@32 (line 12)
  0x00007f9fa865564b:   vmovdqu %ymm0,0x10(%r8)
  0x00007f9fa8655651:   mov    0x110(%r15),%rax
  0x00007f9fa8655658:   mov    %rax,%rbp
  0x00007f9fa865565b:   add    $0x10,%rbp
  0x00007f9fa865565f:   nop
  0x00007f9fa8655660:   cmp    0x120(%r15),%rbp
  0x00007f9fa8655667:   jae    0x00007f9fa86558cc
 ;; B18: #	out( B19 ) <- in( B17 )  Freq: 32.5817
  0x00007f9fa865566d:   mov    %rbp,0x110(%r15)
  0x00007f9fa8655674:   prefetchw 0xc0(%rbp)
  0x00007f9fa865567b:   movq   $0x1,(%rax)
  0x00007f9fa8655682:   movl   $0x983b0,0x8(%rax)           ;   {metadata('jdk/incubator/vector/Byte256Vector')}
 ;; B19: #	out( B33 B20 ) <- in( B32 B18 )  Freq: 32.5849
  0x00007f9fa8655689:   cmp    0x5482900(%rip),%r12        # 0x00007f9fadad7f90
                                                            ;   {external_word}
  0x00007f9fa8655690:   je     0x00007f9fa86556aa
 ;; MacroAssembler::encode_heap_oop_not_null2: heap base corrupted?
  0x00007f9fa8655696:   movabs $0x7f9fad6ab8b8,%rdi         ;   {external_word}
  0x00007f9fa86556a0:   and    $0xfffffffffffffff0,%rsp
  0x00007f9fa86556a4:   callq  0x00007f9facc8ebf0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f9fa86556a9:   hlt    
  0x00007f9fa86556aa:   test   %r8,%r8
  0x00007f9fa86556ad:   jne    0x00007f9fa86556c7
 ;; null oop passed to encode_heap_oop_not_null2
  0x00007f9fa86556b3:   movabs $0x7f9fad6ab8f8,%rdi         ;   {external_word}
  0x00007f9fa86556bd:   and    $0xfffffffffffffff0,%rsp
  0x00007f9fa86556c1:   callq  0x00007f9facc8ebf0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f9fa86556c6:   hlt    
  0x00007f9fa86556c7:   shr    $0x3,%r8
  0x00007f9fa86556cb:   mov    %r8d,0xc(%rax)
  0x00007f9fa86556cf:   cmp    %rcx,%rdi                    ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
                                                            ; - jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
                                                            ; - storem::workload@43 (line 13)
  0x00007f9fa86556d2:   jg     0x00007f9fa865595e
 ;; B20: #	out( B49 B21 ) <- in( B19 )  Freq: 32.5849
  0x00007f9fa86556d8:   mov    %rsi,%r14
  0x00007f9fa86556db:   mov    %rdi,%r13
  0x00007f9fa86556de:   mov    %r9d,0x34(%rsp)
  0x00007f9fa86556e3:   mov    %rcx,0x60(%rsp)
  0x00007f9fa86556e8:   vmovdqu %ymm2,0x40(%rsp)
  0x00007f9fa86556ee:   mov    %r10d,0x30(%rsp)
  0x00007f9fa86556f3:   mov    %r11,%rbp
  0x00007f9fa86556f6:   mov    %rdx,0x28(%rsp)
  0x00007f9fa86556fb:   movabs $0x11f97c888,%rsi            ;   {oop(a 'java/lang/Class'{0x000000011f97c888} = 'jdk/incubator/vector/Byte256Vector')}
  0x00007f9fa8655705:   movabs $0x11f97c918,%rdx            ;   {oop(a 'java/lang/Class'{0x000000011f97c918} = 'jdk/incubator/vector/Byte256Vector$Byte256Mask')}
  0x00007f9fa865570f:   movabs $0x11f0001c0,%rcx            ;   {oop(a 'java/lang/Class'{0x000000011f0001c0} = byte)}
  0x00007f9fa8655719:   mov    $0x20,%r8d
  0x00007f9fa865571f:   mov    %r11,%r9
  0x00007f9fa8655722:   mov    %r14,%rdi
  0x00007f9fa8655725:   mov    %rax,(%rsp)
  0x00007f9fa8655729:   mov    %rbx,0x8(%rsp)
  0x00007f9fa865572e:   mov    %r11,0x10(%rsp)
  0x00007f9fa8655733:   mov    %r13,0x18(%rsp)
  0x00007f9fa8655738:   movabs $0x11f9bbcc0,%r10            ;   {oop(a 'jdk/incubator/vector/ByteVector$$Lambda$40+0x000000080009c238'{0x000000011f9bbcc0})}
  0x00007f9fa8655742:   mov    %r10,0x20(%rsp)
  0x00007f9fa8655747:   nop
  0x00007f9fa8655748:   vzeroupper 
  0x00007f9fa865574b:   callq  0x00007f9fa864c720           ; ImmutableOopMap {rbp=Oop [40]=Oop }
                                                            ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
                                                            ; - jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
                                                            ; - storem::workload@43 (line 13)
                                                            ;   {static_call}
 ;; B21: #	out( B10 B22 ) <- in( B20 )  Freq: 32.5843
  0x00007f9fa8655750:   mov    0x34(%rsp),%r9d
  0x00007f9fa8655755:   add    $0x20,%r9d
  0x00007f9fa8655759:   nop
  0x00007f9fa865575a:   nop
  0x00007f9fa865575b:   nop
  0x00007f9fa865575c:   nop
  0x00007f9fa865575d:   nop
  0x00007f9fa865575e:   nop
  0x00007f9fa865575f:   nop
  0x00007f9fa8655760:   cmp    0x30(%rsp),%r9d
  0x00007f9fa8655765:   jl     0x00007f9fa86554c0
 ;; B22: #	out( B42 B23 ) <- in( B21 B2 )  Freq: 0.999652
  0x00007f9fa865576b:   mov    0xc(%rbp),%r10d              ; implicit exception: dispatches to 0x00007f9fa8655a68
 ;; B23: #	out( B34 B24 ) <- in( B22 )  Freq: 0.999651
  0x00007f9fa865576f:   mov    0x38(%rsp),%r11d
  0x00007f9fa8655774:   cmp    %r10d,%r11d
  0x00007f9fa8655777:   jae    0x00007f9fa86559b0           ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
                                                            ; - jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
                                                            ; - storem::workload@43 (line 13)
 ;; B24: #	out( N1 ) <- in( B23 )  Freq: 0.99965
  0x00007f9fa865577d:   movsbl 0x10(%rbp,%r11,1),%eax       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - storem::workload@62 (line 15)
  0x00007f9fa8655783:   vzeroupper 
  0x00007f9fa8655786:   add    $0xd0,%rsp
  0x00007f9fa865578d:   pop    %rbp
  0x00007f9fa865578e:   cmp    0x3c8(%r15),%rsp             ;   {poll_return}
  0x00007f9fa8655795:   ja     0x00007f9fa8655ab1
  0x00007f9fa865579b:   retq   
 ;; B25: #	out( B44 B26 ) <- in( B11 )  Freq: 0.00325903
  0x00007f9fa865579c:   mov    %r9d,0x34(%rsp)
  0x00007f9fa86557a1:   mov    %rcx,0x60(%rsp)
  0x00007f9fa86557a6:   vmovdqu %ymm2,0x40(%rsp)
  0x00007f9fa86557ac:   mov    %r10d,0x30(%rsp)
  0x00007f9fa86557b1:   mov    %r11,0x28(%rsp)
  0x00007f9fa86557b6:   mov    %rdx,%rbp
  0x00007f9fa86557b9:   movabs $0x8000401f8,%rsi            ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
                                                            ; - jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
                                                            ; - storem::workload@43 (line 13)
                                                            ;   {metadata({type array bool})}
  0x00007f9fa86557c3:   mov    $0x20,%edx
  0x00007f9fa86557c8:   vzeroupper 
  0x00007f9fa86557cb:   callq  0x00007f9fa8580f20           ; ImmutableOopMap {rbp=Oop [40]=Oop }
                                                            ;*invokestatic fromBitsCoerced {reexecute=1 rethrow=0 return_oop=1}
                                                            ; - (reexecute) jdk.incubator.vector.VectorMask::fromLong@39 (line 242)
                                                            ; - storem::workload@22 (line 10)
                                                            ;   {runtime_call _new_array_Java}
 ;; B26: #	out( B13 ) <- in( B25 )  Freq: 0.00325897
  0x00007f9fa86557d0:   mov    %rbp,%rdx
  0x00007f9fa86557d3:   mov    0x28(%rsp),%r11
  0x00007f9fa86557d8:   mov    0x30(%rsp),%r10d
  0x00007f9fa86557dd:   vmovdqu 0x40(%rsp),%ymm2
  0x00007f9fa86557e3:   mov    0x60(%rsp),%rcx
  0x00007f9fa86557e8:   mov    0x34(%rsp),%r9d
  0x00007f9fa86557ed:   mov    %rax,%rbx
  0x00007f9fa86557f0:   jmpq   0x00007f9fa865553f
 ;; B27: #	out( B43 B28 ) <- in( B13 )  Freq: 0.00325903
  0x00007f9fa86557f5:   mov    %rbx,0x68(%rsp)
  0x00007f9fa86557fa:   mov    %r9d,0x34(%rsp)
  0x00007f9fa86557ff:   mov    %rcx,0x60(%rsp)
  0x00007f9fa8655804:   vmovdqu %ymm2,0x40(%rsp)
  0x00007f9fa865580a:   mov    %r10d,0x30(%rsp)
  0x00007f9fa865580f:   mov    %r11,0x28(%rsp)
  0x00007f9fa8655814:   mov    %rdx,%rbp
  0x00007f9fa8655817:   movabs $0x800098a40,%rsi            ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
                                                            ; - jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
                                                            ; - storem::workload@43 (line 13)
                                                            ;   {metadata('jdk/incubator/vector/Byte256Vector$Byte256Mask')}
  0x00007f9fa8655821:   nop
  0x00007f9fa8655822:   nop
  0x00007f9fa8655823:   nop
  0x00007f9fa8655824:   vzeroupper 
  0x00007f9fa8655827:   callq  0x00007f9fa8581220           ; ImmutableOopMap {rbp=Oop [40]=Oop [104]=Oop }
                                                            ;*invokestatic fromBitsCoerced {reexecute=1 rethrow=0 return_oop=1}
                                                            ; - (reexecute) jdk.incubator.vector.VectorMask::fromLong@39 (line 242)
                                                            ; - storem::workload@22 (line 10)
                                                            ;   {runtime_call _new_instance_Java}
 ;; B28: #	out( B15 ) <- in( B27 )  Freq: 0.00325897
  0x00007f9fa865582c:   mov    %rbp,%rdx
  0x00007f9fa865582f:   mov    0x28(%rsp),%r11
  0x00007f9fa8655834:   mov    0x30(%rsp),%r10d
  0x00007f9fa8655839:   vmovdqu 0x40(%rsp),%ymm2
  0x00007f9fa865583f:   mov    0x60(%rsp),%rcx
  0x00007f9fa8655844:   mov    0x34(%rsp),%r9d
  0x00007f9fa8655849:   mov    0x68(%rsp),%rbx
  0x00007f9fa865584e:   jmpq   0x00007f9fa865558a
 ;; B29: #	out( B47 B30 ) <- in( B15 )  Freq: 0.00325903
  0x00007f9fa8655853:   mov    %rsi,0x78(%rsp)
  0x00007f9fa8655858:   mov    %rdi,0x70(%rsp)
  0x00007f9fa865585d:   mov    %rbx,0x68(%rsp)
  0x00007f9fa8655862:   mov    %r9d,0x34(%rsp)
  0x00007f9fa8655867:   mov    %rcx,0x60(%rsp)
  0x00007f9fa865586c:   vmovdqu %ymm2,0x40(%rsp)
  0x00007f9fa8655872:   mov    %r10d,0x30(%rsp)
  0x00007f9fa8655877:   mov    %r11,0x28(%rsp)
  0x00007f9fa865587c:   mov    %rdx,%rbp
  0x00007f9fa865587f:   movabs $0x8000409d8,%rsi            ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
                                                            ; - jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
                                                            ; - storem::workload@43 (line 13)
                                                            ;   {metadata({type array byte})}
  0x00007f9fa8655889:   mov    $0x20,%edx
  0x00007f9fa865588e:   nop
  0x00007f9fa865588f:   nop
  0x00007f9fa8655890:   vzeroupper 
  0x00007f9fa8655893:   callq  0x00007f9fa8580f20           ; ImmutableOopMap {rbp=Oop [40]=Oop [104]=Oop }
                                                            ;*invokestatic load {reexecute=1 rethrow=0 return_oop=1}
                                                            ; - (reexecute) jdk.incubator.vector.ByteVector::fromArray0Template@32 (line 3746)
                                                            ; - jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 907)
                                                            ; - jdk.incubator.vector.ByteVector::fromArray@24 (line 2981)
                                                            ; - storem::workload@32 (line 12)
                                                            ;   {runtime_call _new_array_Java}
 ;; B30: #	out( B17 ) <- in( B29 )  Freq: 0.00325897
  0x00007f9fa8655898:   mov    %rbp,%rdx
  0x00007f9fa865589b:   mov    0x28(%rsp),%r11
  0x00007f9fa86558a0:   mov    0x30(%rsp),%r10d
  0x00007f9fa86558a5:   vmovdqu 0x40(%rsp),%ymm2
  0x00007f9fa86558ab:   mov    0x60(%rsp),%rcx
  0x00007f9fa86558b0:   mov    0x34(%rsp),%r9d
  0x00007f9fa86558b5:   mov    0x68(%rsp),%rbx
  0x00007f9fa86558ba:   mov    %rax,%r8
  0x00007f9fa86558bd:   mov    0x70(%rsp),%rdi
  0x00007f9fa86558c2:   mov    0x78(%rsp),%rsi
  0x00007f9fa86558c7:   jmpq   0x00007f9fa8655645
 ;; B31: #	out( B46 B32 ) <- in( B17 )  Freq: 0.00325903
  0x00007f9fa86558cc:   vmovdqu %ymm0,0xa0(%rsp)
  0x00007f9fa86558d5:   mov    %rsi,0x80(%rsp)
  0x00007f9fa86558dd:   mov    %rdi,0x78(%rsp)
  0x00007f9fa86558e2:   mov    %r8,0x70(%rsp)
  0x00007f9fa86558e7:   mov    %rbx,0x68(%rsp)
  0x00007f9fa86558ec:   mov    %r9d,0x34(%rsp)
  0x00007f9fa86558f1:   mov    %rcx,0x60(%rsp)
  0x00007f9fa86558f6:   vmovdqu %ymm2,0x40(%rsp)
  0x00007f9fa86558fc:   mov    %r10d,0x30(%rsp)
  0x00007f9fa8655901:   mov    %r11,0x28(%rsp)
  0x00007f9fa8655906:   mov    %rdx,%rbp
  0x00007f9fa8655909:   movabs $0x8000983b0,%rsi            ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
                                                            ; - jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
                                                            ; - storem::workload@43 (line 13)
                                                            ;   {metadata('jdk/incubator/vector/Byte256Vector')}
  0x00007f9fa8655913:   nop
  0x00007f9fa8655914:   vzeroupper 
  0x00007f9fa8655917:   callq  0x00007f9fa8581220           ; ImmutableOopMap {rbp=Oop [40]=Oop [104]=Oop [112]=Oop }
                                                            ;*invokestatic load {reexecute=1 rethrow=0 return_oop=1}
                                                            ; - (reexecute) jdk.incubator.vector.ByteVector::fromArray0Template@32 (line 3746)
                                                            ; - jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 907)
                                                            ; - jdk.incubator.vector.ByteVector::fromArray@24 (line 2981)
                                                            ; - storem::workload@32 (line 12)
                                                            ;   {runtime_call _new_instance_Java}
 ;; B32: #	out( B19 ) <- in( B31 )  Freq: 0.00325897
  0x00007f9fa865591c:   mov    %rbp,%rdx
  0x00007f9fa865591f:   mov    0x28(%rsp),%r11
  0x00007f9fa8655924:   mov    0x30(%rsp),%r10d
  0x00007f9fa8655929:   vmovdqu 0x40(%rsp),%ymm2
  0x00007f9fa865592f:   mov    0x60(%rsp),%rcx
  0x00007f9fa8655934:   mov    0x34(%rsp),%r9d
  0x00007f9fa8655939:   mov    0x68(%rsp),%rbx
  0x00007f9fa865593e:   mov    0x70(%rsp),%r8
  0x00007f9fa8655943:   mov    0x78(%rsp),%rdi
  0x00007f9fa8655948:   mov    0x80(%rsp),%rsi
  0x00007f9fa8655950:   vmovdqu 0xa0(%rsp),%ymm0
  0x00007f9fa8655959:   jmpq   0x00007f9fa8655689
 ;; B33: #	out( N1 ) <- in( B19 )  Freq: 1.55377e-05
  0x00007f9fa865595e:   cmp    %rcx,%rdi
  0x00007f9fa8655961:   mov    $0xffffffff,%ebp
  0x00007f9fa8655966:   jl     0x00007f9fa8655970
  0x00007f9fa8655968:   setne  %bpl
  0x00007f9fa865596c:   movzbl %bpl,%ebp
  0x00007f9fa8655970:   mov    $0xffffff45,%esi
  0x00007f9fa8655975:   mov    %rdx,0x28(%rsp)
  0x00007f9fa865597a:   mov    %r9d,0x34(%rsp)
  0x00007f9fa865597f:   vmovdqu %ymm0,0x40(%rsp)
  0x00007f9fa8655985:   vmovdqu %ymm2,0x60(%rsp)
  0x00007f9fa865598b:   mov    %r11,0x88(%rsp)              ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
                                                            ; - jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
                                                            ; - storem::workload@43 (line 13)
  0x00007f9fa8655993:   nop
  0x00007f9fa8655994:   vzeroupper 
  0x00007f9fa8655997:   callq  0x00007f9fa86222a0           ; ImmutableOopMap {[40]=Oop [136]=Oop }
                                                            ;*ifgt {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) jdk.incubator.vector.VectorIntrinsics::indexInRange@12 (line 49)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@33 (line 3424)
                                                            ; - storem::workload@43 (line 13)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f9fa865599c:   movabs $0x7f9fad627fe8,%rdi         ;   {external_word}
  0x00007f9fa86559a6:   and    $0xfffffffffffffff0,%rsp
  0x00007f9fa86559aa:   callq  0x00007f9facc8ebf0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f9fa86559af:   hlt    
 ;; B34: #	out( N1 ) <- in( B23 )  Freq: 1.01292e-06
  0x00007f9fa86559b0:   mov    $0xffffffe4,%esi             ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
                                                            ; - jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
                                                            ; - storem::workload@43 (line 13)
  0x00007f9fa86559b5:   nop
  0x00007f9fa86559b6:   nop
  0x00007f9fa86559b7:   nop
  0x00007f9fa86559b8:   vzeroupper 
  0x00007f9fa86559bb:   callq  0x00007f9fa86222a0           ; ImmutableOopMap {rbp=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - storem::workload@62 (line 15)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f9fa86559c0:   movabs $0x7f9fad627fe8,%rdi         ;   {external_word}
  0x00007f9fa86559ca:   and    $0xfffffffffffffff0,%rsp
  0x00007f9fa86559ce:   callq  0x00007f9facc8ebf0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f9fa86559d3:   hlt    
 ;; B35: #	out( B37 ) <- in( B4 )  Freq: 9.83116e-07
  0x00007f9fa86559d4:   mov    %rsi,%r11
  0x00007f9fa86559d7:   jmp    0x00007f9fa86559dc
 ;; B36: #	out( B37 ) <- in( B5 )  Freq: 9.83115e-07
  0x00007f9fa86559d9:   mov    %rsi,%r11
 ;; B37: #	out( N1 ) <- in( B7 B39 B35 B36 B40 )  Freq: 4.88981e-06
  0x00007f9fa86559dc:   mov    $0xffffff76,%esi
  0x00007f9fa86559e1:   mov    %rdx,%rbp
  0x00007f9fa86559e4:   mov    %r11,0x28(%rsp)
  0x00007f9fa86559e9:   mov    %r10d,0x34(%rsp)             ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
                                                            ; - jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
                                                            ; - storem::workload@43 (line 13)
  0x00007f9fa86559ee:   nop
  0x00007f9fa86559ef:   nop
  0x00007f9fa86559f0:   vzeroupper 
  0x00007f9fa86559f3:   callq  0x00007f9fa86222a0           ; ImmutableOopMap {rbp=Oop [40]=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) storem::workload@13 (line 9)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f9fa86559f8:   movabs $0x7f9fad627fe8,%rdi         ;   {external_word}
  0x00007f9fa8655a02:   and    $0xfffffffffffffff0,%rsp
  0x00007f9fa8655a06:   callq  0x00007f9facc8ebf0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f9fa8655a0b:   hlt    
 ;; B38: #	out( N1 ) <- in( B8 )  Freq: 9.83112e-07
  0x00007f9fa8655a0c:   mov    $0xffffff6e,%esi
  0x00007f9fa8655a11:   mov    %rdx,%rbp
  0x00007f9fa8655a14:   mov    %r11,0x28(%rsp)
  0x00007f9fa8655a19:   mov    %r10d,0x34(%rsp)             ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
                                                            ; - jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
                                                            ; - storem::workload@43 (line 13)
  0x00007f9fa8655a1e:   nop
  0x00007f9fa8655a1f:   nop
  0x00007f9fa8655a20:   vzeroupper 
  0x00007f9fa8655a23:   callq  0x00007f9fa86222a0           ; ImmutableOopMap {rbp=Oop [40]=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) storem::workload@13 (line 9)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f9fa8655a28:   movabs $0x7f9fad627fe8,%rdi         ;   {external_word}
  0x00007f9fa8655a32:   and    $0xfffffffffffffff0,%rsp
  0x00007f9fa8655a36:   callq  0x00007f9facc8ebf0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f9fa8655a3b:   hlt    
 ;; B39: #	out( B37 ) <- in( B3 )  Freq: 9.70234e-07
  0x00007f9fa8655a3c:   mov    %rsi,%r11
  0x00007f9fa8655a3f:   nop
  0x00007f9fa8655a40:   jmp    0x00007f9fa86559dc
 ;; B40: #	out( B37 ) <- in( B6 )  Freq: 9.70231e-07
  0x00007f9fa8655a42:   mov    %rsi,%r11
  0x00007f9fa8655a45:   jmp    0x00007f9fa86559dc
 ;; B41: #	out( N1 ) <- in( B1 )  Freq: 1.01328e-06
  0x00007f9fa8655a47:   mov    $0xfffffff6,%esi
  0x00007f9fa8655a4c:   vzeroupper 
  0x00007f9fa8655a4f:   callq  0x00007f9fa86222a0           ; ImmutableOopMap {}
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - storem::workload@7 (line 9)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f9fa8655a54:   movabs $0x7f9fad627fe8,%rdi         ;   {external_word}
  0x00007f9fa8655a5e:   and    $0xfffffffffffffff0,%rsp
  0x00007f9fa8655a62:   callq  0x00007f9facc8ebf0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f9fa8655a67:   hlt    
 ;; B42: #	out( N1 ) <- in( B22 )  Freq: 1.01293e-06
  0x00007f9fa8655a68:   mov    $0xfffffff6,%esi
  0x00007f9fa8655a6d:   mov    0x38(%rsp),%ebp              ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
                                                            ; - jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
                                                            ; - storem::workload@43 (line 13)
  0x00007f9fa8655a71:   nop
  0x00007f9fa8655a72:   nop
  0x00007f9fa8655a73:   nop
  0x00007f9fa8655a74:   vzeroupper 
  0x00007f9fa8655a77:   callq  0x00007f9fa86222a0           ; ImmutableOopMap {}
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - storem::workload@62 (line 15)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f9fa8655a7c:   movabs $0x7f9fad627fe8,%rdi         ;   {external_word}
  0x00007f9fa8655a86:   and    $0xfffffffffffffff0,%rsp
  0x00007f9fa8655a8a:   callq  0x00007f9facc8ebf0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f9fa8655a8f:   hlt    
 ;; B43: #	out( B45 ) <- in( B27 )  Freq: 3.25903e-08
  0x00007f9fa8655a90:   jmp    0x00007f9fa8655a92
 ;; B44: #	out( B45 ) <- in( B25 )  Freq: 3.25903e-08
 ;; B45: #	out( B50 ) <- in( B44 B43 )  Freq: 6.51807e-08
  0x00007f9fa8655a92:   mov    %rax,%rsi
  0x00007f9fa8655a95:   jmp    0x00007f9fa8655aa1
 ;; B46: #	out( B48 ) <- in( B31 )  Freq: 3.25903e-08
  0x00007f9fa8655a97:   jmp    0x00007f9fa8655a99
 ;; B47: #	out( B48 ) <- in( B29 )  Freq: 3.25903e-08
 ;; B48: #	out( B50 ) <- in( B47 B46 )  Freq: 6.51807e-08
  0x00007f9fa8655a99:   mov    %rax,%rsi
  0x00007f9fa8655a9c:   jmp    0x00007f9fa8655aa1
 ;; B49: #	out( B50 ) <- in( B20 )  Freq: 0.000325849
  0x00007f9fa8655a9e:   mov    %rax,%rsi                    ;*synchronization entry
                                                            ; - storem::workload@-1 (line 9)
 ;; B50: #	out( N1 ) <- in( B45 B48 B49 )  Freq: 0.000325979
  0x00007f9fa8655aa1:   vzeroupper 
  0x00007f9fa8655aa4:   add    $0xd0,%rsp
  0x00007f9fa8655aab:   pop    %rbp
  0x00007f9fa8655aac:   jmpq   0x00007f9fa8582d20           ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
                                                            ; - jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
                                                            ; - storem::workload@43 (line 13)
                                                            ;   {runtime_call _rethrow_Java}
  0x00007f9fa8655ab1:   movabs $0x7f9fa865578e,%r10         ;   {internal_word}
  0x00007f9fa8655abb:   mov    %r10,0x3e0(%r15)
  0x00007f9fa8655ac2:   jmpq   0x00007f9fa8621420           ;   {runtime_call SafepointBlob}
  0x00007f9fa8655ac7:   hlt    
[Stub Code]
  0x00007f9fa8655ac8:   movabs $0x0,%rbx                    ;   {no_reloc}
  0x00007f9fa8655ad2:   jmpq   0x00007f9fa8655ad2           ;   {runtime_call}
[Exception Handler]
  0x00007f9fa8655ad7:   jmpq   0x00007f9fa8584ea0           ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x00007f9fa8655adc:   callq  0x00007f9fa8655ae1
  0x00007f9fa8655ae1:   subq   $0x5,(%rsp)
  0x00007f9fa8655ae6:   jmpq   0x00007f9fa86202e0           ;   {runtime_call DeoptimizationBlob}
  0x00007f9fa8655aeb:   hlt    
  0x00007f9fa8655aec:   hlt    
  0x00007f9fa8655aed:   hlt    
  0x00007f9fa8655aee:   hlt    
  0x00007f9fa8655aef:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Oops:
  0x00007f9fa8655af0:   0x000000011f97c918 a 'java/lang/Class'{0x000000011f97c918} = 'jdk/incubator/vector/Byte256Vector$Byte256Mask'
  0x00007f9fa8655af8:   0x000000011f0001c0 a 'java/lang/Class'{0x000000011f0001c0} = byte
  0x00007f9fa8655b00:   0x000000011f97c840 a 'jdk/incubator/vector/ByteVector$ByteSpecies'{0x000000011f97c840}
  0x00007f9fa8655b08:   0x000000011f98bf48 a 'jdk/incubator/vector/VectorMask$$Lambda$33+0x000000080009ab40'{0x000000011f98bf48}
  0x00007f9fa8655b10:   0x000000011f97c888 a 'java/lang/Class'{0x000000011f97c888} = 'jdk/incubator/vector/Byte256Vector'
  0x00007f9fa8655b18:   0x000000011f9a8128 a 'jdk/incubator/vector/ByteVector$$Lambda$36+0x000000080009b5a8'{0x000000011f9a8128}
  0x00007f9fa8655b20:   0x000000011f8a3a70 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x000000011f8a3a70}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Metadata:
  0x00007f9fa8655b28:   0x00007f9f3c510e08 {method} {0x00007f9f3c510e08} 'workload' '([B[BI)B' in 'storem'
  0x00007f9fa8655b30:   0x00007f9f3c6332f0 {method} {0x00007f9f3c6332f0} 'intoArray' '([BILjdk/incubator/vector/VectorMask;)V' in 'jdk/incubator/vector/ByteVector'
  0x00007f9fa8655b38:   0x00007f9f3c6ad898 {method} {0x00007f9f3c6ad898} 'intoArray0' '([BILjdk/incubator/vector/VectorMask;)V' in 'jdk/incubator/vector/Byte256Vector'
  0x00007f9fa8655b40:   0x00007f9f3c634c10 {method} {0x00007f9f3c634c10} 'intoArray0Template' '(Ljava/lang/Class;[BILjdk/incubator/vector/VectorMask;)V' in 'jdk/incubator/vector/ByteVector'
  0x00007f9fa8655b48:   0x00007f9f3c692b28 {method} {0x00007f9f3c692b28} 'fromLong' '(Ljdk/incubator/vector/VectorSpecies;J)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/VectorMask'
  0x00007f9fa8655b50:   0x00000008000401f8 {type array bool}
  0x00007f9fa8655b58:   0x0000000800098a40 'jdk/incubator/vector/Byte256Vector$Byte256Mask'
  0x00007f9fa8655b60:   0x00007f9f3c632568 {method} {0x00007f9f3c632568} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[BI)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector'
  0x00007f9fa8655b68:   0x00007f9f3c6ad160 {method} {0x00007f9f3c6ad160} 'fromArray0' '([BI)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/Byte256Vector'
  0x00007f9fa8655b70:   0x00007f9f3c633e78 {method} {0x00007f9f3c633e78} 'fromArray0Template' '([BI)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector'
  0x00007f9fa8655b78:   0x00007f9f3c635688 {method} {0x00007f9f3c635688} 'arrayAddress' '([BI)J' in 'jdk/incubator/vector/ByteVector'
  0x00007f9fa8655b80:   0x00000008000409d8 {type array byte}
  0x00007f9fa8655b88:   0x00000008000983b0 'jdk/incubator/vector/Byte256Vector'
  0x00007f9fa8655b90:   0x00007f9f3c6da6f8 {method} {0x00007f9f3c6da6f8} 'indexInRange' '(JJJ)Z' in 'jdk/incubator/vector/VectorIntrinsics'
  0x00007f9fa8655b98:   0x0000000800094a08 'jdk/incubator/vector/AbstractSpecies'
  0x00007f9fa8655ba0:   0x0000000800094df0 'jdk/incubator/vector/ByteVector$ByteSpecies'
  0x00007f9fa8655ba8:   0x00007f9f3c674ef8 {method} {0x00007f9f3c674ef8} 'loopBound' '(I)I' in 'jdk/incubator/vector/AbstractSpecies'
  0x00007f9fa8655bb0:   0x0000000800094600 'jdk/incubator/vector/VectorSpecies'
  0x00007f9fa8655bb8:   0x00007f9f3c672a90 {method} {0x00007f9f3c672a90} 'loopBound' '(I)I' in 'jdk/incubator/vector/VectorSpecies'
  0x00007f9fa8655bc0:   0x00007f9f3c6743b8 {method} {0x00007f9f3c6743b8} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
  0x00007f9fa8655bc8:   0x00007f9f3c672898 {method} {0x00007f9f3c672898} 'length' '()I' in 'jdk/incubator/vector/VectorSpecies'
  0x00007f9fa8655bd0:   0x00007f9f3c690198 {method} {0x00007f9f3c690198} 'check' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/AbstractMask'
  0x00007f9fa8655bd8:   0x0000000800096cc0 'jdk/incubator/vector/VectorMask'
  0x00007f9fa8655be0:   0x00007f9f3c6938b0 {method} {0x00007f9f3c6938b0} 'check' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/VectorMask'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
pc-bytecode offsets:
PcDesc(pc=0x00007f9fa865537f offset=ffffffff bits=0):
PcDesc(pc=0x00007f9fa865538f offset=f bits=0):
   storem::workload@-1 (line 9)
PcDesc(pc=0x00007f9fa8655472 offset=f2 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
   storem::workload@43 (line 13)
PcDesc(pc=0x00007f9fa865547a offset=fa bits=0):
   jdk.incubator.vector.VectorMask::fromLong@39 (line 242)
   storem::workload@22 (line 10)
PcDesc(pc=0x00007f9fa86555e4 offset=264 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
   storem::workload@43 (line 13)
PcDesc(pc=0x00007f9fa86555e7 offset=267 bits=0):
   jdk.incubator.vector.ByteVector::arrayAddress@4 (line 3972)
   jdk.incubator.vector.ByteVector::fromArray0Template@20 (line 3748)
   jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 907)
   jdk.incubator.vector.ByteVector::fromArray@24 (line 2981)
   storem::workload@32 (line 12)
PcDesc(pc=0x00007f9fa8655645 offset=2c5 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
   storem::workload@43 (line 13)
PcDesc(pc=0x00007f9fa865564b offset=2cb bits=0):
   jdk.incubator.vector.ByteVector::fromArray0Template@32 (line 3746)
   jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 907)
   jdk.incubator.vector.ByteVector::fromArray@24 (line 2981)
   storem::workload@32 (line 12)
PcDesc(pc=0x00007f9fa86556d2 offset=352 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
   storem::workload@43 (line 13)
PcDesc(pc=0x00007f9fa8655750 offset=3d0 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   storem::workload@43 (line 13)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[40],oop
    - l2: stack[56]
    - l3: stack[52]
    - l4: empty
    - l5: empty
PcDesc(pc=0x00007f9fa865577d offset=3fd bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
   storem::workload@43 (line 13)
PcDesc(pc=0x00007f9fa8655783 offset=403 bits=0):
   storem::workload@62 (line 15)
PcDesc(pc=0x00007f9fa86557c3 offset=443 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
   storem::workload@43 (line 13)
PcDesc(pc=0x00007f9fa86557d0 offset=450 bits=5):
   jdk.incubator.vector.VectorMask::fromLong@39 (line 242)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x000000011f97c918} = 'jdk/incubator/vector/Byte256Vector$Byte256Mask'
    - @1: a 'java/lang/Class'{0x000000011f0001c0} = byte
    - @2: 32
    - @3: 0
    - @4: 32767
    - @5: 1
    - @6: a 'jdk/incubator/vector/ByteVector$ByteSpecies'{0x000000011f97c840}
    - @7: a 'jdk/incubator/vector/VectorMask$$Lambda$33+0x000000080009ab40'{0x000000011f98bf48}
   storem::workload@22 (line 10)
   Locals
    - l0: stack[40],oop
    - l1: reg rbp [10],oop
    - l2: stack[56]
    - l3: stack[52]
    - l4: empty
    - l5: empty
PcDesc(pc=0x00007f9fa8655821 offset=4a1 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
   storem::workload@43 (line 13)
PcDesc(pc=0x00007f9fa865582c offset=4ac bits=5):
   jdk.incubator.vector.VectorMask::fromLong@39 (line 242)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x000000011f97c918} = 'jdk/incubator/vector/Byte256Vector$Byte256Mask'
    - @1: a 'java/lang/Class'{0x000000011f0001c0} = byte
    - @2: 32
    - @3: 0
    - @4: 32767
    - @5: 1
    - @6: a 'jdk/incubator/vector/ByteVector$ByteSpecies'{0x000000011f97c840}
    - @7: a 'jdk/incubator/vector/VectorMask$$Lambda$33+0x000000080009ab40'{0x000000011f98bf48}
   storem::workload@22 (line 10)
   Locals
    - l0: stack[40],oop
    - l1: reg rbp [10],oop
    - l2: stack[56]
    - l3: stack[52]
    - l4: empty
    - l5: empty
PcDesc(pc=0x00007f9fa8655889 offset=509 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
   storem::workload@43 (line 13)
PcDesc(pc=0x00007f9fa8655898 offset=518 bits=5):
   jdk.incubator.vector.ByteVector::fromArray0Template@32 (line 3746)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x000000011f97c888} = 'jdk/incubator/vector/Byte256Vector'
    - @1: a 'java/lang/Class'{0x000000011f0001c0} = byte
    - @2: 32
    - @3: reg rbp [10],oop
    - @4: 0
    - @5: stack[120],long
    - @6: reg rbp [10],oop
    - @7: 0
    - @8: stack[112],long
    - @9: a 'jdk/incubator/vector/ByteVector$ByteSpecies'{0x000000011f97c840}
    - @10: a 'jdk/incubator/vector/ByteVector$$Lambda$36+0x000000080009b5a8'{0x000000011f9a8128}
   jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 907)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.ByteVector::fromArray@24 (line 2981)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   storem::workload@32 (line 12)
   Locals
    - l0: stack[40],oop
    - l1: reg rbp [10],oop
    - l2: stack[56]
    - l3: stack[52]
    - l4: obj[241]
    - l5: empty
   Objects
    - 241: jdk.incubator.vector.Byte256Vector$Byte256Mask stack[64],vector
PcDesc(pc=0x00007f9fa8655913 offset=593 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
   storem::workload@43 (line 13)
PcDesc(pc=0x00007f9fa865591c offset=59c bits=5):
   jdk.incubator.vector.ByteVector::fromArray0Template@32 (line 3746)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x000000011f97c888} = 'jdk/incubator/vector/Byte256Vector'
    - @1: a 'java/lang/Class'{0x000000011f0001c0} = byte
    - @2: 32
    - @3: reg rbp [10],oop
    - @4: 0
    - @5: stack[128],long
    - @6: reg rbp [10],oop
    - @7: 0
    - @8: stack[120],long
    - @9: a 'jdk/incubator/vector/ByteVector$ByteSpecies'{0x000000011f97c840}
    - @10: a 'jdk/incubator/vector/ByteVector$$Lambda$36+0x000000080009b5a8'{0x000000011f9a8128}
   jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 907)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.ByteVector::fromArray@24 (line 2981)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   storem::workload@32 (line 12)
   Locals
    - l0: stack[40],oop
    - l1: reg rbp [10],oop
    - l2: stack[56]
    - l3: stack[52]
    - l4: obj[270]
    - l5: empty
   Objects
    - 270: jdk.incubator.vector.Byte256Vector$Byte256Mask stack[64],vector
PcDesc(pc=0x00007f9fa8655993 offset=613 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
   storem::workload@43 (line 13)
PcDesc(pc=0x00007f9fa865599c offset=61c bits=1):
   jdk.incubator.vector.VectorIntrinsics::indexInRange@12 (line 49)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
   Expression stack
    - @0: reg rbp [10],int
   jdk.incubator.vector.ByteVector::intoArray@33 (line 3424)
   Locals
    - l0: obj[376]
    - l1: stack[136],oop
    - l2: stack[52]
    - l3: obj[377]
    - l4: a 'jdk/incubator/vector/ByteVector$ByteSpecies'{0x000000011f97c840}
   storem::workload@43 (line 13)
   Locals
    - l0: stack[136],oop
    - l1: stack[40],oop
    - l2: stack[56]
    - l3: stack[52]
    - l4: empty
    - l5: empty
   Objects
    - 376: jdk.incubator.vector.Byte256Vector stack[64],vector
    - 377: jdk.incubator.vector.Byte256Vector$Byte256Mask stack[96],vector
PcDesc(pc=0x00007f9fa86559b5 offset=635 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
   storem::workload@43 (line 13)
PcDesc(pc=0x00007f9fa86559c0 offset=640 bits=0):
   storem::workload@62 (line 15)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
   Expression stack
    - @0: reg rbp [10],oop
    - @1: stack[56]
PcDesc(pc=0x00007f9fa86559ee offset=66e bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
   storem::workload@43 (line 13)
PcDesc(pc=0x00007f9fa86559f8 offset=678 bits=1):
   storem::workload@13 (line 9)  reexecute=true
   Locals
    - l0: stack[40],oop
    - l1: reg rbp [10],oop
    - l2: stack[56]
    - l3: 0
    - l4: empty
    - l5: empty
   Expression stack
    - @0: 0
    - @1: stack[52]
PcDesc(pc=0x00007f9fa8655a1e offset=69e bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
   storem::workload@43 (line 13)
PcDesc(pc=0x00007f9fa8655a28 offset=6a8 bits=1):
   storem::workload@13 (line 9)  reexecute=true
   Locals
    - l0: stack[40],oop
    - l1: reg rbp [10],oop
    - l2: stack[56]
    - l3: 0
    - l4: empty
    - l5: empty
   Expression stack
    - @0: 0
    - @1: stack[52]
PcDesc(pc=0x00007f9fa8655a54 offset=6d4 bits=0):
   storem::workload@7 (line 9)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
   Expression stack
    - @0: empty
    - @1: empty
    - @2: NULL
PcDesc(pc=0x00007f9fa8655a71 offset=6f1 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
   storem::workload@43 (line 13)
PcDesc(pc=0x00007f9fa8655a7c offset=6fc bits=0):
   storem::workload@62 (line 15)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
   Expression stack
    - @0: NULL
    - @1: reg rbp [10],int
PcDesc(pc=0x00007f9fa8655aa1 offset=721 bits=0):
   storem::workload@-1 (line 9)
PcDesc(pc=0x00007f9fa8655ab1 offset=731 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
   storem::workload@43 (line 13)
PcDesc(pc=0x00007f9fa8655af1 offset=771 bits=0):
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
oop maps:ImmutableOopMapSet contains 11 OopMaps

ImmutableOopMap {rbp=Oop [40]=Oop } pc offsets: 976 1104 
ImmutableOopMap {rbp=Oop [40]=Oop [104]=Oop } pc offsets: 1196 1304 
ImmutableOopMap {rbp=Oop [40]=Oop [104]=Oop [112]=Oop } pc offsets: 1436 
ImmutableOopMap {[40]=Oop [136]=Oop } pc offsets: 1564 
ImmutableOopMap {rbp=Oop } pc offsets: 1600 
ImmutableOopMap {rbp=Oop [40]=Oop } pc offsets: 1656 1704 
ImmutableOopMap {} pc offsets: 1748 1788 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
scopes:
ScopeDesc(pc=0x00007f9fa865538f offset=f):
   storem::workload@-1 (line 9)
ScopeDesc(pc=0x00007f9fa8655472 offset=f2):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
ScopeDesc(pc=0x00007f9fa8655472 offset=f2):
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
ScopeDesc(pc=0x00007f9fa8655472 offset=f2):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
ScopeDesc(pc=0x00007f9fa8655472 offset=f2):
   storem::workload@43 (line 13)
ScopeDesc(pc=0x00007f9fa865547a offset=fa):
   jdk.incubator.vector.VectorMask::fromLong@39 (line 242)
ScopeDesc(pc=0x00007f9fa865547a offset=fa):
   storem::workload@22 (line 10)
ScopeDesc(pc=0x00007f9fa86555e4 offset=264):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
ScopeDesc(pc=0x00007f9fa86555e4 offset=264):
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
ScopeDesc(pc=0x00007f9fa86555e4 offset=264):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
ScopeDesc(pc=0x00007f9fa86555e4 offset=264):
   storem::workload@43 (line 13)
ScopeDesc(pc=0x00007f9fa86555e7 offset=267):
   jdk.incubator.vector.ByteVector::arrayAddress@4 (line 3972)
ScopeDesc(pc=0x00007f9fa86555e7 offset=267):
   jdk.incubator.vector.ByteVector::fromArray0Template@20 (line 3748)
ScopeDesc(pc=0x00007f9fa86555e7 offset=267):
   jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 907)
ScopeDesc(pc=0x00007f9fa86555e7 offset=267):
   jdk.incubator.vector.ByteVector::fromArray@24 (line 2981)
ScopeDesc(pc=0x00007f9fa86555e7 offset=267):
   storem::workload@32 (line 12)
ScopeDesc(pc=0x00007f9fa8655645 offset=2c5):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
ScopeDesc(pc=0x00007f9fa8655645 offset=2c5):
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
ScopeDesc(pc=0x00007f9fa8655645 offset=2c5):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
ScopeDesc(pc=0x00007f9fa8655645 offset=2c5):
   storem::workload@43 (line 13)
ScopeDesc(pc=0x00007f9fa865564b offset=2cb):
   jdk.incubator.vector.ByteVector::fromArray0Template@32 (line 3746)
ScopeDesc(pc=0x00007f9fa865564b offset=2cb):
   jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 907)
ScopeDesc(pc=0x00007f9fa865564b offset=2cb):
   jdk.incubator.vector.ByteVector::fromArray@24 (line 2981)
ScopeDesc(pc=0x00007f9fa865564b offset=2cb):
   storem::workload@32 (line 12)
ScopeDesc(pc=0x00007f9fa86556d2 offset=352):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
ScopeDesc(pc=0x00007f9fa86556d2 offset=352):
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
ScopeDesc(pc=0x00007f9fa86556d2 offset=352):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
ScopeDesc(pc=0x00007f9fa86556d2 offset=352):
   storem::workload@43 (line 13)
ScopeDesc(pc=0x00007f9fa8655750 offset=3d0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
ScopeDesc(pc=0x00007f9fa8655750 offset=3d0):
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x00007f9fa8655750 offset=3d0):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
ScopeDesc(pc=0x00007f9fa8655750 offset=3d0):
   storem::workload@43 (line 13)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[40],oop
    - l2: stack[56]
    - l3: stack[52]
    - l4: empty
    - l5: empty
ScopeDesc(pc=0x00007f9fa865577d offset=3fd):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
ScopeDesc(pc=0x00007f9fa865577d offset=3fd):
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
ScopeDesc(pc=0x00007f9fa865577d offset=3fd):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
ScopeDesc(pc=0x00007f9fa865577d offset=3fd):
   storem::workload@43 (line 13)
ScopeDesc(pc=0x00007f9fa8655783 offset=403):
   storem::workload@62 (line 15)
ScopeDesc(pc=0x00007f9fa86557c3 offset=443):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
ScopeDesc(pc=0x00007f9fa86557c3 offset=443):
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
ScopeDesc(pc=0x00007f9fa86557c3 offset=443):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
ScopeDesc(pc=0x00007f9fa86557c3 offset=443):
   storem::workload@43 (line 13)
ScopeDesc(pc=0x00007f9fa86557d0 offset=450):
   jdk.incubator.vector.VectorMask::fromLong@39 (line 242)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x000000011f97c918} = 'jdk/incubator/vector/Byte256Vector$Byte256Mask'
    - @1: a 'java/lang/Class'{0x000000011f0001c0} = byte
    - @2: 32
    - @3: 0
    - @4: 32767
    - @5: 1
    - @6: a 'jdk/incubator/vector/ByteVector$ByteSpecies'{0x000000011f97c840}
    - @7: a 'jdk/incubator/vector/VectorMask$$Lambda$33+0x000000080009ab40'{0x000000011f98bf48}
ScopeDesc(pc=0x00007f9fa86557d0 offset=450):
   storem::workload@22 (line 10)
   Locals
    - l0: stack[40],oop
    - l1: reg rbp [10],oop
    - l2: stack[56]
    - l3: stack[52]
    - l4: empty
    - l5: empty
ScopeDesc(pc=0x00007f9fa8655821 offset=4a1):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
ScopeDesc(pc=0x00007f9fa8655821 offset=4a1):
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
ScopeDesc(pc=0x00007f9fa8655821 offset=4a1):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
ScopeDesc(pc=0x00007f9fa8655821 offset=4a1):
   storem::workload@43 (line 13)
ScopeDesc(pc=0x00007f9fa865582c offset=4ac):
   jdk.incubator.vector.VectorMask::fromLong@39 (line 242)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x000000011f97c918} = 'jdk/incubator/vector/Byte256Vector$Byte256Mask'
    - @1: a 'java/lang/Class'{0x000000011f0001c0} = byte
    - @2: 32
    - @3: 0
    - @4: 32767
    - @5: 1
    - @6: a 'jdk/incubator/vector/ByteVector$ByteSpecies'{0x000000011f97c840}
    - @7: a 'jdk/incubator/vector/VectorMask$$Lambda$33+0x000000080009ab40'{0x000000011f98bf48}
ScopeDesc(pc=0x00007f9fa865582c offset=4ac):
   storem::workload@22 (line 10)
   Locals
    - l0: stack[40],oop
    - l1: reg rbp [10],oop
    - l2: stack[56]
    - l3: stack[52]
    - l4: empty
    - l5: empty
ScopeDesc(pc=0x00007f9fa8655889 offset=509):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
ScopeDesc(pc=0x00007f9fa8655889 offset=509):
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
ScopeDesc(pc=0x00007f9fa8655889 offset=509):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
ScopeDesc(pc=0x00007f9fa8655889 offset=509):
   storem::workload@43 (line 13)
ScopeDesc(pc=0x00007f9fa8655898 offset=518):
   jdk.incubator.vector.ByteVector::fromArray0Template@32 (line 3746)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x000000011f97c888} = 'jdk/incubator/vector/Byte256Vector'
    - @1: a 'java/lang/Class'{0x000000011f0001c0} = byte
    - @2: 32
    - @3: reg rbp [10],oop
    - @4: 0
    - @5: stack[120],long
    - @6: reg rbp [10],oop
    - @7: 0
    - @8: stack[112],long
    - @9: a 'jdk/incubator/vector/ByteVector$ByteSpecies'{0x000000011f97c840}
    - @10: a 'jdk/incubator/vector/ByteVector$$Lambda$36+0x000000080009b5a8'{0x000000011f9a8128}
ScopeDesc(pc=0x00007f9fa8655898 offset=518):
   jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 907)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00007f9fa8655898 offset=518):
   jdk.incubator.vector.ByteVector::fromArray@24 (line 2981)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x00007f9fa8655898 offset=518):
   storem::workload@32 (line 12)
   Locals
    - l0: stack[40],oop
    - l1: reg rbp [10],oop
    - l2: stack[56]
    - l3: stack[52]
    - l4: obj[241]
    - l5: empty
   Objects
    - 241: jdk.incubator.vector.Byte256Vector$Byte256Mask stack[64],vector
ScopeDesc(pc=0x00007f9fa8655913 offset=593):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
ScopeDesc(pc=0x00007f9fa8655913 offset=593):
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
ScopeDesc(pc=0x00007f9fa8655913 offset=593):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
ScopeDesc(pc=0x00007f9fa8655913 offset=593):
   storem::workload@43 (line 13)
ScopeDesc(pc=0x00007f9fa865591c offset=59c):
   jdk.incubator.vector.ByteVector::fromArray0Template@32 (line 3746)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x000000011f97c888} = 'jdk/incubator/vector/Byte256Vector'
    - @1: a 'java/lang/Class'{0x000000011f0001c0} = byte
    - @2: 32
    - @3: reg rbp [10],oop
    - @4: 0
    - @5: stack[128],long
    - @6: reg rbp [10],oop
    - @7: 0
    - @8: stack[120],long
    - @9: a 'jdk/incubator/vector/ByteVector$ByteSpecies'{0x000000011f97c840}
    - @10: a 'jdk/incubator/vector/ByteVector$$Lambda$36+0x000000080009b5a8'{0x000000011f9a8128}
ScopeDesc(pc=0x00007f9fa865591c offset=59c):
   jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 907)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00007f9fa865591c offset=59c):
   jdk.incubator.vector.ByteVector::fromArray@24 (line 2981)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x00007f9fa865591c offset=59c):
   storem::workload@32 (line 12)
   Locals
    - l0: stack[40],oop
    - l1: reg rbp [10],oop
    - l2: stack[56]
    - l3: stack[52]
    - l4: obj[270]
    - l5: empty
   Objects
    - 270: jdk.incubator.vector.Byte256Vector$Byte256Mask stack[64],vector
ScopeDesc(pc=0x00007f9fa8655993 offset=613):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
ScopeDesc(pc=0x00007f9fa8655993 offset=613):
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
ScopeDesc(pc=0x00007f9fa8655993 offset=613):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
ScopeDesc(pc=0x00007f9fa8655993 offset=613):
   storem::workload@43 (line 13)
ScopeDesc(pc=0x00007f9fa865599c offset=61c):
   jdk.incubator.vector.VectorIntrinsics::indexInRange@12 (line 49)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
   Expression stack
    - @0: reg rbp [10],int
ScopeDesc(pc=0x00007f9fa865599c offset=61c):
   jdk.incubator.vector.ByteVector::intoArray@33 (line 3424)
   Locals
    - l0: obj[376]
    - l1: stack[136],oop
    - l2: stack[52]
    - l3: obj[377]
    - l4: a 'jdk/incubator/vector/ByteVector$ByteSpecies'{0x000000011f97c840}
ScopeDesc(pc=0x00007f9fa865599c offset=61c):
   storem::workload@43 (line 13)
   Locals
    - l0: stack[136],oop
    - l1: stack[40],oop
    - l2: stack[56]
    - l3: stack[52]
    - l4: empty
    - l5: empty
   Objects
    - 376: jdk.incubator.vector.Byte256Vector stack[64],vector
    - 377: jdk.incubator.vector.Byte256Vector$Byte256Mask stack[96],vector
ScopeDesc(pc=0x00007f9fa86559b5 offset=635):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
ScopeDesc(pc=0x00007f9fa86559b5 offset=635):
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
ScopeDesc(pc=0x00007f9fa86559b5 offset=635):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
ScopeDesc(pc=0x00007f9fa86559b5 offset=635):
   storem::workload@43 (line 13)
ScopeDesc(pc=0x00007f9fa86559c0 offset=640):
   storem::workload@62 (line 15)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
   Expression stack
    - @0: reg rbp [10],oop
    - @1: stack[56]
ScopeDesc(pc=0x00007f9fa86559ee offset=66e):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
ScopeDesc(pc=0x00007f9fa86559ee offset=66e):
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
ScopeDesc(pc=0x00007f9fa86559ee offset=66e):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
ScopeDesc(pc=0x00007f9fa86559ee offset=66e):
   storem::workload@43 (line 13)
ScopeDesc(pc=0x00007f9fa86559f8 offset=678):
   storem::workload@13 (line 9)  reexecute=true
   Locals
    - l0: stack[40],oop
    - l1: reg rbp [10],oop
    - l2: stack[56]
    - l3: 0
    - l4: empty
    - l5: empty
   Expression stack
    - @0: 0
    - @1: stack[52]
ScopeDesc(pc=0x00007f9fa8655a1e offset=69e):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
ScopeDesc(pc=0x00007f9fa8655a1e offset=69e):
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
ScopeDesc(pc=0x00007f9fa8655a1e offset=69e):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
ScopeDesc(pc=0x00007f9fa8655a1e offset=69e):
   storem::workload@43 (line 13)
ScopeDesc(pc=0x00007f9fa8655a28 offset=6a8):
   storem::workload@13 (line 9)  reexecute=true
   Locals
    - l0: stack[40],oop
    - l1: reg rbp [10],oop
    - l2: stack[56]
    - l3: 0
    - l4: empty
    - l5: empty
   Expression stack
    - @0: 0
    - @1: stack[52]
ScopeDesc(pc=0x00007f9fa8655a54 offset=6d4):
   storem::workload@7 (line 9)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
   Expression stack
    - @0: empty
    - @1: empty
    - @2: NULL
ScopeDesc(pc=0x00007f9fa8655a71 offset=6f1):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
ScopeDesc(pc=0x00007f9fa8655a71 offset=6f1):
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
ScopeDesc(pc=0x00007f9fa8655a71 offset=6f1):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
ScopeDesc(pc=0x00007f9fa8655a71 offset=6f1):
   storem::workload@43 (line 13)
ScopeDesc(pc=0x00007f9fa8655a7c offset=6fc):
   storem::workload@62 (line 15)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
   Expression stack
    - @0: NULL
    - @1: reg rbp [10],int
ScopeDesc(pc=0x00007f9fa8655aa1 offset=721):
   storem::workload@-1 (line 9)
ScopeDesc(pc=0x00007f9fa8655ab1 offset=731):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3862)
ScopeDesc(pc=0x00007f9fa8655ab1 offset=731):
   jdk.incubator.vector.Byte256Vector::intoArray0@9 (line 958)
ScopeDesc(pc=0x00007f9fa8655ab1 offset=731):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3427)
ScopeDesc(pc=0x00007f9fa8655ab1 offset=731):
   storem::workload@43 (line 13)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
relocations:
         @0x00007f9fa8655288: 78066791
relocInfo@0x00007f9fa865528a [type=12(metadata) addr=0x00007f9fa8655511 offset=401 format=3 data=6] | [metadata_addr=0x00007f9fa8655b50 *=0x00000008000401f8 offset=0]metadata_value=0x00000008000401f8: {type array bool}
         @0x00007f9fa865528c: 78076672
relocInfo@0x00007f9fa865528e [type=12(metadata) addr=0x00007f9fa8655583 offset=114 format=3 data=7] | [metadata_addr=0x00007f9fa8655b58 *=0x0000000800098a40 offset=0]metadata_value=0x0000000800098a40: 'jdk/incubator/vector/Byte256Vector$Byte256Mask'
         @0x00007f9fa8655290: 7c03adad7f907f9f3a07
relocInfo@0x00007f9fa8655298 [type=7(external_word) addr=0x00007f9fa865558a offset=7 format=1 data={adad7f907f9f}] | [target=0x00007f9fadad7f90]
         @0x00007f9fa865529a: 7c03ad6ab8b87f9f380d
relocInfo@0x00007f9fa86552a2 [type=7(external_word) addr=0x00007f9fa8655597 offset=13 data={ad6ab8b87f9f}] | [target=0x00007f9fad6ab8b8]
         @0x00007f9fa86552a4: 320e
relocInfo@0x00007f9fa86552a4 [type=6(runtime_call) addr=0x00007f9fa86555a5 offset=14 format=1] | [destination=0x00007f9facc8ebf0]
         @0x00007f9fa86552a6: 7c03ad6ab8f87f9f380f
relocInfo@0x00007f9fa86552ae [type=7(external_word) addr=0x00007f9fa86555b4 offset=15 data={ad6ab8f87f9f}] | [target=0x00007f9fad6ab8f8]
         @0x00007f9fa86552b0: 320e
relocInfo@0x00007f9fa86552b0 [type=6(runtime_call) addr=0x00007f9fa86555c2 offset=14 format=1] | [destination=0x00007f9facc8ebf0]
         @0x00007f9fa86552b2: 780c6655
relocInfo@0x00007f9fa86552b4 [type=12(metadata) addr=0x00007f9fa8655617 offset=85 format=3 data=12] | [metadata_addr=0x00007f9fa8655b80 *=0x00000008000409d8 offset=0]metadata_value=0x00000008000409d8: {type array byte}
         @0x00007f9fa86552b6: 780d666b
relocInfo@0x00007f9fa86552b8 [type=12(metadata) addr=0x00007f9fa8655682 offset=107 format=3 data=13] | [metadata_addr=0x00007f9fa8655b88 *=0x00000008000983b0 offset=0]metadata_value=0x00000008000983b0: 'jdk/incubator/vector/Byte256Vector'
         @0x00007f9fa86552ba: 7c03adad7f907f9f3a07
relocInfo@0x00007f9fa86552c2 [type=7(external_word) addr=0x00007f9fa8655689 offset=7 format=1 data={adad7f907f9f}] | [target=0x00007f9fadad7f90]
         @0x00007f9fa86552c4: 7c03ad6ab8b87f9f380d
relocInfo@0x00007f9fa86552cc [type=7(external_word) addr=0x00007f9fa8655696 offset=13 data={ad6ab8b87f9f}] | [target=0x00007f9fad6ab8b8]
         @0x00007f9fa86552ce: 320e
relocInfo@0x00007f9fa86552ce [type=6(runtime_call) addr=0x00007f9fa86556a4 offset=14 format=1] | [destination=0x00007f9facc8ebf0]
         @0x00007f9fa86552d0: 7c03ad6ab8f87f9f380f
relocInfo@0x00007f9fa86552d8 [type=7(external_word) addr=0x00007f9fa86556b3 offset=15 data={ad6ab8f87f9f}] | [target=0x00007f9fad6ab8f8]
         @0x00007f9fa86552da: 320e
relocInfo@0x00007f9fa86552da [type=6(runtime_call) addr=0x00007f9fa86556c1 offset=14 format=1] | [destination=0x00007f9facc8ebf0]
         @0x00007f9fa86552dc: 083a
relocInfo@0x00007f9fa86552dc [type=1(oop) addr=0x00007f9fa86556fb offset=58] | [oop_addr=0x00007f9fa86556fd *=0x000000011f97c888 offset=0]
         @0x00007f9fa86552de: 080a
relocInfo@0x00007f9fa86552de [type=1(oop) addr=0x00007f9fa8655705 offset=10] | [oop_addr=0x00007f9fa8655707 *=0x000000011f97c918 offset=0]
         @0x00007f9fa86552e0: 080a
relocInfo@0x00007f9fa86552e0 [type=1(oop) addr=0x00007f9fa865570f offset=10] | [oop_addr=0x00007f9fa8655711 *=0x000000011f0001c0 offset=0]
         @0x00007f9fa86552e2: 0829
relocInfo@0x00007f9fa86552e2 [type=1(oop) addr=0x00007f9fa8655738 offset=41] | [oop_addr=0x00007f9fa865573a *=0x000000011f9bbcc0 offset=0]
         @0x00007f9fa86552e4: 2213
relocInfo@0x00007f9fa86552e4 [type=4(static_call) addr=0x00007f9fa865574b offset=19 format=1] | [destination=0x00007f9fa864c720 metadata=0x0000000000000000]
         @0x00007f9fa86552e6: 5843
relocInfo@0x00007f9fa86552e6 [type=11(poll_return) addr=0x00007f9fa865578e offset=67]
         @0x00007f9fa86552e8: 602b
relocInfo@0x00007f9fa86552e8 [type=12(metadata) addr=0x00007f9fa86557b9 offset=43] | [metadata_addr=0x00007f9fa86557bb *=0x00000008000401f8 offset=0]metadata_value=0x00000008000401f8: {type array bool}
         @0x00007f9fa86552ea: 3212
relocInfo@0x00007f9fa86552ea [type=6(runtime_call) addr=0x00007f9fa86557cb offset=18 format=1] | [destination=0x00007f9fa8580f20]
         @0x00007f9fa86552ec: 604c
relocInfo@0x00007f9fa86552ec [type=12(metadata) addr=0x00007f9fa8655817 offset=76] | [metadata_addr=0x00007f9fa8655819 *=0x0000000800098a40 offset=0]metadata_value=0x0000000800098a40: 'jdk/incubator/vector/Byte256Vector$Byte256Mask'
         @0x00007f9fa86552ee: 3210
relocInfo@0x00007f9fa86552ee [type=6(runtime_call) addr=0x00007f9fa8655827 offset=16 format=1] | [destination=0x00007f9fa8581220]
         @0x00007f9fa86552f0: 6058
relocInfo@0x00007f9fa86552f0 [type=12(metadata) addr=0x00007f9fa865587f offset=88] | [metadata_addr=0x00007f9fa8655881 *=0x00000008000409d8 offset=0]metadata_value=0x00000008000409d8: {type array byte}
         @0x00007f9fa86552f2: 3214
relocInfo@0x00007f9fa86552f2 [type=6(runtime_call) addr=0x00007f9fa8655893 offset=20 format=1] | [destination=0x00007f9fa8580f20]
         @0x00007f9fa86552f4: 6076
relocInfo@0x00007f9fa86552f4 [type=12(metadata) addr=0x00007f9fa8655909 offset=118] | [metadata_addr=0x00007f9fa865590b *=0x00000008000983b0 offset=0]metadata_value=0x00000008000983b0: 'jdk/incubator/vector/Byte256Vector'
         @0x00007f9fa86552f6: 320e
relocInfo@0x00007f9fa86552f6 [type=6(runtime_call) addr=0x00007f9fa8655917 offset=14 format=1] | [destination=0x00007f9fa8581220]
         @0x00007f9fa86552f8: 3280
relocInfo@0x00007f9fa86552f8 [type=6(runtime_call) addr=0x00007f9fa8655997 offset=128 format=1] | [destination=0x00007f9fa86222a0]
         @0x00007f9fa86552fa: 7c03ad627fe87f9f3805
relocInfo@0x00007f9fa8655302 [type=7(external_word) addr=0x00007f9fa865599c offset=5 data={ad627fe87f9f}] | [target=0x00007f9fad627fe8]
         @0x00007f9fa8655304: 320e
relocInfo@0x00007f9fa8655304 [type=6(runtime_call) addr=0x00007f9fa86559aa offset=14 format=1] | [destination=0x00007f9facc8ebf0]
         @0x00007f9fa8655306: 3211
relocInfo@0x00007f9fa8655306 [type=6(runtime_call) addr=0x00007f9fa86559bb offset=17 format=1] | [destination=0x00007f9fa86222a0]
         @0x00007f9fa8655308: 7c03ad627fe87f9f3805
relocInfo@0x00007f9fa8655310 [type=7(external_word) addr=0x00007f9fa86559c0 offset=5 data={ad627fe87f9f}] | [target=0x00007f9fad627fe8]
         @0x00007f9fa8655312: 320e
relocInfo@0x00007f9fa8655312 [type=6(runtime_call) addr=0x00007f9fa86559ce offset=14 format=1] | [destination=0x00007f9facc8ebf0]
         @0x00007f9fa8655314: 3225
relocInfo@0x00007f9fa8655314 [type=6(runtime_call) addr=0x00007f9fa86559f3 offset=37 format=1] | [destination=0x00007f9fa86222a0]
         @0x00007f9fa8655316: 7c03ad627fe87f9f3805
relocInfo@0x00007f9fa865531e [type=7(external_word) addr=0x00007f9fa86559f8 offset=5 data={ad627fe87f9f}] | [target=0x00007f9fad627fe8]
         @0x00007f9fa8655320: 320e
relocInfo@0x00007f9fa8655320 [type=6(runtime_call) addr=0x00007f9fa8655a06 offset=14 format=1] | [destination=0x00007f9facc8ebf0]
         @0x00007f9fa8655322: 321d
relocInfo@0x00007f9fa8655322 [type=6(runtime_call) addr=0x00007f9fa8655a23 offset=29 format=1] | [destination=0x00007f9fa86222a0]
         @0x00007f9fa8655324: 7c03ad627fe87f9f3805
relocInfo@0x00007f9fa865532c [type=7(external_word) addr=0x00007f9fa8655a28 offset=5 data={ad627fe87f9f}] | [target=0x00007f9fad627fe8]
         @0x00007f9fa865532e: 320e
relocInfo@0x00007f9fa865532e [type=6(runtime_call) addr=0x00007f9fa8655a36 offset=14 format=1] | [destination=0x00007f9facc8ebf0]
         @0x00007f9fa8655330: 3219
relocInfo@0x00007f9fa8655330 [type=6(runtime_call) addr=0x00007f9fa8655a4f offset=25 format=1] | [destination=0x00007f9fa86222a0]
         @0x00007f9fa8655332: 7c03ad627fe87f9f3805
relocInfo@0x00007f9fa865533a [type=7(external_word) addr=0x00007f9fa8655a54 offset=5 data={ad627fe87f9f}] | [target=0x00007f9fad627fe8]
         @0x00007f9fa865533c: 320e
relocInfo@0x00007f9fa865533c [type=6(runtime_call) addr=0x00007f9fa8655a62 offset=14 format=1] | [destination=0x00007f9facc8ebf0]
         @0x00007f9fa865533e: 3215
relocInfo@0x00007f9fa865533e [type=6(runtime_call) addr=0x00007f9fa8655a77 offset=21 format=1] | [destination=0x00007f9fa86222a0]
         @0x00007f9fa8655340: 7c03ad627fe87f9f3805
relocInfo@0x00007f9fa8655348 [type=7(external_word) addr=0x00007f9fa8655a7c offset=5 data={ad627fe87f9f}] | [target=0x00007f9fad627fe8]
         @0x00007f9fa865534a: 320e
relocInfo@0x00007f9fa865534a [type=6(runtime_call) addr=0x00007f9fa8655a8a offset=14 format=1] | [destination=0x00007f9facc8ebf0]
         @0x00007f9fa865534c: 3222
relocInfo@0x00007f9fa865534c [type=6(runtime_call) addr=0x00007f9fa8655aac offset=34 format=1] | [destination=0x00007f9fa8582d20]
         @0x00007f9fa865534e: 7b234005
relocInfo@0x00007f9fa8655350 [type=8(internal_word) addr=0x00007f9fa8655ab1 offset=5 data=803] | [target=0x00007f9fa865578e]
         @0x00007f9fa8655352: 3211
relocInfo@0x00007f9fa8655352 [type=6(runtime_call) addr=0x00007f9fa8655ac2 offset=17 format=1] | [destination=0x00007f9fa8621420]
         @0x00007f9fa8655354: 0006
relocInfo@0x00007f9fa8655354 [type=0(none) addr=0x00007f9fa8655ac8 offset=6]
         @0x00007f9fa8655356: 7c01fc352800
relocInfo@0x00007f9fa865535a [type=5(static_stub) addr=0x00007f9fa8655ac8 offset=0 data=-971] | [static_call=0x00007f9fa865574b]
         @0x00007f9fa865535c: 6000
relocInfo@0x00007f9fa865535c [type=12(metadata) addr=0x00007f9fa8655ac8 offset=0] | [metadata_addr=0x00007f9fa8655aca *=0x0000000000000000 offset=0]
         @0x00007f9fa865535e: 320a
relocInfo@0x00007f9fa865535e [type=6(runtime_call) addr=0x00007f9fa8655ad2 offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x00007f9fa8655360: 3205
relocInfo@0x00007f9fa8655360 [type=6(runtime_call) addr=0x00007f9fa8655ad7 offset=5 format=1] | [destination=0x00007f9fa8584ea0]
         @0x00007f9fa8655362: 320f
relocInfo@0x00007f9fa8655362 [type=6(runtime_call) addr=0x00007f9fa8655ae6 offset=15 format=1] | [destination=0x00007f9fa86202e0]
         @0x00007f9fa8655364: 0000
relocInfo@0x00007f9fa8655364 [type=0(none) addr=0x00007f9fa8655ae6 offset=0]
         @0x00007f9fa8655366: 0000
relocInfo@0x00007f9fa8655366 [type=0(none) addr=0x00007f9fa8655ae6 offset=0]
         @0x00007f9fa8655368: 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Dependencies:
Dependency of type abstract_with_unique_concrete_subtype
  context = *jdk.incubator.vector.AbstractSpecies
  class   = jdk.incubator.vector.ByteVector$ByteSpecies
   [nmethod<=klass]jdk.incubator.vector.AbstractSpecies
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.ByteVector$ByteSpecies
  method  = {method} {0x00007f9f3c674ef8} 'loopBound' '(I)I' in 'jdk/incubator/vector/AbstractSpecies'
  class   = jdk.incubator.vector.VectorSpecies
  method  = *{method} {0x00007f9f3c672a90} 'loopBound' '(I)I' in 'jdk/incubator/vector/VectorSpecies'
   [nmethod<=klass]jdk.incubator.vector.ByteVector$ByteSpecies
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.ByteVector$ByteSpecies
  method  = {method} {0x00007f9f3c6743b8} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
  class   = jdk.incubator.vector.VectorSpecies
  method  = *{method} {0x00007f9f3c672898} 'length' '()I' in 'jdk/incubator/vector/VectorSpecies'
   [nmethod<=klass]jdk.incubator.vector.ByteVector$ByteSpecies
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.Byte256Vector$Byte256Mask
  method  = {method} {0x00007f9f3c690198} 'check' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/AbstractMask'
  class   = jdk.incubator.vector.VectorMask
  method  = *{method} {0x00007f9f3c6938b0} 'check' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/VectorMask'
   [nmethod<=klass]jdk.incubator.vector.Byte256Vector$Byte256Mask
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ExceptionHandlerTable (size = 120 bytes)
catch_pco = 976 (pc=0x00007f9fa8655750, 1 entries)
  bci -1 at scope depth 0 -> pco 1822 (pc=0x00007f9fa8655a9e)
catch_pco = 1104 (pc=0x00007f9fa86557d0, 1 entries)
  bci -1 at scope depth 0 -> pco 1810 (pc=0x00007f9fa8655a92)
catch_pco = 1196 (pc=0x00007f9fa865582c, 1 entries)
  bci -1 at scope depth 0 -> pco 1808 (pc=0x00007f9fa8655a90)
catch_pco = 1304 (pc=0x00007f9fa8655898, 1 entries)
  bci -1 at scope depth 0 -> pco 1817 (pc=0x00007f9fa8655a99)
catch_pco = 1436 (pc=0x00007f9fa865591c, 1 entries)
  bci -1 at scope depth 0 -> pco 1815 (pc=0x00007f9fa8655a97)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ImplicitExceptionTable (size = 3 entries, 28 bytes):
{
   < 0x00007f9fa8655396, 0x00007f9fa8655a47 > < 0x00007f9fa8655493, 0x00007f9fa86559dc > < 0x00007f9fa865576b, 0x00007f9fa8655a68 > 
}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded oops:
#0: 0x0000000000000000 NULL-oop
#1: 0x000000011f97c918 a 'java/lang/Class'{0x000000011f97c918} = 'jdk/incubator/vector/Byte256Vector$Byte256Mask'
#2: 0x000000011f0001c0 a 'java/lang/Class'{0x000000011f0001c0} = byte
#3: 0x000000011f97c840 a 'jdk/incubator/vector/ByteVector$ByteSpecies'{0x000000011f97c840}
#4: 0x000000011f98bf48 a 'jdk/incubator/vector/VectorMask$$Lambda$33+0x000000080009ab40'{0x000000011f98bf48}
#5: 0x000000011f97c888 a 'java/lang/Class'{0x000000011f97c888} = 'jdk/incubator/vector/Byte256Vector'
#6: 0x000000011f9a8128 a 'jdk/incubator/vector/ByteVector$$Lambda$36+0x000000080009b5a8'{0x000000011f9a8128}
#7: 0x000000011f8a3a70 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x000000011f8a3a70}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded metadata:
# 0: 0x0000000000000000 NULL-oop
# 1: 0x00007f9f3c510e08 {method} {0x00007f9f3c510e08} 'workload' '([B[BI)B' in 'storem'
# 2: 0x00007f9f3c6332f0 {method} {0x00007f9f3c6332f0} 'intoArray' '([BILjdk/incubator/vector/VectorMask;)V' in 'jdk/incubator/vector/ByteVector'
# 3: 0x00007f9f3c6ad898 {method} {0x00007f9f3c6ad898} 'intoArray0' '([BILjdk/incubator/vector/VectorMask;)V' in 'jdk/incubator/vector/Byte256Vector'
# 4: 0x00007f9f3c634c10 {method} {0x00007f9f3c634c10} 'intoArray0Template' '(Ljava/lang/Class;[BILjdk/incubator/vector/VectorMask;)V' in 'jdk/incubator/vector/ByteVector'
# 5: 0x00007f9f3c692b28 {method} {0x00007f9f3c692b28} 'fromLong' '(Ljdk/incubator/vector/VectorSpecies;J)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/VectorMask'
# 6: 0x00000008000401f8 {type array bool}
# 7: 0x0000000800098a40 'jdk/incubator/vector/Byte256Vector$Byte256Mask'
# 8: 0x00007f9f3c632568 {method} {0x00007f9f3c632568} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[BI)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector'
# 9: 0x00007f9f3c6ad160 {method} {0x00007f9f3c6ad160} 'fromArray0' '([BI)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/Byte256Vector'
#10: 0x00007f9f3c633e78 {method} {0x00007f9f3c633e78} 'fromArray0Template' '([BI)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector'
#11: 0x00007f9f3c635688 {method} {0x00007f9f3c635688} 'arrayAddress' '([BI)J' in 'jdk/incubator/vector/ByteVector'
#12: 0x00000008000409d8 {type array byte}
#13: 0x00000008000983b0 'jdk/incubator/vector/Byte256Vector'
#14: 0x00007f9f3c6da6f8 {method} {0x00007f9f3c6da6f8} 'indexInRange' '(JJJ)Z' in 'jdk/incubator/vector/VectorIntrinsics'
#15: 0x0000000800094a08 'jdk/incubator/vector/AbstractSpecies'
#16: 0x0000000800094df0 'jdk/incubator/vector/ByteVector$ByteSpecies'
#17: 0x00007f9f3c674ef8 {method} {0x00007f9f3c674ef8} 'loopBound' '(I)I' in 'jdk/incubator/vector/AbstractSpecies'
#18: 0x0000000800094600 'jdk/incubator/vector/VectorSpecies'
#19: 0x00007f9f3c672a90 {method} {0x00007f9f3c672a90} 'loopBound' '(I)I' in 'jdk/incubator/vector/VectorSpecies'
#20: 0x00007f9f3c6743b8 {method} {0x00007f9f3c6743b8} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
#21: 0x00007f9f3c672898 {method} {0x00007f9f3c672898} 'length' '()I' in 'jdk/incubator/vector/VectorSpecies'
#22: 0x00007f9f3c690198 {method} {0x00007f9f3c690198} 'check' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/AbstractMask'
#23: 0x0000000800096cc0 'jdk/incubator/vector/VectorMask'
#24: 0x00007f9f3c6938b0 {method} {0x00007f9f3c6938b0} 'check' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/VectorMask'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
r[0] = 0
r[1] = 1
r[2] = 2
r[3] = 3
r[4] = 4
r[5] = 5
r[6] = 6
r[7] = 7
r[8] = 8
r[9] = 9
r[10] = 10
r[11] = 11
r[12] = 12
r[13] = 13
r[14] = 14
r[15] = 0
r[16] = 0
r[17] = 0
r[18] = 0
r[19] = 0
r[20] = 0
r[21] = 0
r[22] = 0
r[23] = 0
r[24] = 0
r[25] = 0
r[26] = 0
r[27] = 0
r[28] = 0
r[29] = 0
r[30] = 0
r[31] = 0
[Res] -16 [Time] 544 ms 
------------------------------------------------------------------------
static storem::workload([B[BI)B
  interpreter_invocation_count:        5168
  invocation_counter:                  5168
  backedge_counter:                  165376
  decompile_count:                        0
  mdo size: 704 bytes

0 iconst_0
1 istore_3
2 iload_3
3 getstatic 7 <storem.SPECIES/Ljdk/incubator/vector/VectorSpecies;> 
6 aload_1
7 arraylength
8 invokeinterface 13 <jdk/incubator/vector/VectorSpecies.loopBound(I)I> 
  0   bci: 8    VirtualCallData     count(0) nonprofiled_count(0) entries(1)
                                    'jdk/incubator/vector/ByteVector$ByteSpecies'(165158 1.00)
13 if_icmpge 60
  56  bci: 13   BranchData          taken(4902) displacement(200)
                                    not taken(160256)
16 getstatic 7 <storem.SPECIES/Ljdk/incubator/vector/VectorSpecies;> 
19 ldc2_w 32767
22 invokestatic 21 <jdk/incubator/vector/VectorMask.fromLong(Ljdk/incubator/vector/VectorSpecies;J)Ljdk/incubator/vector/VectorMask;> 
  88  bci: 22   CounterData         count(160256)
25 astore #4
27 getstatic 7 <storem.SPECIES/Ljdk/incubator/vector/VectorSpecies;> 
30 aload_1
31 iload_3
32 invokestatic 27 <jdk/incubator/vector/ByteVector.fromArray(Ljdk/incubator/vector/VectorSpecies;[BI)Ljdk/incubator/vector/ByteVector;> 
  104 bci: 32   CounterData         count(160256)
35 astore #5
37 aload #5
39 fast_aload_0
40 iload_3
41 aload #4
43 invokevirtual 33 <jdk/incubator/vector/ByteVector.intoArray([BILjdk/incubator/vector/VectorMask;)V> 
  120 bci: 43   VirtualCallData     count(160256) nonprofiled_count(0) entries(0)
46 iload_3
47 getstatic 7 <storem.SPECIES/Ljdk/incubator/vector/VectorSpecies;> 
50 invokeinterface 37 <jdk/incubator/vector/VectorSpecies.length()I> 
  176 bci: 50   VirtualCallData     count(0) nonprofiled_count(0) entries(1)
                                    'jdk/incubator/vector/ByteVector$ByteSpecies'(160256 1.00)
55 iadd
56 istore_3
57 goto 2
  232 bci: 57   JumpData            taken(160256) displacement(-232)
60 fast_aload_0
61 iload_2
62 baload
63 ireturn
------------------------------------------------------------------------
Total MDO size: 704 bytes
