CompileCommand: print test_slice.micro2 bool print = true
[micro1 time] 48 ms  [res] -1174962175

============================= C2-compiled nmethod ==============================
#r018 rsi:rsi   : parm 0: rawptr:BotPTR
# -- Old rsp -- Framesize: 144 --
#r623 rsp+140: in_preserve
#r622 rsp+136: return address
#r621 rsp+132: in_preserve
#r620 rsp+128: saved fp register
#r619 rsp+124: pad2, stack alignment
#r618 rsp+120: pad2, stack alignment
#r617 rsp+116: Fixed slot 1
#r616 rsp+112: Fixed slot 0
#r651 rsp+108: spill
#r650 rsp+104: spill
#r649 rsp+100: spill
#r648 rsp+96: spill
#r647 rsp+92: spill
#r646 rsp+88: spill
#r645 rsp+84: spill
#r644 rsp+80: spill
#r643 rsp+76: spill
#r642 rsp+72: spill
#r641 rsp+68: spill
#r640 rsp+64: spill
#r639 rsp+60: spill
#r638 rsp+56: spill
#r637 rsp+52: spill
#r636 rsp+48: spill
#r635 rsp+44: spill
#r634 rsp+40: spill
#r633 rsp+36: spill
#r632 rsp+32: spill
#r631 rsp+28: spill
#r630 rsp+24: spill
#r629 rsp+20: spill
#r628 rsp+16: spill
#r627 rsp+12: spill
#r626 rsp+ 8: spill
#r625 rsp+ 4: spill
#r624 rsp+ 0: spill
#
----------------------- MetaData before Compile_id = 574 ------------------------
{method}
 - this oop:          0x00007a32d8401c40
 - method holder:     'test_slice'
 - constants:         0x00007a32d84010f8 constant pool [238]/operands[26] {0x00007a32d84010f8} for 'test_slice' cache=0x00007a32d8402000
 - access:            0x9  public static 
 - flags:             0x6080  queued_for_compilation has_loops_flag has_loops_flag_init 
 - name:              'micro2'
 - signature:         '([B[B)V'
 - max stack:         4
 - max locals:        6
 - size of params:    2
 - method size:       14
 - vtable index:      -2
 - i2i entry:         0x00007a3310b766a0
 - adapters:          AHE@0x00007a330c0ccae0: 0xbb i2c: 0x00007a3310c87fe0 c2i: 0x00007a3310c88036 c2iUV: 0x00007a3310c88015 c2iNCI: 0x00007a3310c88071
 - compiled entry     0x00007a3310c88036
 - code size:         77
 - code start:        0x00007a32d8401be0
 - code end (excl):   0x00007a32d8401c2d
 - method data:       0x00007a32d84147c8
 - checked ex length: 0
 - linenumber start:  0x00007a32d8401c2d
 - localvar length:   0

------------------------ OptoAssembly for Compile_id = 574 -----------------------
#
#  void ( rawptr:BotPTR )
#
000     N531: #	out( B1 ) <- BLOCK HEAD IS JUNK  Freq: 1
000     # breakpoint
        nop 	# 11 bytes pad for loops and calls

010     B1: #	out( B30 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
010     # stack bang (592 bytes)
	pushq   rbp	# Save rbp
	subq    rsp, #128	# Create frame

02e     movq    RBX, [RSI + #40 (8-bit)]	# ptr
032     movq    RBP, [RSI + #32 (8-bit)]	# ptr
036     movl    R13, [RSI + #16 (8-bit)]	# int
03a     movq    R14, [RSI + #24 (8-bit)]	# ptr
03e     movq    RDI, RSI	# spill
041     call_leaf,runtime  OSR_migration_end
        No JVM State Info
        # 
059     testq   RBX, RBX	# ptr
05c     je     B30  P=0.001000 C=-1.000000

062     B2: #	out( B37 B3 ) <- in( B1 )  Freq: 0.999
062     movl    R10, [RBX + #8 (8-bit)]	# compressed klass ptr
066     cmpl    R10, narrowklass: precise [byte (java/lang/Cloneable,java/io/Serializable): :Constant:exact *	# compressed klass ptr
06d     jne,u   B37  P=0.000001 C=-1.000000

073     B3: #	out( B4 ) <- in( B2 )  Freq: 0.998999
073     movq    R10, RBX	# spill
076     # checkcastPP of R10

076     B4: #	out( B31 B5 ) <- in( B3 B30 )  Freq: 0.999999
076     testq   RBP, RBP	# ptr
079     je     B31  P=0.001000 C=-1.000000

07f     B5: #	out( B37 B6 ) <- in( B4 )  Freq: 0.998999
07f     movl    R8, [RBP + #8 (8-bit)]	# compressed klass ptr
083     cmpl    R8, narrowklass: precise [byte (java/lang/Cloneable,java/io/Serializable): :Constant:exact *	# compressed klass ptr
08a     jne,u   B37  P=0.000001 C=-1.000000

090     B6: #	out( B7 ) <- in( B5 )  Freq: 0.998998
090     movq    R11, RBP	# spill
093     # checkcastPP of R11

093     B7: #	out( B32 B8 ) <- in( B6 B31 )  Freq: 0.999998
093     testq   R14, R14	# ptr
096     je     B32  P=0.001000 C=-1.000000

09c     B8: #	out( B37 B9 ) <- in( B7 )  Freq: 0.998998
09c     movl    R8, [R14 + #8 (8-bit)]	# compressed klass ptr
0a0     movq    R9, precise jdk/incubator/vector/ByteVector: 0x00007a32c09c72e8:Constant:exact *	# ptr
0aa     decode_and_move_klass_not_null RCX,R8
0b2     movq    R8, [RCX + #96 (8-bit)]	# class
0b6     cmpq    R8, R9	# ptr
0b9     jne,u   B37  P=0.000001 C=-1.000000

0bf     B9: #	out( B10 ) <- in( B8 )  Freq: 0.998997
0bf     # checkcastPP of R14

0bf     B10: #	out( B39 B11 ) <- in( B9 B32 )  Freq: 0.999997
0bf     movl    RDI, [R11 + #12 (8-bit)]	# range
0c3     NullCheck R11

0c3     B11: #	out( B36 B12 ) <- in( B10 )  Freq: 0.999996
0c3     leal    R8, [RDI + #-31]
0c7     testl   R8, R8
0ca     jl     B36  P=0.000001 C=-1.000000

0d0     B12: #	out( B36 B13 ) <- in( B11 )  Freq: 0.999995
0d0     movl    RCX, [R10 + #12 (8-bit)]	# range
0d4     NullCheck R10

0d4     B13: #	out( B36 B14 ) <- in( B12 )  Freq: 0.999994
0d4     addl    RCX, #-31	# int
0d7     testl   RCX, RCX
0d9     jl     B36  P=0.000001 C=-1.000000

0df     B14: #	out( B20 ) <- in( B13 )  Freq: 0.999993
0df     andl    RDI, #-32	# int
0e2     jmp     B20
        nop 	# 9 bytes pad for loops and calls

0f0     B15: #	out( B16 ) <- in( B24 ) top-of-loop Freq: 31.9924
0f0     # TLS is in R15
0f0     movq    [R15 + #464 (32-bit)], RDX	# ptr
0f7     PREFETCHW [RDX + #192 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
0fe     movq    [RAX], #1	# long
105     movl    [RAX + #8 (8-bit)], narrowklass: precise jdk/incubator/vector/Byte256Vector: 0x00007a32c09c5878:Constant:exact *	# compressed klass ptr

10c     B16: #	out( B38 B17 ) <- in( B26 B15 ) top-of-loop Freq: 31.9956
10c     encode_heap_oop_not_null RBX,RBX
14a     movl    [RAX + #12 (8-bit)], RBX	# compressed ptr
14d     
14d     # checkcastPP of RAX
14d     movl    RDX, [R14 + #8 (8-bit)]	# compressed klass ptr
151     NullCheck R14

151     B17: #	out( B35 B18 ) <- in( B16 )  Freq: 31.9956
151     cmpl    RDX, narrowklass: precise jdk/incubator/vector/Byte256Vector: 0x00007a32c09c5878:Constant:exact *	# compressed klass ptr
157     jne,u   B35  P=0.000001 C=-1.000000

15d     B18: #	out( B34 B19 ) <- in( B17 )  Freq: 31.9956
15d     # checkcastPP of R14
15d     movl    RBX, [R14 + #12 (8-bit)]	# compressed ptr ! Field: jdk/internal/vm/vector/VectorSupport$VectorPayload.payload (constant)
161     load_vector XMM0,[RBX + #16 (8-bit)]
166     vector_slice_const_origin XMM0, #31, XMM0, XMM2 	!using XMM1 as TEMP
172     cmpl    R9, RCX	# unsigned
175     jae,u   B34  P=0.000001 C=-1.000000

17b     B19: #	out( B20 ) <- in( B18 )  Freq: 31.9955
17b     store_vector [R10 + #16 + RSI],XMM0
	
182     # TLS is in R15
182     movq    RBX, [R15 + #48 (8-bit)]	# ptr
186     leal    R13, [R9 + #32]
18a     testl   rax, [RBX]	# Safepoint: poll for GC        # test_slice::micro2 @ bci:73 (line 39) L[0]=R10 L[1]=R11 L[2]=#ScObj0 L[3]=R13 L[4]=_ L[5]=_
        # ScObj0 jdk/incubator/vector/Byte256Vector={ [payload :0]=XMM2 }
        # OopMap {r10=Oop r11=Oop rax=Oop off=394/0x18a}
18c     movq    R14, RAX	# spill

18f     B20: #	out( B27 B21 ) <- in( B14 B19 ) Loop( B20-B19 inner ) Freq: 32.9955
18f     cmpl    R13, RDI
192     jge     B27  P=0.030303 C=21120.000000

198     B21: #	out( B33 B22 ) <- in( B20 )  Freq: 31.9957
198     cmpl    R13, R8	# unsigned
19b     jae,u   B33  P=0.000001 C=-1.000000

1a1     B22: #	out( B28 B23 ) <- in( B21 )  Freq: 31.9956
1a1     # TLS is in R15
1a1     movq    RBX, [R15 + #464 (32-bit)]	# ptr
1a8     movq    RDX, RBX	# spill
1ab     addq    RDX, #48	# ptr
1af     movl    R9, R13	# spill
1b2     # castII of R9
1b2     movslq  RSI, R9	# i2l
1b5     leaq    RBP, [RSI + #16]
1b9     # TLS is in R15
1b9     cmpq    RDX, [R15 + #480 (32-bit)]	# raw ptr
1c0     jae,u   B28  P=0.000100 C=-1.000000

1c6     B23: #	out( B24 ) <- in( B22 )  Freq: 31.9924
1c6     # TLS is in R15
1c6     movq    [R15 + #464 (32-bit)], RDX	# ptr
1cd     PREFETCHW [RDX + #192 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
1d4     movq    [RBX], #1	# long
1db     PREFETCHW [RDX + #256 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
1e2     movl    [RBX + #8 (8-bit)], narrowklass: precise [byte (java/lang/Cloneable,java/io/Serializable): :Constant:exact *	# compressed klass ptr
1e9     PREFETCHW [RDX + #320 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
1f0     movl    [RBX + #12 (8-bit)], #32	# int
1f7     PREFETCHW [RDX + #384 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
1fe     movq    [RBX + #16 (8-bit)], R12	# long (R12_heapbase==0)
202     movq    [RBX + #24 (8-bit)], R12	# long (R12_heapbase==0)
206     movq    [RBX + #32 (8-bit)], R12	# long (R12_heapbase==0)
20a     movq    [RBX + #40 (8-bit)], R12	# long (R12_heapbase==0)

20e     B24: #	out( B15 B25 ) <- in( B29 B23 )  Freq: 31.9956
20e     
20e     MEMBAR-storestore (empty encoding)
20e     # checkcastPP of RBX
20e     load_vector XMM2,[R11 + #16 + RSI]
215     store_vector [RBX + #16 (8-bit)],XMM2
	
21a     # TLS is in R15
21a     movq    RAX, [R15 + #464 (32-bit)]	# ptr
221     movq    RDX, RAX	# spill
224     addq    RDX, #16	# ptr
228     # TLS is in R15
228     cmpq    RDX, [R15 + #480 (32-bit)]	# raw ptr
22f     jb,u   B15  P=0.999900 C=-1.000000

235     B25: #	out( B40 B26 ) <- in( B24 )  Freq: 0.00320009
235     vmovdqu [rsp + 64],XMM2	# spill
23b     movq    [rsp + #56], RSI	# spill
240     movl    [rsp + #48], R9	# spill
245     movq    [rsp + #40], RBX	# spill
24a     movl    [rsp + #36], RCX	# spill
24e     movl    [rsp + #32], R8	# spill
253     movl    [rsp + #4], RDI	# spill
257     movq    [rsp + #24], R11	# spill
25c     movq    [rsp + #16], R10	# spill
261     movq    [rsp + #8], R14	# spill
266     movq    RSI, precise jdk/incubator/vector/Byte256Vector: 0x00007a32c09c5878:Constant:exact *	# ptr
270     movl    [rsp + #0], R13	# spill
274     call,static  wrapper for: C2 Runtime new_instance_blob
        # jdk.incubator.vector.ByteVector::fromArray0Template @ bci:33 (line 3856) L[0]=_ L[1]=_ L[2]=_ L[3]=_ STK[0]=#Ptr0x00007a32c09755e8 STK[1]=#Ptr0x00007a32c0976a28 STK[2]=#32 STK[3]=rsp + #24 STK[4]=RBP STK[5]=_ STK[6]=#0 STK[7]=rsp + #24 STK[8]=rsp + #56 STK[9]=_ STK[10]=#Ptr0x00007a32c0403a80 STK[11]=#Ptr0x00007a32c0335b90
        # jdk.incubator.vector.Byte256Vector::fromArray0 @ bci:3 (line 1020) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.ByteVector::fromArray @ bci:24 (line 3043) L[0]=_ L[1]=_ L[2]=_ L[3]=_
        # test_slice::micro2 @ bci:29 (line 40) L[0]=rsp + #16 L[1]=rsp + #24 L[2]=rsp + #8 L[3]=rsp + #0 L[4]=_ L[5]=_
        # OopMap {[8]=Oop [16]=Oop [24]=Oop [40]=Oop off=636/0x27c}

284     B26: #	out( B16 ) <- in( B25 )  Freq: 0.00320003
        # Block is sole successor of call
284     movq    R14, [rsp + #8]	# spill
289     movq    R10, [rsp + #16]	# spill
28e     movq    R11, [rsp + #24]	# spill
293     movl    RDI, [rsp + #4]	# spill
297     movl    R8, [rsp + #32]	# spill
29c     movl    RCX, [rsp + #36]	# spill
2a0     movq    RBX, [rsp + #40]	# spill
2a5     movl    R9, [rsp + #48]	# spill
2aa     movq    RSI, [rsp + #56]	# spill
2af     vmovdqu XMM2,[rsp + 64]	# spill
2b5     jmp     B16

2ba     B27: #	out( N531 ) <- in( B20 )  Freq: 0.999864
2ba     vzeroupper
	addq    rsp, 128	# Destroy frame
	popq    rbp
	cmpq    rsp, poll_offset[r15_thread] 
	ja      #safepoint_stub	# Safepoint: poll for GC

2cf     ret

2d0     B28: #	out( B41 B29 ) <- in( B22 )  Freq: 0.00320009
2d0     movq    [rsp + #48], RSI	# spill
2d5     movl    [rsp + #40], R9	# spill
2da     movl    [rsp + #36], RCX	# spill
2de     movl    [rsp + #32], R8	# spill
2e3     movl    [rsp + #4], RDI	# spill
2e7     movq    [rsp + #24], R11	# spill
2ec     movq    [rsp + #16], R10	# spill
2f1     movq    [rsp + #8], R14	# spill
2f6     movl    [rsp + #0], R13	# spill
2fa     movq    RSI, precise [byte (java/lang/Cloneable,java/io/Serializable): :Constant:exact *	# ptr
304     movl    RDX, #32	# int
        nop 	# 3 bytes pad for loops and calls
30c     call,static  wrapper for: C2 Runtime new_array_blob
        # jdk.incubator.vector.ByteVector::fromArray0Template @ bci:33 (line 3856) L[0]=_ L[1]=_ L[2]=_ L[3]=_ STK[0]=#Ptr0x00007a32c09755e8 STK[1]=#Ptr0x00007a32c0976a28 STK[2]=#32 STK[3]=rsp + #24 STK[4]=RBP STK[5]=_ STK[6]=#0 STK[7]=rsp + #24 STK[8]=rsp + #48 STK[9]=_ STK[10]=#Ptr0x00007a32c0403a80 STK[11]=#Ptr0x00007a32c0335b90
        # jdk.incubator.vector.Byte256Vector::fromArray0 @ bci:3 (line 1020) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.ByteVector::fromArray @ bci:24 (line 3043) L[0]=_ L[1]=_ L[2]=_ L[3]=_
        # test_slice::micro2 @ bci:29 (line 40) L[0]=rsp + #16 L[1]=rsp + #24 L[2]=rsp + #8 L[3]=rsp + #0 L[4]=_ L[5]=_
        # OopMap {[8]=Oop [16]=Oop [24]=Oop off=788/0x314}

31c     B29: #	out( B24 ) <- in( B28 )  Freq: 0.00320003
        # Block is sole successor of call
31c     movl    R13, [rsp + #0]	# spill
320     movq    R14, [rsp + #8]	# spill
325     movq    R10, [rsp + #16]	# spill
32a     movq    R11, [rsp + #24]	# spill
32f     movl    RDI, [rsp + #4]	# spill
333     movl    R8, [rsp + #32]	# spill
338     movl    RCX, [rsp + #36]	# spill
33c     movq    RBX, RAX	# spill
33f     movl    R9, [rsp + #40]	# spill
344     movq    RSI, [rsp + #48]	# spill
349     jmp     B24

34e     B30: #	out( B4 ) <- in( B1 )  Freq: 0.000999987
34e     xorl    R10, R10	# ptr
351     jmp     B4

356     B31: #	out( B7 ) <- in( B4 )  Freq: 0.000999986
356     xorl    R11, R11	# ptr
359     jmp     B7

35e     B32: #	out( B10 ) <- in( B7 )  Freq: 0.000999985
35e     xorl    R14, R14	# ptr
361     jmp     B10

366     B33: #	out( N531 ) <- in( B21 )  Freq: 3.24205e-05
366     movl    RSI, #-28	# int
36b     movq    RBP, R14	# spill
36e     movl    [rsp + #4], R13	# spill
373     movq    [rsp + #8], R10	# spill
378     movq    [rsp + #24], R11	# spill
37d     movl    [rsp + #32], R8	# spill
        nop 	# 2 bytes pad for loops and calls
384     call,static  wrapper for: uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')
        # java.util.Objects::checkIndex @ bci:3 (line 365) L[0]=_ L[1]=_ STK[0]=rsp + #4 STK[1]=rsp + #32 STK[2]=#null
        # jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize @ bci:43 (line 58) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.ByteVector::fromArray @ bci:9 (line 3041) L[0]=#Ptr0x00007a32c0403a80 L[1]=rsp + #24 L[2]=_ L[3]=_
        # test_slice::micro2 @ bci:29 (line 40) L[0]=rsp + #8 L[1]=rsp + #24 L[2]=RBP L[3]=rsp + #4 L[4]=_ L[5]=_
        # OopMap {rbp=Oop [8]=Oop [24]=Oop off=908/0x38c}
394     stop	# ShouldNotReachHere

3a8     B34: #	out( N531 ) <- in( B18 )  Freq: 3.24204e-05
3a8     vmovdqu XMM1,XMM0	# spill
3ac     movl    RSI, #-28	# int
3b1     movq    [rsp + #0], R11	# spill
3b5     movq    [rsp + #16], R10	# spill
3ba     movl    [rsp + #12], R9	# spill
3bf     movl    [rsp + #24], RCX	# spill
3c3     vmovdqu [rsp + 32],XMM1	# spill
3c9     vmovdqu [rsp + 64],XMM2	# spill
        nop 	# 1 bytes pad for loops and calls
3d0     call,static  wrapper for: uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')
        # java.util.Objects::checkIndex @ bci:3 (line 365) L[0]=_ L[1]=_ STK[0]=rsp + #12 STK[1]=rsp + #24 STK[2]=#null
        # jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize @ bci:43 (line 58) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.ByteVector::intoArray @ bci:7 (line 3487) L[0]=#ScObj0 L[1]=rsp + #16 L[2]=_ L[3]=_
        # ScObj0 jdk/incubator/vector/Byte256Vector={ [payload :0]=rsp + #32 }
        # test_slice::micro2 @ bci:56 (line 42) L[0]=rsp + #16 L[1]=rsp + #0 L[2]=_ L[3]=rsp + #12 L[4]=#ScObj0 L[5]=_
        # ScObj0 jdk/incubator/vector/Byte256Vector={ [payload :0]=rsp + #64 }
        # OopMap {[0]=Oop [16]=Oop off=984/0x3d8}
3e0     stop	# ShouldNotReachHere

3f4     B35: #	out( N531 ) <- in( B17 )  Freq: 3.19956e-05
3f4     movl    RSI, #-34	# int
3f9     movq    RBP, R14	# spill
3fc     movq    [rsp + #0], R10	# spill
400     movq    [rsp + #8], R11	# spill
405     movl    [rsp + #16], R9	# spill
40a     vmovdqu [rsp + 32],XMM2	# spill
410     call,static  wrapper for: uncommon_trap(reason='class_check' action='maybe_recompile' debug_id='0')
        # test_slice::micro2 @ bci:47 (line 41) L[0]=rsp + #0 L[1]=rsp + #8 L[2]=_ L[3]=rsp + #16 L[4]=#ScObj0 L[5]=_ STK[0]=RBP STK[1]=#31 STK[2]=#ScObj0
        # ScObj0 jdk/incubator/vector/Byte256Vector={ [payload :0]=rsp + #32 }
        # OopMap {rbp=Oop [0]=Oop [8]=Oop off=1048/0x418}
420     stop	# ShouldNotReachHere

434     B36: #	out( N531 ) <- in( B13 B11 B12 )  Freq: 3.01326e-06
434     movl    RSI, #-66	# int
439     movq    RBP, R14	# spill
43c     movl    [rsp + #0], R13	# spill
440     movq    [rsp + #8], R10	# spill
445     movq    [rsp + #16], R11	# spill
        nop 	# 2 bytes pad for loops and calls
44c     call,static  wrapper for: uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')
        # test_slice::micro2 @ bci:10 (line 39) L[0]=rsp + #8 L[1]=rsp + #16 L[2]=RBP L[3]=rsp + #0 L[4]=_ L[5]=_
        # OopMap {rbp=Oop [8]=Oop [16]=Oop off=1108/0x454}
45c     stop	# ShouldNotReachHere

470     B37: #	out( N531 ) <- in( B2 B5 B8 )  Freq: 2.997e-06
470     movl    RSI, #-123	# int
475     movq    [rsp + #0], R14	# spill
479     movl    [rsp + #8], R13	# spill
47e     movq    [rsp + #16], RBX	# spill
        nop 	# 1 bytes pad for loops and calls
484     call,static  wrapper for: uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')
        # test_slice::micro2 @ bci:10 (line 39) L[0]=rsp + #16 L[1]=RBP L[2]=rsp + #0 L[3]=rsp + #8 L[4]=_ L[5]=_
        # OopMap {rbp=Oop [0]=Oop [16]=Oop off=1164/0x48c}
494     stop	# ShouldNotReachHere

4a8     B38: #	out( N531 ) <- in( B16 )  Freq: 3.24205e-05
4a8     movl    RSI, #-10	# int
4ad     vmovdqu [rsp + 0],XMM2	# spill
        nop 	# 2 bytes pad for loops and calls
4b4     call,static  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # test_slice::micro2 @ bci:47 (line 41) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ STK[0]=#null STK[1]=#31 STK[2]=#ScObj0
        # ScObj0 jdk/incubator/vector/Byte256Vector={ [payload :0]=rsp + #0 }
        # OopMap {off=1212/0x4bc}
4c4     stop	# ShouldNotReachHere

4d8     B39: #	out( N531 ) <- in( B10 )  Freq: 1.01328e-06
4d8     movl    RSI, #-146	# int
4dd     movq    RBP, R14	# spill
4e0     movl    [rsp + #0], R13	# spill
4e4     movq    [rsp + #8], R10	# spill
4e9     movq    [rsp + #16], R11	# spill
        nop 	# 2 bytes pad for loops and calls
4f0     call,static  wrapper for: uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')
        # test_slice::micro2 @ bci:10 (line 39) L[0]=rsp + #8 L[1]=rsp + #16 L[2]=RBP L[3]=rsp + #0 L[4]=_ L[5]=_
        # OopMap {rbp=Oop [8]=Oop [16]=Oop off=1272/0x4f8}
500     stop	# ShouldNotReachHere

514     B40: #	out( B42 ) <- in( B25 )  Freq: 3.20009e-08
514     # exception oop is in rax; no code emitted
514     movq    RSI, RAX	# spill
517     jmp,s   B42

519     B41: #	out( B42 ) <- in( B28 )  Freq: 3.20009e-08
519     # exception oop is in rax; no code emitted
519     movq    RSI, RAX	# spill

51c     B42: #	out( N531 ) <- in( B41 B40 )  Freq: 6.40019e-08
51c     vzeroupper
	addq    rsp, 128	# Destroy frame
	popq    rbp

527     jmp     rethrow_stub

--------------------------------------------------------------------------------
----------------------------------- Assembly -----------------------------------

Compiled method (c2) 7344  574 %           test_slice::micro2 @ 10 (77 bytes)
 total in heap  [0x00007a3310cda708,0x00007a3310cdad90] = 1672
 main code      [0x00007a3310cda800,0x00007a3310cdad50] = 1360
 stub code      [0x00007a3310cdad50,0x00007a3310cdad68] = 24
 oops           [0x00007a3310cdad68,0x00007a3310cdad90] = 40
 mutable data [0x00007a32c0217e50,0x00007a32c0218008] = 440
 relocation     [0x00007a32c0217e50,0x00007a32c0217f10] = 192
 metadata       [0x00007a32c0217f10,0x00007a32c0218008] = 248
 immutable data [0x00007a32c02177e0,0x00007a32c0217dc8] = 1512
 dependencies   [0x00007a32c02177e0,0x00007a32c0217820] = 64
 nul chk table  [0x00007a32c0217820,0x00007a32c0217840] = 32
 handler table  [0x00007a32c0217840,0x00007a32c0217870] = 48
 scopes pcs     [0x00007a32c0217870,0x00007a32c0217ba0] = 816
 scopes data    [0x00007a32c0217ba0,0x00007a32c0217dc8] = 552

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x00007a32d8401c40} 'micro2' '([B[B)V' in 'test_slice'
 ;; N531: #	out( B1 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x00007a3310cda800:   call   0x00007a33153ce1ce           ;   {runtime_call os::breakpoint()}
  0x00007a3310cda805:   nop
  0x00007a3310cda806:   nop
  0x00007a3310cda807:   nop
  0x00007a3310cda808:   nop
  0x00007a3310cda809:   nop
  0x00007a3310cda80a:   nop
  0x00007a3310cda80b:   nop
  0x00007a3310cda80c:   nop
  0x00007a3310cda80d:   nop
  0x00007a3310cda80e:   nop
  0x00007a3310cda80f:   nop
 ;; B1: #	out( B30 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x00007a3310cda810:   mov    %eax,-0x18000(%rsp)
  0x00007a3310cda817:   push   %rbp
  0x00007a3310cda818:   sub    $0x80,%rsp
  0x00007a3310cda81f:   nop
  0x00007a3310cda820:   cmpl   $0x0,0x20(%r15)
  0x00007a3310cda828:   jne    0x00007a3310cdad42
  0x00007a3310cda82e:   mov    0x28(%rsi),%rbx
  0x00007a3310cda832:   mov    0x20(%rsi),%rbp
  0x00007a3310cda836:   mov    0x10(%rsi),%r13d
  0x00007a3310cda83a:   mov    0x18(%rsi),%r14              ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test_slice::micro2@10 (line 39)
  0x00007a3310cda83e:   mov    %rsi,%rdi
  0x00007a3310cda841:   vzeroupper 
  0x00007a3310cda844:   movabs $0x7a33154fecce,%r10         ;   {runtime_call SharedRuntime::OSR_migration_end(long*)}
  0x00007a3310cda84e:   call   *%r10
  0x00007a3310cda851:   nopl   0x0(%rax,%rax,1)             ;   {post_call_nop}
  0x00007a3310cda859:   test   %rbx,%rbx                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
                                                            ; - test_slice::micro2@56 (line 42)
  0x00007a3310cda85c:   je     0x00007a3310cdab4e
 ;; B2: #	out( B37 B3 ) <- in( B1 )  Freq: 0.999
  0x00007a3310cda862:   mov    0x8(%rbx),%r10d
  0x00007a3310cda866:   cmp    $0x1b83b0,%r10d              ;   {metadata({type array byte})}
  0x00007a3310cda86d:   jne    0x00007a3310cdac70
 ;; B3: #	out( B4 ) <- in( B2 )  Freq: 0.998999
  0x00007a3310cda873:   mov    %rbx,%r10                    ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test_slice::micro2@10 (line 39)
 ;; B4: #	out( B31 B5 ) <- in( B3 B30 )  Freq: 0.999999
  0x00007a3310cda876:   test   %rbp,%rbp                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
                                                            ; - test_slice::micro2@56 (line 42)
  0x00007a3310cda879:   je     0x00007a3310cdab56
 ;; B5: #	out( B37 B6 ) <- in( B4 )  Freq: 0.998999
  0x00007a3310cda87f:   mov    0x8(%rbp),%r8d
  0x00007a3310cda883:   cmp    $0x1b83b0,%r8d               ;   {metadata({type array byte})}
  0x00007a3310cda88a:   jne    0x00007a3310cdac70
 ;; B6: #	out( B7 ) <- in( B5 )  Freq: 0.998998
  0x00007a3310cda890:   mov    %rbp,%r11                    ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test_slice::micro2@10 (line 39)
 ;; B7: #	out( B32 B8 ) <- in( B6 B31 )  Freq: 0.999998
  0x00007a3310cda893:   test   %r14,%r14                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
                                                            ; - test_slice::micro2@56 (line 42)
  0x00007a3310cda896:   je     0x00007a3310cdab5e
 ;; B8: #	out( B37 B9 ) <- in( B7 )  Freq: 0.998998
  0x00007a3310cda89c:   mov    0x8(%r14),%r8d
  0x00007a3310cda8a0:   movabs $0x7a32d8065b88,%r9          ;   {metadata('jdk/incubator/vector/ByteVector')}
 ;; decode_and_move_klass_not_null {
  0x00007a3310cda8aa:   mov    $0x7000000,%ecx
  0x00007a3310cda8af:   add    %r8,%rcx
 ;; } decode_and_move_klass_not_null
  0x00007a3310cda8b2:   mov    0x60(%rcx),%r8
  0x00007a3310cda8b6:   cmp    %r9,%r8
  0x00007a3310cda8b9:   jne    0x00007a3310cdac70           ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test_slice::micro2@10 (line 39)
 ;; B9: #	out( B10 ) <- in( B8 )  Freq: 0.998997
 ;; B10: #	out( B39 B11 ) <- in( B9 B32 )  Freq: 0.999997
  0x00007a3310cda8bf:   mov    0xc(%r11),%edi               ; implicit exception: dispatches to 0x00007a3310cdacd8
 ;; B11: #	out( B36 B12 ) <- in( B10 )  Freq: 0.999996
  0x00007a3310cda8c3:   lea    -0x1f(%rdi),%r8d
  0x00007a3310cda8c7:   test   %r8d,%r8d
  0x00007a3310cda8ca:   jl     0x00007a3310cdac34
 ;; B12: #	out( B36 B13 ) <- in( B11 )  Freq: 0.999995
  0x00007a3310cda8d0:   mov    0xc(%r10),%ecx               ; implicit exception: dispatches to 0x00007a3310cdac34
                                                            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
                                                            ; - test_slice::micro2@56 (line 42)
 ;; B13: #	out( B36 B14 ) <- in( B12 )  Freq: 0.999994
  0x00007a3310cda8d4:   add    $0xffffffe1,%ecx
  0x00007a3310cda8d7:   test   %ecx,%ecx
  0x00007a3310cda8d9:   jl     0x00007a3310cdac34
 ;; B14: #	out( B20 ) <- in( B13 )  Freq: 0.999993
  0x00007a3310cda8df:   and    $0xffffffe0,%edi
  0x00007a3310cda8e2:   jmp    0x00007a3310cda98f
  0x00007a3310cda8e7:   nop
  0x00007a3310cda8e8:   nop
  0x00007a3310cda8e9:   nop
  0x00007a3310cda8ea:   nop
  0x00007a3310cda8eb:   nop
  0x00007a3310cda8ec:   nop
  0x00007a3310cda8ed:   nop
  0x00007a3310cda8ee:   nop
  0x00007a3310cda8ef:   nop                                 ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test_slice::micro2@73 (line 39)
 ;; B15: #	out( B16 ) <- in( B24 ) top-of-loop Freq: 31.9924
  0x00007a3310cda8f0:   mov    %rdx,0x1d0(%r15)
  0x00007a3310cda8f7:   prefetchw 0xc0(%rdx)
  0x00007a3310cda8fe:   movq   $0x1,(%rax)
  0x00007a3310cda905:   movl   $0x1008550,0x8(%rax)         ;   {metadata('jdk/incubator/vector/Byte256Vector')}
 ;; B16: #	out( B38 B17 ) <- in( B26 B15 ) top-of-loop Freq: 31.9956
  0x00007a3310cda90c:   cmp    0x5f8a24d(%rip),%r12        # 0x00007a3316c64b60
                                                            ;   {external_word}
  0x00007a3310cda913:   je     0x00007a3310cda92d
 ;; MacroAssembler::encode_heap_oop_not_null2: heap base corrupted?
  0x00007a3310cda919:   movabs $0x7a331607d558,%rdi         ;   {external_word}
  0x00007a3310cda923:   and    $0xfffffffffffffff0,%rsp
  0x00007a3310cda927:   call   0x00007a3315235a22           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007a3310cda92c:   hlt    
  0x00007a3310cda92d:   test   %rbx,%rbx
  0x00007a3310cda930:   jne    0x00007a3310cda94a
 ;; null oop passed to encode_heap_oop_not_null2
  0x00007a3310cda936:   movabs $0x7a331607d598,%rdi         ;   {external_word}
  0x00007a3310cda940:   and    $0xfffffffffffffff0,%rsp
  0x00007a3310cda944:   call   0x00007a3315235a22           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007a3310cda949:   hlt    
  0x00007a3310cda94a:   mov    %ebx,0xc(%rax)
  0x00007a3310cda94d:   mov    0x8(%r14),%edx               ; implicit exception: dispatches to 0x00007a3310cdaca8
 ;; B17: #	out( B35 B18 ) <- in( B16 )  Freq: 31.9956
  0x00007a3310cda951:   cmp    $0x1008550,%edx              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
                                                            ; - test_slice::micro2@56 (line 42)
                                                            ;   {metadata('jdk/incubator/vector/Byte256Vector')}
  0x00007a3310cda957:   jne    0x00007a3310cdabf4           ;*invokevirtual slice {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test_slice::micro2@47 (line 41)
 ;; B18: #	out( B34 B19 ) <- in( B17 )  Freq: 31.9956
  0x00007a3310cda95d:   mov    0xc(%r14),%ebx
  0x00007a3310cda961:   vmovdqu 0x10(%rbx),%ymm0            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
                                                            ; - test_slice::micro2@56 (line 42)
  0x00007a3310cda966:   vperm2i128 $0x21,%ymm2,%ymm0,%ymm1
  0x00007a3310cda96c:   vpalignr $0xf,%ymm1,%ymm2,%ymm0     ;*invokestatic sliceOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::sliceTemplate@41 (line 2316)
                                                            ; - jdk.incubator.vector.Byte256Vector::slice@3 (line 418)
                                                            ; - jdk.incubator.vector.Byte256Vector::slice@3 (line 43)
                                                            ; - test_slice::micro2@47 (line 41)
  0x00007a3310cda972:   cmp    %ecx,%r9d
  0x00007a3310cda975:   jae    0x00007a3310cdaba8
 ;; B19: #	out( B20 ) <- in( B18 )  Freq: 31.9955
  0x00007a3310cda97b:   vmovdqu %ymm0,0x10(%r10,%rsi,1)     ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test_slice::micro2@73 (line 39)
  0x00007a3310cda982:   mov    0x30(%r15),%rbx
  0x00007a3310cda986:   lea    0x20(%r9),%r13d              ; ImmutableOopMap {r10=Oop r11=Oop rax=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) test_slice::micro2@73 (line 39)
  0x00007a3310cda98a:   test   %eax,(%rbx)                  ;   {poll}
  0x00007a3310cda98c:   mov    %rax,%r14
 ;; B20: #	out( B27 B21 ) <- in( B14 B19 ) Loop( B20-B19 inner ) Freq: 32.9955
  0x00007a3310cda98f:   cmp    %edi,%r13d                   ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
                                                            ; - test_slice::micro2@56 (line 42)
  0x00007a3310cda992:   jge    0x00007a3310cdaaba
 ;; B21: #	out( B33 B22 ) <- in( B20 )  Freq: 31.9957
  0x00007a3310cda998:   cmp    %r8d,%r13d
  0x00007a3310cda99b:   jae    0x00007a3310cdab66           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test_slice::micro2@73 (line 39)
 ;; B22: #	out( B28 B23 ) <- in( B21 )  Freq: 31.9956
  0x00007a3310cda9a1:   mov    0x1d0(%r15),%rbx
  0x00007a3310cda9a8:   mov    %rbx,%rdx
  0x00007a3310cda9ab:   add    $0x30,%rdx
  0x00007a3310cda9af:   mov    %r13d,%r9d                   ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::checkIndex@3 (line 365)
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 58)
                                                            ; - jdk.incubator.vector.ByteVector::fromArray@9 (line 3041)
                                                            ; - test_slice::micro2@29 (line 40)
  0x00007a3310cda9b2:   movslq %r9d,%rsi                    ;*i2l {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::arrayAddress@4 (line 4118)
                                                            ; - jdk.incubator.vector.ByteVector::fromArray0Template@20 (line 3858)
                                                            ; - jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 1020)
                                                            ; - jdk.incubator.vector.ByteVector::fromArray@24 (line 3043)
                                                            ; - test_slice::micro2@29 (line 40)
  0x00007a3310cda9b5:   lea    0x10(%rsi),%rbp
  0x00007a3310cda9b9:   cmp    0x1e0(%r15),%rdx
  0x00007a3310cda9c0:   jae    0x00007a3310cdaad0           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test_slice::micro2@73 (line 39)
 ;; B23: #	out( B24 ) <- in( B22 )  Freq: 31.9924
  0x00007a3310cda9c6:   mov    %rdx,0x1d0(%r15)
  0x00007a3310cda9cd:   prefetchw 0xc0(%rdx)
  0x00007a3310cda9d4:   movq   $0x1,(%rbx)
  0x00007a3310cda9db:   prefetchw 0x100(%rdx)
  0x00007a3310cda9e2:   movl   $0x1b83b0,0x8(%rbx)          ;   {metadata({type array byte})}
  0x00007a3310cda9e9:   prefetchw 0x140(%rdx)
  0x00007a3310cda9f0:   movl   $0x20,0xc(%rbx)
  0x00007a3310cda9f7:   prefetchw 0x180(%rdx)
  0x00007a3310cda9fe:   mov    %r12,0x10(%rbx)
  0x00007a3310cdaa02:   mov    %r12,0x18(%rbx)
  0x00007a3310cdaa06:   mov    %r12,0x20(%rbx)
  0x00007a3310cdaa0a:   mov    %r12,0x28(%rbx)              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
                                                            ; - test_slice::micro2@56 (line 42)
 ;; B24: #	out( B15 B25 ) <- in( B29 B23 )  Freq: 31.9956
  0x00007a3310cdaa0e:   vmovdqu 0x10(%r11,%rsi,1),%ymm2     ;*invokestatic load {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::fromArray0Template@33 (line 3856)
                                                            ; - jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 1020)
                                                            ; - jdk.incubator.vector.ByteVector::fromArray@24 (line 3043)
                                                            ; - test_slice::micro2@29 (line 40)
  0x00007a3310cdaa15:   vmovdqu %ymm2,0x10(%rbx)
  0x00007a3310cdaa1a:   mov    0x1d0(%r15),%rax
  0x00007a3310cdaa21:   mov    %rax,%rdx
  0x00007a3310cdaa24:   add    $0x10,%rdx                   ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test_slice::micro2@73 (line 39)
  0x00007a3310cdaa28:   cmp    0x1e0(%r15),%rdx
  0x00007a3310cdaa2f:   jb     0x00007a3310cda8f0
 ;; B25: #	out( B40 B26 ) <- in( B24 )  Freq: 0.00320009
  0x00007a3310cdaa35:   vmovdqu %ymm2,0x40(%rsp)
  0x00007a3310cdaa3b:   mov    %rsi,0x38(%rsp)
  0x00007a3310cdaa40:   mov    %r9d,0x30(%rsp)
  0x00007a3310cdaa45:   mov    %rbx,0x28(%rsp)
  0x00007a3310cdaa4a:   mov    %ecx,0x24(%rsp)
  0x00007a3310cdaa4e:   mov    %r8d,0x20(%rsp)
  0x00007a3310cdaa53:   mov    %edi,0x4(%rsp)
  0x00007a3310cdaa57:   mov    %r11,0x18(%rsp)
  0x00007a3310cdaa5c:   mov    %r10,0x10(%rsp)
  0x00007a3310cdaa61:   mov    %r14,0x8(%rsp)
  0x00007a3310cdaa66:   movabs $0x8008550,%rsi              ;   {metadata('jdk/incubator/vector/Byte256Vector')}
  0x00007a3310cdaa70:   mov    %r13d,(%rsp)
  0x00007a3310cdaa74:   vzeroupper 
  0x00007a3310cdaa77:   call   0x00007a3310c0fa60           ; ImmutableOopMap {[8]=Oop [16]=Oop [24]=Oop [40]=Oop }
                                                            ;*invokestatic load {reexecute=1 rethrow=0 return_oop=1}
                                                            ; - (reexecute) jdk.incubator.vector.ByteVector::fromArray0Template@33 (line 3856)
                                                            ; - jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 1020)
                                                            ; - jdk.incubator.vector.ByteVector::fromArray@24 (line 3043)
                                                            ; - test_slice::micro2@29 (line 40)
                                                            ;   {runtime_call C2 Runtime new_instance_blob}
  0x00007a3310cdaa7c:   nopl   0x1000374(%rax,%rax,1)       ;   {post_call_nop}
 ;; B26: #	out( B16 ) <- in( B25 )  Freq: 0.00320003
  0x00007a3310cdaa84:   mov    0x8(%rsp),%r14
  0x00007a3310cdaa89:   mov    0x10(%rsp),%r10
  0x00007a3310cdaa8e:   mov    0x18(%rsp),%r11
  0x00007a3310cdaa93:   mov    0x4(%rsp),%edi
  0x00007a3310cdaa97:   mov    0x20(%rsp),%r8d
  0x00007a3310cdaa9c:   mov    0x24(%rsp),%ecx
  0x00007a3310cdaaa0:   mov    0x28(%rsp),%rbx
  0x00007a3310cdaaa5:   mov    0x30(%rsp),%r9d
  0x00007a3310cdaaaa:   mov    0x38(%rsp),%rsi
  0x00007a3310cdaaaf:   vmovdqu 0x40(%rsp),%ymm2
  0x00007a3310cdaab5:   jmp    0x00007a3310cda90c
 ;; B27: #	out( N531 ) <- in( B20 )  Freq: 0.999864
  0x00007a3310cdaaba:   vzeroupper 
  0x00007a3310cdaabd:   add    $0x80,%rsp
  0x00007a3310cdaac4:   pop    %rbp
  0x00007a3310cdaac5:   cmp    0x28(%r15),%rsp              ;   {poll_return}
  0x00007a3310cdaac9:   ja     0x00007a3310cdad2c
  0x00007a3310cdaacf:   ret    
 ;; B28: #	out( B41 B29 ) <- in( B22 )  Freq: 0.00320009
  0x00007a3310cdaad0:   mov    %rsi,0x30(%rsp)
  0x00007a3310cdaad5:   mov    %r9d,0x28(%rsp)
  0x00007a3310cdaada:   mov    %ecx,0x24(%rsp)
  0x00007a3310cdaade:   mov    %r8d,0x20(%rsp)
  0x00007a3310cdaae3:   mov    %edi,0x4(%rsp)
  0x00007a3310cdaae7:   mov    %r11,0x18(%rsp)
  0x00007a3310cdaaec:   mov    %r10,0x10(%rsp)
  0x00007a3310cdaaf1:   mov    %r14,0x8(%rsp)
  0x00007a3310cdaaf6:   mov    %r13d,(%rsp)                 ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::fromArray0Template@28 (line 3858)
                                                            ; - jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 1020)
                                                            ; - jdk.incubator.vector.ByteVector::fromArray@24 (line 3043)
                                                            ; - test_slice::micro2@29 (line 40)
  0x00007a3310cdaafa:   movabs $0x71b83b0,%rsi              ;   {metadata({type array byte})}
  0x00007a3310cdab04:   mov    $0x20,%edx                   ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
                                                            ; - test_slice::micro2@56 (line 42)
  0x00007a3310cdab09:   nop
  0x00007a3310cdab0a:   nop
  0x00007a3310cdab0b:   nop
  0x00007a3310cdab0c:   vzeroupper 
  0x00007a3310cdab0f:   call   0x00007a3310c0f760           ; ImmutableOopMap {[8]=Oop [16]=Oop [24]=Oop }
                                                            ;*invokestatic load {reexecute=1 rethrow=0 return_oop=1}
                                                            ; - (reexecute) jdk.incubator.vector.ByteVector::fromArray0Template@33 (line 3856)
                                                            ; - jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 1020)
                                                            ; - jdk.incubator.vector.ByteVector::fromArray@24 (line 3043)
                                                            ; - test_slice::micro2@29 (line 40)
                                                            ;   {runtime_call C2 Runtime new_array_blob}
  0x00007a3310cdab14:   nopl   0x200040c(%rax,%rax,1)       ;   {post_call_nop}
 ;; B29: #	out( B24 ) <- in( B28 )  Freq: 0.00320003
  0x00007a3310cdab1c:   mov    (%rsp),%r13d
  0x00007a3310cdab20:   mov    0x8(%rsp),%r14
  0x00007a3310cdab25:   mov    0x10(%rsp),%r10
  0x00007a3310cdab2a:   mov    0x18(%rsp),%r11
  0x00007a3310cdab2f:   mov    0x4(%rsp),%edi
  0x00007a3310cdab33:   mov    0x20(%rsp),%r8d
  0x00007a3310cdab38:   mov    0x24(%rsp),%ecx
  0x00007a3310cdab3c:   mov    %rax,%rbx
  0x00007a3310cdab3f:   mov    0x28(%rsp),%r9d
  0x00007a3310cdab44:   mov    0x30(%rsp),%rsi
  0x00007a3310cdab49:   jmp    0x00007a3310cdaa0e
 ;; B30: #	out( B4 ) <- in( B1 )  Freq: 0.000999987
  0x00007a3310cdab4e:   xor    %r10d,%r10d
  0x00007a3310cdab51:   jmp    0x00007a3310cda876
 ;; B31: #	out( B7 ) <- in( B4 )  Freq: 0.000999986
  0x00007a3310cdab56:   xor    %r11d,%r11d
  0x00007a3310cdab59:   jmp    0x00007a3310cda893
 ;; B32: #	out( B10 ) <- in( B7 )  Freq: 0.000999985
  0x00007a3310cdab5e:   xor    %r14d,%r14d
  0x00007a3310cdab61:   jmp    0x00007a3310cda8bf           ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::checkIndex@3 (line 365)
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 58)
                                                            ; - jdk.incubator.vector.ByteVector::fromArray@9 (line 3041)
                                                            ; - test_slice::micro2@29 (line 40)
 ;; B33: #	out( N531 ) <- in( B21 )  Freq: 3.24205e-05
  0x00007a3310cdab66:   mov    $0xffffffe4,%esi
  0x00007a3310cdab6b:   mov    %r14,%rbp
  0x00007a3310cdab6e:   mov    %r13d,0x4(%rsp)
  0x00007a3310cdab73:   mov    %r10,0x8(%rsp)
  0x00007a3310cdab78:   mov    %r11,0x18(%rsp)
  0x00007a3310cdab7d:   mov    %r8d,0x20(%rsp)              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
                                                            ; - test_slice::micro2@56 (line 42)
  0x00007a3310cdab82:   nop
  0x00007a3310cdab83:   nop
  0x00007a3310cdab84:   vzeroupper 
  0x00007a3310cdab87:   call   0x00007a3310c15be0           ; ImmutableOopMap {rbp=Oop [8]=Oop [24]=Oop }
                                                            ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::checkIndex@3 (line 365)
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 58)
                                                            ; - jdk.incubator.vector.ByteVector::fromArray@9 (line 3041)
                                                            ; - test_slice::micro2@29 (line 40)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007a3310cdab8c:   nopl   0x3000484(%rax,%rax,1)       ;   {post_call_nop}
  0x00007a3310cdab94:   movabs $0x7a32c0217210,%rdi         ;   {external_word}
  0x00007a3310cdab9e:   and    $0xfffffffffffffff0,%rsp
  0x00007a3310cdaba2:   call   0x00007a3315235a22           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007a3310cdaba7:   hlt    
 ;; B34: #	out( N531 ) <- in( B18 )  Freq: 3.24204e-05
  0x00007a3310cdaba8:   vmovdqu %ymm0,%ymm1
  0x00007a3310cdabac:   mov    $0xffffffe4,%esi
  0x00007a3310cdabb1:   mov    %r11,(%rsp)
  0x00007a3310cdabb5:   mov    %r10,0x10(%rsp)
  0x00007a3310cdabba:   mov    %r9d,0xc(%rsp)
  0x00007a3310cdabbf:   mov    %ecx,0x18(%rsp)
  0x00007a3310cdabc3:   vmovdqu %ymm1,0x20(%rsp)
  0x00007a3310cdabc9:   vmovdqu %ymm2,0x40(%rsp)            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
                                                            ; - test_slice::micro2@56 (line 42)
  0x00007a3310cdabcf:   nop
  0x00007a3310cdabd0:   vzeroupper 
  0x00007a3310cdabd3:   call   0x00007a3310c15be0           ; ImmutableOopMap {[0]=Oop [16]=Oop }
                                                            ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::checkIndex@3 (line 365)
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 58)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@7 (line 3487)
                                                            ; - test_slice::micro2@56 (line 42)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007a3310cdabd8:   nopl   0x40004d0(%rax,%rax,1)       ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
                                                            ; - test_slice::micro2@56 (line 42)
                                                            ;   {post_call_nop}
  0x00007a3310cdabe0:   movabs $0x7a32c0217210,%rdi         ;   {external_word}
  0x00007a3310cdabea:   and    $0xfffffffffffffff0,%rsp
  0x00007a3310cdabee:   call   0x00007a3315235a22           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007a3310cdabf3:   hlt    
 ;; B35: #	out( N531 ) <- in( B17 )  Freq: 3.19956e-05
  0x00007a3310cdabf4:   mov    $0xffffffde,%esi
  0x00007a3310cdabf9:   mov    %r14,%rbp
  0x00007a3310cdabfc:   mov    %r10,(%rsp)
  0x00007a3310cdac00:   mov    %r11,0x8(%rsp)
  0x00007a3310cdac05:   mov    %r9d,0x10(%rsp)
  0x00007a3310cdac0a:   vmovdqu %ymm2,0x20(%rsp)
  0x00007a3310cdac10:   vzeroupper 
  0x00007a3310cdac13:   call   0x00007a3310c15be0           ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop }
                                                            ;*invokevirtual slice {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test_slice::micro2@47 (line 41)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007a3310cdac18:   nopl   0x5000510(%rax,%rax,1)       ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
                                                            ; - test_slice::micro2@56 (line 42)
                                                            ;   {post_call_nop}
  0x00007a3310cdac20:   movabs $0x7a32c0217210,%rdi         ;   {external_word}
  0x00007a3310cdac2a:   and    $0xfffffffffffffff0,%rsp
  0x00007a3310cdac2e:   call   0x00007a3315235a22           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007a3310cdac33:   hlt                                 ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test_slice::micro2@10 (line 39)
 ;; B36: #	out( N531 ) <- in( B13 B11 B12 )  Freq: 3.01326e-06
  0x00007a3310cdac34:   mov    $0xffffffbe,%esi
  0x00007a3310cdac39:   mov    %r14,%rbp
  0x00007a3310cdac3c:   mov    %r13d,(%rsp)
  0x00007a3310cdac40:   mov    %r10,0x8(%rsp)
  0x00007a3310cdac45:   mov    %r11,0x10(%rsp)              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
                                                            ; - test_slice::micro2@56 (line 42)
  0x00007a3310cdac4a:   nop
  0x00007a3310cdac4b:   nop
  0x00007a3310cdac4c:   vzeroupper 
  0x00007a3310cdac4f:   call   0x00007a3310c15be0           ; ImmutableOopMap {rbp=Oop [8]=Oop [16]=Oop }
                                                            ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test_slice::micro2@10 (line 39)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007a3310cdac54:   nopl   0x600054c(%rax,%rax,1)       ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
                                                            ; - test_slice::micro2@56 (line 42)
                                                            ;   {post_call_nop}
  0x00007a3310cdac5c:   movabs $0x7a32c0217210,%rdi         ;   {external_word}
  0x00007a3310cdac66:   and    $0xfffffffffffffff0,%rsp
  0x00007a3310cdac6a:   call   0x00007a3315235a22           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007a3310cdac6f:   hlt                                 ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test_slice::micro2@10 (line 39)
 ;; B37: #	out( N531 ) <- in( B2 B5 B8 )  Freq: 2.997e-06
  0x00007a3310cdac70:   mov    $0xffffff85,%esi
  0x00007a3310cdac75:   mov    %r14,(%rsp)
  0x00007a3310cdac79:   mov    %r13d,0x8(%rsp)
  0x00007a3310cdac7e:   mov    %rbx,0x10(%rsp)              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
                                                            ; - test_slice::micro2@56 (line 42)
  0x00007a3310cdac83:   nop
  0x00007a3310cdac84:   vzeroupper 
  0x00007a3310cdac87:   call   0x00007a3310c15be0           ; ImmutableOopMap {rbp=Oop [0]=Oop [16]=Oop }
                                                            ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test_slice::micro2@10 (line 39)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007a3310cdac8c:   nopl   0x7000584(%rax,%rax,1)       ;   {post_call_nop}
  0x00007a3310cdac94:   movabs $0x7a32c0217210,%rdi         ;   {external_word}
  0x00007a3310cdac9e:   and    $0xfffffffffffffff0,%rsp
  0x00007a3310cdaca2:   call   0x00007a3315235a22           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007a3310cdaca7:   hlt    
 ;; B38: #	out( N531 ) <- in( B16 )  Freq: 3.24205e-05
  0x00007a3310cdaca8:   mov    $0xfffffff6,%esi
  0x00007a3310cdacad:   vmovdqu %ymm2,(%rsp)                ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
                                                            ; - test_slice::micro2@56 (line 42)
  0x00007a3310cdacb2:   nop
  0x00007a3310cdacb3:   nop
  0x00007a3310cdacb4:   vzeroupper 
  0x00007a3310cdacb7:   call   0x00007a3310c15be0           ; ImmutableOopMap {}
                                                            ;*invokevirtual slice {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test_slice::micro2@47 (line 41)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007a3310cdacbc:   nopl   0x80005b4(%rax,%rax,1)       ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
                                                            ; - test_slice::micro2@56 (line 42)
                                                            ;   {post_call_nop}
  0x00007a3310cdacc4:   movabs $0x7a32c0217210,%rdi         ;   {external_word}
  0x00007a3310cdacce:   and    $0xfffffffffffffff0,%rsp
  0x00007a3310cdacd2:   call   0x00007a3315235a22           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007a3310cdacd7:   hlt                                 ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test_slice::micro2@10 (line 39)
 ;; B39: #	out( N531 ) <- in( B10 )  Freq: 1.01328e-06
  0x00007a3310cdacd8:   mov    $0xffffff6e,%esi
  0x00007a3310cdacdd:   mov    %r14,%rbp
  0x00007a3310cdace0:   mov    %r13d,(%rsp)
  0x00007a3310cdace4:   mov    %r10,0x8(%rsp)
  0x00007a3310cdace9:   mov    %r11,0x10(%rsp)              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
                                                            ; - test_slice::micro2@56 (line 42)
  0x00007a3310cdacee:   nop
  0x00007a3310cdacef:   nop
  0x00007a3310cdacf0:   vzeroupper 
  0x00007a3310cdacf3:   call   0x00007a3310c15be0           ; ImmutableOopMap {rbp=Oop [8]=Oop [16]=Oop }
                                                            ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test_slice::micro2@10 (line 39)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007a3310cdacf8:   nopl   0x90005f0(%rax,%rax,1)       ;   {post_call_nop}
  0x00007a3310cdad00:   movabs $0x7a32c0217210,%rdi         ;   {external_word}
  0x00007a3310cdad0a:   and    $0xfffffffffffffff0,%rsp
  0x00007a3310cdad0e:   call   0x00007a3315235a22           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007a3310cdad13:   hlt    
 ;; B40: #	out( B42 ) <- in( B25 )  Freq: 3.20009e-08
  0x00007a3310cdad14:   mov    %rax,%rsi
  0x00007a3310cdad17:   jmp    0x00007a3310cdad1c
 ;; B41: #	out( B42 ) <- in( B28 )  Freq: 3.20009e-08
  0x00007a3310cdad19:   mov    %rax,%rsi
 ;; B42: #	out( N531 ) <- in( B41 B40 )  Freq: 6.40019e-08
  0x00007a3310cdad1c:   vzeroupper 
  0x00007a3310cdad1f:   add    $0x80,%rsp
  0x00007a3310cdad26:   pop    %rbp
  0x00007a3310cdad27:   jmp    0x00007a3310c0ee60           ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
                                                            ; - test_slice::micro2@56 (line 42)
                                                            ;   {runtime_call C2 Runtime rethrow_blob}
  0x00007a3310cdad2c:   movabs $0x7a3310cdaac5,%r10         ;   {internal_word}
  0x00007a3310cdad36:   mov    %r10,0x5a8(%r15)
  0x00007a3310cdad3d:   jmp    0x00007a3310c82c60           ;   {runtime_call SafepointBlob}
  0x00007a3310cdad42:   call   Stub::Stub Generator method_entry_barrier_stub
                                                            ;   {runtime_call Stub::Stub Generator method_entry_barrier_stub}
  0x00007a3310cdad47:   jmp    0x00007a3310cda82e
  0x00007a3310cdad4c:   hlt    
  0x00007a3310cdad4d:   hlt    
  0x00007a3310cdad4e:   hlt    
  0x00007a3310cdad4f:   hlt    
[Exception Handler]
  0x00007a3310cdad50:   jmp    0x00007a3310c158e0           ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x00007a3310cdad55:   call   0x00007a3310cdad5a
  0x00007a3310cdad5a:   subq   $0x5,(%rsp)
  0x00007a3310cdad5f:   jmp    0x00007a3310c82f80           ;   {runtime_call DeoptimizationBlob}
  0x00007a3310cdad64:   hlt    
  0x00007a3310cdad65:   hlt    
  0x00007a3310cdad66:   hlt    
  0x00007a3310cdad67:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Oops:
  0x00007a3310cdad68:   0x00000000c8e66488 a 'java/lang/Class'{0x00000000c8e66488} = 'jdk/incubator/vector/Byte256Vector'
  0x00007a3310cdad70:   0x00000000ffeb1d88 a 'java/lang/Class'{0x00000000ffeb1d88} = byte
  0x00007a3310cdad78:   0x00000000c8e66438 a 'jdk/incubator/vector/ByteVector$ByteSpecies'{0x00000000c8e66438}
  0x00007a3310cdad80:   0x00000000c8db3870 a 'jdk/incubator/vector/ByteVector$$Lambda+0x0000000008016a60'{0x00000000c8db3870}
  0x00007a3310cdad88:   0x00000000c8f114a8 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x00000000c8f114a8}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Metadata:
  0x00007a32c0217f10:   0x00007a32d8401c40 {method} {0x00007a32d8401c40} 'micro2' '([B[B)V' in 'test_slice'
  0x00007a32c0217f18:   0x00007a32d8051418 {method} {0x00007a32d8051418} 'intoArray' '([BI)V' in 'jdk/incubator/vector/ByteVector'
  0x00007a32c0217f20:   0x00000000071b83b0 {type array byte}
  0x00007a32c0217f28:   0x0000000008008550 'jdk/incubator/vector/Byte256Vector'
  0x00007a32c0217f30:   0x00007a32d811ac18 {method} {0x00007a32d811ac18} 'slice' '(ILjdk/incubator/vector/Vector;)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/Byte256Vector'
  0x00007a32c0217f38:   0x00007a32d81180a0 {method} {0x00007a32d81180a0} 'slice' '(ILjdk/incubator/vector/Vector;)Ljdk/incubator/vector/Byte256Vector;' in 'jdk/incubator/vector/Byte256Vector'
  0x00007a32c0217f40:   0x00007a32d804d738 {method} {0x00007a32d804d738} 'sliceTemplate' '(ILjdk/incubator/vector/Vector;)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector'
  0x00007a32c0217f48:   0x00007a32d8050590 {method} {0x00007a32d8050590} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[BI)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector'
  0x00007a32c0217f50:   0x00007a32d81cf158 {method} {0x00007a32d81cf158} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
  0x00007a32c0217f58:   0x000000000727f4e8 {method} {0x000000000727f4e8} 'checkIndex' '(II)I' in 'java/util/Objects'
  0x00007a32c0217f60:   0x00007a32d8119520 {method} {0x00007a32d8119520} 'fromArray0' '([BI)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/Byte256Vector'
  0x00007a32c0217f68:   0x00007a32d8052158 {method} {0x00007a32d8052158} 'fromArray0Template' '([BI)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector'
  0x00007a32c0217f70:   0x00007a32d8053b50 {method} {0x00007a32d8053b50} 'arrayAddress' '([BI)J' in 'jdk/incubator/vector/ByteVector'
  0x00007a32c0217f78:   0x00007a32d80d52d0 {method} {0x00007a32d80d52d0} 'loopBound' '(I)I' in 'jdk/incubator/vector/AbstractSpecies'
  0x00007a32c0217f80:   0x00007a32d81cf5d0 {method} {0x00007a32d81cf5d0} 'roundDown' '(II)I' in 'jdk/incubator/vector/VectorIntrinsics'
  0x00007a32c0217f88:   0x00007a32d80cea60 {method} {0x00007a32d80cea60} 'dummyVector' '()Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector$ByteSpecies'
  0x00007a32c0217f90:   0x00007a32d80d46b0 {method} {0x00007a32d80d46b0} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
  0x00007a32c0217f98:   0x00007a32d80d6070 {method} {0x00007a32d80d6070} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
  0x00007a32c0217fa0:   0x00007a32d80ce000 {method} {0x00007a32d80ce000} 'vectorType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/ByteVector$ByteSpecies'
  0x00007a32c0217fa8:   0x00007a32d80cde48 {method} {0x00007a32d80cde48} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/ByteVector$ByteSpecies'
  0x00007a32c0217fb0:   0x00007a32d80d4788 {method} {0x00007a32d80d4788} 'laneCount' '()I' in 'jdk/incubator/vector/AbstractSpecies'
  0x00007a32c0217fb8:   0x000000000726b820 {method} {0x000000000726b820} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder'
  0x00007a32c0217fc0:   0x00007a32d81151c8 {method} {0x00007a32d81151c8} 'vspecies' '()Ljdk/incubator/vector/ByteVector$ByteSpecies;' in 'jdk/incubator/vector/Byte256Vector'
  0x00007a32c0217fc8:   0x0000000007272eb0 {method} {0x0000000007272eb0} 'constant_L' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$Holder'
  0x00007a32c0217fd0:   0x00007a32d8061b30 {method} {0x00007a32d8061b30} 'check' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractVector'
  0x00007a32c0217fd8:   0x00007a32d8061c68 {method} {0x00007a32d8061c68} 'sameSpecies' '(Ljdk/incubator/vector/Vector;)Z' in 'jdk/incubator/vector/AbstractVector'
  0x00007a32c0217fe0:   0x00007a32d8115528 {method} {0x00007a32d8115528} 'length' '()I' in 'jdk/incubator/vector/Byte256Vector'
  0x00007a32c0217fe8:   0x0000000008004dd8 'jdk/incubator/vector/ByteVector$ByteSpecies'
  0x00007a32c0217ff0:   0x00007a32d80d3d98 'jdk/incubator/vector/VectorSpecies'
  0x00007a32c0217ff8:   0x00007a32d80d2b28 {method} {0x00007a32d80d2b28} 'loopBound' '(I)I' in 'jdk/incubator/vector/VectorSpecies'
  0x00007a32c0218000:   0x00007a32d80d2930 {method} {0x00007a32d80d2930} 'length' '()I' in 'jdk/incubator/vector/VectorSpecies'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
pc-bytecode offsets:
PcDesc(pc=0x00007a3310cda7ff offset=ffffffff bits=0):
PcDesc(pc=0x00007a3310cda83e offset=3e bits=0):
   test_slice::micro2@10 (line 39)
PcDesc(pc=0x00007a3310cda85c offset=5c bits=0):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
   test_slice::micro2@56 (line 42)
PcDesc(pc=0x00007a3310cda876 offset=76 bits=0):
   test_slice::micro2@10 (line 39)
PcDesc(pc=0x00007a3310cda879 offset=79 bits=0):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
   test_slice::micro2@56 (line 42)
PcDesc(pc=0x00007a3310cda893 offset=93 bits=0):
   test_slice::micro2@10 (line 39)
PcDesc(pc=0x00007a3310cda896 offset=96 bits=0):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
   test_slice::micro2@56 (line 42)
PcDesc(pc=0x00007a3310cda8bf offset=bf bits=0):
   test_slice::micro2@10 (line 39)
PcDesc(pc=0x00007a3310cda8d4 offset=d4 bits=0):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
   test_slice::micro2@56 (line 42)
PcDesc(pc=0x00007a3310cda8f0 offset=f0 bits=0):
   test_slice::micro2@73 (line 39)
PcDesc(pc=0x00007a3310cda957 offset=157 bits=0):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
   test_slice::micro2@56 (line 42)
PcDesc(pc=0x00007a3310cda95d offset=15d bits=0):
   test_slice::micro2@47 (line 41)
PcDesc(pc=0x00007a3310cda966 offset=166 bits=0):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
   test_slice::micro2@56 (line 42)
PcDesc(pc=0x00007a3310cda972 offset=172 bits=0):
   jdk.incubator.vector.ByteVector::sliceTemplate@41 (line 2316)
   jdk.incubator.vector.Byte256Vector::slice@3 (line 418)
   jdk.incubator.vector.Byte256Vector::slice@3 (line 43)
   test_slice::micro2@47 (line 41)
PcDesc(pc=0x00007a3310cda982 offset=182 bits=0):
   test_slice::micro2@73 (line 39)
PcDesc(pc=0x00007a3310cda98a offset=18a bits=1):
   test_slice::micro2@73 (line 39)  reexecute=true
   Locals
    - l0: reg r10 [20],oop
    - l1: reg r11 [22],oop
    - l2: obj[177]
    - l3: reg r13 [26],int
    - l4: empty
    - l5: empty
   Objects
    - 0: R obj[177], jdk.incubator.vector.Byte256Vector
        Fields: reg xmm2 [112],vector
PcDesc(pc=0x00007a3310cda992 offset=192 bits=0):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
   test_slice::micro2@56 (line 42)
PcDesc(pc=0x00007a3310cda9a1 offset=1a1 bits=0):
   test_slice::micro2@73 (line 39)
PcDesc(pc=0x00007a3310cda9b2 offset=1b2 bits=0):
   java.util.Objects::checkIndex@3 (line 365)
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 58)
   jdk.incubator.vector.ByteVector::fromArray@9 (line 3041)
   test_slice::micro2@29 (line 40)
PcDesc(pc=0x00007a3310cda9b5 offset=1b5 bits=0):
   jdk.incubator.vector.ByteVector::arrayAddress@4 (line 4118)
   jdk.incubator.vector.ByteVector::fromArray0Template@20 (line 3858)
   jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 1020)
   jdk.incubator.vector.ByteVector::fromArray@24 (line 3043)
   test_slice::micro2@29 (line 40)
PcDesc(pc=0x00007a3310cda9c6 offset=1c6 bits=0):
   test_slice::micro2@73 (line 39)
PcDesc(pc=0x00007a3310cdaa0e offset=20e bits=0):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
   test_slice::micro2@56 (line 42)
PcDesc(pc=0x00007a3310cdaa15 offset=215 bits=0):
   jdk.incubator.vector.ByteVector::fromArray0Template@33 (line 3856)
   jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 1020)
   jdk.incubator.vector.ByteVector::fromArray@24 (line 3043)
   test_slice::micro2@29 (line 40)
PcDesc(pc=0x00007a3310cdaa28 offset=228 bits=0):
   test_slice::micro2@73 (line 39)
PcDesc(pc=0x00007a3310cdaa7c offset=27c bits=5):
   jdk.incubator.vector.ByteVector::fromArray0Template@33 (line 3856)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x00000000c8e66488} = 'jdk/incubator/vector/Byte256Vector'
    - @1: a 'java/lang/Class'{0x00000000ffeb1d88} = byte
    - @2: 32
    - @3: stack[24],oop
    - @4: 0
    - @5: reg rbp [10],long
    - @6: 0
    - @7: stack[24],oop
    - @8: 0
    - @9: stack[56],long
    - @10: a 'jdk/incubator/vector/ByteVector$ByteSpecies'{0x00000000c8e66438}
    - @11: a 'jdk/incubator/vector/ByteVector$$Lambda+0x0000000008016a60'{0x00000000c8db3870}
   jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 1020)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.ByteVector::fromArray@24 (line 3043)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   test_slice::micro2@29 (line 40)
   Locals
    - l0: stack[16],oop
    - l1: stack[24],oop
    - l2: stack[8],oop
    - l3: stack[0]
    - l4: empty
    - l5: empty
PcDesc(pc=0x00007a3310cdaafa offset=2fa bits=0):
   jdk.incubator.vector.ByteVector::fromArray0Template@28 (line 3858)
   jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 1020)
   jdk.incubator.vector.ByteVector::fromArray@24 (line 3043)
   test_slice::micro2@29 (line 40)
PcDesc(pc=0x00007a3310cdab09 offset=309 bits=0):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
   test_slice::micro2@56 (line 42)
PcDesc(pc=0x00007a3310cdab14 offset=314 bits=5):
   jdk.incubator.vector.ByteVector::fromArray0Template@33 (line 3856)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x00000000c8e66488} = 'jdk/incubator/vector/Byte256Vector'
    - @1: a 'java/lang/Class'{0x00000000ffeb1d88} = byte
    - @2: 32
    - @3: stack[24],oop
    - @4: 0
    - @5: reg rbp [10],long
    - @6: 0
    - @7: stack[24],oop
    - @8: 0
    - @9: stack[48],long
    - @10: a 'jdk/incubator/vector/ByteVector$ByteSpecies'{0x00000000c8e66438}
    - @11: a 'jdk/incubator/vector/ByteVector$$Lambda+0x0000000008016a60'{0x00000000c8db3870}
   jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 1020)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.ByteVector::fromArray@24 (line 3043)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   test_slice::micro2@29 (line 40)
   Locals
    - l0: stack[16],oop
    - l1: stack[24],oop
    - l2: stack[8],oop
    - l3: stack[0]
    - l4: empty
    - l5: empty
PcDesc(pc=0x00007a3310cdab66 offset=366 bits=0):
   java.util.Objects::checkIndex@3 (line 365)
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 58)
   jdk.incubator.vector.ByteVector::fromArray@9 (line 3041)
   test_slice::micro2@29 (line 40)
PcDesc(pc=0x00007a3310cdab82 offset=382 bits=0):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
   test_slice::micro2@56 (line 42)
PcDesc(pc=0x00007a3310cdab8c offset=38c bits=0):
   java.util.Objects::checkIndex@3 (line 365)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[4]
    - @1: stack[32]
    - @2: null
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 58)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.ByteVector::fromArray@9 (line 3041)
   Locals
    - l0: a 'jdk/incubator/vector/ByteVector$ByteSpecies'{0x00000000c8e66438}
    - l1: stack[24],oop
    - l2: empty
    - l3: empty
   test_slice::micro2@29 (line 40)
   Locals
    - l0: stack[8],oop
    - l1: stack[24],oop
    - l2: reg rbp [10],oop
    - l3: stack[4]
    - l4: empty
    - l5: empty
PcDesc(pc=0x00007a3310cdabcf offset=3cf bits=0):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
   test_slice::micro2@56 (line 42)
PcDesc(pc=0x00007a3310cdabd8 offset=3d8 bits=0):
   java.util.Objects::checkIndex@3 (line 365)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[12]
    - @1: stack[24]
    - @2: null
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 58)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.ByteVector::intoArray@7 (line 3487)
   Locals
    - l0: obj[228]
    - l1: stack[16],oop
    - l2: empty
    - l3: empty
   test_slice::micro2@56 (line 42)
   Locals
    - l0: stack[16],oop
    - l1: stack[0],oop
    - l2: empty
    - l3: stack[12]
    - l4: obj[227]
    - l5: empty
   Objects
    - 0: R obj[227], jdk.incubator.vector.Byte256Vector
        Fields: stack[64],vector
    - 1: R obj[228], jdk.incubator.vector.Byte256Vector
        Fields: stack[32],vector
PcDesc(pc=0x00007a3310cdabe0 offset=3e0 bits=0):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
   test_slice::micro2@56 (line 42)
PcDesc(pc=0x00007a3310cdac18 offset=418 bits=0):
   test_slice::micro2@47 (line 41)
   Locals
    - l0: stack[0],oop
    - l1: stack[8],oop
    - l2: empty
    - l3: stack[16]
    - l4: obj[275]
    - l5: empty
   Expression stack
    - @0: reg rbp [10],oop
    - @1: 31
    - @2: obj[275]
   Objects
    - 0: R obj[275], jdk.incubator.vector.Byte256Vector
        Fields: stack[32],vector
PcDesc(pc=0x00007a3310cdac20 offset=420 bits=0):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
   test_slice::micro2@56 (line 42)
PcDesc(pc=0x00007a3310cdac34 offset=434 bits=0):
   test_slice::micro2@10 (line 39)
PcDesc(pc=0x00007a3310cdac4a offset=44a bits=0):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
   test_slice::micro2@56 (line 42)
PcDesc(pc=0x00007a3310cdac54 offset=454 bits=0):
   test_slice::micro2@10 (line 39)
   Locals
    - l0: stack[8],oop
    - l1: stack[16],oop
    - l2: reg rbp [10],oop
    - l3: stack[0]
    - l4: empty
    - l5: empty
PcDesc(pc=0x00007a3310cdac5c offset=45c bits=0):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
   test_slice::micro2@56 (line 42)
PcDesc(pc=0x00007a3310cdac70 offset=470 bits=0):
   test_slice::micro2@10 (line 39)
PcDesc(pc=0x00007a3310cdac83 offset=483 bits=0):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
   test_slice::micro2@56 (line 42)
PcDesc(pc=0x00007a3310cdac8c offset=48c bits=0):
   test_slice::micro2@10 (line 39)
   Locals
    - l0: stack[16],oop
    - l1: reg rbp [10],oop
    - l2: stack[0],oop
    - l3: stack[8]
    - l4: empty
    - l5: empty
PcDesc(pc=0x00007a3310cdacb2 offset=4b2 bits=0):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
   test_slice::micro2@56 (line 42)
PcDesc(pc=0x00007a3310cdacbc offset=4bc bits=0):
   test_slice::micro2@47 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
   Expression stack
    - @0: null
    - @1: 31
    - @2: obj[267]
   Objects
    - 0: R obj[267], jdk.incubator.vector.Byte256Vector
        Fields: stack[0],vector
PcDesc(pc=0x00007a3310cdacc4 offset=4c4 bits=0):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
   test_slice::micro2@56 (line 42)
PcDesc(pc=0x00007a3310cdacd8 offset=4d8 bits=0):
   test_slice::micro2@10 (line 39)
PcDesc(pc=0x00007a3310cdacee offset=4ee bits=0):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
   test_slice::micro2@56 (line 42)
PcDesc(pc=0x00007a3310cdacf8 offset=4f8 bits=0):
   test_slice::micro2@10 (line 39)
   Locals
    - l0: stack[8],oop
    - l1: stack[16],oop
    - l2: reg rbp [10],oop
    - l3: stack[0]
    - l4: empty
    - l5: empty
PcDesc(pc=0x00007a3310cdad2c offset=52c bits=0):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
   test_slice::micro2@56 (line 42)
PcDesc(pc=0x00007a3310cdad69 offset=569 bits=0):
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
oop maps:ImmutableOopMapSet contains 10 OopMaps

ImmutableOopMap {r10=Oop r11=Oop rax=Oop } pc offsets: 394 
ImmutableOopMap {[8]=Oop [16]=Oop [24]=Oop [40]=Oop } pc offsets: 636 
ImmutableOopMap {[8]=Oop [16]=Oop [24]=Oop } pc offsets: 788 
ImmutableOopMap {rbp=Oop [8]=Oop [24]=Oop } pc offsets: 908 
ImmutableOopMap {[0]=Oop [16]=Oop } pc offsets: 984 
ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop } pc offsets: 1048 
ImmutableOopMap {rbp=Oop [8]=Oop [16]=Oop } pc offsets: 1108 
ImmutableOopMap {rbp=Oop [0]=Oop [16]=Oop } pc offsets: 1164 
ImmutableOopMap {} pc offsets: 1212 
ImmutableOopMap {rbp=Oop [8]=Oop [16]=Oop } pc offsets: 1272 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
scopes:
ScopeDesc(pc=0x00007a3310cda83e offset=3e):
   test_slice::micro2@10 (line 39)
ScopeDesc(pc=0x00007a3310cda85c offset=5c):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
ScopeDesc(pc=0x00007a3310cda85c offset=5c):
   test_slice::micro2@56 (line 42)
ScopeDesc(pc=0x00007a3310cda876 offset=76):
   test_slice::micro2@10 (line 39)
ScopeDesc(pc=0x00007a3310cda879 offset=79):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
ScopeDesc(pc=0x00007a3310cda879 offset=79):
   test_slice::micro2@56 (line 42)
ScopeDesc(pc=0x00007a3310cda893 offset=93):
   test_slice::micro2@10 (line 39)
ScopeDesc(pc=0x00007a3310cda896 offset=96):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
ScopeDesc(pc=0x00007a3310cda896 offset=96):
   test_slice::micro2@56 (line 42)
ScopeDesc(pc=0x00007a3310cda8bf offset=bf):
   test_slice::micro2@10 (line 39)
ScopeDesc(pc=0x00007a3310cda8d4 offset=d4):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
ScopeDesc(pc=0x00007a3310cda8d4 offset=d4):
   test_slice::micro2@56 (line 42)
ScopeDesc(pc=0x00007a3310cda8f0 offset=f0):
   test_slice::micro2@73 (line 39)
ScopeDesc(pc=0x00007a3310cda957 offset=157):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
ScopeDesc(pc=0x00007a3310cda957 offset=157):
   test_slice::micro2@56 (line 42)
ScopeDesc(pc=0x00007a3310cda95d offset=15d):
   test_slice::micro2@47 (line 41)
ScopeDesc(pc=0x00007a3310cda966 offset=166):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
ScopeDesc(pc=0x00007a3310cda966 offset=166):
   test_slice::micro2@56 (line 42)
ScopeDesc(pc=0x00007a3310cda972 offset=172):
   jdk.incubator.vector.ByteVector::sliceTemplate@41 (line 2316)
ScopeDesc(pc=0x00007a3310cda972 offset=172):
   jdk.incubator.vector.Byte256Vector::slice@3 (line 418)
ScopeDesc(pc=0x00007a3310cda972 offset=172):
   jdk.incubator.vector.Byte256Vector::slice@3 (line 43)
ScopeDesc(pc=0x00007a3310cda972 offset=172):
   test_slice::micro2@47 (line 41)
ScopeDesc(pc=0x00007a3310cda982 offset=182):
   test_slice::micro2@73 (line 39)
ScopeDesc(pc=0x00007a3310cda98a offset=18a):
   test_slice::micro2@73 (line 39)  reexecute=true
   Locals
    - l0: reg r10 [20],oop
    - l1: reg r11 [22],oop
    - l2: obj[177]
    - l3: reg r13 [26],int
    - l4: empty
    - l5: empty
   Objects
    - 0: R obj[177], jdk.incubator.vector.Byte256Vector
        Fields: reg xmm2 [112],vector
ScopeDesc(pc=0x00007a3310cda992 offset=192):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
ScopeDesc(pc=0x00007a3310cda992 offset=192):
   test_slice::micro2@56 (line 42)
ScopeDesc(pc=0x00007a3310cda9a1 offset=1a1):
   test_slice::micro2@73 (line 39)
ScopeDesc(pc=0x00007a3310cda9b2 offset=1b2):
   java.util.Objects::checkIndex@3 (line 365)
ScopeDesc(pc=0x00007a3310cda9b2 offset=1b2):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 58)
ScopeDesc(pc=0x00007a3310cda9b2 offset=1b2):
   jdk.incubator.vector.ByteVector::fromArray@9 (line 3041)
ScopeDesc(pc=0x00007a3310cda9b2 offset=1b2):
   test_slice::micro2@29 (line 40)
ScopeDesc(pc=0x00007a3310cda9b5 offset=1b5):
   jdk.incubator.vector.ByteVector::arrayAddress@4 (line 4118)
ScopeDesc(pc=0x00007a3310cda9b5 offset=1b5):
   jdk.incubator.vector.ByteVector::fromArray0Template@20 (line 3858)
ScopeDesc(pc=0x00007a3310cda9b5 offset=1b5):
   jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 1020)
ScopeDesc(pc=0x00007a3310cda9b5 offset=1b5):
   jdk.incubator.vector.ByteVector::fromArray@24 (line 3043)
ScopeDesc(pc=0x00007a3310cda9b5 offset=1b5):
   test_slice::micro2@29 (line 40)
ScopeDesc(pc=0x00007a3310cda9c6 offset=1c6):
   test_slice::micro2@73 (line 39)
ScopeDesc(pc=0x00007a3310cdaa0e offset=20e):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
ScopeDesc(pc=0x00007a3310cdaa0e offset=20e):
   test_slice::micro2@56 (line 42)
ScopeDesc(pc=0x00007a3310cdaa15 offset=215):
   jdk.incubator.vector.ByteVector::fromArray0Template@33 (line 3856)
ScopeDesc(pc=0x00007a3310cdaa15 offset=215):
   jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 1020)
ScopeDesc(pc=0x00007a3310cdaa15 offset=215):
   jdk.incubator.vector.ByteVector::fromArray@24 (line 3043)
ScopeDesc(pc=0x00007a3310cdaa15 offset=215):
   test_slice::micro2@29 (line 40)
ScopeDesc(pc=0x00007a3310cdaa28 offset=228):
   test_slice::micro2@73 (line 39)
ScopeDesc(pc=0x00007a3310cdaa7c offset=27c):
   jdk.incubator.vector.ByteVector::fromArray0Template@33 (line 3856)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x00000000c8e66488} = 'jdk/incubator/vector/Byte256Vector'
    - @1: a 'java/lang/Class'{0x00000000ffeb1d88} = byte
    - @2: 32
    - @3: stack[24],oop
    - @4: 0
    - @5: reg rbp [10],long
    - @6: 0
    - @7: stack[24],oop
    - @8: 0
    - @9: stack[56],long
    - @10: a 'jdk/incubator/vector/ByteVector$ByteSpecies'{0x00000000c8e66438}
    - @11: a 'jdk/incubator/vector/ByteVector$$Lambda+0x0000000008016a60'{0x00000000c8db3870}
ScopeDesc(pc=0x00007a3310cdaa7c offset=27c):
   jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 1020)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00007a3310cdaa7c offset=27c):
   jdk.incubator.vector.ByteVector::fromArray@24 (line 3043)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x00007a3310cdaa7c offset=27c):
   test_slice::micro2@29 (line 40)
   Locals
    - l0: stack[16],oop
    - l1: stack[24],oop
    - l2: stack[8],oop
    - l3: stack[0]
    - l4: empty
    - l5: empty
ScopeDesc(pc=0x00007a3310cdaafa offset=2fa):
   jdk.incubator.vector.ByteVector::fromArray0Template@28 (line 3858)
ScopeDesc(pc=0x00007a3310cdaafa offset=2fa):
   jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 1020)
ScopeDesc(pc=0x00007a3310cdaafa offset=2fa):
   jdk.incubator.vector.ByteVector::fromArray@24 (line 3043)
ScopeDesc(pc=0x00007a3310cdaafa offset=2fa):
   test_slice::micro2@29 (line 40)
ScopeDesc(pc=0x00007a3310cdab09 offset=309):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
ScopeDesc(pc=0x00007a3310cdab09 offset=309):
   test_slice::micro2@56 (line 42)
ScopeDesc(pc=0x00007a3310cdab14 offset=314):
   jdk.incubator.vector.ByteVector::fromArray0Template@33 (line 3856)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x00000000c8e66488} = 'jdk/incubator/vector/Byte256Vector'
    - @1: a 'java/lang/Class'{0x00000000ffeb1d88} = byte
    - @2: 32
    - @3: stack[24],oop
    - @4: 0
    - @5: reg rbp [10],long
    - @6: 0
    - @7: stack[24],oop
    - @8: 0
    - @9: stack[48],long
    - @10: a 'jdk/incubator/vector/ByteVector$ByteSpecies'{0x00000000c8e66438}
    - @11: a 'jdk/incubator/vector/ByteVector$$Lambda+0x0000000008016a60'{0x00000000c8db3870}
ScopeDesc(pc=0x00007a3310cdab14 offset=314):
   jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 1020)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00007a3310cdab14 offset=314):
   jdk.incubator.vector.ByteVector::fromArray@24 (line 3043)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x00007a3310cdab14 offset=314):
   test_slice::micro2@29 (line 40)
   Locals
    - l0: stack[16],oop
    - l1: stack[24],oop
    - l2: stack[8],oop
    - l3: stack[0]
    - l4: empty
    - l5: empty
ScopeDesc(pc=0x00007a3310cdab66 offset=366):
   java.util.Objects::checkIndex@3 (line 365)
ScopeDesc(pc=0x00007a3310cdab66 offset=366):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 58)
ScopeDesc(pc=0x00007a3310cdab66 offset=366):
   jdk.incubator.vector.ByteVector::fromArray@9 (line 3041)
ScopeDesc(pc=0x00007a3310cdab66 offset=366):
   test_slice::micro2@29 (line 40)
ScopeDesc(pc=0x00007a3310cdab82 offset=382):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
ScopeDesc(pc=0x00007a3310cdab82 offset=382):
   test_slice::micro2@56 (line 42)
ScopeDesc(pc=0x00007a3310cdab8c offset=38c):
   java.util.Objects::checkIndex@3 (line 365)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[4]
    - @1: stack[32]
    - @2: null
ScopeDesc(pc=0x00007a3310cdab8c offset=38c):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 58)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00007a3310cdab8c offset=38c):
   jdk.incubator.vector.ByteVector::fromArray@9 (line 3041)
   Locals
    - l0: a 'jdk/incubator/vector/ByteVector$ByteSpecies'{0x00000000c8e66438}
    - l1: stack[24],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x00007a3310cdab8c offset=38c):
   test_slice::micro2@29 (line 40)
   Locals
    - l0: stack[8],oop
    - l1: stack[24],oop
    - l2: reg rbp [10],oop
    - l3: stack[4]
    - l4: empty
    - l5: empty
ScopeDesc(pc=0x00007a3310cdabcf offset=3cf):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
ScopeDesc(pc=0x00007a3310cdabcf offset=3cf):
   test_slice::micro2@56 (line 42)
ScopeDesc(pc=0x00007a3310cdabd8 offset=3d8):
   java.util.Objects::checkIndex@3 (line 365)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[12]
    - @1: stack[24]
    - @2: null
ScopeDesc(pc=0x00007a3310cdabd8 offset=3d8):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 58)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00007a3310cdabd8 offset=3d8):
   jdk.incubator.vector.ByteVector::intoArray@7 (line 3487)
   Locals
    - l0: obj[228]
    - l1: stack[16],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x00007a3310cdabd8 offset=3d8):
   test_slice::micro2@56 (line 42)
   Locals
    - l0: stack[16],oop
    - l1: stack[0],oop
    - l2: empty
    - l3: stack[12]
    - l4: obj[227]
    - l5: empty
   Objects
    - 0: R obj[227], jdk.incubator.vector.Byte256Vector
        Fields: stack[64],vector
    - 1: R obj[228], jdk.incubator.vector.Byte256Vector
        Fields: stack[32],vector
ScopeDesc(pc=0x00007a3310cdabe0 offset=3e0):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
ScopeDesc(pc=0x00007a3310cdabe0 offset=3e0):
   test_slice::micro2@56 (line 42)
ScopeDesc(pc=0x00007a3310cdac18 offset=418):
   test_slice::micro2@47 (line 41)
   Locals
    - l0: stack[0],oop
    - l1: stack[8],oop
    - l2: empty
    - l3: stack[16]
    - l4: obj[275]
    - l5: empty
   Expression stack
    - @0: reg rbp [10],oop
    - @1: 31
    - @2: obj[275]
   Objects
    - 0: R obj[275], jdk.incubator.vector.Byte256Vector
        Fields: stack[32],vector
ScopeDesc(pc=0x00007a3310cdac20 offset=420):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
ScopeDesc(pc=0x00007a3310cdac20 offset=420):
   test_slice::micro2@56 (line 42)
ScopeDesc(pc=0x00007a3310cdac34 offset=434):
   test_slice::micro2@10 (line 39)
ScopeDesc(pc=0x00007a3310cdac4a offset=44a):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
ScopeDesc(pc=0x00007a3310cdac4a offset=44a):
   test_slice::micro2@56 (line 42)
ScopeDesc(pc=0x00007a3310cdac54 offset=454):
   test_slice::micro2@10 (line 39)
   Locals
    - l0: stack[8],oop
    - l1: stack[16],oop
    - l2: reg rbp [10],oop
    - l3: stack[0]
    - l4: empty
    - l5: empty
ScopeDesc(pc=0x00007a3310cdac5c offset=45c):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
ScopeDesc(pc=0x00007a3310cdac5c offset=45c):
   test_slice::micro2@56 (line 42)
ScopeDesc(pc=0x00007a3310cdac70 offset=470):
   test_slice::micro2@10 (line 39)
ScopeDesc(pc=0x00007a3310cdac83 offset=483):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
ScopeDesc(pc=0x00007a3310cdac83 offset=483):
   test_slice::micro2@56 (line 42)
ScopeDesc(pc=0x00007a3310cdac8c offset=48c):
   test_slice::micro2@10 (line 39)
   Locals
    - l0: stack[16],oop
    - l1: reg rbp [10],oop
    - l2: stack[0],oop
    - l3: stack[8]
    - l4: empty
    - l5: empty
ScopeDesc(pc=0x00007a3310cdacb2 offset=4b2):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
ScopeDesc(pc=0x00007a3310cdacb2 offset=4b2):
   test_slice::micro2@56 (line 42)
ScopeDesc(pc=0x00007a3310cdacbc offset=4bc):
   test_slice::micro2@47 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
   Expression stack
    - @0: null
    - @1: 31
    - @2: obj[267]
   Objects
    - 0: R obj[267], jdk.incubator.vector.Byte256Vector
        Fields: stack[0],vector
ScopeDesc(pc=0x00007a3310cdacc4 offset=4c4):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
ScopeDesc(pc=0x00007a3310cdacc4 offset=4c4):
   test_slice::micro2@56 (line 42)
ScopeDesc(pc=0x00007a3310cdacd8 offset=4d8):
   test_slice::micro2@10 (line 39)
ScopeDesc(pc=0x00007a3310cdacee offset=4ee):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
ScopeDesc(pc=0x00007a3310cdacee offset=4ee):
   test_slice::micro2@56 (line 42)
ScopeDesc(pc=0x00007a3310cdacf8 offset=4f8):
   test_slice::micro2@10 (line 39)
   Locals
    - l0: stack[8],oop
    - l1: stack[16],oop
    - l2: reg rbp [10],oop
    - l3: stack[0]
    - l4: empty
    - l5: empty
ScopeDesc(pc=0x00007a3310cdad2c offset=52c):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
ScopeDesc(pc=0x00007a3310cdad2c offset=52c):
   test_slice::micro2@56 (line 42)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
relocations:
         @0x00007a32c0217e50: 3100
relocInfo@0x00007a32c0217e50 [type=6(runtime_call) addr=0x00007a3310cda800 offset=0 format=1] | [destination=0x00007a33153ce1ce] os::breakpoint()
         @0x00007a32c0217e52: 3044
relocInfo@0x00007a32c0217e52 [type=6(runtime_call) addr=0x00007a3310cda844 offset=68] | [destination=0x00007a33154fecce] SharedRuntime::OSR_migration_end(long*)
         @0x00007a32c0217e54: 800d
relocInfo@0x00007a32c0217e54 [type=16(post_call_nop) addr=0x00007a3310cda851 offset=13]
         @0x00007a32c0217e56: 78036315
relocInfo@0x00007a32c0217e58 [type=12(metadata) addr=0x00007a3310cda866 offset=21 format=3 data=3] | [metadata_addr=0x00007a32c0217f20 *=0x00000000071b83b0]metadata_value=0x00000000071b83b0: {type array byte}
         @0x00007a32c0217e5a: 7803631d
relocInfo@0x00007a32c0217e5c [type=12(metadata) addr=0x00007a3310cda883 offset=29 format=3 data=3] | [metadata_addr=0x00007a32c0217f20 *=0x00000000071b83b0]metadata_value=0x00000000071b83b0: {type array byte}
         @0x00007a32c0217e5e: 601d
relocInfo@0x00007a32c0217e5e [type=12(metadata) addr=0x00007a3310cda8a0 offset=29] | [metadata_addr=0x00007a3310cda8a2 *=0x00007a32d8065b88]metadata_value=0x00007a32d8065b88: 'jdk/incubator/vector/ByteVector'
         @0x00007a32c0217e60: 78046365
relocInfo@0x00007a32c0217e62 [type=12(metadata) addr=0x00007a3310cda905 offset=101 format=3 data=4] | [metadata_addr=0x00007a32c0217f28 *=0x0000000008008550]metadata_value=0x0000000008008550: 'jdk/incubator/vector/Byte256Vector'
         @0x00007a32c0217e64: 7c020000000a3907
relocInfo@0x00007a32c0217e6a [type=7(external_word) addr=0x00007a3310cda90c offset=7 format=1 data={0000000a}] | [target=0x00007a3316c64b60]
         @0x00007a32c0217e6c: 7c0200000093380d
relocInfo@0x00007a32c0217e72 [type=7(external_word) addr=0x00007a3310cda919 offset=13 data={00000093}] | [target=0x00007a331607d558]
         @0x00007a32c0217e74: 310e
relocInfo@0x00007a32c0217e74 [type=6(runtime_call) addr=0x00007a3310cda927 offset=14 format=1] | [destination=0x00007a3315235a22] MacroAssembler::debug64(char*, long, long*)
         @0x00007a32c0217e76: 7c0200000094380f
relocInfo@0x00007a32c0217e7c [type=7(external_word) addr=0x00007a3310cda936 offset=15 data={00000094}] | [target=0x00007a331607d598]
         @0x00007a32c0217e7e: 310e
relocInfo@0x00007a32c0217e7e [type=6(runtime_call) addr=0x00007a3310cda944 offset=14 format=1] | [destination=0x00007a3315235a22] MacroAssembler::debug64(char*, long, long*)
         @0x00007a32c0217e80: 7804630d
relocInfo@0x00007a32c0217e82 [type=12(metadata) addr=0x00007a3310cda951 offset=13 format=3 data=4] | [metadata_addr=0x00007a32c0217f28 *=0x0000000008008550]metadata_value=0x0000000008008550: 'jdk/incubator/vector/Byte256Vector'
         @0x00007a32c0217e84: 5039
relocInfo@0x00007a32c0217e84 [type=10(poll) addr=0x00007a3310cda98a offset=57]
         @0x00007a32c0217e86: 78036358
relocInfo@0x00007a32c0217e88 [type=12(metadata) addr=0x00007a3310cda9e2 offset=88 format=3 data=3] | [metadata_addr=0x00007a32c0217f20 *=0x00000000071b83b0]metadata_value=0x00000000071b83b0: {type array byte}
         @0x00007a32c0217e8a: 6084
relocInfo@0x00007a32c0217e8a [type=12(metadata) addr=0x00007a3310cdaa66 offset=132] | [metadata_addr=0x00007a3310cdaa68 *=0x0000000008008550]metadata_value=0x0000000008008550: 'jdk/incubator/vector/Byte256Vector'
         @0x00007a32c0217e8c: 3111
relocInfo@0x00007a32c0217e8c [type=6(runtime_call) addr=0x00007a3310cdaa77 offset=17 format=1] | [destination=0x00007a3310c0fa60] C2 Runtime new_instance_blob
         @0x00007a32c0217e8e: 8005
relocInfo@0x00007a32c0217e8e [type=16(post_call_nop) addr=0x00007a3310cdaa7c offset=5]
         @0x00007a32c0217e90: 5849
relocInfo@0x00007a32c0217e90 [type=11(poll_return) addr=0x00007a3310cdaac5 offset=73]
         @0x00007a32c0217e92: 6035
relocInfo@0x00007a32c0217e92 [type=12(metadata) addr=0x00007a3310cdaafa offset=53] | [metadata_addr=0x00007a3310cdaafc *=0x00000000071b83b0]metadata_value=0x00000000071b83b0: {type array byte}
         @0x00007a32c0217e94: 3115
relocInfo@0x00007a32c0217e94 [type=6(runtime_call) addr=0x00007a3310cdab0f offset=21 format=1] | [destination=0x00007a3310c0f760] C2 Runtime new_array_blob
         @0x00007a32c0217e96: 8005
relocInfo@0x00007a32c0217e96 [type=16(post_call_nop) addr=0x00007a3310cdab14 offset=5]
         @0x00007a32c0217e98: 3173
relocInfo@0x00007a32c0217e98 [type=6(runtime_call) addr=0x00007a3310cdab87 offset=115 format=1] | [destination=0x00007a3310c15be0] UncommonTrapBlob
         @0x00007a32c0217e9a: 8005
relocInfo@0x00007a32c0217e9a [type=16(post_call_nop) addr=0x00007a3310cdab8c offset=5]
         @0x00007a32c0217e9c: 7c02000001933808
relocInfo@0x00007a32c0217ea2 [type=7(external_word) addr=0x00007a3310cdab94 offset=8 data={00000193}] | [target=0x00007a32c0217210]
         @0x00007a32c0217ea4: 310e
relocInfo@0x00007a32c0217ea4 [type=6(runtime_call) addr=0x00007a3310cdaba2 offset=14 format=1] | [destination=0x00007a3315235a22] MacroAssembler::debug64(char*, long, long*)
         @0x00007a32c0217ea6: 3131
relocInfo@0x00007a32c0217ea6 [type=6(runtime_call) addr=0x00007a3310cdabd3 offset=49 format=1] | [destination=0x00007a3310c15be0] UncommonTrapBlob
         @0x00007a32c0217ea8: 8005
relocInfo@0x00007a32c0217ea8 [type=16(post_call_nop) addr=0x00007a3310cdabd8 offset=5]
         @0x00007a32c0217eaa: 7c02000001933808
relocInfo@0x00007a32c0217eb0 [type=7(external_word) addr=0x00007a3310cdabe0 offset=8 data={00000193}] | [target=0x00007a32c0217210]
         @0x00007a32c0217eb2: 310e
relocInfo@0x00007a32c0217eb2 [type=6(runtime_call) addr=0x00007a3310cdabee offset=14 format=1] | [destination=0x00007a3315235a22] MacroAssembler::debug64(char*, long, long*)
         @0x00007a32c0217eb4: 3125
relocInfo@0x00007a32c0217eb4 [type=6(runtime_call) addr=0x00007a3310cdac13 offset=37 format=1] | [destination=0x00007a3310c15be0] UncommonTrapBlob
         @0x00007a32c0217eb6: 8005
relocInfo@0x00007a32c0217eb6 [type=16(post_call_nop) addr=0x00007a3310cdac18 offset=5]
         @0x00007a32c0217eb8: 7c02000001933808
relocInfo@0x00007a32c0217ebe [type=7(external_word) addr=0x00007a3310cdac20 offset=8 data={00000193}] | [target=0x00007a32c0217210]
         @0x00007a32c0217ec0: 310e
relocInfo@0x00007a32c0217ec0 [type=6(runtime_call) addr=0x00007a3310cdac2e offset=14 format=1] | [destination=0x00007a3315235a22] MacroAssembler::debug64(char*, long, long*)
         @0x00007a32c0217ec2: 3121
relocInfo@0x00007a32c0217ec2 [type=6(runtime_call) addr=0x00007a3310cdac4f offset=33 format=1] | [destination=0x00007a3310c15be0] UncommonTrapBlob
         @0x00007a32c0217ec4: 8005
relocInfo@0x00007a32c0217ec4 [type=16(post_call_nop) addr=0x00007a3310cdac54 offset=5]
         @0x00007a32c0217ec6: 7c02000001933808
relocInfo@0x00007a32c0217ecc [type=7(external_word) addr=0x00007a3310cdac5c offset=8 data={00000193}] | [target=0x00007a32c0217210]
         @0x00007a32c0217ece: 310e
relocInfo@0x00007a32c0217ece [type=6(runtime_call) addr=0x00007a3310cdac6a offset=14 format=1] | [destination=0x00007a3315235a22] MacroAssembler::debug64(char*, long, long*)
         @0x00007a32c0217ed0: 311d
relocInfo@0x00007a32c0217ed0 [type=6(runtime_call) addr=0x00007a3310cdac87 offset=29 format=1] | [destination=0x00007a3310c15be0] UncommonTrapBlob
         @0x00007a32c0217ed2: 8005
relocInfo@0x00007a32c0217ed2 [type=16(post_call_nop) addr=0x00007a3310cdac8c offset=5]
         @0x00007a32c0217ed4: 7c02000001933808
relocInfo@0x00007a32c0217eda [type=7(external_word) addr=0x00007a3310cdac94 offset=8 data={00000193}] | [target=0x00007a32c0217210]
         @0x00007a32c0217edc: 310e
relocInfo@0x00007a32c0217edc [type=6(runtime_call) addr=0x00007a3310cdaca2 offset=14 format=1] | [destination=0x00007a3315235a22] MacroAssembler::debug64(char*, long, long*)
         @0x00007a32c0217ede: 3115
relocInfo@0x00007a32c0217ede [type=6(runtime_call) addr=0x00007a3310cdacb7 offset=21 format=1] | [destination=0x00007a3310c15be0] UncommonTrapBlob
         @0x00007a32c0217ee0: 8005
relocInfo@0x00007a32c0217ee0 [type=16(post_call_nop) addr=0x00007a3310cdacbc offset=5]
         @0x00007a32c0217ee2: 7c02000001933808
relocInfo@0x00007a32c0217ee8 [type=7(external_word) addr=0x00007a3310cdacc4 offset=8 data={00000193}] | [target=0x00007a32c0217210]
         @0x00007a32c0217eea: 310e
relocInfo@0x00007a32c0217eea [type=6(runtime_call) addr=0x00007a3310cdacd2 offset=14 format=1] | [destination=0x00007a3315235a22] MacroAssembler::debug64(char*, long, long*)
         @0x00007a32c0217eec: 3121
relocInfo@0x00007a32c0217eec [type=6(runtime_call) addr=0x00007a3310cdacf3 offset=33 format=1] | [destination=0x00007a3310c15be0] UncommonTrapBlob
         @0x00007a32c0217eee: 8005
relocInfo@0x00007a32c0217eee [type=16(post_call_nop) addr=0x00007a3310cdacf8 offset=5]
         @0x00007a32c0217ef0: 7c02000001933808
relocInfo@0x00007a32c0217ef6 [type=7(external_word) addr=0x00007a3310cdad00 offset=8 data={00000193}] | [target=0x00007a32c0217210]
         @0x00007a32c0217ef8: 310e
relocInfo@0x00007a32c0217ef8 [type=6(runtime_call) addr=0x00007a3310cdad0e offset=14 format=1] | [destination=0x00007a3315235a22] MacroAssembler::debug64(char*, long, long*)
         @0x00007a32c0217efa: 3119
relocInfo@0x00007a32c0217efa [type=6(runtime_call) addr=0x00007a3310cdad27 offset=25 format=1] | [destination=0x00007a3310c0ee60] C2 Runtime rethrow_blob
         @0x00007a32c0217efc: 7a674005
relocInfo@0x00007a32c0217efe [type=8(internal_word) addr=0x00007a3310cdad2c offset=5 data=615] | [target=0x00007a3310cdaac5]
         @0x00007a32c0217f00: 3111
relocInfo@0x00007a32c0217f00 [type=6(runtime_call) addr=0x00007a3310cdad3d offset=17 format=1] | [destination=0x00007a3310c82c60] SafepointBlob
         @0x00007a32c0217f02: 3105
relocInfo@0x00007a32c0217f02 [type=6(runtime_call) addr=0x00007a3310cdad42 offset=5 format=1] | [destination=0x00007a3310c683a0] Stub::Stub Generator method_entry_barrier_stub
         @0x00007a32c0217f04: 000e
relocInfo@0x00007a32c0217f04 [type=0(none) addr=0x00007a3310cdad50 offset=14]
         @0x00007a32c0217f06: 3100
relocInfo@0x00007a32c0217f06 [type=6(runtime_call) addr=0x00007a3310cdad50 offset=0 format=1] | [destination=0x00007a3310c158e0] ExceptionBlob
         @0x00007a32c0217f08: 310f
relocInfo@0x00007a32c0217f08 [type=6(runtime_call) addr=0x00007a3310cdad5f offset=15 format=1] | [destination=0x00007a3310c82f80] DeoptimizationBlob
         @0x00007a32c0217f0a: 0000
relocInfo@0x00007a32c0217f0a [type=0(none) addr=0x00007a3310cdad5f offset=0]
         @0x00007a32c0217f0c: 0000
relocInfo@0x00007a32c0217f0c [type=0(none) addr=0x00007a3310cdad5f offset=0]
         @0x00007a32c0217f0e: 0000
relocInfo@0x00007a32c0217f0e [type=0(none) addr=0x00007a3310cdad5f offset=0]
         @0x00007a32c0217f10: 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Dependencies:
Dependency of type evol_method
  method  = *{method} {0x00007a32d8401c40} 'micro2' '([B[B)V' in 'test_slice'
Dependency of type evol_method
  method  = *{method} {0x00007a32d8050590} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[BI)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector'
Dependency of type evol_method
  method  = {method} {0x00007a32d8051418} 'intoArray' '([BI)V' in 'jdk/incubator/vector/ByteVector'
Dependency of type evol_method
  method  = {method} {0x00007a32d80d52d0} 'loopBound' '(I)I' in 'jdk/incubator/vector/AbstractSpecies'
Dependency of type evol_method
  method  = *{method} {0x00007a32d81cf5d0} 'roundDown' '(II)I' in 'jdk/incubator/vector/VectorIntrinsics'
Dependency of type evol_method
  method  = *{method} {0x00007a32d81cf158} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
Dependency of type evol_method
  method  = {method} {0x00007a32d80cea60} 'dummyVector' '()Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector$ByteSpecies'
Dependency of type evol_method
  method  = {method} {0x00007a32d80d46b0} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
Dependency of type evol_method
  method  = *{method} {0x000000000727f4e8} 'checkIndex' '(II)I' in 'java/util/Objects'
Dependency of type evol_method
  method  = {method} {0x00007a32d80d6070} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
Dependency of type evol_method
  method  = {method} {0x00007a32d8119520} 'fromArray0' '([BI)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/Byte256Vector'
Dependency of type evol_method
  method  = {method} {0x00007a32d8052158} 'fromArray0Template' '([BI)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector'
Dependency of type evol_method
  method  = {method} {0x00007a32d80ce000} 'vectorType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/ByteVector$ByteSpecies'
Dependency of type evol_method
  method  = {method} {0x00007a32d80cde48} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/ByteVector$ByteSpecies'
Dependency of type evol_method
  method  = {method} {0x00007a32d80d4788} 'laneCount' '()I' in 'jdk/incubator/vector/AbstractSpecies'
Dependency of type evol_method
  method  = *{method} {0x00007a32d8053b50} 'arrayAddress' '([BI)J' in 'jdk/incubator/vector/ByteVector'
Dependency of type evol_method
  method  = *{method} {0x000000000726b820} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder'
Dependency of type evol_method
  method  = {method} {0x00007a32d81151c8} 'vspecies' '()Ljdk/incubator/vector/ByteVector$ByteSpecies;' in 'jdk/incubator/vector/Byte256Vector'
Dependency of type evol_method
  method  = *{method} {0x0000000007272eb0} 'constant_L' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$Holder'
Dependency of type evol_method
  method  = {method} {0x00007a32d811ac18} 'slice' '(ILjdk/incubator/vector/Vector;)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/Byte256Vector'
Dependency of type evol_method
  method  = {method} {0x00007a32d81180a0} 'slice' '(ILjdk/incubator/vector/Vector;)Ljdk/incubator/vector/Byte256Vector;' in 'jdk/incubator/vector/Byte256Vector'
Dependency of type evol_method
  method  = {method} {0x00007a32d804d738} 'sliceTemplate' '(ILjdk/incubator/vector/Vector;)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector'
Dependency of type evol_method
  method  = {method} {0x00007a32d8061b30} 'check' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractVector'
Dependency of type evol_method
  method  = {method} {0x00007a32d8061c68} 'sameSpecies' '(Ljdk/incubator/vector/Vector;)Z' in 'jdk/incubator/vector/AbstractVector'
Dependency of type evol_method
  method  = {method} {0x00007a32d8115528} 'length' '()I' in 'jdk/incubator/vector/Byte256Vector'
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.ByteVector$ByteSpecies
  method  = {method} {0x00007a32d80d52d0} 'loopBound' '(I)I' in 'jdk/incubator/vector/AbstractSpecies'
  class   = jdk.incubator.vector.VectorSpecies
  method  = *{method} {0x00007a32d80d2b28} 'loopBound' '(I)I' in 'jdk/incubator/vector/VectorSpecies'
   [nmethod<=klass]jdk.incubator.vector.ByteVector$ByteSpecies
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.ByteVector$ByteSpecies
  method  = {method} {0x00007a32d80d46b0} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
  class   = jdk.incubator.vector.VectorSpecies
  method  = *{method} {0x00007a32d80d2930} 'length' '()I' in 'jdk/incubator/vector/VectorSpecies'
   [nmethod<=klass]jdk.incubator.vector.ByteVector$ByteSpecies
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ExceptionHandlerTable (size = 48 bytes)
catch_pco = 636 (pc=0x00007a3310cdaa7c, 1 entries)
  bci -1 at scope depth 0 -> pco 1300 (pc=0x00007a3310cdad14)
catch_pco = 788 (pc=0x00007a3310cdab14, 1 entries)
  bci -1 at scope depth 0 -> pco 1305 (pc=0x00007a3310cdad19)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ImplicitExceptionTable (size = 3 entries, 28 bytes):
{
   < 0x00007a3310cda8bf, 0x00007a3310cdacd8 > < 0x00007a3310cda8d0, 0x00007a3310cdac34 > < 0x00007a3310cda94d, 0x00007a3310cdaca8 > 
}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded oops:
#0: 0x0000000000000000 nullptr-oop
#1: 0x00000000c8e66488 a 'java/lang/Class'{0x00000000c8e66488} = 'jdk/incubator/vector/Byte256Vector'
#2: 0x00000000ffeb1d88 a 'java/lang/Class'{0x00000000ffeb1d88} = byte
#3: 0x00000000c8e66438 a 'jdk/incubator/vector/ByteVector$ByteSpecies'{0x00000000c8e66438}
#4: 0x00000000c8db3870 a 'jdk/incubator/vector/ByteVector$$Lambda+0x0000000008016a60'{0x00000000c8db3870}
#5: 0x00000000c8f114a8 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x00000000c8f114a8}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded metadata:
# 0: 0x0000000000000000 nullptr-oop
# 1: 0x00007a32d8401c40 {method} {0x00007a32d8401c40} 'micro2' '([B[B)V' in 'test_slice'
# 2: 0x00007a32d8051418 {method} {0x00007a32d8051418} 'intoArray' '([BI)V' in 'jdk/incubator/vector/ByteVector'
# 3: 0x00000000071b83b0 {type array byte}
# 4: 0x0000000008008550 'jdk/incubator/vector/Byte256Vector'
# 5: 0x00007a32d811ac18 {method} {0x00007a32d811ac18} 'slice' '(ILjdk/incubator/vector/Vector;)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/Byte256Vector'
# 6: 0x00007a32d81180a0 {method} {0x00007a32d81180a0} 'slice' '(ILjdk/incubator/vector/Vector;)Ljdk/incubator/vector/Byte256Vector;' in 'jdk/incubator/vector/Byte256Vector'
# 7: 0x00007a32d804d738 {method} {0x00007a32d804d738} 'sliceTemplate' '(ILjdk/incubator/vector/Vector;)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector'
# 8: 0x00007a32d8050590 {method} {0x00007a32d8050590} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[BI)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector'
# 9: 0x00007a32d81cf158 {method} {0x00007a32d81cf158} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
#10: 0x000000000727f4e8 {method} {0x000000000727f4e8} 'checkIndex' '(II)I' in 'java/util/Objects'
#11: 0x00007a32d8119520 {method} {0x00007a32d8119520} 'fromArray0' '([BI)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/Byte256Vector'
#12: 0x00007a32d8052158 {method} {0x00007a32d8052158} 'fromArray0Template' '([BI)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector'
#13: 0x00007a32d8053b50 {method} {0x00007a32d8053b50} 'arrayAddress' '([BI)J' in 'jdk/incubator/vector/ByteVector'
#14: 0x00007a32d80d52d0 {method} {0x00007a32d80d52d0} 'loopBound' '(I)I' in 'jdk/incubator/vector/AbstractSpecies'
#15: 0x00007a32d81cf5d0 {method} {0x00007a32d81cf5d0} 'roundDown' '(II)I' in 'jdk/incubator/vector/VectorIntrinsics'
#16: 0x00007a32d80cea60 {method} {0x00007a32d80cea60} 'dummyVector' '()Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector$ByteSpecies'
#17: 0x00007a32d80d46b0 {method} {0x00007a32d80d46b0} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
#18: 0x00007a32d80d6070 {method} {0x00007a32d80d6070} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
#19: 0x00007a32d80ce000 {method} {0x00007a32d80ce000} 'vectorType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/ByteVector$ByteSpecies'
#20: 0x00007a32d80cde48 {method} {0x00007a32d80cde48} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/ByteVector$ByteSpecies'
#21: 0x00007a32d80d4788 {method} {0x00007a32d80d4788} 'laneCount' '()I' in 'jdk/incubator/vector/AbstractSpecies'
#22: 0x000000000726b820 {method} {0x000000000726b820} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder'
#23: 0x00007a32d81151c8 {method} {0x00007a32d81151c8} 'vspecies' '()Ljdk/incubator/vector/ByteVector$ByteSpecies;' in 'jdk/incubator/vector/Byte256Vector'
#24: 0x0000000007272eb0 {method} {0x0000000007272eb0} 'constant_L' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$Holder'
#25: 0x00007a32d8061b30 {method} {0x00007a32d8061b30} 'check' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractVector'
#26: 0x00007a32d8061c68 {method} {0x00007a32d8061c68} 'sameSpecies' '(Ljdk/incubator/vector/Vector;)Z' in 'jdk/incubator/vector/AbstractVector'
#27: 0x00007a32d8115528 {method} {0x00007a32d8115528} 'length' '()I' in 'jdk/incubator/vector/Byte256Vector'
#28: 0x0000000008004dd8 'jdk/incubator/vector/ByteVector$ByteSpecies'
#29: 0x00007a32d80d3d98 'jdk/incubator/vector/VectorSpecies'
#30: 0x00007a32d80d2b28 {method} {0x00007a32d80d2b28} 'loopBound' '(I)I' in 'jdk/incubator/vector/VectorSpecies'
#31: 0x00007a32d80d2930 {method} {0x00007a32d80d2930} 'length' '()I' in 'jdk/incubator/vector/VectorSpecies'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

============================= C2-compiled nmethod ==============================
#r018 rsi:rsi   : parm 0: byte[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact *
#r016 rdx:rdx   : parm 1: byte[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact *
# -- Old rsp -- Framesize: 96 --
#r623 rsp+92: in_preserve
#r622 rsp+88: return address
#r621 rsp+84: in_preserve
#r620 rsp+80: saved fp register
#r619 rsp+76: pad2, stack alignment
#r618 rsp+72: pad2, stack alignment
#r617 rsp+68: Fixed slot 1
#r616 rsp+64: Fixed slot 0
#r639 rsp+60: spill
#r638 rsp+56: spill
#r637 rsp+52: spill
#r636 rsp+48: spill
#r635 rsp+44: spill
#r634 rsp+40: spill
#r633 rsp+36: spill
#r632 rsp+32: spill
#r631 rsp+28: spill
#r630 rsp+24: spill
#r629 rsp+20: spill
#r628 rsp+16: spill
#r627 rsp+12: spill
#r626 rsp+ 8: spill
#r625 rsp+ 4: spill
#r624 rsp+ 0: spill
#
----------------------- MetaData before Compile_id = 575 ------------------------
{method}
 - this oop:          0x00007a32d8401c40
 - method holder:     'test_slice'
 - constants:         0x00007a32d84010f8 constant pool [238]/operands[26] {0x00007a32d84010f8} for 'test_slice' cache=0x00007a32d8402000
 - access:            0x9  public static 
 - flags:             0x6080  queued_for_compilation has_loops_flag has_loops_flag_init 
 - name:              'micro2'
 - signature:         '([B[B)V'
 - max stack:         4
 - max locals:        6
 - size of params:    2
 - method size:       14
 - vtable index:      -2
 - i2i entry:         0x00007a3310b766a0
 - adapters:          AHE@0x00007a330c0ccae0: 0xbb i2c: 0x00007a3310c87fe0 c2i: 0x00007a3310c88036 c2iUV: 0x00007a3310c88015 c2iNCI: 0x00007a3310c88071
 - compiled entry     0x00007a3310c88036
 - code size:         77
 - code start:        0x00007a32d8401be0
 - code end (excl):   0x00007a32d8401c2d
 - method data:       0x00007a32d84147c8
 - checked ex length: 0
 - linenumber start:  0x00007a32d8401c2d
 - localvar length:   0

------------------------ OptoAssembly for Compile_id = 575 -----------------------
#
#  void ( byte[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact *, byte[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * )
#
000     N1: #	out( B1 ) <- in( B34 B31 B39 B32 B29 B38 B35 B30 B36 B33 B28 B37 )  Freq: 1

000     B1: #	out( B39 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
000     # stack bang (168 bytes)
	pushq   rbp	# Save rbp
	subq    rsp, #80	# Create frame

01a     movl    R10, [RDX + #12 (8-bit)]	# range
01e     NullCheck RDX

01e     B2: #	out( B28 B3 ) <- in( B1 )  Freq: 0.999999
01e     movl    RAX, R10	# spill
021     andl    RAX, #-32	# int
024     jle     B28  P=0.030303 C=21120.000000

02a     B3: #	out( B29 B4 ) <- in( B2 )  Freq: 0.969696
02a     leal    RDI, [R10 + #-31]
02e     testl   RDI, RDI
030     jl     B29  P=0.000001 C=-1.000000

036     B4: #	out( B29 B5 ) <- in( B3 )  Freq: 0.969695
036     cmpl    R10, #31
03a     je     B29  P=0.000001 C=-1.000000

040     B5: #	out( B29 B6 ) <- in( B4 )  Freq: 0.969694
040     movslq  R10, R10	# i2l
043     movslq  R11, RAX	# i2l
046     addq    R10, #-31	# long
04a     addq    R11, #31	# long
04e     andq    R11, #-32	# long
052     movl    R11, R11	# l2i
055     movslq  R11, R11	# i2l
058     addq    R11, #-32	# long
05c     cmpq    R11, R10	# unsigned
05f     jae,u   B29  P=0.000001 C=-1.000000

065     B6: #	out( B29 B7 ) <- in( B5 )  Freq: 0.969693
065     movl    R9, [RSI + #12 (8-bit)]	# range
069     NullCheck RSI

069     B7: #	out( B29 B8 ) <- in( B6 )  Freq: 0.969692
069     leal    R10, [R9 + #-31]
06d     testl   R10, R10
070     jl     B29  P=0.000001 C=-1.000000

076     B8: #	out( B29 B9 ) <- in( B7 )  Freq: 0.969691
076     cmpl    R9, #31
07a     je     B29  P=0.000001 C=-1.000000

080     B9: #	out( B29 B10 ) <- in( B8 )  Freq: 0.96969
080     movslq  R8, R9	# i2l
083     addq    R8, #-31	# long
087     cmpq    R11, R8	# unsigned
08a     jae,u   B29  P=0.000001 C=-1.000000

090     B10: #	out( B30 B11 ) <- in( B9 )  Freq: 0.969689
090     cmpl    RAX, #2147483616
095     jg     B30  P=0.000001 C=-1.000000

09b     B11: #	out( B20 B12 ) <- in( B10 )  Freq: 0.969688
09b     load_vector XMM0,[RDX + #16 (8-bit)]
0a0     leal    R11, [RAX + #-96]
0a4     movl    R9, #32	# int
0aa     replicateI XMM2,#0
0ae     vector_slice_const_origin XMM1, #31, XMM2, XMM0 	!using XMM1 as TEMP
0ba     store_vector [RSI + #16 (8-bit)],XMM1
	
0bf     cmpl    R11, #32
0c3     jle     B20  P=0.000001 C=-1.000000

0c9     B12: #	out( B31 B13 ) <- in( B11 )  Freq: 0.969687
0c9     cmpl    RDI, #32	# unsigned
0cc     jbe,u   B31  P=0.000001 C=-1.000000

0d2     B13: #	out( B32 B14 ) <- in( B12 )  Freq: 0.969686
0d2     cmpl    RDI, #128	# unsigned
0d8     jbe,u   B32  P=0.000001 C=-1.000000

0de     B14: #	out( B33 B15 ) <- in( B13 )  Freq: 0.969685
0de     cmpl    R10, #32	# unsigned
0e2     jbe,u   B33  P=0.000001 C=-1.000000

0e8     B15: #	out( B34 B16 ) <- in( B14 )  Freq: 0.969684
0e8     cmpl    R10, #128	# unsigned
0ef     jbe,u   B34  P=0.000001 C=-1.000000

0f5     B16: #	out( B17 ) <- in( B15 )  Freq: 0.969683
0f5     movl    R8, #128000	# int
0fb     # TLS is in R15
0fb     xorl    RBX, RBX	# int

0fd     B17: #	out( B18 ) <- in( B16 B19 ) Loop( B17-B19 ) Freq: 31.9996
0fd     movl    RCX, RAX	# spill
0ff     subl    RCX, R9	# int
102     addl    RCX, #-96	# int
105     cmpl    R11, R9
108     cmovll RCX, RBX	# signed, int
10b     cmpl    RCX, #128000	# unsigned
111     cmovla RCX, R8	# unsigned, int
115     addl    RCX, R9	# int
        nop 	# 8 bytes pad for loops and calls

120     B18: #	out( B18 B19 ) <- in( B17 B18 ) Loop( B18-B18 inner main of N141 strip mined) Freq: 1055.99
120     movslq  RBP, R9	# i2l
123     load_vector XMM1,[RDX + #16 + RBP]
129     vector_slice_const_origin XMM0, #31, XMM0, XMM1 	!using XMM5 as TEMP
135     store_vector [RSI + #16 + RBP],XMM0
	
13b     load_vector XMM0,[RDX + #48 + RBP]
141     vector_slice_const_origin XMM1, #31, XMM1, XMM0 	!using XMM2 as TEMP
14d     store_vector [RSI + #48 + RBP],XMM1
	
153     load_vector XMM1,[RDX + #80 + RBP]
159     vector_slice_const_origin XMM0, #31, XMM0, XMM1 	!using XMM4 as TEMP
165     store_vector [RSI + #80 + RBP],XMM0
	
16b     load_vector XMM0,[RDX + #112 + RBP]
171     vector_slice_const_origin XMM1, #31, XMM1, XMM0 	!using XMM3 as TEMP
17d     store_vector [RSI + #112 + RBP],XMM1
	
183     addl    R9, #128	# int
18a     cmpl    R9, RCX
18d     jl,s   B18	# loop end  P=0.969697 C=20480.000000

18f     B19: #	out( B17 B20 ) <- in( B18 )  Freq: 31.9996
18f     movq    RCX, [R15 + #48 (8-bit)]	# ptr
193     testl   rax, [RCX]	# Safepoint: poll for GC        # test_slice::micro2 @ bci:73 (line 39) L[0]=RSI L[1]=RDX L[2]=#ScObj0 L[3]=R9 L[4]=_ L[5]=_
        # ScObj0 jdk/incubator/vector/Byte256Vector={ [payload :0]=XMM0 }
        # OopMap {rdx=Oop rsi=Oop off=403/0x193}
195     cmpl    R9, R11
198     jl     B17  P=0.969697 C=20480.000000

19e     B20: #	out( B28 B21 ) <- in( B11 B19 )  Freq: 0.969684
19e     cmpl    R9, RAX
1a1     jge,s   B28  P=0.500000 C=-1.000000

1a3     B21: #	out( B35 B22 ) <- in( B20 )  Freq: 0.484842
1a3     cmpl    R9, RDI	# unsigned
1a6     jae,u   B35  P=0.000001 C=-1.000000

1ac     B22: #	out( B36 B23 ) <- in( B21 )  Freq: 0.484842
1ac     movl    R11, R9	# spill
1af     # castII of R11
1af     cmpl    R11, RDI	# unsigned
1b2     jae,u   B36  P=0.000001 C=-1.000000

1b8     B23: #	out( B37 B24 ) <- in( B22 )  Freq: 0.484841
1b8     cmpl    R9, R10	# unsigned
1bb     jae,u   B37  P=0.000001 C=-1.000000

1c1     B24: #	out( B38 B25 ) <- in( B23 )  Freq: 0.484841
1c1     cmpl    R11, R10	# unsigned
1c4     jae,u   B38  P=0.000001 C=-1.000000

1ca     B25: #	out( B26 ) <- in( B24 )  Freq: 0.48484
1ca     # castII of R9
        nop 	# 2 bytes pad for loops and calls

1cc     B26: #	out( B28 B27 ) <- in( B25 B27 ) Loop( B26-B27 inner post of N1453) Freq: 0.96968
1cc     movslq  R10, R9	# i2l
1cf     load_vector XMM1,[RDX + #16 + R10]
1d6     vector_slice_const_origin XMM0, #31, XMM0, XMM1 	!using XMM2 as TEMP
1e2     store_vector [RSI + #16 + R10],XMM0
	
1e9     addl    R9, #32	# int
1ed     cmpl    R9, RAX
1f0     jge,s   B28	# loop end  P=0.500000 C=20480.000000

1f2     B27: #	out( B26 ) <- in( B26 )  Freq: 0.48484
1f2     vmovdqu XMM0,XMM1	# spill
1f6     jmp,s   B26

1f8     B28: #	out( N1 ) <- in( B26 B20 B2 )  Freq: 0.999985
1f8     vzeroupper
	addq    rsp, 80	# Destroy frame
	popq    rbp
	cmpq    rsp, poll_offset[r15_thread] 
	ja      #safepoint_stub	# Safepoint: poll for GC

20a     ret

20b     B29: #	out( N1 ) <- in( B9 B3 B4 B5 B6 B7 B8 )  Freq: 6.85223e-06
20b     movq    RBP, RSI	# spill
20e     movq    [rsp + #0], RDX	# spill
212     movl    [rsp + #8], RAX	# spill
216     replicateI XMM0,#0
21a     vmovdqu [rsp + 32],XMM0	# spill
220     movl    RSI, #-146	# int
        nop 	# 3 bytes pad for loops and calls
228     call,static  wrapper for: uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')
        # test_slice::micro2 @ bci:21 (line 39) L[0]=RBP L[1]=rsp + #0 L[2]=#ScObj0 L[3]=#0 L[4]=_ L[5]=_ STK[0]=#0 STK[1]=rsp + #8
        # ScObj0 jdk/incubator/vector/Byte256Vector={ [payload :0]=rsp + #32 }
        # OopMap {rbp=Oop [0]=Oop off=560/0x230}
238     stop	# ShouldNotReachHere

24c     B30: #	out( N1 ) <- in( B10 )  Freq: 9.82566e-07
24c     movq    RBP, RSI	# spill
24f     movq    [rsp + #0], RDX	# spill
253     movl    [rsp + #8], RAX	# spill
257     replicateI XMM0,#0
25b     vmovdqu [rsp + 32],XMM0	# spill
261     movl    RSI, #-154	# int
        nop 	# 2 bytes pad for loops and calls
268     call,static  wrapper for: uncommon_trap(reason='loop_limit_check' action='maybe_recompile' debug_id='0')
        # test_slice::micro2 @ bci:21 (line 39) L[0]=RBP L[1]=rsp + #0 L[2]=#ScObj0 L[3]=#0 L[4]=_ L[5]=_ STK[0]=#0 STK[1]=rsp + #8
        # ScObj0 jdk/incubator/vector/Byte256Vector={ [payload :0]=rsp + #32 }
        # OopMap {rbp=Oop [0]=Oop off=624/0x270}
278     stop	# ShouldNotReachHere

28c     B31: #	out( N1 ) <- in( B12 )  Freq: 9.69687e-07
28c     stop	# ShouldNotReachHere

2a0     B32: #	out( N1 ) <- in( B13 )  Freq: 9.69686e-07
2a0     stop	# ShouldNotReachHere

2b4     B33: #	out( N1 ) <- in( B14 )  Freq: 9.69685e-07
2b4     stop	# ShouldNotReachHere

2c8     B34: #	out( N1 ) <- in( B15 )  Freq: 9.69684e-07
2c8     stop	# ShouldNotReachHere

2dc     B35: #	out( N1 ) <- in( B21 )  Freq: 4.9128e-07
2dc     stop	# ShouldNotReachHere

2f0     B36: #	out( N1 ) <- in( B22 )  Freq: 4.9128e-07
2f0     stop	# ShouldNotReachHere

304     B37: #	out( N1 ) <- in( B23 )  Freq: 4.91279e-07
304     stop	# ShouldNotReachHere

318     B38: #	out( N1 ) <- in( B24 )  Freq: 4.91279e-07
318     stop	# ShouldNotReachHere

32c     B39: #	out( N1 ) <- in( B1 )  Freq: 1.01328e-06
32c     movl    RSI, #-10	# int
        nop 	# 3 bytes pad for loops and calls
334     call,static  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # test_slice::micro2 @ bci:15 (line 39) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ STK[0]=_ STK[1]=_ STK[2]=#null
        # OopMap {off=828/0x33c}
344     stop	# ShouldNotReachHere

--------------------------------------------------------------------------------
----------------------------------- Assembly -----------------------------------

Compiled method (c2) 8963  575             test_slice::micro2 (77 bytes)
 total in heap  [0x00007a3310cdbe88,0x00007a3310cdc320] = 1176
 main code      [0x00007a3310cdbf80,0x00007a3310cdc2f8] = 888
 stub code      [0x00007a3310cdc2f8,0x00007a3310cdc310] = 24
 oops           [0x00007a3310cdc310,0x00007a3310cdc320] = 16
 mutable data [0x00007a32c066f430,0x00007a32c066f5d0] = 416
 relocation     [0x00007a32c066f430,0x00007a32c066f4c0] = 144
 metadata       [0x00007a32c066f4c0,0x00007a32c066f5d0] = 272
 immutable data [0x00007a32c066f120,0x00007a32c066f410] = 752
 dependencies   [0x00007a32c066f120,0x00007a32c066f168] = 72
 nul chk table  [0x00007a32c066f168,0x00007a32c066f180] = 24
 scopes pcs     [0x00007a32c066f180,0x00007a32c066f340] = 448
 scopes data    [0x00007a32c066f340,0x00007a32c066f410] = 208

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x00007a32d8401c40} 'micro2' '([B[B)V' in 'test_slice'
  # parm0:    rsi:rsi   = '[B'
  # parm1:    rdx:rdx   = '[B'
  #           [sp+0x60]  (sp of caller)
 ;; N1: #	out( B1 ) <- in( B34 B31 B39 B32 B29 B38 B35 B30 B36 B33 B28 B37 )  Freq: 1
 ;; B1: #	out( B39 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x00007a3310cdbf80:   mov    %eax,-0x18000(%rsp)
  0x00007a3310cdbf87:   push   %rbp
  0x00007a3310cdbf88:   sub    $0x50,%rsp
  0x00007a3310cdbf8c:   cmpl   $0x0,0x20(%r15)
  0x00007a3310cdbf94:   jne    0x00007a3310cdc2ee           ;*synchronization entry
                                                            ; - test_slice::micro2@-1 (line 38)
  0x00007a3310cdbf9a:   mov    0xc(%rdx),%r10d              ; implicit exception: dispatches to 0x00007a3310cdc2ac
 ;; B2: #	out( B28 B3 ) <- in( B1 )  Freq: 0.999999
  0x00007a3310cdbf9e:   mov    %r10d,%eax
  0x00007a3310cdbfa1:   and    $0xffffffe0,%eax
  0x00007a3310cdbfa4:   jle    0x00007a3310cdc178
 ;; B3: #	out( B29 B4 ) <- in( B2 )  Freq: 0.969696
  0x00007a3310cdbfaa:   lea    -0x1f(%r10),%edi
  0x00007a3310cdbfae:   test   %edi,%edi
  0x00007a3310cdbfb0:   jl     0x00007a3310cdc18b
 ;; B4: #	out( B29 B5 ) <- in( B3 )  Freq: 0.969695
  0x00007a3310cdbfb6:   cmp    $0x1f,%r10d
  0x00007a3310cdbfba:   je     0x00007a3310cdc18b
 ;; B5: #	out( B29 B6 ) <- in( B4 )  Freq: 0.969694
  0x00007a3310cdbfc0:   movslq %r10d,%r10
  0x00007a3310cdbfc3:   movslq %eax,%r11
  0x00007a3310cdbfc6:   add    $0xffffffffffffffe1,%r10
  0x00007a3310cdbfca:   add    $0x1f,%r11
  0x00007a3310cdbfce:   and    $0xffffffffffffffe0,%r11
  0x00007a3310cdbfd2:   mov    %r11d,%r11d
  0x00007a3310cdbfd5:   movslq %r11d,%r11
  0x00007a3310cdbfd8:   add    $0xffffffffffffffe0,%r11
  0x00007a3310cdbfdc:   cmp    %r10,%r11
  0x00007a3310cdbfdf:   jae    0x00007a3310cdc18b
 ;; B6: #	out( B29 B7 ) <- in( B5 )  Freq: 0.969693
  0x00007a3310cdbfe5:   mov    0xc(%rsi),%r9d               ; implicit exception: dispatches to 0x00007a3310cdc18b
 ;; B7: #	out( B29 B8 ) <- in( B6 )  Freq: 0.969692
  0x00007a3310cdbfe9:   lea    -0x1f(%r9),%r10d
  0x00007a3310cdbfed:   test   %r10d,%r10d
  0x00007a3310cdbff0:   jl     0x00007a3310cdc18b
 ;; B8: #	out( B29 B9 ) <- in( B7 )  Freq: 0.969691
  0x00007a3310cdbff6:   cmp    $0x1f,%r9d
  0x00007a3310cdbffa:   je     0x00007a3310cdc18b
 ;; B9: #	out( B29 B10 ) <- in( B8 )  Freq: 0.96969
  0x00007a3310cdc000:   movslq %r9d,%r8
  0x00007a3310cdc003:   add    $0xffffffffffffffe1,%r8
  0x00007a3310cdc007:   cmp    %r8,%r11
  0x00007a3310cdc00a:   jae    0x00007a3310cdc18b
 ;; B10: #	out( B30 B11 ) <- in( B9 )  Freq: 0.969689
  0x00007a3310cdc010:   cmp    $0x7fffffe0,%eax
  0x00007a3310cdc015:   jg     0x00007a3310cdc1cc           ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
                                                            ; - test_slice::micro2@56 (line 42)
 ;; B11: #	out( B20 B12 ) <- in( B10 )  Freq: 0.969688
  0x00007a3310cdc01b:   vmovdqu 0x10(%rdx),%ymm0            ;*invokestatic load {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::fromArray0Template@33 (line 3856)
                                                            ; - jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 1020)
                                                            ; - jdk.incubator.vector.ByteVector::fromArray@24 (line 3043)
                                                            ; - test_slice::micro2@29 (line 40)
  0x00007a3310cdc020:   lea    -0x60(%rax),%r11d
  0x00007a3310cdc024:   mov    $0x20,%r9d                   ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
                                                            ; - test_slice::micro2@56 (line 42)
  0x00007a3310cdc02a:   vpxor  %xmm2,%xmm2,%xmm2            ;*invokestatic fromBitsCoerced {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector$ByteSpecies::broadcastBits@19 (line 4290)
                                                            ; - jdk.incubator.vector.ByteVector$ByteSpecies::broadcast@6 (line 4305)
                                                            ; - jdk.incubator.vector.ByteVector::broadcast@7 (line 668)
                                                            ; - test_slice::micro2@4 (line 38)
  0x00007a3310cdc02e:   vperm2i128 $0x21,%ymm0,%ymm2,%ymm1
  0x00007a3310cdc034:   vpalignr $0xf,%ymm1,%ymm0,%ymm1
  0x00007a3310cdc03a:   vmovdqu %ymm1,0x10(%rsi)
  0x00007a3310cdc03f:   cmp    $0x20,%r11d
  0x00007a3310cdc043:   jle    0x00007a3310cdc11e
 ;; B12: #	out( B31 B13 ) <- in( B11 )  Freq: 0.969687
  0x00007a3310cdc049:   cmp    $0x20,%edi
  0x00007a3310cdc04c:   jbe    0x00007a3310cdc20c
 ;; B13: #	out( B32 B14 ) <- in( B12 )  Freq: 0.969686
  0x00007a3310cdc052:   cmp    $0x80,%edi
  0x00007a3310cdc058:   jbe    0x00007a3310cdc220
 ;; B14: #	out( B33 B15 ) <- in( B13 )  Freq: 0.969685
  0x00007a3310cdc05e:   cmp    $0x20,%r10d
  0x00007a3310cdc062:   jbe    0x00007a3310cdc234
 ;; B15: #	out( B34 B16 ) <- in( B14 )  Freq: 0.969684
  0x00007a3310cdc068:   cmp    $0x80,%r10d
  0x00007a3310cdc06f:   jbe    0x00007a3310cdc248
 ;; B16: #	out( B17 ) <- in( B15 )  Freq: 0.969683
  0x00007a3310cdc075:   mov    $0x1f400,%r8d
  0x00007a3310cdc07b:   xor    %ebx,%ebx
 ;; B17: #	out( B18 ) <- in( B16 B19 ) Loop( B17-B19 ) Freq: 31.9996
  0x00007a3310cdc07d:   mov    %eax,%ecx
  0x00007a3310cdc07f:   sub    %r9d,%ecx                    ;   {other}
  0x00007a3310cdc082:   add    $0xffffffa0,%ecx
  0x00007a3310cdc085:   cmp    %r9d,%r11d
  0x00007a3310cdc088:   cmovl  %ebx,%ecx
  0x00007a3310cdc08b:   cmp    $0x1f400,%ecx
  0x00007a3310cdc091:   cmova  %r8d,%ecx
  0x00007a3310cdc095:   add    %r9d,%ecx
  0x00007a3310cdc098:   nop
  0x00007a3310cdc099:   nop
  0x00007a3310cdc09a:   nop
  0x00007a3310cdc09b:   nop
  0x00007a3310cdc09c:   nop
  0x00007a3310cdc09d:   nop
  0x00007a3310cdc09e:   nop
  0x00007a3310cdc09f:   nop
 ;; B18: #	out( B18 B19 ) <- in( B17 B18 ) Loop( B18-B18 inner main of N141 strip mined) Freq: 1055.99
  0x00007a3310cdc0a0:   movslq %r9d,%rbp
  0x00007a3310cdc0a3:   vmovdqu 0x10(%rdx,%rbp,1),%ymm1
  0x00007a3310cdc0a9:   vperm2i128 $0x21,%ymm1,%ymm0,%ymm5
  0x00007a3310cdc0af:   vpalignr $0xf,%ymm5,%ymm1,%ymm0
  0x00007a3310cdc0b5:   vmovdqu %ymm0,0x10(%rsi,%rbp,1)     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
                                                            ; - test_slice::micro2@56 (line 42)
  0x00007a3310cdc0bb:   vmovdqu 0x30(%rdx,%rbp,1),%ymm0     ;*invokestatic load {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::fromArray0Template@33 (line 3856)
                                                            ; - jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 1020)
                                                            ; - jdk.incubator.vector.ByteVector::fromArray@24 (line 3043)
                                                            ; - test_slice::micro2@29 (line 40)
  0x00007a3310cdc0c1:   vperm2i128 $0x21,%ymm0,%ymm1,%ymm2
  0x00007a3310cdc0c7:   vpalignr $0xf,%ymm2,%ymm0,%ymm1
  0x00007a3310cdc0cd:   vmovdqu %ymm1,0x30(%rsi,%rbp,1)     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
                                                            ; - test_slice::micro2@56 (line 42)
  0x00007a3310cdc0d3:   vmovdqu 0x50(%rdx,%rbp,1),%ymm1     ;*invokestatic load {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::fromArray0Template@33 (line 3856)
                                                            ; - jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 1020)
                                                            ; - jdk.incubator.vector.ByteVector::fromArray@24 (line 3043)
                                                            ; - test_slice::micro2@29 (line 40)
  0x00007a3310cdc0d9:   vperm2i128 $0x21,%ymm1,%ymm0,%ymm4
  0x00007a3310cdc0df:   vpalignr $0xf,%ymm4,%ymm1,%ymm0
  0x00007a3310cdc0e5:   vmovdqu %ymm0,0x50(%rsi,%rbp,1)     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
                                                            ; - test_slice::micro2@56 (line 42)
  0x00007a3310cdc0eb:   vmovdqu 0x70(%rdx,%rbp,1),%ymm0     ;*invokestatic load {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::fromArray0Template@33 (line 3856)
                                                            ; - jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 1020)
                                                            ; - jdk.incubator.vector.ByteVector::fromArray@24 (line 3043)
                                                            ; - test_slice::micro2@29 (line 40)
  0x00007a3310cdc0f1:   vperm2i128 $0x21,%ymm0,%ymm1,%ymm3
  0x00007a3310cdc0f7:   vpalignr $0xf,%ymm3,%ymm0,%ymm1
  0x00007a3310cdc0fd:   vmovdqu %ymm1,0x70(%rsi,%rbp,1)     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
                                                            ; - test_slice::micro2@56 (line 42)
  0x00007a3310cdc103:   add    $0x80,%r9d
  0x00007a3310cdc10a:   cmp    %ecx,%r9d
  0x00007a3310cdc10d:   jl     0x00007a3310cdc0a0
 ;; B19: #	out( B17 B20 ) <- in( B18 )  Freq: 31.9996
  0x00007a3310cdc10f:   mov    0x30(%r15),%rcx              ; ImmutableOopMap {rdx=Oop rsi=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) test_slice::micro2@73 (line 39)
  0x00007a3310cdc113:   test   %eax,(%rcx)                  ;   {poll}
  0x00007a3310cdc115:   cmp    %r11d,%r9d
  0x00007a3310cdc118:   jl     0x00007a3310cdc07d
 ;; B20: #	out( B28 B21 ) <- in( B11 B19 )  Freq: 0.969684
  0x00007a3310cdc11e:   cmp    %eax,%r9d
  0x00007a3310cdc121:   jge    0x00007a3310cdc178
 ;; B21: #	out( B35 B22 ) <- in( B20 )  Freq: 0.484842
  0x00007a3310cdc123:   cmp    %edi,%r9d
  0x00007a3310cdc126:   jae    0x00007a3310cdc25c
 ;; B22: #	out( B36 B23 ) <- in( B21 )  Freq: 0.484842
  0x00007a3310cdc12c:   mov    %r9d,%r11d
  0x00007a3310cdc12f:   cmp    %edi,%r11d
  0x00007a3310cdc132:   jae    0x00007a3310cdc270
 ;; B23: #	out( B37 B24 ) <- in( B22 )  Freq: 0.484841
  0x00007a3310cdc138:   cmp    %r10d,%r9d
  0x00007a3310cdc13b:   jae    0x00007a3310cdc284
 ;; B24: #	out( B38 B25 ) <- in( B23 )  Freq: 0.484841
  0x00007a3310cdc141:   cmp    %r10d,%r11d
  0x00007a3310cdc144:   jae    0x00007a3310cdc298
 ;; B25: #	out( B26 ) <- in( B24 )  Freq: 0.48484
  0x00007a3310cdc14a:   nop
  0x00007a3310cdc14b:   nop                                 ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
                                                            ; - test_slice::micro2@56 (line 42)
 ;; B26: #	out( B28 B27 ) <- in( B25 B27 ) Loop( B26-B27 inner post of N1453) Freq: 0.96968
  0x00007a3310cdc14c:   movslq %r9d,%r10                    ;*i2l {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::arrayAddress@4 (line 4118)
                                                            ; - jdk.incubator.vector.ByteVector::fromArray0Template@20 (line 3858)
                                                            ; - jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 1020)
                                                            ; - jdk.incubator.vector.ByteVector::fromArray@24 (line 3043)
                                                            ; - test_slice::micro2@29 (line 40)
  0x00007a3310cdc14f:   vmovdqu 0x10(%rdx,%r10,1),%ymm1
  0x00007a3310cdc156:   vperm2i128 $0x21,%ymm1,%ymm0,%ymm2
  0x00007a3310cdc15c:   vpalignr $0xf,%ymm2,%ymm1,%ymm0
  0x00007a3310cdc162:   vmovdqu %ymm0,0x10(%rsi,%r10,1)
  0x00007a3310cdc169:   add    $0x20,%r9d
  0x00007a3310cdc16d:   cmp    %eax,%r9d
  0x00007a3310cdc170:   jge    0x00007a3310cdc178
 ;; B27: #	out( B26 ) <- in( B26 )  Freq: 0.48484
  0x00007a3310cdc172:   vmovdqu %ymm1,%ymm0
  0x00007a3310cdc176:   jmp    0x00007a3310cdc14c
 ;; B28: #	out( N1 ) <- in( B26 B20 B2 )  Freq: 0.999985
  0x00007a3310cdc178:   vzeroupper 
  0x00007a3310cdc17b:   add    $0x50,%rsp
  0x00007a3310cdc17f:   pop    %rbp
  0x00007a3310cdc180:   cmp    0x28(%r15),%rsp              ;   {poll_return}
  0x00007a3310cdc184:   ja     0x00007a3310cdc2d8
  0x00007a3310cdc18a:   ret    
 ;; B29: #	out( N1 ) <- in( B9 B3 B4 B5 B6 B7 B8 )  Freq: 6.85223e-06
  0x00007a3310cdc18b:   mov    %rsi,%rbp
  0x00007a3310cdc18e:   mov    %rdx,(%rsp)
  0x00007a3310cdc192:   mov    %eax,0x8(%rsp)               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
                                                            ; - test_slice::micro2@56 (line 42)
  0x00007a3310cdc196:   vpxor  %xmm0,%xmm0,%xmm0            ;*invokestatic fromBitsCoerced {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector$ByteSpecies::broadcastBits@19 (line 4290)
                                                            ; - jdk.incubator.vector.ByteVector$ByteSpecies::broadcast@6 (line 4305)
                                                            ; - jdk.incubator.vector.ByteVector::broadcast@7 (line 668)
                                                            ; - test_slice::micro2@4 (line 38)
  0x00007a3310cdc19a:   vmovdqu %ymm0,0x20(%rsp)            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
                                                            ; - test_slice::micro2@56 (line 42)
  0x00007a3310cdc1a0:   mov    $0xffffff6e,%esi
  0x00007a3310cdc1a5:   nop
  0x00007a3310cdc1a6:   nop
  0x00007a3310cdc1a7:   nop
  0x00007a3310cdc1a8:   vzeroupper 
  0x00007a3310cdc1ab:   call   0x00007a3310c15be0           ; ImmutableOopMap {rbp=Oop [0]=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) test_slice::micro2@21 (line 39)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007a3310cdc1b0:   nopl   0x1000328(%rax,%rax,1)       ;   {post_call_nop}
  0x00007a3310cdc1b8:   movabs $0x7a32c0752e30,%rdi         ;   {external_word}
  0x00007a3310cdc1c2:   and    $0xfffffffffffffff0,%rsp
  0x00007a3310cdc1c6:   call   0x00007a3315235a22           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007a3310cdc1cb:   hlt    
 ;; B30: #	out( N1 ) <- in( B10 )  Freq: 9.82566e-07
  0x00007a3310cdc1cc:   mov    %rsi,%rbp
  0x00007a3310cdc1cf:   mov    %rdx,(%rsp)
  0x00007a3310cdc1d3:   mov    %eax,0x8(%rsp)               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
                                                            ; - test_slice::micro2@56 (line 42)
  0x00007a3310cdc1d7:   vpxor  %xmm0,%xmm0,%xmm0            ;*invokestatic fromBitsCoerced {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector$ByteSpecies::broadcastBits@19 (line 4290)
                                                            ; - jdk.incubator.vector.ByteVector$ByteSpecies::broadcast@6 (line 4305)
                                                            ; - jdk.incubator.vector.ByteVector::broadcast@7 (line 668)
                                                            ; - test_slice::micro2@4 (line 38)
  0x00007a3310cdc1db:   vmovdqu %ymm0,0x20(%rsp)            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
                                                            ; - test_slice::micro2@56 (line 42)
  0x00007a3310cdc1e1:   mov    $0xffffff66,%esi
  0x00007a3310cdc1e6:   nop
  0x00007a3310cdc1e7:   nop
  0x00007a3310cdc1e8:   vzeroupper 
  0x00007a3310cdc1eb:   call   0x00007a3310c15be0           ; ImmutableOopMap {rbp=Oop [0]=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) test_slice::micro2@21 (line 39)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007a3310cdc1f0:   nopl   0x2000368(%rax,%rax,1)       ;   {post_call_nop}
  0x00007a3310cdc1f8:   movabs $0x7a32c0752e30,%rdi         ;   {external_word}
  0x00007a3310cdc202:   and    $0xfffffffffffffff0,%rsp
  0x00007a3310cdc206:   call   0x00007a3315235a22           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007a3310cdc20b:   hlt    
 ;; B31: #	out( N1 ) <- in( B12 )  Freq: 9.69687e-07
  0x00007a3310cdc20c:   movabs $0x7a32c0752fe0,%rdi         ;   {external_word}
  0x00007a3310cdc216:   and    $0xfffffffffffffff0,%rsp
  0x00007a3310cdc21a:   call   0x00007a3315235a22           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007a3310cdc21f:   hlt    
 ;; B32: #	out( N1 ) <- in( B13 )  Freq: 9.69686e-07
  0x00007a3310cdc220:   movabs $0x7a32c0752fe0,%rdi         ;   {external_word}
  0x00007a3310cdc22a:   and    $0xfffffffffffffff0,%rsp
  0x00007a3310cdc22e:   call   0x00007a3315235a22           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007a3310cdc233:   hlt    
 ;; B33: #	out( N1 ) <- in( B14 )  Freq: 9.69685e-07
  0x00007a3310cdc234:   movabs $0x7a32c0752fe0,%rdi         ;   {external_word}
  0x00007a3310cdc23e:   and    $0xfffffffffffffff0,%rsp
  0x00007a3310cdc242:   call   0x00007a3315235a22           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007a3310cdc247:   hlt    
 ;; B34: #	out( N1 ) <- in( B15 )  Freq: 9.69684e-07
  0x00007a3310cdc248:   movabs $0x7a32c0752fe0,%rdi         ;   {external_word}
  0x00007a3310cdc252:   and    $0xfffffffffffffff0,%rsp
  0x00007a3310cdc256:   call   0x00007a3315235a22           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007a3310cdc25b:   hlt    
 ;; B35: #	out( N1 ) <- in( B21 )  Freq: 4.9128e-07
  0x00007a3310cdc25c:   movabs $0x7a32c0752fe0,%rdi         ;   {external_word}
  0x00007a3310cdc266:   and    $0xfffffffffffffff0,%rsp
  0x00007a3310cdc26a:   call   0x00007a3315235a22           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007a3310cdc26f:   hlt    
 ;; B36: #	out( N1 ) <- in( B22 )  Freq: 4.9128e-07
  0x00007a3310cdc270:   movabs $0x7a32c0752fe0,%rdi         ;   {external_word}
  0x00007a3310cdc27a:   and    $0xfffffffffffffff0,%rsp
  0x00007a3310cdc27e:   call   0x00007a3315235a22           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007a3310cdc283:   hlt    
 ;; B37: #	out( N1 ) <- in( B23 )  Freq: 4.91279e-07
  0x00007a3310cdc284:   movabs $0x7a32c0752fe0,%rdi         ;   {external_word}
  0x00007a3310cdc28e:   and    $0xfffffffffffffff0,%rsp
  0x00007a3310cdc292:   call   0x00007a3315235a22           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007a3310cdc297:   hlt    
 ;; B38: #	out( N1 ) <- in( B24 )  Freq: 4.91279e-07
  0x00007a3310cdc298:   movabs $0x7a32c0752fe0,%rdi         ;   {external_word}
  0x00007a3310cdc2a2:   and    $0xfffffffffffffff0,%rsp
  0x00007a3310cdc2a6:   call   0x00007a3315235a22           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007a3310cdc2ab:   hlt    
 ;; B39: #	out( N1 ) <- in( B1 )  Freq: 1.01328e-06
  0x00007a3310cdc2ac:   mov    $0xfffffff6,%esi             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
                                                            ; - test_slice::micro2@56 (line 42)
  0x00007a3310cdc2b1:   nop
  0x00007a3310cdc2b2:   nop
  0x00007a3310cdc2b3:   nop
  0x00007a3310cdc2b4:   vzeroupper 
  0x00007a3310cdc2b7:   call   0x00007a3310c15be0           ; ImmutableOopMap {}
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test_slice::micro2@15 (line 39)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007a3310cdc2bc:   nopl   0x3000434(%rax,%rax,1)       ;   {post_call_nop}
  0x00007a3310cdc2c4:   movabs $0x7a32c0752e30,%rdi         ;   {external_word}
  0x00007a3310cdc2ce:   and    $0xfffffffffffffff0,%rsp
  0x00007a3310cdc2d2:   call   0x00007a3315235a22           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007a3310cdc2d7:   hlt                                 ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
                                                            ; - test_slice::micro2@56 (line 42)
  0x00007a3310cdc2d8:   movabs $0x7a3310cdc180,%r10         ;   {internal_word}
  0x00007a3310cdc2e2:   mov    %r10,0x5a8(%r15)
  0x00007a3310cdc2e9:   jmp    0x00007a3310c82c60           ;   {runtime_call SafepointBlob}
  0x00007a3310cdc2ee:   call   Stub::Stub Generator method_entry_barrier_stub
                                                            ;   {runtime_call Stub::Stub Generator method_entry_barrier_stub}
  0x00007a3310cdc2f3:   jmp    0x00007a3310cdbf9a
[Exception Handler]
  0x00007a3310cdc2f8:   jmp    0x00007a3310c158e0           ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x00007a3310cdc2fd:   call   0x00007a3310cdc302
  0x00007a3310cdc302:   subq   $0x5,(%rsp)
  0x00007a3310cdc307:   jmp    0x00007a3310c82f80           ;   {runtime_call DeoptimizationBlob}
  0x00007a3310cdc30c:   hlt    
  0x00007a3310cdc30d:   hlt    
  0x00007a3310cdc30e:   hlt    
  0x00007a3310cdc30f:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Oops:
  0x00007a3310cdc310:   0x00000000c8e66488 a 'java/lang/Class'{0x00000000c8e66488} = 'jdk/incubator/vector/Byte256Vector'
  0x00007a3310cdc318:   0x00000000c8f114a8 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x00000000c8f114a8}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Metadata:
  0x00007a32c066f4c0:   0x00007a32d8401c40 {method} {0x00007a32d8401c40} 'micro2' '([B[B)V' in 'test_slice'
  0x00007a32c066f4c8:   0x00007a32d8051418 {method} {0x00007a32d8051418} 'intoArray' '([BI)V' in 'jdk/incubator/vector/ByteVector'
  0x00007a32c066f4d0:   0x00007a32d8050590 {method} {0x00007a32d8050590} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[BI)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector'
  0x00007a32c066f4d8:   0x00007a32d8119520 {method} {0x00007a32d8119520} 'fromArray0' '([BI)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/Byte256Vector'
  0x00007a32c066f4e0:   0x00007a32d8052158 {method} {0x00007a32d8052158} 'fromArray0Template' '([BI)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector'
  0x00007a32c066f4e8:   0x00007a32d8047ab8 {method} {0x00007a32d8047ab8} 'broadcast' '(Ljdk/incubator/vector/VectorSpecies;J)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector'
  0x00007a32c066f4f0:   0x00007a32d80ce3c0 {method} {0x00007a32d80ce3c0} 'broadcast' '(J)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector$ByteSpecies'
  0x00007a32c066f4f8:   0x00007a32d80ce1e8 {method} {0x00007a32d80ce1e8} 'broadcastBits' '(J)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector$ByteSpecies'
  0x00007a32c066f500:   0x00007a32d8053b50 {method} {0x00007a32d8053b50} 'arrayAddress' '([BI)J' in 'jdk/incubator/vector/ByteVector'
  0x00007a32c066f508:   0x00007a32d80ce4c8 {method} {0x00007a32d80ce4c8} 'longToElementBits' '(J)J' in 'jdk/incubator/vector/ByteVector$ByteSpecies'
  0x00007a32c066f510:   0x00007a32d8046f68 {method} {0x00007a32d8046f68} 'toBits' '(B)J' in 'jdk/incubator/vector/ByteVector'
  0x00007a32c066f518:   0x000000000726b820 {method} {0x000000000726b820} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder'
  0x00007a32c066f520:   0x0000000007272eb0 {method} {0x0000000007272eb0} 'constant_L' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$Holder'
  0x00007a32c066f528:   0x00007a32d80d52d0 {method} {0x00007a32d80d52d0} 'loopBound' '(I)I' in 'jdk/incubator/vector/AbstractSpecies'
  0x00007a32c066f530:   0x00007a32d81cf5d0 {method} {0x00007a32d81cf5d0} 'roundDown' '(II)I' in 'jdk/incubator/vector/VectorIntrinsics'
  0x00007a32c066f538:   0x00007a32d81cf158 {method} {0x00007a32d81cf158} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
  0x00007a32c066f540:   0x00007a32d80cea60 {method} {0x00007a32d80cea60} 'dummyVector' '()Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector$ByteSpecies'
  0x00007a32c066f548:   0x00007a32d80d46b0 {method} {0x00007a32d80d46b0} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
  0x00007a32c066f550:   0x000000000727f4e8 {method} {0x000000000727f4e8} 'checkIndex' '(II)I' in 'java/util/Objects'
  0x00007a32c066f558:   0x00007a32d80d6070 {method} {0x00007a32d80d6070} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
  0x00007a32c066f560:   0x00007a32d80ce000 {method} {0x00007a32d80ce000} 'vectorType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/ByteVector$ByteSpecies'
  0x00007a32c066f568:   0x00007a32d80cde48 {method} {0x00007a32d80cde48} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/ByteVector$ByteSpecies'
  0x00007a32c066f570:   0x00007a32d80d4788 {method} {0x00007a32d80d4788} 'laneCount' '()I' in 'jdk/incubator/vector/AbstractSpecies'
  0x00007a32c066f578:   0x00007a32d81151c8 {method} {0x00007a32d81151c8} 'vspecies' '()Ljdk/incubator/vector/ByteVector$ByteSpecies;' in 'jdk/incubator/vector/Byte256Vector'
  0x00007a32c066f580:   0x00007a32d811ac18 {method} {0x00007a32d811ac18} 'slice' '(ILjdk/incubator/vector/Vector;)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/Byte256Vector'
  0x00007a32c066f588:   0x00007a32d81180a0 {method} {0x00007a32d81180a0} 'slice' '(ILjdk/incubator/vector/Vector;)Ljdk/incubator/vector/Byte256Vector;' in 'jdk/incubator/vector/Byte256Vector'
  0x00007a32c066f590:   0x00007a32d804d738 {method} {0x00007a32d804d738} 'sliceTemplate' '(ILjdk/incubator/vector/Vector;)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector'
  0x00007a32c066f598:   0x00007a32d8061b30 {method} {0x00007a32d8061b30} 'check' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractVector'
  0x00007a32c066f5a0:   0x00007a32d8061c68 {method} {0x00007a32d8061c68} 'sameSpecies' '(Ljdk/incubator/vector/Vector;)Z' in 'jdk/incubator/vector/AbstractVector'
  0x00007a32c066f5a8:   0x00007a32d8115528 {method} {0x00007a32d8115528} 'length' '()I' in 'jdk/incubator/vector/Byte256Vector'
  0x00007a32c066f5b0:   0x0000000008004dd8 'jdk/incubator/vector/ByteVector$ByteSpecies'
  0x00007a32c066f5b8:   0x00007a32d80d3d98 'jdk/incubator/vector/VectorSpecies'
  0x00007a32c066f5c0:   0x00007a32d80d2b28 {method} {0x00007a32d80d2b28} 'loopBound' '(I)I' in 'jdk/incubator/vector/VectorSpecies'
  0x00007a32c066f5c8:   0x00007a32d80d2930 {method} {0x00007a32d80d2930} 'length' '()I' in 'jdk/incubator/vector/VectorSpecies'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
pc-bytecode offsets:
PcDesc(pc=0x00007a3310cdbf7f offset=ffffffff bits=0):
PcDesc(pc=0x00007a3310cdbf9a offset=1a bits=0):
   test_slice::micro2@-1 (line 38)
PcDesc(pc=0x00007a3310cdc01b offset=9b bits=0):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
   test_slice::micro2@56 (line 42)
PcDesc(pc=0x00007a3310cdc020 offset=a0 bits=0):
   jdk.incubator.vector.ByteVector::fromArray0Template@33 (line 3856)
   jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 1020)
   jdk.incubator.vector.ByteVector::fromArray@24 (line 3043)
   test_slice::micro2@29 (line 40)
PcDesc(pc=0x00007a3310cdc02a offset=aa bits=0):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
   test_slice::micro2@56 (line 42)
PcDesc(pc=0x00007a3310cdc02e offset=ae bits=0):
   jdk.incubator.vector.ByteVector$ByteSpecies::broadcastBits@19 (line 4290)
   jdk.incubator.vector.ByteVector$ByteSpecies::broadcast@6 (line 4305)
   jdk.incubator.vector.ByteVector::broadcast@7 (line 668)
   test_slice::micro2@4 (line 38)
PcDesc(pc=0x00007a3310cdc0bb offset=13b bits=0):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
   test_slice::micro2@56 (line 42)
PcDesc(pc=0x00007a3310cdc0c1 offset=141 bits=0):
   jdk.incubator.vector.ByteVector::fromArray0Template@33 (line 3856)
   jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 1020)
   jdk.incubator.vector.ByteVector::fromArray@24 (line 3043)
   test_slice::micro2@29 (line 40)
PcDesc(pc=0x00007a3310cdc0d3 offset=153 bits=0):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
   test_slice::micro2@56 (line 42)
PcDesc(pc=0x00007a3310cdc0d9 offset=159 bits=0):
   jdk.incubator.vector.ByteVector::fromArray0Template@33 (line 3856)
   jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 1020)
   jdk.incubator.vector.ByteVector::fromArray@24 (line 3043)
   test_slice::micro2@29 (line 40)
PcDesc(pc=0x00007a3310cdc0eb offset=16b bits=0):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
   test_slice::micro2@56 (line 42)
PcDesc(pc=0x00007a3310cdc0f1 offset=171 bits=0):
   jdk.incubator.vector.ByteVector::fromArray0Template@33 (line 3856)
   jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 1020)
   jdk.incubator.vector.ByteVector::fromArray@24 (line 3043)
   test_slice::micro2@29 (line 40)
PcDesc(pc=0x00007a3310cdc103 offset=183 bits=0):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
   test_slice::micro2@56 (line 42)
PcDesc(pc=0x00007a3310cdc113 offset=193 bits=1):
   test_slice::micro2@73 (line 39)  reexecute=true
   Locals
    - l0: reg rsi [12],oop
    - l1: reg rdx [4],oop
    - l2: obj[186]
    - l3: reg r9 [18],int
    - l4: empty
    - l5: empty
   Objects
    - 0: R obj[186], jdk.incubator.vector.Byte256Vector
        Fields: reg xmm0 [80],vector
PcDesc(pc=0x00007a3310cdc14c offset=1cc bits=0):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
   test_slice::micro2@56 (line 42)
PcDesc(pc=0x00007a3310cdc14f offset=1cf bits=0):
   jdk.incubator.vector.ByteVector::arrayAddress@4 (line 4118)
   jdk.incubator.vector.ByteVector::fromArray0Template@20 (line 3858)
   jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 1020)
   jdk.incubator.vector.ByteVector::fromArray@24 (line 3043)
   test_slice::micro2@29 (line 40)
PcDesc(pc=0x00007a3310cdc196 offset=216 bits=0):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
   test_slice::micro2@56 (line 42)
PcDesc(pc=0x00007a3310cdc19a offset=21a bits=0):
   jdk.incubator.vector.ByteVector$ByteSpecies::broadcastBits@19 (line 4290)
   jdk.incubator.vector.ByteVector$ByteSpecies::broadcast@6 (line 4305)
   jdk.incubator.vector.ByteVector::broadcast@7 (line 668)
   test_slice::micro2@4 (line 38)
PcDesc(pc=0x00007a3310cdc1a0 offset=220 bits=0):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
   test_slice::micro2@56 (line 42)
PcDesc(pc=0x00007a3310cdc1b0 offset=230 bits=1):
   test_slice::micro2@21 (line 39)  reexecute=true
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: obj[107]
    - l3: 0
    - l4: empty
    - l5: empty
   Expression stack
    - @0: 0
    - @1: stack[8]
   Objects
    - 0: R obj[107], jdk.incubator.vector.Byte256Vector
        Fields: stack[32],vector
PcDesc(pc=0x00007a3310cdc1d7 offset=257 bits=0):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
   test_slice::micro2@56 (line 42)
PcDesc(pc=0x00007a3310cdc1db offset=25b bits=0):
   jdk.incubator.vector.ByteVector$ByteSpecies::broadcastBits@19 (line 4290)
   jdk.incubator.vector.ByteVector$ByteSpecies::broadcast@6 (line 4305)
   jdk.incubator.vector.ByteVector::broadcast@7 (line 668)
   test_slice::micro2@4 (line 38)
PcDesc(pc=0x00007a3310cdc1e1 offset=261 bits=0):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
   test_slice::micro2@56 (line 42)
PcDesc(pc=0x00007a3310cdc1f0 offset=270 bits=1):
   test_slice::micro2@21 (line 39)  reexecute=true
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: obj[199]
    - l3: 0
    - l4: empty
    - l5: empty
   Expression stack
    - @0: 0
    - @1: stack[8]
   Objects
    - 0: R obj[199], jdk.incubator.vector.Byte256Vector
        Fields: stack[32],vector
PcDesc(pc=0x00007a3310cdc2b1 offset=331 bits=0):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
   test_slice::micro2@56 (line 42)
PcDesc(pc=0x00007a3310cdc2bc offset=33c bits=0):
   test_slice::micro2@15 (line 39)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
   Expression stack
    - @0: empty
    - @1: empty
    - @2: null
PcDesc(pc=0x00007a3310cdc2d8 offset=358 bits=0):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
   test_slice::micro2@56 (line 42)
PcDesc(pc=0x00007a3310cdc311 offset=391 bits=0):
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
oop maps:ImmutableOopMapSet contains 4 OopMaps

ImmutableOopMap {rdx=Oop rsi=Oop } pc offsets: 403 
ImmutableOopMap {rbp=Oop [0]=Oop } pc offsets: 560 624 
ImmutableOopMap {} pc offsets: 828 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
scopes:
ScopeDesc(pc=0x00007a3310cdbf9a offset=1a):
   test_slice::micro2@-1 (line 38)
ScopeDesc(pc=0x00007a3310cdc01b offset=9b):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
ScopeDesc(pc=0x00007a3310cdc01b offset=9b):
   test_slice::micro2@56 (line 42)
ScopeDesc(pc=0x00007a3310cdc020 offset=a0):
   jdk.incubator.vector.ByteVector::fromArray0Template@33 (line 3856)
ScopeDesc(pc=0x00007a3310cdc020 offset=a0):
   jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 1020)
ScopeDesc(pc=0x00007a3310cdc020 offset=a0):
   jdk.incubator.vector.ByteVector::fromArray@24 (line 3043)
ScopeDesc(pc=0x00007a3310cdc020 offset=a0):
   test_slice::micro2@29 (line 40)
ScopeDesc(pc=0x00007a3310cdc02a offset=aa):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
ScopeDesc(pc=0x00007a3310cdc02a offset=aa):
   test_slice::micro2@56 (line 42)
ScopeDesc(pc=0x00007a3310cdc02e offset=ae):
   jdk.incubator.vector.ByteVector$ByteSpecies::broadcastBits@19 (line 4290)
ScopeDesc(pc=0x00007a3310cdc02e offset=ae):
   jdk.incubator.vector.ByteVector$ByteSpecies::broadcast@6 (line 4305)
ScopeDesc(pc=0x00007a3310cdc02e offset=ae):
   jdk.incubator.vector.ByteVector::broadcast@7 (line 668)
ScopeDesc(pc=0x00007a3310cdc02e offset=ae):
   test_slice::micro2@4 (line 38)
ScopeDesc(pc=0x00007a3310cdc0bb offset=13b):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
ScopeDesc(pc=0x00007a3310cdc0bb offset=13b):
   test_slice::micro2@56 (line 42)
ScopeDesc(pc=0x00007a3310cdc0c1 offset=141):
   jdk.incubator.vector.ByteVector::fromArray0Template@33 (line 3856)
ScopeDesc(pc=0x00007a3310cdc0c1 offset=141):
   jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 1020)
ScopeDesc(pc=0x00007a3310cdc0c1 offset=141):
   jdk.incubator.vector.ByteVector::fromArray@24 (line 3043)
ScopeDesc(pc=0x00007a3310cdc0c1 offset=141):
   test_slice::micro2@29 (line 40)
ScopeDesc(pc=0x00007a3310cdc0d3 offset=153):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
ScopeDesc(pc=0x00007a3310cdc0d3 offset=153):
   test_slice::micro2@56 (line 42)
ScopeDesc(pc=0x00007a3310cdc0d9 offset=159):
   jdk.incubator.vector.ByteVector::fromArray0Template@33 (line 3856)
ScopeDesc(pc=0x00007a3310cdc0d9 offset=159):
   jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 1020)
ScopeDesc(pc=0x00007a3310cdc0d9 offset=159):
   jdk.incubator.vector.ByteVector::fromArray@24 (line 3043)
ScopeDesc(pc=0x00007a3310cdc0d9 offset=159):
   test_slice::micro2@29 (line 40)
ScopeDesc(pc=0x00007a3310cdc0eb offset=16b):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
ScopeDesc(pc=0x00007a3310cdc0eb offset=16b):
   test_slice::micro2@56 (line 42)
ScopeDesc(pc=0x00007a3310cdc0f1 offset=171):
   jdk.incubator.vector.ByteVector::fromArray0Template@33 (line 3856)
ScopeDesc(pc=0x00007a3310cdc0f1 offset=171):
   jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 1020)
ScopeDesc(pc=0x00007a3310cdc0f1 offset=171):
   jdk.incubator.vector.ByteVector::fromArray@24 (line 3043)
ScopeDesc(pc=0x00007a3310cdc0f1 offset=171):
   test_slice::micro2@29 (line 40)
ScopeDesc(pc=0x00007a3310cdc103 offset=183):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
ScopeDesc(pc=0x00007a3310cdc103 offset=183):
   test_slice::micro2@56 (line 42)
ScopeDesc(pc=0x00007a3310cdc113 offset=193):
   test_slice::micro2@73 (line 39)  reexecute=true
   Locals
    - l0: reg rsi [12],oop
    - l1: reg rdx [4],oop
    - l2: obj[186]
    - l3: reg r9 [18],int
    - l4: empty
    - l5: empty
   Objects
    - 0: R obj[186], jdk.incubator.vector.Byte256Vector
        Fields: reg xmm0 [80],vector
ScopeDesc(pc=0x00007a3310cdc14c offset=1cc):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
ScopeDesc(pc=0x00007a3310cdc14c offset=1cc):
   test_slice::micro2@56 (line 42)
ScopeDesc(pc=0x00007a3310cdc14f offset=1cf):
   jdk.incubator.vector.ByteVector::arrayAddress@4 (line 4118)
ScopeDesc(pc=0x00007a3310cdc14f offset=1cf):
   jdk.incubator.vector.ByteVector::fromArray0Template@20 (line 3858)
ScopeDesc(pc=0x00007a3310cdc14f offset=1cf):
   jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 1020)
ScopeDesc(pc=0x00007a3310cdc14f offset=1cf):
   jdk.incubator.vector.ByteVector::fromArray@24 (line 3043)
ScopeDesc(pc=0x00007a3310cdc14f offset=1cf):
   test_slice::micro2@29 (line 40)
ScopeDesc(pc=0x00007a3310cdc196 offset=216):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
ScopeDesc(pc=0x00007a3310cdc196 offset=216):
   test_slice::micro2@56 (line 42)
ScopeDesc(pc=0x00007a3310cdc19a offset=21a):
   jdk.incubator.vector.ByteVector$ByteSpecies::broadcastBits@19 (line 4290)
ScopeDesc(pc=0x00007a3310cdc19a offset=21a):
   jdk.incubator.vector.ByteVector$ByteSpecies::broadcast@6 (line 4305)
ScopeDesc(pc=0x00007a3310cdc19a offset=21a):
   jdk.incubator.vector.ByteVector::broadcast@7 (line 668)
ScopeDesc(pc=0x00007a3310cdc19a offset=21a):
   test_slice::micro2@4 (line 38)
ScopeDesc(pc=0x00007a3310cdc1a0 offset=220):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
ScopeDesc(pc=0x00007a3310cdc1a0 offset=220):
   test_slice::micro2@56 (line 42)
ScopeDesc(pc=0x00007a3310cdc1b0 offset=230):
   test_slice::micro2@21 (line 39)  reexecute=true
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: obj[107]
    - l3: 0
    - l4: empty
    - l5: empty
   Expression stack
    - @0: 0
    - @1: stack[8]
   Objects
    - 0: R obj[107], jdk.incubator.vector.Byte256Vector
        Fields: stack[32],vector
ScopeDesc(pc=0x00007a3310cdc1d7 offset=257):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
ScopeDesc(pc=0x00007a3310cdc1d7 offset=257):
   test_slice::micro2@56 (line 42)
ScopeDesc(pc=0x00007a3310cdc1db offset=25b):
   jdk.incubator.vector.ByteVector$ByteSpecies::broadcastBits@19 (line 4290)
ScopeDesc(pc=0x00007a3310cdc1db offset=25b):
   jdk.incubator.vector.ByteVector$ByteSpecies::broadcast@6 (line 4305)
ScopeDesc(pc=0x00007a3310cdc1db offset=25b):
   jdk.incubator.vector.ByteVector::broadcast@7 (line 668)
ScopeDesc(pc=0x00007a3310cdc1db offset=25b):
   test_slice::micro2@4 (line 38)
ScopeDesc(pc=0x00007a3310cdc1e1 offset=261):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
ScopeDesc(pc=0x00007a3310cdc1e1 offset=261):
   test_slice::micro2@56 (line 42)
ScopeDesc(pc=0x00007a3310cdc1f0 offset=270):
   test_slice::micro2@21 (line 39)  reexecute=true
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: obj[199]
    - l3: 0
    - l4: empty
    - l5: empty
   Expression stack
    - @0: 0
    - @1: stack[8]
   Objects
    - 0: R obj[199], jdk.incubator.vector.Byte256Vector
        Fields: stack[32],vector
ScopeDesc(pc=0x00007a3310cdc2b1 offset=331):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
ScopeDesc(pc=0x00007a3310cdc2b1 offset=331):
   test_slice::micro2@56 (line 42)
ScopeDesc(pc=0x00007a3310cdc2bc offset=33c):
   test_slice::micro2@15 (line 39)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
   Expression stack
    - @0: empty
    - @1: empty
    - @2: null
ScopeDesc(pc=0x00007a3310cdc2d8 offset=358):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
ScopeDesc(pc=0x00007a3310cdc2d8 offset=358):
   test_slice::micro2@56 (line 42)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
relocations:
         @0x00007a32c066f430: 00ff
relocInfo@0x00007a32c066f430 [type=0(none) addr=0x00007a3310cdc07f offset=255]
         @0x00007a32c066f432: 5094
relocInfo@0x00007a32c066f432 [type=10(poll) addr=0x00007a3310cdc113 offset=148]
         @0x00007a32c066f434: 586d
relocInfo@0x00007a32c066f434 [type=11(poll_return) addr=0x00007a3310cdc180 offset=109]
         @0x00007a32c066f436: 312b
relocInfo@0x00007a32c066f436 [type=6(runtime_call) addr=0x00007a3310cdc1ab offset=43 format=1] | [destination=0x00007a3310c15be0] UncommonTrapBlob
         @0x00007a32c066f438: 8005
relocInfo@0x00007a32c066f438 [type=16(post_call_nop) addr=0x00007a3310cdc1b0 offset=5]
         @0x00007a32c066f43a: 7c02000001943808
relocInfo@0x00007a32c066f440 [type=7(external_word) addr=0x00007a3310cdc1b8 offset=8 data={00000194}] | [target=0x00007a32c0752e30]
         @0x00007a32c066f442: 310e
relocInfo@0x00007a32c066f442 [type=6(runtime_call) addr=0x00007a3310cdc1c6 offset=14 format=1] | [destination=0x00007a3315235a22] MacroAssembler::debug64(char*, long, long*)
         @0x00007a32c066f444: 3125
relocInfo@0x00007a32c066f444 [type=6(runtime_call) addr=0x00007a3310cdc1eb offset=37 format=1] | [destination=0x00007a3310c15be0] UncommonTrapBlob
         @0x00007a32c066f446: 8005
relocInfo@0x00007a32c066f446 [type=16(post_call_nop) addr=0x00007a3310cdc1f0 offset=5]
         @0x00007a32c066f448: 7c02000001943808
relocInfo@0x00007a32c066f44e [type=7(external_word) addr=0x00007a3310cdc1f8 offset=8 data={00000194}] | [target=0x00007a32c0752e30]
         @0x00007a32c066f450: 310e
relocInfo@0x00007a32c066f450 [type=6(runtime_call) addr=0x00007a3310cdc206 offset=14 format=1] | [destination=0x00007a3315235a22] MacroAssembler::debug64(char*, long, long*)
         @0x00007a32c066f452: 7c02000001953806
relocInfo@0x00007a32c066f458 [type=7(external_word) addr=0x00007a3310cdc20c offset=6 data={00000195}] | [target=0x00007a32c0752fe0]
         @0x00007a32c066f45a: 310e
relocInfo@0x00007a32c066f45a [type=6(runtime_call) addr=0x00007a3310cdc21a offset=14 format=1] | [destination=0x00007a3315235a22] MacroAssembler::debug64(char*, long, long*)
         @0x00007a32c066f45c: 7c02000001953806
relocInfo@0x00007a32c066f462 [type=7(external_word) addr=0x00007a3310cdc220 offset=6 data={00000195}] | [target=0x00007a32c0752fe0]
         @0x00007a32c066f464: 310e
relocInfo@0x00007a32c066f464 [type=6(runtime_call) addr=0x00007a3310cdc22e offset=14 format=1] | [destination=0x00007a3315235a22] MacroAssembler::debug64(char*, long, long*)
         @0x00007a32c066f466: 7c02000001953806
relocInfo@0x00007a32c066f46c [type=7(external_word) addr=0x00007a3310cdc234 offset=6 data={00000195}] | [target=0x00007a32c0752fe0]
         @0x00007a32c066f46e: 310e
relocInfo@0x00007a32c066f46e [type=6(runtime_call) addr=0x00007a3310cdc242 offset=14 format=1] | [destination=0x00007a3315235a22] MacroAssembler::debug64(char*, long, long*)
         @0x00007a32c066f470: 7c02000001953806
relocInfo@0x00007a32c066f476 [type=7(external_word) addr=0x00007a3310cdc248 offset=6 data={00000195}] | [target=0x00007a32c0752fe0]
         @0x00007a32c066f478: 310e
relocInfo@0x00007a32c066f478 [type=6(runtime_call) addr=0x00007a3310cdc256 offset=14 format=1] | [destination=0x00007a3315235a22] MacroAssembler::debug64(char*, long, long*)
         @0x00007a32c066f47a: 7c02000001953806
relocInfo@0x00007a32c066f480 [type=7(external_word) addr=0x00007a3310cdc25c offset=6 data={00000195}] | [target=0x00007a32c0752fe0]
         @0x00007a32c066f482: 310e
relocInfo@0x00007a32c066f482 [type=6(runtime_call) addr=0x00007a3310cdc26a offset=14 format=1] | [destination=0x00007a3315235a22] MacroAssembler::debug64(char*, long, long*)
         @0x00007a32c066f484: 7c02000001953806
relocInfo@0x00007a32c066f48a [type=7(external_word) addr=0x00007a3310cdc270 offset=6 data={00000195}] | [target=0x00007a32c0752fe0]
         @0x00007a32c066f48c: 310e
relocInfo@0x00007a32c066f48c [type=6(runtime_call) addr=0x00007a3310cdc27e offset=14 format=1] | [destination=0x00007a3315235a22] MacroAssembler::debug64(char*, long, long*)
         @0x00007a32c066f48e: 7c02000001953806
relocInfo@0x00007a32c066f494 [type=7(external_word) addr=0x00007a3310cdc284 offset=6 data={00000195}] | [target=0x00007a32c0752fe0]
         @0x00007a32c066f496: 310e
relocInfo@0x00007a32c066f496 [type=6(runtime_call) addr=0x00007a3310cdc292 offset=14 format=1] | [destination=0x00007a3315235a22] MacroAssembler::debug64(char*, long, long*)
         @0x00007a32c066f498: 7c02000001953806
relocInfo@0x00007a32c066f49e [type=7(external_word) addr=0x00007a3310cdc298 offset=6 data={00000195}] | [target=0x00007a32c0752fe0]
         @0x00007a32c066f4a0: 310e
relocInfo@0x00007a32c066f4a0 [type=6(runtime_call) addr=0x00007a3310cdc2a6 offset=14 format=1] | [destination=0x00007a3315235a22] MacroAssembler::debug64(char*, long, long*)
         @0x00007a32c066f4a2: 3111
relocInfo@0x00007a32c066f4a2 [type=6(runtime_call) addr=0x00007a3310cdc2b7 offset=17 format=1] | [destination=0x00007a3310c15be0] UncommonTrapBlob
         @0x00007a32c066f4a4: 8005
relocInfo@0x00007a32c066f4a4 [type=16(post_call_nop) addr=0x00007a3310cdc2bc offset=5]
         @0x00007a32c066f4a6: 7c02000001943808
relocInfo@0x00007a32c066f4ac [type=7(external_word) addr=0x00007a3310cdc2c4 offset=8 data={00000194}] | [target=0x00007a32c0752e30]
         @0x00007a32c066f4ae: 310e
relocInfo@0x00007a32c066f4ae [type=6(runtime_call) addr=0x00007a3310cdc2d2 offset=14 format=1] | [destination=0x00007a3315235a22] MacroAssembler::debug64(char*, long, long*)
         @0x00007a32c066f4b0: 79584006
relocInfo@0x00007a32c066f4b2 [type=8(internal_word) addr=0x00007a3310cdc2d8 offset=6 data=344] | [target=0x00007a3310cdc180]
         @0x00007a32c066f4b4: 3111
relocInfo@0x00007a32c066f4b4 [type=6(runtime_call) addr=0x00007a3310cdc2e9 offset=17 format=1] | [destination=0x00007a3310c82c60] SafepointBlob
         @0x00007a32c066f4b6: 3105
relocInfo@0x00007a32c066f4b6 [type=6(runtime_call) addr=0x00007a3310cdc2ee offset=5 format=1] | [destination=0x00007a3310c683a0] Stub::Stub Generator method_entry_barrier_stub
         @0x00007a32c066f4b8: 000a
relocInfo@0x00007a32c066f4b8 [type=0(none) addr=0x00007a3310cdc2f8 offset=10]
         @0x00007a32c066f4ba: 3100
relocInfo@0x00007a32c066f4ba [type=6(runtime_call) addr=0x00007a3310cdc2f8 offset=0 format=1] | [destination=0x00007a3310c158e0] ExceptionBlob
         @0x00007a32c066f4bc: 310f
relocInfo@0x00007a32c066f4bc [type=6(runtime_call) addr=0x00007a3310cdc307 offset=15 format=1] | [destination=0x00007a3310c82f80] DeoptimizationBlob
         @0x00007a32c066f4be: 0000
relocInfo@0x00007a32c066f4be [type=0(none) addr=0x00007a3310cdc307 offset=0]
         @0x00007a32c066f4c0: 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Dependencies:
Dependency of type evol_method
  method  = *{method} {0x00007a32d8401c40} 'micro2' '([B[B)V' in 'test_slice'
Dependency of type evol_method
  method  = *{method} {0x00007a32d8047ab8} 'broadcast' '(Ljdk/incubator/vector/VectorSpecies;J)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector'
Dependency of type evol_method
  method  = *{method} {0x00007a32d8050590} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[BI)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector'
Dependency of type evol_method
  method  = {method} {0x00007a32d8051418} 'intoArray' '([BI)V' in 'jdk/incubator/vector/ByteVector'
Dependency of type evol_method
  method  = {method} {0x00007a32d80ce3c0} 'broadcast' '(J)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector$ByteSpecies'
Dependency of type evol_method
  method  = {method} {0x00007a32d80ce4c8} 'longToElementBits' '(J)J' in 'jdk/incubator/vector/ByteVector$ByteSpecies'
Dependency of type evol_method
  method  = {method} {0x00007a32d80ce1e8} 'broadcastBits' '(J)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector$ByteSpecies'
Dependency of type evol_method
  method  = *{method} {0x00007a32d8046f68} 'toBits' '(B)J' in 'jdk/incubator/vector/ByteVector'
Dependency of type evol_method
  method  = *{method} {0x000000000726b820} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder'
Dependency of type evol_method
  method  = *{method} {0x0000000007272eb0} 'constant_L' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$Holder'
Dependency of type evol_method
  method  = {method} {0x00007a32d80d52d0} 'loopBound' '(I)I' in 'jdk/incubator/vector/AbstractSpecies'
Dependency of type evol_method
  method  = *{method} {0x00007a32d81cf5d0} 'roundDown' '(II)I' in 'jdk/incubator/vector/VectorIntrinsics'
Dependency of type evol_method
  method  = *{method} {0x00007a32d81cf158} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
Dependency of type evol_method
  method  = {method} {0x00007a32d80cea60} 'dummyVector' '()Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector$ByteSpecies'
Dependency of type evol_method
  method  = {method} {0x00007a32d80d46b0} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
Dependency of type evol_method
  method  = *{method} {0x000000000727f4e8} 'checkIndex' '(II)I' in 'java/util/Objects'
Dependency of type evol_method
  method  = {method} {0x00007a32d80d6070} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
Dependency of type evol_method
  method  = {method} {0x00007a32d8119520} 'fromArray0' '([BI)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/Byte256Vector'
Dependency of type evol_method
  method  = {method} {0x00007a32d8052158} 'fromArray0Template' '([BI)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector'
Dependency of type evol_method
  method  = {method} {0x00007a32d80ce000} 'vectorType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/ByteVector$ByteSpecies'
Dependency of type evol_method
  method  = {method} {0x00007a32d80cde48} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/ByteVector$ByteSpecies'
Dependency of type evol_method
  method  = {method} {0x00007a32d80d4788} 'laneCount' '()I' in 'jdk/incubator/vector/AbstractSpecies'
Dependency of type evol_method
  method  = *{method} {0x00007a32d8053b50} 'arrayAddress' '([BI)J' in 'jdk/incubator/vector/ByteVector'
Dependency of type evol_method
  method  = {method} {0x00007a32d81151c8} 'vspecies' '()Ljdk/incubator/vector/ByteVector$ByteSpecies;' in 'jdk/incubator/vector/Byte256Vector'
Dependency of type evol_method
  method  = {method} {0x00007a32d811ac18} 'slice' '(ILjdk/incubator/vector/Vector;)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/Byte256Vector'
Dependency of type evol_method
  method  = {method} {0x00007a32d81180a0} 'slice' '(ILjdk/incubator/vector/Vector;)Ljdk/incubator/vector/Byte256Vector;' in 'jdk/incubator/vector/Byte256Vector'
Dependency of type evol_method
  method  = {method} {0x00007a32d804d738} 'sliceTemplate' '(ILjdk/incubator/vector/Vector;)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector'
Dependency of type evol_method
  method  = {method} {0x00007a32d8061b30} 'check' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractVector'
Dependency of type evol_method
  method  = {method} {0x00007a32d8061c68} 'sameSpecies' '(Ljdk/incubator/vector/Vector;)Z' in 'jdk/incubator/vector/AbstractVector'
Dependency of type evol_method
  method  = {method} {0x00007a32d8115528} 'length' '()I' in 'jdk/incubator/vector/Byte256Vector'
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.ByteVector$ByteSpecies
  method  = {method} {0x00007a32d80d52d0} 'loopBound' '(I)I' in 'jdk/incubator/vector/AbstractSpecies'
  class   = jdk.incubator.vector.VectorSpecies
  method  = *{method} {0x00007a32d80d2b28} 'loopBound' '(I)I' in 'jdk/incubator/vector/VectorSpecies'
   [nmethod<=klass]jdk.incubator.vector.ByteVector$ByteSpecies
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.ByteVector$ByteSpecies
  method  = {method} {0x00007a32d80d46b0} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
  class   = jdk.incubator.vector.VectorSpecies
  method  = *{method} {0x00007a32d80d2930} 'length' '()I' in 'jdk/incubator/vector/VectorSpecies'
   [nmethod<=klass]jdk.incubator.vector.ByteVector$ByteSpecies
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ExceptionHandlerTable (size = 0 bytes)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ImplicitExceptionTable (size = 2 entries, 20 bytes):
{
   < 0x00007a3310cdbf9a, 0x00007a3310cdc2ac > < 0x00007a3310cdbfe5, 0x00007a3310cdc18b > 
}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded oops:
#0: 0x0000000000000000 nullptr-oop
#1: 0x00000000c8e66488 a 'java/lang/Class'{0x00000000c8e66488} = 'jdk/incubator/vector/Byte256Vector'
#2: 0x00000000c8f114a8 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x00000000c8f114a8}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded metadata:
# 0: 0x0000000000000000 nullptr-oop
# 1: 0x00007a32d8401c40 {method} {0x00007a32d8401c40} 'micro2' '([B[B)V' in 'test_slice'
# 2: 0x00007a32d8051418 {method} {0x00007a32d8051418} 'intoArray' '([BI)V' in 'jdk/incubator/vector/ByteVector'
# 3: 0x00007a32d8050590 {method} {0x00007a32d8050590} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[BI)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector'
# 4: 0x00007a32d8119520 {method} {0x00007a32d8119520} 'fromArray0' '([BI)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/Byte256Vector'
# 5: 0x00007a32d8052158 {method} {0x00007a32d8052158} 'fromArray0Template' '([BI)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector'
# 6: 0x00007a32d8047ab8 {method} {0x00007a32d8047ab8} 'broadcast' '(Ljdk/incubator/vector/VectorSpecies;J)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector'
# 7: 0x00007a32d80ce3c0 {method} {0x00007a32d80ce3c0} 'broadcast' '(J)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector$ByteSpecies'
# 8: 0x00007a32d80ce1e8 {method} {0x00007a32d80ce1e8} 'broadcastBits' '(J)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector$ByteSpecies'
# 9: 0x00007a32d8053b50 {method} {0x00007a32d8053b50} 'arrayAddress' '([BI)J' in 'jdk/incubator/vector/ByteVector'
#10: 0x00007a32d80ce4c8 {method} {0x00007a32d80ce4c8} 'longToElementBits' '(J)J' in 'jdk/incubator/vector/ByteVector$ByteSpecies'
#11: 0x00007a32d8046f68 {method} {0x00007a32d8046f68} 'toBits' '(B)J' in 'jdk/incubator/vector/ByteVector'
#12: 0x000000000726b820 {method} {0x000000000726b820} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder'
#13: 0x0000000007272eb0 {method} {0x0000000007272eb0} 'constant_L' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$Holder'
#14: 0x00007a32d80d52d0 {method} {0x00007a32d80d52d0} 'loopBound' '(I)I' in 'jdk/incubator/vector/AbstractSpecies'
#15: 0x00007a32d81cf5d0 {method} {0x00007a32d81cf5d0} 'roundDown' '(II)I' in 'jdk/incubator/vector/VectorIntrinsics'
#16: 0x00007a32d81cf158 {method} {0x00007a32d81cf158} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
#17: 0x00007a32d80cea60 {method} {0x00007a32d80cea60} 'dummyVector' '()Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector$ByteSpecies'
#18: 0x00007a32d80d46b0 {method} {0x00007a32d80d46b0} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
#19: 0x000000000727f4e8 {method} {0x000000000727f4e8} 'checkIndex' '(II)I' in 'java/util/Objects'
#20: 0x00007a32d80d6070 {method} {0x00007a32d80d6070} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
#21: 0x00007a32d80ce000 {method} {0x00007a32d80ce000} 'vectorType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/ByteVector$ByteSpecies'
#22: 0x00007a32d80cde48 {method} {0x00007a32d80cde48} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/ByteVector$ByteSpecies'
#23: 0x00007a32d80d4788 {method} {0x00007a32d80d4788} 'laneCount' '()I' in 'jdk/incubator/vector/AbstractSpecies'
#24: 0x00007a32d81151c8 {method} {0x00007a32d81151c8} 'vspecies' '()Ljdk/incubator/vector/ByteVector$ByteSpecies;' in 'jdk/incubator/vector/Byte256Vector'
#25: 0x00007a32d811ac18 {method} {0x00007a32d811ac18} 'slice' '(ILjdk/incubator/vector/Vector;)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/Byte256Vector'
#26: 0x00007a32d81180a0 {method} {0x00007a32d81180a0} 'slice' '(ILjdk/incubator/vector/Vector;)Ljdk/incubator/vector/Byte256Vector;' in 'jdk/incubator/vector/Byte256Vector'
#27: 0x00007a32d804d738 {method} {0x00007a32d804d738} 'sliceTemplate' '(ILjdk/incubator/vector/Vector;)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector'
#28: 0x00007a32d8061b30 {method} {0x00007a32d8061b30} 'check' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractVector'
#29: 0x00007a32d8061c68 {method} {0x00007a32d8061c68} 'sameSpecies' '(Ljdk/incubator/vector/Vector;)Z' in 'jdk/incubator/vector/AbstractVector'
#30: 0x00007a32d8115528 {method} {0x00007a32d8115528} 'length' '()I' in 'jdk/incubator/vector/Byte256Vector'
#31: 0x0000000008004dd8 'jdk/incubator/vector/ByteVector$ByteSpecies'
#32: 0x00007a32d80d3d98 'jdk/incubator/vector/VectorSpecies'
#33: 0x00007a32d80d2b28 {method} {0x00007a32d80d2b28} 'loopBound' '(I)I' in 'jdk/incubator/vector/VectorSpecies'
#34: 0x00007a32d80d2930 {method} {0x00007a32d80d2930} 'length' '()I' in 'jdk/incubator/vector/VectorSpecies'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
[micro2 time] 94 ms  [res] -1174962175
------------------------------------------------------------------------
static test_slice::micro2([B[B)V
  interpreter_invocation_count:         640
  invocation_counter:                   640
  backedge_counter:                   20480
  decompile_count:                        0
  mdo size: 624 bytes

   0 getstatic 9 <test_slice.BYTE_SPECIES:Ljdk/incubator/vector/VectorSpecies;> 
   3 lconst_0
   4 invokestatic 84 <jdk/incubator/vector/ByteVector.broadcast(Ljdk/incubator/vector/VectorSpecies;J)Ljdk/incubator/vector/ByteVector;> 
  0    bci: 4    CounterData        count(480)
   7 astore_2
   8 iconst_0
   9 istore_3
  10 iload_3
  11 getstatic 9 <test_slice.BYTE_SPECIES:Ljdk/incubator/vector/VectorSpecies;> 
  14 aload_1
  15 arraylength
  16 invokeinterface 15 <jdk/incubator/vector/VectorSpecies.loopBound(I)I> 
  16   bci: 16   VirtualCallData    count(0) entries(1)
                                    'jdk/incubator/vector/ByteVector$ByteSpecies'(15840 1.00)
  21 if_icmpge 76
  64   bci: 21   BranchData         taken(480) displacement(264)
                                    not taken(15360)
  24 getstatic 9 <test_slice.BYTE_SPECIES:Ljdk/incubator/vector/VectorSpecies;> 
  27 aload_1
  28 iload_3
  29 invokestatic 21 <jdk/incubator/vector/ByteVector.fromArray(Ljdk/incubator/vector/VectorSpecies;[BI)Ljdk/incubator/vector/ByteVector;> 
  96   bci: 29   CounterData        count(15360)
  32 astore #4
  34 aload_2
  35 getstatic 9 <test_slice.BYTE_SPECIES:Ljdk/incubator/vector/VectorSpecies;> 
  38 invokeinterface 77 <jdk/incubator/vector/VectorSpecies.length()I> 
  112  bci: 38   VirtualCallData    count(0) entries(1)
                                    'jdk/incubator/vector/ByteVector$ByteSpecies'(15360 1.00)
  43 iconst_1
  44 isub
  45 aload #4
  47 invokevirtual 88 <jdk/incubator/vector/ByteVector.slice(ILjdk/incubator/vector/Vector;)Ljdk/incubator/vector/ByteVector;> 
  160  bci: 47   VirtualCallData    count(0) entries(1)
                                    'jdk/incubator/vector/Byte256Vector'(15360 1.00)
  50 astore #5
  52 aload #5
  54 fast_aload_0
  55 iload_3
  56 invokevirtual 70 <jdk/incubator/vector/ByteVector.intoArray([BI)V> 
  208  bci: 56   VirtualCallData    count(15360) entries(0)
  59 aload #4
  61 astore_2
  62 iload_3
  63 getstatic 9 <test_slice.BYTE_SPECIES:Ljdk/incubator/vector/VectorSpecies;> 
  66 invokeinterface 77 <jdk/incubator/vector/VectorSpecies.length()I> 
  256  bci: 66   VirtualCallData    count(0) entries(1)
                                    'jdk/incubator/vector/ByteVector$ByteSpecies'(15360 1.00)
  71 iadd
  72 istore_3
  73 goto 10
  304  bci: 73   JumpData           taken(15360) displacement(-288)
  76 return
------------------------------------------------------------------------
Total MDO size: 624 bytes
