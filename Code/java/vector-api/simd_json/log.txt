CompileCommand: print test_slice.micro1 bool print = true

============================= C2-compiled nmethod ==============================
#r018 rsi:rsi   : parm 0: rawptr:BotPTR
# -- Old rsp -- Framesize: 128 --
#r623 rsp+124: in_preserve
#r622 rsp+120: return address
#r621 rsp+116: in_preserve
#r620 rsp+112: saved fp register
#r619 rsp+108: pad2, stack alignment
#r618 rsp+104: pad2, stack alignment
#r617 rsp+100: Fixed slot 1
#r616 rsp+96: Fixed slot 0
#r647 rsp+92: spill
#r646 rsp+88: spill
#r645 rsp+84: spill
#r644 rsp+80: spill
#r643 rsp+76: spill
#r642 rsp+72: spill
#r641 rsp+68: spill
#r640 rsp+64: spill
#r639 rsp+60: spill
#r638 rsp+56: spill
#r637 rsp+52: spill
#r636 rsp+48: spill
#r635 rsp+44: spill
#r634 rsp+40: spill
#r633 rsp+36: spill
#r632 rsp+32: spill
#r631 rsp+28: spill
#r630 rsp+24: spill
#r629 rsp+20: spill
#r628 rsp+16: spill
#r627 rsp+12: spill
#r626 rsp+ 8: spill
#r625 rsp+ 4: spill
#r624 rsp+ 0: spill
#
----------------------- MetaData before Compile_id = 436 ------------------------
{method}
 - this oop:          0x00007d1594401b28
 - method holder:     'test_slice'
 - constants:         0x00007d15944010f8 constant pool [238]/operands[26] {0x00007d15944010f8} for 'test_slice' cache=0x00007d1594402000
 - access:            0x9  public static 
 - flags:             0x6080  queued_for_compilation has_loops_flag has_loops_flag_init 
 - name:              'micro1'
 - signature:         '([B[B)V'
 - max stack:         5
 - max locals:        7
 - size of params:    2
 - method size:       14
 - vtable index:      -2
 - i2i entry:         0x00007d15bc4af6a0
 - adapters:          AHE@0x00007d15c80cca80: 0xbb i2c: 0x00007d15bc5c0fe0 c2i: 0x00007d15bc5c1036 c2iUV: 0x00007d15bc5c1015 c2iNCI: 0x00007d15bc5c1071
 - compiled entry     0x00007d15bc5c1036
 - code size:         116
 - code start:        0x00007d1594401a98
 - code end (excl):   0x00007d1594401b0c
 - method data:       0x00007d1594413c00
 - checked ex length: 0
 - linenumber start:  0x00007d1594401b0c
 - localvar length:   0

------------------------ OptoAssembly for Compile_id = 436 -----------------------
#
#  void ( rawptr:BotPTR )
#
000     N226: #	out( B1 ) <- BLOCK HEAD IS JUNK  Freq: 1
000     # breakpoint
        nop 	# 11 bytes pad for loops and calls

010     B1: #	out( B16 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
010     # stack bang (512 bytes)
	pushq   rbp	# Save rbp
	subq    rsp, #112	# Create frame

02a     movq    R14, [RSI + #48 (8-bit)]	# ptr
02e     movq    RBX, [RSI + #40 (8-bit)]	# ptr
032     movl    R13, [RSI + #32 (8-bit)]	# int
036     movq    RDI, RSI	# spill
039     call_leaf,runtime  OSR_migration_end
        No JVM State Info
        # 
051     testq   R14, R14	# ptr
054     je     B16  P=0.001000 C=-1.000000

05a     B2: #	out( B18 B3 ) <- in( B1 )  Freq: 0.999
05a     movl    R10, [R14 + #8 (8-bit)]	# compressed klass ptr
05e     cmpl    R10, narrowklass: precise [byte (java/lang/Cloneable,java/io/Serializable): :Constant:exact *	# compressed klass ptr
065     jne,u   B18  P=0.000001 C=-1.000000

06b     B3: #	out( B4 ) <- in( B2 )  Freq: 0.998999
06b     movq    R11, R14	# spill
06e     # checkcastPP of R11

06e     B4: #	out( B20 B5 ) <- in( B3 B16 )  Freq: 0.999999
06e     movl    R10, [RBX + #8 (8-bit)]	# compressed klass ptr
072     NullCheck RBX

072     B5: #	out( B18 B6 ) <- in( B4 )  Freq: 0.999998
072     cmpl    R10, narrowklass: precise [byte (java/lang/Cloneable,java/io/Serializable): :Constant:exact *	# compressed klass ptr
079     jne,u   B18  P=0.000001 C=-1.000000

07f     B6: #	out( B19 B7 ) <- in( B5 )  Freq: 0.999997
07f     # checkcastPP of RBX
07f     movl    R9, [RBX + #12 (8-bit)]	# range
083     leal    R8, [R9 + #-31]
087     testl   R8, R8
08a     jl     B19  P=0.000001 C=-1.000000

090     B7: #	out( B19 B8 ) <- in( B6 )  Freq: 0.999996
090     movl    RBP, [R11 + #12 (8-bit)]	# range
094     NullCheck R11

094     B8: #	out( B19 B9 ) <- in( B7 )  Freq: 0.999995
094     addl    RBP, #-31	# int
097     testl   RBP, RBP
099     jl     B19  P=0.000001 C=-1.000000

09f     B9: #	out( B11 ) <- in( B8 )  Freq: 0.999994
09f     andl    R9, #-32	# int
0a3     movq    R10, int[int:8] (java/lang/Cloneable,java/io/Serializable)<ciTypeArray length=8 type=<ciTypeArrayKlass name=[I loaded=true ident=1378 address=0x00007d157c01a548> ident=1694 address=0x00007d157c57de58> *	# ptr
0ad     load_vector XMM0,[R10 + #16 (8-bit)]
0b3     movq    RDI, java/lang/Class (java/io/Serializable,java/lang/constant/Constable,java/lang/reflect/AnnotatedElement,java/lang/invoke/TypeDescriptor,java/lang/reflect/GenericDeclaration,java/lang/reflect/Type,java/lang/invoke/TypeDescriptor$OfField):exact *	# ptr
0bd     # MachConstantBaseNode (empty encoding)
0bd     replicateI XMM1,#7
0c6     vpand   XMM0,XMM1,XMM0	! and vectors
0ca     # TLS is in R15
0ca     jmp,s   B11
        nop 	# 4 bytes pad for loops and calls

0d0     B10: #	out( B11 ) <- in( B13 ) top-of-loop Freq: 31.9977
0d0     store_vector [R11 + #16 + R10],XMM1
	
0d7     movq    RCX, [R15 + #48 (8-bit)]	# ptr
0db     addl    R13, #32	# int
0df     vextractI R10,XMM4,#7	! using XMM1 as TEMP
0eb     movl    [RDI + #140 (32-bit)], R10	# int ! Field: test_slice.previousFourUtf8Bytes
0f2     testl   rax, [RCX]	# Safepoint: poll for GC        # test_slice::micro1 @ bci:112 (line 21) L[0]=R11 L[1]=RBX L[2]=R13 L[3]=_ L[4]=_ L[5]=_ L[6]=_
        # OopMap {r11=Oop rbx=Oop rdi=Oop off=242/0xf2}

0f4     B11: #	out( B15 B12 ) <- in( B9 B10 ) Loop( B11-B10 inner ) Freq: 32.9977
0f4     cmpl    R13, R9
0f7     jge     B15  P=0.030303 C=21120.000000

0fd     B12: #	out( B17 B13 ) <- in( B11 )  Freq: 31.9978
0fd     cmpl    R13, R8	# unsigned
100     jae,u   B17  P=0.000001 C=-1.000000

106     B13: #	out( B10 B14 ) <- in( B12 )  Freq: 31.9977
106     movl    RCX, [RDI + #140 (32-bit)]	# int ! Field: test_slice.previousFourUtf8Bytes
10c     # castII of R13
10c     movslq  R10, R13	# i2l
10f     load_vector XMM4,[RBX + #16 + R10]
116     vector_reinterpret XMM4	!
116     vector_rearrange XMM1, XMM0, XMM4
11b     vshiftd_imm  XMM2,XMM4,#8	! shift packedI
120     vector_insert XMM1,XMM1,RCX,#0	!using XMM3 as TEMP
132     vshiftd_imm  XMM1,XMM1,#24	! shift packedI
137     vpor    XMM1,XMM2,XMM1	! or vectors
13b     vector_reinterpret XMM1	!
13b     cmpl    R13, RBP	# unsigned
13e     jb,us  B10  P=0.999999 C=-1.000000

140     B14: #	out( N226 ) <- in( B13 )  Freq: 3.24226e-05
140     movl    RSI, #-28	# int
145     movl    [rsp + #4], R13	# spill
14a     movq    [rsp + #16], RBX	# spill
14f     movq    [rsp + #24], R11	# spill
154     vmovdqu [rsp + 32],XMM1	# spill
15a     vmovdqu [rsp + 64],XMM4	# spill
160     call,static  wrapper for: uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')
        # java.util.Objects::checkIndex @ bci:3 (line 365) L[0]=_ L[1]=_ STK[0]=rsp + #4 STK[1]=RBP STK[2]=#null
        # jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize @ bci:43 (line 58) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.ByteVector::intoArray @ bci:7 (line 3487) L[0]=#ScObj0 L[1]=rsp + #24 L[2]=_ L[3]=_
        # ScObj0 jdk/incubator/vector/Byte256Vector={ [payload :0]=rsp + #32 }
        # test_slice::micro1 @ bci:80 (line 32) L[0]=rsp + #24 L[1]=rsp + #16 L[2]=rsp + #4 L[3]=_ L[4]=#ScObj0 L[5]=_ L[6]=_
        # ScObj0 jdk/incubator/vector/Int256Vector={ [payload :0]=rsp + #64 }
        # OopMap {[16]=Oop [24]=Oop off=360/0x168}
170     stop	# ShouldNotReachHere

184     B15: #	out( N226 ) <- in( B11 )  Freq: 0.999929
184     vzeroupper
	addq    rsp, 112	# Destroy frame
	popq    rbp
	cmpq    rsp, poll_offset[r15_thread] 
	ja      #safepoint_stub	# Safepoint: poll for GC

196     ret

197     B16: #	out( B4 ) <- in( B1 )  Freq: 0.000999987
197     xorl    R11, R11	# ptr
19a     jmp     B4

19f     B17: #	out( N226 ) <- in( B12 )  Freq: 3.24227e-05
19f     movl    RSI, #-28	# int
1a4     movl    [rsp + #0], R13	# spill
1a8     movq    [rsp + #8], R11	# spill
1ad     movq    [rsp + #24], RBX	# spill
1b2     movl    [rsp + #4], R8	# spill
        nop 	# 1 bytes pad for loops and calls
1b8     call,static  wrapper for: uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')
        # java.util.Objects::checkIndex @ bci:3 (line 365) L[0]=_ L[1]=_ STK[0]=rsp + #0 STK[1]=rsp + #4 STK[2]=#null
        # jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize @ bci:43 (line 58) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.ByteVector::fromArray @ bci:9 (line 3041) L[0]=#Ptr0x00007d157c6170a0 L[1]=rsp + #24 L[2]=_ L[3]=_
        # test_slice::micro1 @ bci:21 (line 22) L[0]=rsp + #8 L[1]=rsp + #24 L[2]=rsp + #0 L[3]=_ L[4]=_ L[5]=_ L[6]=_
        # OopMap {[8]=Oop [24]=Oop off=448/0x1c0}
1c8     stop	# ShouldNotReachHere

1dc     B18: #	out( N226 ) <- in( B2 B5 )  Freq: 1.999e-06
1dc     movl    RSI, #-123	# int
1e1     movl    RBP, R13	# spill
1e4     movq    [rsp + #0], R14	# spill
1e8     movq    [rsp + #8], RBX	# spill
        nop 	# 3 bytes pad for loops and calls
1f0     call,static  wrapper for: uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')
        # test_slice::micro1 @ bci:2 (line 21) L[0]=rsp + #0 L[1]=rsp + #8 L[2]=RBP L[3]=_ L[4]=_ L[5]=_ L[6]=_
        # OopMap {[0]=Oop [8]=Oop off=504/0x1f8}
200     stop	# ShouldNotReachHere

214     B19: #	out( N226 ) <- in( B8 B6 B7 )  Freq: 3.01327e-06
214     movl    RSI, #-66	# int
219     movl    RBP, R13	# spill
21c     movq    [rsp + #0], R11	# spill
220     movq    [rsp + #8], RBX	# spill
        nop 	# 3 bytes pad for loops and calls
228     call,static  wrapper for: uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')
        # test_slice::micro1 @ bci:2 (line 21) L[0]=rsp + #0 L[1]=rsp + #8 L[2]=RBP L[3]=_ L[4]=_ L[5]=_ L[6]=_
        # OopMap {[0]=Oop [8]=Oop off=560/0x230}
238     stop	# ShouldNotReachHere

24c     B20: #	out( N226 ) <- in( B4 )  Freq: 1.01328e-06
24c     movl    RSI, #-146	# int
251     movl    RBP, R13	# spill
254     movq    [rsp + #0], R11	# spill
258     call,static  wrapper for: uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')
        # test_slice::micro1 @ bci:2 (line 21) L[0]=rsp + #0 L[1]=#null L[2]=RBP L[3]=_ L[4]=_ L[5]=_ L[6]=_
        # OopMap {[0]=Oop off=608/0x260}
268     stop	# ShouldNotReachHere

--------------------------------------------------------------------------------
----------------------------------- Assembly -----------------------------------

Compiled method (c2) 4740  436 %           test_slice::micro1 @ 2 (116 bytes)
 total in heap  [0x00007d15bc5e9b88,0x00007d15bc5e9f78] = 1008
 constants      [0x00007d15bc5e9c80,0x00007d15bc5e9ca0] = 32
 main code      [0x00007d15bc5e9ca0,0x00007d15bc5e9f40] = 672
 stub code      [0x00007d15bc5e9f40,0x00007d15bc5e9f58] = 24
 oops           [0x00007d15bc5e9f58,0x00007d15bc5e9f78] = 32
 mutable data [0x00007d157c6983f0,0x00007d157c6986d8] = 744
 relocation     [0x00007d157c6983f0,0x00007d157c698460] = 112
 metadata       [0x00007d157c698460,0x00007d157c6986d8] = 632
 immutable data [0x00007d157c697f00,0x00007d157c6983c8] = 1224
 dependencies   [0x00007d157c697f00,0x00007d157c697fb0] = 176
 nul chk table  [0x00007d157c697fb0,0x00007d157c697fc8] = 24
 scopes pcs     [0x00007d157c697fc8,0x00007d157c698218] = 592
 scopes data    [0x00007d157c698218,0x00007d157c6983c8] = 432

[Disassembly]
--------------------------------------------------------------------------------

[Constant Pool]
             Address          hex4                    hex8      
  0x00007d15bc5e9c80:   0x00000007      0xf4f4f4f400000007      
  0x00007d15bc5e9c84:   0xf4f4f4f4                              
  0x00007d15bc5e9c88:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x00007d15bc5e9c8c:   0xf4f4f4f4                              
  0x00007d15bc5e9c90:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x00007d15bc5e9c94:   0xf4f4f4f4                              
  0x00007d15bc5e9c98:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x00007d15bc5e9c9c:   0xf4f4f4f4                              

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x00007d1594401b28} 'micro1' '([B[B)V' in 'test_slice'
 ;; N226: #	out( B1 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x00007d15bc5e9ca0:   call   0x00007d15cfd4b1ce           ;   {runtime_call os::breakpoint()}
  0x00007d15bc5e9ca5:   nop
  0x00007d15bc5e9ca6:   nop
  0x00007d15bc5e9ca7:   nop
  0x00007d15bc5e9ca8:   nop
  0x00007d15bc5e9ca9:   nop
  0x00007d15bc5e9caa:   nop
  0x00007d15bc5e9cab:   nop
  0x00007d15bc5e9cac:   nop
  0x00007d15bc5e9cad:   nop
  0x00007d15bc5e9cae:   nop
  0x00007d15bc5e9caf:   nop
 ;; B1: #	out( B16 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x00007d15bc5e9cb0:   mov    %eax,-0x18000(%rsp)
  0x00007d15bc5e9cb7:   push   %rbp
  0x00007d15bc5e9cb8:   sub    $0x70,%rsp
  0x00007d15bc5e9cbc:   cmpl   $0x0,0x20(%r15)
  0x00007d15bc5e9cc4:   jne    0x00007d15bc5e9f32
  0x00007d15bc5e9cca:   mov    0x30(%rsi),%r14
  0x00007d15bc5e9cce:   mov    0x28(%rsi),%rbx
  0x00007d15bc5e9cd2:   mov    0x20(%rsi),%r13d             ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test_slice::micro1@2 (line 21)
  0x00007d15bc5e9cd6:   mov    %rsi,%rdi
  0x00007d15bc5e9cd9:   vzeroupper 
  0x00007d15bc5e9cdc:   movabs $0x7d15cfe7bcce,%r10         ;   {runtime_call SharedRuntime::OSR_migration_end(long*)}
  0x00007d15bc5e9ce6:   call   *%r10
  0x00007d15bc5e9ce9:   nopl   0x0(%rax,%rax,1)             ;   {post_call_nop}
  0x00007d15bc5e9cf1:   test   %r14,%r14                    ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
                                                            ; - jdk.incubator.vector.Int256Vector::lane@94 (line 528)
                                                            ; - test_slice::micro1@95 (line 33)
  0x00007d15bc5e9cf4:   je     0x00007d15bc5e9e37
 ;; B2: #	out( B18 B3 ) <- in( B1 )  Freq: 0.999
  0x00007d15bc5e9cfa:   mov    0x8(%r14),%r10d
  0x00007d15bc5e9cfe:   cmp    $0x1b83b0,%r10d              ;   {metadata({type array byte})}
  0x00007d15bc5e9d05:   jne    0x00007d15bc5e9e7c
 ;; B3: #	out( B4 ) <- in( B2 )  Freq: 0.998999
  0x00007d15bc5e9d0b:   mov    %r14,%r11
 ;; B4: #	out( B20 B5 ) <- in( B3 B16 )  Freq: 0.999999
  0x00007d15bc5e9d0e:   mov    0x8(%rbx),%r10d              ; implicit exception: dispatches to 0x00007d15bc5e9eec
 ;; B5: #	out( B18 B6 ) <- in( B4 )  Freq: 0.999998
  0x00007d15bc5e9d12:   cmp    $0x1b83b0,%r10d              ;   {metadata({type array byte})}
  0x00007d15bc5e9d19:   jne    0x00007d15bc5e9e7c           ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test_slice::micro1@2 (line 21)
 ;; B6: #	out( B19 B7 ) <- in( B5 )  Freq: 0.999997
  0x00007d15bc5e9d1f:   mov    0xc(%rbx),%r9d               ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test_slice::micro1@7 (line 21)
  0x00007d15bc5e9d23:   lea    -0x1f(%r9),%r8d
  0x00007d15bc5e9d27:   test   %r8d,%r8d
  0x00007d15bc5e9d2a:   jl     0x00007d15bc5e9eb4
 ;; B7: #	out( B19 B8 ) <- in( B6 )  Freq: 0.999996
  0x00007d15bc5e9d30:   mov    0xc(%r11),%ebp               ; implicit exception: dispatches to 0x00007d15bc5e9eb4
                                                            ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
                                                            ; - jdk.incubator.vector.Int256Vector::lane@94 (line 528)
                                                            ; - test_slice::micro1@95 (line 33)
 ;; B8: #	out( B19 B9 ) <- in( B7 )  Freq: 0.999995
  0x00007d15bc5e9d34:   add    $0xffffffe1,%ebp
  0x00007d15bc5e9d37:   test   %ebp,%ebp
  0x00007d15bc5e9d39:   jl     0x00007d15bc5e9eb4
 ;; B9: #	out( B11 ) <- in( B8 )  Freq: 0.999994
  0x00007d15bc5e9d3f:   and    $0xffffffe0,%r9d
  0x00007d15bc5e9d43:   movabs $0xc8d74388,%r10             ;   {oop([I{0x00000000c8d74388})}
  0x00007d15bc5e9d4d:   vmovdqu 0x10(%r10),%ymm0
  0x00007d15bc5e9d53:   movabs $0xc8e24b28,%rdi             ;   {oop(a 'java/lang/Class'{0x00000000c8e24b28} = 'test_slice')}
  0x00007d15bc5e9d5d:   vpbroadcastd -0xe6(%rip),%ymm1        # 0x00007d15bc5e9c80
                                                            ;   {section_word}
  0x00007d15bc5e9d66:   vpand  %ymm0,%ymm1,%ymm0            ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test_slice::micro1@112 (line 21)
  0x00007d15bc5e9d6a:   jmp    0x00007d15bc5e9d94
  0x00007d15bc5e9d6c:   nop
  0x00007d15bc5e9d6d:   nop
  0x00007d15bc5e9d6e:   nop
  0x00007d15bc5e9d6f:   nop                                 ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
                                                            ; - jdk.incubator.vector.Int256Vector::lane@94 (line 528)
                                                            ; - test_slice::micro1@95 (line 33)
 ;; B10: #	out( B11 ) <- in( B13 ) top-of-loop Freq: 31.9977
  0x00007d15bc5e9d70:   vmovdqu %ymm1,0x10(%r11,%r10,1)     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
                                                            ; - test_slice::micro1@80 (line 32)
  0x00007d15bc5e9d77:   mov    0x30(%r15),%rcx
  0x00007d15bc5e9d7b:   add    $0x20,%r13d
  0x00007d15bc5e9d7f:   vextractf128 $0x1,%ymm4,%xmm1
  0x00007d15bc5e9d85:   vpextrd $0x3,%xmm1,%r10d            ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
                                                            ; - jdk.incubator.vector.Int256Vector::lane@94 (line 528)
                                                            ; - test_slice::micro1@95 (line 33)
  0x00007d15bc5e9d8b:   mov    %r10d,0x8c(%rdi)             ; ImmutableOopMap {r11=Oop rbx=Oop rdi=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) test_slice::micro1@112 (line 21)
  0x00007d15bc5e9d92:   test   %eax,(%rcx)                  ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test_slice::micro1@2 (line 21)
                                                            ;   {poll}
 ;; B11: #	out( B15 B12 ) <- in( B9 B10 ) Loop( B11-B10 inner ) Freq: 32.9977
  0x00007d15bc5e9d94:   cmp    %r9d,%r13d                   ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
                                                            ; - jdk.incubator.vector.Int256Vector::lane@94 (line 528)
                                                            ; - test_slice::micro1@95 (line 33)
  0x00007d15bc5e9d97:   jge    0x00007d15bc5e9e24
 ;; B12: #	out( B17 B13 ) <- in( B11 )  Freq: 31.9978
  0x00007d15bc5e9d9d:   cmp    %r8d,%r13d
  0x00007d15bc5e9da0:   jae    0x00007d15bc5e9e3f
 ;; B13: #	out( B10 B14 ) <- in( B12 )  Freq: 31.9977
  0x00007d15bc5e9da6:   mov    0x8c(%rdi),%ecx              ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::checkIndex@3 (line 365)
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 58)
                                                            ; - jdk.incubator.vector.ByteVector::fromArray@9 (line 3041)
                                                            ; - test_slice::micro1@21 (line 22)
  0x00007d15bc5e9dac:   movslq %r13d,%r10                   ;*i2l {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::arrayAddress@4 (line 4118)
                                                            ; - jdk.incubator.vector.ByteVector::fromArray0Template@20 (line 3858)
                                                            ; - jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 1020)
                                                            ; - jdk.incubator.vector.ByteVector::fromArray@24 (line 3043)
                                                            ; - test_slice::micro1@21 (line 22)
  0x00007d15bc5e9daf:   vmovdqu 0x10(%rbx,%r10,1),%ymm4     ;*invokestatic convert {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.AbstractVector::convert0@322 (line 768)
                                                            ; - jdk.incubator.vector.AbstractVector::asVectorRawTemplate@11 (line 185)
                                                            ; - jdk.incubator.vector.Byte256Vector::asVectorRaw@2 (line 176)
                                                            ; - jdk.incubator.vector.AbstractVector::reinterpretAsInts@4 (line 266)
                                                            ; - jdk.incubator.vector.ByteVector::reinterpretAsInts@1 (line 51)
                                                            ; - test_slice::micro1@26 (line 23)
  0x00007d15bc5e9db6:   vpermd %ymm4,%ymm0,%ymm1
  0x00007d15bc5e9dbb:   vpslld $0x8,%ymm4,%ymm2
  0x00007d15bc5e9dc0:   vextracti128 $0x0,%ymm1,%xmm3
  0x00007d15bc5e9dc6:   vpinsrd $0x0,%ecx,%xmm3,%xmm3
  0x00007d15bc5e9dcc:   vinserti128 $0x0,%xmm3,%ymm1,%ymm1
  0x00007d15bc5e9dd2:   vpsrld $0x18,%ymm1,%ymm1
  0x00007d15bc5e9dd7:   vpor   %ymm1,%ymm2,%ymm1            ;*invokestatic convert {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.AbstractVector::convert0@322 (line 768)
                                                            ; - jdk.incubator.vector.AbstractVector::asVectorRawTemplate@11 (line 185)
                                                            ; - jdk.incubator.vector.AbstractVector::asByteVectorRawTemplate@4 (line 191)
                                                            ; - jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 170)
                                                            ; - jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 43)
                                                            ; - jdk.incubator.vector.IntVector::reinterpretAsBytes@24 (line 3761)
                                                            ; - test_slice::micro1@71 (line 31)
  0x00007d15bc5e9ddb:   cmp    %ebp,%r13d
  0x00007d15bc5e9dde:   jb     0x00007d15bc5e9d70           ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::fromArray0Template@28 (line 3858)
                                                            ; - jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 1020)
                                                            ; - jdk.incubator.vector.ByteVector::fromArray@24 (line 3043)
                                                            ; - test_slice::micro1@21 (line 22)
 ;; B14: #	out( N226 ) <- in( B13 )  Freq: 3.24226e-05
  0x00007d15bc5e9de0:   mov    $0xffffffe4,%esi
  0x00007d15bc5e9de5:   mov    %r13d,0x4(%rsp)
  0x00007d15bc5e9dea:   mov    %rbx,0x10(%rsp)
  0x00007d15bc5e9def:   mov    %r11,0x18(%rsp)
  0x00007d15bc5e9df4:   vmovdqu %ymm1,0x20(%rsp)
  0x00007d15bc5e9dfa:   vmovdqu %ymm4,0x40(%rsp)
  0x00007d15bc5e9e00:   vzeroupper 
  0x00007d15bc5e9e03:   call   0x00007d15bc54ebe0           ; ImmutableOopMap {[16]=Oop [24]=Oop }
                                                            ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::checkIndex@3 (line 365)
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 58)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@7 (line 3487)
                                                            ; - test_slice::micro1@80 (line 32)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007d15bc5e9e08:   nopl   0x1000280(%rax,%rax,1)       ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
                                                            ; - jdk.incubator.vector.Int256Vector::lane@94 (line 528)
                                                            ; - test_slice::micro1@95 (line 33)
                                                            ;   {post_call_nop}
  0x00007d15bc5e9e10:   movabs $0x7d157c697b00,%rdi         ;   {external_word}
  0x00007d15bc5e9e1a:   and    $0xfffffffffffffff0,%rsp
  0x00007d15bc5e9e1e:   call   0x00007d15cfbb2a22           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007d15bc5e9e23:   hlt                                 ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test_slice::micro1@2 (line 21)
 ;; B15: #	out( N226 ) <- in( B11 )  Freq: 0.999929
  0x00007d15bc5e9e24:   vzeroupper 
  0x00007d15bc5e9e27:   add    $0x70,%rsp
  0x00007d15bc5e9e2b:   pop    %rbp
  0x00007d15bc5e9e2c:   cmp    0x28(%r15),%rsp              ;   {poll_return}
  0x00007d15bc5e9e30:   ja     0x00007d15bc5e9f1c
  0x00007d15bc5e9e36:   ret    
 ;; B16: #	out( B4 ) <- in( B1 )  Freq: 0.000999987
  0x00007d15bc5e9e37:   xor    %r11d,%r11d
  0x00007d15bc5e9e3a:   jmp    0x00007d15bc5e9d0e           ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::checkIndex@3 (line 365)
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 58)
                                                            ; - jdk.incubator.vector.ByteVector::fromArray@9 (line 3041)
                                                            ; - test_slice::micro1@21 (line 22)
 ;; B17: #	out( N226 ) <- in( B12 )  Freq: 3.24227e-05
  0x00007d15bc5e9e3f:   mov    $0xffffffe4,%esi
  0x00007d15bc5e9e44:   mov    %r13d,(%rsp)
  0x00007d15bc5e9e48:   mov    %r11,0x8(%rsp)
  0x00007d15bc5e9e4d:   mov    %rbx,0x18(%rsp)
  0x00007d15bc5e9e52:   mov    %r8d,0x4(%rsp)               ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
                                                            ; - jdk.incubator.vector.Int256Vector::lane@94 (line 528)
                                                            ; - test_slice::micro1@95 (line 33)
  0x00007d15bc5e9e57:   nop
  0x00007d15bc5e9e58:   vzeroupper 
  0x00007d15bc5e9e5b:   call   0x00007d15bc54ebe0           ; ImmutableOopMap {[8]=Oop [24]=Oop }
                                                            ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::checkIndex@3 (line 365)
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 58)
                                                            ; - jdk.incubator.vector.ByteVector::fromArray@9 (line 3041)
                                                            ; - test_slice::micro1@21 (line 22)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007d15bc5e9e60:   nopl   0x20002d8(%rax,%rax,1)       ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
                                                            ; - jdk.incubator.vector.Int256Vector::lane@94 (line 528)
                                                            ; - test_slice::micro1@95 (line 33)
                                                            ;   {post_call_nop}
  0x00007d15bc5e9e68:   movabs $0x7d157c697b00,%rdi         ;   {external_word}
  0x00007d15bc5e9e72:   and    $0xfffffffffffffff0,%rsp
  0x00007d15bc5e9e76:   call   0x00007d15cfbb2a22           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007d15bc5e9e7b:   hlt                                 ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test_slice::micro1@2 (line 21)
 ;; B18: #	out( N226 ) <- in( B2 B5 )  Freq: 1.999e-06
  0x00007d15bc5e9e7c:   mov    $0xffffff85,%esi
  0x00007d15bc5e9e81:   mov    %r13d,%ebp
  0x00007d15bc5e9e84:   mov    %r14,(%rsp)
  0x00007d15bc5e9e88:   mov    %rbx,0x8(%rsp)               ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
                                                            ; - jdk.incubator.vector.Int256Vector::lane@94 (line 528)
                                                            ; - test_slice::micro1@95 (line 33)
  0x00007d15bc5e9e8d:   nop
  0x00007d15bc5e9e8e:   nop
  0x00007d15bc5e9e8f:   nop
  0x00007d15bc5e9e90:   vzeroupper 
  0x00007d15bc5e9e93:   call   0x00007d15bc54ebe0           ; ImmutableOopMap {[0]=Oop [8]=Oop }
                                                            ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test_slice::micro1@2 (line 21)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007d15bc5e9e98:   nopl   0x3000310(%rax,%rax,1)       ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
                                                            ; - jdk.incubator.vector.Int256Vector::lane@94 (line 528)
                                                            ; - test_slice::micro1@95 (line 33)
                                                            ;   {post_call_nop}
  0x00007d15bc5e9ea0:   movabs $0x7d157c697b00,%rdi         ;   {external_word}
  0x00007d15bc5e9eaa:   and    $0xfffffffffffffff0,%rsp
  0x00007d15bc5e9eae:   call   0x00007d15cfbb2a22           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007d15bc5e9eb3:   hlt                                 ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test_slice::micro1@2 (line 21)
 ;; B19: #	out( N226 ) <- in( B8 B6 B7 )  Freq: 3.01327e-06
  0x00007d15bc5e9eb4:   mov    $0xffffffbe,%esi
  0x00007d15bc5e9eb9:   mov    %r13d,%ebp
  0x00007d15bc5e9ebc:   mov    %r11,(%rsp)
  0x00007d15bc5e9ec0:   mov    %rbx,0x8(%rsp)               ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
                                                            ; - jdk.incubator.vector.Int256Vector::lane@94 (line 528)
                                                            ; - test_slice::micro1@95 (line 33)
  0x00007d15bc5e9ec5:   nop
  0x00007d15bc5e9ec6:   nop
  0x00007d15bc5e9ec7:   nop
  0x00007d15bc5e9ec8:   vzeroupper 
  0x00007d15bc5e9ecb:   call   0x00007d15bc54ebe0           ; ImmutableOopMap {[0]=Oop [8]=Oop }
                                                            ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test_slice::micro1@2 (line 21)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007d15bc5e9ed0:   nopl   0x4000348(%rax,%rax,1)       ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
                                                            ; - jdk.incubator.vector.Int256Vector::lane@94 (line 528)
                                                            ; - test_slice::micro1@95 (line 33)
                                                            ;   {post_call_nop}
  0x00007d15bc5e9ed8:   movabs $0x7d157c697b00,%rdi         ;   {external_word}
  0x00007d15bc5e9ee2:   and    $0xfffffffffffffff0,%rsp
  0x00007d15bc5e9ee6:   call   0x00007d15cfbb2a22           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007d15bc5e9eeb:   hlt                                 ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test_slice::micro1@2 (line 21)
 ;; B20: #	out( N226 ) <- in( B4 )  Freq: 1.01328e-06
  0x00007d15bc5e9eec:   mov    $0xffffff6e,%esi
  0x00007d15bc5e9ef1:   mov    %r13d,%ebp
  0x00007d15bc5e9ef4:   mov    %r11,(%rsp)
  0x00007d15bc5e9ef8:   vzeroupper 
  0x00007d15bc5e9efb:   call   0x00007d15bc54ebe0           ; ImmutableOopMap {[0]=Oop }
                                                            ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test_slice::micro1@2 (line 21)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007d15bc5e9f00:   nopl   0x5000378(%rax,%rax,1)       ;   {post_call_nop}
  0x00007d15bc5e9f08:   movabs $0x7d157c697b00,%rdi         ;   {external_word}
  0x00007d15bc5e9f12:   and    $0xfffffffffffffff0,%rsp
  0x00007d15bc5e9f16:   call   0x00007d15cfbb2a22           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007d15bc5e9f1b:   hlt                                 ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
                                                            ; - jdk.incubator.vector.Int256Vector::lane@94 (line 528)
                                                            ; - test_slice::micro1@95 (line 33)
  0x00007d15bc5e9f1c:   movabs $0x7d15bc5e9e2c,%r10         ;   {internal_word}
  0x00007d15bc5e9f26:   mov    %r10,0x5a8(%r15)
  0x00007d15bc5e9f2d:   jmp    0x00007d15bc5bbc60           ;   {runtime_call SafepointBlob}
  0x00007d15bc5e9f32:   call   Stub::Stub Generator method_entry_barrier_stub
                                                            ;   {runtime_call Stub::Stub Generator method_entry_barrier_stub}
  0x00007d15bc5e9f37:   jmp    0x00007d15bc5e9cca
  0x00007d15bc5e9f3c:   hlt    
  0x00007d15bc5e9f3d:   hlt    
  0x00007d15bc5e9f3e:   hlt    
  0x00007d15bc5e9f3f:   hlt    
[Exception Handler]
  0x00007d15bc5e9f40:   jmp    0x00007d15bc54e8e0           ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x00007d15bc5e9f45:   call   0x00007d15bc5e9f4a
  0x00007d15bc5e9f4a:   subq   $0x5,(%rsp)
  0x00007d15bc5e9f4f:   jmp    0x00007d15bc5bbf80           ;   {runtime_call DeoptimizationBlob}
  0x00007d15bc5e9f54:   hlt    
  0x00007d15bc5e9f55:   hlt    
  0x00007d15bc5e9f56:   hlt    
  0x00007d15bc5e9f57:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Oops:
  0x00007d15bc5e9f58:   0x00000000c8e90eb0 a 'java/lang/Class'{0x00000000c8e90eb0} = 'jdk/incubator/vector/Int256Vector'
  0x00007d15bc5e9f60:   0x00000000c8e664a8 a 'java/lang/Class'{0x00000000c8e664a8} = 'jdk/incubator/vector/Byte256Vector'
  0x00007d15bc5e9f68:   0x00000000c8e66458 a 'jdk/incubator/vector/ByteVector$ByteSpecies'{0x00000000c8e66458}
  0x00007d15bc5e9f70:   0x00000000c8f114a8 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x00000000c8f114a8}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Metadata:
  0x00007d157c698460:   0x00007d1594401b28 {method} {0x00007d1594401b28} 'micro1' '([B[B)V' in 'test_slice'
  0x00007d157c698468:   0x00007d1594183ab8 {method} {0x00007d1594183ab8} 'lane' '(I)I' in 'jdk/incubator/vector/Int256Vector'
  0x00007d157c698470:   0x00007d1594183bc8 {method} {0x00007d1594183bc8} 'laneHelper' '(I)I' in 'jdk/incubator/vector/Int256Vector'
  0x00007d157c698478:   0x000000004e1b83b0 {type array byte}
  0x00007d157c698480:   0x00007d15940784f8 {method} {0x00007d15940784f8} 'intoArray' '([BI)V' in 'jdk/incubator/vector/ByteVector'
  0x00007d157c698488:   0x00007d1594077670 {method} {0x00007d1594077670} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[BI)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector'
  0x00007d157c698490:   0x00007d15941cf158 {method} {0x00007d15941cf158} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
  0x00007d157c698498:   0x000000004e27f4e8 {method} {0x000000004e27f4e8} 'checkIndex' '(II)I' in 'java/util/Objects'
  0x00007d157c6984a0:   0x00007d1594119520 {method} {0x00007d1594119520} 'fromArray0' '([BI)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/Byte256Vector'
  0x00007d157c6984a8:   0x00007d1594079238 {method} {0x00007d1594079238} 'fromArray0Template' '([BI)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector'
  0x00007d157c6984b0:   0x00007d159407ac30 {method} {0x00007d159407ac30} 'arrayAddress' '([BI)J' in 'jdk/incubator/vector/ByteVector'
  0x00007d157c6984b8:   0x00007d159407b9e0 {method} {0x00007d159407b9e0} 'reinterpretAsInts' '()Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/ByteVector'
  0x00007d157c6984c0:   0x00007d1594060ff0 {method} {0x00007d1594060ff0} 'reinterpretAsInts' '()Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/AbstractVector'
  0x00007d157c6984c8:   0x00007d15941160e8 {method} {0x00007d15941160e8} 'asVectorRaw' '(Ljdk/incubator/vector/LaneType;)Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/Byte256Vector'
  0x00007d157c6984d0:   0x00007d15940602b8 {method} {0x00007d15940602b8} 'asVectorRawTemplate' '(Ljdk/incubator/vector/LaneType;)Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractVector'
  0x00007d157c6984d8:   0x00007d1594063060 {method} {0x00007d1594063060} 'convert0' '(CLjdk/incubator/vector/AbstractSpecies;)Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractVector'
  0x00007d157c6984e0:   0x00007d15940525d8 {method} {0x00007d15940525d8} 'reinterpretAsBytes' '()Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/IntVector'
  0x00007d157c6984e8:   0x00007d15941871e8 {method} {0x00007d15941871e8} 'asByteVectorRaw' '()Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/Int256Vector'
  0x00007d157c6984f0:   0x00007d1594180cc0 {method} {0x00007d1594180cc0} 'asByteVectorRaw' '()Ljdk/incubator/vector/Byte256Vector;' in 'jdk/incubator/vector/Int256Vector'
  0x00007d157c6984f8:   0x00007d1594060398 {method} {0x00007d1594060398} 'asByteVectorRawTemplate' '()Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/AbstractVector'
  0x00007d157c698500:   0x00007d1594048628 {method} {0x00007d1594048628} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;I)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/IntVector'
  0x00007d157c698508:   0x00007d159404b140 {method} {0x00007d159404b140} 'or' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/IntVector'
  0x00007d157c698510:   0x00007d15940d52d0 {method} {0x00007d15940d52d0} 'loopBound' '(I)I' in 'jdk/incubator/vector/AbstractSpecies'
  0x00007d157c698518:   0x00007d15941cf5d0 {method} {0x00007d15941cf5d0} 'roundDown' '(II)I' in 'jdk/incubator/vector/VectorIntrinsics'
  0x00007d157c698520:   0x00007d15940cea60 {method} {0x00007d15940cea60} 'dummyVector' '()Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector$ByteSpecies'
  0x00007d157c698528:   0x00007d15940d46b0 {method} {0x00007d15940d46b0} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
  0x00007d157c698530:   0x00007d15940d6070 {method} {0x00007d15940d6070} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
  0x00007d157c698538:   0x00007d15940ce000 {method} {0x00007d15940ce000} 'vectorType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/ByteVector$ByteSpecies'
  0x00007d157c698540:   0x00007d15940cde48 {method} {0x00007d15940cde48} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/ByteVector$ByteSpecies'
  0x00007d157c698548:   0x00007d15940d4788 {method} {0x00007d15940d4788} 'laneCount' '()I' in 'jdk/incubator/vector/AbstractSpecies'
  0x00007d157c698550:   0x000000004e26b820 {method} {0x000000004e26b820} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder'
  0x00007d157c698558:   0x00007d15941151c8 {method} {0x00007d15941151c8} 'vspecies' '()Ljdk/incubator/vector/ByteVector$ByteSpecies;' in 'jdk/incubator/vector/Byte256Vector'
  0x00007d157c698560:   0x000000004e272eb0 {method} {0x000000004e272eb0} 'constant_L' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$Holder'
  0x00007d157c698568:   0x00007d15940d5790 {method} {0x00007d15940d5790} 'withLanes' '(Ljdk/incubator/vector/LaneType;)Ljdk/incubator/vector/AbstractSpecies;' in 'jdk/incubator/vector/AbstractSpecies'
  0x00007d157c698570:   0x00007d159411ca78 {method} {0x00007d159411ca78} 'vspecies' '()Ljdk/incubator/vector/AbstractSpecies;' in 'jdk/incubator/vector/Byte256Vector'
  0x00007d157c698578:   0x00007d15940d7b78 {method} {0x00007d15940d7b78} 'findSpecies' '(Ljdk/incubator/vector/LaneType;Ljdk/incubator/vector/VectorShape;)Ljdk/incubator/vector/AbstractSpecies;' in 'jdk/incubator/vector/AbstractSpecies'
  0x00007d157c698580:   0x00007d1594153f80 {method} {0x00007d1594153f80} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/IntVector$IntSpecies'
  0x00007d157c698588:   0x00007d15941152a0 {method} {0x00007d15941152a0} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/Byte256Vector'
  0x00007d157c698590:   0x00007d1594115528 {method} {0x00007d1594115528} 'length' '()I' in 'jdk/incubator/vector/Byte256Vector'
  0x00007d157c698598:   0x00007d1594156010 {method} {0x00007d1594156010} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/IntVector$IntSpecies'
  0x00007d157c6985a0:   0x00007d1594154b98 {method} {0x00007d1594154b98} 'dummyVector' '()Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/IntVector$IntSpecies'
  0x00007d157c6985a8:   0x00007d1594184fe0 {method} {0x00007d1594184fe0} 'rearrange' '(Ljdk/incubator/vector/VectorShuffle;)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/Int256Vector'
  0x00007d157c6985b0:   0x00007d1594183250 {method} {0x00007d1594183250} 'rearrange' '(Ljdk/incubator/vector/VectorShuffle;)Ljdk/incubator/vector/Int256Vector;' in 'jdk/incubator/vector/Int256Vector'
  0x00007d157c6985b8:   0x00007d159404dbe8 {method} {0x00007d159404dbe8} 'rearrangeTemplate' '(Ljava/lang/Class;Ljdk/incubator/vector/VectorShuffle;)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/IntVector'
  0x00007d157c6985c0:   0x000000004e27f7f8 {method} {0x000000004e27f7f8} 'requireNonNull' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/Objects'
  0x00007d157c6985c8:   0x00007d15941801e8 {method} {0x00007d15941801e8} 'length' '()I' in 'jdk/incubator/vector/Int256Vector'
  0x00007d157c6985d0:   0x00007d15941848c0 {method} {0x00007d15941848c0} 'withLane' '(II)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/Int256Vector'
  0x00007d157c6985d8:   0x00007d1594183d40 {method} {0x00007d1594183d40} 'withLane' '(II)Ljdk/incubator/vector/Int256Vector;' in 'jdk/incubator/vector/Int256Vector'
  0x00007d157c6985e0:   0x00007d1594183e60 {method} {0x00007d1594183e60} 'withLaneHelper' '(II)Ljdk/incubator/vector/Int256Vector;' in 'jdk/incubator/vector/Int256Vector'
  0x00007d157c6985e8:   0x00007d1594044138 {method} {0x00007d1594044138} 'opKind' '(Ljdk/incubator/vector/VectorOperators$Operator;I)Z' in 'jdk/incubator/vector/IntVector'
  0x00007d157c6985f0:   0x00007d15940c93e8 {method} {0x00007d15940c93e8} 'opKind' '(Ljdk/incubator/vector/VectorOperators$Operator;I)Z' in 'jdk/incubator/vector/VectorOperators'
  0x00007d157c6985f8:   0x00007d15941bba38 {method} {0x00007d15941bba38} 'opKind' '(I)Z' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  0x00007d157c698600:   0x00007d1594185e50 {method} {0x00007d1594185e50} 'lanewiseShift' '(Ljdk/incubator/vector/VectorOperators$Binary;I)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/Int256Vector'
  0x00007d157c698608:   0x00007d1594181bc0 {method} {0x00007d1594181bc0} 'lanewiseShift' '(Ljdk/incubator/vector/VectorOperators$Binary;I)Ljdk/incubator/vector/Int256Vector;' in 'jdk/incubator/vector/Int256Vector'
  0x00007d157c698610:   0x00007d1594048bf8 {method} {0x00007d1594048bf8} 'lanewiseShiftTemplate' '(Ljdk/incubator/vector/VectorOperators$Binary;I)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/IntVector'
  0x00007d157c698618:   0x00007d1594043f60 {method} {0x00007d1594043f60} 'opCode' '(Ljdk/incubator/vector/VectorOperators$Operator;)I' in 'jdk/incubator/vector/IntVector'
  0x00007d157c698620:   0x00007d15940c6710 {method} {0x00007d15940c6710} 'find' '(Ljdk/incubator/vector/VectorOperators$Operator;ILjava/util/function/IntFunction;)Ljava/lang/Object;' in 'jdk/incubator/vector/VectorOperators$ImplCache'
  0x00007d157c698628:   0x00007d15940c9300 {method} {0x00007d15940c9300} 'opCode' '(Ljdk/incubator/vector/VectorOperators$Operator;II)I' in 'jdk/incubator/vector/VectorOperators'
  0x00007d157c698630:   0x00007d15941bb570 {method} {0x00007d15941bb570} 'opCode' '(II)I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  0x00007d157c698638:   0x00007d15941bb660 {method} {0x00007d15941bb660} 'opCodeRaw' '()I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  0x00007d157c698640:   0x00007d1594186020 {method} {0x00007d1594186020} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/Int256Vector'
  0x00007d157c698648:   0x00007d15941819b8 {method} {0x00007d15941819b8} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/Int256Vector;' in 'jdk/incubator/vector/Int256Vector'
  0x00007d157c698650:   0x00007d1594047fc0 {method} {0x00007d1594047fc0} 'lanewiseTemplate' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/IntVector'
  0x00007d157c698658:   0x00007d159405fca0 {method} {0x00007d159405fca0} 'check' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractVector'
  0x00007d157c698660:   0x00007d159405fdd8 {method} {0x00007d159405fdd8} 'sameSpecies' '(Ljdk/incubator/vector/Vector;)Z' in 'jdk/incubator/vector/AbstractVector'
  0x00007d157c698668:   0x00007d15941872c0 {method} {0x00007d15941872c0} 'vspecies' '()Ljdk/incubator/vector/AbstractSpecies;' in 'jdk/incubator/vector/Int256Vector'
  0x00007d157c698670:   0x00007d159417fe88 {method} {0x00007d159417fe88} 'vspecies' '()Ljdk/incubator/vector/IntVector$IntSpecies;' in 'jdk/incubator/vector/Int256Vector'
  0x00007d157c698678:   0x00007d159417ff60 {method} {0x00007d159417ff60} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/Int256Vector'
  0x00007d157c698680:   0x00007d15940cfed8 {method} {0x00007d15940cfed8} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/ByteVector$ByteSpecies'
  0x00007d157c698688:   0x000000004f004dd8 'jdk/incubator/vector/ByteVector$ByteSpecies'
  0x00007d157c698690:   0x00007d15940d3d98 'jdk/incubator/vector/VectorSpecies'
  0x00007d157c698698:   0x00007d15940d2b28 {method} {0x00007d15940d2b28} 'loopBound' '(I)I' in 'jdk/incubator/vector/VectorSpecies'
  0x00007d157c6986a0:   0x00007d15940d2930 {method} {0x00007d15940d2930} 'length' '()I' in 'jdk/incubator/vector/VectorSpecies'
  0x00007d157c6986a8:   0x000000004f008550 'jdk/incubator/vector/Byte256Vector'
  0x00007d157c6986b0:   0x00007d15940869b0 'jdk/incubator/vector/ByteVector'
  0x00007d157c6986b8:   0x000000004f00b298 'jdk/incubator/vector/IntVector$IntSpecies'
  0x00007d157c6986c0:   0x000000004f010490 'jdk/incubator/vector/VectorOperators$BinaryImpl'
  0x00007d157c6986c8:   0x00007d15941bbd20 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  0x00007d157c6986d0:   0x000000004f004988 'jdk/incubator/vector/VectorOperators$ImplCache'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
pc-bytecode offsets:
PcDesc(pc=0x00007d15bc5e9c9f offset=ffffffff bits=0):
PcDesc(pc=0x00007d15bc5e9cd6 offset=36 bits=0):
   test_slice::micro1@2 (line 21)
PcDesc(pc=0x00007d15bc5e9cf4 offset=54 bits=0):
   jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
   jdk.incubator.vector.Int256Vector::lane@94 (line 528)
   test_slice::micro1@95 (line 33)
PcDesc(pc=0x00007d15bc5e9d1f offset=7f bits=0):
   test_slice::micro1@2 (line 21)
PcDesc(pc=0x00007d15bc5e9d23 offset=83 bits=0):
   test_slice::micro1@7 (line 21)
PcDesc(pc=0x00007d15bc5e9d34 offset=94 bits=0):
   jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
   jdk.incubator.vector.Int256Vector::lane@94 (line 528)
   test_slice::micro1@95 (line 33)
PcDesc(pc=0x00007d15bc5e9d6a offset=ca bits=0):
   test_slice::micro1@112 (line 21)
PcDesc(pc=0x00007d15bc5e9d70 offset=d0 bits=0):
   jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
   jdk.incubator.vector.Int256Vector::lane@94 (line 528)
   test_slice::micro1@95 (line 33)
PcDesc(pc=0x00007d15bc5e9d77 offset=d7 bits=0):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
   test_slice::micro1@80 (line 32)
PcDesc(pc=0x00007d15bc5e9d8b offset=eb bits=0):
   jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
   jdk.incubator.vector.Int256Vector::lane@94 (line 528)
   test_slice::micro1@95 (line 33)
PcDesc(pc=0x00007d15bc5e9d92 offset=f2 bits=1):
   test_slice::micro1@112 (line 21)  reexecute=true
   Locals
    - l0: reg r11 [22],oop
    - l1: reg rbx [6],oop
    - l2: reg r13 [26],int
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
PcDesc(pc=0x00007d15bc5e9d94 offset=f4 bits=0):
   test_slice::micro1@2 (line 21)
PcDesc(pc=0x00007d15bc5e9d97 offset=f7 bits=0):
   jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
   jdk.incubator.vector.Int256Vector::lane@94 (line 528)
   test_slice::micro1@95 (line 33)
PcDesc(pc=0x00007d15bc5e9dac offset=10c bits=0):
   java.util.Objects::checkIndex@3 (line 365)
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 58)
   jdk.incubator.vector.ByteVector::fromArray@9 (line 3041)
   test_slice::micro1@21 (line 22)
PcDesc(pc=0x00007d15bc5e9daf offset=10f bits=0):
   jdk.incubator.vector.ByteVector::arrayAddress@4 (line 4118)
   jdk.incubator.vector.ByteVector::fromArray0Template@20 (line 3858)
   jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 1020)
   jdk.incubator.vector.ByteVector::fromArray@24 (line 3043)
   test_slice::micro1@21 (line 22)
PcDesc(pc=0x00007d15bc5e9db6 offset=116 bits=0):
   jdk.incubator.vector.AbstractVector::convert0@322 (line 768)
   jdk.incubator.vector.AbstractVector::asVectorRawTemplate@11 (line 185)
   jdk.incubator.vector.Byte256Vector::asVectorRaw@2 (line 176)
   jdk.incubator.vector.AbstractVector::reinterpretAsInts@4 (line 266)
   jdk.incubator.vector.ByteVector::reinterpretAsInts@1 (line 51)
   test_slice::micro1@26 (line 23)
PcDesc(pc=0x00007d15bc5e9ddb offset=13b bits=0):
   jdk.incubator.vector.AbstractVector::convert0@322 (line 768)
   jdk.incubator.vector.AbstractVector::asVectorRawTemplate@11 (line 185)
   jdk.incubator.vector.AbstractVector::asByteVectorRawTemplate@4 (line 191)
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 170)
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 43)
   jdk.incubator.vector.IntVector::reinterpretAsBytes@24 (line 3761)
   test_slice::micro1@71 (line 31)
PcDesc(pc=0x00007d15bc5e9de0 offset=140 bits=0):
   jdk.incubator.vector.ByteVector::fromArray0Template@28 (line 3858)
   jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 1020)
   jdk.incubator.vector.ByteVector::fromArray@24 (line 3043)
   test_slice::micro1@21 (line 22)
PcDesc(pc=0x00007d15bc5e9e08 offset=168 bits=0):
   java.util.Objects::checkIndex@3 (line 365)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[4]
    - @1: reg rbp [10],int
    - @2: null
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 58)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.ByteVector::intoArray@7 (line 3487)
   Locals
    - l0: obj[114]
    - l1: stack[24],oop
    - l2: empty
    - l3: empty
   test_slice::micro1@80 (line 32)
   Locals
    - l0: stack[24],oop
    - l1: stack[16],oop
    - l2: stack[4]
    - l3: empty
    - l4: obj[113]
    - l5: empty
    - l6: empty
   Objects
    - 0: R obj[113], jdk.incubator.vector.Int256Vector
        Fields: stack[64],vector
    - 1: R obj[114], jdk.incubator.vector.Byte256Vector
        Fields: stack[32],vector
PcDesc(pc=0x00007d15bc5e9e10 offset=170 bits=0):
   jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
   jdk.incubator.vector.Int256Vector::lane@94 (line 528)
   test_slice::micro1@95 (line 33)
PcDesc(pc=0x00007d15bc5e9e24 offset=184 bits=0):
   test_slice::micro1@2 (line 21)
PcDesc(pc=0x00007d15bc5e9e3f offset=19f bits=0):
   java.util.Objects::checkIndex@3 (line 365)
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 58)
   jdk.incubator.vector.ByteVector::fromArray@9 (line 3041)
   test_slice::micro1@21 (line 22)
PcDesc(pc=0x00007d15bc5e9e57 offset=1b7 bits=0):
   jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
   jdk.incubator.vector.Int256Vector::lane@94 (line 528)
   test_slice::micro1@95 (line 33)
PcDesc(pc=0x00007d15bc5e9e60 offset=1c0 bits=0):
   java.util.Objects::checkIndex@3 (line 365)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[0]
    - @1: stack[4]
    - @2: null
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 58)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.ByteVector::fromArray@9 (line 3041)
   Locals
    - l0: a 'jdk/incubator/vector/ByteVector$ByteSpecies'{0x00000000c8e66458}
    - l1: stack[24],oop
    - l2: empty
    - l3: empty
   test_slice::micro1@21 (line 22)
   Locals
    - l0: stack[8],oop
    - l1: stack[24],oop
    - l2: stack[0]
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
PcDesc(pc=0x00007d15bc5e9e68 offset=1c8 bits=0):
   jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
   jdk.incubator.vector.Int256Vector::lane@94 (line 528)
   test_slice::micro1@95 (line 33)
PcDesc(pc=0x00007d15bc5e9e7c offset=1dc bits=0):
   test_slice::micro1@2 (line 21)
PcDesc(pc=0x00007d15bc5e9e8d offset=1ed bits=0):
   jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
   jdk.incubator.vector.Int256Vector::lane@94 (line 528)
   test_slice::micro1@95 (line 33)
PcDesc(pc=0x00007d15bc5e9e98 offset=1f8 bits=0):
   test_slice::micro1@2 (line 21)
   Locals
    - l0: stack[0],oop
    - l1: stack[8],oop
    - l2: reg rbp [10],int
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
PcDesc(pc=0x00007d15bc5e9ea0 offset=200 bits=0):
   jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
   jdk.incubator.vector.Int256Vector::lane@94 (line 528)
   test_slice::micro1@95 (line 33)
PcDesc(pc=0x00007d15bc5e9eb4 offset=214 bits=0):
   test_slice::micro1@2 (line 21)
PcDesc(pc=0x00007d15bc5e9ec5 offset=225 bits=0):
   jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
   jdk.incubator.vector.Int256Vector::lane@94 (line 528)
   test_slice::micro1@95 (line 33)
PcDesc(pc=0x00007d15bc5e9ed0 offset=230 bits=0):
   test_slice::micro1@2 (line 21)
   Locals
    - l0: stack[0],oop
    - l1: stack[8],oop
    - l2: reg rbp [10],int
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
PcDesc(pc=0x00007d15bc5e9ed8 offset=238 bits=0):
   jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
   jdk.incubator.vector.Int256Vector::lane@94 (line 528)
   test_slice::micro1@95 (line 33)
PcDesc(pc=0x00007d15bc5e9eec offset=24c bits=0):
   test_slice::micro1@2 (line 21)
PcDesc(pc=0x00007d15bc5e9f00 offset=260 bits=0):
   test_slice::micro1@2 (line 21)
   Locals
    - l0: stack[0],oop
    - l1: null
    - l2: reg rbp [10],int
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
PcDesc(pc=0x00007d15bc5e9f1c offset=27c bits=0):
   jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
   jdk.incubator.vector.Int256Vector::lane@94 (line 528)
   test_slice::micro1@95 (line 33)
PcDesc(pc=0x00007d15bc5e9f79 offset=2d9 bits=0):
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
oop maps:ImmutableOopMapSet contains 6 OopMaps

ImmutableOopMap {r11=Oop rbx=Oop rdi=Oop } pc offsets: 242 
ImmutableOopMap {[16]=Oop [24]=Oop } pc offsets: 360 
ImmutableOopMap {[8]=Oop [24]=Oop } pc offsets: 448 
ImmutableOopMap {[0]=Oop [8]=Oop } pc offsets: 504 560 
ImmutableOopMap {[0]=Oop } pc offsets: 608 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
scopes:
ScopeDesc(pc=0x00007d15bc5e9cd6 offset=36):
   test_slice::micro1@2 (line 21)
ScopeDesc(pc=0x00007d15bc5e9cf4 offset=54):
   jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
ScopeDesc(pc=0x00007d15bc5e9cf4 offset=54):
   jdk.incubator.vector.Int256Vector::lane@94 (line 528)
ScopeDesc(pc=0x00007d15bc5e9cf4 offset=54):
   test_slice::micro1@95 (line 33)
ScopeDesc(pc=0x00007d15bc5e9d1f offset=7f):
   test_slice::micro1@2 (line 21)
ScopeDesc(pc=0x00007d15bc5e9d23 offset=83):
   test_slice::micro1@7 (line 21)
ScopeDesc(pc=0x00007d15bc5e9d34 offset=94):
   jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
ScopeDesc(pc=0x00007d15bc5e9d34 offset=94):
   jdk.incubator.vector.Int256Vector::lane@94 (line 528)
ScopeDesc(pc=0x00007d15bc5e9d34 offset=94):
   test_slice::micro1@95 (line 33)
ScopeDesc(pc=0x00007d15bc5e9d6a offset=ca):
   test_slice::micro1@112 (line 21)
ScopeDesc(pc=0x00007d15bc5e9d70 offset=d0):
   jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
ScopeDesc(pc=0x00007d15bc5e9d70 offset=d0):
   jdk.incubator.vector.Int256Vector::lane@94 (line 528)
ScopeDesc(pc=0x00007d15bc5e9d70 offset=d0):
   test_slice::micro1@95 (line 33)
ScopeDesc(pc=0x00007d15bc5e9d77 offset=d7):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
ScopeDesc(pc=0x00007d15bc5e9d77 offset=d7):
   test_slice::micro1@80 (line 32)
ScopeDesc(pc=0x00007d15bc5e9d8b offset=eb):
   jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
ScopeDesc(pc=0x00007d15bc5e9d8b offset=eb):
   jdk.incubator.vector.Int256Vector::lane@94 (line 528)
ScopeDesc(pc=0x00007d15bc5e9d8b offset=eb):
   test_slice::micro1@95 (line 33)
ScopeDesc(pc=0x00007d15bc5e9d92 offset=f2):
   test_slice::micro1@112 (line 21)  reexecute=true
   Locals
    - l0: reg r11 [22],oop
    - l1: reg rbx [6],oop
    - l2: reg r13 [26],int
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
ScopeDesc(pc=0x00007d15bc5e9d94 offset=f4):
   test_slice::micro1@2 (line 21)
ScopeDesc(pc=0x00007d15bc5e9d97 offset=f7):
   jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
ScopeDesc(pc=0x00007d15bc5e9d97 offset=f7):
   jdk.incubator.vector.Int256Vector::lane@94 (line 528)
ScopeDesc(pc=0x00007d15bc5e9d97 offset=f7):
   test_slice::micro1@95 (line 33)
ScopeDesc(pc=0x00007d15bc5e9dac offset=10c):
   java.util.Objects::checkIndex@3 (line 365)
ScopeDesc(pc=0x00007d15bc5e9dac offset=10c):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 58)
ScopeDesc(pc=0x00007d15bc5e9dac offset=10c):
   jdk.incubator.vector.ByteVector::fromArray@9 (line 3041)
ScopeDesc(pc=0x00007d15bc5e9dac offset=10c):
   test_slice::micro1@21 (line 22)
ScopeDesc(pc=0x00007d15bc5e9daf offset=10f):
   jdk.incubator.vector.ByteVector::arrayAddress@4 (line 4118)
ScopeDesc(pc=0x00007d15bc5e9daf offset=10f):
   jdk.incubator.vector.ByteVector::fromArray0Template@20 (line 3858)
ScopeDesc(pc=0x00007d15bc5e9daf offset=10f):
   jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 1020)
ScopeDesc(pc=0x00007d15bc5e9daf offset=10f):
   jdk.incubator.vector.ByteVector::fromArray@24 (line 3043)
ScopeDesc(pc=0x00007d15bc5e9daf offset=10f):
   test_slice::micro1@21 (line 22)
ScopeDesc(pc=0x00007d15bc5e9db6 offset=116):
   jdk.incubator.vector.AbstractVector::convert0@322 (line 768)
ScopeDesc(pc=0x00007d15bc5e9db6 offset=116):
   jdk.incubator.vector.AbstractVector::asVectorRawTemplate@11 (line 185)
ScopeDesc(pc=0x00007d15bc5e9db6 offset=116):
   jdk.incubator.vector.Byte256Vector::asVectorRaw@2 (line 176)
ScopeDesc(pc=0x00007d15bc5e9db6 offset=116):
   jdk.incubator.vector.AbstractVector::reinterpretAsInts@4 (line 266)
ScopeDesc(pc=0x00007d15bc5e9db6 offset=116):
   jdk.incubator.vector.ByteVector::reinterpretAsInts@1 (line 51)
ScopeDesc(pc=0x00007d15bc5e9db6 offset=116):
   test_slice::micro1@26 (line 23)
ScopeDesc(pc=0x00007d15bc5e9ddb offset=13b):
   jdk.incubator.vector.AbstractVector::convert0@322 (line 768)
ScopeDesc(pc=0x00007d15bc5e9ddb offset=13b):
   jdk.incubator.vector.AbstractVector::asVectorRawTemplate@11 (line 185)
ScopeDesc(pc=0x00007d15bc5e9ddb offset=13b):
   jdk.incubator.vector.AbstractVector::asByteVectorRawTemplate@4 (line 191)
ScopeDesc(pc=0x00007d15bc5e9ddb offset=13b):
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 170)
ScopeDesc(pc=0x00007d15bc5e9ddb offset=13b):
   jdk.incubator.vector.Int256Vector::asByteVectorRaw@1 (line 43)
ScopeDesc(pc=0x00007d15bc5e9ddb offset=13b):
   jdk.incubator.vector.IntVector::reinterpretAsBytes@24 (line 3761)
ScopeDesc(pc=0x00007d15bc5e9ddb offset=13b):
   test_slice::micro1@71 (line 31)
ScopeDesc(pc=0x00007d15bc5e9de0 offset=140):
   jdk.incubator.vector.ByteVector::fromArray0Template@28 (line 3858)
ScopeDesc(pc=0x00007d15bc5e9de0 offset=140):
   jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 1020)
ScopeDesc(pc=0x00007d15bc5e9de0 offset=140):
   jdk.incubator.vector.ByteVector::fromArray@24 (line 3043)
ScopeDesc(pc=0x00007d15bc5e9de0 offset=140):
   test_slice::micro1@21 (line 22)
ScopeDesc(pc=0x00007d15bc5e9e08 offset=168):
   java.util.Objects::checkIndex@3 (line 365)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[4]
    - @1: reg rbp [10],int
    - @2: null
ScopeDesc(pc=0x00007d15bc5e9e08 offset=168):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 58)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00007d15bc5e9e08 offset=168):
   jdk.incubator.vector.ByteVector::intoArray@7 (line 3487)
   Locals
    - l0: obj[114]
    - l1: stack[24],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x00007d15bc5e9e08 offset=168):
   test_slice::micro1@80 (line 32)
   Locals
    - l0: stack[24],oop
    - l1: stack[16],oop
    - l2: stack[4]
    - l3: empty
    - l4: obj[113]
    - l5: empty
    - l6: empty
   Objects
    - 0: R obj[113], jdk.incubator.vector.Int256Vector
        Fields: stack[64],vector
    - 1: R obj[114], jdk.incubator.vector.Byte256Vector
        Fields: stack[32],vector
ScopeDesc(pc=0x00007d15bc5e9e10 offset=170):
   jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
ScopeDesc(pc=0x00007d15bc5e9e10 offset=170):
   jdk.incubator.vector.Int256Vector::lane@94 (line 528)
ScopeDesc(pc=0x00007d15bc5e9e10 offset=170):
   test_slice::micro1@95 (line 33)
ScopeDesc(pc=0x00007d15bc5e9e24 offset=184):
   test_slice::micro1@2 (line 21)
ScopeDesc(pc=0x00007d15bc5e9e3f offset=19f):
   java.util.Objects::checkIndex@3 (line 365)
ScopeDesc(pc=0x00007d15bc5e9e3f offset=19f):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 58)
ScopeDesc(pc=0x00007d15bc5e9e3f offset=19f):
   jdk.incubator.vector.ByteVector::fromArray@9 (line 3041)
ScopeDesc(pc=0x00007d15bc5e9e3f offset=19f):
   test_slice::micro1@21 (line 22)
ScopeDesc(pc=0x00007d15bc5e9e57 offset=1b7):
   jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
ScopeDesc(pc=0x00007d15bc5e9e57 offset=1b7):
   jdk.incubator.vector.Int256Vector::lane@94 (line 528)
ScopeDesc(pc=0x00007d15bc5e9e57 offset=1b7):
   test_slice::micro1@95 (line 33)
ScopeDesc(pc=0x00007d15bc5e9e60 offset=1c0):
   java.util.Objects::checkIndex@3 (line 365)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[0]
    - @1: stack[4]
    - @2: null
ScopeDesc(pc=0x00007d15bc5e9e60 offset=1c0):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 58)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00007d15bc5e9e60 offset=1c0):
   jdk.incubator.vector.ByteVector::fromArray@9 (line 3041)
   Locals
    - l0: a 'jdk/incubator/vector/ByteVector$ByteSpecies'{0x00000000c8e66458}
    - l1: stack[24],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x00007d15bc5e9e60 offset=1c0):
   test_slice::micro1@21 (line 22)
   Locals
    - l0: stack[8],oop
    - l1: stack[24],oop
    - l2: stack[0]
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
ScopeDesc(pc=0x00007d15bc5e9e68 offset=1c8):
   jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
ScopeDesc(pc=0x00007d15bc5e9e68 offset=1c8):
   jdk.incubator.vector.Int256Vector::lane@94 (line 528)
ScopeDesc(pc=0x00007d15bc5e9e68 offset=1c8):
   test_slice::micro1@95 (line 33)
ScopeDesc(pc=0x00007d15bc5e9e7c offset=1dc):
   test_slice::micro1@2 (line 21)
ScopeDesc(pc=0x00007d15bc5e9e8d offset=1ed):
   jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
ScopeDesc(pc=0x00007d15bc5e9e8d offset=1ed):
   jdk.incubator.vector.Int256Vector::lane@94 (line 528)
ScopeDesc(pc=0x00007d15bc5e9e8d offset=1ed):
   test_slice::micro1@95 (line 33)
ScopeDesc(pc=0x00007d15bc5e9e98 offset=1f8):
   test_slice::micro1@2 (line 21)
   Locals
    - l0: stack[0],oop
    - l1: stack[8],oop
    - l2: reg rbp [10],int
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
ScopeDesc(pc=0x00007d15bc5e9ea0 offset=200):
   jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
ScopeDesc(pc=0x00007d15bc5e9ea0 offset=200):
   jdk.incubator.vector.Int256Vector::lane@94 (line 528)
ScopeDesc(pc=0x00007d15bc5e9ea0 offset=200):
   test_slice::micro1@95 (line 33)
ScopeDesc(pc=0x00007d15bc5e9eb4 offset=214):
   test_slice::micro1@2 (line 21)
ScopeDesc(pc=0x00007d15bc5e9ec5 offset=225):
   jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
ScopeDesc(pc=0x00007d15bc5e9ec5 offset=225):
   jdk.incubator.vector.Int256Vector::lane@94 (line 528)
ScopeDesc(pc=0x00007d15bc5e9ec5 offset=225):
   test_slice::micro1@95 (line 33)
ScopeDesc(pc=0x00007d15bc5e9ed0 offset=230):
   test_slice::micro1@2 (line 21)
   Locals
    - l0: stack[0],oop
    - l1: stack[8],oop
    - l2: reg rbp [10],int
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
ScopeDesc(pc=0x00007d15bc5e9ed8 offset=238):
   jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
ScopeDesc(pc=0x00007d15bc5e9ed8 offset=238):
   jdk.incubator.vector.Int256Vector::lane@94 (line 528)
ScopeDesc(pc=0x00007d15bc5e9ed8 offset=238):
   test_slice::micro1@95 (line 33)
ScopeDesc(pc=0x00007d15bc5e9eec offset=24c):
   test_slice::micro1@2 (line 21)
ScopeDesc(pc=0x00007d15bc5e9f00 offset=260):
   test_slice::micro1@2 (line 21)
   Locals
    - l0: stack[0],oop
    - l1: null
    - l2: reg rbp [10],int
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
ScopeDesc(pc=0x00007d15bc5e9f1c offset=27c):
   jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
ScopeDesc(pc=0x00007d15bc5e9f1c offset=27c):
   jdk.incubator.vector.Int256Vector::lane@94 (line 528)
ScopeDesc(pc=0x00007d15bc5e9f1c offset=27c):
   test_slice::micro1@95 (line 33)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
relocations:
         @0x00007d157c6983f0: 0020
relocInfo@0x00007d157c6983f0 [type=0(none) addr=0x00007d15bc5e9ca0 offset=32]
         @0x00007d157c6983f2: 3100
relocInfo@0x00007d157c6983f2 [type=6(runtime_call) addr=0x00007d15bc5e9ca0 offset=0 format=1] | [destination=0x00007d15cfd4b1ce] os::breakpoint()
         @0x00007d157c6983f4: 303c
relocInfo@0x00007d157c6983f4 [type=6(runtime_call) addr=0x00007d15bc5e9cdc offset=60] | [destination=0x00007d15cfe7bcce] SharedRuntime::OSR_migration_end(long*)
         @0x00007d157c6983f6: 800d
relocInfo@0x00007d157c6983f6 [type=16(post_call_nop) addr=0x00007d15bc5e9ce9 offset=13]
         @0x00007d157c6983f8: 78046315
relocInfo@0x00007d157c6983fa [type=12(metadata) addr=0x00007d15bc5e9cfe offset=21 format=3 data=4] | [metadata_addr=0x00007d157c698478 *=0x000000004e1b83b0]metadata_value=0x000000004e1b83b0: {type array byte}
         @0x00007d157c6983fc: 78046314
relocInfo@0x00007d157c6983fe [type=12(metadata) addr=0x00007d15bc5e9d12 offset=20 format=3 data=4] | [metadata_addr=0x00007d157c698478 *=0x000000004e1b83b0]metadata_value=0x000000004e1b83b0: {type array byte}
         @0x00007d157c698400: 0831
relocInfo@0x00007d157c698400 [type=1(oop) addr=0x00007d15bc5e9d43 offset=49] | [oop_addr=0x00007d15bc5e9d45 *=0x00000000c8d74388]
         @0x00007d157c698402: 0810
relocInfo@0x00007d157c698402 [type=1(oop) addr=0x00007d15bc5e9d53 offset=16] | [oop_addr=0x00007d15bc5e9d55 *=0x00000000c8e24b28]
         @0x00007d157c698404: 490a
relocInfo@0x00007d157c698404 [type=9(section_word) addr=0x00007d15bc5e9d5d offset=10 format=1] | [target=0x00007d15bc5e9c80]
         @0x00007d157c698406: 5035
relocInfo@0x00007d157c698406 [type=10(poll) addr=0x00007d15bc5e9d92 offset=53]
         @0x00007d157c698408: 3171
relocInfo@0x00007d157c698408 [type=6(runtime_call) addr=0x00007d15bc5e9e03 offset=113 format=1] | [destination=0x00007d15bc54ebe0] UncommonTrapBlob
         @0x00007d157c69840a: 8005
relocInfo@0x00007d157c69840a [type=16(post_call_nop) addr=0x00007d15bc5e9e08 offset=5]
         @0x00007d157c69840c: 7c020000011a3808
relocInfo@0x00007d157c698412 [type=7(external_word) addr=0x00007d15bc5e9e10 offset=8 data={0000011a}] | [target=0x00007d157c697b00]
         @0x00007d157c698414: 310e
relocInfo@0x00007d157c698414 [type=6(runtime_call) addr=0x00007d15bc5e9e1e offset=14 format=1] | [destination=0x00007d15cfbb2a22] MacroAssembler::debug64(char*, long, long*)
         @0x00007d157c698416: 580e
relocInfo@0x00007d157c698416 [type=11(poll_return) addr=0x00007d15bc5e9e2c offset=14]
         @0x00007d157c698418: 312f
relocInfo@0x00007d157c698418 [type=6(runtime_call) addr=0x00007d15bc5e9e5b offset=47 format=1] | [destination=0x00007d15bc54ebe0] UncommonTrapBlob
         @0x00007d157c69841a: 8005
relocInfo@0x00007d157c69841a [type=16(post_call_nop) addr=0x00007d15bc5e9e60 offset=5]
         @0x00007d157c69841c: 7c020000011a3808
relocInfo@0x00007d157c698422 [type=7(external_word) addr=0x00007d15bc5e9e68 offset=8 data={0000011a}] | [target=0x00007d157c697b00]
         @0x00007d157c698424: 310e
relocInfo@0x00007d157c698424 [type=6(runtime_call) addr=0x00007d15bc5e9e76 offset=14 format=1] | [destination=0x00007d15cfbb2a22] MacroAssembler::debug64(char*, long, long*)
         @0x00007d157c698426: 311d
relocInfo@0x00007d157c698426 [type=6(runtime_call) addr=0x00007d15bc5e9e93 offset=29 format=1] | [destination=0x00007d15bc54ebe0] UncommonTrapBlob
         @0x00007d157c698428: 8005
relocInfo@0x00007d157c698428 [type=16(post_call_nop) addr=0x00007d15bc5e9e98 offset=5]
         @0x00007d157c69842a: 7c020000011a3808
relocInfo@0x00007d157c698430 [type=7(external_word) addr=0x00007d15bc5e9ea0 offset=8 data={0000011a}] | [target=0x00007d157c697b00]
         @0x00007d157c698432: 310e
relocInfo@0x00007d157c698432 [type=6(runtime_call) addr=0x00007d15bc5e9eae offset=14 format=1] | [destination=0x00007d15cfbb2a22] MacroAssembler::debug64(char*, long, long*)
         @0x00007d157c698434: 311d
relocInfo@0x00007d157c698434 [type=6(runtime_call) addr=0x00007d15bc5e9ecb offset=29 format=1] | [destination=0x00007d15bc54ebe0] UncommonTrapBlob
         @0x00007d157c698436: 8005
relocInfo@0x00007d157c698436 [type=16(post_call_nop) addr=0x00007d15bc5e9ed0 offset=5]
         @0x00007d157c698438: 7c020000011a3808
relocInfo@0x00007d157c69843e [type=7(external_word) addr=0x00007d15bc5e9ed8 offset=8 data={0000011a}] | [target=0x00007d157c697b00]
         @0x00007d157c698440: 310e
relocInfo@0x00007d157c698440 [type=6(runtime_call) addr=0x00007d15bc5e9ee6 offset=14 format=1] | [destination=0x00007d15cfbb2a22] MacroAssembler::debug64(char*, long, long*)
         @0x00007d157c698442: 3115
relocInfo@0x00007d157c698442 [type=6(runtime_call) addr=0x00007d15bc5e9efb offset=21 format=1] | [destination=0x00007d15bc54ebe0] UncommonTrapBlob
         @0x00007d157c698444: 8005
relocInfo@0x00007d157c698444 [type=16(post_call_nop) addr=0x00007d15bc5e9f00 offset=5]
         @0x00007d157c698446: 7c020000011a3808
relocInfo@0x00007d157c69844c [type=7(external_word) addr=0x00007d15bc5e9f08 offset=8 data={0000011a}] | [target=0x00007d157c697b00]
         @0x00007d157c69844e: 310e
relocInfo@0x00007d157c69844e [type=6(runtime_call) addr=0x00007d15bc5e9f16 offset=14 format=1] | [destination=0x00007d15cfbb2a22] MacroAssembler::debug64(char*, long, long*)
         @0x00007d157c698450: 78f04006
relocInfo@0x00007d157c698452 [type=8(internal_word) addr=0x00007d15bc5e9f1c offset=6 data=240] | [target=0x00007d15bc5e9e2c]
         @0x00007d157c698454: 3111
relocInfo@0x00007d157c698454 [type=6(runtime_call) addr=0x00007d15bc5e9f2d offset=17 format=1] | [destination=0x00007d15bc5bbc60] SafepointBlob
         @0x00007d157c698456: 3105
relocInfo@0x00007d157c698456 [type=6(runtime_call) addr=0x00007d15bc5e9f32 offset=5 format=1] | [destination=0x00007d15bc5a13a0] Stub::Stub Generator method_entry_barrier_stub
         @0x00007d157c698458: 000e
relocInfo@0x00007d157c698458 [type=0(none) addr=0x00007d15bc5e9f40 offset=14]
         @0x00007d157c69845a: 3100
relocInfo@0x00007d157c69845a [type=6(runtime_call) addr=0x00007d15bc5e9f40 offset=0 format=1] | [destination=0x00007d15bc54e8e0] ExceptionBlob
         @0x00007d157c69845c: 310f
relocInfo@0x00007d157c69845c [type=6(runtime_call) addr=0x00007d15bc5e9f4f offset=15 format=1] | [destination=0x00007d15bc5bbf80] DeoptimizationBlob
         @0x00007d157c69845e: 0000
relocInfo@0x00007d157c69845e [type=0(none) addr=0x00007d15bc5e9f4f offset=0]
         @0x00007d157c698460: 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Dependencies:
Dependency of type evol_method
  method  = *{method} {0x00007d1594401b28} 'micro1' '([B[B)V' in 'test_slice'
Dependency of type evol_method
  method  = *{method} {0x00007d1594077670} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[BI)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector'
Dependency of type evol_method
  method  = {method} {0x00007d159407b9e0} 'reinterpretAsInts' '()Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/ByteVector'
Dependency of type evol_method
  method  = {method} {0x00007d1594048628} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;I)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/IntVector'
Dependency of type evol_method
  method  = {method} {0x00007d159404b140} 'or' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/IntVector'
Dependency of type evol_method
  method  = {method} {0x00007d15940525d8} 'reinterpretAsBytes' '()Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/IntVector'
Dependency of type evol_method
  method  = {method} {0x00007d15940784f8} 'intoArray' '([BI)V' in 'jdk/incubator/vector/ByteVector'
Dependency of type evol_method
  method  = {method} {0x00007d15940d52d0} 'loopBound' '(I)I' in 'jdk/incubator/vector/AbstractSpecies'
Dependency of type evol_method
  method  = *{method} {0x00007d15941cf5d0} 'roundDown' '(II)I' in 'jdk/incubator/vector/VectorIntrinsics'
Dependency of type evol_method
  method  = *{method} {0x00007d15941cf158} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
Dependency of type evol_method
  method  = {method} {0x00007d15940cea60} 'dummyVector' '()Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector$ByteSpecies'
Dependency of type evol_method
  method  = {method} {0x00007d15940d46b0} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
Dependency of type evol_method
  method  = *{method} {0x000000004e27f4e8} 'checkIndex' '(II)I' in 'java/util/Objects'
Dependency of type evol_method
  method  = {method} {0x00007d15940d6070} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
Dependency of type evol_method
  method  = {method} {0x00007d1594119520} 'fromArray0' '([BI)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/Byte256Vector'
Dependency of type evol_method
  method  = {method} {0x00007d1594079238} 'fromArray0Template' '([BI)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector'
Dependency of type evol_method
  method  = {method} {0x00007d15940ce000} 'vectorType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/ByteVector$ByteSpecies'
Dependency of type evol_method
  method  = {method} {0x00007d15940cde48} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/ByteVector$ByteSpecies'
Dependency of type evol_method
  method  = {method} {0x00007d15940d4788} 'laneCount' '()I' in 'jdk/incubator/vector/AbstractSpecies'
Dependency of type evol_method
  method  = *{method} {0x00007d159407ac30} 'arrayAddress' '([BI)J' in 'jdk/incubator/vector/ByteVector'
Dependency of type evol_method
  method  = *{method} {0x000000004e26b820} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder'
Dependency of type evol_method
  method  = {method} {0x00007d15941151c8} 'vspecies' '()Ljdk/incubator/vector/ByteVector$ByteSpecies;' in 'jdk/incubator/vector/Byte256Vector'
Dependency of type evol_method
  method  = *{method} {0x000000004e272eb0} 'constant_L' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$Holder'
Dependency of type evol_method
  method  = {method} {0x00007d1594060ff0} 'reinterpretAsInts' '()Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/AbstractVector'
Dependency of type evol_method
  method  = {method} {0x00007d15941160e8} 'asVectorRaw' '(Ljdk/incubator/vector/LaneType;)Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/Byte256Vector'
Dependency of type evol_method
  method  = {method} {0x00007d15940602b8} 'asVectorRawTemplate' '(Ljdk/incubator/vector/LaneType;)Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractVector'
Dependency of type evol_method
  method  = {method} {0x00007d15940d5790} 'withLanes' '(Ljdk/incubator/vector/LaneType;)Ljdk/incubator/vector/AbstractSpecies;' in 'jdk/incubator/vector/AbstractSpecies'
Dependency of type evol_method
  method  = {method} {0x00007d1594063060} 'convert0' '(CLjdk/incubator/vector/AbstractSpecies;)Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractVector'
Dependency of type evol_method
  method  = {method} {0x00007d159411ca78} 'vspecies' '()Ljdk/incubator/vector/AbstractSpecies;' in 'jdk/incubator/vector/Byte256Vector'
Dependency of type evol_method
  method  = *{method} {0x00007d15940d7b78} 'findSpecies' '(Ljdk/incubator/vector/LaneType;Ljdk/incubator/vector/VectorShape;)Ljdk/incubator/vector/AbstractSpecies;' in 'jdk/incubator/vector/AbstractSpecies'
Dependency of type evol_method
  method  = {method} {0x00007d1594153f80} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/IntVector$IntSpecies'
Dependency of type evol_method
  method  = {method} {0x00007d15941152a0} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/Byte256Vector'
Dependency of type evol_method
  method  = {method} {0x00007d1594115528} 'length' '()I' in 'jdk/incubator/vector/Byte256Vector'
Dependency of type evol_method
  method  = {method} {0x00007d1594156010} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/IntVector$IntSpecies'
Dependency of type evol_method
  method  = {method} {0x00007d1594154b98} 'dummyVector' '()Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/IntVector$IntSpecies'
Dependency of type evol_method
  method  = {method} {0x00007d1594184fe0} 'rearrange' '(Ljdk/incubator/vector/VectorShuffle;)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/Int256Vector'
Dependency of type evol_method
  method  = {method} {0x00007d1594183250} 'rearrange' '(Ljdk/incubator/vector/VectorShuffle;)Ljdk/incubator/vector/Int256Vector;' in 'jdk/incubator/vector/Int256Vector'
Dependency of type evol_method
  method  = {method} {0x00007d159404dbe8} 'rearrangeTemplate' '(Ljava/lang/Class;Ljdk/incubator/vector/VectorShuffle;)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/IntVector'
Dependency of type evol_method
  method  = *{method} {0x000000004e27f7f8} 'requireNonNull' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/Objects'
Dependency of type evol_method
  method  = {method} {0x00007d15941801e8} 'length' '()I' in 'jdk/incubator/vector/Int256Vector'
Dependency of type evol_method
  method  = {method} {0x00007d15941848c0} 'withLane' '(II)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/Int256Vector'
Dependency of type evol_method
  method  = {method} {0x00007d1594183d40} 'withLane' '(II)Ljdk/incubator/vector/Int256Vector;' in 'jdk/incubator/vector/Int256Vector'
Dependency of type evol_method
  method  = {method} {0x00007d1594183e60} 'withLaneHelper' '(II)Ljdk/incubator/vector/Int256Vector;' in 'jdk/incubator/vector/Int256Vector'
Dependency of type evol_method
  method  = *{method} {0x00007d1594044138} 'opKind' '(Ljdk/incubator/vector/VectorOperators$Operator;I)Z' in 'jdk/incubator/vector/IntVector'
Dependency of type evol_method
  method  = *{method} {0x00007d15940c93e8} 'opKind' '(Ljdk/incubator/vector/VectorOperators$Operator;I)Z' in 'jdk/incubator/vector/VectorOperators'
Dependency of type evol_method
  method  = {method} {0x00007d15941bba38} 'opKind' '(I)Z' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
Dependency of type evol_method
  method  = {method} {0x00007d1594185e50} 'lanewiseShift' '(Ljdk/incubator/vector/VectorOperators$Binary;I)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/Int256Vector'
Dependency of type evol_method
  method  = {method} {0x00007d1594181bc0} 'lanewiseShift' '(Ljdk/incubator/vector/VectorOperators$Binary;I)Ljdk/incubator/vector/Int256Vector;' in 'jdk/incubator/vector/Int256Vector'
Dependency of type evol_method
  method  = {method} {0x00007d1594048bf8} 'lanewiseShiftTemplate' '(Ljdk/incubator/vector/VectorOperators$Binary;I)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/IntVector'
Dependency of type evol_method
  method  = *{method} {0x00007d1594043f60} 'opCode' '(Ljdk/incubator/vector/VectorOperators$Operator;)I' in 'jdk/incubator/vector/IntVector'
Dependency of type evol_method
  method  = {method} {0x00007d15940c6710} 'find' '(Ljdk/incubator/vector/VectorOperators$Operator;ILjava/util/function/IntFunction;)Ljava/lang/Object;' in 'jdk/incubator/vector/VectorOperators$ImplCache'
Dependency of type evol_method
  method  = *{method} {0x00007d15940c9300} 'opCode' '(Ljdk/incubator/vector/VectorOperators$Operator;II)I' in 'jdk/incubator/vector/VectorOperators'
Dependency of type evol_method
  method  = {method} {0x00007d15941bb570} 'opCode' '(II)I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
Dependency of type evol_method
  method  = {method} {0x00007d15941bb660} 'opCodeRaw' '()I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
Dependency of type evol_method
  method  = {method} {0x00007d1594186020} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/Int256Vector'
Dependency of type evol_method
  method  = {method} {0x00007d15941819b8} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/Int256Vector;' in 'jdk/incubator/vector/Int256Vector'
Dependency of type evol_method
  method  = {method} {0x00007d1594047fc0} 'lanewiseTemplate' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/IntVector'
Dependency of type evol_method
  method  = {method} {0x00007d159405fca0} 'check' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractVector'
Dependency of type evol_method
  method  = {method} {0x00007d159405fdd8} 'sameSpecies' '(Ljdk/incubator/vector/Vector;)Z' in 'jdk/incubator/vector/AbstractVector'
Dependency of type evol_method
  method  = {method} {0x00007d15941871e8} 'asByteVectorRaw' '()Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/Int256Vector'
Dependency of type evol_method
  method  = {method} {0x00007d1594180cc0} 'asByteVectorRaw' '()Ljdk/incubator/vector/Byte256Vector;' in 'jdk/incubator/vector/Int256Vector'
Dependency of type evol_method
  method  = {method} {0x00007d1594060398} 'asByteVectorRawTemplate' '()Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/AbstractVector'
Dependency of type evol_method
  method  = {method} {0x00007d15941872c0} 'vspecies' '()Ljdk/incubator/vector/AbstractSpecies;' in 'jdk/incubator/vector/Int256Vector'
Dependency of type evol_method
  method  = {method} {0x00007d159417fe88} 'vspecies' '()Ljdk/incubator/vector/IntVector$IntSpecies;' in 'jdk/incubator/vector/Int256Vector'
Dependency of type evol_method
  method  = {method} {0x00007d159417ff60} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/Int256Vector'
Dependency of type evol_method
  method  = {method} {0x00007d15940cfed8} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/ByteVector$ByteSpecies'
Dependency of type evol_method
  method  = {method} {0x00007d1594183ab8} 'lane' '(I)I' in 'jdk/incubator/vector/Int256Vector'
Dependency of type evol_method
  method  = {method} {0x00007d1594183bc8} 'laneHelper' '(I)I' in 'jdk/incubator/vector/Int256Vector'
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.ByteVector$ByteSpecies
  method  = {method} {0x00007d15940d52d0} 'loopBound' '(I)I' in 'jdk/incubator/vector/AbstractSpecies'
  class   = jdk.incubator.vector.VectorSpecies
  method  = *{method} {0x00007d15940d2b28} 'loopBound' '(I)I' in 'jdk/incubator/vector/VectorSpecies'
   [nmethod<=klass]jdk.incubator.vector.ByteVector$ByteSpecies
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.ByteVector$ByteSpecies
  method  = {method} {0x00007d15940d46b0} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
  class   = jdk.incubator.vector.VectorSpecies
  method  = *{method} {0x00007d15940d2930} 'length' '()I' in 'jdk/incubator/vector/VectorSpecies'
   [nmethod<=klass]jdk.incubator.vector.ByteVector$ByteSpecies
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.Byte256Vector
  method  = {method} {0x00007d159407b9e0} 'reinterpretAsInts' '()Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/ByteVector'
  class   = jdk.incubator.vector.ByteVector
  method  = {method} {0x00007d159407b9e0} 'reinterpretAsInts' '()Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/ByteVector'
   [nmethod<=klass]jdk.incubator.vector.Byte256Vector
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.IntVector$IntSpecies
  method  = {method} {0x00007d15940d46b0} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
  class   = jdk.incubator.vector.VectorSpecies
  method  = *{method} {0x00007d15940d2930} 'length' '()I' in 'jdk/incubator/vector/VectorSpecies'
   [nmethod<=klass]jdk.incubator.vector.IntVector$IntSpecies
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.VectorOperators$BinaryImpl
  method  = {method} {0x00007d15941bba38} 'opKind' '(I)Z' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  class   = jdk.incubator.vector.VectorOperators$OperatorImpl
  method  = {method} {0x00007d15941bba38} 'opKind' '(I)Z' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
   [nmethod<=klass]jdk.incubator.vector.VectorOperators$BinaryImpl
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.VectorOperators$BinaryImpl
  method  = {method} {0x00007d15941bb570} 'opCode' '(II)I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  class   = jdk.incubator.vector.VectorOperators$OperatorImpl
  method  = {method} {0x00007d15941bb570} 'opCode' '(II)I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
   [nmethod<=klass]jdk.incubator.vector.VectorOperators$BinaryImpl
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.VectorOperators$BinaryImpl
  method  = {method} {0x00007d15941bb660} 'opCodeRaw' '()I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  class   = jdk.incubator.vector.VectorOperators$OperatorImpl
  method  = {method} {0x00007d15941bb660} 'opCodeRaw' '()I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
   [nmethod<=klass]jdk.incubator.vector.VectorOperators$BinaryImpl
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.VectorOperators$ImplCache
  method  = {method} {0x00007d15940c6710} 'find' '(Ljdk/incubator/vector/VectorOperators$Operator;ILjava/util/function/IntFunction;)Ljava/lang/Object;' in 'jdk/incubator/vector/VectorOperators$ImplCache'
  class   = jdk.incubator.vector.VectorOperators$ImplCache
  method  = {method} {0x00007d15940c6710} 'find' '(Ljdk/incubator/vector/VectorOperators$Operator;ILjava/util/function/IntFunction;)Ljava/lang/Object;' in 'jdk/incubator/vector/VectorOperators$ImplCache'
   [nmethod<=klass]jdk.incubator.vector.VectorOperators$ImplCache
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ExceptionHandlerTable (size = 0 bytes)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ImplicitExceptionTable (size = 2 entries, 20 bytes):
{
   < 0x00007d15bc5e9d0e, 0x00007d15bc5e9eec > < 0x00007d15bc5e9d30, 0x00007d15bc5e9eb4 > 
}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded oops:
#0: 0x0000000000000000 nullptr-oop
#1: 0x00000000c8e90eb0 a 'java/lang/Class'{0x00000000c8e90eb0} = 'jdk/incubator/vector/Int256Vector'
#2: 0x00000000c8e664a8 a 'java/lang/Class'{0x00000000c8e664a8} = 'jdk/incubator/vector/Byte256Vector'
#3: 0x00000000c8e66458 a 'jdk/incubator/vector/ByteVector$ByteSpecies'{0x00000000c8e66458}
#4: 0x00000000c8f114a8 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x00000000c8f114a8}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded metadata:
# 0: 0x0000000000000000 nullptr-oop
# 1: 0x00007d1594401b28 {method} {0x00007d1594401b28} 'micro1' '([B[B)V' in 'test_slice'
# 2: 0x00007d1594183ab8 {method} {0x00007d1594183ab8} 'lane' '(I)I' in 'jdk/incubator/vector/Int256Vector'
# 3: 0x00007d1594183bc8 {method} {0x00007d1594183bc8} 'laneHelper' '(I)I' in 'jdk/incubator/vector/Int256Vector'
# 4: 0x000000004e1b83b0 {type array byte}
# 5: 0x00007d15940784f8 {method} {0x00007d15940784f8} 'intoArray' '([BI)V' in 'jdk/incubator/vector/ByteVector'
# 6: 0x00007d1594077670 {method} {0x00007d1594077670} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[BI)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector'
# 7: 0x00007d15941cf158 {method} {0x00007d15941cf158} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
# 8: 0x000000004e27f4e8 {method} {0x000000004e27f4e8} 'checkIndex' '(II)I' in 'java/util/Objects'
# 9: 0x00007d1594119520 {method} {0x00007d1594119520} 'fromArray0' '([BI)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/Byte256Vector'
#10: 0x00007d1594079238 {method} {0x00007d1594079238} 'fromArray0Template' '([BI)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector'
#11: 0x00007d159407ac30 {method} {0x00007d159407ac30} 'arrayAddress' '([BI)J' in 'jdk/incubator/vector/ByteVector'
#12: 0x00007d159407b9e0 {method} {0x00007d159407b9e0} 'reinterpretAsInts' '()Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/ByteVector'
#13: 0x00007d1594060ff0 {method} {0x00007d1594060ff0} 'reinterpretAsInts' '()Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/AbstractVector'
#14: 0x00007d15941160e8 {method} {0x00007d15941160e8} 'asVectorRaw' '(Ljdk/incubator/vector/LaneType;)Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/Byte256Vector'
#15: 0x00007d15940602b8 {method} {0x00007d15940602b8} 'asVectorRawTemplate' '(Ljdk/incubator/vector/LaneType;)Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractVector'
#16: 0x00007d1594063060 {method} {0x00007d1594063060} 'convert0' '(CLjdk/incubator/vector/AbstractSpecies;)Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractVector'
#17: 0x00007d15940525d8 {method} {0x00007d15940525d8} 'reinterpretAsBytes' '()Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/IntVector'
#18: 0x00007d15941871e8 {method} {0x00007d15941871e8} 'asByteVectorRaw' '()Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/Int256Vector'
#19: 0x00007d1594180cc0 {method} {0x00007d1594180cc0} 'asByteVectorRaw' '()Ljdk/incubator/vector/Byte256Vector;' in 'jdk/incubator/vector/Int256Vector'
#20: 0x00007d1594060398 {method} {0x00007d1594060398} 'asByteVectorRawTemplate' '()Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/AbstractVector'
#21: 0x00007d1594048628 {method} {0x00007d1594048628} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;I)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/IntVector'
#22: 0x00007d159404b140 {method} {0x00007d159404b140} 'or' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/IntVector'
#23: 0x00007d15940d52d0 {method} {0x00007d15940d52d0} 'loopBound' '(I)I' in 'jdk/incubator/vector/AbstractSpecies'
#24: 0x00007d15941cf5d0 {method} {0x00007d15941cf5d0} 'roundDown' '(II)I' in 'jdk/incubator/vector/VectorIntrinsics'
#25: 0x00007d15940cea60 {method} {0x00007d15940cea60} 'dummyVector' '()Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector$ByteSpecies'
#26: 0x00007d15940d46b0 {method} {0x00007d15940d46b0} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
#27: 0x00007d15940d6070 {method} {0x00007d15940d6070} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
#28: 0x00007d15940ce000 {method} {0x00007d15940ce000} 'vectorType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/ByteVector$ByteSpecies'
#29: 0x00007d15940cde48 {method} {0x00007d15940cde48} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/ByteVector$ByteSpecies'
#30: 0x00007d15940d4788 {method} {0x00007d15940d4788} 'laneCount' '()I' in 'jdk/incubator/vector/AbstractSpecies'
#31: 0x000000004e26b820 {method} {0x000000004e26b820} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder'
#32: 0x00007d15941151c8 {method} {0x00007d15941151c8} 'vspecies' '()Ljdk/incubator/vector/ByteVector$ByteSpecies;' in 'jdk/incubator/vector/Byte256Vector'
#33: 0x000000004e272eb0 {method} {0x000000004e272eb0} 'constant_L' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$Holder'
#34: 0x00007d15940d5790 {method} {0x00007d15940d5790} 'withLanes' '(Ljdk/incubator/vector/LaneType;)Ljdk/incubator/vector/AbstractSpecies;' in 'jdk/incubator/vector/AbstractSpecies'
#35: 0x00007d159411ca78 {method} {0x00007d159411ca78} 'vspecies' '()Ljdk/incubator/vector/AbstractSpecies;' in 'jdk/incubator/vector/Byte256Vector'
#36: 0x00007d15940d7b78 {method} {0x00007d15940d7b78} 'findSpecies' '(Ljdk/incubator/vector/LaneType;Ljdk/incubator/vector/VectorShape;)Ljdk/incubator/vector/AbstractSpecies;' in 'jdk/incubator/vector/AbstractSpecies'
#37: 0x00007d1594153f80 {method} {0x00007d1594153f80} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/IntVector$IntSpecies'
#38: 0x00007d15941152a0 {method} {0x00007d15941152a0} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/Byte256Vector'
#39: 0x00007d1594115528 {method} {0x00007d1594115528} 'length' '()I' in 'jdk/incubator/vector/Byte256Vector'
#40: 0x00007d1594156010 {method} {0x00007d1594156010} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/IntVector$IntSpecies'
#41: 0x00007d1594154b98 {method} {0x00007d1594154b98} 'dummyVector' '()Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/IntVector$IntSpecies'
#42: 0x00007d1594184fe0 {method} {0x00007d1594184fe0} 'rearrange' '(Ljdk/incubator/vector/VectorShuffle;)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/Int256Vector'
#43: 0x00007d1594183250 {method} {0x00007d1594183250} 'rearrange' '(Ljdk/incubator/vector/VectorShuffle;)Ljdk/incubator/vector/Int256Vector;' in 'jdk/incubator/vector/Int256Vector'
#44: 0x00007d159404dbe8 {method} {0x00007d159404dbe8} 'rearrangeTemplate' '(Ljava/lang/Class;Ljdk/incubator/vector/VectorShuffle;)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/IntVector'
#45: 0x000000004e27f7f8 {method} {0x000000004e27f7f8} 'requireNonNull' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/Objects'
#46: 0x00007d15941801e8 {method} {0x00007d15941801e8} 'length' '()I' in 'jdk/incubator/vector/Int256Vector'
#47: 0x00007d15941848c0 {method} {0x00007d15941848c0} 'withLane' '(II)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/Int256Vector'
#48: 0x00007d1594183d40 {method} {0x00007d1594183d40} 'withLane' '(II)Ljdk/incubator/vector/Int256Vector;' in 'jdk/incubator/vector/Int256Vector'
#49: 0x00007d1594183e60 {method} {0x00007d1594183e60} 'withLaneHelper' '(II)Ljdk/incubator/vector/Int256Vector;' in 'jdk/incubator/vector/Int256Vector'
#50: 0x00007d1594044138 {method} {0x00007d1594044138} 'opKind' '(Ljdk/incubator/vector/VectorOperators$Operator;I)Z' in 'jdk/incubator/vector/IntVector'
#51: 0x00007d15940c93e8 {method} {0x00007d15940c93e8} 'opKind' '(Ljdk/incubator/vector/VectorOperators$Operator;I)Z' in 'jdk/incubator/vector/VectorOperators'
#52: 0x00007d15941bba38 {method} {0x00007d15941bba38} 'opKind' '(I)Z' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
#53: 0x00007d1594185e50 {method} {0x00007d1594185e50} 'lanewiseShift' '(Ljdk/incubator/vector/VectorOperators$Binary;I)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/Int256Vector'
#54: 0x00007d1594181bc0 {method} {0x00007d1594181bc0} 'lanewiseShift' '(Ljdk/incubator/vector/VectorOperators$Binary;I)Ljdk/incubator/vector/Int256Vector;' in 'jdk/incubator/vector/Int256Vector'
#55: 0x00007d1594048bf8 {method} {0x00007d1594048bf8} 'lanewiseShiftTemplate' '(Ljdk/incubator/vector/VectorOperators$Binary;I)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/IntVector'
#56: 0x00007d1594043f60 {method} {0x00007d1594043f60} 'opCode' '(Ljdk/incubator/vector/VectorOperators$Operator;)I' in 'jdk/incubator/vector/IntVector'
#57: 0x00007d15940c6710 {method} {0x00007d15940c6710} 'find' '(Ljdk/incubator/vector/VectorOperators$Operator;ILjava/util/function/IntFunction;)Ljava/lang/Object;' in 'jdk/incubator/vector/VectorOperators$ImplCache'
#58: 0x00007d15940c9300 {method} {0x00007d15940c9300} 'opCode' '(Ljdk/incubator/vector/VectorOperators$Operator;II)I' in 'jdk/incubator/vector/VectorOperators'
#59: 0x00007d15941bb570 {method} {0x00007d15941bb570} 'opCode' '(II)I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
#60: 0x00007d15941bb660 {method} {0x00007d15941bb660} 'opCodeRaw' '()I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
#61: 0x00007d1594186020 {method} {0x00007d1594186020} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/Int256Vector'
#62: 0x00007d15941819b8 {method} {0x00007d15941819b8} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/Int256Vector;' in 'jdk/incubator/vector/Int256Vector'
#63: 0x00007d1594047fc0 {method} {0x00007d1594047fc0} 'lanewiseTemplate' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/IntVector'
#64: 0x00007d159405fca0 {method} {0x00007d159405fca0} 'check' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractVector'
#65: 0x00007d159405fdd8 {method} {0x00007d159405fdd8} 'sameSpecies' '(Ljdk/incubator/vector/Vector;)Z' in 'jdk/incubator/vector/AbstractVector'
#66: 0x00007d15941872c0 {method} {0x00007d15941872c0} 'vspecies' '()Ljdk/incubator/vector/AbstractSpecies;' in 'jdk/incubator/vector/Int256Vector'
#67: 0x00007d159417fe88 {method} {0x00007d159417fe88} 'vspecies' '()Ljdk/incubator/vector/IntVector$IntSpecies;' in 'jdk/incubator/vector/Int256Vector'
#68: 0x00007d159417ff60 {method} {0x00007d159417ff60} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/Int256Vector'
#69: 0x00007d15940cfed8 {method} {0x00007d15940cfed8} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/ByteVector$ByteSpecies'
#70: 0x000000004f004dd8 'jdk/incubator/vector/ByteVector$ByteSpecies'
#71: 0x00007d15940d3d98 'jdk/incubator/vector/VectorSpecies'
#72: 0x00007d15940d2b28 {method} {0x00007d15940d2b28} 'loopBound' '(I)I' in 'jdk/incubator/vector/VectorSpecies'
#73: 0x00007d15940d2930 {method} {0x00007d15940d2930} 'length' '()I' in 'jdk/incubator/vector/VectorSpecies'
#74: 0x000000004f008550 'jdk/incubator/vector/Byte256Vector'
#75: 0x00007d15940869b0 'jdk/incubator/vector/ByteVector'
#76: 0x000000004f00b298 'jdk/incubator/vector/IntVector$IntSpecies'
#77: 0x000000004f010490 'jdk/incubator/vector/VectorOperators$BinaryImpl'
#78: 0x00007d15941bbd20 'jdk/incubator/vector/VectorOperators$OperatorImpl'
#79: 0x000000004f004988 'jdk/incubator/vector/VectorOperators$ImplCache'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

============================= C2-compiled nmethod ==============================
#r018 rsi:rsi   : parm 0: byte[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact *
#r016 rdx:rdx   : parm 1: byte[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact *
# -- Old rsp -- Framesize: 48 --
#r623 rsp+44: in_preserve
#r622 rsp+40: return address
#r621 rsp+36: in_preserve
#r620 rsp+32: saved fp register
#r619 rsp+28: pad2, stack alignment
#r618 rsp+24: pad2, stack alignment
#r617 rsp+20: Fixed slot 1
#r616 rsp+16: Fixed slot 0
#r627 rsp+12: spill
#r626 rsp+ 8: spill
#r625 rsp+ 4: spill
#r624 rsp+ 0: spill
#
----------------------- MetaData before Compile_id = 437 ------------------------
{method}
 - this oop:          0x00007d1594401b28
 - method holder:     'test_slice'
 - constants:         0x00007d15944010f8 constant pool [238]/operands[26] {0x00007d15944010f8} for 'test_slice' cache=0x00007d1594402000
 - access:            0x9  public static 
 - flags:             0x6080  queued_for_compilation has_loops_flag has_loops_flag_init 
 - name:              'micro1'
 - signature:         '([B[B)V'
 - max stack:         5
 - max locals:        7
 - size of params:    2
 - method size:       14
 - vtable index:      -2
 - i2i entry:         0x00007d15bc4af6a0
 - adapters:          AHE@0x00007d15c80cca80: 0xbb i2c: 0x00007d15bc5c0fe0 c2i: 0x00007d15bc5c1036 c2iUV: 0x00007d15bc5c1015 c2iNCI: 0x00007d15bc5c1071
 - compiled entry     0x00007d15bc5c1036
 - code size:         116
 - code start:        0x00007d1594401a98
 - code end (excl):   0x00007d1594401b0c
 - method data:       0x00007d1594413c00
 - checked ex length: 0
 - linenumber start:  0x00007d1594401b0c
 - localvar length:   0

------------------------ OptoAssembly for Compile_id = 437 -----------------------
#
#  void ( byte[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact *, byte[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * )
#
000     N1: #	out( B1 ) <- in( B42 B37 B32 B41 B38 B33 B35 B34 B31 B39 B36 B40 )  Freq: 1

000     B1: #	out( B42 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
000     # stack bang (184 bytes)
	pushq   rbp	# Save rbp
	subq    rsp, #32	# Create frame

01a     movl    R10, [RDX + #12 (8-bit)]	# range
01e     NullCheck RDX

01e     B2: #	out( B31 B3 ) <- in( B1 )  Freq: 0.999999
01e     movl    R9, R10	# spill
021     andl    R9, #-32	# int
025     jle     B31  P=0.030303 C=21120.000000

02b     B3: #	out( B32 B4 ) <- in( B2 )  Freq: 0.969696
02b     leal    R13, [R10 + #-31]
02f     testl   R13, R13
032     jl     B32  P=0.000001 C=-1.000000

038     B4: #	out( B32 B5 ) <- in( B3 )  Freq: 0.969695
038     cmpl    R10, #31
03c     je     B32  P=0.000001 C=-1.000000

042     B5: #	out( B32 B6 ) <- in( B4 )  Freq: 0.969694
042     movslq  R10, R10	# i2l
045     movslq  R11, R9	# i2l
048     addq    R10, #-31	# long
04c     addq    R11, #31	# long
050     andq    R11, #-32	# long
054     movl    R8, R11	# l2i
057     movslq  R11, R8	# i2l
05a     addq    R11, #-32	# long
05e     cmpq    R11, R10	# unsigned
061     jae,u   B32  P=0.000001 C=-1.000000

067     B6: #	out( B32 B7 ) <- in( B5 )  Freq: 0.969693
067     movl    R10, [RSI + #12 (8-bit)]	# range
06b     NullCheck RSI

06b     B7: #	out( B32 B8 ) <- in( B6 )  Freq: 0.969692
06b     leal    R14, [R10 + #-31]
06f     testl   R14, R14
072     jl     B32  P=0.000001 C=-1.000000

078     B8: #	out( B32 B9 ) <- in( B7 )  Freq: 0.969691
078     cmpl    R10, #31
07c     je     B32  P=0.000001 C=-1.000000

082     B9: #	out( B32 B10 ) <- in( B8 )  Freq: 0.96969
082     movslq  R10, R10	# i2l
085     addq    R10, #-31	# long
089     cmpq    R11, R10	# unsigned
08c     jae,u   B32  P=0.000001 C=-1.000000

092     B10: #	out( B33 B11 ) <- in( B9 )  Freq: 0.969689
092     cmpl    R9, #2147483616
099     jg     B33  P=0.000001 C=-1.000000

09f     B11: #	out( B22 B12 ) <- in( B10 )  Freq: 0.969688
09f     load_vector XMM0,[RDX + #16 (8-bit)]
0a4     leal    R8, [R9 + #-96]
0a8     vector_reinterpret XMM0	!
0a8     vshiftd_imm  XMM1,XMM0,#8	! shift packedI
0ad     movq    R10, int[int:8] (java/lang/Cloneable,java/io/Serializable)<ciTypeArray length=8 type=<ciTypeArrayKlass name=[I loaded=true ident=1378 address=0x00007d157c01a548> ident=1694 address=0x00007d157c130198> *	# ptr
0b7     movl    RBX, #32	# int
0bc     movq    RBP, java/lang/Class (java/io/Serializable,java/lang/constant/Constable,java/lang/reflect/AnnotatedElement,java/lang/invoke/TypeDescriptor,java/lang/reflect/GenericDeclaration,java/lang/reflect/Type,java/lang/invoke/TypeDescriptor$OfField):exact *	# ptr
0c6     movl    R11, [RBP + #140 (32-bit)]	# int ! Field: test_slice.previousFourUtf8Bytes
0cd     # MachConstantBaseNode (empty encoding)
0cd     replicateI XMM2,#7
0d6     vpand   XMM5,XMM2,[R10 + #16 (8-bit)]	! and vectors
0dc     vector_rearrange XMM2, XMM5, XMM0
0e1     vector_insert XMM2,XMM2,R11,#0	!using XMM3 as TEMP
0f3     vshiftd_imm  XMM2,XMM2,#24	! shift packedI
0f8     vpor    XMM1,XMM2,XMM1	! or vectors
0fc     vector_reinterpret XMM1	!
0fc     store_vector [RSI + #16 (8-bit)],XMM1
	
101     vextractI R10,XMM0,#7	! using XMM1 as TEMP
10d     movl    [RBP + #140 (32-bit)], R10	# int ! Field: test_slice.previousFourUtf8Bytes
114     cmpl    R8, #32
118     jle     B22  P=0.000001 C=-1.000000

11e     B12: #	out( B34 B13 ) <- in( B11 )  Freq: 0.969687
11e     cmpl    R13, #32	# unsigned
122     jbe,u   B34  P=0.000001 C=-1.000000

128     B13: #	out( B35 B14 ) <- in( B12 )  Freq: 0.969686
128     cmpl    R13, #128	# unsigned
12f     jbe,u   B35  P=0.000001 C=-1.000000

135     B14: #	out( B36 B15 ) <- in( B13 )  Freq: 0.969685
135     cmpl    R14, #32	# unsigned
139     jbe,u   B36  P=0.000001 C=-1.000000

13f     B15: #	out( B37 B16 ) <- in( B14 )  Freq: 0.969684
13f     cmpl    R14, #128	# unsigned
146     jbe,u   B37  P=0.000001 C=-1.000000

14c     B16: #	out( B18 ) <- in( B15 )  Freq: 0.969683
14c     movl    RCX, #128000	# int
151     # TLS is in R15
151     xorl    RAX, RAX	# int
153     jmp,s   B18

155     B17: #	out( B18 ) <- in( B20 ) top-of-loop Freq: 31.0299
155     movdq   RSI, XMM0	# spill

15a     B18: #	out( B19 ) <- in( B16 B17 ) Loop( B18-B17 ) Freq: 31.9996
15a     movl    RDI, R9	# spill
15d     subl    RDI, RBX	# int
15f     addl    RDI, #-96	# int
162     cmpl    R8, RBX
165     cmovll RDI, RAX	# signed, int
168     cmpl    RDI, #128000	# unsigned
16e     cmovla RDI, RCX	# unsigned, int
171     addl    RDI, RBX	# int
173     movdq   XMM0, RSI	# spill
        nop 	# 8 bytes pad for loops and calls

180     B19: #	out( B19 B20 ) <- in( B18 B19 ) Loop( B19-B19 inner main of N135 strip mined) Freq: 1055.99
180     movslq  RSI, RBX	# i2l
183     load_vector XMM1,[RDX + #16 + RSI]
189     vector_reinterpret XMM1	!
189     vector_rearrange XMM2, XMM5, XMM1
18e     vshiftd_imm  XMM3,XMM1,#8	! shift packedI
193     vector_insert XMM2,XMM2,R10,#0	!using XMM4 as TEMP
1a5     vshiftd_imm  XMM2,XMM2,#24	! shift packedI
1aa     vpor    XMM2,XMM2,XMM3	! or vectors
1ae     vector_reinterpret XMM2	!
1ae     movdq   R11, XMM0	# spill
1b3     store_vector [R11 + #16 + RSI],XMM2
	
1ba     load_vector XMM9,[RDX + #48 + RSI]
1c0     vector_reinterpret XMM9	!
1c0     vector_rearrange XMM2, XMM5, XMM9
1c5     vshiftd_imm  XMM3,XMM9,#8	! shift packedI
1cb     vextractI R10,XMM1,#7	! using XMM4 as TEMP
1d7     vector_insert XMM1,XMM2,R10,#0	!using XMM1 as TEMP
1e9     vshiftd_imm  XMM1,XMM1,#24	! shift packedI
1ee     vpor    XMM1,XMM1,XMM3	! or vectors
1f2     vector_reinterpret XMM1	!
1f2     store_vector [R11 + #48 + RSI],XMM1
	
1f9     load_vector XMM1,[RDX + #80 + RSI]
1ff     vector_reinterpret XMM1	!
1ff     vextractI R10,XMM1,#7	! using XMM6 as TEMP
20b     vector_rearrange XMM2, XMM5, XMM1
210     vshiftd_imm  XMM1,XMM1,#8	! shift packedI
215     vextractI R11,XMM9,#7	! using XMM3 as TEMP
221     vector_insert XMM2,XMM2,R11,#0	!using XMM3 as TEMP
233     vshiftd_imm  XMM2,XMM2,#24	! shift packedI
238     vpor    XMM1,XMM2,XMM1	! or vectors
23c     vector_reinterpret XMM1	!
23c     movdq   R11, XMM0	# spill
241     store_vector [R11 + #80 + RSI],XMM1
	
248     load_vector XMM1,[RDX + #112 + RSI]
24e     vector_reinterpret XMM1	!
24e     vector_rearrange XMM2, XMM5, XMM1
253     vector_insert XMM2,XMM2,R10,#0	!using XMM8 as TEMP
265     vextractI R10,XMM1,#7	! using XMM7 as TEMP
271     vshiftd_imm  XMM1,XMM1,#8	! shift packedI
276     vshiftd_imm  XMM2,XMM2,#24	! shift packedI
27b     vpor    XMM1,XMM1,XMM2	! or vectors
27f     vector_reinterpret XMM1	!
27f     store_vector [R11 + #112 + RSI],XMM1
	
286     addl    RBX, #128	# int
28c     cmpl    RBX, RDI
28e     jl     B19	# loop end  P=0.969697 C=20480.000000

294     B20: #	out( B17 B21 ) <- in( B19 )  Freq: 31.9996
294     movl    [RBP + #140 (32-bit)], R10	# int ! Field: test_slice.previousFourUtf8Bytes
29b     movq    R11, [R15 + #48 (8-bit)]	# ptr
29f     testl   rax, [R11]	# Safepoint: poll for GC        # test_slice::micro1 @ bci:112 (line 21) L[0]=XMM0 L[1]=RDX L[2]=RBX L[3]=_ L[4]=_ L[5]=_ L[6]=_
        # OopMap {rdx=Oop rbp=Oop xmm0=Oop off=671/0x29f}
2a2     cmpl    RBX, R8
2a5     jl     B17  P=0.969697 C=20480.000000

2ab     B21: #	out( B22 ) <- in( B20 )  Freq: 0.969683
2ab     movdq   RSI, XMM0	# spill

2b0     B22: #	out( B31 B23 ) <- in( B11 B21 )  Freq: 0.969684
2b0     cmpl    RBX, R9
2b3     jge,s   B31  P=0.500000 C=-1.000000

2b5     B23: #	out( B38 B24 ) <- in( B22 )  Freq: 0.484842
2b5     cmpl    RBX, R13	# unsigned
2b8     jae,u   B38  P=0.000001 C=-1.000000

2be     B24: #	out( B39 B25 ) <- in( B23 )  Freq: 0.484842
2be     movl    R8, RBX	# spill
2c1     # castII of R8
2c1     cmpl    R8, R13	# unsigned
2c4     jae,u   B39  P=0.000001 C=-1.000000

2ca     B25: #	out( B40 B26 ) <- in( B24 )  Freq: 0.484841
2ca     cmpl    RBX, R14	# unsigned
2cd     jae,u   B40  P=0.000001 C=-1.000000

2d3     B26: #	out( B41 B27 ) <- in( B25 )  Freq: 0.484841
2d3     cmpl    R8, R14	# unsigned
2d6     jae,u   B41  P=0.000001 C=-1.000000

2dc     B27: #	out( B28 ) <- in( B26 )  Freq: 0.48484
2dc     # castII of RBX

2dc     B28: #	out( B30 B29 ) <- in( B27 B29 ) Loop( B28-B29 inner post of N197) Freq: 0.96968
2dc     movslq  R11, RBX	# i2l
2df     load_vector XMM0,[RDX + #16 + R11]
2e6     vector_reinterpret XMM0	!
2e6     vector_rearrange XMM1, XMM5, XMM0
2eb     vshiftd_imm  XMM2,XMM0,#8	! shift packedI
2f0     vextractI RCX,XMM0,#7	! using XMM3 as TEMP
2fc     vector_insert XMM0,XMM1,R10,#0	!using XMM0 as TEMP
30e     vshiftd_imm  XMM0,XMM0,#24	! shift packedI
313     vpor    XMM0,XMM0,XMM2	! or vectors
317     vector_reinterpret XMM0	!
317     store_vector [RSI + #16 + R11],XMM0
	
31e     addl    RBX, #32	# int
321     cmpl    RBX, R9
324     jge,s   B30	# loop end  P=0.500000 C=20480.000000

326     B29: #	out( B28 ) <- in( B28 )  Freq: 0.48484
326     movl    R10, RCX	# spill
329     jmp,s   B28

32b     B30: #	out( B31 ) <- in( B28 )  Freq: 0.48484
32b     movl    [RBP + #140 (32-bit)], RCX	# int ! Field: test_slice.previousFourUtf8Bytes

331     B31: #	out( N1 ) <- in( B30 B22 B2 )  Freq: 0.999985
331     vzeroupper
	addq    rsp, 32	# Destroy frame
	popq    rbp
	cmpq    rsp, poll_offset[r15_thread] 
	ja      #safepoint_stub	# Safepoint: poll for GC

343     ret

344     B32: #	out( N1 ) <- in( B9 B3 B4 B5 B6 B7 B8 )  Freq: 6.85223e-06
344     movq    RBP, RSI	# spill
347     movq    [rsp + #0], RDX	# spill
34b     movl    [rsp + #8], R9	# spill
350     movl    RSI, #-146	# int
        nop 	# 3 bytes pad for loops and calls
358     call,static  wrapper for: uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')
        # test_slice::micro1 @ bci:13 (line 21) L[0]=RBP L[1]=rsp + #0 L[2]=#0 L[3]=_ L[4]=_ L[5]=_ L[6]=_ STK[0]=#0 STK[1]=rsp + #8
        # OopMap {rbp=Oop [0]=Oop off=864/0x360}
368     stop	# ShouldNotReachHere

37c     B33: #	out( N1 ) <- in( B10 )  Freq: 9.82566e-07
37c     movq    RBP, RSI	# spill
37f     movq    [rsp + #0], RDX	# spill
383     movl    [rsp + #8], R9	# spill
388     movl    RSI, #-154	# int
        nop 	# 3 bytes pad for loops and calls
390     call,static  wrapper for: uncommon_trap(reason='loop_limit_check' action='maybe_recompile' debug_id='0')
        # test_slice::micro1 @ bci:13 (line 21) L[0]=RBP L[1]=rsp + #0 L[2]=#0 L[3]=_ L[4]=_ L[5]=_ L[6]=_ STK[0]=#0 STK[1]=rsp + #8
        # OopMap {rbp=Oop [0]=Oop off=920/0x398}
3a0     stop	# ShouldNotReachHere

3b4     B34: #	out( N1 ) <- in( B12 )  Freq: 9.69687e-07
3b4     stop	# ShouldNotReachHere

3c8     B35: #	out( N1 ) <- in( B13 )  Freq: 9.69686e-07
3c8     stop	# ShouldNotReachHere

3dc     B36: #	out( N1 ) <- in( B14 )  Freq: 9.69685e-07
3dc     stop	# ShouldNotReachHere

3f0     B37: #	out( N1 ) <- in( B15 )  Freq: 9.69684e-07
3f0     stop	# ShouldNotReachHere

404     B38: #	out( N1 ) <- in( B23 )  Freq: 4.9128e-07
404     stop	# ShouldNotReachHere

418     B39: #	out( N1 ) <- in( B24 )  Freq: 4.9128e-07
418     stop	# ShouldNotReachHere

42c     B40: #	out( N1 ) <- in( B25 )  Freq: 4.91279e-07
42c     stop	# ShouldNotReachHere

440     B41: #	out( N1 ) <- in( B26 )  Freq: 4.91279e-07
440     stop	# ShouldNotReachHere

454     B42: #	out( N1 ) <- in( B1 )  Freq: 1.01328e-06
454     movl    RSI, #-10	# int
        nop 	# 3 bytes pad for loops and calls
45c     call,static  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # test_slice::micro1 @ bci:7 (line 21) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_ STK[0]=_ STK[1]=_ STK[2]=#null
        # OopMap {off=1124/0x464}
46c     stop	# ShouldNotReachHere

--------------------------------------------------------------------------------
----------------------------------- Assembly -----------------------------------

Compiled method (c2) 6155  437             test_slice::micro1 (116 bytes)
 total in heap  [0x00007d15bc5e9588,0x00007d15bc5e9b60] = 1496
 constants      [0x00007d15bc5e9680,0x00007d15bc5e96a0] = 32
 main code      [0x00007d15bc5e96a0,0x00007d15bc5e9b40] = 1184
 stub code      [0x00007d15bc5e9b40,0x00007d15bc5e9b58] = 24
 oops           [0x00007d15bc5e9b58,0x00007d15bc5e9b60] = 8
 mutable data [0x00007d157c691370,0x00007d157c691678] = 776
 relocation     [0x00007d157c691370,0x00007d157c691408] = 152
 metadata       [0x00007d157c691408,0x00007d157c691678] = 624
 immutable data [0x00007d157c690f50,0x00007d157c691348] = 1016
 dependencies   [0x00007d157c690f50,0x00007d157c691000] = 176
 nul chk table  [0x00007d157c691000,0x00007d157c691018] = 24
 scopes pcs     [0x00007d157c691018,0x00007d157c691268] = 592
 scopes data    [0x00007d157c691268,0x00007d157c691348] = 224

[Disassembly]
--------------------------------------------------------------------------------

[Constant Pool]
             Address          hex4                    hex8      
  0x00007d15bc5e9680:   0x00000007      0xf4f4f4f400000007      
  0x00007d15bc5e9684:   0xf4f4f4f4                              
  0x00007d15bc5e9688:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x00007d15bc5e968c:   0xf4f4f4f4                              
  0x00007d15bc5e9690:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x00007d15bc5e9694:   0xf4f4f4f4                              
  0x00007d15bc5e9698:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x00007d15bc5e969c:   0xf4f4f4f4                              

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x00007d1594401b28} 'micro1' '([B[B)V' in 'test_slice'
  # parm0:    rsi:rsi   = '[B'
  # parm1:    rdx:rdx   = '[B'
  #           [sp+0x30]  (sp of caller)
 ;; N1: #	out( B1 ) <- in( B42 B37 B32 B41 B38 B33 B35 B34 B31 B39 B36 B40 )  Freq: 1
 ;; B1: #	out( B42 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x00007d15bc5e96a0:   mov    %eax,-0x18000(%rsp)          ;   {other}
  0x00007d15bc5e96a7:   push   %rbp
  0x00007d15bc5e96a8:   sub    $0x20,%rsp
  0x00007d15bc5e96ac:   cmpl   $0x0,0x20(%r15)
  0x00007d15bc5e96b4:   jne    0x00007d15bc5e9b36           ;*synchronization entry
                                                            ; - test_slice::micro1@-1 (line 21)
  0x00007d15bc5e96ba:   mov    0xc(%rdx),%r10d              ; implicit exception: dispatches to 0x00007d15bc5e9af4
 ;; B2: #	out( B31 B3 ) <- in( B1 )  Freq: 0.999999
  0x00007d15bc5e96be:   mov    %r10d,%r9d
  0x00007d15bc5e96c1:   and    $0xffffffe0,%r9d
  0x00007d15bc5e96c5:   jle    0x00007d15bc5e99d1
 ;; B3: #	out( B32 B4 ) <- in( B2 )  Freq: 0.969696
  0x00007d15bc5e96cb:   lea    -0x1f(%r10),%r13d
  0x00007d15bc5e96cf:   test   %r13d,%r13d
  0x00007d15bc5e96d2:   jl     0x00007d15bc5e99e4
 ;; B4: #	out( B32 B5 ) <- in( B3 )  Freq: 0.969695
  0x00007d15bc5e96d8:   cmp    $0x1f,%r10d
  0x00007d15bc5e96dc:   je     0x00007d15bc5e99e4
 ;; B5: #	out( B32 B6 ) <- in( B4 )  Freq: 0.969694
  0x00007d15bc5e96e2:   movslq %r10d,%r10
  0x00007d15bc5e96e5:   movslq %r9d,%r11
  0x00007d15bc5e96e8:   add    $0xffffffffffffffe1,%r10
  0x00007d15bc5e96ec:   add    $0x1f,%r11
  0x00007d15bc5e96f0:   and    $0xffffffffffffffe0,%r11
  0x00007d15bc5e96f4:   mov    %r11d,%r8d
  0x00007d15bc5e96f7:   movslq %r8d,%r11
  0x00007d15bc5e96fa:   add    $0xffffffffffffffe0,%r11
  0x00007d15bc5e96fe:   cmp    %r10,%r11
  0x00007d15bc5e9701:   jae    0x00007d15bc5e99e4           ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
                                                            ; - jdk.incubator.vector.Int256Vector::lane@94 (line 528)
                                                            ; - test_slice::micro1@95 (line 33)
 ;; B6: #	out( B32 B7 ) <- in( B5 )  Freq: 0.969693
  0x00007d15bc5e9707:   mov    0xc(%rsi),%r10d              ; implicit exception: dispatches to 0x00007d15bc5e99e4
 ;; B7: #	out( B32 B8 ) <- in( B6 )  Freq: 0.969692
  0x00007d15bc5e970b:   lea    -0x1f(%r10),%r14d
  0x00007d15bc5e970f:   test   %r14d,%r14d
  0x00007d15bc5e9712:   jl     0x00007d15bc5e99e4
 ;; B8: #	out( B32 B9 ) <- in( B7 )  Freq: 0.969691
  0x00007d15bc5e9718:   cmp    $0x1f,%r10d
  0x00007d15bc5e971c:   je     0x00007d15bc5e99e4
 ;; B9: #	out( B32 B10 ) <- in( B8 )  Freq: 0.96969
  0x00007d15bc5e9722:   movslq %r10d,%r10
  0x00007d15bc5e9725:   add    $0xffffffffffffffe1,%r10
  0x00007d15bc5e9729:   cmp    %r10,%r11
  0x00007d15bc5e972c:   jae    0x00007d15bc5e99e4
 ;; B10: #	out( B33 B11 ) <- in( B9 )  Freq: 0.969689
  0x00007d15bc5e9732:   cmp    $0x7fffffe0,%r9d
  0x00007d15bc5e9739:   jg     0x00007d15bc5e9a1c
 ;; B11: #	out( B22 B12 ) <- in( B10 )  Freq: 0.969688
  0x00007d15bc5e973f:   vmovdqu 0x10(%rdx),%ymm0
  0x00007d15bc5e9744:   lea    -0x60(%r9),%r8d              ;*invokestatic convert {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.AbstractVector::convert0@322 (line 768)
                                                            ; - jdk.incubator.vector.AbstractVector::asVectorRawTemplate@11 (line 185)
                                                            ; - jdk.incubator.vector.Byte256Vector::asVectorRaw@2 (line 176)
                                                            ; - jdk.incubator.vector.AbstractVector::reinterpretAsInts@4 (line 266)
                                                            ; - jdk.incubator.vector.ByteVector::reinterpretAsInts@1 (line 51)
                                                            ; - test_slice::micro1@26 (line 23)
  0x00007d15bc5e9748:   vpslld $0x8,%ymm0,%ymm1
  0x00007d15bc5e974d:   movabs $0xc8d74388,%r10             ;   {oop([I{0x00000000c8d74388})}
  0x00007d15bc5e9757:   mov    $0x20,%ebx
  0x00007d15bc5e975c:   movabs $0xc8e24b28,%rbp             ;   {oop(a 'java/lang/Class'{0x00000000c8e24b28} = 'test_slice')}
  0x00007d15bc5e9766:   mov    0x8c(%rbp),%r11d
  0x00007d15bc5e976d:   vpbroadcastd -0xf6(%rip),%ymm2        # 0x00007d15bc5e9680
                                                            ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
                                                            ; - jdk.incubator.vector.Int256Vector::lane@94 (line 528)
                                                            ; - test_slice::micro1@95 (line 33)
                                                            ;   {section_word}
  0x00007d15bc5e9776:   vpand  0x10(%r10),%ymm2,%ymm5       ;*invokestatic rearrangeOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::rearrangeTemplate@26 (line 2430)
                                                            ; - jdk.incubator.vector.Int256Vector::rearrange@7 (line 452)
                                                            ; - jdk.incubator.vector.Int256Vector::rearrange@2 (line 43)
                                                            ; - test_slice::micro1@36 (line 25)
  0x00007d15bc5e977c:   vpermd %ymm0,%ymm5,%ymm2
  0x00007d15bc5e9781:   vextracti128 $0x0,%ymm2,%xmm3
  0x00007d15bc5e9787:   vpinsrd $0x0,%r11d,%xmm3,%xmm3
  0x00007d15bc5e978d:   vinserti128 $0x0,%xmm3,%ymm2,%ymm2
  0x00007d15bc5e9793:   vpsrld $0x18,%ymm2,%ymm2
  0x00007d15bc5e9798:   vpor   %ymm1,%ymm2,%ymm1
  0x00007d15bc5e979c:   vmovdqu %ymm1,0x10(%rsi)
  0x00007d15bc5e97a1:   vextractf128 $0x1,%ymm0,%xmm1
  0x00007d15bc5e97a7:   vpextrd $0x3,%xmm1,%r10d            ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
                                                            ; - jdk.incubator.vector.Int256Vector::lane@94 (line 528)
                                                            ; - test_slice::micro1@95 (line 33)
  0x00007d15bc5e97ad:   mov    %r10d,0x8c(%rbp)             ;*putstatic previousFourUtf8Bytes {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test_slice::micro1@98 (line 33)
  0x00007d15bc5e97b4:   cmp    $0x20,%r8d
  0x00007d15bc5e97b8:   jle    0x00007d15bc5e9950
 ;; B12: #	out( B34 B13 ) <- in( B11 )  Freq: 0.969687
  0x00007d15bc5e97be:   cmp    $0x20,%r13d
  0x00007d15bc5e97c2:   jbe    0x00007d15bc5e9a54
 ;; B13: #	out( B35 B14 ) <- in( B12 )  Freq: 0.969686
  0x00007d15bc5e97c8:   cmp    $0x80,%r13d
  0x00007d15bc5e97cf:   jbe    0x00007d15bc5e9a68
 ;; B14: #	out( B36 B15 ) <- in( B13 )  Freq: 0.969685
  0x00007d15bc5e97d5:   cmp    $0x20,%r14d
  0x00007d15bc5e97d9:   jbe    0x00007d15bc5e9a7c
 ;; B15: #	out( B37 B16 ) <- in( B14 )  Freq: 0.969684
  0x00007d15bc5e97df:   cmp    $0x80,%r14d
  0x00007d15bc5e97e6:   jbe    0x00007d15bc5e9a90
 ;; B16: #	out( B18 ) <- in( B15 )  Freq: 0.969683
  0x00007d15bc5e97ec:   mov    $0x1f400,%ecx                ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test_slice::micro1@112 (line 21)
  0x00007d15bc5e97f1:   xor    %eax,%eax
  0x00007d15bc5e97f3:   jmp    0x00007d15bc5e97fa
 ;; B17: #	out( B18 ) <- in( B20 ) top-of-loop Freq: 31.0299
  0x00007d15bc5e97f5:   vmovq  %xmm0,%rsi
 ;; B18: #	out( B19 ) <- in( B16 B17 ) Loop( B18-B17 ) Freq: 31.9996
  0x00007d15bc5e97fa:   mov    %r9d,%edi
  0x00007d15bc5e97fd:   sub    %ebx,%edi
  0x00007d15bc5e97ff:   add    $0xffffffa0,%edi
  0x00007d15bc5e9802:   cmp    %ebx,%r8d
  0x00007d15bc5e9805:   cmovl  %eax,%edi
  0x00007d15bc5e9808:   cmp    $0x1f400,%edi
  0x00007d15bc5e980e:   cmova  %ecx,%edi
  0x00007d15bc5e9811:   add    %ebx,%edi
  0x00007d15bc5e9813:   vmovq  %rsi,%xmm0
  0x00007d15bc5e9818:   nop
  0x00007d15bc5e9819:   nop
  0x00007d15bc5e981a:   nop
  0x00007d15bc5e981b:   nop
  0x00007d15bc5e981c:   nop
  0x00007d15bc5e981d:   nop
  0x00007d15bc5e981e:   nop
  0x00007d15bc5e981f:   nop
 ;; B19: #	out( B19 B20 ) <- in( B18 B19 ) Loop( B19-B19 inner main of N135 strip mined) Freq: 1055.99
  0x00007d15bc5e9820:   movslq %ebx,%rsi
  0x00007d15bc5e9823:   vmovdqu 0x10(%rdx,%rsi,1),%ymm1     ;*invokestatic convert {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.AbstractVector::convert0@322 (line 768)
                                                            ; - jdk.incubator.vector.AbstractVector::asVectorRawTemplate@11 (line 185)
                                                            ; - jdk.incubator.vector.Byte256Vector::asVectorRaw@2 (line 176)
                                                            ; - jdk.incubator.vector.AbstractVector::reinterpretAsInts@4 (line 266)
                                                            ; - jdk.incubator.vector.ByteVector::reinterpretAsInts@1 (line 51)
                                                            ; - test_slice::micro1@26 (line 23)
  0x00007d15bc5e9829:   vpermd %ymm1,%ymm5,%ymm2
  0x00007d15bc5e982e:   vpslld $0x8,%ymm1,%ymm3
  0x00007d15bc5e9833:   vextracti128 $0x0,%ymm2,%xmm4
  0x00007d15bc5e9839:   vpinsrd $0x0,%r10d,%xmm4,%xmm4
  0x00007d15bc5e983f:   vinserti128 $0x0,%xmm4,%ymm2,%ymm2
  0x00007d15bc5e9845:   vpsrld $0x18,%ymm2,%ymm2
  0x00007d15bc5e984a:   vpor   %ymm3,%ymm2,%ymm2
  0x00007d15bc5e984e:   vmovq  %xmm0,%r11                   ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
                                                            ; - jdk.incubator.vector.Int256Vector::lane@94 (line 528)
                                                            ; - test_slice::micro1@95 (line 33)
  0x00007d15bc5e9853:   vmovdqu %ymm2,0x10(%r11,%rsi,1)     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
                                                            ; - test_slice::micro1@80 (line 32)
  0x00007d15bc5e985a:   vmovdqu 0x30(%rdx,%rsi,1),%ymm9     ;*invokestatic convert {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.AbstractVector::convert0@322 (line 768)
                                                            ; - jdk.incubator.vector.AbstractVector::asVectorRawTemplate@11 (line 185)
                                                            ; - jdk.incubator.vector.Byte256Vector::asVectorRaw@2 (line 176)
                                                            ; - jdk.incubator.vector.AbstractVector::reinterpretAsInts@4 (line 266)
                                                            ; - jdk.incubator.vector.ByteVector::reinterpretAsInts@1 (line 51)
                                                            ; - test_slice::micro1@26 (line 23)
  0x00007d15bc5e9860:   vpermd %ymm9,%ymm5,%ymm2
  0x00007d15bc5e9865:   vpslld $0x8,%ymm9,%ymm3
  0x00007d15bc5e986b:   vextractf128 $0x1,%ymm1,%xmm4       ;   {other}
  0x00007d15bc5e9871:   vpextrd $0x3,%xmm4,%r10d
  0x00007d15bc5e9877:   vextracti128 $0x0,%ymm2,%xmm1
  0x00007d15bc5e987d:   vpinsrd $0x0,%r10d,%xmm1,%xmm1
  0x00007d15bc5e9883:   vinserti128 $0x0,%xmm1,%ymm2,%ymm1
  0x00007d15bc5e9889:   vpsrld $0x18,%ymm1,%ymm1
  0x00007d15bc5e988e:   vpor   %ymm3,%ymm1,%ymm1            ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
                                                            ; - jdk.incubator.vector.Int256Vector::lane@94 (line 528)
                                                            ; - test_slice::micro1@95 (line 33)
  0x00007d15bc5e9892:   vmovdqu %ymm1,0x30(%r11,%rsi,1)     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
                                                            ; - test_slice::micro1@80 (line 32)
  0x00007d15bc5e9899:   vmovdqu 0x50(%rdx,%rsi,1),%ymm1     ;*invokestatic convert {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.AbstractVector::convert0@322 (line 768)
                                                            ; - jdk.incubator.vector.AbstractVector::asVectorRawTemplate@11 (line 185)
                                                            ; - jdk.incubator.vector.Byte256Vector::asVectorRaw@2 (line 176)
                                                            ; - jdk.incubator.vector.AbstractVector::reinterpretAsInts@4 (line 266)
                                                            ; - jdk.incubator.vector.ByteVector::reinterpretAsInts@1 (line 51)
                                                            ; - test_slice::micro1@26 (line 23)
  0x00007d15bc5e989f:   vextractf128 $0x1,%ymm1,%xmm6
  0x00007d15bc5e98a5:   vpextrd $0x3,%xmm6,%r10d
  0x00007d15bc5e98ab:   vpermd %ymm1,%ymm5,%ymm2
  0x00007d15bc5e98b0:   vpslld $0x8,%ymm1,%ymm1
  0x00007d15bc5e98b5:   vextractf128 $0x1,%ymm9,%xmm3
  0x00007d15bc5e98bb:   vpextrd $0x3,%xmm3,%r11d
  0x00007d15bc5e98c1:   vextracti128 $0x0,%ymm2,%xmm3
  0x00007d15bc5e98c7:   vpinsrd $0x0,%r11d,%xmm3,%xmm3
  0x00007d15bc5e98cd:   vinserti128 $0x0,%xmm3,%ymm2,%ymm2
  0x00007d15bc5e98d3:   vpsrld $0x18,%ymm2,%ymm2
  0x00007d15bc5e98d8:   vpor   %ymm1,%ymm2,%ymm1
  0x00007d15bc5e98dc:   vmovq  %xmm0,%r11                   ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
                                                            ; - jdk.incubator.vector.Int256Vector::lane@94 (line 528)
                                                            ; - test_slice::micro1@95 (line 33)
  0x00007d15bc5e98e1:   vmovdqu %ymm1,0x50(%r11,%rsi,1)     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
                                                            ; - test_slice::micro1@80 (line 32)
  0x00007d15bc5e98e8:   vmovdqu 0x70(%rdx,%rsi,1),%ymm1     ;*invokestatic convert {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.AbstractVector::convert0@322 (line 768)
                                                            ; - jdk.incubator.vector.AbstractVector::asVectorRawTemplate@11 (line 185)
                                                            ; - jdk.incubator.vector.Byte256Vector::asVectorRaw@2 (line 176)
                                                            ; - jdk.incubator.vector.AbstractVector::reinterpretAsInts@4 (line 266)
                                                            ; - jdk.incubator.vector.ByteVector::reinterpretAsInts@1 (line 51)
                                                            ; - test_slice::micro1@26 (line 23)
  0x00007d15bc5e98ee:   vpermd %ymm1,%ymm5,%ymm2
  0x00007d15bc5e98f3:   vextracti128 $0x0,%ymm2,%xmm8
  0x00007d15bc5e98f9:   vpinsrd $0x0,%r10d,%xmm8,%xmm8
  0x00007d15bc5e98ff:   vinserti128 $0x0,%xmm8,%ymm2,%ymm2
  0x00007d15bc5e9905:   vextractf128 $0x1,%ymm1,%xmm7
  0x00007d15bc5e990b:   vpextrd $0x3,%xmm7,%r10d
  0x00007d15bc5e9911:   vpslld $0x8,%ymm1,%ymm1
  0x00007d15bc5e9916:   vpsrld $0x18,%ymm2,%ymm2
  0x00007d15bc5e991b:   vpor   %ymm2,%ymm1,%ymm1            ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
                                                            ; - jdk.incubator.vector.Int256Vector::lane@94 (line 528)
                                                            ; - test_slice::micro1@95 (line 33)
  0x00007d15bc5e991f:   vmovdqu %ymm1,0x70(%r11,%rsi,1)     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
                                                            ; - test_slice::micro1@80 (line 32)
  0x00007d15bc5e9926:   add    $0x80,%ebx
  0x00007d15bc5e992c:   cmp    %edi,%ebx
  0x00007d15bc5e992e:   jl     0x00007d15bc5e9820           ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
                                                            ; - jdk.incubator.vector.Int256Vector::lane@94 (line 528)
                                                            ; - test_slice::micro1@95 (line 33)
 ;; B20: #	out( B17 B21 ) <- in( B19 )  Freq: 31.9996
  0x00007d15bc5e9934:   mov    %r10d,0x8c(%rbp)             ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test_slice::micro1@112 (line 21)
  0x00007d15bc5e993b:   mov    0x30(%r15),%r11              ; ImmutableOopMap {rdx=Oop rbp=Oop xmm0=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) test_slice::micro1@112 (line 21)
  0x00007d15bc5e993f:   test   %eax,(%r11)                  ;   {poll}
  0x00007d15bc5e9942:   cmp    %r8d,%ebx
  0x00007d15bc5e9945:   jl     0x00007d15bc5e97f5
 ;; B21: #	out( B22 ) <- in( B20 )  Freq: 0.969683
  0x00007d15bc5e994b:   vmovq  %xmm0,%rsi
 ;; B22: #	out( B31 B23 ) <- in( B11 B21 )  Freq: 0.969684
  0x00007d15bc5e9950:   cmp    %r9d,%ebx
  0x00007d15bc5e9953:   jge    0x00007d15bc5e99d1
 ;; B23: #	out( B38 B24 ) <- in( B22 )  Freq: 0.484842
  0x00007d15bc5e9955:   cmp    %r13d,%ebx
  0x00007d15bc5e9958:   jae    0x00007d15bc5e9aa4
 ;; B24: #	out( B39 B25 ) <- in( B23 )  Freq: 0.484842
  0x00007d15bc5e995e:   mov    %ebx,%r8d
  0x00007d15bc5e9961:   cmp    %r13d,%r8d
  0x00007d15bc5e9964:   jae    0x00007d15bc5e9ab8
 ;; B25: #	out( B40 B26 ) <- in( B24 )  Freq: 0.484841
  0x00007d15bc5e996a:   cmp    %r14d,%ebx
  0x00007d15bc5e996d:   jae    0x00007d15bc5e9acc
 ;; B26: #	out( B41 B27 ) <- in( B25 )  Freq: 0.484841
  0x00007d15bc5e9973:   cmp    %r14d,%r8d
  0x00007d15bc5e9976:   jae    0x00007d15bc5e9ae0           ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
                                                            ; - jdk.incubator.vector.Int256Vector::lane@94 (line 528)
                                                            ; - test_slice::micro1@95 (line 33)
 ;; B27: #	out( B28 ) <- in( B26 )  Freq: 0.48484
 ;; B28: #	out( B30 B29 ) <- in( B27 B29 ) Loop( B28-B29 inner post of N197) Freq: 0.96968
  0x00007d15bc5e997c:   movslq %ebx,%r11                    ;*i2l {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::arrayAddress@4 (line 4118)
                                                            ; - jdk.incubator.vector.ByteVector::fromArray0Template@20 (line 3858)
                                                            ; - jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 1020)
                                                            ; - jdk.incubator.vector.ByteVector::fromArray@24 (line 3043)
                                                            ; - test_slice::micro1@21 (line 22)
  0x00007d15bc5e997f:   vmovdqu 0x10(%rdx,%r11,1),%ymm0     ;*invokestatic convert {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.AbstractVector::convert0@322 (line 768)
                                                            ; - jdk.incubator.vector.AbstractVector::asVectorRawTemplate@11 (line 185)
                                                            ; - jdk.incubator.vector.Byte256Vector::asVectorRaw@2 (line 176)
                                                            ; - jdk.incubator.vector.AbstractVector::reinterpretAsInts@4 (line 266)
                                                            ; - jdk.incubator.vector.ByteVector::reinterpretAsInts@1 (line 51)
                                                            ; - test_slice::micro1@26 (line 23)
  0x00007d15bc5e9986:   vpermd %ymm0,%ymm5,%ymm1
  0x00007d15bc5e998b:   vpslld $0x8,%ymm0,%ymm2
  0x00007d15bc5e9990:   vextractf128 $0x1,%ymm0,%xmm3
  0x00007d15bc5e9996:   vpextrd $0x3,%xmm3,%ecx
  0x00007d15bc5e999c:   vextracti128 $0x0,%ymm1,%xmm0
  0x00007d15bc5e99a2:   vpinsrd $0x0,%r10d,%xmm0,%xmm0
  0x00007d15bc5e99a8:   vinserti128 $0x0,%xmm0,%ymm1,%ymm0
  0x00007d15bc5e99ae:   vpsrld $0x18,%ymm0,%ymm0
  0x00007d15bc5e99b3:   vpor   %ymm2,%ymm0,%ymm0            ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
                                                            ; - jdk.incubator.vector.Int256Vector::lane@94 (line 528)
                                                            ; - test_slice::micro1@95 (line 33)
  0x00007d15bc5e99b7:   vmovdqu %ymm0,0x10(%rsi,%r11,1)     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
                                                            ; - test_slice::micro1@80 (line 32)
  0x00007d15bc5e99be:   add    $0x20,%ebx
  0x00007d15bc5e99c1:   cmp    %r9d,%ebx
  0x00007d15bc5e99c4:   jge    0x00007d15bc5e99cb
 ;; B29: #	out( B28 ) <- in( B28 )  Freq: 0.48484
  0x00007d15bc5e99c6:   mov    %ecx,%r10d
  0x00007d15bc5e99c9:   jmp    0x00007d15bc5e997c
 ;; B30: #	out( B31 ) <- in( B28 )  Freq: 0.48484
  0x00007d15bc5e99cb:   mov    %ecx,0x8c(%rbp)
 ;; B31: #	out( N1 ) <- in( B30 B22 B2 )  Freq: 0.999985
  0x00007d15bc5e99d1:   vzeroupper 
  0x00007d15bc5e99d4:   add    $0x20,%rsp
  0x00007d15bc5e99d8:   pop    %rbp
  0x00007d15bc5e99d9:   cmp    0x28(%r15),%rsp              ;   {poll_return}
  0x00007d15bc5e99dd:   ja     0x00007d15bc5e9b20
  0x00007d15bc5e99e3:   ret    
 ;; B32: #	out( N1 ) <- in( B9 B3 B4 B5 B6 B7 B8 )  Freq: 6.85223e-06
  0x00007d15bc5e99e4:   mov    %rsi,%rbp
  0x00007d15bc5e99e7:   mov    %rdx,(%rsp)
  0x00007d15bc5e99eb:   mov    %r9d,0x8(%rsp)               ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
                                                            ; - jdk.incubator.vector.Int256Vector::lane@94 (line 528)
                                                            ; - test_slice::micro1@95 (line 33)
  0x00007d15bc5e99f0:   mov    $0xffffff6e,%esi
  0x00007d15bc5e99f5:   nop
  0x00007d15bc5e99f6:   nop
  0x00007d15bc5e99f7:   nop
  0x00007d15bc5e99f8:   vzeroupper 
  0x00007d15bc5e99fb:   call   0x00007d15bc54ebe0           ; ImmutableOopMap {rbp=Oop [0]=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) test_slice::micro1@13 (line 21)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007d15bc5e9a00:   nopl   0x1000478(%rax,%rax,1)       ;   {post_call_nop}
  0x00007d15bc5e9a08:   movabs $0x7d157c690890,%rdi         ;   {external_word}
  0x00007d15bc5e9a12:   and    $0xfffffffffffffff0,%rsp
  0x00007d15bc5e9a16:   call   0x00007d15cfbb2a22           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007d15bc5e9a1b:   hlt    
 ;; B33: #	out( N1 ) <- in( B10 )  Freq: 9.82566e-07
  0x00007d15bc5e9a1c:   mov    %rsi,%rbp
  0x00007d15bc5e9a1f:   mov    %rdx,(%rsp)
  0x00007d15bc5e9a23:   mov    %r9d,0x8(%rsp)               ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
                                                            ; - jdk.incubator.vector.Int256Vector::lane@94 (line 528)
                                                            ; - test_slice::micro1@95 (line 33)
  0x00007d15bc5e9a28:   mov    $0xffffff66,%esi
  0x00007d15bc5e9a2d:   nop
  0x00007d15bc5e9a2e:   nop
  0x00007d15bc5e9a2f:   nop
  0x00007d15bc5e9a30:   vzeroupper 
  0x00007d15bc5e9a33:   call   0x00007d15bc54ebe0           ; ImmutableOopMap {rbp=Oop [0]=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) test_slice::micro1@13 (line 21)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007d15bc5e9a38:   nopl   0x20004b0(%rax,%rax,1)       ;   {post_call_nop}
  0x00007d15bc5e9a40:   movabs $0x7d157c690890,%rdi         ;   {external_word}
  0x00007d15bc5e9a4a:   and    $0xfffffffffffffff0,%rsp
  0x00007d15bc5e9a4e:   call   0x00007d15cfbb2a22           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007d15bc5e9a53:   hlt    
 ;; B34: #	out( N1 ) <- in( B12 )  Freq: 9.69687e-07
  0x00007d15bc5e9a54:   movabs $0x7d157c690a40,%rdi         ;   {external_word}
  0x00007d15bc5e9a5e:   and    $0xfffffffffffffff0,%rsp
  0x00007d15bc5e9a62:   call   0x00007d15cfbb2a22           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007d15bc5e9a67:   hlt    
 ;; B35: #	out( N1 ) <- in( B13 )  Freq: 9.69686e-07
  0x00007d15bc5e9a68:   movabs $0x7d157c690a40,%rdi         ;   {external_word}
  0x00007d15bc5e9a72:   and    $0xfffffffffffffff0,%rsp
  0x00007d15bc5e9a76:   call   0x00007d15cfbb2a22           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007d15bc5e9a7b:   hlt    
 ;; B36: #	out( N1 ) <- in( B14 )  Freq: 9.69685e-07
  0x00007d15bc5e9a7c:   movabs $0x7d157c690a40,%rdi         ;   {external_word}
  0x00007d15bc5e9a86:   and    $0xfffffffffffffff0,%rsp
  0x00007d15bc5e9a8a:   call   0x00007d15cfbb2a22           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007d15bc5e9a8f:   hlt    
 ;; B37: #	out( N1 ) <- in( B15 )  Freq: 9.69684e-07
  0x00007d15bc5e9a90:   movabs $0x7d157c690a40,%rdi         ;   {external_word}
  0x00007d15bc5e9a9a:   and    $0xfffffffffffffff0,%rsp
  0x00007d15bc5e9a9e:   call   0x00007d15cfbb2a22           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007d15bc5e9aa3:   hlt    
 ;; B38: #	out( N1 ) <- in( B23 )  Freq: 4.9128e-07
  0x00007d15bc5e9aa4:   movabs $0x7d157c690a40,%rdi         ;   {external_word}
  0x00007d15bc5e9aae:   and    $0xfffffffffffffff0,%rsp
  0x00007d15bc5e9ab2:   call   0x00007d15cfbb2a22           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007d15bc5e9ab7:   hlt    
 ;; B39: #	out( N1 ) <- in( B24 )  Freq: 4.9128e-07
  0x00007d15bc5e9ab8:   movabs $0x7d157c690a40,%rdi         ;   {external_word}
  0x00007d15bc5e9ac2:   and    $0xfffffffffffffff0,%rsp
  0x00007d15bc5e9ac6:   call   0x00007d15cfbb2a22           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007d15bc5e9acb:   hlt    
 ;; B40: #	out( N1 ) <- in( B25 )  Freq: 4.91279e-07
  0x00007d15bc5e9acc:   movabs $0x7d157c690a40,%rdi         ;   {external_word}
  0x00007d15bc5e9ad6:   and    $0xfffffffffffffff0,%rsp
  0x00007d15bc5e9ada:   call   0x00007d15cfbb2a22           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007d15bc5e9adf:   hlt    
 ;; B41: #	out( N1 ) <- in( B26 )  Freq: 4.91279e-07
  0x00007d15bc5e9ae0:   movabs $0x7d157c690a40,%rdi         ;   {external_word}
  0x00007d15bc5e9aea:   and    $0xfffffffffffffff0,%rsp
  0x00007d15bc5e9aee:   call   0x00007d15cfbb2a22           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007d15bc5e9af3:   hlt    
 ;; B42: #	out( N1 ) <- in( B1 )  Freq: 1.01328e-06
  0x00007d15bc5e9af4:   mov    $0xfffffff6,%esi             ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
                                                            ; - jdk.incubator.vector.Int256Vector::lane@94 (line 528)
                                                            ; - test_slice::micro1@95 (line 33)
  0x00007d15bc5e9af9:   nop
  0x00007d15bc5e9afa:   nop
  0x00007d15bc5e9afb:   nop
  0x00007d15bc5e9afc:   vzeroupper 
  0x00007d15bc5e9aff:   call   0x00007d15bc54ebe0           ; ImmutableOopMap {}
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test_slice::micro1@7 (line 21)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007d15bc5e9b04:   nopl   0x300057c(%rax,%rax,1)       ;   {post_call_nop}
  0x00007d15bc5e9b0c:   movabs $0x7d157c690890,%rdi         ;   {external_word}
  0x00007d15bc5e9b16:   and    $0xfffffffffffffff0,%rsp
  0x00007d15bc5e9b1a:   call   0x00007d15cfbb2a22           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007d15bc5e9b1f:   hlt                                 ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
                                                            ; - jdk.incubator.vector.Int256Vector::lane@94 (line 528)
                                                            ; - test_slice::micro1@95 (line 33)
  0x00007d15bc5e9b20:   movabs $0x7d15bc5e99d9,%r10         ;   {internal_word}
  0x00007d15bc5e9b2a:   mov    %r10,0x5a8(%r15)
  0x00007d15bc5e9b31:   jmp    0x00007d15bc5bbc60           ;   {runtime_call SafepointBlob}
  0x00007d15bc5e9b36:   call   Stub::Stub Generator method_entry_barrier_stub
                                                            ;   {runtime_call Stub::Stub Generator method_entry_barrier_stub}
  0x00007d15bc5e9b3b:   jmp    0x00007d15bc5e96ba
[Exception Handler]
  0x00007d15bc5e9b40:   jmp    0x00007d15bc54e8e0           ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x00007d15bc5e9b45:   call   0x00007d15bc5e9b4a
  0x00007d15bc5e9b4a:   subq   $0x5,(%rsp)
  0x00007d15bc5e9b4f:   jmp    0x00007d15bc5bbf80           ;   {runtime_call DeoptimizationBlob}
  0x00007d15bc5e9b54:   hlt    
  0x00007d15bc5e9b55:   hlt    
  0x00007d15bc5e9b56:   hlt    
  0x00007d15bc5e9b57:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Oops:
  0x00007d15bc5e9b58:   0x00000000c8f114a8 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x00000000c8f114a8}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Metadata:
  0x00007d157c691408:   0x00007d1594401b28 {method} {0x00007d1594401b28} 'micro1' '([B[B)V' in 'test_slice'
  0x00007d157c691410:   0x00007d1594183ab8 {method} {0x00007d1594183ab8} 'lane' '(I)I' in 'jdk/incubator/vector/Int256Vector'
  0x00007d157c691418:   0x00007d1594183bc8 {method} {0x00007d1594183bc8} 'laneHelper' '(I)I' in 'jdk/incubator/vector/Int256Vector'
  0x00007d157c691420:   0x00007d159407b9e0 {method} {0x00007d159407b9e0} 'reinterpretAsInts' '()Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/ByteVector'
  0x00007d157c691428:   0x00007d1594060ff0 {method} {0x00007d1594060ff0} 'reinterpretAsInts' '()Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/AbstractVector'
  0x00007d157c691430:   0x00007d15941160e8 {method} {0x00007d15941160e8} 'asVectorRaw' '(Ljdk/incubator/vector/LaneType;)Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/Byte256Vector'
  0x00007d157c691438:   0x00007d15940602b8 {method} {0x00007d15940602b8} 'asVectorRawTemplate' '(Ljdk/incubator/vector/LaneType;)Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractVector'
  0x00007d157c691440:   0x00007d1594063060 {method} {0x00007d1594063060} 'convert0' '(CLjdk/incubator/vector/AbstractSpecies;)Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractVector'
  0x00007d157c691448:   0x00007d1594184fe0 {method} {0x00007d1594184fe0} 'rearrange' '(Ljdk/incubator/vector/VectorShuffle;)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/Int256Vector'
  0x00007d157c691450:   0x00007d1594183250 {method} {0x00007d1594183250} 'rearrange' '(Ljdk/incubator/vector/VectorShuffle;)Ljdk/incubator/vector/Int256Vector;' in 'jdk/incubator/vector/Int256Vector'
  0x00007d157c691458:   0x00007d159404dbe8 {method} {0x00007d159404dbe8} 'rearrangeTemplate' '(Ljava/lang/Class;Ljdk/incubator/vector/VectorShuffle;)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/IntVector'
  0x00007d157c691460:   0x00007d15940784f8 {method} {0x00007d15940784f8} 'intoArray' '([BI)V' in 'jdk/incubator/vector/ByteVector'
  0x00007d157c691468:   0x00007d1594077670 {method} {0x00007d1594077670} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[BI)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector'
  0x00007d157c691470:   0x00007d1594119520 {method} {0x00007d1594119520} 'fromArray0' '([BI)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/Byte256Vector'
  0x00007d157c691478:   0x00007d1594079238 {method} {0x00007d1594079238} 'fromArray0Template' '([BI)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector'
  0x00007d157c691480:   0x00007d159407ac30 {method} {0x00007d159407ac30} 'arrayAddress' '([BI)J' in 'jdk/incubator/vector/ByteVector'
  0x00007d157c691488:   0x00007d1594048628 {method} {0x00007d1594048628} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;I)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/IntVector'
  0x00007d157c691490:   0x00007d159404b140 {method} {0x00007d159404b140} 'or' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/IntVector'
  0x00007d157c691498:   0x00007d15940525d8 {method} {0x00007d15940525d8} 'reinterpretAsBytes' '()Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/IntVector'
  0x00007d157c6914a0:   0x00007d15940d52d0 {method} {0x00007d15940d52d0} 'loopBound' '(I)I' in 'jdk/incubator/vector/AbstractSpecies'
  0x00007d157c6914a8:   0x00007d15941cf5d0 {method} {0x00007d15941cf5d0} 'roundDown' '(II)I' in 'jdk/incubator/vector/VectorIntrinsics'
  0x00007d157c6914b0:   0x00007d15941cf158 {method} {0x00007d15941cf158} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
  0x00007d157c6914b8:   0x00007d15940cea60 {method} {0x00007d15940cea60} 'dummyVector' '()Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector$ByteSpecies'
  0x00007d157c6914c0:   0x00007d15940d46b0 {method} {0x00007d15940d46b0} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
  0x00007d157c6914c8:   0x000000004e27f4e8 {method} {0x000000004e27f4e8} 'checkIndex' '(II)I' in 'java/util/Objects'
  0x00007d157c6914d0:   0x00007d15940d6070 {method} {0x00007d15940d6070} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
  0x00007d157c6914d8:   0x00007d15940ce000 {method} {0x00007d15940ce000} 'vectorType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/ByteVector$ByteSpecies'
  0x00007d157c6914e0:   0x00007d15940cde48 {method} {0x00007d15940cde48} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/ByteVector$ByteSpecies'
  0x00007d157c6914e8:   0x00007d15940d4788 {method} {0x00007d15940d4788} 'laneCount' '()I' in 'jdk/incubator/vector/AbstractSpecies'
  0x00007d157c6914f0:   0x000000004e26b820 {method} {0x000000004e26b820} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder'
  0x00007d157c6914f8:   0x00007d15941151c8 {method} {0x00007d15941151c8} 'vspecies' '()Ljdk/incubator/vector/ByteVector$ByteSpecies;' in 'jdk/incubator/vector/Byte256Vector'
  0x00007d157c691500:   0x000000004e272eb0 {method} {0x000000004e272eb0} 'constant_L' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$Holder'
  0x00007d157c691508:   0x00007d15940d5790 {method} {0x00007d15940d5790} 'withLanes' '(Ljdk/incubator/vector/LaneType;)Ljdk/incubator/vector/AbstractSpecies;' in 'jdk/incubator/vector/AbstractSpecies'
  0x00007d157c691510:   0x00007d159411ca78 {method} {0x00007d159411ca78} 'vspecies' '()Ljdk/incubator/vector/AbstractSpecies;' in 'jdk/incubator/vector/Byte256Vector'
  0x00007d157c691518:   0x00007d15940d7b78 {method} {0x00007d15940d7b78} 'findSpecies' '(Ljdk/incubator/vector/LaneType;Ljdk/incubator/vector/VectorShape;)Ljdk/incubator/vector/AbstractSpecies;' in 'jdk/incubator/vector/AbstractSpecies'
  0x00007d157c691520:   0x00007d1594153f80 {method} {0x00007d1594153f80} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/IntVector$IntSpecies'
  0x00007d157c691528:   0x00007d15941152a0 {method} {0x00007d15941152a0} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/Byte256Vector'
  0x00007d157c691530:   0x00007d1594115528 {method} {0x00007d1594115528} 'length' '()I' in 'jdk/incubator/vector/Byte256Vector'
  0x00007d157c691538:   0x00007d1594156010 {method} {0x00007d1594156010} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/IntVector$IntSpecies'
  0x00007d157c691540:   0x00007d1594154b98 {method} {0x00007d1594154b98} 'dummyVector' '()Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/IntVector$IntSpecies'
  0x00007d157c691548:   0x000000004e27f7f8 {method} {0x000000004e27f7f8} 'requireNonNull' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/Objects'
  0x00007d157c691550:   0x00007d15941801e8 {method} {0x00007d15941801e8} 'length' '()I' in 'jdk/incubator/vector/Int256Vector'
  0x00007d157c691558:   0x00007d15941848c0 {method} {0x00007d15941848c0} 'withLane' '(II)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/Int256Vector'
  0x00007d157c691560:   0x00007d1594183d40 {method} {0x00007d1594183d40} 'withLane' '(II)Ljdk/incubator/vector/Int256Vector;' in 'jdk/incubator/vector/Int256Vector'
  0x00007d157c691568:   0x00007d1594183e60 {method} {0x00007d1594183e60} 'withLaneHelper' '(II)Ljdk/incubator/vector/Int256Vector;' in 'jdk/incubator/vector/Int256Vector'
  0x00007d157c691570:   0x00007d1594044138 {method} {0x00007d1594044138} 'opKind' '(Ljdk/incubator/vector/VectorOperators$Operator;I)Z' in 'jdk/incubator/vector/IntVector'
  0x00007d157c691578:   0x00007d15940c93e8 {method} {0x00007d15940c93e8} 'opKind' '(Ljdk/incubator/vector/VectorOperators$Operator;I)Z' in 'jdk/incubator/vector/VectorOperators'
  0x00007d157c691580:   0x00007d15941bba38 {method} {0x00007d15941bba38} 'opKind' '(I)Z' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  0x00007d157c691588:   0x00007d1594185e50 {method} {0x00007d1594185e50} 'lanewiseShift' '(Ljdk/incubator/vector/VectorOperators$Binary;I)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/Int256Vector'
  0x00007d157c691590:   0x00007d1594181bc0 {method} {0x00007d1594181bc0} 'lanewiseShift' '(Ljdk/incubator/vector/VectorOperators$Binary;I)Ljdk/incubator/vector/Int256Vector;' in 'jdk/incubator/vector/Int256Vector'
  0x00007d157c691598:   0x00007d1594048bf8 {method} {0x00007d1594048bf8} 'lanewiseShiftTemplate' '(Ljdk/incubator/vector/VectorOperators$Binary;I)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/IntVector'
  0x00007d157c6915a0:   0x00007d1594043f60 {method} {0x00007d1594043f60} 'opCode' '(Ljdk/incubator/vector/VectorOperators$Operator;)I' in 'jdk/incubator/vector/IntVector'
  0x00007d157c6915a8:   0x00007d15940c6710 {method} {0x00007d15940c6710} 'find' '(Ljdk/incubator/vector/VectorOperators$Operator;ILjava/util/function/IntFunction;)Ljava/lang/Object;' in 'jdk/incubator/vector/VectorOperators$ImplCache'
  0x00007d157c6915b0:   0x00007d15940c9300 {method} {0x00007d15940c9300} 'opCode' '(Ljdk/incubator/vector/VectorOperators$Operator;II)I' in 'jdk/incubator/vector/VectorOperators'
  0x00007d157c6915b8:   0x00007d15941bb570 {method} {0x00007d15941bb570} 'opCode' '(II)I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  0x00007d157c6915c0:   0x00007d15941bb660 {method} {0x00007d15941bb660} 'opCodeRaw' '()I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  0x00007d157c6915c8:   0x00007d1594186020 {method} {0x00007d1594186020} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/Int256Vector'
  0x00007d157c6915d0:   0x00007d15941819b8 {method} {0x00007d15941819b8} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/Int256Vector;' in 'jdk/incubator/vector/Int256Vector'
  0x00007d157c6915d8:   0x00007d1594047fc0 {method} {0x00007d1594047fc0} 'lanewiseTemplate' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/IntVector'
  0x00007d157c6915e0:   0x00007d159405fca0 {method} {0x00007d159405fca0} 'check' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractVector'
  0x00007d157c6915e8:   0x00007d159405fdd8 {method} {0x00007d159405fdd8} 'sameSpecies' '(Ljdk/incubator/vector/Vector;)Z' in 'jdk/incubator/vector/AbstractVector'
  0x00007d157c6915f0:   0x00007d15941871e8 {method} {0x00007d15941871e8} 'asByteVectorRaw' '()Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/Int256Vector'
  0x00007d157c6915f8:   0x00007d1594180cc0 {method} {0x00007d1594180cc0} 'asByteVectorRaw' '()Ljdk/incubator/vector/Byte256Vector;' in 'jdk/incubator/vector/Int256Vector'
  0x00007d157c691600:   0x00007d1594060398 {method} {0x00007d1594060398} 'asByteVectorRawTemplate' '()Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/AbstractVector'
  0x00007d157c691608:   0x00007d15941872c0 {method} {0x00007d15941872c0} 'vspecies' '()Ljdk/incubator/vector/AbstractSpecies;' in 'jdk/incubator/vector/Int256Vector'
  0x00007d157c691610:   0x00007d159417fe88 {method} {0x00007d159417fe88} 'vspecies' '()Ljdk/incubator/vector/IntVector$IntSpecies;' in 'jdk/incubator/vector/Int256Vector'
  0x00007d157c691618:   0x00007d159417ff60 {method} {0x00007d159417ff60} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/Int256Vector'
  0x00007d157c691620:   0x00007d15940cfed8 {method} {0x00007d15940cfed8} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/ByteVector$ByteSpecies'
  0x00007d157c691628:   0x000000004f004dd8 'jdk/incubator/vector/ByteVector$ByteSpecies'
  0x00007d157c691630:   0x00007d15940d3d98 'jdk/incubator/vector/VectorSpecies'
  0x00007d157c691638:   0x00007d15940d2b28 {method} {0x00007d15940d2b28} 'loopBound' '(I)I' in 'jdk/incubator/vector/VectorSpecies'
  0x00007d157c691640:   0x00007d15940d2930 {method} {0x00007d15940d2930} 'length' '()I' in 'jdk/incubator/vector/VectorSpecies'
  0x00007d157c691648:   0x000000004f008550 'jdk/incubator/vector/Byte256Vector'
  0x00007d157c691650:   0x00007d15940869b0 'jdk/incubator/vector/ByteVector'
  0x00007d157c691658:   0x000000004f00b298 'jdk/incubator/vector/IntVector$IntSpecies'
  0x00007d157c691660:   0x000000004f010490 'jdk/incubator/vector/VectorOperators$BinaryImpl'
  0x00007d157c691668:   0x00007d15941bbd20 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  0x00007d157c691670:   0x000000004f004988 'jdk/incubator/vector/VectorOperators$ImplCache'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
pc-bytecode offsets:
PcDesc(pc=0x00007d15bc5e969f offset=ffffffff bits=0):
PcDesc(pc=0x00007d15bc5e96ba offset=1a bits=0):
   test_slice::micro1@-1 (line 21)
PcDesc(pc=0x00007d15bc5e9707 offset=67 bits=0):
   jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
   jdk.incubator.vector.Int256Vector::lane@94 (line 528)
   test_slice::micro1@95 (line 33)
PcDesc(pc=0x00007d15bc5e9748 offset=a8 bits=0):
   jdk.incubator.vector.AbstractVector::convert0@322 (line 768)
   jdk.incubator.vector.AbstractVector::asVectorRawTemplate@11 (line 185)
   jdk.incubator.vector.Byte256Vector::asVectorRaw@2 (line 176)
   jdk.incubator.vector.AbstractVector::reinterpretAsInts@4 (line 266)
   jdk.incubator.vector.ByteVector::reinterpretAsInts@1 (line 51)
   test_slice::micro1@26 (line 23)
PcDesc(pc=0x00007d15bc5e9776 offset=d6 bits=0):
   jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
   jdk.incubator.vector.Int256Vector::lane@94 (line 528)
   test_slice::micro1@95 (line 33)
PcDesc(pc=0x00007d15bc5e977c offset=dc bits=0):
   jdk.incubator.vector.IntVector::rearrangeTemplate@26 (line 2430)
   jdk.incubator.vector.Int256Vector::rearrange@7 (line 452)
   jdk.incubator.vector.Int256Vector::rearrange@2 (line 43)
   test_slice::micro1@36 (line 25)
PcDesc(pc=0x00007d15bc5e97ad offset=10d bits=0):
   jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
   jdk.incubator.vector.Int256Vector::lane@94 (line 528)
   test_slice::micro1@95 (line 33)
PcDesc(pc=0x00007d15bc5e97b4 offset=114 bits=0):
   test_slice::micro1@98 (line 33)
PcDesc(pc=0x00007d15bc5e97f1 offset=151 bits=0):
   test_slice::micro1@112 (line 21)
PcDesc(pc=0x00007d15bc5e9829 offset=189 bits=0):
   jdk.incubator.vector.AbstractVector::convert0@322 (line 768)
   jdk.incubator.vector.AbstractVector::asVectorRawTemplate@11 (line 185)
   jdk.incubator.vector.Byte256Vector::asVectorRaw@2 (line 176)
   jdk.incubator.vector.AbstractVector::reinterpretAsInts@4 (line 266)
   jdk.incubator.vector.ByteVector::reinterpretAsInts@1 (line 51)
   test_slice::micro1@26 (line 23)
PcDesc(pc=0x00007d15bc5e9853 offset=1b3 bits=0):
   jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
   jdk.incubator.vector.Int256Vector::lane@94 (line 528)
   test_slice::micro1@95 (line 33)
PcDesc(pc=0x00007d15bc5e985a offset=1ba bits=0):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
   test_slice::micro1@80 (line 32)
PcDesc(pc=0x00007d15bc5e9860 offset=1c0 bits=0):
   jdk.incubator.vector.AbstractVector::convert0@322 (line 768)
   jdk.incubator.vector.AbstractVector::asVectorRawTemplate@11 (line 185)
   jdk.incubator.vector.Byte256Vector::asVectorRaw@2 (line 176)
   jdk.incubator.vector.AbstractVector::reinterpretAsInts@4 (line 266)
   jdk.incubator.vector.ByteVector::reinterpretAsInts@1 (line 51)
   test_slice::micro1@26 (line 23)
PcDesc(pc=0x00007d15bc5e9892 offset=1f2 bits=0):
   jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
   jdk.incubator.vector.Int256Vector::lane@94 (line 528)
   test_slice::micro1@95 (line 33)
PcDesc(pc=0x00007d15bc5e9899 offset=1f9 bits=0):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
   test_slice::micro1@80 (line 32)
PcDesc(pc=0x00007d15bc5e989f offset=1ff bits=0):
   jdk.incubator.vector.AbstractVector::convert0@322 (line 768)
   jdk.incubator.vector.AbstractVector::asVectorRawTemplate@11 (line 185)
   jdk.incubator.vector.Byte256Vector::asVectorRaw@2 (line 176)
   jdk.incubator.vector.AbstractVector::reinterpretAsInts@4 (line 266)
   jdk.incubator.vector.ByteVector::reinterpretAsInts@1 (line 51)
   test_slice::micro1@26 (line 23)
PcDesc(pc=0x00007d15bc5e98e1 offset=241 bits=0):
   jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
   jdk.incubator.vector.Int256Vector::lane@94 (line 528)
   test_slice::micro1@95 (line 33)
PcDesc(pc=0x00007d15bc5e98e8 offset=248 bits=0):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
   test_slice::micro1@80 (line 32)
PcDesc(pc=0x00007d15bc5e98ee offset=24e bits=0):
   jdk.incubator.vector.AbstractVector::convert0@322 (line 768)
   jdk.incubator.vector.AbstractVector::asVectorRawTemplate@11 (line 185)
   jdk.incubator.vector.Byte256Vector::asVectorRaw@2 (line 176)
   jdk.incubator.vector.AbstractVector::reinterpretAsInts@4 (line 266)
   jdk.incubator.vector.ByteVector::reinterpretAsInts@1 (line 51)
   test_slice::micro1@26 (line 23)
PcDesc(pc=0x00007d15bc5e991f offset=27f bits=0):
   jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
   jdk.incubator.vector.Int256Vector::lane@94 (line 528)
   test_slice::micro1@95 (line 33)
PcDesc(pc=0x00007d15bc5e9926 offset=286 bits=0):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
   test_slice::micro1@80 (line 32)
PcDesc(pc=0x00007d15bc5e9934 offset=294 bits=0):
   jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
   jdk.incubator.vector.Int256Vector::lane@94 (line 528)
   test_slice::micro1@95 (line 33)
PcDesc(pc=0x00007d15bc5e993b offset=29b bits=0):
   test_slice::micro1@112 (line 21)
PcDesc(pc=0x00007d15bc5e993f offset=29f bits=1):
   test_slice::micro1@112 (line 21)  reexecute=true
   Locals
    - l0: reg xmm0 [80],oop
    - l1: reg rdx [4],oop
    - l2: reg rbx [6],int
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
PcDesc(pc=0x00007d15bc5e997c offset=2dc bits=0):
   jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
   jdk.incubator.vector.Int256Vector::lane@94 (line 528)
   test_slice::micro1@95 (line 33)
PcDesc(pc=0x00007d15bc5e997f offset=2df bits=0):
   jdk.incubator.vector.ByteVector::arrayAddress@4 (line 4118)
   jdk.incubator.vector.ByteVector::fromArray0Template@20 (line 3858)
   jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 1020)
   jdk.incubator.vector.ByteVector::fromArray@24 (line 3043)
   test_slice::micro1@21 (line 22)
PcDesc(pc=0x00007d15bc5e9986 offset=2e6 bits=0):
   jdk.incubator.vector.AbstractVector::convert0@322 (line 768)
   jdk.incubator.vector.AbstractVector::asVectorRawTemplate@11 (line 185)
   jdk.incubator.vector.Byte256Vector::asVectorRaw@2 (line 176)
   jdk.incubator.vector.AbstractVector::reinterpretAsInts@4 (line 266)
   jdk.incubator.vector.ByteVector::reinterpretAsInts@1 (line 51)
   test_slice::micro1@26 (line 23)
PcDesc(pc=0x00007d15bc5e99b7 offset=317 bits=0):
   jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
   jdk.incubator.vector.Int256Vector::lane@94 (line 528)
   test_slice::micro1@95 (line 33)
PcDesc(pc=0x00007d15bc5e99be offset=31e bits=0):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
   test_slice::micro1@80 (line 32)
PcDesc(pc=0x00007d15bc5e99f0 offset=350 bits=0):
   jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
   jdk.incubator.vector.Int256Vector::lane@94 (line 528)
   test_slice::micro1@95 (line 33)
PcDesc(pc=0x00007d15bc5e9a00 offset=360 bits=1):
   test_slice::micro1@13 (line 21)  reexecute=true
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: 0
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
   Expression stack
    - @0: 0
    - @1: stack[8]
PcDesc(pc=0x00007d15bc5e9a28 offset=388 bits=0):
   jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
   jdk.incubator.vector.Int256Vector::lane@94 (line 528)
   test_slice::micro1@95 (line 33)
PcDesc(pc=0x00007d15bc5e9a38 offset=398 bits=1):
   test_slice::micro1@13 (line 21)  reexecute=true
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: 0
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
   Expression stack
    - @0: 0
    - @1: stack[8]
PcDesc(pc=0x00007d15bc5e9af9 offset=459 bits=0):
   jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
   jdk.incubator.vector.Int256Vector::lane@94 (line 528)
   test_slice::micro1@95 (line 33)
PcDesc(pc=0x00007d15bc5e9b04 offset=464 bits=0):
   test_slice::micro1@7 (line 21)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
   Expression stack
    - @0: empty
    - @1: empty
    - @2: null
PcDesc(pc=0x00007d15bc5e9b20 offset=480 bits=0):
   jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
   jdk.incubator.vector.Int256Vector::lane@94 (line 528)
   test_slice::micro1@95 (line 33)
PcDesc(pc=0x00007d15bc5e9b79 offset=4d9 bits=0):
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
oop maps:ImmutableOopMapSet contains 4 OopMaps

ImmutableOopMap {rdx=Oop rbp=Oop xmm0=Oop } pc offsets: 671 
ImmutableOopMap {rbp=Oop [0]=Oop } pc offsets: 864 920 
ImmutableOopMap {} pc offsets: 1124 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
scopes:
ScopeDesc(pc=0x00007d15bc5e96ba offset=1a):
   test_slice::micro1@-1 (line 21)
ScopeDesc(pc=0x00007d15bc5e9707 offset=67):
   jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
ScopeDesc(pc=0x00007d15bc5e9707 offset=67):
   jdk.incubator.vector.Int256Vector::lane@94 (line 528)
ScopeDesc(pc=0x00007d15bc5e9707 offset=67):
   test_slice::micro1@95 (line 33)
ScopeDesc(pc=0x00007d15bc5e9748 offset=a8):
   jdk.incubator.vector.AbstractVector::convert0@322 (line 768)
ScopeDesc(pc=0x00007d15bc5e9748 offset=a8):
   jdk.incubator.vector.AbstractVector::asVectorRawTemplate@11 (line 185)
ScopeDesc(pc=0x00007d15bc5e9748 offset=a8):
   jdk.incubator.vector.Byte256Vector::asVectorRaw@2 (line 176)
ScopeDesc(pc=0x00007d15bc5e9748 offset=a8):
   jdk.incubator.vector.AbstractVector::reinterpretAsInts@4 (line 266)
ScopeDesc(pc=0x00007d15bc5e9748 offset=a8):
   jdk.incubator.vector.ByteVector::reinterpretAsInts@1 (line 51)
ScopeDesc(pc=0x00007d15bc5e9748 offset=a8):
   test_slice::micro1@26 (line 23)
ScopeDesc(pc=0x00007d15bc5e9776 offset=d6):
   jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
ScopeDesc(pc=0x00007d15bc5e9776 offset=d6):
   jdk.incubator.vector.Int256Vector::lane@94 (line 528)
ScopeDesc(pc=0x00007d15bc5e9776 offset=d6):
   test_slice::micro1@95 (line 33)
ScopeDesc(pc=0x00007d15bc5e977c offset=dc):
   jdk.incubator.vector.IntVector::rearrangeTemplate@26 (line 2430)
ScopeDesc(pc=0x00007d15bc5e977c offset=dc):
   jdk.incubator.vector.Int256Vector::rearrange@7 (line 452)
ScopeDesc(pc=0x00007d15bc5e977c offset=dc):
   jdk.incubator.vector.Int256Vector::rearrange@2 (line 43)
ScopeDesc(pc=0x00007d15bc5e977c offset=dc):
   test_slice::micro1@36 (line 25)
ScopeDesc(pc=0x00007d15bc5e97ad offset=10d):
   jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
ScopeDesc(pc=0x00007d15bc5e97ad offset=10d):
   jdk.incubator.vector.Int256Vector::lane@94 (line 528)
ScopeDesc(pc=0x00007d15bc5e97ad offset=10d):
   test_slice::micro1@95 (line 33)
ScopeDesc(pc=0x00007d15bc5e97b4 offset=114):
   test_slice::micro1@98 (line 33)
ScopeDesc(pc=0x00007d15bc5e97f1 offset=151):
   test_slice::micro1@112 (line 21)
ScopeDesc(pc=0x00007d15bc5e9829 offset=189):
   jdk.incubator.vector.AbstractVector::convert0@322 (line 768)
ScopeDesc(pc=0x00007d15bc5e9829 offset=189):
   jdk.incubator.vector.AbstractVector::asVectorRawTemplate@11 (line 185)
ScopeDesc(pc=0x00007d15bc5e9829 offset=189):
   jdk.incubator.vector.Byte256Vector::asVectorRaw@2 (line 176)
ScopeDesc(pc=0x00007d15bc5e9829 offset=189):
   jdk.incubator.vector.AbstractVector::reinterpretAsInts@4 (line 266)
ScopeDesc(pc=0x00007d15bc5e9829 offset=189):
   jdk.incubator.vector.ByteVector::reinterpretAsInts@1 (line 51)
ScopeDesc(pc=0x00007d15bc5e9829 offset=189):
   test_slice::micro1@26 (line 23)
ScopeDesc(pc=0x00007d15bc5e9853 offset=1b3):
   jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
ScopeDesc(pc=0x00007d15bc5e9853 offset=1b3):
   jdk.incubator.vector.Int256Vector::lane@94 (line 528)
ScopeDesc(pc=0x00007d15bc5e9853 offset=1b3):
   test_slice::micro1@95 (line 33)
ScopeDesc(pc=0x00007d15bc5e985a offset=1ba):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
ScopeDesc(pc=0x00007d15bc5e985a offset=1ba):
   test_slice::micro1@80 (line 32)
ScopeDesc(pc=0x00007d15bc5e9860 offset=1c0):
   jdk.incubator.vector.AbstractVector::convert0@322 (line 768)
ScopeDesc(pc=0x00007d15bc5e9860 offset=1c0):
   jdk.incubator.vector.AbstractVector::asVectorRawTemplate@11 (line 185)
ScopeDesc(pc=0x00007d15bc5e9860 offset=1c0):
   jdk.incubator.vector.Byte256Vector::asVectorRaw@2 (line 176)
ScopeDesc(pc=0x00007d15bc5e9860 offset=1c0):
   jdk.incubator.vector.AbstractVector::reinterpretAsInts@4 (line 266)
ScopeDesc(pc=0x00007d15bc5e9860 offset=1c0):
   jdk.incubator.vector.ByteVector::reinterpretAsInts@1 (line 51)
ScopeDesc(pc=0x00007d15bc5e9860 offset=1c0):
   test_slice::micro1@26 (line 23)
ScopeDesc(pc=0x00007d15bc5e9892 offset=1f2):
   jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
ScopeDesc(pc=0x00007d15bc5e9892 offset=1f2):
   jdk.incubator.vector.Int256Vector::lane@94 (line 528)
ScopeDesc(pc=0x00007d15bc5e9892 offset=1f2):
   test_slice::micro1@95 (line 33)
ScopeDesc(pc=0x00007d15bc5e9899 offset=1f9):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
ScopeDesc(pc=0x00007d15bc5e9899 offset=1f9):
   test_slice::micro1@80 (line 32)
ScopeDesc(pc=0x00007d15bc5e989f offset=1ff):
   jdk.incubator.vector.AbstractVector::convert0@322 (line 768)
ScopeDesc(pc=0x00007d15bc5e989f offset=1ff):
   jdk.incubator.vector.AbstractVector::asVectorRawTemplate@11 (line 185)
ScopeDesc(pc=0x00007d15bc5e989f offset=1ff):
   jdk.incubator.vector.Byte256Vector::asVectorRaw@2 (line 176)
ScopeDesc(pc=0x00007d15bc5e989f offset=1ff):
   jdk.incubator.vector.AbstractVector::reinterpretAsInts@4 (line 266)
ScopeDesc(pc=0x00007d15bc5e989f offset=1ff):
   jdk.incubator.vector.ByteVector::reinterpretAsInts@1 (line 51)
ScopeDesc(pc=0x00007d15bc5e989f offset=1ff):
   test_slice::micro1@26 (line 23)
ScopeDesc(pc=0x00007d15bc5e98e1 offset=241):
   jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
ScopeDesc(pc=0x00007d15bc5e98e1 offset=241):
   jdk.incubator.vector.Int256Vector::lane@94 (line 528)
ScopeDesc(pc=0x00007d15bc5e98e1 offset=241):
   test_slice::micro1@95 (line 33)
ScopeDesc(pc=0x00007d15bc5e98e8 offset=248):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
ScopeDesc(pc=0x00007d15bc5e98e8 offset=248):
   test_slice::micro1@80 (line 32)
ScopeDesc(pc=0x00007d15bc5e98ee offset=24e):
   jdk.incubator.vector.AbstractVector::convert0@322 (line 768)
ScopeDesc(pc=0x00007d15bc5e98ee offset=24e):
   jdk.incubator.vector.AbstractVector::asVectorRawTemplate@11 (line 185)
ScopeDesc(pc=0x00007d15bc5e98ee offset=24e):
   jdk.incubator.vector.Byte256Vector::asVectorRaw@2 (line 176)
ScopeDesc(pc=0x00007d15bc5e98ee offset=24e):
   jdk.incubator.vector.AbstractVector::reinterpretAsInts@4 (line 266)
ScopeDesc(pc=0x00007d15bc5e98ee offset=24e):
   jdk.incubator.vector.ByteVector::reinterpretAsInts@1 (line 51)
ScopeDesc(pc=0x00007d15bc5e98ee offset=24e):
   test_slice::micro1@26 (line 23)
ScopeDesc(pc=0x00007d15bc5e991f offset=27f):
   jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
ScopeDesc(pc=0x00007d15bc5e991f offset=27f):
   jdk.incubator.vector.Int256Vector::lane@94 (line 528)
ScopeDesc(pc=0x00007d15bc5e991f offset=27f):
   test_slice::micro1@95 (line 33)
ScopeDesc(pc=0x00007d15bc5e9926 offset=286):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
ScopeDesc(pc=0x00007d15bc5e9926 offset=286):
   test_slice::micro1@80 (line 32)
ScopeDesc(pc=0x00007d15bc5e9934 offset=294):
   jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
ScopeDesc(pc=0x00007d15bc5e9934 offset=294):
   jdk.incubator.vector.Int256Vector::lane@94 (line 528)
ScopeDesc(pc=0x00007d15bc5e9934 offset=294):
   test_slice::micro1@95 (line 33)
ScopeDesc(pc=0x00007d15bc5e993b offset=29b):
   test_slice::micro1@112 (line 21)
ScopeDesc(pc=0x00007d15bc5e993f offset=29f):
   test_slice::micro1@112 (line 21)  reexecute=true
   Locals
    - l0: reg xmm0 [80],oop
    - l1: reg rdx [4],oop
    - l2: reg rbx [6],int
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
ScopeDesc(pc=0x00007d15bc5e997c offset=2dc):
   jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
ScopeDesc(pc=0x00007d15bc5e997c offset=2dc):
   jdk.incubator.vector.Int256Vector::lane@94 (line 528)
ScopeDesc(pc=0x00007d15bc5e997c offset=2dc):
   test_slice::micro1@95 (line 33)
ScopeDesc(pc=0x00007d15bc5e997f offset=2df):
   jdk.incubator.vector.ByteVector::arrayAddress@4 (line 4118)
ScopeDesc(pc=0x00007d15bc5e997f offset=2df):
   jdk.incubator.vector.ByteVector::fromArray0Template@20 (line 3858)
ScopeDesc(pc=0x00007d15bc5e997f offset=2df):
   jdk.incubator.vector.Byte256Vector::fromArray0@3 (line 1020)
ScopeDesc(pc=0x00007d15bc5e997f offset=2df):
   jdk.incubator.vector.ByteVector::fromArray@24 (line 3043)
ScopeDesc(pc=0x00007d15bc5e997f offset=2df):
   test_slice::micro1@21 (line 22)
ScopeDesc(pc=0x00007d15bc5e9986 offset=2e6):
   jdk.incubator.vector.AbstractVector::convert0@322 (line 768)
ScopeDesc(pc=0x00007d15bc5e9986 offset=2e6):
   jdk.incubator.vector.AbstractVector::asVectorRawTemplate@11 (line 185)
ScopeDesc(pc=0x00007d15bc5e9986 offset=2e6):
   jdk.incubator.vector.Byte256Vector::asVectorRaw@2 (line 176)
ScopeDesc(pc=0x00007d15bc5e9986 offset=2e6):
   jdk.incubator.vector.AbstractVector::reinterpretAsInts@4 (line 266)
ScopeDesc(pc=0x00007d15bc5e9986 offset=2e6):
   jdk.incubator.vector.ByteVector::reinterpretAsInts@1 (line 51)
ScopeDesc(pc=0x00007d15bc5e9986 offset=2e6):
   test_slice::micro1@26 (line 23)
ScopeDesc(pc=0x00007d15bc5e99b7 offset=317):
   jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
ScopeDesc(pc=0x00007d15bc5e99b7 offset=317):
   jdk.incubator.vector.Int256Vector::lane@94 (line 528)
ScopeDesc(pc=0x00007d15bc5e99b7 offset=317):
   test_slice::micro1@95 (line 33)
ScopeDesc(pc=0x00007d15bc5e99be offset=31e):
   jdk.incubator.vector.ByteVector::intoArray@44 (line 3489)
ScopeDesc(pc=0x00007d15bc5e99be offset=31e):
   test_slice::micro1@80 (line 32)
ScopeDesc(pc=0x00007d15bc5e99f0 offset=350):
   jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
ScopeDesc(pc=0x00007d15bc5e99f0 offset=350):
   jdk.incubator.vector.Int256Vector::lane@94 (line 528)
ScopeDesc(pc=0x00007d15bc5e99f0 offset=350):
   test_slice::micro1@95 (line 33)
ScopeDesc(pc=0x00007d15bc5e9a00 offset=360):
   test_slice::micro1@13 (line 21)  reexecute=true
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: 0
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
   Expression stack
    - @0: 0
    - @1: stack[8]
ScopeDesc(pc=0x00007d15bc5e9a28 offset=388):
   jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
ScopeDesc(pc=0x00007d15bc5e9a28 offset=388):
   jdk.incubator.vector.Int256Vector::lane@94 (line 528)
ScopeDesc(pc=0x00007d15bc5e9a28 offset=388):
   test_slice::micro1@95 (line 33)
ScopeDesc(pc=0x00007d15bc5e9a38 offset=398):
   test_slice::micro1@13 (line 21)  reexecute=true
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: 0
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
   Expression stack
    - @0: 0
    - @1: stack[8]
ScopeDesc(pc=0x00007d15bc5e9af9 offset=459):
   jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
ScopeDesc(pc=0x00007d15bc5e9af9 offset=459):
   jdk.incubator.vector.Int256Vector::lane@94 (line 528)
ScopeDesc(pc=0x00007d15bc5e9af9 offset=459):
   test_slice::micro1@95 (line 33)
ScopeDesc(pc=0x00007d15bc5e9b04 offset=464):
   test_slice::micro1@7 (line 21)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
   Expression stack
    - @0: empty
    - @1: empty
    - @2: null
ScopeDesc(pc=0x00007d15bc5e9b20 offset=480):
   jdk.incubator.vector.Int256Vector::laneHelper@16 (line 535)
ScopeDesc(pc=0x00007d15bc5e9b20 offset=480):
   jdk.incubator.vector.Int256Vector::lane@94 (line 528)
ScopeDesc(pc=0x00007d15bc5e9b20 offset=480):
   test_slice::micro1@95 (line 33)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
relocations:
         @0x00007d157c691370: 0020
relocInfo@0x00007d157c691370 [type=0(none) addr=0x00007d15bc5e96a0 offset=32]
         @0x00007d157c691372: 08ad
relocInfo@0x00007d157c691372 [type=1(oop) addr=0x00007d15bc5e974d offset=173] | [oop_addr=0x00007d15bc5e974f *=0x00000000c8d74388]
         @0x00007d157c691374: 080f
relocInfo@0x00007d157c691374 [type=1(oop) addr=0x00007d15bc5e975c offset=15] | [oop_addr=0x00007d15bc5e975e *=0x00000000c8e24b28]
         @0x00007d157c691376: 4911
relocInfo@0x00007d157c691376 [type=9(section_word) addr=0x00007d15bc5e976d offset=17 format=1] | [target=0x00007d15bc5e9680]
         @0x00007d157c691378: 00ff
relocInfo@0x00007d157c691378 [type=0(none) addr=0x00007d15bc5e986c offset=255]
         @0x00007d157c69137a: 50d3
relocInfo@0x00007d157c69137a [type=10(poll) addr=0x00007d15bc5e993f offset=211]
         @0x00007d157c69137c: 589a
relocInfo@0x00007d157c69137c [type=11(poll_return) addr=0x00007d15bc5e99d9 offset=154]
         @0x00007d157c69137e: 3122
relocInfo@0x00007d157c69137e [type=6(runtime_call) addr=0x00007d15bc5e99fb offset=34 format=1] | [destination=0x00007d15bc54ebe0] UncommonTrapBlob
         @0x00007d157c691380: 8005
relocInfo@0x00007d157c691380 [type=16(post_call_nop) addr=0x00007d15bc5e9a00 offset=5]
         @0x00007d157c691382: 7c020000011b3808
relocInfo@0x00007d157c691388 [type=7(external_word) addr=0x00007d15bc5e9a08 offset=8 data={0000011b}] | [target=0x00007d157c690890]
         @0x00007d157c69138a: 310e
relocInfo@0x00007d157c69138a [type=6(runtime_call) addr=0x00007d15bc5e9a16 offset=14 format=1] | [destination=0x00007d15cfbb2a22] MacroAssembler::debug64(char*, long, long*)
         @0x00007d157c69138c: 311d
relocInfo@0x00007d157c69138c [type=6(runtime_call) addr=0x00007d15bc5e9a33 offset=29 format=1] | [destination=0x00007d15bc54ebe0] UncommonTrapBlob
         @0x00007d157c69138e: 8005
relocInfo@0x00007d157c69138e [type=16(post_call_nop) addr=0x00007d15bc5e9a38 offset=5]
         @0x00007d157c691390: 7c020000011b3808
relocInfo@0x00007d157c691396 [type=7(external_word) addr=0x00007d15bc5e9a40 offset=8 data={0000011b}] | [target=0x00007d157c690890]
         @0x00007d157c691398: 310e
relocInfo@0x00007d157c691398 [type=6(runtime_call) addr=0x00007d15bc5e9a4e offset=14 format=1] | [destination=0x00007d15cfbb2a22] MacroAssembler::debug64(char*, long, long*)
         @0x00007d157c69139a: 7c020000011c3806
relocInfo@0x00007d157c6913a0 [type=7(external_word) addr=0x00007d15bc5e9a54 offset=6 data={0000011c}] | [target=0x00007d157c690a40]
         @0x00007d157c6913a2: 310e
relocInfo@0x00007d157c6913a2 [type=6(runtime_call) addr=0x00007d15bc5e9a62 offset=14 format=1] | [destination=0x00007d15cfbb2a22] MacroAssembler::debug64(char*, long, long*)
         @0x00007d157c6913a4: 7c020000011c3806
relocInfo@0x00007d157c6913aa [type=7(external_word) addr=0x00007d15bc5e9a68 offset=6 data={0000011c}] | [target=0x00007d157c690a40]
         @0x00007d157c6913ac: 310e
relocInfo@0x00007d157c6913ac [type=6(runtime_call) addr=0x00007d15bc5e9a76 offset=14 format=1] | [destination=0x00007d15cfbb2a22] MacroAssembler::debug64(char*, long, long*)
         @0x00007d157c6913ae: 7c020000011c3806
relocInfo@0x00007d157c6913b4 [type=7(external_word) addr=0x00007d15bc5e9a7c offset=6 data={0000011c}] | [target=0x00007d157c690a40]
         @0x00007d157c6913b6: 310e
relocInfo@0x00007d157c6913b6 [type=6(runtime_call) addr=0x00007d15bc5e9a8a offset=14 format=1] | [destination=0x00007d15cfbb2a22] MacroAssembler::debug64(char*, long, long*)
         @0x00007d157c6913b8: 7c020000011c3806
relocInfo@0x00007d157c6913be [type=7(external_word) addr=0x00007d15bc5e9a90 offset=6 data={0000011c}] | [target=0x00007d157c690a40]
         @0x00007d157c6913c0: 310e
relocInfo@0x00007d157c6913c0 [type=6(runtime_call) addr=0x00007d15bc5e9a9e offset=14 format=1] | [destination=0x00007d15cfbb2a22] MacroAssembler::debug64(char*, long, long*)
         @0x00007d157c6913c2: 7c020000011c3806
relocInfo@0x00007d157c6913c8 [type=7(external_word) addr=0x00007d15bc5e9aa4 offset=6 data={0000011c}] | [target=0x00007d157c690a40]
         @0x00007d157c6913ca: 310e
relocInfo@0x00007d157c6913ca [type=6(runtime_call) addr=0x00007d15bc5e9ab2 offset=14 format=1] | [destination=0x00007d15cfbb2a22] MacroAssembler::debug64(char*, long, long*)
         @0x00007d157c6913cc: 7c020000011c3806
relocInfo@0x00007d157c6913d2 [type=7(external_word) addr=0x00007d15bc5e9ab8 offset=6 data={0000011c}] | [target=0x00007d157c690a40]
         @0x00007d157c6913d4: 310e
relocInfo@0x00007d157c6913d4 [type=6(runtime_call) addr=0x00007d15bc5e9ac6 offset=14 format=1] | [destination=0x00007d15cfbb2a22] MacroAssembler::debug64(char*, long, long*)
         @0x00007d157c6913d6: 7c020000011c3806
relocInfo@0x00007d157c6913dc [type=7(external_word) addr=0x00007d15bc5e9acc offset=6 data={0000011c}] | [target=0x00007d157c690a40]
         @0x00007d157c6913de: 310e
relocInfo@0x00007d157c6913de [type=6(runtime_call) addr=0x00007d15bc5e9ada offset=14 format=1] | [destination=0x00007d15cfbb2a22] MacroAssembler::debug64(char*, long, long*)
         @0x00007d157c6913e0: 7c020000011c3806
relocInfo@0x00007d157c6913e6 [type=7(external_word) addr=0x00007d15bc5e9ae0 offset=6 data={0000011c}] | [target=0x00007d157c690a40]
         @0x00007d157c6913e8: 310e
relocInfo@0x00007d157c6913e8 [type=6(runtime_call) addr=0x00007d15bc5e9aee offset=14 format=1] | [destination=0x00007d15cfbb2a22] MacroAssembler::debug64(char*, long, long*)
         @0x00007d157c6913ea: 3111
relocInfo@0x00007d157c6913ea [type=6(runtime_call) addr=0x00007d15bc5e9aff offset=17 format=1] | [destination=0x00007d15bc54ebe0] UncommonTrapBlob
         @0x00007d157c6913ec: 8005
relocInfo@0x00007d157c6913ec [type=16(post_call_nop) addr=0x00007d15bc5e9b04 offset=5]
         @0x00007d157c6913ee: 7c020000011b3808
relocInfo@0x00007d157c6913f4 [type=7(external_word) addr=0x00007d15bc5e9b0c offset=8 data={0000011b}] | [target=0x00007d157c690890]
         @0x00007d157c6913f6: 310e
relocInfo@0x00007d157c6913f6 [type=6(runtime_call) addr=0x00007d15bc5e9b1a offset=14 format=1] | [destination=0x00007d15cfbb2a22] MacroAssembler::debug64(char*, long, long*)
         @0x00007d157c6913f8: 79474006
relocInfo@0x00007d157c6913fa [type=8(internal_word) addr=0x00007d15bc5e9b20 offset=6 data=327] | [target=0x00007d15bc5e99d9]
         @0x00007d157c6913fc: 3111
relocInfo@0x00007d157c6913fc [type=6(runtime_call) addr=0x00007d15bc5e9b31 offset=17 format=1] | [destination=0x00007d15bc5bbc60] SafepointBlob
         @0x00007d157c6913fe: 3105
relocInfo@0x00007d157c6913fe [type=6(runtime_call) addr=0x00007d15bc5e9b36 offset=5 format=1] | [destination=0x00007d15bc5a13a0] Stub::Stub Generator method_entry_barrier_stub
         @0x00007d157c691400: 000a
relocInfo@0x00007d157c691400 [type=0(none) addr=0x00007d15bc5e9b40 offset=10]
         @0x00007d157c691402: 3100
relocInfo@0x00007d157c691402 [type=6(runtime_call) addr=0x00007d15bc5e9b40 offset=0 format=1] | [destination=0x00007d15bc54e8e0] ExceptionBlob
         @0x00007d157c691404: 310f
relocInfo@0x00007d157c691404 [type=6(runtime_call) addr=0x00007d15bc5e9b4f offset=15 format=1] | [destination=0x00007d15bc5bbf80] DeoptimizationBlob
         @0x00007d157c691406: 0000
relocInfo@0x00007d157c691406 [type=0(none) addr=0x00007d15bc5e9b4f offset=0]
         @0x00007d157c691408: 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Dependencies:
Dependency of type evol_method
  method  = *{method} {0x00007d1594401b28} 'micro1' '([B[B)V' in 'test_slice'
Dependency of type evol_method
  method  = *{method} {0x00007d1594077670} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[BI)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector'
Dependency of type evol_method
  method  = {method} {0x00007d159407b9e0} 'reinterpretAsInts' '()Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/ByteVector'
Dependency of type evol_method
  method  = {method} {0x00007d1594048628} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;I)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/IntVector'
Dependency of type evol_method
  method  = {method} {0x00007d159404b140} 'or' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/IntVector'
Dependency of type evol_method
  method  = {method} {0x00007d15940525d8} 'reinterpretAsBytes' '()Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/IntVector'
Dependency of type evol_method
  method  = {method} {0x00007d15940784f8} 'intoArray' '([BI)V' in 'jdk/incubator/vector/ByteVector'
Dependency of type evol_method
  method  = {method} {0x00007d15940d52d0} 'loopBound' '(I)I' in 'jdk/incubator/vector/AbstractSpecies'
Dependency of type evol_method
  method  = *{method} {0x00007d15941cf5d0} 'roundDown' '(II)I' in 'jdk/incubator/vector/VectorIntrinsics'
Dependency of type evol_method
  method  = *{method} {0x00007d15941cf158} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
Dependency of type evol_method
  method  = {method} {0x00007d15940cea60} 'dummyVector' '()Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector$ByteSpecies'
Dependency of type evol_method
  method  = {method} {0x00007d15940d46b0} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
Dependency of type evol_method
  method  = *{method} {0x000000004e27f4e8} 'checkIndex' '(II)I' in 'java/util/Objects'
Dependency of type evol_method
  method  = {method} {0x00007d15940d6070} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
Dependency of type evol_method
  method  = {method} {0x00007d1594119520} 'fromArray0' '([BI)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/Byte256Vector'
Dependency of type evol_method
  method  = {method} {0x00007d1594079238} 'fromArray0Template' '([BI)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector'
Dependency of type evol_method
  method  = {method} {0x00007d15940ce000} 'vectorType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/ByteVector$ByteSpecies'
Dependency of type evol_method
  method  = {method} {0x00007d15940cde48} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/ByteVector$ByteSpecies'
Dependency of type evol_method
  method  = {method} {0x00007d15940d4788} 'laneCount' '()I' in 'jdk/incubator/vector/AbstractSpecies'
Dependency of type evol_method
  method  = *{method} {0x00007d159407ac30} 'arrayAddress' '([BI)J' in 'jdk/incubator/vector/ByteVector'
Dependency of type evol_method
  method  = *{method} {0x000000004e26b820} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder'
Dependency of type evol_method
  method  = {method} {0x00007d15941151c8} 'vspecies' '()Ljdk/incubator/vector/ByteVector$ByteSpecies;' in 'jdk/incubator/vector/Byte256Vector'
Dependency of type evol_method
  method  = *{method} {0x000000004e272eb0} 'constant_L' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$Holder'
Dependency of type evol_method
  method  = {method} {0x00007d1594060ff0} 'reinterpretAsInts' '()Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/AbstractVector'
Dependency of type evol_method
  method  = {method} {0x00007d15941160e8} 'asVectorRaw' '(Ljdk/incubator/vector/LaneType;)Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/Byte256Vector'
Dependency of type evol_method
  method  = {method} {0x00007d15940602b8} 'asVectorRawTemplate' '(Ljdk/incubator/vector/LaneType;)Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractVector'
Dependency of type evol_method
  method  = {method} {0x00007d15940d5790} 'withLanes' '(Ljdk/incubator/vector/LaneType;)Ljdk/incubator/vector/AbstractSpecies;' in 'jdk/incubator/vector/AbstractSpecies'
Dependency of type evol_method
  method  = {method} {0x00007d1594063060} 'convert0' '(CLjdk/incubator/vector/AbstractSpecies;)Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractVector'
Dependency of type evol_method
  method  = {method} {0x00007d159411ca78} 'vspecies' '()Ljdk/incubator/vector/AbstractSpecies;' in 'jdk/incubator/vector/Byte256Vector'
Dependency of type evol_method
  method  = *{method} {0x00007d15940d7b78} 'findSpecies' '(Ljdk/incubator/vector/LaneType;Ljdk/incubator/vector/VectorShape;)Ljdk/incubator/vector/AbstractSpecies;' in 'jdk/incubator/vector/AbstractSpecies'
Dependency of type evol_method
  method  = {method} {0x00007d1594153f80} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/IntVector$IntSpecies'
Dependency of type evol_method
  method  = {method} {0x00007d15941152a0} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/Byte256Vector'
Dependency of type evol_method
  method  = {method} {0x00007d1594115528} 'length' '()I' in 'jdk/incubator/vector/Byte256Vector'
Dependency of type evol_method
  method  = {method} {0x00007d1594156010} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/IntVector$IntSpecies'
Dependency of type evol_method
  method  = {method} {0x00007d1594154b98} 'dummyVector' '()Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/IntVector$IntSpecies'
Dependency of type evol_method
  method  = {method} {0x00007d1594184fe0} 'rearrange' '(Ljdk/incubator/vector/VectorShuffle;)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/Int256Vector'
Dependency of type evol_method
  method  = {method} {0x00007d1594183250} 'rearrange' '(Ljdk/incubator/vector/VectorShuffle;)Ljdk/incubator/vector/Int256Vector;' in 'jdk/incubator/vector/Int256Vector'
Dependency of type evol_method
  method  = {method} {0x00007d159404dbe8} 'rearrangeTemplate' '(Ljava/lang/Class;Ljdk/incubator/vector/VectorShuffle;)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/IntVector'
Dependency of type evol_method
  method  = *{method} {0x000000004e27f7f8} 'requireNonNull' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/Objects'
Dependency of type evol_method
  method  = {method} {0x00007d15941801e8} 'length' '()I' in 'jdk/incubator/vector/Int256Vector'
Dependency of type evol_method
  method  = {method} {0x00007d15941848c0} 'withLane' '(II)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/Int256Vector'
Dependency of type evol_method
  method  = {method} {0x00007d1594183d40} 'withLane' '(II)Ljdk/incubator/vector/Int256Vector;' in 'jdk/incubator/vector/Int256Vector'
Dependency of type evol_method
  method  = {method} {0x00007d1594183e60} 'withLaneHelper' '(II)Ljdk/incubator/vector/Int256Vector;' in 'jdk/incubator/vector/Int256Vector'
Dependency of type evol_method
  method  = *{method} {0x00007d1594044138} 'opKind' '(Ljdk/incubator/vector/VectorOperators$Operator;I)Z' in 'jdk/incubator/vector/IntVector'
Dependency of type evol_method
  method  = *{method} {0x00007d15940c93e8} 'opKind' '(Ljdk/incubator/vector/VectorOperators$Operator;I)Z' in 'jdk/incubator/vector/VectorOperators'
Dependency of type evol_method
  method  = {method} {0x00007d15941bba38} 'opKind' '(I)Z' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
Dependency of type evol_method
  method  = {method} {0x00007d1594185e50} 'lanewiseShift' '(Ljdk/incubator/vector/VectorOperators$Binary;I)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/Int256Vector'
Dependency of type evol_method
  method  = {method} {0x00007d1594181bc0} 'lanewiseShift' '(Ljdk/incubator/vector/VectorOperators$Binary;I)Ljdk/incubator/vector/Int256Vector;' in 'jdk/incubator/vector/Int256Vector'
Dependency of type evol_method
  method  = {method} {0x00007d1594048bf8} 'lanewiseShiftTemplate' '(Ljdk/incubator/vector/VectorOperators$Binary;I)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/IntVector'
Dependency of type evol_method
  method  = *{method} {0x00007d1594043f60} 'opCode' '(Ljdk/incubator/vector/VectorOperators$Operator;)I' in 'jdk/incubator/vector/IntVector'
Dependency of type evol_method
  method  = {method} {0x00007d15940c6710} 'find' '(Ljdk/incubator/vector/VectorOperators$Operator;ILjava/util/function/IntFunction;)Ljava/lang/Object;' in 'jdk/incubator/vector/VectorOperators$ImplCache'
Dependency of type evol_method
  method  = *{method} {0x00007d15940c9300} 'opCode' '(Ljdk/incubator/vector/VectorOperators$Operator;II)I' in 'jdk/incubator/vector/VectorOperators'
Dependency of type evol_method
  method  = {method} {0x00007d15941bb570} 'opCode' '(II)I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
Dependency of type evol_method
  method  = {method} {0x00007d15941bb660} 'opCodeRaw' '()I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
Dependency of type evol_method
  method  = {method} {0x00007d1594186020} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/Int256Vector'
Dependency of type evol_method
  method  = {method} {0x00007d15941819b8} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/Int256Vector;' in 'jdk/incubator/vector/Int256Vector'
Dependency of type evol_method
  method  = {method} {0x00007d1594047fc0} 'lanewiseTemplate' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/IntVector'
Dependency of type evol_method
  method  = {method} {0x00007d159405fca0} 'check' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractVector'
Dependency of type evol_method
  method  = {method} {0x00007d159405fdd8} 'sameSpecies' '(Ljdk/incubator/vector/Vector;)Z' in 'jdk/incubator/vector/AbstractVector'
Dependency of type evol_method
  method  = {method} {0x00007d15941871e8} 'asByteVectorRaw' '()Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/Int256Vector'
Dependency of type evol_method
  method  = {method} {0x00007d1594180cc0} 'asByteVectorRaw' '()Ljdk/incubator/vector/Byte256Vector;' in 'jdk/incubator/vector/Int256Vector'
Dependency of type evol_method
  method  = {method} {0x00007d1594060398} 'asByteVectorRawTemplate' '()Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/AbstractVector'
Dependency of type evol_method
  method  = {method} {0x00007d15941872c0} 'vspecies' '()Ljdk/incubator/vector/AbstractSpecies;' in 'jdk/incubator/vector/Int256Vector'
Dependency of type evol_method
  method  = {method} {0x00007d159417fe88} 'vspecies' '()Ljdk/incubator/vector/IntVector$IntSpecies;' in 'jdk/incubator/vector/Int256Vector'
Dependency of type evol_method
  method  = {method} {0x00007d159417ff60} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/Int256Vector'
Dependency of type evol_method
  method  = {method} {0x00007d15940cfed8} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/ByteVector$ByteSpecies'
Dependency of type evol_method
  method  = {method} {0x00007d1594183ab8} 'lane' '(I)I' in 'jdk/incubator/vector/Int256Vector'
Dependency of type evol_method
  method  = {method} {0x00007d1594183bc8} 'laneHelper' '(I)I' in 'jdk/incubator/vector/Int256Vector'
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.ByteVector$ByteSpecies
  method  = {method} {0x00007d15940d52d0} 'loopBound' '(I)I' in 'jdk/incubator/vector/AbstractSpecies'
  class   = jdk.incubator.vector.VectorSpecies
  method  = *{method} {0x00007d15940d2b28} 'loopBound' '(I)I' in 'jdk/incubator/vector/VectorSpecies'
   [nmethod<=klass]jdk.incubator.vector.ByteVector$ByteSpecies
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.ByteVector$ByteSpecies
  method  = {method} {0x00007d15940d46b0} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
  class   = jdk.incubator.vector.VectorSpecies
  method  = *{method} {0x00007d15940d2930} 'length' '()I' in 'jdk/incubator/vector/VectorSpecies'
   [nmethod<=klass]jdk.incubator.vector.ByteVector$ByteSpecies
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.Byte256Vector
  method  = {method} {0x00007d159407b9e0} 'reinterpretAsInts' '()Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/ByteVector'
  class   = jdk.incubator.vector.ByteVector
  method  = {method} {0x00007d159407b9e0} 'reinterpretAsInts' '()Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/ByteVector'
   [nmethod<=klass]jdk.incubator.vector.Byte256Vector
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.IntVector$IntSpecies
  method  = {method} {0x00007d15940d46b0} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
  class   = jdk.incubator.vector.VectorSpecies
  method  = *{method} {0x00007d15940d2930} 'length' '()I' in 'jdk/incubator/vector/VectorSpecies'
   [nmethod<=klass]jdk.incubator.vector.IntVector$IntSpecies
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.VectorOperators$BinaryImpl
  method  = {method} {0x00007d15941bba38} 'opKind' '(I)Z' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  class   = jdk.incubator.vector.VectorOperators$OperatorImpl
  method  = {method} {0x00007d15941bba38} 'opKind' '(I)Z' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
   [nmethod<=klass]jdk.incubator.vector.VectorOperators$BinaryImpl
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.VectorOperators$BinaryImpl
  method  = {method} {0x00007d15941bb570} 'opCode' '(II)I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  class   = jdk.incubator.vector.VectorOperators$OperatorImpl
  method  = {method} {0x00007d15941bb570} 'opCode' '(II)I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
   [nmethod<=klass]jdk.incubator.vector.VectorOperators$BinaryImpl
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.VectorOperators$BinaryImpl
  method  = {method} {0x00007d15941bb660} 'opCodeRaw' '()I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  class   = jdk.incubator.vector.VectorOperators$OperatorImpl
  method  = {method} {0x00007d15941bb660} 'opCodeRaw' '()I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
   [nmethod<=klass]jdk.incubator.vector.VectorOperators$BinaryImpl
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.VectorOperators$ImplCache
  method  = {method} {0x00007d15940c6710} 'find' '(Ljdk/incubator/vector/VectorOperators$Operator;ILjava/util/function/IntFunction;)Ljava/lang/Object;' in 'jdk/incubator/vector/VectorOperators$ImplCache'
  class   = jdk.incubator.vector.VectorOperators$ImplCache
  method  = {method} {0x00007d15940c6710} 'find' '(Ljdk/incubator/vector/VectorOperators$Operator;ILjava/util/function/IntFunction;)Ljava/lang/Object;' in 'jdk/incubator/vector/VectorOperators$ImplCache'
   [nmethod<=klass]jdk.incubator.vector.VectorOperators$ImplCache
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ExceptionHandlerTable (size = 0 bytes)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ImplicitExceptionTable (size = 2 entries, 20 bytes):
{
   < 0x00007d15bc5e96ba, 0x00007d15bc5e9af4 > < 0x00007d15bc5e9707, 0x00007d15bc5e99e4 > 
}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded oops:
#0: 0x0000000000000000 nullptr-oop
#1: 0x00000000c8f114a8 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x00000000c8f114a8}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded metadata:
# 0: 0x0000000000000000 nullptr-oop
# 1: 0x00007d1594401b28 {method} {0x00007d1594401b28} 'micro1' '([B[B)V' in 'test_slice'
# 2: 0x00007d1594183ab8 {method} {0x00007d1594183ab8} 'lane' '(I)I' in 'jdk/incubator/vector/Int256Vector'
# 3: 0x00007d1594183bc8 {method} {0x00007d1594183bc8} 'laneHelper' '(I)I' in 'jdk/incubator/vector/Int256Vector'
# 4: 0x00007d159407b9e0 {method} {0x00007d159407b9e0} 'reinterpretAsInts' '()Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/ByteVector'
# 5: 0x00007d1594060ff0 {method} {0x00007d1594060ff0} 'reinterpretAsInts' '()Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/AbstractVector'
# 6: 0x00007d15941160e8 {method} {0x00007d15941160e8} 'asVectorRaw' '(Ljdk/incubator/vector/LaneType;)Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/Byte256Vector'
# 7: 0x00007d15940602b8 {method} {0x00007d15940602b8} 'asVectorRawTemplate' '(Ljdk/incubator/vector/LaneType;)Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractVector'
# 8: 0x00007d1594063060 {method} {0x00007d1594063060} 'convert0' '(CLjdk/incubator/vector/AbstractSpecies;)Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractVector'
# 9: 0x00007d1594184fe0 {method} {0x00007d1594184fe0} 'rearrange' '(Ljdk/incubator/vector/VectorShuffle;)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/Int256Vector'
#10: 0x00007d1594183250 {method} {0x00007d1594183250} 'rearrange' '(Ljdk/incubator/vector/VectorShuffle;)Ljdk/incubator/vector/Int256Vector;' in 'jdk/incubator/vector/Int256Vector'
#11: 0x00007d159404dbe8 {method} {0x00007d159404dbe8} 'rearrangeTemplate' '(Ljava/lang/Class;Ljdk/incubator/vector/VectorShuffle;)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/IntVector'
#12: 0x00007d15940784f8 {method} {0x00007d15940784f8} 'intoArray' '([BI)V' in 'jdk/incubator/vector/ByteVector'
#13: 0x00007d1594077670 {method} {0x00007d1594077670} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[BI)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector'
#14: 0x00007d1594119520 {method} {0x00007d1594119520} 'fromArray0' '([BI)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/Byte256Vector'
#15: 0x00007d1594079238 {method} {0x00007d1594079238} 'fromArray0Template' '([BI)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector'
#16: 0x00007d159407ac30 {method} {0x00007d159407ac30} 'arrayAddress' '([BI)J' in 'jdk/incubator/vector/ByteVector'
#17: 0x00007d1594048628 {method} {0x00007d1594048628} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;I)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/IntVector'
#18: 0x00007d159404b140 {method} {0x00007d159404b140} 'or' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/IntVector'
#19: 0x00007d15940525d8 {method} {0x00007d15940525d8} 'reinterpretAsBytes' '()Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/IntVector'
#20: 0x00007d15940d52d0 {method} {0x00007d15940d52d0} 'loopBound' '(I)I' in 'jdk/incubator/vector/AbstractSpecies'
#21: 0x00007d15941cf5d0 {method} {0x00007d15941cf5d0} 'roundDown' '(II)I' in 'jdk/incubator/vector/VectorIntrinsics'
#22: 0x00007d15941cf158 {method} {0x00007d15941cf158} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
#23: 0x00007d15940cea60 {method} {0x00007d15940cea60} 'dummyVector' '()Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector$ByteSpecies'
#24: 0x00007d15940d46b0 {method} {0x00007d15940d46b0} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
#25: 0x000000004e27f4e8 {method} {0x000000004e27f4e8} 'checkIndex' '(II)I' in 'java/util/Objects'
#26: 0x00007d15940d6070 {method} {0x00007d15940d6070} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
#27: 0x00007d15940ce000 {method} {0x00007d15940ce000} 'vectorType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/ByteVector$ByteSpecies'
#28: 0x00007d15940cde48 {method} {0x00007d15940cde48} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/ByteVector$ByteSpecies'
#29: 0x00007d15940d4788 {method} {0x00007d15940d4788} 'laneCount' '()I' in 'jdk/incubator/vector/AbstractSpecies'
#30: 0x000000004e26b820 {method} {0x000000004e26b820} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder'
#31: 0x00007d15941151c8 {method} {0x00007d15941151c8} 'vspecies' '()Ljdk/incubator/vector/ByteVector$ByteSpecies;' in 'jdk/incubator/vector/Byte256Vector'
#32: 0x000000004e272eb0 {method} {0x000000004e272eb0} 'constant_L' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$Holder'
#33: 0x00007d15940d5790 {method} {0x00007d15940d5790} 'withLanes' '(Ljdk/incubator/vector/LaneType;)Ljdk/incubator/vector/AbstractSpecies;' in 'jdk/incubator/vector/AbstractSpecies'
#34: 0x00007d159411ca78 {method} {0x00007d159411ca78} 'vspecies' '()Ljdk/incubator/vector/AbstractSpecies;' in 'jdk/incubator/vector/Byte256Vector'
#35: 0x00007d15940d7b78 {method} {0x00007d15940d7b78} 'findSpecies' '(Ljdk/incubator/vector/LaneType;Ljdk/incubator/vector/VectorShape;)Ljdk/incubator/vector/AbstractSpecies;' in 'jdk/incubator/vector/AbstractSpecies'
#36: 0x00007d1594153f80 {method} {0x00007d1594153f80} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/IntVector$IntSpecies'
#37: 0x00007d15941152a0 {method} {0x00007d15941152a0} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/Byte256Vector'
#38: 0x00007d1594115528 {method} {0x00007d1594115528} 'length' '()I' in 'jdk/incubator/vector/Byte256Vector'
#39: 0x00007d1594156010 {method} {0x00007d1594156010} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/IntVector$IntSpecies'
#40: 0x00007d1594154b98 {method} {0x00007d1594154b98} 'dummyVector' '()Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/IntVector$IntSpecies'
#41: 0x000000004e27f7f8 {method} {0x000000004e27f7f8} 'requireNonNull' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/Objects'
#42: 0x00007d15941801e8 {method} {0x00007d15941801e8} 'length' '()I' in 'jdk/incubator/vector/Int256Vector'
#43: 0x00007d15941848c0 {method} {0x00007d15941848c0} 'withLane' '(II)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/Int256Vector'
#44: 0x00007d1594183d40 {method} {0x00007d1594183d40} 'withLane' '(II)Ljdk/incubator/vector/Int256Vector;' in 'jdk/incubator/vector/Int256Vector'
#45: 0x00007d1594183e60 {method} {0x00007d1594183e60} 'withLaneHelper' '(II)Ljdk/incubator/vector/Int256Vector;' in 'jdk/incubator/vector/Int256Vector'
#46: 0x00007d1594044138 {method} {0x00007d1594044138} 'opKind' '(Ljdk/incubator/vector/VectorOperators$Operator;I)Z' in 'jdk/incubator/vector/IntVector'
#47: 0x00007d15940c93e8 {method} {0x00007d15940c93e8} 'opKind' '(Ljdk/incubator/vector/VectorOperators$Operator;I)Z' in 'jdk/incubator/vector/VectorOperators'
#48: 0x00007d15941bba38 {method} {0x00007d15941bba38} 'opKind' '(I)Z' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
#49: 0x00007d1594185e50 {method} {0x00007d1594185e50} 'lanewiseShift' '(Ljdk/incubator/vector/VectorOperators$Binary;I)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/Int256Vector'
#50: 0x00007d1594181bc0 {method} {0x00007d1594181bc0} 'lanewiseShift' '(Ljdk/incubator/vector/VectorOperators$Binary;I)Ljdk/incubator/vector/Int256Vector;' in 'jdk/incubator/vector/Int256Vector'
#51: 0x00007d1594048bf8 {method} {0x00007d1594048bf8} 'lanewiseShiftTemplate' '(Ljdk/incubator/vector/VectorOperators$Binary;I)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/IntVector'
#52: 0x00007d1594043f60 {method} {0x00007d1594043f60} 'opCode' '(Ljdk/incubator/vector/VectorOperators$Operator;)I' in 'jdk/incubator/vector/IntVector'
#53: 0x00007d15940c6710 {method} {0x00007d15940c6710} 'find' '(Ljdk/incubator/vector/VectorOperators$Operator;ILjava/util/function/IntFunction;)Ljava/lang/Object;' in 'jdk/incubator/vector/VectorOperators$ImplCache'
#54: 0x00007d15940c9300 {method} {0x00007d15940c9300} 'opCode' '(Ljdk/incubator/vector/VectorOperators$Operator;II)I' in 'jdk/incubator/vector/VectorOperators'
#55: 0x00007d15941bb570 {method} {0x00007d15941bb570} 'opCode' '(II)I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
#56: 0x00007d15941bb660 {method} {0x00007d15941bb660} 'opCodeRaw' '()I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
#57: 0x00007d1594186020 {method} {0x00007d1594186020} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/Int256Vector'
#58: 0x00007d15941819b8 {method} {0x00007d15941819b8} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/Int256Vector;' in 'jdk/incubator/vector/Int256Vector'
#59: 0x00007d1594047fc0 {method} {0x00007d1594047fc0} 'lanewiseTemplate' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/IntVector;' in 'jdk/incubator/vector/IntVector'
#60: 0x00007d159405fca0 {method} {0x00007d159405fca0} 'check' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractVector'
#61: 0x00007d159405fdd8 {method} {0x00007d159405fdd8} 'sameSpecies' '(Ljdk/incubator/vector/Vector;)Z' in 'jdk/incubator/vector/AbstractVector'
#62: 0x00007d15941871e8 {method} {0x00007d15941871e8} 'asByteVectorRaw' '()Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/Int256Vector'
#63: 0x00007d1594180cc0 {method} {0x00007d1594180cc0} 'asByteVectorRaw' '()Ljdk/incubator/vector/Byte256Vector;' in 'jdk/incubator/vector/Int256Vector'
#64: 0x00007d1594060398 {method} {0x00007d1594060398} 'asByteVectorRawTemplate' '()Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/AbstractVector'
#65: 0x00007d15941872c0 {method} {0x00007d15941872c0} 'vspecies' '()Ljdk/incubator/vector/AbstractSpecies;' in 'jdk/incubator/vector/Int256Vector'
#66: 0x00007d159417fe88 {method} {0x00007d159417fe88} 'vspecies' '()Ljdk/incubator/vector/IntVector$IntSpecies;' in 'jdk/incubator/vector/Int256Vector'
#67: 0x00007d159417ff60 {method} {0x00007d159417ff60} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/Int256Vector'
#68: 0x00007d15940cfed8 {method} {0x00007d15940cfed8} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/ByteVector$ByteSpecies'
#69: 0x000000004f004dd8 'jdk/incubator/vector/ByteVector$ByteSpecies'
#70: 0x00007d15940d3d98 'jdk/incubator/vector/VectorSpecies'
#71: 0x00007d15940d2b28 {method} {0x00007d15940d2b28} 'loopBound' '(I)I' in 'jdk/incubator/vector/VectorSpecies'
#72: 0x00007d15940d2930 {method} {0x00007d15940d2930} 'length' '()I' in 'jdk/incubator/vector/VectorSpecies'
#73: 0x000000004f008550 'jdk/incubator/vector/Byte256Vector'
#74: 0x00007d15940869b0 'jdk/incubator/vector/ByteVector'
#75: 0x000000004f00b298 'jdk/incubator/vector/IntVector$IntSpecies'
#76: 0x000000004f010490 'jdk/incubator/vector/VectorOperators$BinaryImpl'
#77: 0x00007d15941bbd20 'jdk/incubator/vector/VectorOperators$OperatorImpl'
#78: 0x000000004f004988 'jdk/incubator/vector/VectorOperators$ImplCache'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
[micro1 time] 53 ms  [res] -1174962175
[micro2 time] 101 ms  [res] -1174962175
------------------------------------------------------------------------
static test_slice::micro1([B[B)V
  interpreter_invocation_count:         640
  invocation_counter:                   640
  backedge_counter:                   20480
  decompile_count:                        0
  mdo size: 944 bytes

   0 iconst_0
   1 istore_2
   2 iload_2
   3 getstatic 9 <test_slice.BYTE_SPECIES:Ljdk/incubator/vector/VectorSpecies;> 
   6 aload_1
   7 arraylength
   8 invokeinterface 15 <jdk/incubator/vector/VectorSpecies.loopBound(I)I> 
  0    bci: 8    VirtualCallData    count(0) entries(1)
                                    'jdk/incubator/vector/ByteVector$ByteSpecies'(15840 1.00)
  13 if_icmpge 115
  48   bci: 13   BranchData         taken(480) displacement(600)
                                    not taken(15360)
  16 getstatic 9 <test_slice.BYTE_SPECIES:Ljdk/incubator/vector/VectorSpecies;> 
  19 aload_1
  20 iload_2
  21 invokestatic 21 <jdk/incubator/vector/ByteVector.fromArray(Ljdk/incubator/vector/VectorSpecies;[BI)Ljdk/incubator/vector/ByteVector;> 
  80   bci: 21   CounterData        count(15360)
  24 astore_3
  25 aload_3
  26 invokevirtual 27 <jdk/incubator/vector/ByteVector.reinterpretAsInts()Ljdk/incubator/vector/IntVector;> 
  96   bci: 26   VirtualCallData    count(0) entries(1)
                                    'jdk/incubator/vector/Byte256Vector'(15360 1.00)
  29 astore #4
  31 aload #4
  33 getstatic 31 <test_slice.FOUR_BYTES_FORWARD_SHIFT:Ljdk/incubator/vector/VectorShuffle;> 
  36 invokevirtual 35 <jdk/incubator/vector/IntVector.rearrange(Ljdk/incubator/vector/VectorShuffle;)Ljdk/incubator/vector/IntVector;> 
  144  bci: 36   VirtualCallData    count(0) entries(1)
                                    'jdk/incubator/vector/Int256Vector'(15360 1.00)
  39 iconst_0
  40 getstatic 41 <test_slice.previousFourUtf8Bytes:I> 
  43 invokevirtual 45 <jdk/incubator/vector/IntVector.withLane(II)Ljdk/incubator/vector/IntVector;> 
  192  bci: 43   VirtualCallData    count(0) entries(1)
                                    'jdk/incubator/vector/Int256Vector'(15360 1.00)
  46 astore #5
  48 aload #4
  50 getstatic 49 <jdk/incubator/vector/VectorOperators.LSHL:Ljdk/incubator/vector/VectorOperators$Binary;> 
  53 bipush 8
  55 invokevirtual 55 <jdk/incubator/vector/IntVector.lanewise(Ljdk/incubator/vector/VectorOperators$Binary;I)Ljdk/incubator/vector/IntVector;> 
  240  bci: 55   VirtualCallData    count(15360) entries(0)
  58 aload #5
  60 getstatic 59 <jdk/incubator/vector/VectorOperators.LSHR:Ljdk/incubator/vector/VectorOperators$Binary;> 
  63 bipush 24
  65 invokevirtual 55 <jdk/incubator/vector/IntVector.lanewise(Ljdk/incubator/vector/VectorOperators$Binary;I)Ljdk/incubator/vector/IntVector;> 
  288  bci: 65   VirtualCallData    count(15360) entries(0)
  68 invokevirtual 62 <jdk/incubator/vector/IntVector.or(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/IntVector;> 
  336  bci: 68   VirtualCallData    count(15360) entries(0)
  71 invokevirtual 66 <jdk/incubator/vector/IntVector.reinterpretAsBytes()Ljdk/incubator/vector/ByteVector;> 
  384  bci: 71   VirtualCallData    count(15360) entries(0)
  74 astore #6
  76 aload #6
  78 fast_aload_0
  79 iload_2
  80 invokevirtual 70 <jdk/incubator/vector/ByteVector.intoArray([BI)V> 
  432  bci: 80   VirtualCallData    count(15360) entries(0)
  83 aload #4
  85 getstatic 74 <test_slice.INT_SPECIES:Ljdk/incubator/vector/VectorSpecies;> 
  88 invokeinterface 77 <jdk/incubator/vector/VectorSpecies.length()I> 
  480  bci: 88   VirtualCallData    count(0) entries(1)
                                    'jdk/incubator/vector/IntVector$IntSpecies'(15360 1.00)
  93 iconst_1
  94 isub
  95 invokevirtual 81 <jdk/incubator/vector/IntVector.lane(I)I> 
  528  bci: 95   VirtualCallData    count(0) entries(1)
                                    'jdk/incubator/vector/Int256Vector'(15360 1.00)
  98 putstatic 41 <test_slice.previousFourUtf8Bytes:I> 
 101 iload_2
 102 getstatic 9 <test_slice.BYTE_SPECIES:Ljdk/incubator/vector/VectorSpecies;> 
 105 invokeinterface 77 <jdk/incubator/vector/VectorSpecies.length()I> 
  576  bci: 105  VirtualCallData    count(0) entries(1)
                                    'jdk/incubator/vector/ByteVector$ByteSpecies'(15360 1.00)
 110 iadd
 111 istore_2
 112 goto 2
  624  bci: 112  JumpData           taken(15360) displacement(-624)
 115 return
------------------------------------------------------------------------
Total MDO size: 944 bytes
