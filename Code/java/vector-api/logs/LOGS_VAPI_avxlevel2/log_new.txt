CompileCommand: print indexvec.micro bool print = true

============================= C2-compiled nmethod ==============================
#r018 rsi:rsi   : parm 0: byte[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact *
#r016 rdx:rdx   : parm 1: byte[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact *
#r010 rcx   : parm 2: int
#r004 r8   : parm 3: int
# -- Old rsp -- Framesize: 288 --
#r591 rsp+284: in_preserve
#r590 rsp+280: return address
#r589 rsp+276: in_preserve
#r588 rsp+272: saved fp register
#r587 rsp+268: pad2, stack alignment
#r586 rsp+264: pad2, stack alignment
#r585 rsp+260: Fixed slot 1
#r584 rsp+256: Fixed slot 0
#r655 rsp+252: spill
#r654 rsp+248: spill
#r653 rsp+244: spill
#r652 rsp+240: spill
#r651 rsp+236: spill
#r650 rsp+232: spill
#r649 rsp+228: spill
#r648 rsp+224: spill
#r647 rsp+220: spill
#r646 rsp+216: spill
#r645 rsp+212: spill
#r644 rsp+208: spill
#r643 rsp+204: spill
#r642 rsp+200: spill
#r641 rsp+196: spill
#r640 rsp+192: spill
#r639 rsp+188: spill
#r638 rsp+184: spill
#r637 rsp+180: spill
#r636 rsp+176: spill
#r635 rsp+172: spill
#r634 rsp+168: spill
#r633 rsp+164: spill
#r632 rsp+160: spill
#r631 rsp+156: spill
#r630 rsp+152: spill
#r629 rsp+148: spill
#r628 rsp+144: spill
#r627 rsp+140: spill
#r626 rsp+136: spill
#r625 rsp+132: spill
#r624 rsp+128: spill
#r623 rsp+124: spill
#r622 rsp+120: spill
#r621 rsp+116: spill
#r620 rsp+112: spill
#r619 rsp+108: spill
#r618 rsp+104: spill
#r617 rsp+100: spill
#r616 rsp+96: spill
#r615 rsp+92: spill
#r614 rsp+88: spill
#r613 rsp+84: spill
#r612 rsp+80: spill
#r611 rsp+76: spill
#r610 rsp+72: spill
#r609 rsp+68: spill
#r608 rsp+64: spill
#r607 rsp+60: spill
#r606 rsp+56: spill
#r605 rsp+52: spill
#r604 rsp+48: spill
#r603 rsp+44: spill
#r602 rsp+40: spill
#r601 rsp+36: spill
#r600 rsp+32: spill
#r599 rsp+28: spill
#r598 rsp+24: spill
#r597 rsp+20: spill
#r596 rsp+16: spill
#r595 rsp+12: spill
#r594 rsp+ 8: spill
#r593 rsp+ 4: spill
#r592 rsp+ 0: spill
#
----------------------- MetaData before Compile_id = 318 ------------------------
{method}
 - this oop:          0x00007faa94701558
 - method holder:     'indexvec'
 - constants:         0x00007faa94701068 constant pool [90]/operands[5] {0x00007faa94701068} for 'indexvec' cache=0x00007faa94701810
 - access:            0xc1000009  public static 
 - name:              'micro'
 - signature:         '([B[BII)B'
 - max stack:         5
 - max locals:        6
 - size of params:    4
 - method size:       14
 - vtable index:      -2
 - i2i entry:         0x00007faadd021d40
 - adapters:          AHE@0x00007faae03aa5e0: 0xbbaa i2c: 0x00007faadd066880 c2i: 0x00007faadd066968 c2iUV: 0x00007faadd066936 c2iNCI: 0x00007faadd0669a2
 - compiled entry     0x00007faadd066968
 - code size:         61
 - code start:        0x00007faa94701510
 - code end (excl):   0x00007faa9470154d
 - method data:       0x00007faa94701a98
 - checked ex length: 0
 - linenumber start:  0x00007faa9470154d
 - localvar length:   0

------------------------ OptoAssembly for Compile_id = 318 -----------------------
#
#  byte ( byte[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact *, byte[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact *, int, int )
#
000     N1: #	out( B1 ) <- in( B83 B71 B72 B67 B50 B69 B75 B70 B82 B65 B77 B73 B76 B74 )  Freq: 1

000     B1: #	out( B48 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
000     # stack bang (696 bytes)
	pushq   rbp	# Save rbp
	subq    rsp, #272	# Create frame

        nop 	# 2 bytes pad for loops and calls
020     testl   RCX, RCX
022     jle     B48  P=0.055552 C=15895.000000

028     B2: #	out( B83 B3 ) <- in( B1 )  Freq: 0.944448
028     movl    RBX, [RDX + #12 (8-bit)]	# range
02b     NullCheck RDX

02b     B3: #	out( B71 B4 ) <- in( B2 )  Freq: 0.944447
02b     movl    R9, [RSI + #12 (8-bit)]	# range
02f     NullCheck RSI

02f     B4: #	out( B71 B5 ) <- in( B3 )  Freq: 0.944446
02f     leal    R11, [R9 + #-63]
033     testl   R11, R11
036     jl     B71  P=0.000001 C=-1.000000

03c     B5: #	out( B71 B6 ) <- in( B4 )  Freq: 0.944445
        nop 	# 4 bytes pad for loops and calls
040     cmpl    R9, #63
044     je     B71  P=0.000001 C=-1.000000

04a     B6: #	out( B71 B7 ) <- in( B5 )  Freq: 0.944444
04a     movslq  R13, R9	# i2l
04d     movslq  RAX, RCX	# i2l
050     leaq    RDI, [R13 + #-63]
054     leaq    R10, [RAX + #63]
058     andq    R10, #-64	# long
05c     movl    R10, R10	# l2i
05f     movslq  R10, R10	# i2l
062     addq    R10, #-64	# long
066     cmpq    R10, RDI	# unsigned
069     jae,u   B71  P=0.000001 C=-1.000000

06f     B7: #	out( B72 B8 ) <- in( B6 )  Freq: 0.944443
06f     cmpl    RCX, #2147483584
075     jg     B72  P=0.000001 C=-1.000000

07b     B8: #	out( B9 ) <- in( B7 )  Freq: 0.944442
07b     movdq   XMM3, RAX	# spill
080     movl    [rsp + #0], R11	# spill
084     movdl   XMM2, R8	# spill
089     movdq   XMM0, RSI	# spill
08e     addq    R13, #-64	# long
092     movdl   XMM1, RBX	# spill
096     movslq  RDI, RBX	# i2l
099     addq    RDI, #-64	# long
09d     movl    R10, #-1	# int
0a3     xorl    R8, R8	# int
0a6     movl    R11, #64	# int
0ac     cmpl    RCX, R11
0af     movl    RBP, RCX	# spill
0b1     cmovlgt RBP, R11	# min
0b5     movq    RSI, byte[int:64] (java/lang/Cloneable,java/io/Serializable)<ciTypeArray length=64 type=<ciTypeArrayKlass name=[B loaded=true ident=1370 address=0x00007faae0446c18> ident=1657 address=0x00007faa78012ef0> *	# ptr
0bf     mask_all_evexI_GT32 K5, R10 	! using RBX as TEMP
0c7     vector_store_mask XMM4, K5 	! elem size is #1 byte[s]
0d3     xorl    RBX, RBX	# int

0d5     B9: #	out( B75 B10 ) <- in( B8 B16 ) Loop( B9-B16 inner pre of N488) Freq: 1.88888
0d5     cmpl    RBX, RCX
0d7     jge     B75  P=0.000000 C=7871.000000

0dd     B10: #	out( B56 B11 ) <- in( B9 )  Freq: 1.88888
0dd     load_vector XMM5,[RSI + #16 (8-bit)]
0e7     movl    R10, RCX	# spill
0ea     subl    R10, RBX	# int
0ed     movslq  RAX, RBX	# i2l
0f0     cmpl    R10, #64
0f4     jl     B56  P=0.058824 C=7871.000000

0fa     B11: #	out( B12 ) <- in( B10 )  Freq: 1.77777
0fa     vmovdqu XMM6,XMM4	# spill
100     kmovq   K4, K5	# spill

105     B12: #	out( B54 B13 ) <- in( B11 B56 )  Freq: 1.88888
105     cmpq    RAX, RDI
108     jg     B54  P=0.058874 C=15049.000000

10e     B13: #	out( B14 ) <- in( B12 )  Freq: 1.77768
10e     vector_masked_load XMM7, [RDX + #16 + RAX], K4 	! vector masked copy

119     B14: #	out( B51 B15 ) <- in( B13 B55 )  Freq: 1.88888
        nop 	# 7 bytes pad for loops and calls
120     ktest_ge8  K4, K4
	
125     jae,u   B51  P=0.058890 C=15062.000000

12b     B15: #	out( B16 ) <- in( B14 )  Freq: 1.77765
12b     movdq   R10, XMM0	# spill
130     store_vector [R10 + #16 + RAX],XMM7
	

13b     B16: #	out( B9 B17 ) <- in( B53 B15 )  Freq: 1.88888
13b     addl    RBX, #64	# int
        nop 	# 2 bytes pad for loops and calls
140     cmpl    RBX, RBP
142     jl,s   B9	# loop end  P=0.500000 C=15011.000000

144     B17: #	out( B36 B18 ) <- in( B16 )  Freq: 0.944441
144     cmpl    RBX, RCX
146     jge     B36  P=0.000001 C=-1.000000

14c     B18: #	out( B73 B19 ) <- in( B17 )  Freq: 0.94444
14c     # castII of RBX
14c     movl    R10, RBX	# spill
14f     # castII of R10
14f     cmpl    R10, [RSP + #0 (32-bit)]	# unsigned
153     jae,u   B73  P=0.000001 C=-1.000000

159     B19: #	out( B74 B20 ) <- in( B18 )  Freq: 0.944439
159     cmpl    RBX, [RSP + #0 (32-bit)]	# unsigned
        nop 	# 4 bytes pad for loops and calls
160     jae,u   B74  P=0.000001 C=-1.000000

166     B20: #	out( B22 ) <- in( B19 )  Freq: 0.944438
166     # TLS is in R15
166     jmp,s   B22

168     B21: #	out( B36 B22 ) <- in( B24 )  Freq: 17
168     movq    R10, [R15 + #960 (32-bit)]	# ptr
16f     testl   rax, [R10]	# Safepoint: poll for GC        # indexvec::micro @ bci:54 (line 10) L[0]=XMM0 L[1]=RDX L[2]=RCX L[3]=XMM2 L[4]=RBX L[5]=_
        # OopMap {rdx=Oop rsi=Oop xmm0=Oop off=367/0x16f}
172     cmpl    RBX, RCX
174     jge     B36  P=0.055552 C=15011.000000

17a     B22: #	out( B25 ) <- in( B20 B21 ) Loop( B22-B21 ) Freq: 17
17a     movl    RBP, RCX	# spill
17c     subl    RBP, RBX	# int
17e     cmpl    RCX, RBX
180     cmovll RBP, R8	# signed, int
184     cmpl    RBP, #64000	# unsigned
18a     movl    R10, #64000	# int
190     cmovla RBP, R10	# unsigned, int
194     addl    RBP, RBX	# int
196     jmp,s   B25
        nop 	# 8 bytes pad for loops and calls

1a0     B23: #	out( B24 ) <- in( B29 ) top-of-loop Freq: 287.997
1a0     movdq   R10, XMM0	# spill
1a5     store_vector [R10 + #16 + RAX],XMM7
	

1b0     B24: #	out( B21 B25 ) <- in( B32 B23 ) top-of-loop Freq: 306.019
1b0     addl    RBX, #64	# int
1b3     cmpl    RBX, RBP
1b5     jge,s   B21	# loop end  P=0.055552 C=15011.000000

1b7     B25: #	out( B35 B26 ) <- in( B22 B24 ) Loop( B25-B24 inner main of N250 strip mined) Freq: 306.019
1b7     load_vector XMM5,[RSI + #16 (8-bit)]
1c1     movl    R10, RCX	# spill
1c4     subl    R10, RBX	# int
1c7     movslq  RAX, RBX	# i2l
1ca     cmpl    R10, #64
1ce     jl     B35  P=0.058824 C=7871.000000

1d4     B26: #	out( B27 ) <- in( B25 )  Freq: 288.018
1d4     vmovdqu XMM6,XMM4	# spill
1da     kmovq   K4, K5	# spill

1df     B27: #	out( B33 B28 ) <- in( B26 B35 )  Freq: 306.019
        nop 	# 1 bytes pad for loops and calls
1e0     cmpq    RAX, RDI
1e3     jg     B33  P=0.058874 C=15049.000000

1e9     B28: #	out( B29 ) <- in( B27 )  Freq: 288.002
1e9     vector_masked_load XMM7, [RDX + #16 + RAX], K4 	! vector masked copy

1f4     B29: #	out( B23 B30 ) <- in( B28 B34 )  Freq: 306.019
1f4     ktest_ge8  K4, K4
	
1f9     jb,us  B23  P=0.941110 C=15062.000000

1fb     B30: #	out( B63 B31 ) <- in( B29 )  Freq: 18.0214
        nop 	# 5 bytes pad for loops and calls
200     cmpq    RAX, R13
203     jle     B63  P=0.000001 C=6913.000000

209     B31: #	out( B66 B32 ) <- in( B30 )  Freq: 18.0214
209     movl    R10, R9	# spill
20c     subl    R10, RBX	# int
20f     cmpl    R10, R11
212     cmovlgt R10, R11	# min
216     cmpl    R10, R8
219     cmovllt R10, R8	# max
21d     replicateB XMM8,R10
223     vector_compared_evex K7,XMM5,XMM8,#7	!
22a     mask_opers_evex K7, K7, K4	! using K6 as TEMP
22f     ktest_ge8  K7, K7
	
234     jne,u   B66  P=0.000001 C=-1.000000

23a     B32: #	out( B24 ) <- in( B31 )  Freq: 18.0214
23a     movdq   R10, XMM0	# spill
23f     vector_masked_store [R10 + #16 + RAX], XMM7, K4 	! vector masked store
24a     jmp     B24

24f     B33: #	out( B68 B34 ) <- in( B27 )  Freq: 18.0167
24f     movdl   R10, XMM1	# spill
254     subl    R10, RBX	# int
257     cmpl    R10, R11
25a     cmovlgt R10, R11	# min
25e     cmpl    R10, R8
261     cmovllt R10, R8	# max
265     replicateB XMM7,R10
26b     vector_compared_evex K7,XMM5,XMM7,#7	!
272     mask_opers_evex K7, K7, K4	! using K6 as TEMP
        nop 	# 9 bytes pad for loops and calls
280     ktest_ge8  K7, K7
	
285     jne,u   B68  P=0.000001 C=-1.000000

28b     B34: #	out( B29 ) <- in( B33 )  Freq: 18.0167
28b     vector_masked_load XMM7, [RDX + #16 + RAX], K4 	! vector masked copy
296     jmp     B29

29b     B35: #	out( B27 ) <- in( B25 )  Freq: 18.0011
29b     movdq   R10, XMM3	# spill
2a0     subq    R10, RAX	# long
2a3     vector_mask_gen32 K4, R10 	! vector mask generator
2b7     vector_store_mask XMM6, K4 	! elem size is #1 byte[s]
2c3     jmp     B27

2c8     B36: #	out( B47 B37 ) <- in( B17 B21 )  Freq: 0.944385
2c8     cmpl    RBX, RCX
2ca     jge     B47  P=0.500000 C=-1.000000

2d0     B37: #	out( B76 B38 ) <- in( B36 )  Freq: 0.472192
2d0     # castII of RBX
2d0     cmpl    RBX, [RSP + #0 (32-bit)]	# unsigned
2d3     jae,u   B76  P=0.000001 C=-1.000000

2d9     B38: #	out( B77 B39 ) <- in( B37 )  Freq: 0.472192
2d9     movl    R10, RBX	# spill
2dc     # castII of R10
        nop 	# 4 bytes pad for loops and calls
2e0     cmpl    R10, [RSP + #0 (32-bit)]	# unsigned
2e4     jae,u   B77  P=0.000001 C=-1.000000
        nop 	# 2 bytes pad for loops and calls

2ec     B39: #	out( B75 B40 ) <- in( B38 B46 ) Loop( B39-B46 inner post of N488) Freq: 0.944382
2ec     cmpl    RBX, RCX
2ee     jge     B75  P=0.000000 C=7871.000000

2f4     B40: #	out( B62 B41 ) <- in( B39 )  Freq: 0.944382
2f4     load_vector XMM5,[RSI + #16 (8-bit)]
2fe     movl    R10, RCX	# spill
301     subl    R10, RBX	# int
304     movslq  RAX, RBX	# i2l
307     cmpl    R10, #64
30b     jl     B62  P=0.058824 C=7871.000000

311     B41: #	out( B42 ) <- in( B40 )  Freq: 0.88883
311     vmovdqu XMM6,XMM4	# spill
317     kmovq   K4, K5	# spill

31c     B42: #	out( B60 B43 ) <- in( B41 B62 )  Freq: 0.944382
        nop 	# 4 bytes pad for loops and calls
320     cmpq    RAX, RDI
323     jg     B60  P=0.058874 C=15049.000000

329     B43: #	out( B44 ) <- in( B42 )  Freq: 0.888782
329     vector_masked_load XMM7, [RDX + #16 + RAX], K4 	! vector masked copy

334     B44: #	out( B57 B45 ) <- in( B43 B61 )  Freq: 0.944382
334     ktest_ge8  K4, K4
	
339     jae,u   B57  P=0.058890 C=15062.000000

33f     B45: #	out( B46 ) <- in( B44 )  Freq: 0.888767
33f     movdq   R10, XMM0	# spill
344     store_vector [R10 + #16 + RAX],XMM7
	

34f     B46: #	out( B39 B47 ) <- in( B59 B45 )  Freq: 0.944382
34f     addl    RBX, #64	# int
352     cmpl    RBX, RCX
354     jl,s   B39	# loop end  P=0.500000 C=15011.000000

356     B47: #	out( B48 ) <- in( B46 B36 )  Freq: 0.944383
356     movdq   RSI, XMM0	# spill
35b     movdl   R8, XMM2	# spill

360     B48: #	out( B82 B49 ) <- in( B47 B1 )  Freq: 0.999935
360     movl    R11, [RSI + #12 (8-bit)]	# range
364     NullCheck RSI

364     B49: #	out( B70 B50 ) <- in( B48 )  Freq: 0.999934
364     cmpl    R8, R11	# unsigned
367     jae,u   B70  P=0.000001 C=-1.000000

36d     B50: #	out( N1 ) <- in( B49 )  Freq: 0.999933
36d     movsbl  RAX, [RSI + #16 + R8]	# byte
373     vzeroupper
	addq    rsp, 272	# Destroy frame
	popq    rbp
	cmpq    rsp, poll_offset[r15_thread] 
	ja      #safepoint_stub	# Safepoint: poll for GC

38b     ret

38c     B51: #	out( B78 B52 ) <- in( B14 )  Freq: 0.111236
38c     cmpq    RAX, R13
38f     jle     B78  P=0.000001 C=6913.000000

395     B52: #	out( B66 B53 ) <- in( B51 )  Freq: 0.111236
395     movl    R10, R9	# spill
398     subl    R10, RBX	# int
39b     cmpl    R10, R11
39e     cmovlgt R10, R11	# min
3a2     cmpl    R10, R8
3a5     cmovllt R10, R8	# max
3a9     replicateB XMM8,R10
3af     vector_compared_evex K7,XMM5,XMM8,#7	!
3b6     mask_opers_evex K7, K7, K4	! using K6 as TEMP
        nop 	# 5 bytes pad for loops and calls
3c0     ktest_ge8  K7, K7
	
3c5     jne,u   B66  P=0.000001 C=-1.000000

3cb     B53: #	out( B16 ) <- in( B52 )  Freq: 0.111236
3cb     movdq   R10, XMM0	# spill
3d0     vector_masked_store [R10 + #16 + RAX], XMM7, K4 	! vector masked store
        nop 	# 5 bytes pad for loops and calls
3e0     jmp     B16

3e5     B54: #	out( B68 B55 ) <- in( B12 )  Freq: 0.111207
3e5     movdl   R10, XMM1	# spill
3ea     subl    R10, RBX	# int
3ed     cmpl    R10, R11
3f0     cmovlgt R10, R11	# min
3f4     cmpl    R10, R8
3f7     cmovllt R10, R8	# max
3fb     replicateB XMM7,R10
401     vector_compared_evex K7,XMM5,XMM7,#7	!
408     mask_opers_evex K7, K7, K4	! using K6 as TEMP
40d     ktest_ge8  K7, K7
	
412     jne,u   B68  P=0.000001 C=-1.000000

418     B55: #	out( B14 ) <- in( B54 )  Freq: 0.111207
418     vector_masked_load XMM7, [RDX + #16 + RAX], K4 	! vector masked copy
423     jmp     B14

428     B56: #	out( B12 ) <- in( B10 )  Freq: 0.111111
428     movdq   R10, XMM3	# spill
42d     subq    R10, RAX	# long
430     vector_mask_gen32 K4, R10 	! vector mask generator
444     vector_store_mask XMM6, K4 	! elem size is #1 byte[s]
450     jmp     B12

455     B57: #	out( B79 B58 ) <- in( B44 )  Freq: 0.0556146
455     cmpq    RAX, R13
458     jle     B79  P=0.000001 C=6913.000000

45e     B58: #	out( B80 B59 ) <- in( B57 )  Freq: 0.0556145
45e     movl    R10, R9	# spill
461     subl    R10, RBX	# int
464     cmpl    R10, R11
467     cmovlgt R10, R11	# min
46b     cmpl    R10, R8
46e     cmovllt R10, R8	# max
472     replicateB XMM8,R10
478     vector_compared_evex K7,XMM5,XMM8,#7	!
47f     mask_opers_evex K7, K7, K4	! using K6 as TEMP
484     ktest_ge8  K7, K7
	
489     jne,u   B80  P=0.000001 C=-1.000000

48f     B59: #	out( B46 ) <- in( B58 )  Freq: 0.0556145
48f     movdq   R10, XMM0	# spill
494     vector_masked_store [R10 + #16 + RAX], XMM7, K4 	! vector masked store
        nop 	# 1 bytes pad for loops and calls
4a0     jmp     B46

4a5     B60: #	out( B81 B61 ) <- in( B42 )  Freq: 0.0555999
4a5     movdl   R10, XMM1	# spill
4aa     subl    R10, RBX	# int
4ad     cmpl    R10, R11
4b0     cmovlgt R10, R11	# min
4b4     cmpl    R10, R8
4b7     cmovllt R10, R8	# max
4bb     replicateB XMM7,R10
4c1     vector_compared_evex K7,XMM5,XMM7,#7	!
4c8     mask_opers_evex K7, K7, K4	! using K6 as TEMP
4cd     ktest_ge8  K7, K7
	
4d2     jne,u   B81  P=0.000001 C=-1.000000

4d8     B61: #	out( B44 ) <- in( B60 )  Freq: 0.0555998
4d8     vector_masked_load XMM7, [RDX + #16 + RAX], K4 	! vector masked copy
4e3     jmp     B44

4e8     B62: #	out( B42 ) <- in( B40 )  Freq: 0.0555519
4e8     movdq   R10, XMM3	# spill
4ed     subq    R10, RAX	# long
4f0     vector_mask_gen32 K4, R10 	! vector mask generator
504     vector_store_mask XMM6, K4 	! elem size is #1 byte[s]
510     jmp     B42

515     B63: #	out( B64 ) <- in( B30 )  Freq: 1.80214e-05
515     cmpq    RAX, R13
518     setbng R8	# signed, int

51c     B64: #	out( B65 ) <- in( B78 B63 )  Freq: 1.81327e-05
51c     vmovdqu [rsp + 64],XMM7	# spill
524     vmovdqu [rsp + 0],XMM6	# spill

52b     B65: #	out( N1 ) <- in( B79 B64 )  Freq: 1.81883e-05
52b     movl    RSI, #-187	# int
530     movdq   RBP, XMM0	# spill
535     movq    [rsp + #128], RDX	# spill
53d     movl    [rsp + #136], RCX	# spill
544     movss   [rsp + #140], XMM2	# spill
54d     movl    [rsp + #148], RBX	# spill
554     movl    [rsp + #160], R8	# spill
55c     call,static  wrapper for: uncommon_trap(reason='unstable_if' action='reinterpret' debug_id='0')
        # jdk.incubator.vector.ByteVector::intoArray @ bci:36 (line 3420) L[0]=#ScObj0 L[1]=RBP L[2]=rsp + #148 L[3]=#ScObj1 L[4]=_ STK[0]=rsp + #160
        # ScObj0 jdk/incubator/vector/Byte512Vector={ [payload :0]=rsp + #64 }
        # ScObj1 jdk/incubator/vector/Byte512Vector$Byte512Mask={ [payload :0]=rsp + #0 }
        # indexvec::micro @ bci:38 (line 13) L[0]=RBP L[1]=rsp + #128 L[2]=rsp + #136 L[3]=rsp + #140 L[4]=rsp + #148 L[5]=_
        # OopMap {rbp=Oop [128]=Oop off=1380/0x564}
564     stop	# ShouldNotReachHere

578     B66: #	out( B67 ) <- in( B52 B31 )  Freq: 1.81326e-05
578     vmovdqu [rsp + 64],XMM7	# spill
580     vmovdqu [rsp + 0],XMM6	# spill

587     B67: #	out( N1 ) <- in( B80 B66 )  Freq: 1.81883e-05
587     movl    RSI, #-83	# int
58c     vector_store_mask XMM1, K7 	! elem size is #1 byte[s]
598     movdq   RBP, XMM0	# spill
59d     movq    [rsp + #128], RDX	# spill
5a5     movl    [rsp + #136], RCX	# spill
5ac     movss   [rsp + #140], XMM2	# spill
5b5     movl    [rsp + #148], RBX	# spill
5bc     movl    [rsp + #160], RBX	# spill
5c3     movl    [rsp + #164], R9	# spill
5cb     vmovdqu [rsp + 192],XMM1	# spill
        nop 	# 1 bytes pad for loops and calls
5d4     call,static  wrapper for: uncommon_trap(reason='uninitialized' action='reinterpret' debug_id='0')
        # jdk.incubator.vector.Byte512Vector$Byte512Mask::firstTrue @ bci:11 (line 854) L[0]=_ STK[0]=#21 STK[1]=#Ptr0x00007faa7828fd30 STK[2]=#Ptr0x00007faa60094a80 STK[3]=#64 STK[4]=#ScObj0
        # ScObj0 jdk/incubator/vector/Byte512Vector$Byte512Mask={ [payload :0]=rsp + #192 }
        # jdk.incubator.vector.AbstractMask::checkIndexByLane @ bci:119 (line 295) L[0]=_ L[1]=rsp + #148 L[2]=rsp + #164 L[3]=_ L[4]=#1 L[5]=_ L[6]=#ScObj0 L[7]=_
        # ScObj0 jdk/incubator/vector/Byte512Vector$Byte512Mask={ [payload :0]=rsp + #192 }
        # jdk.incubator.vector.ByteVector::checkMaskFromIndexSize @ bci:12 (line 3926) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_
        # jdk.incubator.vector.ByteVector::intoArray @ bci:46 (line 3421) L[0]=#ScObj0 L[1]=RBP L[2]=rsp + #160 L[3]=#ScObj1 L[4]=_
        # ScObj0 jdk/incubator/vector/Byte512Vector={ [payload :0]=rsp + #64 }
        # ScObj1 jdk/incubator/vector/Byte512Vector$Byte512Mask={ [payload :0]=rsp + #0 }
        # indexvec::micro @ bci:38 (line 13) L[0]=RBP L[1]=rsp + #128 L[2]=rsp + #136 L[3]=rsp + #140 L[4]=rsp + #148 L[5]=_
        # OopMap {rbp=Oop [128]=Oop off=1500/0x5dc}
5dc     stop	# ShouldNotReachHere

5f0     B68: #	out( B69 ) <- in( B54 B33 )  Freq: 1.81279e-05
5f0     vmovdqu [rsp + 0],XMM6	# spill

5f7     B69: #	out( N1 ) <- in( B81 B68 )  Freq: 1.81835e-05
5f7     movl    RSI, #-83	# int
5fc     vector_store_mask XMM3, K7 	! elem size is #1 byte[s]
608     movdq   RBP, XMM0	# spill
60d     movl    [rsp + #72], RCX	# spill
611     movss   [rsp + #76], XMM2	# spill
617     movq    [rsp + #88], RDX	# spill
61c     movl    [rsp + #84], RBX	# spill
620     movl    [rsp + #96], RBX	# spill
624     movss   [rsp + #100], XMM1	# spill
62a     vmovdqu [rsp + 128],XMM3	# spill
        nop 	# 2 bytes pad for loops and calls
634     call,static  wrapper for: uncommon_trap(reason='uninitialized' action='reinterpret' debug_id='0')
        # jdk.incubator.vector.Byte512Vector$Byte512Mask::firstTrue @ bci:11 (line 854) L[0]=_ STK[0]=#21 STK[1]=#Ptr0x00007faa7828fd30 STK[2]=#Ptr0x00007faa60094a80 STK[3]=#64 STK[4]=#ScObj0
        # ScObj0 jdk/incubator/vector/Byte512Vector$Byte512Mask={ [payload :0]=rsp + #128 }
        # jdk.incubator.vector.AbstractMask::checkIndexByLane @ bci:119 (line 295) L[0]=_ L[1]=rsp + #84 L[2]=rsp + #100 L[3]=_ L[4]=#1 L[5]=_ L[6]=#ScObj0 L[7]=_
        # ScObj0 jdk/incubator/vector/Byte512Vector$Byte512Mask={ [payload :0]=rsp + #128 }
        # jdk.incubator.vector.ByteVector::checkMaskFromIndexSize @ bci:12 (line 3926) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_
        # jdk.incubator.vector.ByteVector::fromArray @ bci:43 (line 3011) L[0]=_ L[1]=rsp + #88 L[2]=rsp + #96 L[3]=#ScObj0 L[4]=#Ptr0x00007faa78204ed0
        # ScObj0 jdk/incubator/vector/Byte512Vector$Byte512Mask={ [payload :0]=rsp + #0 }
        # indexvec::micro @ bci:30 (line 12) L[0]=RBP L[1]=rsp + #88 L[2]=rsp + #72 L[3]=rsp + #76 L[4]=rsp + #84 L[5]=#ScObj0
        # ScObj0 jdk/incubator/vector/Byte512Vector$Byte512Mask={ [payload :0]=rsp + #0 }
        # OopMap {rbp=Oop [88]=Oop off=1596/0x63c}
63c     stop	# ShouldNotReachHere

650     B70: #	out( N1 ) <- in( B49 )  Freq: 1.01321e-06
650     movq    RBP, RSI	# spill
653     movl    [rsp + #0], R8	# spill
657     movl    RSI, #-28	# int
65c     call,static  wrapper for: uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')
        # indexvec::micro @ bci:59 (line 15) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ STK[0]=RBP STK[1]=rsp + #0
        # OopMap {rbp=Oop off=1636/0x664}
664     stop	# ShouldNotReachHere

678     B71: #	out( N1 ) <- in( B6 B3 B4 B5 )  Freq: 3.81541e-06
678     movq    RBP, RSI	# spill
67b     movq    [rsp + #0], RDX	# spill
67f     movl    [rsp + #12], R8	# spill
684     movl    [rsp + #16], RCX	# spill
688     movl    RSI, #-66	# int
        nop 	# 3 bytes pad for loops and calls
690     call,static  wrapper for: uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')
        # indexvec::micro @ bci:6 (line 10) L[0]=RBP L[1]=rsp + #0 L[2]=rsp + #16 L[3]=rsp + #12 L[4]=#0 L[5]=_ STK[0]=#0 STK[1]=rsp + #16
        # OopMap {rbp=Oop [0]=Oop off=1688/0x698}
698     stop	# ShouldNotReachHere

6ac     B72: #	out( N1 ) <- in( B7 )  Freq: 9.56984e-07
6ac     movq    RBP, RSI	# spill
6af     movq    [rsp + #0], RDX	# spill
6b3     movl    [rsp + #12], R8	# spill
6b8     movl    [rsp + #16], RCX	# spill
6bc     movl    RSI, #-146	# int
        nop 	# 3 bytes pad for loops and calls
6c4     call,static  wrapper for: uncommon_trap(reason='loop_limit_check' action='maybe_recompile' debug_id='0')
        # indexvec::micro @ bci:6 (line 10) L[0]=RBP L[1]=rsp + #0 L[2]=rsp + #16 L[3]=rsp + #12 L[4]=#0 L[5]=_ STK[0]=#0 STK[1]=rsp + #16
        # OopMap {rbp=Oop [0]=Oop off=1740/0x6cc}
6cc     stop	# ShouldNotReachHere

6e0     B73: #	out( N1 ) <- in( B18 )  Freq: 9.56981e-07
6e0     stop	# ShouldNotReachHere

6f4     B74: #	out( N1 ) <- in( B19 )  Freq: 9.5698e-07
6f4     stop	# ShouldNotReachHere

708     B75: #	out( N1 ) <- in( B39 B9 )  Freq: 1.35101e-06
708     movl    RSI, #-187	# int
70d     movdq   RBP, XMM0	# spill
712     movq    [rsp + #0], RDX	# spill
716     movss   [rsp + #12], XMM2	# spill
71c     movl    [rsp + #20], RBX	# spill
720     movl    [rsp + #24], RCX	# spill
724     vmovdqu [rsp + 64],XMM4	# spill
72c     call,static  wrapper for: uncommon_trap(reason='unstable_if' action='reinterpret' debug_id='0')
        # jdk.incubator.vector.AbstractMask::indexInRange @ bci:17 (line 221) L[0]=#ScObj0 L[1]=_ L[2]=_ STK[0]=rsp + #20 STK[1]=rsp + #24
        # ScObj0 jdk/incubator/vector/Byte512Vector$Byte512Mask={ [payload :0]=rsp + #64 }
        # jdk.incubator.vector.AbstractSpecies::indexInRange @ bci:7 (line 216) L[0]=_ L[1]=_ L[2]=_
        # indexvec::micro @ bci:15 (line 11) L[0]=RBP L[1]=rsp + #0 L[2]=rsp + #24 L[3]=rsp + #12 L[4]=rsp + #20 L[5]=_
        # OopMap {rbp=Oop [0]=Oop off=1844/0x734}
734     stop	# ShouldNotReachHere

748     B76: #	out( N1 ) <- in( B37 )  Freq: 4.78463e-07
748     stop	# ShouldNotReachHere

75c     B77: #	out( N1 ) <- in( B38 )  Freq: 4.78462e-07
75c     stop	# ShouldNotReachHere

770     B78: #	out( B64 ) <- in( B51 )  Freq: 1.11236e-07
770     cmpq    RAX, R13
773     setbng R8	# signed, int
777     jmp     B64

77c     B79: #	out( B65 ) <- in( B57 )  Freq: 5.56146e-08
77c     cmpq    RAX, R13
77f     setbng R8	# signed, int
783     vmovdqu [rsp + 64],XMM7	# spill
78b     vmovdqu [rsp + 0],XMM6	# spill
792     jmp     B65

797     B80: #	out( B67 ) <- in( B58 )  Freq: 5.56145e-08
797     vmovdqu [rsp + 64],XMM7	# spill
79f     vmovdqu [rsp + 0],XMM6	# spill
7a6     jmp     B67

7ab     B81: #	out( B69 ) <- in( B60 )  Freq: 5.55999e-08
7ab     vmovdqu [rsp + 0],XMM6	# spill
7b2     jmp     B69

7b7     B82: #	out( N1 ) <- in( B48 )  Freq: 1.01321e-06
7b7     movl    RSI, #-10	# int
7bc     movl    RBP, R8	# spill
        nop 	# 1 bytes pad for loops and calls
7c0     call,static  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # indexvec::micro @ bci:59 (line 15) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ STK[0]=#NULL STK[1]=RBP
        # OopMap {off=1992/0x7c8}
7c8     stop	# ShouldNotReachHere

7dc     B83: #	out( N1 ) <- in( B2 )  Freq: 9.56989e-07
7dc     movq    RBP, RSI	# spill
7df     movq    [rsp + #0], RDX	# spill
7e3     movl    [rsp + #12], R8	# spill
7e8     movl    [rsp + #16], RCX	# spill
7ec     movl    RSI, #-138	# int
        nop 	# 3 bytes pad for loops and calls
7f4     call,static  wrapper for: uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')
        # indexvec::micro @ bci:6 (line 10) L[0]=RBP L[1]=rsp + #0 L[2]=rsp + #16 L[3]=rsp + #12 L[4]=#0 L[5]=_ STK[0]=#0 STK[1]=rsp + #16
        # OopMap {rbp=Oop [0]=Oop off=2044/0x7fc}
7fc     stop	# ShouldNotReachHere

--------------------------------------------------------------------------------
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     664  318             indexvec::micro (61 bytes)
 total in heap  [0x00007faadd22d190,0x00007faadd22e720] = 5520
 relocation     [0x00007faadd22d2f0,0x00007faadd22d3b8] = 200
 main code      [0x00007faadd22d3c0,0x00007faadd22dbf0] = 2096
 stub code      [0x00007faadd22dbf0,0x00007faadd22dc08] = 24
 oops           [0x00007faadd22dc08,0x00007faadd22dc38] = 48
 metadata       [0x00007faadd22dc38,0x00007faadd22dd78] = 320
 scopes data    [0x00007faadd22dd78,0x00007faadd22e048] = 720
 scopes pcs     [0x00007faadd22e048,0x00007faadd22e6c8] = 1664
 dependencies   [0x00007faadd22e6c8,0x00007faadd22e700] = 56
 nul chk table  [0x00007faadd22e700,0x00007faadd22e720] = 32

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x00007faa94701558} 'micro' '([B[BII)B' in 'indexvec'
  # parm0:    rsi:rsi   = '[B'
  # parm1:    rdx:rdx   = '[B'
  # parm2:    rcx       = int
  # parm3:    r8        = int
  #           [sp+0x120]  (sp of caller)
 ;; N1: #	out( B1 ) <- in( B83 B71 B72 B67 B50 B69 B75 B70 B82 B65 B77 B73 B76 B74 )  Freq: 1
 ;; B1: #	out( B48 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x00007faadd22d3c0:   jmpq   0x00007faadd01c720
  0x00007faadd22d3c5:   (bad)  
  0x00007faadd22d3c6:   callq  *0x48(%rbp)
  0x00007faadd22d3c9:   sub    $0x110,%esp
  0x00007faadd22d3cf:   nop
  0x00007faadd22d3d0:   cmpl   $0x1,0x20(%r15)
  0x00007faadd22d3d8:   jne    0x00007faadd22dbe6           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - indexvec::micro@6 (line 10)
  0x00007faadd22d3de:   nop
  0x00007faadd22d3df:   nop
  0x00007faadd22d3e0:   test   %ecx,%ecx
  0x00007faadd22d3e2:   jle    0x00007faadd22d720
 ;; B2: #	out( B83 B3 ) <- in( B1 )  Freq: 0.944448
  0x00007faadd22d3e8:   mov    0xc(%rdx),%ebx               ; implicit exception: dispatches to 0x00007faadd22db9c
 ;; B3: #	out( B71 B4 ) <- in( B2 )  Freq: 0.944447
  0x00007faadd22d3eb:   mov    0xc(%rsi),%r9d               ; implicit exception: dispatches to 0x00007faadd22da38
 ;; B4: #	out( B71 B5 ) <- in( B3 )  Freq: 0.944446
  0x00007faadd22d3ef:   lea    -0x3f(%r9),%r11d
  0x00007faadd22d3f3:   test   %r11d,%r11d
  0x00007faadd22d3f6:   jl     0x00007faadd22da38
 ;; B5: #	out( B71 B6 ) <- in( B4 )  Freq: 0.944445
  0x00007faadd22d3fc:   nop
  0x00007faadd22d3fd:   nop
  0x00007faadd22d3fe:   nop
  0x00007faadd22d3ff:   nop
  0x00007faadd22d400:   cmp    $0x3f,%r9d
  0x00007faadd22d404:   je     0x00007faadd22da38           ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
 ;; B6: #	out( B71 B7 ) <- in( B5 )  Freq: 0.944444
  0x00007faadd22d40a:   movslq %r9d,%r13                    ;*invokevirtual and {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.Byte512Vector$Byte512Mask::and@2 (line 677)
                                                            ; - jdk.incubator.vector.AbstractMask::indexInRange@52 (line 226)
                                                            ; - jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
                                                            ; - indexvec::micro@15 (line 11)
  0x00007faadd22d40d:   movslq %ecx,%rax                    ;*invokevirtual laneCount {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.VectorMask::length@9 (line 155)
                                                            ; - jdk.incubator.vector.AbstractMask::indexInRange@35 (line 223)
                                                            ; - jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
                                                            ; - indexvec::micro@15 (line 11)
  0x00007faadd22d410:   lea    -0x3f(%r13),%rdi
  0x00007faadd22d414:   lea    0x3f(%rax),%r10
  0x00007faadd22d418:   and    $0xffffffffffffffc0,%r10
  0x00007faadd22d41c:   mov    %r10d,%r10d
  0x00007faadd22d41f:   movslq %r10d,%r10
  0x00007faadd22d422:   add    $0xffffffffffffffc0,%r10
  0x00007faadd22d426:   cmp    %rdi,%r10
  0x00007faadd22d429:   jae    0x00007faadd22da38
 ;; B7: #	out( B72 B8 ) <- in( B6 )  Freq: 0.944443
  0x00007faadd22d42f:   cmp    $0x7fffffc0,%ecx
  0x00007faadd22d435:   jg     0x00007faadd22da6c
 ;; B8: #	out( B9 ) <- in( B7 )  Freq: 0.944442
  0x00007faadd22d43b:   vmovq  %rax,%xmm3
  0x00007faadd22d440:   mov    %r11d,(%rsp)
  0x00007faadd22d444:   vmovd  %r8d,%xmm2
  0x00007faadd22d449:   vmovq  %rsi,%xmm0
  0x00007faadd22d44e:   add    $0xffffffffffffffc0,%r13
  0x00007faadd22d452:   vmovd  %ebx,%xmm1
  0x00007faadd22d456:   movslq %ebx,%rdi
  0x00007faadd22d459:   add    $0xffffffffffffffc0,%rdi
  0x00007faadd22d45d:   mov    $0xffffffff,%r10d
  0x00007faadd22d463:   xor    %r8d,%r8d
  0x00007faadd22d466:   mov    $0x40,%r11d
  0x00007faadd22d46c:   cmp    %r11d,%ecx
  0x00007faadd22d46f:   mov    %ecx,%ebp
  0x00007faadd22d471:   cmovg  %r11d,%ebp
  0x00007faadd22d475:   movabs $0x11f983ef0,%rsi            ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
                                                            ;   {oop([B{0x000000011f983ef0})}
  0x00007faadd22d47f:   movslq %r10d,%rbx
  0x00007faadd22d482:   kmovq  %rbx,%k5                     ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.Byte512Vector$Byte512Mask::maskAll@28 (line 896)
                                                            ; - jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@76 (line 4347)
                                                            ; - jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
                                                            ; - indexvec::micro@15 (line 11)
  0x00007faadd22d487:   vpmovm2b %k5,%zmm4
  0x00007faadd22d48d:   vpabsb %zmm4,%zmm4                  ;*invokevirtual vectorBitSize {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@15 (line 4343)
                                                            ; - jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
                                                            ; - indexvec::micro@15 (line 11)
  0x00007faadd22d493:   xor    %ebx,%ebx                    ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::fromArray@15 (line 3007)
                                                            ; - indexvec::micro@30 (line 12)
 ;; B9: #	out( B75 B10 ) <- in( B8 B16 ) Loop( B9-B16 inner pre of N488) Freq: 1.88888
  0x00007faadd22d495:   cmp    %ecx,%ebx
  0x00007faadd22d497:   jge    0x00007faadd22dac8           ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
 ;; B10: #	out( B56 B11 ) <- in( B9 )  Freq: 1.88888
  0x00007faadd22d49d:   vmovdqu32 0x10(%rsi),%zmm5          ;*invokevirtual length {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::fromArray@10 (line 3007)
                                                            ; - indexvec::micro@30 (line 12)
  0x00007faadd22d4a7:   mov    %ecx,%r10d
  0x00007faadd22d4aa:   sub    %ebx,%r10d                   ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
  0x00007faadd22d4ad:   movslq %ebx,%rax                    ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::fromArray@15 (line 3007)
                                                            ; - indexvec::micro@30 (line 12)
  0x00007faadd22d4b0:   cmp    $0x40,%r10d
  0x00007faadd22d4b4:   jl     0x00007faadd22d7e8
 ;; B11: #	out( B12 ) <- in( B10 )  Freq: 1.77777
  0x00007faadd22d4ba:   vmovdqu64 %zmm4,%zmm6
  0x00007faadd22d4c0:   kmovq  %k5,%k4
 ;; B12: #	out( B54 B13 ) <- in( B11 B56 )  Freq: 1.88888
  0x00007faadd22d4c5:   cmp    %rdi,%rax
  0x00007faadd22d4c8:   jg     0x00007faadd22d7a5           ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
 ;; B13: #	out( B14 ) <- in( B12 )  Freq: 1.77768
  0x00007faadd22d4ce:   vmovdqu8 0x10(%rdx,%rax,1),%zmm7{%k4}{z};*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.VectorIntrinsics::indexInRange@3 (line 49)
                                                            ; - jdk.incubator.vector.ByteVector::fromArray@17 (line 3007)
                                                            ; - indexvec::micro@30 (line 12)
 ;; B14: #	out( B51 B15 ) <- in( B13 B55 )  Freq: 1.88888
  0x00007faadd22d4d9:   nop
  0x00007faadd22d4da:   nop
  0x00007faadd22d4db:   nop
  0x00007faadd22d4dc:   nop
  0x00007faadd22d4dd:   nop
  0x00007faadd22d4de:   nop
  0x00007faadd22d4df:   nop
  0x00007faadd22d4e0:   kortestq %k4,%k4
  0x00007faadd22d4e5:   jae    0x00007faadd22d74c
 ;; B15: #	out( B16 ) <- in( B14 )  Freq: 1.77765
  0x00007faadd22d4eb:   vmovq  %xmm0,%r10                   ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
  0x00007faadd22d4f0:   vmovdqu32 %zmm7,0x10(%r10,%rax,1)   ;*invokestatic indexInRange {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::fromArray@17 (line 3007)
                                                            ; - indexvec::micro@30 (line 12)
 ;; B16: #	out( B9 B17 ) <- in( B53 B15 )  Freq: 1.88888
  0x00007faadd22d4fb:   add    $0x40,%ebx
  0x00007faadd22d4fe:   nop
  0x00007faadd22d4ff:   nop
  0x00007faadd22d500:   cmp    %ebp,%ebx                    ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
  0x00007faadd22d502:   jl     0x00007faadd22d495
 ;; B17: #	out( B36 B18 ) <- in( B16 )  Freq: 0.944441
  0x00007faadd22d504:   cmp    %ecx,%ebx
  0x00007faadd22d506:   jge    0x00007faadd22d688
 ;; B18: #	out( B73 B19 ) <- in( B17 )  Freq: 0.94444
  0x00007faadd22d50c:   mov    %ebx,%r10d
  0x00007faadd22d50f:   cmp    (%rsp),%r10d
  0x00007faadd22d513:   jae    0x00007faadd22daa0
 ;; B19: #	out( B74 B20 ) <- in( B18 )  Freq: 0.944439
  0x00007faadd22d519:   cmp    (%rsp),%ebx
  0x00007faadd22d51c:   nop
  0x00007faadd22d51d:   nop
  0x00007faadd22d51e:   nop
  0x00007faadd22d51f:   nop
  0x00007faadd22d520:   jae    0x00007faadd22dab4           ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.Byte512Vector$Byte512Mask::maskAll@20 (line 897)
                                                            ; - jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@76 (line 4347)
                                                            ; - jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
                                                            ; - indexvec::micro@15 (line 11)
 ;; B20: #	out( B22 ) <- in( B19 )  Freq: 0.944438
  0x00007faadd22d526:   jmp    0x00007faadd22d53a
 ;; B21: #	out( B36 B22 ) <- in( B24 )  Freq: 17
  0x00007faadd22d528:   mov    0x3c0(%r15),%r10             ; ImmutableOopMap {rdx=Oop rsi=Oop xmm0=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) indexvec::micro@54 (line 10)
  0x00007faadd22d52f:   test   %eax,(%r10)                  ;   {poll}
  0x00007faadd22d532:   cmp    %ecx,%ebx
  0x00007faadd22d534:   jge    0x00007faadd22d688           ;*invokevirtual vspecies {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.AbstractMask::vectorSpecies@1 (line 67)
                                                            ; - jdk.incubator.vector.AbstractMask::check@2 (line 116)
                                                            ; - jdk.incubator.vector.ByteVector::fromArray0Template@6 (line 3757)
                                                            ; - jdk.incubator.vector.Byte512Vector::fromArray0@11 (line 987)
                                                            ; - jdk.incubator.vector.ByteVector::fromArray@32 (line 3008)
                                                            ; - indexvec::micro@30 (line 12)
 ;; B22: #	out( B25 ) <- in( B20 B21 ) Loop( B22-B21 ) Freq: 17
  0x00007faadd22d53a:   mov    %ecx,%ebp
  0x00007faadd22d53c:   sub    %ebx,%ebp
  0x00007faadd22d53e:   cmp    %ebx,%ecx
  0x00007faadd22d540:   cmovl  %r8d,%ebp
  0x00007faadd22d544:   cmp    $0xfa00,%ebp
  0x00007faadd22d54a:   mov    $0xfa00,%r10d
  0x00007faadd22d550:   cmova  %r10d,%ebp
  0x00007faadd22d554:   add    %ebx,%ebp
  0x00007faadd22d556:   jmp    0x00007faadd22d577
  0x00007faadd22d558:   nop
  0x00007faadd22d559:   nop
  0x00007faadd22d55a:   nop
  0x00007faadd22d55b:   nop
  0x00007faadd22d55c:   nop
  0x00007faadd22d55d:   nop
  0x00007faadd22d55e:   nop
  0x00007faadd22d55f:   nop
 ;; B23: #	out( B24 ) <- in( B29 ) top-of-loop Freq: 287.997
  0x00007faadd22d560:   vmovq  %xmm0,%r10                   ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
  0x00007faadd22d565:   vmovdqu32 %zmm7,0x10(%r10,%rax,1)
 ;; B24: #	out( B21 B25 ) <- in( B32 B23 ) top-of-loop Freq: 306.019
  0x00007faadd22d570:   add    $0x40,%ebx
  0x00007faadd22d573:   cmp    %ebp,%ebx
  0x00007faadd22d575:   jge    0x00007faadd22d528           ;*invokeinterface indexInRange {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - indexvec::micro@15 (line 11)
 ;; B25: #	out( B35 B26 ) <- in( B22 B24 ) Loop( B25-B24 inner main of N250 strip mined) Freq: 306.019
  0x00007faadd22d577:   vmovdqu32 0x10(%rsi),%zmm5          ;*invokevirtual indexInRange {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
                                                            ; - indexvec::micro@15 (line 11)
  0x00007faadd22d581:   mov    %ecx,%r10d
  0x00007faadd22d584:   sub    %ebx,%r10d                   ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
  0x00007faadd22d587:   movslq %ebx,%rax                    ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.Byte512Vector$Byte512Mask::maskAll@28 (line 896)
                                                            ; - jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@76 (line 4347)
                                                            ; - jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
                                                            ; - indexvec::micro@15 (line 11)
  0x00007faadd22d58a:   cmp    $0x40,%r10d
  0x00007faadd22d58e:   jl     0x00007faadd22d65b
 ;; B26: #	out( B27 ) <- in( B25 )  Freq: 288.018
  0x00007faadd22d594:   vmovdqu64 %zmm4,%zmm6
  0x00007faadd22d59a:   kmovq  %k5,%k4
 ;; B27: #	out( B33 B28 ) <- in( B26 B35 )  Freq: 306.019
  0x00007faadd22d59f:   nop
  0x00007faadd22d5a0:   cmp    %rdi,%rax
  0x00007faadd22d5a3:   jg     0x00007faadd22d60f           ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
 ;; B28: #	out( B29 ) <- in( B27 )  Freq: 288.002
  0x00007faadd22d5a9:   vmovdqu8 0x10(%rdx,%rax,1),%zmm7{%k4}{z};*invokevirtual vectorType {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@1 (line 4341)
                                                            ; - jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
                                                            ; - indexvec::micro@15 (line 11)
 ;; B29: #	out( B23 B30 ) <- in( B28 B34 )  Freq: 306.019
  0x00007faadd22d5b4:   kortestq %k4,%k4
  0x00007faadd22d5b9:   jb     0x00007faadd22d560
 ;; B30: #	out( B63 B31 ) <- in( B29 )  Freq: 18.0214
  0x00007faadd22d5bb:   nop
  0x00007faadd22d5bc:   nop
  0x00007faadd22d5bd:   nop
  0x00007faadd22d5be:   nop
  0x00007faadd22d5bf:   nop
  0x00007faadd22d5c0:   cmp    %r13,%rax
  0x00007faadd22d5c3:   jle    0x00007faadd22d8d5
 ;; B31: #	out( B66 B32 ) <- in( B30 )  Freq: 18.0214
  0x00007faadd22d5c9:   mov    %r9d,%r10d
  0x00007faadd22d5cc:   sub    %ebx,%r10d
  0x00007faadd22d5cf:   cmp    %r11d,%r10d
  0x00007faadd22d5d2:   cmovg  %r11d,%r10d
  0x00007faadd22d5d6:   cmp    %r8d,%r10d
  0x00007faadd22d5d9:   cmovl  %r8d,%r10d
  0x00007faadd22d5dd:   vpbroadcastb %r10d,%zmm8
  0x00007faadd22d5e3:   vpcmpb $0x5,%zmm8,%zmm5,%k7         ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
  0x00007faadd22d5ea:   kandq  %k4,%k7,%k7                  ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.LambdaForm$MH/0x00000008000c1400::linkToTargetMethod@4
                                                            ; - jdk.incubator.vector.Byte512Vector$Byte512Mask::maskAll@20 (line 897)
                                                            ; - jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@76 (line 4347)
                                                            ; - jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
                                                            ; - indexvec::micro@15 (line 11)
  0x00007faadd22d5ef:   kortestq %k7,%k7
  0x00007faadd22d5f4:   jne    0x00007faadd22d938
 ;; B32: #	out( B24 ) <- in( B31 )  Freq: 18.0214
  0x00007faadd22d5fa:   vmovq  %xmm0,%r10                   ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
  0x00007faadd22d5ff:   vmovdqu8 %zmm7,0x10(%r10,%rax,1){%k4};*invokeinterface indexInRange {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - indexvec::micro@15 (line 11)
  0x00007faadd22d60a:   jmpq   0x00007faadd22d570
 ;; B33: #	out( B68 B34 ) <- in( B27 )  Freq: 18.0167
  0x00007faadd22d60f:   vmovd  %xmm1,%r10d
  0x00007faadd22d614:   sub    %ebx,%r10d
  0x00007faadd22d617:   cmp    %r11d,%r10d
  0x00007faadd22d61a:   cmovg  %r11d,%r10d
  0x00007faadd22d61e:   cmp    %r8d,%r10d
  0x00007faadd22d621:   cmovl  %r8d,%r10d
  0x00007faadd22d625:   vpbroadcastb %r10d,%zmm7
  0x00007faadd22d62b:   vpcmpb $0x5,%zmm7,%zmm5,%k7         ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
  0x00007faadd22d632:   kandq  %k4,%k7,%k7                  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.Byte512Vector$Byte512Mask::maskAll@28 (line 896)
                                                            ; - jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@76 (line 4347)
                                                            ; - jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
                                                            ; - indexvec::micro@15 (line 11)
  0x00007faadd22d637:   nop
  0x00007faadd22d638:   nop
  0x00007faadd22d639:   nop
  0x00007faadd22d63a:   nop
  0x00007faadd22d63b:   nop
  0x00007faadd22d63c:   nop
  0x00007faadd22d63d:   nop
  0x00007faadd22d63e:   nop
  0x00007faadd22d63f:   nop
  0x00007faadd22d640:   kortestq %k7,%k7
  0x00007faadd22d645:   jne    0x00007faadd22d9b0           ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
 ;; B34: #	out( B29 ) <- in( B33 )  Freq: 18.0167
  0x00007faadd22d64b:   vmovdqu8 0x10(%rdx,%rax,1),%zmm7{%k4}{z};*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.LambdaForm$MH/0x00000008000c1400::linkToTargetMethod@4
                                                            ; - jdk.incubator.vector.Byte512Vector$Byte512Mask::maskAll@20 (line 897)
                                                            ; - jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@76 (line 4347)
                                                            ; - jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
                                                            ; - indexvec::micro@15 (line 11)
  0x00007faadd22d656:   jmpq   0x00007faadd22d5b4
 ;; B35: #	out( B27 ) <- in( B25 )  Freq: 18.0011
  0x00007faadd22d65b:   vmovq  %xmm3,%r10
  0x00007faadd22d660:   sub    %rax,%r10                    ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
  0x00007faadd22d663:   movabs $0xffffffffffffffff,%r14
  0x00007faadd22d66d:   bzhi   %r10,%r14,%r14
  0x00007faadd22d672:   kmovq  %r14,%k4                     ;*invokevirtual indexInRange {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
                                                            ; - indexvec::micro@15 (line 11)
  0x00007faadd22d677:   vpmovm2b %k4,%zmm6
  0x00007faadd22d67d:   vpabsb %zmm6,%zmm6                  ;*invokevirtual vspecies {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.Byte512Vector::vspecies@1 (line 41)
                                                            ; - jdk.incubator.vector.AbstractVector::species@1 (line 84)
                                                            ; - jdk.incubator.vector.ByteVector::fromArray0Template@3 (line 3757)
                                                            ; - jdk.incubator.vector.Byte512Vector::fromArray0@11 (line 987)
                                                            ; - jdk.incubator.vector.ByteVector::fromArray@32 (line 3008)
                                                            ; - indexvec::micro@30 (line 12)
  0x00007faadd22d683:   jmpq   0x00007faadd22d59f
 ;; B36: #	out( B47 B37 ) <- in( B17 B21 )  Freq: 0.944385
  0x00007faadd22d688:   cmp    %ecx,%ebx
  0x00007faadd22d68a:   jge    0x00007faadd22d716
 ;; B37: #	out( B76 B38 ) <- in( B36 )  Freq: 0.472192
  0x00007faadd22d690:   cmp    (%rsp),%ebx
  0x00007faadd22d693:   jae    0x00007faadd22db08
 ;; B38: #	out( B77 B39 ) <- in( B37 )  Freq: 0.472192
  0x00007faadd22d699:   mov    %ebx,%r10d
  0x00007faadd22d69c:   nop
  0x00007faadd22d69d:   nop
  0x00007faadd22d69e:   nop
  0x00007faadd22d69f:   nop
  0x00007faadd22d6a0:   cmp    (%rsp),%r10d
  0x00007faadd22d6a4:   jae    0x00007faadd22db1c           ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
  0x00007faadd22d6aa:   nop
  0x00007faadd22d6ab:   nop                                 ;*invokestatic requireNonNull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.Byte512Vector$Byte512Mask::and@1 (line 815)
                                                            ; - jdk.incubator.vector.Byte512Vector$Byte512Mask::and@2 (line 677)
                                                            ; - jdk.incubator.vector.AbstractMask::indexInRange@52 (line 226)
                                                            ; - jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
                                                            ; - indexvec::micro@15 (line 11)
 ;; B39: #	out( B75 B40 ) <- in( B38 B46 ) Loop( B39-B46 inner post of N488) Freq: 0.944382
  0x00007faadd22d6ac:   cmp    %ecx,%ebx
  0x00007faadd22d6ae:   jge    0x00007faadd22dac8           ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
 ;; B40: #	out( B62 B41 ) <- in( B39 )  Freq: 0.944382
  0x00007faadd22d6b4:   vmovdqu32 0x10(%rsi),%zmm5          ;*invokevirtual and {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.Byte512Vector$Byte512Mask::and@2 (line 677)
                                                            ; - jdk.incubator.vector.AbstractMask::indexInRange@52 (line 226)
                                                            ; - jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
                                                            ; - indexvec::micro@15 (line 11)
  0x00007faadd22d6be:   mov    %ecx,%r10d
  0x00007faadd22d6c1:   sub    %ebx,%r10d                   ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
  0x00007faadd22d6c4:   movslq %ebx,%rax                    ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.Byte512Vector$Byte512Mask::maskAll@28 (line 896)
                                                            ; - jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@76 (line 4347)
                                                            ; - jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
                                                            ; - indexvec::micro@15 (line 11)
  0x00007faadd22d6c7:   cmp    $0x40,%r10d
  0x00007faadd22d6cb:   jl     0x00007faadd22d8a8
 ;; B41: #	out( B42 ) <- in( B40 )  Freq: 0.88883
  0x00007faadd22d6d1:   vmovdqu64 %zmm4,%zmm6
  0x00007faadd22d6d7:   kmovq  %k5,%k4
 ;; B42: #	out( B60 B43 ) <- in( B41 B62 )  Freq: 0.944382
  0x00007faadd22d6dc:   nop
  0x00007faadd22d6dd:   nop
  0x00007faadd22d6de:   nop
  0x00007faadd22d6df:   nop
  0x00007faadd22d6e0:   cmp    %rdi,%rax
  0x00007faadd22d6e3:   jg     0x00007faadd22d865           ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
 ;; B43: #	out( B44 ) <- in( B42 )  Freq: 0.888782
  0x00007faadd22d6e9:   vmovdqu8 0x10(%rdx,%rax,1),%zmm7{%k4}{z};*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.Byte512Vector$Byte512Mask::and@29 (line 817)
                                                            ; - jdk.incubator.vector.Byte512Vector$Byte512Mask::and@2 (line 677)
                                                            ; - jdk.incubator.vector.AbstractMask::indexInRange@52 (line 226)
                                                            ; - jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
                                                            ; - indexvec::micro@15 (line 11)
 ;; B44: #	out( B57 B45 ) <- in( B43 B61 )  Freq: 0.944382
  0x00007faadd22d6f4:   kortestq %k4,%k4
  0x00007faadd22d6f9:   jae    0x00007faadd22d815
 ;; B45: #	out( B46 ) <- in( B44 )  Freq: 0.888767
  0x00007faadd22d6ff:   vmovq  %xmm0,%r10                   ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
  0x00007faadd22d704:   vmovdqu32 %zmm7,0x10(%r10,%rax,1)   ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.LambdaForm$MH/0x00000008000c1400::linkToTargetMethod@4
                                                            ; - jdk.incubator.vector.Byte512Vector$Byte512Mask::and@24 (line 817)
                                                            ; - jdk.incubator.vector.Byte512Vector$Byte512Mask::and@2 (line 677)
                                                            ; - jdk.incubator.vector.AbstractMask::indexInRange@52 (line 226)
                                                            ; - jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
                                                            ; - indexvec::micro@15 (line 11)
 ;; B46: #	out( B39 B47 ) <- in( B59 B45 )  Freq: 0.944382
  0x00007faadd22d70f:   add    $0x40,%ebx
  0x00007faadd22d712:   cmp    %ecx,%ebx
  0x00007faadd22d714:   jl     0x00007faadd22d6ac
 ;; B47: #	out( B48 ) <- in( B46 B36 )  Freq: 0.944383
  0x00007faadd22d716:   vmovq  %xmm0,%rsi
  0x00007faadd22d71b:   vmovd  %xmm2,%r8d
 ;; B48: #	out( B82 B49 ) <- in( B47 B1 )  Freq: 0.999935
  0x00007faadd22d720:   mov    0xc(%rsi),%r11d              ; implicit exception: dispatches to 0x00007faadd22db77
 ;; B49: #	out( B70 B50 ) <- in( B48 )  Freq: 0.999934
  0x00007faadd22d724:   cmp    %r11d,%r8d
  0x00007faadd22d727:   jae    0x00007faadd22da10           ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
 ;; B50: #	out( N1 ) <- in( B49 )  Freq: 0.999933
  0x00007faadd22d72d:   movsbl 0x10(%rsi,%r8,1),%eax        ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - indexvec::micro@6 (line 10)
                                                            ;   {no_reloc}
  0x00007faadd22d733:   vzeroupper 
  0x00007faadd22d736:   add    $0x110,%rsp
  0x00007faadd22d73d:   pop    %rbp
  0x00007faadd22d73e:   cmp    0x3b8(%r15),%rsp             ;   {poll_return}
  0x00007faadd22d745:   ja     0x00007faadd22dbd0
  0x00007faadd22d74b:   retq   
 ;; B51: #	out( B78 B52 ) <- in( B14 )  Freq: 0.111236
  0x00007faadd22d74c:   cmp    %r13,%rax
  0x00007faadd22d74f:   jle    0x00007faadd22db30
 ;; B52: #	out( B66 B53 ) <- in( B51 )  Freq: 0.111236
  0x00007faadd22d755:   mov    %r9d,%r10d
  0x00007faadd22d758:   sub    %ebx,%r10d
  0x00007faadd22d75b:   cmp    %r11d,%r10d
  0x00007faadd22d75e:   cmovg  %r11d,%r10d
  0x00007faadd22d762:   cmp    %r8d,%r10d
  0x00007faadd22d765:   cmovl  %r8d,%r10d
  0x00007faadd22d769:   vpbroadcastb %r10d,%zmm8
  0x00007faadd22d76f:   vpcmpb $0x5,%zmm8,%zmm5,%k7         ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
  0x00007faadd22d776:   kandq  %k4,%k7,%k7                  ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.LambdaForm$MH/0x00000008000c1400::linkToTargetMethod@4
                                                            ; - jdk.incubator.vector.Byte512Vector$Byte512Mask::maskAll@20 (line 897)
                                                            ; - jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@76 (line 4347)
                                                            ; - jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
                                                            ; - indexvec::micro@15 (line 11)
  0x00007faadd22d77b:   nop
  0x00007faadd22d77c:   nop
  0x00007faadd22d77d:   nop
  0x00007faadd22d77e:   nop
  0x00007faadd22d77f:   nop
  0x00007faadd22d780:   kortestq %k7,%k7
  0x00007faadd22d785:   jne    0x00007faadd22d938
 ;; B53: #	out( B16 ) <- in( B52 )  Freq: 0.111236
  0x00007faadd22d78b:   vmovq  %xmm0,%r10                   ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
  0x00007faadd22d790:   vmovdqu8 %zmm7,0x10(%r10,%rax,1){%k4};*invokevirtual length {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::fromArray@10 (line 3007)
                                                            ; - indexvec::micro@30 (line 12)
  0x00007faadd22d79b:   nop
  0x00007faadd22d79c:   nop
  0x00007faadd22d79d:   nop
  0x00007faadd22d79e:   nop
  0x00007faadd22d79f:   nop
  0x00007faadd22d7a0:   jmpq   0x00007faadd22d4fb
 ;; B54: #	out( B68 B55 ) <- in( B12 )  Freq: 0.111207
  0x00007faadd22d7a5:   vmovd  %xmm1,%r10d
  0x00007faadd22d7aa:   sub    %ebx,%r10d
  0x00007faadd22d7ad:   cmp    %r11d,%r10d
  0x00007faadd22d7b0:   cmovg  %r11d,%r10d
  0x00007faadd22d7b4:   cmp    %r8d,%r10d
  0x00007faadd22d7b7:   cmovl  %r8d,%r10d
  0x00007faadd22d7bb:   vpbroadcastb %r10d,%zmm7
  0x00007faadd22d7c1:   vpcmpb $0x5,%zmm7,%zmm5,%k7         ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
  0x00007faadd22d7c8:   kandq  %k4,%k7,%k7                  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.Byte512Vector$Byte512Mask::maskAll@28 (line 896)
                                                            ; - jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@76 (line 4347)
                                                            ; - jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
                                                            ; - indexvec::micro@15 (line 11)
  0x00007faadd22d7cd:   kortestq %k7,%k7
  0x00007faadd22d7d2:   jne    0x00007faadd22d9b0           ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
 ;; B55: #	out( B14 ) <- in( B54 )  Freq: 0.111207
  0x00007faadd22d7d8:   vmovdqu8 0x10(%rdx,%rax,1),%zmm7{%k4}{z};*invokestatic fromArray {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - indexvec::micro@30 (line 12)
  0x00007faadd22d7e3:   jmpq   0x00007faadd22d4d9
 ;; B56: #	out( B12 ) <- in( B10 )  Freq: 0.111111
  0x00007faadd22d7e8:   vmovq  %xmm3,%r10
  0x00007faadd22d7ed:   sub    %rax,%r10                    ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
  0x00007faadd22d7f0:   movabs $0xffffffffffffffff,%r14
  0x00007faadd22d7fa:   bzhi   %r10,%r14,%r14
  0x00007faadd22d7ff:   kmovq  %r14,%k4                     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::fromArray@15 (line 3007)
                                                            ; - indexvec::micro@30 (line 12)
  0x00007faadd22d804:   vpmovm2b %k4,%zmm6
  0x00007faadd22d80a:   vpabsb %zmm6,%zmm6                  ;*invokevirtual vectorSpecies {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.AbstractMask::check@2 (line 116)
                                                            ; - jdk.incubator.vector.ByteVector::fromArray0Template@6 (line 3757)
                                                            ; - jdk.incubator.vector.Byte512Vector::fromArray0@11 (line 987)
                                                            ; - jdk.incubator.vector.ByteVector::fromArray@32 (line 3008)
                                                            ; - indexvec::micro@30 (line 12)
  0x00007faadd22d810:   jmpq   0x00007faadd22d4c5
 ;; B57: #	out( B79 B58 ) <- in( B44 )  Freq: 0.0556146
  0x00007faadd22d815:   cmp    %r13,%rax
  0x00007faadd22d818:   jle    0x00007faadd22db3c
 ;; B58: #	out( B80 B59 ) <- in( B57 )  Freq: 0.0556145
  0x00007faadd22d81e:   mov    %r9d,%r10d
  0x00007faadd22d821:   sub    %ebx,%r10d
  0x00007faadd22d824:   cmp    %r11d,%r10d
  0x00007faadd22d827:   cmovg  %r11d,%r10d
  0x00007faadd22d82b:   cmp    %r8d,%r10d
  0x00007faadd22d82e:   cmovl  %r8d,%r10d
  0x00007faadd22d832:   vpbroadcastb %r10d,%zmm8
  0x00007faadd22d838:   vpcmpb $0x5,%zmm8,%zmm5,%k7         ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
  0x00007faadd22d83f:   kandq  %k4,%k7,%k7                  ;*invokevirtual and {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.AbstractMask::indexInRange@52 (line 226)
                                                            ; - jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
                                                            ; - indexvec::micro@15 (line 11)
  0x00007faadd22d844:   kortestq %k7,%k7
  0x00007faadd22d849:   jne    0x00007faadd22db57
 ;; B59: #	out( B46 ) <- in( B58 )  Freq: 0.0556145
  0x00007faadd22d84f:   vmovq  %xmm0,%r10                   ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
  0x00007faadd22d854:   vmovdqu8 %zmm7,0x10(%r10,%rax,1){%k4};*invokevirtual and {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.AbstractMask::indexInRange@52 (line 226)
                                                            ; - jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
                                                            ; - indexvec::micro@15 (line 11)
  0x00007faadd22d85f:   nop
  0x00007faadd22d860:   jmpq   0x00007faadd22d70f
 ;; B60: #	out( B81 B61 ) <- in( B42 )  Freq: 0.0555999
  0x00007faadd22d865:   vmovd  %xmm1,%r10d
  0x00007faadd22d86a:   sub    %ebx,%r10d
  0x00007faadd22d86d:   cmp    %r11d,%r10d
  0x00007faadd22d870:   cmovg  %r11d,%r10d
  0x00007faadd22d874:   cmp    %r8d,%r10d
  0x00007faadd22d877:   cmovl  %r8d,%r10d
  0x00007faadd22d87b:   vpbroadcastb %r10d,%zmm7
  0x00007faadd22d881:   vpcmpb $0x5,%zmm7,%zmm5,%k7         ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
  0x00007faadd22d888:   kandq  %k4,%k7,%k7                  ;*invokevirtual and {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.AbstractMask::indexInRange@52 (line 226)
                                                            ; - jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
                                                            ; - indexvec::micro@15 (line 11)
  0x00007faadd22d88d:   kortestq %k7,%k7
  0x00007faadd22d892:   jne    0x00007faadd22db6b           ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
 ;; B61: #	out( B44 ) <- in( B60 )  Freq: 0.0555998
  0x00007faadd22d898:   vmovdqu8 0x10(%rdx,%rax,1),%zmm7{%k4}{z};*invokevirtual and {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.Byte512Vector$Byte512Mask::and@2 (line 677)
                                                            ; - jdk.incubator.vector.AbstractMask::indexInRange@52 (line 226)
                                                            ; - jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
                                                            ; - indexvec::micro@15 (line 11)
  0x00007faadd22d8a3:   jmpq   0x00007faadd22d6f4
 ;; B62: #	out( B42 ) <- in( B40 )  Freq: 0.0555519
  0x00007faadd22d8a8:   vmovq  %xmm3,%r10
  0x00007faadd22d8ad:   sub    %rax,%r10
  0x00007faadd22d8b0:   movabs $0xffffffffffffffff,%rbp
  0x00007faadd22d8ba:   bzhi   %r10,%rbp,%rbp
  0x00007faadd22d8bf:   kmovq  %rbp,%k4                     ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
  0x00007faadd22d8c4:   vpmovm2b %k4,%zmm6
  0x00007faadd22d8ca:   vpabsb %zmm6,%zmm6                  ;*invokespecial fromArray0Template {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.Byte512Vector::fromArray0@11 (line 987)
                                                            ; - jdk.incubator.vector.ByteVector::fromArray@32 (line 3008)
                                                            ; - indexvec::micro@30 (line 12)
  0x00007faadd22d8d0:   jmpq   0x00007faadd22d6dc
 ;; B63: #	out( B64 ) <- in( B30 )  Freq: 1.80214e-05
  0x00007faadd22d8d5:   cmp    %r13,%rax
  0x00007faadd22d8d8:   setle  %r8b
 ;; B64: #	out( B65 ) <- in( B78 B63 )  Freq: 1.81327e-05
  0x00007faadd22d8dc:   vmovdqu64 %zmm7,0x40(%rsp)
  0x00007faadd22d8e4:   vmovdqu64 %zmm6,(%rsp)              ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
 ;; B65: #	out( N1 ) <- in( B79 B64 )  Freq: 1.81883e-05
  0x00007faadd22d8eb:   mov    $0xffffff45,%esi             ;*invokestatic maskAll {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@76 (line 4347)
                                                            ; - jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
                                                            ; - indexvec::micro@15 (line 11)
  0x00007faadd22d8f0:   vmovq  %xmm0,%rbp
  0x00007faadd22d8f5:   mov    %rdx,0x80(%rsp)
  0x00007faadd22d8fd:   mov    %ecx,0x88(%rsp)
  0x00007faadd22d904:   vmovss %xmm2,0x8c(%rsp)
  0x00007faadd22d90d:   mov    %ebx,0x94(%rsp)
  0x00007faadd22d914:   mov    %r8d,0xa0(%rsp)
  0x00007faadd22d91c:   vzeroupper 
  0x00007faadd22d91f:   callq  0x00007faadd1362a0           ; ImmutableOopMap {rbp=Oop [128]=Oop }
                                                            ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) jdk.incubator.vector.ByteVector::intoArray@36 (line 3420)
                                                            ; - indexvec::micro@38 (line 13)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007faadd22d924:   movabs $0x7faae8bf7378,%rdi         ;   {external_word}
  0x00007faadd22d92e:   and    $0xfffffffffffffff0,%rsp
  0x00007faadd22d932:   callq  0x00007faae827c9a0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007faadd22d937:   hlt    
 ;; B66: #	out( B67 ) <- in( B52 B31 )  Freq: 1.81326e-05
  0x00007faadd22d938:   vmovdqu64 %zmm7,0x40(%rsp)
  0x00007faadd22d940:   vmovdqu64 %zmm6,(%rsp)
 ;; B67: #	out( N1 ) <- in( B80 B66 )  Freq: 1.81883e-05
  0x00007faadd22d947:   mov    $0xffffffad,%esi             ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
  0x00007faadd22d94c:   vpmovm2b %k7,%zmm1
  0x00007faadd22d952:   vpabsb %zmm1,%zmm1                  ;*invokevirtual vectorType {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@1 (line 4341)
                                                            ; - jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
                                                            ; - indexvec::micro@15 (line 11)
  0x00007faadd22d958:   vmovq  %xmm0,%rbp
  0x00007faadd22d95d:   mov    %rdx,0x80(%rsp)
  0x00007faadd22d965:   mov    %ecx,0x88(%rsp)
  0x00007faadd22d96c:   vmovss %xmm2,0x8c(%rsp)
  0x00007faadd22d975:   mov    %ebx,0x94(%rsp)
  0x00007faadd22d97c:   mov    %ebx,0xa0(%rsp)
  0x00007faadd22d983:   mov    %r9d,0xa4(%rsp)
  0x00007faadd22d98b:   vmovdqu64 %zmm1,0xc0(%rsp)          ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
  0x00007faadd22d993:   nop
  0x00007faadd22d994:   vzeroupper 
  0x00007faadd22d997:   callq  0x00007faadd1362a0           ; ImmutableOopMap {rbp=Oop [128]=Oop }
                                                            ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.Byte512Vector$Byte512Mask::firstTrue@11 (line 854)
                                                            ; - jdk.incubator.vector.AbstractMask::checkIndexByLane@119 (line 295)
                                                            ; - jdk.incubator.vector.ByteVector::checkMaskFromIndexSize@12 (line 3926)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@46 (line 3421)
                                                            ; - indexvec::micro@38 (line 13)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007faadd22d99c:   movabs $0x7faae8bf7378,%rdi         ;   {external_word}
  0x00007faadd22d9a6:   and    $0xfffffffffffffff0,%rsp
  0x00007faadd22d9aa:   callq  0x00007faae827c9a0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007faadd22d9af:   hlt    
 ;; B68: #	out( B69 ) <- in( B54 B33 )  Freq: 1.81279e-05
  0x00007faadd22d9b0:   vmovdqu64 %zmm6,(%rsp)
 ;; B69: #	out( N1 ) <- in( B81 B68 )  Freq: 1.81835e-05
  0x00007faadd22d9b7:   mov    $0xffffffad,%esi             ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
  0x00007faadd22d9bc:   vpmovm2b %k7,%zmm3
  0x00007faadd22d9c2:   vpabsb %zmm3,%zmm3                  ;*invokestatic maskAll {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@76 (line 4347)
                                                            ; - jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
                                                            ; - indexvec::micro@15 (line 11)
  0x00007faadd22d9c8:   vmovq  %xmm0,%rbp
  0x00007faadd22d9cd:   mov    %ecx,0x48(%rsp)
  0x00007faadd22d9d1:   vmovss %xmm2,0x4c(%rsp)
  0x00007faadd22d9d7:   mov    %rdx,0x58(%rsp)
  0x00007faadd22d9dc:   mov    %ebx,0x54(%rsp)
  0x00007faadd22d9e0:   mov    %ebx,0x60(%rsp)
  0x00007faadd22d9e4:   vmovss %xmm1,0x64(%rsp)
  0x00007faadd22d9ea:   vmovdqu64 %zmm3,0x80(%rsp)          ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
  0x00007faadd22d9f2:   nop
  0x00007faadd22d9f3:   nop
  0x00007faadd22d9f4:   vzeroupper 
  0x00007faadd22d9f7:   callq  0x00007faadd1362a0           ; ImmutableOopMap {rbp=Oop [88]=Oop }
                                                            ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.Byte512Vector$Byte512Mask::firstTrue@11 (line 854)
                                                            ; - jdk.incubator.vector.AbstractMask::checkIndexByLane@119 (line 295)
                                                            ; - jdk.incubator.vector.ByteVector::checkMaskFromIndexSize@12 (line 3926)
                                                            ; - jdk.incubator.vector.ByteVector::fromArray@43 (line 3011)
                                                            ; - indexvec::micro@30 (line 12)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007faadd22d9fc:   movabs $0x7faae8bf7378,%rdi         ;   {external_word}
  0x00007faadd22da06:   and    $0xfffffffffffffff0,%rsp
  0x00007faadd22da0a:   callq  0x00007faae827c9a0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007faadd22da0f:   hlt    
 ;; B70: #	out( N1 ) <- in( B49 )  Freq: 1.01321e-06
  0x00007faadd22da10:   mov    %rsi,%rbp
  0x00007faadd22da13:   mov    %r8d,(%rsp)                  ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
  0x00007faadd22da17:   mov    $0xffffffe4,%esi
  0x00007faadd22da1c:   vzeroupper 
  0x00007faadd22da1f:   callq  0x00007faadd1362a0           ; ImmutableOopMap {rbp=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - indexvec::micro@59 (line 15)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007faadd22da24:   movabs $0x7faae8bf7378,%rdi         ;   {external_word}
  0x00007faadd22da2e:   and    $0xfffffffffffffff0,%rsp
  0x00007faadd22da32:   callq  0x00007faae827c9a0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007faadd22da37:   hlt    
 ;; B71: #	out( N1 ) <- in( B6 B3 B4 B5 )  Freq: 3.81541e-06
  0x00007faadd22da38:   mov    %rsi,%rbp
  0x00007faadd22da3b:   mov    %rdx,(%rsp)
  0x00007faadd22da3f:   mov    %r8d,0xc(%rsp)
  0x00007faadd22da44:   mov    %ecx,0x10(%rsp)              ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
  0x00007faadd22da48:   mov    $0xffffffbe,%esi
  0x00007faadd22da4d:   nop
  0x00007faadd22da4e:   nop
  0x00007faadd22da4f:   nop
  0x00007faadd22da50:   vzeroupper 
  0x00007faadd22da53:   callq  0x00007faadd1362a0           ; ImmutableOopMap {rbp=Oop [0]=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) indexvec::micro@6 (line 10)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007faadd22da58:   movabs $0x7faae8bf7378,%rdi         ;   {external_word}
  0x00007faadd22da62:   and    $0xfffffffffffffff0,%rsp
  0x00007faadd22da66:   callq  0x00007faae827c9a0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007faadd22da6b:   hlt    
 ;; B72: #	out( N1 ) <- in( B7 )  Freq: 9.56984e-07
  0x00007faadd22da6c:   mov    %rsi,%rbp
  0x00007faadd22da6f:   mov    %rdx,(%rsp)
  0x00007faadd22da73:   mov    %r8d,0xc(%rsp)
  0x00007faadd22da78:   mov    %ecx,0x10(%rsp)              ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
  0x00007faadd22da7c:   mov    $0xffffff6e,%esi
  0x00007faadd22da81:   nop
  0x00007faadd22da82:   nop
  0x00007faadd22da83:   nop
  0x00007faadd22da84:   vzeroupper 
  0x00007faadd22da87:   callq  0x00007faadd1362a0           ; ImmutableOopMap {rbp=Oop [0]=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) indexvec::micro@6 (line 10)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007faadd22da8c:   movabs $0x7faae8bf7378,%rdi         ;   {external_word}
  0x00007faadd22da96:   and    $0xfffffffffffffff0,%rsp
  0x00007faadd22da9a:   callq  0x00007faae827c9a0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007faadd22da9f:   hlt    
 ;; B73: #	out( N1 ) <- in( B18 )  Freq: 9.56981e-07
  0x00007faadd22daa0:   movabs $0x7faae8c6f020,%rdi         ;   {external_word}
  0x00007faadd22daaa:   and    $0xfffffffffffffff0,%rsp
  0x00007faadd22daae:   callq  0x00007faae827c9a0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007faadd22dab3:   hlt    
 ;; B74: #	out( N1 ) <- in( B19 )  Freq: 9.5698e-07
  0x00007faadd22dab4:   movabs $0x7faae8c6f020,%rdi         ;   {external_word}
  0x00007faadd22dabe:   and    $0xfffffffffffffff0,%rsp
  0x00007faadd22dac2:   callq  0x00007faae827c9a0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007faadd22dac7:   hlt                                 ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
 ;; B75: #	out( N1 ) <- in( B39 B9 )  Freq: 1.35101e-06
  0x00007faadd22dac8:   mov    $0xffffff45,%esi             ;*invokevirtual vectorBitSize {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@15 (line 4343)
                                                            ; - jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
                                                            ; - indexvec::micro@15 (line 11)
  0x00007faadd22dacd:   vmovq  %xmm0,%rbp
  0x00007faadd22dad2:   mov    %rdx,(%rsp)
  0x00007faadd22dad6:   vmovss %xmm2,0xc(%rsp)
  0x00007faadd22dadc:   mov    %ebx,0x14(%rsp)
  0x00007faadd22dae0:   mov    %ecx,0x18(%rsp)
  0x00007faadd22dae4:   vmovdqu64 %zmm4,0x40(%rsp)
  0x00007faadd22daec:   vzeroupper 
  0x00007faadd22daef:   callq  0x00007faadd1362a0           ; ImmutableOopMap {rbp=Oop [0]=Oop }
                                                            ;*if_icmplt {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) jdk.incubator.vector.AbstractMask::indexInRange@17 (line 221)
                                                            ; - jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
                                                            ; - indexvec::micro@15 (line 11)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007faadd22daf4:   movabs $0x7faae8bf7378,%rdi         ;   {external_word}
  0x00007faadd22dafe:   and    $0xfffffffffffffff0,%rsp
  0x00007faadd22db02:   callq  0x00007faae827c9a0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007faadd22db07:   hlt    
 ;; B76: #	out( N1 ) <- in( B37 )  Freq: 4.78463e-07
  0x00007faadd22db08:   movabs $0x7faae8c6f020,%rdi         ;   {external_word}
  0x00007faadd22db12:   and    $0xfffffffffffffff0,%rsp
  0x00007faadd22db16:   callq  0x00007faae827c9a0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007faadd22db1b:   hlt    
 ;; B77: #	out( N1 ) <- in( B38 )  Freq: 4.78462e-07
  0x00007faadd22db1c:   movabs $0x7faae8c6f020,%rdi         ;   {external_word}
  0x00007faadd22db26:   and    $0xfffffffffffffff0,%rsp
  0x00007faadd22db2a:   callq  0x00007faae827c9a0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007faadd22db2f:   hlt    
 ;; B78: #	out( B64 ) <- in( B51 )  Freq: 1.11236e-07
  0x00007faadd22db30:   cmp    %r13,%rax                    ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
  0x00007faadd22db33:   setle  %r8b                         ;*invokevirtual vectorSpecies {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.AbstractMask::check@2 (line 116)
                                                            ; - jdk.incubator.vector.ByteVector::fromArray0Template@6 (line 3757)
                                                            ; - jdk.incubator.vector.Byte512Vector::fromArray0@11 (line 987)
                                                            ; - jdk.incubator.vector.ByteVector::fromArray@32 (line 3008)
                                                            ; - indexvec::micro@30 (line 12)
  0x00007faadd22db37:   jmpq   0x00007faadd22d8dc
 ;; B79: #	out( B65 ) <- in( B57 )  Freq: 5.56146e-08
  0x00007faadd22db3c:   cmp    %r13,%rax                    ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
  0x00007faadd22db3f:   setle  %r8b                         ;*invokevirtual check {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::fromArray0Template@6 (line 3757)
                                                            ; - jdk.incubator.vector.Byte512Vector::fromArray0@11 (line 987)
                                                            ; - jdk.incubator.vector.ByteVector::fromArray@32 (line 3008)
                                                            ; - indexvec::micro@30 (line 12)
  0x00007faadd22db43:   vmovdqu64 %zmm7,0x40(%rsp)
  0x00007faadd22db4b:   vmovdqu64 %zmm6,(%rsp)
  0x00007faadd22db52:   jmpq   0x00007faadd22d8eb
 ;; B80: #	out( B67 ) <- in( B58 )  Freq: 5.56145e-08
  0x00007faadd22db57:   vmovdqu64 %zmm7,0x40(%rsp)
  0x00007faadd22db5f:   vmovdqu64 %zmm6,(%rsp)
  0x00007faadd22db66:   jmpq   0x00007faadd22d947
 ;; B81: #	out( B69 ) <- in( B60 )  Freq: 5.55999e-08
  0x00007faadd22db6b:   vmovdqu64 %zmm6,(%rsp)
  0x00007faadd22db72:   jmpq   0x00007faadd22d9b7           ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
 ;; B82: #	out( N1 ) <- in( B48 )  Freq: 1.01321e-06
  0x00007faadd22db77:   mov    $0xfffffff6,%esi             ;*invokevirtual vectorBitSize {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@15 (line 4343)
                                                            ; - jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
                                                            ; - indexvec::micro@15 (line 11)
  0x00007faadd22db7c:   mov    %r8d,%ebp                    ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
  0x00007faadd22db7f:   nop
  0x00007faadd22db80:   vzeroupper 
  0x00007faadd22db83:   callq  0x00007faadd1362a0           ; ImmutableOopMap {}
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - indexvec::micro@59 (line 15)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007faadd22db88:   movabs $0x7faae8bf7378,%rdi         ;   {external_word}
  0x00007faadd22db92:   and    $0xfffffffffffffff0,%rsp
  0x00007faadd22db96:   callq  0x00007faae827c9a0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007faadd22db9b:   hlt    
 ;; B83: #	out( N1 ) <- in( B2 )  Freq: 9.56989e-07
  0x00007faadd22db9c:   mov    %rsi,%rbp
  0x00007faadd22db9f:   mov    %rdx,(%rsp)
  0x00007faadd22dba3:   mov    %r8d,0xc(%rsp)
  0x00007faadd22dba8:   mov    %ecx,0x10(%rsp)              ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
  0x00007faadd22dbac:   mov    $0xffffff76,%esi
  0x00007faadd22dbb1:   nop
  0x00007faadd22dbb2:   nop
  0x00007faadd22dbb3:   nop
  0x00007faadd22dbb4:   vzeroupper 
  0x00007faadd22dbb7:   callq  0x00007faadd1362a0           ; ImmutableOopMap {rbp=Oop [0]=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) indexvec::micro@6 (line 10)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007faadd22dbbc:   movabs $0x7faae8bf7378,%rdi         ;   {external_word}
  0x00007faadd22dbc6:   and    $0xfffffffffffffff0,%rsp
  0x00007faadd22dbca:   callq  0x00007faae827c9a0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007faadd22dbcf:   hlt                                 ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
  0x00007faadd22dbd0:   movabs $0x7faadd22d73e,%r10         ;   {internal_word}
  0x00007faadd22dbda:   mov    %r10,0x3d0(%r15)
  0x00007faadd22dbe1:   jmpq   0x00007faadd135120           ;   {runtime_call SafepointBlob}
  0x00007faadd22dbe6:   callq  Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x00007faadd22dbeb:   jmpq   0x00007faadd22d3de
[Exception Handler]
  0x00007faadd22dbf0:   jmpq   0x00007faadd040820           ;   {no_reloc}
[Deopt Handler Code]
  0x00007faadd22dbf5:   callq  0x00007faadd22dbfa
  0x00007faadd22dbfa:   subq   $0x5,(%rsp)
  0x00007faadd22dbff:   jmpq   0x00007faadd1365c0           ;   {runtime_call DeoptimizationBlob}
  0x00007faadd22dc04:   hlt    
  0x00007faadd22dc05:   hlt    
  0x00007faadd22dc06:   hlt    
  0x00007faadd22dc07:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Oops:
  0x00007faadd22dc08:   0x000000011f97e7b8 a 'java/lang/Class'{0x000000011f97e7b8} = 'jdk/incubator/vector/Byte512Vector'
  0x00007faadd22dc10:   0x000000011f97e848 a 'java/lang/Class'{0x000000011f97e848} = 'jdk/incubator/vector/Byte512Vector$Byte512Mask'
  0x00007faadd22dc18:   0x000000011f0001c0 a 'java/lang/Class'{0x000000011f0001c0} = byte
  0x00007faadd22dc20:   0x000000011f97e770 a 'jdk/incubator/vector/ByteVector$ByteSpecies'{0x000000011f97e770}
  0x00007faadd22dc28:   0x000000011f8a8688 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x000000011f8a8688}
  0x00007faadd22dc30:   0x000000011f1420d0 a 'java/lang/Class'{0x000000011f1420d0} = 'java/lang/invoke/LambdaForm$MH+0x00000008000c1400'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Metadata:
  0x00007faadd22dc38:   0x00007faa94701558 {method} {0x00007faa94701558} 'micro' '([B[BII)B' in 'indexvec'
  0x00007faadd22dc40:   0x00007faa94662a68 {method} {0x00007faa94662a68} 'intoArray' '([BILjdk/incubator/vector/VectorMask;)V' in 'jdk/incubator/vector/ByteVector'
  0x00007faadd22dc48:   0x00007faa946fea38 {method} {0x00007faa946fea38} 'intoArray0' '([BILjdk/incubator/vector/VectorMask;)V' in 'jdk/incubator/vector/Byte512Vector'
  0x00007faadd22dc50:   0x00007faa94664388 {method} {0x00007faa94664388} 'intoArray0Template' '(Ljava/lang/Class;[BILjdk/incubator/vector/VectorMask;)V' in 'jdk/incubator/vector/ByteVector'
  0x00007faadd22dc58:   0x00007faa946b4240 {method} {0x00007faa946b4240} 'indexInRange' '(II)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/AbstractSpecies'
  0x00007faadd22dc60:   0x00007faa946d01e0 {method} {0x00007faa946d01e0} 'indexInRange' '(II)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/AbstractMask'
  0x00007faadd22dc68:   0x00007faa94786828 {method} {0x00007faa94786828} 'and' '(Ljdk/incubator/vector/VectorMask;)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/Byte512Vector$Byte512Mask'
  0x00007faadd22dc70:   0x00007faa946d1e98 {method} {0x00007faa946d1e98} 'length' '()I' in 'jdk/incubator/vector/VectorMask'
  0x00007faadd22dc78:   0x00007faa946aec08 {method} {0x00007faa946aec08} 'maskAll' '(Z)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/ByteVector$ByteSpecies'
  0x00007faadd22dc80:   0x00007faa94785fb8 {method} {0x00007faa94785fb8} 'maskAll' '(Z)Ljdk/incubator/vector/Byte512Vector$Byte512Mask;' in 'jdk/incubator/vector/Byte512Vector$Byte512Mask'
  0x00007faadd22dc88:   0x00007faa94661e28 {method} {0x00007faa94661e28} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[BILjdk/incubator/vector/VectorMask;)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector'
  0x00007faadd22dc90:   0x00007faa9479dc70 {method} {0x00007faa9479dc70} 'indexInRange' '(JJJ)Z' in 'jdk/incubator/vector/VectorIntrinsics'
  0x00007faadd22dc98:   0x00007faa946fe418 {method} {0x00007faa946fe418} 'fromArray0' '([BILjdk/incubator/vector/VectorMask;I)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/Byte512Vector'
  0x00007faadd22dca0:   0x00007faa94663800 {method} {0x00007faa94663800} 'fromArray0Template' '(Ljava/lang/Class;[BILjdk/incubator/vector/VectorMask;I)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector'
  0x00007faadd22dca8:   0x00007faa946cf568 {method} {0x00007faa946cf568} 'check' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/AbstractMask'
  0x00007faadd22dcb0:   0x00007faa946cf068 {method} {0x00007faa946cf068} 'vectorSpecies' '()Ljdk/incubator/vector/VectorSpecies;' in 'jdk/incubator/vector/AbstractMask'
  0x00007faadd22dcb8:   0x00007faa9450d240 {method} {0x00007faa9450d240} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x00000008000c1400'
  0x00007faadd22dcc0:   0x00007faa94670c28 {method} {0x00007faa94670c28} 'species' '()Ljdk/incubator/vector/VectorSpecies;' in 'jdk/incubator/vector/AbstractVector'
  0x00007faadd22dcc8:   0x00007faa947815b0 {method} {0x00007faa947815b0} 'vspecies' '()Ljdk/incubator/vector/AbstractSpecies;' in 'jdk/incubator/vector/Byte512Vector'
  0x00007faadd22dcd0:   0x00007faa947856e8 {method} {0x00007faa947856e8} 'and' '(Ljdk/incubator/vector/VectorMask;)Ljdk/incubator/vector/Byte512Vector$Byte512Mask;' in 'jdk/incubator/vector/Byte512Vector$Byte512Mask'
  0x00007faadd22dcd8:   0x00007faa946649d0 {method} {0x00007faa946649d0} 'checkMaskFromIndexSize' '(ILjdk/incubator/vector/ByteVector$ByteSpecies;Ljdk/incubator/vector/VectorMask;II)V' in 'jdk/incubator/vector/ByteVector'
  0x00007faadd22dce0:   0x00007faa946d06e0 {method} {0x00007faa946d06e0} 'checkIndexByLane' '(IILjdk/incubator/vector/Vector;I)V' in 'jdk/incubator/vector/AbstractMask'
  0x00007faadd22dce8:   0x00007faa94785ae8 {method} {0x00007faa94785ae8} 'firstTrue' '()I' in 'jdk/incubator/vector/Byte512Vector$Byte512Mask'
  0x00007faadd22dcf0:   0x000000080009a5a0 'jdk/incubator/vector/AbstractSpecies'
  0x00007faadd22dcf8:   0x000000080009a988 'jdk/incubator/vector/ByteVector$ByteSpecies'
  0x00007faadd22dd00:   0x000000080009a198 'jdk/incubator/vector/VectorSpecies'
  0x00007faadd22dd08:   0x00007faa946b1d50 {method} {0x00007faa946b1d50} 'indexInRange' '(II)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/VectorSpecies'
  0x00007faadd22dd10:   0x00007faa946b3520 {method} {0x00007faa946b3520} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
  0x00007faadd22dd18:   0x00007faa946b1a00 {method} {0x00007faa946b1a00} 'length' '()I' in 'jdk/incubator/vector/VectorSpecies'
  0x00007faadd22dd20:   0x000000080009c858 'jdk/incubator/vector/VectorMask'
  0x00007faadd22dd28:   0x00007faa946d28b8 {method} {0x00007faa946d28b8} 'and' '(Ljdk/incubator/vector/VectorMask;)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/VectorMask'
  0x00007faadd22dd30:   0x000000080009f210 'jdk/incubator/vector/Byte512Vector$Byte512Mask'
  0x00007faadd22dd38:   0x00007faa946d2c28 {method} {0x00007faa946d2c28} 'indexInRange' '(II)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/VectorMask'
  0x00007faadd22dd40:   0x00007faa946d1db8 {method} {0x00007faa946d1db8} 'vectorSpecies' '()Ljdk/incubator/vector/VectorSpecies;' in 'jdk/incubator/vector/VectorMask'
  0x00007faadd22dd48:   0x00007faa946d2f90 {method} {0x00007faa946d2f90} 'check' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/VectorMask'
  0x00007faadd22dd50:   0x000000080009cb20 'jdk/incubator/vector/AbstractMask'
  0x00007faadd22dd58:   0x00000008000a3898 'jdk/incubator/vector/VectorOperators$ComparisonImpl'
  0x00007faadd22dd60:   0x00007faa947a5128 {method} {0x00007faa947a5128} 'opCode' '(II)I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  0x00007faadd22dd68:   0x00000008000a2478 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  0x00007faadd22dd70:   0x00007faa947a5208 {method} {0x00007faa947a5208} 'opCodeRaw' '()I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
pc-bytecode offsets:
PcDesc(pc=0x00007faadd22d3bf offset=ffffffff bits=0):
PcDesc(pc=0x00007faadd22d3de offset=1e bits=0):
   indexvec::micro@6 (line 10)
PcDesc(pc=0x00007faadd22d40a offset=4a bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd22d40d offset=4d bits=0):
   jdk.incubator.vector.Byte512Vector$Byte512Mask::and@2 (line 677)
   jdk.incubator.vector.AbstractMask::indexInRange@52 (line 226)
   jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
   indexvec::micro@15 (line 11)
PcDesc(pc=0x00007faadd22d410 offset=50 bits=0):
   jdk.incubator.vector.VectorMask::length@9 (line 155)
   jdk.incubator.vector.AbstractMask::indexInRange@35 (line 223)
   jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
   indexvec::micro@15 (line 11)
PcDesc(pc=0x00007faadd22d47f offset=bf bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd22d487 offset=c7 bits=0):
   jdk.incubator.vector.Byte512Vector$Byte512Mask::maskAll@28 (line 896)
   jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@76 (line 4347)
   jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
   indexvec::micro@15 (line 11)
PcDesc(pc=0x00007faadd22d493 offset=d3 bits=0):
   jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@15 (line 4343)
   jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
   indexvec::micro@15 (line 11)
PcDesc(pc=0x00007faadd22d495 offset=d5 bits=0):
   jdk.incubator.vector.ByteVector::fromArray@15 (line 3007)
   indexvec::micro@30 (line 12)
PcDesc(pc=0x00007faadd22d49d offset=dd bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd22d4a7 offset=e7 bits=0):
   jdk.incubator.vector.ByteVector::fromArray@10 (line 3007)
   indexvec::micro@30 (line 12)
PcDesc(pc=0x00007faadd22d4ad offset=ed bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd22d4b0 offset=f0 bits=0):
   jdk.incubator.vector.ByteVector::fromArray@15 (line 3007)
   indexvec::micro@30 (line 12)
PcDesc(pc=0x00007faadd22d4ce offset=10e bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd22d4d9 offset=119 bits=0):
   jdk.incubator.vector.VectorIntrinsics::indexInRange@3 (line 49)
   jdk.incubator.vector.ByteVector::fromArray@17 (line 3007)
   indexvec::micro@30 (line 12)
PcDesc(pc=0x00007faadd22d4f0 offset=130 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd22d4fb offset=13b bits=0):
   jdk.incubator.vector.ByteVector::fromArray@17 (line 3007)
   indexvec::micro@30 (line 12)
PcDesc(pc=0x00007faadd22d502 offset=142 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd22d526 offset=166 bits=0):
   jdk.incubator.vector.Byte512Vector$Byte512Mask::maskAll@20 (line 897)
   jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@76 (line 4347)
   jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
   indexvec::micro@15 (line 11)
PcDesc(pc=0x00007faadd22d52f offset=16f bits=1):
   indexvec::micro@54 (line 10)  reexecute=true
   Locals
    - l0: reg xmm0 [48],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],int
    - l3: reg xmm2 [80],int
    - l4: reg rbx [6],int
    - l5: empty
PcDesc(pc=0x00007faadd22d53a offset=17a bits=0):
   jdk.incubator.vector.AbstractMask::vectorSpecies@1 (line 67)
   jdk.incubator.vector.AbstractMask::check@2 (line 116)
   jdk.incubator.vector.ByteVector::fromArray0Template@6 (line 3757)
   jdk.incubator.vector.Byte512Vector::fromArray0@11 (line 987)
   jdk.incubator.vector.ByteVector::fromArray@32 (line 3008)
   indexvec::micro@30 (line 12)
PcDesc(pc=0x00007faadd22d565 offset=1a5 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd22d577 offset=1b7 bits=0):
   indexvec::micro@15 (line 11)
PcDesc(pc=0x00007faadd22d581 offset=1c1 bits=0):
   jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
   indexvec::micro@15 (line 11)
PcDesc(pc=0x00007faadd22d587 offset=1c7 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd22d58a offset=1ca bits=0):
   jdk.incubator.vector.Byte512Vector$Byte512Mask::maskAll@28 (line 896)
   jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@76 (line 4347)
   jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
   indexvec::micro@15 (line 11)
PcDesc(pc=0x00007faadd22d5a9 offset=1e9 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd22d5b4 offset=1f4 bits=0):
   jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@1 (line 4341)
   jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
   indexvec::micro@15 (line 11)
PcDesc(pc=0x00007faadd22d5ea offset=22a bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd22d5ef offset=22f bits=0):
   java.lang.invoke.LambdaForm$MH/0x00000008000c1400::linkToTargetMethod@4
   jdk.incubator.vector.Byte512Vector$Byte512Mask::maskAll@20 (line 897)
   jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@76 (line 4347)
   jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
   indexvec::micro@15 (line 11)
PcDesc(pc=0x00007faadd22d5ff offset=23f bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd22d60a offset=24a bits=0):
   indexvec::micro@15 (line 11)
PcDesc(pc=0x00007faadd22d632 offset=272 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd22d637 offset=277 bits=0):
   jdk.incubator.vector.Byte512Vector$Byte512Mask::maskAll@28 (line 896)
   jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@76 (line 4347)
   jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
   indexvec::micro@15 (line 11)
PcDesc(pc=0x00007faadd22d64b offset=28b bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd22d656 offset=296 bits=0):
   java.lang.invoke.LambdaForm$MH/0x00000008000c1400::linkToTargetMethod@4
   jdk.incubator.vector.Byte512Vector$Byte512Mask::maskAll@20 (line 897)
   jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@76 (line 4347)
   jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
   indexvec::micro@15 (line 11)
PcDesc(pc=0x00007faadd22d663 offset=2a3 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd22d677 offset=2b7 bits=0):
   jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
   indexvec::micro@15 (line 11)
PcDesc(pc=0x00007faadd22d683 offset=2c3 bits=0):
   jdk.incubator.vector.Byte512Vector::vspecies@1 (line 41)
   jdk.incubator.vector.AbstractVector::species@1 (line 84)
   jdk.incubator.vector.ByteVector::fromArray0Template@3 (line 3757)
   jdk.incubator.vector.Byte512Vector::fromArray0@11 (line 987)
   jdk.incubator.vector.ByteVector::fromArray@32 (line 3008)
   indexvec::micro@30 (line 12)
PcDesc(pc=0x00007faadd22d6aa offset=2ea bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd22d6ac offset=2ec bits=0):
   jdk.incubator.vector.Byte512Vector$Byte512Mask::and@1 (line 815)
   jdk.incubator.vector.Byte512Vector$Byte512Mask::and@2 (line 677)
   jdk.incubator.vector.AbstractMask::indexInRange@52 (line 226)
   jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
   indexvec::micro@15 (line 11)
PcDesc(pc=0x00007faadd22d6b4 offset=2f4 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd22d6be offset=2fe bits=0):
   jdk.incubator.vector.Byte512Vector$Byte512Mask::and@2 (line 677)
   jdk.incubator.vector.AbstractMask::indexInRange@52 (line 226)
   jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
   indexvec::micro@15 (line 11)
PcDesc(pc=0x00007faadd22d6c4 offset=304 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd22d6c7 offset=307 bits=0):
   jdk.incubator.vector.Byte512Vector$Byte512Mask::maskAll@28 (line 896)
   jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@76 (line 4347)
   jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
   indexvec::micro@15 (line 11)
PcDesc(pc=0x00007faadd22d6e9 offset=329 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd22d6f4 offset=334 bits=0):
   jdk.incubator.vector.Byte512Vector$Byte512Mask::and@29 (line 817)
   jdk.incubator.vector.Byte512Vector$Byte512Mask::and@2 (line 677)
   jdk.incubator.vector.AbstractMask::indexInRange@52 (line 226)
   jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
   indexvec::micro@15 (line 11)
PcDesc(pc=0x00007faadd22d704 offset=344 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd22d70f offset=34f bits=0):
   java.lang.invoke.LambdaForm$MH/0x00000008000c1400::linkToTargetMethod@4
   jdk.incubator.vector.Byte512Vector$Byte512Mask::and@24 (line 817)
   jdk.incubator.vector.Byte512Vector$Byte512Mask::and@2 (line 677)
   jdk.incubator.vector.AbstractMask::indexInRange@52 (line 226)
   jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
   indexvec::micro@15 (line 11)
PcDesc(pc=0x00007faadd22d72d offset=36d bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd22d733 offset=373 bits=0):
   indexvec::micro@6 (line 10)
PcDesc(pc=0x00007faadd22d776 offset=3b6 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd22d77b offset=3bb bits=0):
   java.lang.invoke.LambdaForm$MH/0x00000008000c1400::linkToTargetMethod@4
   jdk.incubator.vector.Byte512Vector$Byte512Mask::maskAll@20 (line 897)
   jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@76 (line 4347)
   jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
   indexvec::micro@15 (line 11)
PcDesc(pc=0x00007faadd22d790 offset=3d0 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd22d79b offset=3db bits=0):
   jdk.incubator.vector.ByteVector::fromArray@10 (line 3007)
   indexvec::micro@30 (line 12)
PcDesc(pc=0x00007faadd22d7c8 offset=408 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd22d7cd offset=40d bits=0):
   jdk.incubator.vector.Byte512Vector$Byte512Mask::maskAll@28 (line 896)
   jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@76 (line 4347)
   jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
   indexvec::micro@15 (line 11)
PcDesc(pc=0x00007faadd22d7d8 offset=418 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd22d7e3 offset=423 bits=0):
   indexvec::micro@30 (line 12)
PcDesc(pc=0x00007faadd22d7f0 offset=430 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd22d804 offset=444 bits=0):
   jdk.incubator.vector.ByteVector::fromArray@15 (line 3007)
   indexvec::micro@30 (line 12)
PcDesc(pc=0x00007faadd22d810 offset=450 bits=0):
   jdk.incubator.vector.AbstractMask::check@2 (line 116)
   jdk.incubator.vector.ByteVector::fromArray0Template@6 (line 3757)
   jdk.incubator.vector.Byte512Vector::fromArray0@11 (line 987)
   jdk.incubator.vector.ByteVector::fromArray@32 (line 3008)
   indexvec::micro@30 (line 12)
PcDesc(pc=0x00007faadd22d83f offset=47f bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd22d844 offset=484 bits=0):
   jdk.incubator.vector.AbstractMask::indexInRange@52 (line 226)
   jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
   indexvec::micro@15 (line 11)
PcDesc(pc=0x00007faadd22d854 offset=494 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd22d85f offset=49f bits=0):
   jdk.incubator.vector.AbstractMask::indexInRange@52 (line 226)
   jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
   indexvec::micro@15 (line 11)
PcDesc(pc=0x00007faadd22d888 offset=4c8 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd22d88d offset=4cd bits=0):
   jdk.incubator.vector.AbstractMask::indexInRange@52 (line 226)
   jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
   indexvec::micro@15 (line 11)
PcDesc(pc=0x00007faadd22d898 offset=4d8 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd22d8a3 offset=4e3 bits=0):
   jdk.incubator.vector.Byte512Vector$Byte512Mask::and@2 (line 677)
   jdk.incubator.vector.AbstractMask::indexInRange@52 (line 226)
   jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
   indexvec::micro@15 (line 11)
PcDesc(pc=0x00007faadd22d8c4 offset=504 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd22d8d0 offset=510 bits=0):
   jdk.incubator.vector.Byte512Vector::fromArray0@11 (line 987)
   jdk.incubator.vector.ByteVector::fromArray@32 (line 3008)
   indexvec::micro@30 (line 12)
PcDesc(pc=0x00007faadd22d8eb offset=52b bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd22d8f0 offset=530 bits=0):
   jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@76 (line 4347)
   jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
   indexvec::micro@15 (line 11)
PcDesc(pc=0x00007faadd22d924 offset=564 bits=1):
   jdk.incubator.vector.ByteVector::intoArray@36 (line 3420)  reexecute=true
   Locals
    - l0: obj[488]
    - l1: reg rbp [10],oop
    - l2: stack[148]
    - l3: obj[489]
    - l4: empty
   Expression stack
    - @0: stack[160]
   indexvec::micro@38 (line 13)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[128],oop
    - l2: stack[136]
    - l3: stack[140]
    - l4: stack[148]
    - l5: empty
   Objects
    - 488: jdk.incubator.vector.Byte512Vector stack[64],vector
    - 489: jdk.incubator.vector.Byte512Vector$Byte512Mask stack[0],vector
PcDesc(pc=0x00007faadd22d94c offset=58c bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd22d958 offset=598 bits=0):
   jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@1 (line 4341)
   jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
   indexvec::micro@15 (line 11)
PcDesc(pc=0x00007faadd22d993 offset=5d3 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd22d99c offset=5dc bits=0):
   jdk.incubator.vector.Byte512Vector$Byte512Mask::firstTrue@11 (line 854)
   Locals
    - l0: empty
   Expression stack
    - @0: 21
    - @1: a 'java/lang/Class'{0x000000011f97e848} = 'jdk/incubator/vector/Byte512Vector$Byte512Mask'
    - @2: a 'java/lang/Class'{0x000000011f0001c0} = byte
    - @3: 64
    - @4: obj[386]
   jdk.incubator.vector.AbstractMask::checkIndexByLane@119 (line 295)
   Locals
    - l0: empty
    - l1: stack[148]
    - l2: stack[164]
    - l3: empty
    - l4: 1
    - l5: empty
    - l6: obj[386]
    - l7: empty
   jdk.incubator.vector.ByteVector::checkMaskFromIndexSize@12 (line 3926)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   jdk.incubator.vector.ByteVector::intoArray@46 (line 3421)
   Locals
    - l0: obj[384]
    - l1: reg rbp [10],oop
    - l2: stack[160]
    - l3: obj[385]
    - l4: empty
   indexvec::micro@38 (line 13)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[128],oop
    - l2: stack[136]
    - l3: stack[140]
    - l4: stack[148]
    - l5: empty
   Objects
    - 384: jdk.incubator.vector.Byte512Vector stack[64],vector
    - 385: jdk.incubator.vector.Byte512Vector$Byte512Mask stack[0],vector
    - 386: jdk.incubator.vector.Byte512Vector$Byte512Mask stack[192],vector
PcDesc(pc=0x00007faadd22d9bc offset=5fc bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd22d9c8 offset=608 bits=0):
   jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@76 (line 4347)
   jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
   indexvec::micro@15 (line 11)
PcDesc(pc=0x00007faadd22d9f2 offset=632 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd22d9fc offset=63c bits=0):
   jdk.incubator.vector.Byte512Vector$Byte512Mask::firstTrue@11 (line 854)
   Locals
    - l0: empty
   Expression stack
    - @0: 21
    - @1: a 'java/lang/Class'{0x000000011f97e848} = 'jdk/incubator/vector/Byte512Vector$Byte512Mask'
    - @2: a 'java/lang/Class'{0x000000011f0001c0} = byte
    - @3: 64
    - @4: obj[443]
   jdk.incubator.vector.AbstractMask::checkIndexByLane@119 (line 295)
   Locals
    - l0: empty
    - l1: stack[84]
    - l2: stack[100]
    - l3: empty
    - l4: 1
    - l5: empty
    - l6: obj[443]
    - l7: empty
   jdk.incubator.vector.ByteVector::checkMaskFromIndexSize@12 (line 3926)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   jdk.incubator.vector.ByteVector::fromArray@43 (line 3011)
   Locals
    - l0: empty
    - l1: stack[88],oop
    - l2: stack[96]
    - l3: obj[442]
    - l4: a 'jdk/incubator/vector/ByteVector$ByteSpecies'{0x000000011f97e770}
   indexvec::micro@30 (line 12)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[88],oop
    - l2: stack[72]
    - l3: stack[76]
    - l4: stack[84]
    - l5: obj[442]
   Objects
    - 442: jdk.incubator.vector.Byte512Vector$Byte512Mask stack[0],vector
    - 443: jdk.incubator.vector.Byte512Vector$Byte512Mask stack[128],vector
PcDesc(pc=0x00007faadd22da17 offset=657 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd22da24 offset=664 bits=0):
   indexvec::micro@59 (line 15)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
   Expression stack
    - @0: reg rbp [10],oop
    - @1: stack[0]
PcDesc(pc=0x00007faadd22da48 offset=688 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd22da58 offset=698 bits=1):
   indexvec::micro@6 (line 10)  reexecute=true
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[16]
    - l3: stack[12]
    - l4: 0
    - l5: empty
   Expression stack
    - @0: 0
    - @1: stack[16]
PcDesc(pc=0x00007faadd22da7c offset=6bc bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd22da8c offset=6cc bits=1):
   indexvec::micro@6 (line 10)  reexecute=true
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[16]
    - l3: stack[12]
    - l4: 0
    - l5: empty
   Expression stack
    - @0: 0
    - @1: stack[16]
PcDesc(pc=0x00007faadd22dac8 offset=708 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd22dacd offset=70d bits=0):
   jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@15 (line 4343)
   jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
   indexvec::micro@15 (line 11)
PcDesc(pc=0x00007faadd22daf4 offset=734 bits=1):
   jdk.incubator.vector.AbstractMask::indexInRange@17 (line 221)  reexecute=true
   Locals
    - l0: obj[460]
    - l1: empty
    - l2: empty
   Expression stack
    - @0: stack[20]
    - @1: stack[24]
   jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   indexvec::micro@15 (line 11)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[24]
    - l3: stack[12]
    - l4: stack[20]
    - l5: empty
   Objects
    - 460: jdk.incubator.vector.Byte512Vector$Byte512Mask stack[64],vector
PcDesc(pc=0x00007faadd22db33 offset=773 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd22db37 offset=777 bits=0):
   jdk.incubator.vector.AbstractMask::check@2 (line 116)
   jdk.incubator.vector.ByteVector::fromArray0Template@6 (line 3757)
   jdk.incubator.vector.Byte512Vector::fromArray0@11 (line 987)
   jdk.incubator.vector.ByteVector::fromArray@32 (line 3008)
   indexvec::micro@30 (line 12)
PcDesc(pc=0x00007faadd22db3f offset=77f bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd22db43 offset=783 bits=0):
   jdk.incubator.vector.ByteVector::fromArray0Template@6 (line 3757)
   jdk.incubator.vector.Byte512Vector::fromArray0@11 (line 987)
   jdk.incubator.vector.ByteVector::fromArray@32 (line 3008)
   indexvec::micro@30 (line 12)
PcDesc(pc=0x00007faadd22db77 offset=7b7 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd22db7c offset=7bc bits=0):
   jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@15 (line 4343)
   jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
   indexvec::micro@15 (line 11)
PcDesc(pc=0x00007faadd22db7f offset=7bf bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd22db88 offset=7c8 bits=0):
   indexvec::micro@59 (line 15)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
   Expression stack
    - @0: nullptr
    - @1: reg rbp [10],int
PcDesc(pc=0x00007faadd22dbac offset=7ec bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd22dbbc offset=7fc bits=1):
   indexvec::micro@6 (line 10)  reexecute=true
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[16]
    - l3: stack[12]
    - l4: 0
    - l5: empty
   Expression stack
    - @0: 0
    - @1: stack[16]
PcDesc(pc=0x00007faadd22dbd0 offset=810 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd22dc09 offset=849 bits=0):
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
oop maps:ImmutableOopMapSet contains 10 OopMaps

ImmutableOopMap {rdx=Oop rsi=Oop xmm0=Oop } pc offsets: 367 
ImmutableOopMap {rbp=Oop [128]=Oop } pc offsets: 1380 1500 
ImmutableOopMap {rbp=Oop [88]=Oop } pc offsets: 1596 
ImmutableOopMap {rbp=Oop } pc offsets: 1636 
ImmutableOopMap {rbp=Oop [0]=Oop } pc offsets: 1688 1740 1844 
ImmutableOopMap {} pc offsets: 1992 
ImmutableOopMap {rbp=Oop [0]=Oop } pc offsets: 2044 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
scopes:
ScopeDesc(pc=0x00007faadd22d3de offset=1e):
   indexvec::micro@6 (line 10)
ScopeDesc(pc=0x00007faadd22d40a offset=4a):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd22d40a offset=4a):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd22d40a offset=4a):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd22d40a offset=4a):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd22d40d offset=4d):
   jdk.incubator.vector.Byte512Vector$Byte512Mask::and@2 (line 677)
ScopeDesc(pc=0x00007faadd22d40d offset=4d):
   jdk.incubator.vector.AbstractMask::indexInRange@52 (line 226)
ScopeDesc(pc=0x00007faadd22d40d offset=4d):
   jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
ScopeDesc(pc=0x00007faadd22d40d offset=4d):
   indexvec::micro@15 (line 11)
ScopeDesc(pc=0x00007faadd22d410 offset=50):
   jdk.incubator.vector.VectorMask::length@9 (line 155)
ScopeDesc(pc=0x00007faadd22d410 offset=50):
   jdk.incubator.vector.AbstractMask::indexInRange@35 (line 223)
ScopeDesc(pc=0x00007faadd22d410 offset=50):
   jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
ScopeDesc(pc=0x00007faadd22d410 offset=50):
   indexvec::micro@15 (line 11)
ScopeDesc(pc=0x00007faadd22d47f offset=bf):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd22d47f offset=bf):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd22d47f offset=bf):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd22d47f offset=bf):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd22d487 offset=c7):
   jdk.incubator.vector.Byte512Vector$Byte512Mask::maskAll@28 (line 896)
ScopeDesc(pc=0x00007faadd22d487 offset=c7):
   jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@76 (line 4347)
ScopeDesc(pc=0x00007faadd22d487 offset=c7):
   jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
ScopeDesc(pc=0x00007faadd22d487 offset=c7):
   indexvec::micro@15 (line 11)
ScopeDesc(pc=0x00007faadd22d493 offset=d3):
   jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@15 (line 4343)
ScopeDesc(pc=0x00007faadd22d493 offset=d3):
   jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
ScopeDesc(pc=0x00007faadd22d493 offset=d3):
   indexvec::micro@15 (line 11)
ScopeDesc(pc=0x00007faadd22d495 offset=d5):
   jdk.incubator.vector.ByteVector::fromArray@15 (line 3007)
ScopeDesc(pc=0x00007faadd22d495 offset=d5):
   indexvec::micro@30 (line 12)
ScopeDesc(pc=0x00007faadd22d49d offset=dd):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd22d49d offset=dd):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd22d49d offset=dd):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd22d49d offset=dd):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd22d4a7 offset=e7):
   jdk.incubator.vector.ByteVector::fromArray@10 (line 3007)
ScopeDesc(pc=0x00007faadd22d4a7 offset=e7):
   indexvec::micro@30 (line 12)
ScopeDesc(pc=0x00007faadd22d4ad offset=ed):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd22d4ad offset=ed):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd22d4ad offset=ed):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd22d4ad offset=ed):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd22d4b0 offset=f0):
   jdk.incubator.vector.ByteVector::fromArray@15 (line 3007)
ScopeDesc(pc=0x00007faadd22d4b0 offset=f0):
   indexvec::micro@30 (line 12)
ScopeDesc(pc=0x00007faadd22d4ce offset=10e):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd22d4ce offset=10e):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd22d4ce offset=10e):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd22d4ce offset=10e):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd22d4d9 offset=119):
   jdk.incubator.vector.VectorIntrinsics::indexInRange@3 (line 49)
ScopeDesc(pc=0x00007faadd22d4d9 offset=119):
   jdk.incubator.vector.ByteVector::fromArray@17 (line 3007)
ScopeDesc(pc=0x00007faadd22d4d9 offset=119):
   indexvec::micro@30 (line 12)
ScopeDesc(pc=0x00007faadd22d4f0 offset=130):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd22d4f0 offset=130):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd22d4f0 offset=130):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd22d4f0 offset=130):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd22d4fb offset=13b):
   jdk.incubator.vector.ByteVector::fromArray@17 (line 3007)
ScopeDesc(pc=0x00007faadd22d4fb offset=13b):
   indexvec::micro@30 (line 12)
ScopeDesc(pc=0x00007faadd22d502 offset=142):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd22d502 offset=142):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd22d502 offset=142):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd22d502 offset=142):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd22d526 offset=166):
   jdk.incubator.vector.Byte512Vector$Byte512Mask::maskAll@20 (line 897)
ScopeDesc(pc=0x00007faadd22d526 offset=166):
   jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@76 (line 4347)
ScopeDesc(pc=0x00007faadd22d526 offset=166):
   jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
ScopeDesc(pc=0x00007faadd22d526 offset=166):
   indexvec::micro@15 (line 11)
ScopeDesc(pc=0x00007faadd22d52f offset=16f):
   indexvec::micro@54 (line 10)  reexecute=true
   Locals
    - l0: reg xmm0 [48],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],int
    - l3: reg xmm2 [80],int
    - l4: reg rbx [6],int
    - l5: empty
ScopeDesc(pc=0x00007faadd22d53a offset=17a):
   jdk.incubator.vector.AbstractMask::vectorSpecies@1 (line 67)
ScopeDesc(pc=0x00007faadd22d53a offset=17a):
   jdk.incubator.vector.AbstractMask::check@2 (line 116)
ScopeDesc(pc=0x00007faadd22d53a offset=17a):
   jdk.incubator.vector.ByteVector::fromArray0Template@6 (line 3757)
ScopeDesc(pc=0x00007faadd22d53a offset=17a):
   jdk.incubator.vector.Byte512Vector::fromArray0@11 (line 987)
ScopeDesc(pc=0x00007faadd22d53a offset=17a):
   jdk.incubator.vector.ByteVector::fromArray@32 (line 3008)
ScopeDesc(pc=0x00007faadd22d53a offset=17a):
   indexvec::micro@30 (line 12)
ScopeDesc(pc=0x00007faadd22d565 offset=1a5):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd22d565 offset=1a5):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd22d565 offset=1a5):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd22d565 offset=1a5):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd22d577 offset=1b7):
   indexvec::micro@15 (line 11)
ScopeDesc(pc=0x00007faadd22d581 offset=1c1):
   jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
ScopeDesc(pc=0x00007faadd22d581 offset=1c1):
   indexvec::micro@15 (line 11)
ScopeDesc(pc=0x00007faadd22d587 offset=1c7):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd22d587 offset=1c7):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd22d587 offset=1c7):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd22d587 offset=1c7):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd22d58a offset=1ca):
   jdk.incubator.vector.Byte512Vector$Byte512Mask::maskAll@28 (line 896)
ScopeDesc(pc=0x00007faadd22d58a offset=1ca):
   jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@76 (line 4347)
ScopeDesc(pc=0x00007faadd22d58a offset=1ca):
   jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
ScopeDesc(pc=0x00007faadd22d58a offset=1ca):
   indexvec::micro@15 (line 11)
ScopeDesc(pc=0x00007faadd22d5a9 offset=1e9):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd22d5a9 offset=1e9):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd22d5a9 offset=1e9):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd22d5a9 offset=1e9):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd22d5b4 offset=1f4):
   jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@1 (line 4341)
ScopeDesc(pc=0x00007faadd22d5b4 offset=1f4):
   jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
ScopeDesc(pc=0x00007faadd22d5b4 offset=1f4):
   indexvec::micro@15 (line 11)
ScopeDesc(pc=0x00007faadd22d5ea offset=22a):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd22d5ea offset=22a):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd22d5ea offset=22a):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd22d5ea offset=22a):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd22d5ef offset=22f):
   java.lang.invoke.LambdaForm$MH/0x00000008000c1400::linkToTargetMethod@4
ScopeDesc(pc=0x00007faadd22d5ef offset=22f):
   jdk.incubator.vector.Byte512Vector$Byte512Mask::maskAll@20 (line 897)
ScopeDesc(pc=0x00007faadd22d5ef offset=22f):
   jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@76 (line 4347)
ScopeDesc(pc=0x00007faadd22d5ef offset=22f):
   jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
ScopeDesc(pc=0x00007faadd22d5ef offset=22f):
   indexvec::micro@15 (line 11)
ScopeDesc(pc=0x00007faadd22d5ff offset=23f):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd22d5ff offset=23f):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd22d5ff offset=23f):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd22d5ff offset=23f):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd22d60a offset=24a):
   indexvec::micro@15 (line 11)
ScopeDesc(pc=0x00007faadd22d632 offset=272):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd22d632 offset=272):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd22d632 offset=272):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd22d632 offset=272):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd22d637 offset=277):
   jdk.incubator.vector.Byte512Vector$Byte512Mask::maskAll@28 (line 896)
ScopeDesc(pc=0x00007faadd22d637 offset=277):
   jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@76 (line 4347)
ScopeDesc(pc=0x00007faadd22d637 offset=277):
   jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
ScopeDesc(pc=0x00007faadd22d637 offset=277):
   indexvec::micro@15 (line 11)
ScopeDesc(pc=0x00007faadd22d64b offset=28b):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd22d64b offset=28b):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd22d64b offset=28b):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd22d64b offset=28b):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd22d656 offset=296):
   java.lang.invoke.LambdaForm$MH/0x00000008000c1400::linkToTargetMethod@4
ScopeDesc(pc=0x00007faadd22d656 offset=296):
   jdk.incubator.vector.Byte512Vector$Byte512Mask::maskAll@20 (line 897)
ScopeDesc(pc=0x00007faadd22d656 offset=296):
   jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@76 (line 4347)
ScopeDesc(pc=0x00007faadd22d656 offset=296):
   jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
ScopeDesc(pc=0x00007faadd22d656 offset=296):
   indexvec::micro@15 (line 11)
ScopeDesc(pc=0x00007faadd22d663 offset=2a3):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd22d663 offset=2a3):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd22d663 offset=2a3):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd22d663 offset=2a3):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd22d677 offset=2b7):
   jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
ScopeDesc(pc=0x00007faadd22d677 offset=2b7):
   indexvec::micro@15 (line 11)
ScopeDesc(pc=0x00007faadd22d683 offset=2c3):
   jdk.incubator.vector.Byte512Vector::vspecies@1 (line 41)
ScopeDesc(pc=0x00007faadd22d683 offset=2c3):
   jdk.incubator.vector.AbstractVector::species@1 (line 84)
ScopeDesc(pc=0x00007faadd22d683 offset=2c3):
   jdk.incubator.vector.ByteVector::fromArray0Template@3 (line 3757)
ScopeDesc(pc=0x00007faadd22d683 offset=2c3):
   jdk.incubator.vector.Byte512Vector::fromArray0@11 (line 987)
ScopeDesc(pc=0x00007faadd22d683 offset=2c3):
   jdk.incubator.vector.ByteVector::fromArray@32 (line 3008)
ScopeDesc(pc=0x00007faadd22d683 offset=2c3):
   indexvec::micro@30 (line 12)
ScopeDesc(pc=0x00007faadd22d6aa offset=2ea):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd22d6aa offset=2ea):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd22d6aa offset=2ea):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd22d6aa offset=2ea):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd22d6ac offset=2ec):
   jdk.incubator.vector.Byte512Vector$Byte512Mask::and@1 (line 815)
ScopeDesc(pc=0x00007faadd22d6ac offset=2ec):
   jdk.incubator.vector.Byte512Vector$Byte512Mask::and@2 (line 677)
ScopeDesc(pc=0x00007faadd22d6ac offset=2ec):
   jdk.incubator.vector.AbstractMask::indexInRange@52 (line 226)
ScopeDesc(pc=0x00007faadd22d6ac offset=2ec):
   jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
ScopeDesc(pc=0x00007faadd22d6ac offset=2ec):
   indexvec::micro@15 (line 11)
ScopeDesc(pc=0x00007faadd22d6b4 offset=2f4):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd22d6b4 offset=2f4):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd22d6b4 offset=2f4):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd22d6b4 offset=2f4):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd22d6be offset=2fe):
   jdk.incubator.vector.Byte512Vector$Byte512Mask::and@2 (line 677)
ScopeDesc(pc=0x00007faadd22d6be offset=2fe):
   jdk.incubator.vector.AbstractMask::indexInRange@52 (line 226)
ScopeDesc(pc=0x00007faadd22d6be offset=2fe):
   jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
ScopeDesc(pc=0x00007faadd22d6be offset=2fe):
   indexvec::micro@15 (line 11)
ScopeDesc(pc=0x00007faadd22d6c4 offset=304):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd22d6c4 offset=304):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd22d6c4 offset=304):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd22d6c4 offset=304):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd22d6c7 offset=307):
   jdk.incubator.vector.Byte512Vector$Byte512Mask::maskAll@28 (line 896)
ScopeDesc(pc=0x00007faadd22d6c7 offset=307):
   jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@76 (line 4347)
ScopeDesc(pc=0x00007faadd22d6c7 offset=307):
   jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
ScopeDesc(pc=0x00007faadd22d6c7 offset=307):
   indexvec::micro@15 (line 11)
ScopeDesc(pc=0x00007faadd22d6e9 offset=329):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd22d6e9 offset=329):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd22d6e9 offset=329):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd22d6e9 offset=329):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd22d6f4 offset=334):
   jdk.incubator.vector.Byte512Vector$Byte512Mask::and@29 (line 817)
ScopeDesc(pc=0x00007faadd22d6f4 offset=334):
   jdk.incubator.vector.Byte512Vector$Byte512Mask::and@2 (line 677)
ScopeDesc(pc=0x00007faadd22d6f4 offset=334):
   jdk.incubator.vector.AbstractMask::indexInRange@52 (line 226)
ScopeDesc(pc=0x00007faadd22d6f4 offset=334):
   jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
ScopeDesc(pc=0x00007faadd22d6f4 offset=334):
   indexvec::micro@15 (line 11)
ScopeDesc(pc=0x00007faadd22d704 offset=344):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd22d704 offset=344):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd22d704 offset=344):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd22d704 offset=344):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd22d70f offset=34f):
   java.lang.invoke.LambdaForm$MH/0x00000008000c1400::linkToTargetMethod@4
ScopeDesc(pc=0x00007faadd22d70f offset=34f):
   jdk.incubator.vector.Byte512Vector$Byte512Mask::and@24 (line 817)
ScopeDesc(pc=0x00007faadd22d70f offset=34f):
   jdk.incubator.vector.Byte512Vector$Byte512Mask::and@2 (line 677)
ScopeDesc(pc=0x00007faadd22d70f offset=34f):
   jdk.incubator.vector.AbstractMask::indexInRange@52 (line 226)
ScopeDesc(pc=0x00007faadd22d70f offset=34f):
   jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
ScopeDesc(pc=0x00007faadd22d70f offset=34f):
   indexvec::micro@15 (line 11)
ScopeDesc(pc=0x00007faadd22d72d offset=36d):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd22d72d offset=36d):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd22d72d offset=36d):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd22d72d offset=36d):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd22d733 offset=373):
   indexvec::micro@6 (line 10)
ScopeDesc(pc=0x00007faadd22d776 offset=3b6):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd22d776 offset=3b6):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd22d776 offset=3b6):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd22d776 offset=3b6):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd22d77b offset=3bb):
   java.lang.invoke.LambdaForm$MH/0x00000008000c1400::linkToTargetMethod@4
ScopeDesc(pc=0x00007faadd22d77b offset=3bb):
   jdk.incubator.vector.Byte512Vector$Byte512Mask::maskAll@20 (line 897)
ScopeDesc(pc=0x00007faadd22d77b offset=3bb):
   jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@76 (line 4347)
ScopeDesc(pc=0x00007faadd22d77b offset=3bb):
   jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
ScopeDesc(pc=0x00007faadd22d77b offset=3bb):
   indexvec::micro@15 (line 11)
ScopeDesc(pc=0x00007faadd22d790 offset=3d0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd22d790 offset=3d0):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd22d790 offset=3d0):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd22d790 offset=3d0):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd22d79b offset=3db):
   jdk.incubator.vector.ByteVector::fromArray@10 (line 3007)
ScopeDesc(pc=0x00007faadd22d79b offset=3db):
   indexvec::micro@30 (line 12)
ScopeDesc(pc=0x00007faadd22d7c8 offset=408):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd22d7c8 offset=408):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd22d7c8 offset=408):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd22d7c8 offset=408):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd22d7cd offset=40d):
   jdk.incubator.vector.Byte512Vector$Byte512Mask::maskAll@28 (line 896)
ScopeDesc(pc=0x00007faadd22d7cd offset=40d):
   jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@76 (line 4347)
ScopeDesc(pc=0x00007faadd22d7cd offset=40d):
   jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
ScopeDesc(pc=0x00007faadd22d7cd offset=40d):
   indexvec::micro@15 (line 11)
ScopeDesc(pc=0x00007faadd22d7d8 offset=418):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd22d7d8 offset=418):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd22d7d8 offset=418):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd22d7d8 offset=418):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd22d7e3 offset=423):
   indexvec::micro@30 (line 12)
ScopeDesc(pc=0x00007faadd22d7f0 offset=430):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd22d7f0 offset=430):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd22d7f0 offset=430):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd22d7f0 offset=430):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd22d804 offset=444):
   jdk.incubator.vector.ByteVector::fromArray@15 (line 3007)
ScopeDesc(pc=0x00007faadd22d804 offset=444):
   indexvec::micro@30 (line 12)
ScopeDesc(pc=0x00007faadd22d810 offset=450):
   jdk.incubator.vector.AbstractMask::check@2 (line 116)
ScopeDesc(pc=0x00007faadd22d810 offset=450):
   jdk.incubator.vector.ByteVector::fromArray0Template@6 (line 3757)
ScopeDesc(pc=0x00007faadd22d810 offset=450):
   jdk.incubator.vector.Byte512Vector::fromArray0@11 (line 987)
ScopeDesc(pc=0x00007faadd22d810 offset=450):
   jdk.incubator.vector.ByteVector::fromArray@32 (line 3008)
ScopeDesc(pc=0x00007faadd22d810 offset=450):
   indexvec::micro@30 (line 12)
ScopeDesc(pc=0x00007faadd22d83f offset=47f):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd22d83f offset=47f):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd22d83f offset=47f):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd22d83f offset=47f):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd22d844 offset=484):
   jdk.incubator.vector.AbstractMask::indexInRange@52 (line 226)
ScopeDesc(pc=0x00007faadd22d844 offset=484):
   jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
ScopeDesc(pc=0x00007faadd22d844 offset=484):
   indexvec::micro@15 (line 11)
ScopeDesc(pc=0x00007faadd22d854 offset=494):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd22d854 offset=494):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd22d854 offset=494):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd22d854 offset=494):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd22d85f offset=49f):
   jdk.incubator.vector.AbstractMask::indexInRange@52 (line 226)
ScopeDesc(pc=0x00007faadd22d85f offset=49f):
   jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
ScopeDesc(pc=0x00007faadd22d85f offset=49f):
   indexvec::micro@15 (line 11)
ScopeDesc(pc=0x00007faadd22d888 offset=4c8):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd22d888 offset=4c8):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd22d888 offset=4c8):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd22d888 offset=4c8):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd22d88d offset=4cd):
   jdk.incubator.vector.AbstractMask::indexInRange@52 (line 226)
ScopeDesc(pc=0x00007faadd22d88d offset=4cd):
   jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
ScopeDesc(pc=0x00007faadd22d88d offset=4cd):
   indexvec::micro@15 (line 11)
ScopeDesc(pc=0x00007faadd22d898 offset=4d8):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd22d898 offset=4d8):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd22d898 offset=4d8):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd22d898 offset=4d8):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd22d8a3 offset=4e3):
   jdk.incubator.vector.Byte512Vector$Byte512Mask::and@2 (line 677)
ScopeDesc(pc=0x00007faadd22d8a3 offset=4e3):
   jdk.incubator.vector.AbstractMask::indexInRange@52 (line 226)
ScopeDesc(pc=0x00007faadd22d8a3 offset=4e3):
   jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
ScopeDesc(pc=0x00007faadd22d8a3 offset=4e3):
   indexvec::micro@15 (line 11)
ScopeDesc(pc=0x00007faadd22d8c4 offset=504):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd22d8c4 offset=504):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd22d8c4 offset=504):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd22d8c4 offset=504):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd22d8d0 offset=510):
   jdk.incubator.vector.Byte512Vector::fromArray0@11 (line 987)
ScopeDesc(pc=0x00007faadd22d8d0 offset=510):
   jdk.incubator.vector.ByteVector::fromArray@32 (line 3008)
ScopeDesc(pc=0x00007faadd22d8d0 offset=510):
   indexvec::micro@30 (line 12)
ScopeDesc(pc=0x00007faadd22d8eb offset=52b):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd22d8eb offset=52b):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd22d8eb offset=52b):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd22d8eb offset=52b):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd22d8f0 offset=530):
   jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@76 (line 4347)
ScopeDesc(pc=0x00007faadd22d8f0 offset=530):
   jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
ScopeDesc(pc=0x00007faadd22d8f0 offset=530):
   indexvec::micro@15 (line 11)
ScopeDesc(pc=0x00007faadd22d924 offset=564):
   jdk.incubator.vector.ByteVector::intoArray@36 (line 3420)  reexecute=true
   Locals
    - l0: obj[488]
    - l1: reg rbp [10],oop
    - l2: stack[148]
    - l3: obj[489]
    - l4: empty
   Expression stack
    - @0: stack[160]
ScopeDesc(pc=0x00007faadd22d924 offset=564):
   indexvec::micro@38 (line 13)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[128],oop
    - l2: stack[136]
    - l3: stack[140]
    - l4: stack[148]
    - l5: empty
   Objects
    - 488: jdk.incubator.vector.Byte512Vector stack[64],vector
    - 489: jdk.incubator.vector.Byte512Vector$Byte512Mask stack[0],vector
ScopeDesc(pc=0x00007faadd22d94c offset=58c):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd22d94c offset=58c):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd22d94c offset=58c):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd22d94c offset=58c):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd22d958 offset=598):
   jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@1 (line 4341)
ScopeDesc(pc=0x00007faadd22d958 offset=598):
   jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
ScopeDesc(pc=0x00007faadd22d958 offset=598):
   indexvec::micro@15 (line 11)
ScopeDesc(pc=0x00007faadd22d993 offset=5d3):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd22d993 offset=5d3):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd22d993 offset=5d3):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd22d993 offset=5d3):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd22d99c offset=5dc):
   jdk.incubator.vector.Byte512Vector$Byte512Mask::firstTrue@11 (line 854)
   Locals
    - l0: empty
   Expression stack
    - @0: 21
    - @1: a 'java/lang/Class'{0x000000011f97e848} = 'jdk/incubator/vector/Byte512Vector$Byte512Mask'
    - @2: a 'java/lang/Class'{0x000000011f0001c0} = byte
    - @3: 64
    - @4: obj[386]
ScopeDesc(pc=0x00007faadd22d99c offset=5dc):
   jdk.incubator.vector.AbstractMask::checkIndexByLane@119 (line 295)
   Locals
    - l0: empty
    - l1: stack[148]
    - l2: stack[164]
    - l3: empty
    - l4: 1
    - l5: empty
    - l6: obj[386]
    - l7: empty
ScopeDesc(pc=0x00007faadd22d99c offset=5dc):
   jdk.incubator.vector.ByteVector::checkMaskFromIndexSize@12 (line 3926)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
ScopeDesc(pc=0x00007faadd22d99c offset=5dc):
   jdk.incubator.vector.ByteVector::intoArray@46 (line 3421)
   Locals
    - l0: obj[384]
    - l1: reg rbp [10],oop
    - l2: stack[160]
    - l3: obj[385]
    - l4: empty
ScopeDesc(pc=0x00007faadd22d99c offset=5dc):
   indexvec::micro@38 (line 13)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[128],oop
    - l2: stack[136]
    - l3: stack[140]
    - l4: stack[148]
    - l5: empty
   Objects
    - 384: jdk.incubator.vector.Byte512Vector stack[64],vector
    - 385: jdk.incubator.vector.Byte512Vector$Byte512Mask stack[0],vector
    - 386: jdk.incubator.vector.Byte512Vector$Byte512Mask stack[192],vector
ScopeDesc(pc=0x00007faadd22d9bc offset=5fc):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd22d9bc offset=5fc):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd22d9bc offset=5fc):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd22d9bc offset=5fc):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd22d9c8 offset=608):
   jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@76 (line 4347)
ScopeDesc(pc=0x00007faadd22d9c8 offset=608):
   jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
ScopeDesc(pc=0x00007faadd22d9c8 offset=608):
   indexvec::micro@15 (line 11)
ScopeDesc(pc=0x00007faadd22d9f2 offset=632):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd22d9f2 offset=632):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd22d9f2 offset=632):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd22d9f2 offset=632):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd22d9fc offset=63c):
   jdk.incubator.vector.Byte512Vector$Byte512Mask::firstTrue@11 (line 854)
   Locals
    - l0: empty
   Expression stack
    - @0: 21
    - @1: a 'java/lang/Class'{0x000000011f97e848} = 'jdk/incubator/vector/Byte512Vector$Byte512Mask'
    - @2: a 'java/lang/Class'{0x000000011f0001c0} = byte
    - @3: 64
    - @4: obj[443]
ScopeDesc(pc=0x00007faadd22d9fc offset=63c):
   jdk.incubator.vector.AbstractMask::checkIndexByLane@119 (line 295)
   Locals
    - l0: empty
    - l1: stack[84]
    - l2: stack[100]
    - l3: empty
    - l4: 1
    - l5: empty
    - l6: obj[443]
    - l7: empty
ScopeDesc(pc=0x00007faadd22d9fc offset=63c):
   jdk.incubator.vector.ByteVector::checkMaskFromIndexSize@12 (line 3926)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
ScopeDesc(pc=0x00007faadd22d9fc offset=63c):
   jdk.incubator.vector.ByteVector::fromArray@43 (line 3011)
   Locals
    - l0: empty
    - l1: stack[88],oop
    - l2: stack[96]
    - l3: obj[442]
    - l4: a 'jdk/incubator/vector/ByteVector$ByteSpecies'{0x000000011f97e770}
ScopeDesc(pc=0x00007faadd22d9fc offset=63c):
   indexvec::micro@30 (line 12)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[88],oop
    - l2: stack[72]
    - l3: stack[76]
    - l4: stack[84]
    - l5: obj[442]
   Objects
    - 442: jdk.incubator.vector.Byte512Vector$Byte512Mask stack[0],vector
    - 443: jdk.incubator.vector.Byte512Vector$Byte512Mask stack[128],vector
ScopeDesc(pc=0x00007faadd22da17 offset=657):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd22da17 offset=657):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd22da17 offset=657):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd22da17 offset=657):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd22da24 offset=664):
   indexvec::micro@59 (line 15)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
   Expression stack
    - @0: reg rbp [10],oop
    - @1: stack[0]
ScopeDesc(pc=0x00007faadd22da48 offset=688):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd22da48 offset=688):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd22da48 offset=688):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd22da48 offset=688):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd22da58 offset=698):
   indexvec::micro@6 (line 10)  reexecute=true
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[16]
    - l3: stack[12]
    - l4: 0
    - l5: empty
   Expression stack
    - @0: 0
    - @1: stack[16]
ScopeDesc(pc=0x00007faadd22da7c offset=6bc):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd22da7c offset=6bc):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd22da7c offset=6bc):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd22da7c offset=6bc):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd22da8c offset=6cc):
   indexvec::micro@6 (line 10)  reexecute=true
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[16]
    - l3: stack[12]
    - l4: 0
    - l5: empty
   Expression stack
    - @0: 0
    - @1: stack[16]
ScopeDesc(pc=0x00007faadd22dac8 offset=708):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd22dac8 offset=708):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd22dac8 offset=708):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd22dac8 offset=708):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd22dacd offset=70d):
   jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@15 (line 4343)
ScopeDesc(pc=0x00007faadd22dacd offset=70d):
   jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
ScopeDesc(pc=0x00007faadd22dacd offset=70d):
   indexvec::micro@15 (line 11)
ScopeDesc(pc=0x00007faadd22daf4 offset=734):
   jdk.incubator.vector.AbstractMask::indexInRange@17 (line 221)  reexecute=true
   Locals
    - l0: obj[460]
    - l1: empty
    - l2: empty
   Expression stack
    - @0: stack[20]
    - @1: stack[24]
ScopeDesc(pc=0x00007faadd22daf4 offset=734):
   jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00007faadd22daf4 offset=734):
   indexvec::micro@15 (line 11)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[24]
    - l3: stack[12]
    - l4: stack[20]
    - l5: empty
   Objects
    - 460: jdk.incubator.vector.Byte512Vector$Byte512Mask stack[64],vector
ScopeDesc(pc=0x00007faadd22db33 offset=773):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd22db33 offset=773):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd22db33 offset=773):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd22db33 offset=773):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd22db37 offset=777):
   jdk.incubator.vector.AbstractMask::check@2 (line 116)
ScopeDesc(pc=0x00007faadd22db37 offset=777):
   jdk.incubator.vector.ByteVector::fromArray0Template@6 (line 3757)
ScopeDesc(pc=0x00007faadd22db37 offset=777):
   jdk.incubator.vector.Byte512Vector::fromArray0@11 (line 987)
ScopeDesc(pc=0x00007faadd22db37 offset=777):
   jdk.incubator.vector.ByteVector::fromArray@32 (line 3008)
ScopeDesc(pc=0x00007faadd22db37 offset=777):
   indexvec::micro@30 (line 12)
ScopeDesc(pc=0x00007faadd22db3f offset=77f):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd22db3f offset=77f):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd22db3f offset=77f):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd22db3f offset=77f):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd22db43 offset=783):
   jdk.incubator.vector.ByteVector::fromArray0Template@6 (line 3757)
ScopeDesc(pc=0x00007faadd22db43 offset=783):
   jdk.incubator.vector.Byte512Vector::fromArray0@11 (line 987)
ScopeDesc(pc=0x00007faadd22db43 offset=783):
   jdk.incubator.vector.ByteVector::fromArray@32 (line 3008)
ScopeDesc(pc=0x00007faadd22db43 offset=783):
   indexvec::micro@30 (line 12)
ScopeDesc(pc=0x00007faadd22db77 offset=7b7):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd22db77 offset=7b7):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd22db77 offset=7b7):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd22db77 offset=7b7):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd22db7c offset=7bc):
   jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@15 (line 4343)
ScopeDesc(pc=0x00007faadd22db7c offset=7bc):
   jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
ScopeDesc(pc=0x00007faadd22db7c offset=7bc):
   indexvec::micro@15 (line 11)
ScopeDesc(pc=0x00007faadd22db7f offset=7bf):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd22db7f offset=7bf):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd22db7f offset=7bf):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd22db7f offset=7bf):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd22db88 offset=7c8):
   indexvec::micro@59 (line 15)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
   Expression stack
    - @0: nullptr
    - @1: reg rbp [10],int
ScopeDesc(pc=0x00007faadd22dbac offset=7ec):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd22dbac offset=7ec):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd22dbac offset=7ec):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd22dbac offset=7ec):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd22dbbc offset=7fc):
   indexvec::micro@6 (line 10)  reexecute=true
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[16]
    - l3: stack[12]
    - l4: 0
    - l5: empty
   Expression stack
    - @0: 0
    - @1: stack[16]
ScopeDesc(pc=0x00007faadd22dbd0 offset=810):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd22dbd0 offset=810):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd22dbd0 offset=810):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd22dbd0 offset=810):
   indexvec::micro@38 (line 13)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
relocations:
         @0x00007faadd22d2f0: 08b5
relocInfo@0x00007faadd22d2f0 [type=1(oop) addr=0x00007faadd22d475 offset=181] | [oop_addr=0x00007faadd22d477 *=0x000000011f983ef0 offset=0]
         @0x00007faadd22d2f2: 50ba
relocInfo@0x00007faadd22d2f2 [type=10(poll) addr=0x00007faadd22d52f offset=186]
         @0x00007faadd22d2f4: 01ff
relocInfo@0x00007faadd22d2f4 [type=0(none) addr=0x00007faadd22d72e offset=511]
         @0x00007faadd22d2f6: 5810
relocInfo@0x00007faadd22d2f6 [type=11(poll_return) addr=0x00007faadd22d73e offset=16]
         @0x00007faadd22d2f8: 33e1
relocInfo@0x00007faadd22d2f8 [type=6(runtime_call) addr=0x00007faadd22d91f offset=481 format=1] | [destination=0x00007faadd1362a0]
         @0x00007faadd22d2fa: 7c03e8bf73787faa3805
relocInfo@0x00007faadd22d302 [type=7(external_word) addr=0x00007faadd22d924 offset=5 data={e8bf73787faa}] | [target=0x00007faae8bf7378]
         @0x00007faadd22d304: 320e
relocInfo@0x00007faadd22d304 [type=6(runtime_call) addr=0x00007faadd22d932 offset=14 format=1] | [destination=0x00007faae827c9a0]
         @0x00007faadd22d306: 3265
relocInfo@0x00007faadd22d306 [type=6(runtime_call) addr=0x00007faadd22d997 offset=101 format=1] | [destination=0x00007faadd1362a0]
         @0x00007faadd22d308: 7c03e8bf73787faa3805
relocInfo@0x00007faadd22d310 [type=7(external_word) addr=0x00007faadd22d99c offset=5 data={e8bf73787faa}] | [target=0x00007faae8bf7378]
         @0x00007faadd22d312: 320e
relocInfo@0x00007faadd22d312 [type=6(runtime_call) addr=0x00007faadd22d9aa offset=14 format=1] | [destination=0x00007faae827c9a0]
         @0x00007faadd22d314: 324d
relocInfo@0x00007faadd22d314 [type=6(runtime_call) addr=0x00007faadd22d9f7 offset=77 format=1] | [destination=0x00007faadd1362a0]
         @0x00007faadd22d316: 7c03e8bf73787faa3805
relocInfo@0x00007faadd22d31e [type=7(external_word) addr=0x00007faadd22d9fc offset=5 data={e8bf73787faa}] | [target=0x00007faae8bf7378]
         @0x00007faadd22d320: 320e
relocInfo@0x00007faadd22d320 [type=6(runtime_call) addr=0x00007faadd22da0a offset=14 format=1] | [destination=0x00007faae827c9a0]
         @0x00007faadd22d322: 3215
relocInfo@0x00007faadd22d322 [type=6(runtime_call) addr=0x00007faadd22da1f offset=21 format=1] | [destination=0x00007faadd1362a0]
         @0x00007faadd22d324: 7c03e8bf73787faa3805
relocInfo@0x00007faadd22d32c [type=7(external_word) addr=0x00007faadd22da24 offset=5 data={e8bf73787faa}] | [target=0x00007faae8bf7378]
         @0x00007faadd22d32e: 320e
relocInfo@0x00007faadd22d32e [type=6(runtime_call) addr=0x00007faadd22da32 offset=14 format=1] | [destination=0x00007faae827c9a0]
         @0x00007faadd22d330: 3221
relocInfo@0x00007faadd22d330 [type=6(runtime_call) addr=0x00007faadd22da53 offset=33 format=1] | [destination=0x00007faadd1362a0]
         @0x00007faadd22d332: 7c03e8bf73787faa3805
relocInfo@0x00007faadd22d33a [type=7(external_word) addr=0x00007faadd22da58 offset=5 data={e8bf73787faa}] | [target=0x00007faae8bf7378]
         @0x00007faadd22d33c: 320e
relocInfo@0x00007faadd22d33c [type=6(runtime_call) addr=0x00007faadd22da66 offset=14 format=1] | [destination=0x00007faae827c9a0]
         @0x00007faadd22d33e: 3221
relocInfo@0x00007faadd22d33e [type=6(runtime_call) addr=0x00007faadd22da87 offset=33 format=1] | [destination=0x00007faadd1362a0]
         @0x00007faadd22d340: 7c03e8bf73787faa3805
relocInfo@0x00007faadd22d348 [type=7(external_word) addr=0x00007faadd22da8c offset=5 data={e8bf73787faa}] | [target=0x00007faae8bf7378]
         @0x00007faadd22d34a: 320e
relocInfo@0x00007faadd22d34a [type=6(runtime_call) addr=0x00007faadd22da9a offset=14 format=1] | [destination=0x00007faae827c9a0]
         @0x00007faadd22d34c: 7c03e8c6f0207faa3806
relocInfo@0x00007faadd22d354 [type=7(external_word) addr=0x00007faadd22daa0 offset=6 data={e8c6f0207faa}] | [target=0x00007faae8c6f020]
         @0x00007faadd22d356: 320e
relocInfo@0x00007faadd22d356 [type=6(runtime_call) addr=0x00007faadd22daae offset=14 format=1] | [destination=0x00007faae827c9a0]
         @0x00007faadd22d358: 7c03e8c6f0207faa3806
relocInfo@0x00007faadd22d360 [type=7(external_word) addr=0x00007faadd22dab4 offset=6 data={e8c6f0207faa}] | [target=0x00007faae8c6f020]
         @0x00007faadd22d362: 320e
relocInfo@0x00007faadd22d362 [type=6(runtime_call) addr=0x00007faadd22dac2 offset=14 format=1] | [destination=0x00007faae827c9a0]
         @0x00007faadd22d364: 322d
relocInfo@0x00007faadd22d364 [type=6(runtime_call) addr=0x00007faadd22daef offset=45 format=1] | [destination=0x00007faadd1362a0]
         @0x00007faadd22d366: 7c03e8bf73787faa3805
relocInfo@0x00007faadd22d36e [type=7(external_word) addr=0x00007faadd22daf4 offset=5 data={e8bf73787faa}] | [target=0x00007faae8bf7378]
         @0x00007faadd22d370: 320e
relocInfo@0x00007faadd22d370 [type=6(runtime_call) addr=0x00007faadd22db02 offset=14 format=1] | [destination=0x00007faae827c9a0]
         @0x00007faadd22d372: 7c03e8c6f0207faa3806
relocInfo@0x00007faadd22d37a [type=7(external_word) addr=0x00007faadd22db08 offset=6 data={e8c6f0207faa}] | [target=0x00007faae8c6f020]
         @0x00007faadd22d37c: 320e
relocInfo@0x00007faadd22d37c [type=6(runtime_call) addr=0x00007faadd22db16 offset=14 format=1] | [destination=0x00007faae827c9a0]
         @0x00007faadd22d37e: 7c03e8c6f0207faa3806
relocInfo@0x00007faadd22d386 [type=7(external_word) addr=0x00007faadd22db1c offset=6 data={e8c6f0207faa}] | [target=0x00007faae8c6f020]
         @0x00007faadd22d388: 320e
relocInfo@0x00007faadd22d388 [type=6(runtime_call) addr=0x00007faadd22db2a offset=14 format=1] | [destination=0x00007faae827c9a0]
         @0x00007faadd22d38a: 3259
relocInfo@0x00007faadd22d38a [type=6(runtime_call) addr=0x00007faadd22db83 offset=89 format=1] | [destination=0x00007faadd1362a0]
         @0x00007faadd22d38c: 7c03e8bf73787faa3805
relocInfo@0x00007faadd22d394 [type=7(external_word) addr=0x00007faadd22db88 offset=5 data={e8bf73787faa}] | [target=0x00007faae8bf7378]
         @0x00007faadd22d396: 320e
relocInfo@0x00007faadd22d396 [type=6(runtime_call) addr=0x00007faadd22db96 offset=14 format=1] | [destination=0x00007faae827c9a0]
         @0x00007faadd22d398: 3221
relocInfo@0x00007faadd22d398 [type=6(runtime_call) addr=0x00007faadd22dbb7 offset=33 format=1] | [destination=0x00007faadd1362a0]
         @0x00007faadd22d39a: 7c03e8bf73787faa3805
relocInfo@0x00007faadd22d3a2 [type=7(external_word) addr=0x00007faadd22dbbc offset=5 data={e8bf73787faa}] | [target=0x00007faae8bf7378]
         @0x00007faadd22d3a4: 320e
relocInfo@0x00007faadd22d3a4 [type=6(runtime_call) addr=0x00007faadd22dbca offset=14 format=1] | [destination=0x00007faae827c9a0]
         @0x00007faadd22d3a6: 7c0104924006
relocInfo@0x00007faadd22d3aa [type=8(internal_word) addr=0x00007faadd22dbd0 offset=6 data=1170] | [target=0x00007faadd22d73e]
         @0x00007faadd22d3ac: 3211
relocInfo@0x00007faadd22d3ac [type=6(runtime_call) addr=0x00007faadd22dbe1 offset=17 format=1] | [destination=0x00007faadd135120]
         @0x00007faadd22d3ae: 3205
relocInfo@0x00007faadd22d3ae [type=6(runtime_call) addr=0x00007faadd22dbe6 offset=5 format=1] | [destination=0x00007faadd07c6c0]
         @0x00007faadd22d3b0: 000a
relocInfo@0x00007faadd22d3b0 [type=0(none) addr=0x00007faadd22dbf0 offset=10]
         @0x00007faadd22d3b2: 3200
relocInfo@0x00007faadd22d3b2 [type=6(runtime_call) addr=0x00007faadd22dbf0 offset=0 format=1] | [destination=0x00007faadd040820]
         @0x00007faadd22d3b4: 320f
relocInfo@0x00007faadd22d3b4 [type=6(runtime_call) addr=0x00007faadd22dbff offset=15 format=1] | [destination=0x00007faadd1365c0]
         @0x00007faadd22d3b6: 0000
relocInfo@0x00007faadd22d3b6 [type=0(none) addr=0x00007faadd22dbff offset=0]
         @0x00007faadd22d3b8: 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Dependencies:
Dependency of type abstract_with_unique_concrete_subtype
  context = *jdk.incubator.vector.AbstractSpecies
  class   = jdk.incubator.vector.ByteVector$ByteSpecies
   [nmethod<=klass]jdk.incubator.vector.AbstractSpecies
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.ByteVector$ByteSpecies
  method  = {method} {0x00007faa946b4240} 'indexInRange' '(II)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/AbstractSpecies'
  class   = jdk.incubator.vector.VectorSpecies
  method  = *{method} {0x00007faa946b1d50} 'indexInRange' '(II)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/VectorSpecies'
   [nmethod<=klass]jdk.incubator.vector.ByteVector$ByteSpecies
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.ByteVector$ByteSpecies
  method  = {method} {0x00007faa946b3520} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
  class   = jdk.incubator.vector.VectorSpecies
  method  = *{method} {0x00007faa946b1a00} 'length' '()I' in 'jdk/incubator/vector/VectorSpecies'
   [nmethod<=klass]jdk.incubator.vector.ByteVector$ByteSpecies
Dependency of type unique_concrete_method_4
  context = *jdk.incubator.vector.VectorMask
  method  = {method} {0x00007faa94786828} 'and' '(Ljdk/incubator/vector/VectorMask;)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/Byte512Vector$Byte512Mask'
  class   = jdk.incubator.vector.VectorMask
  method  = *{method} {0x00007faa946d28b8} 'and' '(Ljdk/incubator/vector/VectorMask;)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/VectorMask'
   [nmethod<=klass]jdk.incubator.vector.VectorMask
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.Byte512Vector$Byte512Mask
  method  = {method} {0x00007faa946d01e0} 'indexInRange' '(II)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/AbstractMask'
  class   = jdk.incubator.vector.VectorMask
  method  = *{method} {0x00007faa946d2c28} 'indexInRange' '(II)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/VectorMask'
   [nmethod<=klass]jdk.incubator.vector.Byte512Vector$Byte512Mask
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.Byte512Vector$Byte512Mask
  method  = {method} {0x00007faa946cf068} 'vectorSpecies' '()Ljdk/incubator/vector/VectorSpecies;' in 'jdk/incubator/vector/AbstractMask'
  class   = jdk.incubator.vector.VectorMask
  method  = *{method} {0x00007faa946d1db8} 'vectorSpecies' '()Ljdk/incubator/vector/VectorSpecies;' in 'jdk/incubator/vector/VectorMask'
   [nmethod<=klass]jdk.incubator.vector.Byte512Vector$Byte512Mask
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.Byte512Vector$Byte512Mask
  method  = {method} {0x00007faa946cf568} 'check' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/AbstractMask'
  class   = jdk.incubator.vector.VectorMask
  method  = *{method} {0x00007faa946d2f90} 'check' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/VectorMask'
   [nmethod<=klass]jdk.incubator.vector.Byte512Vector$Byte512Mask
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.Byte512Vector$Byte512Mask
  method  = {method} {0x00007faa946d06e0} 'checkIndexByLane' '(IILjdk/incubator/vector/Vector;I)V' in 'jdk/incubator/vector/AbstractMask'
  class   = jdk.incubator.vector.AbstractMask
  method  = {method} {0x00007faa946d06e0} 'checkIndexByLane' '(IILjdk/incubator/vector/Vector;I)V' in 'jdk/incubator/vector/AbstractMask'
   [nmethod<=klass]jdk.incubator.vector.Byte512Vector$Byte512Mask
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.VectorOperators$ComparisonImpl
  method  = {method} {0x00007faa947a5128} 'opCode' '(II)I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  class   = jdk.incubator.vector.VectorOperators$OperatorImpl
  method  = {method} {0x00007faa947a5128} 'opCode' '(II)I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
   [nmethod<=klass]jdk.incubator.vector.VectorOperators$ComparisonImpl
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.VectorOperators$ComparisonImpl
  method  = {method} {0x00007faa947a5208} 'opCodeRaw' '()I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  class   = jdk.incubator.vector.VectorOperators$OperatorImpl
  method  = {method} {0x00007faa947a5208} 'opCodeRaw' '()I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
   [nmethod<=klass]jdk.incubator.vector.VectorOperators$ComparisonImpl
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ExceptionHandlerTable (size = 0 bytes)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ImplicitExceptionTable (size = 3 entries, 28 bytes):
{
   < 0x00007faadd22d3e8, 0x00007faadd22db9c > < 0x00007faadd22d3eb, 0x00007faadd22da38 > < 0x00007faadd22d720, 0x00007faadd22db77 > 
}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded oops:
#0: 0x0000000000000000 nullptr-oop
#1: 0x000000011f97e7b8 a 'java/lang/Class'{0x000000011f97e7b8} = 'jdk/incubator/vector/Byte512Vector'
#2: 0x000000011f97e848 a 'java/lang/Class'{0x000000011f97e848} = 'jdk/incubator/vector/Byte512Vector$Byte512Mask'
#3: 0x000000011f0001c0 a 'java/lang/Class'{0x000000011f0001c0} = byte
#4: 0x000000011f97e770 a 'jdk/incubator/vector/ByteVector$ByteSpecies'{0x000000011f97e770}
#5: 0x000000011f8a8688 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x000000011f8a8688}
#6: 0x000000011f1420d0 a 'java/lang/Class'{0x000000011f1420d0} = 'java/lang/invoke/LambdaForm$MH+0x00000008000c1400'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded metadata:
# 0: 0x0000000000000000 nullptr-oop
# 1: 0x00007faa94701558 {method} {0x00007faa94701558} 'micro' '([B[BII)B' in 'indexvec'
# 2: 0x00007faa94662a68 {method} {0x00007faa94662a68} 'intoArray' '([BILjdk/incubator/vector/VectorMask;)V' in 'jdk/incubator/vector/ByteVector'
# 3: 0x00007faa946fea38 {method} {0x00007faa946fea38} 'intoArray0' '([BILjdk/incubator/vector/VectorMask;)V' in 'jdk/incubator/vector/Byte512Vector'
# 4: 0x00007faa94664388 {method} {0x00007faa94664388} 'intoArray0Template' '(Ljava/lang/Class;[BILjdk/incubator/vector/VectorMask;)V' in 'jdk/incubator/vector/ByteVector'
# 5: 0x00007faa946b4240 {method} {0x00007faa946b4240} 'indexInRange' '(II)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/AbstractSpecies'
# 6: 0x00007faa946d01e0 {method} {0x00007faa946d01e0} 'indexInRange' '(II)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/AbstractMask'
# 7: 0x00007faa94786828 {method} {0x00007faa94786828} 'and' '(Ljdk/incubator/vector/VectorMask;)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/Byte512Vector$Byte512Mask'
# 8: 0x00007faa946d1e98 {method} {0x00007faa946d1e98} 'length' '()I' in 'jdk/incubator/vector/VectorMask'
# 9: 0x00007faa946aec08 {method} {0x00007faa946aec08} 'maskAll' '(Z)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/ByteVector$ByteSpecies'
#10: 0x00007faa94785fb8 {method} {0x00007faa94785fb8} 'maskAll' '(Z)Ljdk/incubator/vector/Byte512Vector$Byte512Mask;' in 'jdk/incubator/vector/Byte512Vector$Byte512Mask'
#11: 0x00007faa94661e28 {method} {0x00007faa94661e28} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[BILjdk/incubator/vector/VectorMask;)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector'
#12: 0x00007faa9479dc70 {method} {0x00007faa9479dc70} 'indexInRange' '(JJJ)Z' in 'jdk/incubator/vector/VectorIntrinsics'
#13: 0x00007faa946fe418 {method} {0x00007faa946fe418} 'fromArray0' '([BILjdk/incubator/vector/VectorMask;I)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/Byte512Vector'
#14: 0x00007faa94663800 {method} {0x00007faa94663800} 'fromArray0Template' '(Ljava/lang/Class;[BILjdk/incubator/vector/VectorMask;I)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector'
#15: 0x00007faa946cf568 {method} {0x00007faa946cf568} 'check' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/AbstractMask'
#16: 0x00007faa946cf068 {method} {0x00007faa946cf068} 'vectorSpecies' '()Ljdk/incubator/vector/VectorSpecies;' in 'jdk/incubator/vector/AbstractMask'
#17: 0x00007faa9450d240 {method} {0x00007faa9450d240} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x00000008000c1400'
#18: 0x00007faa94670c28 {method} {0x00007faa94670c28} 'species' '()Ljdk/incubator/vector/VectorSpecies;' in 'jdk/incubator/vector/AbstractVector'
#19: 0x00007faa947815b0 {method} {0x00007faa947815b0} 'vspecies' '()Ljdk/incubator/vector/AbstractSpecies;' in 'jdk/incubator/vector/Byte512Vector'
#20: 0x00007faa947856e8 {method} {0x00007faa947856e8} 'and' '(Ljdk/incubator/vector/VectorMask;)Ljdk/incubator/vector/Byte512Vector$Byte512Mask;' in 'jdk/incubator/vector/Byte512Vector$Byte512Mask'
#21: 0x00007faa946649d0 {method} {0x00007faa946649d0} 'checkMaskFromIndexSize' '(ILjdk/incubator/vector/ByteVector$ByteSpecies;Ljdk/incubator/vector/VectorMask;II)V' in 'jdk/incubator/vector/ByteVector'
#22: 0x00007faa946d06e0 {method} {0x00007faa946d06e0} 'checkIndexByLane' '(IILjdk/incubator/vector/Vector;I)V' in 'jdk/incubator/vector/AbstractMask'
#23: 0x00007faa94785ae8 {method} {0x00007faa94785ae8} 'firstTrue' '()I' in 'jdk/incubator/vector/Byte512Vector$Byte512Mask'
#24: 0x000000080009a5a0 'jdk/incubator/vector/AbstractSpecies'
#25: 0x000000080009a988 'jdk/incubator/vector/ByteVector$ByteSpecies'
#26: 0x000000080009a198 'jdk/incubator/vector/VectorSpecies'
#27: 0x00007faa946b1d50 {method} {0x00007faa946b1d50} 'indexInRange' '(II)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/VectorSpecies'
#28: 0x00007faa946b3520 {method} {0x00007faa946b3520} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
#29: 0x00007faa946b1a00 {method} {0x00007faa946b1a00} 'length' '()I' in 'jdk/incubator/vector/VectorSpecies'
#30: 0x000000080009c858 'jdk/incubator/vector/VectorMask'
#31: 0x00007faa946d28b8 {method} {0x00007faa946d28b8} 'and' '(Ljdk/incubator/vector/VectorMask;)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/VectorMask'
#32: 0x000000080009f210 'jdk/incubator/vector/Byte512Vector$Byte512Mask'
#33: 0x00007faa946d2c28 {method} {0x00007faa946d2c28} 'indexInRange' '(II)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/VectorMask'
#34: 0x00007faa946d1db8 {method} {0x00007faa946d1db8} 'vectorSpecies' '()Ljdk/incubator/vector/VectorSpecies;' in 'jdk/incubator/vector/VectorMask'
#35: 0x00007faa946d2f90 {method} {0x00007faa946d2f90} 'check' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/VectorMask'
#36: 0x000000080009cb20 'jdk/incubator/vector/AbstractMask'
#37: 0x00000008000a3898 'jdk/incubator/vector/VectorOperators$ComparisonImpl'
#38: 0x00007faa947a5128 {method} {0x00007faa947a5128} 'opCode' '(II)I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
#39: 0x00000008000a2478 'jdk/incubator/vector/VectorOperators$OperatorImpl'
#40: 0x00007faa947a5208 {method} {0x00007faa947a5208} 'opCodeRaw' '()I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

============================= C2-compiled nmethod ==============================
#r018 rsi:rsi   : parm 0: byte[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact *
#r016 rdx:rdx   : parm 1: byte[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact *
#r010 rcx   : parm 2: int
#r004 r8   : parm 3: int
# -- Old rsp -- Framesize: 288 --
#r591 rsp+284: in_preserve
#r590 rsp+280: return address
#r589 rsp+276: in_preserve
#r588 rsp+272: saved fp register
#r587 rsp+268: pad2, stack alignment
#r586 rsp+264: pad2, stack alignment
#r585 rsp+260: Fixed slot 1
#r584 rsp+256: Fixed slot 0
#r655 rsp+252: spill
#r654 rsp+248: spill
#r653 rsp+244: spill
#r652 rsp+240: spill
#r651 rsp+236: spill
#r650 rsp+232: spill
#r649 rsp+228: spill
#r648 rsp+224: spill
#r647 rsp+220: spill
#r646 rsp+216: spill
#r645 rsp+212: spill
#r644 rsp+208: spill
#r643 rsp+204: spill
#r642 rsp+200: spill
#r641 rsp+196: spill
#r640 rsp+192: spill
#r639 rsp+188: spill
#r638 rsp+184: spill
#r637 rsp+180: spill
#r636 rsp+176: spill
#r635 rsp+172: spill
#r634 rsp+168: spill
#r633 rsp+164: spill
#r632 rsp+160: spill
#r631 rsp+156: spill
#r630 rsp+152: spill
#r629 rsp+148: spill
#r628 rsp+144: spill
#r627 rsp+140: spill
#r626 rsp+136: spill
#r625 rsp+132: spill
#r624 rsp+128: spill
#r623 rsp+124: spill
#r622 rsp+120: spill
#r621 rsp+116: spill
#r620 rsp+112: spill
#r619 rsp+108: spill
#r618 rsp+104: spill
#r617 rsp+100: spill
#r616 rsp+96: spill
#r615 rsp+92: spill
#r614 rsp+88: spill
#r613 rsp+84: spill
#r612 rsp+80: spill
#r611 rsp+76: spill
#r610 rsp+72: spill
#r609 rsp+68: spill
#r608 rsp+64: spill
#r607 rsp+60: spill
#r606 rsp+56: spill
#r605 rsp+52: spill
#r604 rsp+48: spill
#r603 rsp+44: spill
#r602 rsp+40: spill
#r601 rsp+36: spill
#r600 rsp+32: spill
#r599 rsp+28: spill
#r598 rsp+24: spill
#r597 rsp+20: spill
#r596 rsp+16: spill
#r595 rsp+12: spill
#r594 rsp+ 8: spill
#r593 rsp+ 4: spill
#r592 rsp+ 0: spill
#
----------------------- MetaData before Compile_id = 320 ------------------------
{method}
 - this oop:          0x00007faa94701558
 - method holder:     'indexvec'
 - constants:         0x00007faa94701068 constant pool [90]/operands[5] {0x00007faa94701068} for 'indexvec' cache=0x00007faa94701810
 - access:            0xc1000009  public static 
 - name:              'micro'
 - signature:         '([B[BII)B'
 - max stack:         5
 - max locals:        6
 - size of params:    4
 - method size:       14
 - highest level:     4
 - vtable index:      -2
 - i2i entry:         0x00007faadd021d40
 - adapters:          AHE@0x00007faae03aa5e0: 0xbbaa i2c: 0x00007faadd066880 c2i: 0x00007faadd066968 c2iUV: 0x00007faadd066936 c2iNCI: 0x00007faadd0669a2
 - compiled entry     0x00007faadd066968
 - code size:         61
 - code start:        0x00007faa94701510
 - code end (excl):   0x00007faa9470154d
 - method data:       0x00007faa94701a98
 - checked ex length: 0
 - linenumber start:  0x00007faa9470154d
 - localvar length:   0

------------------------ OptoAssembly for Compile_id = 320 -----------------------
#
#  byte ( byte[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact *, byte[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact *, int, int )
#
000     N1: #	out( B1 ) <- in( B95 B83 B74 B77 B92 B85 B32 B94 B81 B79 B82 B93 B58 )  Freq: 1

000     B1: #	out( B56 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
000     # stack bang (696 bytes)
	pushq   rbp	# Save rbp
	subq    rsp, #272	# Create frame

        nop 	# 2 bytes pad for loops and calls
020     testl   RCX, RCX
022     jle     B56  P=0.055557 C=315820.000000

028     B2: #	out( B95 B3 ) <- in( B1 )  Freq: 0.944443
028     movl    R13, [RDX + #12 (8-bit)]	# range
02c     NullCheck RDX

02c     B3: #	out( B83 B4 ) <- in( B2 )  Freq: 0.944442
02c     cmpl    RCX, #2147483584
032     jg     B83  P=0.000001 C=-1.000000

038     B4: #	out( B5 ) <- in( B3 )  Freq: 0.944441
038     movslq  R9, R13	# i2l
03b     movslq  RBP, RCX	# i2l
03e     addq    R9, #-64	# long
042     movl    RBX, #-1	# int
047     movq    RDI, byte[int:64] (java/lang/Cloneable,java/io/Serializable)<ciTypeArray length=64 type=<ciTypeArrayKlass name=[B loaded=true ident=1370 address=0x00007faae0446c18> ident=1650 address=0x00007faa7012d6e0> *	# ptr
051     movl    RAX, #64	# int
056     cmpl    RCX, RAX
058     movl    R10, RCX	# spill
05b     cmovlgt R10, RAX	# min
05f     xorl    R11, R11	# int
062     mask_all_evexI_GT32 K5, RBX 	! using R14 as TEMP
06a     vector_store_mask XMM3, K5 	! elem size is #1 byte[s]
076     xorl    RBX, RBX	# int

078     B5: #	out( B85 B6 ) <- in( B4 B16 ) Loop( B5-B16 inner pre of N373) Freq: 1.88888
078     cmpl    RBX, RCX
        nop 	# 6 bytes pad for loops and calls
080     jge     B85  P=0.000000 C=7871.000000

086     B6: #	out( B65 B7 ) <- in( B5 )  Freq: 1.88887
086     movdq   XMM1, RBP	# spill
08b     movdl   XMM2, R8	# spill
090     movdq   XMM0, RSI	# spill
095     movl    RBP, RCX	# spill
097     subl    RBP, RBX	# int
099     load_vector XMM4,[RDI + #16 (8-bit)]
0a3     movslq  RSI, RBX	# i2l
0a6     cmpl    RBP, #64
0a9     jl     B65  P=0.058824 C=7871.000000

0af     B7: #	out( B8 ) <- in( B6 )  Freq: 1.77776
0af     vmovdqu XMM5,XMM3	# spill
0b5     kmovq   K4, K5	# spill

0ba     B8: #	out( B63 B9 ) <- in( B7 B65 )  Freq: 1.88887
        nop 	# 6 bytes pad for loops and calls
0c0     cmpq    RSI, R9
0c3     jg     B63  P=0.058865 C=22679.000000

0c9     B9: #	out( B10 ) <- in( B8 )  Freq: 1.77769
0c9     vector_masked_load XMM6, [RDX + #16 + RSI], K4 	! vector masked copy

0d4     B10: #	out( B59 B11 ) <- in( B9 B64 )  Freq: 1.88887
0d4     ktest_ge8  K4, K4
	
0d9     jae,u   B59  P=0.058880 C=16593.000000

0df     B11: #	out( B92 B12 ) <- in( B10 )  Freq: 1.77766
0df     movdq   R8, XMM0	# spill
0e4     movl    RBP, [R8 + #12 (8-bit)]	# range
0e8     NullCheck R8

0e8     B12: #	out( B73 B13 ) <- in( B11 )  Freq: 1.77766
0e8     addl    RBP, #-63	# int
0eb     testl   RBP, RBP
0ed     jl     B73  P=0.000001 C=-1.000000

0f3     B13: #	out( B31 B14 ) <- in( B12 )  Freq: 1.77765
0f3     cmpl    RBX, RBP	# unsigned
0f5     jae,u   B31  P=0.000001 C=-1.000000

0fb     B14: #	out( B15 ) <- in( B13 )  Freq: 1.77765
0fb     store_vector [R8 + #16 + RSI],XMM6
	

106     B15: #	out( B17 B16 ) <- in( B62 B14 )  Freq: 1.88887
106     addl    RBX, #64	# int
109     cmpl    RBX, R10
10c     jge,s   B17	# loop end  P=0.500000 C=298273.000000

10e     B16: #	out( B5 ) <- in( B15 )  Freq: 0.944434
10e     movdq   RSI, XMM0	# spill
113     movdl   R8, XMM2	# spill
118     movdq   RBP, XMM1	# spill
        nop 	# 3 bytes pad for loops and calls
120     jmp     B5

125     B17: #	out( B40 B18 ) <- in( B15 )  Freq: 0.944434
125     cmpl    RBX, RCX
127     jge     B40  P=0.000001 C=-1.000000

12d     B18: #	out( B20 ) <- in( B17 )  Freq: 0.944433
12d     # castII of RBX
12d     # TLS is in R15
12d     movl    R14, #64000	# int
133     jmp,s   B20

135     B19: #	out( B40 B20 ) <- in( B22 )  Freq: 16.9824
135     movq    R10, [R15 + #960 (32-bit)]	# ptr
13c     testl   rax, [R10]	# Safepoint: poll for GC        # indexvec::micro @ bci:54 (line 10) L[0]=XMM0 L[1]=RDX L[2]=RCX L[3]=XMM2 L[4]=RBX L[5]=_
        # OopMap {rdi=Oop rdx=Oop xmm0=Oop off=316/0x13c}
        nop 	# 1 bytes pad for loops and calls
140     cmpl    RBX, RCX
142     jge     B40  P=0.055557 C=298273.000000

148     B20: #	out( B23 ) <- in( B18 B19 ) Loop( B20-B19 ) Freq: 16.9833
148     movl    R8, RCX	# spill
14b     subl    R8, RBX	# int
14e     cmpl    RCX, RBX
150     cmovll R8, R11	# signed, int
154     cmpl    R8, #64000	# unsigned
15b     cmovla R8, R14	# unsigned, int
15f     addl    R8, RBX	# int
162     jmp,s   B23
        nop 	# 12 bytes pad for loops and calls

170     B21: #	out( B22 ) <- in( B30 ) top-of-loop Freq: 287.677
170     store_vector [R10 + #16 + RSI],XMM6
	

17b     B22: #	out( B19 B23 ) <- in( B36 B21 )  Freq: 305.676
17b     addl    RBX, #64	# int
        nop 	# 2 bytes pad for loops and calls
180     cmpl    RBX, R8
183     jge,s   B19	# loop end  P=0.055557 C=298273.000000

185     B23: #	out( B39 B24 ) <- in( B20 B22 ) Loop( B23-B22 inner main of N221 strip mined) Freq: 305.676
185     load_vector XMM4,[RDI + #16 (8-bit)]
18f     movl    R10, RCX	# spill
192     subl    R10, RBX	# int
195     movslq  RSI, RBX	# i2l
        nop 	# 8 bytes pad for loops and calls
1a0     cmpl    R10, #64
1a4     jl     B39  P=0.058824 C=7871.000000

1aa     B24: #	out( B25 ) <- in( B23 )  Freq: 287.696
1aa     vmovdqu XMM5,XMM3	# spill
1b0     kmovq   K4, K5	# spill

1b5     B25: #	out( B37 B26 ) <- in( B24 B39 )  Freq: 305.676
1b5     cmpq    RSI, R9
1b8     jg     B37  P=0.058865 C=22679.000000

1be     B26: #	out( B27 ) <- in( B25 )  Freq: 287.683
1be     vector_masked_load XMM6, [RDX + #16 + RSI], K4 	! vector masked copy

1c9     B27: #	out( B33 B28 ) <- in( B26 B38 )  Freq: 305.676
1c9     ktest_ge8  K4, K4
	
1ce     jae,u   B33  P=0.058880 C=16593.000000

1d4     B28: #	out( B92 B29 ) <- in( B27 )  Freq: 287.678
1d4     movdq   R10, XMM0	# spill
        nop 	# 7 bytes pad for loops and calls
1e0     movl    RBP, [R10 + #12 (8-bit)]	# range
1e4     NullCheck R10

1e4     B29: #	out( B73 B30 ) <- in( B28 )  Freq: 287.678
1e4     addl    RBP, #-63	# int
1e7     testl   RBP, RBP
1e9     jl     B73  P=0.000001 C=-1.000000

1ef     B30: #	out( B21 B31 ) <- in( B29 )  Freq: 287.678
1ef     cmpl    RBX, RBP	# unsigned
1f1     jb,u   B21  P=0.999999 C=-1.000000

1f7     B31: #	out( B32 ) <- in( B13 B30 )  Freq: 0.000293299
1f7     vmovdqu [rsp + 0],XMM6	# spill

1fe     B32: #	out( N1 ) <- in( B86 B31 )  Freq: 0.000294199
1fe     movl    RSI, #-28	# int
203     movq    [rsp + #72], RDX	# spill
208     movl    [rsp + #80], RCX	# spill
20c     movss   [rsp + #84], XMM2	# spill
212     movsd   [rsp + #96], XMM0	# spill
218     movl    [rsp + #92], RBX	# spill
21c     call,static  wrapper for: uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')
        # java.util.Objects::checkIndex @ bci:3 (line 385) L[0]=_ L[1]=_ STK[0]=rsp + #92 STK[1]=RBP STK[2]=#NULL
        # jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize @ bci:43 (line 57) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.ByteVector::intoArray @ bci:7 (line 3376) L[0]=#ScObj0 L[1]=rsp + #96 L[2]=_ L[3]=_
        # ScObj0 jdk/incubator/vector/Byte512Vector={ [payload :0]=rsp + #0 }
        # jdk.incubator.vector.ByteVector::intoArray @ bci:10 (line 3417) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_
        # indexvec::micro @ bci:38 (line 13) L[0]=rsp + #96 L[1]=rsp + #72 L[2]=rsp + #80 L[3]=rsp + #84 L[4]=rsp + #92 L[5]=_
        # OopMap {[72]=Oop [96]=Oop off=548/0x224}
224     stop	# ShouldNotReachHere

238     B33: #	out( B93 B34 ) <- in( B27 )  Freq: 17.9983
238     movdq   R10, XMM0	# spill
        nop 	# 3 bytes pad for loops and calls
240     movl    RBP, [R10 + #12 (8-bit)]	# range
244     NullCheck R10

244     B34: #	out( B75 B35 ) <- in( B33 )  Freq: 17.9983
244     movslq  R10, RBP	# i2l
247     addq    R10, #-64	# long
24b     cmpq    RSI, R10
24e     jle     B75  P=0.000001 C=6913.000000

254     B35: #	out( B78 B36 ) <- in( B34 )  Freq: 17.9983
254     movl    R10, RBP	# spill
257     subl    R10, RBX	# int
25a     cmpl    R10, RAX
25d     cmovlgt R10, RAX	# min
261     cmpl    R10, R11
264     cmovllt R10, R11	# max
268     replicateB XMM7,R10
26e     vector_compared_evex K7,XMM4,XMM7,#7	!
275     mask_opers_evex K7, K7, K4	! using K6 as TEMP
        nop 	# 6 bytes pad for loops and calls
280     ktest_ge8  K7, K7
	
285     jne,u   B78  P=0.000001 C=-1.000000

28b     B36: #	out( B22 ) <- in( B35 )  Freq: 17.9983
28b     movdq   R10, XMM0	# spill
290     vector_masked_store [R10 + #16 + RSI], XMM6, K4 	! vector masked store
        nop 	# 5 bytes pad for loops and calls
2a0     jmp     B22

2a5     B37: #	out( B80 B38 ) <- in( B25 )  Freq: 17.9936
2a5     movl    R10, R13	# spill
2a8     subl    R10, RBX	# int
2ab     cmpl    R10, RAX
2ae     cmovlgt R10, RAX	# min
2b2     cmpl    R10, R11
2b5     cmovllt R10, R11	# max
2b9     replicateB XMM6,R10
2bf     vector_compared_evex K7,XMM4,XMM6,#7	!
2c6     mask_opers_evex K7, K7, K4	! using K6 as TEMP
2cb     ktest_ge8  K7, K7
	
2d0     jne,u   B80  P=0.000001 C=-1.000000

2d6     B38: #	out( B27 ) <- in( B37 )  Freq: 17.9936
2d6     vector_masked_load XMM6, [RDX + #16 + RSI], K4 	! vector masked copy
2e1     jmp     B27

2e6     B39: #	out( B25 ) <- in( B23 )  Freq: 17.981
2e6     movdq   R10, XMM1	# spill
2eb     subq    R10, RSI	# long
2ee     vector_mask_gen32 K4, R10 	! vector mask generator
302     vector_store_mask XMM5, K4 	! elem size is #1 byte[s]
30e     jmp     B25

313     B40: #	out( B54 B41 ) <- in( B17 B19 )  Freq: 0.943491
313     cmpl    RBX, RCX
315     jge     B54  P=0.500000 C=-1.000000

31b     B41: #	out( B42 ) <- in( B40 )  Freq: 0.471746
31b     # castII of RBX
        nop 	# 1 bytes pad for loops and calls

31c     B42: #	out( B84 B43 ) <- in( B41 B53 ) Loop( B42-B53 inner post of N373) Freq: 0.943488
        nop 	# 4 bytes pad for loops and calls
320     cmpl    RBX, RCX
322     jge     B84  P=0.000000 C=7871.000000

328     B43: #	out( B72 B44 ) <- in( B42 )  Freq: 0.943488
328     load_vector XMM4,[RDI + #16 (8-bit)]
332     movl    R10, RCX	# spill
335     subl    R10, RBX	# int
338     movslq  R8, RBX	# i2l
        nop 	# 5 bytes pad for loops and calls
340     cmpl    R10, #64
344     jl     B72  P=0.058824 C=7871.000000

34a     B44: #	out( B45 ) <- in( B43 )  Freq: 0.887988
34a     vmovdqu XMM5,XMM3	# spill
350     kmovq   K4, K5	# spill

355     B45: #	out( B70 B46 ) <- in( B44 B72 )  Freq: 0.943488
355     cmpq    R8, R9
358     jg     B70  P=0.058865 C=22679.000000

35e     B46: #	out( B47 ) <- in( B45 )  Freq: 0.887949
35e     vector_masked_load XMM6, [RDX + #16 + R8], K4 	! vector masked copy

369     B47: #	out( B66 B48 ) <- in( B46 B71 )  Freq: 0.943488
369     ktest_ge8  K4, K4
	
36e     jae,u   B66  P=0.058880 C=16593.000000

374     B48: #	out( B92 B49 ) <- in( B47 )  Freq: 0.887935
374     movdq   R10, XMM0	# spill
        nop 	# 7 bytes pad for loops and calls
380     movl    RBP, [R10 + #12 (8-bit)]	# range
384     NullCheck R10

384     B49: #	out( B87 B50 ) <- in( B48 )  Freq: 0.887934
384     addl    RBP, #-63	# int
387     testl   RBP, RBP
389     jl     B87  P=0.000001 C=-1.000000

38f     B50: #	out( B86 B51 ) <- in( B49 )  Freq: 0.887933
38f     cmpl    RBX, RBP	# unsigned
391     jae,u   B86  P=0.000001 C=-1.000000

397     B51: #	out( B52 ) <- in( B50 )  Freq: 0.887932
397     movdq   RSI, XMM0	# spill
39c     store_vector [R10 + #16 + R8],XMM6
	

3a7     B52: #	out( B55 B53 ) <- in( B69 B51 )  Freq: 0.943485
3a7     addl    RBX, #64	# int
3aa     cmpl    RBX, RCX
3ac     jge,s   B55	# loop end  P=0.500000 C=298273.000000

3ae     B53: #	out( B42 ) <- in( B52 )  Freq: 0.471742
3ae     movdq   XMM0, RSI	# spill
3b3     jmp     B42

3b8     B54: #	out( B55 ) <- in( B40 )  Freq: 0.471746
3b8     movdq   RSI, XMM0	# spill

3bd     B55: #	out( B56 ) <- in( B52 B54 )  Freq: 0.943488
3bd     movdl   R8, XMM2	# spill

3c2     B56: #	out( B94 B57 ) <- in( B55 B1 )  Freq: 0.999045
3c2     movl    R10, [RSI + #12 (8-bit)]	# range
3c6     NullCheck RSI

3c6     B57: #	out( B82 B58 ) <- in( B56 )  Freq: 0.999044
3c6     cmpl    R8, R10	# unsigned
3c9     jae,u   B82  P=0.000001 C=-1.000000

3cf     B58: #	out( N1 ) <- in( B57 )  Freq: 0.999043
3cf     movsbl  RAX, [RSI + #16 + R8]	# byte
3d5     vzeroupper
	addq    rsp, 272	# Destroy frame
	popq    rbp
	cmpq    rsp, poll_offset[r15_thread] 
	ja      #safepoint_stub	# Safepoint: poll for GC

3ed     ret

3ee     B59: #	out( B93 B60 ) <- in( B10 )  Freq: 0.111217
3ee     movdq   R8, XMM0	# spill
3f3     movl    RBP, [R8 + #12 (8-bit)]	# range
3f7     NullCheck R8

3f7     B60: #	out( B88 B61 ) <- in( B59 )  Freq: 0.111217
3f7     movslq  R8, RBP	# i2l
3fa     addq    R8, #-64	# long
        nop 	# 2 bytes pad for loops and calls
400     cmpq    RSI, R8
403     jle     B88  P=0.000001 C=6913.000000

409     B61: #	out( B78 B62 ) <- in( B60 )  Freq: 0.111217
409     movl    R8, RBP	# spill
40c     subl    R8, RBX	# int
40f     cmpl    R8, RAX
412     cmovlgt R8, RAX	# min
416     cmpl    R8, R11
419     cmovllt R8, R11	# max
41d     replicateB XMM7,R8
423     vector_compared_evex K7,XMM4,XMM7,#7	!
42a     mask_opers_evex K7, K7, K4	! using K6 as TEMP
42f     ktest_ge8  K7, K7
	
434     jne,u   B78  P=0.000001 C=-1.000000

43a     B62: #	out( B15 ) <- in( B61 )  Freq: 0.111217
43a     movdq   R8, XMM0	# spill
43f     vector_masked_store [R8 + #16 + RSI], XMM6, K4 	! vector masked store
44a     jmp     B15

44f     B63: #	out( B80 B64 ) <- in( B8 )  Freq: 0.111189
44f     movl    RBP, R13	# spill
452     subl    RBP, RBX	# int
454     cmpl    RBP, RAX
456     cmovlgt RBP, RAX	# min
459     cmpl    RBP, R11
45c     cmovllt RBP, R11	# max
460     replicateB XMM6,RBP
466     vector_compared_evex K7,XMM4,XMM6,#7	!
46d     mask_opers_evex K7, K7, K4	! using K6 as TEMP
472     ktest_ge8  K7, K7
	
477     jne,u   B80  P=0.000001 C=-1.000000

47d     B64: #	out( B10 ) <- in( B63 )  Freq: 0.111189
47d     vector_masked_load XMM6, [RDX + #16 + RSI], K4 	! vector masked copy
488     jmp     B10

48d     B65: #	out( B8 ) <- in( B6 )  Freq: 0.11111
48d     movdq   R8, XMM1	# spill
492     subq    R8, RSI	# long
495     vector_mask_gen32 K4, R8 	! vector mask generator
4a9     vector_store_mask XMM5, K4 	! elem size is #1 byte[s]
4b5     jmp     B8

4ba     B66: #	out( B93 B67 ) <- in( B47 )  Freq: 0.0555528
4ba     movdq   R10, XMM0	# spill
        nop 	# 1 bytes pad for loops and calls
4c0     movl    RBP, [R10 + #12 (8-bit)]	# range
4c4     NullCheck R10

4c4     B67: #	out( B89 B68 ) <- in( B66 )  Freq: 0.0555527
4c4     movslq  R10, RBP	# i2l
4c7     addq    R10, #-64	# long
4cb     cmpq    R8, R10
4ce     jle     B89  P=0.000001 C=6913.000000

4d4     B68: #	out( B90 B69 ) <- in( B67 )  Freq: 0.0555527
4d4     movl    R10, RBP	# spill
4d7     subl    R10, RBX	# int
4da     cmpl    R10, RAX
4dd     cmovlgt R10, RAX	# min
4e1     cmpl    R10, R11
4e4     cmovllt R10, R11	# max
4e8     replicateB XMM7,R10
4ee     vector_compared_evex K7,XMM4,XMM7,#7	!
4f5     mask_opers_evex K7, K7, K4	! using K6 as TEMP
        nop 	# 6 bytes pad for loops and calls
500     ktest_ge8  K7, K7
	
505     jne,u   B90  P=0.000001 C=-1.000000

50b     B69: #	out( B52 ) <- in( B68 )  Freq: 0.0555526
50b     movdq   R10, XMM0	# spill
510     vector_masked_store [R10 + #16 + R8], XMM6, K4 	! vector masked store
51b     movdq   RSI, XMM0	# spill
520     jmp     B52

525     B70: #	out( B91 B71 ) <- in( B45 )  Freq: 0.0555384
525     movl    R10, R13	# spill
528     subl    R10, RBX	# int
52b     cmpl    R10, RAX
52e     cmovlgt R10, RAX	# min
532     cmpl    R10, R11
535     cmovllt R10, R11	# max
539     replicateB XMM6,R10
53f     vector_compared_evex K7,XMM4,XMM6,#7	!
546     mask_opers_evex K7, K7, K4	! using K6 as TEMP
54b     ktest_ge8  K7, K7
	
550     jne,u   B91  P=0.000001 C=-1.000000

556     B71: #	out( B47 ) <- in( B70 )  Freq: 0.0555384
556     vector_masked_load XMM6, [RDX + #16 + R8], K4 	! vector masked copy
561     jmp     B47

566     B72: #	out( B45 ) <- in( B43 )  Freq: 0.0554993
566     movdq   R10, XMM1	# spill
56b     subq    R10, R8	# long
56e     vector_mask_gen32 K4, R10 	! vector mask generator
582     vector_store_mask XMM5, K4 	! elem size is #1 byte[s]
58e     jmp     B45

593     B73: #	out( B74 ) <- in( B12 B29 )  Freq: 0.000289456
593     vmovdqu [rsp + 0],XMM6	# spill

59a     B74: #	out( N1 ) <- in( B87 B73 )  Freq: 0.000290343
59a     movl    RSI, #-52	# int
59f     movq    [rsp + #72], RDX	# spill
5a4     movl    [rsp + #80], RCX	# spill
5a8     movss   [rsp + #84], XMM2	# spill
5ae     movsd   [rsp + #96], XMM0	# spill
5b4     movl    [rsp + #92], RBX	# spill
5b8     call,static  wrapper for: uncommon_trap(reason='intrinsic_or_type_checked_inlining' action='make_not_entrant' debug_id='0')
        # java.util.Objects::checkIndex @ bci:3 (line 385) L[0]=_ L[1]=_ STK[0]=rsp + #92 STK[1]=RBP STK[2]=#NULL
        # jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize @ bci:43 (line 57) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.ByteVector::intoArray @ bci:7 (line 3376) L[0]=#ScObj0 L[1]=rsp + #96 L[2]=_ L[3]=_
        # ScObj0 jdk/incubator/vector/Byte512Vector={ [payload :0]=rsp + #0 }
        # jdk.incubator.vector.ByteVector::intoArray @ bci:10 (line 3417) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_
        # indexvec::micro @ bci:38 (line 13) L[0]=rsp + #96 L[1]=rsp + #72 L[2]=rsp + #80 L[3]=rsp + #84 L[4]=rsp + #92 L[5]=_
        # OopMap {[72]=Oop [96]=Oop off=1472/0x5c0}
5c0     stop	# ShouldNotReachHere

5d4     B75: #	out( B76 ) <- in( B34 )  Freq: 1.79983e-05
5d4     cmpq    RSI, R10
5d7     setbng R11	# signed, int

5db     B76: #	out( B77 ) <- in( B88 B75 )  Freq: 1.81095e-05
5db     vmovdqu [rsp + 64],XMM5	# spill
5e3     vmovdqu [rsp + 0],XMM6	# spill

5ea     B77: #	out( N1 ) <- in( B89 B76 )  Freq: 1.81651e-05
5ea     movl    RSI, #-187	# int
5ef     movq    [rsp + #128], RDX	# spill
5f7     movl    [rsp + #136], RCX	# spill
5fe     movss   [rsp + #140], XMM2	# spill
607     movsd   [rsp + #152], XMM0	# spill
610     movl    [rsp + #148], RBX	# spill
617     movl    [rsp + #160], R11	# spill
        nop 	# 1 bytes pad for loops and calls
620     call,static  wrapper for: uncommon_trap(reason='unstable_if' action='reinterpret' debug_id='0')
        # jdk.incubator.vector.ByteVector::intoArray @ bci:36 (line 3420) L[0]=#ScObj0 L[1]=rsp + #152 L[2]=rsp + #148 L[3]=#ScObj1 L[4]=_ STK[0]=rsp + #160
        # ScObj0 jdk/incubator/vector/Byte512Vector={ [payload :0]=rsp + #0 }
        # ScObj1 jdk/incubator/vector/Byte512Vector$Byte512Mask={ [payload :0]=rsp + #64 }
        # indexvec::micro @ bci:38 (line 13) L[0]=rsp + #152 L[1]=rsp + #128 L[2]=rsp + #136 L[3]=rsp + #140 L[4]=rsp + #148 L[5]=_
        # OopMap {[128]=Oop [152]=Oop off=1576/0x628}
628     stop	# ShouldNotReachHere

63c     B78: #	out( B79 ) <- in( B61 B35 )  Freq: 1.81095e-05
63c     vmovdqu [rsp + 64],XMM5	# spill
644     vmovdqu [rsp + 0],XMM6	# spill

64b     B79: #	out( N1 ) <- in( B90 B78 )  Freq: 1.8165e-05
64b     movl    RSI, #-83	# int
650     vector_store_mask XMM1, K7 	! elem size is #1 byte[s]
65c     movq    [rsp + #136], RDX	# spill
664     movl    [rsp + #144], RCX	# spill
66b     movss   [rsp + #148], XMM2	# spill
674     movsd   [rsp + #160], XMM0	# spill
67d     movl    [rsp + #156], RBX	# spill
684     movl    [rsp + #168], RBX	# spill
68b     vmovdqu [rsp + 192],XMM1	# spill
        nop 	# 1 bytes pad for loops and calls
694     call,static  wrapper for: uncommon_trap(reason='uninitialized' action='reinterpret' debug_id='0')
        # jdk.incubator.vector.Byte512Vector$Byte512Mask::firstTrue @ bci:11 (line 854) L[0]=_ STK[0]=#21 STK[1]=#Ptr0x00007faa6803f240 STK[2]=#Ptr0x00007faa64080be0 STK[3]=#64 STK[4]=#ScObj0
        # ScObj0 jdk/incubator/vector/Byte512Vector$Byte512Mask={ [payload :0]=rsp + #192 }
        # jdk.incubator.vector.AbstractMask::checkIndexByLane @ bci:119 (line 295) L[0]=_ L[1]=rsp + #156 L[2]=RBP L[3]=_ L[4]=#1 L[5]=_ L[6]=#ScObj0 L[7]=_
        # ScObj0 jdk/incubator/vector/Byte512Vector$Byte512Mask={ [payload :0]=rsp + #192 }
        # jdk.incubator.vector.ByteVector::checkMaskFromIndexSize @ bci:12 (line 3926) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_
        # jdk.incubator.vector.ByteVector::intoArray @ bci:46 (line 3421) L[0]=#ScObj0 L[1]=rsp + #160 L[2]=rsp + #168 L[3]=#ScObj1 L[4]=_
        # ScObj0 jdk/incubator/vector/Byte512Vector={ [payload :0]=rsp + #0 }
        # ScObj1 jdk/incubator/vector/Byte512Vector$Byte512Mask={ [payload :0]=rsp + #64 }
        # indexvec::micro @ bci:38 (line 13) L[0]=rsp + #160 L[1]=rsp + #136 L[2]=rsp + #144 L[3]=rsp + #148 L[4]=rsp + #156 L[5]=_
        # OopMap {[136]=Oop [160]=Oop off=1692/0x69c}
69c     stop	# ShouldNotReachHere

6b0     B80: #	out( B81 ) <- in( B63 B37 )  Freq: 1.81048e-05
6b0     vmovdqu [rsp + 0],XMM5	# spill

6b7     B81: #	out( N1 ) <- in( B91 B80 )  Freq: 1.81604e-05
6b7     movl    RSI, #-83	# int
6bc     vector_store_mask XMM1, K7 	! elem size is #1 byte[s]
6c8     movdq   RBP, XMM0	# spill
6cd     movl    [rsp + #72], RCX	# spill
6d1     movss   [rsp + #76], XMM2	# spill
6d7     movq    [rsp + #88], RDX	# spill
6dc     movl    [rsp + #84], RBX	# spill
6e0     movl    [rsp + #96], RBX	# spill
6e4     movl    [rsp + #100], R13	# spill
6e9     vmovdqu [rsp + 128],XMM1	# spill
        nop 	# 3 bytes pad for loops and calls
6f4     call,static  wrapper for: uncommon_trap(reason='uninitialized' action='reinterpret' debug_id='0')
        # jdk.incubator.vector.Byte512Vector$Byte512Mask::firstTrue @ bci:11 (line 854) L[0]=_ STK[0]=#21 STK[1]=#Ptr0x00007faa6803f240 STK[2]=#Ptr0x00007faa64080be0 STK[3]=#64 STK[4]=#ScObj0
        # ScObj0 jdk/incubator/vector/Byte512Vector$Byte512Mask={ [payload :0]=rsp + #128 }
        # jdk.incubator.vector.AbstractMask::checkIndexByLane @ bci:119 (line 295) L[0]=_ L[1]=rsp + #84 L[2]=rsp + #100 L[3]=_ L[4]=#1 L[5]=_ L[6]=#ScObj0 L[7]=_
        # ScObj0 jdk/incubator/vector/Byte512Vector$Byte512Mask={ [payload :0]=rsp + #128 }
        # jdk.incubator.vector.ByteVector::checkMaskFromIndexSize @ bci:12 (line 3926) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_
        # jdk.incubator.vector.ByteVector::fromArray @ bci:43 (line 3011) L[0]=_ L[1]=rsp + #88 L[2]=rsp + #96 L[3]=#ScObj0 L[4]=#Ptr0x00007faa701d6550
        # ScObj0 jdk/incubator/vector/Byte512Vector$Byte512Mask={ [payload :0]=rsp + #0 }
        # indexvec::micro @ bci:30 (line 12) L[0]=RBP L[1]=rsp + #88 L[2]=rsp + #72 L[3]=rsp + #76 L[4]=rsp + #84 L[5]=#ScObj0
        # ScObj0 jdk/incubator/vector/Byte512Vector$Byte512Mask={ [payload :0]=rsp + #0 }
        # OopMap {rbp=Oop [88]=Oop off=1788/0x6fc}
6fc     stop	# ShouldNotReachHere

710     B82: #	out( N1 ) <- in( B57 )  Freq: 1.01231e-06
710     movq    RBP, RSI	# spill
713     movl    [rsp + #0], R8	# spill
717     movl    RSI, #-28	# int
71c     call,static  wrapper for: uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')
        # indexvec::micro @ bci:59 (line 15) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ STK[0]=RBP STK[1]=rsp + #0
        # OopMap {rbp=Oop off=1828/0x724}
724     stop	# ShouldNotReachHere

738     B83: #	out( N1 ) <- in( B3 )  Freq: 9.56983e-07
738     movq    RBP, RSI	# spill
73b     movq    [rsp + #0], RDX	# spill
73f     movl    [rsp + #12], R8	# spill
744     movl    [rsp + #16], RCX	# spill
748     movl    RSI, #-146	# int
        nop 	# 3 bytes pad for loops and calls
750     call,static  wrapper for: uncommon_trap(reason='loop_limit_check' action='maybe_recompile' debug_id='0')
        # indexvec::micro @ bci:6 (line 10) L[0]=RBP L[1]=rsp + #0 L[2]=rsp + #16 L[3]=rsp + #12 L[4]=#0 L[5]=_ STK[0]=#0 STK[1]=rsp + #16
        # OopMap {rbp=Oop [0]=Oop off=1880/0x758}
758     stop	# ShouldNotReachHere

76c     B84: #	out( B85 ) <- in( B42 )  Freq: 4.4989e-07
76c     movdq   RSI, XMM0	# spill
771     movdl   R8, XMM2	# spill

776     B85: #	out( N1 ) <- in( B84 B5 )  Freq: 1.35058e-06
776     movq    RBP, RSI	# spill
779     movq    [rsp + #0], RDX	# spill
77d     movl    [rsp + #12], R8	# spill
782     movl    [rsp + #20], RBX	# spill
786     movl    [rsp + #24], RCX	# spill
78a     vmovdqu [rsp + 64],XMM3	# spill
792     movl    RSI, #-187	# int
        nop 	# 1 bytes pad for loops and calls
798     call,static  wrapper for: uncommon_trap(reason='unstable_if' action='reinterpret' debug_id='0')
        # jdk.incubator.vector.AbstractMask::indexInRange @ bci:17 (line 221) L[0]=#ScObj0 L[1]=_ L[2]=_ STK[0]=rsp + #20 STK[1]=rsp + #24
        # ScObj0 jdk/incubator/vector/Byte512Vector$Byte512Mask={ [payload :0]=rsp + #64 }
        # jdk.incubator.vector.AbstractSpecies::indexInRange @ bci:7 (line 216) L[0]=_ L[1]=_ L[2]=_
        # indexvec::micro @ bci:15 (line 11) L[0]=RBP L[1]=rsp + #0 L[2]=rsp + #24 L[3]=rsp + #12 L[4]=rsp + #20 L[5]=_
        # OopMap {rbp=Oop [0]=Oop off=1952/0x7a0}
7a0     stop	# ShouldNotReachHere

7b4     B86: #	out( B32 ) <- in( B50 )  Freq: 8.99724e-07
7b4     vmovdqu [rsp + 0],XMM6	# spill
        nop 	# 5 bytes pad for loops and calls
7c0     jmp     B32

7c5     B87: #	out( B74 ) <- in( B49 )  Freq: 8.87934e-07
7c5     vmovdqu [rsp + 0],XMM6	# spill
7cc     jmp     B74

7d1     B88: #	out( B76 ) <- in( B60 )  Freq: 1.11217e-07
7d1     cmpq    RSI, R8
7d4     setbng R11	# signed, int
7d8     jmp     B76

7dd     B89: #	out( B77 ) <- in( B67 )  Freq: 5.55527e-08
7dd     cmpq    R8, R10
7e0     setbng R11	# signed, int
7e4     vmovdqu [rsp + 64],XMM5	# spill
7ec     vmovdqu [rsp + 0],XMM6	# spill
7f3     jmp     B77

7f8     B90: #	out( B79 ) <- in( B68 )  Freq: 5.55527e-08
7f8     vmovdqu [rsp + 64],XMM5	# spill
800     vmovdqu [rsp + 0],XMM6	# spill
807     jmp     B79

80c     B91: #	out( B81 ) <- in( B70 )  Freq: 5.55384e-08
80c     vmovdqu [rsp + 0],XMM5	# spill
813     jmp     B81

818     B92: #	out( N1 ) <- in( B48 B11 B28 )  Freq: 0.000294199
818     movl    RSI, #-10	# int
        nop 	# 3 bytes pad for loops and calls
820     call,static  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # jdk.incubator.vector.ByteVector::intoArray @ bci:6 (line 3376) L[0]=_ L[1]=_ L[2]=_ L[3]=_ STK[0]=_ STK[1]=_ STK[2]=#NULL
        # jdk.incubator.vector.ByteVector::intoArray @ bci:10 (line 3417) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_
        # indexvec::micro @ bci:38 (line 13) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_
        # OopMap {off=2088/0x828}
828     stop	# ShouldNotReachHere

83c     B93: #	out( N1 ) <- in( B66 B59 B33 )  Freq: 1.84063e-05
83c     movl    RSI, #-10	# int
        nop 	# 3 bytes pad for loops and calls
844     call,static  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # jdk.incubator.vector.ByteVector::intoArray @ bci:31 (line 3420) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ STK[0]=_ STK[1]=_ STK[2]=_ STK[3]=_ STK[4]=#NULL
        # indexvec::micro @ bci:38 (line 13) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_
        # OopMap {off=2124/0x84c}
84c     stop	# ShouldNotReachHere

860     B94: #	out( N1 ) <- in( B56 )  Freq: 1.01231e-06
860     movl    RSI, #-10	# int
865     movl    RBP, R8	# spill
868     call,static  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # indexvec::micro @ bci:59 (line 15) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ STK[0]=#NULL STK[1]=RBP
        # OopMap {off=2160/0x870}
870     stop	# ShouldNotReachHere

884     B95: #	out( N1 ) <- in( B2 )  Freq: 9.56984e-07
884     movq    RBP, RSI	# spill
887     movq    [rsp + #0], RDX	# spill
88b     movl    [rsp + #12], R8	# spill
890     movl    [rsp + #16], RCX	# spill
894     movl    RSI, #-138	# int
        nop 	# 3 bytes pad for loops and calls
89c     call,static  wrapper for: uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')
        # indexvec::micro @ bci:6 (line 10) L[0]=RBP L[1]=rsp + #0 L[2]=rsp + #16 L[3]=rsp + #12 L[4]=#0 L[5]=_ STK[0]=#0 STK[1]=rsp + #16
        # OopMap {rbp=Oop [0]=Oop off=2212/0x8a4}
8a4     stop	# ShouldNotReachHere

--------------------------------------------------------------------------------
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     758  320             indexvec::micro (61 bytes)
 total in heap  [0x00007faadd22f910,0x00007faadd231018] = 5896
 relocation     [0x00007faadd22fa70,0x00007faadd22fb30] = 192
 main code      [0x00007faadd22fb40,0x00007faadd230418] = 2264
 stub code      [0x00007faadd230418,0x00007faadd230430] = 24
 oops           [0x00007faadd230430,0x00007faadd230460] = 48
 metadata       [0x00007faadd230460,0x00007faadd2305c0] = 352
 scopes data    [0x00007faadd2305c0,0x00007faadd230978] = 952
 scopes pcs     [0x00007faadd230978,0x00007faadd230f98] = 1568
 dependencies   [0x00007faadd230f98,0x00007faadd230fd0] = 56
 nul chk table  [0x00007faadd230fd0,0x00007faadd231018] = 72

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x00007faa94701558} 'micro' '([B[BII)B' in 'indexvec'
  # parm0:    rsi:rsi   = '[B'
  # parm1:    rdx:rdx   = '[B'
  # parm2:    rcx       = int
  # parm3:    r8        = int
  #           [sp+0x120]  (sp of caller)
 ;; N1: #	out( B1 ) <- in( B95 B83 B74 B77 B92 B85 B32 B94 B81 B79 B82 B93 B58 )  Freq: 1
 ;; B1: #	out( B56 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x00007faadd22fb40:   mov    %eax,-0x18000(%rsp)
  0x00007faadd22fb47:   push   %rbp
  0x00007faadd22fb48:   sub    $0x110,%rsp
  0x00007faadd22fb4f:   nop
  0x00007faadd22fb50:   cmpl   $0x1,0x20(%r15)
  0x00007faadd22fb58:   jne    0x00007faadd23040e           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.Byte512Vector$Byte512Mask::maskAll@28 (line 896)
                                                            ; - jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@76 (line 4347)
                                                            ; - jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
                                                            ; - indexvec::micro@15 (line 11)
  0x00007faadd22fb5e:   nop
  0x00007faadd22fb5f:   nop
  0x00007faadd22fb60:   test   %ecx,%ecx
  0x00007faadd22fb62:   jle    0x00007faadd22ff02
 ;; B2: #	out( B95 B3 ) <- in( B1 )  Freq: 0.944443
  0x00007faadd22fb68:   mov    0xc(%rdx),%r13d              ; implicit exception: dispatches to 0x00007faadd2303c4
 ;; B3: #	out( B83 B4 ) <- in( B2 )  Freq: 0.944442
  0x00007faadd22fb6c:   cmp    $0x7fffffc0,%ecx
  0x00007faadd22fb72:   jg     0x00007faadd230278
 ;; B4: #	out( B5 ) <- in( B3 )  Freq: 0.944441
  0x00007faadd22fb78:   movslq %r13d,%r9
  0x00007faadd22fb7b:   movslq %ecx,%rbp
  0x00007faadd22fb7e:   add    $0xffffffffffffffc0,%r9
  0x00007faadd22fb82:   mov    $0xffffffff,%ebx
  0x00007faadd22fb87:   movabs $0x1190d6910,%rdi            ;   {oop([B{0x00000001190d6910})}
  0x00007faadd22fb91:   mov    $0x40,%eax
  0x00007faadd22fb96:   cmp    %eax,%ecx
  0x00007faadd22fb98:   mov    %ecx,%r10d
  0x00007faadd22fb9b:   cmovg  %eax,%r10d
  0x00007faadd22fb9f:   xor    %r11d,%r11d
  0x00007faadd22fba2:   movslq %ebx,%r14
  0x00007faadd22fba5:   kmovq  %r14,%k5                     ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
  0x00007faadd22fbaa:   vpmovm2b %k5,%zmm3
  0x00007faadd22fbb0:   vpabsb %zmm3,%zmm3                  ;*invokevirtual maskAll {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
                                                            ; - indexvec::micro@15 (line 11)
  0x00007faadd22fbb6:   xor    %ebx,%ebx
 ;; B5: #	out( B85 B6 ) <- in( B4 B16 ) Loop( B5-B16 inner pre of N373) Freq: 1.88888
  0x00007faadd22fbb8:   cmp    %ecx,%ebx
  0x00007faadd22fbba:   nop
  0x00007faadd22fbbb:   nop
  0x00007faadd22fbbc:   nop
  0x00007faadd22fbbd:   nop
  0x00007faadd22fbbe:   nop
  0x00007faadd22fbbf:   nop
  0x00007faadd22fbc0:   jge    0x00007faadd2302b6
 ;; B6: #	out( B65 B7 ) <- in( B5 )  Freq: 1.88887
  0x00007faadd22fbc6:   vmovq  %rbp,%xmm1
  0x00007faadd22fbcb:   vmovd  %r8d,%xmm2
  0x00007faadd22fbd0:   vmovq  %rsi,%xmm0
  0x00007faadd22fbd5:   mov    %ecx,%ebp
  0x00007faadd22fbd7:   sub    %ebx,%ebp                    ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
  0x00007faadd22fbd9:   vmovdqu32 0x10(%rdi),%zmm4          ;*invokevirtual and {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.AbstractMask::indexInRange@52 (line 226)
                                                            ; - jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
                                                            ; - indexvec::micro@15 (line 11)
  0x00007faadd22fbe3:   movslq %ebx,%rsi                    ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.LambdaForm$MH/0x00000008000c1400::linkToTargetMethod@4
                                                            ; - jdk.incubator.vector.Byte512Vector$Byte512Mask::and@24 (line 817)
                                                            ; - jdk.incubator.vector.Byte512Vector$Byte512Mask::and@2 (line 677)
                                                            ; - jdk.incubator.vector.AbstractMask::indexInRange@52 (line 226)
                                                            ; - jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
                                                            ; - indexvec::micro@15 (line 11)
  0x00007faadd22fbe6:   cmp    $0x40,%ebp
  0x00007faadd22fbe9:   jl     0x00007faadd22ffcd
 ;; B7: #	out( B8 ) <- in( B6 )  Freq: 1.77776
  0x00007faadd22fbef:   vmovdqu64 %zmm3,%zmm5
  0x00007faadd22fbf5:   kmovq  %k5,%k4
 ;; B8: #	out( B63 B9 ) <- in( B7 B65 )  Freq: 1.88887
  0x00007faadd22fbfa:   nop
  0x00007faadd22fbfb:   nop
  0x00007faadd22fbfc:   nop
  0x00007faadd22fbfd:   nop
  0x00007faadd22fbfe:   nop
  0x00007faadd22fbff:   nop
  0x00007faadd22fc00:   cmp    %r9,%rsi
  0x00007faadd22fc03:   jg     0x00007faadd22ff8f           ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
 ;; B9: #	out( B10 ) <- in( B8 )  Freq: 1.77769
  0x00007faadd22fc09:   vmovdqu8 0x10(%rdx,%rsi,1),%zmm6{%k4}{z};*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.Byte512Vector$Byte512Mask::and@32 (line 817)
                                                            ; - jdk.incubator.vector.Byte512Vector$Byte512Mask::and@2 (line 677)
                                                            ; - jdk.incubator.vector.AbstractMask::indexInRange@52 (line 226)
                                                            ; - jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
                                                            ; - indexvec::micro@15 (line 11)
 ;; B10: #	out( B59 B11 ) <- in( B9 B64 )  Freq: 1.88887
  0x00007faadd22fc14:   kortestq %k4,%k4
  0x00007faadd22fc19:   jae    0x00007faadd22ff2e
 ;; B11: #	out( B92 B12 ) <- in( B10 )  Freq: 1.77766
  0x00007faadd22fc1f:   vmovq  %xmm0,%r8
  0x00007faadd22fc24:   mov    0xc(%r8),%ebp                ; implicit exception: dispatches to 0x00007faadd230358
 ;; B12: #	out( B73 B13 ) <- in( B11 )  Freq: 1.77766
  0x00007faadd22fc28:   add    $0xffffffc1,%ebp
  0x00007faadd22fc2b:   test   %ebp,%ebp
  0x00007faadd22fc2d:   jl     0x00007faadd2300d3
 ;; B13: #	out( B31 B14 ) <- in( B12 )  Freq: 1.77765
  0x00007faadd22fc33:   cmp    %ebp,%ebx
  0x00007faadd22fc35:   jae    0x00007faadd22fd37           ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
 ;; B14: #	out( B15 ) <- in( B13 )  Freq: 1.77765
  0x00007faadd22fc3b:   vmovdqu32 %zmm6,0x10(%r8,%rsi,1)    ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.Byte512Vector$Byte512Mask::and@32 (line 817)
                                                            ; - jdk.incubator.vector.Byte512Vector$Byte512Mask::and@2 (line 677)
                                                            ; - jdk.incubator.vector.AbstractMask::indexInRange@52 (line 226)
                                                            ; - jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
                                                            ; - indexvec::micro@15 (line 11)
 ;; B15: #	out( B17 B16 ) <- in( B62 B14 )  Freq: 1.88887
  0x00007faadd22fc46:   add    $0x40,%ebx
  0x00007faadd22fc49:   cmp    %r10d,%ebx                   ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
  0x00007faadd22fc4c:   jge    0x00007faadd22fc65
 ;; B16: #	out( B5 ) <- in( B15 )  Freq: 0.944434
  0x00007faadd22fc4e:   vmovq  %xmm0,%rsi
  0x00007faadd22fc53:   vmovd  %xmm2,%r8d
  0x00007faadd22fc58:   vmovq  %xmm1,%rbp
  0x00007faadd22fc5d:   nop
  0x00007faadd22fc5e:   nop
  0x00007faadd22fc5f:   nop
  0x00007faadd22fc60:   jmpq   0x00007faadd22fbb8
 ;; B17: #	out( B40 B18 ) <- in( B15 )  Freq: 0.944434
  0x00007faadd22fc65:   cmp    %ecx,%ebx
  0x00007faadd22fc67:   jge    0x00007faadd22fe53           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.Byte512Vector$Byte512Mask::maskAll@9 (line 897)
                                                            ; - jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@76 (line 4347)
                                                            ; - jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
                                                            ; - indexvec::micro@15 (line 11)
 ;; B18: #	out( B20 ) <- in( B17 )  Freq: 0.944433
  0x00007faadd22fc6d:   mov    $0xfa00,%r14d
  0x00007faadd22fc73:   jmp    0x00007faadd22fc88
 ;; B19: #	out( B40 B20 ) <- in( B22 )  Freq: 16.9824
  0x00007faadd22fc75:   mov    0x3c0(%r15),%r10             ; ImmutableOopMap {rdi=Oop rdx=Oop xmm0=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) indexvec::micro@54 (line 10)
  0x00007faadd22fc7c:   test   %eax,(%r10)                  ;   {poll}
  0x00007faadd22fc7f:   nop
  0x00007faadd22fc80:   cmp    %ecx,%ebx
  0x00007faadd22fc82:   jge    0x00007faadd22fe53           ;*synchronization entry
                                                            ; - jdk.incubator.vector.ByteVector$ByteSpecies::dummyVector@-1 (line 4209)
                                                            ; - jdk.incubator.vector.ByteVector::fromArray@25 (line 3008)
                                                            ; - indexvec::micro@30 (line 12)
 ;; B20: #	out( B23 ) <- in( B18 B19 ) Loop( B20-B19 ) Freq: 16.9833
  0x00007faadd22fc88:   mov    %ecx,%r8d
  0x00007faadd22fc8b:   sub    %ebx,%r8d
  0x00007faadd22fc8e:   cmp    %ebx,%ecx
  0x00007faadd22fc90:   cmovl  %r11d,%r8d
  0x00007faadd22fc94:   cmp    $0xfa00,%r8d
  0x00007faadd22fc9b:   cmova  %r14d,%r8d
  0x00007faadd22fc9f:   add    %ebx,%r8d
  0x00007faadd22fca2:   jmp    0x00007faadd22fcc5
  0x00007faadd22fca4:   nop
  0x00007faadd22fca5:   nop
  0x00007faadd22fca6:   nop
  0x00007faadd22fca7:   nop
  0x00007faadd22fca8:   nop
  0x00007faadd22fca9:   nop
  0x00007faadd22fcaa:   nop
  0x00007faadd22fcab:   nop
  0x00007faadd22fcac:   nop
  0x00007faadd22fcad:   nop
  0x00007faadd22fcae:   nop
  0x00007faadd22fcaf:   nop                                 ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
 ;; B21: #	out( B22 ) <- in( B30 ) top-of-loop Freq: 287.677
  0x00007faadd22fcb0:   vmovdqu32 %zmm6,0x10(%r10,%rsi,1)   ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - indexvec::micro@6 (line 10)
 ;; B22: #	out( B19 B23 ) <- in( B36 B21 )  Freq: 305.676
  0x00007faadd22fcbb:   add    $0x40,%ebx
  0x00007faadd22fcbe:   nop
  0x00007faadd22fcbf:   nop
  0x00007faadd22fcc0:   cmp    %r8d,%ebx
  0x00007faadd22fcc3:   jge    0x00007faadd22fc75           ;*invokeinterface indexInRange {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - indexvec::micro@15 (line 11)
 ;; B23: #	out( B39 B24 ) <- in( B20 B22 ) Loop( B23-B22 inner main of N221 strip mined) Freq: 305.676
  0x00007faadd22fcc5:   vmovdqu32 0x10(%rdi),%zmm4
  0x00007faadd22fccf:   mov    %ecx,%r10d
  0x00007faadd22fcd2:   sub    %ebx,%r10d                   ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
  0x00007faadd22fcd5:   movslq %ebx,%rsi                    ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.Byte512Vector$Byte512Mask::maskAll@20 (line 897)
                                                            ; - jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@76 (line 4347)
                                                            ; - jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
                                                            ; - indexvec::micro@15 (line 11)
  0x00007faadd22fcd8:   nop
  0x00007faadd22fcd9:   nop
  0x00007faadd22fcda:   nop
  0x00007faadd22fcdb:   nop
  0x00007faadd22fcdc:   nop
  0x00007faadd22fcdd:   nop
  0x00007faadd22fcde:   nop
  0x00007faadd22fcdf:   nop
  0x00007faadd22fce0:   cmp    $0x40,%r10d
  0x00007faadd22fce4:   jl     0x00007faadd22fe26
 ;; B24: #	out( B25 ) <- in( B23 )  Freq: 287.696
  0x00007faadd22fcea:   vmovdqu64 %zmm3,%zmm5
  0x00007faadd22fcf0:   kmovq  %k5,%k4
 ;; B25: #	out( B37 B26 ) <- in( B24 B39 )  Freq: 305.676
  0x00007faadd22fcf5:   cmp    %r9,%rsi                     ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
  0x00007faadd22fcf8:   jg     0x00007faadd22fde5
 ;; B26: #	out( B27 ) <- in( B25 )  Freq: 287.683
  0x00007faadd22fcfe:   vmovdqu8 0x10(%rdx,%rsi,1),%zmm6{%k4}{z};*invokevirtual maskAll {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
                                                            ; - indexvec::micro@15 (line 11)
 ;; B27: #	out( B33 B28 ) <- in( B26 B38 )  Freq: 305.676
  0x00007faadd22fd09:   kortestq %k4,%k4
  0x00007faadd22fd0e:   jae    0x00007faadd22fd78
 ;; B28: #	out( B92 B29 ) <- in( B27 )  Freq: 287.678
  0x00007faadd22fd14:   vmovq  %xmm0,%r10
  0x00007faadd22fd19:   nop
  0x00007faadd22fd1a:   nop
  0x00007faadd22fd1b:   nop
  0x00007faadd22fd1c:   nop
  0x00007faadd22fd1d:   nop
  0x00007faadd22fd1e:   nop
  0x00007faadd22fd1f:   nop
  0x00007faadd22fd20:   mov    0xc(%r10),%ebp               ; implicit exception: dispatches to 0x00007faadd230358
 ;; B29: #	out( B73 B30 ) <- in( B28 )  Freq: 287.678
  0x00007faadd22fd24:   add    $0xffffffc1,%ebp
  0x00007faadd22fd27:   test   %ebp,%ebp                    ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
  0x00007faadd22fd29:   jl     0x00007faadd2300d3
 ;; B30: #	out( B21 B31 ) <- in( B29 )  Freq: 287.678
  0x00007faadd22fd2f:   cmp    %ebp,%ebx
  0x00007faadd22fd31:   jb     0x00007faadd22fcb0
 ;; B31: #	out( B32 ) <- in( B13 B30 )  Freq: 0.000293299
  0x00007faadd22fd37:   vmovdqu64 %zmm6,(%rsp)
 ;; B32: #	out( N1 ) <- in( B86 B31 )  Freq: 0.000294199
  0x00007faadd22fd3e:   mov    $0xffffffe4,%esi             ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@0 (line 4341)
                                                            ; - jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
                                                            ; - indexvec::micro@15 (line 11)
  0x00007faadd22fd43:   mov    %rdx,0x48(%rsp)
  0x00007faadd22fd48:   mov    %ecx,0x50(%rsp)
  0x00007faadd22fd4c:   vmovss %xmm2,0x54(%rsp)
  0x00007faadd22fd52:   vmovsd %xmm0,0x60(%rsp)
  0x00007faadd22fd58:   mov    %ebx,0x5c(%rsp)
  0x00007faadd22fd5c:   vzeroupper 
  0x00007faadd22fd5f:   callq  0x00007faadd1362a0           ; ImmutableOopMap {[72]=Oop [96]=Oop }
                                                            ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::checkIndex@3 (line 385)
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 57)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@7 (line 3376)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@10 (line 3417)
                                                            ; - indexvec::micro@38 (line 13)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007faadd22fd64:   movabs $0x7faae8bf7378,%rdi         ;   {external_word}
  0x00007faadd22fd6e:   and    $0xfffffffffffffff0,%rsp
  0x00007faadd22fd72:   callq  0x00007faae827c9a0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007faadd22fd77:   hlt    
 ;; B33: #	out( B93 B34 ) <- in( B27 )  Freq: 17.9983
  0x00007faadd22fd78:   vmovq  %xmm0,%r10
  0x00007faadd22fd7d:   nop
  0x00007faadd22fd7e:   nop
  0x00007faadd22fd7f:   nop
  0x00007faadd22fd80:   mov    0xc(%r10),%ebp               ; implicit exception: dispatches to 0x00007faadd23037c
 ;; B34: #	out( B75 B35 ) <- in( B33 )  Freq: 17.9983
  0x00007faadd22fd84:   movslq %ebp,%r10
  0x00007faadd22fd87:   add    $0xffffffffffffffc0,%r10
  0x00007faadd22fd8b:   cmp    %r10,%rsi
  0x00007faadd22fd8e:   jle    0x00007faadd230114
 ;; B35: #	out( B78 B36 ) <- in( B34 )  Freq: 17.9983
  0x00007faadd22fd94:   mov    %ebp,%r10d
  0x00007faadd22fd97:   sub    %ebx,%r10d
  0x00007faadd22fd9a:   cmp    %eax,%r10d
  0x00007faadd22fd9d:   cmovg  %eax,%r10d
  0x00007faadd22fda1:   cmp    %r11d,%r10d
  0x00007faadd22fda4:   cmovl  %r11d,%r10d
  0x00007faadd22fda8:   vpbroadcastb %r10d,%zmm7
  0x00007faadd22fdae:   vpcmpb $0x5,%zmm7,%zmm4,%k7         ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
  0x00007faadd22fdb5:   kandq  %k4,%k7,%k7                  ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.LambdaForm$MH/0x00000008000c1400::linkToTargetMethod@4
                                                            ; - jdk.incubator.vector.Byte512Vector$Byte512Mask::maskAll@20 (line 897)
                                                            ; - jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@76 (line 4347)
                                                            ; - jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
                                                            ; - indexvec::micro@15 (line 11)
  0x00007faadd22fdba:   nop
  0x00007faadd22fdbb:   nop
  0x00007faadd22fdbc:   nop
  0x00007faadd22fdbd:   nop
  0x00007faadd22fdbe:   nop
  0x00007faadd22fdbf:   nop
  0x00007faadd22fdc0:   kortestq %k7,%k7
  0x00007faadd22fdc5:   jne    0x00007faadd23017c
 ;; B36: #	out( B22 ) <- in( B35 )  Freq: 17.9983
  0x00007faadd22fdcb:   vmovq  %xmm0,%r10
  0x00007faadd22fdd0:   vmovdqu8 %zmm6,0x10(%r10,%rsi,1){%k4};*invokeinterface indexInRange {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - indexvec::micro@15 (line 11)
  0x00007faadd22fddb:   nop
  0x00007faadd22fddc:   nop
  0x00007faadd22fddd:   nop
  0x00007faadd22fdde:   nop
  0x00007faadd22fddf:   nop
  0x00007faadd22fde0:   jmpq   0x00007faadd22fcbb
 ;; B37: #	out( B80 B38 ) <- in( B25 )  Freq: 17.9936
  0x00007faadd22fde5:   mov    %r13d,%r10d
  0x00007faadd22fde8:   sub    %ebx,%r10d
  0x00007faadd22fdeb:   cmp    %eax,%r10d
  0x00007faadd22fdee:   cmovg  %eax,%r10d
  0x00007faadd22fdf2:   cmp    %r11d,%r10d
  0x00007faadd22fdf5:   cmovl  %r11d,%r10d
  0x00007faadd22fdf9:   vpbroadcastb %r10d,%zmm6
  0x00007faadd22fdff:   vpcmpb $0x5,%zmm6,%zmm4,%k7         ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
  0x00007faadd22fe06:   kandq  %k4,%k7,%k7                  ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.LambdaForm$MH/0x00000008000c1400::linkToTargetMethod@4
                                                            ; - jdk.incubator.vector.Byte512Vector$Byte512Mask::maskAll@20 (line 897)
                                                            ; - jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@76 (line 4347)
                                                            ; - jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
                                                            ; - indexvec::micro@15 (line 11)
  0x00007faadd22fe0b:   kortestq %k7,%k7
  0x00007faadd22fe10:   jne    0x00007faadd2301f0
 ;; B38: #	out( B27 ) <- in( B37 )  Freq: 17.9936
  0x00007faadd22fe16:   vmovdqu8 0x10(%rdx,%rsi,1),%zmm6{%k4}{z}
  0x00007faadd22fe21:   jmpq   0x00007faadd22fd09
 ;; B39: #	out( B25 ) <- in( B23 )  Freq: 17.981
  0x00007faadd22fe26:   vmovq  %xmm1,%r10
  0x00007faadd22fe2b:   sub    %rsi,%r10
  0x00007faadd22fe2e:   movabs $0xffffffffffffffff,%rbp
  0x00007faadd22fe38:   bzhi   %r10,%rbp,%rbp
  0x00007faadd22fe3d:   kmovq  %rbp,%k4                     ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
  0x00007faadd22fe42:   vpmovm2b %k4,%zmm5
  0x00007faadd22fe48:   vpabsb %zmm5,%zmm5                  ;*ifgt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.VectorIntrinsics::indexInRange@12 (line 49)
                                                            ; - jdk.incubator.vector.ByteVector::fromArray@17 (line 3007)
                                                            ; - indexvec::micro@30 (line 12)
  0x00007faadd22fe4e:   jmpq   0x00007faadd22fcf5
 ;; B40: #	out( B54 B41 ) <- in( B17 B19 )  Freq: 0.943491
  0x00007faadd22fe53:   cmp    %ecx,%ebx
  0x00007faadd22fe55:   jge    0x00007faadd22fef8
 ;; B41: #	out( B42 ) <- in( B40 )  Freq: 0.471746
  0x00007faadd22fe5b:   nop
 ;; B42: #	out( B84 B43 ) <- in( B41 B53 ) Loop( B42-B53 inner post of N373) Freq: 0.943488
  0x00007faadd22fe5c:   nop
  0x00007faadd22fe5d:   nop
  0x00007faadd22fe5e:   nop
  0x00007faadd22fe5f:   nop
  0x00007faadd22fe60:   cmp    %ecx,%ebx
  0x00007faadd22fe62:   jge    0x00007faadd2302ac           ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
 ;; B43: #	out( B72 B44 ) <- in( B42 )  Freq: 0.943488
  0x00007faadd22fe68:   vmovdqu32 0x10(%rdi),%zmm4          ;*invokevirtual laneCount {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.VectorMask::length@9 (line 155)
                                                            ; - jdk.incubator.vector.AbstractMask::indexInRange@35 (line 223)
                                                            ; - jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
                                                            ; - indexvec::micro@15 (line 11)
  0x00007faadd22fe72:   mov    %ecx,%r10d
  0x00007faadd22fe75:   sub    %ebx,%r10d                   ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
  0x00007faadd22fe78:   movslq %ebx,%r8                     ;*invokevirtual indexInRange0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.Byte512Vector$Byte512Mask::indexInRange0@3 (line 677)
                                                            ; - jdk.incubator.vector.AbstractMask::indexInRange@49 (line 226)
                                                            ; - jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
                                                            ; - indexvec::micro@15 (line 11)
  0x00007faadd22fe7b:   nop
  0x00007faadd22fe7c:   nop
  0x00007faadd22fe7d:   nop
  0x00007faadd22fe7e:   nop
  0x00007faadd22fe7f:   nop
  0x00007faadd22fe80:   cmp    $0x40,%r10d
  0x00007faadd22fe84:   jl     0x00007faadd2300a6
 ;; B44: #	out( B45 ) <- in( B43 )  Freq: 0.887988
  0x00007faadd22fe8a:   vmovdqu64 %zmm3,%zmm5
  0x00007faadd22fe90:   kmovq  %k5,%k4
 ;; B45: #	out( B70 B46 ) <- in( B44 B72 )  Freq: 0.943488
  0x00007faadd22fe95:   cmp    %r9,%r8
  0x00007faadd22fe98:   jg     0x00007faadd230065           ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
 ;; B46: #	out( B47 ) <- in( B45 )  Freq: 0.887949
  0x00007faadd22fe9e:   vmovdqu8 0x10(%rdx,%r8,1),%zmm6{%k4}{z};*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.invoke.LambdaForm$MH/0x00000008000c1400::linkToTargetMethod@4
                                                            ; - jdk.incubator.vector.Byte512Vector$Byte512Mask::indexInRange0@10 (line 788)
                                                            ; - jdk.incubator.vector.Byte512Vector$Byte512Mask::indexInRange0@3 (line 677)
                                                            ; - jdk.incubator.vector.AbstractMask::indexInRange@49 (line 226)
                                                            ; - jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
                                                            ; - indexvec::micro@15 (line 11)
 ;; B47: #	out( B66 B48 ) <- in( B46 B71 )  Freq: 0.943488
  0x00007faadd22fea9:   kortestq %k4,%k4
  0x00007faadd22feae:   jae    0x00007faadd22fffa
 ;; B48: #	out( B92 B49 ) <- in( B47 )  Freq: 0.887935
  0x00007faadd22feb4:   vmovq  %xmm0,%r10
  0x00007faadd22feb9:   nop
  0x00007faadd22feba:   nop
  0x00007faadd22febb:   nop
  0x00007faadd22febc:   nop
  0x00007faadd22febd:   nop
  0x00007faadd22febe:   nop
  0x00007faadd22febf:   nop
  0x00007faadd22fec0:   mov    0xc(%r10),%ebp               ; implicit exception: dispatches to 0x00007faadd230358
 ;; B49: #	out( B87 B50 ) <- in( B48 )  Freq: 0.887934
  0x00007faadd22fec4:   add    $0xffffffc1,%ebp
  0x00007faadd22fec7:   test   %ebp,%ebp
  0x00007faadd22fec9:   jl     0x00007faadd230305
 ;; B50: #	out( B86 B51 ) <- in( B49 )  Freq: 0.887933
  0x00007faadd22fecf:   cmp    %ebp,%ebx
  0x00007faadd22fed1:   jae    0x00007faadd2302f4
 ;; B51: #	out( B52 ) <- in( B50 )  Freq: 0.887932
  0x00007faadd22fed7:   vmovq  %xmm0,%rsi
  0x00007faadd22fedc:   vmovdqu32 %zmm6,0x10(%r10,%r8,1)
 ;; B52: #	out( B55 B53 ) <- in( B69 B51 )  Freq: 0.943485
  0x00007faadd22fee7:   add    $0x40,%ebx
  0x00007faadd22feea:   cmp    %ecx,%ebx
  0x00007faadd22feec:   jge    0x00007faadd22fefd
 ;; B53: #	out( B42 ) <- in( B52 )  Freq: 0.471742
  0x00007faadd22feee:   vmovq  %rsi,%xmm0
  0x00007faadd22fef3:   jmpq   0x00007faadd22fe5c
 ;; B54: #	out( B55 ) <- in( B40 )  Freq: 0.471746
  0x00007faadd22fef8:   vmovq  %xmm0,%rsi
 ;; B55: #	out( B56 ) <- in( B52 B54 )  Freq: 0.943488
  0x00007faadd22fefd:   vmovd  %xmm2,%r8d
 ;; B56: #	out( B94 B57 ) <- in( B55 B1 )  Freq: 0.999045
  0x00007faadd22ff02:   mov    0xc(%rsi),%r10d              ; implicit exception: dispatches to 0x00007faadd2303a0
 ;; B57: #	out( B82 B58 ) <- in( B56 )  Freq: 0.999044
  0x00007faadd22ff06:   cmp    %r10d,%r8d
  0x00007faadd22ff09:   jae    0x00007faadd230250           ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
 ;; B58: #	out( N1 ) <- in( B57 )  Freq: 0.999043
  0x00007faadd22ff0f:   movsbl 0x10(%rsi,%r8,1),%eax        ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - indexvec::micro@6 (line 10)
  0x00007faadd22ff15:   vzeroupper 
  0x00007faadd22ff18:   add    $0x110,%rsp
  0x00007faadd22ff1f:   pop    %rbp
  0x00007faadd22ff20:   cmp    0x3b8(%r15),%rsp             ;   {poll_return}
  0x00007faadd22ff27:   ja     0x00007faadd2303f8
  0x00007faadd22ff2d:   retq   
 ;; B59: #	out( B93 B60 ) <- in( B10 )  Freq: 0.111217
  0x00007faadd22ff2e:   vmovq  %xmm0,%r8
  0x00007faadd22ff33:   mov    0xc(%r8),%ebp                ; implicit exception: dispatches to 0x00007faadd23037c
 ;; B60: #	out( B88 B61 ) <- in( B59 )  Freq: 0.111217
  0x00007faadd22ff37:   movslq %ebp,%r8
  0x00007faadd22ff3a:   add    $0xffffffffffffffc0,%r8
  0x00007faadd22ff3e:   nop
  0x00007faadd22ff3f:   nop
  0x00007faadd22ff40:   cmp    %r8,%rsi
  0x00007faadd22ff43:   jle    0x00007faadd230311
 ;; B61: #	out( B78 B62 ) <- in( B60 )  Freq: 0.111217
  0x00007faadd22ff49:   mov    %ebp,%r8d
  0x00007faadd22ff4c:   sub    %ebx,%r8d
  0x00007faadd22ff4f:   cmp    %eax,%r8d
  0x00007faadd22ff52:   cmovg  %eax,%r8d
  0x00007faadd22ff56:   cmp    %r11d,%r8d
  0x00007faadd22ff59:   cmovl  %r11d,%r8d
  0x00007faadd22ff5d:   vpbroadcastb %r8d,%zmm7
  0x00007faadd22ff63:   vpcmpb $0x5,%zmm7,%zmm4,%k7         ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
  0x00007faadd22ff6a:   kandq  %k4,%k7,%k7                  ;*invokevirtual and {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.Byte512Vector$Byte512Mask::and@2 (line 677)
                                                            ; - jdk.incubator.vector.AbstractMask::indexInRange@52 (line 226)
                                                            ; - jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
                                                            ; - indexvec::micro@15 (line 11)
  0x00007faadd22ff6f:   kortestq %k7,%k7
  0x00007faadd22ff74:   jne    0x00007faadd23017c
 ;; B62: #	out( B15 ) <- in( B61 )  Freq: 0.111217
  0x00007faadd22ff7a:   vmovq  %xmm0,%r8                    ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
  0x00007faadd22ff7f:   vmovdqu8 %zmm6,0x10(%r8,%rsi,1){%k4};*invokevirtual and {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.Byte512Vector$Byte512Mask::and@2 (line 677)
                                                            ; - jdk.incubator.vector.AbstractMask::indexInRange@52 (line 226)
                                                            ; - jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
                                                            ; - indexvec::micro@15 (line 11)
  0x00007faadd22ff8a:   jmpq   0x00007faadd22fc46
 ;; B63: #	out( B80 B64 ) <- in( B8 )  Freq: 0.111189
  0x00007faadd22ff8f:   mov    %r13d,%ebp
  0x00007faadd22ff92:   sub    %ebx,%ebp
  0x00007faadd22ff94:   cmp    %eax,%ebp
  0x00007faadd22ff96:   cmovg  %eax,%ebp
  0x00007faadd22ff99:   cmp    %r11d,%ebp
  0x00007faadd22ff9c:   cmovl  %r11d,%ebp
  0x00007faadd22ffa0:   vpbroadcastb %ebp,%zmm6
  0x00007faadd22ffa6:   vpcmpb $0x5,%zmm6,%zmm4,%k7         ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
  0x00007faadd22ffad:   kandq  %k4,%k7,%k7                  ;*invokevirtual and {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.AbstractMask::indexInRange@52 (line 226)
                                                            ; - jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
                                                            ; - indexvec::micro@15 (line 11)
  0x00007faadd22ffb2:   kortestq %k7,%k7
  0x00007faadd22ffb7:   jne    0x00007faadd2301f0           ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
 ;; B64: #	out( B10 ) <- in( B63 )  Freq: 0.111189
  0x00007faadd22ffbd:   vmovdqu8 0x10(%rdx,%rsi,1),%zmm6{%k4}{z};*invokevirtual and {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.Byte512Vector$Byte512Mask::and@2 (line 677)
                                                            ; - jdk.incubator.vector.AbstractMask::indexInRange@52 (line 226)
                                                            ; - jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
                                                            ; - indexvec::micro@15 (line 11)
  0x00007faadd22ffc8:   jmpq   0x00007faadd22fc14
 ;; B65: #	out( B8 ) <- in( B6 )  Freq: 0.11111
  0x00007faadd22ffcd:   vmovq  %xmm1,%r8
  0x00007faadd22ffd2:   sub    %rsi,%r8
  0x00007faadd22ffd5:   movabs $0xffffffffffffffff,%rbp
  0x00007faadd22ffdf:   bzhi   %r8,%rbp,%rbp
  0x00007faadd22ffe4:   kmovq  %rbp,%k4                     ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
  0x00007faadd22ffe9:   vpmovm2b %k4,%zmm5
  0x00007faadd22ffef:   vpabsb %zmm5,%zmm5                  ;*invokevirtual dummyVector {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::fromArray@25 (line 3008)
                                                            ; - indexvec::micro@30 (line 12)
  0x00007faadd22fff5:   jmpq   0x00007faadd22fbfa
 ;; B66: #	out( B93 B67 ) <- in( B47 )  Freq: 0.0555528
  0x00007faadd22fffa:   vmovq  %xmm0,%r10
  0x00007faadd22ffff:   nop
  0x00007faadd230000:   mov    0xc(%r10),%ebp               ; implicit exception: dispatches to 0x00007faadd23037c
 ;; B67: #	out( B89 B68 ) <- in( B66 )  Freq: 0.0555527
  0x00007faadd230004:   movslq %ebp,%r10
  0x00007faadd230007:   add    $0xffffffffffffffc0,%r10
  0x00007faadd23000b:   cmp    %r10,%r8
  0x00007faadd23000e:   jle    0x00007faadd23031d
 ;; B68: #	out( B90 B69 ) <- in( B67 )  Freq: 0.0555527
  0x00007faadd230014:   mov    %ebp,%r10d
  0x00007faadd230017:   sub    %ebx,%r10d
  0x00007faadd23001a:   cmp    %eax,%r10d
  0x00007faadd23001d:   cmovg  %eax,%r10d
  0x00007faadd230021:   cmp    %r11d,%r10d
  0x00007faadd230024:   cmovl  %r11d,%r10d
  0x00007faadd230028:   vpbroadcastb %r10d,%zmm7
  0x00007faadd23002e:   vpcmpb $0x5,%zmm7,%zmm4,%k7         ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
  0x00007faadd230035:   kandq  %k4,%k7,%k7                  ;*invokevirtual vspecies {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.Byte512Vector$Byte512Mask::vspecies@1 (line 677)
                                                            ; - jdk.incubator.vector.AbstractMask::vectorSpecies@1 (line 67)
                                                            ; - jdk.incubator.vector.VectorMask::length@1 (line 154)
                                                            ; - jdk.incubator.vector.AbstractMask::indexInRange@35 (line 223)
                                                            ; - jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
                                                            ; - indexvec::micro@15 (line 11)
  0x00007faadd23003a:   nop
  0x00007faadd23003b:   nop
  0x00007faadd23003c:   nop
  0x00007faadd23003d:   nop
  0x00007faadd23003e:   nop
  0x00007faadd23003f:   nop
  0x00007faadd230040:   kortestq %k7,%k7
  0x00007faadd230045:   jne    0x00007faadd230338
 ;; B69: #	out( B52 ) <- in( B68 )  Freq: 0.0555526
  0x00007faadd23004b:   vmovq  %xmm0,%r10                   ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
  0x00007faadd230050:   vmovdqu8 %zmm6,0x10(%r10,%r8,1){%k4};*invokevirtual laneCount {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.VectorMask::length@9 (line 155)
                                                            ; - jdk.incubator.vector.AbstractMask::indexInRange@35 (line 223)
                                                            ; - jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
                                                            ; - indexvec::micro@15 (line 11)
  0x00007faadd23005b:   vmovq  %xmm0,%rsi
  0x00007faadd230060:   jmpq   0x00007faadd22fee7
 ;; B70: #	out( B91 B71 ) <- in( B45 )  Freq: 0.0555384
  0x00007faadd230065:   mov    %r13d,%r10d
  0x00007faadd230068:   sub    %ebx,%r10d
  0x00007faadd23006b:   cmp    %eax,%r10d
  0x00007faadd23006e:   cmovg  %eax,%r10d
  0x00007faadd230072:   cmp    %r11d,%r10d
  0x00007faadd230075:   cmovl  %r11d,%r10d
  0x00007faadd230079:   vpbroadcastb %r10d,%zmm6
  0x00007faadd23007f:   vpcmpb $0x5,%zmm6,%zmm4,%k7         ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
  0x00007faadd230086:   kandq  %k4,%k7,%k7                  ;*invokevirtual vspecies {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.AbstractMask::vectorSpecies@1 (line 67)
                                                            ; - jdk.incubator.vector.VectorMask::length@1 (line 154)
                                                            ; - jdk.incubator.vector.AbstractMask::indexInRange@35 (line 223)
                                                            ; - jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
                                                            ; - indexvec::micro@15 (line 11)
  0x00007faadd23008b:   kortestq %k7,%k7
  0x00007faadd230090:   jne    0x00007faadd23034c           ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
 ;; B71: #	out( B47 ) <- in( B70 )  Freq: 0.0555384
  0x00007faadd230096:   vmovdqu8 0x10(%rdx,%r8,1),%zmm6{%k4}{z};*invokevirtual laneCount {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.VectorMask::length@9 (line 155)
                                                            ; - jdk.incubator.vector.AbstractMask::indexInRange@35 (line 223)
                                                            ; - jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
                                                            ; - indexvec::micro@15 (line 11)
  0x00007faadd2300a1:   jmpq   0x00007faadd22fea9
 ;; B72: #	out( B45 ) <- in( B43 )  Freq: 0.0554993
  0x00007faadd2300a6:   vmovq  %xmm1,%r10
  0x00007faadd2300ab:   sub    %r8,%r10
  0x00007faadd2300ae:   movabs $0xffffffffffffffff,%rsi
  0x00007faadd2300b8:   bzhi   %r10,%rsi,%rsi
  0x00007faadd2300bd:   kmovq  %rsi,%k4                     ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
  0x00007faadd2300c2:   vpmovm2b %k4,%zmm5
  0x00007faadd2300c8:   vpabsb %zmm5,%zmm5                  ;*invokevirtual dummyVector {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::fromArray@25 (line 3008)
                                                            ; - indexvec::micro@30 (line 12)
  0x00007faadd2300ce:   jmpq   0x00007faadd22fe95
 ;; B73: #	out( B74 ) <- in( B12 B29 )  Freq: 0.000289456
  0x00007faadd2300d3:   vmovdqu64 %zmm6,(%rsp)              ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
 ;; B74: #	out( N1 ) <- in( B87 B73 )  Freq: 0.000290343
  0x00007faadd2300da:   mov    $0xffffffcc,%esi             ;*invokevirtual maskAll {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
                                                            ; - indexvec::micro@15 (line 11)
  0x00007faadd2300df:   mov    %rdx,0x48(%rsp)
  0x00007faadd2300e4:   mov    %ecx,0x50(%rsp)
  0x00007faadd2300e8:   vmovss %xmm2,0x54(%rsp)
  0x00007faadd2300ee:   vmovsd %xmm0,0x60(%rsp)
  0x00007faadd2300f4:   mov    %ebx,0x5c(%rsp)
  0x00007faadd2300f8:   vzeroupper 
  0x00007faadd2300fb:   callq  0x00007faadd1362a0           ; ImmutableOopMap {[72]=Oop [96]=Oop }
                                                            ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::checkIndex@3 (line 385)
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 57)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@7 (line 3376)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@10 (line 3417)
                                                            ; - indexvec::micro@38 (line 13)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007faadd230100:   movabs $0x7faae8bf7378,%rdi         ;   {external_word}
  0x00007faadd23010a:   and    $0xfffffffffffffff0,%rsp
  0x00007faadd23010e:   callq  0x00007faae827c9a0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007faadd230113:   hlt    
 ;; B75: #	out( B76 ) <- in( B34 )  Freq: 1.79983e-05
  0x00007faadd230114:   cmp    %r10,%rsi
  0x00007faadd230117:   setle  %r11b
 ;; B76: #	out( B77 ) <- in( B88 B75 )  Freq: 1.81095e-05
  0x00007faadd23011b:   vmovdqu64 %zmm5,0x40(%rsp)
  0x00007faadd230123:   vmovdqu64 %zmm6,(%rsp)              ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
 ;; B77: #	out( N1 ) <- in( B89 B76 )  Freq: 1.81651e-05
  0x00007faadd23012a:   mov    $0xffffff45,%esi             ;*invokestatic maskAll {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@76 (line 4347)
                                                            ; - jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
                                                            ; - indexvec::micro@15 (line 11)
  0x00007faadd23012f:   mov    %rdx,0x80(%rsp)
  0x00007faadd230137:   mov    %ecx,0x88(%rsp)
  0x00007faadd23013e:   vmovss %xmm2,0x8c(%rsp)
  0x00007faadd230147:   vmovsd %xmm0,0x98(%rsp)
  0x00007faadd230150:   mov    %ebx,0x94(%rsp)
  0x00007faadd230157:   mov    %r11d,0xa0(%rsp)             ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
  0x00007faadd23015f:   nop
  0x00007faadd230160:   vzeroupper 
  0x00007faadd230163:   callq  0x00007faadd1362a0           ; ImmutableOopMap {[128]=Oop [152]=Oop }
                                                            ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) jdk.incubator.vector.ByteVector::intoArray@36 (line 3420)
                                                            ; - indexvec::micro@38 (line 13)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007faadd230168:   movabs $0x7faae8bf7378,%rdi         ;   {external_word}
  0x00007faadd230172:   and    $0xfffffffffffffff0,%rsp
  0x00007faadd230176:   callq  0x00007faae827c9a0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007faadd23017b:   hlt    
 ;; B78: #	out( B79 ) <- in( B61 B35 )  Freq: 1.81095e-05
  0x00007faadd23017c:   vmovdqu64 %zmm5,0x40(%rsp)
  0x00007faadd230184:   vmovdqu64 %zmm6,(%rsp)
 ;; B79: #	out( N1 ) <- in( B90 B78 )  Freq: 1.8165e-05
  0x00007faadd23018b:   mov    $0xffffffad,%esi             ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
  0x00007faadd230190:   vpmovm2b %k7,%zmm1
  0x00007faadd230196:   vpabsb %zmm1,%zmm1                  ;*synchronization entry
                                                            ; - jdk.incubator.vector.ByteVector$ByteSpecies::vectorType@-1 (line 4124)
                                                            ; - jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@1 (line 4341)
                                                            ; - jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
                                                            ; - indexvec::micro@15 (line 11)
  0x00007faadd23019c:   mov    %rdx,0x88(%rsp)
  0x00007faadd2301a4:   mov    %ecx,0x90(%rsp)
  0x00007faadd2301ab:   vmovss %xmm2,0x94(%rsp)
  0x00007faadd2301b4:   vmovsd %xmm0,0xa0(%rsp)
  0x00007faadd2301bd:   mov    %ebx,0x9c(%rsp)
  0x00007faadd2301c4:   mov    %ebx,0xa8(%rsp)
  0x00007faadd2301cb:   vmovdqu64 %zmm1,0xc0(%rsp)          ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
  0x00007faadd2301d3:   nop
  0x00007faadd2301d4:   vzeroupper 
  0x00007faadd2301d7:   callq  0x00007faadd1362a0           ; ImmutableOopMap {[136]=Oop [160]=Oop }
                                                            ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.Byte512Vector$Byte512Mask::firstTrue@11 (line 854)
                                                            ; - jdk.incubator.vector.AbstractMask::checkIndexByLane@119 (line 295)
                                                            ; - jdk.incubator.vector.ByteVector::checkMaskFromIndexSize@12 (line 3926)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@46 (line 3421)
                                                            ; - indexvec::micro@38 (line 13)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007faadd2301dc:   movabs $0x7faae8bf7378,%rdi         ;   {external_word}
  0x00007faadd2301e6:   and    $0xfffffffffffffff0,%rsp
  0x00007faadd2301ea:   callq  0x00007faae827c9a0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007faadd2301ef:   hlt    
 ;; B80: #	out( B81 ) <- in( B63 B37 )  Freq: 1.81048e-05
  0x00007faadd2301f0:   vmovdqu64 %zmm5,(%rsp)
 ;; B81: #	out( N1 ) <- in( B91 B80 )  Freq: 1.81604e-05
  0x00007faadd2301f7:   mov    $0xffffffad,%esi             ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
  0x00007faadd2301fc:   vpmovm2b %k7,%zmm1
  0x00007faadd230202:   vpabsb %zmm1,%zmm1                  ;*invokevirtual vectorType {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@1 (line 4341)
                                                            ; - jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
                                                            ; - indexvec::micro@15 (line 11)
  0x00007faadd230208:   vmovq  %xmm0,%rbp
  0x00007faadd23020d:   mov    %ecx,0x48(%rsp)
  0x00007faadd230211:   vmovss %xmm2,0x4c(%rsp)
  0x00007faadd230217:   mov    %rdx,0x58(%rsp)
  0x00007faadd23021c:   mov    %ebx,0x54(%rsp)
  0x00007faadd230220:   mov    %ebx,0x60(%rsp)
  0x00007faadd230224:   mov    %r13d,0x64(%rsp)
  0x00007faadd230229:   vmovdqu64 %zmm1,0x80(%rsp)          ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
  0x00007faadd230231:   nop
  0x00007faadd230232:   nop
  0x00007faadd230233:   nop
  0x00007faadd230234:   vzeroupper 
  0x00007faadd230237:   callq  0x00007faadd1362a0           ; ImmutableOopMap {rbp=Oop [88]=Oop }
                                                            ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.Byte512Vector$Byte512Mask::firstTrue@11 (line 854)
                                                            ; - jdk.incubator.vector.AbstractMask::checkIndexByLane@119 (line 295)
                                                            ; - jdk.incubator.vector.ByteVector::checkMaskFromIndexSize@12 (line 3926)
                                                            ; - jdk.incubator.vector.ByteVector::fromArray@43 (line 3011)
                                                            ; - indexvec::micro@30 (line 12)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007faadd23023c:   movabs $0x7faae8bf7378,%rdi         ;   {external_word}
  0x00007faadd230246:   and    $0xfffffffffffffff0,%rsp
  0x00007faadd23024a:   callq  0x00007faae827c9a0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007faadd23024f:   hlt    
 ;; B82: #	out( N1 ) <- in( B57 )  Freq: 1.01231e-06
  0x00007faadd230250:   mov    %rsi,%rbp
  0x00007faadd230253:   mov    %r8d,(%rsp)                  ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
  0x00007faadd230257:   mov    $0xffffffe4,%esi
  0x00007faadd23025c:   vzeroupper 
  0x00007faadd23025f:   callq  0x00007faadd1362a0           ; ImmutableOopMap {rbp=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - indexvec::micro@59 (line 15)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007faadd230264:   movabs $0x7faae8bf7378,%rdi         ;   {external_word}
  0x00007faadd23026e:   and    $0xfffffffffffffff0,%rsp
  0x00007faadd230272:   callq  0x00007faae827c9a0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007faadd230277:   hlt    
 ;; B83: #	out( N1 ) <- in( B3 )  Freq: 9.56983e-07
  0x00007faadd230278:   mov    %rsi,%rbp
  0x00007faadd23027b:   mov    %rdx,(%rsp)
  0x00007faadd23027f:   mov    %r8d,0xc(%rsp)
  0x00007faadd230284:   mov    %ecx,0x10(%rsp)              ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
  0x00007faadd230288:   mov    $0xffffff6e,%esi
  0x00007faadd23028d:   nop
  0x00007faadd23028e:   nop
  0x00007faadd23028f:   nop
  0x00007faadd230290:   vzeroupper 
  0x00007faadd230293:   callq  0x00007faadd1362a0           ; ImmutableOopMap {rbp=Oop [0]=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) indexvec::micro@6 (line 10)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007faadd230298:   movabs $0x7faae8bf7378,%rdi         ;   {external_word}
  0x00007faadd2302a2:   and    $0xfffffffffffffff0,%rsp
  0x00007faadd2302a6:   callq  0x00007faae827c9a0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007faadd2302ab:   hlt    
 ;; B84: #	out( B85 ) <- in( B42 )  Freq: 4.4989e-07
  0x00007faadd2302ac:   vmovq  %xmm0,%rsi
  0x00007faadd2302b1:   vmovd  %xmm2,%r8d                   ;*invokevirtual maskAll {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
                                                            ; - indexvec::micro@15 (line 11)
 ;; B85: #	out( N1 ) <- in( B84 B5 )  Freq: 1.35058e-06
  0x00007faadd2302b6:   mov    %rsi,%rbp
  0x00007faadd2302b9:   mov    %rdx,(%rsp)
  0x00007faadd2302bd:   mov    %r8d,0xc(%rsp)
  0x00007faadd2302c2:   mov    %ebx,0x14(%rsp)
  0x00007faadd2302c6:   mov    %ecx,0x18(%rsp)
  0x00007faadd2302ca:   vmovdqu64 %zmm3,0x40(%rsp)          ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
  0x00007faadd2302d2:   mov    $0xffffff45,%esi
  0x00007faadd2302d7:   nop
  0x00007faadd2302d8:   vzeroupper 
  0x00007faadd2302db:   callq  0x00007faadd1362a0           ; ImmutableOopMap {rbp=Oop [0]=Oop }
                                                            ;*if_icmplt {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) jdk.incubator.vector.AbstractMask::indexInRange@17 (line 221)
                                                            ; - jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
                                                            ; - indexvec::micro@15 (line 11)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007faadd2302e0:   movabs $0x7faae8bf7378,%rdi         ;   {external_word}
  0x00007faadd2302ea:   and    $0xfffffffffffffff0,%rsp
  0x00007faadd2302ee:   callq  0x00007faae827c9a0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007faadd2302f3:   hlt    
 ;; B86: #	out( B32 ) <- in( B50 )  Freq: 8.99724e-07
  0x00007faadd2302f4:   vmovdqu64 %zmm6,(%rsp)
  0x00007faadd2302fb:   nop
  0x00007faadd2302fc:   nop
  0x00007faadd2302fd:   nop
  0x00007faadd2302fe:   nop
  0x00007faadd2302ff:   nop
  0x00007faadd230300:   jmpq   0x00007faadd22fd3e
 ;; B87: #	out( B74 ) <- in( B49 )  Freq: 8.87934e-07
  0x00007faadd230305:   vmovdqu64 %zmm6,(%rsp)
  0x00007faadd23030c:   jmpq   0x00007faadd2300da
 ;; B88: #	out( B76 ) <- in( B60 )  Freq: 1.11217e-07
  0x00007faadd230311:   cmp    %r8,%rsi                     ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
  0x00007faadd230314:   setle  %r11b                        ;*invokevirtual dummyVector {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::fromArray@25 (line 3008)
                                                            ; - indexvec::micro@30 (line 12)
  0x00007faadd230318:   jmpq   0x00007faadd23011b
 ;; B89: #	out( B77 ) <- in( B67 )  Freq: 5.55527e-08
  0x00007faadd23031d:   cmp    %r10,%r8                     ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
  0x00007faadd230320:   setle  %r11b                        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::fromArray@20 (line 3007)
                                                            ; - indexvec::micro@30 (line 12)
  0x00007faadd230324:   vmovdqu64 %zmm5,0x40(%rsp)
  0x00007faadd23032c:   vmovdqu64 %zmm6,(%rsp)
  0x00007faadd230333:   jmpq   0x00007faadd23012a
 ;; B90: #	out( B79 ) <- in( B68 )  Freq: 5.55527e-08
  0x00007faadd230338:   vmovdqu64 %zmm5,0x40(%rsp)
  0x00007faadd230340:   vmovdqu64 %zmm6,(%rsp)
  0x00007faadd230347:   jmpq   0x00007faadd23018b
 ;; B91: #	out( B81 ) <- in( B70 )  Freq: 5.55384e-08
  0x00007faadd23034c:   vmovdqu64 %zmm5,(%rsp)
  0x00007faadd230353:   jmpq   0x00007faadd2301f7
 ;; B92: #	out( N1 ) <- in( B48 B11 B28 )  Freq: 0.000294199
  0x00007faadd230358:   mov    $0xfffffff6,%esi             ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
  0x00007faadd23035d:   nop
  0x00007faadd23035e:   nop
  0x00007faadd23035f:   nop
  0x00007faadd230360:   vzeroupper 
  0x00007faadd230363:   callq  0x00007faadd1362a0           ; ImmutableOopMap {}
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@6 (line 3376)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@10 (line 3417)
                                                            ; - indexvec::micro@38 (line 13)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007faadd230368:   movabs $0x7faae8bf7378,%rdi         ;   {external_word}
  0x00007faadd230372:   and    $0xfffffffffffffff0,%rsp
  0x00007faadd230376:   callq  0x00007faae827c9a0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007faadd23037b:   hlt                                 ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
 ;; B93: #	out( N1 ) <- in( B66 B59 B33 )  Freq: 1.84063e-05
  0x00007faadd23037c:   mov    $0xfffffff6,%esi             ;*invokevirtual vectorType {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@1 (line 4341)
                                                            ; - jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
                                                            ; - indexvec::micro@15 (line 11)
  0x00007faadd230381:   nop
  0x00007faadd230382:   nop
  0x00007faadd230383:   nop
  0x00007faadd230384:   vzeroupper 
  0x00007faadd230387:   callq  0x00007faadd1362a0           ; ImmutableOopMap {}
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@31 (line 3420)
                                                            ; - indexvec::micro@38 (line 13)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007faadd23038c:   movabs $0x7faae8bf7378,%rdi         ;   {external_word}
  0x00007faadd230396:   and    $0xfffffffffffffff0,%rsp
  0x00007faadd23039a:   callq  0x00007faae827c9a0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007faadd23039f:   hlt                                 ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
 ;; B94: #	out( N1 ) <- in( B56 )  Freq: 1.01231e-06
  0x00007faadd2303a0:   mov    $0xfffffff6,%esi             ;*invokevirtual fromArray0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::fromArray@32 (line 3008)
                                                            ; - indexvec::micro@30 (line 12)
  0x00007faadd2303a5:   mov    %r8d,%ebp
  0x00007faadd2303a8:   vzeroupper 
  0x00007faadd2303ab:   callq  0x00007faadd1362a0           ; ImmutableOopMap {}
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - indexvec::micro@59 (line 15)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007faadd2303b0:   movabs $0x7faae8bf7378,%rdi         ;   {external_word}
  0x00007faadd2303ba:   and    $0xfffffffffffffff0,%rsp
  0x00007faadd2303be:   callq  0x00007faae827c9a0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007faadd2303c3:   hlt    
 ;; B95: #	out( N1 ) <- in( B2 )  Freq: 9.56984e-07
  0x00007faadd2303c4:   mov    %rsi,%rbp
  0x00007faadd2303c7:   mov    %rdx,(%rsp)
  0x00007faadd2303cb:   mov    %r8d,0xc(%rsp)
  0x00007faadd2303d0:   mov    %ecx,0x10(%rsp)              ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
  0x00007faadd2303d4:   mov    $0xffffff76,%esi
  0x00007faadd2303d9:   nop
  0x00007faadd2303da:   nop
  0x00007faadd2303db:   nop
  0x00007faadd2303dc:   vzeroupper 
  0x00007faadd2303df:   callq  0x00007faadd1362a0           ; ImmutableOopMap {rbp=Oop [0]=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) indexvec::micro@6 (line 10)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007faadd2303e4:   movabs $0x7faae8bf7378,%rdi         ;   {external_word}
  0x00007faadd2303ee:   and    $0xfffffffffffffff0,%rsp
  0x00007faadd2303f2:   callq  0x00007faae827c9a0           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007faadd2303f7:   hlt                                 ;*invokestatic storeMasked {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
                                                            ; - jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
                                                            ; - jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
                                                            ; - indexvec::micro@38 (line 13)
  0x00007faadd2303f8:   movabs $0x7faadd22ff20,%r10         ;   {internal_word}
  0x00007faadd230402:   mov    %r10,0x3d0(%r15)
  0x00007faadd230409:   jmpq   0x00007faadd135120           ;   {runtime_call SafepointBlob}
  0x00007faadd23040e:   callq  Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (2)}
  0x00007faadd230413:   jmpq   0x00007faadd22fb5e
[Exception Handler]
  0x00007faadd230418:   jmpq   0x00007faadd040820           ;   {no_reloc}
[Deopt Handler Code]
  0x00007faadd23041d:   callq  0x00007faadd230422
  0x00007faadd230422:   subq   $0x5,(%rsp)
  0x00007faadd230427:   jmpq   0x00007faadd1365c0           ;   {runtime_call DeoptimizationBlob}
  0x00007faadd23042c:   hlt    
  0x00007faadd23042d:   hlt    
  0x00007faadd23042e:   hlt    
  0x00007faadd23042f:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Oops:
  0x00007faadd230430:   0x000000011903bac0 a 'java/lang/Class'{0x000000011903bac0} = 'jdk/incubator/vector/Byte512Vector'
  0x00007faadd230438:   0x0000000119000090 a 'java/lang/Class'{0x0000000119000090} = 'jdk/incubator/vector/Byte512Vector$Byte512Mask'
  0x00007faadd230440:   0x0000000119000110 a 'java/lang/Class'{0x0000000119000110} = byte
  0x00007faadd230448:   0x000000011903ba78 a 'jdk/incubator/vector/ByteVector$ByteSpecies'{0x000000011903ba78}
  0x00007faadd230450:   0x000000011903b970 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x000000011903b970}
  0x00007faadd230458:   0x000000011903bb50 a 'java/lang/Class'{0x000000011903bb50} = 'java/lang/invoke/LambdaForm$MH+0x00000008000c1400'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Metadata:
  0x00007faadd230460:   0x00007faa94701558 {method} {0x00007faa94701558} 'micro' '([B[BII)B' in 'indexvec'
  0x00007faadd230468:   0x00007faa946b4240 {method} {0x00007faa946b4240} 'indexInRange' '(II)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/AbstractSpecies'
  0x00007faadd230470:   0x00007faa946aec08 {method} {0x00007faa946aec08} 'maskAll' '(Z)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/ByteVector$ByteSpecies'
  0x00007faadd230478:   0x00007faa94785fb8 {method} {0x00007faa94785fb8} 'maskAll' '(Z)Ljdk/incubator/vector/Byte512Vector$Byte512Mask;' in 'jdk/incubator/vector/Byte512Vector$Byte512Mask'
  0x00007faadd230480:   0x00007faa94662a68 {method} {0x00007faa94662a68} 'intoArray' '([BILjdk/incubator/vector/VectorMask;)V' in 'jdk/incubator/vector/ByteVector'
  0x00007faadd230488:   0x00007faa946fea38 {method} {0x00007faa946fea38} 'intoArray0' '([BILjdk/incubator/vector/VectorMask;)V' in 'jdk/incubator/vector/Byte512Vector'
  0x00007faadd230490:   0x00007faa94664388 {method} {0x00007faa94664388} 'intoArray0Template' '(Ljava/lang/Class;[BILjdk/incubator/vector/VectorMask;)V' in 'jdk/incubator/vector/ByteVector'
  0x00007faadd230498:   0x00007faa946d01e0 {method} {0x00007faa946d01e0} 'indexInRange' '(II)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/AbstractMask'
  0x00007faadd2304a0:   0x00007faa94786828 {method} {0x00007faa94786828} 'and' '(Ljdk/incubator/vector/VectorMask;)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/Byte512Vector$Byte512Mask'
  0x00007faadd2304a8:   0x00007faa947856e8 {method} {0x00007faa947856e8} 'and' '(Ljdk/incubator/vector/VectorMask;)Ljdk/incubator/vector/Byte512Vector$Byte512Mask;' in 'jdk/incubator/vector/Byte512Vector$Byte512Mask'
  0x00007faadd2304b0:   0x00007faa9450d240 {method} {0x00007faa9450d240} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x00000008000c1400'
  0x00007faadd2304b8:   0x00007faa94661e28 {method} {0x00007faa94661e28} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[BILjdk/incubator/vector/VectorMask;)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector'
  0x00007faadd2304c0:   0x00007faa946adc50 {method} {0x00007faa946adc50} 'dummyVector' '()Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector$ByteSpecies'
  0x00007faadd2304c8:   0x00007faa94662920 {method} {0x00007faa94662920} 'intoArray' '([BI)V' in 'jdk/incubator/vector/ByteVector'
  0x00007faadd2304d0:   0x00007faa9479dd98 {method} {0x00007faa9479dd98} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
  0x00007faadd2304d8:   0x00007faa941909a8 {method} {0x00007faa941909a8} 'checkIndex' '(II)I' in 'java/util/Objects'
  0x00007faadd2304e0:   0x00007faa9479dc70 {method} {0x00007faa9479dc70} 'indexInRange' '(JJJ)Z' in 'jdk/incubator/vector/VectorIntrinsics'
  0x00007faadd2304e8:   0x00007faa946d1e98 {method} {0x00007faa946d1e98} 'length' '()I' in 'jdk/incubator/vector/VectorMask'
  0x00007faadd2304f0:   0x00007faa94786098 {method} {0x00007faa94786098} 'indexInRange0' '(JJ)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/Byte512Vector$Byte512Mask'
  0x00007faadd2304f8:   0x00007faa94785400 {method} {0x00007faa94785400} 'indexInRange0' '(JJ)Ljdk/incubator/vector/Byte512Vector$Byte512Mask;' in 'jdk/incubator/vector/Byte512Vector$Byte512Mask'
  0x00007faadd230500:   0x00007faa946cf068 {method} {0x00007faa946cf068} 'vectorSpecies' '()Ljdk/incubator/vector/VectorSpecies;' in 'jdk/incubator/vector/AbstractMask'
  0x00007faadd230508:   0x00007faa94786170 {method} {0x00007faa94786170} 'vspecies' '()Ljdk/incubator/vector/AbstractSpecies;' in 'jdk/incubator/vector/Byte512Vector$Byte512Mask'
  0x00007faadd230510:   0x00007faa946ad330 {method} {0x00007faa946ad330} 'vectorType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/ByteVector$ByteSpecies'
  0x00007faadd230518:   0x00007faa946649d0 {method} {0x00007faa946649d0} 'checkMaskFromIndexSize' '(ILjdk/incubator/vector/ByteVector$ByteSpecies;Ljdk/incubator/vector/VectorMask;II)V' in 'jdk/incubator/vector/ByteVector'
  0x00007faadd230520:   0x00007faa946d06e0 {method} {0x00007faa946d06e0} 'checkIndexByLane' '(IILjdk/incubator/vector/Vector;I)V' in 'jdk/incubator/vector/AbstractMask'
  0x00007faadd230528:   0x00007faa94785ae8 {method} {0x00007faa94785ae8} 'firstTrue' '()I' in 'jdk/incubator/vector/Byte512Vector$Byte512Mask'
  0x00007faadd230530:   0x000000080009a5a0 'jdk/incubator/vector/AbstractSpecies'
  0x00007faadd230538:   0x000000080009a988 'jdk/incubator/vector/ByteVector$ByteSpecies'
  0x00007faadd230540:   0x000000080009a198 'jdk/incubator/vector/VectorSpecies'
  0x00007faadd230548:   0x00007faa946b1d50 {method} {0x00007faa946b1d50} 'indexInRange' '(II)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/VectorSpecies'
  0x00007faadd230550:   0x00007faa946b3520 {method} {0x00007faa946b3520} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
  0x00007faadd230558:   0x00007faa946b1a00 {method} {0x00007faa946b1a00} 'length' '()I' in 'jdk/incubator/vector/VectorSpecies'
  0x00007faadd230560:   0x000000080009c858 'jdk/incubator/vector/VectorMask'
  0x00007faadd230568:   0x00007faa946d28b8 {method} {0x00007faa946d28b8} 'and' '(Ljdk/incubator/vector/VectorMask;)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/VectorMask'
  0x00007faadd230570:   0x000000080009f210 'jdk/incubator/vector/Byte512Vector$Byte512Mask'
  0x00007faadd230578:   0x00007faa946d2c28 {method} {0x00007faa946d2c28} 'indexInRange' '(II)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/VectorMask'
  0x00007faadd230580:   0x00007faa946d1db8 {method} {0x00007faa946d1db8} 'vectorSpecies' '()Ljdk/incubator/vector/VectorSpecies;' in 'jdk/incubator/vector/VectorMask'
  0x00007faadd230588:   0x00007faa946cf568 {method} {0x00007faa946cf568} 'check' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/AbstractMask'
  0x00007faadd230590:   0x00007faa946d2f90 {method} {0x00007faa946d2f90} 'check' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/VectorMask'
  0x00007faadd230598:   0x000000080009cb20 'jdk/incubator/vector/AbstractMask'
  0x00007faadd2305a0:   0x00000008000a3898 'jdk/incubator/vector/VectorOperators$ComparisonImpl'
  0x00007faadd2305a8:   0x00007faa947a5128 {method} {0x00007faa947a5128} 'opCode' '(II)I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  0x00007faadd2305b0:   0x00000008000a2478 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  0x00007faadd2305b8:   0x00007faa947a5208 {method} {0x00007faa947a5208} 'opCodeRaw' '()I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
pc-bytecode offsets:
PcDesc(pc=0x00007faadd22fb3f offset=ffffffff bits=0):
PcDesc(pc=0x00007faadd22fb5e offset=1e bits=0):
   jdk.incubator.vector.Byte512Vector$Byte512Mask::maskAll@28 (line 896)
   jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@76 (line 4347)
   jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
   indexvec::micro@15 (line 11)
PcDesc(pc=0x00007faadd22fbaa offset=6a bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd22fbb6 offset=76 bits=0):
   jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
   indexvec::micro@15 (line 11)
PcDesc(pc=0x00007faadd22fbd9 offset=99 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd22fbe3 offset=a3 bits=0):
   jdk.incubator.vector.AbstractMask::indexInRange@52 (line 226)
   jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
   indexvec::micro@15 (line 11)
PcDesc(pc=0x00007faadd22fbe6 offset=a6 bits=0):
   java.lang.invoke.LambdaForm$MH/0x00000008000c1400::linkToTargetMethod@4
   jdk.incubator.vector.Byte512Vector$Byte512Mask::and@24 (line 817)
   jdk.incubator.vector.Byte512Vector$Byte512Mask::and@2 (line 677)
   jdk.incubator.vector.AbstractMask::indexInRange@52 (line 226)
   jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
   indexvec::micro@15 (line 11)
PcDesc(pc=0x00007faadd22fc09 offset=c9 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd22fc14 offset=d4 bits=0):
   jdk.incubator.vector.Byte512Vector$Byte512Mask::and@32 (line 817)
   jdk.incubator.vector.Byte512Vector$Byte512Mask::and@2 (line 677)
   jdk.incubator.vector.AbstractMask::indexInRange@52 (line 226)
   jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
   indexvec::micro@15 (line 11)
PcDesc(pc=0x00007faadd22fc3b offset=fb bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd22fc46 offset=106 bits=0):
   jdk.incubator.vector.Byte512Vector$Byte512Mask::and@32 (line 817)
   jdk.incubator.vector.Byte512Vector$Byte512Mask::and@2 (line 677)
   jdk.incubator.vector.AbstractMask::indexInRange@52 (line 226)
   jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
   indexvec::micro@15 (line 11)
PcDesc(pc=0x00007faadd22fc4c offset=10c bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd22fc6d offset=12d bits=0):
   jdk.incubator.vector.Byte512Vector$Byte512Mask::maskAll@9 (line 897)
   jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@76 (line 4347)
   jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
   indexvec::micro@15 (line 11)
PcDesc(pc=0x00007faadd22fc7c offset=13c bits=1):
   indexvec::micro@54 (line 10)  reexecute=true
   Locals
    - l0: reg xmm0 [48],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],int
    - l3: reg xmm2 [80],int
    - l4: reg rbx [6],int
    - l5: empty
PcDesc(pc=0x00007faadd22fc88 offset=148 bits=0):
   jdk.incubator.vector.ByteVector$ByteSpecies::dummyVector@-1 (line 4209)
   jdk.incubator.vector.ByteVector::fromArray@25 (line 3008)
   indexvec::micro@30 (line 12)
PcDesc(pc=0x00007faadd22fcb0 offset=170 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd22fcbb offset=17b bits=0):
   indexvec::micro@6 (line 10)
PcDesc(pc=0x00007faadd22fcc5 offset=185 bits=0):
   indexvec::micro@15 (line 11)
PcDesc(pc=0x00007faadd22fcd5 offset=195 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd22fcd8 offset=198 bits=0):
   jdk.incubator.vector.Byte512Vector$Byte512Mask::maskAll@20 (line 897)
   jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@76 (line 4347)
   jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
   indexvec::micro@15 (line 11)
PcDesc(pc=0x00007faadd22fcf8 offset=1b8 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd22fd09 offset=1c9 bits=0):
   jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
   indexvec::micro@15 (line 11)
PcDesc(pc=0x00007faadd22fd29 offset=1e9 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd22fd43 offset=203 bits=0):
   jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@0 (line 4341)
   jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
   indexvec::micro@15 (line 11)
PcDesc(pc=0x00007faadd22fd64 offset=224 bits=0):
   java.util.Objects::checkIndex@3 (line 385)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[92]
    - @1: reg rbp [10],int
    - @2: nullptr
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 57)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.ByteVector::intoArray@7 (line 3376)
   Locals
    - l0: obj[466]
    - l1: stack[96],oop
    - l2: empty
    - l3: empty
   jdk.incubator.vector.ByteVector::intoArray@10 (line 3417)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   indexvec::micro@38 (line 13)
   Locals
    - l0: stack[96],oop
    - l1: stack[72],oop
    - l2: stack[80]
    - l3: stack[84]
    - l4: stack[92]
    - l5: empty
   Objects
    - 466: jdk.incubator.vector.Byte512Vector stack[0],vector
PcDesc(pc=0x00007faadd22fdb5 offset=275 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd22fdba offset=27a bits=0):
   java.lang.invoke.LambdaForm$MH/0x00000008000c1400::linkToTargetMethod@4
   jdk.incubator.vector.Byte512Vector$Byte512Mask::maskAll@20 (line 897)
   jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@76 (line 4347)
   jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
   indexvec::micro@15 (line 11)
PcDesc(pc=0x00007faadd22fddb offset=29b bits=0):
   indexvec::micro@15 (line 11)
PcDesc(pc=0x00007faadd22fe06 offset=2c6 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd22fe0b offset=2cb bits=0):
   java.lang.invoke.LambdaForm$MH/0x00000008000c1400::linkToTargetMethod@4
   jdk.incubator.vector.Byte512Vector$Byte512Mask::maskAll@20 (line 897)
   jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@76 (line 4347)
   jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
   indexvec::micro@15 (line 11)
PcDesc(pc=0x00007faadd22fe42 offset=302 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd22fe4e offset=30e bits=0):
   jdk.incubator.vector.VectorIntrinsics::indexInRange@12 (line 49)
   jdk.incubator.vector.ByteVector::fromArray@17 (line 3007)
   indexvec::micro@30 (line 12)
PcDesc(pc=0x00007faadd22fe68 offset=328 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd22fe72 offset=332 bits=0):
   jdk.incubator.vector.VectorMask::length@9 (line 155)
   jdk.incubator.vector.AbstractMask::indexInRange@35 (line 223)
   jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
   indexvec::micro@15 (line 11)
PcDesc(pc=0x00007faadd22fe78 offset=338 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd22fe7b offset=33b bits=0):
   jdk.incubator.vector.Byte512Vector$Byte512Mask::indexInRange0@3 (line 677)
   jdk.incubator.vector.AbstractMask::indexInRange@49 (line 226)
   jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
   indexvec::micro@15 (line 11)
PcDesc(pc=0x00007faadd22fe9e offset=35e bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd22fea9 offset=369 bits=0):
   java.lang.invoke.LambdaForm$MH/0x00000008000c1400::linkToTargetMethod@4
   jdk.incubator.vector.Byte512Vector$Byte512Mask::indexInRange0@10 (line 788)
   jdk.incubator.vector.Byte512Vector$Byte512Mask::indexInRange0@3 (line 677)
   jdk.incubator.vector.AbstractMask::indexInRange@49 (line 226)
   jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
   indexvec::micro@15 (line 11)
PcDesc(pc=0x00007faadd22ff0f offset=3cf bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd22ff15 offset=3d5 bits=0):
   indexvec::micro@6 (line 10)
PcDesc(pc=0x00007faadd22ff6a offset=42a bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd22ff6f offset=42f bits=0):
   jdk.incubator.vector.Byte512Vector$Byte512Mask::and@2 (line 677)
   jdk.incubator.vector.AbstractMask::indexInRange@52 (line 226)
   jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
   indexvec::micro@15 (line 11)
PcDesc(pc=0x00007faadd22ff7f offset=43f bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd22ff8a offset=44a bits=0):
   jdk.incubator.vector.Byte512Vector$Byte512Mask::and@2 (line 677)
   jdk.incubator.vector.AbstractMask::indexInRange@52 (line 226)
   jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
   indexvec::micro@15 (line 11)
PcDesc(pc=0x00007faadd22ffad offset=46d bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd22ffb2 offset=472 bits=0):
   jdk.incubator.vector.AbstractMask::indexInRange@52 (line 226)
   jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
   indexvec::micro@15 (line 11)
PcDesc(pc=0x00007faadd22ffbd offset=47d bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd22ffc8 offset=488 bits=0):
   jdk.incubator.vector.Byte512Vector$Byte512Mask::and@2 (line 677)
   jdk.incubator.vector.AbstractMask::indexInRange@52 (line 226)
   jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
   indexvec::micro@15 (line 11)
PcDesc(pc=0x00007faadd22ffe9 offset=4a9 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd22fff5 offset=4b5 bits=0):
   jdk.incubator.vector.ByteVector::fromArray@25 (line 3008)
   indexvec::micro@30 (line 12)
PcDesc(pc=0x00007faadd230035 offset=4f5 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd23003a offset=4fa bits=0):
   jdk.incubator.vector.Byte512Vector$Byte512Mask::vspecies@1 (line 677)
   jdk.incubator.vector.AbstractMask::vectorSpecies@1 (line 67)
   jdk.incubator.vector.VectorMask::length@1 (line 154)
   jdk.incubator.vector.AbstractMask::indexInRange@35 (line 223)
   jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
   indexvec::micro@15 (line 11)
PcDesc(pc=0x00007faadd230050 offset=510 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd23005b offset=51b bits=0):
   jdk.incubator.vector.VectorMask::length@9 (line 155)
   jdk.incubator.vector.AbstractMask::indexInRange@35 (line 223)
   jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
   indexvec::micro@15 (line 11)
PcDesc(pc=0x00007faadd230086 offset=546 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd23008b offset=54b bits=0):
   jdk.incubator.vector.AbstractMask::vectorSpecies@1 (line 67)
   jdk.incubator.vector.VectorMask::length@1 (line 154)
   jdk.incubator.vector.AbstractMask::indexInRange@35 (line 223)
   jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
   indexvec::micro@15 (line 11)
PcDesc(pc=0x00007faadd230096 offset=556 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd2300a1 offset=561 bits=0):
   jdk.incubator.vector.VectorMask::length@9 (line 155)
   jdk.incubator.vector.AbstractMask::indexInRange@35 (line 223)
   jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
   indexvec::micro@15 (line 11)
PcDesc(pc=0x00007faadd2300c2 offset=582 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd2300ce offset=58e bits=0):
   jdk.incubator.vector.ByteVector::fromArray@25 (line 3008)
   indexvec::micro@30 (line 12)
PcDesc(pc=0x00007faadd2300da offset=59a bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd2300df offset=59f bits=0):
   jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
   indexvec::micro@15 (line 11)
PcDesc(pc=0x00007faadd230100 offset=5c0 bits=0):
   java.util.Objects::checkIndex@3 (line 385)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[92]
    - @1: reg rbp [10],int
    - @2: nullptr
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 57)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.ByteVector::intoArray@7 (line 3376)
   Locals
    - l0: obj[383]
    - l1: stack[96],oop
    - l2: empty
    - l3: empty
   jdk.incubator.vector.ByteVector::intoArray@10 (line 3417)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   indexvec::micro@38 (line 13)
   Locals
    - l0: stack[96],oop
    - l1: stack[72],oop
    - l2: stack[80]
    - l3: stack[84]
    - l4: stack[92]
    - l5: empty
   Objects
    - 383: jdk.incubator.vector.Byte512Vector stack[0],vector
PcDesc(pc=0x00007faadd23012a offset=5ea bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd23012f offset=5ef bits=0):
   jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@76 (line 4347)
   jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
   indexvec::micro@15 (line 11)
PcDesc(pc=0x00007faadd23015f offset=61f bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd230168 offset=628 bits=1):
   jdk.incubator.vector.ByteVector::intoArray@36 (line 3420)  reexecute=true
   Locals
    - l0: obj[402]
    - l1: stack[152],oop
    - l2: stack[148]
    - l3: obj[403]
    - l4: empty
   Expression stack
    - @0: stack[160]
   indexvec::micro@38 (line 13)
   Locals
    - l0: stack[152],oop
    - l1: stack[128],oop
    - l2: stack[136]
    - l3: stack[140]
    - l4: stack[148]
    - l5: empty
   Objects
    - 402: jdk.incubator.vector.Byte512Vector stack[0],vector
    - 403: jdk.incubator.vector.Byte512Vector$Byte512Mask stack[64],vector
PcDesc(pc=0x00007faadd230190 offset=650 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd23019c offset=65c bits=0):
   jdk.incubator.vector.ByteVector$ByteSpecies::vectorType@-1 (line 4124)
   jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@1 (line 4341)
   jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
   indexvec::micro@15 (line 11)
PcDesc(pc=0x00007faadd2301d3 offset=693 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd2301dc offset=69c bits=0):
   jdk.incubator.vector.Byte512Vector$Byte512Mask::firstTrue@11 (line 854)
   Locals
    - l0: empty
   Expression stack
    - @0: 21
    - @1: a 'java/lang/Class'{0x0000000119000090} = 'jdk/incubator/vector/Byte512Vector$Byte512Mask'
    - @2: a 'java/lang/Class'{0x0000000119000110} = byte
    - @3: 64
    - @4: obj[538]
   jdk.incubator.vector.AbstractMask::checkIndexByLane@119 (line 295)
   Locals
    - l0: empty
    - l1: stack[156]
    - l2: reg rbp [10],int
    - l3: empty
    - l4: 1
    - l5: empty
    - l6: obj[538]
    - l7: empty
   jdk.incubator.vector.ByteVector::checkMaskFromIndexSize@12 (line 3926)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   jdk.incubator.vector.ByteVector::intoArray@46 (line 3421)
   Locals
    - l0: obj[534]
    - l1: stack[160],oop
    - l2: stack[168]
    - l3: obj[535]
    - l4: empty
   indexvec::micro@38 (line 13)
   Locals
    - l0: stack[160],oop
    - l1: stack[136],oop
    - l2: stack[144]
    - l3: stack[148]
    - l4: stack[156]
    - l5: empty
   Objects
    - 534: jdk.incubator.vector.Byte512Vector stack[0],vector
    - 535: jdk.incubator.vector.Byte512Vector$Byte512Mask stack[64],vector
    - 538: jdk.incubator.vector.Byte512Vector$Byte512Mask stack[192],vector
PcDesc(pc=0x00007faadd2301fc offset=6bc bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd230208 offset=6c8 bits=0):
   jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@1 (line 4341)
   jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
   indexvec::micro@15 (line 11)
PcDesc(pc=0x00007faadd230231 offset=6f1 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd23023c offset=6fc bits=0):
   jdk.incubator.vector.Byte512Vector$Byte512Mask::firstTrue@11 (line 854)
   Locals
    - l0: empty
   Expression stack
    - @0: 21
    - @1: a 'java/lang/Class'{0x0000000119000090} = 'jdk/incubator/vector/Byte512Vector$Byte512Mask'
    - @2: a 'java/lang/Class'{0x0000000119000110} = byte
    - @3: 64
    - @4: obj[508]
   jdk.incubator.vector.AbstractMask::checkIndexByLane@119 (line 295)
   Locals
    - l0: empty
    - l1: stack[84]
    - l2: stack[100]
    - l3: empty
    - l4: 1
    - l5: empty
    - l6: obj[508]
    - l7: empty
   jdk.incubator.vector.ByteVector::checkMaskFromIndexSize@12 (line 3926)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   jdk.incubator.vector.ByteVector::fromArray@43 (line 3011)
   Locals
    - l0: empty
    - l1: stack[88],oop
    - l2: stack[96]
    - l3: obj[507]
    - l4: a 'jdk/incubator/vector/ByteVector$ByteSpecies'{0x000000011903ba78}
   indexvec::micro@30 (line 12)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[88],oop
    - l2: stack[72]
    - l3: stack[76]
    - l4: stack[84]
    - l5: obj[507]
   Objects
    - 507: jdk.incubator.vector.Byte512Vector$Byte512Mask stack[0],vector
    - 508: jdk.incubator.vector.Byte512Vector$Byte512Mask stack[128],vector
PcDesc(pc=0x00007faadd230257 offset=717 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd230264 offset=724 bits=0):
   indexvec::micro@59 (line 15)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
   Expression stack
    - @0: reg rbp [10],oop
    - @1: stack[0]
PcDesc(pc=0x00007faadd230288 offset=748 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd230298 offset=758 bits=1):
   indexvec::micro@6 (line 10)  reexecute=true
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[16]
    - l3: stack[12]
    - l4: 0
    - l5: empty
   Expression stack
    - @0: 0
    - @1: stack[16]
PcDesc(pc=0x00007faadd2302b6 offset=776 bits=0):
   jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
   indexvec::micro@15 (line 11)
PcDesc(pc=0x00007faadd2302d2 offset=792 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd2302e0 offset=7a0 bits=1):
   jdk.incubator.vector.AbstractMask::indexInRange@17 (line 221)  reexecute=true
   Locals
    - l0: obj[450]
    - l1: empty
    - l2: empty
   Expression stack
    - @0: stack[20]
    - @1: stack[24]
   jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   indexvec::micro@15 (line 11)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[24]
    - l3: stack[12]
    - l4: stack[20]
    - l5: empty
   Objects
    - 450: jdk.incubator.vector.Byte512Vector$Byte512Mask stack[64],vector
PcDesc(pc=0x00007faadd230314 offset=7d4 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd230318 offset=7d8 bits=0):
   jdk.incubator.vector.ByteVector::fromArray@25 (line 3008)
   indexvec::micro@30 (line 12)
PcDesc(pc=0x00007faadd230320 offset=7e0 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd230324 offset=7e4 bits=0):
   jdk.incubator.vector.ByteVector::fromArray@20 (line 3007)
   indexvec::micro@30 (line 12)
PcDesc(pc=0x00007faadd23035d offset=81d bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd230368 offset=828 bits=0):
   jdk.incubator.vector.ByteVector::intoArray@6 (line 3376)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: empty
    - @1: empty
    - @2: nullptr
   jdk.incubator.vector.ByteVector::intoArray@10 (line 3417)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   indexvec::micro@38 (line 13)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
PcDesc(pc=0x00007faadd23037c offset=83c bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd230381 offset=841 bits=0):
   jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@1 (line 4341)
   jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
   indexvec::micro@15 (line 11)
PcDesc(pc=0x00007faadd23038c offset=84c bits=0):
   jdk.incubator.vector.ByteVector::intoArray@31 (line 3420)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: empty
    - @1: empty
    - @2: empty
    - @3: empty
    - @4: nullptr
   indexvec::micro@38 (line 13)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
PcDesc(pc=0x00007faadd2303a0 offset=860 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd2303a5 offset=865 bits=0):
   jdk.incubator.vector.ByteVector::fromArray@32 (line 3008)
   indexvec::micro@30 (line 12)
PcDesc(pc=0x00007faadd2303b0 offset=870 bits=0):
   indexvec::micro@59 (line 15)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
   Expression stack
    - @0: nullptr
    - @1: reg rbp [10],int
PcDesc(pc=0x00007faadd2303d4 offset=894 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd2303e4 offset=8a4 bits=1):
   indexvec::micro@6 (line 10)  reexecute=true
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[16]
    - l3: stack[12]
    - l4: 0
    - l5: empty
   Expression stack
    - @0: 0
    - @1: stack[16]
PcDesc(pc=0x00007faadd2303f8 offset=8b8 bits=0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
   indexvec::micro@38 (line 13)
PcDesc(pc=0x00007faadd230431 offset=8f1 bits=0):
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
oop maps:ImmutableOopMapSet contains 13 OopMaps

ImmutableOopMap {rdi=Oop rdx=Oop xmm0=Oop } pc offsets: 316 
ImmutableOopMap {[72]=Oop [96]=Oop } pc offsets: 548 1472 
ImmutableOopMap {[128]=Oop [152]=Oop } pc offsets: 1576 
ImmutableOopMap {[136]=Oop [160]=Oop } pc offsets: 1692 
ImmutableOopMap {rbp=Oop [88]=Oop } pc offsets: 1788 
ImmutableOopMap {rbp=Oop } pc offsets: 1828 
ImmutableOopMap {rbp=Oop [0]=Oop } pc offsets: 1880 1952 
ImmutableOopMap {} pc offsets: 2088 2124 2160 
ImmutableOopMap {rbp=Oop [0]=Oop } pc offsets: 2212 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
scopes:
ScopeDesc(pc=0x00007faadd22fb5e offset=1e):
   jdk.incubator.vector.Byte512Vector$Byte512Mask::maskAll@28 (line 896)
ScopeDesc(pc=0x00007faadd22fb5e offset=1e):
   jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@76 (line 4347)
ScopeDesc(pc=0x00007faadd22fb5e offset=1e):
   jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
ScopeDesc(pc=0x00007faadd22fb5e offset=1e):
   indexvec::micro@15 (line 11)
ScopeDesc(pc=0x00007faadd22fbaa offset=6a):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd22fbaa offset=6a):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd22fbaa offset=6a):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd22fbaa offset=6a):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd22fbb6 offset=76):
   jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
ScopeDesc(pc=0x00007faadd22fbb6 offset=76):
   indexvec::micro@15 (line 11)
ScopeDesc(pc=0x00007faadd22fbd9 offset=99):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd22fbd9 offset=99):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd22fbd9 offset=99):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd22fbd9 offset=99):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd22fbe3 offset=a3):
   jdk.incubator.vector.AbstractMask::indexInRange@52 (line 226)
ScopeDesc(pc=0x00007faadd22fbe3 offset=a3):
   jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
ScopeDesc(pc=0x00007faadd22fbe3 offset=a3):
   indexvec::micro@15 (line 11)
ScopeDesc(pc=0x00007faadd22fbe6 offset=a6):
   java.lang.invoke.LambdaForm$MH/0x00000008000c1400::linkToTargetMethod@4
ScopeDesc(pc=0x00007faadd22fbe6 offset=a6):
   jdk.incubator.vector.Byte512Vector$Byte512Mask::and@24 (line 817)
ScopeDesc(pc=0x00007faadd22fbe6 offset=a6):
   jdk.incubator.vector.Byte512Vector$Byte512Mask::and@2 (line 677)
ScopeDesc(pc=0x00007faadd22fbe6 offset=a6):
   jdk.incubator.vector.AbstractMask::indexInRange@52 (line 226)
ScopeDesc(pc=0x00007faadd22fbe6 offset=a6):
   jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
ScopeDesc(pc=0x00007faadd22fbe6 offset=a6):
   indexvec::micro@15 (line 11)
ScopeDesc(pc=0x00007faadd22fc09 offset=c9):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd22fc09 offset=c9):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd22fc09 offset=c9):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd22fc09 offset=c9):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd22fc14 offset=d4):
   jdk.incubator.vector.Byte512Vector$Byte512Mask::and@32 (line 817)
ScopeDesc(pc=0x00007faadd22fc14 offset=d4):
   jdk.incubator.vector.Byte512Vector$Byte512Mask::and@2 (line 677)
ScopeDesc(pc=0x00007faadd22fc14 offset=d4):
   jdk.incubator.vector.AbstractMask::indexInRange@52 (line 226)
ScopeDesc(pc=0x00007faadd22fc14 offset=d4):
   jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
ScopeDesc(pc=0x00007faadd22fc14 offset=d4):
   indexvec::micro@15 (line 11)
ScopeDesc(pc=0x00007faadd22fc3b offset=fb):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd22fc3b offset=fb):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd22fc3b offset=fb):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd22fc3b offset=fb):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd22fc46 offset=106):
   jdk.incubator.vector.Byte512Vector$Byte512Mask::and@32 (line 817)
ScopeDesc(pc=0x00007faadd22fc46 offset=106):
   jdk.incubator.vector.Byte512Vector$Byte512Mask::and@2 (line 677)
ScopeDesc(pc=0x00007faadd22fc46 offset=106):
   jdk.incubator.vector.AbstractMask::indexInRange@52 (line 226)
ScopeDesc(pc=0x00007faadd22fc46 offset=106):
   jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
ScopeDesc(pc=0x00007faadd22fc46 offset=106):
   indexvec::micro@15 (line 11)
ScopeDesc(pc=0x00007faadd22fc4c offset=10c):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd22fc4c offset=10c):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd22fc4c offset=10c):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd22fc4c offset=10c):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd22fc6d offset=12d):
   jdk.incubator.vector.Byte512Vector$Byte512Mask::maskAll@9 (line 897)
ScopeDesc(pc=0x00007faadd22fc6d offset=12d):
   jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@76 (line 4347)
ScopeDesc(pc=0x00007faadd22fc6d offset=12d):
   jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
ScopeDesc(pc=0x00007faadd22fc6d offset=12d):
   indexvec::micro@15 (line 11)
ScopeDesc(pc=0x00007faadd22fc7c offset=13c):
   indexvec::micro@54 (line 10)  reexecute=true
   Locals
    - l0: reg xmm0 [48],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],int
    - l3: reg xmm2 [80],int
    - l4: reg rbx [6],int
    - l5: empty
ScopeDesc(pc=0x00007faadd22fc88 offset=148):
   jdk.incubator.vector.ByteVector$ByteSpecies::dummyVector@-1 (line 4209)
ScopeDesc(pc=0x00007faadd22fc88 offset=148):
   jdk.incubator.vector.ByteVector::fromArray@25 (line 3008)
ScopeDesc(pc=0x00007faadd22fc88 offset=148):
   indexvec::micro@30 (line 12)
ScopeDesc(pc=0x00007faadd22fcb0 offset=170):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd22fcb0 offset=170):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd22fcb0 offset=170):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd22fcb0 offset=170):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd22fcbb offset=17b):
   indexvec::micro@6 (line 10)
ScopeDesc(pc=0x00007faadd22fcc5 offset=185):
   indexvec::micro@15 (line 11)
ScopeDesc(pc=0x00007faadd22fcd5 offset=195):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd22fcd5 offset=195):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd22fcd5 offset=195):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd22fcd5 offset=195):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd22fcd8 offset=198):
   jdk.incubator.vector.Byte512Vector$Byte512Mask::maskAll@20 (line 897)
ScopeDesc(pc=0x00007faadd22fcd8 offset=198):
   jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@76 (line 4347)
ScopeDesc(pc=0x00007faadd22fcd8 offset=198):
   jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
ScopeDesc(pc=0x00007faadd22fcd8 offset=198):
   indexvec::micro@15 (line 11)
ScopeDesc(pc=0x00007faadd22fcf8 offset=1b8):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd22fcf8 offset=1b8):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd22fcf8 offset=1b8):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd22fcf8 offset=1b8):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd22fd09 offset=1c9):
   jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
ScopeDesc(pc=0x00007faadd22fd09 offset=1c9):
   indexvec::micro@15 (line 11)
ScopeDesc(pc=0x00007faadd22fd29 offset=1e9):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd22fd29 offset=1e9):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd22fd29 offset=1e9):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd22fd29 offset=1e9):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd22fd43 offset=203):
   jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@0 (line 4341)
ScopeDesc(pc=0x00007faadd22fd43 offset=203):
   jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
ScopeDesc(pc=0x00007faadd22fd43 offset=203):
   indexvec::micro@15 (line 11)
ScopeDesc(pc=0x00007faadd22fd64 offset=224):
   java.util.Objects::checkIndex@3 (line 385)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[92]
    - @1: reg rbp [10],int
    - @2: nullptr
ScopeDesc(pc=0x00007faadd22fd64 offset=224):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 57)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00007faadd22fd64 offset=224):
   jdk.incubator.vector.ByteVector::intoArray@7 (line 3376)
   Locals
    - l0: obj[466]
    - l1: stack[96],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x00007faadd22fd64 offset=224):
   jdk.incubator.vector.ByteVector::intoArray@10 (line 3417)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
ScopeDesc(pc=0x00007faadd22fd64 offset=224):
   indexvec::micro@38 (line 13)
   Locals
    - l0: stack[96],oop
    - l1: stack[72],oop
    - l2: stack[80]
    - l3: stack[84]
    - l4: stack[92]
    - l5: empty
   Objects
    - 466: jdk.incubator.vector.Byte512Vector stack[0],vector
ScopeDesc(pc=0x00007faadd22fdb5 offset=275):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd22fdb5 offset=275):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd22fdb5 offset=275):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd22fdb5 offset=275):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd22fdba offset=27a):
   java.lang.invoke.LambdaForm$MH/0x00000008000c1400::linkToTargetMethod@4
ScopeDesc(pc=0x00007faadd22fdba offset=27a):
   jdk.incubator.vector.Byte512Vector$Byte512Mask::maskAll@20 (line 897)
ScopeDesc(pc=0x00007faadd22fdba offset=27a):
   jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@76 (line 4347)
ScopeDesc(pc=0x00007faadd22fdba offset=27a):
   jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
ScopeDesc(pc=0x00007faadd22fdba offset=27a):
   indexvec::micro@15 (line 11)
ScopeDesc(pc=0x00007faadd22fddb offset=29b):
   indexvec::micro@15 (line 11)
ScopeDesc(pc=0x00007faadd22fe06 offset=2c6):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd22fe06 offset=2c6):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd22fe06 offset=2c6):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd22fe06 offset=2c6):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd22fe0b offset=2cb):
   java.lang.invoke.LambdaForm$MH/0x00000008000c1400::linkToTargetMethod@4
ScopeDesc(pc=0x00007faadd22fe0b offset=2cb):
   jdk.incubator.vector.Byte512Vector$Byte512Mask::maskAll@20 (line 897)
ScopeDesc(pc=0x00007faadd22fe0b offset=2cb):
   jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@76 (line 4347)
ScopeDesc(pc=0x00007faadd22fe0b offset=2cb):
   jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
ScopeDesc(pc=0x00007faadd22fe0b offset=2cb):
   indexvec::micro@15 (line 11)
ScopeDesc(pc=0x00007faadd22fe42 offset=302):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd22fe42 offset=302):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd22fe42 offset=302):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd22fe42 offset=302):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd22fe4e offset=30e):
   jdk.incubator.vector.VectorIntrinsics::indexInRange@12 (line 49)
ScopeDesc(pc=0x00007faadd22fe4e offset=30e):
   jdk.incubator.vector.ByteVector::fromArray@17 (line 3007)
ScopeDesc(pc=0x00007faadd22fe4e offset=30e):
   indexvec::micro@30 (line 12)
ScopeDesc(pc=0x00007faadd22fe68 offset=328):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd22fe68 offset=328):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd22fe68 offset=328):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd22fe68 offset=328):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd22fe72 offset=332):
   jdk.incubator.vector.VectorMask::length@9 (line 155)
ScopeDesc(pc=0x00007faadd22fe72 offset=332):
   jdk.incubator.vector.AbstractMask::indexInRange@35 (line 223)
ScopeDesc(pc=0x00007faadd22fe72 offset=332):
   jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
ScopeDesc(pc=0x00007faadd22fe72 offset=332):
   indexvec::micro@15 (line 11)
ScopeDesc(pc=0x00007faadd22fe78 offset=338):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd22fe78 offset=338):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd22fe78 offset=338):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd22fe78 offset=338):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd22fe7b offset=33b):
   jdk.incubator.vector.Byte512Vector$Byte512Mask::indexInRange0@3 (line 677)
ScopeDesc(pc=0x00007faadd22fe7b offset=33b):
   jdk.incubator.vector.AbstractMask::indexInRange@49 (line 226)
ScopeDesc(pc=0x00007faadd22fe7b offset=33b):
   jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
ScopeDesc(pc=0x00007faadd22fe7b offset=33b):
   indexvec::micro@15 (line 11)
ScopeDesc(pc=0x00007faadd22fe9e offset=35e):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd22fe9e offset=35e):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd22fe9e offset=35e):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd22fe9e offset=35e):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd22fea9 offset=369):
   java.lang.invoke.LambdaForm$MH/0x00000008000c1400::linkToTargetMethod@4
ScopeDesc(pc=0x00007faadd22fea9 offset=369):
   jdk.incubator.vector.Byte512Vector$Byte512Mask::indexInRange0@10 (line 788)
ScopeDesc(pc=0x00007faadd22fea9 offset=369):
   jdk.incubator.vector.Byte512Vector$Byte512Mask::indexInRange0@3 (line 677)
ScopeDesc(pc=0x00007faadd22fea9 offset=369):
   jdk.incubator.vector.AbstractMask::indexInRange@49 (line 226)
ScopeDesc(pc=0x00007faadd22fea9 offset=369):
   jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
ScopeDesc(pc=0x00007faadd22fea9 offset=369):
   indexvec::micro@15 (line 11)
ScopeDesc(pc=0x00007faadd22ff0f offset=3cf):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd22ff0f offset=3cf):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd22ff0f offset=3cf):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd22ff0f offset=3cf):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd22ff15 offset=3d5):
   indexvec::micro@6 (line 10)
ScopeDesc(pc=0x00007faadd22ff6a offset=42a):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd22ff6a offset=42a):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd22ff6a offset=42a):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd22ff6a offset=42a):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd22ff6f offset=42f):
   jdk.incubator.vector.Byte512Vector$Byte512Mask::and@2 (line 677)
ScopeDesc(pc=0x00007faadd22ff6f offset=42f):
   jdk.incubator.vector.AbstractMask::indexInRange@52 (line 226)
ScopeDesc(pc=0x00007faadd22ff6f offset=42f):
   jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
ScopeDesc(pc=0x00007faadd22ff6f offset=42f):
   indexvec::micro@15 (line 11)
ScopeDesc(pc=0x00007faadd22ff7f offset=43f):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd22ff7f offset=43f):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd22ff7f offset=43f):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd22ff7f offset=43f):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd22ff8a offset=44a):
   jdk.incubator.vector.Byte512Vector$Byte512Mask::and@2 (line 677)
ScopeDesc(pc=0x00007faadd22ff8a offset=44a):
   jdk.incubator.vector.AbstractMask::indexInRange@52 (line 226)
ScopeDesc(pc=0x00007faadd22ff8a offset=44a):
   jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
ScopeDesc(pc=0x00007faadd22ff8a offset=44a):
   indexvec::micro@15 (line 11)
ScopeDesc(pc=0x00007faadd22ffad offset=46d):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd22ffad offset=46d):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd22ffad offset=46d):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd22ffad offset=46d):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd22ffb2 offset=472):
   jdk.incubator.vector.AbstractMask::indexInRange@52 (line 226)
ScopeDesc(pc=0x00007faadd22ffb2 offset=472):
   jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
ScopeDesc(pc=0x00007faadd22ffb2 offset=472):
   indexvec::micro@15 (line 11)
ScopeDesc(pc=0x00007faadd22ffbd offset=47d):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd22ffbd offset=47d):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd22ffbd offset=47d):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd22ffbd offset=47d):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd22ffc8 offset=488):
   jdk.incubator.vector.Byte512Vector$Byte512Mask::and@2 (line 677)
ScopeDesc(pc=0x00007faadd22ffc8 offset=488):
   jdk.incubator.vector.AbstractMask::indexInRange@52 (line 226)
ScopeDesc(pc=0x00007faadd22ffc8 offset=488):
   jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
ScopeDesc(pc=0x00007faadd22ffc8 offset=488):
   indexvec::micro@15 (line 11)
ScopeDesc(pc=0x00007faadd22ffe9 offset=4a9):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd22ffe9 offset=4a9):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd22ffe9 offset=4a9):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd22ffe9 offset=4a9):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd22fff5 offset=4b5):
   jdk.incubator.vector.ByteVector::fromArray@25 (line 3008)
ScopeDesc(pc=0x00007faadd22fff5 offset=4b5):
   indexvec::micro@30 (line 12)
ScopeDesc(pc=0x00007faadd230035 offset=4f5):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd230035 offset=4f5):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd230035 offset=4f5):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd230035 offset=4f5):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd23003a offset=4fa):
   jdk.incubator.vector.Byte512Vector$Byte512Mask::vspecies@1 (line 677)
ScopeDesc(pc=0x00007faadd23003a offset=4fa):
   jdk.incubator.vector.AbstractMask::vectorSpecies@1 (line 67)
ScopeDesc(pc=0x00007faadd23003a offset=4fa):
   jdk.incubator.vector.VectorMask::length@1 (line 154)
ScopeDesc(pc=0x00007faadd23003a offset=4fa):
   jdk.incubator.vector.AbstractMask::indexInRange@35 (line 223)
ScopeDesc(pc=0x00007faadd23003a offset=4fa):
   jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
ScopeDesc(pc=0x00007faadd23003a offset=4fa):
   indexvec::micro@15 (line 11)
ScopeDesc(pc=0x00007faadd230050 offset=510):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd230050 offset=510):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd230050 offset=510):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd230050 offset=510):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd23005b offset=51b):
   jdk.incubator.vector.VectorMask::length@9 (line 155)
ScopeDesc(pc=0x00007faadd23005b offset=51b):
   jdk.incubator.vector.AbstractMask::indexInRange@35 (line 223)
ScopeDesc(pc=0x00007faadd23005b offset=51b):
   jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
ScopeDesc(pc=0x00007faadd23005b offset=51b):
   indexvec::micro@15 (line 11)
ScopeDesc(pc=0x00007faadd230086 offset=546):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd230086 offset=546):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd230086 offset=546):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd230086 offset=546):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd23008b offset=54b):
   jdk.incubator.vector.AbstractMask::vectorSpecies@1 (line 67)
ScopeDesc(pc=0x00007faadd23008b offset=54b):
   jdk.incubator.vector.VectorMask::length@1 (line 154)
ScopeDesc(pc=0x00007faadd23008b offset=54b):
   jdk.incubator.vector.AbstractMask::indexInRange@35 (line 223)
ScopeDesc(pc=0x00007faadd23008b offset=54b):
   jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
ScopeDesc(pc=0x00007faadd23008b offset=54b):
   indexvec::micro@15 (line 11)
ScopeDesc(pc=0x00007faadd230096 offset=556):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd230096 offset=556):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd230096 offset=556):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd230096 offset=556):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd2300a1 offset=561):
   jdk.incubator.vector.VectorMask::length@9 (line 155)
ScopeDesc(pc=0x00007faadd2300a1 offset=561):
   jdk.incubator.vector.AbstractMask::indexInRange@35 (line 223)
ScopeDesc(pc=0x00007faadd2300a1 offset=561):
   jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
ScopeDesc(pc=0x00007faadd2300a1 offset=561):
   indexvec::micro@15 (line 11)
ScopeDesc(pc=0x00007faadd2300c2 offset=582):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd2300c2 offset=582):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd2300c2 offset=582):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd2300c2 offset=582):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd2300ce offset=58e):
   jdk.incubator.vector.ByteVector::fromArray@25 (line 3008)
ScopeDesc(pc=0x00007faadd2300ce offset=58e):
   indexvec::micro@30 (line 12)
ScopeDesc(pc=0x00007faadd2300da offset=59a):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd2300da offset=59a):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd2300da offset=59a):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd2300da offset=59a):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd2300df offset=59f):
   jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
ScopeDesc(pc=0x00007faadd2300df offset=59f):
   indexvec::micro@15 (line 11)
ScopeDesc(pc=0x00007faadd230100 offset=5c0):
   java.util.Objects::checkIndex@3 (line 385)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[92]
    - @1: reg rbp [10],int
    - @2: nullptr
ScopeDesc(pc=0x00007faadd230100 offset=5c0):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 57)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00007faadd230100 offset=5c0):
   jdk.incubator.vector.ByteVector::intoArray@7 (line 3376)
   Locals
    - l0: obj[383]
    - l1: stack[96],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x00007faadd230100 offset=5c0):
   jdk.incubator.vector.ByteVector::intoArray@10 (line 3417)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
ScopeDesc(pc=0x00007faadd230100 offset=5c0):
   indexvec::micro@38 (line 13)
   Locals
    - l0: stack[96],oop
    - l1: stack[72],oop
    - l2: stack[80]
    - l3: stack[84]
    - l4: stack[92]
    - l5: empty
   Objects
    - 383: jdk.incubator.vector.Byte512Vector stack[0],vector
ScopeDesc(pc=0x00007faadd23012a offset=5ea):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd23012a offset=5ea):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd23012a offset=5ea):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd23012a offset=5ea):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd23012f offset=5ef):
   jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@76 (line 4347)
ScopeDesc(pc=0x00007faadd23012f offset=5ef):
   jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
ScopeDesc(pc=0x00007faadd23012f offset=5ef):
   indexvec::micro@15 (line 11)
ScopeDesc(pc=0x00007faadd23015f offset=61f):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd23015f offset=61f):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd23015f offset=61f):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd23015f offset=61f):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd230168 offset=628):
   jdk.incubator.vector.ByteVector::intoArray@36 (line 3420)  reexecute=true
   Locals
    - l0: obj[402]
    - l1: stack[152],oop
    - l2: stack[148]
    - l3: obj[403]
    - l4: empty
   Expression stack
    - @0: stack[160]
ScopeDesc(pc=0x00007faadd230168 offset=628):
   indexvec::micro@38 (line 13)
   Locals
    - l0: stack[152],oop
    - l1: stack[128],oop
    - l2: stack[136]
    - l3: stack[140]
    - l4: stack[148]
    - l5: empty
   Objects
    - 402: jdk.incubator.vector.Byte512Vector stack[0],vector
    - 403: jdk.incubator.vector.Byte512Vector$Byte512Mask stack[64],vector
ScopeDesc(pc=0x00007faadd230190 offset=650):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd230190 offset=650):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd230190 offset=650):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd230190 offset=650):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd23019c offset=65c):
   jdk.incubator.vector.ByteVector$ByteSpecies::vectorType@-1 (line 4124)
ScopeDesc(pc=0x00007faadd23019c offset=65c):
   jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@1 (line 4341)
ScopeDesc(pc=0x00007faadd23019c offset=65c):
   jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
ScopeDesc(pc=0x00007faadd23019c offset=65c):
   indexvec::micro@15 (line 11)
ScopeDesc(pc=0x00007faadd2301d3 offset=693):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd2301d3 offset=693):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd2301d3 offset=693):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd2301d3 offset=693):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd2301dc offset=69c):
   jdk.incubator.vector.Byte512Vector$Byte512Mask::firstTrue@11 (line 854)
   Locals
    - l0: empty
   Expression stack
    - @0: 21
    - @1: a 'java/lang/Class'{0x0000000119000090} = 'jdk/incubator/vector/Byte512Vector$Byte512Mask'
    - @2: a 'java/lang/Class'{0x0000000119000110} = byte
    - @3: 64
    - @4: obj[538]
ScopeDesc(pc=0x00007faadd2301dc offset=69c):
   jdk.incubator.vector.AbstractMask::checkIndexByLane@119 (line 295)
   Locals
    - l0: empty
    - l1: stack[156]
    - l2: reg rbp [10],int
    - l3: empty
    - l4: 1
    - l5: empty
    - l6: obj[538]
    - l7: empty
ScopeDesc(pc=0x00007faadd2301dc offset=69c):
   jdk.incubator.vector.ByteVector::checkMaskFromIndexSize@12 (line 3926)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
ScopeDesc(pc=0x00007faadd2301dc offset=69c):
   jdk.incubator.vector.ByteVector::intoArray@46 (line 3421)
   Locals
    - l0: obj[534]
    - l1: stack[160],oop
    - l2: stack[168]
    - l3: obj[535]
    - l4: empty
ScopeDesc(pc=0x00007faadd2301dc offset=69c):
   indexvec::micro@38 (line 13)
   Locals
    - l0: stack[160],oop
    - l1: stack[136],oop
    - l2: stack[144]
    - l3: stack[148]
    - l4: stack[156]
    - l5: empty
   Objects
    - 534: jdk.incubator.vector.Byte512Vector stack[0],vector
    - 535: jdk.incubator.vector.Byte512Vector$Byte512Mask stack[64],vector
    - 538: jdk.incubator.vector.Byte512Vector$Byte512Mask stack[192],vector
ScopeDesc(pc=0x00007faadd2301fc offset=6bc):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd2301fc offset=6bc):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd2301fc offset=6bc):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd2301fc offset=6bc):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd230208 offset=6c8):
   jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@1 (line 4341)
ScopeDesc(pc=0x00007faadd230208 offset=6c8):
   jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
ScopeDesc(pc=0x00007faadd230208 offset=6c8):
   indexvec::micro@15 (line 11)
ScopeDesc(pc=0x00007faadd230231 offset=6f1):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd230231 offset=6f1):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd230231 offset=6f1):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd230231 offset=6f1):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd23023c offset=6fc):
   jdk.incubator.vector.Byte512Vector$Byte512Mask::firstTrue@11 (line 854)
   Locals
    - l0: empty
   Expression stack
    - @0: 21
    - @1: a 'java/lang/Class'{0x0000000119000090} = 'jdk/incubator/vector/Byte512Vector$Byte512Mask'
    - @2: a 'java/lang/Class'{0x0000000119000110} = byte
    - @3: 64
    - @4: obj[508]
ScopeDesc(pc=0x00007faadd23023c offset=6fc):
   jdk.incubator.vector.AbstractMask::checkIndexByLane@119 (line 295)
   Locals
    - l0: empty
    - l1: stack[84]
    - l2: stack[100]
    - l3: empty
    - l4: 1
    - l5: empty
    - l6: obj[508]
    - l7: empty
ScopeDesc(pc=0x00007faadd23023c offset=6fc):
   jdk.incubator.vector.ByteVector::checkMaskFromIndexSize@12 (line 3926)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
ScopeDesc(pc=0x00007faadd23023c offset=6fc):
   jdk.incubator.vector.ByteVector::fromArray@43 (line 3011)
   Locals
    - l0: empty
    - l1: stack[88],oop
    - l2: stack[96]
    - l3: obj[507]
    - l4: a 'jdk/incubator/vector/ByteVector$ByteSpecies'{0x000000011903ba78}
ScopeDesc(pc=0x00007faadd23023c offset=6fc):
   indexvec::micro@30 (line 12)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[88],oop
    - l2: stack[72]
    - l3: stack[76]
    - l4: stack[84]
    - l5: obj[507]
   Objects
    - 507: jdk.incubator.vector.Byte512Vector$Byte512Mask stack[0],vector
    - 508: jdk.incubator.vector.Byte512Vector$Byte512Mask stack[128],vector
ScopeDesc(pc=0x00007faadd230257 offset=717):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd230257 offset=717):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd230257 offset=717):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd230257 offset=717):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd230264 offset=724):
   indexvec::micro@59 (line 15)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
   Expression stack
    - @0: reg rbp [10],oop
    - @1: stack[0]
ScopeDesc(pc=0x00007faadd230288 offset=748):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd230288 offset=748):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd230288 offset=748):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd230288 offset=748):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd230298 offset=758):
   indexvec::micro@6 (line 10)  reexecute=true
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[16]
    - l3: stack[12]
    - l4: 0
    - l5: empty
   Expression stack
    - @0: 0
    - @1: stack[16]
ScopeDesc(pc=0x00007faadd2302b6 offset=776):
   jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
ScopeDesc(pc=0x00007faadd2302b6 offset=776):
   indexvec::micro@15 (line 11)
ScopeDesc(pc=0x00007faadd2302d2 offset=792):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd2302d2 offset=792):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd2302d2 offset=792):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd2302d2 offset=792):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd2302e0 offset=7a0):
   jdk.incubator.vector.AbstractMask::indexInRange@17 (line 221)  reexecute=true
   Locals
    - l0: obj[450]
    - l1: empty
    - l2: empty
   Expression stack
    - @0: stack[20]
    - @1: stack[24]
ScopeDesc(pc=0x00007faadd2302e0 offset=7a0):
   jdk.incubator.vector.AbstractSpecies::indexInRange@7 (line 216)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00007faadd2302e0 offset=7a0):
   indexvec::micro@15 (line 11)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[24]
    - l3: stack[12]
    - l4: stack[20]
    - l5: empty
   Objects
    - 450: jdk.incubator.vector.Byte512Vector$Byte512Mask stack[64],vector
ScopeDesc(pc=0x00007faadd230314 offset=7d4):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd230314 offset=7d4):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd230314 offset=7d4):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd230314 offset=7d4):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd230318 offset=7d8):
   jdk.incubator.vector.ByteVector::fromArray@25 (line 3008)
ScopeDesc(pc=0x00007faadd230318 offset=7d8):
   indexvec::micro@30 (line 12)
ScopeDesc(pc=0x00007faadd230320 offset=7e0):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd230320 offset=7e0):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd230320 offset=7e0):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd230320 offset=7e0):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd230324 offset=7e4):
   jdk.incubator.vector.ByteVector::fromArray@20 (line 3007)
ScopeDesc(pc=0x00007faadd230324 offset=7e4):
   indexvec::micro@30 (line 12)
ScopeDesc(pc=0x00007faadd23035d offset=81d):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd23035d offset=81d):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd23035d offset=81d):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd23035d offset=81d):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd230368 offset=828):
   jdk.incubator.vector.ByteVector::intoArray@6 (line 3376)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: empty
    - @1: empty
    - @2: nullptr
ScopeDesc(pc=0x00007faadd230368 offset=828):
   jdk.incubator.vector.ByteVector::intoArray@10 (line 3417)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
ScopeDesc(pc=0x00007faadd230368 offset=828):
   indexvec::micro@38 (line 13)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
ScopeDesc(pc=0x00007faadd23037c offset=83c):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd23037c offset=83c):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd23037c offset=83c):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd23037c offset=83c):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd230381 offset=841):
   jdk.incubator.vector.ByteVector$ByteSpecies::maskAll@1 (line 4341)
ScopeDesc(pc=0x00007faadd230381 offset=841):
   jdk.incubator.vector.AbstractSpecies::indexInRange@2 (line 216)
ScopeDesc(pc=0x00007faadd230381 offset=841):
   indexvec::micro@15 (line 11)
ScopeDesc(pc=0x00007faadd23038c offset=84c):
   jdk.incubator.vector.ByteVector::intoArray@31 (line 3420)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: empty
    - @1: empty
    - @2: empty
    - @3: empty
    - @4: nullptr
ScopeDesc(pc=0x00007faadd23038c offset=84c):
   indexvec::micro@38 (line 13)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
ScopeDesc(pc=0x00007faadd2303a0 offset=860):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd2303a0 offset=860):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd2303a0 offset=860):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd2303a0 offset=860):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd2303a5 offset=865):
   jdk.incubator.vector.ByteVector::fromArray@32 (line 3008)
ScopeDesc(pc=0x00007faadd2303a5 offset=865):
   indexvec::micro@30 (line 12)
ScopeDesc(pc=0x00007faadd2303b0 offset=870):
   indexvec::micro@59 (line 15)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
   Expression stack
    - @0: nullptr
    - @1: reg rbp [10],int
ScopeDesc(pc=0x00007faadd2303d4 offset=894):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd2303d4 offset=894):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd2303d4 offset=894):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd2303d4 offset=894):
   indexvec::micro@38 (line 13)
ScopeDesc(pc=0x00007faadd2303e4 offset=8a4):
   indexvec::micro@6 (line 10)  reexecute=true
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[16]
    - l3: stack[12]
    - l4: 0
    - l5: empty
   Expression stack
    - @0: 0
    - @1: stack[16]
ScopeDesc(pc=0x00007faadd2303f8 offset=8b8):
   jdk.incubator.vector.ByteVector::intoArray0Template@49 (line 3858)
ScopeDesc(pc=0x00007faadd2303f8 offset=8b8):
   jdk.incubator.vector.Byte512Vector::intoArray0@9 (line 1031)
ScopeDesc(pc=0x00007faadd2303f8 offset=8b8):
   jdk.incubator.vector.ByteVector::intoArray@53 (line 3423)
ScopeDesc(pc=0x00007faadd2303f8 offset=8b8):
   indexvec::micro@38 (line 13)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
relocations:
         @0x00007faadd22fa70: 0847
relocInfo@0x00007faadd22fa70 [type=1(oop) addr=0x00007faadd22fb87 offset=71] | [oop_addr=0x00007faadd22fb89 *=0x00000001190d6910 offset=0]
         @0x00007faadd22fa72: 50f5
relocInfo@0x00007faadd22fa72 [type=10(poll) addr=0x00007faadd22fc7c offset=245]
         @0x00007faadd22fa74: 32e3
relocInfo@0x00007faadd22fa74 [type=6(runtime_call) addr=0x00007faadd22fd5f offset=227 format=1] | [destination=0x00007faadd1362a0]
         @0x00007faadd22fa76: 7c03e8bf73787faa3805
relocInfo@0x00007faadd22fa7e [type=7(external_word) addr=0x00007faadd22fd64 offset=5 data={e8bf73787faa}] | [target=0x00007faae8bf7378]
         @0x00007faadd22fa80: 320e
relocInfo@0x00007faadd22fa80 [type=6(runtime_call) addr=0x00007faadd22fd72 offset=14 format=1] | [destination=0x00007faae827c9a0]
         @0x00007faadd22fa82: 59ae
relocInfo@0x00007faadd22fa82 [type=11(poll_return) addr=0x00007faadd22ff20 offset=430]
         @0x00007faadd22fa84: 33db
relocInfo@0x00007faadd22fa84 [type=6(runtime_call) addr=0x00007faadd2300fb offset=475 format=1] | [destination=0x00007faadd1362a0]
         @0x00007faadd22fa86: 7c03e8bf73787faa3805
relocInfo@0x00007faadd22fa8e [type=7(external_word) addr=0x00007faadd230100 offset=5 data={e8bf73787faa}] | [target=0x00007faae8bf7378]
         @0x00007faadd22fa90: 320e
relocInfo@0x00007faadd22fa90 [type=6(runtime_call) addr=0x00007faadd23010e offset=14 format=1] | [destination=0x00007faae827c9a0]
         @0x00007faadd22fa92: 3255
relocInfo@0x00007faadd22fa92 [type=6(runtime_call) addr=0x00007faadd230163 offset=85 format=1] | [destination=0x00007faadd1362a0]
         @0x00007faadd22fa94: 7c03e8bf73787faa3805
relocInfo@0x00007faadd22fa9c [type=7(external_word) addr=0x00007faadd230168 offset=5 data={e8bf73787faa}] | [target=0x00007faae8bf7378]
         @0x00007faadd22fa9e: 320e
relocInfo@0x00007faadd22fa9e [type=6(runtime_call) addr=0x00007faadd230176 offset=14 format=1] | [destination=0x00007faae827c9a0]
         @0x00007faadd22faa0: 3261
relocInfo@0x00007faadd22faa0 [type=6(runtime_call) addr=0x00007faadd2301d7 offset=97 format=1] | [destination=0x00007faadd1362a0]
         @0x00007faadd22faa2: 7c03e8bf73787faa3805
relocInfo@0x00007faadd22faaa [type=7(external_word) addr=0x00007faadd2301dc offset=5 data={e8bf73787faa}] | [target=0x00007faae8bf7378]
         @0x00007faadd22faac: 320e
relocInfo@0x00007faadd22faac [type=6(runtime_call) addr=0x00007faadd2301ea offset=14 format=1] | [destination=0x00007faae827c9a0]
         @0x00007faadd22faae: 324d
relocInfo@0x00007faadd22faae [type=6(runtime_call) addr=0x00007faadd230237 offset=77 format=1] | [destination=0x00007faadd1362a0]
         @0x00007faadd22fab0: 7c03e8bf73787faa3805
relocInfo@0x00007faadd22fab8 [type=7(external_word) addr=0x00007faadd23023c offset=5 data={e8bf73787faa}] | [target=0x00007faae8bf7378]
         @0x00007faadd22faba: 320e
relocInfo@0x00007faadd22faba [type=6(runtime_call) addr=0x00007faadd23024a offset=14 format=1] | [destination=0x00007faae827c9a0]
         @0x00007faadd22fabc: 3215
relocInfo@0x00007faadd22fabc [type=6(runtime_call) addr=0x00007faadd23025f offset=21 format=1] | [destination=0x00007faadd1362a0]
         @0x00007faadd22fabe: 7c03e8bf73787faa3805
relocInfo@0x00007faadd22fac6 [type=7(external_word) addr=0x00007faadd230264 offset=5 data={e8bf73787faa}] | [target=0x00007faae8bf7378]
         @0x00007faadd22fac8: 320e
relocInfo@0x00007faadd22fac8 [type=6(runtime_call) addr=0x00007faadd230272 offset=14 format=1] | [destination=0x00007faae827c9a0]
         @0x00007faadd22faca: 3221
relocInfo@0x00007faadd22faca [type=6(runtime_call) addr=0x00007faadd230293 offset=33 format=1] | [destination=0x00007faadd1362a0]
         @0x00007faadd22facc: 7c03e8bf73787faa3805
relocInfo@0x00007faadd22fad4 [type=7(external_word) addr=0x00007faadd230298 offset=5 data={e8bf73787faa}] | [target=0x00007faae8bf7378]
         @0x00007faadd22fad6: 320e
relocInfo@0x00007faadd22fad6 [type=6(runtime_call) addr=0x00007faadd2302a6 offset=14 format=1] | [destination=0x00007faae827c9a0]
         @0x00007faadd22fad8: 3235
relocInfo@0x00007faadd22fad8 [type=6(runtime_call) addr=0x00007faadd2302db offset=53 format=1] | [destination=0x00007faadd1362a0]
         @0x00007faadd22fada: 7c03e8bf73787faa3805
relocInfo@0x00007faadd22fae2 [type=7(external_word) addr=0x00007faadd2302e0 offset=5 data={e8bf73787faa}] | [target=0x00007faae8bf7378]
         @0x00007faadd22fae4: 320e
relocInfo@0x00007faadd22fae4 [type=6(runtime_call) addr=0x00007faadd2302ee offset=14 format=1] | [destination=0x00007faae827c9a0]
         @0x00007faadd22fae6: 3275
relocInfo@0x00007faadd22fae6 [type=6(runtime_call) addr=0x00007faadd230363 offset=117 format=1] | [destination=0x00007faadd1362a0]
         @0x00007faadd22fae8: 7c03e8bf73787faa3805
relocInfo@0x00007faadd22faf0 [type=7(external_word) addr=0x00007faadd230368 offset=5 data={e8bf73787faa}] | [target=0x00007faae8bf7378]
         @0x00007faadd22faf2: 320e
relocInfo@0x00007faadd22faf2 [type=6(runtime_call) addr=0x00007faadd230376 offset=14 format=1] | [destination=0x00007faae827c9a0]
         @0x00007faadd22faf4: 3211
relocInfo@0x00007faadd22faf4 [type=6(runtime_call) addr=0x00007faadd230387 offset=17 format=1] | [destination=0x00007faadd1362a0]
         @0x00007faadd22faf6: 7c03e8bf73787faa3805
relocInfo@0x00007faadd22fafe [type=7(external_word) addr=0x00007faadd23038c offset=5 data={e8bf73787faa}] | [target=0x00007faae8bf7378]
         @0x00007faadd22fb00: 320e
relocInfo@0x00007faadd22fb00 [type=6(runtime_call) addr=0x00007faadd23039a offset=14 format=1] | [destination=0x00007faae827c9a0]
         @0x00007faadd22fb02: 3211
relocInfo@0x00007faadd22fb02 [type=6(runtime_call) addr=0x00007faadd2303ab offset=17 format=1] | [destination=0x00007faadd1362a0]
         @0x00007faadd22fb04: 7c03e8bf73787faa3805
relocInfo@0x00007faadd22fb0c [type=7(external_word) addr=0x00007faadd2303b0 offset=5 data={e8bf73787faa}] | [target=0x00007faae8bf7378]
         @0x00007faadd22fb0e: 320e
relocInfo@0x00007faadd22fb0e [type=6(runtime_call) addr=0x00007faadd2303be offset=14 format=1] | [destination=0x00007faae827c9a0]
         @0x00007faadd22fb10: 3221
relocInfo@0x00007faadd22fb10 [type=6(runtime_call) addr=0x00007faadd2303df offset=33 format=1] | [destination=0x00007faadd1362a0]
         @0x00007faadd22fb12: 7c03e8bf73787faa3805
relocInfo@0x00007faadd22fb1a [type=7(external_word) addr=0x00007faadd2303e4 offset=5 data={e8bf73787faa}] | [target=0x00007faae8bf7378]
         @0x00007faadd22fb1c: 320e
relocInfo@0x00007faadd22fb1c [type=6(runtime_call) addr=0x00007faadd2303f2 offset=14 format=1] | [destination=0x00007faae827c9a0]
         @0x00007faadd22fb1e: 7c0104d84006
relocInfo@0x00007faadd22fb22 [type=8(internal_word) addr=0x00007faadd2303f8 offset=6 data=1240] | [target=0x00007faadd22ff20]
         @0x00007faadd22fb24: 3211
relocInfo@0x00007faadd22fb24 [type=6(runtime_call) addr=0x00007faadd230409 offset=17 format=1] | [destination=0x00007faadd135120]
         @0x00007faadd22fb26: 3205
relocInfo@0x00007faadd22fb26 [type=6(runtime_call) addr=0x00007faadd23040e offset=5 format=1] | [destination=0x00007faadd07c6c0]
         @0x00007faadd22fb28: 000a
relocInfo@0x00007faadd22fb28 [type=0(none) addr=0x00007faadd230418 offset=10]
         @0x00007faadd22fb2a: 3200
relocInfo@0x00007faadd22fb2a [type=6(runtime_call) addr=0x00007faadd230418 offset=0 format=1] | [destination=0x00007faadd040820]
         @0x00007faadd22fb2c: 320f
relocInfo@0x00007faadd22fb2c [type=6(runtime_call) addr=0x00007faadd230427 offset=15 format=1] | [destination=0x00007faadd1365c0]
         @0x00007faadd22fb2e: 0000
relocInfo@0x00007faadd22fb2e [type=0(none) addr=0x00007faadd230427 offset=0]
         @0x00007faadd22fb30: 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Dependencies:
Dependency of type abstract_with_unique_concrete_subtype
  context = *jdk.incubator.vector.AbstractSpecies
  class   = jdk.incubator.vector.ByteVector$ByteSpecies
   [nmethod<=klass]jdk.incubator.vector.AbstractSpecies
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.ByteVector$ByteSpecies
  method  = {method} {0x00007faa946b4240} 'indexInRange' '(II)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/AbstractSpecies'
  class   = jdk.incubator.vector.VectorSpecies
  method  = *{method} {0x00007faa946b1d50} 'indexInRange' '(II)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/VectorSpecies'
   [nmethod<=klass]jdk.incubator.vector.ByteVector$ByteSpecies
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.ByteVector$ByteSpecies
  method  = {method} {0x00007faa946b3520} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
  class   = jdk.incubator.vector.VectorSpecies
  method  = *{method} {0x00007faa946b1a00} 'length' '()I' in 'jdk/incubator/vector/VectorSpecies'
   [nmethod<=klass]jdk.incubator.vector.ByteVector$ByteSpecies
Dependency of type unique_concrete_method_4
  context = *jdk.incubator.vector.VectorMask
  method  = {method} {0x00007faa94786828} 'and' '(Ljdk/incubator/vector/VectorMask;)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/Byte512Vector$Byte512Mask'
  class   = jdk.incubator.vector.VectorMask
  method  = *{method} {0x00007faa946d28b8} 'and' '(Ljdk/incubator/vector/VectorMask;)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/VectorMask'
   [nmethod<=klass]jdk.incubator.vector.VectorMask
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.Byte512Vector$Byte512Mask
  method  = {method} {0x00007faa946d01e0} 'indexInRange' '(II)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/AbstractMask'
  class   = jdk.incubator.vector.VectorMask
  method  = *{method} {0x00007faa946d2c28} 'indexInRange' '(II)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/VectorMask'
   [nmethod<=klass]jdk.incubator.vector.Byte512Vector$Byte512Mask
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.Byte512Vector$Byte512Mask
  method  = {method} {0x00007faa946cf068} 'vectorSpecies' '()Ljdk/incubator/vector/VectorSpecies;' in 'jdk/incubator/vector/AbstractMask'
  class   = jdk.incubator.vector.VectorMask
  method  = *{method} {0x00007faa946d1db8} 'vectorSpecies' '()Ljdk/incubator/vector/VectorSpecies;' in 'jdk/incubator/vector/VectorMask'
   [nmethod<=klass]jdk.incubator.vector.Byte512Vector$Byte512Mask
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.Byte512Vector$Byte512Mask
  method  = {method} {0x00007faa946cf568} 'check' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/AbstractMask'
  class   = jdk.incubator.vector.VectorMask
  method  = *{method} {0x00007faa946d2f90} 'check' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/VectorMask'
   [nmethod<=klass]jdk.incubator.vector.Byte512Vector$Byte512Mask
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.Byte512Vector$Byte512Mask
  method  = {method} {0x00007faa946d06e0} 'checkIndexByLane' '(IILjdk/incubator/vector/Vector;I)V' in 'jdk/incubator/vector/AbstractMask'
  class   = jdk.incubator.vector.AbstractMask
  method  = {method} {0x00007faa946d06e0} 'checkIndexByLane' '(IILjdk/incubator/vector/Vector;I)V' in 'jdk/incubator/vector/AbstractMask'
   [nmethod<=klass]jdk.incubator.vector.Byte512Vector$Byte512Mask
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.VectorOperators$ComparisonImpl
  method  = {method} {0x00007faa947a5128} 'opCode' '(II)I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  class   = jdk.incubator.vector.VectorOperators$OperatorImpl
  method  = {method} {0x00007faa947a5128} 'opCode' '(II)I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
   [nmethod<=klass]jdk.incubator.vector.VectorOperators$ComparisonImpl
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.VectorOperators$ComparisonImpl
  method  = {method} {0x00007faa947a5208} 'opCodeRaw' '()I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  class   = jdk.incubator.vector.VectorOperators$OperatorImpl
  method  = {method} {0x00007faa947a5208} 'opCodeRaw' '()I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
   [nmethod<=klass]jdk.incubator.vector.VectorOperators$ComparisonImpl
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ExceptionHandlerTable (size = 0 bytes)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ImplicitExceptionTable (size = 8 entries, 68 bytes):
{
   < 0x00007faadd22fb68, 0x00007faadd2303c4 > < 0x00007faadd22fc24, 0x00007faadd230358 > < 0x00007faadd22fd20, 0x00007faadd230358 > 
   < 0x00007faadd22fd80, 0x00007faadd23037c > < 0x00007faadd22fec0, 0x00007faadd230358 > < 0x00007faadd22ff02, 0x00007faadd2303a0 > 
   < 0x00007faadd22ff33, 0x00007faadd23037c > < 0x00007faadd230000, 0x00007faadd23037c > 
}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded oops:
#0: 0x0000000000000000 nullptr-oop
#1: 0x000000011903bac0 a 'java/lang/Class'{0x000000011903bac0} = 'jdk/incubator/vector/Byte512Vector'
#2: 0x0000000119000090 a 'java/lang/Class'{0x0000000119000090} = 'jdk/incubator/vector/Byte512Vector$Byte512Mask'
#3: 0x0000000119000110 a 'java/lang/Class'{0x0000000119000110} = byte
#4: 0x000000011903ba78 a 'jdk/incubator/vector/ByteVector$ByteSpecies'{0x000000011903ba78}
#5: 0x000000011903b970 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x000000011903b970}
#6: 0x000000011903bb50 a 'java/lang/Class'{0x000000011903bb50} = 'java/lang/invoke/LambdaForm$MH+0x00000008000c1400[Time] 10ms [Res] 0
'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded metadata:
# 0: 0x0000000000000000 nullptr-oop
# 1: 0x00007faa94701558 {method} {0x00007faa94701558} 'micro' '([B[BII)B' in 'indexvec'
# 2: 0x00007faa946b4240 {method} {0x00007faa946b4240} 'indexInRange' '(II)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/AbstractSpecies'
# 3: 0x00007faa946aec08 {method} {0x00007faa946aec08} 'maskAll' '(Z)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/ByteVector$ByteSpecies'
# 4: 0x00007faa94785fb8 {method} {0x00007faa94785fb8} 'maskAll' '(Z)Ljdk/incubator/vector/Byte512Vector$Byte512Mask;' in 'jdk/incubator/vector/Byte512Vector$Byte512Mask'
# 5: 0x00007faa94662a68 {method} {0x00007faa94662a68} 'intoArray' '([BILjdk/incubator/vector/VectorMask;)V' in 'jdk/incubator/vector/ByteVector'
# 6: 0x00007faa946fea38 {method} {0x00007faa946fea38} 'intoArray0' '([BILjdk/incubator/vector/VectorMask;)V' in 'jdk/incubator/vector/Byte512Vector'
# 7: 0x00007faa94664388 {method} {0x00007faa94664388} 'intoArray0Template' '(Ljava/lang/Class;[BILjdk/incubator/vector/VectorMask;)V' in 'jdk/incubator/vector/ByteVector'
# 8: 0x00007faa946d01e0 {method} {0x00007faa946d01e0} 'indexInRange' '(II)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/AbstractMask'
# 9: 0x00007faa94786828 {method} {0x00007faa94786828} 'and' '(Ljdk/incubator/vector/VectorMask;)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/Byte512Vector$Byte512Mask'
#10: 0x00007faa947856e8 {method} {0x00007faa947856e8} 'and' '(Ljdk/incubator/vector/VectorMask;)Ljdk/incubator/vector/Byte512Vector$Byte512Mask;' in 'jdk/incubator/vector/Byte512Vector$Byte512Mask'
#11: 0x00007faa9450d240 {method} {0x00007faa9450d240} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x00000008000c1400'
#12: 0x00007faa94661e28 {method} {0x00007faa94661e28} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[BILjdk/incubator/vector/VectorMask;)Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector'
#13: 0x00007faa946adc50 {method} {0x00007faa946adc50} 'dummyVector' '()Ljdk/incubator/vector/ByteVector;' in 'jdk/incubator/vector/ByteVector$ByteSpecies'
#14: 0x00007faa94662920 {method} {0x00007faa94662920} 'intoArray' '([BI)V' in 'jdk/incubator/vector/ByteVector'
#15: 0x00007faa9479dd98 {method} {0x00007faa9479dd98} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
#16: 0x00007faa941909a8 {method} {0x00007faa941909a8} 'checkIndex' '(II)I' in 'java/util/Objects'
#17: 0x00007faa9479dc70 {method} {0x00007faa9479dc70} 'indexInRange' '(JJJ)Z' in 'jdk/incubator/vector/VectorIntrinsics'
#18: 0x00007faa946d1e98 {method} {0x00007faa946d1e98} 'length' '()I' in 'jdk/incubator/vector/VectorMask'
#19: 0x00007faa94786098 {method} {0x00007faa94786098} 'indexInRange0' '(JJ)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/Byte512Vector$Byte512Mask'
#20: 0x00007faa94785400 {method} {0x00007faa94785400} 'indexInRange0' '(JJ)Ljdk/incubator/vector/Byte512Vector$Byte512Mask;' in 'jdk/incubator/vector/Byte512Vector$Byte512Mask'
#21: 0x00007faa946cf068 {method} {0x00007faa946cf068} 'vectorSpecies' '()Ljdk/incubator/vector/VectorSpecies;' in 'jdk/incubator/vector/AbstractMask'
#22: 0x00007faa94786170 {method} {0x00007faa94786170} 'vspecies' '()Ljdk/incubator/vector/AbstractSpecies;' in 'jdk/incubator/vector/Byte512Vector$Byte512Mask'
#23: 0x00007faa946ad330 {method} {0x00007faa946ad330} 'vectorType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/ByteVector$ByteSpecies'
#24: 0x00007faa946649d0 {method} {0x00007faa946649d0} 'checkMaskFromIndexSize' '(ILjdk/incubator/vector/ByteVector$ByteSpecies;Ljdk/incubator/vector/VectorMask;II)V' in 'jdk/incubator/vector/ByteVector'
#25: 0x00007faa946d06e0 {method} {0x00007faa946d06e0} 'checkIndexByLane' '(IILjdk/incubator/vector/Vector;I)V' in 'jdk/incubator/vector/AbstractMask'
#26: 0x00007faa94785ae8 {method} {0x00007faa94785ae8} 'firstTrue' '()I' in 'jdk/incubator/vector/Byte512Vector$Byte512Mask'
#27: 0x000000080009a5a0 'jdk/incubator/vector/AbstractSpecies'
#28: 0x000000080009a988 'jdk/incubator/vector/ByteVector$ByteSpecies'
#29: 0x000000080009a198 'jdk/incubator/vector/VectorSpecies'
#30: 0x00007faa946b1d50 {method} {0x00007faa946b1d50} 'indexInRange' '(II)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/VectorSpecies'
#31: 0x00007faa946b3520 {method} {0x00007faa946b3520} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
#32: 0x00007faa946b1a00 {method} {0x00007faa946b1a00} 'length' '()I' in 'jdk/incubator/vector/VectorSpecies'
#33: 0x000000080009c858 'jdk/incubator/vector/VectorMask'
#34: 0x00007faa946d28b8 {method} {0x00007faa946d28b8} 'and' '(Ljdk/incubator/vector/VectorMask;)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/VectorMask'
#35: 0x000000080009f210 'jdk/incubator/vector/Byte512Vector$Byte512Mask'
#36: 0x00007faa946d2c28 {method} {0x00007faa946d2c28} 'indexInRange' '(II)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/VectorMask'
#37: 0x00007faa946d1db8 {method} {0x00007faa946d1db8} 'vectorSpecies' '()Ljdk/incubator/vector/VectorSpecies;' in 'jdk/incubator/vector/VectorMask'
#38: 0x00007faa946cf568 {method} {0x00007faa946cf568} 'check' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/AbstractMask'
#39: 0x00007faa946d2f90 {method} {0x00007faa946d2f90} 'check' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/VectorMask;' in 'jdk/incubator/vector/VectorMask'
#40: 0x000000080009cb20 'jdk/incubator/vector/AbstractMask'
#41: 0x00000008000a3898 'jdk/incubator/vector/VectorOperators$ComparisonImpl'
#42: 0x00007faa947a5128 {method} {0x00007faa947a5128} 'opCode' '(II)I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
#43: 0x00000008000a2478 'jdk/incubator/vector/VectorOperators$OperatorImpl'
#44: 0x00007faa947a5208 {method} {0x00007faa947a5208} 'opCodeRaw' '()I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
------------------------------------------------------------------------
static indexvec::micro([B[BII)B
  interpreter_invocation_count:       27006
  invocation_counter:                 27006
  backedge_counter:                  459170
  decompile_count:                        1
  mdo size: 680 bytes

   0 iconst_0
   1 istore #4
   3 fast_iload #4
   5 iload_2
   6 if_icmpge 57
  0   bci: 6    BranchData          trap(profile_predicate recompiled) taken(26770) displacement(240)
                                    not taken(455074)
   9 getstatic 7 <indexvec.SPECIES/Ljdk/incubator/vector/VectorSpecies;> 
  12 fast_iload #4
  14 iload_2
  15 invokeinterface 13 <jdk/incubator/vector/VectorSpecies.indexInRange(II)Ljdk/incubator/vector/VectorMask;> 
  32  bci: 15   VirtualCallData     count(0) nonprofiled_count(0) entries(1)
                                    'jdk/incubator/vector/ByteVector$ByteSpecies'(455074 1.00)
  20 astore #5
  22 getstatic 7 <indexvec.SPECIES/Ljdk/incubator/vector/VectorSpecies;> 
  25 aload_1
  26 fast_iload #4
  28 aload #5
  30 invokestatic 19 <jdk/incubator/vector/ByteVector.fromArray(Ljdk/incubator/vector/VectorSpecies;[BILjdk/incubator/vector/VectorMask;)Ljdk/incubator/vector/ByteVector;> 
  88  bci: 30   CounterData         count(455074)
  33 fast_aload_0
  34 fast_iload #4
  36 aload #5
  38 invokevirtual 25 <jdk/incubator/vector/ByteVector.intoArray([BILjdk/incubator/vector/VectorMask;)V> 
  104 bci: 38   VirtualCallData     count(455074) nonprofiled_count(0) entries(0)
  41 fast_iload #4
  43 getstatic 7 <indexvec.SPECIES/Ljdk/incubator/vector/VectorSpecies;> 
  46 invokeinterface 29 <jdk/incubator/vector/VectorSpecies.length()I> 
  160 bci: 46   VirtualCallData     count(0) nonprofiled_count(0) entries(1)
                                    'jdk/incubator/vector/ByteVector$ByteSpecies'(455074 1.00)
  51 iadd
  52 istore #4
  54 goto 3
  216 bci: 54   JumpData            taken(455074) displacement(-216)
  57 fast_aload_0
  58 iload_3
  59 baload
  60 ireturn
------------------------------------------------------------------------
Total MDO size: 680 bytes
