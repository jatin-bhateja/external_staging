Classfile /home/intel/code/java/vector-api/AddTest.class
  Last modified 13-Feb-2019; size 1415 bytes
  MD5 checksum 2376beab6b3720e71305ea0ca093cf47
  Compiled from "AddTest.java"
public class AddTest
  minor version: 0
  major version: 57
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #10                         // AddTest
  super_class: #15                        // java/lang/Object
  interfaces: 0, fields: 5, methods: 4, attributes: 2
Constant pool:
   #1 = Methodref          #15.#40        // java/lang/Object."<init>":()V
   #2 = Fieldref           #10.#41        // AddTest.a:[F
   #3 = Fieldref           #10.#42        // AddTest.SPECIES:Ljdk/incubator/vector/FloatVector$FloatSpecies;
   #4 = Methodref          #17.#43        // jdk/incubator/vector/FloatVector$FloatSpecies.fromArray:([FI)Ljdk/incubator/vector/FloatVector;
   #5 = Fieldref           #10.#44        // AddTest.b:[F
   #6 = Methodref          #45.#46        // jdk/incubator/vector/FloatVector.add:(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatVector;
   #7 = Fieldref           #10.#47        // AddTest.c:[F
   #8 = Methodref          #45.#48        // jdk/incubator/vector/FloatVector.intoArray:([FI)V
   #9 = Methodref          #17.#49        // jdk/incubator/vector/FloatVector$FloatSpecies.length:()I
  #10 = Class              #50            // AddTest
  #11 = Integer            1300000
  #12 = Methodref          #10.#51        // AddTest.workload:()V
  #13 = Fieldref           #52.#53        // jdk/incubator/vector/Vector$Shape.S_256_BIT:Ljdk/incubator/vector/Vector$Shape;
  #14 = Methodref          #45.#54        // jdk/incubator/vector/FloatVector.species:(Ljdk/incubator/vector/Vector$Shape;)Ljdk/incubator/vector/FloatVector$FloatSpecies;
  #15 = Class              #55            // java/lang/Object
  #16 = Utf8               SPECIES
  #17 = Class              #56            // jdk/incubator/vector/FloatVector$FloatSpecies
  #18 = Utf8               FloatSpecies
  #19 = Utf8               InnerClasses
  #20 = Utf8               Ljdk/incubator/vector/FloatVector$FloatSpecies;
  #21 = Utf8               SIZE
  #22 = Utf8               I
  #23 = Utf8               ConstantValue
  #24 = Integer            1024
  #25 = Utf8               a
  #26 = Utf8               [F
  #27 = Utf8               b
  #28 = Utf8               c
  #29 = Utf8               <init>
  #30 = Utf8               ()V
  #31 = Utf8               Code
  #32 = Utf8               LineNumberTable
  #33 = Utf8               workload
  #34 = Utf8               StackMapTable
  #35 = Utf8               main
  #36 = Utf8               ([Ljava/lang/String;)V
  #37 = Utf8               <clinit>
  #38 = Utf8               SourceFile
  #39 = Utf8               AddTest.java
  #40 = NameAndType        #29:#30        // "<init>":()V
  #41 = NameAndType        #25:#26        // a:[F
  #42 = NameAndType        #16:#20        // SPECIES:Ljdk/incubator/vector/FloatVector$FloatSpecies;
  #43 = NameAndType        #57:#58        // fromArray:([FI)Ljdk/incubator/vector/FloatVector;
  #44 = NameAndType        #27:#26        // b:[F
  #45 = Class              #59            // jdk/incubator/vector/FloatVector
  #46 = NameAndType        #60:#61        // add:(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatVector;
  #47 = NameAndType        #28:#26        // c:[F
  #48 = NameAndType        #62:#63        // intoArray:([FI)V
  #49 = NameAndType        #64:#65        // length:()I
  #50 = Utf8               AddTest
  #51 = NameAndType        #33:#30        // workload:()V
  #52 = Class              #67            // jdk/incubator/vector/Vector$Shape
  #53 = NameAndType        #69:#70        // S_256_BIT:Ljdk/incubator/vector/Vector$Shape;
  #54 = NameAndType        #71:#72        // species:(Ljdk/incubator/vector/Vector$Shape;)Ljdk/incubator/vector/FloatVector$FloatSpecies;
  #55 = Utf8               java/lang/Object
  #56 = Utf8               jdk/incubator/vector/FloatVector$FloatSpecies
  #57 = Utf8               fromArray
  #58 = Utf8               ([FI)Ljdk/incubator/vector/FloatVector;
  #59 = Utf8               jdk/incubator/vector/FloatVector
  #60 = Utf8               add
  #61 = Utf8               (Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatVector;
  #62 = Utf8               intoArray
  #63 = Utf8               ([FI)V
  #64 = Utf8               length
  #65 = Utf8               ()I
  #66 = Class              #73            // jdk/incubator/vector/Vector
  #67 = Utf8               jdk/incubator/vector/Vector$Shape
  #68 = Utf8               Shape
  #69 = Utf8               S_256_BIT
  #70 = Utf8               Ljdk/incubator/vector/Vector$Shape;
  #71 = Utf8               species
  #72 = Utf8               (Ljdk/incubator/vector/Vector$Shape;)Ljdk/incubator/vector/FloatVector$FloatSpecies;
  #73 = Utf8               jdk/incubator/vector/Vector
{
  static final jdk.incubator.vector.FloatVector$FloatSpecies SPECIES;
    descriptor: Ljdk/incubator/vector/FloatVector$FloatSpecies;
    flags: (0x0018) ACC_STATIC, ACC_FINAL

  static final int SIZE;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 1024

  static float[] a;
    descriptor: [F
    flags: (0x0008) ACC_STATIC

  static float[] b;
    descriptor: [F
    flags: (0x0008) ACC_STATIC

  static float[] c;
    descriptor: [F
    flags: (0x0008) ACC_STATIC

  public AddTest();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 8: 0

  static void workload();
    descriptor: ()V
    flags: (0x0008) ACC_STATIC
    Code:
      stack=3, locals=3, args_size=0
         0: iconst_0
         1: istore_0
         2: iload_0
         3: getstatic     #2                  // Field a:[F
         6: arraylength
         7: if_icmpge     56
        10: getstatic     #3                  // Field SPECIES:Ljdk/incubator/vector/FloatVector$FloatSpecies;
        13: getstatic     #2                  // Field a:[F
        16: iload_0
        17: invokevirtual #4                  // Method jdk/incubator/vector/FloatVector$FloatSpecies.fromArray:([FI)Ljdk/incubator/vector/FloatVector;
        20: astore_1
        21: getstatic     #3                  // Field SPECIES:Ljdk/incubator/vector/FloatVector$FloatSpecies;
        24: getstatic     #5                  // Field b:[F
        27: iload_0
        28: invokevirtual #4                  // Method jdk/incubator/vector/FloatVector$FloatSpecies.fromArray:([FI)Ljdk/incubator/vector/FloatVector;
        31: astore_2
        32: aload_1
        33: aload_2
        34: invokevirtual #6                  // Method jdk/incubator/vector/FloatVector.add:(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatVector;
        37: getstatic     #7                  // Field c:[F
        40: iload_0
        41: invokevirtual #8                  // Method jdk/incubator/vector/FloatVector.intoArray:([FI)V
        44: iload_0
        45: getstatic     #3                  // Field SPECIES:Ljdk/incubator/vector/FloatVector$FloatSpecies;
        48: invokevirtual #9                  // Method jdk/incubator/vector/FloatVector$FloatSpecies.length:()I
        51: iadd
        52: istore_0
        53: goto          2
        56: return
      LineNumberTable:
        line 18: 0
        line 19: 10
        line 20: 21
        line 21: 32
        line 18: 44
        line 23: 56
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 2
          locals = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 53

  public static void main(java.lang.String[]);
    descriptor: ([Ljava/lang/String;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=1
         0: iconst_0
         1: istore_1
         2: iload_1
         3: sipush        1024
         6: if_icmpge     27
         9: getstatic     #2                  // Field a:[F
        12: iload_1
        13: fconst_1
        14: fastore
        15: getstatic     #5                  // Field b:[F
        18: iload_1
        19: fconst_2
        20: fastore
        21: iinc          1, 1
        24: goto          2
        27: iconst_0
        28: istore_1
        29: iload_1
        30: ldc           #11                 // int 1300000
        32: if_icmpge     44
        35: invokestatic  #12                 // Method workload:()V
        38: iinc          1, 1
        41: goto          29
        44: return
      LineNumberTable:
        line 26: 0
        line 27: 9
        line 28: 15
        line 26: 21
        line 30: 27
        line 31: 35
        line 30: 38
        line 32: 44
      StackMapTable: number_of_entries = 4
        frame_type = 252 /* append */
          offset_delta = 2
          locals = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 24
        frame_type = 252 /* append */
          offset_delta = 1
          locals = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 14

  static {};
    descriptor: ()V
    flags: (0x0008) ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #13                 // Field jdk/incubator/vector/Vector$Shape.S_256_BIT:Ljdk/incubator/vector/Vector$Shape;
         3: invokestatic  #14                 // Method jdk/incubator/vector/FloatVector.species:(Ljdk/incubator/vector/Vector$Shape;)Ljdk/incubator/vector/FloatVector$FloatSpecies;
         6: putstatic     #3                  // Field SPECIES:Ljdk/incubator/vector/FloatVector$FloatSpecies;
         9: sipush        1024
        12: newarray       float
        14: putstatic     #2                  // Field a:[F
        17: sipush        1024
        20: newarray       float
        22: putstatic     #5                  // Field b:[F
        25: sipush        1024
        28: newarray       float
        30: putstatic     #7                  // Field c:[F
        33: return
      LineNumberTable:
        line 9: 0
        line 10: 3
        line 13: 9
        line 14: 17
        line 15: 25
}
SourceFile: "AddTest.java"
InnerClasses:
  public static abstract #18= #17 of #45; // FloatSpecies=class jdk/incubator/vector/FloatVector$FloatSpecies of class jdk/incubator/vector/FloatVector
  public static final #68= #52 of #66;    // Shape=class jdk/incubator/vector/Vector$Shape of class jdk/incubator/vector/Vector
