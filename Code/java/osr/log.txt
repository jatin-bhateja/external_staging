CompileCommand: print test.main bool print = true
CompileCommand: compileonly test.main bool compileonly = true
Uncommon trap reason='constraint' action='reinterpret' debug_id='0' at bci:16
Merging state at block #0 bci:16 with empty state on path 2
Uncommon trap reason='predicate' action='maybe_recompile' debug_id='0' at bci:16
Uncommon trap reason='profile_predicate' action='maybe_recompile' debug_id='0' at bci:16
Uncommon trap reason='loop_limit_check' action='maybe_recompile' debug_id='0' at bci:16
Parsing block #0 at bci [16,22), successors:  1 2  lphd
 @ bci:16 iload_3
 @ bci:17 aload_2
 @ bci:18 arraylength
Uncommon trap reason='null_check' action='maybe_recompile' debug_id='0' at bci:18
 @ bci:19 if_icmpge
Uncommon trap reason='unstable_if' action='reinterpret' debug_id='0' at bci:19
Merging state at block #1 bci:22 with empty state on path 1
Parsing block #1 at bci [22,34), successors:  0
 @ bci:22 iload_1
 @ bci:23 aload_2
 @ bci:24 iload_3
 @ bci:25 iaload
Uncommon trap reason='range_check' action='make_not_entrant' debug_id='0' at bci:25
 @ bci:26 iadd
 @ bci:27 istore_1
 @ bci:28 iinc
 @ bci:31 goto
Merging state at block #0 bci:16 with previous state on path 1
Skipped dead block 2 at bci:34

============================= C2-compiled nmethod ==============================
#r018 rsi:rsi   : parm 0: rawptr:BotPTR
# -- Old rsp -- Framesize: 64 --
#r591 rsp+60: in_preserve
#r590 rsp+56: return address
#r589 rsp+52: in_preserve
#r588 rsp+48: saved fp register
#r587 rsp+44: pad2, stack alignment
#r586 rsp+40: pad2, stack alignment
#r585 rsp+36: Fixed slot 1
#r584 rsp+32: Fixed slot 0
#r599 rsp+28: spill
#r598 rsp+24: spill
#r597 rsp+20: spill
#r596 rsp+16: spill
#r595 rsp+12: spill
#r594 rsp+ 8: spill
#r593 rsp+ 4: spill
#r592 rsp+ 0: spill
#
----------------------- MetaData before Compile_id = 24 ------------------------
{method}
 - this oop:          0x00007f2c38705310
 - method holder:     'test'
 - constants:         0x00007f2c38705030 constant pool [36] {0x00007f2c38705030} for 'test' cache=0x00007f2c387053b8
 - access:            0xc1000009  public static 
 - name:              'main'
 - signature:         '([Ljava/lang/String;)V'
 - max stack:         4
 - max locals:        4
 - size of params:    1
 - method size:       14
 - vtable index:      -2
 - i2i entry:         0x00007f2c80e4d740
 - adapters:          AHE@0x00007f2c7c23d460: 0xb i2c: 0x00007f2c80f5dd60 c2i: 0x00007f2c80f5de27 c2iUV: 0x00007f2c80f5ddf5 c2iNCI: 0x00007f2c80f5de61
 - compiled entry     0x00007f2c80f5de27
 - code size:         42
 - code start:        0x00007f2c387052d8
 - code end (excl):   0x00007f2c38705302
 - method data:       0x00007f2c387054a8
 - checked ex length: 0
 - linenumber start:  0x00007f2c38705302
 - localvar length:   0

------------------------ OptoAssembly for Compile_id = 24 -----------------------
#
#  void ( rawptr:BotPTR )
#
000     N271: #	out( B1 ) <- BLOCK HEAD IS JUNK  Freq: 1
000     # breakpoint
        nop 	# 11 bytes pad for loops and calls

010     B1: #	out( B30 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
010     # stack bang (152 bytes)
	pushq   rbp	# Save rbp
	subq    rsp, #48	# Create frame

02a     movq    R13, [RSI + #8 (8-bit)]	# ptr
02e     movl    RBP, [RSI + #16 (8-bit)]	# int
031     movl    RBX, [RSI]	# int
033     movq    RDI, RSI	# spill
036     call_leaf,runtime  OSR_migration_end
        No JVM State Info
        # 
04b     movl    R11, [R13 + #8 (8-bit)]	# compressed klass ptr
04f     NullCheck R13

04f     B2: #	out( B28 B3 ) <- in( B1 )  Freq: 0.999999
04f     cmpl    R11, narrowklass: precise [int (java/lang/Cloneable,java/io/Serializable): :Constant:exact *	# compressed klass ptr
056     jne,u   B28  P=0.000001 C=-1.000000

05c     B3: #	out( B29 B4 ) <- in( B2 )  Freq: 0.999998
05c     # checkcastPP of R13
05c     movl    R9, [R13 + #12 (8-bit)]	# range
060     cmpl    RBX, R9
063     jge     B29  P=0.000000 C=4608.000000

069     B4: #	out( B5 ) <- in( B3 )  Freq: 0.999997
069     leal    R10, [RBX + #1]
06d     xorl    RDI, RDI	# int
06f     testl   R10, R10
072     cmovll R10, RDI	# signed, int
076     cmpl    R10, R9
079     cmovlgt R10, R9	# min

07d     B5: #	out( B23 B6 ) <- in( B4 B7 ) Loop( B5-B7 inner pre of N244 reduction) Freq: 1.99999
        nop 	# 3 bytes pad for loops and calls
080     cmpl    RBX, R9	# unsigned
083     jae,u   B23  P=0.000001 C=-1.000000

089     B6: #	out( B8 B7 ) <- in( B5 )  Freq: 1.99999
089     addl    RBP, [R13 + #16 + RBX << #2]	# int
08e     leal    RCX, [RBX + #1]
091     cmpl    RCX, R10
094     jge,s   B8	# loop end  P=0.500000 C=4608.000000

096     B7: #	out( B5 ) <- in( B6 )  Freq: 0.999995
096     movl    RBX, RCX	# spill
098     jmp,s   B5

09a     B8: #	out( B17 B9 ) <- in( B6 )  Freq: 0.999995
09a     leal    R11, [R9 + #-7]
09e     movl    R8, #-2147483648	# int
0a4     cmpl    R9, R11
0a7     cmovll R11, R8	# signed, int
0ab     cmpl    RCX, R11
0ae     jge     B17  P=0.000001 C=-1.000000

0b4     B9: #	out( B25 B10 ) <- in( B8 )  Freq: 0.999994
0b4     movl    R8, RCX	# spill
0b7     # castII of R8
0b7     cmpl    R8, R9	# unsigned
        nop 	# 6 bytes pad for loops and calls
0c0     jae,u   B25  P=0.000001 C=-1.000000

0c6     B10: #	out( B26 B11 ) <- in( B9 )  Freq: 0.999993
0c6     addl    RBX, #8	# int
0c9     cmpl    RBX, R9	# unsigned
0cc     jae,u   B26  P=0.000001 C=-1.000000

0d2     B11: #	out( B27 B12 ) <- in( B10 )  Freq: 0.999992
0d2     cmpl    RCX, R9	# unsigned
0d5     jae,u   B27  P=0.000001 C=-1.000000

0db     B12: #	out( B14 ) <- in( B11 )  Freq: 0.999991
0db     movl    RCX, #8000	# int
0e0     # TLS is in R15
0e0     jmp,s   B14

0e2     B13: #	out( B18 B14 ) <- in( B16 ) top-of-loop Freq: 999991
0e2     movq    R10, [R15 + #960 (32-bit)]	# ptr
0e9     testl   rax, [R10]	# Safepoint: poll for GC        # test::main @ bci:31 (line 9) L[0]=_ L[1]=RBP L[2]=R13 L[3]=R8
        # OopMap {r13=Oop off=233/0xe9}
0ec     cmpl    R8, R11
0ef     jge     B18  P=0.000000 C=4608.000000

0f5     B14: #	out( B15 ) <- in( B12 B13 ) Loop( B14-B13 ) Freq: 999991
0f5     movl    R10, R11	# spill
0f8     subl    R10, R8	# int
0fb     cmpl    R11, R8
0fe     cmovll R10, RDI	# signed, int
102     cmpl    R10, #8000	# unsigned
109     cmovla R10, RCX	# unsigned, int
10d     addl    R10, R8	# int

110     B15: #	out( B15 B16 ) <- in( B14 B15 ) Loop( B15-B15 inner main of N114 reduction strip mined) Freq: 9.99991e+11
110     addl    RBP, [R13 + #16 + R8 << #2]	# int
115     movslq  RBX, R8	# i2l
118     addl    RBP, [R13 + #20 + RBX << #2]	# int
11d     addl    RBP, [R13 + #24 + RBX << #2]	# int
122     addl    RBP, [R13 + #28 + RBX << #2]	# int
127     addl    RBP, [R13 + #32 + RBX << #2]	# int
12c     addl    RBP, [R13 + #36 + RBX << #2]	# int
131     addl    RBP, [R13 + #40 + RBX << #2]	# int
136     addl    RBP, [R13 + #44 + RBX << #2]	# int
13b     addl    R8, #8	# int
        nop 	# 1 bytes pad for loops and calls
140     cmpl    R8, R10
143     jl,s   B15	# loop end  P=1.000000 C=4608.000000

145     B16: #	out( B13 ) <- in( B15 )  Freq: 476833
145     jmp,s   B13

147     B17: #	out( B18 ) <- in( B8 )  Freq: 1.01327e-06
147     movl    R8, RCX	# spill

14a     B18: #	out( B22 B19 ) <- in( B17 B13 )  Freq: 0.999992
14a     cmpl    R8, R9
14d     jge,s   B22  P=0.000001 C=-1.000000

14f     B19: #	out( B20 ) <- in( B18 )  Freq: 0.999991
14f     # castII of R8
        nop 	# 1 bytes pad for loops and calls

150     B20: #	out( B24 B21 ) <- in( B19 B21 ) Loop( B20-B21 inner post of N244 reduction) Freq: 493444
150     cmpl    R8, R9	# unsigned
153     jae,us  B24  P=0.000001 C=-1.000000

155     B21: #	out( B20 B22 ) <- in( B20 )  Freq: 493443
155     addl    RBP, [R13 + #16 + R8 << #2]	# int
15a     incl    R8	# int
        nop 	# 3 bytes pad for loops and calls
160     cmpl    R8, R9
163     jl,s   B20	# loop end  P=0.999999 C=4608.000000

165     B22: #	out( N271 ) <- in( B29 B21 B18 )  Freq: 0.499997
165     movl    RSI, #-187	# int
16a     movl    [rsp + #0], R8	# spill
16e     movl    [rsp + #4], R9	# spill
173     call,static  wrapper for: uncommon_trap(reason='unstable_if' action='reinterpret' debug_id='0')
        # test::main @ bci:19 (line 9) L[0]=_ L[1]=RBP L[2]=_ L[3]=_ STK[0]=rsp + #0 STK[1]=rsp + #4
        # OopMap {off=376/0x178}
180     stop	# ShouldNotReachHere

194     B23: #	out( B24 ) <- in( B5 )  Freq: 2.02655e-06
194     movl    R8, RBX	# spill

197     B24: #	out( N271 ) <- in( B20 B23 )  Freq: 0.499998
197     movl    RSI, #-28	# int
19c     movq    [rsp + #16], R13	# spill
1a1     movl    [rsp + #12], R8	# spill
        nop 	# 1 bytes pad for loops and calls
1a7     call,static  wrapper for: uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')
        # test::main @ bci:25 (line 10) L[0]=_ L[1]=_ L[2]=rsp + #16 L[3]=rsp + #12 STK[0]=RBP STK[1]=rsp + #16 STK[2]=rsp + #12
        # OopMap {[16]=Oop off=428/0x1ac}
1b4     stop	# ShouldNotReachHere

1c8     B25: #	out( N271 ) <- in( B9 )  Freq: 1.01327e-06
1c8     stop	# ShouldNotReachHere

1dc     B26: #	out( N271 ) <- in( B10 )  Freq: 1.01327e-06
1dc     stop	# ShouldNotReachHere

1f0     B27: #	out( N271 ) <- in( B11 )  Freq: 1.01327e-06
1f0     stop	# ShouldNotReachHere

204     B28: #	out( N271 ) <- in( B2 )  Freq: 9.99999e-07
204     movl    RSI, #-115	# int
209     movq    [rsp + #0], R13	# spill
20d     movl    [rsp + #8], RBX	# spill
        nop 	# 2 bytes pad for loops and calls
213     call,static  wrapper for: uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')
        # test::main @ bci:16 (line 9) L[0]=_ L[1]=RBP L[2]=rsp + #0 L[3]=rsp + #8
        # OopMap {[0]=Oop off=536/0x218}
220     stop	# ShouldNotReachHere

234     B29: #	out( B22 ) <- in( B3 )  Freq: 4.76836e-07
234     movl    R8, RBX	# spill
237     jmp     B22

23c     B30: #	out( N271 ) <- in( B1 )  Freq: 1.01328e-06
23c     movl    RSI, #-138	# int
241     movl    [rsp + #0], RBX	# spill
        nop 	# 3 bytes pad for loops and calls
247     call,static  wrapper for: uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')
        # test::main @ bci:16 (line 9) L[0]=_ L[1]=RBP L[2]=#null L[3]=rsp + #0
        # OopMap {off=588/0x24c}
254     stop	# ShouldNotReachHere

--------------------------------------------------------------------------------
----------------------------------- Assembly -----------------------------------

Compiled method (c2)    1465   24 %           test::main @ 16 (42 bytes)
 total in heap  [0x00007f2c80fc4e10,0x00007f2c80fc54f0] = 1760
 relocation     [0x00007f2c80fc4f80,0x00007f2c80fc4ff8] = 120
 main code      [0x00007f2c80fc5000,0x00007f2c80fc5278] = 632
 stub code      [0x00007f2c80fc5278,0x00007f2c80fc5290] = 24
 oops           [0x00007f2c80fc5290,0x00007f2c80fc5298] = 8
 metadata       [0x00007f2c80fc5298,0x00007f2c80fc52a8] = 16
 scopes data    [0x00007f2c80fc52a8,0x00007f2c80fc5338] = 144
 scopes pcs     [0x00007f2c80fc5338,0x00007f2c80fc54d8] = 416
 dependencies   [0x00007f2c80fc54d8,0x00007f2c80fc54e0] = 8
 nul chk table  [0x00007f2c80fc54e0,0x00007f2c80fc54f0] = 16

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x00007f2c38705310} 'main' '([Ljava/lang/String;)V' in 'test'
 ;; N271: #	out( B1 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x00007f2c80fc5000:   callq  0x00007f2c852d28e0           ;   {runtime_call os::breakpoint()}
  0x00007f2c80fc5005:   nop
  0x00007f2c80fc5006:   nop
  0x00007f2c80fc5007:   nop
  0x00007f2c80fc5008:   nop
  0x00007f2c80fc5009:   nop
  0x00007f2c80fc500a:   nop
  0x00007f2c80fc500b:   nop
  0x00007f2c80fc500c:   nop
  0x00007f2c80fc500d:   nop
  0x00007f2c80fc500e:   nop
  0x00007f2c80fc500f:   nop
 ;; B1: #	out( B30 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x00007f2c80fc5010:   mov    %eax,-0x18000(%rsp)
  0x00007f2c80fc5017:   push   %rbp
  0x00007f2c80fc5018:   sub    $0x30,%rsp
  0x00007f2c80fc501c:   cmpl   $0x0,0x20(%r15)
  0x00007f2c80fc5024:   jne    0x00007f2c80fc5268
  0x00007f2c80fc502a:   mov    0x8(%rsi),%r13
  0x00007f2c80fc502e:   mov    0x10(%rsi),%ebp
  0x00007f2c80fc5031:   mov    (%rsi),%ebx
  0x00007f2c80fc5033:   mov    %rsi,%rdi
  0x00007f2c80fc5036:   movabs $0x7f2c853e222c,%r10
  0x00007f2c80fc5040:   callq  *%r10
  0x00007f2c80fc5043:   nopl   0x0(%rax,%rax,1)             ;   {other}
  0x00007f2c80fc504b:   mov    0x8(%r13),%r11d              ; implicit exception: dispatches to 0x00007f2c80fc523c
 ;; B2: #	out( B28 B3 ) <- in( B1 )  Freq: 0.999999
  0x00007f2c80fc504f:   cmp    $0x40e00,%r11d               ;   {metadata({type array int})}
  0x00007f2c80fc5056:   jne    0x00007f2c80fc5204           ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::main@16 (line 9)
 ;; B3: #	out( B29 B4 ) <- in( B2 )  Freq: 0.999998
  0x00007f2c80fc505c:   mov    0xc(%r13),%r9d               ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::main@18 (line 9)
  0x00007f2c80fc5060:   cmp    %r9d,%ebx
  0x00007f2c80fc5063:   jge    0x00007f2c80fc5234           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::main@19 (line 9)
 ;; B4: #	out( B5 ) <- in( B3 )  Freq: 0.999997
  0x00007f2c80fc5069:   lea    0x1(%rbx),%r10d
  0x00007f2c80fc506d:   xor    %edi,%edi
  0x00007f2c80fc506f:   test   %r10d,%r10d
  0x00007f2c80fc5072:   cmovl  %edi,%r10d
  0x00007f2c80fc5076:   cmp    %r9d,%r10d
  0x00007f2c80fc5079:   cmovg  %r9d,%r10d                   ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::main@25 (line 10)
 ;; B5: #	out( B23 B6 ) <- in( B4 B7 ) Loop( B5-B7 inner pre of N244 reduction) Freq: 1.99999
  0x00007f2c80fc507d:   nop
  0x00007f2c80fc507e:   nop
  0x00007f2c80fc507f:   nop
  0x00007f2c80fc5080:   cmp    %r9d,%ebx
  0x00007f2c80fc5083:   jae    0x00007f2c80fc5194
 ;; B6: #	out( B8 B7 ) <- in( B5 )  Freq: 1.99999
  0x00007f2c80fc5089:   add    0x10(%r13,%rbx,4),%ebp       ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::main@26 (line 10)
  0x00007f2c80fc508e:   lea    0x1(%rbx),%ecx
  0x00007f2c80fc5091:   cmp    %r10d,%ecx
  0x00007f2c80fc5094:   jge    0x00007f2c80fc509a           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::main@19 (line 9)
 ;; B7: #	out( B5 ) <- in( B6 )  Freq: 0.999995
  0x00007f2c80fc5096:   mov    %ecx,%ebx
  0x00007f2c80fc5098:   jmp    0x00007f2c80fc507d
 ;; B8: #	out( B17 B9 ) <- in( B6 )  Freq: 0.999995
  0x00007f2c80fc509a:   lea    -0x7(%r9),%r11d
  0x00007f2c80fc509e:   mov    $0x80000000,%r8d
  0x00007f2c80fc50a4:   cmp    %r11d,%r9d
  0x00007f2c80fc50a7:   cmovl  %r8d,%r11d
  0x00007f2c80fc50ab:   cmp    %r11d,%ecx
  0x00007f2c80fc50ae:   jge    0x00007f2c80fc5147
 ;; B9: #	out( B25 B10 ) <- in( B8 )  Freq: 0.999994
  0x00007f2c80fc50b4:   mov    %ecx,%r8d
  0x00007f2c80fc50b7:   cmp    %r9d,%r8d
  0x00007f2c80fc50ba:   nop
  0x00007f2c80fc50bb:   nop
  0x00007f2c80fc50bc:   nop
  0x00007f2c80fc50bd:   nop
  0x00007f2c80fc50be:   nop
  0x00007f2c80fc50bf:   nop
  0x00007f2c80fc50c0:   jae    0x00007f2c80fc51c8
 ;; B10: #	out( B26 B11 ) <- in( B9 )  Freq: 0.999993
  0x00007f2c80fc50c6:   add    $0x8,%ebx
  0x00007f2c80fc50c9:   cmp    %r9d,%ebx
  0x00007f2c80fc50cc:   jae    0x00007f2c80fc51dc
 ;; B11: #	out( B27 B12 ) <- in( B10 )  Freq: 0.999992
  0x00007f2c80fc50d2:   cmp    %r9d,%ecx
  0x00007f2c80fc50d5:   jae    0x00007f2c80fc51f0
 ;; B12: #	out( B14 ) <- in( B11 )  Freq: 0.999991
  0x00007f2c80fc50db:   mov    $0x1f40,%ecx                 ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::main@31 (line 9)
  0x00007f2c80fc50e0:   jmp    0x00007f2c80fc50f5
 ;; B13: #	out( B18 B14 ) <- in( B16 ) top-of-loop Freq: 999991
  0x00007f2c80fc50e2:   mov    0x3c0(%r15),%r10             ; ImmutableOopMap {r13=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) test::main@31 (line 9)
  0x00007f2c80fc50e9:   test   %eax,(%r10)                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::main@31 (line 9)
                                                            ;   {poll}
  0x00007f2c80fc50ec:   cmp    %r11d,%r8d
  0x00007f2c80fc50ef:   jge    0x00007f2c80fc514a
 ;; B14: #	out( B15 ) <- in( B12 B13 ) Loop( B14-B13 ) Freq: 999991
  0x00007f2c80fc50f5:   mov    %r11d,%r10d
  0x00007f2c80fc50f8:   sub    %r8d,%r10d
  0x00007f2c80fc50fb:   cmp    %r8d,%r11d
  0x00007f2c80fc50fe:   cmovl  %edi,%r10d
  0x00007f2c80fc5102:   cmp    $0x1f40,%r10d
  0x00007f2c80fc5109:   cmova  %ecx,%r10d
  0x00007f2c80fc510d:   add    %r8d,%r10d                   ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::main@25 (line 10)
 ;; B15: #	out( B15 B16 ) <- in( B14 B15 ) Loop( B15-B15 inner main of N114 reduction strip mined) Freq: 9.99991e+11
  0x00007f2c80fc5110:   add    0x10(%r13,%r8,4),%ebp
  0x00007f2c80fc5115:   movslq %r8d,%rbx
  0x00007f2c80fc5118:   add    0x14(%r13,%rbx,4),%ebp
  0x00007f2c80fc511d:   add    0x18(%r13,%rbx,4),%ebp
  0x00007f2c80fc5122:   add    0x1c(%r13,%rbx,4),%ebp
  0x00007f2c80fc5127:   add    0x20(%r13,%rbx,4),%ebp
  0x00007f2c80fc512c:   add    0x24(%r13,%rbx,4),%ebp
  0x00007f2c80fc5131:   add    0x28(%r13,%rbx,4),%ebp
  0x00007f2c80fc5136:   add    0x2c(%r13,%rbx,4),%ebp       ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::main@26 (line 10)
  0x00007f2c80fc513b:   add    $0x8,%r8d                    ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::main@28 (line 9)
  0x00007f2c80fc513f:   nop
  0x00007f2c80fc5140:   cmp    %r10d,%r8d
  0x00007f2c80fc5143:   jl     0x00007f2c80fc5110           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::main@19 (line 9)
 ;; B16: #	out( B13 ) <- in( B15 )  Freq: 476833
  0x00007f2c80fc5145:   jmp    0x00007f2c80fc50e2
 ;; B17: #	out( B18 ) <- in( B8 )  Freq: 1.01327e-06
  0x00007f2c80fc5147:   mov    %ecx,%r8d
 ;; B18: #	out( B22 B19 ) <- in( B17 B13 )  Freq: 0.999992
  0x00007f2c80fc514a:   cmp    %r9d,%r8d
  0x00007f2c80fc514d:   jge    0x00007f2c80fc5165
 ;; B19: #	out( B20 ) <- in( B18 )  Freq: 0.999991
  0x00007f2c80fc514f:   nop                                 ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::main@25 (line 10)
 ;; B20: #	out( B24 B21 ) <- in( B19 B21 ) Loop( B20-B21 inner post of N244 reduction) Freq: 493444
  0x00007f2c80fc5150:   cmp    %r9d,%r8d
  0x00007f2c80fc5153:   jae    0x00007f2c80fc5197
 ;; B21: #	out( B20 B22 ) <- in( B20 )  Freq: 493443
  0x00007f2c80fc5155:   add    0x10(%r13,%r8,4),%ebp        ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::main@26 (line 10)
  0x00007f2c80fc515a:   inc    %r8d                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::main@28 (line 9)
  0x00007f2c80fc515d:   nop
  0x00007f2c80fc515e:   nop
  0x00007f2c80fc515f:   nop
  0x00007f2c80fc5160:   cmp    %r9d,%r8d
  0x00007f2c80fc5163:   jl     0x00007f2c80fc5150           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::main@19 (line 9)
 ;; B22: #	out( N271 ) <- in( B29 B21 B18 )  Freq: 0.499997
  0x00007f2c80fc5165:   mov    $0xffffff45,%esi
  0x00007f2c80fc516a:   mov    %r8d,(%rsp)
  0x00007f2c80fc516e:   mov    %r9d,0x4(%rsp)
  0x00007f2c80fc5173:   callq  0x00007f2c80f61b20           ; ImmutableOopMap {}
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) test::main@19 (line 9)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f2c80fc5178:   nopl   0x1000368(%rax,%rax,1)       ;   {other}
  0x00007f2c80fc5180:   movabs $0x7f2c85afeb20,%rdi         ;   {external_word}
  0x00007f2c80fc518a:   and    $0xfffffffffffffff0,%rsp
  0x00007f2c80fc518e:   callq  0x00007f2c85178784           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f2c80fc5193:   hlt                                 ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::main@19 (line 9)
 ;; B23: #	out( B24 ) <- in( B5 )  Freq: 2.02655e-06
  0x00007f2c80fc5194:   mov    %ebx,%r8d
 ;; B24: #	out( N271 ) <- in( B20 B23 )  Freq: 0.499998
  0x00007f2c80fc5197:   mov    $0xffffffe4,%esi
  0x00007f2c80fc519c:   mov    %r13,0x10(%rsp)
  0x00007f2c80fc51a1:   mov    %r8d,0xc(%rsp)
  0x00007f2c80fc51a6:   nop
  0x00007f2c80fc51a7:   callq  0x00007f2c80f61b20           ; ImmutableOopMap {[16]=Oop }
                                                            ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::main@25 (line 10)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f2c80fc51ac:   nopl   0x200039c(%rax,%rax,1)       ;   {other}
  0x00007f2c80fc51b4:   movabs $0x7f2c85afeb20,%rdi         ;   {external_word}
  0x00007f2c80fc51be:   and    $0xfffffffffffffff0,%rsp
  0x00007f2c80fc51c2:   callq  0x00007f2c85178784           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f2c80fc51c7:   hlt                                 ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::main@25 (line 10)
 ;; B25: #	out( N271 ) <- in( B9 )  Freq: 1.01327e-06
  0x00007f2c80fc51c8:   movabs $0x7f2c85cbbd60,%rdi         ;   {external_word}
  0x00007f2c80fc51d2:   and    $0xfffffffffffffff0,%rsp
  0x00007f2c80fc51d6:   callq  0x00007f2c85178784           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f2c80fc51db:   hlt    
 ;; B26: #	out( N271 ) <- in( B10 )  Freq: 1.01327e-06
  0x00007f2c80fc51dc:   movabs $0x7f2c85cbb2d0,%rdi         ;   {external_word}
  0x00007f2c80fc51e6:   and    $0xfffffffffffffff0,%rsp
  0x00007f2c80fc51ea:   callq  0x00007f2c85178784           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f2c80fc51ef:   hlt    
 ;; B27: #	out( N271 ) <- in( B11 )  Freq: 1.01327e-06
  0x00007f2c80fc51f0:   movabs $0x7f2c85cbb2d0,%rdi         ;   {external_word}
  0x00007f2c80fc51fa:   and    $0xfffffffffffffff0,%rsp
  0x00007f2c80fc51fe:   callq  0x00007f2c85178784           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f2c80fc5203:   hlt    
 ;; B28: #	out( N271 ) <- in( B2 )  Freq: 9.99999e-07
  0x00007f2c80fc5204:   mov    $0xffffff8d,%esi
  0x00007f2c80fc5209:   mov    %r13,(%rsp)
  0x00007f2c80fc520d:   mov    %ebx,0x8(%rsp)
  0x00007f2c80fc5211:   nop
  0x00007f2c80fc5212:   nop
  0x00007f2c80fc5213:   callq  0x00007f2c80f61b20           ; ImmutableOopMap {[0]=Oop }
                                                            ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::main@16 (line 9)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f2c80fc5218:   nopl   0x3000408(%rax,%rax,1)       ;   {other}
  0x00007f2c80fc5220:   movabs $0x7f2c85afeb20,%rdi         ;   {external_word}
  0x00007f2c80fc522a:   and    $0xfffffffffffffff0,%rsp
  0x00007f2c80fc522e:   callq  0x00007f2c85178784           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f2c80fc5233:   hlt    
 ;; B29: #	out( B22 ) <- in( B3 )  Freq: 4.76836e-07
  0x00007f2c80fc5234:   mov    %ebx,%r8d
  0x00007f2c80fc5237:   jmpq   0x00007f2c80fc5165
 ;; B30: #	out( N271 ) <- in( B1 )  Freq: 1.01328e-06
  0x00007f2c80fc523c:   mov    $0xffffff76,%esi
  0x00007f2c80fc5241:   mov    %ebx,(%rsp)
  0x00007f2c80fc5244:   nop
  0x00007f2c80fc5245:   nop
  0x00007f2c80fc5246:   nop
  0x00007f2c80fc5247:   callq  0x00007f2c80f61b20           ; ImmutableOopMap {}
                                                            ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::main@16 (line 9)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f2c80fc524c:   nopl   0x400043c(%rax,%rax,1)       ;   {other}
  0x00007f2c80fc5254:   movabs $0x7f2c85afeb20,%rdi         ;   {external_word}
  0x00007f2c80fc525e:   and    $0xfffffffffffffff0,%rsp
  0x00007f2c80fc5262:   callq  0x00007f2c85178784           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f2c80fc5267:   hlt                                 ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::main@16 (line 9)
  0x00007f2c80fc5268:   callq  Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (final stubs)}
  0x00007f2c80fc526d:   jmpq   0x00007f2c80fc502a
  0x00007f2c80fc5272:   hlt    
  0x00007f2c80fc5273:   hlt    
  0x00007f2c80fc5274:   hlt    
  0x00007f2c80fc5275:   hlt    
  0x00007f2c80fc5276:   hlt    
  0x00007f2c80fc5277:   hlt    
[Exception Handler]
  0x00007f2c80fc5278:   jmpq   0x00007f2c80e6c4a0           ;   {no_reloc}
[Deopt Handler Code]
  0x00007f2c80fc527d:   callq  0x00007f2c80fc5282
  0x00007f2c80fc5282:   subq   $0x5,(%rsp)
  0x00007f2c80fc5287:   jmpq   0x00007f2c80f61e40           ;   {runtime_call DeoptimizationBlob}
  0x00007f2c80fc528c:   hlt    
  0x00007f2c80fc528d:   hlt    
  0x00007f2c80fc528e:   hlt    
  0x00007f2c80fc528f:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Oops:
  0x00007f2c80fc5290:   0x000000011f81c650 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x000000011f81c650}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Metadata:
  0x00007f2c80fc5298:   0x0000000800040e00 {type array int}
  0x00007f2c80fc52a0:   0x00007f2c38705310 {method} {0x00007f2c38705310} 'main' '([Ljava/lang/String;)V' in 'test'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
pc-bytecode offsets:
PcDesc(pc=0x00007f2c80fc4fff offset=ffffffff bits=0):
PcDesc(pc=0x00007f2c80fc505c offset=5c bits=0):
   test::main@16 (line 9)
PcDesc(pc=0x00007f2c80fc5060 offset=60 bits=0):
   test::main@18 (line 9)
PcDesc(pc=0x00007f2c80fc5069 offset=69 bits=0):
   test::main@19 (line 9)
PcDesc(pc=0x00007f2c80fc507d offset=7d bits=0):
   test::main@25 (line 10)
PcDesc(pc=0x00007f2c80fc508e offset=8e bits=0):
   test::main@26 (line 10)
PcDesc(pc=0x00007f2c80fc5096 offset=96 bits=0):
   test::main@19 (line 9)
PcDesc(pc=0x00007f2c80fc50e0 offset=e0 bits=0):
   test::main@31 (line 9)
PcDesc(pc=0x00007f2c80fc50e9 offset=e9 bits=1):
   test::main@31 (line 9)  reexecute=true
   Locals
    - l0: empty
    - l1: reg rbp [10],int
    - l2: reg r13 [26],oop
    - l3: reg r8 [16],int
PcDesc(pc=0x00007f2c80fc50ec offset=ec bits=0):
   test::main@31 (line 9)
PcDesc(pc=0x00007f2c80fc5110 offset=110 bits=0):
   test::main@25 (line 10)
PcDesc(pc=0x00007f2c80fc513b offset=13b bits=0):
   test::main@26 (line 10)
PcDesc(pc=0x00007f2c80fc513f offset=13f bits=0):
   test::main@28 (line 9)
PcDesc(pc=0x00007f2c80fc5145 offset=145 bits=0):
   test::main@19 (line 9)
PcDesc(pc=0x00007f2c80fc5150 offset=150 bits=0):
   test::main@25 (line 10)
PcDesc(pc=0x00007f2c80fc515a offset=15a bits=0):
   test::main@26 (line 10)
PcDesc(pc=0x00007f2c80fc515d offset=15d bits=0):
   test::main@28 (line 9)
PcDesc(pc=0x00007f2c80fc5165 offset=165 bits=0):
   test::main@19 (line 9)
PcDesc(pc=0x00007f2c80fc5178 offset=178 bits=1):
   test::main@19 (line 9)  reexecute=true
   Locals
    - l0: empty
    - l1: reg rbp [10],int
    - l2: empty
    - l3: empty
   Expression stack
    - @0: stack[0]
    - @1: stack[4]
PcDesc(pc=0x00007f2c80fc5194 offset=194 bits=0):
   test::main@19 (line 9)
PcDesc(pc=0x00007f2c80fc51ac offset=1ac bits=0):
   test::main@25 (line 10)
   Locals
    - l0: empty
    - l1: empty
    - l2: stack[16],oop
    - l3: stack[12]
   Expression stack
    - @0: reg rbp [10],int
    - @1: stack[16],oop
    - @2: stack[12]
PcDesc(pc=0x00007f2c80fc51c8 offset=1c8 bits=0):
   test::main@25 (line 10)
PcDesc(pc=0x00007f2c80fc5218 offset=218 bits=0):
   test::main@16 (line 9)
   Locals
    - l0: empty
    - l1: reg rbp [10],int
    - l2: stack[0],oop
    - l3: stack[8]
PcDesc(pc=0x00007f2c80fc524c offset=24c bits=0):
   test::main@16 (line 9)
   Locals
    - l0: empty
    - l1: reg rbp [10],int
    - l2: nullptr
    - l3: stack[0]
PcDesc(pc=0x00007f2c80fc5268 offset=268 bits=0):
   test::main@16 (line 9)
PcDesc(pc=0x00007f2c80fc5291 offset=291 bits=0):
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
oop maps:ImmutableOopMapSet contains 5 OopMaps

ImmutableOopMap {r13=Oop } pc offsets: 233 
ImmutableOopMap {} pc offsets: 376 
ImmutableOopMap {[16]=Oop } pc offsets: 428 
ImmutableOopMap {[0]=Oop } pc offsets: 536 
ImmutableOopMap {} pc offsets: 588 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
scopes:
ScopeDesc(pc=0x00007f2c80fc505c offset=5c):
   test::main@16 (line 9)
ScopeDesc(pc=0x00007f2c80fc5060 offset=60):
   test::main@18 (line 9)
ScopeDesc(pc=0x00007f2c80fc5069 offset=69):
   test::main@19 (line 9)
ScopeDesc(pc=0x00007f2c80fc507d offset=7d):
   test::main@25 (line 10)
ScopeDesc(pc=0x00007f2c80fc508e offset=8e):
   test::main@26 (line 10)
ScopeDesc(pc=0x00007f2c80fc5096 offset=96):
   test::main@19 (line 9)
ScopeDesc(pc=0x00007f2c80fc50e0 offset=e0):
   test::main@31 (line 9)
ScopeDesc(pc=0x00007f2c80fc50e9 offset=e9):
   test::main@31 (line 9)  reexecute=true
   Locals
    - l0: empty
    - l1: reg rbp [10],int
    - l2: reg r13 [26],oop
    - l3: reg r8 [16],int
ScopeDesc(pc=0x00007f2c80fc50ec offset=ec):
   test::main@31 (line 9)
ScopeDesc(pc=0x00007f2c80fc5110 offset=110):
   test::main@25 (line 10)
ScopeDesc(pc=0x00007f2c80fc513b offset=13b):
   test::main@26 (line 10)
ScopeDesc(pc=0x00007f2c80fc513f offset=13f):
   test::main@28 (line 9)
ScopeDesc(pc=0x00007f2c80fc5145 offset=145):
   test::main@19 (line 9)
ScopeDesc(pc=0x00007f2c80fc5150 offset=150):
   test::main@25 (line 10)
ScopeDesc(pc=0x00007f2c80fc515a offset=15a):
   test::main@26 (line 10)
ScopeDesc(pc=0x00007f2c80fc515d offset=15d):
   test::main@28 (line 9)
ScopeDesc(pc=0x00007f2c80fc5165 offset=165):
   test::main@19 (line 9)
ScopeDesc(pc=0x00007f2c80fc5178 offset=178):
   test::main@19 (line 9)  reexecute=true
   Locals
    - l0: empty
    - l1: reg rbp [10],int
    - l2: empty
    - l3: empty
   Expression stack
    - @0: stack[0]
    - @1: stack[4]
ScopeDesc(pc=0x00007f2c80fc5194 offset=194):
   test::main@19 (line 9)
ScopeDesc(pc=0x00007f2c80fc51ac offset=1ac):
   test::main@25 (line 10)
   Locals
    - l0: empty
    - l1: empty
    - l2: stack[16],oop
    - l3: stack[12]
   Expression stack
    - @0: reg rbp [10],int
    - @1: stack[16],oop
    - @2: stack[12]
ScopeDesc(pc=0x00007f2c80fc51c8 offset=1c8):
   test::main@25 (line 10)
ScopeDesc(pc=0x00007f2c80fc5218 offset=218):
   test::main@16 (line 9)
   Locals
    - l0: empty
    - l1: reg rbp [10],int
    - l2: stack[0],oop
    - l3: stack[8]
ScopeDesc(pc=0x00007f2c80fc524c offset=24c):
   test::main@16 (line 9)
   Locals
    - l0: empty
    - l1: reg rbp [10],int
    - l2: nullptr
    - l3: stack[0]
ScopeDesc(pc=0x00007f2c80fc5268 offset=268):
   test::main@16 (line 9)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
relocations:
         @0x00007f2c80fc4f80: 3200
relocInfo@0x00007f2c80fc4f80 [type=6(runtime_call) addr=0x00007f2c80fc5000 offset=0 format=1] | [destination=0x00007f2c852d28e0]
         @0x00007f2c80fc4f82: 8043
relocInfo@0x00007f2c80fc4f82 [type=16(post_call_nop) addr=0x00007f2c80fc5043 offset=67]
         @0x00007f2c80fc4f84: 7801660c
relocInfo@0x00007f2c80fc4f86 [type=12(metadata) addr=0x00007f2c80fc504f offset=12 format=3 data=1] | [metadata_addr=0x00007f2c80fc5298 *=0x0000000800040e00 offset=0]metadata_value=0x0000000800040e00: {type array int}
         @0x00007f2c80fc4f88: 509a
relocInfo@0x00007f2c80fc4f88 [type=10(poll) addr=0x00007f2c80fc50e9 offset=154]
         @0x00007f2c80fc4f8a: 328a
relocInfo@0x00007f2c80fc4f8a [type=6(runtime_call) addr=0x00007f2c80fc5173 offset=138 format=1] | [destination=0x00007f2c80f61b20]
         @0x00007f2c80fc4f8c: 8005
relocInfo@0x00007f2c80fc4f8c [type=16(post_call_nop) addr=0x00007f2c80fc5178 offset=5]
         @0x00007f2c80fc4f8e: 7c0385afeb207f2c3808
relocInfo@0x00007f2c80fc4f96 [type=7(external_word) addr=0x00007f2c80fc5180 offset=8 data={85afeb207f2c}] | [target=0x00007f2c85afeb20]
         @0x00007f2c80fc4f98: 320e
relocInfo@0x00007f2c80fc4f98 [type=6(runtime_call) addr=0x00007f2c80fc518e offset=14 format=1] | [destination=0x00007f2c85178784]
         @0x00007f2c80fc4f9a: 3219
relocInfo@0x00007f2c80fc4f9a [type=6(runtime_call) addr=0x00007f2c80fc51a7 offset=25 format=1] | [destination=0x00007f2c80f61b20]
         @0x00007f2c80fc4f9c: 8005
relocInfo@0x00007f2c80fc4f9c [type=16(post_call_nop) addr=0x00007f2c80fc51ac offset=5]
         @0x00007f2c80fc4f9e: 7c0385afeb207f2c3808
relocInfo@0x00007f2c80fc4fa6 [type=7(external_word) addr=0x00007f2c80fc51b4 offset=8 data={85afeb207f2c}] | [target=0x00007f2c85afeb20]
         @0x00007f2c80fc4fa8: 320e
relocInfo@0x00007f2c80fc4fa8 [type=6(runtime_call) addr=0x00007f2c80fc51c2 offset=14 format=1] | [destination=0x00007f2c85178784]
         @0x00007f2c80fc4faa: 7c0385cbbd607f2c3806
relocInfo@0x00007f2c80fc4fb2 [type=7(external_word) addr=0x00007f2c80fc51c8 offset=6 data={85cbbd607f2c}] | [target=0x00007f2c85cbbd60]
         @0x00007f2c80fc4fb4: 320e
relocInfo@0x00007f2c80fc4fb4 [type=6(runtime_call) addr=0x00007f2c80fc51d6 offset=14 format=1] | [destination=0x00007f2c85178784]
         @0x00007f2c80fc4fb6: 7c0385cbb2d07f2c3806
relocInfo@0x00007f2c80fc4fbe [type=7(external_word) addr=0x00007f2c80fc51dc offset=6 data={85cbb2d07f2c}] | [target=0x00007f2c85cbb2d0]
         @0x00007f2c80fc4fc0: 320e
relocInfo@0x00007f2c80fc4fc0 [type=6(runtime_call) addr=0x00007f2c80fc51ea offset=14 format=1] | [destination=0x00007f2c85178784]
         @0x00007f2c80fc4fc2: 7c0385cbb2d07f2c3806
relocInfo@0x00007f2c80fc4fca [type=7(external_word) addr=0x00007f2c80fc51f0 offset=6 data={85cbb2d07f2c}] | [target=0x00007f2c85cbb2d0]
         @0x00007f2c80fc4fcc: 320e
relocInfo@0x00007f2c80fc4fcc [type=6(runtime_call) addr=0x00007f2c80fc51fe offset=14 format=1] | [destination=0x00007f2c85178784]
         @0x00007f2c80fc4fce: 3215
relocInfo@0x00007f2c80fc4fce [type=6(runtime_call) addr=0x00007f2c80fc5213 offset=21 format=1] | [destination=0x00007f2c80f61b20]
         @0x00007f2c80fc4fd0: 8005
relocInfo@0x00007f2c80fc4fd0 [type=16(post_call_nop) addr=0x00007f2c80fc5218 offset=5]
         @0x00007f2c80fc4fd2: 7c0385afeb207f2c3808
relocInfo@0x00007f2c80fc4fda [type=7(external_word) addr=0x00007f2c80fc5220 offset=8 data={85afeb207f2c}] | [target=0x00007f2c85afeb20]
         @0x00007f2c80fc4fdc: 320e
relocInfo@0x00007f2c80fc4fdc [type=6(runtime_call) addr=0x00007f2c80fc522e offset=14 format=1] | [destination=0x00007f2c85178784]
         @0x00007f2c80fc4fde: 3219
relocInfo@0x00007f2c80fc4fde [type=6(runtime_call) addr=0x00007f2c80fc5247 offset=25 format=1] | [destination=0x00007f2c80f61b20]
         @0x00007f2c80fc4fe0: 8005
relocInfo@0x00007f2c80fc4fe0 [type=16(post_call_nop) addr=0x00007f2c80fc524c offset=5]
         @0x00007f2c80fc4fe2: 7c0385afeb207f2c3808
relocInfo@0x00007f2c80fc4fea [type=7(external_word) addr=0x00007f2c80fc5254 offset=8 data={85afeb207f2c}] | [target=0x00007f2c85afeb20]
         @0x00007f2c80fc4fec: 320e
relocInfo@0x00007f2c80fc4fec [type=6(runtime_call) addr=0x00007f2c80fc5262 offset=14 format=1] | [destination=0x00007f2c85178784]
         @0x00007f2c80fc4fee: 3206
relocInfo@0x00007f2c80fc4fee [type=6(runtime_call) addr=0x00007f2c80fc5268 offset=6 format=1] | [destination=0x00007f2c80eac120]
         @0x00007f2c80fc4ff0: 0010
relocInfo@0x00007f2c80fc4ff0 [type=0(none) addr=0x00007f2c80fc5278 offset=16]
         @0x00007f2c80fc4ff2: 3200
relocInfo@0x00007f2c80fc4ff2 [type=6(runtime_call) addr=0x00007f2c80fc5278 offset=0 format=1] | [destination=0x00007f2c80e6c4a0]
         @0x00007f2c80fc4ff4: 320f
relocInfo@0x00007f2c80fc4ff4 [type=6(runtime_call) addr=0x00007f2c80fc5287 offset=15 format=1] | [destination=0x00007f2c80f61e40]
         @0x00007f2c80fc4ff6: 0000
relocInfo@0x00007f2c80fc4ff6 [type=0(none) addr=0x00007f2c80fc5287 offset=0]
         @0x00007f2c80fc4ff8: 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Dependencies:
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ExceptionHandlerTable (size = 0 bytes)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ImplicitExceptionTable (size = 1 entries, 12 bytes):
{
   < 0x00007f2c80fc504b, 0x00007f2c80fc523c > 
}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded oops:
#0: 0x0000000000000000 nullptr-oop
#1: 0x000000011f81c650 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x000000011f81c650}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded metadata:
#0: 0x0000000000000000 nullptr-oop
#1: 0x0000000800040e00 {type array int}
#2: 0x00007f2c38705310 {method} {0x00007f2c38705310} 'main' '([Ljava/lang/String;)V' in 'test'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Merging state at block #0 bci:0 with empty state on path 1
Parsing block #0 at bci [0,16), successors:  1
 @ bci:0 iconst_0
 @ bci:1 istore_1
 @ bci:2 sipush
 @ bci:5 newarray
 @ bci:7 astore_2
 @ bci:8 aload_2
 @ bci:9 bipush
 @ bci:11 invokestatic
 @ bci:14 iconst_0
 @ bci:15 istore_3
Merging state at block #1 bci:16 with empty state on path 1
Parsing block #1 at bci [16,22), successors:  2 4
 @ bci:16 iload_3
 @ bci:17 aload_2
 @ bci:18 arraylength
 @ bci:19 if_icmpge
Uncommon trap reason='predicate' action='maybe_recompile' debug_id='0' at bci:19
Uncommon trap reason='profile_predicate' action='maybe_recompile' debug_id='0' at bci:19
Uncommon trap reason='loop_limit_check' action='maybe_recompile' debug_id='0' at bci:19
Merging state at block #2 bci:22 with empty state on path 2
Parsing block #2 at bci [22,34), successors:  3  lphd
 @ bci:22 iload_1
 @ bci:23 aload_2
 @ bci:24 iload_3
 @ bci:25 iaload
Uncommon trap reason='range_check' action='make_not_entrant' debug_id='0' at bci:25
 @ bci:26 iadd
 @ bci:27 istore_1
 @ bci:28 iinc
 @ bci:31 goto
Merging state at block #3 bci:16 with empty state on path 1
Parsing block #3 at bci [16,22), successors:  2 4
 @ bci:16 iload_3
 @ bci:17 aload_2
 @ bci:18 arraylength
 @ bci:19 if_icmpge
Uncommon trap reason='unstable_if' action='reinterpret' debug_id='0' at bci:19
Merging state at block #2 bci:22 with previous state on path 1
Skipped dead block 4 at bci:34

============================= C2-compiled nmethod ==============================
#r018 rsi:rsi   : parm 0: narrowoop: java/lang/String (java/io/Serializable,java/lang/Comparable,java/lang/CharSequence,java/lang/constant/Constable,java/lang/constant/ConstantDesc):exact *[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact *
# -- Old rsp -- Framesize: 48 --
#r591 rsp+44: in_preserve
#r590 rsp+40: return address
#r589 rsp+36: in_preserve
#r588 rsp+32: saved fp register
#r587 rsp+28: pad2, stack alignment
#r586 rsp+24: pad2, stack alignment
#r585 rsp+20: Fixed slot 1
#r584 rsp+16: Fixed slot 0
#r595 rsp+12: spill
#r594 rsp+ 8: spill
#r593 rsp+ 4: spill
#r592 rsp+ 0: spill
#
----------------------- MetaData before Compile_id = 25 ------------------------
{method}
 - this oop:          0x00007f2c38705310
 - method holder:     'test'
 - constants:         0x00007f2c38705030 constant pool [36] {0x00007f2c38705030} for 'test' cache=0x00007f2c387053b8
 - access:            0xc1000009  public static 
 - name:              'main'
 - signature:         '([Ljava/lang/String;)V'
 - max stack:         4
 - max locals:        4
 - size of params:    1
 - method size:       14
 - vtable index:      -2
 - i2i entry:         0x00007f2c80e4d740
 - adapters:          AHE@0x00007f2c7c23d460: 0xb i2c: 0x00007f2c80f5dd60 c2i: 0x00007f2c80f5de27 c2iUV: 0x00007f2c80f5ddf5 c2iNCI: 0x00007f2c80f5de61
 - compiled entry     0x00007f2c80f5de27
 - code size:         42
 - code start:        0x00007f2c387052d8
 - code end (excl):   0x00007f2c38705302
 - method data:       0x00007f2c387054a8
 - checked ex length: 0
 - linenumber start:  0x00007f2c38705302
 - localvar length:   0

------------------------ OptoAssembly for Compile_id = 25 -----------------------
#
#  void ( narrowoop: java/lang/String (java/io/Serializable,java/lang/Comparable,java/lang/CharSequence,java/lang/constant/Constable,java/lang/constant/ConstantDesc):exact *[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * )
#
000     N1: #	out( B1 ) <- in( B14 B9 )  Freq: 1

000     B1: #	out( B10 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
000     # stack bang (152 bytes)
	pushq   rbp	# Save rbp
	subq    rsp, #32	# Create frame

01a     # TLS is in R15
01a     movq    RBP, [R15 + #264 (32-bit)]	# ptr
021     movq    R10, RBP	# spill
024     addq    R10, #40016	# ptr
02b     # TLS is in R15
02b     cmpq    R10, [R15 + #280 (32-bit)]	# raw ptr
032     jae,u   B10  P=0.000100 C=-1.000000

038     B2: #	out( B3 ) <- in( B1 )  Freq: 0.9999
038     # TLS is in R15
038     movq    [R15 + #264 (32-bit)], R10	# ptr
03f     PREFETCHW [R10 + #192 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
047     movq    [RBP], #1	# long
04f     PREFETCHW [R10 + #256 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
057     movl    [RBP + #8 (8-bit)], narrowklass: precise [int (java/lang/Cloneable,java/io/Serializable): :Constant:exact *	# compressed klass ptr
05e     PREFETCHW [R10 + #320 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
066     movl    [RBP + #12 (8-bit)], #10000	# int
06d     PREFETCHW [R10 + #384 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
075     movq    RDI, RBP	# spill
078     addq    RDI, #16	# ptr
07c     movl    RCX, #5000	# long (unsigned 32-bit)
081     mov     rdi,rax	# ClearArray:
	vpxor   ymm0,ymm0,ymm0
	jmpq    L_zero_64_bytes
	# L_loop:	# 64-byte LOOP
	vmovdqu ymm0,(rax)
	vmovdqu ymm0,0x20(rax)
	add     0x40,rax
	# L_zero_64_bytes:
	sub     0x8,rcx
	jge     L_loop
	add     0x4,rcx
	jl      L_tail
	vmovdqu ymm0,(rax)
	add     0x20,rax
	sub     0x4,rcx
	# L_tail:	# Clearing tail bytes
	add     0x4,rcx
	jle     L_end
	dec     rcx
	# L_sloop:	# 8-byte short loop
	vmovq   xmm0,(rax)
	add     0x8,rax
	dec     rcx
	jge     L_sloop
	# L_end:
	

0cf     B3: #	out( B13 B4 ) <- in( B11 B2 )  Freq: 1
0cf     
0cf     MEMBAR-storestore (empty encoding)
0cf     # checkcastPP of RBP
0cf     movl    RDX, #10	# int
0d4     movq    RSI, RBP	# spill
0d7     call,static  java.util.Arrays::fill
        # test::main @ bci:11 (line 8) L[0]=_ L[1]=#0 L[2]=RBP L[3]=_
        # OopMap {rbp=Oop off=220/0xdc}

0e4     B4: #	out( B6 ) <- in( B3 )  Freq: 0.99998
        # Block is sole successor of call
0e4     movl    R9, [RBP + #16 (8-bit)]	# int
0e8     movl    RCX, #1	# int
0ed     jmp,s   B6
        nop 	# 1 bytes pad for loops and calls

0f0     B5: #	out( B6 ) <- in( B6 ) top-of-loop Freq: 999979
0f0     movl    RCX, R8	# spill

0f3     B6: #	out( B5 B7 ) <- in( B4 B5 ) Loop( B6-B5 inner main of N92 reduction) Freq: 999980
0f3     addl    R9, [RBP + #16 + RCX << #2]	# int
0f8     addl    R9, [RBP + #20 + RCX << #2]	# int
0fd     addl    R9, [RBP + #24 + RCX << #2]	# int
102     addl    R9, [RBP + #28 + RCX << #2]	# int
107     addl    R9, [RBP + #32 + RCX << #2]	# int
10c     addl    R9, [RBP + #36 + RCX << #2]	# int
111     addl    R9, [RBP + #40 + RCX << #2]	# int
116     addl    R9, [RBP + #44 + RCX << #2]	# int
11b     addl    R9, [RBP + #48 + RCX << #2]	# int
120     addl    R9, [RBP + #52 + RCX << #2]	# int
125     addl    R9, [RBP + #56 + RCX << #2]	# int
12a     addl    R9, [RBP + #60 + RCX << #2]	# int
12f     addl    R9, [RBP + #64 + RCX << #2]	# int
134     addl    R9, [RBP + #68 + RCX << #2]	# int
139     addl    R9, [RBP + #72 + RCX << #2]	# int
13e     addl    R9, [RBP + #76 + RCX << #2]	# int
143     leal    R8, [RCX + #16]
147     cmpl    R8, #9985
14e     jl,s   B5	# loop end  P=1.000000 C=4608.000000

150     B7: #	out( B8 ) <- in( B6 )  Freq: 0.99998
150     # TLS is in R15
150     movq    RBX, [R15 + #960 (32-bit)]	# ptr
157     movl    R10, R8	# spill
15a     testl   rax, [RBX]	# Safepoint: poll for GC        # test::main @ bci:31 (line 9) L[0]=_ L[1]=R9 L[2]=RBP L[3]=R10
        # OopMap {rbp=Oop off=346/0x15a}
15c     # castII of RCX
15c     addl    RCX, #16	# int
        nop 	# 1 bytes pad for loops and calls

160     B8: #	out( B8 B9 ) <- in( B7 B8 ) Loop( B8-B8 inner post of N194 reduction) Freq: 986875
160     addl    R9, [RBP + #16 + RCX << #2]	# int
165     incl    RCX	# int
167     cmpl    RCX, #10000
16d     jl,s   B8	# loop end  P=0.999999 C=4608.000000

16f     B9: #	out( N1 ) <- in( B8 )  Freq: 0.99998
16f     movl    RSI, #-187	# int
174     movl    RBP, R9	# spill
177     movl    [rsp + #0], RCX	# spill
        nop 	# 1 bytes pad for loops and calls
17b     call,static  wrapper for: uncommon_trap(reason='unstable_if' action='reinterpret' debug_id='0')
        # test::main @ bci:19 (line 9) L[0]=_ L[1]=RBP L[2]=_ L[3]=_ STK[0]=rsp + #0 STK[1]=#10000
        # OopMap {off=384/0x180}
188     stop	# ShouldNotReachHere

19c     B10: #	out( B12 B11 ) <- in( B1 )  Freq: 0.000100017
19c     movq    RSI, precise [int (java/lang/Cloneable,java/io/Serializable): :Constant:exact *	# ptr
1a6     movl    RDX, #10000	# int
1ab     call,static  wrapper for: _new_array_Java
        # test::main @ bci:5 (line 7) L[0]=_ L[1]=#0 L[2]=_ L[3]=_
        # OopMap {off=432/0x1b0}

1b8     B11: #	out( B3 ) <- in( B10 )  Freq: 0.000100015
        # Block is sole successor of call
1b8     movq    RBP, RAX	# spill
        nop 	# 5 bytes pad for loops and calls
1c0     jmp     B3

1c5     B12: #	out( B14 ) <- in( B10 )  Freq: 1.00017e-09
1c5     # exception oop is in rax; no code emitted
1c5     movq    RSI, RAX	# spill
1c8     jmp,s   B14

1ca     B13: #	out( B14 ) <- in( B3 )  Freq: 1e-05
1ca     # exception oop is in rax; no code emitted
1ca     movq    RSI, RAX	# spill

1cd     B14: #	out( N1 ) <- in( B12 B13 )  Freq: 1.0001e-05
1cd     addq    rsp, 32	# Destroy frame
	popq    rbp

1d2     jmp     rethrow_stub

--------------------------------------------------------------------------------
----------------------------------- Assembly -----------------------------------

Compiled method (c2)    1530   25             test::main (42 bytes)
 total in heap  [0x00007f2c80fc5510,0x00007f2c80fc5ae0] = 1488
 relocation     [0x00007f2c80fc5680,0x00007f2c80fc56b8] = 56
 main code      [0x00007f2c80fc56c0,0x00007f2c80fc58a8] = 488
 stub code      [0x00007f2c80fc58a8,0x00007f2c80fc58d0] = 40
 oops           [0x00007f2c80fc58d0,0x00007f2c80fc58d8] = 8
 metadata       [0x00007f2c80fc58d8,0x00007f2c80fc58e8] = 16
 scopes data    [0x00007f2c80fc58e8,0x00007f2c80fc5968] = 128
 scopes pcs     [0x00007f2c80fc5968,0x00007f2c80fc5aa8] = 320
 dependencies   [0x00007f2c80fc5aa8,0x00007f2c80fc5ab0] = 8
 handler table  [0x00007f2c80fc5ab0,0x00007f2c80fc5ae0] = 48

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x00007f2c38705310} 'main' '([Ljava/lang/String;)V' in 'test'
  # parm0:    rsi:rsi   = '[Ljava/lang/String;'
  #           [sp+0x30]  (sp of caller)
 ;; N1: #	out( B1 ) <- in( B14 B9 )  Freq: 1
 ;; B1: #	out( B10 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x00007f2c80fc56c0:   mov    %eax,-0x18000(%rsp)
  0x00007f2c80fc56c7:   push   %rbp
  0x00007f2c80fc56c8:   sub    $0x20,%rsp
  0x00007f2c80fc56cc:   cmpl   $0x0,0x20(%r15)
  0x00007f2c80fc56d4:   jne    0x00007f2c80fc5897
  0x00007f2c80fc56da:   mov    0x108(%r15),%rbp
  0x00007f2c80fc56e1:   mov    %rbp,%r10
  0x00007f2c80fc56e4:   add    $0x9c50,%r10
  0x00007f2c80fc56eb:   cmp    0x118(%r15),%r10
  0x00007f2c80fc56f2:   jae    0x00007f2c80fc585c           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::main@31 (line 9)
 ;; B2: #	out( B3 ) <- in( B1 )  Freq: 0.9999
  0x00007f2c80fc56f8:   mov    %r10,0x108(%r15)
  0x00007f2c80fc56ff:   prefetchw 0xc0(%r10)
  0x00007f2c80fc5707:   movq   $0x1,0x0(%rbp)
  0x00007f2c80fc570f:   prefetchw 0x100(%r10)
  0x00007f2c80fc5717:   movl   $0x40e00,0x8(%rbp)           ;   {metadata({type array int})}
  0x00007f2c80fc571e:   prefetchw 0x140(%r10)
  0x00007f2c80fc5726:   movl   $0x2710,0xc(%rbp)
  0x00007f2c80fc572d:   prefetchw 0x180(%r10)
  0x00007f2c80fc5735:   mov    %rbp,%rdi
  0x00007f2c80fc5738:   add    $0x10,%rdi
  0x00007f2c80fc573c:   mov    $0x1388,%ecx
  0x00007f2c80fc5741:   vpxor  %ymm0,%ymm0,%ymm0
  0x00007f2c80fc5745:   jmpq   0x00007f2c80fc5757
 ;; L_loop:
  0x00007f2c80fc574a:   vmovdqu %ymm0,(%rdi)
  0x00007f2c80fc574e:   vmovdqu %ymm0,0x20(%rdi)
  0x00007f2c80fc5753:   add    $0x40,%rdi
 ;; L_zero_64_bytes:
  0x00007f2c80fc5757:   sub    $0x8,%rcx
  0x00007f2c80fc575b:   jge    0x00007f2c80fc574a
  0x00007f2c80fc575d:   add    $0x4,%rcx
  0x00007f2c80fc5761:   jl     0x00007f2c80fc576f
  0x00007f2c80fc5763:   vmovdqu %ymm0,(%rdi)
  0x00007f2c80fc5767:   add    $0x20,%rdi
  0x00007f2c80fc576b:   sub    $0x4,%rcx
 ;; L_tail:
  0x00007f2c80fc576f:   add    $0x4,%rcx
  0x00007f2c80fc5773:   jle    0x00007f2c80fc578f
  0x00007f2c80fc5775:   movabs $0xffffffffffffffff,%rax
  0x00007f2c80fc577f:   bzhi   %rcx,%rax,%rax
  0x00007f2c80fc5784:   kmovq  %rax,%k7
  0x00007f2c80fc5789:   vmovdqu64 %ymm0,(%rdi){%k7}         ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::main@5 (line 7)
 ;; L_end:
 ;; DONE:
 ;; B3: #	out( B13 B4 ) <- in( B11 B2 )  Freq: 1
  0x00007f2c80fc578f:   mov    $0xa,%edx
  0x00007f2c80fc5794:   mov    %rbp,%rsi
  0x00007f2c80fc5797:   callq  0x00007f2c80f590a0           ; ImmutableOopMap {rbp=Oop }
                                                            ;*invokestatic fill {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::main@11 (line 8)
                                                            ;   {static_call}
  0x00007f2c80fc579c:   nopl   0x28c(%rax,%rax,1)           ;*invokestatic fill {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::main@11 (line 8)
                                                            ;   {other}
 ;; B4: #	out( B6 ) <- in( B3 )  Freq: 0.99998
  0x00007f2c80fc57a4:   mov    0x10(%rbp),%r9d              ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::main@25 (line 10)
  0x00007f2c80fc57a8:   mov    $0x1,%ecx
  0x00007f2c80fc57ad:   jmp    0x00007f2c80fc57b3
  0x00007f2c80fc57af:   nop
 ;; B5: #	out( B6 ) <- in( B6 ) top-of-loop Freq: 999979
  0x00007f2c80fc57b0:   mov    %r8d,%ecx                    ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::main@22 (line 10)
 ;; B6: #	out( B5 B7 ) <- in( B4 B5 ) Loop( B6-B5 inner main of N92 reduction) Freq: 999980
  0x00007f2c80fc57b3:   add    0x10(%rbp,%rcx,4),%r9d
  0x00007f2c80fc57b8:   add    0x14(%rbp,%rcx,4),%r9d
  0x00007f2c80fc57bd:   add    0x18(%rbp,%rcx,4),%r9d
  0x00007f2c80fc57c2:   add    0x1c(%rbp,%rcx,4),%r9d
  0x00007f2c80fc57c7:   add    0x20(%rbp,%rcx,4),%r9d
  0x00007f2c80fc57cc:   add    0x24(%rbp,%rcx,4),%r9d
  0x00007f2c80fc57d1:   add    0x28(%rbp,%rcx,4),%r9d
  0x00007f2c80fc57d6:   add    0x2c(%rbp,%rcx,4),%r9d
  0x00007f2c80fc57db:   add    0x30(%rbp,%rcx,4),%r9d
  0x00007f2c80fc57e0:   add    0x34(%rbp,%rcx,4),%r9d
  0x00007f2c80fc57e5:   add    0x38(%rbp,%rcx,4),%r9d
  0x00007f2c80fc57ea:   add    0x3c(%rbp,%rcx,4),%r9d
  0x00007f2c80fc57ef:   add    0x40(%rbp,%rcx,4),%r9d
  0x00007f2c80fc57f4:   add    0x44(%rbp,%rcx,4),%r9d
  0x00007f2c80fc57f9:   add    0x48(%rbp,%rcx,4),%r9d
  0x00007f2c80fc57fe:   add    0x4c(%rbp,%rcx,4),%r9d       ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::main@26 (line 10)
  0x00007f2c80fc5803:   lea    0x10(%rcx),%r8d
  0x00007f2c80fc5807:   cmp    $0x2701,%r8d
  0x00007f2c80fc580e:   jl     0x00007f2c80fc57b0           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::main@31 (line 9)
 ;; B7: #	out( B8 ) <- in( B6 )  Freq: 0.99998
  0x00007f2c80fc5810:   mov    0x3c0(%r15),%rbx
  0x00007f2c80fc5817:   mov    %r8d,%r10d                   ; ImmutableOopMap {rbp=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) test::main@31 (line 9)
  0x00007f2c80fc581a:   test   %eax,(%rbx)                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::main@31 (line 9)
                                                            ;   {poll}
  0x00007f2c80fc581c:   add    $0x10,%ecx
  0x00007f2c80fc581f:   nop                                 ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::main@22 (line 10)
 ;; B8: #	out( B8 B9 ) <- in( B7 B8 ) Loop( B8-B8 inner post of N194 reduction) Freq: 986875
  0x00007f2c80fc5820:   add    0x10(%rbp,%rcx,4),%r9d       ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::main@26 (line 10)
  0x00007f2c80fc5825:   inc    %ecx                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::main@28 (line 9)
  0x00007f2c80fc5827:   cmp    $0x2710,%ecx
  0x00007f2c80fc582d:   jl     0x00007f2c80fc5820           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::main@19 (line 9)
 ;; B9: #	out( N1 ) <- in( B8 )  Freq: 0.99998
  0x00007f2c80fc582f:   mov    $0xffffff45,%esi
  0x00007f2c80fc5834:   mov    %r9d,%ebp
  0x00007f2c80fc5837:   mov    %ecx,(%rsp)
  0x00007f2c80fc583a:   nop
  0x00007f2c80fc583b:   callq  0x00007f2c80f61b20           ; ImmutableOopMap {}
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) test::main@19 (line 9)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f2c80fc5840:   nopl   0x2000330(%rax,%rax,1)       ;   {other}
  0x00007f2c80fc5848:   movabs $0x7f2c85afeb20,%rdi         ;   {external_word}
  0x00007f2c80fc5852:   and    $0xfffffffffffffff0,%rsp
  0x00007f2c80fc5856:   callq  0x00007f2c85178784           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f2c80fc585b:   hlt                                 ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::main@19 (line 9)
 ;; B10: #	out( B12 B11 ) <- in( B1 )  Freq: 0.000100017
  0x00007f2c80fc585c:   movabs $0x800040e00,%rsi            ;   {metadata({type array int})}
  0x00007f2c80fc5866:   mov    $0x2710,%edx
  0x00007f2c80fc586b:   callq  0x00007f2c80f842a0           ; ImmutableOopMap {}
                                                            ;*newarray {reexecute=0 rethrow=0 return_oop=1}
                                                            ; - test::main@5 (line 7)
                                                            ;   {runtime_call _new_array_Java}
  0x00007f2c80fc5870:   nopl   0x3000360(%rax,%rax,1)       ;   {other}
 ;; B11: #	out( B3 ) <- in( B10 )  Freq: 0.000100015
  0x00007f2c80fc5878:   mov    %rax,%rbp
  0x00007f2c80fc587b:   nop
  0x00007f2c80fc587c:   nop
  0x00007f2c80fc587d:   nop
  0x00007f2c80fc587e:   nop
  0x00007f2c80fc587f:   nop
  0x00007f2c80fc5880:   jmpq   0x00007f2c80fc578f
 ;; B12: #	out( B14 ) <- in( B10 )  Freq: 1.00017e-09
  0x00007f2c80fc5885:   mov    %rax,%rsi
  0x00007f2c80fc5888:   jmp    0x00007f2c80fc588d
 ;; B13: #	out( B14 ) <- in( B3 )  Freq: 1e-05
  0x00007f2c80fc588a:   mov    %rax,%rsi                    ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::main@5 (line 7)
 ;; B14: #	out( N1 ) <- in( B12 B13 )  Freq: 1.0001e-05
  0x00007f2c80fc588d:   add    $0x20,%rsp
  0x00007f2c80fc5891:   pop    %rbp
  0x00007f2c80fc5892:   jmpq   0x00007f2c80f8b7a0           ;   {runtime_call _rethrow_Java}
  0x00007f2c80fc5897:   callq  Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (final stubs)}
  0x00007f2c80fc589c:   jmpq   0x00007f2c80fc56da
  0x00007f2c80fc58a1:   hlt    
  0x00007f2c80fc58a2:   hlt    
  0x00007f2c80fc58a3:   hlt    
  0x00007f2c80fc58a4:   hlt    
  0x00007f2c80fc58a5:   hlt    
  0x00007f2c80fc58a6:   hlt    
  0x00007f2c80fc58a7:   hlt    
[Stub Code]
  0x00007f2c80fc58a8:   movabs $0x0,%rbx                    ;   {no_reloc}
  0x00007f2c80fc58b2:   jmpq   0x00007f2c80fc58b2           ;   {runtime_call}
[Exception Handler]
  0x00007f2c80fc58b7:   jmpq   0x00007f2c80e6c4a0           ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x00007f2c80fc58bc:   callq  0x00007f2c80fc58c1
  0x00007f2c80fc58c1:   subq   $0x5,(%rsp)
  0x00007f2c80fc58c6:   jmpq   0x00007f2c80f61e40           ;   {runtime_call DeoptimizationBlob}
  0x00007f2c80fc58cb:   hlt    
  0x00007f2c80fc58cc:   hlt    
  0x00007f2c80fc58cd:   hlt    
  0x00007f2c80fc58ce:   hlt    
  0x00007f2c80fc58cf:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Oops:
  0x00007f2c80fc58d0:   0x000000011f81c650 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x000000011f81c650}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Metadata:
  0x00007f2c80fc58d8:   0x0000000800040e00 {type array int}
  0x00007f2c80fc58e0:   0x00007f2c38705310 {method} {0x00007f2c38705310} 'main' '([Ljava/lang/String;)V' in 'test'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
pc-bytecode offsets:
PcDesc(pc=0x00007f2c80fc56bf offset=ffffffff bits=0):
PcDesc(pc=0x00007f2c80fc56f8 offset=38 bits=0):
   test::main@31 (line 9)
PcDesc(pc=0x00007f2c80fc578f offset=cf bits=0):
   test::main@5 (line 7)
PcDesc(pc=0x00007f2c80fc579c offset=dc bits=0):
   test::main@11 (line 8)
   Locals
    - l0: empty
    - l1: 0
    - l2: reg rbp [10],oop
    - l3: empty
PcDesc(pc=0x00007f2c80fc57a4 offset=e4 bits=0):
   test::main@11 (line 8)
PcDesc(pc=0x00007f2c80fc57a8 offset=e8 bits=0):
   test::main@25 (line 10)
PcDesc(pc=0x00007f2c80fc57b3 offset=f3 bits=0):
   test::main@22 (line 10)
PcDesc(pc=0x00007f2c80fc5803 offset=143 bits=0):
   test::main@26 (line 10)
PcDesc(pc=0x00007f2c80fc5810 offset=150 bits=0):
   test::main@31 (line 9)
PcDesc(pc=0x00007f2c80fc581a offset=15a bits=1):
   test::main@31 (line 9)  reexecute=true
   Locals
    - l0: empty
    - l1: reg r9 [18],int
    - l2: reg rbp [10],oop
    - l3: reg r10 [20],int
PcDesc(pc=0x00007f2c80fc581c offset=15c bits=0):
   test::main@31 (line 9)
PcDesc(pc=0x00007f2c80fc5820 offset=160 bits=0):
   test::main@22 (line 10)
PcDesc(pc=0x00007f2c80fc5825 offset=165 bits=0):
   test::main@26 (line 10)
PcDesc(pc=0x00007f2c80fc5827 offset=167 bits=0):
   test::main@28 (line 9)
PcDesc(pc=0x00007f2c80fc582f offset=16f bits=0):
   test::main@19 (line 9)
PcDesc(pc=0x00007f2c80fc5840 offset=180 bits=1):
   test::main@19 (line 9)  reexecute=true
   Locals
    - l0: empty
    - l1: reg rbp [10],int
    - l2: empty
    - l3: empty
   Expression stack
    - @0: stack[0]
    - @1: 10000
PcDesc(pc=0x00007f2c80fc585c offset=19c bits=0):
   test::main@19 (line 9)
PcDesc(pc=0x00007f2c80fc5870 offset=1b0 bits=4):
   test::main@5 (line 7)
   Locals
    - l0: empty
    - l1: 0
    - l2: empty
    - l3: empty
PcDesc(pc=0x00007f2c80fc588d offset=1cd bits=0):
   test::main@5 (line 7)
PcDesc(pc=0x00007f2c80fc58d1 offset=211 bits=0):
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
oop maps:ImmutableOopMapSet contains 4 OopMaps

ImmutableOopMap {rbp=Oop } pc offsets: 220 346 
ImmutableOopMap {} pc offsets: 384 432 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
scopes:
ScopeDesc(pc=0x00007f2c80fc56f8 offset=38):
   test::main@31 (line 9)
ScopeDesc(pc=0x00007f2c80fc578f offset=cf):
   test::main@5 (line 7)
ScopeDesc(pc=0x00007f2c80fc579c offset=dc):
   test::main@11 (line 8)
   Locals
    - l0: empty
    - l1: 0
    - l2: reg rbp [10],oop
    - l3: empty
ScopeDesc(pc=0x00007f2c80fc57a4 offset=e4):
   test::main@11 (line 8)
ScopeDesc(pc=0x00007f2c80fc57a8 offset=e8):
   test::main@25 (line 10)
ScopeDesc(pc=0x00007f2c80fc57b3 offset=f3):
   test::main@22 (line 10)
ScopeDesc(pc=0x00007f2c80fc5803 offset=143):
   test::main@26 (line 10)
ScopeDesc(pc=0x00007f2c80fc5810 offset=150):
   test::main@31 (line 9)
ScopeDesc(pc=0x00007f2c80fc581a offset=15a):
   test::main@31 (line 9)  reexecute=true
   Locals
    - l0: empty
    - l1: reg r9 [18],int
    - l2: reg rbp [10],oop
    - l3: reg r10 [20],int
ScopeDesc(pc=0x00007f2c80fc581c offset=15c):
   test::main@31 (line 9)
ScopeDesc(pc=0x00007f2c80fc5820 offset=160):
   test::main@22 (line 10)
ScopeDesc(pc=0x00007f2c80fc5825 offset=165):
   test::main@26 (line 10)
ScopeDesc(pc=0x00007f2c80fc5827 offset=167):
   test::main@28 (line 9)
ScopeDesc(pc=0x00007f2c80fc582f offset=16f):
   test::main@19 (line 9)
ScopeDesc(pc=0x00007f2c80fc5840 offset=180):
   test::main@19 (line 9)  reexecute=true
   Locals
    - l0: empty
    - l1: reg rbp [10],int
    - l2: empty
    - l3: empty
   Expression stack
    - @0: stack[0]
    - @1: 10000
ScopeDesc(pc=0x00007f2c80fc585c offset=19c):
   test::main@19 (line 9)
ScopeDesc(pc=0x00007f2c80fc5870 offset=1b0):
   test::main@5 (line 7)
   Locals
    - l0: empty
    - l1: 0
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x00007f2c80fc588d offset=1cd):
   test::main@5 (line 7)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
relocations:
         @0x00007f2c80fc5680: 78016657
relocInfo@0x00007f2c80fc5682 [type=12(metadata) addr=0x00007f2c80fc5717 offset=87 format=3 data=1] | [metadata_addr=0x00007f2c80fc58d8 *=0x0000000800040e00 offset=0]metadata_value=0x0000000800040e00: {type array int}
         @0x00007f2c80fc5684: 2280
relocInfo@0x00007f2c80fc5684 [type=4(static_call) addr=0x00007f2c80fc5797 offset=128 format=1] | [destination=0x00007f2c80f590a0 metadata=0x0000000000000000]
         @0x00007f2c80fc5686: 8005
relocInfo@0x00007f2c80fc5686 [type=16(post_call_nop) addr=0x00007f2c80fc579c offset=5]
         @0x00007f2c80fc5688: 507e
relocInfo@0x00007f2c80fc5688 [type=10(poll) addr=0x00007f2c80fc581a offset=126]
         @0x00007f2c80fc568a: 3221
relocInfo@0x00007f2c80fc568a [type=6(runtime_call) addr=0x00007f2c80fc583b offset=33 format=1] | [destination=0x00007f2c80f61b20]
         @0x00007f2c80fc568c: 8005
relocInfo@0x00007f2c80fc568c [type=16(post_call_nop) addr=0x00007f2c80fc5840 offset=5]
         @0x00007f2c80fc568e: 7c0385afeb207f2c3808
relocInfo@0x00007f2c80fc5696 [type=7(external_word) addr=0x00007f2c80fc5848 offset=8 data={85afeb207f2c}] | [target=0x00007f2c85afeb20]
         @0x00007f2c80fc5698: 320e
relocInfo@0x00007f2c80fc5698 [type=6(runtime_call) addr=0x00007f2c80fc5856 offset=14 format=1] | [destination=0x00007f2c85178784]
         @0x00007f2c80fc569a: 6006
relocInfo@0x00007f2c80fc569a [type=12(metadata) addr=0x00007f2c80fc585c offset=6] | [metadata_addr=0x00007f2c80fc585e *=0x0000000800040e00 offset=0]metadata_value=0x0000000800040e00: {type array int}
         @0x00007f2c80fc569c: 320f
relocInfo@0x00007f2c80fc569c [type=6(runtime_call) addr=0x00007f2c80fc586b offset=15 format=1] | [destination=0x00007f2c80f842a0]
         @0x00007f2c80fc569e: 8005
relocInfo@0x00007f2c80fc569e [type=16(post_call_nop) addr=0x00007f2c80fc5870 offset=5]
         @0x00007f2c80fc56a0: 3222
relocInfo@0x00007f2c80fc56a0 [type=6(runtime_call) addr=0x00007f2c80fc5892 offset=34 format=1] | [destination=0x00007f2c80f8b7a0]
         @0x00007f2c80fc56a2: 3205
relocInfo@0x00007f2c80fc56a2 [type=6(runtime_call) addr=0x00007f2c80fc5897 offset=5 format=1] | [destination=0x00007f2c80eac120]
         @0x00007f2c80fc56a4: 0011
relocInfo@0x00007f2c80fc56a4 [type=0(none) addr=0x00007f2c80fc58a8 offset=17]
         @0x00007f2c80fc56a6: 7c01ff292800
relocInfo@0x00007f2c80fc56aa [type=5(static_stub) addr=0x00007f2c80fc58a8 offset=0 data=-215] | [static_call=0x00007f2c80fc5797]
         @0x00007f2c80fc56ac: 6000
relocInfo@0x00007f2c80fc56ac [type=12(metadata) addr=0x00007f2c80fc58a8 offset=0] | [metadata_addr=0x00007f2c80fc58aa *=0x0000000000000000 offset=0]
         @0x00007f2c80fc56ae: 320a
relocInfo@0x00007f2c80fc56ae [type=6(runtime_call) addr=0x00007f2c80fc58b2 offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x00007f2c80fc56b0: 3205
relocInfo@0x00007f2c80fc56b0 [type=6(runtime_call) addr=0x00007f2c80fc58b7 offset=5 format=1] | [destination=0x00007f2c80e6c4a0]
         @0x00007f2c80fc56b2: 320f
relocInfo@0x00007f2c80fc56b2 [type=6(runtime_call) addr=0x00007f2c80fc58c6 offset=15 format=1] | [destination=0x00007f2c80f61e40]
         @0x00007f2c80fc56b4: 0000
relocInfo@0x00007f2c80fc56b4 [type=0(none) addr=0x00007f2c80fc58c6 offset=0]
         @0x00007f2c80fc56b6: 0000
relocInfo@0x00007f2c80fc56b6 [type=0(none) addr=0x00007f2c80fc58c6 offset=0]
         @0x00007f2c80fc56b8: 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Dependencies:
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ExceptionHandlerTable (size = 48 bytes)
catch_pco = 220 (pc=0x00007f2c80fc579c, 1 entries)
  bci -1 at scope depth 0 -> pco 458 (pc=0x00007f2c80fc588a)
catch_pco = 432 (pc=0x00007f2c80fc5870, 1 entries)
  bci -1 at scope depth 0 -> pco 453 (pc=0x00007f2c80fc5885)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ImplicitExceptionTable is empty
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded oops:
#0: 0x0000000000000000 nullptr-oop
#1: 0x000000011f81c650 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x000000011f81c650}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded metadata:
#0: 0x0000000000000000 nullptr-oop
#1: 0x0000000800040e00 {type array int}
#2: 0x00007f2c38705310 {method} {0x00007f2c38705310} 'main' '([Ljava/lang/String;)V' in 'test'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
100000
------------------------------------------------------------------------
static test::main([Ljava/lang/String;)V
  interpreter_invocation_count:           1
  invocation_counter:                     1
  backedge_counter:                    6144
  decompile_count:                        1
  mdo size: 544 bytes

   0 iconst_0
   1 istore_1
   2 sipush 10000
   5 newarray int
   7 astore_2
   8 aload_2
   9 bipush 10
  11 invokestatic 7 <java/util/Arrays.fill([II)V> 
  0    bci: 11   CounterData        count(0)
  14 iconst_0
  15 istore_3
  16 iload_3
  17 aload_2
  18 arraylength
  19 if_icmpge 34
  16   bci: 19   BranchData         trap(intrinsic_or_type_checked_inlining recompiled) taken(1) displacement(56)
                                    not taken(4608)
  22 iload_1
  23 aload_2
  24 iload_3
  25 iaload
  26 iadd
  27 istore_1
  28 iinc #3 1
  31 goto 16
  48   bci: 31   JumpData           taken(4608) displacement(-32)
  34 getstatic 13 <java/lang/System.out/Ljava/io/PrintStream;> 
  37 iload_1
  38 invokevirtual 19 <java/io/PrintStream.println(I)V> 
  72   bci: 38   VirtualCallData    count(0) nonprofiled_count(0) entries(1)
                                    'java/io/PrintStream'(1 1.00)
  41 return
------------------------------------------------------------------------
Total MDO size: 544 bytes
