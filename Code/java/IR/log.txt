CompileCommand: PrintIdealPhase loop_invariant.micro const char* PrintIdealPhase = 'ALL'
AFTER: BEFORE_REMOVEUSELESS
   0  Root  === 0 70 88 99 110 131 161 179  |172  [[ 0 1 3 19 20 23 26 28 29 31 33 35 44 47 55 65 78 83 94 105 126 133 156 162 166 174 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 4 37 25 32 36 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 4 17 66 74 ]] I_O !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 4 11 18 25 32 36 37 39 41 57 68 75 135 148 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 4 12 17 37 70 66 72 88 84 99 95 110 106 118 131 127 157 161 179 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 4 12 17 66 72 84 95 106 118 127 157 179 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 4 21 21 22 22 24 24 27 27 30 30 34 34 37 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 114 115  [[ 179 ]]  { N115:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 22 24 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 27 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 17 72 84 95 106 118 172 143 157 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 17 77 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 39 41 68 76 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 59 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 62 51  [[ 45 46 17 73 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 17 72 84 95 106 119 132 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 119 127 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 61 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 56 56 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 60 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  60  Bool  === _ 54  [[ 61 ]] [eq] !jvms: loop_invariant::micro @ bci:2 (line 6)
  61  If  === 52 60  [[ 62 63 ]] P=0.900000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  62  IfTrue  === 61  [[ 45 64 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  63  IfFalse  === 61  [[ 43 66 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 62 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 63 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 69 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  73  Region  === 73 _ 45  [[ 73 79 74 75 76 77 ]] #reducible  !jvms: loop_invariant::micro @ bci:2 (line 6)
  74  Phi  === 73 _ 6  [[ 113 84 95 106 72 ]]  #abIO !jvms: loop_invariant::micro @ bci:2 (line 6)
  75  Phi  === 73 _ 7  [[ 114 81 86 92 97 103 108 ]]  #memory  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  76  Phi  === 73 _ 40  [[ 115 81 86 92 97 103 108 71 ]]  #memory  Memory: @rawptr:BotPTR, idx=Raw; !jvms: loop_invariant::micro @ bci:2 (line 6)
  77  Phi  === 73 _ 36  [[ 116 84 95 106 ]]  #int !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 79 90 101 171 ]]  #int:1
  79  ParsePredicate  === 73 78  [[ 80 89 ]]  #Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  80  IfFalse  === 79  [[ 84 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  81  MergeMem  === _ 1 75 76  [[ 84 ]]  { N76:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 80 74 81 8 9 (83 46 32 1 77 1 1 1 1 ) [[ 85 87 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  89  IfTrue  === 79  [[ 90 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  90  ParsePredicate  === 89 78  [[ 91 100 ]]  #Profiled_Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  91  IfFalse  === 90  [[ 95 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  92  MergeMem  === _ 1 75 76  [[ 95 ]]  { N76:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  94  ConI  === 0  [[ 95 ]]  #int:-66
  95  CallStaticJava  === 91 74 92 8 9 (94 46 32 1 77 1 1 1 1 ) [[ 96 98 ]] # Static uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  96  Proj  === 95  [[ 99 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  99  Halt  === 96 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 100  IfTrue  === 90  [[ 101 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 101  ParsePredicate  === 100 78  [[ 102 111 ]]  #Loop_Limit_Check  !jvms: loop_invariant::micro @ bci:2 (line 6)
 102  IfFalse  === 101  [[ 106 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 103  MergeMem  === _ 1 75 76  [[ 106 ]]  { N76:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
 105  ConI  === 0  [[ 106 ]]  #int:-146
 106  CallStaticJava  === 102 74 103 8 9 (105 46 32 1 77 1 1 1 1 ) [[ 107 109 ]] # Static uncommon_trap(reason='loop_limit_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
 107  Proj  === 106  [[ 110 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 110  Halt  === 107 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 111  IfTrue  === 101  [[ 112 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 112  Region  === 112 172 111  [[ 112 72 113 114 115 116 123 ]] #reducible  !jvms: loop_invariant::micro @ bci:2 (line 6)
 113  Phi  === 112 113 74  [[ 113 118 127 14 157 12 179 ]]  #abIO !jvms: loop_invariant::micro @ bci:2 (line 6)
 114  Phi  === 112 177 75  [[ 177 117 121 129 141 153 159 170 173 71 15 16 ]]  #memory  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
 115  Phi  === 112 115 76  [[ 115 117 121 129 141 153 159 173 176 178 16 ]]  #memory  Memory: @rawptr:BotPTR, idx=Raw; !jvms: loop_invariant::micro @ bci:2 (line 6)
 116  Phi  === 112 171 77  [[ 157 164 72 136 144 171 149 157 ]]  #int !jvms: loop_invariant::micro @ bci:2 (line 6)
 119  CmpP  === _ 46 47  [[ 120 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 120  Bool  === _ 119  [[ 123 ]] [ne] !jvms: loop_invariant::micro @ bci:4 (line 6)
 121  MergeMem  === _ 1 114 115  [[ 127 ]]  { N115:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:4 (line 6)
 123  If  === 112 120  [[ 124 125 ]] P=0.999999, C=-1.000000 !jvms: loop_invariant::micro @ bci:4 (line 6)
 124  IfTrue  === 123  [[ 138 132 ]] #1 !jvms: loop_invariant::micro @ bci:4 (line 6)
 125  IfFalse  === 123  [[ 127 ]] #0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 126  ConI  === 0  [[ 127 ]]  #int:-10
 127  CallStaticJava  === 125 113 121 8 9 (126 1 1 1 1 1 1 1 1 1 47 ) [[ 128 130 ]] # Static uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:4 (line 6) !jvms: loop_invariant::micro @ bci:4 (line 6)
 128  Proj  === 127  [[ 131 ]] #0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 131  Halt  === 128 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 132  CastPP  === 124 46  [[ 118 134 134 169 172 147 147 157 157 163 163 168 169 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 147 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 148 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 136 149 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 136  CmpI  === _ 116 135  [[ 137 ]]  !jvms: loop_invariant::micro @ bci:5 (line 6)
 137  Bool  === _ 136  [[ 138 ]] [lt] !jvms: loop_invariant::micro @ bci:5 (line 6)
 138  If  === 124 137  [[ 139 140 ]] P=0.999026, C=211589.000000 !jvms: loop_invariant::micro @ bci:5 (line 6)
 139  IfTrue  === 138  [[ 151 143 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 140  IfFalse  === 138  [[ 13 179 ]] #0 !jvms: loop_invariant::micro @ bci:5 (line 6)
 143  SqrtD  === 139 32  [[ 146 ]]  !jvms: loop_invariant::micro @ bci:9 (line 7)
 144  ConvI2D  === _ 116  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 146 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 146  AddD  === _ 143 145  [[ 170 157 ]]  !jvms: loop_invariant::micro @ bci:27 (line 9)
 149  CmpU  === _ 116 135  [[ 150 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 150  Bool  === _ 149  [[ 151 ]] [lt] !jvms: loop_invariant::micro @ bci:28 (line 9)
 151  RangeCheck  === 139 150  [[ 152 155 ]] P=0.999999, C=-1.000000 !jvms: loop_invariant::micro @ bci:28 (line 9)
 152  IfTrue  === 151  [[ 176 164 170 172 ]] #1 !jvms: loop_invariant::micro @ bci:28 (line 9)
 153  MergeMem  === _ 1 114 115  [[ 157 ]]  { N115:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 155  IfFalse  === 151  [[ 157 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 155 113 153 8 9 (156 132 32 1 116 1 1 1 1 132 116 146 1 ) [[ 158 160 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 163 168 ]]  #long:16
 164  CastII  === 152 116  [[ 165 ]]  #int:0..max-1:www range check dependency !jvms: loop_invariant::micro @ bci:28 (line 9)
 165  ConvI2L  === _ 164  [[ 167 ]]  #long:0..maxint-1:www !jvms: loop_invariant::micro @ bci:28 (line 9)
 166  ConI  === 0  [[ 167 ]]  #int:3
 167  LShiftL  === _ 165 166  [[ 169 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 168  AddP  === _ 132 169 162  [[ 170 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 169  AddP  === _ 132 132 167  [[ 168 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 170  StoreD  === 152 114 168 146  [[ 117 173 177 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !jvms: loop_invariant::micro @ bci:28 (line 9)
 171  AddI  === _ 116 78  [[ 118 172 116 ]]  !jvms: loop_invariant::micro @ bci:29 (line 6)
 172  SafePoint  === 152 1 173 1 1 176 132 32 1 171 1 1 1 1  [[ 118 0 112 ]]  SafePoint  !jvms: loop_invariant::micro @ bci:32 (line 6)
 173  MergeMem  === _ 1 114 115 1 1 170  [[ 172 ]]  { N115:rawptr:BotPTR - - N170:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:32 (line 6)
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 176 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 176  LoadP  === 152 115 175  [[ 172 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:32 (line 6)
 177  MergeMem  === _ 1 114 1 1 1 170  [[ 114 ]]  { - - - N170:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 140 113 16 8 9  [[ 0 ]] 
AFTER: AFTER_PARSING
   0  Root  === 0 70 88 99 110 131 161 179  |172  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 126 65 78 83 94 105 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 74 66 ]] I_O !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 75 41 25 32 36 37 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 127 88 84 99 95 110 106 131 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 127 66 106 84 95 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 114 115  [[ 179 ]]  { N115:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 143 84 95 106 172 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 77 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 76 41 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 62 51  [[ 45 46 73 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 132 119 84 95 106 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 119 127 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 61 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 60 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  60  Bool  === _ 54  [[ 61 ]] [eq] !jvms: loop_invariant::micro @ bci:2 (line 6)
  61  If  === 52 60  [[ 62 63 ]] P=0.900000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  62  IfTrue  === 61  [[ 45 64 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  63  IfFalse  === 61  [[ 66 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 62 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 63 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  73  Region  === 73 _ 45  [[ 73 79 74 75 76 77 ]] #reducible  !jvms: loop_invariant::micro @ bci:2 (line 6)
  74  Phi  === 73 _ 6  [[ 113 84 95 106 ]]  #abIO !jvms: loop_invariant::micro @ bci:2 (line 6)
  75  Phi  === 73 _ 7  [[ 114 81 103 92 ]]  #memory  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  76  Phi  === 73 _ 40  [[ 115 81 103 92 ]]  #memory  Memory: @rawptr:BotPTR, idx=Raw; !jvms: loop_invariant::micro @ bci:2 (line 6)
  77  Phi  === 73 _ 36  [[ 116 84 95 106 ]]  #int !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 79 90 101 171 ]]  #int:1
  79  ParsePredicate  === 73 78  [[ 80 89 ]]  #Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  80  IfFalse  === 79  [[ 84 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  81  MergeMem  === _ 1 75 76  [[ 84 ]]  { N76:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 80 74 81 8 9 (83 46 32 1 77 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  89  IfTrue  === 79  [[ 90 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  90  ParsePredicate  === 89 78  [[ 91 100 ]]  #Profiled_Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  91  IfFalse  === 90  [[ 95 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  92  MergeMem  === _ 1 75 76  [[ 95 ]]  { N76:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  94  ConI  === 0  [[ 95 ]]  #int:-66
  95  CallStaticJava  === 91 74 92 8 9 (94 46 32 1 77 1 1 1 1 ) [[ 96 ]] # Static uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  96  Proj  === 95  [[ 99 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  99  Halt  === 96 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 100  IfTrue  === 90  [[ 101 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 101  ParsePredicate  === 100 78  [[ 102 111 ]]  #Loop_Limit_Check  !jvms: loop_invariant::micro @ bci:2 (line 6)
 102  IfFalse  === 101  [[ 106 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 103  MergeMem  === _ 1 75 76  [[ 106 ]]  { N76:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
 105  ConI  === 0  [[ 106 ]]  #int:-146
 106  CallStaticJava  === 102 74 103 8 9 (105 46 32 1 77 1 1 1 1 ) [[ 107 ]] # Static uncommon_trap(reason='loop_limit_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
 107  Proj  === 106  [[ 110 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 110  Halt  === 107 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 111  IfTrue  === 101  [[ 112 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 112  Region  === 112 172 111  [[ 112 123 113 114 115 116 ]] #reducible  !jvms: loop_invariant::micro @ bci:2 (line 6)
 113  Phi  === 112 113 74  [[ 113 179 127 157 ]]  #abIO !jvms: loop_invariant::micro @ bci:2 (line 6)
 114  Phi  === 112 177 75  [[ 177 16 121 173 170 153 ]]  #memory  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
 115  Phi  === 112 115 76  [[ 115 16 121 176 173 153 ]]  #memory  Memory: @rawptr:BotPTR, idx=Raw; !jvms: loop_invariant::micro @ bci:2 (line 6)
 116  Phi  === 112 171 77  [[ 157 164 157 136 144 171 149 ]]  #int !jvms: loop_invariant::micro @ bci:2 (line 6)
 119  CmpP  === _ 46 47  [[ 120 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 120  Bool  === _ 119  [[ 123 ]] [ne] !jvms: loop_invariant::micro @ bci:4 (line 6)
 121  MergeMem  === _ 1 114 115  [[ 127 ]]  { N115:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:4 (line 6)
 123  If  === 112 120  [[ 124 125 ]] P=0.999999, C=-1.000000 !jvms: loop_invariant::micro @ bci:4 (line 6)
 124  IfTrue  === 123  [[ 138 132 ]] #1 !jvms: loop_invariant::micro @ bci:4 (line 6)
 125  IfFalse  === 123  [[ 127 ]] #0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 126  ConI  === 0  [[ 127 ]]  #int:-10
 127  CallStaticJava  === 125 113 121 8 9 (126 1 1 1 1 1 1 1 1 1 47 ) [[ 128 ]] # Static uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:4 (line 6) !jvms: loop_invariant::micro @ bci:4 (line 6)
 128  Proj  === 127  [[ 131 ]] #0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 131  Halt  === 128 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 132  CastPP  === 124 46  [[ 169 134 134 169 172 168 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 136 149 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 136  CmpI  === _ 116 135  [[ 137 ]]  !jvms: loop_invariant::micro @ bci:5 (line 6)
 137  Bool  === _ 136  [[ 138 ]] [lt] !jvms: loop_invariant::micro @ bci:5 (line 6)
 138  If  === 124 137  [[ 139 140 ]] P=0.999026, C=211589.000000 !jvms: loop_invariant::micro @ bci:5 (line 6)
 139  IfTrue  === 138  [[ 151 143 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 140  IfFalse  === 138  [[ 179 ]] #0 !jvms: loop_invariant::micro @ bci:5 (line 6)
 143  SqrtD  === 139 32  [[ 146 ]]  !jvms: loop_invariant::micro @ bci:9 (line 7)
 144  ConvI2D  === _ 116  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 146 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 146  AddD  === _ 143 145  [[ 170 157 ]]  !jvms: loop_invariant::micro @ bci:27 (line 9)
 149  CmpU  === _ 116 135  [[ 150 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 150  Bool  === _ 149  [[ 151 ]] [lt] !jvms: loop_invariant::micro @ bci:28 (line 9)
 151  RangeCheck  === 139 150  [[ 152 155 ]] P=0.999999, C=-1.000000 !jvms: loop_invariant::micro @ bci:28 (line 9)
 152  IfTrue  === 151  [[ 176 164 170 172 ]] #1 !jvms: loop_invariant::micro @ bci:28 (line 9)
 153  MergeMem  === _ 1 114 115  [[ 157 ]]  { N115:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 155  IfFalse  === 151  [[ 157 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 155 113 153 8 9 (156 132 32 1 116 1 1 1 1 132 116 146 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 168 ]]  #long:16
 164  CastII  === 152 116  [[ 165 ]]  #int:0..max-1:www range check dependency !jvms: loop_invariant::micro @ bci:28 (line 9)
 165  ConvI2L  === _ 164  [[ 167 ]]  #long:0..maxint-1:www !jvms: loop_invariant::micro @ bci:28 (line 9)
 166  ConI  === 0  [[ 167 ]]  #int:3
 167  LShiftL  === _ 165 166  [[ 169 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 168  AddP  === _ 132 169 162  [[ 170 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 169  AddP  === _ 132 132 167  [[ 168 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 170  StoreD  === 152 114 168 146  [[ 177 173 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !jvms: loop_invariant::micro @ bci:28 (line 9)
 171  AddI  === _ 116 78  [[ 116 172 ]]  !jvms: loop_invariant::micro @ bci:29 (line 6)
 172  SafePoint  === 152 1 173 1 1 176 132 32 1 171 1 1 1 1  [[ 112 0 ]]  SafePoint  !jvms: loop_invariant::micro @ bci:32 (line 6)
 173  MergeMem  === _ 1 114 115 1 1 170  [[ 172 ]]  { N115:rawptr:BotPTR - - N170:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:32 (line 6)
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 176 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 176  LoadP  === 152 115 175  [[ 172 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:32 (line 6)
 177  MergeMem  === _ 1 114 1 1 1 170  [[ 114 ]]  { - - - N170:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 140 113 16 8 9  [[ 0 ]] 
AFTER: BEFORE_ITER_GVN
   0  Root  === 0 70 88 99 110 131 161 179  |172  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 126 65 78 83 94 105 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 74 66 ]] I_O !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 75 41 25 32 36 37 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 127 88 84 99 95 110 106 131 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 127 66 106 84 95 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 114 115  [[ 179 ]]  { N115:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 143 84 95 106 172 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 77 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 76 41 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 62 51  [[ 45 46 73 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 132 119 84 95 106 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 119 127 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 61 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 60 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  60  Bool  === _ 54  [[ 61 ]] [eq] !jvms: loop_invariant::micro @ bci:2 (line 6)
  61  If  === 52 60  [[ 62 63 ]] P=0.900000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  62  IfTrue  === 61  [[ 45 64 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  63  IfFalse  === 61  [[ 66 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 62 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 63 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  73  Region  === 73 _ 45  [[ 73 79 74 75 76 77 ]] #reducible  !jvms: loop_invariant::micro @ bci:2 (line 6)
  74  Phi  === 73 _ 6  [[ 113 84 95 106 ]]  #abIO !jvms: loop_invariant::micro @ bci:2 (line 6)
  75  Phi  === 73 _ 7  [[ 114 81 103 92 ]]  #memory  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  76  Phi  === 73 _ 40  [[ 115 81 103 92 ]]  #memory  Memory: @rawptr:BotPTR, idx=Raw; !jvms: loop_invariant::micro @ bci:2 (line 6)
  77  Phi  === 73 _ 36  [[ 116 84 95 106 ]]  #int !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 79 90 101 171 ]]  #int:1
  79  ParsePredicate  === 73 78  [[ 80 89 ]]  #Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  80  IfFalse  === 79  [[ 84 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  81  MergeMem  === _ 1 75 76  [[ 84 ]]  { N76:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 80 74 81 8 9 (83 46 32 1 77 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  89  IfTrue  === 79  [[ 90 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  90  ParsePredicate  === 89 78  [[ 91 100 ]]  #Profiled_Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  91  IfFalse  === 90  [[ 95 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  92  MergeMem  === _ 1 75 76  [[ 95 ]]  { N76:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  94  ConI  === 0  [[ 95 ]]  #int:-66
  95  CallStaticJava  === 91 74 92 8 9 (94 46 32 1 77 1 1 1 1 ) [[ 96 ]] # Static uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  96  Proj  === 95  [[ 99 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  99  Halt  === 96 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 100  IfTrue  === 90  [[ 101 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 101  ParsePredicate  === 100 78  [[ 102 111 ]]  #Loop_Limit_Check  !jvms: loop_invariant::micro @ bci:2 (line 6)
 102  IfFalse  === 101  [[ 106 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 103  MergeMem  === _ 1 75 76  [[ 106 ]]  { N76:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
 105  ConI  === 0  [[ 106 ]]  #int:-146
 106  CallStaticJava  === 102 74 103 8 9 (105 46 32 1 77 1 1 1 1 ) [[ 107 ]] # Static uncommon_trap(reason='loop_limit_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
 107  Proj  === 106  [[ 110 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 110  Halt  === 107 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 111  IfTrue  === 101  [[ 112 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 112  Region  === 112 172 111  [[ 112 123 113 114 115 116 ]] #reducible  !jvms: loop_invariant::micro @ bci:2 (line 6)
 113  Phi  === 112 113 74  [[ 113 179 127 157 ]]  #abIO !jvms: loop_invariant::micro @ bci:2 (line 6)
 114  Phi  === 112 177 75  [[ 177 16 121 173 170 153 ]]  #memory  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
 115  Phi  === 112 115 76  [[ 115 16 121 176 173 153 ]]  #memory  Memory: @rawptr:BotPTR, idx=Raw; !jvms: loop_invariant::micro @ bci:2 (line 6)
 116  Phi  === 112 171 77  [[ 157 164 157 136 144 171 149 ]]  #int !jvms: loop_invariant::micro @ bci:2 (line 6)
 119  CmpP  === _ 46 47  [[ 120 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 120  Bool  === _ 119  [[ 123 ]] [ne] !jvms: loop_invariant::micro @ bci:4 (line 6)
 121  MergeMem  === _ 1 114 115  [[ 127 ]]  { N115:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:4 (line 6)
 123  If  === 112 120  [[ 124 125 ]] P=0.999999, C=-1.000000 !jvms: loop_invariant::micro @ bci:4 (line 6)
 124  IfTrue  === 123  [[ 138 132 ]] #1 !jvms: loop_invariant::micro @ bci:4 (line 6)
 125  IfFalse  === 123  [[ 127 ]] #0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 126  ConI  === 0  [[ 127 ]]  #int:-10
 127  CallStaticJava  === 125 113 121 8 9 (126 1 1 1 1 1 1 1 1 1 47 ) [[ 128 ]] # Static uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:4 (line 6) !jvms: loop_invariant::micro @ bci:4 (line 6)
 128  Proj  === 127  [[ 131 ]] #0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 131  Halt  === 128 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 132  CastPP  === 124 46  [[ 169 134 134 169 172 168 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 136 149 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 136  CmpI  === _ 116 135  [[ 137 ]]  !jvms: loop_invariant::micro @ bci:5 (line 6)
 137  Bool  === _ 136  [[ 138 ]] [lt] !jvms: loop_invariant::micro @ bci:5 (line 6)
 138  If  === 124 137  [[ 139 140 ]] P=0.999026, C=211589.000000 !jvms: loop_invariant::micro @ bci:5 (line 6)
 139  IfTrue  === 138  [[ 151 143 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 140  IfFalse  === 138  [[ 179 ]] #0 !jvms: loop_invariant::micro @ bci:5 (line 6)
 143  SqrtD  === 139 32  [[ 146 ]]  !jvms: loop_invariant::micro @ bci:9 (line 7)
 144  ConvI2D  === _ 116  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 146 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 146  AddD  === _ 143 145  [[ 170 157 ]]  !jvms: loop_invariant::micro @ bci:27 (line 9)
 149  CmpU  === _ 116 135  [[ 150 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 150  Bool  === _ 149  [[ 151 ]] [lt] !jvms: loop_invariant::micro @ bci:28 (line 9)
 151  RangeCheck  === 139 150  [[ 152 155 ]] P=0.999999, C=-1.000000 !jvms: loop_invariant::micro @ bci:28 (line 9)
 152  IfTrue  === 151  [[ 176 164 170 172 ]] #1 !jvms: loop_invariant::micro @ bci:28 (line 9)
 153  MergeMem  === _ 1 114 115  [[ 157 ]]  { N115:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 155  IfFalse  === 151  [[ 157 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 155 113 153 8 9 (156 132 32 1 116 1 1 1 1 132 116 146 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 168 ]]  #long:16
 164  CastII  === 152 116  [[ 165 ]]  #int:0..max-1:www range check dependency !jvms: loop_invariant::micro @ bci:28 (line 9)
 165  ConvI2L  === _ 164  [[ 167 ]]  #long:0..maxint-1:www !jvms: loop_invariant::micro @ bci:28 (line 9)
 166  ConI  === 0  [[ 167 ]]  #int:3
 167  LShiftL  === _ 165 166  [[ 169 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 168  AddP  === _ 132 169 162  [[ 170 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 169  AddP  === _ 132 132 167  [[ 168 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 170  StoreD  === 152 114 168 146  [[ 177 173 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !jvms: loop_invariant::micro @ bci:28 (line 9)
 171  AddI  === _ 116 78  [[ 116 172 ]]  !jvms: loop_invariant::micro @ bci:29 (line 6)
 172  SafePoint  === 152 1 173 1 1 176 132 32 1 171 1 1 1 1  [[ 112 0 ]]  SafePoint  !jvms: loop_invariant::micro @ bci:32 (line 6)
 173  MergeMem  === _ 1 114 115 1 1 170  [[ 172 ]]  { N115:rawptr:BotPTR - - N170:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:32 (line 6)
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 176 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 176  LoadP  === 152 115 175  [[ 172 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:32 (line 6)
 177  MergeMem  === _ 1 114 1 1 1 170  [[ 114 ]]  { - - - N170:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 140 113 16 8 9  [[ 0 ]] 
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 99 110 131 161 179  |172  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 126 65 78 83 94 105 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 74 66 ]] I_O !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 75 41 25 32 36 37 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 127 88 84 99 95 110 106 131 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 127 66 106 84 95 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 182 115  [[ 179 ]]  { N115:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 143 84 95 106 172 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 77 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 76 41 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 62 51  [[ 45 46 73 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 132 119 84 95 106 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 119 127 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 61 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 60 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  60  Bool  === _ 54  [[ 61 ]] [eq] !jvms: loop_invariant::micro @ bci:2 (line 6)
  61  If  === 52 60  [[ 62 63 ]] P=0.900000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  62  IfTrue  === 61  [[ 45 64 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  63  IfFalse  === 61  [[ 66 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 62 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 63 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  73  Region  === 73 _ 45  [[ 73 79 74 75 76 77 ]] #reducible  !jvms: loop_invariant::micro @ bci:2 (line 6)
  74  Phi  === 73 _ 6  [[ 113 84 95 106 ]]  #abIO !jvms: loop_invariant::micro @ bci:2 (line 6)
  75  Phi  === 73 _ 7  [[ 183 81 103 92 182 ]]  #memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
  76  Phi  === 73 _ 40  [[ 115 81 103 92 ]]  #memory  Memory: @rawptr:BotPTR, idx=Raw; !jvms: loop_invariant::micro @ bci:2 (line 6)
  77  Phi  === 73 _ 36  [[ 116 84 95 106 ]]  #int !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 79 90 101 171 ]]  #int:1
  79  ParsePredicate  === 73 78  [[ 80 89 ]]  #Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  80  IfFalse  === 79  [[ 84 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  81  MergeMem  === _ 1 75 76  [[ 84 ]]  { N76:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 80 74 81 8 9 (83 46 32 1 77 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  89  IfTrue  === 79  [[ 90 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  90  ParsePredicate  === 89 78  [[ 91 100 ]]  #Profiled_Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  91  IfFalse  === 90  [[ 95 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  92  MergeMem  === _ 1 75 76  [[ 95 ]]  { N76:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  94  ConI  === 0  [[ 95 ]]  #int:-66
  95  CallStaticJava  === 91 74 92 8 9 (94 46 32 1 77 1 1 1 1 ) [[ 96 ]] # Static uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  96  Proj  === 95  [[ 99 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  99  Halt  === 96 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 100  IfTrue  === 90  [[ 101 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 101  ParsePredicate  === 100 78  [[ 102 111 ]]  #Loop_Limit_Check  !jvms: loop_invariant::micro @ bci:2 (line 6)
 102  IfFalse  === 101  [[ 106 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 103  MergeMem  === _ 1 75 76  [[ 106 ]]  { N76:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
 105  ConI  === 0  [[ 106 ]]  #int:-146
 106  CallStaticJava  === 102 74 103 8 9 (105 46 32 1 77 1 1 1 1 ) [[ 107 ]] # Static uncommon_trap(reason='loop_limit_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
 107  Proj  === 106  [[ 110 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 110  Halt  === 107 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 111  IfTrue  === 101  [[ 112 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 112  Region  === 112 172 111  [[ 112 123 113 183 115 116 ]] #reducible  !jvms: loop_invariant::micro @ bci:2 (line 6)
 113  Phi  === 112 113 74  [[ 113 179 127 157 ]]  #abIO !jvms: loop_invariant::micro @ bci:2 (line 6)
 115  Phi  === 112 115 76  [[ 115 16 121 176 173 153 ]]  #memory  Memory: @rawptr:BotPTR, idx=Raw; !jvms: loop_invariant::micro @ bci:2 (line 6)
 116  Phi  === 112 171 77  [[ 157 164 157 136 144 171 149 ]]  #int !jvms: loop_invariant::micro @ bci:2 (line 6)
 119  CmpP  === _ 46 47  [[ 120 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 120  Bool  === _ 119  [[ 123 ]] [ne] !jvms: loop_invariant::micro @ bci:4 (line 6)
 121  MergeMem  === _ 1 182 115  [[ 127 ]]  { N115:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:4 (line 6)
 123  If  === 112 120  [[ 124 125 ]] P=0.999999, C=-1.000000 !jvms: loop_invariant::micro @ bci:4 (line 6)
 124  IfTrue  === 123  [[ 138 132 ]] #1 !jvms: loop_invariant::micro @ bci:4 (line 6)
 125  IfFalse  === 123  [[ 127 ]] #0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 126  ConI  === 0  [[ 127 ]]  #int:-10
 127  CallStaticJava  === 125 113 121 8 9 (126 1 1 1 1 1 1 1 1 1 47 ) [[ 128 ]] # Static uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:4 (line 6) !jvms: loop_invariant::micro @ bci:4 (line 6)
 128  Proj  === 127  [[ 131 ]] #0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 131  Halt  === 128 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 132  CastPP  === 124 46  [[ 169 134 134 169 172 168 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 136 149 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 136  CmpI  === _ 116 135  [[ 137 ]]  !jvms: loop_invariant::micro @ bci:5 (line 6)
 137  Bool  === _ 136  [[ 138 ]] [lt] !jvms: loop_invariant::micro @ bci:5 (line 6)
 138  If  === 124 137  [[ 139 140 ]] P=0.999026, C=211589.000000 !jvms: loop_invariant::micro @ bci:5 (line 6)
 139  IfTrue  === 138  [[ 151 143 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 140  IfFalse  === 138  [[ 179 ]] #0 !jvms: loop_invariant::micro @ bci:5 (line 6)
 143  SqrtD  === 139 32  [[ 146 ]]  !jvms: loop_invariant::micro @ bci:9 (line 7)
 144  ConvI2D  === _ 116  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 146 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 146  AddD  === _ 143 145  [[ 170 157 ]]  !jvms: loop_invariant::micro @ bci:27 (line 9)
 149  CmpU  === _ 116 135  [[ 150 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 150  Bool  === _ 149  [[ 151 ]] [lt] !jvms: loop_invariant::micro @ bci:28 (line 9)
 151  RangeCheck  === 139 150  [[ 152 155 ]] P=0.999999, C=-1.000000 !jvms: loop_invariant::micro @ bci:28 (line 9)
 152  IfTrue  === 151  [[ 176 164 170 172 ]] #1 !jvms: loop_invariant::micro @ bci:28 (line 9)
 153  MergeMem  === _ 1 182 115  [[ 157 ]]  { N115:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 155  IfFalse  === 151  [[ 157 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 155 113 153 8 9 (156 132 32 1 116 1 1 1 1 132 116 146 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 168 ]]  #long:16
 164  CastII  === 152 116  [[ 165 ]]  #int:0..max-1:www range check dependency !jvms: loop_invariant::micro @ bci:28 (line 9)
 165  ConvI2L  === _ 164  [[ 167 ]]  #long:0..maxint-1:www !jvms: loop_invariant::micro @ bci:28 (line 9)
 166  ConI  === 0  [[ 167 ]]  #int:3
 167  LShiftL  === _ 165 166  [[ 169 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 168  AddP  === _ 132 169 162  [[ 170 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 169  AddP  === _ 132 132 167  [[ 168 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 170  StoreD  === 152 182 168 146  [[ 183 173 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !jvms: loop_invariant::micro @ bci:28 (line 9)
 171  AddI  === _ 116 78  [[ 116 172 ]]  !jvms: loop_invariant::micro @ bci:29 (line 6)
 172  SafePoint  === 152 1 173 1 1 176 132 32 1 171 1 1 1 1  [[ 112 0 ]]  SafePoint  !jvms: loop_invariant::micro @ bci:32 (line 6)
 173  MergeMem  === _ 1 182 115 1 1 170  [[ 172 ]]  { N115:rawptr:BotPTR - - N170:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:32 (line 6)
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 176 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 176  LoadP  === 152 115 175  [[ 172 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 140 113 16 8 9  [[ 0 ]] 
 182  MergeMem  === _ 1 75 1 1 1 183  [[ 153 170 173 121 16 ]]  { - - - N183:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
 183  Phi  === 112 170 75  [[ 182 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 99 110 131 161 179  |172  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 126 65 78 83 94 105 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 74 66 ]] I_O !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 75 41 25 32 36 37 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 127 88 84 99 95 110 106 131 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 127 66 106 84 95 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 182 76  [[ 179 ]]  { N76:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 143 84 95 106 172 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 77 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 76 41 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 62 51  [[ 45 46 73 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 132 119 84 95 106 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 119 127 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 61 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 60 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  60  Bool  === _ 54  [[ 61 ]] [eq] !jvms: loop_invariant::micro @ bci:2 (line 6)
  61  If  === 52 60  [[ 62 63 ]] P=0.900000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  62  IfTrue  === 61  [[ 45 64 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  63  IfFalse  === 61  [[ 66 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 62 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 63 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  73  Region  === 73 _ 45  [[ 73 79 74 75 76 77 ]] #reducible  !jvms: loop_invariant::micro @ bci:2 (line 6)
  74  Phi  === 73 _ 6  [[ 113 84 95 106 ]]  #abIO !jvms: loop_invariant::micro @ bci:2 (line 6)
  75  Phi  === 73 _ 7  [[ 183 81 103 92 182 ]]  #memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
  76  Phi  === 73 _ 40  [[ 16 81 103 92 153 173 176 121 ]]  #memory  Memory: @rawptr:BotPTR, idx=Raw; !orig=[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  77  Phi  === 73 _ 36  [[ 116 84 95 106 ]]  #int !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 79 90 101 171 ]]  #int:1
  79  ParsePredicate  === 73 78  [[ 80 89 ]]  #Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  80  IfFalse  === 79  [[ 84 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  81  MergeMem  === _ 1 75 76  [[ 84 ]]  { N76:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 80 74 81 8 9 (83 46 32 1 77 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  89  IfTrue  === 79  [[ 90 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  90  ParsePredicate  === 89 78  [[ 91 100 ]]  #Profiled_Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  91  IfFalse  === 90  [[ 95 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  92  MergeMem  === _ 1 75 76  [[ 95 ]]  { N76:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  94  ConI  === 0  [[ 95 ]]  #int:-66
  95  CallStaticJava  === 91 74 92 8 9 (94 46 32 1 77 1 1 1 1 ) [[ 96 ]] # Static uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  96  Proj  === 95  [[ 99 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  99  Halt  === 96 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 100  IfTrue  === 90  [[ 101 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 101  ParsePredicate  === 100 78  [[ 102 111 ]]  #Loop_Limit_Check  !jvms: loop_invariant::micro @ bci:2 (line 6)
 102  IfFalse  === 101  [[ 106 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 103  MergeMem  === _ 1 75 76  [[ 106 ]]  { N76:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
 105  ConI  === 0  [[ 106 ]]  #int:-146
 106  CallStaticJava  === 102 74 103 8 9 (105 46 32 1 77 1 1 1 1 ) [[ 107 ]] # Static uncommon_trap(reason='loop_limit_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
 107  Proj  === 106  [[ 110 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 110  Halt  === 107 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 111  IfTrue  === 101  [[ 112 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 112  Region  === 112 172 111  [[ 112 123 113 183 116 ]] #reducible  !jvms: loop_invariant::micro @ bci:2 (line 6)
 113  Phi  === 112 113 74  [[ 113 179 127 157 ]]  #abIO !jvms: loop_invariant::micro @ bci:2 (line 6)
 116  Phi  === 112 171 77  [[ 157 164 157 136 144 171 149 ]]  #int !jvms: loop_invariant::micro @ bci:2 (line 6)
 119  CmpP  === _ 46 47  [[ 120 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 120  Bool  === _ 119  [[ 123 ]] [ne] !jvms: loop_invariant::micro @ bci:4 (line 6)
 121  MergeMem  === _ 1 182 76  [[ 127 ]]  { N76:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:4 (line 6)
 123  If  === 112 120  [[ 124 125 ]] P=0.999999, C=-1.000000 !jvms: loop_invariant::micro @ bci:4 (line 6)
 124  IfTrue  === 123  [[ 138 132 ]] #1 !jvms: loop_invariant::micro @ bci:4 (line 6)
 125  IfFalse  === 123  [[ 127 ]] #0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 126  ConI  === 0  [[ 127 ]]  #int:-10
 127  CallStaticJava  === 125 113 121 8 9 (126 1 1 1 1 1 1 1 1 1 47 ) [[ 128 ]] # Static uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:4 (line 6) !jvms: loop_invariant::micro @ bci:4 (line 6)
 128  Proj  === 127  [[ 131 ]] #0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 131  Halt  === 128 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 132  CastPP  === 124 46  [[ 169 134 134 169 172 168 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 136 149 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 136  CmpI  === _ 116 135  [[ 137 ]]  !jvms: loop_invariant::micro @ bci:5 (line 6)
 137  Bool  === _ 136  [[ 138 ]] [lt] !jvms: loop_invariant::micro @ bci:5 (line 6)
 138  If  === 124 137  [[ 139 140 ]] P=0.999026, C=211589.000000 !jvms: loop_invariant::micro @ bci:5 (line 6)
 139  IfTrue  === 138  [[ 151 143 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 140  IfFalse  === 138  [[ 179 ]] #0 !jvms: loop_invariant::micro @ bci:5 (line 6)
 143  SqrtD  === 139 32  [[ 146 ]]  !jvms: loop_invariant::micro @ bci:9 (line 7)
 144  ConvI2D  === _ 116  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 146 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 146  AddD  === _ 143 145  [[ 170 157 ]]  !jvms: loop_invariant::micro @ bci:27 (line 9)
 149  CmpU  === _ 116 135  [[ 150 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 150  Bool  === _ 149  [[ 151 ]] [lt] !jvms: loop_invariant::micro @ bci:28 (line 9)
 151  RangeCheck  === 139 150  [[ 152 155 ]] P=0.999999, C=-1.000000 !jvms: loop_invariant::micro @ bci:28 (line 9)
 152  IfTrue  === 151  [[ 176 164 170 172 ]] #1 !jvms: loop_invariant::micro @ bci:28 (line 9)
 153  MergeMem  === _ 1 182 76  [[ 157 ]]  { N76:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 155  IfFalse  === 151  [[ 157 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 155 113 153 8 9 (156 132 32 1 116 1 1 1 1 132 116 146 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 168 ]]  #long:16
 164  CastII  === 152 116  [[ 165 ]]  #int:0..max-1:www range check dependency !jvms: loop_invariant::micro @ bci:28 (line 9)
 165  ConvI2L  === _ 164  [[ 167 ]]  #long:0..maxint-1:www !jvms: loop_invariant::micro @ bci:28 (line 9)
 166  ConI  === 0  [[ 167 ]]  #int:3
 167  LShiftL  === _ 165 166  [[ 169 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 168  AddP  === _ 132 169 162  [[ 170 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 169  AddP  === _ 132 132 167  [[ 168 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 170  StoreD  === 152 182 168 146  [[ 183 173 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !jvms: loop_invariant::micro @ bci:28 (line 9)
 171  AddI  === _ 116 78  [[ 116 172 ]]  !jvms: loop_invariant::micro @ bci:29 (line 6)
 172  SafePoint  === 152 1 173 1 1 176 132 32 1 171 1 1 1 1  [[ 112 0 ]]  SafePoint  !jvms: loop_invariant::micro @ bci:32 (line 6)
 173  MergeMem  === _ 1 182 76 1 1 170  [[ 172 ]]  { N76:rawptr:BotPTR - - N170:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:32 (line 6)
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 176 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 176  LoadP  === 152 76 175  [[ 172 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 140 113 16 8 9  [[ 0 ]] 
 182  MergeMem  === _ 1 75 1 1 1 183  [[ 153 170 173 121 16 ]]  { - - - N183:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
 183  Phi  === 112 170 75  [[ 182 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 99 110 131 161 179  |172  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 126 65 78 83 94 105 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 74 66 ]] I_O !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 75 41 25 32 36 37 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 127 88 84 99 95 110 106 131 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 127 66 106 84 95 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 182 76  [[ 179 ]]  { N76:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 143 84 95 106 172 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 77 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 76 41 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 186 51  [[ 45 46 73 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 132 119 84 95 106 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 119 127 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  73  Region  === 73 _ 45  [[ 73 79 74 75 76 77 ]] #reducible  !jvms: loop_invariant::micro @ bci:2 (line 6)
  74  Phi  === 73 _ 6  [[ 113 84 95 106 ]]  #abIO !jvms: loop_invariant::micro @ bci:2 (line 6)
  75  Phi  === 73 _ 7  [[ 183 81 103 92 182 ]]  #memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
  76  Phi  === 73 _ 40  [[ 16 81 103 92 153 173 176 121 ]]  #memory  Memory: @rawptr:BotPTR, idx=Raw; !orig=[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  77  Phi  === 73 _ 36  [[ 116 84 95 106 ]]  #int !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 79 90 101 171 ]]  #int:1
  79  ParsePredicate  === 73 78  [[ 80 89 ]]  #Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  80  IfFalse  === 79  [[ 84 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  81  MergeMem  === _ 1 75 76  [[ 84 ]]  { N76:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 80 74 81 8 9 (83 46 32 1 77 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  89  IfTrue  === 79  [[ 90 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  90  ParsePredicate  === 89 78  [[ 91 100 ]]  #Profiled_Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  91  IfFalse  === 90  [[ 95 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  92  MergeMem  === _ 1 75 76  [[ 95 ]]  { N76:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  94  ConI  === 0  [[ 95 ]]  #int:-66
  95  CallStaticJava  === 91 74 92 8 9 (94 46 32 1 77 1 1 1 1 ) [[ 96 ]] # Static uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  96  Proj  === 95  [[ 99 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  99  Halt  === 96 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 100  IfTrue  === 90  [[ 101 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 101  ParsePredicate  === 100 78  [[ 102 111 ]]  #Loop_Limit_Check  !jvms: loop_invariant::micro @ bci:2 (line 6)
 102  IfFalse  === 101  [[ 106 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 103  MergeMem  === _ 1 75 76  [[ 106 ]]  { N76:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
 105  ConI  === 0  [[ 106 ]]  #int:-146
 106  CallStaticJava  === 102 74 103 8 9 (105 46 32 1 77 1 1 1 1 ) [[ 107 ]] # Static uncommon_trap(reason='loop_limit_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
 107  Proj  === 106  [[ 110 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 110  Halt  === 107 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 111  IfTrue  === 101  [[ 112 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 112  Region  === 112 172 111  [[ 112 123 113 183 116 ]] #reducible  !jvms: loop_invariant::micro @ bci:2 (line 6)
 113  Phi  === 112 113 74  [[ 113 179 127 157 ]]  #abIO !jvms: loop_invariant::micro @ bci:2 (line 6)
 116  Phi  === 112 171 77  [[ 157 164 157 136 144 171 149 ]]  #int !jvms: loop_invariant::micro @ bci:2 (line 6)
 119  CmpP  === _ 46 47  [[ 120 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 120  Bool  === _ 119  [[ 123 ]] [ne] !jvms: loop_invariant::micro @ bci:4 (line 6)
 121  MergeMem  === _ 1 182 76  [[ 127 ]]  { N76:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:4 (line 6)
 123  If  === 112 120  [[ 124 125 ]] P=0.999999, C=-1.000000 !jvms: loop_invariant::micro @ bci:4 (line 6)
 124  IfTrue  === 123  [[ 138 132 ]] #1 !jvms: loop_invariant::micro @ bci:4 (line 6)
 125  IfFalse  === 123  [[ 127 ]] #0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 126  ConI  === 0  [[ 127 ]]  #int:-10
 127  CallStaticJava  === 125 113 121 8 9 (126 1 1 1 1 1 1 1 1 1 47 ) [[ 128 ]] # Static uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:4 (line 6) !jvms: loop_invariant::micro @ bci:4 (line 6)
 128  Proj  === 127  [[ 131 ]] #0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 131  Halt  === 128 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 132  CastPP  === 124 46  [[ 169 134 134 169 172 168 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 136 149 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 136  CmpI  === _ 116 135  [[ 137 ]]  !jvms: loop_invariant::micro @ bci:5 (line 6)
 137  Bool  === _ 136  [[ 138 ]] [lt] !jvms: loop_invariant::micro @ bci:5 (line 6)
 138  If  === 124 137  [[ 139 140 ]] P=0.999026, C=211589.000000 !jvms: loop_invariant::micro @ bci:5 (line 6)
 139  IfTrue  === 138  [[ 151 143 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 140  IfFalse  === 138  [[ 179 ]] #0 !jvms: loop_invariant::micro @ bci:5 (line 6)
 143  SqrtD  === 139 32  [[ 146 ]]  !jvms: loop_invariant::micro @ bci:9 (line 7)
 144  ConvI2D  === _ 116  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 146 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 146  AddD  === _ 143 145  [[ 170 157 ]]  !jvms: loop_invariant::micro @ bci:27 (line 9)
 149  CmpU  === _ 116 135  [[ 150 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 150  Bool  === _ 149  [[ 151 ]] [lt] !jvms: loop_invariant::micro @ bci:28 (line 9)
 151  RangeCheck  === 139 150  [[ 152 155 ]] P=0.999999, C=-1.000000 !jvms: loop_invariant::micro @ bci:28 (line 9)
 152  IfTrue  === 151  [[ 176 164 170 172 ]] #1 !jvms: loop_invariant::micro @ bci:28 (line 9)
 153  MergeMem  === _ 1 182 76  [[ 157 ]]  { N76:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 155  IfFalse  === 151  [[ 157 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 155 113 153 8 9 (156 132 32 1 116 1 1 1 1 132 116 146 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 168 ]]  #long:16
 164  CastII  === 152 116  [[ 165 ]]  #int:0..max-1:www range check dependency !jvms: loop_invariant::micro @ bci:28 (line 9)
 165  ConvI2L  === _ 164  [[ 167 ]]  #long:0..maxint-1:www !jvms: loop_invariant::micro @ bci:28 (line 9)
 166  ConI  === 0  [[ 167 ]]  #int:3
 167  LShiftL  === _ 165 166  [[ 169 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 168  AddP  === _ 132 169 162  [[ 170 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 169  AddP  === _ 132 132 167  [[ 168 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 170  StoreD  === 152 182 168 146  [[ 183 173 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !jvms: loop_invariant::micro @ bci:28 (line 9)
 171  AddI  === _ 116 78  [[ 116 172 ]]  !jvms: loop_invariant::micro @ bci:29 (line 6)
 172  SafePoint  === 152 1 173 1 1 176 132 32 1 171 1 1 1 1  [[ 112 0 ]]  SafePoint  !jvms: loop_invariant::micro @ bci:32 (line 6)
 173  MergeMem  === _ 1 182 76 1 1 170  [[ 172 ]]  { N76:rawptr:BotPTR - - N170:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:32 (line 6)
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 176 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 176  LoadP  === 152 76 175  [[ 172 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 140 113 16 8 9  [[ 0 ]] 
 182  MergeMem  === _ 1 75 1 1 1 183  [[ 153 170 173 121 16 ]]  { - - - N183:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
 183  Phi  === 112 170 75  [[ 182 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 45 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 99 110 131 161 179  |172  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 126 65 78 83 94 105 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 113 66 106 95 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 183 41 25 32 36 37 182 92 103 81 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 127 88 84 99 95 110 106 131 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 127 66 106 84 95 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 182 40  [[ 179 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 143 84 95 106 172 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 116 106 95 84 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 121 176 173 153 92 103 81 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 186 51  [[ 45 46 79 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 132 119 84 95 106 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 119 127 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 79 90 101 171 ]]  #int:1
  79  ParsePredicate  === 45 78  [[ 80 89 ]]  #Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  80  IfFalse  === 79  [[ 84 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 80 6 81 8 9 (83 46 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  89  IfTrue  === 79  [[ 90 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  90  ParsePredicate  === 89 78  [[ 91 100 ]]  #Profiled_Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  91  IfFalse  === 90  [[ 95 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  92  MergeMem  === _ 1 7 40  [[ 95 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  94  ConI  === 0  [[ 95 ]]  #int:-66
  95  CallStaticJava  === 91 6 92 8 9 (94 46 32 1 36 1 1 1 1 ) [[ 96 ]] # Static uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  96  Proj  === 95  [[ 99 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  99  Halt  === 96 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 100  IfTrue  === 90  [[ 101 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 101  ParsePredicate  === 100 78  [[ 102 111 ]]  #Loop_Limit_Check  !jvms: loop_invariant::micro @ bci:2 (line 6)
 102  IfFalse  === 101  [[ 106 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 103  MergeMem  === _ 1 7 40  [[ 106 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
 105  ConI  === 0  [[ 106 ]]  #int:-146
 106  CallStaticJava  === 102 6 103 8 9 (105 46 32 1 36 1 1 1 1 ) [[ 107 ]] # Static uncommon_trap(reason='loop_limit_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
 107  Proj  === 106  [[ 110 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 110  Halt  === 107 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 111  IfTrue  === 101  [[ 112 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 112  Region  === 112 172 111  [[ 112 123 113 183 116 ]] #reducible  !jvms: loop_invariant::micro @ bci:2 (line 6)
 113  Phi  === 112 113 6  [[ 113 179 127 157 ]]  #abIO !jvms: loop_invariant::micro @ bci:2 (line 6)
 116  Phi  === 112 171 36  [[ 157 164 157 136 144 171 149 ]]  #int !jvms: loop_invariant::micro @ bci:2 (line 6)
 119  CmpP  === _ 46 47  [[ 120 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 120  Bool  === _ 119  [[ 123 ]] [ne] !jvms: loop_invariant::micro @ bci:4 (line 6)
 121  MergeMem  === _ 1 182 40  [[ 127 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:4 (line 6)
 123  If  === 112 120  [[ 124 125 ]] P=0.999999, C=-1.000000 !jvms: loop_invariant::micro @ bci:4 (line 6)
 124  IfTrue  === 123  [[ 138 132 ]] #1 !jvms: loop_invariant::micro @ bci:4 (line 6)
 125  IfFalse  === 123  [[ 127 ]] #0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 126  ConI  === 0  [[ 127 ]]  #int:-10
 127  CallStaticJava  === 125 113 121 8 9 (126 1 1 1 1 1 1 1 1 1 47 ) [[ 128 ]] # Static uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:4 (line 6) !jvms: loop_invariant::micro @ bci:4 (line 6)
 128  Proj  === 127  [[ 131 ]] #0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 131  Halt  === 128 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 132  CastPP  === 124 46  [[ 169 134 134 169 172 168 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 136 149 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 136  CmpI  === _ 116 135  [[ 137 ]]  !jvms: loop_invariant::micro @ bci:5 (line 6)
 137  Bool  === _ 136  [[ 138 ]] [lt] !jvms: loop_invariant::micro @ bci:5 (line 6)
 138  If  === 124 137  [[ 139 140 ]] P=0.999026, C=211589.000000 !jvms: loop_invariant::micro @ bci:5 (line 6)
 139  IfTrue  === 138  [[ 151 143 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 140  IfFalse  === 138  [[ 179 ]] #0 !jvms: loop_invariant::micro @ bci:5 (line 6)
 143  SqrtD  === 139 32  [[ 146 ]]  !jvms: loop_invariant::micro @ bci:9 (line 7)
 144  ConvI2D  === _ 116  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 146 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 146  AddD  === _ 143 145  [[ 170 157 ]]  !jvms: loop_invariant::micro @ bci:27 (line 9)
 149  CmpU  === _ 116 135  [[ 150 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 150  Bool  === _ 149  [[ 151 ]] [lt] !jvms: loop_invariant::micro @ bci:28 (line 9)
 151  RangeCheck  === 139 150  [[ 152 155 ]] P=0.999999, C=-1.000000 !jvms: loop_invariant::micro @ bci:28 (line 9)
 152  IfTrue  === 151  [[ 176 164 170 172 ]] #1 !jvms: loop_invariant::micro @ bci:28 (line 9)
 153  MergeMem  === _ 1 182 40  [[ 157 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 155  IfFalse  === 151  [[ 157 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 155 113 153 8 9 (156 132 32 1 116 1 1 1 1 132 116 146 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 168 ]]  #long:16
 164  CastII  === 152 116  [[ 165 ]]  #int:0..max-1:www range check dependency !jvms: loop_invariant::micro @ bci:28 (line 9)
 165  ConvI2L  === _ 164  [[ 167 ]]  #long:0..maxint-1:www !jvms: loop_invariant::micro @ bci:28 (line 9)
 166  ConI  === 0  [[ 167 ]]  #int:3
 167  LShiftL  === _ 165 166  [[ 169 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 168  AddP  === _ 132 169 162  [[ 170 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 169  AddP  === _ 132 132 167  [[ 168 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 170  StoreD  === 152 182 168 146  [[ 183 173 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !jvms: loop_invariant::micro @ bci:28 (line 9)
 171  AddI  === _ 116 78  [[ 116 172 ]]  !jvms: loop_invariant::micro @ bci:29 (line 6)
 172  SafePoint  === 152 1 173 1 1 176 132 32 1 171 1 1 1 1  [[ 112 0 ]]  SafePoint  !jvms: loop_invariant::micro @ bci:32 (line 6)
 173  MergeMem  === _ 1 182 40 1 1 170  [[ 172 ]]  { N40:rawptr:BotPTR - - N170:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:32 (line 6)
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 176 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 176  LoadP  === 152 40 175  [[ 172 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 140 113 16 8 9  [[ 0 ]] 
 182  MergeMem  === _ 1 7 1 1 1 183  [[ 153 170 173 121 16 ]]  { - - - N183:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
 183  Phi  === 112 170 7  [[ 182 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 45 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 99 110 131 161 179  |172  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 126 65 78 83 94 105 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 106 95 84 157 127 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 183 41 25 32 36 37 182 92 103 81 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 127 88 84 99 95 110 106 131 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 127 66 106 84 95 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 182 40  [[ 179 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 143 84 95 106 172 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 116 106 95 84 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 121 176 173 153 92 103 81 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 186 51  [[ 45 46 79 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 132 119 84 95 106 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 119 127 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 79 90 101 171 ]]  #int:1
  79  ParsePredicate  === 45 78  [[ 80 89 ]]  #Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  80  IfFalse  === 79  [[ 84 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 80 6 81 8 9 (83 46 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  89  IfTrue  === 79  [[ 90 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  90  ParsePredicate  === 89 78  [[ 91 100 ]]  #Profiled_Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  91  IfFalse  === 90  [[ 95 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  92  MergeMem  === _ 1 7 40  [[ 95 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  94  ConI  === 0  [[ 95 ]]  #int:-66
  95  CallStaticJava  === 91 6 92 8 9 (94 46 32 1 36 1 1 1 1 ) [[ 96 ]] # Static uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  96  Proj  === 95  [[ 99 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  99  Halt  === 96 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 100  IfTrue  === 90  [[ 101 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 101  ParsePredicate  === 100 78  [[ 102 111 ]]  #Loop_Limit_Check  !jvms: loop_invariant::micro @ bci:2 (line 6)
 102  IfFalse  === 101  [[ 106 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 103  MergeMem  === _ 1 7 40  [[ 106 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
 105  ConI  === 0  [[ 106 ]]  #int:-146
 106  CallStaticJava  === 102 6 103 8 9 (105 46 32 1 36 1 1 1 1 ) [[ 107 ]] # Static uncommon_trap(reason='loop_limit_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
 107  Proj  === 106  [[ 110 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 110  Halt  === 107 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 111  IfTrue  === 101  [[ 112 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 112  Region  === 112 172 111  [[ 112 123 116 183 ]] #reducible  !jvms: loop_invariant::micro @ bci:2 (line 6)
 116  Phi  === 112 171 36  [[ 157 164 157 136 144 171 149 ]]  #int !jvms: loop_invariant::micro @ bci:2 (line 6)
 119  CmpP  === _ 46 47  [[ 120 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 120  Bool  === _ 119  [[ 123 ]] [ne] !jvms: loop_invariant::micro @ bci:4 (line 6)
 121  MergeMem  === _ 1 182 40  [[ 127 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:4 (line 6)
 123  If  === 112 120  [[ 124 125 ]] P=0.999999, C=-1.000000 !jvms: loop_invariant::micro @ bci:4 (line 6)
 124  IfTrue  === 123  [[ 138 132 ]] #1 !jvms: loop_invariant::micro @ bci:4 (line 6)
 125  IfFalse  === 123  [[ 127 ]] #0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 126  ConI  === 0  [[ 127 ]]  #int:-10
 127  CallStaticJava  === 125 6 121 8 9 (126 1 1 1 1 1 1 1 1 1 47 ) [[ 128 ]] # Static uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:4 (line 6) !jvms: loop_invariant::micro @ bci:4 (line 6)
 128  Proj  === 127  [[ 131 ]] #0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 131  Halt  === 128 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 132  CastPP  === 124 46  [[ 169 134 134 169 172 168 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 136 149 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 136  CmpI  === _ 116 135  [[ 137 ]]  !jvms: loop_invariant::micro @ bci:5 (line 6)
 137  Bool  === _ 136  [[ 138 ]] [lt] !jvms: loop_invariant::micro @ bci:5 (line 6)
 138  If  === 124 137  [[ 139 140 ]] P=0.999026, C=211589.000000 !jvms: loop_invariant::micro @ bci:5 (line 6)
 139  IfTrue  === 138  [[ 151 143 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 140  IfFalse  === 138  [[ 179 ]] #0 !jvms: loop_invariant::micro @ bci:5 (line 6)
 143  SqrtD  === 139 32  [[ 146 ]]  !jvms: loop_invariant::micro @ bci:9 (line 7)
 144  ConvI2D  === _ 116  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 146 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 146  AddD  === _ 143 145  [[ 170 157 ]]  !jvms: loop_invariant::micro @ bci:27 (line 9)
 149  CmpU  === _ 116 135  [[ 150 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 150  Bool  === _ 149  [[ 151 ]] [lt] !jvms: loop_invariant::micro @ bci:28 (line 9)
 151  RangeCheck  === 139 150  [[ 152 155 ]] P=0.999999, C=-1.000000 !jvms: loop_invariant::micro @ bci:28 (line 9)
 152  IfTrue  === 151  [[ 176 164 170 172 ]] #1 !jvms: loop_invariant::micro @ bci:28 (line 9)
 153  MergeMem  === _ 1 182 40  [[ 157 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 155  IfFalse  === 151  [[ 157 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 155 6 153 8 9 (156 132 32 1 116 1 1 1 1 132 116 146 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 168 ]]  #long:16
 164  CastII  === 152 116  [[ 165 ]]  #int:0..max-1:www range check dependency !jvms: loop_invariant::micro @ bci:28 (line 9)
 165  ConvI2L  === _ 164  [[ 167 ]]  #long:0..maxint-1:www !jvms: loop_invariant::micro @ bci:28 (line 9)
 166  ConI  === 0  [[ 167 ]]  #int:3
 167  LShiftL  === _ 165 166  [[ 169 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 168  AddP  === _ 132 169 162  [[ 170 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 169  AddP  === _ 132 132 167  [[ 168 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 170  StoreD  === 152 182 168 146  [[ 183 173 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !jvms: loop_invariant::micro @ bci:28 (line 9)
 171  AddI  === _ 116 78  [[ 116 172 ]]  !jvms: loop_invariant::micro @ bci:29 (line 6)
 172  SafePoint  === 152 1 173 1 1 176 132 32 1 171 1 1 1 1  [[ 112 0 ]]  SafePoint  !jvms: loop_invariant::micro @ bci:32 (line 6)
 173  MergeMem  === _ 1 182 40 1 1 170  [[ 172 ]]  { N40:rawptr:BotPTR - - N170:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:32 (line 6)
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 176 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 176  LoadP  === 152 40 175  [[ 172 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 140 6 16 8 9  [[ 0 ]] 
 182  MergeMem  === _ 1 7 1 1 1 183  [[ 153 170 173 121 16 ]]  { - - - N183:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
 183  Phi  === 112 170 7  [[ 182 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 45 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
AFTER: AFTER_ITER_GVN
   0  Root  === 0 70 88 99 110 131 161 179  |172  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 126 65 78 83 94 105 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 106 95 84 157 127 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 183 41 25 32 36 37 153 92 103 81 16 121 173 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 127 88 84 99 95 110 106 131 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 127 66 106 84 95 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 183  [[ 179 ]]  { N40:rawptr:BotPTR - - N183:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 143 84 95 106 172 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 116 106 95 84 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 121 176 173 153 92 103 81 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 186 51  [[ 45 46 79 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 132 119 84 95 106 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 119 127 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 79 90 101 171 ]]  #int:1
  79  ParsePredicate  === 45 78  [[ 80 89 ]]  #Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  80  IfFalse  === 79  [[ 84 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 80 6 81 8 9 (83 46 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  89  IfTrue  === 79  [[ 90 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  90  ParsePredicate  === 89 78  [[ 91 100 ]]  #Profiled_Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  91  IfFalse  === 90  [[ 95 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  92  MergeMem  === _ 1 7 40  [[ 95 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  94  ConI  === 0  [[ 95 ]]  #int:-66
  95  CallStaticJava  === 91 6 92 8 9 (94 46 32 1 36 1 1 1 1 ) [[ 96 ]] # Static uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  96  Proj  === 95  [[ 99 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  99  Halt  === 96 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 100  IfTrue  === 90  [[ 101 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 101  ParsePredicate  === 100 78  [[ 102 111 ]]  #Loop_Limit_Check  !jvms: loop_invariant::micro @ bci:2 (line 6)
 102  IfFalse  === 101  [[ 106 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 103  MergeMem  === _ 1 7 40  [[ 106 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
 105  ConI  === 0  [[ 106 ]]  #int:-146
 106  CallStaticJava  === 102 6 103 8 9 (105 46 32 1 36 1 1 1 1 ) [[ 107 ]] # Static uncommon_trap(reason='loop_limit_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
 107  Proj  === 106  [[ 110 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 110  Halt  === 107 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 111  IfTrue  === 101  [[ 112 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 112  Region  === 112 172 111  [[ 112 123 116 183 ]] #reducible  !jvms: loop_invariant::micro @ bci:2 (line 6)
 116  Phi  === 112 171 36  [[ 157 164 157 136 144 171 149 ]]  #int !jvms: loop_invariant::micro @ bci:2 (line 6)
 119  CmpP  === _ 46 47  [[ 120 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 120  Bool  === _ 119  [[ 123 ]] [ne] !jvms: loop_invariant::micro @ bci:4 (line 6)
 121  MergeMem  === _ 1 7 40 1 1 183  [[ 127 ]]  { N40:rawptr:BotPTR - - N183:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:4 (line 6)
 123  If  === 112 120  [[ 124 125 ]] P=0.999999, C=-1.000000 !jvms: loop_invariant::micro @ bci:4 (line 6)
 124  IfTrue  === 123  [[ 138 132 ]] #1 !jvms: loop_invariant::micro @ bci:4 (line 6)
 125  IfFalse  === 123  [[ 127 ]] #0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 126  ConI  === 0  [[ 127 ]]  #int:-10
 127  CallStaticJava  === 125 6 121 8 9 (126 1 1 1 1 1 1 1 1 1 47 ) [[ 128 ]] # Static uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:4 (line 6) !jvms: loop_invariant::micro @ bci:4 (line 6)
 128  Proj  === 127  [[ 131 ]] #0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 131  Halt  === 128 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 132  CastPP  === 124 46  [[ 169 134 134 169 172 168 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 136 149 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 136  CmpI  === _ 116 135  [[ 137 ]]  !jvms: loop_invariant::micro @ bci:5 (line 6)
 137  Bool  === _ 136  [[ 138 ]] [lt] !jvms: loop_invariant::micro @ bci:5 (line 6)
 138  If  === 124 137  [[ 139 140 ]] P=0.999026, C=211589.000000 !jvms: loop_invariant::micro @ bci:5 (line 6)
 139  IfTrue  === 138  [[ 151 143 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 140  IfFalse  === 138  [[ 179 ]] #0 !jvms: loop_invariant::micro @ bci:5 (line 6)
 143  SqrtD  === 139 32  [[ 146 ]]  !jvms: loop_invariant::micro @ bci:9 (line 7)
 144  ConvI2D  === _ 116  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 146 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 146  AddD  === _ 143 145  [[ 170 157 ]]  !jvms: loop_invariant::micro @ bci:27 (line 9)
 149  CmpU  === _ 116 135  [[ 150 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 150  Bool  === _ 149  [[ 151 ]] [lt] !jvms: loop_invariant::micro @ bci:28 (line 9)
 151  RangeCheck  === 139 150  [[ 152 155 ]] P=0.999999, C=-1.000000 !jvms: loop_invariant::micro @ bci:28 (line 9)
 152  IfTrue  === 151  [[ 176 164 170 172 ]] #1 !jvms: loop_invariant::micro @ bci:28 (line 9)
 153  MergeMem  === _ 1 7 40 1 1 183  [[ 157 ]]  { N40:rawptr:BotPTR - - N183:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 155  IfFalse  === 151  [[ 157 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 155 6 153 8 9 (156 132 32 1 116 1 1 1 1 132 116 146 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 168 ]]  #long:16
 164  CastII  === 152 116  [[ 165 ]]  #int:0..max-1:www range check dependency !jvms: loop_invariant::micro @ bci:28 (line 9)
 165  ConvI2L  === _ 164  [[ 167 ]]  #long:0..maxint-1:www !jvms: loop_invariant::micro @ bci:28 (line 9)
 166  ConI  === 0  [[ 167 ]]  #int:3
 167  LShiftL  === _ 165 166  [[ 169 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 168  AddP  === _ 132 169 162  [[ 170 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 169  AddP  === _ 132 132 167  [[ 168 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 170  StoreD  === 152 183 168 146  [[ 183 173 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !jvms: loop_invariant::micro @ bci:28 (line 9)
 171  AddI  === _ 116 78  [[ 116 172 ]]  !jvms: loop_invariant::micro @ bci:29 (line 6)
 172  SafePoint  === 152 1 173 1 1 176 132 32 1 171 1 1 1 1  [[ 112 0 ]]  SafePoint  !jvms: loop_invariant::micro @ bci:32 (line 6)
 173  MergeMem  === _ 1 7 40 1 1 170  [[ 172 ]]  { N40:rawptr:BotPTR - - N170:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:32 (line 6)
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 176 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 176  LoadP  === 152 40 175  [[ 172 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 140 6 16 8 9  [[ 0 ]] 
 183  Phi  === 112 170 7  [[ 170 16 121 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 45 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
AFTER: ITER_GVN1
   0  Root  === 0 70 88 99 110 131 161 179  |172  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 126 65 78 83 94 105 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 106 95 84 157 127 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 183 41 25 32 36 37 153 92 103 81 16 121 173 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 127 88 84 99 95 110 106 131 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 127 66 106 84 95 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 183  [[ 179 ]]  { N40:rawptr:BotPTR - - N183:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 143 84 95 106 172 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 116 106 95 84 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 121 176 173 153 92 103 81 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 186 51  [[ 45 46 79 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 132 119 84 95 106 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 119 127 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 79 90 101 171 ]]  #int:1
  79  ParsePredicate  === 45 78  [[ 80 89 ]]  #Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  80  IfFalse  === 79  [[ 84 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 80 6 81 8 9 (83 46 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  89  IfTrue  === 79  [[ 90 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  90  ParsePredicate  === 89 78  [[ 91 100 ]]  #Profiled_Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  91  IfFalse  === 90  [[ 95 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  92  MergeMem  === _ 1 7 40  [[ 95 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  94  ConI  === 0  [[ 95 ]]  #int:-66
  95  CallStaticJava  === 91 6 92 8 9 (94 46 32 1 36 1 1 1 1 ) [[ 96 ]] # Static uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  96  Proj  === 95  [[ 99 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  99  Halt  === 96 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 100  IfTrue  === 90  [[ 101 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 101  ParsePredicate  === 100 78  [[ 102 111 ]]  #Loop_Limit_Check  !jvms: loop_invariant::micro @ bci:2 (line 6)
 102  IfFalse  === 101  [[ 106 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 103  MergeMem  === _ 1 7 40  [[ 106 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
 105  ConI  === 0  [[ 106 ]]  #int:-146
 106  CallStaticJava  === 102 6 103 8 9 (105 46 32 1 36 1 1 1 1 ) [[ 107 ]] # Static uncommon_trap(reason='loop_limit_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
 107  Proj  === 106  [[ 110 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 110  Halt  === 107 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 111  IfTrue  === 101  [[ 112 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 112  Region  === 112 172 111  [[ 112 123 116 183 ]] #reducible  !jvms: loop_invariant::micro @ bci:2 (line 6)
 116  Phi  === 112 171 36  [[ 157 164 157 136 144 171 149 ]]  #int !jvms: loop_invariant::micro @ bci:2 (line 6)
 119  CmpP  === _ 46 47  [[ 120 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 120  Bool  === _ 119  [[ 123 ]] [ne] !jvms: loop_invariant::micro @ bci:4 (line 6)
 121  MergeMem  === _ 1 7 40 1 1 183  [[ 127 ]]  { N40:rawptr:BotPTR - - N183:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:4 (line 6)
 123  If  === 112 120  [[ 124 125 ]] P=0.999999, C=-1.000000 !jvms: loop_invariant::micro @ bci:4 (line 6)
 124  IfTrue  === 123  [[ 138 132 ]] #1 !jvms: loop_invariant::micro @ bci:4 (line 6)
 125  IfFalse  === 123  [[ 127 ]] #0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 126  ConI  === 0  [[ 127 ]]  #int:-10
 127  CallStaticJava  === 125 6 121 8 9 (126 1 1 1 1 1 1 1 1 1 47 ) [[ 128 ]] # Static uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:4 (line 6) !jvms: loop_invariant::micro @ bci:4 (line 6)
 128  Proj  === 127  [[ 131 ]] #0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 131  Halt  === 128 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 132  CastPP  === 124 46  [[ 169 134 134 169 172 168 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 136 149 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 136  CmpI  === _ 116 135  [[ 137 ]]  !jvms: loop_invariant::micro @ bci:5 (line 6)
 137  Bool  === _ 136  [[ 138 ]] [lt] !jvms: loop_invariant::micro @ bci:5 (line 6)
 138  If  === 124 137  [[ 139 140 ]] P=0.999026, C=211589.000000 !jvms: loop_invariant::micro @ bci:5 (line 6)
 139  IfTrue  === 138  [[ 151 143 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 140  IfFalse  === 138  [[ 179 ]] #0 !jvms: loop_invariant::micro @ bci:5 (line 6)
 143  SqrtD  === 139 32  [[ 146 ]]  !jvms: loop_invariant::micro @ bci:9 (line 7)
 144  ConvI2D  === _ 116  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 146 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 146  AddD  === _ 143 145  [[ 170 157 ]]  !jvms: loop_invariant::micro @ bci:27 (line 9)
 149  CmpU  === _ 116 135  [[ 150 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 150  Bool  === _ 149  [[ 151 ]] [lt] !jvms: loop_invariant::micro @ bci:28 (line 9)
 151  RangeCheck  === 139 150  [[ 152 155 ]] P=0.999999, C=-1.000000 !jvms: loop_invariant::micro @ bci:28 (line 9)
 152  IfTrue  === 151  [[ 176 164 170 172 ]] #1 !jvms: loop_invariant::micro @ bci:28 (line 9)
 153  MergeMem  === _ 1 7 40 1 1 183  [[ 157 ]]  { N40:rawptr:BotPTR - - N183:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 155  IfFalse  === 151  [[ 157 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 155 6 153 8 9 (156 132 32 1 116 1 1 1 1 132 116 146 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 168 ]]  #long:16
 164  CastII  === 152 116  [[ 165 ]]  #int:0..max-1:www range check dependency !jvms: loop_invariant::micro @ bci:28 (line 9)
 165  ConvI2L  === _ 164  [[ 167 ]]  #long:0..maxint-1:www !jvms: loop_invariant::micro @ bci:28 (line 9)
 166  ConI  === 0  [[ 167 ]]  #int:3
 167  LShiftL  === _ 165 166  [[ 169 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 168  AddP  === _ 132 169 162  [[ 170 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 169  AddP  === _ 132 132 167  [[ 168 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 170  StoreD  === 152 183 168 146  [[ 183 173 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !jvms: loop_invariant::micro @ bci:28 (line 9)
 171  AddI  === _ 116 78  [[ 116 172 ]]  !jvms: loop_invariant::micro @ bci:29 (line 6)
 172  SafePoint  === 152 1 173 1 1 176 132 32 1 171 1 1 1 1  [[ 112 0 ]]  SafePoint  !jvms: loop_invariant::micro @ bci:32 (line 6)
 173  MergeMem  === _ 1 7 40 1 1 170  [[ 172 ]]  { N40:rawptr:BotPTR - - N170:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:32 (line 6)
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 176 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 176  LoadP  === 152 40 175  [[ 172 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 140 6 16 8 9  [[ 0 ]] 
 183  Phi  === 112 170 7  [[ 170 16 121 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 45 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
AFTER: BEFORE_ITER_GVN
   0  Root  === 0 70 88 99 110 131 161 179  |172  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 126 65 78 83 94 105 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 106 95 84 157 127 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 183 41 25 32 36 37 153 92 103 81 16 121 173 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 127 88 84 99 95 110 106 131 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 127 66 106 84 95 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 183  [[ 179 ]]  { N40:rawptr:BotPTR - - N183:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 143 84 95 106 172 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 116 106 95 84 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 121 176 173 153 92 103 81 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 186 51  [[ 45 46 79 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 132 119 84 95 106 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 119 127 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 79 90 101 171 ]]  #int:1
  79  ParsePredicate  === 45 78  [[ 80 89 ]]  #Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  80  IfFalse  === 79  [[ 84 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 80 6 81 8 9 (83 46 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  89  IfTrue  === 79  [[ 90 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  90  ParsePredicate  === 89 78  [[ 91 100 ]]  #Profiled_Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  91  IfFalse  === 90  [[ 95 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  92  MergeMem  === _ 1 7 40  [[ 95 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  94  ConI  === 0  [[ 95 ]]  #int:-66
  95  CallStaticJava  === 91 6 92 8 9 (94 46 32 1 36 1 1 1 1 ) [[ 96 ]] # Static uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  96  Proj  === 95  [[ 99 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  99  Halt  === 96 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 100  IfTrue  === 90  [[ 101 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 101  ParsePredicate  === 100 78  [[ 102 111 ]]  #Loop_Limit_Check  !jvms: loop_invariant::micro @ bci:2 (line 6)
 102  IfFalse  === 101  [[ 106 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 103  MergeMem  === _ 1 7 40  [[ 106 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
 105  ConI  === 0  [[ 106 ]]  #int:-146
 106  CallStaticJava  === 102 6 103 8 9 (105 46 32 1 36 1 1 1 1 ) [[ 107 ]] # Static uncommon_trap(reason='loop_limit_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
 107  Proj  === 106  [[ 110 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 110  Halt  === 107 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 111  IfTrue  === 101  [[ 112 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 112  Region  === 112 172 111  [[ 112 123 116 183 ]] #reducible  !jvms: loop_invariant::micro @ bci:2 (line 6)
 116  Phi  === 112 171 36  [[ 157 164 157 136 144 171 149 ]]  #int !jvms: loop_invariant::micro @ bci:2 (line 6)
 119  CmpP  === _ 46 47  [[ 120 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 120  Bool  === _ 119  [[ 123 ]] [ne] !jvms: loop_invariant::micro @ bci:4 (line 6)
 121  MergeMem  === _ 1 7 40 1 1 183  [[ 127 ]]  { N40:rawptr:BotPTR - - N183:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:4 (line 6)
 123  If  === 112 120  [[ 124 125 ]] P=0.999999, C=-1.000000 !jvms: loop_invariant::micro @ bci:4 (line 6)
 124  IfTrue  === 123  [[ 138 132 ]] #1 !jvms: loop_invariant::micro @ bci:4 (line 6)
 125  IfFalse  === 123  [[ 127 ]] #0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 126  ConI  === 0  [[ 127 ]]  #int:-10
 127  CallStaticJava  === 125 6 121 8 9 (126 1 1 1 1 1 1 1 1 1 47 ) [[ 128 ]] # Static uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:4 (line 6) !jvms: loop_invariant::micro @ bci:4 (line 6)
 128  Proj  === 127  [[ 131 ]] #0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 131  Halt  === 128 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 132  CastPP  === 124 46  [[ 169 134 134 169 172 168 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 136 149 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 136  CmpI  === _ 116 135  [[ 137 ]]  !jvms: loop_invariant::micro @ bci:5 (line 6)
 137  Bool  === _ 136  [[ 138 ]] [lt] !jvms: loop_invariant::micro @ bci:5 (line 6)
 138  If  === 124 137  [[ 139 140 ]] P=0.999026, C=211589.000000 !jvms: loop_invariant::micro @ bci:5 (line 6)
 139  IfTrue  === 138  [[ 151 143 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 140  IfFalse  === 138  [[ 179 ]] #0 !jvms: loop_invariant::micro @ bci:5 (line 6)
 143  SqrtD  === 139 32  [[ 146 ]]  !jvms: loop_invariant::micro @ bci:9 (line 7)
 144  ConvI2D  === _ 116  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 146 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 146  AddD  === _ 143 145  [[ 170 157 ]]  !jvms: loop_invariant::micro @ bci:27 (line 9)
 149  CmpU  === _ 116 135  [[ 150 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 150  Bool  === _ 149  [[ 151 ]] [lt] !jvms: loop_invariant::micro @ bci:28 (line 9)
 151  RangeCheck  === 139 150  [[ 152 155 ]] P=0.999999, C=-1.000000 !jvms: loop_invariant::micro @ bci:28 (line 9)
 152  IfTrue  === 151  [[ 176 164 170 172 ]] #1 !jvms: loop_invariant::micro @ bci:28 (line 9)
 153  MergeMem  === _ 1 7 40 1 1 183  [[ 157 ]]  { N40:rawptr:BotPTR - - N183:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 155  IfFalse  === 151  [[ 157 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 155 6 153 8 9 (156 132 32 1 116 1 1 1 1 132 116 146 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 168 ]]  #long:16
 164  CastII  === 152 116  [[ 165 ]]  #int:0..max-1:www range check dependency !jvms: loop_invariant::micro @ bci:28 (line 9)
 165  ConvI2L  === _ 164  [[ 167 ]]  #long:0..maxint-1:www !jvms: loop_invariant::micro @ bci:28 (line 9)
 166  ConI  === 0  [[ 167 ]]  #int:3
 167  LShiftL  === _ 165 166  [[ 169 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 168  AddP  === _ 132 169 162  [[ 170 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 169  AddP  === _ 132 132 167  [[ 168 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 170  StoreD  === 152 183 168 146  [[ 183 173 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !jvms: loop_invariant::micro @ bci:28 (line 9)
 171  AddI  === _ 116 78  [[ 116 172 ]]  !jvms: loop_invariant::micro @ bci:29 (line 6)
 172  SafePoint  === 152 1 173 1 1 176 132 32 1 171 1 1 1 1  [[ 112 0 ]]  SafePoint  !jvms: loop_invariant::micro @ bci:32 (line 6)
 173  MergeMem  === _ 1 7 40 1 1 170  [[ 172 ]]  { N40:rawptr:BotPTR - - N170:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:32 (line 6)
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 176 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 176  LoadP  === 152 40 175  [[ 172 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 140 6 16 8 9  [[ 0 ]] 
 183  Phi  === 112 170 7  [[ 170 16 121 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 45 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
AFTER: AFTER_ITER_GVN
   0  Root  === 0 70 88 99 110 131 161 179  |172  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 126 65 78 83 94 105 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 106 95 84 157 127 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 183 41 25 32 36 37 153 92 103 81 16 121 173 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 127 88 84 99 95 110 106 131 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 127 66 106 84 95 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 183  [[ 179 ]]  { N40:rawptr:BotPTR - - N183:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 143 84 95 106 172 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 116 106 95 84 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 121 176 173 153 92 103 81 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 186 51  [[ 45 46 79 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 132 119 84 95 106 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 119 127 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 79 90 101 171 ]]  #int:1
  79  ParsePredicate  === 45 78  [[ 80 89 ]]  #Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  80  IfFalse  === 79  [[ 84 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 80 6 81 8 9 (83 46 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  89  IfTrue  === 79  [[ 90 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  90  ParsePredicate  === 89 78  [[ 91 100 ]]  #Profiled_Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  91  IfFalse  === 90  [[ 95 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  92  MergeMem  === _ 1 7 40  [[ 95 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  94  ConI  === 0  [[ 95 ]]  #int:-66
  95  CallStaticJava  === 91 6 92 8 9 (94 46 32 1 36 1 1 1 1 ) [[ 96 ]] # Static uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  96  Proj  === 95  [[ 99 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  99  Halt  === 96 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 100  IfTrue  === 90  [[ 101 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 101  ParsePredicate  === 100 78  [[ 102 111 ]]  #Loop_Limit_Check  !jvms: loop_invariant::micro @ bci:2 (line 6)
 102  IfFalse  === 101  [[ 106 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 103  MergeMem  === _ 1 7 40  [[ 106 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
 105  ConI  === 0  [[ 106 ]]  #int:-146
 106  CallStaticJava  === 102 6 103 8 9 (105 46 32 1 36 1 1 1 1 ) [[ 107 ]] # Static uncommon_trap(reason='loop_limit_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
 107  Proj  === 106  [[ 110 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 110  Halt  === 107 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 111  IfTrue  === 101  [[ 112 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 112  Region  === 112 172 111  [[ 112 123 116 183 ]] #reducible  !jvms: loop_invariant::micro @ bci:2 (line 6)
 116  Phi  === 112 171 36  [[ 157 164 157 136 144 171 149 ]]  #int !jvms: loop_invariant::micro @ bci:2 (line 6)
 119  CmpP  === _ 46 47  [[ 120 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 120  Bool  === _ 119  [[ 123 ]] [ne] !jvms: loop_invariant::micro @ bci:4 (line 6)
 121  MergeMem  === _ 1 7 40 1 1 183  [[ 127 ]]  { N40:rawptr:BotPTR - - N183:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:4 (line 6)
 123  If  === 112 120  [[ 124 125 ]] P=0.999999, C=-1.000000 !jvms: loop_invariant::micro @ bci:4 (line 6)
 124  IfTrue  === 123  [[ 138 132 ]] #1 !jvms: loop_invariant::micro @ bci:4 (line 6)
 125  IfFalse  === 123  [[ 127 ]] #0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 126  ConI  === 0  [[ 127 ]]  #int:-10
 127  CallStaticJava  === 125 6 121 8 9 (126 1 1 1 1 1 1 1 1 1 47 ) [[ 128 ]] # Static uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:4 (line 6) !jvms: loop_invariant::micro @ bci:4 (line 6)
 128  Proj  === 127  [[ 131 ]] #0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 131  Halt  === 128 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 132  CastPP  === 124 46  [[ 169 134 134 169 172 168 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 136 149 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 136  CmpI  === _ 116 135  [[ 137 ]]  !jvms: loop_invariant::micro @ bci:5 (line 6)
 137  Bool  === _ 136  [[ 138 ]] [lt] !jvms: loop_invariant::micro @ bci:5 (line 6)
 138  If  === 124 137  [[ 139 140 ]] P=0.999026, C=211589.000000 !jvms: loop_invariant::micro @ bci:5 (line 6)
 139  IfTrue  === 138  [[ 151 143 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 140  IfFalse  === 138  [[ 179 ]] #0 !jvms: loop_invariant::micro @ bci:5 (line 6)
 143  SqrtD  === 139 32  [[ 146 ]]  !jvms: loop_invariant::micro @ bci:9 (line 7)
 144  ConvI2D  === _ 116  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 146 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 146  AddD  === _ 143 145  [[ 170 157 ]]  !jvms: loop_invariant::micro @ bci:27 (line 9)
 149  CmpU  === _ 116 135  [[ 150 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 150  Bool  === _ 149  [[ 151 ]] [lt] !jvms: loop_invariant::micro @ bci:28 (line 9)
 151  RangeCheck  === 139 150  [[ 152 155 ]] P=0.999999, C=-1.000000 !jvms: loop_invariant::micro @ bci:28 (line 9)
 152  IfTrue  === 151  [[ 176 164 170 172 ]] #1 !jvms: loop_invariant::micro @ bci:28 (line 9)
 153  MergeMem  === _ 1 7 40 1 1 183  [[ 157 ]]  { N40:rawptr:BotPTR - - N183:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 155  IfFalse  === 151  [[ 157 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 155 6 153 8 9 (156 132 32 1 116 1 1 1 1 132 116 146 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 168 ]]  #long:16
 164  CastII  === 152 116  [[ 165 ]]  #int:0..max-1:www range check dependency !jvms: loop_invariant::micro @ bci:28 (line 9)
 165  ConvI2L  === _ 164  [[ 167 ]]  #long:0..maxint-1:www !jvms: loop_invariant::micro @ bci:28 (line 9)
 166  ConI  === 0  [[ 167 ]]  #int:3
 167  LShiftL  === _ 165 166  [[ 169 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 168  AddP  === _ 132 169 162  [[ 170 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 169  AddP  === _ 132 132 167  [[ 168 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 170  StoreD  === 152 183 168 146  [[ 183 173 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !jvms: loop_invariant::micro @ bci:28 (line 9)
 171  AddI  === _ 116 78  [[ 116 172 ]]  !jvms: loop_invariant::micro @ bci:29 (line 6)
 172  SafePoint  === 152 1 173 1 1 176 132 32 1 171 1 1 1 1  [[ 112 0 ]]  SafePoint  !jvms: loop_invariant::micro @ bci:32 (line 6)
 173  MergeMem  === _ 1 7 40 1 1 170  [[ 172 ]]  { N40:rawptr:BotPTR - - N170:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:32 (line 6)
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 176 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 176  LoadP  === 152 40 175  [[ 172 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 140 6 16 8 9  [[ 0 ]] 
 183  Phi  === 112 170 7  [[ 170 16 121 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 45 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
AFTER: INCREMENTAL_INLINE
   0  Root  === 0 70 88 99 110 131 161 179  |172  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 126 65 78 83 94 105 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 106 95 84 157 127 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 183 41 25 32 36 37 153 92 103 81 16 121 173 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 127 88 84 99 95 110 106 131 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 127 66 106 84 95 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 183  [[ 179 ]]  { N40:rawptr:BotPTR - - N183:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 143 84 95 106 172 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 116 106 95 84 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 121 176 173 153 92 103 81 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 186 51  [[ 45 46 79 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 132 119 84 95 106 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 119 127 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 79 90 101 171 ]]  #int:1
  79  ParsePredicate  === 45 78  [[ 80 89 ]]  #Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  80  IfFalse  === 79  [[ 84 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 80 6 81 8 9 (83 46 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  89  IfTrue  === 79  [[ 90 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  90  ParsePredicate  === 89 78  [[ 91 100 ]]  #Profiled_Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  91  IfFalse  === 90  [[ 95 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  92  MergeMem  === _ 1 7 40  [[ 95 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  94  ConI  === 0  [[ 95 ]]  #int:-66
  95  CallStaticJava  === 91 6 92 8 9 (94 46 32 1 36 1 1 1 1 ) [[ 96 ]] # Static uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  96  Proj  === 95  [[ 99 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  99  Halt  === 96 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 100  IfTrue  === 90  [[ 101 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 101  ParsePredicate  === 100 78  [[ 102 111 ]]  #Loop_Limit_Check  !jvms: loop_invariant::micro @ bci:2 (line 6)
 102  IfFalse  === 101  [[ 106 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 103  MergeMem  === _ 1 7 40  [[ 106 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
 105  ConI  === 0  [[ 106 ]]  #int:-146
 106  CallStaticJava  === 102 6 103 8 9 (105 46 32 1 36 1 1 1 1 ) [[ 107 ]] # Static uncommon_trap(reason='loop_limit_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
 107  Proj  === 106  [[ 110 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 110  Halt  === 107 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 111  IfTrue  === 101  [[ 112 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 112  Region  === 112 172 111  [[ 112 123 116 183 ]] #reducible  !jvms: loop_invariant::micro @ bci:2 (line 6)
 116  Phi  === 112 171 36  [[ 157 164 157 136 144 171 149 ]]  #int !jvms: loop_invariant::micro @ bci:2 (line 6)
 119  CmpP  === _ 46 47  [[ 120 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 120  Bool  === _ 119  [[ 123 ]] [ne] !jvms: loop_invariant::micro @ bci:4 (line 6)
 121  MergeMem  === _ 1 7 40 1 1 183  [[ 127 ]]  { N40:rawptr:BotPTR - - N183:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:4 (line 6)
 123  If  === 112 120  [[ 124 125 ]] P=0.999999, C=-1.000000 !jvms: loop_invariant::micro @ bci:4 (line 6)
 124  IfTrue  === 123  [[ 138 132 ]] #1 !jvms: loop_invariant::micro @ bci:4 (line 6)
 125  IfFalse  === 123  [[ 127 ]] #0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 126  ConI  === 0  [[ 127 ]]  #int:-10
 127  CallStaticJava  === 125 6 121 8 9 (126 1 1 1 1 1 1 1 1 1 47 ) [[ 128 ]] # Static uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:4 (line 6) !jvms: loop_invariant::micro @ bci:4 (line 6)
 128  Proj  === 127  [[ 131 ]] #0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 131  Halt  === 128 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 132  CastPP  === 124 46  [[ 169 134 134 169 172 168 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 136 149 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 136  CmpI  === _ 116 135  [[ 137 ]]  !jvms: loop_invariant::micro @ bci:5 (line 6)
 137  Bool  === _ 136  [[ 138 ]] [lt] !jvms: loop_invariant::micro @ bci:5 (line 6)
 138  If  === 124 137  [[ 139 140 ]] P=0.999026, C=211589.000000 !jvms: loop_invariant::micro @ bci:5 (line 6)
 139  IfTrue  === 138  [[ 151 143 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 140  IfFalse  === 138  [[ 179 ]] #0 !jvms: loop_invariant::micro @ bci:5 (line 6)
 143  SqrtD  === 139 32  [[ 146 ]]  !jvms: loop_invariant::micro @ bci:9 (line 7)
 144  ConvI2D  === _ 116  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 146 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 146  AddD  === _ 143 145  [[ 170 157 ]]  !jvms: loop_invariant::micro @ bci:27 (line 9)
 149  CmpU  === _ 116 135  [[ 150 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 150  Bool  === _ 149  [[ 151 ]] [lt] !jvms: loop_invariant::micro @ bci:28 (line 9)
 151  RangeCheck  === 139 150  [[ 152 155 ]] P=0.999999, C=-1.000000 !jvms: loop_invariant::micro @ bci:28 (line 9)
 152  IfTrue  === 151  [[ 176 164 170 172 ]] #1 !jvms: loop_invariant::micro @ bci:28 (line 9)
 153  MergeMem  === _ 1 7 40 1 1 183  [[ 157 ]]  { N40:rawptr:BotPTR - - N183:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 155  IfFalse  === 151  [[ 157 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 155 6 153 8 9 (156 132 32 1 116 1 1 1 1 132 116 146 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 168 ]]  #long:16
 164  CastII  === 152 116  [[ 165 ]]  #int:0..max-1:www range check dependency !jvms: loop_invariant::micro @ bci:28 (line 9)
 165  ConvI2L  === _ 164  [[ 167 ]]  #long:0..maxint-1:www !jvms: loop_invariant::micro @ bci:28 (line 9)
 166  ConI  === 0  [[ 167 ]]  #int:3
 167  LShiftL  === _ 165 166  [[ 169 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 168  AddP  === _ 132 169 162  [[ 170 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 169  AddP  === _ 132 132 167  [[ 168 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 170  StoreD  === 152 183 168 146  [[ 183 173 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !jvms: loop_invariant::micro @ bci:28 (line 9)
 171  AddI  === _ 116 78  [[ 116 172 ]]  !jvms: loop_invariant::micro @ bci:29 (line 6)
 172  SafePoint  === 152 1 173 1 1 176 132 32 1 171 1 1 1 1  [[ 112 0 ]]  SafePoint  !jvms: loop_invariant::micro @ bci:32 (line 6)
 173  MergeMem  === _ 1 7 40 1 1 170  [[ 172 ]]  { N40:rawptr:BotPTR - - N170:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:32 (line 6)
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 176 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 176  LoadP  === 152 40 175  [[ 172 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 140 6 16 8 9  [[ 0 ]] 
 183  Phi  === 112 170 7  [[ 170 16 121 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 45 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
AFTER: INCREMENTAL_BOXING_INLINE
   0  Root  === 0 70 88 99 110 131 161 179  |172  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 126 65 78 83 94 105 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 106 95 84 157 127 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 183 41 25 32 36 37 153 92 103 81 16 121 173 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 127 88 84 99 95 110 106 131 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 127 66 106 84 95 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 183  [[ 179 ]]  { N40:rawptr:BotPTR - - N183:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 143 84 95 106 172 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 116 106 95 84 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 121 176 173 153 92 103 81 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 186 51  [[ 45 46 79 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 132 119 84 95 106 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 119 127 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 79 90 101 171 ]]  #int:1
  79  ParsePredicate  === 45 78  [[ 80 89 ]]  #Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  80  IfFalse  === 79  [[ 84 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 80 6 81 8 9 (83 46 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  89  IfTrue  === 79  [[ 90 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  90  ParsePredicate  === 89 78  [[ 91 100 ]]  #Profiled_Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  91  IfFalse  === 90  [[ 95 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  92  MergeMem  === _ 1 7 40  [[ 95 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  94  ConI  === 0  [[ 95 ]]  #int:-66
  95  CallStaticJava  === 91 6 92 8 9 (94 46 32 1 36 1 1 1 1 ) [[ 96 ]] # Static uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  96  Proj  === 95  [[ 99 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  99  Halt  === 96 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 100  IfTrue  === 90  [[ 101 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 101  ParsePredicate  === 100 78  [[ 102 111 ]]  #Loop_Limit_Check  !jvms: loop_invariant::micro @ bci:2 (line 6)
 102  IfFalse  === 101  [[ 106 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 103  MergeMem  === _ 1 7 40  [[ 106 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
 105  ConI  === 0  [[ 106 ]]  #int:-146
 106  CallStaticJava  === 102 6 103 8 9 (105 46 32 1 36 1 1 1 1 ) [[ 107 ]] # Static uncommon_trap(reason='loop_limit_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
 107  Proj  === 106  [[ 110 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 110  Halt  === 107 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 111  IfTrue  === 101  [[ 112 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 112  Region  === 112 172 111  [[ 112 123 116 183 ]] #reducible  !jvms: loop_invariant::micro @ bci:2 (line 6)
 116  Phi  === 112 171 36  [[ 157 164 157 136 144 171 149 ]]  #int !jvms: loop_invariant::micro @ bci:2 (line 6)
 119  CmpP  === _ 46 47  [[ 120 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 120  Bool  === _ 119  [[ 123 ]] [ne] !jvms: loop_invariant::micro @ bci:4 (line 6)
 121  MergeMem  === _ 1 7 40 1 1 183  [[ 127 ]]  { N40:rawptr:BotPTR - - N183:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:4 (line 6)
 123  If  === 112 120  [[ 124 125 ]] P=0.999999, C=-1.000000 !jvms: loop_invariant::micro @ bci:4 (line 6)
 124  IfTrue  === 123  [[ 138 132 ]] #1 !jvms: loop_invariant::micro @ bci:4 (line 6)
 125  IfFalse  === 123  [[ 127 ]] #0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 126  ConI  === 0  [[ 127 ]]  #int:-10
 127  CallStaticJava  === 125 6 121 8 9 (126 1 1 1 1 1 1 1 1 1 47 ) [[ 128 ]] # Static uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:4 (line 6) !jvms: loop_invariant::micro @ bci:4 (line 6)
 128  Proj  === 127  [[ 131 ]] #0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 131  Halt  === 128 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 132  CastPP  === 124 46  [[ 169 134 134 169 172 168 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 136 149 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 136  CmpI  === _ 116 135  [[ 137 ]]  !jvms: loop_invariant::micro @ bci:5 (line 6)
 137  Bool  === _ 136  [[ 138 ]] [lt] !jvms: loop_invariant::micro @ bci:5 (line 6)
 138  If  === 124 137  [[ 139 140 ]] P=0.999026, C=211589.000000 !jvms: loop_invariant::micro @ bci:5 (line 6)
 139  IfTrue  === 138  [[ 151 143 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 140  IfFalse  === 138  [[ 179 ]] #0 !jvms: loop_invariant::micro @ bci:5 (line 6)
 143  SqrtD  === 139 32  [[ 146 ]]  !jvms: loop_invariant::micro @ bci:9 (line 7)
 144  ConvI2D  === _ 116  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 146 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 146  AddD  === _ 143 145  [[ 170 157 ]]  !jvms: loop_invariant::micro @ bci:27 (line 9)
 149  CmpU  === _ 116 135  [[ 150 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 150  Bool  === _ 149  [[ 151 ]] [lt] !jvms: loop_invariant::micro @ bci:28 (line 9)
 151  RangeCheck  === 139 150  [[ 152 155 ]] P=0.999999, C=-1.000000 !jvms: loop_invariant::micro @ bci:28 (line 9)
 152  IfTrue  === 151  [[ 176 164 170 172 ]] #1 !jvms: loop_invariant::micro @ bci:28 (line 9)
 153  MergeMem  === _ 1 7 40 1 1 183  [[ 157 ]]  { N40:rawptr:BotPTR - - N183:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 155  IfFalse  === 151  [[ 157 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 155 6 153 8 9 (156 132 32 1 116 1 1 1 1 132 116 146 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 168 ]]  #long:16
 164  CastII  === 152 116  [[ 165 ]]  #int:0..max-1:www range check dependency !jvms: loop_invariant::micro @ bci:28 (line 9)
 165  ConvI2L  === _ 164  [[ 167 ]]  #long:0..maxint-1:www !jvms: loop_invariant::micro @ bci:28 (line 9)
 166  ConI  === 0  [[ 167 ]]  #int:3
 167  LShiftL  === _ 165 166  [[ 169 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 168  AddP  === _ 132 169 162  [[ 170 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 169  AddP  === _ 132 132 167  [[ 168 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 170  StoreD  === 152 183 168 146  [[ 183 173 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !jvms: loop_invariant::micro @ bci:28 (line 9)
 171  AddI  === _ 116 78  [[ 116 172 ]]  !jvms: loop_invariant::micro @ bci:29 (line 6)
 172  SafePoint  === 152 1 173 1 1 176 132 32 1 171 1 1 1 1  [[ 112 0 ]]  SafePoint  !jvms: loop_invariant::micro @ bci:32 (line 6)
 173  MergeMem  === _ 1 7 40 1 1 170  [[ 172 ]]  { N40:rawptr:BotPTR - - N170:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:32 (line 6)
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 176 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 176  LoadP  === 152 40 175  [[ 172 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 140 6 16 8 9  [[ 0 ]] 
 183  Phi  === 112 170 7  [[ 170 16 121 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 45 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
AFTER: BEFORE_ITER_GVN
   0  Root  === 0 70 88 99 110 131 161 179  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 126 65 78 83 94 105 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 106 95 84 157 127 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 183 41 25 32 36 37 153 92 103 81 16 121 173 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 127 88 84 99 95 110 106 131 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 127 66 106 84 95 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 183  [[ 179 ]]  { N40:rawptr:BotPTR - - N183:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 143 84 95 106 172 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 116 106 95 84 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 121 176 173 153 92 103 81 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 186 51  [[ 45 46 79 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 132 119 84 95 106 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 119 127 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 79 90 101 171 ]]  #int:1
  79  ParsePredicate  === 45 78  [[ 80 89 ]]  #Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  80  IfFalse  === 79  [[ 84 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 80 6 81 8 9 (83 46 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  89  IfTrue  === 79  [[ 90 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  90  ParsePredicate  === 89 78  [[ 91 100 ]]  #Profiled_Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  91  IfFalse  === 90  [[ 95 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  92  MergeMem  === _ 1 7 40  [[ 95 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  94  ConI  === 0  [[ 95 ]]  #int:-66
  95  CallStaticJava  === 91 6 92 8 9 (94 46 32 1 36 1 1 1 1 ) [[ 96 ]] # Static uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  96  Proj  === 95  [[ 99 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  99  Halt  === 96 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 100  IfTrue  === 90  [[ 101 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 101  ParsePredicate  === 100 78  [[ 102 111 ]]  #Loop_Limit_Check  !jvms: loop_invariant::micro @ bci:2 (line 6)
 102  IfFalse  === 101  [[ 106 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 103  MergeMem  === _ 1 7 40  [[ 106 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
 105  ConI  === 0  [[ 106 ]]  #int:-146
 106  CallStaticJava  === 102 6 103 8 9 (105 46 32 1 36 1 1 1 1 ) [[ 107 ]] # Static uncommon_trap(reason='loop_limit_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
 107  Proj  === 106  [[ 110 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 110  Halt  === 107 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 111  IfTrue  === 101  [[ 112 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 112  Region  === 112 172 111  [[ 112 123 116 183 ]] #reducible  !jvms: loop_invariant::micro @ bci:2 (line 6)
 116  Phi  === 112 171 36  [[ 157 164 157 136 144 171 149 ]]  #int !jvms: loop_invariant::micro @ bci:2 (line 6)
 119  CmpP  === _ 46 47  [[ 120 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 120  Bool  === _ 119  [[ 123 ]] [ne] !jvms: loop_invariant::micro @ bci:4 (line 6)
 121  MergeMem  === _ 1 7 40 1 1 183  [[ 127 ]]  { N40:rawptr:BotPTR - - N183:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:4 (line 6)
 123  If  === 112 120  [[ 124 125 ]] P=0.999999, C=-1.000000 !jvms: loop_invariant::micro @ bci:4 (line 6)
 124  IfTrue  === 123  [[ 138 132 ]] #1 !jvms: loop_invariant::micro @ bci:4 (line 6)
 125  IfFalse  === 123  [[ 127 ]] #0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 126  ConI  === 0  [[ 127 ]]  #int:-10
 127  CallStaticJava  === 125 6 121 8 9 (126 1 1 1 1 1 1 1 1 1 47 ) [[ 128 ]] # Static uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:4 (line 6) !jvms: loop_invariant::micro @ bci:4 (line 6)
 128  Proj  === 127  [[ 131 ]] #0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 131  Halt  === 128 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 132  CastPP  === 124 46  [[ 169 134 134 169 172 168 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 136 149 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 136  CmpI  === _ 116 135  [[ 137 ]]  !jvms: loop_invariant::micro @ bci:5 (line 6)
 137  Bool  === _ 136  [[ 138 ]] [lt] !jvms: loop_invariant::micro @ bci:5 (line 6)
 138  If  === 124 137  [[ 139 140 ]] P=0.999026, C=211589.000000 !jvms: loop_invariant::micro @ bci:5 (line 6)
 139  IfTrue  === 138  [[ 151 143 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 140  IfFalse  === 138  [[ 179 ]] #0 !jvms: loop_invariant::micro @ bci:5 (line 6)
 143  SqrtD  === 139 32  [[ 146 ]]  !jvms: loop_invariant::micro @ bci:9 (line 7)
 144  ConvI2D  === _ 116  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 146 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 146  AddD  === _ 143 145  [[ 170 157 ]]  !jvms: loop_invariant::micro @ bci:27 (line 9)
 149  CmpU  === _ 116 135  [[ 150 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 150  Bool  === _ 149  [[ 151 ]] [lt] !jvms: loop_invariant::micro @ bci:28 (line 9)
 151  RangeCheck  === 139 150  [[ 152 155 ]] P=0.999999, C=-1.000000 !jvms: loop_invariant::micro @ bci:28 (line 9)
 152  IfTrue  === 151  [[ 176 164 170 172 ]] #1 !jvms: loop_invariant::micro @ bci:28 (line 9)
 153  MergeMem  === _ 1 7 40 1 1 183  [[ 157 ]]  { N40:rawptr:BotPTR - - N183:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 155  IfFalse  === 151  [[ 157 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 155 6 153 8 9 (156 132 32 1 116 1 1 1 1 132 116 146 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 168 ]]  #long:16
 164  CastII  === 152 116  [[ 165 ]]  #int:0..max-1:www range check dependency !jvms: loop_invariant::micro @ bci:28 (line 9)
 165  ConvI2L  === _ 164  [[ 167 ]]  #long:0..maxint-1:www !jvms: loop_invariant::micro @ bci:28 (line 9)
 166  ConI  === 0  [[ 167 ]]  #int:3
 167  LShiftL  === _ 165 166  [[ 169 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 168  AddP  === _ 132 169 162  [[ 170 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 169  AddP  === _ 132 132 167  [[ 168 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 170  StoreD  === 152 183 168 146  [[ 183 173 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !jvms: loop_invariant::micro @ bci:28 (line 9)
 171  AddI  === _ 116 78  [[ 116 172 ]]  !jvms: loop_invariant::micro @ bci:29 (line 6)
 172  SafePoint  === 152 1 173 1 1 176 132 32 1 171 1 1 1 1  [[ 112 ]]  SafePoint  !jvms: loop_invariant::micro @ bci:32 (line 6)
 173  MergeMem  === _ 1 7 40 1 1 170  [[ 172 ]]  { N40:rawptr:BotPTR - - N170:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:32 (line 6)
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 176 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 176  LoadP  === 152 40 175  [[ 172 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 140 6 16 8 9  [[ 0 ]] 
 183  Phi  === 112 170 7  [[ 170 16 121 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 45 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
AFTER: AFTER_ITER_GVN
   0  Root  === 0 70 88 99 110 131 161 179  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 126 65 78 83 94 105 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 106 95 84 157 127 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 183 41 25 32 36 37 153 92 103 81 16 121 173 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 127 88 84 99 95 110 106 131 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 127 66 106 84 95 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 183  [[ 179 ]]  { N40:rawptr:BotPTR - - N183:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 143 84 95 106 172 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 116 106 95 84 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 121 176 173 153 92 103 81 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 186 51  [[ 45 46 79 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 132 119 84 95 106 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 119 127 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 79 90 101 171 ]]  #int:1
  79  ParsePredicate  === 45 78  [[ 80 89 ]]  #Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  80  IfFalse  === 79  [[ 84 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 80 6 81 8 9 (83 46 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  89  IfTrue  === 79  [[ 90 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  90  ParsePredicate  === 89 78  [[ 91 100 ]]  #Profiled_Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  91  IfFalse  === 90  [[ 95 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  92  MergeMem  === _ 1 7 40  [[ 95 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  94  ConI  === 0  [[ 95 ]]  #int:-66
  95  CallStaticJava  === 91 6 92 8 9 (94 46 32 1 36 1 1 1 1 ) [[ 96 ]] # Static uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  96  Proj  === 95  [[ 99 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  99  Halt  === 96 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 100  IfTrue  === 90  [[ 101 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 101  ParsePredicate  === 100 78  [[ 102 111 ]]  #Loop_Limit_Check  !jvms: loop_invariant::micro @ bci:2 (line 6)
 102  IfFalse  === 101  [[ 106 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 103  MergeMem  === _ 1 7 40  [[ 106 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
 105  ConI  === 0  [[ 106 ]]  #int:-146
 106  CallStaticJava  === 102 6 103 8 9 (105 46 32 1 36 1 1 1 1 ) [[ 107 ]] # Static uncommon_trap(reason='loop_limit_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
 107  Proj  === 106  [[ 110 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 110  Halt  === 107 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 111  IfTrue  === 101  [[ 112 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 112  Region  === 112 172 111  [[ 112 123 116 183 ]] #reducible  !jvms: loop_invariant::micro @ bci:2 (line 6)
 116  Phi  === 112 171 36  [[ 157 164 157 136 144 171 149 ]]  #int !jvms: loop_invariant::micro @ bci:2 (line 6)
 119  CmpP  === _ 46 47  [[ 120 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 120  Bool  === _ 119  [[ 123 ]] [ne] !jvms: loop_invariant::micro @ bci:4 (line 6)
 121  MergeMem  === _ 1 7 40 1 1 183  [[ 127 ]]  { N40:rawptr:BotPTR - - N183:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:4 (line 6)
 123  If  === 112 120  [[ 124 125 ]] P=0.999999, C=-1.000000 !jvms: loop_invariant::micro @ bci:4 (line 6)
 124  IfTrue  === 123  [[ 138 132 ]] #1 !jvms: loop_invariant::micro @ bci:4 (line 6)
 125  IfFalse  === 123  [[ 127 ]] #0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 126  ConI  === 0  [[ 127 ]]  #int:-10
 127  CallStaticJava  === 125 6 121 8 9 (126 1 1 1 1 1 1 1 1 1 47 ) [[ 128 ]] # Static uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:4 (line 6) !jvms: loop_invariant::micro @ bci:4 (line 6)
 128  Proj  === 127  [[ 131 ]] #0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 131  Halt  === 128 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 132  CastPP  === 124 46  [[ 169 134 134 169 172 168 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 136 149 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 136  CmpI  === _ 116 135  [[ 137 ]]  !jvms: loop_invariant::micro @ bci:5 (line 6)
 137  Bool  === _ 136  [[ 138 ]] [lt] !jvms: loop_invariant::micro @ bci:5 (line 6)
 138  If  === 124 137  [[ 139 140 ]] P=0.999026, C=211589.000000 !jvms: loop_invariant::micro @ bci:5 (line 6)
 139  IfTrue  === 138  [[ 151 143 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 140  IfFalse  === 138  [[ 179 ]] #0 !jvms: loop_invariant::micro @ bci:5 (line 6)
 143  SqrtD  === 139 32  [[ 146 ]]  !jvms: loop_invariant::micro @ bci:9 (line 7)
 144  ConvI2D  === _ 116  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 146 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 146  AddD  === _ 143 145  [[ 170 157 ]]  !jvms: loop_invariant::micro @ bci:27 (line 9)
 149  CmpU  === _ 116 135  [[ 150 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 150  Bool  === _ 149  [[ 151 ]] [lt] !jvms: loop_invariant::micro @ bci:28 (line 9)
 151  RangeCheck  === 139 150  [[ 152 155 ]] P=0.999999, C=-1.000000 !jvms: loop_invariant::micro @ bci:28 (line 9)
 152  IfTrue  === 151  [[ 176 164 170 172 ]] #1 !jvms: loop_invariant::micro @ bci:28 (line 9)
 153  MergeMem  === _ 1 7 40 1 1 183  [[ 157 ]]  { N40:rawptr:BotPTR - - N183:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 155  IfFalse  === 151  [[ 157 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 155 6 153 8 9 (156 132 32 1 116 1 1 1 1 132 116 146 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 168 ]]  #long:16
 164  CastII  === 152 116  [[ 165 ]]  #int:0..max-1:www range check dependency !jvms: loop_invariant::micro @ bci:28 (line 9)
 165  ConvI2L  === _ 164  [[ 167 ]]  #long:0..maxint-1:www !jvms: loop_invariant::micro @ bci:28 (line 9)
 166  ConI  === 0  [[ 167 ]]  #int:3
 167  LShiftL  === _ 165 166  [[ 169 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 168  AddP  === _ 132 169 162  [[ 170 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 169  AddP  === _ 132 132 167  [[ 168 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 170  StoreD  === 152 183 168 146  [[ 183 173 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !jvms: loop_invariant::micro @ bci:28 (line 9)
 171  AddI  === _ 116 78  [[ 116 172 ]]  !jvms: loop_invariant::micro @ bci:29 (line 6)
 172  SafePoint  === 152 1 173 1 1 176 132 32 1 171 1 1 1 1  [[ 112 ]]  SafePoint  !jvms: loop_invariant::micro @ bci:32 (line 6)
 173  MergeMem  === _ 1 7 40 1 1 170  [[ 172 ]]  { N40:rawptr:BotPTR - - N170:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:32 (line 6)
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 176 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 176  LoadP  === 152 40 175  [[ 172 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 140 6 16 8 9  [[ 0 ]] 
 183  Phi  === 112 170 7  [[ 170 16 121 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 45 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
AFTER: BEFORE_BEAUTIFY_LOOPS
   0  Root  === 0 70 88 99 110 131 161 179  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 126 65 78 83 94 105 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 106 95 84 157 127 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 183 41 25 32 36 37 153 92 103 81 16 121 173 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 127 88 84 99 95 110 106 131 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 127 66 106 84 95 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 183  [[ 179 ]]  { N40:rawptr:BotPTR - - N183:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 143 84 95 106 172 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 116 106 95 84 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 121 176 173 153 92 103 81 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 186 51  [[ 45 46 79 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 132 119 84 95 106 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 119 127 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 79 90 101 171 ]]  #int:1
  79  ParsePredicate  === 45 78  [[ 80 89 ]]  #Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  80  IfFalse  === 79  [[ 84 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 80 6 81 8 9 (83 46 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  89  IfTrue  === 79  [[ 90 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  90  ParsePredicate  === 89 78  [[ 91 100 ]]  #Profiled_Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  91  IfFalse  === 90  [[ 95 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  92  MergeMem  === _ 1 7 40  [[ 95 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  94  ConI  === 0  [[ 95 ]]  #int:-66
  95  CallStaticJava  === 91 6 92 8 9 (94 46 32 1 36 1 1 1 1 ) [[ 96 ]] # Static uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  96  Proj  === 95  [[ 99 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  99  Halt  === 96 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 100  IfTrue  === 90  [[ 101 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 101  ParsePredicate  === 100 78  [[ 102 111 ]]  #Loop_Limit_Check  !jvms: loop_invariant::micro @ bci:2 (line 6)
 102  IfFalse  === 101  [[ 106 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 103  MergeMem  === _ 1 7 40  [[ 106 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
 105  ConI  === 0  [[ 106 ]]  #int:-146
 106  CallStaticJava  === 102 6 103 8 9 (105 46 32 1 36 1 1 1 1 ) [[ 107 ]] # Static uncommon_trap(reason='loop_limit_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
 107  Proj  === 106  [[ 110 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 110  Halt  === 107 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 111  IfTrue  === 101  [[ 112 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 112  Region  === 112 172 111  [[ 112 123 116 183 ]] #reducible  !jvms: loop_invariant::micro @ bci:2 (line 6)
 116  Phi  === 112 171 36  [[ 157 164 157 136 144 171 149 ]]  #int !jvms: loop_invariant::micro @ bci:2 (line 6)
 119  CmpP  === _ 46 47  [[ 120 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 120  Bool  === _ 119  [[ 123 ]] [ne] !jvms: loop_invariant::micro @ bci:4 (line 6)
 121  MergeMem  === _ 1 7 40 1 1 183  [[ 127 ]]  { N40:rawptr:BotPTR - - N183:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:4 (line 6)
 123  If  === 112 120  [[ 124 125 ]] P=0.999999, C=-1.000000 !jvms: loop_invariant::micro @ bci:4 (line 6)
 124  IfTrue  === 123  [[ 138 132 ]] #1 !jvms: loop_invariant::micro @ bci:4 (line 6)
 125  IfFalse  === 123  [[ 127 ]] #0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 126  ConI  === 0  [[ 127 ]]  #int:-10
 127  CallStaticJava  === 125 6 121 8 9 (126 1 1 1 1 1 1 1 1 1 47 ) [[ 128 ]] # Static uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:4 (line 6) !jvms: loop_invariant::micro @ bci:4 (line 6)
 128  Proj  === 127  [[ 131 ]] #0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 131  Halt  === 128 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 132  CastPP  === 124 46  [[ 169 134 134 169 172 168 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 136 149 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 136  CmpI  === _ 116 135  [[ 137 ]]  !jvms: loop_invariant::micro @ bci:5 (line 6)
 137  Bool  === _ 136  [[ 138 ]] [lt] !jvms: loop_invariant::micro @ bci:5 (line 6)
 138  If  === 124 137  [[ 139 140 ]] P=0.999026, C=211589.000000 !jvms: loop_invariant::micro @ bci:5 (line 6)
 139  IfTrue  === 138  [[ 151 143 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 140  IfFalse  === 138  [[ 179 ]] #0 !jvms: loop_invariant::micro @ bci:5 (line 6)
 143  SqrtD  === 139 32  [[ 146 ]]  !jvms: loop_invariant::micro @ bci:9 (line 7)
 144  ConvI2D  === _ 116  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 146 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 146  AddD  === _ 143 145  [[ 170 157 ]]  !jvms: loop_invariant::micro @ bci:27 (line 9)
 149  CmpU  === _ 116 135  [[ 150 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 150  Bool  === _ 149  [[ 151 ]] [lt] !jvms: loop_invariant::micro @ bci:28 (line 9)
 151  RangeCheck  === 139 150  [[ 152 155 ]] P=0.999999, C=-1.000000 !jvms: loop_invariant::micro @ bci:28 (line 9)
 152  IfTrue  === 151  [[ 176 164 170 172 ]] #1 !jvms: loop_invariant::micro @ bci:28 (line 9)
 153  MergeMem  === _ 1 7 40 1 1 183  [[ 157 ]]  { N40:rawptr:BotPTR - - N183:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 155  IfFalse  === 151  [[ 157 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 155 6 153 8 9 (156 132 32 1 116 1 1 1 1 132 116 146 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 168 ]]  #long:16
 164  CastII  === 152 116  [[ 165 ]]  #int:0..max-1:www range check dependency !jvms: loop_invariant::micro @ bci:28 (line 9)
 165  ConvI2L  === _ 164  [[ 167 ]]  #long:0..maxint-1:www !jvms: loop_invariant::micro @ bci:28 (line 9)
 166  ConI  === 0  [[ 167 ]]  #int:3
 167  LShiftL  === _ 165 166  [[ 169 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 168  AddP  === _ 132 169 162  [[ 170 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 169  AddP  === _ 132 132 167  [[ 168 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 170  StoreD  === 152 183 168 146  [[ 183 173 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !jvms: loop_invariant::micro @ bci:28 (line 9)
 171  AddI  === _ 116 78  [[ 116 172 ]]  !jvms: loop_invariant::micro @ bci:29 (line 6)
 172  SafePoint  === 152 1 173 1 1 176 132 32 1 171 1 1 1 1  [[ 112 ]]  SafePoint  !jvms: loop_invariant::micro @ bci:32 (line 6)
 173  MergeMem  === _ 1 7 40 1 1 170  [[ 172 ]]  { N40:rawptr:BotPTR - - N170:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:32 (line 6)
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 176 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 176  LoadP  === 152 40 175  [[ 172 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 140 6 16 8 9  [[ 0 ]] 
 183  Phi  === 112 170 7  [[ 170 16 121 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 45 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
AFTER: BEFORE_LOOP_PREDICATION_IC
   0  Root  === 0 70 88 99 110 131 161 179  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 126 65 78 83 94 105 190 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 106 95 84 157 127 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 183 41 25 32 36 37 153 92 103 81 16 121 173 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 127 88 84 99 95 110 106 131 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 127 66 106 84 95 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 183  [[ 179 ]]  { N40:rawptr:BotPTR - - N183:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 143 84 95 106 172 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 116 106 95 84 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 121 176 173 153 92 103 81 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 186 51  [[ 45 46 79 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 132 119 84 95 106 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 119 127 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 79 90 101 171 ]]  #int:1
  79  ParsePredicate  === 45 78  [[ 80 89 ]]  #Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  80  IfFalse  === 79  [[ 84 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 80 6 81 8 9 (83 46 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  89  IfTrue  === 79  [[ 90 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  90  ParsePredicate  === 89 78  [[ 91 100 ]]  #Profiled_Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  91  IfFalse  === 90  [[ 95 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  92  MergeMem  === _ 1 7 40  [[ 95 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  94  ConI  === 0  [[ 95 ]]  #int:-66
  95  CallStaticJava  === 91 6 92 8 9 (94 46 32 1 36 1 1 1 1 ) [[ 96 ]] # Static uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  96  Proj  === 95  [[ 99 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  99  Halt  === 96 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 100  IfTrue  === 90  [[ 101 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 101  ParsePredicate  === 100 78  [[ 102 111 ]]  #Loop_Limit_Check  !jvms: loop_invariant::micro @ bci:2 (line 6)
 102  IfFalse  === 101  [[ 106 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 103  MergeMem  === _ 1 7 40  [[ 106 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
 105  ConI  === 0  [[ 106 ]]  #int:-146
 106  CallStaticJava  === 102 6 103 8 9 (105 46 32 1 36 1 1 1 1 ) [[ 107 ]] # Static uncommon_trap(reason='loop_limit_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
 107  Proj  === 106  [[ 110 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 110  Halt  === 107 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 111  IfTrue  === 101  [[ 189 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 116  Phi  === 189 36 171  [[ 157 164 157 136 144 171 149 ]]  #int !jvms: loop_invariant::micro @ bci:2 (line 6)
 119  CmpP  === _ 46 47  [[ 120 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 120  Bool  === _ 119  [[ 123 ]] [ne] !jvms: loop_invariant::micro @ bci:4 (line 6)
 121  MergeMem  === _ 1 7 40 1 1 183  [[ 127 ]]  { N40:rawptr:BotPTR - - N183:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:4 (line 6)
 123  If  === 189 120  [[ 124 125 ]] P=0.999999, C=-1.000000 !jvms: loop_invariant::micro @ bci:4 (line 6)
 124  IfTrue  === 123  [[ 138 132 ]] #1 !jvms: loop_invariant::micro @ bci:4 (line 6)
 125  IfFalse  === 123  [[ 127 ]] #0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 126  ConI  === 0  [[ 127 ]]  #int:-10
 127  CallStaticJava  === 125 6 121 8 9 (126 1 1 1 1 1 1 1 1 1 47 ) [[ 128 ]] # Static uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:4 (line 6) !jvms: loop_invariant::micro @ bci:4 (line 6)
 128  Proj  === 127  [[ 131 ]] #0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 131  Halt  === 128 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 132  CastPP  === 124 46  [[ 169 134 134 169 172 168 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 136 149 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 136  CmpI  === _ 116 135  [[ 137 ]]  !jvms: loop_invariant::micro @ bci:5 (line 6)
 137  Bool  === _ 136  [[ 138 ]] [lt] !jvms: loop_invariant::micro @ bci:5 (line 6)
 138  If  === 124 137  [[ 139 140 ]] P=0.999026, C=211589.000000 !jvms: loop_invariant::micro @ bci:5 (line 6)
 139  IfTrue  === 138  [[ 151 143 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 140  IfFalse  === 138  [[ 179 ]] #0 !jvms: loop_invariant::micro @ bci:5 (line 6)
 143  SqrtD  === 139 32  [[ 146 ]]  !jvms: loop_invariant::micro @ bci:9 (line 7)
 144  ConvI2D  === _ 116  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 146 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 146  AddD  === _ 143 145  [[ 170 157 ]]  !jvms: loop_invariant::micro @ bci:27 (line 9)
 149  CmpU  === _ 116 135  [[ 150 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 150  Bool  === _ 149  [[ 151 ]] [lt] !jvms: loop_invariant::micro @ bci:28 (line 9)
 151  RangeCheck  === 139 150  [[ 152 155 ]] P=0.999999, C=-1.000000 !jvms: loop_invariant::micro @ bci:28 (line 9)
 152  IfTrue  === 151  [[ 176 164 170 172 ]] #1 !jvms: loop_invariant::micro @ bci:28 (line 9)
 153  MergeMem  === _ 1 7 40 1 1 183  [[ 157 ]]  { N40:rawptr:BotPTR - - N183:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 155  IfFalse  === 151  [[ 157 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 155 6 153 8 9 (156 132 32 1 116 1 1 1 1 132 116 146 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 168 ]]  #long:16
 164  CastII  === 152 116  [[ 165 ]]  #int:0..max-1:www range check dependency !jvms: loop_invariant::micro @ bci:28 (line 9)
 165  ConvI2L  === _ 164  [[ 167 ]]  #long:0..maxint-1:www !jvms: loop_invariant::micro @ bci:28 (line 9)
 166  ConI  === 0  [[ 167 ]]  #int:3
 167  LShiftL  === _ 165 166  [[ 169 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 168  AddP  === _ 132 169 162  [[ 170 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 169  AddP  === _ 132 132 167  [[ 168 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 170  StoreD  === 152 183 168 146  [[ 173 183 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !jvms: loop_invariant::micro @ bci:28 (line 9)
 171  AddI  === _ 116 78  [[ 172 116 ]]  !jvms: loop_invariant::micro @ bci:29 (line 6)
 172  SafePoint  === 152 1 173 1 1 176 132 32 1 171 1 1 1 1  [[ 189 ]]  SafePoint  !jvms: loop_invariant::micro @ bci:32 (line 6)
 173  MergeMem  === _ 1 7 40 1 1 170  [[ 172 ]]  { N40:rawptr:BotPTR - - N170:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:32 (line 6)
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 176 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 176  LoadP  === 152 40 175  [[ 172 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 140 6 16 8 9  [[ 0 ]] 
 183  Phi  === 189 7 170  [[ 170 16 121 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 45 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 189  Loop  === 189 111 172  [[ 189 183 116 123 ]] inner  !orig=[112] !jvms: loop_invariant::micro @ bci:2 (line 6)
AFTER: AFTER_LOOP_PREDICATION_IC
   0  Root  === 0 70 88 99 110 131 161 179  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 126 65 78 83 94 105 190 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 106 95 84 157 127 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 183 41 25 32 36 37 153 92 103 81 16 121 173 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 127 88 84 99 95 110 106 131 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 127 66 106 84 95 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 183  [[ 179 ]]  { N40:rawptr:BotPTR - - N183:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 143 84 95 106 172 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 116 106 95 84 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 121 176 173 153 92 103 81 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 186 51  [[ 45 46 193 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 132 119 84 95 106 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 119 127 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 79 90 101 171 123 ]]  #int:1
  79  ParsePredicate  === 194 78  [[ 192 89 ]]  #Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 191 6 81 8 9 (83 46 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  89  IfTrue  === 79  [[ 90 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  90  ParsePredicate  === 89 78  [[ 91 100 ]]  #Profiled_Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  91  IfFalse  === 90  [[ 95 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  92  MergeMem  === _ 1 7 40  [[ 95 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  94  ConI  === 0  [[ 95 ]]  #int:-66
  95  CallStaticJava  === 91 6 92 8 9 (94 46 32 1 36 1 1 1 1 ) [[ 96 ]] # Static uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  96  Proj  === 95  [[ 99 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  99  Halt  === 96 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 100  IfTrue  === 90  [[ 101 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 101  ParsePredicate  === 100 78  [[ 102 111 ]]  #Loop_Limit_Check  !jvms: loop_invariant::micro @ bci:2 (line 6)
 102  IfFalse  === 101  [[ 106 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 103  MergeMem  === _ 1 7 40  [[ 106 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
 105  ConI  === 0  [[ 106 ]]  #int:-146
 106  CallStaticJava  === 102 6 103 8 9 (105 46 32 1 36 1 1 1 1 ) [[ 107 ]] # Static uncommon_trap(reason='loop_limit_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
 107  Proj  === 106  [[ 110 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 110  Halt  === 107 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 111  IfTrue  === 101  [[ 189 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 116  Phi  === 189 36 171  [[ 157 164 157 136 144 171 149 ]]  #int !jvms: loop_invariant::micro @ bci:2 (line 6)
 119  CmpP  === _ 46 47  [[ 120 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 120  Bool  === _ 119  [[ 193 ]] [ne] !jvms: loop_invariant::micro @ bci:4 (line 6)
 121  MergeMem  === _ 1 7 40 1 1 183  [[ 127 ]]  { N40:rawptr:BotPTR - - N183:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:4 (line 6)
 123  If  === 189 78  [[ 124 125 ]] P=0.999999, C=-1.000000 !jvms: loop_invariant::micro @ bci:4 (line 6)
 124  IfTrue  === 123  [[ 138 ]] #1 !jvms: loop_invariant::micro @ bci:4 (line 6)
 125  IfFalse  === 123  [[ 127 ]] #0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 126  ConI  === 0  [[ 127 ]]  #int:-10
 127  CallStaticJava  === 125 6 121 8 9 (126 1 1 1 1 1 1 1 1 1 47 ) [[ 128 ]] # Static uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:4 (line 6) !jvms: loop_invariant::micro @ bci:4 (line 6)
 128  Proj  === 127  [[ 131 ]] #0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 131  Halt  === 128 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 132  CastPP  === 194 46  [[ 169 134 134 169 172 168 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 136 149 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 136  CmpI  === _ 116 135  [[ 137 ]]  !jvms: loop_invariant::micro @ bci:5 (line 6)
 137  Bool  === _ 136  [[ 138 ]] [lt] !jvms: loop_invariant::micro @ bci:5 (line 6)
 138  If  === 124 137  [[ 139 140 ]] P=0.999026, C=211589.000000 !jvms: loop_invariant::micro @ bci:5 (line 6)
 139  IfTrue  === 138  [[ 151 143 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 140  IfFalse  === 138  [[ 179 ]] #0 !jvms: loop_invariant::micro @ bci:5 (line 6)
 143  SqrtD  === 139 32  [[ 146 ]]  !jvms: loop_invariant::micro @ bci:9 (line 7)
 144  ConvI2D  === _ 116  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 146 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 146  AddD  === _ 143 145  [[ 170 157 ]]  !jvms: loop_invariant::micro @ bci:27 (line 9)
 149  CmpU  === _ 116 135  [[ 150 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 150  Bool  === _ 149  [[ 151 ]] [lt] !jvms: loop_invariant::micro @ bci:28 (line 9)
 151  RangeCheck  === 139 150  [[ 152 155 ]] P=0.999999, C=-1.000000 !jvms: loop_invariant::micro @ bci:28 (line 9)
 152  IfTrue  === 151  [[ 176 164 170 172 ]] #1 !jvms: loop_invariant::micro @ bci:28 (line 9)
 153  MergeMem  === _ 1 7 40 1 1 183  [[ 157 ]]  { N40:rawptr:BotPTR - - N183:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 155  IfFalse  === 151  [[ 157 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 155 6 153 8 9 (156 132 32 1 116 1 1 1 1 132 116 146 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 168 ]]  #long:16
 164  CastII  === 152 116  [[ 165 ]]  #int:0..max-1:www range check dependency !jvms: loop_invariant::micro @ bci:28 (line 9)
 165  ConvI2L  === _ 164  [[ 167 ]]  #long:0..maxint-1:www !jvms: loop_invariant::micro @ bci:28 (line 9)
 166  ConI  === 0  [[ 167 ]]  #int:3
 167  LShiftL  === _ 165 166  [[ 169 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 168  AddP  === _ 132 169 162  [[ 170 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 169  AddP  === _ 132 132 167  [[ 168 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 170  StoreD  === 152 183 168 146  [[ 173 183 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !jvms: loop_invariant::micro @ bci:28 (line 9)
 171  AddI  === _ 116 78  [[ 172 116 ]]  !jvms: loop_invariant::micro @ bci:29 (line 6)
 172  SafePoint  === 152 1 173 1 1 176 132 32 1 171 1 1 1 1  [[ 189 ]]  SafePoint  !jvms: loop_invariant::micro @ bci:32 (line 6)
 173  MergeMem  === _ 1 7 40 1 1 170  [[ 172 ]]  { N40:rawptr:BotPTR - - N170:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:32 (line 6)
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 176 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 176  LoadP  === 152 40 175  [[ 172 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 140 6 16 8 9  [[ 0 ]] 
 183  Phi  === 189 7 170  [[ 170 16 121 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 45 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 189  Loop  === 189 111 172  [[ 189 183 116 123 ]] inner  !orig=[112] !jvms: loop_invariant::micro @ bci:2 (line 6)
 191  Region  === 191 192 195  [[ 191 84 ]]  !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 192  IfFalse  === 79  [[ 191 ]] #0 !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 193  If  === 45 120  [[ 194 195 ]] P=0.999999, C=-1.000000
 194  IfTrue  === 193  [[ 79 132 ]] #1
 195  IfFalse  === 193  [[ 191 ]] #0
AFTER: BEFORE_ITER_GVN
   0  Root  === 0 70 88 99 110 131 161 179  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 126 65 78 83 94 105 190 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 106 95 84 157 127 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 183 41 25 32 36 37 153 92 103 81 16 121 173 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 127 88 84 99 95 110 106 131 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 127 66 106 84 95 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 183  [[ 179 ]]  { N40:rawptr:BotPTR - - N183:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 143 84 95 106 172 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 116 106 95 84 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 121 176 173 153 92 103 81 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 186 51  [[ 45 46 193 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 132 119 84 95 106 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 119 127 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 79 90 101 171 123 ]]  #int:1
  79  ParsePredicate  === 194 78  [[ 192 89 ]]  #Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 191 6 81 8 9 (83 46 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  89  IfTrue  === 79  [[ 90 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  90  ParsePredicate  === 89 78  [[ 91 100 ]]  #Profiled_Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  91  IfFalse  === 90  [[ 95 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  92  MergeMem  === _ 1 7 40  [[ 95 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  94  ConI  === 0  [[ 95 ]]  #int:-66
  95  CallStaticJava  === 91 6 92 8 9 (94 46 32 1 36 1 1 1 1 ) [[ 96 ]] # Static uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  96  Proj  === 95  [[ 99 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  99  Halt  === 96 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 100  IfTrue  === 90  [[ 101 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 101  ParsePredicate  === 100 78  [[ 102 111 ]]  #Loop_Limit_Check  !jvms: loop_invariant::micro @ bci:2 (line 6)
 102  IfFalse  === 101  [[ 106 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 103  MergeMem  === _ 1 7 40  [[ 106 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
 105  ConI  === 0  [[ 106 ]]  #int:-146
 106  CallStaticJava  === 102 6 103 8 9 (105 46 32 1 36 1 1 1 1 ) [[ 107 ]] # Static uncommon_trap(reason='loop_limit_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
 107  Proj  === 106  [[ 110 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 110  Halt  === 107 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 111  IfTrue  === 101  [[ 189 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 116  Phi  === 189 36 171  [[ 157 164 157 136 144 171 149 ]]  #int !jvms: loop_invariant::micro @ bci:2 (line 6)
 119  CmpP  === _ 46 47  [[ 120 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 120  Bool  === _ 119  [[ 193 ]] [ne] !jvms: loop_invariant::micro @ bci:4 (line 6)
 121  MergeMem  === _ 1 7 40 1 1 183  [[ 127 ]]  { N40:rawptr:BotPTR - - N183:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:4 (line 6)
 123  If  === 189 78  [[ 124 125 ]] P=0.999999, C=-1.000000 !jvms: loop_invariant::micro @ bci:4 (line 6)
 124  IfTrue  === 123  [[ 138 ]] #1 !jvms: loop_invariant::micro @ bci:4 (line 6)
 125  IfFalse  === 123  [[ 127 ]] #0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 126  ConI  === 0  [[ 127 ]]  #int:-10
 127  CallStaticJava  === 125 6 121 8 9 (126 1 1 1 1 1 1 1 1 1 47 ) [[ 128 ]] # Static uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:4 (line 6) !jvms: loop_invariant::micro @ bci:4 (line 6)
 128  Proj  === 127  [[ 131 ]] #0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 131  Halt  === 128 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 132  CastPP  === 194 46  [[ 169 134 134 169 172 168 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 136 149 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 136  CmpI  === _ 116 135  [[ 137 ]]  !jvms: loop_invariant::micro @ bci:5 (line 6)
 137  Bool  === _ 136  [[ 138 ]] [lt] !jvms: loop_invariant::micro @ bci:5 (line 6)
 138  If  === 124 137  [[ 139 140 ]] P=0.999026, C=211589.000000 !jvms: loop_invariant::micro @ bci:5 (line 6)
 139  IfTrue  === 138  [[ 151 143 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 140  IfFalse  === 138  [[ 179 ]] #0 !jvms: loop_invariant::micro @ bci:5 (line 6)
 143  SqrtD  === 139 32  [[ 146 ]]  !jvms: loop_invariant::micro @ bci:9 (line 7)
 144  ConvI2D  === _ 116  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 146 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 146  AddD  === _ 143 145  [[ 170 157 ]]  !jvms: loop_invariant::micro @ bci:27 (line 9)
 149  CmpU  === _ 116 135  [[ 150 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 150  Bool  === _ 149  [[ 151 ]] [lt] !jvms: loop_invariant::micro @ bci:28 (line 9)
 151  RangeCheck  === 139 150  [[ 152 155 ]] P=0.999999, C=-1.000000 !jvms: loop_invariant::micro @ bci:28 (line 9)
 152  IfTrue  === 151  [[ 176 164 170 172 ]] #1 !jvms: loop_invariant::micro @ bci:28 (line 9)
 153  MergeMem  === _ 1 7 40 1 1 183  [[ 157 ]]  { N40:rawptr:BotPTR - - N183:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 155  IfFalse  === 151  [[ 157 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 155 6 153 8 9 (156 132 32 1 116 1 1 1 1 132 116 146 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 168 ]]  #long:16
 164  CastII  === 152 116  [[ 165 ]]  #int:0..max-1:www range check dependency !jvms: loop_invariant::micro @ bci:28 (line 9)
 165  ConvI2L  === _ 164  [[ 167 ]]  #long:0..maxint-1:www !jvms: loop_invariant::micro @ bci:28 (line 9)
 166  ConI  === 0  [[ 167 ]]  #int:3
 167  LShiftL  === _ 165 166  [[ 169 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 168  AddP  === _ 132 169 162  [[ 170 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 169  AddP  === _ 132 132 167  [[ 168 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 170  StoreD  === 152 183 168 146  [[ 173 183 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !jvms: loop_invariant::micro @ bci:28 (line 9)
 171  AddI  === _ 116 78  [[ 172 116 ]]  !jvms: loop_invariant::micro @ bci:29 (line 6)
 172  SafePoint  === 152 1 173 1 1 176 132 32 1 171 1 1 1 1  [[ 189 ]]  SafePoint  !jvms: loop_invariant::micro @ bci:32 (line 6)
 173  MergeMem  === _ 1 7 40 1 1 170  [[ 172 ]]  { N40:rawptr:BotPTR - - N170:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:32 (line 6)
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 176 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 176  LoadP  === 152 40 175  [[ 172 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 140 6 16 8 9  [[ 0 ]] 
 183  Phi  === 189 7 170  [[ 170 16 121 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 45 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 189  Loop  === 189 111 172  [[ 189 183 116 123 ]] inner  !orig=[112] !jvms: loop_invariant::micro @ bci:2 (line 6)
 191  Region  === 191 192 195  [[ 191 84 ]]  !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 192  IfFalse  === 79  [[ 191 ]] #0 !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 193  If  === 45 120  [[ 194 195 ]] P=0.999999, C=-1.000000
 194  IfTrue  === 193  [[ 79 132 ]] #1
 195  IfFalse  === 193  [[ 191 ]] #0
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 99 110 131 161 179  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 126 65 78 83 94 105 190 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 106 95 84 157 127 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 183 41 25 32 36 37 153 92 103 81 16 121 173 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 127 88 84 99 95 110 106 131 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 127 66 106 84 95 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 183  [[ 179 ]]  { N40:rawptr:BotPTR - - N183:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 143 84 95 106 172 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 116 106 95 84 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 121 176 173 153 92 103 81 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 186 51  [[ 45 46 193 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 132 119 84 95 106 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 119 127 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 79 90 101 171 123 ]]  #int:1
  79  ParsePredicate  === 194 78  [[ 192 89 ]]  #Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 191 6 81 8 9 (83 46 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  89  IfTrue  === 79  [[ 90 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  90  ParsePredicate  === 89 78  [[ 91 100 ]]  #Profiled_Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  91  IfFalse  === 90  [[ 95 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  92  MergeMem  === _ 1 7 40  [[ 95 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  94  ConI  === 0  [[ 95 ]]  #int:-66
  95  CallStaticJava  === 91 6 92 8 9 (94 46 32 1 36 1 1 1 1 ) [[ 96 ]] # Static uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  96  Proj  === 95  [[ 99 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  99  Halt  === 96 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 100  IfTrue  === 90  [[ 101 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 101  ParsePredicate  === 100 78  [[ 102 111 ]]  #Loop_Limit_Check  !jvms: loop_invariant::micro @ bci:2 (line 6)
 102  IfFalse  === 101  [[ 106 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 103  MergeMem  === _ 1 7 40  [[ 106 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
 105  ConI  === 0  [[ 106 ]]  #int:-146
 106  CallStaticJava  === 102 6 103 8 9 (105 46 32 1 36 1 1 1 1 ) [[ 107 ]] # Static uncommon_trap(reason='loop_limit_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
 107  Proj  === 106  [[ 110 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 110  Halt  === 107 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 111  IfTrue  === 101  [[ 189 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 116  Phi  === 189 36 171  [[ 157 164 157 136 144 171 149 ]]  #int !jvms: loop_invariant::micro @ bci:2 (line 6)
 119  CmpP  === _ 46 47  [[ 120 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 120  Bool  === _ 119  [[ 193 ]] [ne] !jvms: loop_invariant::micro @ bci:4 (line 6)
 121  MergeMem  === _ 1 7 40 1 1 183  [[ 127 ]]  { N40:rawptr:BotPTR - - N183:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:4 (line 6)
 123  If  === 189 78  [[ 124 125 ]] P=0.999999, C=-1.000000 !jvms: loop_invariant::micro @ bci:4 (line 6)
 124  IfTrue  === 123  [[ 138 ]] #1 !jvms: loop_invariant::micro @ bci:4 (line 6)
 125  IfFalse  === 123  [[ 127 ]] #0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 126  ConI  === 0  [[ 127 ]]  #int:-10
 127  CallStaticJava  === 125 6 121 8 9 (126 1 1 1 1 1 1 1 1 1 47 ) [[ 128 ]] # Static uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:4 (line 6) !jvms: loop_invariant::micro @ bci:4 (line 6)
 128  Proj  === 127  [[ 131 ]] #0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 131  Halt  === 128 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 132  CastPP  === 194 46  [[ 169 134 134 169 172 168 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 136 149 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 136  CmpI  === _ 116 135  [[ 137 ]]  !jvms: loop_invariant::micro @ bci:5 (line 6)
 137  Bool  === _ 136  [[ 138 ]] [lt] !jvms: loop_invariant::micro @ bci:5 (line 6)
 138  If  === 124 137  [[ 139 140 ]] P=0.999026, C=211589.000000 !jvms: loop_invariant::micro @ bci:5 (line 6)
 139  IfTrue  === 138  [[ 151 143 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 140  IfFalse  === 138  [[ 179 ]] #0 !jvms: loop_invariant::micro @ bci:5 (line 6)
 143  SqrtD  === 139 32  [[ 146 ]]  !jvms: loop_invariant::micro @ bci:9 (line 7)
 144  ConvI2D  === _ 116  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 146 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 146  AddD  === _ 143 145  [[ 170 157 ]]  !jvms: loop_invariant::micro @ bci:27 (line 9)
 149  CmpU  === _ 116 135  [[ 150 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 150  Bool  === _ 149  [[ 151 ]] [lt] !jvms: loop_invariant::micro @ bci:28 (line 9)
 151  RangeCheck  === 139 150  [[ 152 155 ]] P=0.999999, C=-1.000000 !jvms: loop_invariant::micro @ bci:28 (line 9)
 152  IfTrue  === 151  [[ 176 164 170 172 ]] #1 !jvms: loop_invariant::micro @ bci:28 (line 9)
 153  MergeMem  === _ 1 7 40 1 1 183  [[ 157 ]]  { N40:rawptr:BotPTR - - N183:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 155  IfFalse  === 151  [[ 157 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 155 6 153 8 9 (156 132 32 1 116 1 1 1 1 132 116 146 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 168 ]]  #long:16
 164  CastII  === 152 116  [[ 165 ]]  #int:0..max-1:www range check dependency !jvms: loop_invariant::micro @ bci:28 (line 9)
 165  ConvI2L  === _ 164  [[ 167 ]]  #long:0..maxint-1:www !jvms: loop_invariant::micro @ bci:28 (line 9)
 166  ConI  === 0  [[ 167 ]]  #int:3
 167  LShiftL  === _ 165 166  [[ 169 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 168  AddP  === _ 132 169 162  [[ 170 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 169  AddP  === _ 132 132 167  [[ 168 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 170  StoreD  === 152 183 168 146  [[ 173 183 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !jvms: loop_invariant::micro @ bci:28 (line 9)
 171  AddI  === _ 116 78  [[ 172 116 ]]  !jvms: loop_invariant::micro @ bci:29 (line 6)
 172  SafePoint  === 152 1 173 1 1 176 132 32 1 171 1 1 1 1  [[ 189 ]]  SafePoint  !jvms: loop_invariant::micro @ bci:32 (line 6)
 173  MergeMem  === _ 1 7 40 1 1 170  [[ 172 ]]  { N40:rawptr:BotPTR - - N170:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:32 (line 6)
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 176 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 176  LoadP  === 152 40 175  [[ 172 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 140 6 16 8 9  [[ 0 ]] 
 183  Phi  === 189 7 170  [[ 170 16 121 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 45 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 189  Loop  === 189 111 172  [[ 189 183 116 123 ]] inner  !orig=[112] !jvms: loop_invariant::micro @ bci:2 (line 6)
 191  Region  === 191 192 195  [[ 191 84 ]]  !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 192  IfFalse  === 79  [[ 191 ]] #0 !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 193  If  === 45 120  [[ 194 195 ]] P=0.999999, C=-1.000000
 194  IfTrue  === 193  [[ 79 132 ]] #1
 195  IfFalse  === 193  [[ 191 ]] #0
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 99 110 131 161 179  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 126 65 78 83 94 105 190 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 106 95 84 157 127 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 183 41 25 32 36 37 153 92 103 81 16 121 173 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 127 88 84 99 95 110 106 131 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 127 66 106 84 95 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 183  [[ 179 ]]  { N40:rawptr:BotPTR - - N183:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 143 84 95 106 172 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 116 106 95 84 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 121 176 173 153 92 103 81 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 186 51  [[ 45 46 193 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 132 119 84 95 106 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 119 127 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 79 90 101 171 123 ]]  #int:1
  79  ParsePredicate  === 194 78  [[ 192 89 ]]  #Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 191 6 81 8 9 (83 46 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  89  IfTrue  === 79  [[ 90 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  90  ParsePredicate  === 89 78  [[ 91 100 ]]  #Profiled_Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  91  IfFalse  === 90  [[ 95 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  92  MergeMem  === _ 1 7 40  [[ 95 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  94  ConI  === 0  [[ 95 ]]  #int:-66
  95  CallStaticJava  === 91 6 92 8 9 (94 46 32 1 36 1 1 1 1 ) [[ 96 ]] # Static uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  96  Proj  === 95  [[ 99 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  99  Halt  === 96 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 100  IfTrue  === 90  [[ 101 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 101  ParsePredicate  === 100 78  [[ 102 111 ]]  #Loop_Limit_Check  !jvms: loop_invariant::micro @ bci:2 (line 6)
 102  IfFalse  === 101  [[ 106 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 103  MergeMem  === _ 1 7 40  [[ 106 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
 105  ConI  === 0  [[ 106 ]]  #int:-146
 106  CallStaticJava  === 102 6 103 8 9 (105 46 32 1 36 1 1 1 1 ) [[ 107 ]] # Static uncommon_trap(reason='loop_limit_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
 107  Proj  === 106  [[ 110 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 110  Halt  === 107 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 111  IfTrue  === 101  [[ 189 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 116  Phi  === 189 36 171  [[ 157 164 157 136 144 171 149 ]]  #int !jvms: loop_invariant::micro @ bci:2 (line 6)
 119  CmpP  === _ 46 47  [[ 120 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 120  Bool  === _ 119  [[ 193 ]] [ne] !jvms: loop_invariant::micro @ bci:4 (line 6)
 121  MergeMem  === _ 1 7 40 1 1 183  [[ 127 ]]  { N40:rawptr:BotPTR - - N183:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:4 (line 6)
 123  If  === 189 78  [[ 124 ]] P=0.999999, C=-1.000000 !jvms: loop_invariant::micro @ bci:4 (line 6)
 124  IfTrue  === 123  [[ 138 ]] #1 !jvms: loop_invariant::micro @ bci:4 (line 6)
 126  ConI  === 0  [[ 127 ]]  #int:-10
 127  CallStaticJava  === 1 6 121 8 9 (126 1 1 1 1 1 1 1 1 1 47 ) [[ 128 ]] # Static uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:4 (line 6) !jvms: loop_invariant::micro @ bci:4 (line 6)
 128  Proj  === 127  [[ 131 ]] #0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 131  Halt  === 128 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 132  CastPP  === 194 46  [[ 169 134 134 169 172 168 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 136 149 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 136  CmpI  === _ 116 135  [[ 137 ]]  !jvms: loop_invariant::micro @ bci:5 (line 6)
 137  Bool  === _ 136  [[ 138 ]] [lt] !jvms: loop_invariant::micro @ bci:5 (line 6)
 138  If  === 124 137  [[ 139 140 ]] P=0.999026, C=211589.000000 !jvms: loop_invariant::micro @ bci:5 (line 6)
 139  IfTrue  === 138  [[ 151 143 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 140  IfFalse  === 138  [[ 179 ]] #0 !jvms: loop_invariant::micro @ bci:5 (line 6)
 143  SqrtD  === 139 32  [[ 146 ]]  !jvms: loop_invariant::micro @ bci:9 (line 7)
 144  ConvI2D  === _ 116  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 146 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 146  AddD  === _ 143 145  [[ 170 157 ]]  !jvms: loop_invariant::micro @ bci:27 (line 9)
 149  CmpU  === _ 116 135  [[ 150 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 150  Bool  === _ 149  [[ 151 ]] [lt] !jvms: loop_invariant::micro @ bci:28 (line 9)
 151  RangeCheck  === 139 150  [[ 152 155 ]] P=0.999999, C=-1.000000 !jvms: loop_invariant::micro @ bci:28 (line 9)
 152  IfTrue  === 151  [[ 176 164 170 172 ]] #1 !jvms: loop_invariant::micro @ bci:28 (line 9)
 153  MergeMem  === _ 1 7 40 1 1 183  [[ 157 ]]  { N40:rawptr:BotPTR - - N183:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 155  IfFalse  === 151  [[ 157 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 155 6 153 8 9 (156 132 32 1 116 1 1 1 1 132 116 146 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 168 ]]  #long:16
 164  CastII  === 152 116  [[ 165 ]]  #int:0..max-1:www range check dependency !jvms: loop_invariant::micro @ bci:28 (line 9)
 165  ConvI2L  === _ 164  [[ 167 ]]  #long:0..maxint-1:www !jvms: loop_invariant::micro @ bci:28 (line 9)
 166  ConI  === 0  [[ 167 ]]  #int:3
 167  LShiftL  === _ 165 166  [[ 169 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 168  AddP  === _ 132 169 162  [[ 170 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 169  AddP  === _ 132 132 167  [[ 168 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 170  StoreD  === 152 183 168 146  [[ 173 183 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !jvms: loop_invariant::micro @ bci:28 (line 9)
 171  AddI  === _ 116 78  [[ 172 116 ]]  !jvms: loop_invariant::micro @ bci:29 (line 6)
 172  SafePoint  === 152 1 173 1 1 176 132 32 1 171 1 1 1 1  [[ 189 ]]  SafePoint  !jvms: loop_invariant::micro @ bci:32 (line 6)
 173  MergeMem  === _ 1 7 40 1 1 170  [[ 172 ]]  { N40:rawptr:BotPTR - - N170:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:32 (line 6)
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 176 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 176  LoadP  === 152 40 175  [[ 172 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 140 6 16 8 9  [[ 0 ]] 
 183  Phi  === 189 7 170  [[ 170 16 121 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 45 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 189  Loop  === 189 111 172  [[ 189 183 116 123 ]] inner  !orig=[112] !jvms: loop_invariant::micro @ bci:2 (line 6)
 191  Region  === 191 192 195  [[ 191 84 ]]  !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 192  IfFalse  === 79  [[ 191 ]] #0 !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 193  If  === 45 120  [[ 194 195 ]] P=0.999999, C=-1.000000
 194  IfTrue  === 193  [[ 79 132 ]] #1
 195  IfFalse  === 193  [[ 191 ]] #0
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 99 110 131 161 179  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 126 65 78 83 94 105 190 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 106 95 84 157 127 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 183 41 25 32 36 37 153 92 103 81 16 121 173 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 127 88 84 99 95 110 106 131 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 127 66 106 84 95 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 183  [[ 179 ]]  { N40:rawptr:BotPTR - - N183:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 143 84 95 106 172 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 116 106 95 84 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 121 176 173 153 92 103 81 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 186 51  [[ 45 46 193 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 132 119 84 95 106 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 119 127 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 79 90 101 171 ]]  #int:1
  79  ParsePredicate  === 194 78  [[ 192 89 ]]  #Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 191 6 81 8 9 (83 46 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  89  IfTrue  === 79  [[ 90 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  90  ParsePredicate  === 89 78  [[ 91 100 ]]  #Profiled_Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  91  IfFalse  === 90  [[ 95 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  92  MergeMem  === _ 1 7 40  [[ 95 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  94  ConI  === 0  [[ 95 ]]  #int:-66
  95  CallStaticJava  === 91 6 92 8 9 (94 46 32 1 36 1 1 1 1 ) [[ 96 ]] # Static uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  96  Proj  === 95  [[ 99 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  99  Halt  === 96 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 100  IfTrue  === 90  [[ 101 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 101  ParsePredicate  === 100 78  [[ 102 111 ]]  #Loop_Limit_Check  !jvms: loop_invariant::micro @ bci:2 (line 6)
 102  IfFalse  === 101  [[ 106 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 103  MergeMem  === _ 1 7 40  [[ 106 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
 105  ConI  === 0  [[ 106 ]]  #int:-146
 106  CallStaticJava  === 102 6 103 8 9 (105 46 32 1 36 1 1 1 1 ) [[ 107 ]] # Static uncommon_trap(reason='loop_limit_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
 107  Proj  === 106  [[ 110 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 110  Halt  === 107 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 111  IfTrue  === 101  [[ 189 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 116  Phi  === 189 36 171  [[ 157 164 157 136 144 171 149 ]]  #int !jvms: loop_invariant::micro @ bci:2 (line 6)
 119  CmpP  === _ 46 47  [[ 120 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 120  Bool  === _ 119  [[ 193 ]] [ne] !jvms: loop_invariant::micro @ bci:4 (line 6)
 121  MergeMem  === _ 1 7 40 1 1 183  [[ 127 ]]  { N40:rawptr:BotPTR - - N183:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:4 (line 6)
 126  ConI  === 0  [[ 127 ]]  #int:-10
 127  CallStaticJava  === 1 6 121 8 9 (126 1 1 1 1 1 1 1 1 1 47 ) [[ 128 ]] # Static uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:4 (line 6) !jvms: loop_invariant::micro @ bci:4 (line 6)
 128  Proj  === 127  [[ 131 ]] #0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 131  Halt  === 128 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 132  CastPP  === 194 46  [[ 169 134 134 169 172 168 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 136 149 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 136  CmpI  === _ 116 135  [[ 137 ]]  !jvms: loop_invariant::micro @ bci:5 (line 6)
 137  Bool  === _ 136  [[ 138 ]] [lt] !jvms: loop_invariant::micro @ bci:5 (line 6)
 138  If  === 189 137  [[ 139 140 ]] P=0.999026, C=211589.000000 !jvms: loop_invariant::micro @ bci:5 (line 6)
 139  IfTrue  === 138  [[ 151 143 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 140  IfFalse  === 138  [[ 179 ]] #0 !jvms: loop_invariant::micro @ bci:5 (line 6)
 143  SqrtD  === 139 32  [[ 146 ]]  !jvms: loop_invariant::micro @ bci:9 (line 7)
 144  ConvI2D  === _ 116  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 146 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 146  AddD  === _ 143 145  [[ 170 157 ]]  !jvms: loop_invariant::micro @ bci:27 (line 9)
 149  CmpU  === _ 116 135  [[ 150 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 150  Bool  === _ 149  [[ 151 ]] [lt] !jvms: loop_invariant::micro @ bci:28 (line 9)
 151  RangeCheck  === 139 150  [[ 152 155 ]] P=0.999999, C=-1.000000 !jvms: loop_invariant::micro @ bci:28 (line 9)
 152  IfTrue  === 151  [[ 176 164 170 172 ]] #1 !jvms: loop_invariant::micro @ bci:28 (line 9)
 153  MergeMem  === _ 1 7 40 1 1 183  [[ 157 ]]  { N40:rawptr:BotPTR - - N183:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 155  IfFalse  === 151  [[ 157 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 155 6 153 8 9 (156 132 32 1 116 1 1 1 1 132 116 146 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 168 ]]  #long:16
 164  CastII  === 152 116  [[ 165 ]]  #int:0..max-1:www range check dependency !jvms: loop_invariant::micro @ bci:28 (line 9)
 165  ConvI2L  === _ 164  [[ 167 ]]  #long:0..maxint-1:www !jvms: loop_invariant::micro @ bci:28 (line 9)
 166  ConI  === 0  [[ 167 ]]  #int:3
 167  LShiftL  === _ 165 166  [[ 169 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 168  AddP  === _ 132 169 162  [[ 170 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 169  AddP  === _ 132 132 167  [[ 168 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 170  StoreD  === 152 183 168 146  [[ 173 183 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !jvms: loop_invariant::micro @ bci:28 (line 9)
 171  AddI  === _ 116 78  [[ 172 116 ]]  !jvms: loop_invariant::micro @ bci:29 (line 6)
 172  SafePoint  === 152 1 173 1 1 176 132 32 1 171 1 1 1 1  [[ 189 ]]  SafePoint  !jvms: loop_invariant::micro @ bci:32 (line 6)
 173  MergeMem  === _ 1 7 40 1 1 170  [[ 172 ]]  { N40:rawptr:BotPTR - - N170:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:32 (line 6)
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 176 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 176  LoadP  === 152 40 175  [[ 172 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 140 6 16 8 9  [[ 0 ]] 
 183  Phi  === 189 7 170  [[ 170 16 121 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 45 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 189  Loop  === 189 111 172  [[ 189 183 116 138 ]] inner  !orig=[112] !jvms: loop_invariant::micro @ bci:2 (line 6)
 191  Region  === 191 192 195  [[ 191 84 ]]  !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 192  IfFalse  === 79  [[ 191 ]] #0 !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 193  If  === 45 120  [[ 194 195 ]] P=0.999999, C=-1.000000
 194  IfTrue  === 193  [[ 79 132 ]] #1
 195  IfFalse  === 193  [[ 191 ]] #0
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 99 110 1 161 179  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 126 65 78 83 94 105 190 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 106 95 84 157 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 183 41 25 32 36 37 153 92 103 81 16 173 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 106 88 84 99 95 110 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 95 66 106 84 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 183  [[ 179 ]]  { N40:rawptr:BotPTR - - N183:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 143 84 95 106 172 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 116 106 95 84 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 176 173 153 92 103 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 186 51  [[ 45 46 193 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 132 119 84 95 106 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 119 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 79 90 101 171 ]]  #int:1
  79  ParsePredicate  === 194 78  [[ 192 89 ]]  #Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 191 6 81 8 9 (83 46 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  89  IfTrue  === 79  [[ 90 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  90  ParsePredicate  === 89 78  [[ 91 100 ]]  #Profiled_Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  91  IfFalse  === 90  [[ 95 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  92  MergeMem  === _ 1 7 40  [[ 95 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  94  ConI  === 0  [[ 95 ]]  #int:-66
  95  CallStaticJava  === 91 6 92 8 9 (94 46 32 1 36 1 1 1 1 ) [[ 96 ]] # Static uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  96  Proj  === 95  [[ 99 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  99  Halt  === 96 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 100  IfTrue  === 90  [[ 101 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 101  ParsePredicate  === 100 78  [[ 102 111 ]]  #Loop_Limit_Check  !jvms: loop_invariant::micro @ bci:2 (line 6)
 102  IfFalse  === 101  [[ 106 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 103  MergeMem  === _ 1 7 40  [[ 106 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
 105  ConI  === 0  [[ 106 ]]  #int:-146
 106  CallStaticJava  === 102 6 103 8 9 (105 46 32 1 36 1 1 1 1 ) [[ 107 ]] # Static uncommon_trap(reason='loop_limit_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
 107  Proj  === 106  [[ 110 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 110  Halt  === 107 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 111  IfTrue  === 101  [[ 189 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 116  Phi  === 189 36 171  [[ 157 164 157 136 144 171 149 ]]  #int !jvms: loop_invariant::micro @ bci:2 (line 6)
 119  CmpP  === _ 46 47  [[ 120 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 120  Bool  === _ 119  [[ 193 ]] [ne] !jvms: loop_invariant::micro @ bci:4 (line 6)
 132  CastPP  === 194 46  [[ 169 134 134 169 172 168 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 136 149 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 136  CmpI  === _ 116 135  [[ 137 ]]  !jvms: loop_invariant::micro @ bci:5 (line 6)
 137  Bool  === _ 136  [[ 138 ]] [lt] !jvms: loop_invariant::micro @ bci:5 (line 6)
 138  If  === 189 137  [[ 139 140 ]] P=0.999026, C=211589.000000 !jvms: loop_invariant::micro @ bci:5 (line 6)
 139  IfTrue  === 138  [[ 151 143 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 140  IfFalse  === 138  [[ 179 ]] #0 !jvms: loop_invariant::micro @ bci:5 (line 6)
 143  SqrtD  === 139 32  [[ 146 ]]  !jvms: loop_invariant::micro @ bci:9 (line 7)
 144  ConvI2D  === _ 116  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 146 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 146  AddD  === _ 143 145  [[ 170 157 ]]  !jvms: loop_invariant::micro @ bci:27 (line 9)
 149  CmpU  === _ 116 135  [[ 150 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 150  Bool  === _ 149  [[ 151 ]] [lt] !jvms: loop_invariant::micro @ bci:28 (line 9)
 151  RangeCheck  === 139 150  [[ 152 155 ]] P=0.999999, C=-1.000000 !jvms: loop_invariant::micro @ bci:28 (line 9)
 152  IfTrue  === 151  [[ 176 164 170 172 ]] #1 !jvms: loop_invariant::micro @ bci:28 (line 9)
 153  MergeMem  === _ 1 7 40 1 1 183  [[ 157 ]]  { N40:rawptr:BotPTR - - N183:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 155  IfFalse  === 151  [[ 157 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 155 6 153 8 9 (156 132 32 1 116 1 1 1 1 132 116 146 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 168 ]]  #long:16
 164  CastII  === 152 116  [[ 165 ]]  #int:0..max-1:www range check dependency !jvms: loop_invariant::micro @ bci:28 (line 9)
 165  ConvI2L  === _ 164  [[ 167 ]]  #long:0..maxint-1:www !jvms: loop_invariant::micro @ bci:28 (line 9)
 166  ConI  === 0  [[ 167 ]]  #int:3
 167  LShiftL  === _ 165 166  [[ 169 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 168  AddP  === _ 132 169 162  [[ 170 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 169  AddP  === _ 132 132 167  [[ 168 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 170  StoreD  === 152 183 168 146  [[ 173 183 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !jvms: loop_invariant::micro @ bci:28 (line 9)
 171  AddI  === _ 116 78  [[ 172 116 ]]  !jvms: loop_invariant::micro @ bci:29 (line 6)
 172  SafePoint  === 152 1 173 1 1 176 132 32 1 171 1 1 1 1  [[ 189 ]]  SafePoint  !jvms: loop_invariant::micro @ bci:32 (line 6)
 173  MergeMem  === _ 1 7 40 1 1 170  [[ 172 ]]  { N40:rawptr:BotPTR - - N170:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:32 (line 6)
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 176 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 176  LoadP  === 152 40 175  [[ 172 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 140 6 16 8 9  [[ 0 ]] 
 183  Phi  === 189 7 170  [[ 170 16 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 45 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 189  Loop  === 189 111 172  [[ 189 183 116 138 ]] inner  !orig=[112] !jvms: loop_invariant::micro @ bci:2 (line 6)
 191  Region  === 191 192 195  [[ 191 84 ]]  !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 192  IfFalse  === 79  [[ 191 ]] #0 !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 193  If  === 45 120  [[ 194 195 ]] P=0.999999, C=-1.000000
 194  IfTrue  === 193  [[ 79 132 ]] #1
 195  IfFalse  === 193  [[ 191 ]] #0
AFTER: AFTER_ITER_GVN
   0  Root  === 0 70 88 99 110 179 161  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 126 65 78 83 94 105 190 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 106 95 84 157 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 183 41 25 32 36 37 153 92 103 81 16 173 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 106 88 84 99 95 110 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 95 66 106 84 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 183  [[ 179 ]]  { N40:rawptr:BotPTR - - N183:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 143 84 95 106 172 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 116 106 95 84 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 176 173 153 92 103 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 186 51  [[ 45 46 193 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 132 119 84 95 106 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 119 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 79 90 101 171 ]]  #int:1
  79  ParsePredicate  === 194 78  [[ 192 89 ]]  #Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 191 6 81 8 9 (83 46 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  89  IfTrue  === 79  [[ 90 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  90  ParsePredicate  === 89 78  [[ 91 100 ]]  #Profiled_Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  91  IfFalse  === 90  [[ 95 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  92  MergeMem  === _ 1 7 40  [[ 95 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  94  ConI  === 0  [[ 95 ]]  #int:-66
  95  CallStaticJava  === 91 6 92 8 9 (94 46 32 1 36 1 1 1 1 ) [[ 96 ]] # Static uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  96  Proj  === 95  [[ 99 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  99  Halt  === 96 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 100  IfTrue  === 90  [[ 101 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 101  ParsePredicate  === 100 78  [[ 102 111 ]]  #Loop_Limit_Check  !jvms: loop_invariant::micro @ bci:2 (line 6)
 102  IfFalse  === 101  [[ 106 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 103  MergeMem  === _ 1 7 40  [[ 106 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
 105  ConI  === 0  [[ 106 ]]  #int:-146
 106  CallStaticJava  === 102 6 103 8 9 (105 46 32 1 36 1 1 1 1 ) [[ 107 ]] # Static uncommon_trap(reason='loop_limit_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
 107  Proj  === 106  [[ 110 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 110  Halt  === 107 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 111  IfTrue  === 101  [[ 189 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 116  Phi  === 189 36 171  [[ 157 164 157 136 144 171 149 ]]  #int !jvms: loop_invariant::micro @ bci:2 (line 6)
 119  CmpP  === _ 46 47  [[ 120 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 120  Bool  === _ 119  [[ 193 ]] [ne] !jvms: loop_invariant::micro @ bci:4 (line 6)
 132  CastPP  === 194 46  [[ 169 134 134 169 172 168 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 136 149 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 136  CmpI  === _ 116 135  [[ 137 ]]  !jvms: loop_invariant::micro @ bci:5 (line 6)
 137  Bool  === _ 136  [[ 138 ]] [lt] !jvms: loop_invariant::micro @ bci:5 (line 6)
 138  If  === 189 137  [[ 139 140 ]] P=0.999026, C=211589.000000 !jvms: loop_invariant::micro @ bci:5 (line 6)
 139  IfTrue  === 138  [[ 151 143 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 140  IfFalse  === 138  [[ 179 ]] #0 !jvms: loop_invariant::micro @ bci:5 (line 6)
 143  SqrtD  === 139 32  [[ 146 ]]  !jvms: loop_invariant::micro @ bci:9 (line 7)
 144  ConvI2D  === _ 116  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 146 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 146  AddD  === _ 143 145  [[ 170 157 ]]  !jvms: loop_invariant::micro @ bci:27 (line 9)
 149  CmpU  === _ 116 135  [[ 150 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 150  Bool  === _ 149  [[ 151 ]] [lt] !jvms: loop_invariant::micro @ bci:28 (line 9)
 151  RangeCheck  === 139 150  [[ 152 155 ]] P=0.999999, C=-1.000000 !jvms: loop_invariant::micro @ bci:28 (line 9)
 152  IfTrue  === 151  [[ 176 164 170 172 ]] #1 !jvms: loop_invariant::micro @ bci:28 (line 9)
 153  MergeMem  === _ 1 7 40 1 1 183  [[ 157 ]]  { N40:rawptr:BotPTR - - N183:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 155  IfFalse  === 151  [[ 157 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 155 6 153 8 9 (156 132 32 1 116 1 1 1 1 132 116 146 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 168 ]]  #long:16
 164  CastII  === 152 116  [[ 165 ]]  #int:0..max-1:www range check dependency !jvms: loop_invariant::micro @ bci:28 (line 9)
 165  ConvI2L  === _ 164  [[ 167 ]]  #long:0..maxint-1:www !jvms: loop_invariant::micro @ bci:28 (line 9)
 166  ConI  === 0  [[ 167 ]]  #int:3
 167  LShiftL  === _ 165 166  [[ 169 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 168  AddP  === _ 132 169 162  [[ 170 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 169  AddP  === _ 132 132 167  [[ 168 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 170  StoreD  === 152 183 168 146  [[ 173 183 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !jvms: loop_invariant::micro @ bci:28 (line 9)
 171  AddI  === _ 116 78  [[ 172 116 ]]  !jvms: loop_invariant::micro @ bci:29 (line 6)
 172  SafePoint  === 152 1 173 1 1 176 132 32 1 171 1 1 1 1  [[ 189 ]]  SafePoint  !jvms: loop_invariant::micro @ bci:32 (line 6)
 173  MergeMem  === _ 1 7 40 1 1 170  [[ 172 ]]  { N40:rawptr:BotPTR - - N170:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:32 (line 6)
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 176 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 176  LoadP  === 152 40 175  [[ 172 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 140 6 16 8 9  [[ 0 ]] 
 183  Phi  === 189 7 170  [[ 170 16 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 45 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 189  Loop  === 189 111 172  [[ 189 183 116 138 ]] inner  !orig=[112] !jvms: loop_invariant::micro @ bci:2 (line 6)
 191  Region  === 191 192 195  [[ 191 84 ]]  !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 192  IfFalse  === 79  [[ 191 ]] #0 !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 193  If  === 45 120  [[ 194 195 ]] P=0.999999, C=-1.000000
 194  IfTrue  === 193  [[ 79 132 ]] #1
 195  IfFalse  === 193  [[ 191 ]] #0
AFTER: PHASEIDEALLOOP1
   0  Root  === 0 70 88 99 110 179 161  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 126 65 78 83 94 105 190 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 106 95 84 157 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 183 41 25 32 36 37 153 92 103 81 16 173 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 106 88 84 99 95 110 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 95 66 106 84 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 183  [[ 179 ]]  { N40:rawptr:BotPTR - - N183:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 143 84 95 106 172 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 116 106 95 84 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 176 173 153 92 103 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 186 51  [[ 45 46 193 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 132 119 84 95 106 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 119 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 79 90 101 171 ]]  #int:1
  79  ParsePredicate  === 194 78  [[ 192 89 ]]  #Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 191 6 81 8 9 (83 46 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  89  IfTrue  === 79  [[ 90 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  90  ParsePredicate  === 89 78  [[ 91 100 ]]  #Profiled_Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  91  IfFalse  === 90  [[ 95 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  92  MergeMem  === _ 1 7 40  [[ 95 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  94  ConI  === 0  [[ 95 ]]  #int:-66
  95  CallStaticJava  === 91 6 92 8 9 (94 46 32 1 36 1 1 1 1 ) [[ 96 ]] # Static uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  96  Proj  === 95  [[ 99 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  99  Halt  === 96 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 100  IfTrue  === 90  [[ 101 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 101  ParsePredicate  === 100 78  [[ 102 111 ]]  #Loop_Limit_Check  !jvms: loop_invariant::micro @ bci:2 (line 6)
 102  IfFalse  === 101  [[ 106 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 103  MergeMem  === _ 1 7 40  [[ 106 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
 105  ConI  === 0  [[ 106 ]]  #int:-146
 106  CallStaticJava  === 102 6 103 8 9 (105 46 32 1 36 1 1 1 1 ) [[ 107 ]] # Static uncommon_trap(reason='loop_limit_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
 107  Proj  === 106  [[ 110 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 110  Halt  === 107 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 111  IfTrue  === 101  [[ 189 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 116  Phi  === 189 36 171  [[ 157 164 157 136 144 171 149 ]]  #int !jvms: loop_invariant::micro @ bci:2 (line 6)
 119  CmpP  === _ 46 47  [[ 120 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 120  Bool  === _ 119  [[ 193 ]] [ne] !jvms: loop_invariant::micro @ bci:4 (line 6)
 132  CastPP  === 194 46  [[ 169 134 134 169 172 168 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 136 149 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 136  CmpI  === _ 116 135  [[ 137 ]]  !jvms: loop_invariant::micro @ bci:5 (line 6)
 137  Bool  === _ 136  [[ 138 ]] [lt] !jvms: loop_invariant::micro @ bci:5 (line 6)
 138  If  === 189 137  [[ 139 140 ]] P=0.999026, C=211589.000000 !jvms: loop_invariant::micro @ bci:5 (line 6)
 139  IfTrue  === 138  [[ 151 143 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 140  IfFalse  === 138  [[ 179 ]] #0 !jvms: loop_invariant::micro @ bci:5 (line 6)
 143  SqrtD  === 139 32  [[ 146 ]]  !jvms: loop_invariant::micro @ bci:9 (line 7)
 144  ConvI2D  === _ 116  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 146 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 146  AddD  === _ 143 145  [[ 170 157 ]]  !jvms: loop_invariant::micro @ bci:27 (line 9)
 149  CmpU  === _ 116 135  [[ 150 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 150  Bool  === _ 149  [[ 151 ]] [lt] !jvms: loop_invariant::micro @ bci:28 (line 9)
 151  RangeCheck  === 139 150  [[ 152 155 ]] P=0.999999, C=-1.000000 !jvms: loop_invariant::micro @ bci:28 (line 9)
 152  IfTrue  === 151  [[ 176 164 170 172 ]] #1 !jvms: loop_invariant::micro @ bci:28 (line 9)
 153  MergeMem  === _ 1 7 40 1 1 183  [[ 157 ]]  { N40:rawptr:BotPTR - - N183:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 155  IfFalse  === 151  [[ 157 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 155 6 153 8 9 (156 132 32 1 116 1 1 1 1 132 116 146 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 168 ]]  #long:16
 164  CastII  === 152 116  [[ 165 ]]  #int:0..max-1:www range check dependency !jvms: loop_invariant::micro @ bci:28 (line 9)
 165  ConvI2L  === _ 164  [[ 167 ]]  #long:0..maxint-1:www !jvms: loop_invariant::micro @ bci:28 (line 9)
 166  ConI  === 0  [[ 167 ]]  #int:3
 167  LShiftL  === _ 165 166  [[ 169 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 168  AddP  === _ 132 169 162  [[ 170 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 169  AddP  === _ 132 132 167  [[ 168 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 170  StoreD  === 152 183 168 146  [[ 173 183 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !jvms: loop_invariant::micro @ bci:28 (line 9)
 171  AddI  === _ 116 78  [[ 172 116 ]]  !jvms: loop_invariant::micro @ bci:29 (line 6)
 172  SafePoint  === 152 1 173 1 1 176 132 32 1 171 1 1 1 1  [[ 189 ]]  SafePoint  !jvms: loop_invariant::micro @ bci:32 (line 6)
 173  MergeMem  === _ 1 7 40 1 1 170  [[ 172 ]]  { N40:rawptr:BotPTR - - N170:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:32 (line 6)
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 176 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 176  LoadP  === 152 40 175  [[ 172 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 140 6 16 8 9  [[ 0 ]] 
 183  Phi  === 189 7 170  [[ 170 16 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 45 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 189  Loop  === 189 111 172  [[ 189 183 116 138 ]] inner  !orig=[112] !jvms: loop_invariant::micro @ bci:2 (line 6)
 191  Region  === 191 192 195  [[ 191 84 ]]  !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 192  IfFalse  === 79  [[ 191 ]] #0 !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 193  If  === 45 120  [[ 194 195 ]] P=0.999999, C=-1.000000
 194  IfTrue  === 193  [[ 79 132 ]] #1
 195  IfFalse  === 193  [[ 191 ]] #0
AFTER: BEFORE_BEAUTIFY_LOOPS
   0  Root  === 0 70 88 99 110 179 161  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 126 65 78 83 94 105 190 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 106 95 84 157 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 183 41 25 32 36 37 153 92 103 81 16 173 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 106 88 84 99 95 110 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 95 66 106 84 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 183  [[ 179 ]]  { N40:rawptr:BotPTR - - N183:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 143 84 95 106 172 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 116 106 95 84 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 176 173 153 92 103 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 186 51  [[ 45 46 193 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 132 119 84 95 106 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 119 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 79 90 101 171 ]]  #int:1
  79  ParsePredicate  === 194 78  [[ 192 89 ]]  #Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 191 6 81 8 9 (83 46 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  89  IfTrue  === 79  [[ 90 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  90  ParsePredicate  === 89 78  [[ 91 100 ]]  #Profiled_Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  91  IfFalse  === 90  [[ 95 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  92  MergeMem  === _ 1 7 40  [[ 95 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  94  ConI  === 0  [[ 95 ]]  #int:-66
  95  CallStaticJava  === 91 6 92 8 9 (94 46 32 1 36 1 1 1 1 ) [[ 96 ]] # Static uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  96  Proj  === 95  [[ 99 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  99  Halt  === 96 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 100  IfTrue  === 90  [[ 101 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 101  ParsePredicate  === 100 78  [[ 102 111 ]]  #Loop_Limit_Check  !jvms: loop_invariant::micro @ bci:2 (line 6)
 102  IfFalse  === 101  [[ 106 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 103  MergeMem  === _ 1 7 40  [[ 106 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
 105  ConI  === 0  [[ 106 ]]  #int:-146
 106  CallStaticJava  === 102 6 103 8 9 (105 46 32 1 36 1 1 1 1 ) [[ 107 ]] # Static uncommon_trap(reason='loop_limit_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
 107  Proj  === 106  [[ 110 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 110  Halt  === 107 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 111  IfTrue  === 101  [[ 189 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 116  Phi  === 189 36 171  [[ 157 164 157 136 144 171 149 ]]  #int !jvms: loop_invariant::micro @ bci:2 (line 6)
 119  CmpP  === _ 46 47  [[ 120 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 120  Bool  === _ 119  [[ 193 ]] [ne] !jvms: loop_invariant::micro @ bci:4 (line 6)
 132  CastPP  === 194 46  [[ 169 134 134 169 172 168 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 136 149 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 136  CmpI  === _ 116 135  [[ 137 ]]  !jvms: loop_invariant::micro @ bci:5 (line 6)
 137  Bool  === _ 136  [[ 138 ]] [lt] !jvms: loop_invariant::micro @ bci:5 (line 6)
 138  If  === 189 137  [[ 139 140 ]] P=0.999026, C=211589.000000 !jvms: loop_invariant::micro @ bci:5 (line 6)
 139  IfTrue  === 138  [[ 151 143 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 140  IfFalse  === 138  [[ 179 ]] #0 !jvms: loop_invariant::micro @ bci:5 (line 6)
 143  SqrtD  === 139 32  [[ 146 ]]  !jvms: loop_invariant::micro @ bci:9 (line 7)
 144  ConvI2D  === _ 116  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 146 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 146  AddD  === _ 143 145  [[ 170 157 ]]  !jvms: loop_invariant::micro @ bci:27 (line 9)
 149  CmpU  === _ 116 135  [[ 150 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 150  Bool  === _ 149  [[ 151 ]] [lt] !jvms: loop_invariant::micro @ bci:28 (line 9)
 151  RangeCheck  === 139 150  [[ 152 155 ]] P=0.999999, C=-1.000000 !jvms: loop_invariant::micro @ bci:28 (line 9)
 152  IfTrue  === 151  [[ 176 164 170 172 ]] #1 !jvms: loop_invariant::micro @ bci:28 (line 9)
 153  MergeMem  === _ 1 7 40 1 1 183  [[ 157 ]]  { N40:rawptr:BotPTR - - N183:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 155  IfFalse  === 151  [[ 157 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 155 6 153 8 9 (156 132 32 1 116 1 1 1 1 132 116 146 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 168 ]]  #long:16
 164  CastII  === 152 116  [[ 165 ]]  #int:0..max-1:www range check dependency !jvms: loop_invariant::micro @ bci:28 (line 9)
 165  ConvI2L  === _ 164  [[ 167 ]]  #long:0..maxint-1:www !jvms: loop_invariant::micro @ bci:28 (line 9)
 166  ConI  === 0  [[ 167 ]]  #int:3
 167  LShiftL  === _ 165 166  [[ 169 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 168  AddP  === _ 132 169 162  [[ 170 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 169  AddP  === _ 132 132 167  [[ 168 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 170  StoreD  === 152 183 168 146  [[ 173 183 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !jvms: loop_invariant::micro @ bci:28 (line 9)
 171  AddI  === _ 116 78  [[ 172 116 ]]  !jvms: loop_invariant::micro @ bci:29 (line 6)
 172  SafePoint  === 152 1 173 1 1 176 132 32 1 171 1 1 1 1  [[ 189 ]]  SafePoint  !jvms: loop_invariant::micro @ bci:32 (line 6)
 173  MergeMem  === _ 1 7 40 1 1 170  [[ 172 ]]  { N40:rawptr:BotPTR - - N170:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:32 (line 6)
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 176 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 176  LoadP  === 152 40 175  [[ 172 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 140 6 16 8 9  [[ 0 ]] 
 183  Phi  === 189 7 170  [[ 170 16 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 45 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 189  Loop  === 189 111 172  [[ 189 183 116 138 ]] inner  !orig=[112] !jvms: loop_invariant::micro @ bci:2 (line 6)
 191  Region  === 191 192 195  [[ 191 84 ]]  !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 192  IfFalse  === 79  [[ 191 ]] #0 !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 193  If  === 45 120  [[ 194 195 ]] P=0.999999, C=-1.000000
 194  IfTrue  === 193  [[ 79 132 ]] #1
 195  IfFalse  === 193  [[ 191 ]] #0
AFTER: BEFORE_PARTIAL_PEELING
   0  Root  === 0 70 88 99 110 179 161  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 126 65 78 83 94 105 190 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 106 95 84 157 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 183 41 25 32 36 37 153 92 103 81 16 173 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 106 88 84 99 95 110 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 95 66 106 84 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 183  [[ 179 ]]  { N40:rawptr:BotPTR - - N183:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 143 84 95 106 172 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 116 106 95 84 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 176 173 153 92 103 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 186 51  [[ 45 46 193 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 132 119 84 95 106 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 119 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 79 90 101 171 ]]  #int:1
  79  ParsePredicate  === 194 78  [[ 192 89 ]]  #Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 191 6 81 8 9 (83 46 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  89  IfTrue  === 79  [[ 90 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  90  ParsePredicate  === 89 78  [[ 91 100 ]]  #Profiled_Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  91  IfFalse  === 90  [[ 95 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  92  MergeMem  === _ 1 7 40  [[ 95 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  94  ConI  === 0  [[ 95 ]]  #int:-66
  95  CallStaticJava  === 91 6 92 8 9 (94 46 32 1 36 1 1 1 1 ) [[ 96 ]] # Static uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  96  Proj  === 95  [[ 99 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  99  Halt  === 96 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 100  IfTrue  === 90  [[ 101 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 101  ParsePredicate  === 100 78  [[ 102 111 ]]  #Loop_Limit_Check  !jvms: loop_invariant::micro @ bci:2 (line 6)
 102  IfFalse  === 101  [[ 106 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 103  MergeMem  === _ 1 7 40  [[ 106 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
 105  ConI  === 0  [[ 106 ]]  #int:-146
 106  CallStaticJava  === 102 6 103 8 9 (105 46 32 1 36 1 1 1 1 ) [[ 107 ]] # Static uncommon_trap(reason='loop_limit_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
 107  Proj  === 106  [[ 110 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 110  Halt  === 107 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 111  IfTrue  === 101  [[ 189 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 116  Phi  === 189 36 171  [[ 157 164 157 136 144 171 149 ]]  #int !jvms: loop_invariant::micro @ bci:2 (line 6)
 119  CmpP  === _ 46 47  [[ 120 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 120  Bool  === _ 119  [[ 193 ]] [ne] !jvms: loop_invariant::micro @ bci:4 (line 6)
 132  CastPP  === 194 46  [[ 169 134 134 169 172 168 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 136 149 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 136  CmpI  === _ 116 135  [[ 137 ]]  !jvms: loop_invariant::micro @ bci:5 (line 6)
 137  Bool  === _ 136  [[ 138 ]] [lt] !jvms: loop_invariant::micro @ bci:5 (line 6)
 138  If  === 189 137  [[ 139 140 ]] P=0.999026, C=211589.000000 !jvms: loop_invariant::micro @ bci:5 (line 6)
 139  IfTrue  === 138  [[ 151 143 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 140  IfFalse  === 138  [[ 179 ]] #0 !jvms: loop_invariant::micro @ bci:5 (line 6)
 143  SqrtD  === 139 32  [[ 146 ]]  !jvms: loop_invariant::micro @ bci:9 (line 7)
 144  ConvI2D  === _ 116  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 146 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 146  AddD  === _ 143 145  [[ 170 157 ]]  !jvms: loop_invariant::micro @ bci:27 (line 9)
 149  CmpU  === _ 116 135  [[ 150 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 150  Bool  === _ 149  [[ 151 ]] [lt] !jvms: loop_invariant::micro @ bci:28 (line 9)
 151  RangeCheck  === 139 150  [[ 152 155 ]] P=0.999999, C=-1.000000 !jvms: loop_invariant::micro @ bci:28 (line 9)
 152  IfTrue  === 151  [[ 176 164 170 172 ]] #1 !jvms: loop_invariant::micro @ bci:28 (line 9)
 153  MergeMem  === _ 1 7 40 1 1 183  [[ 157 ]]  { N40:rawptr:BotPTR - - N183:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 155  IfFalse  === 151  [[ 157 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 155 6 153 8 9 (156 132 32 1 116 1 1 1 1 132 116 146 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 168 ]]  #long:16
 164  CastII  === 152 116  [[ 165 ]]  #int:0..max-1:www range check dependency !jvms: loop_invariant::micro @ bci:28 (line 9)
 165  ConvI2L  === _ 164  [[ 167 ]]  #long:0..maxint-1:www !jvms: loop_invariant::micro @ bci:28 (line 9)
 166  ConI  === 0  [[ 167 ]]  #int:3
 167  LShiftL  === _ 165 166  [[ 169 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 168  AddP  === _ 132 169 162  [[ 170 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 169  AddP  === _ 132 132 167  [[ 168 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 170  StoreD  === 152 183 168 146  [[ 173 183 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !jvms: loop_invariant::micro @ bci:28 (line 9)
 171  AddI  === _ 116 78  [[ 172 116 ]]  !jvms: loop_invariant::micro @ bci:29 (line 6)
 172  SafePoint  === 152 1 173 1 1 176 132 32 1 171 1 1 1 1  [[ 189 ]]  SafePoint  !jvms: loop_invariant::micro @ bci:32 (line 6)
 173  MergeMem  === _ 1 7 40 1 1 170  [[ 172 ]]  { N40:rawptr:BotPTR - - N170:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:32 (line 6)
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 176 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 176  LoadP  === 152 40 175  [[ 172 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 140 6 16 8 9  [[ 0 ]] 
 183  Phi  === 189 7 170  [[ 170 16 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 45 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 189  Loop  === 189 111 172  [[ 189 183 116 138 ]] inner  !orig=[112] !jvms: loop_invariant::micro @ bci:2 (line 6)
 191  Region  === 191 192 195  [[ 191 84 ]]  !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 192  IfFalse  === 79  [[ 191 ]] #0 !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 193  If  === 45 120  [[ 194 195 ]] P=0.999999, C=-1.000000
 194  IfTrue  === 193  [[ 79 132 ]] #1
 195  IfFalse  === 193  [[ 191 ]] #0
AFTER: AFTER_PARTIAL_PEELING
   0  Root  === 0 70 88 99 110 179 161  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 126 65 78 83 94 105 190 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 106 95 84 157 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 223 41 25 32 36 37 153 92 103 81 16 173 200 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 106 88 84 99 95 110 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 95 66 106 84 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 143 84 95 106 172 206 217 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 216 106 95 84 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 176 173 153 92 103 199 200 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 186 51  [[ 45 46 193 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 132 119 84 95 106 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 119 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 79 90 101 171 211 ]]  #int:1
  79  ParsePredicate  === 194 78  [[ 192 89 ]]  #Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 191 6 81 8 9 (83 46 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  89  IfTrue  === 79  [[ 90 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  90  ParsePredicate  === 89 78  [[ 91 100 ]]  #Profiled_Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  91  IfFalse  === 90  [[ 95 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  92  MergeMem  === _ 1 7 40  [[ 95 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  94  ConI  === 0  [[ 95 ]]  #int:-66
  95  CallStaticJava  === 91 6 92 8 9 (94 46 32 1 36 1 1 1 1 ) [[ 96 ]] # Static uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  96  Proj  === 95  [[ 99 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  99  Halt  === 96 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 100  IfTrue  === 90  [[ 101 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 101  ParsePredicate  === 100 78  [[ 102 111 ]]  #Loop_Limit_Check  !jvms: loop_invariant::micro @ bci:2 (line 6)
 102  IfFalse  === 101  [[ 106 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 103  MergeMem  === _ 1 7 40  [[ 106 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
 105  ConI  === 0  [[ 106 ]]  #int:-146
 106  CallStaticJava  === 102 6 103 8 9 (105 46 32 1 36 1 1 1 1 ) [[ 107 ]] # Static uncommon_trap(reason='loop_limit_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
 107  Proj  === 106  [[ 110 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 110  Halt  === 107 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 111  IfTrue  === 101  [[ 218 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 116  Phi  === 189 211 1  [[ 144 243 233 136 ]]  #int !jvms: loop_invariant::micro @ bci:2 (line 6)
 119  CmpP  === _ 46 47  [[ 120 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 120  Bool  === _ 119  [[ 193 ]] [ne] !jvms: loop_invariant::micro @ bci:4 (line 6)
 132  CastPP  === 194 46  [[ 169 134 134 169 172 168 157 157 202 203 203 217 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 136 149 208 210 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 136  CmpI  === _ 116 135  [[ 137 ]]  !jvms: loop_invariant::micro @ bci:5 (line 6)
 137  Bool  === _ 136  [[ 138 ]] [lt] !jvms: loop_invariant::micro @ bci:5 (line 6)
 138  If  === 189 137  [[ 139 227 ]] P=0.999026, C=211589.000000 !jvms: loop_invariant::micro @ bci:5 (line 6)
 139  IfTrue  === 138  [[ 224 143 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 143  SqrtD  === 139 32  [[ 239 231 ]]  !jvms: loop_invariant::micro @ bci:9 (line 7)
 144  ConvI2D  === _ 116  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 232 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 149  CmpU  === _ 1 135  [[ 150 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 150  Bool  === _ 149  [[ 151 ]] [lt] !jvms: loop_invariant::micro @ bci:28 (line 9)
 151  RangeCheck  === 198 150  [[ 152 230 ]] P=0.999999, C=-1.000000 !jvms: loop_invariant::micro @ bci:28 (line 9)
 153  MergeMem  === _ 1 7 40 1 1 235  [[ 157 ]]  { N40:rawptr:BotPTR - - N235:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 229 6 153 8 9 (156 132 32 1 233 1 1 1 1 132 233 197 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 168 202 ]]  #long:16
 166  ConI  === 0  [[ 167 204 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 176 199 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 183  Phi  === 189 201 1  [[ 237 236 235 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 45 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 189  Loop  === 189 217 1  [[ 189 183 116 138 ]] inner  !orig=[112] !jvms: loop_invariant::micro @ bci:2 (line 6)
 191  Region  === 191 192 195  [[ 191 84 ]]  !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 192  IfFalse  === 79  [[ 191 ]] #0 !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 193  If  === 45 120  [[ 194 195 ]] P=0.999999, C=-1.000000
 194  IfTrue  === 193  [[ 79 132 ]] #1
 195  IfFalse  === 193  [[ 191 ]] #0
 197  AddD  === _ 231 232  [[ 157 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 198  Loop  === 198 1 1  [[ 198 151 ]] 
 199  LoadP  === 222 40 175  [[ 217 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 217 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 183 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 132 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 132 132 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 239 241  [[ 201 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 239 ]]  !orig=143 !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=137 !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 216 135  [[ 207 ]]  !orig=136 !jvms: loop_invariant::micro @ bci:5 (line 6)
 209  Bool  === _ 210  [[ 221 ]] [lt] !orig=150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 210  CmpU  === _ 243 135  [[ 209 ]]  !orig=149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 211  AddI  === _ 243 78  [[ 116 217 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 241 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 216  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 216  Phi  === 218 36 1  [[ 208 215 243 ]]  #int !orig=116 !jvms: loop_invariant::micro @ bci:2 (line 6)
 217  SafePoint  === 222 1 200 1 1 199 132 32 1 211 1 1 1 1  [[ 189 ]]  SafePoint  !orig=172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 218  Loop  === 218 111 1  [[ 216 218 219 223 ]] inner  !orig=189,[112] !jvms: loop_invariant::micro @ bci:2 (line 6)
 219  If  === 218 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=138 !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 224 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 224 209  [[ 222 228 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 199 201 213 217 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 223  Phi  === 218 7 1  [[ 236 237 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=183,[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
 224  Loop  === 224 220 139  [[ 221 224 237 239 241 243 ]] partial_peel  !orig=198
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 227  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 227  IfFalse  === 138  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 228  IfFalse  === 221  [[ 229 ]] #0 !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 229  Region  === 229 228 230  [[ 229 157 231 232 233 235 ]]  !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 230  IfFalse  === 151  [[ 229 ]] #0 !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 231  Phi  === 229 239 143  [[ 197 ]]  #double
 232  Phi  === 229 241 145  [[ 197 ]]  #double
 233  Phi  === 229 243 116  [[ 157 157 ]]  #int
 235  Phi  === 229 237 183  [[ 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 236  Phi  === 226 223 183  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 224 223 183  [[ 235 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 239  Phi  === 224 206 143  [[ 231 205 ]]  #double
 241  Phi  === 224 214 145  [[ 232 205 ]]  #double
 243  Phi  === 224 216 116  [[ 211 233 213 210 ]]  #int
AFTER: BEFORE_ITER_GVN
   0  Root  === 0 70 88 99 110 179 161  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 126 65 78 83 94 105 190 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 106 95 84 157 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 223 41 25 32 36 37 153 92 103 81 16 173 200 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 106 88 84 99 95 110 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 95 66 106 84 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 143 84 95 106 172 206 217 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 216 106 95 84 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 176 173 153 92 103 199 200 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 186 51  [[ 45 46 193 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 132 119 84 95 106 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 119 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 79 90 101 171 211 ]]  #int:1
  79  ParsePredicate  === 194 78  [[ 192 89 ]]  #Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 191 6 81 8 9 (83 46 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  89  IfTrue  === 79  [[ 90 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  90  ParsePredicate  === 89 78  [[ 91 100 ]]  #Profiled_Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  91  IfFalse  === 90  [[ 95 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  92  MergeMem  === _ 1 7 40  [[ 95 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  94  ConI  === 0  [[ 95 ]]  #int:-66
  95  CallStaticJava  === 91 6 92 8 9 (94 46 32 1 36 1 1 1 1 ) [[ 96 ]] # Static uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  96  Proj  === 95  [[ 99 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  99  Halt  === 96 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 100  IfTrue  === 90  [[ 101 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 101  ParsePredicate  === 100 78  [[ 102 111 ]]  #Loop_Limit_Check  !jvms: loop_invariant::micro @ bci:2 (line 6)
 102  IfFalse  === 101  [[ 106 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 103  MergeMem  === _ 1 7 40  [[ 106 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
 105  ConI  === 0  [[ 106 ]]  #int:-146
 106  CallStaticJava  === 102 6 103 8 9 (105 46 32 1 36 1 1 1 1 ) [[ 107 ]] # Static uncommon_trap(reason='loop_limit_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
 107  Proj  === 106  [[ 110 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 110  Halt  === 107 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 111  IfTrue  === 101  [[ 218 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 116  Phi  === 189 211 1  [[ 144 243 233 136 ]]  #int !jvms: loop_invariant::micro @ bci:2 (line 6)
 119  CmpP  === _ 46 47  [[ 120 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 120  Bool  === _ 119  [[ 193 ]] [ne] !jvms: loop_invariant::micro @ bci:4 (line 6)
 132  CastPP  === 194 46  [[ 169 134 134 169 172 168 157 157 202 203 203 217 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 136 149 208 210 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 136  CmpI  === _ 116 135  [[ 137 ]]  !jvms: loop_invariant::micro @ bci:5 (line 6)
 137  Bool  === _ 136  [[ 138 ]] [lt] !jvms: loop_invariant::micro @ bci:5 (line 6)
 138  If  === 189 137  [[ 139 227 ]] P=0.999026, C=211589.000000 !jvms: loop_invariant::micro @ bci:5 (line 6)
 139  IfTrue  === 138  [[ 224 143 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 143  SqrtD  === 139 32  [[ 239 231 ]]  !jvms: loop_invariant::micro @ bci:9 (line 7)
 144  ConvI2D  === _ 116  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 232 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 149  CmpU  === _ 1 135  [[ 150 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 150  Bool  === _ 149  [[ 151 ]] [lt] !jvms: loop_invariant::micro @ bci:28 (line 9)
 151  RangeCheck  === 198 150  [[ 152 230 ]] P=0.999999, C=-1.000000 !jvms: loop_invariant::micro @ bci:28 (line 9)
 153  MergeMem  === _ 1 7 40 1 1 235  [[ 157 ]]  { N40:rawptr:BotPTR - - N235:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 229 6 153 8 9 (156 132 32 1 233 1 1 1 1 132 233 197 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 168 202 ]]  #long:16
 166  ConI  === 0  [[ 167 204 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 176 199 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 183  Phi  === 189 201 1  [[ 237 236 235 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 45 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 189  Loop  === 189 217 1  [[ 189 183 116 138 ]] inner  !orig=[112] !jvms: loop_invariant::micro @ bci:2 (line 6)
 191  Region  === 191 192 195  [[ 191 84 ]]  !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 192  IfFalse  === 79  [[ 191 ]] #0 !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 193  If  === 45 120  [[ 194 195 ]] P=0.999999, C=-1.000000
 194  IfTrue  === 193  [[ 79 132 ]] #1
 195  IfFalse  === 193  [[ 191 ]] #0
 197  AddD  === _ 231 232  [[ 157 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 198  Loop  === 198 1 1  [[ 198 151 ]] 
 199  LoadP  === 222 40 175  [[ 217 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 217 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 183 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 132 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 132 132 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 239 241  [[ 201 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 239 ]]  !orig=143 !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=137 !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 216 135  [[ 207 ]]  !orig=136 !jvms: loop_invariant::micro @ bci:5 (line 6)
 209  Bool  === _ 210  [[ 221 ]] [lt] !orig=150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 210  CmpU  === _ 243 135  [[ 209 ]]  !orig=149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 211  AddI  === _ 243 78  [[ 116 217 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 241 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 216  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 216  Phi  === 218 36 1  [[ 208 215 243 ]]  #int !orig=116 !jvms: loop_invariant::micro @ bci:2 (line 6)
 217  SafePoint  === 222 1 200 1 1 199 132 32 1 211 1 1 1 1  [[ 189 ]]  SafePoint  !orig=172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 218  Loop  === 218 111 1  [[ 216 218 219 223 ]] inner  !orig=189,[112] !jvms: loop_invariant::micro @ bci:2 (line 6)
 219  If  === 218 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=138 !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 224 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 224 209  [[ 222 228 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 199 201 213 217 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 223  Phi  === 218 7 1  [[ 236 237 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=183,[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
 224  Loop  === 224 220 139  [[ 221 224 237 239 241 243 ]] partial_peel  !orig=198
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 227  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 227  IfFalse  === 138  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 228  IfFalse  === 221  [[ 229 ]] #0 !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 229  Region  === 229 228 230  [[ 229 157 231 232 233 235 ]]  !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 230  IfFalse  === 151  [[ 229 ]] #0 !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 231  Phi  === 229 239 143  [[ 197 ]]  #double
 232  Phi  === 229 241 145  [[ 197 ]]  #double
 233  Phi  === 229 243 116  [[ 157 157 ]]  #int
 235  Phi  === 229 237 183  [[ 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 236  Phi  === 226 223 183  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 224 223 183  [[ 235 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 239  Phi  === 224 206 143  [[ 231 205 ]]  #double
 241  Phi  === 224 214 145  [[ 232 205 ]]  #double
 243  Phi  === 224 216 116  [[ 211 233 213 210 ]]  #int
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 99 110 179 161  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 126 65 78 83 94 105 190 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 106 95 84 157 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 223 41 25 32 36 37 153 92 103 81 16 173 200 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 106 88 84 99 95 110 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 95 66 106 84 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 143 84 95 106 172 206 217 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 216 106 95 84 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 176 173 153 92 103 199 200 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 186 51  [[ 45 46 193 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 132 119 84 95 106 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 119 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 79 90 101 171 211 ]]  #int:1
  79  ParsePredicate  === 194 78  [[ 192 89 ]]  #Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 191 6 81 8 9 (83 46 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  89  IfTrue  === 79  [[ 90 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  90  ParsePredicate  === 89 78  [[ 91 100 ]]  #Profiled_Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  91  IfFalse  === 90  [[ 95 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  92  MergeMem  === _ 1 7 40  [[ 95 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  94  ConI  === 0  [[ 95 ]]  #int:-66
  95  CallStaticJava  === 91 6 92 8 9 (94 46 32 1 36 1 1 1 1 ) [[ 96 ]] # Static uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  96  Proj  === 95  [[ 99 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  99  Halt  === 96 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 100  IfTrue  === 90  [[ 101 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 101  ParsePredicate  === 100 78  [[ 102 111 ]]  #Loop_Limit_Check  !jvms: loop_invariant::micro @ bci:2 (line 6)
 102  IfFalse  === 101  [[ 106 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 103  MergeMem  === _ 1 7 40  [[ 106 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
 105  ConI  === 0  [[ 106 ]]  #int:-146
 106  CallStaticJava  === 102 6 103 8 9 (105 46 32 1 36 1 1 1 1 ) [[ 107 ]] # Static uncommon_trap(reason='loop_limit_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
 107  Proj  === 106  [[ 110 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 110  Halt  === 107 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 111  IfTrue  === 101  [[ 218 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 116  Phi  === 189 211 1  [[ 144 243 233 136 ]]  #int !jvms: loop_invariant::micro @ bci:2 (line 6)
 119  CmpP  === _ 46 47  [[ 120 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 120  Bool  === _ 119  [[ 193 ]] [ne] !jvms: loop_invariant::micro @ bci:4 (line 6)
 132  CastPP  === 194 46  [[ 169 134 134 169 172 168 157 157 202 203 203 217 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 136 149 208 210 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 136  CmpI  === _ 116 135  [[ 137 ]]  !jvms: loop_invariant::micro @ bci:5 (line 6)
 137  Bool  === _ 136  [[ 138 ]] [lt] !jvms: loop_invariant::micro @ bci:5 (line 6)
 138  If  === 189 137  [[ 139 227 ]] P=0.999026, C=211589.000000 !jvms: loop_invariant::micro @ bci:5 (line 6)
 139  IfTrue  === 138  [[ 224 143 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 143  SqrtD  === 139 32  [[ 239 231 ]]  !jvms: loop_invariant::micro @ bci:9 (line 7)
 144  ConvI2D  === _ 116  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 232 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 149  CmpU  === _ 1 135  [[ 150 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 150  Bool  === _ 149  [[ 151 ]] [lt] !jvms: loop_invariant::micro @ bci:28 (line 9)
 151  RangeCheck  === 198 150  [[ 152 230 ]] P=0.999999, C=-1.000000 !jvms: loop_invariant::micro @ bci:28 (line 9)
 153  MergeMem  === _ 1 7 40 1 1 235  [[ 157 ]]  { N40:rawptr:BotPTR - - N235:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 229 6 153 8 9 (156 132 32 1 233 1 1 1 1 132 233 197 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 168 202 ]]  #long:16
 166  ConI  === 0  [[ 167 204 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 176 199 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 183  Phi  === 189 201 1  [[ 237 236 235 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 45 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 189  Loop  === 189 217 1  [[ 189 183 116 138 ]] inner  !orig=[112] !jvms: loop_invariant::micro @ bci:2 (line 6)
 191  Region  === 191 192 195  [[ 191 84 ]]  !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 192  IfFalse  === 79  [[ 191 ]] #0 !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 193  If  === 45 120  [[ 194 195 ]] P=0.999999, C=-1.000000
 194  IfTrue  === 193  [[ 79 132 ]] #1
 195  IfFalse  === 193  [[ 191 ]] #0
 197  AddD  === _ 231 232  [[ 157 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 198  Loop  === 198 1 1  [[ 198 151 ]] 
 199  LoadP  === 222 40 175  [[ 217 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 217 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 183 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 132 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 132 132 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 239 241  [[ 201 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 239 ]]  !orig=143 !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=137 !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 216 135  [[ 207 ]]  !orig=136 !jvms: loop_invariant::micro @ bci:5 (line 6)
 209  Bool  === _ 210  [[ 221 ]] [lt] !orig=150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 210  CmpU  === _ 243 135  [[ 209 ]]  !orig=149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 211  AddI  === _ 243 78  [[ 116 217 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 241 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 216  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 216  Phi  === 218 36 1  [[ 208 215 243 ]]  #int !orig=116 !jvms: loop_invariant::micro @ bci:2 (line 6)
 217  SafePoint  === 222 1 200 1 1 199 132 32 1 211 1 1 1 1  [[ 189 ]]  SafePoint  !orig=172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 218  Loop  === 218 111 1  [[ 216 218 219 223 ]] inner  !orig=189,[112] !jvms: loop_invariant::micro @ bci:2 (line 6)
 219  If  === 218 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=138 !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 224 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 224 209  [[ 222 228 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 199 201 213 217 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 223  Phi  === 218 7 1  [[ 236 237 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=183,[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
 224  Loop  === 224 220 139  [[ 221 224 237 239 241 243 ]] partial_peel  !orig=198
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 227  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 227  IfFalse  === 138  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 228  IfFalse  === 221  [[ 229 ]] #0 !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 229  Region  === 229 228 230  [[ 229 157 231 232 233 235 ]]  !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 230  IfFalse  === 151  [[ 229 ]] #0 !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 231  Phi  === 229 239 143  [[ 197 ]]  #double
 232  Phi  === 229 241 145  [[ 197 ]]  #double
 233  Phi  === 229 243 116  [[ 157 157 ]]  #int
 235  Phi  === 229 237 183  [[ 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 236  Phi  === 226 223 183  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 224 223 183  [[ 235 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 239  Phi  === 224 206 143  [[ 231 205 ]]  #double
 241  Phi  === 224 214 145  [[ 232 205 ]]  #double
 243  Phi  === 224 216 116  [[ 211 233 213 210 ]]  #int
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 99 110 179 161  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 126 65 78 83 94 105 190 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 106 95 84 157 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 223 41 25 32 36 37 153 92 103 81 16 173 200 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 106 88 84 99 95 110 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 95 66 106 84 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 143 84 95 106 172 206 217 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 216 106 95 84 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 176 173 153 92 103 199 200 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 186 51  [[ 45 46 193 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 132 119 84 95 106 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 119 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 79 90 101 171 211 ]]  #int:1
  79  ParsePredicate  === 194 78  [[ 192 89 ]]  #Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 191 6 81 8 9 (83 46 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  89  IfTrue  === 79  [[ 90 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  90  ParsePredicate  === 89 78  [[ 91 100 ]]  #Profiled_Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  91  IfFalse  === 90  [[ 95 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  92  MergeMem  === _ 1 7 40  [[ 95 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  94  ConI  === 0  [[ 95 ]]  #int:-66
  95  CallStaticJava  === 91 6 92 8 9 (94 46 32 1 36 1 1 1 1 ) [[ 96 ]] # Static uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  96  Proj  === 95  [[ 99 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  99  Halt  === 96 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 100  IfTrue  === 90  [[ 101 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 101  ParsePredicate  === 100 78  [[ 102 111 ]]  #Loop_Limit_Check  !jvms: loop_invariant::micro @ bci:2 (line 6)
 102  IfFalse  === 101  [[ 106 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 103  MergeMem  === _ 1 7 40  [[ 106 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
 105  ConI  === 0  [[ 106 ]]  #int:-146
 106  CallStaticJava  === 102 6 103 8 9 (105 46 32 1 36 1 1 1 1 ) [[ 107 ]] # Static uncommon_trap(reason='loop_limit_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
 107  Proj  === 106  [[ 110 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 110  Halt  === 107 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 111  IfTrue  === 101  [[ 218 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 116  Phi  === 189 211 1  [[ 144 243 233 136 ]]  #int !jvms: loop_invariant::micro @ bci:2 (line 6)
 119  CmpP  === _ 46 47  [[ 120 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 120  Bool  === _ 119  [[ 193 ]] [ne] !jvms: loop_invariant::micro @ bci:4 (line 6)
 132  CastPP  === 194 46  [[ 169 134 134 169 172 168 157 157 202 203 203 217 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 136 149 208 210 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 136  CmpI  === _ 116 135  [[ 137 ]]  !jvms: loop_invariant::micro @ bci:5 (line 6)
 137  Bool  === _ 136  [[ 138 ]] [lt] !jvms: loop_invariant::micro @ bci:5 (line 6)
 138  If  === 189 137  [[ 139 227 ]] P=0.999026, C=211589.000000 !jvms: loop_invariant::micro @ bci:5 (line 6)
 139  IfTrue  === 138  [[ 224 143 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 143  SqrtD  === 139 32  [[ 239 231 ]]  !jvms: loop_invariant::micro @ bci:9 (line 7)
 144  ConvI2D  === _ 116  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 232 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 149  CmpU  === _ 1 135  [[ 150 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 150  Bool  === _ 149  [[ 151 ]] [lt] !jvms: loop_invariant::micro @ bci:28 (line 9)
 151  RangeCheck  === 1 150  [[ 152 230 ]] P=0.999999, C=-1.000000 !jvms: loop_invariant::micro @ bci:28 (line 9)
 153  MergeMem  === _ 1 7 40 1 1 235  [[ 157 ]]  { N40:rawptr:BotPTR - - N235:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 229 6 153 8 9 (156 132 32 1 233 1 1 1 1 132 233 197 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 168 202 ]]  #long:16
 166  ConI  === 0  [[ 167 204 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 176 199 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 183  Phi  === 189 201 1  [[ 237 236 235 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 45 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 189  Loop  === 189 217 1  [[ 189 183 116 138 ]] inner  !orig=[112] !jvms: loop_invariant::micro @ bci:2 (line 6)
 191  Region  === 191 192 195  [[ 191 84 ]]  !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 192  IfFalse  === 79  [[ 191 ]] #0 !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 193  If  === 45 120  [[ 194 195 ]] P=0.999999, C=-1.000000
 194  IfTrue  === 193  [[ 79 132 ]] #1
 195  IfFalse  === 193  [[ 191 ]] #0
 197  AddD  === _ 231 232  [[ 157 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 199  LoadP  === 222 40 175  [[ 217 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 217 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 183 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 132 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 132 132 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 239 241  [[ 201 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 239 ]]  !orig=143 !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=137 !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 216 135  [[ 207 ]]  !orig=136 !jvms: loop_invariant::micro @ bci:5 (line 6)
 209  Bool  === _ 210  [[ 221 ]] [lt] !orig=150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 210  CmpU  === _ 243 135  [[ 209 ]]  !orig=149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 211  AddI  === _ 243 78  [[ 116 217 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 241 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 216  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 216  Phi  === 218 36 1  [[ 208 215 243 ]]  #int !orig=116 !jvms: loop_invariant::micro @ bci:2 (line 6)
 217  SafePoint  === 222 1 200 1 1 199 132 32 1 211 1 1 1 1  [[ 189 ]]  SafePoint  !orig=172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 218  Loop  === 218 111 1  [[ 216 218 219 223 ]] inner  !orig=189,[112] !jvms: loop_invariant::micro @ bci:2 (line 6)
 219  If  === 218 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=138 !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 224 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 224 209  [[ 222 228 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 199 201 213 217 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 223  Phi  === 218 7 1  [[ 236 237 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=183,[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
 224  Loop  === 224 220 139  [[ 221 224 237 239 241 243 ]] partial_peel  !orig=[198]
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 227  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 227  IfFalse  === 138  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 228  IfFalse  === 221  [[ 229 ]] #0 !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 229  Region  === 229 228 230  [[ 229 157 231 232 233 235 ]]  !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 230  IfFalse  === 151  [[ 229 ]] #0 !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 231  Phi  === 229 239 143  [[ 197 ]]  #double
 232  Phi  === 229 241 145  [[ 197 ]]  #double
 233  Phi  === 229 243 116  [[ 157 157 ]]  #int
 235  Phi  === 229 237 183  [[ 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 236  Phi  === 226 223 183  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 224 223 183  [[ 235 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 239  Phi  === 224 206 143  [[ 231 205 ]]  #double
 241  Phi  === 224 214 145  [[ 232 205 ]]  #double
 243  Phi  === 224 216 116  [[ 211 233 213 210 ]]  #int
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 99 110 179 161  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 126 65 78 83 94 105 190 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 106 95 84 157 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 223 41 25 32 36 37 153 92 103 81 16 200 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 106 88 84 99 95 110 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 95 66 106 84 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 143 84 95 106 217 206 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 216 106 95 84 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 199 153 92 103 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 186 51  [[ 45 46 193 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 132 119 84 95 106 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 119 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 79 90 101 211 ]]  #int:1
  79  ParsePredicate  === 194 78  [[ 192 89 ]]  #Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 191 6 81 8 9 (83 46 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  89  IfTrue  === 79  [[ 90 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  90  ParsePredicate  === 89 78  [[ 91 100 ]]  #Profiled_Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  91  IfFalse  === 90  [[ 95 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  92  MergeMem  === _ 1 7 40  [[ 95 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  94  ConI  === 0  [[ 95 ]]  #int:-66
  95  CallStaticJava  === 91 6 92 8 9 (94 46 32 1 36 1 1 1 1 ) [[ 96 ]] # Static uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  96  Proj  === 95  [[ 99 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  99  Halt  === 96 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 100  IfTrue  === 90  [[ 101 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 101  ParsePredicate  === 100 78  [[ 102 111 ]]  #Loop_Limit_Check  !jvms: loop_invariant::micro @ bci:2 (line 6)
 102  IfFalse  === 101  [[ 106 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 103  MergeMem  === _ 1 7 40  [[ 106 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
 105  ConI  === 0  [[ 106 ]]  #int:-146
 106  CallStaticJava  === 102 6 103 8 9 (105 46 32 1 36 1 1 1 1 ) [[ 107 ]] # Static uncommon_trap(reason='loop_limit_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
 107  Proj  === 106  [[ 110 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 110  Halt  === 107 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 111  IfTrue  === 101  [[ 218 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 116  Phi  === 189 211 1  [[ 144 243 233 136 ]]  #int !jvms: loop_invariant::micro @ bci:2 (line 6)
 119  CmpP  === _ 46 47  [[ 120 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 120  Bool  === _ 119  [[ 193 ]] [ne] !jvms: loop_invariant::micro @ bci:4 (line 6)
 132  CastPP  === 194 46  [[ 202 134 134 203 217 203 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 136 210 208 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 136  CmpI  === _ 116 135  [[ 137 ]]  !jvms: loop_invariant::micro @ bci:5 (line 6)
 137  Bool  === _ 136  [[ 138 ]] [lt] !jvms: loop_invariant::micro @ bci:5 (line 6)
 138  If  === 189 137  [[ 139 227 ]] P=0.999026, C=211589.000000 !jvms: loop_invariant::micro @ bci:5 (line 6)
 139  IfTrue  === 138  [[ 224 143 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 143  SqrtD  === 139 32  [[ 239 231 ]]  !jvms: loop_invariant::micro @ bci:9 (line 7)
 144  ConvI2D  === _ 116  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 232 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 235  [[ 157 ]]  { N40:rawptr:BotPTR - - N235:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 229 6 153 8 9 (156 132 32 1 233 1 1 1 1 132 233 197 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 ]]  #long:16
 166  ConI  === 0  [[ 204 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 199 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 183  Phi  === 189 201 1  [[ 237 236 235 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 45 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 189  Loop  === 189 217 1  [[ 189 183 116 138 ]] inner  !orig=[112] !jvms: loop_invariant::micro @ bci:2 (line 6)
 191  Region  === 191 192 195  [[ 191 84 ]]  !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 192  IfFalse  === 79  [[ 191 ]] #0 !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 193  If  === 45 120  [[ 194 195 ]] P=0.999999, C=-1.000000
 194  IfTrue  === 193  [[ 79 132 ]] #1
 195  IfFalse  === 193  [[ 191 ]] #0
 197  AddD  === _ 231 232  [[ 157 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 199  LoadP  === 222 40 175  [[ 217 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 217 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 183 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 132 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 132 132 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 239 241  [[ 201 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 239 ]]  !orig=143 !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=137 !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 216 135  [[ 207 ]]  !orig=136 !jvms: loop_invariant::micro @ bci:5 (line 6)
 209  Bool  === _ 210  [[ 221 ]] [lt] !orig=150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 210  CmpU  === _ 243 135  [[ 209 ]]  !orig=149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 211  AddI  === _ 243 78  [[ 116 217 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 241 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 216  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 216  Phi  === 218 36 1  [[ 208 215 243 ]]  #int !orig=116 !jvms: loop_invariant::micro @ bci:2 (line 6)
 217  SafePoint  === 222 1 200 1 1 199 132 32 1 211 1 1 1 1  [[ 189 ]]  SafePoint  !orig=172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 218  Loop  === 218 111 1  [[ 216 218 219 223 ]] inner  !orig=189,[112] !jvms: loop_invariant::micro @ bci:2 (line 6)
 219  If  === 218 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=138 !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 224 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 224 209  [[ 222 228 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 199 201 213 217 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 223  Phi  === 218 7 1  [[ 236 237 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=183,[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
 224  Loop  === 224 220 139  [[ 221 224 237 239 241 243 ]] partial_peel  !orig=[198]
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 227  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 227  IfFalse  === 138  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 228  IfFalse  === 221  [[ 229 ]] #0 !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 229  Region  === 229 228 1  [[ 229 157 231 232 233 235 ]]  !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 231  Phi  === 229 239 143  [[ 197 ]]  #double
 232  Phi  === 229 241 145  [[ 197 ]]  #double
 233  Phi  === 229 243 116  [[ 157 157 ]]  #int
 235  Phi  === 229 237 183  [[ 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 236  Phi  === 226 223 183  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 224 223 183  [[ 235 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 239  Phi  === 224 206 143  [[ 231 205 ]]  #double
 241  Phi  === 224 214 145  [[ 232 205 ]]  #double
 243  Phi  === 224 216 116  [[ 211 233 213 210 ]]  #int
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 99 110 179 161  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 126 65 78 83 94 105 190 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 106 95 84 157 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 223 41 25 32 36 37 153 92 103 81 16 200 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 106 88 84 99 95 110 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 95 66 106 84 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 143 84 95 106 217 206 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 216 106 95 84 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 199 153 92 103 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 186 51  [[ 45 46 193 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 132 119 84 95 106 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 119 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 79 90 101 211 ]]  #int:1
  79  ParsePredicate  === 194 78  [[ 192 89 ]]  #Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 191 6 81 8 9 (83 46 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  89  IfTrue  === 79  [[ 90 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  90  ParsePredicate  === 89 78  [[ 91 100 ]]  #Profiled_Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  91  IfFalse  === 90  [[ 95 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  92  MergeMem  === _ 1 7 40  [[ 95 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  94  ConI  === 0  [[ 95 ]]  #int:-66
  95  CallStaticJava  === 91 6 92 8 9 (94 46 32 1 36 1 1 1 1 ) [[ 96 ]] # Static uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  96  Proj  === 95  [[ 99 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  99  Halt  === 96 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 100  IfTrue  === 90  [[ 101 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 101  ParsePredicate  === 100 78  [[ 102 111 ]]  #Loop_Limit_Check  !jvms: loop_invariant::micro @ bci:2 (line 6)
 102  IfFalse  === 101  [[ 106 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 103  MergeMem  === _ 1 7 40  [[ 106 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
 105  ConI  === 0  [[ 106 ]]  #int:-146
 106  CallStaticJava  === 102 6 103 8 9 (105 46 32 1 36 1 1 1 1 ) [[ 107 ]] # Static uncommon_trap(reason='loop_limit_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
 107  Proj  === 106  [[ 110 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 110  Halt  === 107 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 111  IfTrue  === 101  [[ 218 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 116  Phi  === 189 211 1  [[ 144 243 233 136 ]]  #int !jvms: loop_invariant::micro @ bci:2 (line 6)
 119  CmpP  === _ 46 47  [[ 120 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 120  Bool  === _ 119  [[ 193 ]] [ne] !jvms: loop_invariant::micro @ bci:4 (line 6)
 132  CastPP  === 194 46  [[ 202 134 134 203 217 203 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 136 210 208 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 136  CmpI  === _ 116 135  [[ 137 ]]  !jvms: loop_invariant::micro @ bci:5 (line 6)
 137  Bool  === _ 136  [[ 138 ]] [lt] !jvms: loop_invariant::micro @ bci:5 (line 6)
 138  If  === 189 137  [[ 139 227 ]] P=0.999026, C=211589.000000 !jvms: loop_invariant::micro @ bci:5 (line 6)
 139  IfTrue  === 138  [[ 224 143 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 143  SqrtD  === 139 32  [[ 239 231 ]]  !jvms: loop_invariant::micro @ bci:9 (line 7)
 144  ConvI2D  === _ 116  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 232 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 235  [[ 157 ]]  { N40:rawptr:BotPTR - - N235:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 229 6 153 8 9 (156 132 32 1 233 1 1 1 1 132 233 197 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 ]]  #long:16
 166  ConI  === 0  [[ 204 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 199 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 183  Phi  === 189 201 1  [[ 237 236 235 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 45 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 189  Loop  === 189 217 1  [[ 189 183 116 138 ]] inner  !orig=[112] !jvms: loop_invariant::micro @ bci:2 (line 6)
 191  Region  === 191 192 195  [[ 191 84 ]]  !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 192  IfFalse  === 79  [[ 191 ]] #0 !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 193  If  === 45 120  [[ 194 195 ]] P=0.999999, C=-1.000000
 194  IfTrue  === 193  [[ 79 132 ]] #1
 195  IfFalse  === 193  [[ 191 ]] #0
 197  AddD  === _ 231 232  [[ 157 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 199  LoadP  === 222 40 175  [[ 217 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 217 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 183 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 132 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 132 132 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 239 241  [[ 201 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 239 ]]  !orig=143 !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=137 !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 216 135  [[ 207 ]]  !orig=136 !jvms: loop_invariant::micro @ bci:5 (line 6)
 209  Bool  === _ 210  [[ 221 ]] [lt] !orig=150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 210  CmpU  === _ 243 135  [[ 209 ]]  !orig=149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 211  AddI  === _ 243 78  [[ 116 217 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 241 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 216  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 216  Phi  === 218 36 1  [[ 208 215 243 ]]  #int !orig=116 !jvms: loop_invariant::micro @ bci:2 (line 6)
 217  SafePoint  === 222 1 200 1 1 199 132 32 1 211 1 1 1 1  [[ 189 ]]  SafePoint  !orig=172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 218  Loop  === 218 111 1  [[ 216 218 219 223 ]] inner  !orig=189,[112] !jvms: loop_invariant::micro @ bci:2 (line 6)
 219  If  === 218 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=138 !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 224 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 224 209  [[ 222 228 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 199 201 213 217 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 223  Phi  === 218 7 1  [[ 236 237 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=183,[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
 224  Loop  === 224 220 139  [[ 221 224 237 239 241 243 ]] partial_peel  !orig=[198]
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 227  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 227  IfFalse  === 138  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 228  IfFalse  === 221  [[ 229 ]] #0 !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 229  Region  === 229 228 1  [[ 229 157 231 232 233 235 ]]  !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 231  Phi  === 229 239 143  [[ 197 ]]  #double
 232  Phi  === 229 241 145  [[ 197 ]]  #double
 233  Phi  === 229 243 116  [[ 157 157 ]]  #int
 235  Phi  === 229 237 183  [[ 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 236  Phi  === 226 223 183  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 224 223 183  [[ 235 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 239  Phi  === 224 206 143  [[ 231 205 ]]  #double
 241  Phi  === 224 214 145  [[ 232 205 ]]  #double
 243  Phi  === 224 216 116  [[ 211 233 213 210 ]]  #int
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 99 110 179 161  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 126 65 78 83 94 105 190 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 106 95 84 157 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 223 41 25 32 36 37 153 92 103 81 16 200 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 106 88 84 99 95 110 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 95 66 106 84 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 143 84 95 106 217 206 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 106 95 84 243 215 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 199 153 92 103 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 186 51  [[ 45 46 193 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 132 119 84 95 106 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 119 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 79 90 101 211 ]]  #int:1
  79  ParsePredicate  === 194 78  [[ 192 89 ]]  #Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 191 6 81 8 9 (83 46 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  89  IfTrue  === 79  [[ 90 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  90  ParsePredicate  === 89 78  [[ 91 100 ]]  #Profiled_Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  91  IfFalse  === 90  [[ 95 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  92  MergeMem  === _ 1 7 40  [[ 95 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  94  ConI  === 0  [[ 95 ]]  #int:-66
  95  CallStaticJava  === 91 6 92 8 9 (94 46 32 1 36 1 1 1 1 ) [[ 96 ]] # Static uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  96  Proj  === 95  [[ 99 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  99  Halt  === 96 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 100  IfTrue  === 90  [[ 101 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 101  ParsePredicate  === 100 78  [[ 102 111 ]]  #Loop_Limit_Check  !jvms: loop_invariant::micro @ bci:2 (line 6)
 102  IfFalse  === 101  [[ 106 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 103  MergeMem  === _ 1 7 40  [[ 106 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
 105  ConI  === 0  [[ 106 ]]  #int:-146
 106  CallStaticJava  === 102 6 103 8 9 (105 46 32 1 36 1 1 1 1 ) [[ 107 ]] # Static uncommon_trap(reason='loop_limit_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
 107  Proj  === 106  [[ 110 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 110  Halt  === 107 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 111  IfTrue  === 101  [[ 218 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 116  Phi  === 189 211 1  [[ 144 243 233 136 ]]  #int !jvms: loop_invariant::micro @ bci:2 (line 6)
 119  CmpP  === _ 46 47  [[ 120 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 120  Bool  === _ 119  [[ 193 ]] [ne] !jvms: loop_invariant::micro @ bci:4 (line 6)
 132  CastPP  === 194 46  [[ 202 134 134 203 217 203 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 136 210 208 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 136  CmpI  === _ 116 135  [[ 137 ]]  !jvms: loop_invariant::micro @ bci:5 (line 6)
 137  Bool  === _ 136  [[ 138 ]] [lt] !jvms: loop_invariant::micro @ bci:5 (line 6)
 138  If  === 189 137  [[ 139 227 ]] P=0.999026, C=211589.000000 !jvms: loop_invariant::micro @ bci:5 (line 6)
 139  IfTrue  === 138  [[ 224 143 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 143  SqrtD  === 139 32  [[ 239 231 ]]  !jvms: loop_invariant::micro @ bci:9 (line 7)
 144  ConvI2D  === _ 116  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 232 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 235  [[ 157 ]]  { N40:rawptr:BotPTR - - N235:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 229 6 153 8 9 (156 132 32 1 233 1 1 1 1 132 233 197 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 ]]  #long:16
 166  ConI  === 0  [[ 204 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 199 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 183  Phi  === 189 201 1  [[ 237 236 235 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 45 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 189  Loop  === 189 217 1  [[ 189 183 116 138 ]] inner  !orig=[112] !jvms: loop_invariant::micro @ bci:2 (line 6)
 191  Region  === 191 192 195  [[ 191 84 ]]  !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 192  IfFalse  === 79  [[ 191 ]] #0 !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 193  If  === 45 120  [[ 194 195 ]] P=0.999999, C=-1.000000
 194  IfTrue  === 193  [[ 79 132 ]] #1
 195  IfFalse  === 193  [[ 191 ]] #0
 197  AddD  === _ 231 232  [[ 157 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 199  LoadP  === 222 40 175  [[ 217 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 217 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 183 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 132 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 132 132 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 239 241  [[ 201 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 239 ]]  !orig=143 !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=137 !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=136 !jvms: loop_invariant::micro @ bci:5 (line 6)
 209  Bool  === _ 210  [[ 221 ]] [lt] !orig=150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 210  CmpU  === _ 243 135  [[ 209 ]]  !orig=149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 211  AddI  === _ 243 78  [[ 116 217 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 241 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 217  SafePoint  === 222 1 200 1 1 199 132 32 1 211 1 1 1 1  [[ 189 ]]  SafePoint  !orig=172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 218  Loop  === 218 111 1  [[ 223 218 219 ]] inner  !orig=189,[112] !jvms: loop_invariant::micro @ bci:2 (line 6)
 219  If  === 218 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=138 !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 224 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 224 209  [[ 222 228 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 199 201 213 217 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 223  Phi  === 218 7 1  [[ 236 237 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=183,[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
 224  Loop  === 224 220 139  [[ 221 224 237 239 241 243 ]] partial_peel  !orig=[198]
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 227  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 227  IfFalse  === 138  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 228  IfFalse  === 221  [[ 229 ]] #0 !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 229  Region  === 229 228 1  [[ 229 157 231 232 233 235 ]]  !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 231  Phi  === 229 239 143  [[ 197 ]]  #double
 232  Phi  === 229 241 145  [[ 197 ]]  #double
 233  Phi  === 229 243 116  [[ 157 157 ]]  #int
 235  Phi  === 229 237 183  [[ 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 236  Phi  === 226 223 183  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 224 223 183  [[ 235 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 239  Phi  === 224 206 143  [[ 231 205 ]]  #double
 241  Phi  === 224 214 145  [[ 232 205 ]]  #double
 243  Phi  === 224 36 116  [[ 211 233 213 210 ]]  #int
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 99 110 179 161  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 126 65 78 83 94 105 190 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 106 95 84 157 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 92 103 81 16 200 237 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 106 88 84 99 95 110 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 95 66 106 84 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 143 84 95 106 217 206 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 106 95 84 243 215 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 199 153 92 103 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 186 51  [[ 45 46 193 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 132 119 84 95 106 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 119 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 79 90 101 211 ]]  #int:1
  79  ParsePredicate  === 194 78  [[ 192 89 ]]  #Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 191 6 81 8 9 (83 46 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  89  IfTrue  === 79  [[ 90 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  90  ParsePredicate  === 89 78  [[ 91 100 ]]  #Profiled_Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  91  IfFalse  === 90  [[ 95 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  92  MergeMem  === _ 1 7 40  [[ 95 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  94  ConI  === 0  [[ 95 ]]  #int:-66
  95  CallStaticJava  === 91 6 92 8 9 (94 46 32 1 36 1 1 1 1 ) [[ 96 ]] # Static uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  96  Proj  === 95  [[ 99 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  99  Halt  === 96 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 100  IfTrue  === 90  [[ 101 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 101  ParsePredicate  === 100 78  [[ 102 111 ]]  #Loop_Limit_Check  !jvms: loop_invariant::micro @ bci:2 (line 6)
 102  IfFalse  === 101  [[ 106 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 103  MergeMem  === _ 1 7 40  [[ 106 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
 105  ConI  === 0  [[ 106 ]]  #int:-146
 106  CallStaticJava  === 102 6 103 8 9 (105 46 32 1 36 1 1 1 1 ) [[ 107 ]] # Static uncommon_trap(reason='loop_limit_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
 107  Proj  === 106  [[ 110 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 110  Halt  === 107 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 111  IfTrue  === 101  [[ 219 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 116  Phi  === 189 211 1  [[ 144 243 233 136 ]]  #int !jvms: loop_invariant::micro @ bci:2 (line 6)
 119  CmpP  === _ 46 47  [[ 120 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 120  Bool  === _ 119  [[ 193 ]] [ne] !jvms: loop_invariant::micro @ bci:4 (line 6)
 132  CastPP  === 194 46  [[ 202 134 134 203 217 203 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 136 210 208 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 136  CmpI  === _ 116 135  [[ 137 ]]  !jvms: loop_invariant::micro @ bci:5 (line 6)
 137  Bool  === _ 136  [[ 138 ]] [lt] !jvms: loop_invariant::micro @ bci:5 (line 6)
 138  If  === 189 137  [[ 139 227 ]] P=0.999026, C=211589.000000 !jvms: loop_invariant::micro @ bci:5 (line 6)
 139  IfTrue  === 138  [[ 224 143 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 143  SqrtD  === 139 32  [[ 239 231 ]]  !jvms: loop_invariant::micro @ bci:9 (line 7)
 144  ConvI2D  === _ 116  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 232 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 235  [[ 157 ]]  { N40:rawptr:BotPTR - - N235:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 229 6 153 8 9 (156 132 32 1 233 1 1 1 1 132 233 197 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 ]]  #long:16
 166  ConI  === 0  [[ 204 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 199 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 183  Phi  === 189 201 1  [[ 237 236 235 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 45 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 189  Loop  === 189 217 1  [[ 189 183 116 138 ]] inner  !orig=[112] !jvms: loop_invariant::micro @ bci:2 (line 6)
 191  Region  === 191 192 195  [[ 191 84 ]]  !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 192  IfFalse  === 79  [[ 191 ]] #0 !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 193  If  === 45 120  [[ 194 195 ]] P=0.999999, C=-1.000000
 194  IfTrue  === 193  [[ 79 132 ]] #1
 195  IfFalse  === 193  [[ 191 ]] #0
 197  AddD  === _ 231 232  [[ 157 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 199  LoadP  === 222 40 175  [[ 217 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 217 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 183 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 132 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 132 132 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 239 241  [[ 201 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 239 ]]  !orig=143 !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=137 !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=136 !jvms: loop_invariant::micro @ bci:5 (line 6)
 209  Bool  === _ 210  [[ 221 ]] [lt] !orig=150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 210  CmpU  === _ 243 135  [[ 209 ]]  !orig=149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 211  AddI  === _ 243 78  [[ 116 217 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 241 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 217  SafePoint  === 222 1 200 1 1 199 132 32 1 211 1 1 1 1  [[ 189 ]]  SafePoint  !orig=172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 219  If  === 111 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=138 !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 224 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 224 209  [[ 222 228 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 199 201 213 217 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 224  Loop  === 224 220 139  [[ 221 224 237 239 241 243 ]] partial_peel  !orig=[198]
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 227  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 227  IfFalse  === 138  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 228  IfFalse  === 221  [[ 229 ]] #0 !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 229  Region  === 229 228 1  [[ 229 157 231 232 233 235 ]]  !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 231  Phi  === 229 239 143  [[ 197 ]]  #double
 232  Phi  === 229 241 145  [[ 197 ]]  #double
 233  Phi  === 229 243 116  [[ 157 157 ]]  #int
 235  Phi  === 229 237 183  [[ 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 236  Phi  === 226 7 183  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 224 7 183  [[ 235 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 239  Phi  === 224 206 143  [[ 231 205 ]]  #double
 241  Phi  === 224 214 145  [[ 232 205 ]]  #double
 243  Phi  === 224 36 116  [[ 211 233 213 210 ]]  #int
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 99 110 179 161  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 126 65 78 83 94 105 190 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 106 95 84 157 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 92 103 81 16 200 237 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 106 88 84 99 95 110 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 95 66 106 84 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 143 84 95 106 217 206 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 106 95 84 243 215 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 199 153 92 103 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 186 51  [[ 45 46 193 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 132 119 84 95 106 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 119 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 79 90 101 211 ]]  #int:1
  79  ParsePredicate  === 194 78  [[ 192 89 ]]  #Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 191 6 81 8 9 (83 46 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  89  IfTrue  === 79  [[ 90 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  90  ParsePredicate  === 89 78  [[ 91 100 ]]  #Profiled_Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  91  IfFalse  === 90  [[ 95 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  92  MergeMem  === _ 1 7 40  [[ 95 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  94  ConI  === 0  [[ 95 ]]  #int:-66
  95  CallStaticJava  === 91 6 92 8 9 (94 46 32 1 36 1 1 1 1 ) [[ 96 ]] # Static uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  96  Proj  === 95  [[ 99 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  99  Halt  === 96 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 100  IfTrue  === 90  [[ 101 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 101  ParsePredicate  === 100 78  [[ 102 111 ]]  #Loop_Limit_Check  !jvms: loop_invariant::micro @ bci:2 (line 6)
 102  IfFalse  === 101  [[ 106 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 103  MergeMem  === _ 1 7 40  [[ 106 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
 105  ConI  === 0  [[ 106 ]]  #int:-146
 106  CallStaticJava  === 102 6 103 8 9 (105 46 32 1 36 1 1 1 1 ) [[ 107 ]] # Static uncommon_trap(reason='loop_limit_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
 107  Proj  === 106  [[ 110 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 110  Halt  === 107 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 111  IfTrue  === 101  [[ 219 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 116  Phi  === 189 211 1  [[ 144 243 233 136 ]]  #int !jvms: loop_invariant::micro @ bci:2 (line 6)
 119  CmpP  === _ 46 47  [[ 120 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 120  Bool  === _ 119  [[ 193 ]] [ne] !jvms: loop_invariant::micro @ bci:4 (line 6)
 132  CastPP  === 194 46  [[ 202 134 134 203 217 203 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 136 210 208 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 136  CmpI  === _ 116 135  [[ 137 ]]  !jvms: loop_invariant::micro @ bci:5 (line 6)
 137  Bool  === _ 136  [[ 138 ]] [lt] !jvms: loop_invariant::micro @ bci:5 (line 6)
 138  If  === 189 137  [[ 139 227 ]] P=0.999026, C=211589.000000 !jvms: loop_invariant::micro @ bci:5 (line 6)
 139  IfTrue  === 138  [[ 224 143 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 143  SqrtD  === 139 32  [[ 239 231 ]]  !jvms: loop_invariant::micro @ bci:9 (line 7)
 144  ConvI2D  === _ 116  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 235  [[ 157 ]]  { N40:rawptr:BotPTR - - N235:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 229 6 153 8 9 (156 132 32 1 233 1 1 1 1 132 233 197 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 ]]  #long:16
 166  ConI  === 0  [[ 204 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 199 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 183  Phi  === 189 201 1  [[ 237 236 235 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 45 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 189  Loop  === 189 217 1  [[ 189 183 116 138 ]] inner  !orig=[112] !jvms: loop_invariant::micro @ bci:2 (line 6)
 191  Region  === 191 192 195  [[ 191 84 ]]  !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 192  IfFalse  === 79  [[ 191 ]] #0 !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 193  If  === 45 120  [[ 194 195 ]] P=0.999999, C=-1.000000
 194  IfTrue  === 193  [[ 79 132 ]] #1
 195  IfFalse  === 193  [[ 191 ]] #0
 197  AddD  === _ 231 241  [[ 157 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 199  LoadP  === 222 40 175  [[ 217 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 217 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 183 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 132 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 132 132 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 239 241  [[ 201 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 239 ]]  !orig=143 !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=137 !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=136 !jvms: loop_invariant::micro @ bci:5 (line 6)
 209  Bool  === _ 210  [[ 221 ]] [lt] !orig=150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 210  CmpU  === _ 243 135  [[ 209 ]]  !orig=149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 211  AddI  === _ 243 78  [[ 116 217 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 241 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 217  SafePoint  === 222 1 200 1 1 199 132 32 1 211 1 1 1 1  [[ 189 ]]  SafePoint  !orig=172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 219  If  === 111 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=138 !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 224 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 224 209  [[ 222 228 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 199 201 213 217 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 224  Loop  === 224 220 139  [[ 221 224 237 239 241 243 ]] partial_peel  !orig=[198]
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 227  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 227  IfFalse  === 138  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 228  IfFalse  === 221  [[ 229 ]] #0 !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 229  Region  === 229 228 1  [[ 229 157 231 235 233 ]]  !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 231  Phi  === 229 239 143  [[ 197 ]]  #double
 233  Phi  === 229 243 116  [[ 157 157 ]]  #int
 235  Phi  === 229 237 183  [[ 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 236  Phi  === 226 7 183  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 224 7 183  [[ 235 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 239  Phi  === 224 206 143  [[ 231 205 ]]  #double
 241  Phi  === 224 214 145  [[ 197 205 ]]  #double !orig=232
 243  Phi  === 224 36 116  [[ 211 233 213 210 ]]  #int
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 99 110 179 161  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 126 65 78 83 94 105 190 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 106 95 84 157 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 92 103 81 16 200 237 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 106 88 84 99 95 110 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 95 66 106 84 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 143 84 95 106 217 206 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 106 95 84 243 215 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 199 153 92 103 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 186 51  [[ 45 46 193 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 132 119 84 95 106 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 119 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 79 90 101 211 ]]  #int:1
  79  ParsePredicate  === 194 78  [[ 192 89 ]]  #Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 191 6 81 8 9 (83 46 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  89  IfTrue  === 79  [[ 90 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  90  ParsePredicate  === 89 78  [[ 91 100 ]]  #Profiled_Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  91  IfFalse  === 90  [[ 95 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  92  MergeMem  === _ 1 7 40  [[ 95 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  94  ConI  === 0  [[ 95 ]]  #int:-66
  95  CallStaticJava  === 91 6 92 8 9 (94 46 32 1 36 1 1 1 1 ) [[ 96 ]] # Static uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  96  Proj  === 95  [[ 99 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  99  Halt  === 96 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 100  IfTrue  === 90  [[ 101 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 101  ParsePredicate  === 100 78  [[ 102 111 ]]  #Loop_Limit_Check  !jvms: loop_invariant::micro @ bci:2 (line 6)
 102  IfFalse  === 101  [[ 106 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 103  MergeMem  === _ 1 7 40  [[ 106 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
 105  ConI  === 0  [[ 106 ]]  #int:-146
 106  CallStaticJava  === 102 6 103 8 9 (105 46 32 1 36 1 1 1 1 ) [[ 107 ]] # Static uncommon_trap(reason='loop_limit_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
 107  Proj  === 106  [[ 110 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 110  Halt  === 107 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 111  IfTrue  === 101  [[ 219 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 119  CmpP  === _ 46 47  [[ 120 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 120  Bool  === _ 119  [[ 193 ]] [ne] !jvms: loop_invariant::micro @ bci:4 (line 6)
 132  CastPP  === 194 46  [[ 202 134 134 203 217 203 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 136 210 208 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 136  CmpI  === _ 211 135  [[ 137 ]]  !jvms: loop_invariant::micro @ bci:5 (line 6)
 137  Bool  === _ 136  [[ 138 ]] [lt] !jvms: loop_invariant::micro @ bci:5 (line 6)
 138  If  === 217 137  [[ 139 227 ]] P=0.999026, C=211589.000000 !jvms: loop_invariant::micro @ bci:5 (line 6)
 139  IfTrue  === 138  [[ 224 143 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 143  SqrtD  === 139 32  [[ 239 231 ]]  !jvms: loop_invariant::micro @ bci:9 (line 7)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 235  [[ 157 ]]  { N40:rawptr:BotPTR - - N235:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 229 6 153 8 9 (156 132 32 1 233 1 1 1 1 132 233 197 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 ]]  #long:16
 166  ConI  === 0  [[ 204 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 199 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 45 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 191  Region  === 191 192 195  [[ 191 84 ]]  !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 192  IfFalse  === 79  [[ 191 ]] #0 !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 193  If  === 45 120  [[ 194 195 ]] P=0.999999, C=-1.000000
 194  IfTrue  === 193  [[ 79 132 ]] #1
 195  IfFalse  === 193  [[ 191 ]] #0
 197  AddD  === _ 231 241  [[ 157 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 199  LoadP  === 222 40 175  [[ 217 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 217 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 235 236 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 132 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 132 132 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 239 241  [[ 201 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 239 ]]  !orig=143 !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=137 !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=136 !jvms: loop_invariant::micro @ bci:5 (line 6)
 209  Bool  === _ 210  [[ 221 ]] [lt] !orig=150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 210  CmpU  === _ 243 135  [[ 209 ]]  !orig=149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 211  AddI  === _ 243 78  [[ 144 217 136 233 243 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 241 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 217  SafePoint  === 222 1 200 1 1 199 132 32 1 211 1 1 1 1  [[ 138 ]]  SafePoint  !orig=172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 219  If  === 111 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=138 !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 224 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 224 209  [[ 222 228 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 199 201 213 217 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 224  Loop  === 224 220 139  [[ 221 224 237 239 241 243 ]] partial_peel  !orig=[198]
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 227  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 227  IfFalse  === 138  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 228  IfFalse  === 221  [[ 229 ]] #0 !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 229  Region  === 229 228 1  [[ 229 157 231 235 233 ]]  !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 231  Phi  === 229 239 143  [[ 197 ]]  #double
 233  Phi  === 229 243 211  [[ 157 157 ]]  #int
 235  Phi  === 229 237 201  [[ 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 236  Phi  === 226 7 201  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 224 7 201  [[ 235 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 239  Phi  === 224 206 143  [[ 231 205 ]]  #double
 241  Phi  === 224 214 145  [[ 197 205 ]]  #double !orig=232
 243  Phi  === 224 36 211  [[ 211 233 213 210 ]]  #int
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 99 110 179 161  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 126 65 78 83 94 105 190 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 106 95 84 157 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 92 103 81 16 200 237 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 106 88 84 99 95 110 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 95 66 106 84 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 143 84 95 106 217 206 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 106 95 84 243 215 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 199 153 92 103 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 186 51  [[ 45 46 193 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 132 119 84 95 106 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 119 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 79 90 101 211 ]]  #int:1
  79  ParsePredicate  === 194 78  [[ 192 89 ]]  #Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 191 6 81 8 9 (83 46 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  89  IfTrue  === 79  [[ 90 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  90  ParsePredicate  === 89 78  [[ 91 100 ]]  #Profiled_Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  91  IfFalse  === 90  [[ 95 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  92  MergeMem  === _ 1 7 40  [[ 95 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  94  ConI  === 0  [[ 95 ]]  #int:-66
  95  CallStaticJava  === 91 6 92 8 9 (94 46 32 1 36 1 1 1 1 ) [[ 96 ]] # Static uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  96  Proj  === 95  [[ 99 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  99  Halt  === 96 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 100  IfTrue  === 90  [[ 101 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 101  ParsePredicate  === 100 78  [[ 102 111 ]]  #Loop_Limit_Check  !jvms: loop_invariant::micro @ bci:2 (line 6)
 102  IfFalse  === 101  [[ 106 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 103  MergeMem  === _ 1 7 40  [[ 106 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
 105  ConI  === 0  [[ 106 ]]  #int:-146
 106  CallStaticJava  === 102 6 103 8 9 (105 46 32 1 36 1 1 1 1 ) [[ 107 ]] # Static uncommon_trap(reason='loop_limit_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
 107  Proj  === 106  [[ 110 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 110  Halt  === 107 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 111  IfTrue  === 101  [[ 219 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 119  CmpP  === _ 46 47  [[ 120 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 120  Bool  === _ 119  [[ 193 ]] [ne] !jvms: loop_invariant::micro @ bci:4 (line 6)
 132  CastPP  === 194 46  [[ 202 134 134 203 217 203 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 136 210 208 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 136  CmpI  === _ 211 135  [[ 137 ]]  !jvms: loop_invariant::micro @ bci:5 (line 6)
 137  Bool  === _ 136  [[ 138 ]] [lt] !jvms: loop_invariant::micro @ bci:5 (line 6)
 138  If  === 217 137  [[ 139 227 ]] P=0.999026, C=211589.000000 !jvms: loop_invariant::micro @ bci:5 (line 6)
 139  IfTrue  === 138  [[ 224 143 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 143  SqrtD  === 139 32  [[ 239 231 ]]  !jvms: loop_invariant::micro @ bci:9 (line 7)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 237  [[ 157 ]]  { N40:rawptr:BotPTR - - N237:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 229 6 153 8 9 (156 132 32 1 233 1 1 1 1 132 233 197 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 ]]  #long:16
 166  ConI  === 0  [[ 204 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 199 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 45 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 191  Region  === 191 192 195  [[ 191 84 ]]  !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 192  IfFalse  === 79  [[ 191 ]] #0 !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 193  If  === 45 120  [[ 194 195 ]] P=0.999999, C=-1.000000
 194  IfTrue  === 193  [[ 79 132 ]] #1
 195  IfFalse  === 193  [[ 191 ]] #0
 197  AddD  === _ 231 241  [[ 157 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 199  LoadP  === 222 40 175  [[ 217 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 217 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 236 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 132 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 132 132 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 239 241  [[ 201 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 239 ]]  !orig=143 !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=137 !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=136 !jvms: loop_invariant::micro @ bci:5 (line 6)
 209  Bool  === _ 210  [[ 221 ]] [lt] !orig=150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 210  CmpU  === _ 243 135  [[ 209 ]]  !orig=149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 211  AddI  === _ 243 78  [[ 144 217 136 233 243 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 241 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 217  SafePoint  === 222 1 200 1 1 199 132 32 1 211 1 1 1 1  [[ 138 ]]  SafePoint  !orig=172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 219  If  === 111 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=138 !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 224 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 224 209  [[ 222 228 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 199 201 213 217 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 224  Loop  === 224 220 139  [[ 221 224 237 239 241 243 ]] partial_peel  !orig=[198]
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 227  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 227  IfFalse  === 138  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 228  IfFalse  === 221  [[ 229 ]] #0 !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 229  Region  === 229 228 1  [[ 229 157 231 233 ]]  !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 231  Phi  === 229 239 143  [[ 197 ]]  #double
 233  Phi  === 229 243 211  [[ 157 157 ]]  #int
 236  Phi  === 226 7 201  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 224 7 201  [[ 153 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 239  Phi  === 224 206 143  [[ 231 205 ]]  #double
 241  Phi  === 224 214 145  [[ 197 205 ]]  #double !orig=232
 243  Phi  === 224 36 211  [[ 211 233 213 210 ]]  #int
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 99 110 179 161  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 126 65 78 83 94 105 190 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 106 95 84 157 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 92 103 81 16 200 237 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 106 88 84 99 95 110 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 95 66 106 84 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 143 84 95 106 217 206 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 106 95 84 243 215 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 199 153 92 103 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 186 51  [[ 45 46 193 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 132 119 84 95 106 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 119 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 79 90 101 211 ]]  #int:1
  79  ParsePredicate  === 194 78  [[ 192 89 ]]  #Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 191 6 81 8 9 (83 46 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  89  IfTrue  === 79  [[ 90 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  90  ParsePredicate  === 89 78  [[ 91 100 ]]  #Profiled_Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  91  IfFalse  === 90  [[ 95 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  92  MergeMem  === _ 1 7 40  [[ 95 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  94  ConI  === 0  [[ 95 ]]  #int:-66
  95  CallStaticJava  === 91 6 92 8 9 (94 46 32 1 36 1 1 1 1 ) [[ 96 ]] # Static uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  96  Proj  === 95  [[ 99 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  99  Halt  === 96 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 100  IfTrue  === 90  [[ 101 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 101  ParsePredicate  === 100 78  [[ 102 111 ]]  #Loop_Limit_Check  !jvms: loop_invariant::micro @ bci:2 (line 6)
 102  IfFalse  === 101  [[ 106 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 103  MergeMem  === _ 1 7 40  [[ 106 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
 105  ConI  === 0  [[ 106 ]]  #int:-146
 106  CallStaticJava  === 102 6 103 8 9 (105 46 32 1 36 1 1 1 1 ) [[ 107 ]] # Static uncommon_trap(reason='loop_limit_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
 107  Proj  === 106  [[ 110 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 110  Halt  === 107 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 111  IfTrue  === 101  [[ 219 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 119  CmpP  === _ 46 47  [[ 120 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 120  Bool  === _ 119  [[ 193 ]] [ne] !jvms: loop_invariant::micro @ bci:4 (line 6)
 132  CastPP  === 194 46  [[ 202 134 134 203 217 203 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 136 210 208 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 136  CmpI  === _ 211 135  [[ 137 ]]  !jvms: loop_invariant::micro @ bci:5 (line 6)
 137  Bool  === _ 136  [[ 138 ]] [lt] !jvms: loop_invariant::micro @ bci:5 (line 6)
 138  If  === 217 137  [[ 139 227 ]] P=0.999026, C=211589.000000 !jvms: loop_invariant::micro @ bci:5 (line 6)
 139  IfTrue  === 138  [[ 224 143 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 143  SqrtD  === 139 32  [[ 239 ]]  !jvms: loop_invariant::micro @ bci:9 (line 7)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 237  [[ 157 ]]  { N40:rawptr:BotPTR - - N237:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 228 6 153 8 9 (156 132 32 1 243 1 1 1 1 132 243 197 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 ]]  #long:16
 166  ConI  === 0  [[ 204 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 199 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 45 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 191  Region  === 191 192 195  [[ 191 84 ]]  !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 192  IfFalse  === 79  [[ 191 ]] #0 !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 193  If  === 45 120  [[ 194 195 ]] P=0.999999, C=-1.000000
 194  IfTrue  === 193  [[ 79 132 ]] #1
 195  IfFalse  === 193  [[ 191 ]] #0
 197  AddD  === _ 239 241  [[ 157 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 199  LoadP  === 222 40 175  [[ 217 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 217 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 236 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 132 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 132 132 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 239 241  [[ 201 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 239 ]]  !orig=143 !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=137 !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=136 !jvms: loop_invariant::micro @ bci:5 (line 6)
 209  Bool  === _ 210  [[ 221 ]] [lt] !orig=150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 210  CmpU  === _ 243 135  [[ 209 ]]  !orig=149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 211  AddI  === _ 243 78  [[ 144 217 136 243 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 241 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 217  SafePoint  === 222 1 200 1 1 199 132 32 1 211 1 1 1 1  [[ 138 ]]  SafePoint  !orig=172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 219  If  === 111 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=138 !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 224 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 224 209  [[ 222 228 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 199 201 213 217 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 224  Loop  === 224 220 139  [[ 221 224 237 239 241 243 ]] partial_peel  !orig=[198]
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 227  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 227  IfFalse  === 138  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 228  IfFalse  === 221  [[ 157 ]] #0 !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 236  Phi  === 226 7 201  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 224 7 201  [[ 153 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 239  Phi  === 224 206 143  [[ 197 205 ]]  #double !orig=[231]
 241  Phi  === 224 214 145  [[ 197 205 ]]  #double !orig=232
 243  Phi  === 224 36 211  [[ 211 157 213 210 157 ]]  #int !orig=[233]
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 99 110 179 161  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 126 65 78 83 94 105 190 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 106 95 84 157 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 92 103 81 16 200 237 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 106 88 84 99 95 110 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 95 66 106 84 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 143 84 95 106 217 206 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 106 95 84 243 215 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 199 153 92 103 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 186 51  [[ 45 46 193 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 132 119 84 95 106 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 119 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 79 90 101 211 ]]  #int:1
  79  ParsePredicate  === 194 78  [[ 192 89 ]]  #Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 191 6 81 8 9 (83 46 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  89  IfTrue  === 79  [[ 90 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  90  ParsePredicate  === 89 78  [[ 91 100 ]]  #Profiled_Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  91  IfFalse  === 90  [[ 95 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  92  MergeMem  === _ 1 7 40  [[ 95 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  94  ConI  === 0  [[ 95 ]]  #int:-66
  95  CallStaticJava  === 91 6 92 8 9 (94 46 32 1 36 1 1 1 1 ) [[ 96 ]] # Static uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  96  Proj  === 95  [[ 99 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  99  Halt  === 96 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 100  IfTrue  === 90  [[ 101 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 101  ParsePredicate  === 100 78  [[ 102 111 ]]  #Loop_Limit_Check  !jvms: loop_invariant::micro @ bci:2 (line 6)
 102  IfFalse  === 101  [[ 106 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 103  MergeMem  === _ 1 7 40  [[ 106 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
 105  ConI  === 0  [[ 106 ]]  #int:-146
 106  CallStaticJava  === 102 6 103 8 9 (105 46 32 1 36 1 1 1 1 ) [[ 107 ]] # Static uncommon_trap(reason='loop_limit_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
 107  Proj  === 106  [[ 110 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 110  Halt  === 107 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 111  IfTrue  === 101  [[ 219 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 119  CmpP  === _ 46 47  [[ 120 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 120  Bool  === _ 119  [[ 193 ]] [ne] !jvms: loop_invariant::micro @ bci:4 (line 6)
 132  CastPP  === 194 46  [[ 202 134 134 203 217 203 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 136 210 208 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 136  CmpI  === _ 211 135  [[ 137 ]]  !jvms: loop_invariant::micro @ bci:5 (line 6)
 137  Bool  === _ 136  [[ 138 ]] [lt] !jvms: loop_invariant::micro @ bci:5 (line 6)
 138  If  === 217 137  [[ 139 227 ]] P=0.999026, C=211589.000000 !jvms: loop_invariant::micro @ bci:5 (line 6)
 139  IfTrue  === 138  [[ 224 143 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 143  SqrtD  === 139 32  [[ 239 ]]  !jvms: loop_invariant::micro @ bci:9 (line 7)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 237  [[ 157 ]]  { N40:rawptr:BotPTR - - N237:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 228 6 153 8 9 (156 132 32 1 243 1 1 1 1 132 243 205 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 ]]  #long:16
 166  ConI  === 0  [[ 204 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 199 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 45 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 191  Region  === 191 192 195  [[ 191 84 ]]  !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 192  IfFalse  === 79  [[ 191 ]] #0 !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 193  If  === 45 120  [[ 194 195 ]] P=0.999999, C=-1.000000
 194  IfTrue  === 193  [[ 79 132 ]] #1
 195  IfFalse  === 193  [[ 191 ]] #0
 199  LoadP  === 222 40 175  [[ 217 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 217 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 236 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 132 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 132 132 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 239 241  [[ 201 157 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 239 ]]  !orig=143 !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=137 !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=136 !jvms: loop_invariant::micro @ bci:5 (line 6)
 209  Bool  === _ 210  [[ 221 ]] [lt] !orig=150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 210  CmpU  === _ 243 135  [[ 209 ]]  !orig=149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 211  AddI  === _ 243 78  [[ 144 217 136 243 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 241 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 217  SafePoint  === 222 1 200 1 1 199 132 32 1 211 1 1 1 1  [[ 138 ]]  SafePoint  !orig=172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 219  If  === 111 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=138 !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 224 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 224 209  [[ 222 228 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 199 201 213 217 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 224  Loop  === 224 220 139  [[ 221 224 237 239 241 243 ]] partial_peel  !orig=[198]
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 227  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 227  IfFalse  === 138  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 228  IfFalse  === 221  [[ 157 ]] #0 !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 236  Phi  === 226 7 201  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 224 7 201  [[ 153 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 239  Phi  === 224 206 143  [[ 205 ]]  #double !orig=[231]
 241  Phi  === 224 214 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 224 36 211  [[ 211 157 213 210 157 ]]  #int !orig=[233]
AFTER: AFTER_ITER_GVN
   0  Root  === 0 70 88 99 110 179 161  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 126 65 78 83 94 105 190 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 106 95 84 157 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 92 103 81 16 200 237 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 106 88 84 99 95 110 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 95 66 106 84 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 143 84 95 106 217 206 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 106 95 84 243 215 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 199 153 92 103 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 186 51  [[ 45 46 193 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 132 119 84 95 106 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 119 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 79 90 101 211 ]]  #int:1
  79  ParsePredicate  === 194 78  [[ 192 89 ]]  #Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 191 6 81 8 9 (83 46 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  89  IfTrue  === 79  [[ 90 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  90  ParsePredicate  === 89 78  [[ 91 100 ]]  #Profiled_Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  91  IfFalse  === 90  [[ 95 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  92  MergeMem  === _ 1 7 40  [[ 95 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  94  ConI  === 0  [[ 95 ]]  #int:-66
  95  CallStaticJava  === 91 6 92 8 9 (94 46 32 1 36 1 1 1 1 ) [[ 96 ]] # Static uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  96  Proj  === 95  [[ 99 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  99  Halt  === 96 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 100  IfTrue  === 90  [[ 101 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 101  ParsePredicate  === 100 78  [[ 102 111 ]]  #Loop_Limit_Check  !jvms: loop_invariant::micro @ bci:2 (line 6)
 102  IfFalse  === 101  [[ 106 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 103  MergeMem  === _ 1 7 40  [[ 106 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
 105  ConI  === 0  [[ 106 ]]  #int:-146
 106  CallStaticJava  === 102 6 103 8 9 (105 46 32 1 36 1 1 1 1 ) [[ 107 ]] # Static uncommon_trap(reason='loop_limit_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
 107  Proj  === 106  [[ 110 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 110  Halt  === 107 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 111  IfTrue  === 101  [[ 219 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 119  CmpP  === _ 46 47  [[ 120 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 120  Bool  === _ 119  [[ 193 ]] [ne] !jvms: loop_invariant::micro @ bci:4 (line 6)
 132  CastPP  === 194 46  [[ 202 134 134 203 217 203 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 136 210 208 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 136  CmpI  === _ 211 135  [[ 137 ]]  !jvms: loop_invariant::micro @ bci:5 (line 6)
 137  Bool  === _ 136  [[ 138 ]] [lt] !jvms: loop_invariant::micro @ bci:5 (line 6)
 138  If  === 217 137  [[ 139 227 ]] P=0.999026, C=211589.000000 !jvms: loop_invariant::micro @ bci:5 (line 6)
 139  IfTrue  === 138  [[ 224 143 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 143  SqrtD  === 139 32  [[ 239 ]]  !jvms: loop_invariant::micro @ bci:9 (line 7)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 237  [[ 157 ]]  { N40:rawptr:BotPTR - - N237:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 228 6 153 8 9 (156 132 32 1 243 1 1 1 1 132 243 205 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 ]]  #long:16
 166  ConI  === 0  [[ 204 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 199 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 45 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 191  Region  === 191 192 195  [[ 191 84 ]]  !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 192  IfFalse  === 79  [[ 191 ]] #0 !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 193  If  === 45 120  [[ 194 195 ]] P=0.999999, C=-1.000000
 194  IfTrue  === 193  [[ 79 132 ]] #1
 195  IfFalse  === 193  [[ 191 ]] #0
 199  LoadP  === 222 40 175  [[ 217 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 217 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 236 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 132 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 132 132 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 239 241  [[ 201 157 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 239 ]]  !orig=143 !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=137 !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=136 !jvms: loop_invariant::micro @ bci:5 (line 6)
 209  Bool  === _ 210  [[ 221 ]] [lt] !orig=150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 210  CmpU  === _ 243 135  [[ 209 ]]  !orig=149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 211  AddI  === _ 243 78  [[ 144 217 136 243 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 241 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 217  SafePoint  === 222 1 200 1 1 199 132 32 1 211 1 1 1 1  [[ 138 ]]  SafePoint  !orig=172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 219  If  === 111 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=138 !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 224 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 224 209  [[ 222 228 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 199 201 213 217 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 224  Loop  === 224 220 139  [[ 221 224 237 239 241 243 ]] partial_peel  !orig=[198]
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 227  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 227  IfFalse  === 138  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 228  IfFalse  === 221  [[ 157 ]] #0 !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 236  Phi  === 226 7 201  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 224 7 201  [[ 153 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 239  Phi  === 224 206 143  [[ 205 ]]  #double !orig=[231]
 241  Phi  === 224 214 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 224 36 211  [[ 211 157 213 210 157 ]]  #int !orig=[233]
AFTER: PHASEIDEALLOOP2
   0  Root  === 0 70 88 99 110 179 161  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 126 65 78 83 94 105 190 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 106 95 84 157 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 92 103 81 16 200 237 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 106 88 84 99 95 110 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 95 66 106 84 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 143 84 95 106 217 206 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 106 95 84 243 215 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 199 153 92 103 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 186 51  [[ 45 46 193 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 132 119 84 95 106 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 119 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 79 90 101 211 ]]  #int:1
  79  ParsePredicate  === 194 78  [[ 192 89 ]]  #Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 191 6 81 8 9 (83 46 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  89  IfTrue  === 79  [[ 90 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  90  ParsePredicate  === 89 78  [[ 91 100 ]]  #Profiled_Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  91  IfFalse  === 90  [[ 95 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  92  MergeMem  === _ 1 7 40  [[ 95 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  94  ConI  === 0  [[ 95 ]]  #int:-66
  95  CallStaticJava  === 91 6 92 8 9 (94 46 32 1 36 1 1 1 1 ) [[ 96 ]] # Static uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  96  Proj  === 95  [[ 99 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  99  Halt  === 96 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 100  IfTrue  === 90  [[ 101 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 101  ParsePredicate  === 100 78  [[ 102 111 ]]  #Loop_Limit_Check  !jvms: loop_invariant::micro @ bci:2 (line 6)
 102  IfFalse  === 101  [[ 106 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 103  MergeMem  === _ 1 7 40  [[ 106 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
 105  ConI  === 0  [[ 106 ]]  #int:-146
 106  CallStaticJava  === 102 6 103 8 9 (105 46 32 1 36 1 1 1 1 ) [[ 107 ]] # Static uncommon_trap(reason='loop_limit_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
 107  Proj  === 106  [[ 110 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 110  Halt  === 107 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 111  IfTrue  === 101  [[ 219 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 119  CmpP  === _ 46 47  [[ 120 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 120  Bool  === _ 119  [[ 193 ]] [ne] !jvms: loop_invariant::micro @ bci:4 (line 6)
 132  CastPP  === 194 46  [[ 202 134 134 203 217 203 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 136 210 208 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 136  CmpI  === _ 211 135  [[ 137 ]]  !jvms: loop_invariant::micro @ bci:5 (line 6)
 137  Bool  === _ 136  [[ 138 ]] [lt] !jvms: loop_invariant::micro @ bci:5 (line 6)
 138  If  === 217 137  [[ 139 227 ]] P=0.999026, C=211589.000000 !jvms: loop_invariant::micro @ bci:5 (line 6)
 139  IfTrue  === 138  [[ 224 143 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 143  SqrtD  === 139 32  [[ 239 ]]  !jvms: loop_invariant::micro @ bci:9 (line 7)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 237  [[ 157 ]]  { N40:rawptr:BotPTR - - N237:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 228 6 153 8 9 (156 132 32 1 243 1 1 1 1 132 243 205 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 ]]  #long:16
 166  ConI  === 0  [[ 204 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 199 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 45 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 191  Region  === 191 192 195  [[ 191 84 ]]  !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 192  IfFalse  === 79  [[ 191 ]] #0 !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 193  If  === 45 120  [[ 194 195 ]] P=0.999999, C=-1.000000
 194  IfTrue  === 193  [[ 79 132 ]] #1
 195  IfFalse  === 193  [[ 191 ]] #0
 199  LoadP  === 222 40 175  [[ 217 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 217 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 236 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 132 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 132 132 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 239 241  [[ 201 157 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 239 ]]  !orig=143 !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=137 !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=136 !jvms: loop_invariant::micro @ bci:5 (line 6)
 209  Bool  === _ 210  [[ 221 ]] [lt] !orig=150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 210  CmpU  === _ 243 135  [[ 209 ]]  !orig=149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 211  AddI  === _ 243 78  [[ 144 217 136 243 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 241 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 217  SafePoint  === 222 1 200 1 1 199 132 32 1 211 1 1 1 1  [[ 138 ]]  SafePoint  !orig=172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 219  If  === 111 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=138 !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 224 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 224 209  [[ 222 228 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 199 201 213 217 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 224  Loop  === 224 220 139  [[ 221 224 237 239 241 243 ]] partial_peel  !orig=[198]
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 227  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 227  IfFalse  === 138  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 228  IfFalse  === 221  [[ 157 ]] #0 !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 236  Phi  === 226 7 201  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 224 7 201  [[ 153 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 239  Phi  === 224 206 143  [[ 205 ]]  #double !orig=[231]
 241  Phi  === 224 214 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 224 36 211  [[ 211 157 213 210 157 ]]  #int !orig=[233]
AFTER: BEFORE_BEAUTIFY_LOOPS
   0  Root  === 0 70 88 99 110 179 161  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 126 65 78 83 94 105 190 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 106 95 84 157 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 92 103 81 16 200 237 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 106 88 84 99 95 110 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 95 66 106 84 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 143 84 95 106 217 206 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 106 95 84 243 215 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 199 153 92 103 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 186 51  [[ 45 46 193 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 132 119 84 95 106 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 119 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 79 90 101 211 ]]  #int:1
  79  ParsePredicate  === 194 78  [[ 192 89 ]]  #Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 191 6 81 8 9 (83 46 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  89  IfTrue  === 79  [[ 90 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  90  ParsePredicate  === 89 78  [[ 91 100 ]]  #Profiled_Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  91  IfFalse  === 90  [[ 95 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  92  MergeMem  === _ 1 7 40  [[ 95 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  94  ConI  === 0  [[ 95 ]]  #int:-66
  95  CallStaticJava  === 91 6 92 8 9 (94 46 32 1 36 1 1 1 1 ) [[ 96 ]] # Static uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  96  Proj  === 95  [[ 99 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  99  Halt  === 96 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 100  IfTrue  === 90  [[ 101 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 101  ParsePredicate  === 100 78  [[ 102 111 ]]  #Loop_Limit_Check  !jvms: loop_invariant::micro @ bci:2 (line 6)
 102  IfFalse  === 101  [[ 106 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 103  MergeMem  === _ 1 7 40  [[ 106 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
 105  ConI  === 0  [[ 106 ]]  #int:-146
 106  CallStaticJava  === 102 6 103 8 9 (105 46 32 1 36 1 1 1 1 ) [[ 107 ]] # Static uncommon_trap(reason='loop_limit_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
 107  Proj  === 106  [[ 110 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 110  Halt  === 107 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 111  IfTrue  === 101  [[ 219 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 119  CmpP  === _ 46 47  [[ 120 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 120  Bool  === _ 119  [[ 193 ]] [ne] !jvms: loop_invariant::micro @ bci:4 (line 6)
 132  CastPP  === 194 46  [[ 202 134 134 203 217 203 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 136 210 208 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 136  CmpI  === _ 211 135  [[ 137 ]]  !jvms: loop_invariant::micro @ bci:5 (line 6)
 137  Bool  === _ 136  [[ 138 ]] [lt] !jvms: loop_invariant::micro @ bci:5 (line 6)
 138  If  === 217 137  [[ 139 227 ]] P=0.999026, C=211589.000000 !jvms: loop_invariant::micro @ bci:5 (line 6)
 139  IfTrue  === 138  [[ 224 143 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 143  SqrtD  === 139 32  [[ 239 ]]  !jvms: loop_invariant::micro @ bci:9 (line 7)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 237  [[ 157 ]]  { N40:rawptr:BotPTR - - N237:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 228 6 153 8 9 (156 132 32 1 243 1 1 1 1 132 243 205 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 ]]  #long:16
 166  ConI  === 0  [[ 204 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 199 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 45 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 191  Region  === 191 192 195  [[ 191 84 ]]  !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 192  IfFalse  === 79  [[ 191 ]] #0 !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 193  If  === 45 120  [[ 194 195 ]] P=0.999999, C=-1.000000
 194  IfTrue  === 193  [[ 79 132 ]] #1
 195  IfFalse  === 193  [[ 191 ]] #0
 199  LoadP  === 222 40 175  [[ 217 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 217 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 236 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 132 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 132 132 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 239 241  [[ 201 157 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 239 ]]  !orig=143 !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=137 !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=136 !jvms: loop_invariant::micro @ bci:5 (line 6)
 209  Bool  === _ 210  [[ 221 ]] [lt] !orig=150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 210  CmpU  === _ 243 135  [[ 209 ]]  !orig=149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 211  AddI  === _ 243 78  [[ 144 217 136 243 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 241 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 217  SafePoint  === 222 1 200 1 1 199 132 32 1 211 1 1 1 1  [[ 138 ]]  SafePoint  !orig=172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 219  If  === 111 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=138 !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 224 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 224 209  [[ 222 228 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 199 201 213 217 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 224  Loop  === 224 220 139  [[ 221 224 237 239 241 243 ]] partial_peel  !orig=[198]
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 227  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 227  IfFalse  === 138  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 228  IfFalse  === 221  [[ 157 ]] #0 !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 236  Phi  === 226 7 201  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 224 7 201  [[ 153 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 239  Phi  === 224 206 143  [[ 205 ]]  #double !orig=[231]
 241  Phi  === 224 214 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 224 36 211  [[ 211 157 213 210 157 ]]  #int !orig=[233]
AFTER: BEFORE_CLOOPS
   0  Root  === 0 70 88 99 110 179 161  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 126 65 78 83 94 105 190 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 106 95 84 157 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 92 103 81 16 200 237 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 106 88 84 99 95 110 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 95 66 106 84 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 143 84 95 106 217 206 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 106 95 84 243 215 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 199 153 92 103 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 186 51  [[ 45 46 193 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 132 119 84 95 106 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 119 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 79 90 101 211 ]]  #int:1
  79  ParsePredicate  === 194 78  [[ 192 89 ]]  #Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 191 6 81 8 9 (83 46 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  89  IfTrue  === 79  [[ 90 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  90  ParsePredicate  === 89 78  [[ 91 100 ]]  #Profiled_Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  91  IfFalse  === 90  [[ 95 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  92  MergeMem  === _ 1 7 40  [[ 95 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  94  ConI  === 0  [[ 95 ]]  #int:-66
  95  CallStaticJava  === 91 6 92 8 9 (94 46 32 1 36 1 1 1 1 ) [[ 96 ]] # Static uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  96  Proj  === 95  [[ 99 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  99  Halt  === 96 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 100  IfTrue  === 90  [[ 101 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 101  ParsePredicate  === 100 78  [[ 102 111 ]]  #Loop_Limit_Check  !jvms: loop_invariant::micro @ bci:2 (line 6)
 102  IfFalse  === 101  [[ 106 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 103  MergeMem  === _ 1 7 40  [[ 106 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
 105  ConI  === 0  [[ 106 ]]  #int:-146
 106  CallStaticJava  === 102 6 103 8 9 (105 46 32 1 36 1 1 1 1 ) [[ 107 ]] # Static uncommon_trap(reason='loop_limit_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
 107  Proj  === 106  [[ 110 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 110  Halt  === 107 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 111  IfTrue  === 101  [[ 219 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 119  CmpP  === _ 46 47  [[ 120 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 120  Bool  === _ 119  [[ 193 ]] [ne] !jvms: loop_invariant::micro @ bci:4 (line 6)
 132  CastPP  === 194 46  [[ 202 134 134 203 217 203 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 136 210 208 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 136  CmpI  === _ 211 135  [[ 137 ]]  !jvms: loop_invariant::micro @ bci:5 (line 6)
 137  Bool  === _ 136  [[ 138 ]] [lt] !jvms: loop_invariant::micro @ bci:5 (line 6)
 138  If  === 217 137  [[ 139 227 ]] P=0.999026, C=211589.000000 !jvms: loop_invariant::micro @ bci:5 (line 6)
 139  IfTrue  === 138  [[ 224 143 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 143  SqrtD  === 139 32  [[ 239 ]]  !jvms: loop_invariant::micro @ bci:9 (line 7)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 237  [[ 157 ]]  { N40:rawptr:BotPTR - - N237:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 228 6 153 8 9 (156 132 32 1 243 1 1 1 1 132 243 205 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 ]]  #long:16
 166  ConI  === 0  [[ 204 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 199 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 45 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 191  Region  === 191 192 195  [[ 191 84 ]]  !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 192  IfFalse  === 79  [[ 191 ]] #0 !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 193  If  === 45 120  [[ 194 195 ]] P=0.999999, C=-1.000000
 194  IfTrue  === 193  [[ 79 132 ]] #1
 195  IfFalse  === 193  [[ 191 ]] #0
 199  LoadP  === 222 40 175  [[ 217 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 217 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 236 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 132 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 132 132 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 239 241  [[ 201 157 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 239 ]]  !orig=143 !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=137 !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=136 !jvms: loop_invariant::micro @ bci:5 (line 6)
 209  Bool  === _ 210  [[ 221 ]] [lt] !orig=150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 210  CmpU  === _ 243 135  [[ 209 ]]  !orig=149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 211  AddI  === _ 243 78  [[ 144 217 136 243 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 241 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 217  SafePoint  === 222 1 200 1 1 199 132 32 1 211 1 1 1 1  [[ 138 ]]  SafePoint  !orig=172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 219  If  === 111 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=138 !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 224 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 224 209  [[ 222 228 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 199 201 213 217 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 224  Loop  === 224 220 139  [[ 221 224 237 239 241 243 ]] inner partial_peel  !orig=[198]
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 227  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 227  IfFalse  === 138  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 228  IfFalse  === 221  [[ 157 ]] #0 !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 236  Phi  === 226 7 201  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 224 7 201  [[ 153 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 239  Phi  === 224 206 143  [[ 205 ]]  #double !orig=[231]
 241  Phi  === 224 214 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 224 36 211  [[ 211 157 213 210 157 ]]  #int !orig=[233]
AFTER: AFTER_CLOOPS
   0  Root  === 0 70 88 99 110 179 161  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 126 65 78 83 94 105 190 252 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 106 95 84 157 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 92 103 81 16 200 237 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 106 88 84 99 95 110 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 95 66 106 84 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 143 84 95 106 262 206 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 106 95 84 243 215 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 92 103 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 186 51  [[ 45 46 193 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 132 119 84 95 106 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 119 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 79 90 101 211 253 ]]  #int:1
  79  ParsePredicate  === 194 78  [[ 192 89 ]]  #Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 191 6 81 8 9 (83 46 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  89  IfTrue  === 79  [[ 90 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  90  ParsePredicate  === 89 78  [[ 91 100 ]]  #Profiled_Loop  !jvms: loop_invariant::micro @ bci:2 (line 6)
  91  IfFalse  === 90  [[ 95 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  92  MergeMem  === _ 1 7 40  [[ 95 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  94  ConI  === 0  [[ 95 ]]  #int:-66
  95  CallStaticJava  === 91 6 92 8 9 (94 46 32 1 36 1 1 1 1 ) [[ 96 ]] # Static uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  96  Proj  === 95  [[ 99 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  99  Halt  === 96 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 100  IfTrue  === 90  [[ 101 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 101  ParsePredicate  === 100 78  [[ 102 111 ]]  #Loop_Limit_Check  !jvms: loop_invariant::micro @ bci:2 (line 6)
 102  IfFalse  === 101  [[ 106 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 103  MergeMem  === _ 1 7 40  [[ 106 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
 105  ConI  === 0  [[ 106 ]]  #int:-146
 106  CallStaticJava  === 102 6 103 8 9 (105 46 32 1 36 1 1 1 1 ) [[ 107 ]] # Static uncommon_trap(reason='loop_limit_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
 107  Proj  === 106  [[ 110 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 110  Halt  === 107 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 111  IfTrue  === 101  [[ 219 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 119  CmpP  === _ 46 47  [[ 120 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 120  Bool  === _ 119  [[ 193 ]] [ne] !jvms: loop_invariant::micro @ bci:4 (line 6)
 132  CastPP  === 194 46  [[ 202 134 134 203 262 203 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 254 210 208 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 143 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 143  SqrtD  === 139 32  [[ 239 ]]  !jvms: loop_invariant::micro @ bci:9 (line 7)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 237  [[ 157 ]]  { N40:rawptr:BotPTR - - N237:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 228 6 153 8 9 (156 132 32 1 243 1 1 1 1 132 243 205 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 ]]  #long:16
 166  ConI  === 0  [[ 204 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 45 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 ]]  #int:0
 191  Region  === 191 192 195  [[ 191 84 ]]  !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 192  IfFalse  === 79  [[ 191 ]] #0 !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 193  If  === 45 120  [[ 194 195 ]] P=0.999999, C=-1.000000
 194  IfTrue  === 193  [[ 79 132 ]] #1
 195  IfFalse  === 193  [[ 191 ]] #0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 236 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 132 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 132 132 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 239 241  [[ 201 157 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 239 ]]  !orig=143 !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 209  Bool  === _ 210  [[ 221 ]] [lt] !orig=150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 210  CmpU  === _ 243 135  [[ 209 ]]  !orig=149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 211  AddI  === _ 243 78  [[ 144 262 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 241 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 111 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 260 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 209  [[ 222 228 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 227  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 227  IfFalse  === 258  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 228  IfFalse  === 221  [[ 157 ]] #0 !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 236  Phi  === 226 7 201  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 7 201  [[ 153 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 239  Phi  === 261 206 143  [[ 205 ]]  #double !orig=[231]
 241  Phi  === 261 214 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 36 253  [[ 211 157 213 210 157 253 ]]  #int #tripcount !orig=[233]
 253  AddI  === _ 243 78  [[ 243 254 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 254  CmpI  === _ 253 135  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=227,[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 227 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 220 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 239 237 221 ]] stride: 1  !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 132 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
AFTER: BEFORE_ITER_GVN
   0  Root  === 0 70 88 99 110 179 161  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 126 65 78 83 94 105 190 252 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 106 95 84 157 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 92 103 81 16 200 237 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 106 88 84 99 95 110 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 95 66 106 84 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 143 84 95 106 262 206 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 106 95 84 243 215 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 92 103 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 186 51  [[ 45 46 193 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 132 119 84 95 106 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 119 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 79 90 101 211 253 ]]  #int:1
  79  ParsePredicate  === 194 78  [[ 192 89 ]]  #Loop #useless  !jvms: loop_invariant::micro @ bci:2 (line 6)
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 191 6 81 8 9 (83 46 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  89  IfTrue  === 79  [[ 90 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  90  ParsePredicate  === 89 78  [[ 91 100 ]]  #Profiled_Loop #useless  !jvms: loop_invariant::micro @ bci:2 (line 6)
  91  IfFalse  === 90  [[ 95 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  92  MergeMem  === _ 1 7 40  [[ 95 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  94  ConI  === 0  [[ 95 ]]  #int:-66
  95  CallStaticJava  === 91 6 92 8 9 (94 46 32 1 36 1 1 1 1 ) [[ 96 ]] # Static uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  96  Proj  === 95  [[ 99 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  99  Halt  === 96 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 100  IfTrue  === 90  [[ 101 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 101  ParsePredicate  === 100 78  [[ 102 111 ]]  #Loop_Limit_Check #useless  !jvms: loop_invariant::micro @ bci:2 (line 6)
 102  IfFalse  === 101  [[ 106 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 103  MergeMem  === _ 1 7 40  [[ 106 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
 105  ConI  === 0  [[ 106 ]]  #int:-146
 106  CallStaticJava  === 102 6 103 8 9 (105 46 32 1 36 1 1 1 1 ) [[ 107 ]] # Static uncommon_trap(reason='loop_limit_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
 107  Proj  === 106  [[ 110 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 110  Halt  === 107 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 111  IfTrue  === 101  [[ 219 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 119  CmpP  === _ 46 47  [[ 120 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 120  Bool  === _ 119  [[ 193 ]] [ne] !jvms: loop_invariant::micro @ bci:4 (line 6)
 132  CastPP  === 194 46  [[ 202 134 134 203 262 203 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 254 210 208 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 143  SqrtD  === 220 32  [[ 239 ]]  !jvms: loop_invariant::micro @ bci:9 (line 7)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 237  [[ 157 ]]  { N40:rawptr:BotPTR - - N237:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 228 6 153 8 9 (156 132 32 1 243 1 1 1 1 132 243 205 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 ]]  #long:16
 166  ConI  === 0  [[ 204 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 45 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 ]]  #int:0
 191  Region  === 191 192 195  [[ 191 84 ]]  !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 192  IfFalse  === 79  [[ 191 ]] #0 !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 193  If  === 45 120  [[ 194 195 ]] P=0.999999, C=-1.000000
 194  IfTrue  === 193  [[ 79 132 ]] #1
 195  IfFalse  === 193  [[ 191 ]] #0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 236 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 132 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 132 132 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 239 241  [[ 201 157 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 239 ]]  !orig=143 !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 209  Bool  === _ 210  [[ 221 ]] [lt] !orig=150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 210  CmpU  === _ 243 135  [[ 209 ]]  !orig=149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 211  AddI  === _ 243 78  [[ 144 262 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 241 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 111 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 260 143 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 209  [[ 222 228 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 227  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 227  IfFalse  === 258  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 228  IfFalse  === 221  [[ 157 ]] #0 !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 236  Phi  === 226 7 201  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 7 201  [[ 153 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 239  Phi  === 261 206 143  [[ 205 ]]  #double !orig=[231]
 241  Phi  === 261 214 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 36 253  [[ 211 157 213 210 157 253 ]]  #int #tripcount !orig=[233]
 253  AddI  === _ 243 78  [[ 243 254 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 254  CmpI  === _ 253 135  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=227,[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 227 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 220 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 239 237 221 ]] stride: 1  strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 132 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 99 110 179 161  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 126 65 78 83 94 105 190 252 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 106 95 84 157 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 92 103 81 16 200 237 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 106 88 84 99 95 110 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 95 66 106 84 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 143 84 95 106 262 206 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 106 95 84 243 215 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 92 103 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 186 51  [[ 45 46 193 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 132 119 84 95 106 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 119 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 79 90 101 211 ]]  #int:1
  79  ParsePredicate  === 194 78  [[ 192 89 ]]  #Loop #useless  !jvms: loop_invariant::micro @ bci:2 (line 6)
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 191 6 81 8 9 (83 46 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  89  IfTrue  === 79  [[ 90 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  90  ParsePredicate  === 89 78  [[ 91 100 ]]  #Profiled_Loop #useless  !jvms: loop_invariant::micro @ bci:2 (line 6)
  91  IfFalse  === 90  [[ 95 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  92  MergeMem  === _ 1 7 40  [[ 95 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  94  ConI  === 0  [[ 95 ]]  #int:-66
  95  CallStaticJava  === 91 6 92 8 9 (94 46 32 1 36 1 1 1 1 ) [[ 96 ]] # Static uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  96  Proj  === 95  [[ 99 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  99  Halt  === 96 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 100  IfTrue  === 90  [[ 101 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 101  ParsePredicate  === 100 78  [[ 102 111 ]]  #Loop_Limit_Check #useless  !jvms: loop_invariant::micro @ bci:2 (line 6)
 102  IfFalse  === 101  [[ 106 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 103  MergeMem  === _ 1 7 40  [[ 106 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
 105  ConI  === 0  [[ 106 ]]  #int:-146
 106  CallStaticJava  === 102 6 103 8 9 (105 46 32 1 36 1 1 1 1 ) [[ 107 ]] # Static uncommon_trap(reason='loop_limit_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
 107  Proj  === 106  [[ 110 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 110  Halt  === 107 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 111  IfTrue  === 101  [[ 219 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 119  CmpP  === _ 46 47  [[ 120 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 120  Bool  === _ 119  [[ 193 ]] [ne] !jvms: loop_invariant::micro @ bci:4 (line 6)
 132  CastPP  === 194 46  [[ 202 134 134 203 262 203 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 254 210 208 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 143  SqrtD  === 220 32  [[ 239 ]]  !jvms: loop_invariant::micro @ bci:9 (line 7)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 237  [[ 157 ]]  { N40:rawptr:BotPTR - - N237:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 228 6 153 8 9 (156 132 32 1 243 1 1 1 1 132 243 205 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 ]]  #long:16
 166  ConI  === 0  [[ 204 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 45 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 ]]  #int:0
 191  Region  === 191 192 195  [[ 191 84 ]]  !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 192  IfFalse  === 79  [[ 191 ]] #0 !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 193  If  === 45 120  [[ 194 195 ]] P=0.999999, C=-1.000000
 194  IfTrue  === 193  [[ 79 132 ]] #1
 195  IfFalse  === 193  [[ 191 ]] #0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 236 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 132 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 132 132 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 239 241  [[ 201 157 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 239 ]]  !orig=143 !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 209  Bool  === _ 210  [[ 221 ]] [lt] !orig=150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 210  CmpU  === _ 243 135  [[ 209 ]]  !orig=149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 211  AddI  === _ 243 78  [[ 144 262 254 243 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 241 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 111 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 260 143 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 209  [[ 222 228 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 227  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 227  IfFalse  === 258  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 228  IfFalse  === 221  [[ 157 ]] #0 !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 236  Phi  === 226 7 201  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 7 201  [[ 153 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 239  Phi  === 261 206 143  [[ 205 ]]  #double !orig=[231]
 241  Phi  === 261 214 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 36 211  [[ 211 157 213 210 157 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 135  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=227,[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 227 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 220 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 239 237 221 ]] stride: 1  strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 132 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 99 110 179 161  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 126 65 78 83 94 105 190 252 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 106 95 84 157 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 92 103 81 16 200 237 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 106 88 84 99 95 110 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 95 66 106 84 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 95 106 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 106 95 84 243 215 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 92 103 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 186 51  [[ 45 46 193 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 132 119 84 95 106 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 119 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 79 90 101 211 ]]  #int:1
  79  ParsePredicate  === 194 78  [[ 192 89 ]]  #Loop #useless  !jvms: loop_invariant::micro @ bci:2 (line 6)
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 191 6 81 8 9 (83 46 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  89  IfTrue  === 79  [[ 90 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  90  ParsePredicate  === 89 78  [[ 91 100 ]]  #Profiled_Loop #useless  !jvms: loop_invariant::micro @ bci:2 (line 6)
  91  IfFalse  === 90  [[ 95 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  92  MergeMem  === _ 1 7 40  [[ 95 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  94  ConI  === 0  [[ 95 ]]  #int:-66
  95  CallStaticJava  === 91 6 92 8 9 (94 46 32 1 36 1 1 1 1 ) [[ 96 ]] # Static uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  96  Proj  === 95  [[ 99 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  99  Halt  === 96 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 100  IfTrue  === 90  [[ 101 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 101  ParsePredicate  === 100 78  [[ 102 111 ]]  #Loop_Limit_Check #useless  !jvms: loop_invariant::micro @ bci:2 (line 6)
 102  IfFalse  === 101  [[ 106 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 103  MergeMem  === _ 1 7 40  [[ 106 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
 105  ConI  === 0  [[ 106 ]]  #int:-146
 106  CallStaticJava  === 102 6 103 8 9 (105 46 32 1 36 1 1 1 1 ) [[ 107 ]] # Static uncommon_trap(reason='loop_limit_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
 107  Proj  === 106  [[ 110 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 110  Halt  === 107 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 111  IfTrue  === 101  [[ 219 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 119  CmpP  === _ 46 47  [[ 120 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 120  Bool  === _ 119  [[ 193 ]] [ne] !jvms: loop_invariant::micro @ bci:4 (line 6)
 132  CastPP  === 194 46  [[ 202 134 134 203 262 203 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 254 210 208 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 237  [[ 157 ]]  { N40:rawptr:BotPTR - - N237:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 228 6 153 8 9 (156 132 32 1 243 1 1 1 1 132 243 205 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 ]]  #long:16
 166  ConI  === 0  [[ 204 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 45 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 ]]  #int:0
 191  Region  === 191 192 195  [[ 191 84 ]]  !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 192  IfFalse  === 79  [[ 191 ]] #0 !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 193  If  === 45 120  [[ 194 195 ]] P=0.999999, C=-1.000000
 194  IfTrue  === 193  [[ 79 132 ]] #1
 195  IfFalse  === 193  [[ 191 ]] #0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 236 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 132 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 132 132 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 239 241  [[ 201 157 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 239 239 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 209  Bool  === _ 210  [[ 221 ]] [lt] !orig=150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 210  CmpU  === _ 243 135  [[ 209 ]]  !orig=149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 211  AddI  === _ 243 78  [[ 144 262 254 243 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 241 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 111 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 260 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 209  [[ 222 228 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 227  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 227  IfFalse  === 258  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 228  IfFalse  === 221  [[ 157 ]] #0 !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 236  Phi  === 226 7 201  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 7 201  [[ 153 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 239  Phi  === 261 206 206  [[ 205 ]]  #double !orig=[231]
 241  Phi  === 261 214 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 36 211  [[ 211 157 213 210 157 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 135  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=227,[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 227 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 220 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 239 237 221 ]] stride: 1  strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 132 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 99 110 179 161  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 126 65 78 83 94 105 190 252 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 106 95 84 157 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 92 103 81 16 200 237 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 106 88 84 99 95 110 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 95 66 106 84 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 95 106 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 106 95 84 243 215 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 92 103 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 186 51  [[ 45 46 193 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 132 119 84 95 106 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 119 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 79 90 101 211 ]]  #int:1
  79  ParsePredicate  === 194 78  [[ 192 89 ]]  #Loop #useless  !jvms: loop_invariant::micro @ bci:2 (line 6)
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 191 6 81 8 9 (83 46 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  89  IfTrue  === 79  [[ 90 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  90  ParsePredicate  === 89 78  [[ 91 100 ]]  #Profiled_Loop #useless  !jvms: loop_invariant::micro @ bci:2 (line 6)
  91  IfFalse  === 90  [[ 95 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  92  MergeMem  === _ 1 7 40  [[ 95 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  94  ConI  === 0  [[ 95 ]]  #int:-66
  95  CallStaticJava  === 91 6 92 8 9 (94 46 32 1 36 1 1 1 1 ) [[ 96 ]] # Static uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  96  Proj  === 95  [[ 99 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  99  Halt  === 96 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 100  IfTrue  === 90  [[ 101 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 101  ParsePredicate  === 100 78  [[ 102 111 ]]  #Loop_Limit_Check #useless  !jvms: loop_invariant::micro @ bci:2 (line 6)
 102  IfFalse  === 101  [[ 106 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 103  MergeMem  === _ 1 7 40  [[ 106 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
 105  ConI  === 0  [[ 106 ]]  #int:-146
 106  CallStaticJava  === 102 6 103 8 9 (105 46 32 1 36 1 1 1 1 ) [[ 107 ]] # Static uncommon_trap(reason='loop_limit_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
 107  Proj  === 106  [[ 110 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 110  Halt  === 107 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 111  IfTrue  === 101  [[ 219 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 119  CmpP  === _ 46 47  [[ 120 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 120  Bool  === _ 119  [[ 193 ]] [ne] !jvms: loop_invariant::micro @ bci:4 (line 6)
 132  CastPP  === 194 46  [[ 202 134 134 203 262 203 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 254 210 208 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 237  [[ 157 ]]  { N40:rawptr:BotPTR - - N237:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 228 6 153 8 9 (156 132 32 1 243 1 1 1 1 132 243 205 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 ]]  #long:16
 166  ConI  === 0  [[ 204 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 45 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 ]]  #int:0
 191  Region  === 191 192 195  [[ 191 84 ]]  !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 192  IfFalse  === 79  [[ 191 ]] #0 !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 193  If  === 45 120  [[ 194 195 ]] P=0.999999, C=-1.000000
 194  IfTrue  === 193  [[ 79 132 ]] #1
 195  IfFalse  === 193  [[ 191 ]] #0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 236 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 132 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 132 132 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 239 241  [[ 201 157 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 239 239 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 209  Bool  === _ 210  [[ 221 ]] [lt] !orig=150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 210  CmpU  === _ 243 135  [[ 209 ]]  !orig=149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 211  AddI  === _ 243 78  [[ 144 262 254 243 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 241 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 111 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 260 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 209  [[ 222 228 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 227  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 227  IfFalse  === 258  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 228  IfFalse  === 221  [[ 157 ]] #0 !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 236  Phi  === 226 7 201  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 7 201  [[ 153 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 239  Phi  === 261 206 206  [[ 205 ]]  #double !orig=[231]
 241  Phi  === 261 214 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 36 211  [[ 211 157 213 210 157 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 135  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=227,[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 227 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 220 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 239 237 221 ]] stride: 1  strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 132 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 99 110 179 161  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 126 65 78 83 94 105 190 252 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 106 95 84 157 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 92 103 81 16 200 237 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 106 88 84 99 95 110 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 95 66 106 84 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 95 106 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 106 95 84 243 215 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 92 103 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 186 51  [[ 45 46 193 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 132 119 84 95 106 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 119 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 79 90 101 211 ]]  #int:1
  79  ParsePredicate  === 194 78  [[ 192 89 ]]  #Loop #useless  !jvms: loop_invariant::micro @ bci:2 (line 6)
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 191 6 81 8 9 (83 46 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  89  IfTrue  === 79  [[ 90 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  90  ParsePredicate  === 89 78  [[ 91 100 ]]  #Profiled_Loop #useless  !jvms: loop_invariant::micro @ bci:2 (line 6)
  91  IfFalse  === 90  [[ 95 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  92  MergeMem  === _ 1 7 40  [[ 95 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  94  ConI  === 0  [[ 95 ]]  #int:-66
  95  CallStaticJava  === 91 6 92 8 9 (94 46 32 1 36 1 1 1 1 ) [[ 96 ]] # Static uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  96  Proj  === 95  [[ 99 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  99  Halt  === 96 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 100  IfTrue  === 90  [[ 101 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 101  ParsePredicate  === 100 78  [[ 102 111 ]]  #Loop_Limit_Check #useless  !jvms: loop_invariant::micro @ bci:2 (line 6)
 102  IfFalse  === 101  [[ 106 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 103  MergeMem  === _ 1 7 40  [[ 106 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
 105  ConI  === 0  [[ 106 ]]  #int:-146
 106  CallStaticJava  === 102 6 103 8 9 (105 46 32 1 36 1 1 1 1 ) [[ 107 ]] # Static uncommon_trap(reason='loop_limit_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
 107  Proj  === 106  [[ 110 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 110  Halt  === 107 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 111  IfTrue  === 101  [[ 219 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 119  CmpP  === _ 46 47  [[ 120 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 120  Bool  === _ 119  [[ 193 ]] [ne] !jvms: loop_invariant::micro @ bci:4 (line 6)
 132  CastPP  === 194 46  [[ 202 134 134 203 262 203 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 254 210 208 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 237  [[ 157 ]]  { N40:rawptr:BotPTR - - N237:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 228 6 153 8 9 (156 132 32 1 243 1 1 1 1 132 243 205 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 ]]  #long:16
 166  ConI  === 0  [[ 204 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 45 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 ]]  #int:0
 191  Region  === 191 192 195  [[ 191 84 ]]  !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 192  IfFalse  === 79  [[ 191 ]] #0 !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 193  If  === 45 120  [[ 194 195 ]] P=0.999999, C=-1.000000
 194  IfTrue  === 193  [[ 79 132 ]] #1
 195  IfFalse  === 193  [[ 191 ]] #0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 236 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 132 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 132 132 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 239 241  [[ 201 157 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 239 239 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 209  Bool  === _ 210  [[ 221 ]] [lt] !orig=150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 210  CmpU  === _ 243 135  [[ 209 ]]  !orig=149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 211  AddI  === _ 243 78  [[ 144 262 254 243 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 241 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 111 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 260 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 209  [[ 222 228 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 227  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 227  IfFalse  === 258  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 228  IfFalse  === 221  [[ 157 ]] #0 !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 236  Phi  === 226 7 201  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 7 201  [[ 153 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 239  Phi  === 261 206 206  [[ 205 ]]  #double !orig=[231]
 241  Phi  === 261 214 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 36 211  [[ 211 157 213 210 157 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 135  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=227,[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 227 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 220 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 239 237 221 ]] stride: 1  strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 132 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 99 110 179 161  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 126 65 78 83 94 105 190 252 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 106 95 84 157 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 92 103 81 16 200 237 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 106 88 84 99 95 110 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 95 66 106 84 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 95 106 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 106 95 84 243 215 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 92 103 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 186 51  [[ 45 46 193 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 132 119 84 95 106 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 119 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 79 90 101 211 ]]  #int:1
  79  ParsePredicate  === 194 78  [[ 192 89 ]]  #Loop #useless  !jvms: loop_invariant::micro @ bci:2 (line 6)
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 191 6 81 8 9 (83 46 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  89  IfTrue  === 79  [[ 90 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  90  ParsePredicate  === 89 78  [[ 91 100 ]]  #Profiled_Loop #useless  !jvms: loop_invariant::micro @ bci:2 (line 6)
  91  IfFalse  === 90  [[ 95 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  92  MergeMem  === _ 1 7 40  [[ 95 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  94  ConI  === 0  [[ 95 ]]  #int:-66
  95  CallStaticJava  === 91 6 92 8 9 (94 46 32 1 36 1 1 1 1 ) [[ 96 ]] # Static uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  96  Proj  === 95  [[ 99 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  99  Halt  === 96 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 100  IfTrue  === 90  [[ 101 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 101  ParsePredicate  === 100 78  [[ 102 111 ]]  #Loop_Limit_Check #useless  !jvms: loop_invariant::micro @ bci:2 (line 6)
 102  IfFalse  === 101  [[ 106 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 103  MergeMem  === _ 1 7 40  [[ 106 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
 105  ConI  === 0  [[ 106 ]]  #int:-146
 106  CallStaticJava  === 102 6 103 8 9 (105 46 32 1 36 1 1 1 1 ) [[ 107 ]] # Static uncommon_trap(reason='loop_limit_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
 107  Proj  === 106  [[ 110 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 110  Halt  === 107 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 111  IfTrue  === 101  [[ 219 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 119  CmpP  === _ 46 47  [[ 120 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 120  Bool  === _ 119  [[ 193 ]] [ne] !jvms: loop_invariant::micro @ bci:4 (line 6)
 132  CastPP  === 194 46  [[ 202 134 134 203 262 203 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 254 210 208 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 237  [[ 157 ]]  { N40:rawptr:BotPTR - - N237:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 228 6 153 8 9 (156 132 32 1 243 1 1 1 1 132 243 205 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 ]]  #long:16
 166  ConI  === 0  [[ 204 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 45 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 ]]  #int:0
 191  Region  === 191 192 195  [[ 191 84 ]]  !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 192  IfFalse  === 79  [[ 191 ]] #0 !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 193  If  === 45 120  [[ 194 195 ]] P=0.999999, C=-1.000000
 194  IfTrue  === 193  [[ 79 132 ]] #1
 195  IfFalse  === 193  [[ 191 ]] #0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 236 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 132 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 132 132 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 239 241  [[ 201 157 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 239 239 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 209  Bool  === _ 210  [[ 221 ]] [lt] !orig=150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 210  CmpU  === _ 243 135  [[ 209 ]]  !orig=149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 211  AddI  === _ 243 78  [[ 144 262 254 243 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 241 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 111 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 260 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 209  [[ 222 228 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 227  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 227  IfFalse  === 258  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 228  IfFalse  === 221  [[ 157 ]] #0 !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 236  Phi  === 226 7 201  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 7 201  [[ 153 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 239  Phi  === 261 206 206  [[ 205 ]]  #double !orig=[231]
 241  Phi  === 261 214 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 36 211  [[ 211 157 213 210 157 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 135  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=227,[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 227 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 220 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 239 237 221 ]] stride: 1  strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 132 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 99 110 179 161  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 126 65 78 83 94 105 190 252 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 106 95 84 157 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 92 103 81 16 200 237 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 106 88 84 99 95 110 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 95 66 106 84 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 95 106 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 106 95 84 243 215 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 92 103 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 186 51  [[ 45 46 193 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 132 119 84 95 106 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 119 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 79 90 101 211 ]]  #int:1
  79  ParsePredicate  === 194 78  [[ 192 89 ]]  #Loop #useless  !jvms: loop_invariant::micro @ bci:2 (line 6)
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 191 6 81 8 9 (83 46 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  89  IfTrue  === 79  [[ 90 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  90  ParsePredicate  === 89 78  [[ 91 100 ]]  #Profiled_Loop #useless  !jvms: loop_invariant::micro @ bci:2 (line 6)
  91  IfFalse  === 90  [[ 95 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  92  MergeMem  === _ 1 7 40  [[ 95 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  94  ConI  === 0  [[ 95 ]]  #int:-66
  95  CallStaticJava  === 91 6 92 8 9 (94 46 32 1 36 1 1 1 1 ) [[ 96 ]] # Static uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  96  Proj  === 95  [[ 99 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  99  Halt  === 96 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 100  IfTrue  === 90  [[ 101 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 101  ParsePredicate  === 100 78  [[ 102 111 ]]  #Loop_Limit_Check #useless  !jvms: loop_invariant::micro @ bci:2 (line 6)
 102  IfFalse  === 101  [[ 106 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 103  MergeMem  === _ 1 7 40  [[ 106 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
 105  ConI  === 0  [[ 106 ]]  #int:-146
 106  CallStaticJava  === 102 6 103 8 9 (105 46 32 1 36 1 1 1 1 ) [[ 107 ]] # Static uncommon_trap(reason='loop_limit_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
 107  Proj  === 106  [[ 110 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 110  Halt  === 107 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 111  IfTrue  === 101  [[ 219 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 119  CmpP  === _ 46 47  [[ 120 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 120  Bool  === _ 119  [[ 193 ]] [ne] !jvms: loop_invariant::micro @ bci:4 (line 6)
 132  CastPP  === 194 46  [[ 202 134 134 203 262 203 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 254 210 208 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 237  [[ 157 ]]  { N40:rawptr:BotPTR - - N237:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 228 6 153 8 9 (156 132 32 1 243 1 1 1 1 132 243 205 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 ]]  #long:16
 166  ConI  === 0  [[ 204 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 45 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 ]]  #int:0
 191  Region  === 191 192 195  [[ 191 84 ]]  !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 192  IfFalse  === 79  [[ 191 ]] #0 !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 193  If  === 45 120  [[ 194 195 ]] P=0.999999, C=-1.000000
 194  IfTrue  === 193  [[ 79 132 ]] #1
 195  IfFalse  === 193  [[ 191 ]] #0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 236 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 132 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 132 132 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 206 241  [[ 201 157 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 209  Bool  === _ 210  [[ 221 ]] [lt] !orig=150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 210  CmpU  === _ 243 135  [[ 209 ]]  !orig=149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 211  AddI  === _ 243 78  [[ 144 262 254 243 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 241 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 111 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 260 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 209  [[ 222 228 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 227  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 227  IfFalse  === 258  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 228  IfFalse  === 221  [[ 157 ]] #0 !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 236  Phi  === 226 7 201  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 7 201  [[ 153 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 214 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 36 211  [[ 211 157 213 210 157 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 135  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=227,[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 227 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 220 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] stride: 1  strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 132 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 99 110 179 161  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 126 65 78 83 94 105 190 252 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 106 95 84 157 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 92 103 81 16 200 237 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 106 88 84 99 95 110 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 95 66 106 84 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 95 106 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 106 95 84 243 215 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 92 103 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 186 51  [[ 45 46 193 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 132 119 84 95 106 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 119 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 79 90 101 211 ]]  #int:1
  79  ParsePredicate  === 194 78  [[ 192 89 ]]  #Loop #useless  !jvms: loop_invariant::micro @ bci:2 (line 6)
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 191 6 81 8 9 (83 46 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  89  IfTrue  === 79  [[ 90 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  90  ParsePredicate  === 89 78  [[ 91 100 ]]  #Profiled_Loop #useless  !jvms: loop_invariant::micro @ bci:2 (line 6)
  91  IfFalse  === 90  [[ 95 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  92  MergeMem  === _ 1 7 40  [[ 95 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  94  ConI  === 0  [[ 95 ]]  #int:-66
  95  CallStaticJava  === 91 6 92 8 9 (94 46 32 1 36 1 1 1 1 ) [[ 96 ]] # Static uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  96  Proj  === 95  [[ 99 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  99  Halt  === 96 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 100  IfTrue  === 90  [[ 101 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 101  ParsePredicate  === 100 78  [[ 111 ]]  #Loop_Limit_Check #useless  !jvms: loop_invariant::micro @ bci:2 (line 6)
 103  MergeMem  === _ 1 7 40  [[ 106 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
 105  ConI  === 0  [[ 106 ]]  #int:-146
 106  CallStaticJava  === 1 6 103 8 9 (105 46 32 1 36 1 1 1 1 ) [[ 107 ]] # Static uncommon_trap(reason='loop_limit_check' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
 107  Proj  === 106  [[ 110 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
 110  Halt  === 107 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 111  IfTrue  === 101  [[ 219 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 119  CmpP  === _ 46 47  [[ 120 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 120  Bool  === _ 119  [[ 193 ]] [ne] !jvms: loop_invariant::micro @ bci:4 (line 6)
 132  CastPP  === 194 46  [[ 202 134 134 203 262 203 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 254 210 208 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 237  [[ 157 ]]  { N40:rawptr:BotPTR - - N237:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 228 6 153 8 9 (156 132 32 1 243 1 1 1 1 132 243 205 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 ]]  #long:16
 166  ConI  === 0  [[ 204 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 45 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 ]]  #int:0
 191  Region  === 191 192 195  [[ 191 84 ]]  !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 192  IfFalse  === 79  [[ 191 ]] #0 !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 193  If  === 45 120  [[ 194 195 ]] P=0.999999, C=-1.000000
 194  IfTrue  === 193  [[ 79 132 ]] #1
 195  IfFalse  === 193  [[ 191 ]] #0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 236 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 132 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 132 132 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 206 241  [[ 201 157 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 209  Bool  === _ 210  [[ 221 ]] [lt] !orig=150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 210  CmpU  === _ 243 135  [[ 209 ]]  !orig=149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 211  AddI  === _ 243 78  [[ 144 262 254 243 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 241 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 111 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 260 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 209  [[ 222 228 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 227  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 227  IfFalse  === 258  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 228  IfFalse  === 221  [[ 157 ]] #0 !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 236  Phi  === 226 7 201  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 7 201  [[ 153 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 214 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 36 211  [[ 211 157 213 210 157 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 135  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=227,[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 227 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 220 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] stride: 1  strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 132 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 99 1 179 161  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 126 65 78 83 94 105 190 252 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 95 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 92 237 81 16 200 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 95 88 84 99 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 95 66 84 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 95 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 95 84 243 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 92 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 186 51  [[ 45 46 193 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 132 119 84 95 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 119 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 79 90 101 211 ]]  #int:1
  79  ParsePredicate  === 194 78  [[ 192 89 ]]  #Loop #useless  !jvms: loop_invariant::micro @ bci:2 (line 6)
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 191 6 81 8 9 (83 46 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  89  IfTrue  === 79  [[ 90 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  90  ParsePredicate  === 89 78  [[ 91 100 ]]  #Profiled_Loop #useless  !jvms: loop_invariant::micro @ bci:2 (line 6)
  91  IfFalse  === 90  [[ 95 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  92  MergeMem  === _ 1 7 40  [[ 95 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  94  ConI  === 0  [[ 95 ]]  #int:-66
  95  CallStaticJava  === 91 6 92 8 9 (94 46 32 1 36 1 1 1 1 ) [[ 96 ]] # Static uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  96  Proj  === 95  [[ 99 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  99  Halt  === 96 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 100  IfTrue  === 90  [[ 101 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 101  ParsePredicate  === 100 78  [[ 111 ]]  #Loop_Limit_Check #useless  !jvms: loop_invariant::micro @ bci:2 (line 6)
 111  IfTrue  === 101  [[ 219 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 119  CmpP  === _ 46 47  [[ 120 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 120  Bool  === _ 119  [[ 193 ]] [ne] !jvms: loop_invariant::micro @ bci:4 (line 6)
 132  CastPP  === 194 46  [[ 202 134 134 203 262 203 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 254 210 208 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 237  [[ 157 ]]  { N40:rawptr:BotPTR - - N237:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 228 6 153 8 9 (156 132 32 1 243 1 1 1 1 132 243 205 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 ]]  #long:16
 166  ConI  === 0  [[ 204 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 45 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 ]]  #int:0
 191  Region  === 191 192 195  [[ 191 84 ]]  !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 192  IfFalse  === 79  [[ 191 ]] #0 !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 193  If  === 45 120  [[ 194 195 ]] P=0.999999, C=-1.000000
 194  IfTrue  === 193  [[ 79 132 ]] #1
 195  IfFalse  === 193  [[ 191 ]] #0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 236 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 132 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 132 132 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 206 241  [[ 201 157 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 209  Bool  === _ 210  [[ 221 ]] [lt] !orig=150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 210  CmpU  === _ 243 135  [[ 209 ]]  !orig=149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 211  AddI  === _ 243 78  [[ 144 262 254 243 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 241 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 111 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 260 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 209  [[ 222 228 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 227  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 227  IfFalse  === 258  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 228  IfFalse  === 221  [[ 157 ]] #0 !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 236  Phi  === 226 7 201  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 7 201  [[ 153 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 214 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 36 211  [[ 211 157 213 210 157 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 135  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=227,[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 227 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 220 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] stride: 1  strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 132 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 99 161 179  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 126 65 78 83 94 105 190 252 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 95 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 92 237 81 16 200 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 95 88 84 99 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 95 66 84 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 95 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 95 84 243 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 92 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 186 51  [[ 45 46 193 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 132 119 84 95 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 119 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 79 90 101 211 ]]  #int:1
  79  ParsePredicate  === 194 78  [[ 89 ]]  #Loop #useless  !jvms: loop_invariant::micro @ bci:2 (line 6)
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 191 6 81 8 9 (83 46 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  89  IfTrue  === 79  [[ 90 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  90  ParsePredicate  === 89 78  [[ 91 100 ]]  #Profiled_Loop #useless  !jvms: loop_invariant::micro @ bci:2 (line 6)
  91  IfFalse  === 90  [[ 95 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  92  MergeMem  === _ 1 7 40  [[ 95 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  94  ConI  === 0  [[ 95 ]]  #int:-66
  95  CallStaticJava  === 91 6 92 8 9 (94 46 32 1 36 1 1 1 1 ) [[ 96 ]] # Static uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  96  Proj  === 95  [[ 99 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  99  Halt  === 96 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 100  IfTrue  === 90  [[ 101 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 101  ParsePredicate  === 100 78  [[ 111 ]]  #Loop_Limit_Check #useless  !jvms: loop_invariant::micro @ bci:2 (line 6)
 111  IfTrue  === 101  [[ 219 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 119  CmpP  === _ 46 47  [[ 120 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 120  Bool  === _ 119  [[ 193 ]] [ne] !jvms: loop_invariant::micro @ bci:4 (line 6)
 132  CastPP  === 194 46  [[ 202 134 134 203 262 203 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 254 210 208 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 237  [[ 157 ]]  { N40:rawptr:BotPTR - - N237:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 228 6 153 8 9 (156 132 32 1 243 1 1 1 1 132 243 205 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 ]]  #long:16
 166  ConI  === 0  [[ 204 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 45 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 ]]  #int:0
 191  Region  === 191 1 195  [[ 191 84 ]]  !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 193  If  === 45 120  [[ 194 195 ]] P=0.999999, C=-1.000000
 194  IfTrue  === 193  [[ 79 132 ]] #1
 195  IfFalse  === 193  [[ 191 ]] #0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 236 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 132 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 132 132 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 206 241  [[ 201 157 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 209  Bool  === _ 210  [[ 221 ]] [lt] !orig=150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 210  CmpU  === _ 243 135  [[ 209 ]]  !orig=149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 211  AddI  === _ 243 78  [[ 144 262 254 243 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 241 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 111 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 260 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 209  [[ 222 228 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 227  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 227  IfFalse  === 258  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 228  IfFalse  === 221  [[ 157 ]] #0 !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 236  Phi  === 226 7 201  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 7 201  [[ 153 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 214 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 36 211  [[ 211 157 213 210 157 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 135  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=227,[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 227 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 220 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] stride: 1  strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 132 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 99 161 179  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 126 65 78 83 94 105 190 252 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 95 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 92 237 81 16 200 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 95 88 84 99 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 95 66 84 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 95 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 95 84 243 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 92 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 186 51  [[ 45 46 193 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 132 119 84 95 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 119 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 79 90 101 211 ]]  #int:1
  79  ParsePredicate  === 194 78  [[ 89 ]]  #Loop #useless  !jvms: loop_invariant::micro @ bci:2 (line 6)
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 191 6 81 8 9 (83 46 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  89  IfTrue  === 79  [[ 90 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  90  ParsePredicate  === 89 78  [[ 100 ]]  #Profiled_Loop #useless  !jvms: loop_invariant::micro @ bci:2 (line 6)
  92  MergeMem  === _ 1 7 40  [[ 95 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  94  ConI  === 0  [[ 95 ]]  #int:-66
  95  CallStaticJava  === 1 6 92 8 9 (94 46 32 1 36 1 1 1 1 ) [[ 96 ]] # Static uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  96  Proj  === 95  [[ 99 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  99  Halt  === 96 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 100  IfTrue  === 90  [[ 101 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 101  ParsePredicate  === 100 78  [[ 111 ]]  #Loop_Limit_Check #useless  !jvms: loop_invariant::micro @ bci:2 (line 6)
 111  IfTrue  === 101  [[ 219 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
 119  CmpP  === _ 46 47  [[ 120 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 120  Bool  === _ 119  [[ 193 ]] [ne] !jvms: loop_invariant::micro @ bci:4 (line 6)
 132  CastPP  === 194 46  [[ 202 134 134 203 262 203 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 254 210 208 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 237  [[ 157 ]]  { N40:rawptr:BotPTR - - N237:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 228 6 153 8 9 (156 132 32 1 243 1 1 1 1 132 243 205 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 ]]  #long:16
 166  ConI  === 0  [[ 204 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 45 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 ]]  #int:0
 191  Region  === 191 1 195  [[ 191 84 ]]  !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 193  If  === 45 120  [[ 194 195 ]] P=0.999999, C=-1.000000
 194  IfTrue  === 193  [[ 79 132 ]] #1
 195  IfFalse  === 193  [[ 191 ]] #0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 236 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 132 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 132 132 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 206 241  [[ 201 157 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 209  Bool  === _ 210  [[ 221 ]] [lt] !orig=150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 210  CmpU  === _ 243 135  [[ 209 ]]  !orig=149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 211  AddI  === _ 243 78  [[ 144 262 254 243 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 241 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 111 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 260 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 209  [[ 222 228 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 227  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 227  IfFalse  === 258  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 228  IfFalse  === 221  [[ 157 ]] #0 !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 236  Phi  === 226 7 201  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 7 201  [[ 153 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 214 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 36 211  [[ 211 157 213 210 157 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 135  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=227,[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 227 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 220 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] stride: 1  strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 132 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 99 161 179  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 126 65 78 83 94 105 190 252 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 95 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 92 237 81 16 200 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 95 88 84 99 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 95 66 84 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 95 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 95 84 243 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 92 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 186 51  [[ 45 46 193 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 132 119 84 95 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 119 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 79 90 211 ]]  #int:1
  79  ParsePredicate  === 194 78  [[ 89 ]]  #Loop #useless  !jvms: loop_invariant::micro @ bci:2 (line 6)
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 191 6 81 8 9 (83 46 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  89  IfTrue  === 79  [[ 90 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  90  ParsePredicate  === 89 78  [[ 100 ]]  #Profiled_Loop #useless  !jvms: loop_invariant::micro @ bci:2 (line 6)
  92  MergeMem  === _ 1 7 40  [[ 95 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  94  ConI  === 0  [[ 95 ]]  #int:-66
  95  CallStaticJava  === 1 6 92 8 9 (94 46 32 1 36 1 1 1 1 ) [[ 96 ]] # Static uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  96  Proj  === 95  [[ 99 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  99  Halt  === 96 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 100  IfTrue  === 90  [[ 219 ]] #1 !orig=[111] !jvms: loop_invariant::micro @ bci:2 (line 6)
 119  CmpP  === _ 46 47  [[ 120 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 120  Bool  === _ 119  [[ 193 ]] [ne] !jvms: loop_invariant::micro @ bci:4 (line 6)
 132  CastPP  === 194 46  [[ 202 134 134 203 262 203 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 254 210 208 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 237  [[ 157 ]]  { N40:rawptr:BotPTR - - N237:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 228 6 153 8 9 (156 132 32 1 243 1 1 1 1 132 243 205 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 ]]  #long:16
 166  ConI  === 0  [[ 204 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 45 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 ]]  #int:0
 191  Region  === 191 1 195  [[ 191 84 ]]  !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 193  If  === 45 120  [[ 194 195 ]] P=0.999999, C=-1.000000
 194  IfTrue  === 193  [[ 79 132 ]] #1
 195  IfFalse  === 193  [[ 191 ]] #0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 236 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 132 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 132 132 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 206 241  [[ 201 157 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 209  Bool  === _ 210  [[ 221 ]] [lt] !orig=150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 210  CmpU  === _ 243 135  [[ 209 ]]  !orig=149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 211  AddI  === _ 243 78  [[ 144 262 254 243 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 241 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 100 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 260 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 209  [[ 222 228 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 227  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 227  IfFalse  === 258  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 228  IfFalse  === 221  [[ 157 ]] #0 !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 236  Phi  === 226 7 201  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 7 201  [[ 153 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 214 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 36 211  [[ 211 157 213 210 157 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 135  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=227,[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 227 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 220 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] stride: 1  strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 132 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 99 161 179  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 126 65 78 83 94 105 190 252 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 95 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 92 237 81 16 200 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 95 88 84 99 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 95 66 84 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 95 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 95 84 243 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 92 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 186 51  [[ 45 46 193 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 132 119 84 95 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 119 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 90 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 191 6 81 8 9 (83 46 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  90  ParsePredicate  === 194 78  [[ 100 ]]  #Profiled_Loop #useless  !jvms: loop_invariant::micro @ bci:2 (line 6)
  92  MergeMem  === _ 1 7 40  [[ 95 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  94  ConI  === 0  [[ 95 ]]  #int:-66
  95  CallStaticJava  === 1 6 92 8 9 (94 46 32 1 36 1 1 1 1 ) [[ 96 ]] # Static uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  96  Proj  === 95  [[ 99 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  99  Halt  === 96 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 100  IfTrue  === 90  [[ 219 ]] #1 !orig=[111] !jvms: loop_invariant::micro @ bci:2 (line 6)
 119  CmpP  === _ 46 47  [[ 120 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 120  Bool  === _ 119  [[ 193 ]] [ne] !jvms: loop_invariant::micro @ bci:4 (line 6)
 132  CastPP  === 194 46  [[ 202 134 134 203 262 203 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 254 210 208 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 237  [[ 157 ]]  { N40:rawptr:BotPTR - - N237:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 228 6 153 8 9 (156 132 32 1 243 1 1 1 1 132 243 205 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 ]]  #long:16
 166  ConI  === 0  [[ 204 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 45 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 ]]  #int:0
 191  Region  === 191 1 195  [[ 191 84 ]]  !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 193  If  === 45 120  [[ 194 195 ]] P=0.999999, C=-1.000000
 194  IfTrue  === 193  [[ 90 132 ]] #1 !orig=[89] !jvms: loop_invariant::micro @ bci:2 (line 6)
 195  IfFalse  === 193  [[ 191 ]] #0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 236 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 132 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 132 132 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 206 241  [[ 201 157 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 209  Bool  === _ 210  [[ 221 ]] [lt] !orig=150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 210  CmpU  === _ 243 135  [[ 209 ]]  !orig=149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 211  AddI  === _ 243 78  [[ 144 262 254 243 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 241 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 100 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 260 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 209  [[ 222 228 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 227  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 227  IfFalse  === 258  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 228  IfFalse  === 221  [[ 157 ]] #0 !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 236  Phi  === 226 7 201  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 7 201  [[ 153 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 214 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 36 211  [[ 211 157 213 210 157 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 135  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=227,[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 227 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 220 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] stride: 1  strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 132 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 99 161 179  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 126 65 78 83 94 105 190 252 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 95 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 92 237 81 16 200 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 95 88 84 99 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 95 66 84 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 95 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 95 84 243 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 92 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 186 51  [[ 45 46 193 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 132 119 84 95 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 119 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 191 6 81 8 9 (83 46 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  92  MergeMem  === _ 1 7 40  [[ 95 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  94  ConI  === 0  [[ 95 ]]  #int:-66
  95  CallStaticJava  === 1 6 92 8 9 (94 46 32 1 36 1 1 1 1 ) [[ 96 ]] # Static uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  96  Proj  === 95  [[ 99 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  99  Halt  === 96 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 119  CmpP  === _ 46 47  [[ 120 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 120  Bool  === _ 119  [[ 193 ]] [ne] !jvms: loop_invariant::micro @ bci:4 (line 6)
 132  CastPP  === 194 46  [[ 202 134 134 203 262 203 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 254 210 208 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 237  [[ 157 ]]  { N40:rawptr:BotPTR - - N237:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 228 6 153 8 9 (156 132 32 1 243 1 1 1 1 132 243 205 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 ]]  #long:16
 166  ConI  === 0  [[ 204 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 45 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 ]]  #int:0
 191  Region  === 191 1 195  [[ 191 84 ]]  !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 193  If  === 45 120  [[ 194 195 ]] P=0.999999, C=-1.000000
 194  IfTrue  === 193  [[ 219 132 ]] #1 !orig=[89] !jvms: loop_invariant::micro @ bci:2 (line 6)
 195  IfFalse  === 193  [[ 191 ]] #0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 236 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 132 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 132 132 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 206 241  [[ 201 157 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 209  Bool  === _ 210  [[ 221 ]] [lt] !orig=150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 210  CmpU  === _ 243 135  [[ 209 ]]  !orig=149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 211  AddI  === _ 243 78  [[ 144 262 254 243 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 241 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 194 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 260 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 209  [[ 222 228 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 227  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 227  IfFalse  === 258  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 228  IfFalse  === 221  [[ 157 ]] #0 !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 236  Phi  === 226 7 201  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 7 201  [[ 153 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 214 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 36 211  [[ 211 157 213 210 157 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 135  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=227,[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 227 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 220 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] stride: 1  strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 132 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 1 161 179  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 126 65 78 83 94 105 190 252 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 237 81 16 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 243 84 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 186 51  [[ 45 46 193 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 132 119 84 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 119 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 191 6 81 8 9 (83 46 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 119  CmpP  === _ 46 47  [[ 120 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 120  Bool  === _ 119  [[ 193 ]] [ne] !jvms: loop_invariant::micro @ bci:4 (line 6)
 132  CastPP  === 194 46  [[ 202 134 134 203 262 203 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 254 210 208 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 237  [[ 157 ]]  { N40:rawptr:BotPTR - - N237:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 228 6 153 8 9 (156 132 32 1 243 1 1 1 1 132 243 205 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 ]]  #long:16
 166  ConI  === 0  [[ 204 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 45 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 ]]  #int:0
 191  Region  === 191 1 195  [[ 191 84 ]]  !orig=[80] !jvms: loop_invariant::micro @ bci:2 (line 6)
 193  If  === 45 120  [[ 194 195 ]] P=0.999999, C=-1.000000
 194  IfTrue  === 193  [[ 219 132 ]] #1 !orig=[89] !jvms: loop_invariant::micro @ bci:2 (line 6)
 195  IfFalse  === 193  [[ 191 ]] #0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 236 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 132 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 132 132 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 206 241  [[ 201 157 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 209  Bool  === _ 210  [[ 221 ]] [lt] !orig=150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 210  CmpU  === _ 243 135  [[ 209 ]]  !orig=149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 211  AddI  === _ 243 78  [[ 144 262 254 243 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 241 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 194 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 260 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 209  [[ 222 228 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 227  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 227  IfFalse  === 258  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 228  IfFalse  === 221  [[ 157 ]] #0 !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 236  Phi  === 226 7 201  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 7 201  [[ 153 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 214 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 36 211  [[ 211 157 213 210 157 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 135  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=227,[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 227 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 220 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] stride: 1  strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 132 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 179 161  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 126 65 78 83 94 105 190 252 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 237 81 16 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 243 84 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 186 51  [[ 45 46 193 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 132 119 84 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 119 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 195 6 81 8 9 (83 46 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 119  CmpP  === _ 46 47  [[ 120 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 120  Bool  === _ 119  [[ 193 ]] [ne] !jvms: loop_invariant::micro @ bci:4 (line 6)
 132  CastPP  === 194 46  [[ 202 134 134 203 262 203 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 254 210 208 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 237  [[ 157 ]]  { N40:rawptr:BotPTR - - N237:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 228 6 153 8 9 (156 132 32 1 243 1 1 1 1 132 243 205 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 ]]  #long:16
 166  ConI  === 0  [[ 204 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 45 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 ]]  #int:0
 193  If  === 45 120  [[ 194 195 ]] P=0.999999, C=-1.000000
 194  IfTrue  === 193  [[ 219 132 ]] #1 !orig=[89] !jvms: loop_invariant::micro @ bci:2 (line 6)
 195  IfFalse  === 193  [[ 84 ]] #0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 236 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 132 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 132 132 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 206 241  [[ 201 157 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 209  Bool  === _ 210  [[ 221 ]] [lt] !orig=150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 210  CmpU  === _ 243 135  [[ 209 ]]  !orig=149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 211  AddI  === _ 243 78  [[ 144 262 254 243 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 241 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 194 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 260 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 209  [[ 222 228 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 227  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 227  IfFalse  === 258  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 228  IfFalse  === 221  [[ 157 ]] #0 !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 236  Phi  === 226 7 201  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 7 201  [[ 153 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 214 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 36 211  [[ 211 157 213 210 157 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 135  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=227,[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 227 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 220 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] stride: 1  strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 132 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
AFTER: AFTER_ITER_GVN
   0  Root  === 0 70 88 179 161  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 126 65 78 83 94 105 190 252 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 237 81 16 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 243 84 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 186 51  [[ 45 46 193 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 132 119 84 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 119 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 195 6 81 8 9 (83 46 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 119  CmpP  === _ 46 47  [[ 120 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 120  Bool  === _ 119  [[ 193 ]] [ne] !jvms: loop_invariant::micro @ bci:4 (line 6)
 132  CastPP  === 194 46  [[ 202 134 134 203 262 203 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 254 210 208 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 237  [[ 157 ]]  { N40:rawptr:BotPTR - - N237:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 228 6 153 8 9 (156 132 32 1 243 1 1 1 1 132 243 205 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 ]]  #long:16
 166  ConI  === 0  [[ 204 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 45 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 ]]  #int:0
 193  If  === 45 120  [[ 194 195 ]] P=0.999999, C=-1.000000
 194  IfTrue  === 193  [[ 219 132 ]] #1 !orig=[89] !jvms: loop_invariant::micro @ bci:2 (line 6)
 195  IfFalse  === 193  [[ 84 ]] #0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 236 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 132 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 132 132 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 206 241  [[ 201 157 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 209  Bool  === _ 210  [[ 221 ]] [lt] !orig=150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 210  CmpU  === _ 243 135  [[ 209 ]]  !orig=149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 211  AddI  === _ 243 78  [[ 144 262 254 243 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 241 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 194 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 260 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 209  [[ 222 228 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 227  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 227  IfFalse  === 258  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 228  IfFalse  === 221  [[ 157 ]] #0 !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 236  Phi  === 226 7 201  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 7 201  [[ 153 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 214 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 36 211  [[ 211 157 213 210 157 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 135  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=227,[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 227 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 220 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] stride: 1  strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 132 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
AFTER: PHASEIDEALLOOP3
   0  Root  === 0 70 88 179 161  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 126 65 78 83 94 105 190 252 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 237 81 16 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 243 84 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 186 51  [[ 45 46 193 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 132 119 84 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 119 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 195 6 81 8 9 (83 46 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 119  CmpP  === _ 46 47  [[ 120 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 120  Bool  === _ 119  [[ 193 ]] [ne] !jvms: loop_invariant::micro @ bci:4 (line 6)
 132  CastPP  === 194 46  [[ 202 134 134 203 262 203 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 254 210 208 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 237  [[ 157 ]]  { N40:rawptr:BotPTR - - N237:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 228 6 153 8 9 (156 132 32 1 243 1 1 1 1 132 243 205 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 ]]  #long:16
 166  ConI  === 0  [[ 204 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 45 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 ]]  #int:0
 193  If  === 45 120  [[ 194 195 ]] P=0.999999, C=-1.000000
 194  IfTrue  === 193  [[ 219 132 ]] #1 !orig=[89] !jvms: loop_invariant::micro @ bci:2 (line 6)
 195  IfFalse  === 193  [[ 84 ]] #0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 236 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 132 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 132 132 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 206 241  [[ 201 157 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 209  Bool  === _ 210  [[ 221 ]] [lt] !orig=150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 210  CmpU  === _ 243 135  [[ 209 ]]  !orig=149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 211  AddI  === _ 243 78  [[ 144 262 254 243 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 241 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 194 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 260 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 209  [[ 222 228 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 227  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 227  IfFalse  === 258  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 228  IfFalse  === 221  [[ 157 ]] #0 !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 236  Phi  === 226 7 201  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 7 201  [[ 153 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 214 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 36 211  [[ 211 157 213 210 157 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 135  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=227,[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 227 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 220 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] stride: 1  strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 132 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
AFTER: BEFORE_CCP1
   0  Root  === 0 70 88 179 161  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 126 65 78 83 94 105 190 252 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 237 81 16 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 243 84 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 186 51  [[ 45 46 193 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 132 119 84 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 119 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 195 6 81 8 9 (83 46 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 119  CmpP  === _ 46 47  [[ 120 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 120  Bool  === _ 119  [[ 193 ]] [ne] !jvms: loop_invariant::micro @ bci:4 (line 6)
 132  CastPP  === 194 46  [[ 202 134 134 203 262 203 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 254 210 208 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 237  [[ 157 ]]  { N40:rawptr:BotPTR - - N237:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 228 6 153 8 9 (156 132 32 1 243 1 1 1 1 132 243 205 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 ]]  #long:16
 166  ConI  === 0  [[ 204 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 45 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 ]]  #int:0
 193  If  === 45 120  [[ 194 195 ]] P=0.999999, C=-1.000000
 194  IfTrue  === 193  [[ 219 132 ]] #1 !orig=[89] !jvms: loop_invariant::micro @ bci:2 (line 6)
 195  IfFalse  === 193  [[ 84 ]] #0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 236 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 132 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 132 132 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 206 241  [[ 201 157 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 209  Bool  === _ 210  [[ 221 ]] [lt] !orig=150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 210  CmpU  === _ 243 135  [[ 209 ]]  !orig=149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 211  AddI  === _ 243 78  [[ 144 262 254 243 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 241 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 194 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 260 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 209  [[ 222 228 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 227  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 227  IfFalse  === 258  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 228  IfFalse  === 221  [[ 157 ]] #0 !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 236  Phi  === 226 7 201  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 7 201  [[ 153 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 214 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 36 211  [[ 211 157 213 210 157 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 135  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=227,[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 227 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 220 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] stride: 1  strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 132 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
AFTER: CCP1
   0  Root  === 0 70 88 179 161  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 237 81 16 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 243 84 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 186 51  [[ 45 46 193 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 132 119 84 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 119 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 195 6 81 8 9 (83 46 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 119  CmpP  === _ 46 47  [[ 120 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 120  Bool  === _ 119  [[ 193 ]] [ne] !jvms: loop_invariant::micro @ bci:4 (line 6)
 132  CastPP  === 194 46  [[ 202 134 134 203 262 203 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 254 210 208 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 237  [[ 157 ]]  { N40:rawptr:BotPTR - - N237:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 228 6 153 8 9 (156 132 32 1 243 1 1 1 1 132 243 205 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 ]]  #long:16
 166  ConI  === 0  [[ 204 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 45 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 ]]  #int:0
 193  If  === 45 120  [[ 194 195 ]] P=0.999999, C=-1.000000
 194  IfTrue  === 193  [[ 219 132 ]] #1 !orig=[89] !jvms: loop_invariant::micro @ bci:2 (line 6)
 195  IfFalse  === 193  [[ 84 ]] #0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 236 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 132 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 132 132 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 206 241  [[ 201 157 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 209  Bool  === _ 210  [[ 221 ]] [lt] !orig=150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 210  CmpU  === _ 243 135  [[ 209 ]]  !orig=149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 211  AddI  === _ 243 78  [[ 144 262 254 243 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 241 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 194 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 260 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 209  [[ 222 228 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 227  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 227  IfFalse  === 258  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 228  IfFalse  === 221  [[ 157 ]] #0 !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 236  Phi  === 226 7 201  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 7 201  [[ 153 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 214 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 36 211  [[ 211 157 213 210 157 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 135  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=227,[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 227 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 220 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] stride: 1  strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 132 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
AFTER: BEFORE_ITER_GVN
   0  Root  === 0 70 88 179 161  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 237 81 16 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 243 84 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 186 51  [[ 45 46 193 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 132 119 84 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 119 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 195 6 81 8 9 (83 46 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 119  CmpP  === _ 46 47  [[ 120 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 120  Bool  === _ 119  [[ 193 ]] [ne] !jvms: loop_invariant::micro @ bci:4 (line 6)
 132  CastPP  === 194 46  [[ 202 134 134 203 262 203 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 254 210 208 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 237  [[ 157 ]]  { N40:rawptr:BotPTR - - N237:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 228 6 153 8 9 (156 132 32 1 243 1 1 1 1 132 243 205 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 ]]  #long:16
 166  ConI  === 0  [[ 204 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 45 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 ]]  #int:0
 193  If  === 45 120  [[ 194 195 ]] P=0.999999, C=-1.000000
 194  IfTrue  === 193  [[ 219 132 ]] #1 !orig=[89] !jvms: loop_invariant::micro @ bci:2 (line 6)
 195  IfFalse  === 193  [[ 84 ]] #0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 236 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 132 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 132 132 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 206 241  [[ 201 157 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 209  Bool  === _ 210  [[ 221 ]] [lt] !orig=150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 210  CmpU  === _ 243 135  [[ 209 ]]  !orig=149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 211  AddI  === _ 243 78  [[ 144 262 254 243 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 241 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 194 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 260 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 209  [[ 222 228 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 227  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 227  IfFalse  === 258  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 228  IfFalse  === 221  [[ 157 ]] #0 !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 236  Phi  === 226 7 201  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 7 201  [[ 153 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 214 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 36 211  [[ 211 157 213 210 157 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 135  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=227,[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 227 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 220 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] stride: 1  strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 132 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
AFTER: AFTER_ITER_GVN
   0  Root  === 0 70 88 179 161  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 237 81 16 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 243 84 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 186 51  [[ 45 46 193 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 132 119 84 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 119 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 195 6 81 8 9 (83 46 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 119  CmpP  === _ 46 47  [[ 120 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 120  Bool  === _ 119  [[ 193 ]] [ne] !jvms: loop_invariant::micro @ bci:4 (line 6)
 132  CastPP  === 194 46  [[ 202 134 134 203 262 203 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 254 210 208 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 237  [[ 157 ]]  { N40:rawptr:BotPTR - - N237:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 228 6 153 8 9 (156 132 32 1 243 1 1 1 1 132 243 205 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 ]]  #long:16
 166  ConI  === 0  [[ 204 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 45 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 ]]  #int:0
 193  If  === 45 120  [[ 194 195 ]] P=0.999999, C=-1.000000
 194  IfTrue  === 193  [[ 219 132 ]] #1 !orig=[89] !jvms: loop_invariant::micro @ bci:2 (line 6)
 195  IfFalse  === 193  [[ 84 ]] #0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 236 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 132 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 132 132 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 206 241  [[ 201 157 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 209  Bool  === _ 210  [[ 221 ]] [lt] !orig=150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 210  CmpU  === _ 243 135  [[ 209 ]]  !orig=149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 211  AddI  === _ 243 78  [[ 144 262 254 243 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 241 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 194 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 260 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 209  [[ 222 228 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 227  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 227  IfFalse  === 258  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 228  IfFalse  === 221  [[ 157 ]] #0 !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 236  Phi  === 226 7 201  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 7 201  [[ 153 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 214 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 36 211  [[ 211 157 213 210 157 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 135  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=227,[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 227 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 220 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] stride: 1  strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 132 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
AFTER: ITER_GVN2
   0  Root  === 0 70 88 179 161  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 237 81 16 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 243 84 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 186 51  [[ 45 46 193 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 132 119 84 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 119 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 195 6 81 8 9 (83 46 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 119  CmpP  === _ 46 47  [[ 120 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 120  Bool  === _ 119  [[ 193 ]] [ne] !jvms: loop_invariant::micro @ bci:4 (line 6)
 132  CastPP  === 194 46  [[ 202 134 134 203 262 203 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 254 210 208 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 237  [[ 157 ]]  { N40:rawptr:BotPTR - - N237:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 228 6 153 8 9 (156 132 32 1 243 1 1 1 1 132 243 205 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 ]]  #long:16
 166  ConI  === 0  [[ 204 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 45 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 ]]  #int:0
 193  If  === 45 120  [[ 194 195 ]] P=0.999999, C=-1.000000
 194  IfTrue  === 193  [[ 219 132 ]] #1 !orig=[89] !jvms: loop_invariant::micro @ bci:2 (line 6)
 195  IfFalse  === 193  [[ 84 ]] #0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 236 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 132 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 132 132 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 206 241  [[ 201 157 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 209  Bool  === _ 210  [[ 221 ]] [lt] !orig=150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 210  CmpU  === _ 243 135  [[ 209 ]]  !orig=149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 211  AddI  === _ 243 78  [[ 144 262 254 243 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 241 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 194 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 260 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 209  [[ 222 228 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 227  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 227  IfFalse  === 258  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 228  IfFalse  === 221  [[ 157 ]] #0 !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 236  Phi  === 226 7 201  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 7 201  [[ 153 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 214 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 36 211  [[ 211 157 213 210 157 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 135  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=227,[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 227 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 220 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] stride: 1  strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 132 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
AFTER: BEFORE_BEAUTIFY_LOOPS
   0  Root  === 0 70 88 179 161  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 237 81 16 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 243 84 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 186 51  [[ 45 46 193 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 132 119 84 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 119 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 195 6 81 8 9 (83 46 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 119  CmpP  === _ 46 47  [[ 120 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 120  Bool  === _ 119  [[ 193 ]] [ne] !jvms: loop_invariant::micro @ bci:4 (line 6)
 132  CastPP  === 194 46  [[ 202 134 134 203 262 203 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 254 210 208 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 237  [[ 157 ]]  { N40:rawptr:BotPTR - - N237:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 228 6 153 8 9 (156 132 32 1 243 1 1 1 1 132 243 205 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 ]]  #long:16
 166  ConI  === 0  [[ 204 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 45 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 ]]  #int:0
 193  If  === 45 120  [[ 194 195 ]] P=0.999999, C=-1.000000
 194  IfTrue  === 193  [[ 219 132 ]] #1 !orig=[89] !jvms: loop_invariant::micro @ bci:2 (line 6)
 195  IfFalse  === 193  [[ 84 ]] #0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 236 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 132 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 132 132 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 206 241  [[ 201 157 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 209  Bool  === _ 210  [[ 221 ]] [lt] !orig=150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 210  CmpU  === _ 243 135  [[ 209 ]]  !orig=149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 211  AddI  === _ 243 78  [[ 144 262 254 243 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 241 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 194 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 260 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 209  [[ 222 228 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 227  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 227  IfFalse  === 258  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 228  IfFalse  === 221  [[ 157 ]] #0 !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 236  Phi  === 226 7 201  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 7 201  [[ 153 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 214 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 36 211  [[ 211 157 213 210 157 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 135  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=227,[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 227 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 220 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] stride: 1  strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 132 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
AFTER: BEFORE_SPLIT_IF
   0  Root  === 0 70 88 179 161  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 237 81 16 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 243 84 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  45  Region  === 45 186 51  [[ 45 46 193 268 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  46  Phi  === 45 64 47  [[ 132 84 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  47  ConP  === 0  [[ 48 46 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 45 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 46 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 268 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 195 6 81 8 9 (83 46 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 132  CastPP  === 194 46  [[ 202 134 134 203 262 203 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 254 210 208 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 237  [[ 157 ]]  { N40:rawptr:BotPTR - - N237:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 228 6 153 8 9 (156 132 32 1 243 1 1 1 1 132 243 205 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 ]]  #long:16
 166  ConI  === 0  [[ 204 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 45 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 268 ]]  #int:0
 193  If  === 45 268  [[ 194 195 ]] P=0.999999, C=-1.000000
 194  IfTrue  === 193  [[ 219 132 ]] #1 !orig=[89] !jvms: loop_invariant::micro @ bci:2 (line 6)
 195  IfFalse  === 193  [[ 84 ]] #0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 236 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 132 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 132 132 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 241 206  [[ 201 157 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 209  Bool  === _ 210  [[ 221 ]] [lt] !orig=150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 210  CmpU  === _ 243 135  [[ 209 ]]  !orig=149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 211  AddI  === _ 243 78  [[ 144 262 254 243 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 241 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 194 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 260 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 209  [[ 222 228 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 227  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 227  IfFalse  === 258  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 228  IfFalse  === 221  [[ 157 ]] #0 !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 236  Phi  === 226 7 201  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 7 201  [[ 153 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 214 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 36 211  [[ 211 157 213 210 157 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 135  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=227,[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 227 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 220 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] inner stride: 1  strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 132 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 268  Phi  === 45 78 190  [[ 193 ]]  #bool !orig=[120] !jvms: loop_invariant::micro @ bci:4 (line 6)
AFTER: AFTER_SPLIT_IF
   0  Root  === 0 70 88 179 161  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 237 81 16 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 243 84 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  47  ConP  === 0  [[ 48 281 280 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !orig=[193] !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 273 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 281 280 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 272 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 274 6 81 8 9 (83 280 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 132  CastPP  === 277 281  [[ 202 134 134 203 262 203 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 254 210 208 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 237  [[ 157 ]]  { N40:rawptr:BotPTR - - N237:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 228 6 153 8 9 (156 132 32 1 243 1 1 1 1 132 243 205 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 ]]  #long:16
 166  ConI  === 0  [[ 204 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 272 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 273 ]]  #int:0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 236 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 132 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 132 132 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 241 206  [[ 201 157 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 209  Bool  === _ 210  [[ 221 ]] [lt] !orig=150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 210  CmpU  === _ 243 135  [[ 209 ]]  !orig=149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 211  AddI  === _ 243 78  [[ 144 262 254 243 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 241 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 277 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 260 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 209  [[ 222 228 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 227  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 227  IfFalse  === 258  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 228  IfFalse  === 221  [[ 157 ]] #0 !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 236  Phi  === 226 7 201  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 7 201  [[ 153 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 214 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 36 211  [[ 211 157 213 210 157 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 135  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=227,[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 227 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 220 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] inner stride: 1  strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 132 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 272  If  === 186 78  [[ 278 275 ]] P=0.999999, C=-1.000000 !orig=[193]
 273  If  === 51 190  [[ 279 276 ]] P=0.999999, C=-1.000000 !orig=[193]
 274  Region  === 274 275 276  [[ 274 84 280 ]]  !orig=[195]
 275  IfFalse  === 272  [[ 274 ]] #0 !orig=[195]
 276  IfFalse  === 273  [[ 274 ]] #0 !orig=[195]
 277  Region  === 277 278 279  [[ 277 132 219 281 ]]  !orig=[194],[89] !jvms: loop_invariant::micro @ bci:2 (line 6)
 278  IfTrue  === 272  [[ 277 ]] #1 !orig=[194],[89] !jvms: loop_invariant::micro @ bci:2 (line 6)
 279  IfTrue  === 273  [[ 277 ]] #1 !orig=[194],[89] !jvms: loop_invariant::micro @ bci:2 (line 6)
 280  Phi  === 274 64 47  [[ 84 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !orig=[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
 281  Phi  === 277 64 47  [[ 132 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !orig=[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
AFTER: BEFORE_ITER_GVN
   0  Root  === 0 70 88 179 161  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 237 81 16 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 243 84 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  47  ConP  === 0  [[ 48 281 280 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !orig=[193] !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 273 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 281 280 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 272 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 274 6 81 8 9 (83 280 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 132  CastPP  === 277 281  [[ 202 134 134 203 262 203 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 254 210 208 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 237  [[ 157 ]]  { N40:rawptr:BotPTR - - N237:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 228 6 153 8 9 (156 132 32 1 243 1 1 1 1 132 243 205 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 ]]  #long:16
 166  ConI  === 0  [[ 204 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 272 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 273 ]]  #int:0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 236 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 132 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 132 132 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 241 206  [[ 201 157 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 209  Bool  === _ 210  [[ 221 ]] [lt] !orig=150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 210  CmpU  === _ 243 135  [[ 209 ]]  !orig=149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 211  AddI  === _ 243 78  [[ 144 262 254 243 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 241 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 277 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 260 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 209  [[ 222 228 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 227  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 227  IfFalse  === 258  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 228  IfFalse  === 221  [[ 157 ]] #0 !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 236  Phi  === 226 7 201  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 7 201  [[ 153 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 214 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 36 211  [[ 211 157 213 210 157 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 135  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=227,[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 227 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 220 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] inner stride: 1  strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 132 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 272  If  === 186 78  [[ 278 275 ]] P=0.999999, C=-1.000000 !orig=[193]
 273  If  === 51 190  [[ 279 276 ]] P=0.999999, C=-1.000000 !orig=[193]
 274  Region  === 274 275 276  [[ 274 84 280 ]]  !orig=[195]
 275  IfFalse  === 272  [[ 274 ]] #0 !orig=[195]
 276  IfFalse  === 273  [[ 274 ]] #0 !orig=[195]
 277  Region  === 277 278 279  [[ 277 132 219 281 ]]  !orig=[194],[89] !jvms: loop_invariant::micro @ bci:2 (line 6)
 278  IfTrue  === 272  [[ 277 ]] #1 !orig=[194],[89] !jvms: loop_invariant::micro @ bci:2 (line 6)
 279  IfTrue  === 273  [[ 277 ]] #1 !orig=[194],[89] !jvms: loop_invariant::micro @ bci:2 (line 6)
 280  Phi  === 274 64 47  [[ 84 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !orig=[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
 281  Phi  === 277 64 47  [[ 132 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !orig=[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 179 161  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 237 81 16 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 243 84 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  47  ConP  === 0  [[ 48 281 280 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !orig=[193] !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 273 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 281 280 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 272 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 274 6 81 8 9 (83 280 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 132  CastPP  === 277 281  [[ 202 134 134 203 262 203 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 254 210 208 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 237  [[ 157 ]]  { N40:rawptr:BotPTR - - N237:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 228 6 153 8 9 (156 132 32 1 243 1 1 1 1 132 243 205 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 ]]  #long:16
 166  ConI  === 0  [[ 204 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 272 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 273 ]]  #int:0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 236 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 132 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 132 132 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 241 206  [[ 201 157 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 209  Bool  === _ 210  [[ 221 ]] [lt] !orig=150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 210  CmpU  === _ 243 135  [[ 209 ]]  !orig=149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 211  AddI  === _ 243 78  [[ 144 262 254 243 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 241 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 277 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 260 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 209  [[ 222 228 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 227  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 227  IfFalse  === 258  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 228  IfFalse  === 221  [[ 157 ]] #0 !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 236  Phi  === 226 7 201  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 7 201  [[ 153 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 214 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 36 211  [[ 211 157 213 210 157 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 135  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=227,[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 227 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 220 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] inner stride: 1  strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 132 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 272  If  === 186 78  [[ 278 275 ]] P=0.999999, C=-1.000000 !orig=[193]
 273  If  === 51 190  [[ 279 276 ]] P=0.999999, C=-1.000000 !orig=[193]
 274  Region  === 274 275 276  [[ 274 84 280 ]]  !orig=[195]
 275  IfFalse  === 272  [[ 274 ]] #0 !orig=[195]
 276  IfFalse  === 273  [[ 274 ]] #0 !orig=[195]
 277  Region  === 277 278 279  [[ 277 132 219 281 ]]  !orig=[194],[89] !jvms: loop_invariant::micro @ bci:2 (line 6)
 278  IfTrue  === 272  [[ 277 ]] #1 !orig=[194],[89] !jvms: loop_invariant::micro @ bci:2 (line 6)
 279  IfTrue  === 273  [[ 277 ]] #1 !orig=[194],[89] !jvms: loop_invariant::micro @ bci:2 (line 6)
 280  Phi  === 274 64 47  [[ 84 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !orig=[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
 281  Phi  === 277 64 47  [[ 132 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !orig=[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 179 161  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 237 81 16 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 243 84 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  47  ConP  === 0  [[ 48 281 280 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !orig=[193] !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 273 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 281 280 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 272 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 274 6 81 8 9 (83 280 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 132  CastPP  === 277 281  [[ 202 134 134 203 262 203 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 254 210 208 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 237  [[ 157 ]]  { N40:rawptr:BotPTR - - N237:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 228 6 153 8 9 (156 132 32 1 243 1 1 1 1 132 243 205 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 ]]  #long:16
 166  ConI  === 0  [[ 204 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 272 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 273 ]]  #int:0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 236 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 132 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 132 132 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 241 206  [[ 201 157 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 209  Bool  === _ 210  [[ 221 ]] [lt] !orig=150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 210  CmpU  === _ 243 135  [[ 209 ]]  !orig=149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 211  AddI  === _ 243 78  [[ 144 262 254 243 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 241 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 277 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 260 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 209  [[ 222 228 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 227  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 227  IfFalse  === 258  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 228  IfFalse  === 221  [[ 157 ]] #0 !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 236  Phi  === 226 7 201  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 7 201  [[ 153 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 214 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 36 211  [[ 211 157 213 210 157 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 135  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=227,[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 227 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 220 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] inner stride: 1  strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 132 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 272  If  === 186 78  [[ 278 275 ]] P=0.999999, C=-1.000000 !orig=[193]
 273  If  === 51 190  [[ 279 276 ]] P=0.999999, C=-1.000000 !orig=[193]
 274  Region  === 274 275 276  [[ 274 84 280 ]]  !orig=[195]
 275  IfFalse  === 272  [[ 274 ]] #0 !orig=[195]
 276  IfFalse  === 273  [[ 274 ]] #0 !orig=[195]
 277  Region  === 277 278 279  [[ 277 132 219 281 ]]  !orig=[194],[89] !jvms: loop_invariant::micro @ bci:2 (line 6)
 278  IfTrue  === 272  [[ 277 ]] #1 !orig=[194],[89] !jvms: loop_invariant::micro @ bci:2 (line 6)
 279  IfTrue  === 273  [[ 277 ]] #1 !orig=[194],[89] !jvms: loop_invariant::micro @ bci:2 (line 6)
 280  Phi  === 274 64 47  [[ 84 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !orig=[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
 281  Phi  === 277 64 47  [[ 132 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !orig=[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 179 161  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 237 81 16 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 243 84 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  47  ConP  === 0  [[ 48 281 280 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !orig=[193] !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 273 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 281 280 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 272 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 274 6 81 8 9 (83 280 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 132  CastPP  === 277 281  [[ 202 134 134 203 262 203 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 254 210 208 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 237  [[ 157 ]]  { N40:rawptr:BotPTR - - N237:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 228 6 153 8 9 (156 132 32 1 243 1 1 1 1 132 243 205 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 ]]  #long:16
 166  ConI  === 0  [[ 204 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 272 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 273 ]]  #int:0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 236 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 132 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 132 132 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 241 206  [[ 201 157 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 209  Bool  === _ 210  [[ 221 ]] [lt] !orig=150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 210  CmpU  === _ 243 135  [[ 209 ]]  !orig=149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 211  AddI  === _ 243 78  [[ 144 262 254 243 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 241 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 277 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 260 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 209  [[ 222 228 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 227  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 227  IfFalse  === 258  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 228  IfFalse  === 221  [[ 157 ]] #0 !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 236  Phi  === 226 7 201  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 7 201  [[ 153 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 214 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 36 211  [[ 211 157 213 210 157 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 135  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=227,[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 227 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 220 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] inner stride: 1  strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 132 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 272  If  === 186 78  [[ 278 ]] P=0.999999, C=-1.000000 !orig=[193]
 273  If  === 51 190  [[ 279 276 ]] P=0.999999, C=-1.000000 !orig=[193]
 274  Region  === 274 1 276  [[ 274 84 280 ]]  !orig=[195]
 276  IfFalse  === 273  [[ 274 ]] #0 !orig=[195]
 277  Region  === 277 278 279  [[ 277 132 219 281 ]]  !orig=[194],[89] !jvms: loop_invariant::micro @ bci:2 (line 6)
 278  IfTrue  === 272  [[ 277 ]] #1 !orig=[194],[89] !jvms: loop_invariant::micro @ bci:2 (line 6)
 279  IfTrue  === 273  [[ 277 ]] #1 !orig=[194],[89] !jvms: loop_invariant::micro @ bci:2 (line 6)
 280  Phi  === 274 64 47  [[ 84 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !orig=[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
 281  Phi  === 277 64 47  [[ 132 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !orig=[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 179 161  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 237 81 16 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 243 84 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  47  ConP  === 0  [[ 48 281 280 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !orig=[193] !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 273 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 281 280 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 272 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 274 6 81 8 9 (83 280 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 132  CastPP  === 277 281  [[ 202 134 134 203 262 203 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 254 210 208 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 237  [[ 157 ]]  { N40:rawptr:BotPTR - - N237:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 228 6 153 8 9 (156 132 32 1 243 1 1 1 1 132 243 205 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 ]]  #long:16
 166  ConI  === 0  [[ 204 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 272 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 273 ]]  #int:0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 236 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 132 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 132 132 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 241 206  [[ 201 157 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 209  Bool  === _ 210  [[ 221 ]] [lt] !orig=150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 210  CmpU  === _ 243 135  [[ 209 ]]  !orig=149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 211  AddI  === _ 243 78  [[ 144 262 254 243 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 241 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 277 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 260 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 209  [[ 222 228 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 227  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 227  IfFalse  === 258  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 228  IfFalse  === 221  [[ 157 ]] #0 !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 236  Phi  === 226 7 201  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 7 201  [[ 153 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 214 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 36 211  [[ 211 157 213 210 157 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 135  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=227,[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 227 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 220 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] inner stride: 1  strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 132 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 272  If  === 186 78  [[ 278 ]] P=0.999999, C=-1.000000 !orig=[193]
 273  If  === 51 190  [[ 276 ]] P=0.999999, C=-1.000000 !orig=[193]
 274  Region  === 274 1 276  [[ 274 84 280 ]]  !orig=[195]
 276  IfFalse  === 273  [[ 274 ]] #0 !orig=[195]
 277  Region  === 277 278 1  [[ 277 132 219 281 ]]  !orig=[194],[89] !jvms: loop_invariant::micro @ bci:2 (line 6)
 278  IfTrue  === 272  [[ 277 ]] #1 !orig=[194],[89] !jvms: loop_invariant::micro @ bci:2 (line 6)
 280  Phi  === 274 64 47  [[ 84 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !orig=[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
 281  Phi  === 277 64 47  [[ 132 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !orig=[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 179 161  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 237 81 16 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 243 84 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  47  ConP  === 0  [[ 48 281 280 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !orig=[193] !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 273 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 281 280 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 274 6 81 8 9 (83 280 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 132  CastPP  === 277 281  [[ 202 134 134 203 262 203 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 254 210 208 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 237  [[ 157 ]]  { N40:rawptr:BotPTR - - N237:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 228 6 153 8 9 (156 132 32 1 243 1 1 1 1 132 243 205 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 ]]  #long:16
 166  ConI  === 0  [[ 204 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 277 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 273 ]]  #int:0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 236 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 132 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 132 132 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 241 206  [[ 201 157 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 209  Bool  === _ 210  [[ 221 ]] [lt] !orig=150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 210  CmpU  === _ 243 135  [[ 209 ]]  !orig=149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 211  AddI  === _ 243 78  [[ 144 262 254 243 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 241 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 277 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 260 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 209  [[ 222 228 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 227  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 227  IfFalse  === 258  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 228  IfFalse  === 221  [[ 157 ]] #0 !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 236  Phi  === 226 7 201  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 7 201  [[ 153 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 214 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 36 211  [[ 211 157 213 210 157 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 135  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=227,[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 227 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 220 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] inner stride: 1  strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 132 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 273  If  === 51 190  [[ 276 ]] P=0.999999, C=-1.000000 !orig=[193]
 274  Region  === 274 1 276  [[ 274 84 280 ]]  !orig=[195]
 276  IfFalse  === 273  [[ 274 ]] #0 !orig=[195]
 277  Region  === 277 186 1  [[ 277 132 219 281 ]]  !orig=[194],[89] !jvms: loop_invariant::micro @ bci:2 (line 6)
 280  Phi  === 274 64 47  [[ 84 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !orig=[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
 281  Phi  === 277 64 47  [[ 132 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !orig=[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 179 161  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 237 81 16 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 243 84 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  47  ConP  === 0  [[ 48 281 84 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !orig=[193] !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 273 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 281 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 274 6 81 8 9 (83 47 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 132  CastPP  === 277 281  [[ 202 134 134 203 262 203 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 254 210 208 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 237  [[ 157 ]]  { N40:rawptr:BotPTR - - N237:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 228 6 153 8 9 (156 132 32 1 243 1 1 1 1 132 243 205 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 ]]  #long:16
 166  ConI  === 0  [[ 204 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 277 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 273 ]]  #int:0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 236 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 132 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 132 132 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 241 206  [[ 201 157 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 209  Bool  === _ 210  [[ 221 ]] [lt] !orig=150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 210  CmpU  === _ 243 135  [[ 209 ]]  !orig=149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 211  AddI  === _ 243 78  [[ 144 262 254 243 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 241 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 277 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 260 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 209  [[ 222 228 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 227  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 227  IfFalse  === 258  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 228  IfFalse  === 221  [[ 157 ]] #0 !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 236  Phi  === 226 7 201  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 7 201  [[ 153 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 214 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 36 211  [[ 211 157 213 210 157 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 135  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=227,[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 227 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 220 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] inner stride: 1  strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 132 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 273  If  === 51 190  [[ 276 ]] P=0.999999, C=-1.000000 !orig=[193]
 274  Region  === 274 1 276  [[ 274 84 ]]  !orig=[195]
 276  IfFalse  === 273  [[ 274 ]] #0 !orig=[195]
 277  Region  === 277 186 1  [[ 277 132 219 281 ]]  !orig=[194],[89] !jvms: loop_invariant::micro @ bci:2 (line 6)
 281  Phi  === 277 64 47  [[ 132 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !orig=[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 179 161  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 237 81 16 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 243 84 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  47  ConP  === 0  [[ 48 281 84 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !orig=[193] !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 274 ]] #0 !orig=[276],[195] !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 281 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 274 6 81 8 9 (83 47 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 132  CastPP  === 277 281  [[ 202 134 134 203 262 203 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 254 210 208 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 237  [[ 157 ]]  { N40:rawptr:BotPTR - - N237:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 228 6 153 8 9 (156 132 32 1 243 1 1 1 1 132 243 205 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 ]]  #long:16
 166  ConI  === 0  [[ 204 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 277 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 ]]  #int:0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 236 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 132 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 132 132 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 241 206  [[ 201 157 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 209  Bool  === _ 210  [[ 221 ]] [lt] !orig=150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 210  CmpU  === _ 243 135  [[ 209 ]]  !orig=149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 211  AddI  === _ 243 78  [[ 144 262 254 243 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 241 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 277 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 260 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 209  [[ 222 228 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 227  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 227  IfFalse  === 258  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 228  IfFalse  === 221  [[ 157 ]] #0 !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 236  Phi  === 226 7 201  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 7 201  [[ 153 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 214 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 36 211  [[ 211 157 213 210 157 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 135  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=227,[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 227 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 220 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] inner stride: 1  strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 132 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 274  Region  === 274 1 51  [[ 274 84 ]]  !orig=[195]
 277  Region  === 277 186 1  [[ 277 132 219 281 ]]  !orig=[194],[89] !jvms: loop_invariant::micro @ bci:2 (line 6)
 281  Phi  === 277 64 47  [[ 132 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !orig=[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 179 161  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 237 81 16 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 243 84 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  47  ConP  === 0  [[ 48 281 84 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !orig=[193] !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 84 ]] #0 !orig=[276],[195] !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 281 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 51 6 81 8 9 (83 47 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 132  CastPP  === 277 281  [[ 202 134 134 203 262 203 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 254 210 208 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 237  [[ 157 ]]  { N40:rawptr:BotPTR - - N237:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 228 6 153 8 9 (156 132 32 1 243 1 1 1 1 132 243 205 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 ]]  #long:16
 166  ConI  === 0  [[ 204 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 277 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 ]]  #int:0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 236 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 132 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 132 132 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 241 206  [[ 201 157 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 209  Bool  === _ 210  [[ 221 ]] [lt] !orig=150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 210  CmpU  === _ 243 135  [[ 209 ]]  !orig=149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 211  AddI  === _ 243 78  [[ 144 262 254 243 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 241 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 277 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 260 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 209  [[ 222 228 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 227  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 227  IfFalse  === 258  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 228  IfFalse  === 221  [[ 157 ]] #0 !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 236  Phi  === 226 7 201  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 7 201  [[ 153 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 214 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 36 211  [[ 211 157 213 210 157 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 135  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=227,[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 227 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 220 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] inner stride: 1  strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 132 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 277  Region  === 277 186 1  [[ 277 132 219 281 ]]  !orig=[194],[89] !jvms: loop_invariant::micro @ bci:2 (line 6)
 281  Phi  === 277 64 47  [[ 132 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact * !orig=[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 179 161  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 237 81 16 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 243 84 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  47  ConP  === 0  [[ 48 84 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !orig=[193] !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 84 ]] #0 !orig=[276],[195] !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 132 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !orig=281,[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 51 6 81 8 9 (83 47 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 132  CastPP  === 277 64  [[ 202 134 134 203 262 203 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 254 210 208 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 237  [[ 157 ]]  { N40:rawptr:BotPTR - - N237:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 228 6 153 8 9 (156 132 32 1 243 1 1 1 1 132 243 205 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 ]]  #long:16
 166  ConI  === 0  [[ 204 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 277 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 ]]  #int:0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 236 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 132 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 132 132 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 241 206  [[ 201 157 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 209  Bool  === _ 210  [[ 221 ]] [lt] !orig=150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 210  CmpU  === _ 243 135  [[ 209 ]]  !orig=149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 211  AddI  === _ 243 78  [[ 144 262 254 243 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 241 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 277 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 260 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 209  [[ 222 228 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 227  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 227  IfFalse  === 258  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 228  IfFalse  === 221  [[ 157 ]] #0 !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 236  Phi  === 226 7 201  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 7 201  [[ 153 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 214 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 36 211  [[ 211 157 213 210 157 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 135  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=227,[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 227 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 220 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] inner stride: 1  strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 132 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 277  Region  === 277 186 1  [[ 277 132 219 ]]  !orig=[194],[89] !jvms: loop_invariant::micro @ bci:2 (line 6)
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 179 161  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 237 81 16 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 243 84 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  47  ConP  === 0  [[ 48 84 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !orig=[193] !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 84 ]] #0 !orig=[276],[195] !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 132 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !orig=281,[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 51 6 81 8 9 (83 47 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 132  CastPP  === 186 64  [[ 202 134 134 203 262 203 157 157 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !jvms: loop_invariant::micro @ bci:4 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 132 132 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 254 210 208 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 237  [[ 157 ]]  { N40:rawptr:BotPTR - - N237:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 228 6 153 8 9 (156 132 32 1 243 1 1 1 1 132 243 205 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 ]]  #long:16
 166  ConI  === 0  [[ 204 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 219 132 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 ]]  #int:0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 236 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 132 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 132 132 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 241 206  [[ 201 157 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 209  Bool  === _ 210  [[ 221 ]] [lt] !orig=150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 210  CmpU  === _ 243 135  [[ 209 ]]  !orig=149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 211  AddI  === _ 243 78  [[ 144 262 254 243 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 241 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 186 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 260 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 209  [[ 222 228 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 227  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 227  IfFalse  === 258  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 228  IfFalse  === 221  [[ 157 ]] #0 !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 236  Phi  === 226 7 201  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 7 201  [[ 153 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 214 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 36 211  [[ 211 157 213 210 157 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 135  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=227,[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 227 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 220 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] inner stride: 1  strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 132 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 179 161  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 237 81 16 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 243 84 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  47  ConP  === 0  [[ 48 84 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !orig=[193] !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 84 ]] #0 !orig=[276],[195] !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 202 157 157 203 203 262 134 134 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !orig=281,[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 51 6 81 8 9 (83 47 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 64 64 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 254 210 208 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 237  [[ 157 ]]  { N40:rawptr:BotPTR - - N237:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 228 6 153 8 9 (156 64 32 1 243 1 1 1 1 64 243 205 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 ]]  #long:16
 166  ConI  === 0  [[ 204 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 219 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 ]]  #int:0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 236 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 64 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 64 64 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 241 206  [[ 201 157 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 209  Bool  === _ 210  [[ 221 ]] [lt] !orig=150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 210  CmpU  === _ 243 135  [[ 209 ]]  !orig=149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 211  AddI  === _ 243 78  [[ 144 262 254 243 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 241 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 186 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 260 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 209  [[ 222 228 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 227  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 227  IfFalse  === 258  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 228  IfFalse  === 221  [[ 157 ]] #0 !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 236  Phi  === 226 7 201  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 7 201  [[ 153 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 214 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 36 211  [[ 211 157 213 210 157 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 135  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=227,[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 227 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 220 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] inner stride: 1  strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 64 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
AFTER: AFTER_ITER_GVN
   0  Root  === 0 70 88 179 161  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 237 81 16 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 243 84 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  47  ConP  === 0  [[ 48 84 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !orig=[193] !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 84 ]] #0 !orig=[276],[195] !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 202 157 157 203 203 262 134 134 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !orig=281,[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 51 6 81 8 9 (83 47 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 64 64 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 254 210 208 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 237  [[ 157 ]]  { N40:rawptr:BotPTR - - N237:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 228 6 153 8 9 (156 64 32 1 243 1 1 1 1 64 243 205 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 ]]  #long:16
 166  ConI  === 0  [[ 204 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 219 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 ]]  #int:0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 236 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 64 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 64 64 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 241 206  [[ 201 157 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 209  Bool  === _ 210  [[ 221 ]] [lt] !orig=150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 210  CmpU  === _ 243 135  [[ 209 ]]  !orig=149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 211  AddI  === _ 243 78  [[ 144 262 254 243 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 241 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 186 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 260 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 209  [[ 222 228 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 227  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 227  IfFalse  === 258  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 228  IfFalse  === 221  [[ 157 ]] #0 !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 236  Phi  === 226 7 201  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 7 201  [[ 153 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 214 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 36 211  [[ 211 157 213 210 157 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 135  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=227,[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 227 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 220 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] inner stride: 1  strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 64 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
AFTER: PHASEIDEALLOOP_ITERATIONS
   0  Root  === 0 70 88 179 161  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 237 81 16 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 243 84 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  47  ConP  === 0  [[ 48 84 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !orig=[193] !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 84 ]] #0 !orig=[276],[195] !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 202 157 157 203 203 262 134 134 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !orig=281,[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 51 6 81 8 9 (83 47 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 64 64 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 254 210 208 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 237  [[ 157 ]]  { N40:rawptr:BotPTR - - N237:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 228 6 153 8 9 (156 64 32 1 243 1 1 1 1 64 243 205 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 ]]  #long:16
 166  ConI  === 0  [[ 204 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 219 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 ]]  #int:0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 236 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 64 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 64 64 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 241 206  [[ 201 157 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 209  Bool  === _ 210  [[ 221 ]] [lt] !orig=150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 210  CmpU  === _ 243 135  [[ 209 ]]  !orig=149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 211  AddI  === _ 243 78  [[ 144 262 254 243 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 241 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 186 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 260 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 209  [[ 222 228 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 227  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 227  IfFalse  === 258  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 228  IfFalse  === 221  [[ 157 ]] #0 !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 236  Phi  === 226 7 201  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 7 201  [[ 153 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 214 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 36 211  [[ 211 157 213 210 157 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 135  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=227,[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 227 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 220 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] inner stride: 1  strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 64 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
AFTER: BEFORE_BEAUTIFY_LOOPS
   0  Root  === 0 70 88 179 161  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 237 81 16 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 243 84 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  47  ConP  === 0  [[ 48 84 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !orig=[193] !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 84 ]] #0 !orig=[276],[195] !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 202 157 157 203 203 262 134 134 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !orig=281,[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 51 6 81 8 9 (83 47 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 64 64 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 254 210 208 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 237  [[ 157 ]]  { N40:rawptr:BotPTR - - N237:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 228 6 153 8 9 (156 64 32 1 243 1 1 1 1 64 243 205 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 ]]  #long:16
 166  ConI  === 0  [[ 204 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 219 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 ]]  #int:0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 236 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 64 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 64 64 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 241 206  [[ 201 157 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 209  Bool  === _ 210  [[ 221 ]] [lt] !orig=150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 210  CmpU  === _ 243 135  [[ 209 ]]  !orig=149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 211  AddI  === _ 243 78  [[ 144 262 254 243 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 241 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 186 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 260 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 209  [[ 222 228 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 227  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 227  IfFalse  === 258  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 228  IfFalse  === 221  [[ 157 ]] #0 !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 236  Phi  === 226 7 201  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 7 201  [[ 153 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 214 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 36 211  [[ 211 157 213 210 157 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 135  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=227,[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 227 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 220 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] inner stride: 1  strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 64 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
AFTER: BEFORE_PRE_MAIN_POST
   0  Root  === 0 70 88 179 161  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 237 81 16 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 243 84 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  47  ConP  === 0  [[ 48 84 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !orig=[193] !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 84 ]] #0 !orig=[276],[195] !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 202 157 157 203 203 262 134 134 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !orig=281,[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 51 6 81 8 9 (83 47 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 64 64 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 254 210 208 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 237  [[ 157 ]]  { N40:rawptr:BotPTR - - N237:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 228 6 153 8 9 (156 64 32 1 243 1 1 1 1 64 243 205 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 ]]  #long:16
 166  ConI  === 0  [[ 204 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 219 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 ]]  #int:0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 236 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 64 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 64 64 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 241 206  [[ 201 157 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 209  Bool  === _ 210  [[ 221 ]] [lt] !orig=150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 210  CmpU  === _ 243 135  [[ 209 ]]  !orig=149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 211  AddI  === _ 243 78  [[ 144 262 254 243 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 241 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 186 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 260 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 209  [[ 222 228 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 227  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 227  IfFalse  === 258  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 228  IfFalse  === 221  [[ 157 ]] #0 !orig=[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 236  Phi  === 226 7 201  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 7 201  [[ 153 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 214 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 36 211  [[ 211 157 213 210 157 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 135  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=227,[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 227 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 220 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] inner stride: 1  strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 64 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
AFTER: AFTER_PRE_MAIN_POST
   0  Root  === 0 70 88 179 161  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 347 81 16 305 340 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 338 84 369 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 305 306 347 348 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  47  ConP  === 0  [[ 48 84 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !orig=[193] !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 84 ]] #0 !orig=[276],[195] !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 202 157 157 203 203 262 134 134 283 284 284 325 326 326 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !orig=281,[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 293 335 369 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 51 6 81 8 9 (83 47 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 64 64 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 254 210 208 286 288 319 370 330 363 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 357 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 316  [[ 157 ]]  { N40:rawptr:BotPTR - - N316:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 308 6 153 8 9 (156 64 32 1 314 1 1 1 1 64 314 313 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 283 325 ]]  #long:16
 166  ConI  === 0  [[ 204 289 331 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 306 348 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 219 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 ]]  #int:0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 64 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 64 64 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 241 206  [[ 201 356 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 290 332 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 209  Bool  === _ 210  [[ 221 ]] [lt] !orig=150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 210  CmpU  === _ 243 135  [[ 209 ]]  !orig=149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 211  AddI  === _ 243 78  [[ 144 262 254 243 358 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 186 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 209  [[ 222 351 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 310  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 236  Phi  === 226 7 312  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 324 201  [[ 361 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 368 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 335 211  [[ 211 360 213 210 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 135  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 353 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 367 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] inner stride: 1 main of N261 strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 64 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 282  StoreD  === 300 298 283 290  [[ 298 305 312 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 283  AddP  === _ 64 284 162  [[ 282 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 284  AddP  === _ 64 64 289  [[ 283 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 285  Bool  === _ 286  [[ 301 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 286  CmpI  === _ 293 135  [[ 285 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 287  Bool  === _ 288  [[ 299 ]] [lt] !orig=209,150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 288  CmpU  === _ 296 135  [[ 287 ]]  !orig=210,149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 289  LShiftL  === _ 294 166  [[ 284 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 290  AddD  === _ 303 206  [[ 282 313 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 291  SqrtD  === 302 292  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 292  ConvI2D  === _ 293  [[ 291 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 293  AddI  === _ 296 78  [[ 286 292 296 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 294  ConvI2L  === _ 295  [[ 289 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 295  CastII  === 300 296  [[ 294 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 296  Phi  === 297 358 293  [[ 288 293 295 314 ]]  #int #tripcount !orig=243,[233]
 297  CountedLoop  === 297 322 302  [[ 296 297 298 299 303 ]] inner stride: 1 post of N261 !orig=261,[224],[198]
 298  Phi  === 297 354 282  [[ 282 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 299  RangeCheck  === 297 287  [[ 300 307 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 300  IfTrue  === 299  [[ 282 295 301 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 301  CountedLoopEnd  === 300 285  [[ 302 304 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 302  IfTrue  === 301  [[ 291 297 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 303  Phi  === 297 323 291  [[ 290 ]]  #double !orig=241,232
 304  IfFalse  === 301  [[ 306 310 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 307  IfFalse  === 299  [[ 308 ]] #0 !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 308  Region  === 308 307 350  [[ 308 157 313 314 316 ]]  !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 310  Region  === 310 304 311  [[ 310 226 312 ]]  !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 311  IfFalse  === 321  [[ 310 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 312  Phi  === 310 282 354  [[ 236 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 313  Phi  === 308 290 356  [[ 157 ]]  #double
 314  Phi  === 308 296 360  [[ 157 157 ]]  #int
 316  Phi  === 308 298 361  [[ 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 318  OpaqueZeroTripGuard  === _ 358  [[ 319 ]] 
 319  CmpI  === _ 318 135  [[ 320 ]] 
 320  Bool  === _ 319  [[ 321 ]] [lt]
 321  If  === 352 320  [[ 311 322 ]] P=0.500000, C=-1.000000
 322  IfTrue  === 321  [[ 297 323 ]] #1
 323  SqrtD  === 322 357  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 324  StoreD  === 342 340 325 332  [[ 340 347 354 237 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 325  AddP  === _ 64 326 162  [[ 324 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 326  AddP  === _ 64 64 331  [[ 325 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 327  Bool  === _ 328  [[ 343 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 328  CmpI  === _ 335 370  [[ 327 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 329  Bool  === _ 330  [[ 341 ]] [lt] !orig=209,150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 330  CmpU  === _ 338 135  [[ 329 ]]  !orig=210,149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 331  LShiftL  === _ 336 166  [[ 326 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 332  AddD  === _ 345 206  [[ 324 356 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 333  SqrtD  === 344 334  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 334  ConvI2D  === _ 335  [[ 333 357 368 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 335  AddI  === _ 338 78  [[ 328 334 338 358 364 243 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 336  ConvI2L  === _ 337  [[ 331 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 337  CastII  === 342 338  [[ 336 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 338  Phi  === 339 36 335  [[ 330 335 337 360 ]]  #int #tripcount !orig=243,[233]
 339  CountedLoop  === 339 220 344  [[ 338 339 340 341 345 ]] inner stride: 1 pre of N261 !orig=261,[224],[198]
 340  Phi  === 339 7 324  [[ 324 361 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 341  RangeCheck  === 339 329  [[ 342 349 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 342  IfTrue  === 341  [[ 324 337 343 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 343  CountedLoopEnd  === 342 327  [[ 344 362 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 344  IfTrue  === 343  [[ 333 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 345  Phi  === 339 214 333  [[ 332 ]]  #double !orig=241,232
 346  IfFalse  === 366  [[ 348 352 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 349  IfFalse  === 341  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 350  Region  === 350 349 351  [[ 350 308 356 360 361 ]]  !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 351  IfFalse  === 221  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 352  Region  === 352 346 353  [[ 352 321 354 357 358 ]]  !orig=[317]
 353  IfFalse  === 258  [[ 352 ]] #0 !orig=[317]
 354  Phi  === 352 324 201  [[ 298 312 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 356  Phi  === 350 332 205  [[ 313 ]]  #double
 357  Phi  === 352 334 144  [[ 323 ]]  #double
 358  Phi  === 352 335 211  [[ 296 318 ]]  #int
 360  Phi  === 350 338 243  [[ 314 ]]  #int
 361  Phi  === 350 340 237  [[ 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 362  IfFalse  === 343  [[ 366 ]] #0
 363  OpaqueZeroTripGuard  === _ 135  [[ 364 ]] 
 364  CmpI  === _ 335 363  [[ 365 ]] 
 365  Bool  === _ 364  [[ 366 ]] [lt]
 366  If  === 362 365  [[ 346 367 ]] P=0.999999, C=-1.000000
 367  IfTrue  === 366  [[ 260 368 ]] #1
 368  SqrtD  === 367 334  [[ 241 ]]  !orig=333,145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 369  AddI  === _ 36 78  [[ 370 ]] 
 370  Opaque1  === _ 369 135  [[ 328 ]] 
AFTER: BEFORE_RANGE_CHECK_ELIMINATION
   0  Root  === 0 70 88 179 161  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 371 372 373 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 347 81 16 305 340 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 338 84 369 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 305 306 347 348 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  47  ConP  === 0  [[ 48 84 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !orig=[193] !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 84 ]] #0 !orig=[276],[195] !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 202 157 157 203 203 262 134 134 283 284 284 325 326 326 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !orig=281,[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 293 335 369 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 51 6 81 8 9 (83 47 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 64 64 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 254 210 208 286 288 319 370 330 363 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 357 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 316  [[ 157 ]]  { N40:rawptr:BotPTR - - N316:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 308 6 153 8 9 (156 64 32 1 314 1 1 1 1 64 314 313 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 283 325 ]]  #long:16
 166  ConI  === 0  [[ 204 289 331 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 306 348 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 219 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 ]]  #int:0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 64 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 64 64 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 241 206  [[ 201 356 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 290 332 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 209  Bool  === _ 210  [[ 221 ]] [lt] !orig=150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 210  CmpU  === _ 243 135  [[ 209 ]]  !orig=149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 211  AddI  === _ 243 78  [[ 144 262 254 243 358 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 186 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 209  [[ 222 351 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 310  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 236  Phi  === 226 7 312  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 324 201  [[ 361 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 368 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 335 211  [[ 211 360 213 210 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 135  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 353 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 367 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] inner stride: 1 main of N261 strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 64 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 282  StoreD  === 300 298 283 290  [[ 298 305 312 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 283  AddP  === _ 64 284 162  [[ 282 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 284  AddP  === _ 64 64 289  [[ 283 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 285  Bool  === _ 286  [[ 301 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 286  CmpI  === _ 293 135  [[ 285 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 287  Bool  === _ 288  [[ 299 ]] [lt] !orig=209,150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 288  CmpU  === _ 296 135  [[ 287 ]]  !orig=210,149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 289  LShiftL  === _ 294 166  [[ 284 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 290  AddD  === _ 303 206  [[ 282 313 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 291  SqrtD  === 302 292  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 292  ConvI2D  === _ 293  [[ 291 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 293  AddI  === _ 296 78  [[ 286 292 296 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 294  ConvI2L  === _ 295  [[ 289 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 295  CastII  === 300 296  [[ 294 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 296  Phi  === 297 358 293  [[ 288 293 295 314 ]]  #int #tripcount !orig=243,[233]
 297  CountedLoop  === 297 322 302  [[ 296 297 298 299 303 ]] inner stride: 1 post of N261 !orig=261,[224],[198]
 298  Phi  === 297 354 282  [[ 282 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 299  RangeCheck  === 297 287  [[ 300 307 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 300  IfTrue  === 299  [[ 282 295 301 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 301  CountedLoopEnd  === 300 285  [[ 302 304 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 302  IfTrue  === 301  [[ 291 297 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 303  Phi  === 297 323 291  [[ 290 ]]  #double !orig=241,232
 304  IfFalse  === 301  [[ 306 310 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 307  IfFalse  === 299  [[ 308 ]] #0 !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 308  Region  === 308 307 350  [[ 308 157 313 314 316 ]]  !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 310  Region  === 310 304 311  [[ 310 226 312 ]]  !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 311  IfFalse  === 321  [[ 310 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 312  Phi  === 310 282 354  [[ 236 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 313  Phi  === 308 290 356  [[ 157 ]]  #double
 314  Phi  === 308 296 360  [[ 157 157 ]]  #int
 316  Phi  === 308 298 361  [[ 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 318  OpaqueZeroTripGuard  === _ 358  [[ 319 ]] 
 319  CmpI  === _ 318 135  [[ 320 ]] 
 320  Bool  === _ 319  [[ 321 ]] [lt]
 321  If  === 352 320  [[ 311 322 ]] P=0.500000, C=-1.000000
 322  IfTrue  === 321  [[ 297 323 ]] #1
 323  SqrtD  === 322 357  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 324  StoreD  === 342 340 325 332  [[ 340 347 354 237 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 325  AddP  === _ 64 326 162  [[ 324 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 326  AddP  === _ 64 64 331  [[ 325 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 327  Bool  === _ 328  [[ 343 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 328  CmpI  === _ 335 370  [[ 327 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 329  Bool  === _ 330  [[ 341 ]] [lt] !orig=209,150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 330  CmpU  === _ 338 135  [[ 329 ]]  !orig=210,149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 331  LShiftL  === _ 336 166  [[ 326 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 332  AddD  === _ 345 206  [[ 324 356 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 333  SqrtD  === 344 334  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 334  ConvI2D  === _ 335  [[ 333 357 368 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 335  AddI  === _ 338 78  [[ 328 334 338 358 364 243 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 336  ConvI2L  === _ 337  [[ 331 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 337  CastII  === 342 338  [[ 336 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 338  Phi  === 339 36 335  [[ 330 335 337 360 ]]  #int #tripcount !orig=243,[233]
 339  CountedLoop  === 339 220 344  [[ 338 339 340 341 345 ]] inner stride: 1 pre of N261 !orig=261,[224],[198]
 340  Phi  === 339 7 324  [[ 324 361 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 341  RangeCheck  === 339 329  [[ 342 349 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 342  IfTrue  === 341  [[ 324 337 343 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 343  CountedLoopEnd  === 342 327  [[ 344 362 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 344  IfTrue  === 343  [[ 333 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 345  Phi  === 339 214 333  [[ 332 ]]  #double !orig=241,232
 346  IfFalse  === 366  [[ 348 352 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 349  IfFalse  === 341  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 350  Region  === 350 349 351  [[ 350 308 356 360 361 ]]  !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 351  IfFalse  === 221  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 352  Region  === 352 346 353  [[ 352 321 354 357 358 ]]  !orig=[317]
 353  IfFalse  === 258  [[ 352 ]] #0 !orig=[317]
 354  Phi  === 352 324 201  [[ 298 312 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 356  Phi  === 350 332 205  [[ 313 ]]  #double
 357  Phi  === 352 334 144  [[ 323 ]]  #double
 358  Phi  === 352 335 211  [[ 296 318 ]]  #int
 360  Phi  === 350 338 243  [[ 314 ]]  #int
 361  Phi  === 350 340 237  [[ 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 362  IfFalse  === 343  [[ 366 ]] #0
 363  OpaqueZeroTripGuard  === _ 135  [[ 364 ]] 
 364  CmpI  === _ 335 363  [[ 365 ]] 
 365  Bool  === _ 364  [[ 366 ]] [lt]
 366  If  === 362 365  [[ 346 367 ]] P=0.999999, C=-1.000000
 367  IfTrue  === 366  [[ 260 368 374 ]] #1
 368  SqrtD  === 367 334  [[ 241 ]]  !orig=333,145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 369  AddI  === _ 36 78  [[ 370 ]] 
 370  Opaque1  === _ 369 135  [[ 328 ]] 
AFTER: AFTER_RANGE_CHECK_ELIMINATION
   0  Root  === 0 70 88 179 161 399 407 415 427  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 371 372 373 380 387 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 398 406 414 426 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 347 81 16 305 340 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 338 84 369 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 305 306 347 348 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  47  ConP  === 0  [[ 48 84 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !orig=[193] !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 84 ]] #0 !orig=[276],[195] !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 202 157 157 203 203 262 134 134 283 284 284 325 326 326 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !orig=281,[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 293 335 369 410 416 417 422 221 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 51 6 81 8 9 (83 47 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 64 64 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 254 210 208 286 288 319 370 330 363 376 377 392 400 408 420 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 357 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 316  [[ 157 ]]  { N40:rawptr:BotPTR - - N316:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 308 6 153 8 9 (156 64 32 1 314 1 1 1 1 64 314 313 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 283 325 ]]  #long:16
 166  ConI  === 0  [[ 204 289 331 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 306 348 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 219 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 375 ]]  #int:0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 64 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 64 64 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 241 206  [[ 201 356 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 290 332 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 211  AddI  === _ 243 78  [[ 144 262 254 243 358 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 186 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 78  [[ 222 351 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 310  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 236  Phi  === 226 7 312  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 324 201  [[ 361 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 368 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 335 211  [[ 211 360 213 210 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 135  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 353 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 367 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] inner stride: 1 main of N261 strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 64 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 282  StoreD  === 300 298 283 290  [[ 298 305 312 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 283  AddP  === _ 64 284 162  [[ 282 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 284  AddP  === _ 64 64 289  [[ 283 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 285  Bool  === _ 286  [[ 301 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 286  CmpI  === _ 293 135  [[ 285 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 287  Bool  === _ 288  [[ 299 ]] [lt] !orig=209,150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 288  CmpU  === _ 296 135  [[ 287 ]]  !orig=210,149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 289  LShiftL  === _ 294 166  [[ 284 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 290  AddD  === _ 303 206  [[ 282 313 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 291  SqrtD  === 302 292  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 292  ConvI2D  === _ 293  [[ 291 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 293  AddI  === _ 296 78  [[ 286 292 296 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 294  ConvI2L  === _ 295  [[ 289 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 295  CastII  === 300 296  [[ 294 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 296  Phi  === 297 358 293  [[ 288 293 295 314 ]]  #int #tripcount !orig=243,[233]
 297  CountedLoop  === 297 322 302  [[ 296 297 298 299 303 ]] inner stride: 1 post of N261 !orig=261,[224],[198]
 298  Phi  === 297 354 282  [[ 282 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 299  RangeCheck  === 297 287  [[ 300 307 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 300  IfTrue  === 299  [[ 282 295 301 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 301  CountedLoopEnd  === 300 285  [[ 302 304 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 302  IfTrue  === 301  [[ 291 297 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 303  Phi  === 297 323 291  [[ 290 ]]  #double !orig=241,232
 304  IfFalse  === 301  [[ 306 310 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 307  IfFalse  === 299  [[ 308 ]] #0 !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 308  Region  === 308 307 350  [[ 308 157 313 314 316 ]]  !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 310  Region  === 310 304 311  [[ 310 226 312 ]]  !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 311  IfFalse  === 321  [[ 310 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 312  Phi  === 310 282 354  [[ 236 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 313  Phi  === 308 290 356  [[ 157 ]]  #double
 314  Phi  === 308 296 360  [[ 157 157 ]]  #int
 316  Phi  === 308 298 361  [[ 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 318  OpaqueZeroTripGuard  === _ 358  [[ 319 ]] 
 319  CmpI  === _ 318 135  [[ 320 ]] 
 320  Bool  === _ 319  [[ 321 ]] [lt]
 321  If  === 352 320  [[ 311 322 ]] P=0.500000, C=-1.000000
 322  IfTrue  === 321  [[ 297 323 ]] #1
 323  SqrtD  === 322 357  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 324  StoreD  === 342 340 325 332  [[ 340 347 354 237 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 325  AddP  === _ 64 326 162  [[ 324 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 326  AddP  === _ 64 64 331  [[ 325 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 327  Bool  === _ 328  [[ 343 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 328  CmpI  === _ 335 370  [[ 327 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 329  Bool  === _ 330  [[ 341 ]] [lt] !orig=209,150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 330  CmpU  === _ 338 135  [[ 329 ]]  !orig=210,149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 331  LShiftL  === _ 336 166  [[ 326 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 332  AddD  === _ 345 206  [[ 324 356 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 333  SqrtD  === 344 334  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 334  ConvI2D  === _ 335  [[ 333 357 368 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 335  AddI  === _ 338 78  [[ 328 334 338 358 364 243 391 400 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 336  ConvI2L  === _ 337  [[ 331 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 337  CastII  === 342 338  [[ 336 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 338  Phi  === 339 36 335  [[ 330 335 337 360 ]]  #int #tripcount !orig=243,[233]
 339  CountedLoop  === 339 220 344  [[ 338 339 340 341 345 ]] inner stride: 1 pre of N261 !orig=261,[224],[198]
 340  Phi  === 339 7 324  [[ 324 361 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 341  RangeCheck  === 339 329  [[ 342 349 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 342  IfTrue  === 341  [[ 324 337 343 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 343  CountedLoopEnd  === 342 327  [[ 344 362 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 344  IfTrue  === 343  [[ 333 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 345  Phi  === 339 214 333  [[ 332 ]]  #double !orig=241,232
 346  IfFalse  === 366  [[ 348 352 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 349  IfFalse  === 341  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 350  Region  === 350 349 351  [[ 350 308 356 360 361 ]]  !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 351  IfFalse  === 221  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 352  Region  === 352 346 353  [[ 352 321 354 357 358 ]]  !orig=[317]
 353  IfFalse  === 258  [[ 352 ]] #0 !orig=[317]
 354  Phi  === 352 324 201  [[ 298 312 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 356  Phi  === 350 332 205  [[ 313 ]]  #double
 357  Phi  === 352 334 144  [[ 323 ]]  #double
 358  Phi  === 352 335 211  [[ 296 318 ]]  #int
 360  Phi  === 350 338 243  [[ 314 ]]  #int
 361  Phi  === 350 340 237  [[ 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 362  IfFalse  === 343  [[ 366 ]] #0
 363  OpaqueZeroTripGuard  === _ 135  [[ 364 ]] 
 364  CmpI  === _ 335 363  [[ 365 ]] 
 365  Bool  === _ 364  [[ 366 ]] [lt]
 366  If  === 362 365  [[ 346 367 ]] P=0.999999, C=-1.000000
 367  IfTrue  === 366  [[ 260 368 374 395 ]] #1
 368  SqrtD  === 367 334  [[ 241 ]]  !orig=333,145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 369  AddI  === _ 36 78  [[ 370 384 ]] 
 370  Opaque1  === _ 369 135  [[ 328 ]] 
 374  Node  === 367  [[ 392 ]] 
 391  OpaqueLoopInit  === _ 335  [[ 408 418 ]] 
 392  CmpU  === _ 374 135  [[ 393 ]] 
 393  Bool  === _ 392  [[ 394 ]] [lt]
 394  OpaqueInitializedAssertionPredicate  === _ 393  [[ 395 ]] 
 395  RangeCheck  === 367 394  [[ 396 397 ]] P=0.999999, C=-1.000000
 396  IfFalse  === 395  [[ 399 ]] #0
 397  IfTrue  === 395  [[ 403 ]] #1
 398  Parm  === 3  [[ 399 ]] FramePtr
 399  Halt  === 396 1 1 398 1  [[ 0 ]] 
 400  CmpU  === _ 335 135  [[ 401 ]] 
 401  Bool  === _ 400  [[ 402 ]] [lt]
 402  OpaqueInitializedAssertionPredicate  === _ 401  [[ 403 ]] 
 403  RangeCheck  === 397 402  [[ 404 405 ]] P=0.999999, C=-1.000000
 404  IfFalse  === 403  [[ 407 ]] #0
 405  IfTrue  === 403  [[ 411 ]] #1
 406  Parm  === 3  [[ 407 ]] FramePtr
 407  Halt  === 404 1 1 406 1  [[ 0 ]] 
 408  CmpU  === _ 391 135  [[ 409 ]] 
 409  Bool  === _ 408  [[ 410 ]] [lt]
 410  Opaque4  === _ 409 78  [[ 411 ]] 
 411  RangeCheck  === 405 410  [[ 412 413 ]] P=0.999999, C=-1.000000
 412  IfFalse  === 411  [[ 415 ]] #0
 413  IfTrue  === 411  [[ 419 423 ]] #1
 414  Parm  === 3  [[ 415 ]] FramePtr
 415  Halt  === 412 1 1 414 1  [[ 0 ]] 
 416  OpaqueLoopStride  === _ 78  [[ 417 ]] 
 417  SubI  === _ 416 78  [[ 418 ]] 
 418  AddI  === _ 391 417  [[ 419 ]] 
 419  CastII  === 413 418  [[ 420 ]]  #int
 420  CmpU  === _ 419 135  [[ 421 ]] 
 421  Bool  === _ 420  [[ 422 ]] [lt]
 422  Opaque4  === _ 421 78  [[ 423 ]] 
 423  RangeCheck  === 413 422  [[ 424 425 ]] P=0.999999, C=-1.000000
 424  IfFalse  === 423  [[ 427 ]] #0
 426  Parm  === 3  [[ 427 ]] FramePtr
 427  Halt  === 424 1 1 426 1  [[ 0 ]] 
AFTER: BEFORE_ITER_GVN
   0  Root  === 0 70 88 179 161 399 407 415 427  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 371 372 373 380 387 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 398 406 414 426 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 347 81 16 305 340 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 338 84 369 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 305 306 347 348 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  47  ConP  === 0  [[ 48 84 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !orig=[193] !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 84 ]] #0 !orig=[276],[195] !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 202 157 157 203 203 262 134 134 283 284 284 325 326 326 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !orig=281,[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 293 335 369 410 416 417 422 221 430 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 51 6 81 8 9 (83 47 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 64 64 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 428 210 208 286 288 319 370 330 420 376 377 392 400 408 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 357 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 316  [[ 157 ]]  { N40:rawptr:BotPTR - - N316:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 308 6 153 8 9 (156 64 32 1 314 1 1 1 1 64 314 313 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 283 325 ]]  #long:16
 166  ConI  === 0  [[ 204 289 331 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 306 348 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 219 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 375 ]]  #int:0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 64 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 64 64 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 241 206  [[ 201 356 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 290 332 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 211  AddI  === _ 243 78  [[ 144 262 254 243 358 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 186 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 339 429 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 78  [[ 222 351 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 310  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 236  Phi  === 226 7 312  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 324 201  [[ 361 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 368 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 335 211  [[ 211 360 213 210 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 429  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 353 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 425 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] inner stride: 1 main of N261 strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 64 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 282  StoreD  === 300 298 283 290  [[ 298 305 312 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 283  AddP  === _ 64 284 162  [[ 282 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 284  AddP  === _ 64 64 289  [[ 283 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 285  Bool  === _ 286  [[ 301 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 286  CmpI  === _ 293 135  [[ 285 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 287  Bool  === _ 288  [[ 299 ]] [lt] !orig=209,150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 288  CmpU  === _ 296 135  [[ 287 ]]  !orig=210,149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 289  LShiftL  === _ 294 166  [[ 284 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 290  AddD  === _ 303 206  [[ 282 313 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 291  SqrtD  === 302 292  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 292  ConvI2D  === _ 293  [[ 291 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 293  AddI  === _ 296 78  [[ 286 292 296 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 294  ConvI2L  === _ 295  [[ 289 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 295  CastII  === 300 296  [[ 294 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 296  Phi  === 297 358 293  [[ 288 293 295 314 ]]  #int #tripcount !orig=243,[233]
 297  CountedLoop  === 297 322 302  [[ 296 297 298 299 303 ]] inner stride: 1 post of N261 !orig=261,[224],[198]
 298  Phi  === 297 354 282  [[ 282 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 299  RangeCheck  === 297 287  [[ 300 307 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 300  IfTrue  === 299  [[ 282 295 301 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 301  CountedLoopEnd  === 300 285  [[ 302 304 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 302  IfTrue  === 301  [[ 291 297 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 303  Phi  === 297 323 291  [[ 290 ]]  #double !orig=241,232
 304  IfFalse  === 301  [[ 306 310 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 307  IfFalse  === 299  [[ 308 ]] #0 !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 308  Region  === 308 307 350  [[ 308 157 313 314 316 ]]  !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 310  Region  === 310 304 311  [[ 310 226 312 ]]  !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 311  IfFalse  === 321  [[ 310 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 312  Phi  === 310 282 354  [[ 236 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 313  Phi  === 308 290 356  [[ 157 ]]  #double
 314  Phi  === 308 296 360  [[ 157 157 ]]  #int
 316  Phi  === 308 298 361  [[ 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 318  OpaqueZeroTripGuard  === _ 358  [[ 319 ]] 
 319  CmpI  === _ 318 135  [[ 320 ]] 
 320  Bool  === _ 319  [[ 321 ]] [lt]
 321  If  === 352 320  [[ 311 322 ]] P=0.500000, C=-1.000000
 322  IfTrue  === 321  [[ 297 323 ]] #1
 323  SqrtD  === 322 357  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 324  StoreD  === 342 340 325 332  [[ 340 347 354 237 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 325  AddP  === _ 64 326 162  [[ 324 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 326  AddP  === _ 64 64 331  [[ 325 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 327  Bool  === _ 328  [[ 343 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 328  CmpI  === _ 335 370  [[ 327 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 329  Bool  === _ 330  [[ 341 ]] [lt] !orig=209,150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 330  CmpU  === _ 338 135  [[ 329 ]]  !orig=210,149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 331  LShiftL  === _ 336 166  [[ 326 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 332  AddD  === _ 345 206  [[ 324 356 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 333  SqrtD  === 344 334  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 334  ConvI2D  === _ 335  [[ 333 357 368 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 335  AddI  === _ 338 78  [[ 328 334 338 358 364 243 391 400 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 336  ConvI2L  === _ 337  [[ 331 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 337  CastII  === 342 338  [[ 336 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 338  Phi  === 339 36 335  [[ 330 335 337 360 ]]  #int #tripcount !orig=243,[233]
 339  CountedLoop  === 339 220 344  [[ 338 339 340 341 345 ]] inner stride: 1 pre of N261 !orig=261,[224],[198]
 340  Phi  === 339 7 324  [[ 324 361 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 341  RangeCheck  === 339 329  [[ 342 349 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 342  IfTrue  === 341  [[ 324 337 343 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 343  CountedLoopEnd  === 342 327  [[ 344 362 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 344  IfTrue  === 343  [[ 333 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 345  Phi  === 339 214 333  [[ 332 ]]  #double !orig=241,232
 346  IfFalse  === 366  [[ 348 352 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 349  IfFalse  === 341  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 350  Region  === 350 349 351  [[ 350 308 356 360 361 ]]  !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 351  IfFalse  === 221  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 352  Region  === 352 346 353  [[ 352 321 354 357 358 ]]  !orig=[317]
 353  IfFalse  === 258  [[ 352 ]] #0 !orig=[317]
 354  Phi  === 352 324 201  [[ 298 312 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 356  Phi  === 350 332 205  [[ 313 ]]  #double
 357  Phi  === 352 334 144  [[ 323 ]]  #double
 358  Phi  === 352 335 211  [[ 296 318 ]]  #int
 360  Phi  === 350 338 243  [[ 314 ]]  #int
 361  Phi  === 350 340 237  [[ 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 362  IfFalse  === 343  [[ 366 ]] #0
 363  OpaqueZeroTripGuard  === _ 429  [[ 364 ]] 
 364  CmpI  === _ 335 363  [[ 365 ]] 
 365  Bool  === _ 364  [[ 366 ]] [lt]
 366  If  === 362 365  [[ 346 367 ]] P=0.999999, C=-1.000000
 367  IfTrue  === 366  [[ 395 368 ]] #1
 368  SqrtD  === 367 334  [[ 241 ]]  !orig=333,145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 369  AddI  === _ 36 78  [[ 384 ]] 
 370  Opaque1  === _ 428 135  [[ 328 ]] 
 371  ConL  === 0  [[ 385 ]]  #long:0
 372  ConL  === 0  [[ 379 386 ]]  #long:1
 375  ConvI2L  === _ 190  [[ 378 385 ]]  #long:minint..maxint
 376  ConvI2L  === _ 135  [[ 378 ]]  #long:minint..maxint
 377  ConvI2L  === _ 135  [[ 382 ]]  #long:minint..maxint
 378  SubL  === _ 376 375  [[ 379 ]] 
 379  DivL  === _ 378 372  [[ 381 ]] 
 380  ConL  === 0  [[ 381 ]]  #long:minint
 381  MaxL  === _ 379 380  [[ 382 ]] 
 382  MinL  === _ 381 377  [[ 383 ]] 
 383  ConvL2I  === _ 382  [[ 429 ]]  #int
 384  ConvI2L  === _ 369  [[ 389 ]]  #long:minint..maxint
 385  SubL  === _ 371 375  [[ 386 ]] 
 386  DivL  === _ 385 372  [[ 388 ]] 
 387  ConL  === 0  [[ 388 ]]  #long:maxint
 388  MinL  === _ 386 387  [[ 389 ]] 
 389  MaxL  === _ 388 384  [[ 390 ]] 
 390  ConvL2I  === _ 389  [[ 428 ]]  #int
 391  OpaqueLoopInit  === _ 335  [[ 408 418 ]] 
 392  CmpU  === _ 430 135  [[ 393 ]] 
 393  Bool  === _ 392  [[ 394 ]] [lt]
 394  OpaqueInitializedAssertionPredicate  === _ 393  [[ 395 ]] 
 395  RangeCheck  === 367 394  [[ 396 397 ]] P=0.999999, C=-1.000000
 396  IfFalse  === 395  [[ 399 ]] #0
 397  IfTrue  === 395  [[ 403 ]] #1
 398  Parm  === 3  [[ 399 ]] FramePtr
 399  Halt  === 396 1 1 398 1  [[ 0 ]] 
 400  CmpU  === _ 335 135  [[ 401 ]] 
 401  Bool  === _ 400  [[ 402 ]] [lt]
 402  OpaqueInitializedAssertionPredicate  === _ 401  [[ 403 ]] 
 403  RangeCheck  === 397 402  [[ 404 405 ]] P=0.999999, C=-1.000000
 404  IfFalse  === 403  [[ 407 ]] #0
 405  IfTrue  === 403  [[ 411 ]] #1
 406  Parm  === 3  [[ 407 ]] FramePtr
 407  Halt  === 404 1 1 406 1  [[ 0 ]] 
 408  CmpU  === _ 391 135  [[ 409 ]] 
 409  Bool  === _ 408  [[ 410 ]] [lt]
 410  Opaque4  === _ 409 78  [[ 411 ]] 
 411  RangeCheck  === 405 410  [[ 412 413 ]] P=0.999999, C=-1.000000
 412  IfFalse  === 411  [[ 415 ]] #0
 413  IfTrue  === 411  [[ 419 423 ]] #1
 414  Parm  === 3  [[ 415 ]] FramePtr
 415  Halt  === 412 1 1 414 1  [[ 0 ]] 
 416  OpaqueLoopStride  === _ 78  [[ 417 ]] 
 417  SubI  === _ 416 78  [[ 418 ]] 
 418  AddI  === _ 391 417  [[ 419 ]] 
 419  CastII  === 413 418  [[ 420 ]]  #int
 420  CmpU  === _ 419 135  [[ 421 ]] 
 421  Bool  === _ 420  [[ 422 ]] [lt]
 422  Opaque4  === _ 421 78  [[ 423 ]] 
 423  RangeCheck  === 413 422  [[ 424 425 ]] P=0.999999, C=-1.000000
 424  IfFalse  === 423  [[ 427 ]] #0
 425  IfTrue  === 423  [[ 260 ]] #1
 426  Parm  === 3  [[ 427 ]] FramePtr
 427  Halt  === 424 1 1 426 1  [[ 0 ]] 
 428  MinI  === _ 390 135  [[ 370 ]] 
 429  CastII  === 220 383  [[ 254 430 363 ]]  #int
 430  SubI  === _ 429 78  [[ 392 ]]  !orig=[374]
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 179 161 399 407 415 427  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 371 372 373 380 387 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 398 406 414 426 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 347 81 16 305 340 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 338 84 369 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 305 306 347 348 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  47  ConP  === 0  [[ 48 84 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !orig=[193] !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 84 ]] #0 !orig=[276],[195] !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 202 157 157 203 203 262 134 134 283 284 284 325 326 326 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !orig=281,[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 293 335 369 410 416 417 422 221 430 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 51 6 81 8 9 (83 47 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 64 64 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 428 210 208 286 288 319 370 330 420 376 377 392 400 408 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 357 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 316  [[ 157 ]]  { N40:rawptr:BotPTR - - N316:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 308 6 153 8 9 (156 64 32 1 314 1 1 1 1 64 314 313 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 283 325 ]]  #long:16
 166  ConI  === 0  [[ 204 289 331 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 306 348 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 219 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 375 ]]  #int:0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 64 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 64 64 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 241 206  [[ 201 356 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 290 332 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 211  AddI  === _ 243 78  [[ 144 262 254 243 358 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 186 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 339 429 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 78  [[ 222 351 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 310  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 236  Phi  === 226 7 312  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 324 201  [[ 361 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 368 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 335 211  [[ 211 360 213 210 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 429  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 353 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 425 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] inner stride: 1 main of N261 strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 64 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 282  StoreD  === 300 298 283 290  [[ 298 305 312 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 283  AddP  === _ 64 284 162  [[ 282 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 284  AddP  === _ 64 64 289  [[ 283 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 285  Bool  === _ 286  [[ 301 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 286  CmpI  === _ 293 135  [[ 285 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 287  Bool  === _ 288  [[ 299 ]] [lt] !orig=209,150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 288  CmpU  === _ 296 135  [[ 287 ]]  !orig=210,149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 289  LShiftL  === _ 294 166  [[ 284 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 290  AddD  === _ 303 206  [[ 282 313 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 291  SqrtD  === 302 292  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 292  ConvI2D  === _ 293  [[ 291 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 293  AddI  === _ 296 78  [[ 286 292 296 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 294  ConvI2L  === _ 295  [[ 289 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 295  CastII  === 300 296  [[ 294 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 296  Phi  === 297 358 293  [[ 288 293 295 314 ]]  #int #tripcount !orig=243,[233]
 297  CountedLoop  === 297 322 302  [[ 296 297 298 299 303 ]] inner stride: 1 post of N261 !orig=261,[224],[198]
 298  Phi  === 297 354 282  [[ 282 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 299  RangeCheck  === 297 287  [[ 300 307 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 300  IfTrue  === 299  [[ 282 295 301 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 301  CountedLoopEnd  === 300 285  [[ 302 304 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 302  IfTrue  === 301  [[ 291 297 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 303  Phi  === 297 323 291  [[ 290 ]]  #double !orig=241,232
 304  IfFalse  === 301  [[ 306 310 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 307  IfFalse  === 299  [[ 308 ]] #0 !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 308  Region  === 308 307 350  [[ 308 157 313 314 316 ]]  !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 310  Region  === 310 304 311  [[ 310 226 312 ]]  !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 311  IfFalse  === 321  [[ 310 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 312  Phi  === 310 282 354  [[ 236 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 313  Phi  === 308 290 356  [[ 157 ]]  #double
 314  Phi  === 308 296 360  [[ 157 157 ]]  #int
 316  Phi  === 308 298 361  [[ 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 318  OpaqueZeroTripGuard  === _ 358  [[ 319 ]] 
 319  CmpI  === _ 318 135  [[ 320 ]] 
 320  Bool  === _ 319  [[ 321 ]] [lt]
 321  If  === 352 320  [[ 311 322 ]] P=0.500000, C=-1.000000
 322  IfTrue  === 321  [[ 297 323 ]] #1
 323  SqrtD  === 322 357  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 324  StoreD  === 342 340 325 332  [[ 340 347 354 237 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 325  AddP  === _ 64 326 162  [[ 324 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 326  AddP  === _ 64 64 331  [[ 325 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 327  Bool  === _ 328  [[ 343 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 328  CmpI  === _ 335 370  [[ 327 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 329  Bool  === _ 330  [[ 341 ]] [lt] !orig=209,150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 330  CmpU  === _ 338 135  [[ 329 ]]  !orig=210,149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 331  LShiftL  === _ 336 166  [[ 326 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 332  AddD  === _ 345 206  [[ 324 356 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 333  SqrtD  === 344 334  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 334  ConvI2D  === _ 335  [[ 333 357 368 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 335  AddI  === _ 338 78  [[ 328 334 338 358 364 243 391 400 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 336  ConvI2L  === _ 337  [[ 331 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 337  CastII  === 342 338  [[ 336 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 338  Phi  === 339 36 335  [[ 330 335 337 360 ]]  #int #tripcount !orig=243,[233]
 339  CountedLoop  === 339 220 344  [[ 338 339 340 341 345 ]] inner stride: 1 pre of N261 !orig=261,[224],[198]
 340  Phi  === 339 7 324  [[ 324 361 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 341  RangeCheck  === 339 329  [[ 342 349 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 342  IfTrue  === 341  [[ 324 337 343 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 343  CountedLoopEnd  === 342 327  [[ 344 362 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 344  IfTrue  === 343  [[ 333 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 345  Phi  === 339 214 333  [[ 332 ]]  #double !orig=241,232
 346  IfFalse  === 366  [[ 348 352 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 349  IfFalse  === 341  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 350  Region  === 350 349 351  [[ 350 308 356 360 361 ]]  !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 351  IfFalse  === 221  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 352  Region  === 352 346 353  [[ 352 321 354 357 358 ]]  !orig=[317]
 353  IfFalse  === 258  [[ 352 ]] #0 !orig=[317]
 354  Phi  === 352 324 201  [[ 298 312 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 356  Phi  === 350 332 205  [[ 313 ]]  #double
 357  Phi  === 352 334 144  [[ 323 ]]  #double
 358  Phi  === 352 335 211  [[ 296 318 ]]  #int
 360  Phi  === 350 338 243  [[ 314 ]]  #int
 361  Phi  === 350 340 237  [[ 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 362  IfFalse  === 343  [[ 366 ]] #0
 363  OpaqueZeroTripGuard  === _ 429  [[ 364 ]] 
 364  CmpI  === _ 335 363  [[ 365 ]] 
 365  Bool  === _ 364  [[ 366 ]] [lt]
 366  If  === 362 365  [[ 346 367 ]] P=0.999999, C=-1.000000
 367  IfTrue  === 366  [[ 395 368 ]] #1
 368  SqrtD  === 367 334  [[ 241 ]]  !orig=333,145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 369  AddI  === _ 36 78  [[ 384 ]] 
 370  Opaque1  === _ 428 135  [[ 328 ]] 
 371  ConL  === 0  [[ 385 ]]  #long:0
 372  ConL  === 0  [[ 379 386 ]]  #long:1
 375  ConvI2L  === _ 190  [[ 378 385 ]]  #long:minint..maxint
 376  ConvI2L  === _ 135  [[ 378 ]]  #long:minint..maxint
 377  ConvI2L  === _ 135  [[ 382 ]]  #long:minint..maxint
 378  SubL  === _ 376 375  [[ 379 ]] 
 379  DivL  === _ 378 372  [[ 381 ]] 
 380  ConL  === 0  [[ 381 ]]  #long:minint
 381  MaxL  === _ 379 380  [[ 382 ]] 
 382  MinL  === _ 381 377  [[ 383 ]] 
 383  ConvL2I  === _ 382  [[ 429 ]]  #int
 384  ConvI2L  === _ 369  [[ 389 ]]  #long:minint..maxint
 385  SubL  === _ 371 375  [[ 386 ]] 
 386  DivL  === _ 385 372  [[ 388 ]] 
 387  ConL  === 0  [[ 388 ]]  #long:maxint
 388  MinL  === _ 386 387  [[ 389 ]] 
 389  MaxL  === _ 388 384  [[ 390 ]] 
 390  ConvL2I  === _ 389  [[ 428 ]]  #int
 391  OpaqueLoopInit  === _ 335  [[ 408 418 ]] 
 392  CmpU  === _ 430 135  [[ 393 ]] 
 393  Bool  === _ 392  [[ 394 ]] [lt]
 394  OpaqueInitializedAssertionPredicate  === _ 393  [[ 395 ]] 
 395  RangeCheck  === 367 394  [[ 396 397 ]] P=0.999999, C=-1.000000
 396  IfFalse  === 395  [[ 399 ]] #0
 397  IfTrue  === 395  [[ 403 ]] #1
 398  Parm  === 3  [[ 399 ]] FramePtr
 399  Halt  === 396 1 1 398 1  [[ 0 ]] 
 400  CmpU  === _ 335 135  [[ 401 ]] 
 401  Bool  === _ 400  [[ 402 ]] [lt]
 402  OpaqueInitializedAssertionPredicate  === _ 401  [[ 403 ]] 
 403  RangeCheck  === 397 402  [[ 404 405 ]] P=0.999999, C=-1.000000
 404  IfFalse  === 403  [[ 407 ]] #0
 405  IfTrue  === 403  [[ 411 ]] #1
 406  Parm  === 3  [[ 407 ]] FramePtr
 407  Halt  === 404 1 1 406 1  [[ 0 ]] 
 408  CmpU  === _ 391 135  [[ 409 ]] 
 409  Bool  === _ 408  [[ 410 ]] [lt]
 410  Opaque4  === _ 409 78  [[ 411 ]] 
 411  RangeCheck  === 405 410  [[ 412 413 ]] P=0.999999, C=-1.000000
 412  IfFalse  === 411  [[ 415 ]] #0
 413  IfTrue  === 411  [[ 419 423 ]] #1
 414  Parm  === 3  [[ 415 ]] FramePtr
 415  Halt  === 412 1 1 414 1  [[ 0 ]] 
 416  OpaqueLoopStride  === _ 78  [[ 417 ]] 
 417  SubI  === _ 416 78  [[ 418 ]] 
 418  AddI  === _ 391 417  [[ 419 ]] 
 419  CastII  === 413 418  [[ 420 ]]  #int
 420  CmpU  === _ 419 135  [[ 421 ]] 
 421  Bool  === _ 420  [[ 422 ]] [lt]
 422  Opaque4  === _ 421 78  [[ 423 ]] 
 423  RangeCheck  === 413 422  [[ 424 425 ]] P=0.999999, C=-1.000000
 424  IfFalse  === 423  [[ 427 ]] #0
 425  IfTrue  === 423  [[ 260 ]] #1
 426  Parm  === 3  [[ 427 ]] FramePtr
 427  Halt  === 424 1 1 426 1  [[ 0 ]] 
 428  MinI  === _ 390 135  [[ 370 ]] 
 429  CastII  === 220 383  [[ 254 430 363 ]]  #int
 430  SubI  === _ 429 78  [[ 392 ]]  !orig=[374]
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 179 161 399 407 415 427  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 371 372 373 380 387 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 398 406 414 426 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 347 81 16 340 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 338 84 369 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 348 347 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  47  ConP  === 0  [[ 48 84 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !orig=[193] !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 84 ]] #0 !orig=[276],[195] !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 202 157 157 203 203 262 134 134 283 284 284 325 326 326 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !orig=281,[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 293 335 369 410 416 417 422 221 430 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 51 6 81 8 9 (83 47 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 64 64 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 428 408 208 286 288 319 370 330 420 376 377 392 400 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 357 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 316  [[ 157 ]]  { N40:rawptr:BotPTR - - N316:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 308 6 153 8 9 (156 64 32 1 314 1 1 1 1 64 314 313 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 283 325 ]]  #long:16
 166  ConI  === 0  [[ 204 289 331 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 348 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 219 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 375 ]]  #int:0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 64 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 64 64 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 241 206  [[ 201 356 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 290 332 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 211  AddI  === _ 243 78  [[ 144 262 254 243 358 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 186 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 339 429 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 78  [[ 222 351 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 310  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 236  Phi  === 226 7 312  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 324 201  [[ 361 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 368 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 335 211  [[ 211 360 213 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 429  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 353 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 425 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] inner stride: 1 main of N261 strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 64 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 282  StoreD  === 300 298 283 290  [[ 298 312 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 283  AddP  === _ 64 284 162  [[ 282 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 284  AddP  === _ 64 64 289  [[ 283 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 285  Bool  === _ 286  [[ 301 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 286  CmpI  === _ 293 135  [[ 285 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 287  Bool  === _ 288  [[ 299 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 288  CmpU  === _ 296 135  [[ 287 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 289  LShiftL  === _ 294 166  [[ 284 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 290  AddD  === _ 206 303  [[ 282 313 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 291  SqrtD  === 302 292  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 292  ConvI2D  === _ 293  [[ 291 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 293  AddI  === _ 296 78  [[ 286 292 296 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 294  ConvI2L  === _ 295  [[ 289 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 295  CastII  === 300 296  [[ 294 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 296  Phi  === 297 358 293  [[ 288 293 295 314 ]]  #int #tripcount !orig=243,[233]
 297  CountedLoop  === 297 322 302  [[ 296 297 298 299 303 ]] inner stride: 1 post of N261 !orig=261,[224],[198]
 298  Phi  === 297 354 282  [[ 282 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 299  RangeCheck  === 297 287  [[ 300 307 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 300  IfTrue  === 299  [[ 282 295 301 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 301  CountedLoopEnd  === 300 285  [[ 302 304 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 302  IfTrue  === 301  [[ 291 297 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 303  Phi  === 297 323 291  [[ 290 ]]  #double !orig=241,232
 304  IfFalse  === 301  [[ 310 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 307  IfFalse  === 299  [[ 308 ]] #0 !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 308  Region  === 308 307 350  [[ 308 157 313 314 316 ]]  !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 310  Region  === 310 304 311  [[ 310 226 312 ]]  !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 311  IfFalse  === 321  [[ 310 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 312  Phi  === 310 282 354  [[ 236 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 313  Phi  === 308 290 356  [[ 157 ]]  #double
 314  Phi  === 308 296 360  [[ 157 157 ]]  #int
 316  Phi  === 308 298 361  [[ 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 318  OpaqueZeroTripGuard  === _ 358  [[ 319 ]] 
 319  CmpI  === _ 318 135  [[ 320 ]] 
 320  Bool  === _ 319  [[ 321 ]] [lt]
 321  If  === 352 320  [[ 311 322 ]] P=0.500000, C=-1.000000
 322  IfTrue  === 321  [[ 297 323 ]] #1
 323  SqrtD  === 322 357  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 324  StoreD  === 342 340 325 332  [[ 340 347 354 237 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 325  AddP  === _ 64 326 162  [[ 324 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 326  AddP  === _ 64 64 331  [[ 325 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 327  Bool  === _ 328  [[ 343 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 328  CmpI  === _ 335 370  [[ 327 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 329  Bool  === _ 330  [[ 341 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 330  CmpU  === _ 338 135  [[ 329 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 331  LShiftL  === _ 336 166  [[ 326 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 332  AddD  === _ 345 206  [[ 324 356 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 333  SqrtD  === 344 334  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 334  ConvI2D  === _ 335  [[ 333 357 368 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 335  AddI  === _ 338 78  [[ 328 334 338 358 364 243 391 400 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 336  ConvI2L  === _ 337  [[ 331 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 337  CastII  === 342 338  [[ 336 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 338  Phi  === 339 36 335  [[ 330 335 337 360 ]]  #int #tripcount !orig=243,[233]
 339  CountedLoop  === 339 220 344  [[ 338 339 340 341 345 ]] inner stride: 1 pre of N261 !orig=261,[224],[198]
 340  Phi  === 339 7 324  [[ 324 361 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 341  RangeCheck  === 339 329  [[ 342 349 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 342  IfTrue  === 341  [[ 324 337 343 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 343  CountedLoopEnd  === 342 327  [[ 344 362 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 344  IfTrue  === 343  [[ 333 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 345  Phi  === 339 214 333  [[ 332 ]]  #double !orig=241,232
 346  IfFalse  === 366  [[ 348 352 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 349  IfFalse  === 341  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 350  Region  === 350 349 351  [[ 350 308 356 360 361 ]]  !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 351  IfFalse  === 221  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 352  Region  === 352 346 353  [[ 352 321 354 357 358 ]]  !orig=[317]
 353  IfFalse  === 258  [[ 352 ]] #0 !orig=[317]
 354  Phi  === 352 324 201  [[ 298 312 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 356  Phi  === 350 332 205  [[ 313 ]]  #double
 357  Phi  === 352 334 144  [[ 323 ]]  #double
 358  Phi  === 352 335 211  [[ 296 318 ]]  #int
 360  Phi  === 350 338 243  [[ 314 ]]  #int
 361  Phi  === 350 340 237  [[ 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 362  IfFalse  === 343  [[ 366 ]] #0
 363  OpaqueZeroTripGuard  === _ 429  [[ 364 ]] 
 364  CmpI  === _ 335 363  [[ 365 ]] 
 365  Bool  === _ 364  [[ 366 ]] [lt]
 366  If  === 362 365  [[ 346 367 ]] P=0.999999, C=-1.000000
 367  IfTrue  === 366  [[ 395 368 ]] #1
 368  SqrtD  === 367 334  [[ 241 ]]  !orig=333,145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 369  AddI  === _ 36 78  [[ 384 ]] 
 370  Opaque1  === _ 428 135  [[ 328 ]] 
 371  ConL  === 0  [[ 385 ]]  #long:0
 372  ConL  === 0  [[ 379 386 ]]  #long:1
 375  ConvI2L  === _ 190  [[ 378 385 ]]  #long:minint..maxint
 376  ConvI2L  === _ 135  [[ 378 ]]  #long:minint..maxint
 377  ConvI2L  === _ 135  [[ 382 ]]  #long:minint..maxint
 378  SubL  === _ 376 375  [[ 379 ]] 
 379  DivL  === _ 378 372  [[ 381 ]] 
 380  ConL  === 0  [[ 381 ]]  #long:minint
 381  MaxL  === _ 379 380  [[ 382 ]] 
 382  MinL  === _ 381 377  [[ 383 ]] 
 383  ConvL2I  === _ 382  [[ 429 ]]  #int
 384  ConvI2L  === _ 369  [[ 389 ]]  #long:minint..maxint
 385  SubL  === _ 371 375  [[ 386 ]] 
 386  DivL  === _ 385 372  [[ 388 ]] 
 387  ConL  === 0  [[ 388 ]]  #long:maxint
 388  MinL  === _ 386 387  [[ 389 ]] 
 389  MaxL  === _ 388 384  [[ 390 ]] 
 390  ConvL2I  === _ 389  [[ 428 ]]  #int
 391  OpaqueLoopInit  === _ 335  [[ 408 418 ]] 
 392  CmpU  === _ 430 135  [[ 393 ]] 
 393  Bool  === _ 392  [[ 394 ]] [lt]
 394  OpaqueInitializedAssertionPredicate  === _ 393  [[ 395 ]] 
 395  RangeCheck  === 367 394  [[ 396 397 ]] P=0.999999, C=-1.000000
 396  IfFalse  === 395  [[ 399 ]] #0
 397  IfTrue  === 395  [[ 403 ]] #1
 398  Parm  === 3  [[ 399 ]] FramePtr
 399  Halt  === 396 1 1 398 1  [[ 0 ]] 
 400  CmpU  === _ 335 135  [[ 401 ]] 
 401  Bool  === _ 400  [[ 402 ]] [lt]
 402  OpaqueInitializedAssertionPredicate  === _ 401  [[ 403 ]] 
 403  RangeCheck  === 397 402  [[ 404 405 ]] P=0.999999, C=-1.000000
 404  IfFalse  === 403  [[ 407 ]] #0
 405  IfTrue  === 403  [[ 411 ]] #1
 406  Parm  === 3  [[ 407 ]] FramePtr
 407  Halt  === 404 1 1 406 1  [[ 0 ]] 
 408  CmpU  === _ 391 135  [[ 409 ]] 
 409  Bool  === _ 408  [[ 410 ]] [lt]
 410  Opaque4  === _ 409 78  [[ 411 ]] 
 411  RangeCheck  === 405 410  [[ 412 413 ]] P=0.999999, C=-1.000000
 412  IfFalse  === 411  [[ 415 ]] #0
 413  IfTrue  === 411  [[ 419 423 ]] #1
 414  Parm  === 3  [[ 415 ]] FramePtr
 415  Halt  === 412 1 1 414 1  [[ 0 ]] 
 416  OpaqueLoopStride  === _ 78  [[ 417 ]] 
 417  SubI  === _ 416 78  [[ 418 ]] 
 418  AddI  === _ 391 417  [[ 419 ]] 
 419  CastII  === 413 418  [[ 420 ]]  #int
 420  CmpU  === _ 419 135  [[ 421 ]] 
 421  Bool  === _ 420  [[ 422 ]] [lt]
 422  Opaque4  === _ 421 78  [[ 423 ]] 
 423  RangeCheck  === 413 422  [[ 424 425 ]] P=0.999999, C=-1.000000
 424  IfFalse  === 423  [[ 427 ]] #0
 425  IfTrue  === 423  [[ 260 ]] #1
 426  Parm  === 3  [[ 427 ]] FramePtr
 427  Halt  === 424 1 1 426 1  [[ 0 ]] 
 428  MinI  === _ 390 135  [[ 370 ]] 
 429  CastII  === 220 383  [[ 254 430 363 ]]  #int
 430  SubI  === _ 429 78  [[ 392 ]]  !orig=[374]
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 179 161 399 407 415 427  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 371 372 373 380 387 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 398 406 414 426 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 340 81 16 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 338 84 369 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  47  ConP  === 0  [[ 48 84 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !orig=[193] !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 84 ]] #0 !orig=[276],[195] !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 202 157 157 203 203 262 134 134 283 284 284 325 326 326 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !orig=281,[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 293 335 369 410 416 417 422 221 430 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 51 6 81 8 9 (83 47 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 64 64 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 428 408 208 286 288 319 370 330 420 376 377 392 400 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 316  [[ 157 ]]  { N40:rawptr:BotPTR - - N316:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 308 6 153 8 9 (156 64 32 1 314 1 1 1 1 64 314 313 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 283 325 ]]  #long:16
 166  ConI  === 0  [[ 204 289 331 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 219 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 375 ]]  #int:0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 64 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 64 64 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 241 206  [[ 201 356 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 290 332 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 211  AddI  === _ 243 78  [[ 144 262 254 243 358 431 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 186 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 339 429 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 78  [[ 222 351 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 310  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 236  Phi  === 226 7 312  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 324 201  [[ 361 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 368 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 335 211  [[ 211 360 213 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 429  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 353 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 425 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] inner stride: 1 main of N261 strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 64 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 282  StoreD  === 300 298 283 290  [[ 298 312 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 283  AddP  === _ 64 284 162  [[ 282 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 284  AddP  === _ 64 64 289  [[ 283 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 285  Bool  === _ 286  [[ 301 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 286  CmpI  === _ 293 135  [[ 285 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 287  Bool  === _ 288  [[ 299 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 288  CmpU  === _ 296 135  [[ 287 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 289  LShiftL  === _ 294 166  [[ 284 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 290  AddD  === _ 206 303  [[ 282 313 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 291  SqrtD  === 302 292  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 292  ConvI2D  === _ 293  [[ 291 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 293  AddI  === _ 296 78  [[ 286 292 296 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 294  ConvI2L  === _ 295  [[ 289 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 295  CastII  === 300 296  [[ 294 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 296  Phi  === 297 358 293  [[ 288 293 295 314 ]]  #int #tripcount !orig=243,[233]
 297  CountedLoop  === 297 322 302  [[ 296 297 298 299 303 ]] inner stride: 1 post of N261 !orig=261,[224],[198]
 298  Phi  === 297 354 282  [[ 282 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 299  RangeCheck  === 297 287  [[ 300 307 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 300  IfTrue  === 299  [[ 282 295 301 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 301  CountedLoopEnd  === 300 285  [[ 302 304 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 302  IfTrue  === 301  [[ 291 297 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 303  Phi  === 297 323 291  [[ 290 ]]  #double !orig=241,232
 304  IfFalse  === 301  [[ 310 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 307  IfFalse  === 299  [[ 308 ]] #0 !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 308  Region  === 308 307 350  [[ 308 157 313 314 316 ]]  !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 310  Region  === 310 304 311  [[ 310 226 312 ]]  !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 311  IfFalse  === 321  [[ 310 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 312  Phi  === 310 282 354  [[ 236 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 313  Phi  === 308 290 356  [[ 157 ]]  #double
 314  Phi  === 308 296 360  [[ 157 157 ]]  #int
 316  Phi  === 308 298 361  [[ 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 318  OpaqueZeroTripGuard  === _ 358  [[ 319 ]] 
 319  CmpI  === _ 318 135  [[ 320 ]] 
 320  Bool  === _ 319  [[ 321 ]] [lt]
 321  If  === 352 320  [[ 311 322 ]] P=0.500000, C=-1.000000
 322  IfTrue  === 321  [[ 297 323 ]] #1
 323  SqrtD  === 322 432  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 324  StoreD  === 342 340 325 332  [[ 340 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 325  AddP  === _ 64 326 162  [[ 324 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 326  AddP  === _ 64 64 331  [[ 325 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 327  Bool  === _ 328  [[ 343 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 328  CmpI  === _ 335 370  [[ 327 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 329  Bool  === _ 330  [[ 341 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 330  CmpU  === _ 338 135  [[ 329 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 331  LShiftL  === _ 336 166  [[ 326 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 332  AddD  === _ 206 345  [[ 324 356 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 333  SqrtD  === 344 334  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 334  ConvI2D  === _ 335  [[ 333 368 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 335  AddI  === _ 338 78  [[ 328 334 338 358 364 243 391 400 431 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 336  ConvI2L  === _ 337  [[ 331 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 337  CastII  === 342 338  [[ 336 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 338  Phi  === 339 36 335  [[ 330 335 337 360 ]]  #int #tripcount !orig=243,[233]
 339  CountedLoop  === 339 220 344  [[ 338 339 340 341 345 ]] inner stride: 1 pre of N261 !orig=261,[224],[198]
 340  Phi  === 339 7 324  [[ 324 361 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 341  RangeCheck  === 339 329  [[ 342 349 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 342  IfTrue  === 341  [[ 324 337 343 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 343  CountedLoopEnd  === 342 327  [[ 344 362 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 344  IfTrue  === 343  [[ 333 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 345  Phi  === 339 214 333  [[ 332 ]]  #double !orig=241,232
 346  IfFalse  === 366  [[ 352 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 349  IfFalse  === 341  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 350  Region  === 350 349 351  [[ 350 308 356 360 361 ]]  !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 351  IfFalse  === 221  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 352  Region  === 352 346 353  [[ 352 321 354 431 358 ]]  !orig=[317]
 353  IfFalse  === 258  [[ 352 ]] #0 !orig=[317]
 354  Phi  === 352 324 201  [[ 298 312 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 356  Phi  === 350 332 205  [[ 313 ]]  #double
 358  Phi  === 352 335 211  [[ 296 318 ]]  #int
 360  Phi  === 350 338 243  [[ 314 ]]  #int
 361  Phi  === 350 340 237  [[ 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 362  IfFalse  === 343  [[ 366 ]] #0
 363  OpaqueZeroTripGuard  === _ 429  [[ 364 ]] 
 364  CmpI  === _ 335 363  [[ 365 ]] 
 365  Bool  === _ 364  [[ 366 ]] [lt]
 366  If  === 362 365  [[ 346 367 ]] P=0.999999, C=-1.000000
 367  IfTrue  === 366  [[ 395 368 ]] #1
 368  SqrtD  === 367 334  [[ 241 ]]  !orig=333,145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 369  AddI  === _ 36 78  [[ 384 ]] 
 370  Opaque1  === _ 428 135  [[ 328 ]] 
 371  ConL  === 0  [[ 385 ]]  #long:0
 372  ConL  === 0  [[ 379 386 ]]  #long:1
 375  ConvI2L  === _ 190  [[ 378 385 ]]  #long:minint..maxint
 376  ConvI2L  === _ 135  [[ 378 ]]  #long:minint..maxint
 377  ConvI2L  === _ 135  [[ 382 ]]  #long:minint..maxint
 378  SubL  === _ 376 375  [[ 379 ]] 
 379  DivL  === _ 378 372  [[ 381 ]] 
 380  ConL  === 0  [[ 381 ]]  #long:minint
 381  MaxL  === _ 379 380  [[ 382 ]] 
 382  MinL  === _ 381 377  [[ 383 ]] 
 383  ConvL2I  === _ 382  [[ 429 ]]  #int
 384  ConvI2L  === _ 369  [[ 389 ]]  #long:minint..maxint
 385  SubL  === _ 371 375  [[ 386 ]] 
 386  DivL  === _ 385 372  [[ 388 ]] 
 387  ConL  === 0  [[ 388 ]]  #long:maxint
 388  MinL  === _ 386 387  [[ 389 ]] 
 389  MaxL  === _ 388 384  [[ 390 ]] 
 390  ConvL2I  === _ 389  [[ 428 ]]  #int
 391  OpaqueLoopInit  === _ 335  [[ 408 418 ]] 
 392  CmpU  === _ 430 135  [[ 393 ]] 
 393  Bool  === _ 392  [[ 394 ]] [lt]
 394  OpaqueInitializedAssertionPredicate  === _ 393  [[ 395 ]] 
 395  RangeCheck  === 367 394  [[ 396 397 ]] P=0.999999, C=-1.000000
 396  IfFalse  === 395  [[ 399 ]] #0
 397  IfTrue  === 395  [[ 403 ]] #1
 398  Parm  === 3  [[ 399 ]] FramePtr
 399  Halt  === 396 1 1 398 1  [[ 0 ]] 
 400  CmpU  === _ 335 135  [[ 401 ]] 
 401  Bool  === _ 400  [[ 402 ]] [lt]
 402  OpaqueInitializedAssertionPredicate  === _ 401  [[ 403 ]] 
 403  RangeCheck  === 397 402  [[ 404 405 ]] P=0.999999, C=-1.000000
 404  IfFalse  === 403  [[ 407 ]] #0
 405  IfTrue  === 403  [[ 411 ]] #1
 406  Parm  === 3  [[ 407 ]] FramePtr
 407  Halt  === 404 1 1 406 1  [[ 0 ]] 
 408  CmpU  === _ 391 135  [[ 409 ]] 
 409  Bool  === _ 408  [[ 410 ]] [lt]
 410  Opaque4  === _ 409 78  [[ 411 ]] 
 411  RangeCheck  === 405 410  [[ 412 413 ]] P=0.999999, C=-1.000000
 412  IfFalse  === 411  [[ 415 ]] #0
 413  IfTrue  === 411  [[ 419 423 ]] #1
 414  Parm  === 3  [[ 415 ]] FramePtr
 415  Halt  === 412 1 1 414 1  [[ 0 ]] 
 416  OpaqueLoopStride  === _ 78  [[ 417 ]] 
 417  SubI  === _ 416 78  [[ 418 ]] 
 418  AddI  === _ 391 417  [[ 419 ]] 
 419  CastII  === 413 418  [[ 420 ]]  #int
 420  CmpU  === _ 419 135  [[ 421 ]] 
 421  Bool  === _ 420  [[ 422 ]] [lt]
 422  Opaque4  === _ 421 78  [[ 423 ]] 
 423  RangeCheck  === 413 422  [[ 424 425 ]] P=0.999999, C=-1.000000
 424  IfFalse  === 423  [[ 427 ]] #0
 425  IfTrue  === 423  [[ 260 ]] #1
 426  Parm  === 3  [[ 427 ]] FramePtr
 427  Halt  === 424 1 1 426 1  [[ 0 ]] 
 428  MinI  === _ 390 135  [[ 370 ]] 
 429  CastII  === 220 383  [[ 254 430 363 ]]  #int
 430  SubI  === _ 429 78  [[ 392 ]]  !orig=[374]
 431  Phi  === 352 335 211  [[ 432 ]]  #int !orig=[357]
 432  ConvI2D  === _ 431  [[ 323 ]]  #double !orig=[357]
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 179 161 399 407 415 427  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 371 372 373 380 387 433 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 398 406 414 426 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 340 81 16 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 338 84 369 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  47  ConP  === 0  [[ 48 84 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !orig=[193] !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 84 ]] #0 !orig=[276],[195] !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 202 157 157 203 203 262 134 134 283 284 284 325 326 326 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !orig=281,[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 293 335 369 410 416 417 422 221 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 51 6 81 8 9 (83 47 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 64 64 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 428 408 208 286 288 319 370 330 420 376 377 392 400 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 316  [[ 157 ]]  { N40:rawptr:BotPTR - - N316:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 308 6 153 8 9 (156 64 32 1 314 1 1 1 1 64 314 313 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 283 325 ]]  #long:16
 166  ConI  === 0  [[ 204 289 331 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 219 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 375 ]]  #int:0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 64 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 64 64 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 241 206  [[ 201 356 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 290 332 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 211  AddI  === _ 243 78  [[ 144 262 254 243 358 431 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 186 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 339 429 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 78  [[ 222 351 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 310  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 236  Phi  === 226 7 312  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 324 201  [[ 361 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 368 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 335 211  [[ 211 360 213 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 429  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 353 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 425 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] inner stride: 1 main of N261 strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 64 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 282  StoreD  === 300 298 283 290  [[ 298 312 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 283  AddP  === _ 64 284 162  [[ 282 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 284  AddP  === _ 64 64 289  [[ 283 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 285  Bool  === _ 286  [[ 301 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 286  CmpI  === _ 293 135  [[ 285 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 287  Bool  === _ 288  [[ 299 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 288  CmpU  === _ 296 135  [[ 287 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 289  LShiftL  === _ 294 166  [[ 284 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 290  AddD  === _ 206 303  [[ 282 313 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 291  SqrtD  === 302 292  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 292  ConvI2D  === _ 293  [[ 291 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 293  AddI  === _ 296 78  [[ 286 292 296 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 294  ConvI2L  === _ 295  [[ 289 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 295  CastII  === 300 296  [[ 294 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 296  Phi  === 297 358 293  [[ 288 293 295 314 ]]  #int #tripcount !orig=243,[233]
 297  CountedLoop  === 297 322 302  [[ 296 297 298 299 303 ]] inner stride: 1 post of N261 !orig=261,[224],[198]
 298  Phi  === 297 354 282  [[ 282 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 299  RangeCheck  === 297 287  [[ 300 307 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 300  IfTrue  === 299  [[ 282 295 301 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 301  CountedLoopEnd  === 300 285  [[ 302 304 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 302  IfTrue  === 301  [[ 291 297 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 303  Phi  === 297 323 291  [[ 290 ]]  #double !orig=241,232
 304  IfFalse  === 301  [[ 310 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 307  IfFalse  === 299  [[ 308 ]] #0 !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 308  Region  === 308 307 350  [[ 308 157 313 314 316 ]]  !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 310  Region  === 310 304 311  [[ 310 226 312 ]]  !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 311  IfFalse  === 321  [[ 310 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 312  Phi  === 310 282 354  [[ 236 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 313  Phi  === 308 290 356  [[ 157 ]]  #double
 314  Phi  === 308 296 360  [[ 157 157 ]]  #int
 316  Phi  === 308 298 361  [[ 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 318  OpaqueZeroTripGuard  === _ 358  [[ 319 ]] 
 319  CmpI  === _ 318 135  [[ 320 ]] 
 320  Bool  === _ 319  [[ 321 ]] [lt]
 321  If  === 352 320  [[ 311 322 ]] P=0.500000, C=-1.000000
 322  IfTrue  === 321  [[ 297 323 ]] #1
 323  SqrtD  === 322 432  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 324  StoreD  === 342 340 325 332  [[ 340 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 325  AddP  === _ 64 326 162  [[ 324 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 326  AddP  === _ 64 64 331  [[ 325 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 327  Bool  === _ 328  [[ 343 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 328  CmpI  === _ 335 370  [[ 327 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 329  Bool  === _ 330  [[ 341 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 330  CmpU  === _ 338 135  [[ 329 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 331  LShiftL  === _ 336 166  [[ 326 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 332  AddD  === _ 206 345  [[ 324 356 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 333  SqrtD  === 344 334  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 334  ConvI2D  === _ 335  [[ 333 368 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 335  AddI  === _ 338 78  [[ 328 334 338 358 364 243 391 400 431 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 336  ConvI2L  === _ 337  [[ 331 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 337  CastII  === 342 338  [[ 336 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 338  Phi  === 339 36 335  [[ 330 335 337 360 ]]  #int #tripcount !orig=243,[233]
 339  CountedLoop  === 339 220 344  [[ 338 339 340 341 345 ]] inner stride: 1 pre of N261 !orig=261,[224],[198]
 340  Phi  === 339 7 324  [[ 324 361 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 341  RangeCheck  === 339 329  [[ 342 349 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 342  IfTrue  === 341  [[ 324 337 343 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 343  CountedLoopEnd  === 342 327  [[ 344 362 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 344  IfTrue  === 343  [[ 333 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 345  Phi  === 339 214 333  [[ 332 ]]  #double !orig=241,232
 346  IfFalse  === 366  [[ 352 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 349  IfFalse  === 341  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 350  Region  === 350 349 351  [[ 350 308 356 360 361 ]]  !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 351  IfFalse  === 221  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 352  Region  === 352 346 353  [[ 352 321 354 431 358 ]]  !orig=[317]
 353  IfFalse  === 258  [[ 352 ]] #0 !orig=[317]
 354  Phi  === 352 324 201  [[ 298 312 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 356  Phi  === 350 332 205  [[ 313 ]]  #double
 358  Phi  === 352 335 211  [[ 296 318 ]]  #int
 360  Phi  === 350 338 243  [[ 314 ]]  #int
 361  Phi  === 350 340 237  [[ 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 362  IfFalse  === 343  [[ 366 ]] #0
 363  OpaqueZeroTripGuard  === _ 429  [[ 364 ]] 
 364  CmpI  === _ 335 363  [[ 365 ]] 
 365  Bool  === _ 364  [[ 366 ]] [lt]
 366  If  === 362 365  [[ 346 367 ]] P=0.999999, C=-1.000000
 367  IfTrue  === 366  [[ 395 368 ]] #1
 368  SqrtD  === 367 334  [[ 241 ]]  !orig=333,145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 369  AddI  === _ 36 78  [[ 384 ]] 
 370  Opaque1  === _ 428 135  [[ 328 ]] 
 371  ConL  === 0  [[ 385 ]]  #long:0
 372  ConL  === 0  [[ 379 386 ]]  #long:1
 375  ConvI2L  === _ 190  [[ 378 385 ]]  #long:minint..maxint
 376  ConvI2L  === _ 135  [[ 378 ]]  #long:minint..maxint
 377  ConvI2L  === _ 135  [[ 382 ]]  #long:minint..maxint
 378  SubL  === _ 376 375  [[ 379 ]] 
 379  DivL  === _ 378 372  [[ 381 ]] 
 380  ConL  === 0  [[ 381 ]]  #long:minint
 381  MaxL  === _ 379 380  [[ 382 ]] 
 382  MinL  === _ 381 377  [[ 383 ]] 
 383  ConvL2I  === _ 382  [[ 429 ]]  #int
 384  ConvI2L  === _ 369  [[ 389 ]]  #long:minint..maxint
 385  SubL  === _ 371 375  [[ 386 ]] 
 386  DivL  === _ 385 372  [[ 388 ]] 
 387  ConL  === 0  [[ 388 ]]  #long:maxint
 388  MinL  === _ 386 387  [[ 389 ]] 
 389  MaxL  === _ 388 384  [[ 390 ]] 
 390  ConvL2I  === _ 389  [[ 428 ]]  #int
 391  OpaqueLoopInit  === _ 335  [[ 408 418 ]] 
 392  CmpU  === _ 434 135  [[ 393 ]] 
 393  Bool  === _ 392  [[ 394 ]] [lt]
 394  OpaqueInitializedAssertionPredicate  === _ 393  [[ 395 ]] 
 395  RangeCheck  === 367 394  [[ 396 397 ]] P=0.999999, C=-1.000000
 396  IfFalse  === 395  [[ 399 ]] #0
 397  IfTrue  === 395  [[ 403 ]] #1
 398  Parm  === 3  [[ 399 ]] FramePtr
 399  Halt  === 396 1 1 398 1  [[ 0 ]] 
 400  CmpU  === _ 335 135  [[ 401 ]] 
 401  Bool  === _ 400  [[ 402 ]] [lt]
 402  OpaqueInitializedAssertionPredicate  === _ 401  [[ 403 ]] 
 403  RangeCheck  === 397 402  [[ 404 405 ]] P=0.999999, C=-1.000000
 404  IfFalse  === 403  [[ 407 ]] #0
 405  IfTrue  === 403  [[ 411 ]] #1
 406  Parm  === 3  [[ 407 ]] FramePtr
 407  Halt  === 404 1 1 406 1  [[ 0 ]] 
 408  CmpU  === _ 391 135  [[ 409 ]] 
 409  Bool  === _ 408  [[ 410 ]] [lt]
 410  Opaque4  === _ 409 78  [[ 411 ]] 
 411  RangeCheck  === 405 410  [[ 412 413 ]] P=0.999999, C=-1.000000
 412  IfFalse  === 411  [[ 415 ]] #0
 413  IfTrue  === 411  [[ 419 423 ]] #1
 414  Parm  === 3  [[ 415 ]] FramePtr
 415  Halt  === 412 1 1 414 1  [[ 0 ]] 
 416  OpaqueLoopStride  === _ 78  [[ 417 ]] 
 417  SubI  === _ 416 78  [[ 418 ]] 
 418  AddI  === _ 391 417  [[ 419 ]] 
 419  CastII  === 413 418  [[ 420 ]]  #int
 420  CmpU  === _ 419 135  [[ 421 ]] 
 421  Bool  === _ 420  [[ 422 ]] [lt]
 422  Opaque4  === _ 421 78  [[ 423 ]] 
 423  RangeCheck  === 413 422  [[ 424 425 ]] P=0.999999, C=-1.000000
 424  IfFalse  === 423  [[ 427 ]] #0
 425  IfTrue  === 423  [[ 260 ]] #1
 426  Parm  === 3  [[ 427 ]] FramePtr
 427  Halt  === 424 1 1 426 1  [[ 0 ]] 
 428  MinI  === _ 390 135  [[ 370 ]] 
 429  CastII  === 220 383  [[ 254 434 363 ]]  #int
 431  Phi  === 352 335 211  [[ 432 ]]  #int !orig=[357]
 432  ConvI2D  === _ 431  [[ 323 ]]  #double !orig=[357]
 433  ConI  === 0  [[ 434 ]]  #int:-1
 434  AddI  === _ 429 433  [[ 392 ]]  !orig=[430],[374]
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 179 161 399 407 415 427  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 371 372 373 380 387 433 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 398 406 414 426 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 340 81 16 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 ]] FramePtr !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 338 84 369 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  47  ConP  === 0  [[ 48 84 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !orig=[193] !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 84 ]] #0 !orig=[276],[195] !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 202 157 157 203 203 262 134 134 283 284 284 325 326 326 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !orig=281,[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 293 335 369 410 416 417 422 221 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 51 6 81 8 9 (83 47 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 64 64 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 428 408 208 286 288 319 370 330 420 376 377 392 400 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 316  [[ 157 ]]  { N40:rawptr:BotPTR - - N316:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 308 6 153 8 9 (156 64 32 1 314 1 1 1 1 64 314 313 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 283 325 ]]  #long:16
 166  ConI  === 0  [[ 204 289 331 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 219 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 375 ]]  #int:0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 64 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 64 64 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 241 206  [[ 201 356 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 290 332 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 211  AddI  === _ 243 78  [[ 144 262 254 243 358 431 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 186 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 78  [[ 222 351 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 310  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 236  Phi  === 226 7 312  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 324 201  [[ 361 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 368 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 335 211  [[ 211 360 213 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 383  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 353 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 425 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] inner stride: 1 main of N261 strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 64 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 282  StoreD  === 300 298 283 290  [[ 298 312 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 283  AddP  === _ 64 284 162  [[ 282 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 284  AddP  === _ 64 64 289  [[ 283 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 285  Bool  === _ 286  [[ 301 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 286  CmpI  === _ 293 135  [[ 285 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 287  Bool  === _ 288  [[ 299 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 288  CmpU  === _ 296 135  [[ 287 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 289  LShiftL  === _ 294 166  [[ 284 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 290  AddD  === _ 206 303  [[ 282 313 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 291  SqrtD  === 302 292  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 292  ConvI2D  === _ 293  [[ 291 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 293  AddI  === _ 296 78  [[ 286 292 296 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 294  ConvI2L  === _ 295  [[ 289 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 295  CastII  === 300 296  [[ 294 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 296  Phi  === 297 358 293  [[ 288 293 295 314 ]]  #int #tripcount !orig=243,[233]
 297  CountedLoop  === 297 322 302  [[ 296 297 298 299 303 ]] inner stride: 1 post of N261 !orig=261,[224],[198]
 298  Phi  === 297 354 282  [[ 282 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 299  RangeCheck  === 297 287  [[ 300 307 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 300  IfTrue  === 299  [[ 282 295 301 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 301  CountedLoopEnd  === 300 285  [[ 302 304 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 302  IfTrue  === 301  [[ 291 297 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 303  Phi  === 297 323 291  [[ 290 ]]  #double !orig=241,232
 304  IfFalse  === 301  [[ 310 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 307  IfFalse  === 299  [[ 308 ]] #0 !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 308  Region  === 308 307 350  [[ 308 157 313 314 316 ]]  !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 310  Region  === 310 304 311  [[ 310 226 312 ]]  !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 311  IfFalse  === 321  [[ 310 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 312  Phi  === 310 282 354  [[ 236 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 313  Phi  === 308 290 356  [[ 157 ]]  #double
 314  Phi  === 308 296 360  [[ 157 157 ]]  #int
 316  Phi  === 308 298 361  [[ 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 318  OpaqueZeroTripGuard  === _ 358  [[ 319 ]] 
 319  CmpI  === _ 318 135  [[ 320 ]] 
 320  Bool  === _ 319  [[ 321 ]] [lt]
 321  If  === 352 320  [[ 311 322 ]] P=0.500000, C=-1.000000
 322  IfTrue  === 321  [[ 297 323 ]] #1
 323  SqrtD  === 322 432  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 324  StoreD  === 342 340 325 332  [[ 340 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 325  AddP  === _ 64 326 162  [[ 324 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 326  AddP  === _ 64 64 331  [[ 325 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 327  Bool  === _ 328  [[ 343 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 328  CmpI  === _ 335 370  [[ 327 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 329  Bool  === _ 330  [[ 341 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 330  CmpU  === _ 338 135  [[ 329 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 331  LShiftL  === _ 336 166  [[ 326 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 332  AddD  === _ 206 345  [[ 324 356 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 333  SqrtD  === 344 334  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 334  ConvI2D  === _ 335  [[ 333 368 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 335  AddI  === _ 338 78  [[ 328 334 338 358 364 243 391 400 431 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 336  ConvI2L  === _ 337  [[ 331 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 337  CastII  === 342 338  [[ 336 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 338  Phi  === 339 36 335  [[ 330 335 337 360 ]]  #int #tripcount !orig=243,[233]
 339  CountedLoop  === 339 220 344  [[ 338 339 340 341 345 ]] inner stride: 1 pre of N261 !orig=261,[224],[198]
 340  Phi  === 339 7 324  [[ 324 361 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 341  RangeCheck  === 339 329  [[ 342 349 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 342  IfTrue  === 341  [[ 324 337 343 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 343  CountedLoopEnd  === 342 327  [[ 344 362 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 344  IfTrue  === 343  [[ 333 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 345  Phi  === 339 214 333  [[ 332 ]]  #double !orig=241,232
 346  IfFalse  === 366  [[ 352 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 349  IfFalse  === 341  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 350  Region  === 350 349 351  [[ 350 308 356 360 361 ]]  !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 351  IfFalse  === 221  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 352  Region  === 352 346 353  [[ 352 321 354 431 358 ]]  !orig=[317]
 353  IfFalse  === 258  [[ 352 ]] #0 !orig=[317]
 354  Phi  === 352 324 201  [[ 298 312 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 356  Phi  === 350 332 205  [[ 313 ]]  #double
 358  Phi  === 352 335 211  [[ 296 318 ]]  #int
 360  Phi  === 350 338 243  [[ 314 ]]  #int
 361  Phi  === 350 340 237  [[ 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 362  IfFalse  === 343  [[ 366 ]] #0
 363  OpaqueZeroTripGuard  === _ 383  [[ 364 ]] 
 364  CmpI  === _ 335 363  [[ 365 ]] 
 365  Bool  === _ 364  [[ 366 ]] [lt]
 366  If  === 362 365  [[ 346 367 ]] P=0.999999, C=-1.000000
 367  IfTrue  === 366  [[ 395 368 ]] #1
 368  SqrtD  === 367 334  [[ 241 ]]  !orig=333,145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 369  AddI  === _ 36 78  [[ 384 ]] 
 370  Opaque1  === _ 428 135  [[ 328 ]] 
 371  ConL  === 0  [[ 385 ]]  #long:0
 372  ConL  === 0  [[ 379 386 ]]  #long:1
 375  ConvI2L  === _ 190  [[ 378 385 ]]  #long:minint..maxint
 376  ConvI2L  === _ 135  [[ 378 ]]  #long:minint..maxint
 377  ConvI2L  === _ 135  [[ 382 ]]  #long:minint..maxint
 378  SubL  === _ 376 375  [[ 379 ]] 
 379  DivL  === _ 378 372  [[ 381 ]] 
 380  ConL  === 0  [[ 381 ]]  #long:minint
 381  MaxL  === _ 379 380  [[ 382 ]] 
 382  MinL  === _ 381 377  [[ 383 ]] 
 383  ConvL2I  === _ 382  [[ 254 363 434 ]]  #int !orig=[429]
 384  ConvI2L  === _ 369  [[ 389 ]]  #long:minint..maxint
 385  SubL  === _ 371 375  [[ 386 ]] 
 386  DivL  === _ 385 372  [[ 388 ]] 
 387  ConL  === 0  [[ 388 ]]  #long:maxint
 388  MinL  === _ 386 387  [[ 389 ]] 
 389  MaxL  === _ 388 384  [[ 390 ]] 
 390  ConvL2I  === _ 389  [[ 428 ]]  #int
 391  OpaqueLoopInit  === _ 335  [[ 408 418 ]] 
 392  CmpU  === _ 434 135  [[ 393 ]] 
 393  Bool  === _ 392  [[ 394 ]] [lt]
 394  OpaqueInitializedAssertionPredicate  === _ 393  [[ 395 ]] 
 395  RangeCheck  === 367 394  [[ 396 397 ]] P=0.999999, C=-1.000000
 396  IfFalse  === 395  [[ 399 ]] #0
 397  IfTrue  === 395  [[ 403 ]] #1
 398  Parm  === 3  [[ 399 ]] FramePtr
 399  Halt  === 396 1 1 398 1  [[ 0 ]] 
 400  CmpU  === _ 335 135  [[ 401 ]] 
 401  Bool  === _ 400  [[ 402 ]] [lt]
 402  OpaqueInitializedAssertionPredicate  === _ 401  [[ 403 ]] 
 403  RangeCheck  === 397 402  [[ 404 405 ]] P=0.999999, C=-1.000000
 404  IfFalse  === 403  [[ 407 ]] #0
 405  IfTrue  === 403  [[ 411 ]] #1
 406  Parm  === 3  [[ 407 ]] FramePtr
 407  Halt  === 404 1 1 406 1  [[ 0 ]] 
 408  CmpU  === _ 391 135  [[ 409 ]] 
 409  Bool  === _ 408  [[ 410 ]] [lt]
 410  Opaque4  === _ 409 78  [[ 411 ]] 
 411  RangeCheck  === 405 410  [[ 412 413 ]] P=0.999999, C=-1.000000
 412  IfFalse  === 411  [[ 415 ]] #0
 413  IfTrue  === 411  [[ 419 423 ]] #1
 414  Parm  === 3  [[ 415 ]] FramePtr
 415  Halt  === 412 1 1 414 1  [[ 0 ]] 
 416  OpaqueLoopStride  === _ 78  [[ 417 ]] 
 417  SubI  === _ 416 78  [[ 418 ]] 
 418  AddI  === _ 391 417  [[ 419 ]] 
 419  CastII  === 413 418  [[ 420 ]]  #int
 420  CmpU  === _ 419 135  [[ 421 ]] 
 421  Bool  === _ 420  [[ 422 ]] [lt]
 422  Opaque4  === _ 421 78  [[ 423 ]] 
 423  RangeCheck  === 413 422  [[ 424 425 ]] P=0.999999, C=-1.000000
 424  IfFalse  === 423  [[ 427 ]] #0
 425  IfTrue  === 423  [[ 260 ]] #1
 426  Parm  === 3  [[ 427 ]] FramePtr
 427  Halt  === 424 1 1 426 1  [[ 0 ]] 
 428  MinI  === _ 390 135  [[ 370 ]] 
 431  Phi  === 352 335 211  [[ 432 ]]  #int !orig=[357]
 432  ConvI2D  === _ 431  [[ 323 ]]  #double !orig=[357]
 433  ConI  === 0  [[ 434 ]]  #int:-1
 434  AddI  === _ 383 433  [[ 392 ]]  !orig=[430],[374]
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 179 161 399 407 415 427  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 371 372 373 380 387 433 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 398 406 414 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 340 81 16 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 427 ]] FramePtr !orig=[426] !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 338 84 369 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  47  ConP  === 0  [[ 48 84 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !orig=[193] !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 84 ]] #0 !orig=[276],[195] !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 202 157 157 203 203 262 134 134 283 284 284 325 326 326 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !orig=281,[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 293 335 369 410 416 417 422 221 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 51 6 81 8 9 (83 47 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 64 64 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 428 408 208 286 288 319 370 330 420 376 377 392 400 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 316  [[ 157 ]]  { N40:rawptr:BotPTR - - N316:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 308 6 153 8 9 (156 64 32 1 314 1 1 1 1 64 314 313 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 283 325 ]]  #long:16
 166  ConI  === 0  [[ 204 289 331 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 219 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 375 ]]  #int:0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 64 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 64 64 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 241 206  [[ 201 356 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 290 332 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 211  AddI  === _ 243 78  [[ 144 262 254 243 358 431 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 186 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 78  [[ 222 351 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 310  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 236  Phi  === 226 7 312  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 324 201  [[ 361 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 368 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 335 211  [[ 211 360 213 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 383  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 353 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 425 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] inner stride: 1 main of N261 strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 64 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 282  StoreD  === 300 298 283 290  [[ 298 312 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 283  AddP  === _ 64 284 162  [[ 282 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 284  AddP  === _ 64 64 289  [[ 283 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 285  Bool  === _ 286  [[ 301 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 286  CmpI  === _ 293 135  [[ 285 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 287  Bool  === _ 288  [[ 299 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 288  CmpU  === _ 296 135  [[ 287 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 289  LShiftL  === _ 294 166  [[ 284 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 290  AddD  === _ 206 303  [[ 282 313 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 291  SqrtD  === 302 292  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 292  ConvI2D  === _ 293  [[ 291 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 293  AddI  === _ 296 78  [[ 286 292 296 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 294  ConvI2L  === _ 295  [[ 289 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 295  CastII  === 300 296  [[ 294 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 296  Phi  === 297 358 293  [[ 288 293 295 314 ]]  #int #tripcount !orig=243,[233]
 297  CountedLoop  === 297 322 302  [[ 296 297 298 299 303 ]] inner stride: 1 post of N261 !orig=261,[224],[198]
 298  Phi  === 297 354 282  [[ 282 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 299  RangeCheck  === 297 287  [[ 300 307 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 300  IfTrue  === 299  [[ 282 295 301 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 301  CountedLoopEnd  === 300 285  [[ 302 304 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 302  IfTrue  === 301  [[ 291 297 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 303  Phi  === 297 323 291  [[ 290 ]]  #double !orig=241,232
 304  IfFalse  === 301  [[ 310 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 307  IfFalse  === 299  [[ 308 ]] #0 !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 308  Region  === 308 307 350  [[ 308 157 313 314 316 ]]  !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 310  Region  === 310 304 311  [[ 310 226 312 ]]  !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 311  IfFalse  === 321  [[ 310 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 312  Phi  === 310 282 354  [[ 236 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 313  Phi  === 308 290 356  [[ 157 ]]  #double
 314  Phi  === 308 296 360  [[ 157 157 ]]  #int
 316  Phi  === 308 298 361  [[ 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 318  OpaqueZeroTripGuard  === _ 358  [[ 319 ]] 
 319  CmpI  === _ 318 135  [[ 320 ]] 
 320  Bool  === _ 319  [[ 321 ]] [lt]
 321  If  === 352 320  [[ 311 322 ]] P=0.500000, C=-1.000000
 322  IfTrue  === 321  [[ 297 323 ]] #1
 323  SqrtD  === 322 432  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 324  StoreD  === 342 340 325 332  [[ 340 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 325  AddP  === _ 64 326 162  [[ 324 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 326  AddP  === _ 64 64 331  [[ 325 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 327  Bool  === _ 328  [[ 343 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 328  CmpI  === _ 335 370  [[ 327 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 329  Bool  === _ 330  [[ 341 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 330  CmpU  === _ 338 135  [[ 329 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 331  LShiftL  === _ 336 166  [[ 326 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 332  AddD  === _ 206 345  [[ 324 356 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 333  SqrtD  === 344 334  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 334  ConvI2D  === _ 335  [[ 333 368 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 335  AddI  === _ 338 78  [[ 328 334 338 358 364 243 391 400 431 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 336  ConvI2L  === _ 337  [[ 331 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 337  CastII  === 342 338  [[ 336 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 338  Phi  === 339 36 335  [[ 330 335 337 360 ]]  #int #tripcount !orig=243,[233]
 339  CountedLoop  === 339 220 344  [[ 338 339 340 341 345 ]] inner stride: 1 pre of N261 !orig=261,[224],[198]
 340  Phi  === 339 7 324  [[ 324 361 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 341  RangeCheck  === 339 329  [[ 342 349 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 342  IfTrue  === 341  [[ 324 337 343 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 343  CountedLoopEnd  === 342 327  [[ 344 362 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 344  IfTrue  === 343  [[ 333 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 345  Phi  === 339 214 333  [[ 332 ]]  #double !orig=241,232
 346  IfFalse  === 366  [[ 352 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 349  IfFalse  === 341  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 350  Region  === 350 349 351  [[ 350 308 356 360 361 ]]  !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 351  IfFalse  === 221  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 352  Region  === 352 346 353  [[ 352 321 354 431 358 ]]  !orig=[317]
 353  IfFalse  === 258  [[ 352 ]] #0 !orig=[317]
 354  Phi  === 352 324 201  [[ 298 312 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 356  Phi  === 350 332 205  [[ 313 ]]  #double
 358  Phi  === 352 335 211  [[ 296 318 ]]  #int
 360  Phi  === 350 338 243  [[ 314 ]]  #int
 361  Phi  === 350 340 237  [[ 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 362  IfFalse  === 343  [[ 366 ]] #0
 363  OpaqueZeroTripGuard  === _ 383  [[ 364 ]] 
 364  CmpI  === _ 335 363  [[ 365 ]] 
 365  Bool  === _ 364  [[ 366 ]] [lt]
 366  If  === 362 365  [[ 346 367 ]] P=0.999999, C=-1.000000
 367  IfTrue  === 366  [[ 395 368 ]] #1
 368  SqrtD  === 367 334  [[ 241 ]]  !orig=333,145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 369  AddI  === _ 36 78  [[ 384 ]] 
 370  Opaque1  === _ 428 135  [[ 328 ]] 
 371  ConL  === 0  [[ 385 ]]  #long:0
 372  ConL  === 0  [[ 379 386 ]]  #long:1
 375  ConvI2L  === _ 190  [[ 378 385 ]]  #long:minint..maxint
 376  ConvI2L  === _ 135  [[ 378 ]]  #long:minint..maxint
 377  ConvI2L  === _ 135  [[ 382 ]]  #long:minint..maxint
 378  SubL  === _ 376 375  [[ 379 ]] 
 379  DivL  === _ 378 372  [[ 381 ]] 
 380  ConL  === 0  [[ 381 ]]  #long:minint
 381  MaxL  === _ 379 380  [[ 382 ]] 
 382  MinL  === _ 381 377  [[ 383 ]] 
 383  ConvL2I  === _ 382  [[ 254 363 434 ]]  #int !orig=[429]
 384  ConvI2L  === _ 369  [[ 389 ]]  #long:minint..maxint
 385  SubL  === _ 371 375  [[ 386 ]] 
 386  DivL  === _ 385 372  [[ 388 ]] 
 387  ConL  === 0  [[ 388 ]]  #long:maxint
 388  MinL  === _ 386 387  [[ 389 ]] 
 389  MaxL  === _ 388 384  [[ 390 ]] 
 390  ConvL2I  === _ 389  [[ 428 ]]  #int
 391  OpaqueLoopInit  === _ 335  [[ 408 418 ]] 
 392  CmpU  === _ 434 135  [[ 393 ]] 
 393  Bool  === _ 392  [[ 394 ]] [lt]
 394  OpaqueInitializedAssertionPredicate  === _ 393  [[ 395 ]] 
 395  RangeCheck  === 367 394  [[ 396 397 ]] P=0.999999, C=-1.000000
 396  IfFalse  === 395  [[ 399 ]] #0
 397  IfTrue  === 395  [[ 403 ]] #1
 398  Parm  === 3  [[ 399 ]] FramePtr
 399  Halt  === 396 1 1 398 1  [[ 0 ]] 
 400  CmpU  === _ 335 135  [[ 401 ]] 
 401  Bool  === _ 400  [[ 402 ]] [lt]
 402  OpaqueInitializedAssertionPredicate  === _ 401  [[ 403 ]] 
 403  RangeCheck  === 397 402  [[ 404 405 ]] P=0.999999, C=-1.000000
 404  IfFalse  === 403  [[ 407 ]] #0
 405  IfTrue  === 403  [[ 411 ]] #1
 406  Parm  === 3  [[ 407 ]] FramePtr
 407  Halt  === 404 1 1 406 1  [[ 0 ]] 
 408  CmpU  === _ 391 135  [[ 409 ]] 
 409  Bool  === _ 408  [[ 410 ]] [lt]
 410  Opaque4  === _ 409 78  [[ 411 ]] 
 411  RangeCheck  === 405 410  [[ 412 413 ]] P=0.999999, C=-1.000000
 412  IfFalse  === 411  [[ 415 ]] #0
 413  IfTrue  === 411  [[ 419 423 ]] #1
 414  Parm  === 3  [[ 415 ]] FramePtr
 415  Halt  === 412 1 1 414 1  [[ 0 ]] 
 416  OpaqueLoopStride  === _ 78  [[ 417 ]] 
 417  SubI  === _ 416 78  [[ 418 ]] 
 418  AddI  === _ 391 417  [[ 419 ]] 
 419  CastII  === 413 418  [[ 420 ]]  #int
 420  CmpU  === _ 419 135  [[ 421 ]] 
 421  Bool  === _ 420  [[ 422 ]] [lt]
 422  Opaque4  === _ 421 78  [[ 423 ]] 
 423  RangeCheck  === 413 422  [[ 424 425 ]] P=0.999999, C=-1.000000
 424  IfFalse  === 423  [[ 427 ]] #0
 425  IfTrue  === 423  [[ 260 ]] #1
 427  Halt  === 424 1 1 8 1  [[ 0 ]] 
 428  MinI  === _ 390 135  [[ 370 ]] 
 431  Phi  === 352 335 211  [[ 432 ]]  #int !orig=[357]
 432  ConvI2D  === _ 431  [[ 323 ]]  #double !orig=[357]
 433  ConI  === 0  [[ 434 ]]  #int:-1
 434  AddI  === _ 383 433  [[ 392 ]]  !orig=[430],[374]
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 179 161 399 407 415 427  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 371 372 373 380 387 433 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 398 406 414 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 340 81 16 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 427 ]] FramePtr !orig=[426] !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 338 84 369 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  47  ConP  === 0  [[ 48 84 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !orig=[193] !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 84 ]] #0 !orig=[276],[195] !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 202 157 157 203 203 262 134 134 283 284 284 325 326 326 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !orig=281,[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 293 335 369 410 416 417 422 221 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 51 6 81 8 9 (83 47 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 64 64 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 428 408 208 286 288 319 370 330 420 376 377 392 400 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 316  [[ 157 ]]  { N40:rawptr:BotPTR - - N316:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 308 6 153 8 9 (156 64 32 1 314 1 1 1 1 64 314 313 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 283 325 ]]  #long:16
 166  ConI  === 0  [[ 204 289 331 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 219 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 375 ]]  #int:0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 64 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 64 64 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 241 206  [[ 201 356 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 290 332 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 211  AddI  === _ 243 78  [[ 144 262 254 243 358 431 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 186 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 78  [[ 222 351 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 310  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 236  Phi  === 226 7 312  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 324 201  [[ 361 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 368 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 335 211  [[ 211 360 213 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 383  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 353 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 425 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] inner stride: 1 main of N261 strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 64 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 282  StoreD  === 300 298 283 290  [[ 298 312 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 283  AddP  === _ 64 284 162  [[ 282 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 284  AddP  === _ 64 64 289  [[ 283 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 285  Bool  === _ 286  [[ 301 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 286  CmpI  === _ 293 135  [[ 285 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 287  Bool  === _ 288  [[ 299 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 288  CmpU  === _ 296 135  [[ 287 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 289  LShiftL  === _ 294 166  [[ 284 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 290  AddD  === _ 206 303  [[ 282 313 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 291  SqrtD  === 302 292  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 292  ConvI2D  === _ 293  [[ 291 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 293  AddI  === _ 296 78  [[ 286 292 296 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 294  ConvI2L  === _ 295  [[ 289 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 295  CastII  === 300 296  [[ 294 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 296  Phi  === 297 358 293  [[ 288 293 295 314 ]]  #int #tripcount !orig=243,[233]
 297  CountedLoop  === 297 322 302  [[ 296 297 298 299 303 ]] inner stride: 1 post of N261 !orig=261,[224],[198]
 298  Phi  === 297 354 282  [[ 282 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 299  RangeCheck  === 297 287  [[ 300 307 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 300  IfTrue  === 299  [[ 282 295 301 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 301  CountedLoopEnd  === 300 285  [[ 302 304 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 302  IfTrue  === 301  [[ 291 297 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 303  Phi  === 297 323 291  [[ 290 ]]  #double !orig=241,232
 304  IfFalse  === 301  [[ 310 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 307  IfFalse  === 299  [[ 308 ]] #0 !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 308  Region  === 308 307 350  [[ 308 157 313 314 316 ]]  !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 310  Region  === 310 304 311  [[ 310 226 312 ]]  !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 311  IfFalse  === 321  [[ 310 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 312  Phi  === 310 282 354  [[ 236 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 313  Phi  === 308 290 356  [[ 157 ]]  #double
 314  Phi  === 308 296 360  [[ 157 157 ]]  #int
 316  Phi  === 308 298 361  [[ 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 318  OpaqueZeroTripGuard  === _ 358  [[ 319 ]] 
 319  CmpI  === _ 318 135  [[ 320 ]] 
 320  Bool  === _ 319  [[ 321 ]] [lt]
 321  If  === 352 320  [[ 311 322 ]] P=0.500000, C=-1.000000
 322  IfTrue  === 321  [[ 297 323 ]] #1
 323  SqrtD  === 322 432  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 324  StoreD  === 342 340 325 332  [[ 340 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 325  AddP  === _ 64 326 162  [[ 324 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 326  AddP  === _ 64 64 331  [[ 325 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 327  Bool  === _ 328  [[ 343 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 328  CmpI  === _ 335 370  [[ 327 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 329  Bool  === _ 330  [[ 341 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 330  CmpU  === _ 338 135  [[ 329 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 331  LShiftL  === _ 336 166  [[ 326 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 332  AddD  === _ 206 345  [[ 324 356 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 333  SqrtD  === 344 334  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 334  ConvI2D  === _ 335  [[ 333 368 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 335  AddI  === _ 338 78  [[ 328 334 338 358 364 243 391 400 431 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 336  ConvI2L  === _ 337  [[ 331 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 337  CastII  === 342 338  [[ 336 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 338  Phi  === 339 36 335  [[ 330 335 337 360 ]]  #int #tripcount !orig=243,[233]
 339  CountedLoop  === 339 220 344  [[ 338 339 340 341 345 ]] inner stride: 1 pre of N261 !orig=261,[224],[198]
 340  Phi  === 339 7 324  [[ 324 361 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 341  RangeCheck  === 339 329  [[ 342 349 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 342  IfTrue  === 341  [[ 324 337 343 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 343  CountedLoopEnd  === 342 327  [[ 344 362 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 344  IfTrue  === 343  [[ 333 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 345  Phi  === 339 214 333  [[ 332 ]]  #double !orig=241,232
 346  IfFalse  === 366  [[ 352 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 349  IfFalse  === 341  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 350  Region  === 350 349 351  [[ 350 308 356 360 361 ]]  !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 351  IfFalse  === 221  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 352  Region  === 352 346 353  [[ 352 321 354 431 358 ]]  !orig=[317]
 353  IfFalse  === 258  [[ 352 ]] #0 !orig=[317]
 354  Phi  === 352 324 201  [[ 298 312 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 356  Phi  === 350 332 205  [[ 313 ]]  #double
 358  Phi  === 352 335 211  [[ 296 318 ]]  #int
 360  Phi  === 350 338 243  [[ 314 ]]  #int
 361  Phi  === 350 340 237  [[ 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 362  IfFalse  === 343  [[ 366 ]] #0
 363  OpaqueZeroTripGuard  === _ 383  [[ 364 ]] 
 364  CmpI  === _ 335 363  [[ 365 ]] 
 365  Bool  === _ 364  [[ 366 ]] [lt]
 366  If  === 362 365  [[ 346 367 ]] P=0.999999, C=-1.000000
 367  IfTrue  === 366  [[ 395 368 ]] #1
 368  SqrtD  === 367 334  [[ 241 ]]  !orig=333,145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 369  AddI  === _ 36 78  [[ 384 ]] 
 370  Opaque1  === _ 428 135  [[ 328 ]] 
 371  ConL  === 0  [[ 385 ]]  #long:0
 372  ConL  === 0  [[ 379 386 ]]  #long:1
 375  ConvI2L  === _ 190  [[ 378 385 ]]  #long:minint..maxint
 376  ConvI2L  === _ 135  [[ 378 ]]  #long:minint..maxint
 377  ConvI2L  === _ 135  [[ 382 ]]  #long:minint..maxint
 378  SubL  === _ 376 375  [[ 379 ]] 
 379  DivL  === _ 378 372  [[ 381 ]] 
 380  ConL  === 0  [[ 381 ]]  #long:minint
 381  MaxL  === _ 379 380  [[ 382 ]] 
 382  MinL  === _ 381 377  [[ 383 ]] 
 383  ConvL2I  === _ 382  [[ 254 363 434 ]]  #int !orig=[429]
 384  ConvI2L  === _ 369  [[ 389 ]]  #long:minint..maxint
 385  SubL  === _ 371 375  [[ 386 ]] 
 386  DivL  === _ 385 372  [[ 388 ]] 
 387  ConL  === 0  [[ 388 ]]  #long:maxint
 388  MinL  === _ 386 387  [[ 389 ]] 
 389  MaxL  === _ 388 384  [[ 390 ]] 
 390  ConvL2I  === _ 389  [[ 428 ]]  #int
 391  OpaqueLoopInit  === _ 335  [[ 408 418 ]] 
 392  CmpU  === _ 434 135  [[ 393 ]] 
 393  Bool  === _ 392  [[ 394 ]] [lt]
 394  OpaqueInitializedAssertionPredicate  === _ 393  [[ 395 ]] 
 395  RangeCheck  === 367 394  [[ 396 397 ]] P=0.999999, C=-1.000000
 396  IfFalse  === 395  [[ 399 ]] #0
 397  IfTrue  === 395  [[ 403 ]] #1
 398  Parm  === 3  [[ 399 ]] FramePtr
 399  Halt  === 396 1 1 398 1  [[ 0 ]] 
 400  CmpU  === _ 335 135  [[ 401 ]] 
 401  Bool  === _ 400  [[ 402 ]] [lt]
 402  OpaqueInitializedAssertionPredicate  === _ 401  [[ 403 ]] 
 403  RangeCheck  === 397 402  [[ 404 405 ]] P=0.999999, C=-1.000000
 404  IfFalse  === 403  [[ 407 ]] #0
 405  IfTrue  === 403  [[ 411 ]] #1
 406  Parm  === 3  [[ 407 ]] FramePtr
 407  Halt  === 404 1 1 406 1  [[ 0 ]] 
 408  CmpU  === _ 391 135  [[ 409 ]] 
 409  Bool  === _ 408  [[ 410 ]] [lt]
 410  Opaque4  === _ 409 78  [[ 411 ]] 
 411  RangeCheck  === 405 410  [[ 412 413 ]] P=0.999999, C=-1.000000
 412  IfFalse  === 411  [[ 415 ]] #0
 413  IfTrue  === 411  [[ 423 ]] #1
 414  Parm  === 3  [[ 415 ]] FramePtr
 415  Halt  === 412 1 1 414 1  [[ 0 ]] 
 416  OpaqueLoopStride  === _ 78  [[ 417 ]] 
 417  SubI  === _ 416 78  [[ 418 ]] 
 418  AddI  === _ 391 417  [[ 420 ]]  !orig=[419]
 420  CmpU  === _ 418 135  [[ 421 ]] 
 421  Bool  === _ 420  [[ 422 ]] [lt]
 422  Opaque4  === _ 421 78  [[ 423 ]] 
 423  RangeCheck  === 413 422  [[ 424 425 ]] P=0.999999, C=-1.000000
 424  IfFalse  === 423  [[ 427 ]] #0
 425  IfTrue  === 423  [[ 260 ]] #1
 427  Halt  === 424 1 1 8 1  [[ 0 ]] 
 428  MinI  === _ 390 135  [[ 370 ]] 
 431  Phi  === 352 335 211  [[ 432 ]]  #int !orig=[357]
 432  ConvI2D  === _ 431  [[ 323 ]]  #double !orig=[357]
 433  ConI  === 0  [[ 434 ]]  #int:-1
 434  AddI  === _ 383 433  [[ 392 ]]  !orig=[430],[374]
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 179 161 399 407 415 427  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 371 372 373 380 387 433 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 398 406 414 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 340 81 16 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 427 ]] FramePtr !orig=[426] !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 338 84 369 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  47  ConP  === 0  [[ 48 84 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !orig=[193] !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 84 ]] #0 !orig=[276],[195] !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 202 157 157 203 203 262 134 134 283 284 284 325 326 326 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !orig=281,[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 293 335 369 410 416 221 422 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 51 6 81 8 9 (83 47 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 64 64 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 428 408 208 286 288 319 370 330 420 376 377 392 400 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 316  [[ 157 ]]  { N40:rawptr:BotPTR - - N316:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 308 6 153 8 9 (156 64 32 1 314 1 1 1 1 64 314 313 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 283 325 ]]  #long:16
 166  ConI  === 0  [[ 204 289 331 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 219 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 375 ]]  #int:0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 64 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 64 64 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 241 206  [[ 201 356 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 290 332 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 211  AddI  === _ 243 78  [[ 144 262 254 243 358 431 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 186 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 78  [[ 222 351 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 310  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 236  Phi  === 226 7 312  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 324 201  [[ 361 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 368 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 335 211  [[ 211 360 213 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 383  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 353 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 425 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] inner stride: 1 main of N261 strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 64 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 282  StoreD  === 300 298 283 290  [[ 298 312 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 283  AddP  === _ 64 284 162  [[ 282 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 284  AddP  === _ 64 64 289  [[ 283 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 285  Bool  === _ 286  [[ 301 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 286  CmpI  === _ 293 135  [[ 285 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 287  Bool  === _ 288  [[ 299 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 288  CmpU  === _ 296 135  [[ 287 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 289  LShiftL  === _ 294 166  [[ 284 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 290  AddD  === _ 206 303  [[ 282 313 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 291  SqrtD  === 302 292  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 292  ConvI2D  === _ 293  [[ 291 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 293  AddI  === _ 296 78  [[ 286 292 296 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 294  ConvI2L  === _ 295  [[ 289 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 295  CastII  === 300 296  [[ 294 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 296  Phi  === 297 358 293  [[ 288 293 295 314 ]]  #int #tripcount !orig=243,[233]
 297  CountedLoop  === 297 322 302  [[ 296 297 298 299 303 ]] inner stride: 1 post of N261 !orig=261,[224],[198]
 298  Phi  === 297 354 282  [[ 282 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 299  RangeCheck  === 297 287  [[ 300 307 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 300  IfTrue  === 299  [[ 282 295 301 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 301  CountedLoopEnd  === 300 285  [[ 302 304 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 302  IfTrue  === 301  [[ 291 297 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 303  Phi  === 297 323 291  [[ 290 ]]  #double !orig=241,232
 304  IfFalse  === 301  [[ 310 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 307  IfFalse  === 299  [[ 308 ]] #0 !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 308  Region  === 308 307 350  [[ 308 157 313 314 316 ]]  !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 310  Region  === 310 304 311  [[ 310 226 312 ]]  !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 311  IfFalse  === 321  [[ 310 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 312  Phi  === 310 282 354  [[ 236 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 313  Phi  === 308 290 356  [[ 157 ]]  #double
 314  Phi  === 308 296 360  [[ 157 157 ]]  #int
 316  Phi  === 308 298 361  [[ 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 318  OpaqueZeroTripGuard  === _ 358  [[ 319 ]] 
 319  CmpI  === _ 318 135  [[ 320 ]] 
 320  Bool  === _ 319  [[ 321 ]] [lt]
 321  If  === 352 320  [[ 311 322 ]] P=0.500000, C=-1.000000
 322  IfTrue  === 321  [[ 297 323 ]] #1
 323  SqrtD  === 322 432  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 324  StoreD  === 342 340 325 332  [[ 340 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 325  AddP  === _ 64 326 162  [[ 324 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 326  AddP  === _ 64 64 331  [[ 325 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 327  Bool  === _ 328  [[ 343 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 328  CmpI  === _ 335 370  [[ 327 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 329  Bool  === _ 330  [[ 341 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 330  CmpU  === _ 338 135  [[ 329 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 331  LShiftL  === _ 336 166  [[ 326 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 332  AddD  === _ 206 345  [[ 324 356 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 333  SqrtD  === 344 334  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 334  ConvI2D  === _ 335  [[ 333 368 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 335  AddI  === _ 338 78  [[ 328 334 338 358 364 243 391 400 431 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 336  ConvI2L  === _ 337  [[ 331 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 337  CastII  === 342 338  [[ 336 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 338  Phi  === 339 36 335  [[ 330 335 337 360 ]]  #int #tripcount !orig=243,[233]
 339  CountedLoop  === 339 220 344  [[ 338 339 340 341 345 ]] inner stride: 1 pre of N261 !orig=261,[224],[198]
 340  Phi  === 339 7 324  [[ 324 361 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 341  RangeCheck  === 339 329  [[ 342 349 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 342  IfTrue  === 341  [[ 324 337 343 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 343  CountedLoopEnd  === 342 327  [[ 344 362 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 344  IfTrue  === 343  [[ 333 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 345  Phi  === 339 214 333  [[ 332 ]]  #double !orig=241,232
 346  IfFalse  === 366  [[ 352 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 349  IfFalse  === 341  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 350  Region  === 350 349 351  [[ 350 308 356 360 361 ]]  !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 351  IfFalse  === 221  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 352  Region  === 352 346 353  [[ 352 321 354 431 358 ]]  !orig=[317]
 353  IfFalse  === 258  [[ 352 ]] #0 !orig=[317]
 354  Phi  === 352 324 201  [[ 298 312 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 356  Phi  === 350 332 205  [[ 313 ]]  #double
 358  Phi  === 352 335 211  [[ 296 318 ]]  #int
 360  Phi  === 350 338 243  [[ 314 ]]  #int
 361  Phi  === 350 340 237  [[ 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 362  IfFalse  === 343  [[ 366 ]] #0
 363  OpaqueZeroTripGuard  === _ 383  [[ 364 ]] 
 364  CmpI  === _ 335 363  [[ 365 ]] 
 365  Bool  === _ 364  [[ 366 ]] [lt]
 366  If  === 362 365  [[ 346 367 ]] P=0.999999, C=-1.000000
 367  IfTrue  === 366  [[ 395 368 ]] #1
 368  SqrtD  === 367 334  [[ 241 ]]  !orig=333,145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 369  AddI  === _ 36 78  [[ 384 ]] 
 370  Opaque1  === _ 428 135  [[ 328 ]] 
 371  ConL  === 0  [[ 385 ]]  #long:0
 372  ConL  === 0  [[ 379 386 ]]  #long:1
 375  ConvI2L  === _ 190  [[ 378 385 ]]  #long:minint..maxint
 376  ConvI2L  === _ 135  [[ 378 ]]  #long:minint..maxint
 377  ConvI2L  === _ 135  [[ 382 ]]  #long:minint..maxint
 378  SubL  === _ 376 375  [[ 379 ]] 
 379  DivL  === _ 378 372  [[ 381 ]] 
 380  ConL  === 0  [[ 381 ]]  #long:minint
 381  MaxL  === _ 379 380  [[ 382 ]] 
 382  MinL  === _ 381 377  [[ 383 ]] 
 383  ConvL2I  === _ 382  [[ 254 363 434 ]]  #int !orig=[429]
 384  ConvI2L  === _ 369  [[ 389 ]]  #long:minint..maxint
 385  SubL  === _ 371 375  [[ 386 ]] 
 386  DivL  === _ 385 372  [[ 388 ]] 
 387  ConL  === 0  [[ 388 ]]  #long:maxint
 388  MinL  === _ 386 387  [[ 389 ]] 
 389  MaxL  === _ 388 384  [[ 390 ]] 
 390  ConvL2I  === _ 389  [[ 428 ]]  #int
 391  OpaqueLoopInit  === _ 335  [[ 408 418 ]] 
 392  CmpU  === _ 434 135  [[ 393 ]] 
 393  Bool  === _ 392  [[ 394 ]] [lt]
 394  OpaqueInitializedAssertionPredicate  === _ 393  [[ 395 ]] 
 395  RangeCheck  === 367 394  [[ 396 397 ]] P=0.999999, C=-1.000000
 396  IfFalse  === 395  [[ 399 ]] #0
 397  IfTrue  === 395  [[ 403 ]] #1
 398  Parm  === 3  [[ 399 ]] FramePtr
 399  Halt  === 396 1 1 398 1  [[ 0 ]] 
 400  CmpU  === _ 335 135  [[ 401 ]] 
 401  Bool  === _ 400  [[ 402 ]] [lt]
 402  OpaqueInitializedAssertionPredicate  === _ 401  [[ 403 ]] 
 403  RangeCheck  === 397 402  [[ 404 405 ]] P=0.999999, C=-1.000000
 404  IfFalse  === 403  [[ 407 ]] #0
 405  IfTrue  === 403  [[ 411 ]] #1
 406  Parm  === 3  [[ 407 ]] FramePtr
 407  Halt  === 404 1 1 406 1  [[ 0 ]] 
 408  CmpU  === _ 391 135  [[ 409 ]] 
 409  Bool  === _ 408  [[ 410 ]] [lt]
 410  Opaque4  === _ 409 78  [[ 411 ]] 
 411  RangeCheck  === 405 410  [[ 412 413 ]] P=0.999999, C=-1.000000
 412  IfFalse  === 411  [[ 415 ]] #0
 413  IfTrue  === 411  [[ 423 ]] #1
 414  Parm  === 3  [[ 415 ]] FramePtr
 415  Halt  === 412 1 1 414 1  [[ 0 ]] 
 416  OpaqueLoopStride  === _ 78  [[ 435 ]] 
 418  AddI  === _ 391 435  [[ 420 ]]  !orig=[419]
 420  CmpU  === _ 418 135  [[ 421 ]] 
 421  Bool  === _ 420  [[ 422 ]] [lt]
 422  Opaque4  === _ 421 78  [[ 423 ]] 
 423  RangeCheck  === 413 422  [[ 424 425 ]] P=0.999999, C=-1.000000
 424  IfFalse  === 423  [[ 427 ]] #0
 425  IfTrue  === 423  [[ 260 ]] #1
 427  Halt  === 424 1 1 8 1  [[ 0 ]] 
 428  MinI  === _ 390 135  [[ 370 ]] 
 431  Phi  === 352 335 211  [[ 432 ]]  #int !orig=[357]
 432  ConvI2D  === _ 431  [[ 323 ]]  #double !orig=[357]
 433  ConI  === 0  [[ 434 435 ]]  #int:-1
 434  AddI  === _ 383 433  [[ 392 ]]  !orig=[430],[374]
 435  AddI  === _ 416 433  [[ 418 ]]  !orig=[417]
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 179 161 399 407 415 427  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 371 372 373 380 387 433 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 398 406 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 340 81 16 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 427 415 ]] FramePtr !orig=[426] !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 338 84 369 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  47  ConP  === 0  [[ 48 84 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !orig=[193] !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 84 ]] #0 !orig=[276],[195] !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 202 157 157 203 203 262 134 134 283 284 284 325 326 326 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !orig=281,[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 293 335 369 410 416 221 422 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 51 6 81 8 9 (83 47 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 64 64 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 428 408 208 286 288 319 370 330 420 376 377 392 400 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 316  [[ 157 ]]  { N40:rawptr:BotPTR - - N316:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 308 6 153 8 9 (156 64 32 1 314 1 1 1 1 64 314 313 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 283 325 ]]  #long:16
 166  ConI  === 0  [[ 204 289 331 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 219 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 375 ]]  #int:0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 64 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 64 64 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 241 206  [[ 201 356 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 290 332 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 211  AddI  === _ 243 78  [[ 144 262 254 243 358 431 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 186 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 78  [[ 222 351 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 310  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 236  Phi  === 226 7 312  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 324 201  [[ 361 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 368 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 335 211  [[ 211 360 213 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 383  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 353 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 425 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] inner stride: 1 main of N261 strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 64 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 282  StoreD  === 300 298 283 290  [[ 298 312 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 283  AddP  === _ 64 284 162  [[ 282 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 284  AddP  === _ 64 64 289  [[ 283 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 285  Bool  === _ 286  [[ 301 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 286  CmpI  === _ 293 135  [[ 285 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 287  Bool  === _ 288  [[ 299 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 288  CmpU  === _ 296 135  [[ 287 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 289  LShiftL  === _ 294 166  [[ 284 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 290  AddD  === _ 206 303  [[ 282 313 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 291  SqrtD  === 302 292  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 292  ConvI2D  === _ 293  [[ 291 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 293  AddI  === _ 296 78  [[ 286 292 296 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 294  ConvI2L  === _ 295  [[ 289 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 295  CastII  === 300 296  [[ 294 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 296  Phi  === 297 358 293  [[ 288 293 295 314 ]]  #int #tripcount !orig=243,[233]
 297  CountedLoop  === 297 322 302  [[ 296 297 298 299 303 ]] inner stride: 1 post of N261 !orig=261,[224],[198]
 298  Phi  === 297 354 282  [[ 282 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 299  RangeCheck  === 297 287  [[ 300 307 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 300  IfTrue  === 299  [[ 282 295 301 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 301  CountedLoopEnd  === 300 285  [[ 302 304 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 302  IfTrue  === 301  [[ 291 297 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 303  Phi  === 297 323 291  [[ 290 ]]  #double !orig=241,232
 304  IfFalse  === 301  [[ 310 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 307  IfFalse  === 299  [[ 308 ]] #0 !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 308  Region  === 308 307 350  [[ 308 157 313 314 316 ]]  !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 310  Region  === 310 304 311  [[ 310 226 312 ]]  !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 311  IfFalse  === 321  [[ 310 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 312  Phi  === 310 282 354  [[ 236 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 313  Phi  === 308 290 356  [[ 157 ]]  #double
 314  Phi  === 308 296 360  [[ 157 157 ]]  #int
 316  Phi  === 308 298 361  [[ 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 318  OpaqueZeroTripGuard  === _ 358  [[ 319 ]] 
 319  CmpI  === _ 318 135  [[ 320 ]] 
 320  Bool  === _ 319  [[ 321 ]] [lt]
 321  If  === 352 320  [[ 311 322 ]] P=0.500000, C=-1.000000
 322  IfTrue  === 321  [[ 297 323 ]] #1
 323  SqrtD  === 322 432  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 324  StoreD  === 342 340 325 332  [[ 340 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 325  AddP  === _ 64 326 162  [[ 324 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 326  AddP  === _ 64 64 331  [[ 325 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 327  Bool  === _ 328  [[ 343 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 328  CmpI  === _ 335 370  [[ 327 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 329  Bool  === _ 330  [[ 341 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 330  CmpU  === _ 338 135  [[ 329 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 331  LShiftL  === _ 336 166  [[ 326 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 332  AddD  === _ 206 345  [[ 324 356 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 333  SqrtD  === 344 334  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 334  ConvI2D  === _ 335  [[ 333 368 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 335  AddI  === _ 338 78  [[ 328 334 338 358 364 243 391 400 431 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 336  ConvI2L  === _ 337  [[ 331 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 337  CastII  === 342 338  [[ 336 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 338  Phi  === 339 36 335  [[ 330 335 337 360 ]]  #int #tripcount !orig=243,[233]
 339  CountedLoop  === 339 220 344  [[ 338 339 340 341 345 ]] inner stride: 1 pre of N261 !orig=261,[224],[198]
 340  Phi  === 339 7 324  [[ 324 361 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 341  RangeCheck  === 339 329  [[ 342 349 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 342  IfTrue  === 341  [[ 324 337 343 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 343  CountedLoopEnd  === 342 327  [[ 344 362 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 344  IfTrue  === 343  [[ 333 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 345  Phi  === 339 214 333  [[ 332 ]]  #double !orig=241,232
 346  IfFalse  === 366  [[ 352 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 349  IfFalse  === 341  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 350  Region  === 350 349 351  [[ 350 308 356 360 361 ]]  !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 351  IfFalse  === 221  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 352  Region  === 352 346 353  [[ 352 321 354 431 358 ]]  !orig=[317]
 353  IfFalse  === 258  [[ 352 ]] #0 !orig=[317]
 354  Phi  === 352 324 201  [[ 298 312 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 356  Phi  === 350 332 205  [[ 313 ]]  #double
 358  Phi  === 352 335 211  [[ 296 318 ]]  #int
 360  Phi  === 350 338 243  [[ 314 ]]  #int
 361  Phi  === 350 340 237  [[ 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 362  IfFalse  === 343  [[ 366 ]] #0
 363  OpaqueZeroTripGuard  === _ 383  [[ 364 ]] 
 364  CmpI  === _ 335 363  [[ 365 ]] 
 365  Bool  === _ 364  [[ 366 ]] [lt]
 366  If  === 362 365  [[ 346 367 ]] P=0.999999, C=-1.000000
 367  IfTrue  === 366  [[ 395 368 ]] #1
 368  SqrtD  === 367 334  [[ 241 ]]  !orig=333,145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 369  AddI  === _ 36 78  [[ 384 ]] 
 370  Opaque1  === _ 428 135  [[ 328 ]] 
 371  ConL  === 0  [[ 385 ]]  #long:0
 372  ConL  === 0  [[ 379 386 ]]  #long:1
 375  ConvI2L  === _ 190  [[ 378 385 ]]  #long:minint..maxint
 376  ConvI2L  === _ 135  [[ 378 ]]  #long:minint..maxint
 377  ConvI2L  === _ 135  [[ 382 ]]  #long:minint..maxint
 378  SubL  === _ 376 375  [[ 379 ]] 
 379  DivL  === _ 378 372  [[ 381 ]] 
 380  ConL  === 0  [[ 381 ]]  #long:minint
 381  MaxL  === _ 379 380  [[ 382 ]] 
 382  MinL  === _ 381 377  [[ 383 ]] 
 383  ConvL2I  === _ 382  [[ 254 363 434 ]]  #int !orig=[429]
 384  ConvI2L  === _ 369  [[ 389 ]]  #long:minint..maxint
 385  SubL  === _ 371 375  [[ 386 ]] 
 386  DivL  === _ 385 372  [[ 388 ]] 
 387  ConL  === 0  [[ 388 ]]  #long:maxint
 388  MinL  === _ 386 387  [[ 389 ]] 
 389  MaxL  === _ 388 384  [[ 390 ]] 
 390  ConvL2I  === _ 389  [[ 428 ]]  #int
 391  OpaqueLoopInit  === _ 335  [[ 408 418 ]] 
 392  CmpU  === _ 434 135  [[ 393 ]] 
 393  Bool  === _ 392  [[ 394 ]] [lt]
 394  OpaqueInitializedAssertionPredicate  === _ 393  [[ 395 ]] 
 395  RangeCheck  === 367 394  [[ 396 397 ]] P=0.999999, C=-1.000000
 396  IfFalse  === 395  [[ 399 ]] #0
 397  IfTrue  === 395  [[ 403 ]] #1
 398  Parm  === 3  [[ 399 ]] FramePtr
 399  Halt  === 396 1 1 398 1  [[ 0 ]] 
 400  CmpU  === _ 335 135  [[ 401 ]] 
 401  Bool  === _ 400  [[ 402 ]] [lt]
 402  OpaqueInitializedAssertionPredicate  === _ 401  [[ 403 ]] 
 403  RangeCheck  === 397 402  [[ 404 405 ]] P=0.999999, C=-1.000000
 404  IfFalse  === 403  [[ 407 ]] #0
 405  IfTrue  === 403  [[ 411 ]] #1
 406  Parm  === 3  [[ 407 ]] FramePtr
 407  Halt  === 404 1 1 406 1  [[ 0 ]] 
 408  CmpU  === _ 391 135  [[ 409 ]] 
 409  Bool  === _ 408  [[ 410 ]] [lt]
 410  Opaque4  === _ 409 78  [[ 411 ]] 
 411  RangeCheck  === 405 410  [[ 412 413 ]] P=0.999999, C=-1.000000
 412  IfFalse  === 411  [[ 415 ]] #0
 413  IfTrue  === 411  [[ 423 ]] #1
 415  Halt  === 412 1 1 8 1  [[ 0 ]] 
 416  OpaqueLoopStride  === _ 78  [[ 435 ]] 
 418  AddI  === _ 391 435  [[ 420 ]]  !orig=[419]
 420  CmpU  === _ 418 135  [[ 421 ]] 
 421  Bool  === _ 420  [[ 422 ]] [lt]
 422  Opaque4  === _ 421 78  [[ 423 ]] 
 423  RangeCheck  === 413 422  [[ 424 425 ]] P=0.999999, C=-1.000000
 424  IfFalse  === 423  [[ 427 ]] #0
 425  IfTrue  === 423  [[ 260 ]] #1
 427  Halt  === 424 1 1 8 1  [[ 0 ]] 
 428  MinI  === _ 390 135  [[ 370 ]] 
 431  Phi  === 352 335 211  [[ 432 ]]  #int !orig=[357]
 432  ConvI2D  === _ 431  [[ 323 ]]  #double !orig=[357]
 433  ConI  === 0  [[ 434 435 ]]  #int:-1
 434  AddI  === _ 383 433  [[ 392 ]]  !orig=[430],[374]
 435  AddI  === _ 416 433  [[ 418 ]]  !orig=[417]
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 179 161 399 407 415 427  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 371 372 373 380 387 433 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 398 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 340 81 16 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 427 415 407 ]] FramePtr !orig=[426] !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 338 84 369 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  47  ConP  === 0  [[ 48 84 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !orig=[193] !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 84 ]] #0 !orig=[276],[195] !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 202 157 157 203 203 262 134 134 283 284 284 325 326 326 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !orig=281,[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 293 335 369 410 416 221 422 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 51 6 81 8 9 (83 47 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 64 64 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 428 408 208 286 288 319 370 330 420 376 377 392 400 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 316  [[ 157 ]]  { N40:rawptr:BotPTR - - N316:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 308 6 153 8 9 (156 64 32 1 314 1 1 1 1 64 314 313 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 283 325 ]]  #long:16
 166  ConI  === 0  [[ 204 289 331 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 219 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 375 ]]  #int:0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 64 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 64 64 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 241 206  [[ 201 356 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 290 332 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 211  AddI  === _ 243 78  [[ 144 262 254 243 358 431 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 186 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 78  [[ 222 351 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 310  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 236  Phi  === 226 7 312  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 324 201  [[ 361 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 368 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 335 211  [[ 211 360 213 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 383  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 353 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 425 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] inner stride: 1 main of N261 strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 64 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 282  StoreD  === 300 298 283 290  [[ 298 312 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 283  AddP  === _ 64 284 162  [[ 282 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 284  AddP  === _ 64 64 289  [[ 283 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 285  Bool  === _ 286  [[ 301 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 286  CmpI  === _ 293 135  [[ 285 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 287  Bool  === _ 288  [[ 299 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 288  CmpU  === _ 296 135  [[ 287 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 289  LShiftL  === _ 294 166  [[ 284 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 290  AddD  === _ 206 303  [[ 282 313 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 291  SqrtD  === 302 292  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 292  ConvI2D  === _ 293  [[ 291 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 293  AddI  === _ 296 78  [[ 286 292 296 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 294  ConvI2L  === _ 295  [[ 289 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 295  CastII  === 300 296  [[ 294 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 296  Phi  === 297 358 293  [[ 288 293 295 314 ]]  #int #tripcount !orig=243,[233]
 297  CountedLoop  === 297 322 302  [[ 296 297 298 299 303 ]] inner stride: 1 post of N261 !orig=261,[224],[198]
 298  Phi  === 297 354 282  [[ 282 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 299  RangeCheck  === 297 287  [[ 300 307 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 300  IfTrue  === 299  [[ 282 295 301 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 301  CountedLoopEnd  === 300 285  [[ 302 304 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 302  IfTrue  === 301  [[ 291 297 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 303  Phi  === 297 323 291  [[ 290 ]]  #double !orig=241,232
 304  IfFalse  === 301  [[ 310 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 307  IfFalse  === 299  [[ 308 ]] #0 !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 308  Region  === 308 307 350  [[ 308 157 313 314 316 ]]  !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 310  Region  === 310 304 311  [[ 310 226 312 ]]  !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 311  IfFalse  === 321  [[ 310 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 312  Phi  === 310 282 354  [[ 236 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 313  Phi  === 308 290 356  [[ 157 ]]  #double
 314  Phi  === 308 296 360  [[ 157 157 ]]  #int
 316  Phi  === 308 298 361  [[ 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 318  OpaqueZeroTripGuard  === _ 358  [[ 319 ]] 
 319  CmpI  === _ 318 135  [[ 320 ]] 
 320  Bool  === _ 319  [[ 321 ]] [lt]
 321  If  === 352 320  [[ 311 322 ]] P=0.500000, C=-1.000000
 322  IfTrue  === 321  [[ 297 323 ]] #1
 323  SqrtD  === 322 432  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 324  StoreD  === 342 340 325 332  [[ 340 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 325  AddP  === _ 64 326 162  [[ 324 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 326  AddP  === _ 64 64 331  [[ 325 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 327  Bool  === _ 328  [[ 343 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 328  CmpI  === _ 335 370  [[ 327 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 329  Bool  === _ 330  [[ 341 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 330  CmpU  === _ 338 135  [[ 329 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 331  LShiftL  === _ 336 166  [[ 326 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 332  AddD  === _ 206 345  [[ 324 356 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 333  SqrtD  === 344 334  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 334  ConvI2D  === _ 335  [[ 333 368 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 335  AddI  === _ 338 78  [[ 328 334 338 358 364 243 391 400 431 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 336  ConvI2L  === _ 337  [[ 331 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 337  CastII  === 342 338  [[ 336 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 338  Phi  === 339 36 335  [[ 330 335 337 360 ]]  #int #tripcount !orig=243,[233]
 339  CountedLoop  === 339 220 344  [[ 338 339 340 341 345 ]] inner stride: 1 pre of N261 !orig=261,[224],[198]
 340  Phi  === 339 7 324  [[ 324 361 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 341  RangeCheck  === 339 329  [[ 342 349 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 342  IfTrue  === 341  [[ 324 337 343 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 343  CountedLoopEnd  === 342 327  [[ 344 362 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 344  IfTrue  === 343  [[ 333 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 345  Phi  === 339 214 333  [[ 332 ]]  #double !orig=241,232
 346  IfFalse  === 366  [[ 352 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 349  IfFalse  === 341  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 350  Region  === 350 349 351  [[ 350 308 356 360 361 ]]  !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 351  IfFalse  === 221  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 352  Region  === 352 346 353  [[ 352 321 354 431 358 ]]  !orig=[317]
 353  IfFalse  === 258  [[ 352 ]] #0 !orig=[317]
 354  Phi  === 352 324 201  [[ 298 312 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 356  Phi  === 350 332 205  [[ 313 ]]  #double
 358  Phi  === 352 335 211  [[ 296 318 ]]  #int
 360  Phi  === 350 338 243  [[ 314 ]]  #int
 361  Phi  === 350 340 237  [[ 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 362  IfFalse  === 343  [[ 366 ]] #0
 363  OpaqueZeroTripGuard  === _ 383  [[ 364 ]] 
 364  CmpI  === _ 335 363  [[ 365 ]] 
 365  Bool  === _ 364  [[ 366 ]] [lt]
 366  If  === 362 365  [[ 346 367 ]] P=0.999999, C=-1.000000
 367  IfTrue  === 366  [[ 395 368 ]] #1
 368  SqrtD  === 367 334  [[ 241 ]]  !orig=333,145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 369  AddI  === _ 36 78  [[ 384 ]] 
 370  Opaque1  === _ 428 135  [[ 328 ]] 
 371  ConL  === 0  [[ 385 ]]  #long:0
 372  ConL  === 0  [[ 379 386 ]]  #long:1
 375  ConvI2L  === _ 190  [[ 378 385 ]]  #long:minint..maxint
 376  ConvI2L  === _ 135  [[ 378 ]]  #long:minint..maxint
 377  ConvI2L  === _ 135  [[ 382 ]]  #long:minint..maxint
 378  SubL  === _ 376 375  [[ 379 ]] 
 379  DivL  === _ 378 372  [[ 381 ]] 
 380  ConL  === 0  [[ 381 ]]  #long:minint
 381  MaxL  === _ 379 380  [[ 382 ]] 
 382  MinL  === _ 381 377  [[ 383 ]] 
 383  ConvL2I  === _ 382  [[ 254 363 434 ]]  #int !orig=[429]
 384  ConvI2L  === _ 369  [[ 389 ]]  #long:minint..maxint
 385  SubL  === _ 371 375  [[ 386 ]] 
 386  DivL  === _ 385 372  [[ 388 ]] 
 387  ConL  === 0  [[ 388 ]]  #long:maxint
 388  MinL  === _ 386 387  [[ 389 ]] 
 389  MaxL  === _ 388 384  [[ 390 ]] 
 390  ConvL2I  === _ 389  [[ 428 ]]  #int
 391  OpaqueLoopInit  === _ 335  [[ 408 418 ]] 
 392  CmpU  === _ 434 135  [[ 393 ]] 
 393  Bool  === _ 392  [[ 394 ]] [lt]
 394  OpaqueInitializedAssertionPredicate  === _ 393  [[ 395 ]] 
 395  RangeCheck  === 367 394  [[ 396 397 ]] P=0.999999, C=-1.000000
 396  IfFalse  === 395  [[ 399 ]] #0
 397  IfTrue  === 395  [[ 403 ]] #1
 398  Parm  === 3  [[ 399 ]] FramePtr
 399  Halt  === 396 1 1 398 1  [[ 0 ]] 
 400  CmpU  === _ 335 135  [[ 401 ]] 
 401  Bool  === _ 400  [[ 402 ]] [lt]
 402  OpaqueInitializedAssertionPredicate  === _ 401  [[ 403 ]] 
 403  RangeCheck  === 397 402  [[ 404 405 ]] P=0.999999, C=-1.000000
 404  IfFalse  === 403  [[ 407 ]] #0
 405  IfTrue  === 403  [[ 411 ]] #1
 407  Halt  === 404 1 1 8 1  [[ 0 ]] 
 408  CmpU  === _ 391 135  [[ 409 ]] 
 409  Bool  === _ 408  [[ 410 ]] [lt]
 410  Opaque4  === _ 409 78  [[ 411 ]] 
 411  RangeCheck  === 405 410  [[ 412 413 ]] P=0.999999, C=-1.000000
 412  IfFalse  === 411  [[ 415 ]] #0
 413  IfTrue  === 411  [[ 423 ]] #1
 415  Halt  === 412 1 1 8 1  [[ 0 ]] 
 416  OpaqueLoopStride  === _ 78  [[ 435 ]] 
 418  AddI  === _ 391 435  [[ 420 ]]  !orig=[419]
 420  CmpU  === _ 418 135  [[ 421 ]] 
 421  Bool  === _ 420  [[ 422 ]] [lt]
 422  Opaque4  === _ 421 78  [[ 423 ]] 
 423  RangeCheck  === 413 422  [[ 424 425 ]] P=0.999999, C=-1.000000
 424  IfFalse  === 423  [[ 427 ]] #0
 425  IfTrue  === 423  [[ 260 ]] #1
 427  Halt  === 424 1 1 8 1  [[ 0 ]] 
 428  MinI  === _ 390 135  [[ 370 ]] 
 431  Phi  === 352 335 211  [[ 432 ]]  #int !orig=[357]
 432  ConvI2D  === _ 431  [[ 323 ]]  #double !orig=[357]
 433  ConI  === 0  [[ 434 435 ]]  #int:-1
 434  AddI  === _ 383 433  [[ 392 ]]  !orig=[430],[374]
 435  AddI  === _ 416 433  [[ 418 ]]  !orig=[417]
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 179 161 399 407 415 427  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 371 372 373 380 387 433 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 340 81 16 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 427 415 407 399 ]] FramePtr !orig=[426] !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 338 84 369 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  47  ConP  === 0  [[ 48 84 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !orig=[193] !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 84 ]] #0 !orig=[276],[195] !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 202 157 157 203 203 262 134 134 283 284 284 325 326 326 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !orig=281,[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 293 335 369 410 416 221 422 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 51 6 81 8 9 (83 47 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 64 64 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 428 408 208 286 288 319 370 330 420 376 377 392 400 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 316  [[ 157 ]]  { N40:rawptr:BotPTR - - N316:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 308 6 153 8 9 (156 64 32 1 314 1 1 1 1 64 314 313 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 283 325 ]]  #long:16
 166  ConI  === 0  [[ 204 289 331 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 219 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 375 ]]  #int:0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 64 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 64 64 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 241 206  [[ 201 356 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 290 332 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 211  AddI  === _ 243 78  [[ 144 262 254 243 358 431 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 186 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 78  [[ 222 351 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 310  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 236  Phi  === 226 7 312  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 324 201  [[ 361 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 368 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 335 211  [[ 211 360 213 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 383  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 353 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 425 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] inner stride: 1 main of N261 strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 64 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 282  StoreD  === 300 298 283 290  [[ 298 312 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 283  AddP  === _ 64 284 162  [[ 282 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 284  AddP  === _ 64 64 289  [[ 283 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 285  Bool  === _ 286  [[ 301 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 286  CmpI  === _ 293 135  [[ 285 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 287  Bool  === _ 288  [[ 299 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 288  CmpU  === _ 296 135  [[ 287 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 289  LShiftL  === _ 294 166  [[ 284 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 290  AddD  === _ 206 303  [[ 282 313 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 291  SqrtD  === 302 292  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 292  ConvI2D  === _ 293  [[ 291 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 293  AddI  === _ 296 78  [[ 286 292 296 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 294  ConvI2L  === _ 295  [[ 289 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 295  CastII  === 300 296  [[ 294 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 296  Phi  === 297 358 293  [[ 288 293 295 314 ]]  #int #tripcount !orig=243,[233]
 297  CountedLoop  === 297 322 302  [[ 296 297 298 299 303 ]] inner stride: 1 post of N261 !orig=261,[224],[198]
 298  Phi  === 297 354 282  [[ 282 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 299  RangeCheck  === 297 287  [[ 300 307 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 300  IfTrue  === 299  [[ 282 295 301 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 301  CountedLoopEnd  === 300 285  [[ 302 304 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 302  IfTrue  === 301  [[ 291 297 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 303  Phi  === 297 323 291  [[ 290 ]]  #double !orig=241,232
 304  IfFalse  === 301  [[ 310 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 307  IfFalse  === 299  [[ 308 ]] #0 !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 308  Region  === 308 307 350  [[ 308 157 313 314 316 ]]  !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 310  Region  === 310 304 311  [[ 310 226 312 ]]  !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 311  IfFalse  === 321  [[ 310 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 312  Phi  === 310 282 354  [[ 236 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 313  Phi  === 308 290 356  [[ 157 ]]  #double
 314  Phi  === 308 296 360  [[ 157 157 ]]  #int
 316  Phi  === 308 298 361  [[ 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 318  OpaqueZeroTripGuard  === _ 358  [[ 319 ]] 
 319  CmpI  === _ 318 135  [[ 320 ]] 
 320  Bool  === _ 319  [[ 321 ]] [lt]
 321  If  === 352 320  [[ 311 322 ]] P=0.500000, C=-1.000000
 322  IfTrue  === 321  [[ 297 323 ]] #1
 323  SqrtD  === 322 432  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 324  StoreD  === 342 340 325 332  [[ 340 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 325  AddP  === _ 64 326 162  [[ 324 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 326  AddP  === _ 64 64 331  [[ 325 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 327  Bool  === _ 328  [[ 343 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 328  CmpI  === _ 335 370  [[ 327 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 329  Bool  === _ 330  [[ 341 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 330  CmpU  === _ 338 135  [[ 329 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 331  LShiftL  === _ 336 166  [[ 326 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 332  AddD  === _ 206 345  [[ 324 356 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 333  SqrtD  === 344 334  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 334  ConvI2D  === _ 335  [[ 333 368 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 335  AddI  === _ 338 78  [[ 328 334 338 358 364 243 391 400 431 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 336  ConvI2L  === _ 337  [[ 331 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 337  CastII  === 342 338  [[ 336 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 338  Phi  === 339 36 335  [[ 330 335 337 360 ]]  #int #tripcount !orig=243,[233]
 339  CountedLoop  === 339 220 344  [[ 338 339 340 341 345 ]] inner stride: 1 pre of N261 !orig=261,[224],[198]
 340  Phi  === 339 7 324  [[ 324 361 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 341  RangeCheck  === 339 329  [[ 342 349 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 342  IfTrue  === 341  [[ 324 337 343 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 343  CountedLoopEnd  === 342 327  [[ 344 362 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 344  IfTrue  === 343  [[ 333 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 345  Phi  === 339 214 333  [[ 332 ]]  #double !orig=241,232
 346  IfFalse  === 366  [[ 352 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 349  IfFalse  === 341  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 350  Region  === 350 349 351  [[ 350 308 356 360 361 ]]  !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 351  IfFalse  === 221  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 352  Region  === 352 346 353  [[ 352 321 354 431 358 ]]  !orig=[317]
 353  IfFalse  === 258  [[ 352 ]] #0 !orig=[317]
 354  Phi  === 352 324 201  [[ 298 312 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 356  Phi  === 350 332 205  [[ 313 ]]  #double
 358  Phi  === 352 335 211  [[ 296 318 ]]  #int
 360  Phi  === 350 338 243  [[ 314 ]]  #int
 361  Phi  === 350 340 237  [[ 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 362  IfFalse  === 343  [[ 366 ]] #0
 363  OpaqueZeroTripGuard  === _ 383  [[ 364 ]] 
 364  CmpI  === _ 335 363  [[ 365 ]] 
 365  Bool  === _ 364  [[ 366 ]] [lt]
 366  If  === 362 365  [[ 346 367 ]] P=0.999999, C=-1.000000
 367  IfTrue  === 366  [[ 395 368 ]] #1
 368  SqrtD  === 367 334  [[ 241 ]]  !orig=333,145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 369  AddI  === _ 36 78  [[ 384 ]] 
 370  Opaque1  === _ 428 135  [[ 328 ]] 
 371  ConL  === 0  [[ 385 ]]  #long:0
 372  ConL  === 0  [[ 379 386 ]]  #long:1
 375  ConvI2L  === _ 190  [[ 378 385 ]]  #long:minint..maxint
 376  ConvI2L  === _ 135  [[ 378 ]]  #long:minint..maxint
 377  ConvI2L  === _ 135  [[ 382 ]]  #long:minint..maxint
 378  SubL  === _ 376 375  [[ 379 ]] 
 379  DivL  === _ 378 372  [[ 381 ]] 
 380  ConL  === 0  [[ 381 ]]  #long:minint
 381  MaxL  === _ 379 380  [[ 382 ]] 
 382  MinL  === _ 381 377  [[ 383 ]] 
 383  ConvL2I  === _ 382  [[ 254 363 434 ]]  #int !orig=[429]
 384  ConvI2L  === _ 369  [[ 389 ]]  #long:minint..maxint
 385  SubL  === _ 371 375  [[ 386 ]] 
 386  DivL  === _ 385 372  [[ 388 ]] 
 387  ConL  === 0  [[ 388 ]]  #long:maxint
 388  MinL  === _ 386 387  [[ 389 ]] 
 389  MaxL  === _ 388 384  [[ 390 ]] 
 390  ConvL2I  === _ 389  [[ 428 ]]  #int
 391  OpaqueLoopInit  === _ 335  [[ 408 418 ]] 
 392  CmpU  === _ 434 135  [[ 393 ]] 
 393  Bool  === _ 392  [[ 394 ]] [lt]
 394  OpaqueInitializedAssertionPredicate  === _ 393  [[ 395 ]] 
 395  RangeCheck  === 367 394  [[ 396 397 ]] P=0.999999, C=-1.000000
 396  IfFalse  === 395  [[ 399 ]] #0
 397  IfTrue  === 395  [[ 403 ]] #1
 399  Halt  === 396 1 1 8 1  [[ 0 ]] 
 400  CmpU  === _ 335 135  [[ 401 ]] 
 401  Bool  === _ 400  [[ 402 ]] [lt]
 402  OpaqueInitializedAssertionPredicate  === _ 401  [[ 403 ]] 
 403  RangeCheck  === 397 402  [[ 404 405 ]] P=0.999999, C=-1.000000
 404  IfFalse  === 403  [[ 407 ]] #0
 405  IfTrue  === 403  [[ 411 ]] #1
 407  Halt  === 404 1 1 8 1  [[ 0 ]] 
 408  CmpU  === _ 391 135  [[ 409 ]] 
 409  Bool  === _ 408  [[ 410 ]] [lt]
 410  Opaque4  === _ 409 78  [[ 411 ]] 
 411  RangeCheck  === 405 410  [[ 412 413 ]] P=0.999999, C=-1.000000
 412  IfFalse  === 411  [[ 415 ]] #0
 413  IfTrue  === 411  [[ 423 ]] #1
 415  Halt  === 412 1 1 8 1  [[ 0 ]] 
 416  OpaqueLoopStride  === _ 78  [[ 435 ]] 
 418  AddI  === _ 391 435  [[ 420 ]]  !orig=[419]
 420  CmpU  === _ 418 135  [[ 421 ]] 
 421  Bool  === _ 420  [[ 422 ]] [lt]
 422  Opaque4  === _ 421 78  [[ 423 ]] 
 423  RangeCheck  === 413 422  [[ 424 425 ]] P=0.999999, C=-1.000000
 424  IfFalse  === 423  [[ 427 ]] #0
 425  IfTrue  === 423  [[ 260 ]] #1
 427  Halt  === 424 1 1 8 1  [[ 0 ]] 
 428  MinI  === _ 390 135  [[ 370 ]] 
 431  Phi  === 352 335 211  [[ 432 ]]  #int !orig=[357]
 432  ConvI2D  === _ 431  [[ 323 ]]  #double !orig=[357]
 433  ConI  === 0  [[ 434 435 ]]  #int:-1
 434  AddI  === _ 383 433  [[ 392 ]]  !orig=[430],[374]
 435  AddI  === _ 416 433  [[ 418 ]]  !orig=[417]
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 179 161 399 407 415 427  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 371 372 373 380 387 433 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 340 81 16 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 427 415 407 399 ]] FramePtr !orig=[426] !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 338 84 369 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  47  ConP  === 0  [[ 48 84 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !orig=[193] !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 84 ]] #0 !orig=[276],[195] !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 202 157 157 203 203 262 134 134 283 284 284 325 326 326 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !orig=281,[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 293 335 369 410 416 221 422 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 51 6 81 8 9 (83 47 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 64 64 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 428 408 208 286 288 319 370 330 420 376 377 392 400 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 316  [[ 157 ]]  { N40:rawptr:BotPTR - - N316:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 308 6 153 8 9 (156 64 32 1 314 1 1 1 1 64 314 313 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 283 325 ]]  #long:16
 166  ConI  === 0  [[ 204 289 331 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 219 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 375 ]]  #int:0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 64 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 64 64 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 241 206  [[ 201 356 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 290 332 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 211  AddI  === _ 243 78  [[ 144 262 254 243 358 431 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 186 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 78  [[ 222 351 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 310  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 236  Phi  === 226 7 312  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 324 201  [[ 361 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 368 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 335 211  [[ 211 360 213 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 383  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 353 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 425 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] inner stride: 1 main of N261 strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 64 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 282  StoreD  === 300 298 283 290  [[ 298 312 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 283  AddP  === _ 64 284 162  [[ 282 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 284  AddP  === _ 64 64 289  [[ 283 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 285  Bool  === _ 286  [[ 301 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 286  CmpI  === _ 293 135  [[ 285 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 287  Bool  === _ 288  [[ 299 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 288  CmpU  === _ 296 135  [[ 287 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 289  LShiftL  === _ 294 166  [[ 284 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 290  AddD  === _ 206 303  [[ 282 313 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 291  SqrtD  === 302 292  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 292  ConvI2D  === _ 293  [[ 291 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 293  AddI  === _ 296 78  [[ 286 292 296 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 294  ConvI2L  === _ 295  [[ 289 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 295  CastII  === 300 296  [[ 294 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 296  Phi  === 297 358 293  [[ 288 293 295 314 ]]  #int #tripcount !orig=243,[233]
 297  CountedLoop  === 297 322 302  [[ 296 297 298 299 303 ]] inner stride: 1 post of N261 !orig=261,[224],[198]
 298  Phi  === 297 354 282  [[ 282 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 299  RangeCheck  === 297 287  [[ 300 307 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 300  IfTrue  === 299  [[ 282 295 301 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 301  CountedLoopEnd  === 300 285  [[ 302 304 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 302  IfTrue  === 301  [[ 291 297 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 303  Phi  === 297 323 291  [[ 290 ]]  #double !orig=241,232
 304  IfFalse  === 301  [[ 310 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 307  IfFalse  === 299  [[ 308 ]] #0 !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 308  Region  === 308 307 350  [[ 308 157 313 314 316 ]]  !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 310  Region  === 310 304 311  [[ 310 226 312 ]]  !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 311  IfFalse  === 321  [[ 310 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 312  Phi  === 310 282 354  [[ 236 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 313  Phi  === 308 290 356  [[ 157 ]]  #double
 314  Phi  === 308 296 360  [[ 157 157 ]]  #int
 316  Phi  === 308 298 361  [[ 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 318  OpaqueZeroTripGuard  === _ 358  [[ 319 ]] 
 319  CmpI  === _ 318 135  [[ 320 ]] 
 320  Bool  === _ 319  [[ 321 ]] [lt]
 321  If  === 352 320  [[ 311 322 ]] P=0.500000, C=-1.000000
 322  IfTrue  === 321  [[ 297 323 ]] #1
 323  SqrtD  === 322 432  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 324  StoreD  === 342 340 325 332  [[ 340 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 325  AddP  === _ 64 326 162  [[ 324 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 326  AddP  === _ 64 64 331  [[ 325 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 327  Bool  === _ 328  [[ 343 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 328  CmpI  === _ 335 370  [[ 327 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 329  Bool  === _ 330  [[ 341 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 330  CmpU  === _ 338 135  [[ 329 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 331  LShiftL  === _ 336 166  [[ 326 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 332  AddD  === _ 206 345  [[ 324 356 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 333  SqrtD  === 344 334  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 334  ConvI2D  === _ 335  [[ 333 368 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 335  AddI  === _ 338 78  [[ 328 334 338 358 364 243 391 400 431 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 336  ConvI2L  === _ 337  [[ 331 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 337  CastII  === 342 338  [[ 336 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 338  Phi  === 339 36 335  [[ 330 335 337 360 ]]  #int #tripcount !orig=243,[233]
 339  CountedLoop  === 339 220 344  [[ 338 339 340 341 345 ]] inner stride: 1 pre of N261 !orig=261,[224],[198]
 340  Phi  === 339 7 324  [[ 324 361 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 341  RangeCheck  === 339 329  [[ 342 349 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 342  IfTrue  === 341  [[ 324 337 343 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 343  CountedLoopEnd  === 342 327  [[ 344 362 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 344  IfTrue  === 343  [[ 333 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 345  Phi  === 339 214 333  [[ 332 ]]  #double !orig=241,232
 346  IfFalse  === 366  [[ 352 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 349  IfFalse  === 341  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 350  Region  === 350 349 351  [[ 350 308 356 360 361 ]]  !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 351  IfFalse  === 221  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 352  Region  === 352 346 353  [[ 352 321 354 431 358 ]]  !orig=[317]
 353  IfFalse  === 258  [[ 352 ]] #0 !orig=[317]
 354  Phi  === 352 324 201  [[ 298 312 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 356  Phi  === 350 332 205  [[ 313 ]]  #double
 358  Phi  === 352 335 211  [[ 296 318 ]]  #int
 360  Phi  === 350 338 243  [[ 314 ]]  #int
 361  Phi  === 350 340 237  [[ 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 362  IfFalse  === 343  [[ 366 ]] #0
 363  OpaqueZeroTripGuard  === _ 383  [[ 364 ]] 
 364  CmpI  === _ 335 363  [[ 365 ]] 
 365  Bool  === _ 364  [[ 366 ]] [lt]
 366  If  === 362 365  [[ 346 367 ]] P=0.999999, C=-1.000000
 367  IfTrue  === 366  [[ 395 368 ]] #1
 368  SqrtD  === 367 334  [[ 241 ]]  !orig=333,145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 369  AddI  === _ 36 78  [[ 384 ]] 
 370  Opaque1  === _ 428 135  [[ 328 ]] 
 371  ConL  === 0  [[ 385 ]]  #long:0
 372  ConL  === 0  [[ 379 386 ]]  #long:1
 375  ConvI2L  === _ 190  [[ 378 385 ]]  #long:minint..maxint
 376  ConvI2L  === _ 135  [[ 378 ]]  #long:minint..maxint
 377  ConvI2L  === _ 135  [[ 382 ]]  #long:minint..maxint
 378  SubL  === _ 376 375  [[ 379 ]] 
 379  DivL  === _ 378 372  [[ 381 ]] 
 380  ConL  === 0  [[ 381 ]]  #long:minint
 381  MaxL  === _ 379 380  [[ 382 ]] 
 382  MinL  === _ 381 377  [[ 383 ]] 
 383  ConvL2I  === _ 382  [[ 254 363 434 ]]  #int !orig=[429]
 384  ConvI2L  === _ 369  [[ 389 ]]  #long:minint..maxint
 385  SubL  === _ 371 375  [[ 386 ]] 
 386  DivL  === _ 385 372  [[ 388 ]] 
 387  ConL  === 0  [[ 388 ]]  #long:maxint
 388  MinL  === _ 386 387  [[ 389 ]] 
 389  MaxL  === _ 384 388  [[ 390 ]] 
 390  ConvL2I  === _ 389  [[ 428 ]]  #int
 391  OpaqueLoopInit  === _ 335  [[ 408 418 ]] 
 392  CmpU  === _ 434 135  [[ 393 ]] 
 393  Bool  === _ 392  [[ 394 ]] [lt]
 394  OpaqueInitializedAssertionPredicate  === _ 393  [[ 395 ]] 
 395  RangeCheck  === 367 394  [[ 396 397 ]] P=0.999999, C=-1.000000
 396  IfFalse  === 395  [[ 399 ]] #0
 397  IfTrue  === 395  [[ 403 ]] #1
 399  Halt  === 396 1 1 8 1  [[ 0 ]] 
 400  CmpU  === _ 335 135  [[ 401 ]] 
 401  Bool  === _ 400  [[ 402 ]] [lt]
 402  OpaqueInitializedAssertionPredicate  === _ 401  [[ 403 ]] 
 403  RangeCheck  === 397 402  [[ 404 405 ]] P=0.999999, C=-1.000000
 404  IfFalse  === 403  [[ 407 ]] #0
 405  IfTrue  === 403  [[ 411 ]] #1
 407  Halt  === 404 1 1 8 1  [[ 0 ]] 
 408  CmpU  === _ 391 135  [[ 409 ]] 
 409  Bool  === _ 408  [[ 410 ]] [lt]
 410  Opaque4  === _ 409 78  [[ 411 ]] 
 411  RangeCheck  === 405 410  [[ 412 413 ]] P=0.999999, C=-1.000000
 412  IfFalse  === 411  [[ 415 ]] #0
 413  IfTrue  === 411  [[ 423 ]] #1
 415  Halt  === 412 1 1 8 1  [[ 0 ]] 
 416  OpaqueLoopStride  === _ 78  [[ 435 ]] 
 418  AddI  === _ 391 435  [[ 420 ]]  !orig=[419]
 420  CmpU  === _ 418 135  [[ 421 ]] 
 421  Bool  === _ 420  [[ 422 ]] [lt]
 422  Opaque4  === _ 421 78  [[ 423 ]] 
 423  RangeCheck  === 413 422  [[ 424 425 ]] P=0.999999, C=-1.000000
 424  IfFalse  === 423  [[ 427 ]] #0
 425  IfTrue  === 423  [[ 260 ]] #1
 427  Halt  === 424 1 1 8 1  [[ 0 ]] 
 428  MinI  === _ 390 135  [[ 370 ]] 
 431  Phi  === 352 335 211  [[ 432 ]]  #int !orig=[357]
 432  ConvI2D  === _ 431  [[ 323 ]]  #double !orig=[357]
 433  ConI  === 0  [[ 434 435 ]]  #int:-1
 434  AddI  === _ 383 433  [[ 392 ]]  !orig=[430],[374]
 435  AddI  === _ 416 433  [[ 418 ]]  !orig=[417]
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 179 161 399 407 415 427  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 371 372 373 380 387 433 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 340 81 16 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 427 415 407 399 ]] FramePtr !orig=[426] !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 338 84 369 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  47  ConP  === 0  [[ 48 84 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !orig=[193] !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 84 ]] #0 !orig=[276],[195] !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 202 157 157 203 203 262 134 134 283 284 284 325 326 326 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !orig=281,[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 293 335 369 410 416 221 422 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 51 6 81 8 9 (83 47 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 64 64 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 428 408 208 286 288 319 370 330 420 376 377 392 400 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 316  [[ 157 ]]  { N40:rawptr:BotPTR - - N316:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 308 6 153 8 9 (156 64 32 1 314 1 1 1 1 64 314 313 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 283 325 ]]  #long:16
 166  ConI  === 0  [[ 204 289 331 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 219 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 375 ]]  #int:0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 64 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 64 64 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 241 206  [[ 201 356 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 290 332 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 211  AddI  === _ 243 78  [[ 144 262 254 243 358 431 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 186 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 78  [[ 222 351 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 310  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 236  Phi  === 226 7 312  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 324 201  [[ 361 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 368 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 335 211  [[ 211 360 213 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 383  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 353 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 425 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] inner stride: 1 main of N261 strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 64 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 282  StoreD  === 300 298 283 290  [[ 298 312 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 283  AddP  === _ 64 284 162  [[ 282 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 284  AddP  === _ 64 64 289  [[ 283 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 285  Bool  === _ 286  [[ 301 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 286  CmpI  === _ 293 135  [[ 285 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 287  Bool  === _ 288  [[ 299 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 288  CmpU  === _ 296 135  [[ 287 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 289  LShiftL  === _ 294 166  [[ 284 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 290  AddD  === _ 206 303  [[ 282 313 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 291  SqrtD  === 302 292  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 292  ConvI2D  === _ 293  [[ 291 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 293  AddI  === _ 296 78  [[ 286 292 296 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 294  ConvI2L  === _ 295  [[ 289 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 295  CastII  === 300 296  [[ 294 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 296  Phi  === 297 358 293  [[ 288 293 295 314 ]]  #int #tripcount !orig=243,[233]
 297  CountedLoop  === 297 322 302  [[ 296 297 298 299 303 ]] inner stride: 1 post of N261 !orig=261,[224],[198]
 298  Phi  === 297 354 282  [[ 282 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 299  RangeCheck  === 297 287  [[ 300 307 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 300  IfTrue  === 299  [[ 282 295 301 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 301  CountedLoopEnd  === 300 285  [[ 302 304 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 302  IfTrue  === 301  [[ 291 297 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 303  Phi  === 297 323 291  [[ 290 ]]  #double !orig=241,232
 304  IfFalse  === 301  [[ 310 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 307  IfFalse  === 299  [[ 308 ]] #0 !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 308  Region  === 308 307 350  [[ 308 157 313 314 316 ]]  !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 310  Region  === 310 304 311  [[ 310 226 312 ]]  !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 311  IfFalse  === 321  [[ 310 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 312  Phi  === 310 282 354  [[ 236 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 313  Phi  === 308 290 356  [[ 157 ]]  #double
 314  Phi  === 308 296 360  [[ 157 157 ]]  #int
 316  Phi  === 308 298 361  [[ 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 318  OpaqueZeroTripGuard  === _ 358  [[ 319 ]] 
 319  CmpI  === _ 318 135  [[ 320 ]] 
 320  Bool  === _ 319  [[ 321 ]] [lt]
 321  If  === 352 320  [[ 311 322 ]] P=0.500000, C=-1.000000
 322  IfTrue  === 321  [[ 297 323 ]] #1
 323  SqrtD  === 322 432  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 324  StoreD  === 342 340 325 332  [[ 340 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 325  AddP  === _ 64 326 162  [[ 324 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 326  AddP  === _ 64 64 331  [[ 325 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 327  Bool  === _ 328  [[ 343 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 328  CmpI  === _ 335 370  [[ 327 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 329  Bool  === _ 330  [[ 341 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 330  CmpU  === _ 338 135  [[ 329 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 331  LShiftL  === _ 336 166  [[ 326 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 332  AddD  === _ 206 345  [[ 324 356 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 333  SqrtD  === 344 334  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 334  ConvI2D  === _ 335  [[ 333 368 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 335  AddI  === _ 338 78  [[ 328 334 338 358 364 243 391 400 431 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 336  ConvI2L  === _ 337  [[ 331 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 337  CastII  === 342 338  [[ 336 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 338  Phi  === 339 36 335  [[ 330 335 337 360 ]]  #int #tripcount !orig=243,[233]
 339  CountedLoop  === 339 220 344  [[ 338 339 340 341 345 ]] inner stride: 1 pre of N261 !orig=261,[224],[198]
 340  Phi  === 339 7 324  [[ 324 361 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 341  RangeCheck  === 339 329  [[ 342 349 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 342  IfTrue  === 341  [[ 324 337 343 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 343  CountedLoopEnd  === 342 327  [[ 344 362 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 344  IfTrue  === 343  [[ 333 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 345  Phi  === 339 214 333  [[ 332 ]]  #double !orig=241,232
 346  IfFalse  === 366  [[ 352 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 349  IfFalse  === 341  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 350  Region  === 350 349 351  [[ 350 308 356 360 361 ]]  !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 351  IfFalse  === 221  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 352  Region  === 352 346 353  [[ 352 321 354 431 358 ]]  !orig=[317]
 353  IfFalse  === 258  [[ 352 ]] #0 !orig=[317]
 354  Phi  === 352 324 201  [[ 298 312 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 356  Phi  === 350 332 205  [[ 313 ]]  #double
 358  Phi  === 352 335 211  [[ 296 318 ]]  #int
 360  Phi  === 350 338 243  [[ 314 ]]  #int
 361  Phi  === 350 340 237  [[ 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 362  IfFalse  === 343  [[ 366 ]] #0
 363  OpaqueZeroTripGuard  === _ 383  [[ 364 ]] 
 364  CmpI  === _ 335 363  [[ 365 ]] 
 365  Bool  === _ 364  [[ 366 ]] [lt]
 366  If  === 362 365  [[ 346 367 ]] P=0.999999, C=-1.000000
 367  IfTrue  === 366  [[ 395 368 ]] #1
 368  SqrtD  === 367 334  [[ 241 ]]  !orig=333,145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 369  AddI  === _ 36 78  [[ 384 ]] 
 370  Opaque1  === _ 428 135  [[ 328 ]] 
 371  ConL  === 0  [[ 385 ]]  #long:0
 372  ConL  === 0  [[ 379 386 ]]  #long:1
 375  ConvI2L  === _ 190  [[ 378 385 ]]  #long:minint..maxint
 376  ConvI2L  === _ 135  [[ 378 ]]  #long:minint..maxint
 377  ConvI2L  === _ 135  [[ 382 ]]  #long:minint..maxint
 378  SubL  === _ 376 375  [[ 379 ]] 
 379  DivL  === _ 378 372  [[ 381 ]] 
 380  ConL  === 0  [[ 381 ]]  #long:minint
 381  MaxL  === _ 379 380  [[ 382 ]] 
 382  MinL  === _ 381 377  [[ 383 ]] 
 383  ConvL2I  === _ 382  [[ 254 363 434 ]]  #int !orig=[429]
 384  ConvI2L  === _ 369  [[ 389 ]]  #long:minint..maxint
 385  SubL  === _ 371 375  [[ 386 ]] 
 386  DivL  === _ 385 372  [[ 388 ]] 
 387  ConL  === 0  [[ 388 ]]  #long:maxint
 388  MinL  === _ 386 387  [[ 389 ]] 
 389  MaxL  === _ 384 388  [[ 390 ]] 
 390  ConvL2I  === _ 389  [[ 428 ]]  #int
 391  OpaqueLoopInit  === _ 335  [[ 408 418 ]] 
 392  CmpU  === _ 434 135  [[ 393 ]] 
 393  Bool  === _ 392  [[ 394 ]] [lt]
 394  OpaqueInitializedAssertionPredicate  === _ 393  [[ 395 ]] 
 395  RangeCheck  === 367 394  [[ 396 397 ]] P=0.999999, C=-1.000000
 396  IfFalse  === 395  [[ 399 ]] #0
 397  IfTrue  === 395  [[ 403 ]] #1
 399  Halt  === 396 1 1 8 1  [[ 0 ]] 
 400  CmpU  === _ 335 135  [[ 401 ]] 
 401  Bool  === _ 400  [[ 402 ]] [lt]
 402  OpaqueInitializedAssertionPredicate  === _ 401  [[ 403 ]] 
 403  RangeCheck  === 397 402  [[ 404 405 ]] P=0.999999, C=-1.000000
 404  IfFalse  === 403  [[ 407 ]] #0
 405  IfTrue  === 403  [[ 411 ]] #1
 407  Halt  === 404 1 1 8 1  [[ 0 ]] 
 408  CmpU  === _ 391 135  [[ 409 ]] 
 409  Bool  === _ 408  [[ 410 ]] [lt]
 410  Opaque4  === _ 409 78  [[ 411 ]] 
 411  RangeCheck  === 405 410  [[ 412 413 ]] P=0.999999, C=-1.000000
 412  IfFalse  === 411  [[ 415 ]] #0
 413  IfTrue  === 411  [[ 423 ]] #1
 415  Halt  === 412 1 1 8 1  [[ 0 ]] 
 416  OpaqueLoopStride  === _ 78  [[ 435 ]] 
 418  AddI  === _ 391 435  [[ 420 ]]  !orig=[419]
 420  CmpU  === _ 418 135  [[ 421 ]] 
 421  Bool  === _ 420  [[ 422 ]] [lt]
 422  Opaque4  === _ 421 78  [[ 423 ]] 
 423  RangeCheck  === 413 422  [[ 424 425 ]] P=0.999999, C=-1.000000
 424  IfFalse  === 423  [[ 427 ]] #0
 425  IfTrue  === 423  [[ 260 ]] #1
 427  Halt  === 424 1 1 8 1  [[ 0 ]] 
 428  MinI  === _ 390 135  [[ 370 ]] 
 431  Phi  === 352 335 211  [[ 432 ]]  #int !orig=[357]
 432  ConvI2D  === _ 431  [[ 323 ]]  #double !orig=[357]
 433  ConI  === 0  [[ 434 435 ]]  #int:-1
 434  AddI  === _ 383 433  [[ 392 ]]  !orig=[430],[374]
 435  AddI  === _ 416 433  [[ 418 ]]  !orig=[417]
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 179 161 399 407 415 427  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 371 372 373 380 387 433 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 340 81 16 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 427 415 407 399 ]] FramePtr !orig=[426] !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 338 84 369 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  47  ConP  === 0  [[ 48 84 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !orig=[193] !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 84 ]] #0 !orig=[276],[195] !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 202 157 157 203 203 262 134 134 283 284 284 325 326 326 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !orig=281,[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 293 335 369 410 416 221 422 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 51 6 81 8 9 (83 47 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 64 64 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 428 408 208 286 288 319 370 330 420 376 377 392 400 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 316  [[ 157 ]]  { N40:rawptr:BotPTR - - N316:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 308 6 153 8 9 (156 64 32 1 314 1 1 1 1 64 314 313 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 283 325 ]]  #long:16
 166  ConI  === 0  [[ 204 289 331 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 219 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 375 ]]  #int:0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 64 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 64 64 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 241 206  [[ 201 356 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 290 332 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 211  AddI  === _ 243 78  [[ 144 262 254 243 358 431 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 186 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 78  [[ 222 351 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 310  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 236  Phi  === 226 7 312  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 324 201  [[ 361 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 368 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 335 211  [[ 211 360 213 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 383  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 353 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 425 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] inner stride: 1 main of N261 strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 64 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 282  StoreD  === 300 298 283 290  [[ 298 312 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 283  AddP  === _ 64 284 162  [[ 282 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 284  AddP  === _ 64 64 289  [[ 283 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 285  Bool  === _ 286  [[ 301 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 286  CmpI  === _ 293 135  [[ 285 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 287  Bool  === _ 288  [[ 299 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 288  CmpU  === _ 296 135  [[ 287 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 289  LShiftL  === _ 294 166  [[ 284 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 290  AddD  === _ 206 303  [[ 282 313 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 291  SqrtD  === 302 292  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 292  ConvI2D  === _ 293  [[ 291 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 293  AddI  === _ 296 78  [[ 286 292 296 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 294  ConvI2L  === _ 295  [[ 289 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 295  CastII  === 300 296  [[ 294 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 296  Phi  === 297 358 293  [[ 288 293 295 314 ]]  #int #tripcount !orig=243,[233]
 297  CountedLoop  === 297 322 302  [[ 296 297 298 299 303 ]] inner stride: 1 post of N261 !orig=261,[224],[198]
 298  Phi  === 297 354 282  [[ 282 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 299  RangeCheck  === 297 287  [[ 300 307 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 300  IfTrue  === 299  [[ 282 295 301 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 301  CountedLoopEnd  === 300 285  [[ 302 304 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 302  IfTrue  === 301  [[ 291 297 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 303  Phi  === 297 323 291  [[ 290 ]]  #double !orig=241,232
 304  IfFalse  === 301  [[ 310 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 307  IfFalse  === 299  [[ 308 ]] #0 !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 308  Region  === 308 307 350  [[ 308 157 313 314 316 ]]  !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 310  Region  === 310 304 311  [[ 310 226 312 ]]  !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 311  IfFalse  === 321  [[ 310 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 312  Phi  === 310 282 354  [[ 236 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 313  Phi  === 308 290 356  [[ 157 ]]  #double
 314  Phi  === 308 296 360  [[ 157 157 ]]  #int
 316  Phi  === 308 298 361  [[ 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 318  OpaqueZeroTripGuard  === _ 358  [[ 319 ]] 
 319  CmpI  === _ 318 135  [[ 320 ]] 
 320  Bool  === _ 319  [[ 321 ]] [lt]
 321  If  === 352 320  [[ 311 322 ]] P=0.500000, C=-1.000000
 322  IfTrue  === 321  [[ 297 323 ]] #1
 323  SqrtD  === 322 432  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 324  StoreD  === 342 340 325 332  [[ 340 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 325  AddP  === _ 64 326 162  [[ 324 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 326  AddP  === _ 64 64 331  [[ 325 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 327  Bool  === _ 328  [[ 343 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 328  CmpI  === _ 335 370  [[ 327 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 329  Bool  === _ 330  [[ 341 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 330  CmpU  === _ 338 135  [[ 329 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 331  LShiftL  === _ 336 166  [[ 326 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 332  AddD  === _ 206 345  [[ 324 356 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 333  SqrtD  === 344 334  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 334  ConvI2D  === _ 335  [[ 333 368 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 335  AddI  === _ 338 78  [[ 328 334 338 358 364 243 391 400 431 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 336  ConvI2L  === _ 337  [[ 331 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 337  CastII  === 342 338  [[ 336 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 338  Phi  === 339 36 335  [[ 330 335 337 360 ]]  #int #tripcount !orig=243,[233]
 339  CountedLoop  === 339 220 344  [[ 338 339 340 341 345 ]] inner stride: 1 pre of N261 !orig=261,[224],[198]
 340  Phi  === 339 7 324  [[ 324 361 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 341  RangeCheck  === 339 329  [[ 342 349 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 342  IfTrue  === 341  [[ 324 337 343 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 343  CountedLoopEnd  === 342 327  [[ 344 362 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 344  IfTrue  === 343  [[ 333 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 345  Phi  === 339 214 333  [[ 332 ]]  #double !orig=241,232
 346  IfFalse  === 366  [[ 352 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 349  IfFalse  === 341  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 350  Region  === 350 349 351  [[ 350 308 356 360 361 ]]  !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 351  IfFalse  === 221  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 352  Region  === 352 346 353  [[ 352 321 354 431 358 ]]  !orig=[317]
 353  IfFalse  === 258  [[ 352 ]] #0 !orig=[317]
 354  Phi  === 352 324 201  [[ 298 312 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 356  Phi  === 350 332 205  [[ 313 ]]  #double
 358  Phi  === 352 335 211  [[ 296 318 ]]  #int
 360  Phi  === 350 338 243  [[ 314 ]]  #int
 361  Phi  === 350 340 237  [[ 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 362  IfFalse  === 343  [[ 366 ]] #0
 363  OpaqueZeroTripGuard  === _ 383  [[ 364 ]] 
 364  CmpI  === _ 335 363  [[ 365 ]] 
 365  Bool  === _ 364  [[ 366 ]] [lt]
 366  If  === 362 365  [[ 346 367 ]] P=0.999999, C=-1.000000
 367  IfTrue  === 366  [[ 395 368 ]] #1
 368  SqrtD  === 367 334  [[ 241 ]]  !orig=333,145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 369  AddI  === _ 36 78  [[ 384 ]] 
 370  Opaque1  === _ 428 135  [[ 328 ]] 
 371  ConL  === 0  [[ 385 ]]  #long:0
 372  ConL  === 0  [[ 379 ]]  #long:1
 375  ConvI2L  === _ 190  [[ 378 385 ]]  #long:minint..maxint
 376  ConvI2L  === _ 135  [[ 378 ]]  #long:minint..maxint
 377  ConvI2L  === _ 135  [[ 382 ]]  #long:minint..maxint
 378  SubL  === _ 376 375  [[ 379 ]] 
 379  DivL  === _ 378 372  [[ 381 ]] 
 380  ConL  === 0  [[ 381 ]]  #long:minint
 381  MaxL  === _ 379 380  [[ 382 ]] 
 382  MinL  === _ 381 377  [[ 383 ]] 
 383  ConvL2I  === _ 382  [[ 254 363 434 ]]  #int !orig=[429]
 384  ConvI2L  === _ 369  [[ 389 ]]  #long:minint..maxint
 385  SubL  === _ 371 375  [[ 388 ]]  !orig=[386]
 387  ConL  === 0  [[ 388 ]]  #long:maxint
 388  MinL  === _ 385 387  [[ 389 ]] 
 389  MaxL  === _ 384 388  [[ 390 ]] 
 390  ConvL2I  === _ 389  [[ 428 ]]  #int
 391  OpaqueLoopInit  === _ 335  [[ 408 418 ]] 
 392  CmpU  === _ 434 135  [[ 393 ]] 
 393  Bool  === _ 392  [[ 394 ]] [lt]
 394  OpaqueInitializedAssertionPredicate  === _ 393  [[ 395 ]] 
 395  RangeCheck  === 367 394  [[ 396 397 ]] P=0.999999, C=-1.000000
 396  IfFalse  === 395  [[ 399 ]] #0
 397  IfTrue  === 395  [[ 403 ]] #1
 399  Halt  === 396 1 1 8 1  [[ 0 ]] 
 400  CmpU  === _ 335 135  [[ 401 ]] 
 401  Bool  === _ 400  [[ 402 ]] [lt]
 402  OpaqueInitializedAssertionPredicate  === _ 401  [[ 403 ]] 
 403  RangeCheck  === 397 402  [[ 404 405 ]] P=0.999999, C=-1.000000
 404  IfFalse  === 403  [[ 407 ]] #0
 405  IfTrue  === 403  [[ 411 ]] #1
 407  Halt  === 404 1 1 8 1  [[ 0 ]] 
 408  CmpU  === _ 391 135  [[ 409 ]] 
 409  Bool  === _ 408  [[ 410 ]] [lt]
 410  Opaque4  === _ 409 78  [[ 411 ]] 
 411  RangeCheck  === 405 410  [[ 412 413 ]] P=0.999999, C=-1.000000
 412  IfFalse  === 411  [[ 415 ]] #0
 413  IfTrue  === 411  [[ 423 ]] #1
 415  Halt  === 412 1 1 8 1  [[ 0 ]] 
 416  OpaqueLoopStride  === _ 78  [[ 435 ]] 
 418  AddI  === _ 391 435  [[ 420 ]]  !orig=[419]
 420  CmpU  === _ 418 135  [[ 421 ]] 
 421  Bool  === _ 420  [[ 422 ]] [lt]
 422  Opaque4  === _ 421 78  [[ 423 ]] 
 423  RangeCheck  === 413 422  [[ 424 425 ]] P=0.999999, C=-1.000000
 424  IfFalse  === 423  [[ 427 ]] #0
 425  IfTrue  === 423  [[ 260 ]] #1
 427  Halt  === 424 1 1 8 1  [[ 0 ]] 
 428  MinI  === _ 390 135  [[ 370 ]] 
 431  Phi  === 352 335 211  [[ 432 ]]  #int !orig=[357]
 432  ConvI2D  === _ 431  [[ 323 ]]  #double !orig=[357]
 433  ConI  === 0  [[ 434 435 ]]  #int:-1
 434  AddI  === _ 383 433  [[ 392 ]]  !orig=[430],[374]
 435  AddI  === _ 416 433  [[ 418 ]]  !orig=[417]
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 179 161 399 407 415 427  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 371 372 373 380 387 433 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 340 81 16 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 427 415 407 399 ]] FramePtr !orig=[426] !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 338 84 369 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  47  ConP  === 0  [[ 48 84 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !orig=[193] !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 84 ]] #0 !orig=[276],[195] !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 202 157 157 203 203 262 134 134 283 284 284 325 326 326 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !orig=281,[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 293 335 369 410 416 221 422 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 51 6 81 8 9 (83 47 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 64 64 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 428 408 208 286 288 319 370 330 420 376 377 392 400 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 316  [[ 157 ]]  { N40:rawptr:BotPTR - - N316:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 308 6 153 8 9 (156 64 32 1 314 1 1 1 1 64 314 313 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 283 325 ]]  #long:16
 166  ConI  === 0  [[ 204 289 331 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 219 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 375 ]]  #int:0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 64 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 64 64 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 241 206  [[ 201 356 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 290 332 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 211  AddI  === _ 243 78  [[ 144 262 254 243 358 431 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 186 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 78  [[ 222 351 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 310  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 236  Phi  === 226 7 312  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 324 201  [[ 361 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 368 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 335 211  [[ 211 360 213 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 383  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 353 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 425 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] inner stride: 1 main of N261 strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 64 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 282  StoreD  === 300 298 283 290  [[ 298 312 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 283  AddP  === _ 64 284 162  [[ 282 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 284  AddP  === _ 64 64 289  [[ 283 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 285  Bool  === _ 286  [[ 301 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 286  CmpI  === _ 293 135  [[ 285 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 287  Bool  === _ 288  [[ 299 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 288  CmpU  === _ 296 135  [[ 287 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 289  LShiftL  === _ 294 166  [[ 284 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 290  AddD  === _ 206 303  [[ 282 313 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 291  SqrtD  === 302 292  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 292  ConvI2D  === _ 293  [[ 291 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 293  AddI  === _ 296 78  [[ 286 292 296 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 294  ConvI2L  === _ 295  [[ 289 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 295  CastII  === 300 296  [[ 294 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 296  Phi  === 297 358 293  [[ 288 293 295 314 ]]  #int #tripcount !orig=243,[233]
 297  CountedLoop  === 297 322 302  [[ 296 297 298 299 303 ]] inner stride: 1 post of N261 !orig=261,[224],[198]
 298  Phi  === 297 354 282  [[ 282 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 299  RangeCheck  === 297 287  [[ 300 307 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 300  IfTrue  === 299  [[ 282 295 301 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 301  CountedLoopEnd  === 300 285  [[ 302 304 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 302  IfTrue  === 301  [[ 291 297 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 303  Phi  === 297 323 291  [[ 290 ]]  #double !orig=241,232
 304  IfFalse  === 301  [[ 310 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 307  IfFalse  === 299  [[ 308 ]] #0 !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 308  Region  === 308 307 350  [[ 308 157 313 314 316 ]]  !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 310  Region  === 310 304 311  [[ 310 226 312 ]]  !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 311  IfFalse  === 321  [[ 310 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 312  Phi  === 310 282 354  [[ 236 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 313  Phi  === 308 290 356  [[ 157 ]]  #double
 314  Phi  === 308 296 360  [[ 157 157 ]]  #int
 316  Phi  === 308 298 361  [[ 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 318  OpaqueZeroTripGuard  === _ 358  [[ 319 ]] 
 319  CmpI  === _ 318 135  [[ 320 ]] 
 320  Bool  === _ 319  [[ 321 ]] [lt]
 321  If  === 352 320  [[ 311 322 ]] P=0.500000, C=-1.000000
 322  IfTrue  === 321  [[ 297 323 ]] #1
 323  SqrtD  === 322 432  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 324  StoreD  === 342 340 325 332  [[ 340 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 325  AddP  === _ 64 326 162  [[ 324 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 326  AddP  === _ 64 64 331  [[ 325 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 327  Bool  === _ 328  [[ 343 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 328  CmpI  === _ 335 370  [[ 327 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 329  Bool  === _ 330  [[ 341 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 330  CmpU  === _ 338 135  [[ 329 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 331  LShiftL  === _ 336 166  [[ 326 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 332  AddD  === _ 206 345  [[ 324 356 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 333  SqrtD  === 344 334  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 334  ConvI2D  === _ 335  [[ 333 368 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 335  AddI  === _ 338 78  [[ 328 334 338 358 364 243 391 400 431 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 336  ConvI2L  === _ 337  [[ 331 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 337  CastII  === 342 338  [[ 336 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 338  Phi  === 339 36 335  [[ 330 335 337 360 ]]  #int #tripcount !orig=243,[233]
 339  CountedLoop  === 339 220 344  [[ 338 339 340 341 345 ]] inner stride: 1 pre of N261 !orig=261,[224],[198]
 340  Phi  === 339 7 324  [[ 324 361 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 341  RangeCheck  === 339 329  [[ 342 349 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 342  IfTrue  === 341  [[ 324 337 343 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 343  CountedLoopEnd  === 342 327  [[ 344 362 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 344  IfTrue  === 343  [[ 333 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 345  Phi  === 339 214 333  [[ 332 ]]  #double !orig=241,232
 346  IfFalse  === 366  [[ 352 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 349  IfFalse  === 341  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 350  Region  === 350 349 351  [[ 350 308 356 360 361 ]]  !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 351  IfFalse  === 221  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 352  Region  === 352 346 353  [[ 352 321 354 431 358 ]]  !orig=[317]
 353  IfFalse  === 258  [[ 352 ]] #0 !orig=[317]
 354  Phi  === 352 324 201  [[ 298 312 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 356  Phi  === 350 332 205  [[ 313 ]]  #double
 358  Phi  === 352 335 211  [[ 296 318 ]]  #int
 360  Phi  === 350 338 243  [[ 314 ]]  #int
 361  Phi  === 350 340 237  [[ 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 362  IfFalse  === 343  [[ 366 ]] #0
 363  OpaqueZeroTripGuard  === _ 383  [[ 364 ]] 
 364  CmpI  === _ 335 363  [[ 365 ]] 
 365  Bool  === _ 364  [[ 366 ]] [lt]
 366  If  === 362 365  [[ 346 367 ]] P=0.999999, C=-1.000000
 367  IfTrue  === 366  [[ 395 368 ]] #1
 368  SqrtD  === 367 334  [[ 241 ]]  !orig=333,145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 369  AddI  === _ 36 78  [[ 384 ]] 
 370  Opaque1  === _ 428 135  [[ 328 ]] 
 371  ConL  === 0  [[ 385 ]]  #long:0
 372  ConL  === 0  [[ 379 ]]  #long:1
 375  ConvI2L  === _ 190  [[ 378 385 ]]  #long:minint..maxint
 376  ConvI2L  === _ 135  [[ 378 ]]  #long:minint..maxint
 377  ConvI2L  === _ 135  [[ 382 ]]  #long:minint..maxint
 378  SubL  === _ 376 375  [[ 379 ]] 
 379  DivL  === _ 378 372  [[ 381 ]] 
 380  ConL  === 0  [[ 381 ]]  #long:minint
 381  MaxL  === _ 379 380  [[ 382 ]] 
 382  MinL  === _ 381 377  [[ 383 ]] 
 383  ConvL2I  === _ 382  [[ 254 363 434 ]]  #int !orig=[429]
 384  ConvI2L  === _ 369  [[ 389 ]]  #long:minint..maxint
 385  SubL  === _ 371 375  [[ 388 ]]  !orig=[386]
 387  ConL  === 0  [[ 388 ]]  #long:maxint
 388  MinL  === _ 385 387  [[ 389 ]] 
 389  MaxL  === _ 384 388  [[ 390 ]] 
 390  ConvL2I  === _ 389  [[ 428 ]]  #int
 391  OpaqueLoopInit  === _ 335  [[ 408 418 ]] 
 392  CmpU  === _ 434 135  [[ 393 ]] 
 393  Bool  === _ 392  [[ 394 ]] [lt]
 394  OpaqueInitializedAssertionPredicate  === _ 393  [[ 395 ]] 
 395  RangeCheck  === 367 394  [[ 396 397 ]] P=0.999999, C=-1.000000
 396  IfFalse  === 395  [[ 399 ]] #0
 397  IfTrue  === 395  [[ 403 ]] #1
 399  Halt  === 396 1 1 8 1  [[ 0 ]] 
 400  CmpU  === _ 335 135  [[ 401 ]] 
 401  Bool  === _ 400  [[ 402 ]] [lt]
 402  OpaqueInitializedAssertionPredicate  === _ 401  [[ 403 ]] 
 403  RangeCheck  === 397 402  [[ 404 405 ]] P=0.999999, C=-1.000000
 404  IfFalse  === 403  [[ 407 ]] #0
 405  IfTrue  === 403  [[ 411 ]] #1
 407  Halt  === 404 1 1 8 1  [[ 0 ]] 
 408  CmpU  === _ 391 135  [[ 409 ]] 
 409  Bool  === _ 408  [[ 410 ]] [lt]
 410  Opaque4  === _ 409 78  [[ 411 ]] 
 411  RangeCheck  === 405 410  [[ 412 413 ]] P=0.999999, C=-1.000000
 412  IfFalse  === 411  [[ 415 ]] #0
 413  IfTrue  === 411  [[ 423 ]] #1
 415  Halt  === 412 1 1 8 1  [[ 0 ]] 
 416  OpaqueLoopStride  === _ 78  [[ 435 ]] 
 418  AddI  === _ 391 435  [[ 420 ]]  !orig=[419]
 420  CmpU  === _ 418 135  [[ 421 ]] 
 421  Bool  === _ 420  [[ 422 ]] [lt]
 422  Opaque4  === _ 421 78  [[ 423 ]] 
 423  RangeCheck  === 413 422  [[ 424 425 ]] P=0.999999, C=-1.000000
 424  IfFalse  === 423  [[ 427 ]] #0
 425  IfTrue  === 423  [[ 260 ]] #1
 427  Halt  === 424 1 1 8 1  [[ 0 ]] 
 428  MinI  === _ 390 135  [[ 370 ]] 
 431  Phi  === 352 335 211  [[ 432 ]]  #int !orig=[357]
 432  ConvI2D  === _ 431  [[ 323 ]]  #double !orig=[357]
 433  ConI  === 0  [[ 434 435 ]]  #int:-1
 434  AddI  === _ 383 433  [[ 392 ]]  !orig=[430],[374]
 435  AddI  === _ 416 433  [[ 418 ]]  !orig=[417]
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 179 161 399 407 415 427  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 371 372 373 380 387 433 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 340 81 16 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 427 415 407 399 ]] FramePtr !orig=[426] !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 338 84 369 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  47  ConP  === 0  [[ 48 84 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !orig=[193] !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 84 ]] #0 !orig=[276],[195] !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 202 157 157 203 203 262 134 134 283 284 284 325 326 326 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !orig=281,[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 293 335 369 410 416 221 422 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 51 6 81 8 9 (83 47 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 64 64 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 428 408 208 286 288 319 370 330 420 376 377 392 400 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 316  [[ 157 ]]  { N40:rawptr:BotPTR - - N316:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 308 6 153 8 9 (156 64 32 1 314 1 1 1 1 64 314 313 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 283 325 ]]  #long:16
 166  ConI  === 0  [[ 204 289 331 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 219 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 375 ]]  #int:0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 64 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 64 64 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 206 241  [[ 201 356 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 290 332 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 211  AddI  === _ 243 78  [[ 144 262 254 243 358 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 186 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 78  [[ 222 351 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 310  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 236  Phi  === 226 7 312  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 324 201  [[ 361 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 368 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 335 211  [[ 211 360 213 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 383  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 353 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 425 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] inner stride: 1 main of N261 strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 64 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 282  StoreD  === 300 298 283 290  [[ 298 312 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 283  AddP  === _ 64 284 162  [[ 282 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 284  AddP  === _ 64 64 289  [[ 283 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 285  Bool  === _ 286  [[ 301 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 286  CmpI  === _ 293 135  [[ 285 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 287  Bool  === _ 288  [[ 299 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 288  CmpU  === _ 296 135  [[ 287 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 289  LShiftL  === _ 294 166  [[ 284 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 290  AddD  === _ 206 303  [[ 282 313 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 291  SqrtD  === 302 292  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 292  ConvI2D  === _ 293  [[ 291 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 293  AddI  === _ 296 78  [[ 286 292 296 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 294  ConvI2L  === _ 295  [[ 289 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 295  CastII  === 300 296  [[ 294 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 296  Phi  === 297 358 293  [[ 288 293 295 314 ]]  #int #tripcount !orig=243,[233]
 297  CountedLoop  === 297 322 302  [[ 296 297 298 299 303 ]] inner stride: 1 post of N261 !orig=261,[224],[198]
 298  Phi  === 297 354 282  [[ 282 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 299  RangeCheck  === 297 287  [[ 300 307 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 300  IfTrue  === 299  [[ 282 295 301 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 301  CountedLoopEnd  === 300 285  [[ 302 304 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 302  IfTrue  === 301  [[ 291 297 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 303  Phi  === 297 323 291  [[ 290 ]]  #double !orig=241,232
 304  IfFalse  === 301  [[ 310 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 307  IfFalse  === 299  [[ 308 ]] #0 !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 308  Region  === 308 307 350  [[ 308 157 313 314 316 ]]  !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 310  Region  === 310 304 311  [[ 310 226 312 ]]  !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 311  IfFalse  === 321  [[ 310 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 312  Phi  === 310 282 354  [[ 236 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 313  Phi  === 308 290 356  [[ 157 ]]  #double
 314  Phi  === 308 296 360  [[ 157 157 ]]  #int
 316  Phi  === 308 298 361  [[ 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 318  OpaqueZeroTripGuard  === _ 358  [[ 319 ]] 
 319  CmpI  === _ 318 135  [[ 320 ]] 
 320  Bool  === _ 319  [[ 321 ]] [lt]
 321  If  === 352 320  [[ 311 322 ]] P=0.500000, C=-1.000000
 322  IfTrue  === 321  [[ 297 323 ]] #1
 323  SqrtD  === 322 432  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 324  StoreD  === 342 340 325 332  [[ 340 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 325  AddP  === _ 64 326 162  [[ 324 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 326  AddP  === _ 64 64 331  [[ 325 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 327  Bool  === _ 328  [[ 343 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 328  CmpI  === _ 335 370  [[ 327 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 329  Bool  === _ 330  [[ 341 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 330  CmpU  === _ 338 135  [[ 329 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 331  LShiftL  === _ 336 166  [[ 326 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 332  AddD  === _ 206 345  [[ 324 356 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 333  SqrtD  === 344 334  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 334  ConvI2D  === _ 335  [[ 333 368 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 335  AddI  === _ 338 78  [[ 328 334 338 358 364 243 391 400 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 336  ConvI2L  === _ 337  [[ 331 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 337  CastII  === 342 338  [[ 336 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 338  Phi  === 339 36 335  [[ 330 335 337 360 ]]  #int #tripcount !orig=243,[233]
 339  CountedLoop  === 339 220 344  [[ 338 339 340 341 345 ]] inner stride: 1 pre of N261 !orig=261,[224],[198]
 340  Phi  === 339 7 324  [[ 324 361 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 341  RangeCheck  === 339 329  [[ 342 349 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 342  IfTrue  === 341  [[ 324 337 343 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 343  CountedLoopEnd  === 342 327  [[ 344 362 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 344  IfTrue  === 343  [[ 333 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 345  Phi  === 339 214 333  [[ 332 ]]  #double !orig=241,232
 346  IfFalse  === 366  [[ 352 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 349  IfFalse  === 341  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 350  Region  === 350 349 351  [[ 350 308 356 360 361 ]]  !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 351  IfFalse  === 221  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 352  Region  === 352 346 353  [[ 352 321 354 358 ]]  !orig=[317]
 353  IfFalse  === 258  [[ 352 ]] #0 !orig=[317]
 354  Phi  === 352 324 201  [[ 298 312 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 356  Phi  === 350 332 205  [[ 313 ]]  #double
 358  Phi  === 352 335 211  [[ 296 318 432 ]]  #int !orig=[431],[357]
 360  Phi  === 350 338 243  [[ 314 ]]  #int
 361  Phi  === 350 340 237  [[ 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 362  IfFalse  === 343  [[ 366 ]] #0
 363  OpaqueZeroTripGuard  === _ 383  [[ 364 ]] 
 364  CmpI  === _ 335 363  [[ 365 ]] 
 365  Bool  === _ 364  [[ 366 ]] [lt]
 366  If  === 362 365  [[ 346 367 ]] P=0.999999, C=-1.000000
 367  IfTrue  === 366  [[ 395 368 ]] #1
 368  SqrtD  === 367 334  [[ 241 ]]  !orig=333,145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 369  AddI  === _ 36 78  [[ 384 ]] 
 370  Opaque1  === _ 428 135  [[ 328 ]] 
 371  ConL  === 0  [[ 385 ]]  #long:0
 372  ConL  === 0  [[ 379 ]]  #long:1
 375  ConvI2L  === _ 190  [[ 378 385 ]]  #long:minint..maxint
 376  ConvI2L  === _ 135  [[ 378 ]]  #long:minint..maxint
 377  ConvI2L  === _ 135  [[ 382 ]]  #long:minint..maxint
 378  SubL  === _ 376 375  [[ 379 ]] 
 379  DivL  === _ 378 372  [[ 381 ]] 
 380  ConL  === 0  [[ 381 ]]  #long:minint
 381  MaxL  === _ 379 380  [[ 382 ]] 
 382  MinL  === _ 381 377  [[ 383 ]] 
 383  ConvL2I  === _ 382  [[ 254 363 434 ]]  #int !orig=[429]
 384  ConvI2L  === _ 369  [[ 389 ]]  #long:minint..maxint
 385  SubL  === _ 371 375  [[ 388 ]]  !orig=[386]
 387  ConL  === 0  [[ 388 ]]  #long:maxint
 388  MinL  === _ 385 387  [[ 389 ]] 
 389  MaxL  === _ 384 388  [[ 390 ]] 
 390  ConvL2I  === _ 389  [[ 428 ]]  #int
 391  OpaqueLoopInit  === _ 335  [[ 408 436 ]] 
 392  CmpU  === _ 434 135  [[ 393 ]] 
 393  Bool  === _ 392  [[ 394 ]] [lt]
 394  OpaqueInitializedAssertionPredicate  === _ 393  [[ 395 ]] 
 395  RangeCheck  === 367 394  [[ 396 397 ]] P=0.999999, C=-1.000000
 396  IfFalse  === 395  [[ 399 ]] #0
 397  IfTrue  === 395  [[ 403 ]] #1
 399  Halt  === 396 1 1 8 1  [[ 0 ]] 
 400  CmpU  === _ 335 135  [[ 401 ]] 
 401  Bool  === _ 400  [[ 402 ]] [lt]
 402  OpaqueInitializedAssertionPredicate  === _ 401  [[ 403 ]] 
 403  RangeCheck  === 397 402  [[ 404 405 ]] P=0.999999, C=-1.000000
 404  IfFalse  === 403  [[ 407 ]] #0
 405  IfTrue  === 403  [[ 411 ]] #1
 407  Halt  === 404 1 1 8 1  [[ 0 ]] 
 408  CmpU  === _ 391 135  [[ 409 ]] 
 409  Bool  === _ 408  [[ 410 ]] [lt]
 410  Opaque4  === _ 409 78  [[ 411 ]] 
 411  RangeCheck  === 405 410  [[ 412 413 ]] P=0.999999, C=-1.000000
 412  IfFalse  === 411  [[ 415 ]] #0
 413  IfTrue  === 411  [[ 423 ]] #1
 415  Halt  === 412 1 1 8 1  [[ 0 ]] 
 416  OpaqueLoopStride  === _ 78  [[ 435 436 ]] 
 418  AddI  === _ 436 433  [[ 420 ]]  !orig=[419]
 420  CmpU  === _ 418 135  [[ 421 ]] 
 421  Bool  === _ 420  [[ 422 ]] [lt]
 422  Opaque4  === _ 421 78  [[ 423 ]] 
 423  RangeCheck  === 413 422  [[ 424 425 ]] P=0.999999, C=-1.000000
 424  IfFalse  === 423  [[ 427 ]] #0
 425  IfTrue  === 423  [[ 260 ]] #1
 427  Halt  === 424 1 1 8 1  [[ 0 ]] 
 428  MinI  === _ 390 135  [[ 370 ]] 
 432  ConvI2D  === _ 358  [[ 323 ]]  #double !orig=[357]
 433  ConI  === 0  [[ 434 435 418 ]]  #int:-1
 434  AddI  === _ 383 433  [[ 392 ]]  !orig=[430],[374]
 436  AddI  === _ 391 416  [[ 418 ]]  !orig=435,[417]
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 179 161 399 407 415 427  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 371 372 373 380 387 433 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 340 81 16 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 427 415 407 399 ]] FramePtr !orig=[426] !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 338 84 369 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  47  ConP  === 0  [[ 48 84 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !orig=[193] !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 84 ]] #0 !orig=[276],[195] !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 202 157 157 203 203 262 134 134 283 284 284 325 326 326 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !orig=281,[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 293 335 369 410 416 221 422 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 51 6 81 8 9 (83 47 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 64 64 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 428 408 208 286 288 319 370 330 420 376 377 392 400 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 316  [[ 157 ]]  { N40:rawptr:BotPTR - - N316:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 308 6 153 8 9 (156 64 32 1 314 1 1 1 1 64 314 313 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 283 325 ]]  #long:16
 166  ConI  === 0  [[ 204 289 331 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 219 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 375 ]]  #int:0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 64 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 64 64 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 206 241  [[ 201 356 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 290 332 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 211  AddI  === _ 243 78  [[ 144 262 254 243 358 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 186 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 78  [[ 222 351 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 310  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 236  Phi  === 226 7 312  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 324 201  [[ 361 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 368 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 335 211  [[ 211 360 213 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 383  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 353 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 425 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] inner stride: 1 main of N261 strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 64 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 282  StoreD  === 300 298 283 290  [[ 298 312 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 283  AddP  === _ 64 284 162  [[ 282 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 284  AddP  === _ 64 64 289  [[ 283 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 285  Bool  === _ 286  [[ 301 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 286  CmpI  === _ 293 135  [[ 285 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 287  Bool  === _ 288  [[ 299 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 288  CmpU  === _ 296 135  [[ 287 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 289  LShiftL  === _ 294 166  [[ 284 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 290  AddD  === _ 206 303  [[ 282 313 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 291  SqrtD  === 302 292  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 292  ConvI2D  === _ 293  [[ 291 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 293  AddI  === _ 296 78  [[ 286 292 296 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 294  ConvI2L  === _ 295  [[ 289 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 295  CastII  === 300 296  [[ 294 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 296  Phi  === 297 358 293  [[ 288 293 295 314 ]]  #int #tripcount !orig=243,[233]
 297  CountedLoop  === 297 322 302  [[ 296 297 298 299 303 ]] inner stride: 1 post of N261 !orig=261,[224],[198]
 298  Phi  === 297 354 282  [[ 282 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 299  RangeCheck  === 297 287  [[ 300 307 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 300  IfTrue  === 299  [[ 282 295 301 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 301  CountedLoopEnd  === 300 285  [[ 302 304 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 302  IfTrue  === 301  [[ 291 297 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 303  Phi  === 297 323 291  [[ 290 ]]  #double !orig=241,232
 304  IfFalse  === 301  [[ 310 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 307  IfFalse  === 299  [[ 308 ]] #0 !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 308  Region  === 308 307 350  [[ 308 157 313 314 316 ]]  !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 310  Region  === 310 304 311  [[ 310 226 312 ]]  !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 311  IfFalse  === 321  [[ 310 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 312  Phi  === 310 282 354  [[ 236 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 313  Phi  === 308 290 356  [[ 157 ]]  #double
 314  Phi  === 308 296 360  [[ 157 157 ]]  #int
 316  Phi  === 308 298 361  [[ 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 318  OpaqueZeroTripGuard  === _ 358  [[ 319 ]] 
 319  CmpI  === _ 318 135  [[ 320 ]] 
 320  Bool  === _ 319  [[ 321 ]] [lt]
 321  If  === 352 320  [[ 311 322 ]] P=0.500000, C=-1.000000
 322  IfTrue  === 321  [[ 297 323 ]] #1
 323  SqrtD  === 322 432  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 324  StoreD  === 342 340 325 332  [[ 340 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 325  AddP  === _ 64 326 162  [[ 324 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 326  AddP  === _ 64 64 331  [[ 325 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 327  Bool  === _ 328  [[ 343 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 328  CmpI  === _ 335 370  [[ 327 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 329  Bool  === _ 330  [[ 341 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 330  CmpU  === _ 338 135  [[ 329 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 331  LShiftL  === _ 336 166  [[ 326 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 332  AddD  === _ 206 345  [[ 324 356 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 333  SqrtD  === 344 334  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 334  ConvI2D  === _ 335  [[ 333 368 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 335  AddI  === _ 338 78  [[ 328 334 338 358 364 243 391 400 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 336  ConvI2L  === _ 337  [[ 331 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 337  CastII  === 342 338  [[ 336 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 338  Phi  === 339 36 335  [[ 330 335 337 360 ]]  #int #tripcount !orig=243,[233]
 339  CountedLoop  === 339 220 344  [[ 338 339 340 341 345 ]] inner stride: 1 pre of N261 !orig=261,[224],[198]
 340  Phi  === 339 7 324  [[ 324 361 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 341  RangeCheck  === 339 329  [[ 342 349 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 342  IfTrue  === 341  [[ 324 337 343 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 343  CountedLoopEnd  === 342 327  [[ 344 362 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 344  IfTrue  === 343  [[ 333 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 345  Phi  === 339 214 333  [[ 332 ]]  #double !orig=241,232
 346  IfFalse  === 366  [[ 352 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 349  IfFalse  === 341  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 350  Region  === 350 349 351  [[ 350 308 356 360 361 ]]  !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 351  IfFalse  === 221  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 352  Region  === 352 346 353  [[ 352 321 354 358 ]]  !orig=[317]
 353  IfFalse  === 258  [[ 352 ]] #0 !orig=[317]
 354  Phi  === 352 324 201  [[ 298 312 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 356  Phi  === 350 332 205  [[ 313 ]]  #double
 358  Phi  === 352 335 211  [[ 296 318 432 ]]  #int !orig=[431],[357]
 360  Phi  === 350 338 243  [[ 314 ]]  #int
 361  Phi  === 350 340 237  [[ 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 362  IfFalse  === 343  [[ 366 ]] #0
 363  OpaqueZeroTripGuard  === _ 383  [[ 364 ]] 
 364  CmpI  === _ 335 363  [[ 365 ]] 
 365  Bool  === _ 364  [[ 366 ]] [lt]
 366  If  === 362 365  [[ 346 367 ]] P=0.999999, C=-1.000000
 367  IfTrue  === 366  [[ 395 368 ]] #1
 368  SqrtD  === 367 334  [[ 241 ]]  !orig=333,145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 369  AddI  === _ 36 78  [[ 384 ]] 
 370  Opaque1  === _ 428 135  [[ 328 ]] 
 371  ConL  === 0  [[ 385 ]]  #long:0
 372  ConL  === 0  [[ 379 ]]  #long:1
 375  ConvI2L  === _ 190  [[ 378 385 ]]  #long:minint..maxint
 376  ConvI2L  === _ 135  [[ 378 ]]  #long:minint..maxint
 377  ConvI2L  === _ 135  [[ 382 ]]  #long:minint..maxint
 378  SubL  === _ 376 375  [[ 379 ]] 
 379  DivL  === _ 378 372  [[ 381 ]] 
 380  ConL  === 0  [[ 381 ]]  #long:minint
 381  MaxL  === _ 379 380  [[ 382 ]] 
 382  MinL  === _ 381 377  [[ 383 ]] 
 383  ConvL2I  === _ 382  [[ 254 363 434 ]]  #int !orig=[429]
 384  ConvI2L  === _ 369  [[ 389 ]]  #long:minint..maxint
 385  SubL  === _ 371 375  [[ 388 ]]  !orig=[386]
 387  ConL  === 0  [[ 388 ]]  #long:maxint
 388  MinL  === _ 385 387  [[ 389 ]] 
 389  MaxL  === _ 384 388  [[ 390 ]] 
 390  ConvL2I  === _ 389  [[ 428 ]]  #int
 391  OpaqueLoopInit  === _ 335  [[ 408 436 ]] 
 392  CmpU  === _ 434 135  [[ 393 ]] 
 393  Bool  === _ 392  [[ 394 ]] [lt]
 394  OpaqueInitializedAssertionPredicate  === _ 393  [[ 395 ]] 
 395  RangeCheck  === 367 394  [[ 396 397 ]] P=0.999999, C=-1.000000
 396  IfFalse  === 395  [[ 399 ]] #0
 397  IfTrue  === 395  [[ 403 ]] #1
 399  Halt  === 396 1 1 8 1  [[ 0 ]] 
 400  CmpU  === _ 335 135  [[ 401 ]] 
 401  Bool  === _ 400  [[ 402 ]] [lt]
 402  OpaqueInitializedAssertionPredicate  === _ 401  [[ 403 ]] 
 403  RangeCheck  === 397 402  [[ 404 405 ]] P=0.999999, C=-1.000000
 404  IfFalse  === 403  [[ 407 ]] #0
 405  IfTrue  === 403  [[ 411 ]] #1
 407  Halt  === 404 1 1 8 1  [[ 0 ]] 
 408  CmpU  === _ 391 135  [[ 409 ]] 
 409  Bool  === _ 408  [[ 410 ]] [lt]
 410  Opaque4  === _ 409 78  [[ 411 ]] 
 411  RangeCheck  === 405 410  [[ 412 413 ]] P=0.999999, C=-1.000000
 412  IfFalse  === 411  [[ 415 ]] #0
 413  IfTrue  === 411  [[ 423 ]] #1
 415  Halt  === 412 1 1 8 1  [[ 0 ]] 
 416  OpaqueLoopStride  === _ 78  [[ 435 436 ]] 
 418  AddI  === _ 436 433  [[ 420 ]]  !orig=[419]
 420  CmpU  === _ 418 135  [[ 421 ]] 
 421  Bool  === _ 420  [[ 422 ]] [lt]
 422  Opaque4  === _ 421 78  [[ 423 ]] 
 423  RangeCheck  === 413 422  [[ 424 425 ]] P=0.999999, C=-1.000000
 424  IfFalse  === 423  [[ 427 ]] #0
 425  IfTrue  === 423  [[ 260 ]] #1
 427  Halt  === 424 1 1 8 1  [[ 0 ]] 
 428  MinI  === _ 390 135  [[ 370 ]] 
 432  ConvI2D  === _ 358  [[ 323 ]]  #double !orig=[357]
 433  ConI  === 0  [[ 434 435 418 ]]  #int:-1
 434  AddI  === _ 383 433  [[ 392 ]]  !orig=[430],[374]
 436  AddI  === _ 391 416  [[ 418 ]]  !orig=435,[417]
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 179 161 399 407 415 427  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 371 372 373 380 387 433 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 340 81 16 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 427 415 407 399 ]] FramePtr !orig=[426] !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 338 84 369 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  47  ConP  === 0  [[ 48 84 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !orig=[193] !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 84 ]] #0 !orig=[276],[195] !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 202 157 157 203 203 262 134 134 283 284 284 325 326 326 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !orig=281,[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 293 335 369 410 416 221 422 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 51 6 81 8 9 (83 47 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 64 64 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 428 408 208 286 288 319 370 330 420 376 377 392 400 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 316  [[ 157 ]]  { N40:rawptr:BotPTR - - N316:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 308 6 153 8 9 (156 64 32 1 314 1 1 1 1 64 314 313 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 283 325 ]]  #long:16
 166  ConI  === 0  [[ 204 289 331 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 219 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 375 ]]  #int:0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 64 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 64 64 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 206 241  [[ 201 356 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 290 332 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 211  AddI  === _ 243 78  [[ 144 262 254 243 358 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 186 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 78  [[ 222 351 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 310  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 236  Phi  === 226 7 312  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 324 201  [[ 361 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 368 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 335 211  [[ 211 360 213 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 383  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 353 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 425 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] inner stride: 1 main of N261 strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 64 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 282  StoreD  === 300 298 283 290  [[ 298 312 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 283  AddP  === _ 64 284 162  [[ 282 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 284  AddP  === _ 64 64 289  [[ 283 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 285  Bool  === _ 286  [[ 301 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 286  CmpI  === _ 293 135  [[ 285 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 287  Bool  === _ 288  [[ 299 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 288  CmpU  === _ 296 135  [[ 287 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 289  LShiftL  === _ 294 166  [[ 284 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 290  AddD  === _ 206 303  [[ 282 313 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 291  SqrtD  === 302 292  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 292  ConvI2D  === _ 293  [[ 291 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 293  AddI  === _ 296 78  [[ 286 292 296 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 294  ConvI2L  === _ 295  [[ 289 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 295  CastII  === 300 296  [[ 294 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 296  Phi  === 297 358 293  [[ 288 293 295 314 ]]  #int #tripcount !orig=243,[233]
 297  CountedLoop  === 297 322 302  [[ 296 297 298 299 303 ]] inner stride: 1 post of N261 !orig=261,[224],[198]
 298  Phi  === 297 354 282  [[ 282 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 299  RangeCheck  === 297 287  [[ 300 307 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 300  IfTrue  === 299  [[ 282 295 301 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 301  CountedLoopEnd  === 300 285  [[ 302 304 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 302  IfTrue  === 301  [[ 291 297 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 303  Phi  === 297 323 291  [[ 290 ]]  #double !orig=241,232
 304  IfFalse  === 301  [[ 310 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 307  IfFalse  === 299  [[ 308 ]] #0 !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 308  Region  === 308 307 350  [[ 308 157 313 314 316 ]]  !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 310  Region  === 310 304 311  [[ 310 226 312 ]]  !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 311  IfFalse  === 321  [[ 310 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 312  Phi  === 310 282 354  [[ 236 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 313  Phi  === 308 290 356  [[ 157 ]]  #double
 314  Phi  === 308 296 360  [[ 157 157 ]]  #int
 316  Phi  === 308 298 361  [[ 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 318  OpaqueZeroTripGuard  === _ 358  [[ 319 ]] 
 319  CmpI  === _ 318 135  [[ 320 ]] 
 320  Bool  === _ 319  [[ 321 ]] [lt]
 321  If  === 352 320  [[ 311 322 ]] P=0.500000, C=-1.000000
 322  IfTrue  === 321  [[ 297 323 ]] #1
 323  SqrtD  === 322 432  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 324  StoreD  === 342 340 325 332  [[ 340 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 325  AddP  === _ 64 326 162  [[ 324 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 326  AddP  === _ 64 64 331  [[ 325 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 327  Bool  === _ 328  [[ 343 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 328  CmpI  === _ 335 370  [[ 327 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 329  Bool  === _ 330  [[ 341 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 330  CmpU  === _ 338 135  [[ 329 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 331  LShiftL  === _ 336 166  [[ 326 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 332  AddD  === _ 206 345  [[ 324 356 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 333  SqrtD  === 344 334  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 334  ConvI2D  === _ 335  [[ 333 368 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 335  AddI  === _ 338 78  [[ 328 334 338 358 364 243 391 400 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 336  ConvI2L  === _ 337  [[ 331 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 337  CastII  === 342 338  [[ 336 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 338  Phi  === 339 36 335  [[ 330 335 337 360 ]]  #int #tripcount !orig=243,[233]
 339  CountedLoop  === 339 220 344  [[ 338 339 340 341 345 ]] inner stride: 1 pre of N261 !orig=261,[224],[198]
 340  Phi  === 339 7 324  [[ 324 361 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 341  RangeCheck  === 339 329  [[ 342 349 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 342  IfTrue  === 341  [[ 324 337 343 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 343  CountedLoopEnd  === 342 327  [[ 344 362 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 344  IfTrue  === 343  [[ 333 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 345  Phi  === 339 214 333  [[ 332 ]]  #double !orig=241,232
 346  IfFalse  === 366  [[ 352 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 349  IfFalse  === 341  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 350  Region  === 350 349 351  [[ 350 308 356 360 361 ]]  !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 351  IfFalse  === 221  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 352  Region  === 352 346 353  [[ 352 321 354 358 ]]  !orig=[317]
 353  IfFalse  === 258  [[ 352 ]] #0 !orig=[317]
 354  Phi  === 352 324 201  [[ 298 312 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 356  Phi  === 350 332 205  [[ 313 ]]  #double
 358  Phi  === 352 335 211  [[ 296 318 432 ]]  #int !orig=[431],[357]
 360  Phi  === 350 338 243  [[ 314 ]]  #int
 361  Phi  === 350 340 237  [[ 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 362  IfFalse  === 343  [[ 366 ]] #0
 363  OpaqueZeroTripGuard  === _ 383  [[ 364 ]] 
 364  CmpI  === _ 335 363  [[ 365 ]] 
 365  Bool  === _ 364  [[ 366 ]] [lt]
 366  If  === 362 365  [[ 346 367 ]] P=0.999999, C=-1.000000
 367  IfTrue  === 366  [[ 395 368 ]] #1
 368  SqrtD  === 367 334  [[ 241 ]]  !orig=333,145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 369  AddI  === _ 36 78  [[ 384 ]] 
 370  Opaque1  === _ 428 135  [[ 328 ]] 
 371  ConL  === 0  [[ 385 ]]  #long:0
 372  ConL  === 0  [[ 379 ]]  #long:1
 375  ConvI2L  === _ 190  [[ 378 385 ]]  #long:minint..maxint
 376  ConvI2L  === _ 135  [[ 378 ]]  #long:minint..maxint
 377  ConvI2L  === _ 135  [[ 382 ]]  #long:minint..maxint
 378  SubL  === _ 376 375  [[ 379 ]] 
 379  DivL  === _ 378 372  [[ 381 ]] 
 380  ConL  === 0  [[ 381 ]]  #long:minint
 381  MaxL  === _ 379 380  [[ 382 ]] 
 382  MinL  === _ 381 377  [[ 383 ]] 
 383  ConvL2I  === _ 382  [[ 254 363 434 ]]  #int !orig=[429]
 384  ConvI2L  === _ 369  [[ 389 ]]  #long:minint..maxint:www
 385  SubL  === _ 371 375  [[ 388 ]]  !orig=[386]
 387  ConL  === 0  [[ 388 ]]  #long:maxint
 388  MinL  === _ 385 387  [[ 389 ]] 
 389  MaxL  === _ 384 388  [[ 390 ]] 
 390  ConvL2I  === _ 389  [[ 428 ]]  #int
 391  OpaqueLoopInit  === _ 335  [[ 408 436 ]] 
 392  CmpU  === _ 434 135  [[ 393 ]] 
 393  Bool  === _ 392  [[ 394 ]] [lt]
 394  OpaqueInitializedAssertionPredicate  === _ 393  [[ 395 ]] 
 395  RangeCheck  === 367 394  [[ 396 397 ]] P=0.999999, C=-1.000000
 396  IfFalse  === 395  [[ 399 ]] #0
 397  IfTrue  === 395  [[ 403 ]] #1
 399  Halt  === 396 1 1 8 1  [[ 0 ]] 
 400  CmpU  === _ 335 135  [[ 401 ]] 
 401  Bool  === _ 400  [[ 402 ]] [lt]
 402  OpaqueInitializedAssertionPredicate  === _ 401  [[ 403 ]] 
 403  RangeCheck  === 397 402  [[ 404 405 ]] P=0.999999, C=-1.000000
 404  IfFalse  === 403  [[ 407 ]] #0
 405  IfTrue  === 403  [[ 411 ]] #1
 407  Halt  === 404 1 1 8 1  [[ 0 ]] 
 408  CmpU  === _ 391 135  [[ 409 ]] 
 409  Bool  === _ 408  [[ 410 ]] [lt]
 410  Opaque4  === _ 409 78  [[ 411 ]] 
 411  RangeCheck  === 405 410  [[ 412 413 ]] P=0.999999, C=-1.000000
 412  IfFalse  === 411  [[ 415 ]] #0
 413  IfTrue  === 411  [[ 423 ]] #1
 415  Halt  === 412 1 1 8 1  [[ 0 ]] 
 416  OpaqueLoopStride  === _ 78  [[ 435 436 ]] 
 418  AddI  === _ 436 433  [[ 420 ]]  !orig=[419]
 420  CmpU  === _ 418 135  [[ 421 ]] 
 421  Bool  === _ 420  [[ 422 ]] [lt]
 422  Opaque4  === _ 421 78  [[ 423 ]] 
 423  RangeCheck  === 413 422  [[ 424 425 ]] P=0.999999, C=-1.000000
 424  IfFalse  === 423  [[ 427 ]] #0
 425  IfTrue  === 423  [[ 260 ]] #1
 427  Halt  === 424 1 1 8 1  [[ 0 ]] 
 428  MinI  === _ 390 135  [[ 370 ]] 
 432  ConvI2D  === _ 358  [[ 323 ]]  #double !orig=[357]
 433  ConI  === 0  [[ 434 435 418 ]]  #int:-1
 434  AddI  === _ 383 433  [[ 392 ]]  !orig=[430],[374]
 436  AddI  === _ 391 416  [[ 418 ]]  !orig=435,[417]
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 179 161 399 407 415 427  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 371 372 373 380 387 433 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 340 81 16 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 427 415 407 399 ]] FramePtr !orig=[426] !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 338 84 369 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  47  ConP  === 0  [[ 48 84 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !orig=[193] !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 84 ]] #0 !orig=[276],[195] !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 202 157 157 203 203 262 134 134 283 284 284 325 326 326 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !orig=281,[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 293 335 369 410 416 221 422 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 51 6 81 8 9 (83 47 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 64 64 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 428 408 208 286 288 319 370 330 420 376 377 392 400 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 316  [[ 157 ]]  { N40:rawptr:BotPTR - - N316:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 308 6 153 8 9 (156 64 32 1 314 1 1 1 1 64 314 313 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 283 325 ]]  #long:16
 166  ConI  === 0  [[ 204 289 331 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 219 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 375 ]]  #int:0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 64 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 64 64 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 206 241  [[ 201 356 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 290 332 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 211  AddI  === _ 243 78  [[ 144 262 254 243 358 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 186 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 78  [[ 222 351 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 310  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 236  Phi  === 226 7 312  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 324 201  [[ 361 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 368 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 335 211  [[ 211 360 213 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 383  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 353 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 425 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] inner stride: 1 main of N261 strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 64 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 282  StoreD  === 300 298 283 290  [[ 298 312 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 283  AddP  === _ 64 284 162  [[ 282 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 284  AddP  === _ 64 64 289  [[ 283 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 285  Bool  === _ 286  [[ 301 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 286  CmpI  === _ 293 135  [[ 285 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 287  Bool  === _ 288  [[ 299 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 288  CmpU  === _ 296 135  [[ 287 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 289  LShiftL  === _ 294 166  [[ 284 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 290  AddD  === _ 206 303  [[ 282 313 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 291  SqrtD  === 302 292  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 292  ConvI2D  === _ 293  [[ 291 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 293  AddI  === _ 296 78  [[ 286 292 296 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 294  ConvI2L  === _ 295  [[ 289 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 295  CastII  === 300 296  [[ 294 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 296  Phi  === 297 358 293  [[ 288 293 295 314 ]]  #int #tripcount !orig=243,[233]
 297  CountedLoop  === 297 322 302  [[ 296 297 298 299 303 ]] inner stride: 1 post of N261 !orig=261,[224],[198]
 298  Phi  === 297 354 282  [[ 282 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 299  RangeCheck  === 297 287  [[ 300 307 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 300  IfTrue  === 299  [[ 282 295 301 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 301  CountedLoopEnd  === 300 285  [[ 302 304 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 302  IfTrue  === 301  [[ 291 297 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 303  Phi  === 297 323 291  [[ 290 ]]  #double !orig=241,232
 304  IfFalse  === 301  [[ 310 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 307  IfFalse  === 299  [[ 308 ]] #0 !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 308  Region  === 308 307 350  [[ 308 157 313 314 316 ]]  !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 310  Region  === 310 304 311  [[ 310 226 312 ]]  !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 311  IfFalse  === 321  [[ 310 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 312  Phi  === 310 282 354  [[ 236 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 313  Phi  === 308 290 356  [[ 157 ]]  #double
 314  Phi  === 308 296 360  [[ 157 157 ]]  #int
 316  Phi  === 308 298 361  [[ 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 318  OpaqueZeroTripGuard  === _ 358  [[ 319 ]] 
 319  CmpI  === _ 318 135  [[ 320 ]] 
 320  Bool  === _ 319  [[ 321 ]] [lt]
 321  If  === 352 320  [[ 311 322 ]] P=0.500000, C=-1.000000
 322  IfTrue  === 321  [[ 297 323 ]] #1
 323  SqrtD  === 322 432  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 324  StoreD  === 342 340 325 332  [[ 340 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 325  AddP  === _ 64 326 162  [[ 324 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 326  AddP  === _ 64 64 331  [[ 325 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 327  Bool  === _ 328  [[ 343 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 328  CmpI  === _ 335 370  [[ 327 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 329  Bool  === _ 330  [[ 341 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 330  CmpU  === _ 338 135  [[ 329 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 331  LShiftL  === _ 336 166  [[ 326 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 332  AddD  === _ 206 345  [[ 324 356 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 333  SqrtD  === 344 334  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 334  ConvI2D  === _ 335  [[ 333 368 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 335  AddI  === _ 338 78  [[ 328 334 338 358 364 243 391 400 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 336  ConvI2L  === _ 337  [[ 331 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 337  CastII  === 342 338  [[ 336 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 338  Phi  === 339 36 335  [[ 330 335 337 360 ]]  #int #tripcount !orig=243,[233]
 339  CountedLoop  === 339 220 344  [[ 338 339 340 341 345 ]] inner stride: 1 pre of N261 !orig=261,[224],[198]
 340  Phi  === 339 7 324  [[ 324 361 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 341  RangeCheck  === 339 329  [[ 342 349 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 342  IfTrue  === 341  [[ 324 337 343 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 343  CountedLoopEnd  === 342 327  [[ 344 362 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 344  IfTrue  === 343  [[ 333 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 345  Phi  === 339 214 333  [[ 332 ]]  #double !orig=241,232
 346  IfFalse  === 366  [[ 352 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 349  IfFalse  === 341  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 350  Region  === 350 349 351  [[ 350 308 356 360 361 ]]  !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 351  IfFalse  === 221  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 352  Region  === 352 346 353  [[ 352 321 354 358 ]]  !orig=[317]
 353  IfFalse  === 258  [[ 352 ]] #0 !orig=[317]
 354  Phi  === 352 324 201  [[ 298 312 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 356  Phi  === 350 332 205  [[ 313 ]]  #double
 358  Phi  === 352 335 211  [[ 296 318 432 ]]  #int !orig=[431],[357]
 360  Phi  === 350 338 243  [[ 314 ]]  #int
 361  Phi  === 350 340 237  [[ 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 362  IfFalse  === 343  [[ 366 ]] #0
 363  OpaqueZeroTripGuard  === _ 383  [[ 364 ]] 
 364  CmpI  === _ 335 363  [[ 365 ]] 
 365  Bool  === _ 364  [[ 366 ]] [lt]
 366  If  === 362 365  [[ 346 367 ]] P=0.999999, C=-1.000000
 367  IfTrue  === 366  [[ 395 368 ]] #1
 368  SqrtD  === 367 334  [[ 241 ]]  !orig=333,145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 369  AddI  === _ 36 78  [[ 384 ]] 
 370  Opaque1  === _ 428 135  [[ 328 ]] 
 371  ConL  === 0  [[ 385 ]]  #long:0
 372  ConL  === 0  [[ 379 ]]  #long:1
 375  ConvI2L  === _ 190  [[ 378 385 ]]  #long:minint..maxint
 376  ConvI2L  === _ 135  [[ 378 ]]  #long:minint..maxint
 377  ConvI2L  === _ 135  [[ 382 ]]  #long:minint..maxint
 378  SubL  === _ 376 375  [[ 379 ]] 
 379  DivL  === _ 378 372  [[ 381 ]] 
 380  ConL  === 0  [[ 381 ]]  #long:minint
 381  MaxL  === _ 379 380  [[ 382 ]] 
 382  MinL  === _ 381 377  [[ 383 ]] 
 383  ConvL2I  === _ 382  [[ 254 363 434 ]]  #int !orig=[429]
 384  ConvI2L  === _ 369  [[ 389 ]]  #long:minint..maxint:www
 385  SubL  === _ 371 375  [[ 388 ]]  !orig=[386]
 387  ConL  === 0  [[ 388 ]]  #long:maxint
 388  MinL  === _ 385 387  [[ 389 ]] 
 389  MaxL  === _ 384 388  [[ 390 ]] 
 390  ConvL2I  === _ 389  [[ 428 ]]  #int
 391  OpaqueLoopInit  === _ 335  [[ 408 436 ]] 
 392  CmpU  === _ 434 135  [[ 393 ]] 
 393  Bool  === _ 392  [[ 394 ]] [lt]
 394  OpaqueInitializedAssertionPredicate  === _ 393  [[ 395 ]] 
 395  RangeCheck  === 367 394  [[ 396 397 ]] P=0.999999, C=-1.000000
 396  IfFalse  === 395  [[ 399 ]] #0
 397  IfTrue  === 395  [[ 403 ]] #1
 399  Halt  === 396 1 1 8 1  [[ 0 ]] 
 400  CmpU  === _ 335 135  [[ 401 ]] 
 401  Bool  === _ 400  [[ 402 ]] [lt]
 402  OpaqueInitializedAssertionPredicate  === _ 401  [[ 403 ]] 
 403  RangeCheck  === 397 402  [[ 404 405 ]] P=0.999999, C=-1.000000
 404  IfFalse  === 403  [[ 407 ]] #0
 405  IfTrue  === 403  [[ 411 ]] #1
 407  Halt  === 404 1 1 8 1  [[ 0 ]] 
 408  CmpU  === _ 391 135  [[ 409 ]] 
 409  Bool  === _ 408  [[ 410 ]] [lt]
 410  Opaque4  === _ 409 78  [[ 411 ]] 
 411  RangeCheck  === 405 410  [[ 412 413 ]] P=0.999999, C=-1.000000
 412  IfFalse  === 411  [[ 415 ]] #0
 413  IfTrue  === 411  [[ 423 ]] #1
 415  Halt  === 412 1 1 8 1  [[ 0 ]] 
 416  OpaqueLoopStride  === _ 78  [[ 435 436 ]] 
 418  AddI  === _ 436 433  [[ 420 ]]  !orig=[419]
 420  CmpU  === _ 418 135  [[ 421 ]] 
 421  Bool  === _ 420  [[ 422 ]] [lt]
 422  Opaque4  === _ 421 78  [[ 423 ]] 
 423  RangeCheck  === 413 422  [[ 424 425 ]] P=0.999999, C=-1.000000
 424  IfFalse  === 423  [[ 427 ]] #0
 425  IfTrue  === 423  [[ 260 ]] #1
 427  Halt  === 424 1 1 8 1  [[ 0 ]] 
 428  MinI  === _ 390 135  [[ 370 ]] 
 432  ConvI2D  === _ 358  [[ 323 ]]  #double !orig=[357]
 433  ConI  === 0  [[ 434 435 418 ]]  #int:-1
 434  AddI  === _ 383 433  [[ 392 ]]  !orig=[430],[374]
 436  AddI  === _ 391 416  [[ 418 ]]  !orig=435,[417]
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 179 161 399 407 415 427  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 371 372 373 380 387 433 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 340 81 16 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 427 415 407 399 ]] FramePtr !orig=[426] !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 338 84 369 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  47  ConP  === 0  [[ 48 84 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !orig=[193] !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 84 ]] #0 !orig=[276],[195] !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 202 157 157 203 203 262 134 134 283 284 284 325 326 326 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !orig=281,[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 293 335 369 410 416 221 422 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 51 6 81 8 9 (83 47 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 64 64 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 428 408 208 286 288 319 370 330 420 376 377 392 400 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 316  [[ 157 ]]  { N40:rawptr:BotPTR - - N316:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 308 6 153 8 9 (156 64 32 1 314 1 1 1 1 64 314 313 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 283 325 ]]  #long:16
 166  ConI  === 0  [[ 204 289 331 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 219 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 375 ]]  #int:0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 64 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 64 64 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 206 241  [[ 201 356 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 290 332 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 211  AddI  === _ 243 78  [[ 144 262 254 243 358 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 186 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 78  [[ 222 351 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 310  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 236  Phi  === 226 7 312  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 324 201  [[ 361 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 368 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 335 211  [[ 211 360 213 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 383  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 353 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 425 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] inner stride: 1 main of N261 strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 64 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 282  StoreD  === 300 298 283 290  [[ 298 312 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 283  AddP  === _ 64 284 162  [[ 282 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 284  AddP  === _ 64 64 289  [[ 283 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 285  Bool  === _ 286  [[ 301 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 286  CmpI  === _ 293 135  [[ 285 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 287  Bool  === _ 288  [[ 299 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 288  CmpU  === _ 296 135  [[ 287 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 289  LShiftL  === _ 294 166  [[ 284 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 290  AddD  === _ 206 303  [[ 282 313 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 291  SqrtD  === 302 292  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 292  ConvI2D  === _ 293  [[ 291 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 293  AddI  === _ 296 78  [[ 286 292 296 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 294  ConvI2L  === _ 295  [[ 289 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 295  CastII  === 300 296  [[ 294 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 296  Phi  === 297 358 293  [[ 288 293 295 314 ]]  #int #tripcount !orig=243,[233]
 297  CountedLoop  === 297 322 302  [[ 296 297 298 299 303 ]] inner stride: 1 post of N261 !orig=261,[224],[198]
 298  Phi  === 297 354 282  [[ 282 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 299  RangeCheck  === 297 287  [[ 300 307 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 300  IfTrue  === 299  [[ 282 295 301 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 301  CountedLoopEnd  === 300 285  [[ 302 304 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 302  IfTrue  === 301  [[ 291 297 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 303  Phi  === 297 323 291  [[ 290 ]]  #double !orig=241,232
 304  IfFalse  === 301  [[ 310 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 307  IfFalse  === 299  [[ 308 ]] #0 !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 308  Region  === 308 307 350  [[ 308 157 313 314 316 ]]  !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 310  Region  === 310 304 311  [[ 310 226 312 ]]  !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 311  IfFalse  === 321  [[ 310 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 312  Phi  === 310 282 354  [[ 236 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 313  Phi  === 308 290 356  [[ 157 ]]  #double
 314  Phi  === 308 296 360  [[ 157 157 ]]  #int
 316  Phi  === 308 298 361  [[ 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 318  OpaqueZeroTripGuard  === _ 358  [[ 319 ]] 
 319  CmpI  === _ 318 135  [[ 320 ]] 
 320  Bool  === _ 319  [[ 321 ]] [lt]
 321  If  === 352 320  [[ 311 322 ]] P=0.500000, C=-1.000000
 322  IfTrue  === 321  [[ 297 323 ]] #1
 323  SqrtD  === 322 432  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 324  StoreD  === 342 340 325 332  [[ 340 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 325  AddP  === _ 64 326 162  [[ 324 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 326  AddP  === _ 64 64 331  [[ 325 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 327  Bool  === _ 328  [[ 343 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 328  CmpI  === _ 335 370  [[ 327 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 329  Bool  === _ 330  [[ 341 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 330  CmpU  === _ 338 135  [[ 329 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 331  LShiftL  === _ 336 166  [[ 326 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 332  AddD  === _ 206 345  [[ 324 356 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 333  SqrtD  === 344 334  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 334  ConvI2D  === _ 335  [[ 333 368 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 335  AddI  === _ 338 78  [[ 328 334 338 358 364 243 391 400 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 336  ConvI2L  === _ 337  [[ 331 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 337  CastII  === 342 338  [[ 336 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 338  Phi  === 339 36 335  [[ 330 335 337 360 ]]  #int #tripcount !orig=243,[233]
 339  CountedLoop  === 339 220 344  [[ 338 339 340 341 345 ]] inner stride: 1 pre of N261 !orig=261,[224],[198]
 340  Phi  === 339 7 324  [[ 324 361 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 341  RangeCheck  === 339 329  [[ 342 349 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 342  IfTrue  === 341  [[ 324 337 343 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 343  CountedLoopEnd  === 342 327  [[ 344 362 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 344  IfTrue  === 343  [[ 333 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 345  Phi  === 339 214 333  [[ 332 ]]  #double !orig=241,232
 346  IfFalse  === 366  [[ 352 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 349  IfFalse  === 341  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 350  Region  === 350 349 351  [[ 350 308 356 360 361 ]]  !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 351  IfFalse  === 221  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 352  Region  === 352 346 353  [[ 352 321 354 358 ]]  !orig=[317]
 353  IfFalse  === 258  [[ 352 ]] #0 !orig=[317]
 354  Phi  === 352 324 201  [[ 298 312 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 356  Phi  === 350 332 205  [[ 313 ]]  #double
 358  Phi  === 352 335 211  [[ 296 318 432 ]]  #int !orig=[431],[357]
 360  Phi  === 350 338 243  [[ 314 ]]  #int
 361  Phi  === 350 340 237  [[ 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 362  IfFalse  === 343  [[ 366 ]] #0
 363  OpaqueZeroTripGuard  === _ 383  [[ 364 ]] 
 364  CmpI  === _ 335 363  [[ 365 ]] 
 365  Bool  === _ 364  [[ 366 ]] [lt]
 366  If  === 362 365  [[ 346 367 ]] P=0.999999, C=-1.000000
 367  IfTrue  === 366  [[ 395 368 ]] #1
 368  SqrtD  === 367 334  [[ 241 ]]  !orig=333,145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 369  AddI  === _ 36 78  [[ 384 ]] 
 370  Opaque1  === _ 428 135  [[ 328 ]] 
 371  ConL  === 0  [[ 385 ]]  #long:0
 372  ConL  === 0  [[ 379 ]]  #long:1
 375  ConvI2L  === _ 190  [[ 378 385 ]]  #long:minint..maxint
 376  ConvI2L  === _ 135  [[ 378 ]]  #long:minint..maxint
 377  ConvI2L  === _ 135  [[ 382 ]]  #long:minint..maxint
 378  SubL  === _ 376 375  [[ 379 ]] 
 379  DivL  === _ 378 372  [[ 381 ]] 
 380  ConL  === 0  [[ 381 ]]  #long:minint
 381  MaxL  === _ 379 380  [[ 382 ]] 
 382  MinL  === _ 381 377  [[ 383 ]] 
 383  ConvL2I  === _ 382  [[ 254 363 434 ]]  #int !orig=[429]
 384  ConvI2L  === _ 369  [[ 389 ]]  #long:minint..maxint:www
 385  SubL  === _ 371 375  [[ 388 ]]  !orig=[386]
 387  ConL  === 0  [[ 388 ]]  #long:maxint
 388  MinL  === _ 385 387  [[ 389 ]] 
 389  MaxL  === _ 384 388  [[ 390 ]] 
 390  ConvL2I  === _ 389  [[ 428 ]]  #int
 391  OpaqueLoopInit  === _ 335  [[ 408 436 ]] 
 392  CmpU  === _ 434 135  [[ 393 ]] 
 393  Bool  === _ 392  [[ 394 ]] [lt]
 394  OpaqueInitializedAssertionPredicate  === _ 393  [[ 395 ]] 
 395  RangeCheck  === 367 394  [[ 396 397 ]] P=0.999999, C=-1.000000
 396  IfFalse  === 395  [[ 399 ]] #0
 397  IfTrue  === 395  [[ 403 ]] #1
 399  Halt  === 396 1 1 8 1  [[ 0 ]] 
 400  CmpU  === _ 335 135  [[ 401 ]] 
 401  Bool  === _ 400  [[ 402 ]] [lt]
 402  OpaqueInitializedAssertionPredicate  === _ 401  [[ 403 ]] 
 403  RangeCheck  === 397 402  [[ 404 405 ]] P=0.999999, C=-1.000000
 404  IfFalse  === 403  [[ 407 ]] #0
 405  IfTrue  === 403  [[ 411 ]] #1
 407  Halt  === 404 1 1 8 1  [[ 0 ]] 
 408  CmpU  === _ 391 135  [[ 409 ]] 
 409  Bool  === _ 408  [[ 410 ]] [lt]
 410  Opaque4  === _ 409 78  [[ 411 ]] 
 411  RangeCheck  === 405 410  [[ 412 413 ]] P=0.999999, C=-1.000000
 412  IfFalse  === 411  [[ 415 ]] #0
 413  IfTrue  === 411  [[ 423 ]] #1
 415  Halt  === 412 1 1 8 1  [[ 0 ]] 
 416  OpaqueLoopStride  === _ 78  [[ 435 436 ]] 
 418  AddI  === _ 436 433  [[ 420 ]]  !orig=[419]
 420  CmpU  === _ 418 135  [[ 421 ]] 
 421  Bool  === _ 420  [[ 422 ]] [lt]
 422  Opaque4  === _ 421 78  [[ 423 ]] 
 423  RangeCheck  === 413 422  [[ 424 425 ]] P=0.999999, C=-1.000000
 424  IfFalse  === 423  [[ 427 ]] #0
 425  IfTrue  === 423  [[ 260 ]] #1
 427  Halt  === 424 1 1 8 1  [[ 0 ]] 
 428  MinI  === _ 390 135  [[ 370 ]] 
 432  ConvI2D  === _ 358  [[ 323 ]]  #double !orig=[357]
 433  ConI  === 0  [[ 434 435 418 ]]  #int:-1
 434  AddI  === _ 383 433  [[ 392 ]]  !orig=[430],[374]
 436  AddI  === _ 391 416  [[ 418 ]]  !orig=435,[417]
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 179 161 399 407 415 427  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 371 372 373 380 387 433 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 340 81 16 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 427 415 407 399 ]] FramePtr !orig=[426] !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 338 84 369 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  47  ConP  === 0  [[ 48 84 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !orig=[193] !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 84 ]] #0 !orig=[276],[195] !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 202 157 157 203 203 262 134 134 283 284 284 325 326 326 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !orig=281,[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 293 335 369 410 416 221 422 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 51 6 81 8 9 (83 47 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 64 64 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 428 408 208 286 288 319 370 330 420 376 377 392 400 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 316  [[ 157 ]]  { N40:rawptr:BotPTR - - N316:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 308 6 153 8 9 (156 64 32 1 314 1 1 1 1 64 314 313 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 283 325 ]]  #long:16
 166  ConI  === 0  [[ 204 289 331 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 219 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 375 ]]  #int:0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 64 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 64 64 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 206 241  [[ 201 356 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 290 332 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 211  AddI  === _ 243 78  [[ 144 262 254 243 358 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 186 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 78  [[ 222 351 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 310  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 236  Phi  === 226 7 312  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 324 201  [[ 361 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 368 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 335 211  [[ 211 360 213 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 383  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 353 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 425 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] inner stride: 1 main of N261 strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 64 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 282  StoreD  === 300 298 283 290  [[ 298 312 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 283  AddP  === _ 64 284 162  [[ 282 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 284  AddP  === _ 64 64 289  [[ 283 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 285  Bool  === _ 286  [[ 301 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 286  CmpI  === _ 293 135  [[ 285 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 287  Bool  === _ 288  [[ 299 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 288  CmpU  === _ 296 135  [[ 287 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 289  LShiftL  === _ 294 166  [[ 284 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 290  AddD  === _ 206 303  [[ 282 313 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 291  SqrtD  === 302 292  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 292  ConvI2D  === _ 293  [[ 291 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 293  AddI  === _ 296 78  [[ 286 292 296 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 294  ConvI2L  === _ 295  [[ 289 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 295  CastII  === 300 296  [[ 294 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 296  Phi  === 297 358 293  [[ 288 293 295 314 ]]  #int #tripcount !orig=243,[233]
 297  CountedLoop  === 297 322 302  [[ 296 297 298 299 303 ]] inner stride: 1 post of N261 !orig=261,[224],[198]
 298  Phi  === 297 354 282  [[ 282 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 299  RangeCheck  === 297 287  [[ 300 307 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 300  IfTrue  === 299  [[ 282 295 301 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 301  CountedLoopEnd  === 300 285  [[ 302 304 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 302  IfTrue  === 301  [[ 291 297 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 303  Phi  === 297 323 291  [[ 290 ]]  #double !orig=241,232
 304  IfFalse  === 301  [[ 310 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 307  IfFalse  === 299  [[ 308 ]] #0 !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 308  Region  === 308 307 350  [[ 308 157 313 314 316 ]]  !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 310  Region  === 310 304 311  [[ 310 226 312 ]]  !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 311  IfFalse  === 321  [[ 310 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 312  Phi  === 310 282 354  [[ 236 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 313  Phi  === 308 290 356  [[ 157 ]]  #double
 314  Phi  === 308 296 360  [[ 157 157 ]]  #int
 316  Phi  === 308 298 361  [[ 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 318  OpaqueZeroTripGuard  === _ 358  [[ 319 ]] 
 319  CmpI  === _ 318 135  [[ 320 ]] 
 320  Bool  === _ 319  [[ 321 ]] [lt]
 321  If  === 352 320  [[ 311 322 ]] P=0.500000, C=-1.000000
 322  IfTrue  === 321  [[ 297 323 ]] #1
 323  SqrtD  === 322 432  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 324  StoreD  === 342 340 325 332  [[ 340 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 325  AddP  === _ 64 326 162  [[ 324 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 326  AddP  === _ 64 64 331  [[ 325 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 327  Bool  === _ 328  [[ 343 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 328  CmpI  === _ 335 370  [[ 327 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 329  Bool  === _ 330  [[ 341 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 330  CmpU  === _ 338 135  [[ 329 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 331  LShiftL  === _ 336 166  [[ 326 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 332  AddD  === _ 206 345  [[ 324 356 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 333  SqrtD  === 344 334  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 334  ConvI2D  === _ 335  [[ 333 368 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 335  AddI  === _ 338 78  [[ 328 334 338 358 364 243 391 400 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 336  ConvI2L  === _ 337  [[ 331 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 337  CastII  === 342 338  [[ 336 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 338  Phi  === 339 36 335  [[ 330 335 337 360 ]]  #int #tripcount !orig=243,[233]
 339  CountedLoop  === 339 220 344  [[ 338 339 340 341 345 ]] inner stride: 1 pre of N261 !orig=261,[224],[198]
 340  Phi  === 339 7 324  [[ 324 361 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 341  RangeCheck  === 339 329  [[ 342 349 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 342  IfTrue  === 341  [[ 324 337 343 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 343  CountedLoopEnd  === 342 327  [[ 344 362 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 344  IfTrue  === 343  [[ 333 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 345  Phi  === 339 214 333  [[ 332 ]]  #double !orig=241,232
 346  IfFalse  === 366  [[ 352 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 349  IfFalse  === 341  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 350  Region  === 350 349 351  [[ 350 308 356 360 361 ]]  !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 351  IfFalse  === 221  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 352  Region  === 352 346 353  [[ 352 321 354 358 ]]  !orig=[317]
 353  IfFalse  === 258  [[ 352 ]] #0 !orig=[317]
 354  Phi  === 352 324 201  [[ 298 312 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 356  Phi  === 350 332 205  [[ 313 ]]  #double
 358  Phi  === 352 335 211  [[ 296 318 432 ]]  #int !orig=[431],[357]
 360  Phi  === 350 338 243  [[ 314 ]]  #int
 361  Phi  === 350 340 237  [[ 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 362  IfFalse  === 343  [[ 366 ]] #0
 363  OpaqueZeroTripGuard  === _ 383  [[ 364 ]] 
 364  CmpI  === _ 335 363  [[ 365 ]] 
 365  Bool  === _ 364  [[ 366 ]] [lt]
 366  If  === 362 365  [[ 346 367 ]] P=0.999999, C=-1.000000
 367  IfTrue  === 366  [[ 395 368 ]] #1
 368  SqrtD  === 367 334  [[ 241 ]]  !orig=333,145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 369  AddI  === _ 36 78  [[ 384 ]] 
 370  Opaque1  === _ 428 135  [[ 328 ]] 
 371  ConL  === 0  [[ 385 ]]  #long:0
 372  ConL  === 0  [[ 379 ]]  #long:1
 375  ConvI2L  === _ 190  [[ 378 385 ]]  #long:minint..maxint
 376  ConvI2L  === _ 135  [[ 378 ]]  #long:minint..maxint
 377  ConvI2L  === _ 135  [[ 382 ]]  #long:minint..maxint
 378  SubL  === _ 376 375  [[ 379 ]] 
 379  DivL  === _ 378 372  [[ 381 ]] 
 380  ConL  === 0  [[ 381 ]]  #long:minint
 381  MaxL  === _ 379 380  [[ 382 ]] 
 382  MinL  === _ 381 377  [[ 383 ]] 
 383  ConvL2I  === _ 382  [[ 254 363 434 ]]  #int !orig=[429]
 384  ConvI2L  === _ 369  [[ 389 ]]  #long:minint..maxint:www
 385  SubL  === _ 371 375  [[ 388 ]]  !orig=[386]
 387  ConL  === 0  [[ 388 ]]  #long:maxint
 388  MinL  === _ 385 387  [[ 389 ]] 
 389  MaxL  === _ 384 388  [[ 390 ]] 
 390  ConvL2I  === _ 389  [[ 428 ]]  #int:>=min+1:www
 391  OpaqueLoopInit  === _ 335  [[ 408 436 ]] 
 392  CmpU  === _ 434 135  [[ 393 ]] 
 393  Bool  === _ 392  [[ 394 ]] [lt]
 394  OpaqueInitializedAssertionPredicate  === _ 393  [[ 395 ]] 
 395  RangeCheck  === 367 394  [[ 396 397 ]] P=0.999999, C=-1.000000
 396  IfFalse  === 395  [[ 399 ]] #0
 397  IfTrue  === 395  [[ 403 ]] #1
 399  Halt  === 396 1 1 8 1  [[ 0 ]] 
 400  CmpU  === _ 335 135  [[ 401 ]] 
 401  Bool  === _ 400  [[ 402 ]] [lt]
 402  OpaqueInitializedAssertionPredicate  === _ 401  [[ 403 ]] 
 403  RangeCheck  === 397 402  [[ 404 405 ]] P=0.999999, C=-1.000000
 404  IfFalse  === 403  [[ 407 ]] #0
 405  IfTrue  === 403  [[ 411 ]] #1
 407  Halt  === 404 1 1 8 1  [[ 0 ]] 
 408  CmpU  === _ 391 135  [[ 409 ]] 
 409  Bool  === _ 408  [[ 410 ]] [lt]
 410  Opaque4  === _ 409 78  [[ 411 ]] 
 411  RangeCheck  === 405 410  [[ 412 413 ]] P=0.999999, C=-1.000000
 412  IfFalse  === 411  [[ 415 ]] #0
 413  IfTrue  === 411  [[ 423 ]] #1
 415  Halt  === 412 1 1 8 1  [[ 0 ]] 
 416  OpaqueLoopStride  === _ 78  [[ 435 436 ]] 
 418  AddI  === _ 436 433  [[ 420 ]]  !orig=[419]
 420  CmpU  === _ 418 135  [[ 421 ]] 
 421  Bool  === _ 420  [[ 422 ]] [lt]
 422  Opaque4  === _ 421 78  [[ 423 ]] 
 423  RangeCheck  === 413 422  [[ 424 425 ]] P=0.999999, C=-1.000000
 424  IfFalse  === 423  [[ 427 ]] #0
 425  IfTrue  === 423  [[ 260 ]] #1
 427  Halt  === 424 1 1 8 1  [[ 0 ]] 
 428  MinI  === _ 390 135  [[ 370 ]] 
 432  ConvI2D  === _ 358  [[ 323 ]]  #double !orig=[357]
 433  ConI  === 0  [[ 434 435 418 ]]  #int:-1
 434  AddI  === _ 383 433  [[ 392 ]]  !orig=[430],[374]
 436  AddI  === _ 391 416  [[ 418 ]]  !orig=435,[417]
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 179 161 399 407 415 427  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 371 372 373 380 387 433 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 340 81 16 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 427 415 407 399 ]] FramePtr !orig=[426] !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 338 84 369 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  47  ConP  === 0  [[ 48 84 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !orig=[193] !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 84 ]] #0 !orig=[276],[195] !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 202 157 157 203 203 262 134 134 283 284 284 325 326 326 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !orig=281,[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 293 335 369 410 416 221 422 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 51 6 81 8 9 (83 47 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 64 64 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 428 408 208 286 288 319 370 330 420 376 377 392 400 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 316  [[ 157 ]]  { N40:rawptr:BotPTR - - N316:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 308 6 153 8 9 (156 64 32 1 314 1 1 1 1 64 314 313 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 283 325 ]]  #long:16
 166  ConI  === 0  [[ 204 289 331 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 219 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 375 ]]  #int:0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 64 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 64 64 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 206 241  [[ 201 356 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 290 332 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 211  AddI  === _ 243 78  [[ 144 262 254 243 358 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 186 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 78  [[ 222 351 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 310  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 236  Phi  === 226 7 312  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 324 201  [[ 361 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 368 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 335 211  [[ 211 360 213 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 383  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 353 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 425 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] inner stride: 1 main of N261 strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 64 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 282  StoreD  === 300 298 283 290  [[ 298 312 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 283  AddP  === _ 64 284 162  [[ 282 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 284  AddP  === _ 64 64 289  [[ 283 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 285  Bool  === _ 286  [[ 301 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 286  CmpI  === _ 293 135  [[ 285 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 287  Bool  === _ 288  [[ 299 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 288  CmpU  === _ 296 135  [[ 287 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 289  LShiftL  === _ 294 166  [[ 284 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 290  AddD  === _ 206 303  [[ 282 313 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 291  SqrtD  === 302 292  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 292  ConvI2D  === _ 293  [[ 291 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 293  AddI  === _ 296 78  [[ 286 292 296 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 294  ConvI2L  === _ 295  [[ 289 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 295  CastII  === 300 296  [[ 294 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 296  Phi  === 297 358 293  [[ 288 293 295 314 ]]  #int #tripcount !orig=243,[233]
 297  CountedLoop  === 297 322 302  [[ 296 297 298 299 303 ]] inner stride: 1 post of N261 !orig=261,[224],[198]
 298  Phi  === 297 354 282  [[ 282 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 299  RangeCheck  === 297 287  [[ 300 307 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 300  IfTrue  === 299  [[ 282 295 301 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 301  CountedLoopEnd  === 300 285  [[ 302 304 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 302  IfTrue  === 301  [[ 291 297 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 303  Phi  === 297 323 291  [[ 290 ]]  #double !orig=241,232
 304  IfFalse  === 301  [[ 310 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 307  IfFalse  === 299  [[ 308 ]] #0 !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 308  Region  === 308 307 350  [[ 308 157 313 314 316 ]]  !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 310  Region  === 310 304 311  [[ 310 226 312 ]]  !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 311  IfFalse  === 321  [[ 310 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 312  Phi  === 310 282 354  [[ 236 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 313  Phi  === 308 290 356  [[ 157 ]]  #double
 314  Phi  === 308 296 360  [[ 157 157 ]]  #int
 316  Phi  === 308 298 361  [[ 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 318  OpaqueZeroTripGuard  === _ 358  [[ 319 ]] 
 319  CmpI  === _ 318 135  [[ 320 ]] 
 320  Bool  === _ 319  [[ 321 ]] [lt]
 321  If  === 352 320  [[ 311 322 ]] P=0.500000, C=-1.000000
 322  IfTrue  === 321  [[ 297 323 ]] #1
 323  SqrtD  === 322 432  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 324  StoreD  === 342 340 325 332  [[ 340 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 325  AddP  === _ 64 326 162  [[ 324 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 326  AddP  === _ 64 64 331  [[ 325 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 327  Bool  === _ 328  [[ 343 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 328  CmpI  === _ 335 370  [[ 327 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 329  Bool  === _ 330  [[ 341 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 330  CmpU  === _ 338 135  [[ 329 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 331  LShiftL  === _ 336 166  [[ 326 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 332  AddD  === _ 206 345  [[ 324 356 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 333  SqrtD  === 344 334  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 334  ConvI2D  === _ 335  [[ 333 368 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 335  AddI  === _ 338 78  [[ 328 334 338 358 364 243 391 400 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 336  ConvI2L  === _ 337  [[ 331 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 337  CastII  === 342 338  [[ 336 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 338  Phi  === 339 36 335  [[ 330 335 337 360 ]]  #int #tripcount !orig=243,[233]
 339  CountedLoop  === 339 220 344  [[ 338 339 340 341 345 ]] inner stride: 1 pre of N261 !orig=261,[224],[198]
 340  Phi  === 339 7 324  [[ 324 361 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 341  RangeCheck  === 339 329  [[ 342 349 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 342  IfTrue  === 341  [[ 324 337 343 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 343  CountedLoopEnd  === 342 327  [[ 344 362 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 344  IfTrue  === 343  [[ 333 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 345  Phi  === 339 214 333  [[ 332 ]]  #double !orig=241,232
 346  IfFalse  === 366  [[ 352 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 349  IfFalse  === 341  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 350  Region  === 350 349 351  [[ 350 308 356 360 361 ]]  !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 351  IfFalse  === 221  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 352  Region  === 352 346 353  [[ 352 321 354 358 ]]  !orig=[317]
 353  IfFalse  === 258  [[ 352 ]] #0 !orig=[317]
 354  Phi  === 352 324 201  [[ 298 312 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 356  Phi  === 350 332 205  [[ 313 ]]  #double
 358  Phi  === 352 335 211  [[ 296 318 432 ]]  #int !orig=[431],[357]
 360  Phi  === 350 338 243  [[ 314 ]]  #int
 361  Phi  === 350 340 237  [[ 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 362  IfFalse  === 343  [[ 366 ]] #0
 363  OpaqueZeroTripGuard  === _ 383  [[ 364 ]] 
 364  CmpI  === _ 335 363  [[ 365 ]] 
 365  Bool  === _ 364  [[ 366 ]] [lt]
 366  If  === 362 365  [[ 346 367 ]] P=0.999999, C=-1.000000
 367  IfTrue  === 366  [[ 395 368 ]] #1
 368  SqrtD  === 367 334  [[ 241 ]]  !orig=333,145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 369  AddI  === _ 36 78  [[ 384 ]] 
 370  Opaque1  === _ 428 135  [[ 328 ]] 
 371  ConL  === 0  [[ 385 ]]  #long:0
 372  ConL  === 0  [[ 379 ]]  #long:1
 375  ConvI2L  === _ 190  [[ 378 385 ]]  #long:minint..maxint
 376  ConvI2L  === _ 135  [[ 378 ]]  #long:minint..maxint
 377  ConvI2L  === _ 135  [[ 382 ]]  #long:minint..maxint
 378  SubL  === _ 376 375  [[ 379 ]] 
 379  DivL  === _ 378 372  [[ 381 ]] 
 380  ConL  === 0  [[ 381 ]]  #long:minint
 381  MaxL  === _ 379 380  [[ 382 ]] 
 382  MinL  === _ 377 381  [[ 383 ]] 
 383  ConvL2I  === _ 382  [[ 254 363 434 ]]  #int !orig=[429]
 384  ConvI2L  === _ 369  [[ 389 ]]  #long:minint..maxint:www
 385  SubL  === _ 371 375  [[ 388 ]]  !orig=[386]
 387  ConL  === 0  [[ 388 ]]  #long:maxint
 388  MinL  === _ 385 387  [[ 389 ]] 
 389  MaxL  === _ 384 388  [[ 390 ]] 
 390  ConvL2I  === _ 389  [[ 428 ]]  #int:>=min+1:www
 391  OpaqueLoopInit  === _ 335  [[ 408 436 ]] 
 392  CmpU  === _ 434 135  [[ 393 ]] 
 393  Bool  === _ 392  [[ 394 ]] [lt]
 394  OpaqueInitializedAssertionPredicate  === _ 393  [[ 395 ]] 
 395  RangeCheck  === 367 394  [[ 396 397 ]] P=0.999999, C=-1.000000
 396  IfFalse  === 395  [[ 399 ]] #0
 397  IfTrue  === 395  [[ 403 ]] #1
 399  Halt  === 396 1 1 8 1  [[ 0 ]] 
 400  CmpU  === _ 335 135  [[ 401 ]] 
 401  Bool  === _ 400  [[ 402 ]] [lt]
 402  OpaqueInitializedAssertionPredicate  === _ 401  [[ 403 ]] 
 403  RangeCheck  === 397 402  [[ 404 405 ]] P=0.999999, C=-1.000000
 404  IfFalse  === 403  [[ 407 ]] #0
 405  IfTrue  === 403  [[ 411 ]] #1
 407  Halt  === 404 1 1 8 1  [[ 0 ]] 
 408  CmpU  === _ 391 135  [[ 409 ]] 
 409  Bool  === _ 408  [[ 410 ]] [lt]
 410  Opaque4  === _ 409 78  [[ 411 ]] 
 411  RangeCheck  === 405 410  [[ 412 413 ]] P=0.999999, C=-1.000000
 412  IfFalse  === 411  [[ 415 ]] #0
 413  IfTrue  === 411  [[ 423 ]] #1
 415  Halt  === 412 1 1 8 1  [[ 0 ]] 
 416  OpaqueLoopStride  === _ 78  [[ 435 436 ]] 
 418  AddI  === _ 436 433  [[ 420 ]]  !orig=[419]
 420  CmpU  === _ 418 135  [[ 421 ]] 
 421  Bool  === _ 420  [[ 422 ]] [lt]
 422  Opaque4  === _ 421 78  [[ 423 ]] 
 423  RangeCheck  === 413 422  [[ 424 425 ]] P=0.999999, C=-1.000000
 424  IfFalse  === 423  [[ 427 ]] #0
 425  IfTrue  === 423  [[ 260 ]] #1
 427  Halt  === 424 1 1 8 1  [[ 0 ]] 
 428  MinI  === _ 390 135  [[ 370 ]] 
 432  ConvI2D  === _ 358  [[ 323 ]]  #double !orig=[357]
 433  ConI  === 0  [[ 434 435 418 ]]  #int:-1
 434  AddI  === _ 383 433  [[ 392 ]]  !orig=[430],[374]
 436  AddI  === _ 391 416  [[ 418 ]]  !orig=435,[417]
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 179 161 399 407 415 427  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 371 372 373 380 387 433 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 340 81 16 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 427 415 407 399 ]] FramePtr !orig=[426] !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 338 84 369 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  47  ConP  === 0  [[ 48 84 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !orig=[193] !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 84 ]] #0 !orig=[276],[195] !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 202 157 157 203 203 262 134 134 283 284 284 325 326 326 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !orig=281,[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 293 335 369 410 416 221 422 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 51 6 81 8 9 (83 47 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 64 64 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 428 408 208 286 288 319 370 330 420 376 377 392 400 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 316  [[ 157 ]]  { N40:rawptr:BotPTR - - N316:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 308 6 153 8 9 (156 64 32 1 314 1 1 1 1 64 314 313 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 283 325 ]]  #long:16
 166  ConI  === 0  [[ 204 289 331 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 219 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 375 ]]  #int:0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 64 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 64 64 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 206 241  [[ 201 356 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 290 332 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 211  AddI  === _ 243 78  [[ 144 262 254 243 358 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 186 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 78  [[ 222 351 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 310  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 236  Phi  === 226 7 312  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 324 201  [[ 361 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 368 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 335 211  [[ 211 360 213 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 383  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 353 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 425 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] inner stride: 1 main of N261 strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 64 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 282  StoreD  === 300 298 283 290  [[ 298 312 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 283  AddP  === _ 64 284 162  [[ 282 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 284  AddP  === _ 64 64 289  [[ 283 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 285  Bool  === _ 286  [[ 301 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 286  CmpI  === _ 293 135  [[ 285 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 287  Bool  === _ 288  [[ 299 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 288  CmpU  === _ 296 135  [[ 287 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 289  LShiftL  === _ 294 166  [[ 284 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 290  AddD  === _ 206 303  [[ 282 313 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 291  SqrtD  === 302 292  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 292  ConvI2D  === _ 293  [[ 291 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 293  AddI  === _ 296 78  [[ 286 292 296 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 294  ConvI2L  === _ 295  [[ 289 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 295  CastII  === 300 296  [[ 294 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 296  Phi  === 297 358 293  [[ 288 293 295 314 ]]  #int #tripcount !orig=243,[233]
 297  CountedLoop  === 297 322 302  [[ 296 297 298 299 303 ]] inner stride: 1 post of N261 !orig=261,[224],[198]
 298  Phi  === 297 354 282  [[ 282 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 299  RangeCheck  === 297 287  [[ 300 307 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 300  IfTrue  === 299  [[ 282 295 301 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 301  CountedLoopEnd  === 300 285  [[ 302 304 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 302  IfTrue  === 301  [[ 291 297 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 303  Phi  === 297 323 291  [[ 290 ]]  #double !orig=241,232
 304  IfFalse  === 301  [[ 310 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 307  IfFalse  === 299  [[ 308 ]] #0 !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 308  Region  === 308 307 350  [[ 308 157 313 314 316 ]]  !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 310  Region  === 310 304 311  [[ 310 226 312 ]]  !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 311  IfFalse  === 321  [[ 310 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 312  Phi  === 310 282 354  [[ 236 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 313  Phi  === 308 290 356  [[ 157 ]]  #double
 314  Phi  === 308 296 360  [[ 157 157 ]]  #int
 316  Phi  === 308 298 361  [[ 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 318  OpaqueZeroTripGuard  === _ 358  [[ 319 ]] 
 319  CmpI  === _ 318 135  [[ 320 ]] 
 320  Bool  === _ 319  [[ 321 ]] [lt]
 321  If  === 352 320  [[ 311 322 ]] P=0.500000, C=-1.000000
 322  IfTrue  === 321  [[ 297 323 ]] #1
 323  SqrtD  === 322 432  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 324  StoreD  === 342 340 325 332  [[ 340 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 325  AddP  === _ 64 326 162  [[ 324 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 326  AddP  === _ 64 64 331  [[ 325 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 327  Bool  === _ 328  [[ 343 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 328  CmpI  === _ 335 370  [[ 327 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 329  Bool  === _ 330  [[ 341 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 330  CmpU  === _ 338 135  [[ 329 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 331  LShiftL  === _ 336 166  [[ 326 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 332  AddD  === _ 206 345  [[ 324 356 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 333  SqrtD  === 344 334  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 334  ConvI2D  === _ 335  [[ 333 368 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 335  AddI  === _ 338 78  [[ 328 334 338 358 364 243 391 400 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 336  ConvI2L  === _ 337  [[ 331 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 337  CastII  === 342 338  [[ 336 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 338  Phi  === 339 36 335  [[ 330 335 337 360 ]]  #int #tripcount !orig=243,[233]
 339  CountedLoop  === 339 220 344  [[ 338 339 340 341 345 ]] inner stride: 1 pre of N261 !orig=261,[224],[198]
 340  Phi  === 339 7 324  [[ 324 361 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 341  RangeCheck  === 339 329  [[ 342 349 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 342  IfTrue  === 341  [[ 324 337 343 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 343  CountedLoopEnd  === 342 327  [[ 344 362 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 344  IfTrue  === 343  [[ 333 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 345  Phi  === 339 214 333  [[ 332 ]]  #double !orig=241,232
 346  IfFalse  === 366  [[ 352 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 349  IfFalse  === 341  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 350  Region  === 350 349 351  [[ 350 308 356 360 361 ]]  !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 351  IfFalse  === 221  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 352  Region  === 352 346 353  [[ 352 321 354 358 ]]  !orig=[317]
 353  IfFalse  === 258  [[ 352 ]] #0 !orig=[317]
 354  Phi  === 352 324 201  [[ 298 312 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 356  Phi  === 350 332 205  [[ 313 ]]  #double
 358  Phi  === 352 335 211  [[ 296 318 432 ]]  #int !orig=[431],[357]
 360  Phi  === 350 338 243  [[ 314 ]]  #int
 361  Phi  === 350 340 237  [[ 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 362  IfFalse  === 343  [[ 366 ]] #0
 363  OpaqueZeroTripGuard  === _ 383  [[ 364 ]] 
 364  CmpI  === _ 335 363  [[ 365 ]] 
 365  Bool  === _ 364  [[ 366 ]] [lt]
 366  If  === 362 365  [[ 346 367 ]] P=0.999999, C=-1.000000
 367  IfTrue  === 366  [[ 395 368 ]] #1
 368  SqrtD  === 367 334  [[ 241 ]]  !orig=333,145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 369  AddI  === _ 36 78  [[ 384 ]] 
 370  Opaque1  === _ 428 135  [[ 328 ]] 
 371  ConL  === 0  [[ 385 ]]  #long:0
 372  ConL  === 0  [[ 379 ]]  #long:1
 375  ConvI2L  === _ 190  [[ 378 385 ]]  #long:minint..maxint
 376  ConvI2L  === _ 135  [[ 378 ]]  #long:minint..maxint
 377  ConvI2L  === _ 135  [[ 382 ]]  #long:minint..maxint
 378  SubL  === _ 376 375  [[ 379 ]] 
 379  DivL  === _ 378 372  [[ 381 ]] 
 380  ConL  === 0  [[ 381 ]]  #long:minint
 381  MaxL  === _ 379 380  [[ 382 ]] 
 382  MinL  === _ 377 381  [[ 383 ]] 
 383  ConvL2I  === _ 382  [[ 254 363 434 ]]  #int !orig=[429]
 384  ConvI2L  === _ 369  [[ 389 ]]  #long:minint..maxint:www
 385  SubL  === _ 371 375  [[ 388 ]]  !orig=[386]
 387  ConL  === 0  [[ 388 ]]  #long:maxint
 388  MinL  === _ 385 387  [[ 389 ]] 
 389  MaxL  === _ 384 388  [[ 390 ]] 
 390  ConvL2I  === _ 389  [[ 428 ]]  #int:>=min+1:www
 391  OpaqueLoopInit  === _ 335  [[ 408 436 ]] 
 392  CmpU  === _ 434 135  [[ 393 ]] 
 393  Bool  === _ 392  [[ 394 ]] [lt]
 394  OpaqueInitializedAssertionPredicate  === _ 393  [[ 395 ]] 
 395  RangeCheck  === 367 394  [[ 396 397 ]] P=0.999999, C=-1.000000
 396  IfFalse  === 395  [[ 399 ]] #0
 397  IfTrue  === 395  [[ 403 ]] #1
 399  Halt  === 396 1 1 8 1  [[ 0 ]] 
 400  CmpU  === _ 335 135  [[ 401 ]] 
 401  Bool  === _ 400  [[ 402 ]] [lt]
 402  OpaqueInitializedAssertionPredicate  === _ 401  [[ 403 ]] 
 403  RangeCheck  === 397 402  [[ 404 405 ]] P=0.999999, C=-1.000000
 404  IfFalse  === 403  [[ 407 ]] #0
 405  IfTrue  === 403  [[ 411 ]] #1
 407  Halt  === 404 1 1 8 1  [[ 0 ]] 
 408  CmpU  === _ 391 135  [[ 409 ]] 
 409  Bool  === _ 408  [[ 410 ]] [lt]
 410  Opaque4  === _ 409 78  [[ 411 ]] 
 411  RangeCheck  === 405 410  [[ 412 413 ]] P=0.999999, C=-1.000000
 412  IfFalse  === 411  [[ 415 ]] #0
 413  IfTrue  === 411  [[ 423 ]] #1
 415  Halt  === 412 1 1 8 1  [[ 0 ]] 
 416  OpaqueLoopStride  === _ 78  [[ 435 436 ]] 
 418  AddI  === _ 436 433  [[ 420 ]]  !orig=[419]
 420  CmpU  === _ 418 135  [[ 421 ]] 
 421  Bool  === _ 420  [[ 422 ]] [lt]
 422  Opaque4  === _ 421 78  [[ 423 ]] 
 423  RangeCheck  === 413 422  [[ 424 425 ]] P=0.999999, C=-1.000000
 424  IfFalse  === 423  [[ 427 ]] #0
 425  IfTrue  === 423  [[ 260 ]] #1
 427  Halt  === 424 1 1 8 1  [[ 0 ]] 
 428  MinI  === _ 390 135  [[ 370 ]] 
 432  ConvI2D  === _ 358  [[ 323 ]]  #double !orig=[357]
 433  ConI  === 0  [[ 434 435 418 ]]  #int:-1
 434  AddI  === _ 383 433  [[ 392 ]]  !orig=[430],[374]
 436  AddI  === _ 391 416  [[ 418 ]]  !orig=435,[417]
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 179 161 399 407 415 427  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 371 372 373 380 387 433 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 340 81 16 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 427 415 407 399 ]] FramePtr !orig=[426] !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 338 84 369 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  47  ConP  === 0  [[ 48 84 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !orig=[193] !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 84 ]] #0 !orig=[276],[195] !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 202 157 157 203 203 262 134 134 283 284 284 325 326 326 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !orig=281,[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 293 335 369 410 416 221 422 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 51 6 81 8 9 (83 47 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 64 64 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 428 408 208 286 288 319 370 330 420 376 377 392 400 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 316  [[ 157 ]]  { N40:rawptr:BotPTR - - N316:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 308 6 153 8 9 (156 64 32 1 314 1 1 1 1 64 314 313 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 283 325 ]]  #long:16
 166  ConI  === 0  [[ 204 289 331 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 219 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 375 ]]  #int:0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 64 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 64 64 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 206 241  [[ 201 356 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 290 332 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 211  AddI  === _ 243 78  [[ 144 262 254 243 358 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 186 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 78  [[ 222 351 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 310  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 236  Phi  === 226 7 312  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 324 201  [[ 361 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 368 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 335 211  [[ 211 360 213 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 383  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 353 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 425 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] inner stride: 1 main of N261 strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 64 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 282  StoreD  === 300 298 283 290  [[ 298 312 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 283  AddP  === _ 64 284 162  [[ 282 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 284  AddP  === _ 64 64 289  [[ 283 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 285  Bool  === _ 286  [[ 301 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 286  CmpI  === _ 293 135  [[ 285 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 287  Bool  === _ 288  [[ 299 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 288  CmpU  === _ 296 135  [[ 287 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 289  LShiftL  === _ 294 166  [[ 284 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 290  AddD  === _ 206 303  [[ 282 313 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 291  SqrtD  === 302 292  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 292  ConvI2D  === _ 293  [[ 291 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 293  AddI  === _ 296 78  [[ 286 292 296 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 294  ConvI2L  === _ 295  [[ 289 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 295  CastII  === 300 296  [[ 294 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 296  Phi  === 297 358 293  [[ 288 293 295 314 ]]  #int #tripcount !orig=243,[233]
 297  CountedLoop  === 297 322 302  [[ 296 297 298 299 303 ]] inner stride: 1 post of N261 !orig=261,[224],[198]
 298  Phi  === 297 354 282  [[ 282 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 299  RangeCheck  === 297 287  [[ 300 307 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 300  IfTrue  === 299  [[ 282 295 301 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 301  CountedLoopEnd  === 300 285  [[ 302 304 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 302  IfTrue  === 301  [[ 291 297 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 303  Phi  === 297 323 291  [[ 290 ]]  #double !orig=241,232
 304  IfFalse  === 301  [[ 310 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 307  IfFalse  === 299  [[ 308 ]] #0 !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 308  Region  === 308 307 350  [[ 308 157 313 314 316 ]]  !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 310  Region  === 310 304 311  [[ 310 226 312 ]]  !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 311  IfFalse  === 321  [[ 310 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 312  Phi  === 310 282 354  [[ 236 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 313  Phi  === 308 290 356  [[ 157 ]]  #double
 314  Phi  === 308 296 360  [[ 157 157 ]]  #int
 316  Phi  === 308 298 361  [[ 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 318  OpaqueZeroTripGuard  === _ 358  [[ 319 ]] 
 319  CmpI  === _ 318 135  [[ 320 ]] 
 320  Bool  === _ 319  [[ 321 ]] [lt]
 321  If  === 352 320  [[ 311 322 ]] P=0.500000, C=-1.000000
 322  IfTrue  === 321  [[ 297 323 ]] #1
 323  SqrtD  === 322 432  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 324  StoreD  === 342 340 325 332  [[ 340 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 325  AddP  === _ 64 326 162  [[ 324 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 326  AddP  === _ 64 64 331  [[ 325 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 327  Bool  === _ 328  [[ 343 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 328  CmpI  === _ 335 370  [[ 327 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 329  Bool  === _ 330  [[ 341 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 330  CmpU  === _ 338 135  [[ 329 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 331  LShiftL  === _ 336 166  [[ 326 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 332  AddD  === _ 206 345  [[ 324 356 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 333  SqrtD  === 344 334  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 334  ConvI2D  === _ 335  [[ 333 368 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 335  AddI  === _ 338 78  [[ 328 334 338 358 364 243 391 400 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 336  ConvI2L  === _ 337  [[ 331 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 337  CastII  === 342 338  [[ 336 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 338  Phi  === 339 36 335  [[ 330 335 337 360 ]]  #int #tripcount !orig=243,[233]
 339  CountedLoop  === 339 220 344  [[ 338 339 340 341 345 ]] inner stride: 1 pre of N261 !orig=261,[224],[198]
 340  Phi  === 339 7 324  [[ 324 361 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 341  RangeCheck  === 339 329  [[ 342 349 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 342  IfTrue  === 341  [[ 324 337 343 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 343  CountedLoopEnd  === 342 327  [[ 344 362 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 344  IfTrue  === 343  [[ 333 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 345  Phi  === 339 214 333  [[ 332 ]]  #double !orig=241,232
 346  IfFalse  === 366  [[ 352 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 349  IfFalse  === 341  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 350  Region  === 350 349 351  [[ 350 308 356 360 361 ]]  !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 351  IfFalse  === 221  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 352  Region  === 352 346 353  [[ 352 321 354 358 ]]  !orig=[317]
 353  IfFalse  === 258  [[ 352 ]] #0 !orig=[317]
 354  Phi  === 352 324 201  [[ 298 312 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 356  Phi  === 350 332 205  [[ 313 ]]  #double
 358  Phi  === 352 335 211  [[ 296 318 432 ]]  #int !orig=[431],[357]
 360  Phi  === 350 338 243  [[ 314 ]]  #int
 361  Phi  === 350 340 237  [[ 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 362  IfFalse  === 343  [[ 366 ]] #0
 363  OpaqueZeroTripGuard  === _ 383  [[ 364 ]] 
 364  CmpI  === _ 335 363  [[ 365 ]] 
 365  Bool  === _ 364  [[ 366 ]] [lt]
 366  If  === 362 365  [[ 346 367 ]] P=0.999999, C=-1.000000
 367  IfTrue  === 366  [[ 395 368 ]] #1
 368  SqrtD  === 367 334  [[ 241 ]]  !orig=333,145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 369  AddI  === _ 36 78  [[ 384 ]] 
 370  Opaque1  === _ 428 135  [[ 328 ]] 
 371  ConL  === 0  [[ 385 ]]  #long:0
 375  ConvI2L  === _ 190  [[ 378 385 ]]  #long:minint..maxint
 376  ConvI2L  === _ 135  [[ 378 ]]  #long:minint..maxint
 377  ConvI2L  === _ 135  [[ 382 ]]  #long:minint..maxint
 378  SubL  === _ 376 375  [[ 381 ]]  !orig=[379]
 380  ConL  === 0  [[ 381 ]]  #long:minint
 381  MaxL  === _ 378 380  [[ 382 ]] 
 382  MinL  === _ 377 381  [[ 383 ]] 
 383  ConvL2I  === _ 382  [[ 254 363 434 ]]  #int !orig=[429]
 384  ConvI2L  === _ 369  [[ 389 ]]  #long:minint..maxint:www
 385  SubL  === _ 371 375  [[ 388 ]]  !orig=[386]
 387  ConL  === 0  [[ 388 ]]  #long:maxint
 388  MinL  === _ 385 387  [[ 389 ]] 
 389  MaxL  === _ 384 388  [[ 390 ]] 
 390  ConvL2I  === _ 389  [[ 428 ]]  #int:>=min+1:www
 391  OpaqueLoopInit  === _ 335  [[ 408 436 ]] 
 392  CmpU  === _ 434 135  [[ 393 ]] 
 393  Bool  === _ 392  [[ 394 ]] [lt]
 394  OpaqueInitializedAssertionPredicate  === _ 393  [[ 395 ]] 
 395  RangeCheck  === 367 394  [[ 396 397 ]] P=0.999999, C=-1.000000
 396  IfFalse  === 395  [[ 399 ]] #0
 397  IfTrue  === 395  [[ 403 ]] #1
 399  Halt  === 396 1 1 8 1  [[ 0 ]] 
 400  CmpU  === _ 335 135  [[ 401 ]] 
 401  Bool  === _ 400  [[ 402 ]] [lt]
 402  OpaqueInitializedAssertionPredicate  === _ 401  [[ 403 ]] 
 403  RangeCheck  === 397 402  [[ 404 405 ]] P=0.999999, C=-1.000000
 404  IfFalse  === 403  [[ 407 ]] #0
 405  IfTrue  === 403  [[ 411 ]] #1
 407  Halt  === 404 1 1 8 1  [[ 0 ]] 
 408  CmpU  === _ 391 135  [[ 409 ]] 
 409  Bool  === _ 408  [[ 410 ]] [lt]
 410  Opaque4  === _ 409 78  [[ 411 ]] 
 411  RangeCheck  === 405 410  [[ 412 413 ]] P=0.999999, C=-1.000000
 412  IfFalse  === 411  [[ 415 ]] #0
 413  IfTrue  === 411  [[ 423 ]] #1
 415  Halt  === 412 1 1 8 1  [[ 0 ]] 
 416  OpaqueLoopStride  === _ 78  [[ 435 436 ]] 
 418  AddI  === _ 436 433  [[ 420 ]]  !orig=[419]
 420  CmpU  === _ 418 135  [[ 421 ]] 
 421  Bool  === _ 420  [[ 422 ]] [lt]
 422  Opaque4  === _ 421 78  [[ 423 ]] 
 423  RangeCheck  === 413 422  [[ 424 425 ]] P=0.999999, C=-1.000000
 424  IfFalse  === 423  [[ 427 ]] #0
 425  IfTrue  === 423  [[ 260 ]] #1
 427  Halt  === 424 1 1 8 1  [[ 0 ]] 
 428  MinI  === _ 390 135  [[ 370 ]] 
 432  ConvI2D  === _ 358  [[ 323 ]]  #double !orig=[357]
 433  ConI  === 0  [[ 434 435 418 ]]  #int:-1
 434  AddI  === _ 383 433  [[ 392 ]]  !orig=[430],[374]
 436  AddI  === _ 391 416  [[ 418 ]]  !orig=435,[417]
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 179 161 399 407 415 427  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 371 372 373 380 387 433 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 340 81 16 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 427 415 407 399 ]] FramePtr !orig=[426] !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 338 84 369 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  47  ConP  === 0  [[ 48 84 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !orig=[193] !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 84 ]] #0 !orig=[276],[195] !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 202 157 157 203 203 262 134 134 283 284 284 325 326 326 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !orig=281,[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 293 335 369 410 416 221 422 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 51 6 81 8 9 (83 47 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 64 64 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 428 408 208 286 288 319 370 330 420 376 377 392 400 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 316  [[ 157 ]]  { N40:rawptr:BotPTR - - N316:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 308 6 153 8 9 (156 64 32 1 314 1 1 1 1 64 314 313 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 283 325 ]]  #long:16
 166  ConI  === 0  [[ 204 289 331 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 219 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 375 ]]  #int:0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 64 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 64 64 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 206 241  [[ 201 356 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 290 332 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 211  AddI  === _ 243 78  [[ 144 262 254 243 358 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 186 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 78  [[ 222 351 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 310  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 236  Phi  === 226 7 312  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 324 201  [[ 361 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 368 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 335 211  [[ 211 360 213 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 383  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 353 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 425 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] inner stride: 1 main of N261 strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 64 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 282  StoreD  === 300 298 283 290  [[ 298 312 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 283  AddP  === _ 64 284 162  [[ 282 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 284  AddP  === _ 64 64 289  [[ 283 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 285  Bool  === _ 286  [[ 301 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 286  CmpI  === _ 293 135  [[ 285 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 287  Bool  === _ 288  [[ 299 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 288  CmpU  === _ 296 135  [[ 287 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 289  LShiftL  === _ 294 166  [[ 284 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 290  AddD  === _ 206 303  [[ 282 313 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 291  SqrtD  === 302 292  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 292  ConvI2D  === _ 293  [[ 291 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 293  AddI  === _ 296 78  [[ 286 292 296 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 294  ConvI2L  === _ 295  [[ 289 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 295  CastII  === 300 296  [[ 294 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 296  Phi  === 297 358 293  [[ 288 293 295 314 ]]  #int #tripcount !orig=243,[233]
 297  CountedLoop  === 297 322 302  [[ 296 297 298 299 303 ]] inner stride: 1 post of N261 !orig=261,[224],[198]
 298  Phi  === 297 354 282  [[ 282 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 299  RangeCheck  === 297 287  [[ 300 307 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 300  IfTrue  === 299  [[ 282 295 301 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 301  CountedLoopEnd  === 300 285  [[ 302 304 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 302  IfTrue  === 301  [[ 291 297 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 303  Phi  === 297 323 291  [[ 290 ]]  #double !orig=241,232
 304  IfFalse  === 301  [[ 310 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 307  IfFalse  === 299  [[ 308 ]] #0 !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 308  Region  === 308 307 350  [[ 308 157 313 314 316 ]]  !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 310  Region  === 310 304 311  [[ 310 226 312 ]]  !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 311  IfFalse  === 321  [[ 310 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 312  Phi  === 310 282 354  [[ 236 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 313  Phi  === 308 290 356  [[ 157 ]]  #double
 314  Phi  === 308 296 360  [[ 157 157 ]]  #int
 316  Phi  === 308 298 361  [[ 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 318  OpaqueZeroTripGuard  === _ 358  [[ 319 ]] 
 319  CmpI  === _ 318 135  [[ 320 ]] 
 320  Bool  === _ 319  [[ 321 ]] [lt]
 321  If  === 352 320  [[ 311 322 ]] P=0.500000, C=-1.000000
 322  IfTrue  === 321  [[ 297 323 ]] #1
 323  SqrtD  === 322 432  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 324  StoreD  === 342 340 325 332  [[ 340 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 325  AddP  === _ 64 326 162  [[ 324 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 326  AddP  === _ 64 64 331  [[ 325 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 327  Bool  === _ 328  [[ 343 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 328  CmpI  === _ 335 370  [[ 327 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 329  Bool  === _ 330  [[ 341 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 330  CmpU  === _ 338 135  [[ 329 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 331  LShiftL  === _ 336 166  [[ 326 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 332  AddD  === _ 206 345  [[ 324 356 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 333  SqrtD  === 344 334  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 334  ConvI2D  === _ 335  [[ 333 368 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 335  AddI  === _ 338 78  [[ 328 334 338 358 364 243 391 400 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 336  ConvI2L  === _ 337  [[ 331 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 337  CastII  === 342 338  [[ 336 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 338  Phi  === 339 36 335  [[ 330 335 337 360 ]]  #int #tripcount !orig=243,[233]
 339  CountedLoop  === 339 220 344  [[ 338 339 340 341 345 ]] inner stride: 1 pre of N261 !orig=261,[224],[198]
 340  Phi  === 339 7 324  [[ 324 361 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 341  RangeCheck  === 339 329  [[ 342 349 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 342  IfTrue  === 341  [[ 324 337 343 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 343  CountedLoopEnd  === 342 327  [[ 344 362 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 344  IfTrue  === 343  [[ 333 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 345  Phi  === 339 214 333  [[ 332 ]]  #double !orig=241,232
 346  IfFalse  === 366  [[ 352 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 349  IfFalse  === 341  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 350  Region  === 350 349 351  [[ 350 308 356 360 361 ]]  !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 351  IfFalse  === 221  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 352  Region  === 352 346 353  [[ 352 321 354 358 ]]  !orig=[317]
 353  IfFalse  === 258  [[ 352 ]] #0 !orig=[317]
 354  Phi  === 352 324 201  [[ 298 312 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 356  Phi  === 350 332 205  [[ 313 ]]  #double
 358  Phi  === 352 335 211  [[ 296 318 432 ]]  #int !orig=[431],[357]
 360  Phi  === 350 338 243  [[ 314 ]]  #int
 361  Phi  === 350 340 237  [[ 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 362  IfFalse  === 343  [[ 366 ]] #0
 363  OpaqueZeroTripGuard  === _ 383  [[ 364 ]] 
 364  CmpI  === _ 335 363  [[ 365 ]] 
 365  Bool  === _ 364  [[ 366 ]] [lt]
 366  If  === 362 365  [[ 346 367 ]] P=0.999999, C=-1.000000
 367  IfTrue  === 366  [[ 395 368 ]] #1
 368  SqrtD  === 367 334  [[ 241 ]]  !orig=333,145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 369  AddI  === _ 36 78  [[ 384 ]] 
 370  Opaque1  === _ 428 135  [[ 328 ]] 
 371  ConL  === 0  [[ 385 ]]  #long:0
 375  ConvI2L  === _ 190  [[ 378 385 ]]  #long:minint..maxint
 376  ConvI2L  === _ 135  [[ 378 ]]  #long:minint..maxint
 377  ConvI2L  === _ 135  [[ 382 ]]  #long:minint..maxint
 378  SubL  === _ 376 375  [[ 381 ]]  !orig=[379]
 380  ConL  === 0  [[ 381 ]]  #long:minint
 381  MaxL  === _ 378 380  [[ 382 ]] 
 382  MinL  === _ 377 381  [[ 383 ]] 
 383  ConvL2I  === _ 382  [[ 254 363 434 ]]  #int !orig=[429]
 384  ConvI2L  === _ 369  [[ 389 ]]  #long:minint..maxint:www
 385  SubL  === _ 371 375  [[ 388 ]]  !orig=[386]
 387  ConL  === 0  [[ 388 ]]  #long:maxint
 388  MinL  === _ 385 387  [[ 389 ]] 
 389  MaxL  === _ 384 388  [[ 390 ]] 
 390  ConvL2I  === _ 389  [[ 428 ]]  #int:>=min+1:www
 391  OpaqueLoopInit  === _ 335  [[ 408 436 ]] 
 392  CmpU  === _ 434 135  [[ 393 ]] 
 393  Bool  === _ 392  [[ 394 ]] [lt]
 394  OpaqueInitializedAssertionPredicate  === _ 393  [[ 395 ]] 
 395  RangeCheck  === 367 394  [[ 396 397 ]] P=0.999999, C=-1.000000
 396  IfFalse  === 395  [[ 399 ]] #0
 397  IfTrue  === 395  [[ 403 ]] #1
 399  Halt  === 396 1 1 8 1  [[ 0 ]] 
 400  CmpU  === _ 335 135  [[ 401 ]] 
 401  Bool  === _ 400  [[ 402 ]] [lt]
 402  OpaqueInitializedAssertionPredicate  === _ 401  [[ 403 ]] 
 403  RangeCheck  === 397 402  [[ 404 405 ]] P=0.999999, C=-1.000000
 404  IfFalse  === 403  [[ 407 ]] #0
 405  IfTrue  === 403  [[ 411 ]] #1
 407  Halt  === 404 1 1 8 1  [[ 0 ]] 
 408  CmpU  === _ 391 135  [[ 409 ]] 
 409  Bool  === _ 408  [[ 410 ]] [lt]
 410  Opaque4  === _ 409 78  [[ 411 ]] 
 411  RangeCheck  === 405 410  [[ 412 413 ]] P=0.999999, C=-1.000000
 412  IfFalse  === 411  [[ 415 ]] #0
 413  IfTrue  === 411  [[ 423 ]] #1
 415  Halt  === 412 1 1 8 1  [[ 0 ]] 
 416  OpaqueLoopStride  === _ 78  [[ 435 436 ]] 
 418  AddI  === _ 436 433  [[ 420 ]]  !orig=[419]
 420  CmpU  === _ 418 135  [[ 421 ]] 
 421  Bool  === _ 420  [[ 422 ]] [lt]
 422  Opaque4  === _ 421 78  [[ 423 ]] 
 423  RangeCheck  === 413 422  [[ 424 425 ]] P=0.999999, C=-1.000000
 424  IfFalse  === 423  [[ 427 ]] #0
 425  IfTrue  === 423  [[ 260 ]] #1
 427  Halt  === 424 1 1 8 1  [[ 0 ]] 
 428  MinI  === _ 390 135  [[ 370 ]] 
 432  ConvI2D  === _ 358  [[ 323 ]]  #double !orig=[357]
 433  ConI  === 0  [[ 434 435 418 ]]  #int:-1
 434  AddI  === _ 383 433  [[ 392 ]]  !orig=[430],[374]
 436  AddI  === _ 391 416  [[ 418 ]]  !orig=435,[417]
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 179 161 399 407 415 427  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 371 372 373 380 387 433 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 340 81 16 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 427 415 407 399 ]] FramePtr !orig=[426] !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 338 84 369 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  47  ConP  === 0  [[ 48 84 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !orig=[193] !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 84 ]] #0 !orig=[276],[195] !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 202 157 157 203 203 262 134 134 283 284 284 325 326 326 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !orig=281,[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 293 335 369 410 416 221 422 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 51 6 81 8 9 (83 47 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 64 64 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 428 408 208 286 288 319 370 330 420 376 377 392 400 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 316  [[ 157 ]]  { N40:rawptr:BotPTR - - N316:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 308 6 153 8 9 (156 64 32 1 314 1 1 1 1 64 314 313 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 283 325 ]]  #long:16
 166  ConI  === 0  [[ 204 289 331 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 219 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 375 ]]  #int:0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 64 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 64 64 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 206 241  [[ 201 356 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 290 332 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 211  AddI  === _ 243 78  [[ 144 262 254 243 358 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 186 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 78  [[ 222 351 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 310  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 236  Phi  === 226 7 312  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 324 201  [[ 361 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 368 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 335 211  [[ 211 360 213 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 383  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 353 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 425 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] inner stride: 1 main of N261 strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 64 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 282  StoreD  === 300 298 283 290  [[ 298 312 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 283  AddP  === _ 64 284 162  [[ 282 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 284  AddP  === _ 64 64 289  [[ 283 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 285  Bool  === _ 286  [[ 301 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 286  CmpI  === _ 293 135  [[ 285 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 287  Bool  === _ 288  [[ 299 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 288  CmpU  === _ 296 135  [[ 287 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 289  LShiftL  === _ 294 166  [[ 284 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 290  AddD  === _ 206 303  [[ 282 313 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 291  SqrtD  === 302 292  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 292  ConvI2D  === _ 293  [[ 291 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 293  AddI  === _ 296 78  [[ 286 292 296 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 294  ConvI2L  === _ 295  [[ 289 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 295  CastII  === 300 296  [[ 294 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 296  Phi  === 297 358 293  [[ 288 293 295 314 ]]  #int #tripcount !orig=243,[233]
 297  CountedLoop  === 297 322 302  [[ 296 297 298 299 303 ]] inner stride: 1 post of N261 !orig=261,[224],[198]
 298  Phi  === 297 354 282  [[ 282 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 299  RangeCheck  === 297 287  [[ 300 307 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 300  IfTrue  === 299  [[ 282 295 301 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 301  CountedLoopEnd  === 300 285  [[ 302 304 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 302  IfTrue  === 301  [[ 291 297 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 303  Phi  === 297 323 291  [[ 290 ]]  #double !orig=241,232
 304  IfFalse  === 301  [[ 310 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 307  IfFalse  === 299  [[ 308 ]] #0 !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 308  Region  === 308 307 350  [[ 308 157 313 314 316 ]]  !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 310  Region  === 310 304 311  [[ 310 226 312 ]]  !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 311  IfFalse  === 321  [[ 310 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 312  Phi  === 310 282 354  [[ 236 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 313  Phi  === 308 290 356  [[ 157 ]]  #double
 314  Phi  === 308 296 360  [[ 157 157 ]]  #int
 316  Phi  === 308 298 361  [[ 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 318  OpaqueZeroTripGuard  === _ 358  [[ 319 ]] 
 319  CmpI  === _ 318 135  [[ 320 ]] 
 320  Bool  === _ 319  [[ 321 ]] [lt]
 321  If  === 352 320  [[ 311 322 ]] P=0.500000, C=-1.000000
 322  IfTrue  === 321  [[ 297 323 ]] #1
 323  SqrtD  === 322 432  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 324  StoreD  === 342 340 325 332  [[ 340 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 325  AddP  === _ 64 326 162  [[ 324 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 326  AddP  === _ 64 64 331  [[ 325 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 327  Bool  === _ 328  [[ 343 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 328  CmpI  === _ 335 370  [[ 327 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 329  Bool  === _ 330  [[ 341 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 330  CmpU  === _ 338 135  [[ 329 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 331  LShiftL  === _ 336 166  [[ 326 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 332  AddD  === _ 206 345  [[ 324 356 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 333  SqrtD  === 344 334  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 334  ConvI2D  === _ 335  [[ 333 368 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 335  AddI  === _ 338 78  [[ 328 334 338 358 364 243 391 400 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 336  ConvI2L  === _ 337  [[ 331 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 337  CastII  === 342 338  [[ 336 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 338  Phi  === 339 36 335  [[ 330 335 337 360 ]]  #int #tripcount !orig=243,[233]
 339  CountedLoop  === 339 220 344  [[ 338 339 340 341 345 ]] inner stride: 1 pre of N261 !orig=261,[224],[198]
 340  Phi  === 339 7 324  [[ 324 361 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 341  RangeCheck  === 339 329  [[ 342 349 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 342  IfTrue  === 341  [[ 324 337 343 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 343  CountedLoopEnd  === 342 327  [[ 344 362 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 344  IfTrue  === 343  [[ 333 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 345  Phi  === 339 214 333  [[ 332 ]]  #double !orig=241,232
 346  IfFalse  === 366  [[ 352 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 349  IfFalse  === 341  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 350  Region  === 350 349 351  [[ 350 308 356 360 361 ]]  !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 351  IfFalse  === 221  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 352  Region  === 352 346 353  [[ 352 321 354 358 ]]  !orig=[317]
 353  IfFalse  === 258  [[ 352 ]] #0 !orig=[317]
 354  Phi  === 352 324 201  [[ 298 312 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 356  Phi  === 350 332 205  [[ 313 ]]  #double
 358  Phi  === 352 335 211  [[ 296 318 432 ]]  #int !orig=[431],[357]
 360  Phi  === 350 338 243  [[ 314 ]]  #int
 361  Phi  === 350 340 237  [[ 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 362  IfFalse  === 343  [[ 366 ]] #0
 363  OpaqueZeroTripGuard  === _ 383  [[ 364 ]] 
 364  CmpI  === _ 335 363  [[ 365 ]] 
 365  Bool  === _ 364  [[ 366 ]] [lt]
 366  If  === 362 365  [[ 346 367 ]] P=0.999999, C=-1.000000
 367  IfTrue  === 366  [[ 395 368 ]] #1
 368  SqrtD  === 367 334  [[ 241 ]]  !orig=333,145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 369  AddI  === _ 36 78  [[ 384 ]] 
 370  Opaque1  === _ 428 135  [[ 328 ]] 
 371  ConL  === 0  [[ 385 ]]  #long:0
 375  ConvI2L  === _ 190  [[ 378 385 ]]  #long:minint..maxint
 376  ConvI2L  === _ 135  [[ 378 ]]  #long:minint..maxint
 377  ConvI2L  === _ 135  [[ 382 ]]  #long:0..maxint
 378  SubL  === _ 376 375  [[ 381 ]]  !orig=[379]
 380  ConL  === 0  [[ 381 ]]  #long:minint
 381  MaxL  === _ 378 380  [[ 382 ]] 
 382  MinL  === _ 377 381  [[ 383 ]] 
 383  ConvL2I  === _ 382  [[ 254 363 434 ]]  #int !orig=[429]
 384  ConvI2L  === _ 369  [[ 389 ]]  #long:minint..maxint:www
 385  SubL  === _ 371 375  [[ 388 ]]  !orig=[386]
 387  ConL  === 0  [[ 388 ]]  #long:maxint
 388  MinL  === _ 385 387  [[ 389 ]] 
 389  MaxL  === _ 384 388  [[ 390 ]] 
 390  ConvL2I  === _ 389  [[ 428 ]]  #int:>=min+1:www
 391  OpaqueLoopInit  === _ 335  [[ 408 436 ]] 
 392  CmpU  === _ 434 135  [[ 393 ]] 
 393  Bool  === _ 392  [[ 394 ]] [lt]
 394  OpaqueInitializedAssertionPredicate  === _ 393  [[ 395 ]] 
 395  RangeCheck  === 367 394  [[ 396 397 ]] P=0.999999, C=-1.000000
 396  IfFalse  === 395  [[ 399 ]] #0
 397  IfTrue  === 395  [[ 403 ]] #1
 399  Halt  === 396 1 1 8 1  [[ 0 ]] 
 400  CmpU  === _ 335 135  [[ 401 ]] 
 401  Bool  === _ 400  [[ 402 ]] [lt]
 402  OpaqueInitializedAssertionPredicate  === _ 401  [[ 403 ]] 
 403  RangeCheck  === 397 402  [[ 404 405 ]] P=0.999999, C=-1.000000
 404  IfFalse  === 403  [[ 407 ]] #0
 405  IfTrue  === 403  [[ 411 ]] #1
 407  Halt  === 404 1 1 8 1  [[ 0 ]] 
 408  CmpU  === _ 391 135  [[ 409 ]] 
 409  Bool  === _ 408  [[ 410 ]] [lt]
 410  Opaque4  === _ 409 78  [[ 411 ]] 
 411  RangeCheck  === 405 410  [[ 412 413 ]] P=0.999999, C=-1.000000
 412  IfFalse  === 411  [[ 415 ]] #0
 413  IfTrue  === 411  [[ 423 ]] #1
 415  Halt  === 412 1 1 8 1  [[ 0 ]] 
 416  OpaqueLoopStride  === _ 78  [[ 435 436 ]] 
 418  AddI  === _ 436 433  [[ 420 ]]  !orig=[419]
 420  CmpU  === _ 418 135  [[ 421 ]] 
 421  Bool  === _ 420  [[ 422 ]] [lt]
 422  Opaque4  === _ 421 78  [[ 423 ]] 
 423  RangeCheck  === 413 422  [[ 424 425 ]] P=0.999999, C=-1.000000
 424  IfFalse  === 423  [[ 427 ]] #0
 425  IfTrue  === 423  [[ 260 ]] #1
 427  Halt  === 424 1 1 8 1  [[ 0 ]] 
 428  MinI  === _ 390 135  [[ 370 ]] 
 432  ConvI2D  === _ 358  [[ 323 ]]  #double !orig=[357]
 433  ConI  === 0  [[ 434 435 418 ]]  #int:-1
 434  AddI  === _ 383 433  [[ 392 ]]  !orig=[430],[374]
 436  AddI  === _ 391 416  [[ 418 ]]  !orig=435,[417]
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 179 161 399 407 415 427  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 371 372 373 380 387 433 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 340 81 16 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 427 415 407 399 ]] FramePtr !orig=[426] !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 338 84 369 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  47  ConP  === 0  [[ 48 84 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !orig=[193] !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 84 ]] #0 !orig=[276],[195] !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 202 157 157 203 203 262 134 134 283 284 284 325 326 326 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !orig=281,[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 293 335 369 410 416 221 422 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 51 6 81 8 9 (83 47 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 64 64 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 428 408 208 286 288 319 370 330 420 400 377 392 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 316  [[ 157 ]]  { N40:rawptr:BotPTR - - N316:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 308 6 153 8 9 (156 64 32 1 314 1 1 1 1 64 314 313 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 283 325 ]]  #long:16
 166  ConI  === 0  [[ 204 289 331 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 219 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 375 ]]  #int:0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 64 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 64 64 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 206 241  [[ 201 356 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 290 332 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 211  AddI  === _ 243 78  [[ 144 262 254 243 358 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 186 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 78  [[ 222 351 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 310  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 236  Phi  === 226 7 312  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 324 201  [[ 361 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 368 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 335 211  [[ 211 360 213 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 383  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 353 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 425 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] inner stride: 1 main of N261 strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 64 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 282  StoreD  === 300 298 283 290  [[ 298 312 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 283  AddP  === _ 64 284 162  [[ 282 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 284  AddP  === _ 64 64 289  [[ 283 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 285  Bool  === _ 286  [[ 301 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 286  CmpI  === _ 293 135  [[ 285 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 287  Bool  === _ 288  [[ 299 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 288  CmpU  === _ 296 135  [[ 287 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 289  LShiftL  === _ 294 166  [[ 284 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 290  AddD  === _ 206 303  [[ 282 313 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 291  SqrtD  === 302 292  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 292  ConvI2D  === _ 293  [[ 291 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 293  AddI  === _ 296 78  [[ 286 292 296 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 294  ConvI2L  === _ 295  [[ 289 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 295  CastII  === 300 296  [[ 294 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 296  Phi  === 297 358 293  [[ 288 293 295 314 ]]  #int #tripcount !orig=243,[233]
 297  CountedLoop  === 297 322 302  [[ 296 297 298 299 303 ]] inner stride: 1 post of N261 !orig=261,[224],[198]
 298  Phi  === 297 354 282  [[ 282 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 299  RangeCheck  === 297 287  [[ 300 307 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 300  IfTrue  === 299  [[ 282 295 301 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 301  CountedLoopEnd  === 300 285  [[ 302 304 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 302  IfTrue  === 301  [[ 291 297 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 303  Phi  === 297 323 291  [[ 290 ]]  #double !orig=241,232
 304  IfFalse  === 301  [[ 310 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 307  IfFalse  === 299  [[ 308 ]] #0 !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 308  Region  === 308 307 350  [[ 308 157 313 314 316 ]]  !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 310  Region  === 310 304 311  [[ 310 226 312 ]]  !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 311  IfFalse  === 321  [[ 310 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 312  Phi  === 310 282 354  [[ 236 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 313  Phi  === 308 290 356  [[ 157 ]]  #double
 314  Phi  === 308 296 360  [[ 157 157 ]]  #int
 316  Phi  === 308 298 361  [[ 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 318  OpaqueZeroTripGuard  === _ 358  [[ 319 ]] 
 319  CmpI  === _ 318 135  [[ 320 ]] 
 320  Bool  === _ 319  [[ 321 ]] [lt]
 321  If  === 352 320  [[ 311 322 ]] P=0.500000, C=-1.000000
 322  IfTrue  === 321  [[ 297 323 ]] #1
 323  SqrtD  === 322 432  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 324  StoreD  === 342 340 325 332  [[ 340 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 325  AddP  === _ 64 326 162  [[ 324 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 326  AddP  === _ 64 64 331  [[ 325 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 327  Bool  === _ 328  [[ 343 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 328  CmpI  === _ 335 370  [[ 327 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 329  Bool  === _ 330  [[ 341 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 330  CmpU  === _ 338 135  [[ 329 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 331  LShiftL  === _ 336 166  [[ 326 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 332  AddD  === _ 206 345  [[ 324 356 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 333  SqrtD  === 344 334  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 334  ConvI2D  === _ 335  [[ 333 368 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 335  AddI  === _ 338 78  [[ 328 334 338 358 364 243 391 400 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 336  ConvI2L  === _ 337  [[ 331 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 337  CastII  === 342 338  [[ 336 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 338  Phi  === 339 36 335  [[ 330 335 337 360 ]]  #int #tripcount !orig=243,[233]
 339  CountedLoop  === 339 220 344  [[ 338 339 340 341 345 ]] inner stride: 1 pre of N261 !orig=261,[224],[198]
 340  Phi  === 339 7 324  [[ 324 361 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 341  RangeCheck  === 339 329  [[ 342 349 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 342  IfTrue  === 341  [[ 324 337 343 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 343  CountedLoopEnd  === 342 327  [[ 344 362 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 344  IfTrue  === 343  [[ 333 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 345  Phi  === 339 214 333  [[ 332 ]]  #double !orig=241,232
 346  IfFalse  === 366  [[ 352 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 349  IfFalse  === 341  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 350  Region  === 350 349 351  [[ 350 308 356 360 361 ]]  !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 351  IfFalse  === 221  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 352  Region  === 352 346 353  [[ 352 321 354 358 ]]  !orig=[317]
 353  IfFalse  === 258  [[ 352 ]] #0 !orig=[317]
 354  Phi  === 352 324 201  [[ 298 312 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 356  Phi  === 350 332 205  [[ 313 ]]  #double
 358  Phi  === 352 335 211  [[ 296 318 432 ]]  #int !orig=[431],[357]
 360  Phi  === 350 338 243  [[ 314 ]]  #int
 361  Phi  === 350 340 237  [[ 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 362  IfFalse  === 343  [[ 366 ]] #0
 363  OpaqueZeroTripGuard  === _ 383  [[ 364 ]] 
 364  CmpI  === _ 335 363  [[ 365 ]] 
 365  Bool  === _ 364  [[ 366 ]] [lt]
 366  If  === 362 365  [[ 346 367 ]] P=0.999999, C=-1.000000
 367  IfTrue  === 366  [[ 395 368 ]] #1
 368  SqrtD  === 367 334  [[ 241 ]]  !orig=333,145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 369  AddI  === _ 36 78  [[ 384 ]] 
 370  Opaque1  === _ 428 135  [[ 328 ]] 
 371  ConL  === 0  [[ 385 ]]  #long:0
 375  ConvI2L  === _ 190  [[ 378 385 ]]  #long:minint..maxint
 377  ConvI2L  === _ 135  [[ 382 378 ]]  #long:0..maxint !orig=[376]
 378  SubL  === _ 377 375  [[ 381 ]]  !orig=[379]
 380  ConL  === 0  [[ 381 ]]  #long:minint
 381  MaxL  === _ 378 380  [[ 382 ]] 
 382  MinL  === _ 377 381  [[ 383 ]] 
 383  ConvL2I  === _ 382  [[ 254 363 434 ]]  #int !orig=[429]
 384  ConvI2L  === _ 369  [[ 389 ]]  #long:minint..maxint:www
 385  SubL  === _ 371 375  [[ 388 ]]  !orig=[386]
 387  ConL  === 0  [[ 388 ]]  #long:maxint
 388  MinL  === _ 385 387  [[ 389 ]] 
 389  MaxL  === _ 384 388  [[ 390 ]] 
 390  ConvL2I  === _ 389  [[ 428 ]]  #int:>=min+1:www
 391  OpaqueLoopInit  === _ 335  [[ 408 436 ]] 
 392  CmpU  === _ 434 135  [[ 393 ]] 
 393  Bool  === _ 392  [[ 394 ]] [lt]
 394  OpaqueInitializedAssertionPredicate  === _ 393  [[ 395 ]] 
 395  RangeCheck  === 367 394  [[ 396 397 ]] P=0.999999, C=-1.000000
 396  IfFalse  === 395  [[ 399 ]] #0
 397  IfTrue  === 395  [[ 403 ]] #1
 399  Halt  === 396 1 1 8 1  [[ 0 ]] 
 400  CmpU  === _ 335 135  [[ 401 ]] 
 401  Bool  === _ 400  [[ 402 ]] [lt]
 402  OpaqueInitializedAssertionPredicate  === _ 401  [[ 403 ]] 
 403  RangeCheck  === 397 402  [[ 404 405 ]] P=0.999999, C=-1.000000
 404  IfFalse  === 403  [[ 407 ]] #0
 405  IfTrue  === 403  [[ 411 ]] #1
 407  Halt  === 404 1 1 8 1  [[ 0 ]] 
 408  CmpU  === _ 391 135  [[ 409 ]] 
 409  Bool  === _ 408  [[ 410 ]] [lt]
 410  Opaque4  === _ 409 78  [[ 411 ]] 
 411  RangeCheck  === 405 410  [[ 412 413 ]] P=0.999999, C=-1.000000
 412  IfFalse  === 411  [[ 415 ]] #0
 413  IfTrue  === 411  [[ 423 ]] #1
 415  Halt  === 412 1 1 8 1  [[ 0 ]] 
 416  OpaqueLoopStride  === _ 78  [[ 435 436 ]] 
 418  AddI  === _ 436 433  [[ 420 ]]  !orig=[419]
 420  CmpU  === _ 418 135  [[ 421 ]] 
 421  Bool  === _ 420  [[ 422 ]] [lt]
 422  Opaque4  === _ 421 78  [[ 423 ]] 
 423  RangeCheck  === 413 422  [[ 424 425 ]] P=0.999999, C=-1.000000
 424  IfFalse  === 423  [[ 427 ]] #0
 425  IfTrue  === 423  [[ 260 ]] #1
 427  Halt  === 424 1 1 8 1  [[ 0 ]] 
 428  MinI  === _ 390 135  [[ 370 ]] 
 432  ConvI2D  === _ 358  [[ 323 ]]  #double !orig=[357]
 433  ConI  === 0  [[ 434 435 418 ]]  #int:-1
 434  AddI  === _ 383 433  [[ 392 ]]  !orig=[430],[374]
 436  AddI  === _ 391 416  [[ 418 ]]  !orig=435,[417]
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 179 161 399 407 415 427  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 371 372 373 380 387 433 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 340 81 16 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 427 415 407 399 ]] FramePtr !orig=[426] !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 338 84 369 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  47  ConP  === 0  [[ 48 84 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !orig=[193] !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 84 ]] #0 !orig=[276],[195] !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 202 157 157 203 203 262 134 134 283 284 284 325 326 326 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !orig=281,[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 293 335 369 410 416 221 422 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 51 6 81 8 9 (83 47 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 64 64 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 428 408 208 286 288 319 370 330 420 400 377 392 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 316  [[ 157 ]]  { N40:rawptr:BotPTR - - N316:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 308 6 153 8 9 (156 64 32 1 314 1 1 1 1 64 314 313 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 283 325 ]]  #long:16
 166  ConI  === 0  [[ 204 289 331 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 219 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 375 ]]  #int:0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 64 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 64 64 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 206 241  [[ 201 356 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 290 332 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 211  AddI  === _ 243 78  [[ 144 262 254 243 358 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 186 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 78  [[ 222 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 310  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 236  Phi  === 226 7 312  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 324 201  [[ 361 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 368 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 335 211  [[ 211 360 213 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 383  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 353 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 425 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] inner stride: 1 main of N261 strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 64 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 282  StoreD  === 300 298 283 290  [[ 298 312 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 283  AddP  === _ 64 284 162  [[ 282 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 284  AddP  === _ 64 64 289  [[ 283 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 285  Bool  === _ 286  [[ 301 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 286  CmpI  === _ 293 135  [[ 285 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 287  Bool  === _ 288  [[ 299 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 288  CmpU  === _ 296 135  [[ 287 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 289  LShiftL  === _ 294 166  [[ 284 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 290  AddD  === _ 206 303  [[ 282 313 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 291  SqrtD  === 302 292  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 292  ConvI2D  === _ 293  [[ 291 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 293  AddI  === _ 296 78  [[ 286 292 296 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 294  ConvI2L  === _ 295  [[ 289 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 295  CastII  === 300 296  [[ 294 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 296  Phi  === 297 358 293  [[ 288 293 295 314 ]]  #int #tripcount !orig=243,[233]
 297  CountedLoop  === 297 322 302  [[ 296 297 298 299 303 ]] inner stride: 1 post of N261 !orig=261,[224],[198]
 298  Phi  === 297 354 282  [[ 282 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 299  RangeCheck  === 297 287  [[ 300 307 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 300  IfTrue  === 299  [[ 282 295 301 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 301  CountedLoopEnd  === 300 285  [[ 302 304 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 302  IfTrue  === 301  [[ 291 297 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 303  Phi  === 297 323 291  [[ 290 ]]  #double !orig=241,232
 304  IfFalse  === 301  [[ 310 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 307  IfFalse  === 299  [[ 308 ]] #0 !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 308  Region  === 308 307 350  [[ 308 157 313 314 316 ]]  !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 310  Region  === 310 304 311  [[ 310 226 312 ]]  !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 311  IfFalse  === 321  [[ 310 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 312  Phi  === 310 282 354  [[ 236 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 313  Phi  === 308 290 356  [[ 157 ]]  #double
 314  Phi  === 308 296 360  [[ 157 157 ]]  #int
 316  Phi  === 308 298 361  [[ 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 318  OpaqueZeroTripGuard  === _ 358  [[ 319 ]] 
 319  CmpI  === _ 318 135  [[ 320 ]] 
 320  Bool  === _ 319  [[ 321 ]] [lt]
 321  If  === 352 320  [[ 311 322 ]] P=0.500000, C=-1.000000
 322  IfTrue  === 321  [[ 297 323 ]] #1
 323  SqrtD  === 322 432  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 324  StoreD  === 342 340 325 332  [[ 340 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 325  AddP  === _ 64 326 162  [[ 324 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 326  AddP  === _ 64 64 331  [[ 325 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 327  Bool  === _ 328  [[ 343 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 328  CmpI  === _ 335 370  [[ 327 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 329  Bool  === _ 330  [[ 341 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 330  CmpU  === _ 338 135  [[ 329 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 331  LShiftL  === _ 336 166  [[ 326 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 332  AddD  === _ 206 345  [[ 324 356 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 333  SqrtD  === 344 334  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 334  ConvI2D  === _ 335  [[ 333 368 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 335  AddI  === _ 338 78  [[ 328 334 338 358 364 243 391 400 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 336  ConvI2L  === _ 337  [[ 331 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 337  CastII  === 342 338  [[ 336 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 338  Phi  === 339 36 335  [[ 330 335 337 360 ]]  #int #tripcount !orig=243,[233]
 339  CountedLoop  === 339 220 344  [[ 338 339 340 341 345 ]] inner stride: 1 pre of N261 !orig=261,[224],[198]
 340  Phi  === 339 7 324  [[ 324 361 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 341  RangeCheck  === 339 329  [[ 342 349 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 342  IfTrue  === 341  [[ 324 337 343 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 343  CountedLoopEnd  === 342 327  [[ 344 362 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 344  IfTrue  === 343  [[ 333 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 345  Phi  === 339 214 333  [[ 332 ]]  #double !orig=241,232
 346  IfFalse  === 366  [[ 352 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 349  IfFalse  === 341  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 350  Region  === 350 349 1  [[ 350 308 356 360 361 ]]  !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 352  Region  === 352 346 353  [[ 352 321 354 358 ]]  !orig=[317]
 353  IfFalse  === 258  [[ 352 ]] #0 !orig=[317]
 354  Phi  === 352 324 201  [[ 298 312 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 356  Phi  === 350 332 205  [[ 313 ]]  #double
 358  Phi  === 352 335 211  [[ 296 318 432 ]]  #int !orig=[431],[357]
 360  Phi  === 350 338 243  [[ 314 ]]  #int
 361  Phi  === 350 340 237  [[ 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 362  IfFalse  === 343  [[ 366 ]] #0
 363  OpaqueZeroTripGuard  === _ 383  [[ 364 ]] 
 364  CmpI  === _ 335 363  [[ 365 ]] 
 365  Bool  === _ 364  [[ 366 ]] [lt]
 366  If  === 362 365  [[ 346 367 ]] P=0.999999, C=-1.000000
 367  IfTrue  === 366  [[ 395 368 ]] #1
 368  SqrtD  === 367 334  [[ 241 ]]  !orig=333,145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 369  AddI  === _ 36 78  [[ 384 ]] 
 370  Opaque1  === _ 428 135  [[ 328 ]] 
 371  ConL  === 0  [[ 385 ]]  #long:0
 375  ConvI2L  === _ 190  [[ 378 385 ]]  #long:minint..maxint
 377  ConvI2L  === _ 135  [[ 382 378 ]]  #long:0..maxint !orig=[376]
 378  SubL  === _ 377 375  [[ 381 ]]  !orig=[379]
 380  ConL  === 0  [[ 381 ]]  #long:minint
 381  MaxL  === _ 378 380  [[ 382 ]] 
 382  MinL  === _ 377 381  [[ 383 ]] 
 383  ConvL2I  === _ 382  [[ 254 363 434 ]]  #int !orig=[429]
 384  ConvI2L  === _ 369  [[ 389 ]]  #long:minint..maxint:www
 385  SubL  === _ 371 375  [[ 388 ]]  !orig=[386]
 387  ConL  === 0  [[ 388 ]]  #long:maxint
 388  MinL  === _ 385 387  [[ 389 ]] 
 389  MaxL  === _ 384 388  [[ 390 ]] 
 390  ConvL2I  === _ 389  [[ 428 ]]  #int:>=min+1:www
 391  OpaqueLoopInit  === _ 335  [[ 408 436 ]] 
 392  CmpU  === _ 434 135  [[ 393 ]] 
 393  Bool  === _ 392  [[ 394 ]] [lt]
 394  OpaqueInitializedAssertionPredicate  === _ 393  [[ 395 ]] 
 395  RangeCheck  === 367 394  [[ 396 397 ]] P=0.999999, C=-1.000000
 396  IfFalse  === 395  [[ 399 ]] #0
 397  IfTrue  === 395  [[ 403 ]] #1
 399  Halt  === 396 1 1 8 1  [[ 0 ]] 
 400  CmpU  === _ 335 135  [[ 401 ]] 
 401  Bool  === _ 400  [[ 402 ]] [lt]
 402  OpaqueInitializedAssertionPredicate  === _ 401  [[ 403 ]] 
 403  RangeCheck  === 397 402  [[ 404 405 ]] P=0.999999, C=-1.000000
 404  IfFalse  === 403  [[ 407 ]] #0
 405  IfTrue  === 403  [[ 411 ]] #1
 407  Halt  === 404 1 1 8 1  [[ 0 ]] 
 408  CmpU  === _ 391 135  [[ 409 ]] 
 409  Bool  === _ 408  [[ 410 ]] [lt]
 410  Opaque4  === _ 409 78  [[ 411 ]] 
 411  RangeCheck  === 405 410  [[ 412 413 ]] P=0.999999, C=-1.000000
 412  IfFalse  === 411  [[ 415 ]] #0
 413  IfTrue  === 411  [[ 423 ]] #1
 415  Halt  === 412 1 1 8 1  [[ 0 ]] 
 416  OpaqueLoopStride  === _ 78  [[ 436 ]] 
 418  AddI  === _ 436 433  [[ 420 ]]  !orig=[419]
 420  CmpU  === _ 418 135  [[ 421 ]] 
 421  Bool  === _ 420  [[ 422 ]] [lt]
 422  Opaque4  === _ 421 78  [[ 423 ]] 
 423  RangeCheck  === 413 422  [[ 424 425 ]] P=0.999999, C=-1.000000
 424  IfFalse  === 423  [[ 427 ]] #0
 425  IfTrue  === 423  [[ 260 ]] #1
 427  Halt  === 424 1 1 8 1  [[ 0 ]] 
 428  MinI  === _ 390 135  [[ 370 ]] 
 432  ConvI2D  === _ 358  [[ 323 ]]  #double !orig=[357]
 433  ConI  === 0  [[ 434 418 ]]  #int:-1
 434  AddI  === _ 383 433  [[ 392 ]]  !orig=[430],[374]
 436  AddI  === _ 391 416  [[ 418 ]]  !orig=[435],[417]
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 179 161 399 407 415 427  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 371 372 373 380 387 433 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 340 81 16 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 427 415 407 399 ]] FramePtr !orig=[426] !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 338 84 369 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  47  ConP  === 0  [[ 48 84 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !orig=[193] !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 84 ]] #0 !orig=[276],[195] !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 202 157 157 203 203 262 134 134 283 284 284 325 326 326 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !orig=281,[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 293 335 369 410 416 221 422 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 51 6 81 8 9 (83 47 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 64 64 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 428 408 208 286 288 319 370 330 420 400 377 392 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 316  [[ 157 ]]  { N40:rawptr:BotPTR - - N316:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 308 6 153 8 9 (156 64 32 1 314 1 1 1 1 64 314 313 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 283 325 ]]  #long:16
 166  ConI  === 0  [[ 204 289 331 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 219 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 375 ]]  #int:0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 64 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 64 64 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 206 241  [[ 201 356 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 290 332 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 211  AddI  === _ 243 78  [[ 144 262 254 243 358 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 186 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 78  [[ 222 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 310  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 236  Phi  === 226 7 312  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 324 201  [[ 361 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 368 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 335 211  [[ 211 360 213 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 383  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 353 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 425 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] inner stride: 1 main of N261 strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 64 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 282  StoreD  === 300 298 283 290  [[ 298 312 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 283  AddP  === _ 64 284 162  [[ 282 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 284  AddP  === _ 64 64 289  [[ 283 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 285  Bool  === _ 286  [[ 301 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 286  CmpI  === _ 293 135  [[ 285 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 287  Bool  === _ 288  [[ 299 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 288  CmpU  === _ 296 135  [[ 287 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 289  LShiftL  === _ 294 166  [[ 284 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 290  AddD  === _ 206 303  [[ 282 313 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 291  SqrtD  === 302 292  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 292  ConvI2D  === _ 293  [[ 291 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 293  AddI  === _ 296 78  [[ 286 292 296 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 294  ConvI2L  === _ 295  [[ 289 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 295  CastII  === 300 296  [[ 294 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 296  Phi  === 297 358 293  [[ 288 293 295 314 ]]  #int #tripcount !orig=243,[233]
 297  CountedLoop  === 297 322 302  [[ 296 297 298 299 303 ]] inner stride: 1 post of N261 !orig=261,[224],[198]
 298  Phi  === 297 354 282  [[ 282 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 299  RangeCheck  === 297 287  [[ 300 307 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 300  IfTrue  === 299  [[ 282 295 301 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 301  CountedLoopEnd  === 300 285  [[ 302 304 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 302  IfTrue  === 301  [[ 291 297 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 303  Phi  === 297 323 291  [[ 290 ]]  #double !orig=241,232
 304  IfFalse  === 301  [[ 310 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 307  IfFalse  === 299  [[ 308 ]] #0 !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 308  Region  === 308 307 350  [[ 308 157 313 314 316 ]]  !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 310  Region  === 310 304 311  [[ 310 226 312 ]]  !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 311  IfFalse  === 321  [[ 310 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 312  Phi  === 310 282 354  [[ 236 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 313  Phi  === 308 290 356  [[ 157 ]]  #double
 314  Phi  === 308 296 360  [[ 157 157 ]]  #int
 316  Phi  === 308 298 361  [[ 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 318  OpaqueZeroTripGuard  === _ 358  [[ 319 ]] 
 319  CmpI  === _ 318 135  [[ 320 ]] 
 320  Bool  === _ 319  [[ 321 ]] [lt]
 321  If  === 352 320  [[ 311 322 ]] P=0.500000, C=-1.000000
 322  IfTrue  === 321  [[ 297 323 ]] #1
 323  SqrtD  === 322 432  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 324  StoreD  === 342 340 325 332  [[ 340 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 325  AddP  === _ 64 326 162  [[ 324 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 326  AddP  === _ 64 64 331  [[ 325 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 327  Bool  === _ 328  [[ 343 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 328  CmpI  === _ 335 370  [[ 327 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 329  Bool  === _ 330  [[ 341 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 330  CmpU  === _ 338 135  [[ 329 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 331  LShiftL  === _ 336 166  [[ 326 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 332  AddD  === _ 206 345  [[ 324 356 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 333  SqrtD  === 344 334  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 334  ConvI2D  === _ 335  [[ 333 368 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 335  AddI  === _ 338 78  [[ 328 334 338 358 364 243 391 400 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 336  ConvI2L  === _ 337  [[ 331 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 337  CastII  === 342 338  [[ 336 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 338  Phi  === 339 36 335  [[ 330 335 337 360 ]]  #int #tripcount !orig=243,[233]
 339  CountedLoop  === 339 220 344  [[ 338 339 340 341 345 ]] inner stride: 1 pre of N261 !orig=261,[224],[198]
 340  Phi  === 339 7 324  [[ 324 361 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 341  RangeCheck  === 339 329  [[ 342 349 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 342  IfTrue  === 341  [[ 324 337 343 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 343  CountedLoopEnd  === 342 327  [[ 344 362 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 344  IfTrue  === 343  [[ 333 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 345  Phi  === 339 214 333  [[ 332 ]]  #double !orig=241,232
 346  IfFalse  === 366  [[ 352 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 349  IfFalse  === 341  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 350  Region  === 350 349 1  [[ 350 308 356 360 361 ]]  !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 352  Region  === 352 346 353  [[ 352 321 354 358 ]]  !orig=[317]
 353  IfFalse  === 258  [[ 352 ]] #0 !orig=[317]
 354  Phi  === 352 324 201  [[ 298 312 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 356  Phi  === 350 332 205  [[ 313 ]]  #double
 358  Phi  === 352 335 211  [[ 296 318 432 ]]  #int !orig=[431],[357]
 360  Phi  === 350 338 243  [[ 314 ]]  #int
 361  Phi  === 350 340 237  [[ 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 362  IfFalse  === 343  [[ 366 ]] #0
 363  OpaqueZeroTripGuard  === _ 383  [[ 364 ]] 
 364  CmpI  === _ 335 363  [[ 365 ]] 
 365  Bool  === _ 364  [[ 366 ]] [lt]
 366  If  === 362 365  [[ 346 367 ]] P=0.999999, C=-1.000000
 367  IfTrue  === 366  [[ 395 368 ]] #1
 368  SqrtD  === 367 334  [[ 241 ]]  !orig=333,145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 369  AddI  === _ 36 78  [[ 384 ]] 
 370  Opaque1  === _ 428 135  [[ 328 ]] 
 371  ConL  === 0  [[ 385 ]]  #long:0
 375  ConvI2L  === _ 190  [[ 378 385 ]]  #long:minint..maxint
 377  ConvI2L  === _ 135  [[ 382 378 ]]  #long:0..maxint !orig=[376]
 378  SubL  === _ 377 375  [[ 381 ]]  !orig=[379]
 380  ConL  === 0  [[ 381 ]]  #long:minint
 381  MaxL  === _ 378 380  [[ 382 ]] 
 382  MinL  === _ 377 381  [[ 383 ]] 
 383  ConvL2I  === _ 382  [[ 254 363 434 ]]  #int !orig=[429]
 384  ConvI2L  === _ 369  [[ 389 ]]  #long:minint..maxint:www
 385  SubL  === _ 371 375  [[ 388 ]]  !orig=[386]
 387  ConL  === 0  [[ 388 ]]  #long:maxint
 388  MinL  === _ 385 387  [[ 389 ]] 
 389  MaxL  === _ 384 388  [[ 390 ]] 
 390  ConvL2I  === _ 389  [[ 428 ]]  #int:>=min+1:www
 391  OpaqueLoopInit  === _ 335  [[ 408 436 ]] 
 392  CmpU  === _ 434 135  [[ 393 ]] 
 393  Bool  === _ 392  [[ 394 ]] [lt]
 394  OpaqueInitializedAssertionPredicate  === _ 393  [[ 395 ]] 
 395  RangeCheck  === 367 394  [[ 396 397 ]] P=0.999999, C=-1.000000
 396  IfFalse  === 395  [[ 399 ]] #0
 397  IfTrue  === 395  [[ 403 ]] #1
 399  Halt  === 396 1 1 8 1  [[ 0 ]] 
 400  CmpU  === _ 335 135  [[ 401 ]] 
 401  Bool  === _ 400  [[ 402 ]] [lt]
 402  OpaqueInitializedAssertionPredicate  === _ 401  [[ 403 ]] 
 403  RangeCheck  === 397 402  [[ 404 405 ]] P=0.999999, C=-1.000000
 404  IfFalse  === 403  [[ 407 ]] #0
 405  IfTrue  === 403  [[ 411 ]] #1
 407  Halt  === 404 1 1 8 1  [[ 0 ]] 
 408  CmpU  === _ 391 135  [[ 409 ]] 
 409  Bool  === _ 408  [[ 410 ]] [lt]
 410  Opaque4  === _ 409 78  [[ 411 ]] 
 411  RangeCheck  === 405 410  [[ 412 413 ]] P=0.999999, C=-1.000000
 412  IfFalse  === 411  [[ 415 ]] #0
 413  IfTrue  === 411  [[ 423 ]] #1
 415  Halt  === 412 1 1 8 1  [[ 0 ]] 
 416  OpaqueLoopStride  === _ 78  [[ 436 ]] 
 418  AddI  === _ 436 433  [[ 420 ]]  !orig=[419]
 420  CmpU  === _ 418 135  [[ 421 ]] 
 421  Bool  === _ 420  [[ 422 ]] [lt]
 422  Opaque4  === _ 421 78  [[ 423 ]] 
 423  RangeCheck  === 413 422  [[ 424 425 ]] P=0.999999, C=-1.000000
 424  IfFalse  === 423  [[ 427 ]] #0
 425  IfTrue  === 423  [[ 260 ]] #1
 427  Halt  === 424 1 1 8 1  [[ 0 ]] 
 428  MinI  === _ 390 135  [[ 370 ]] 
 432  ConvI2D  === _ 358  [[ 323 ]]  #double !orig=[357]
 433  ConI  === 0  [[ 434 418 ]]  #int:-1
 434  AddI  === _ 383 433  [[ 392 ]]  !orig=[430],[374]
 436  AddI  === _ 391 416  [[ 418 ]]  !orig=[435],[417]
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 179 161 399 407 415 427  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 371 372 373 380 387 433 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 340 81 16 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 427 415 407 399 ]] FramePtr !orig=[426] !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 338 84 369 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  47  ConP  === 0  [[ 48 84 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !orig=[193] !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 84 ]] #0 !orig=[276],[195] !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 202 157 157 203 203 262 134 134 283 284 284 325 326 326 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !orig=281,[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 293 335 369 410 416 221 422 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 51 6 81 8 9 (83 47 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 64 64 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 428 408 208 286 288 319 370 330 420 400 377 392 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 316  [[ 157 ]]  { N40:rawptr:BotPTR - - N316:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 308 6 153 8 9 (156 64 32 1 314 1 1 1 1 64 314 313 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 283 325 ]]  #long:16
 166  ConI  === 0  [[ 204 289 331 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 219 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 375 ]]  #int:0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 64 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 64 64 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 206 241  [[ 201 356 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 290 332 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 211  AddI  === _ 243 78  [[ 144 262 254 243 358 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 186 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 78  [[ 222 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 310  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 236  Phi  === 226 7 312  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 324 201  [[ 361 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 368 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 335 211  [[ 211 360 213 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 383  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 353 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 425 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] inner stride: 1 main of N261 strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 64 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 282  StoreD  === 300 298 283 290  [[ 298 312 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 283  AddP  === _ 64 284 162  [[ 282 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 284  AddP  === _ 64 64 289  [[ 283 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 285  Bool  === _ 286  [[ 301 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 286  CmpI  === _ 293 135  [[ 285 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 287  Bool  === _ 288  [[ 299 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 288  CmpU  === _ 296 135  [[ 287 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 289  LShiftL  === _ 294 166  [[ 284 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 290  AddD  === _ 206 303  [[ 282 313 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 291  SqrtD  === 302 292  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 292  ConvI2D  === _ 293  [[ 291 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 293  AddI  === _ 296 78  [[ 286 292 296 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 294  ConvI2L  === _ 295  [[ 289 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 295  CastII  === 300 296  [[ 294 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 296  Phi  === 297 358 293  [[ 288 293 295 314 ]]  #int #tripcount !orig=243,[233]
 297  CountedLoop  === 297 322 302  [[ 296 297 298 299 303 ]] inner stride: 1 post of N261 !orig=261,[224],[198]
 298  Phi  === 297 354 282  [[ 282 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 299  RangeCheck  === 297 287  [[ 300 307 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 300  IfTrue  === 299  [[ 282 295 301 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 301  CountedLoopEnd  === 300 285  [[ 302 304 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 302  IfTrue  === 301  [[ 291 297 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 303  Phi  === 297 323 291  [[ 290 ]]  #double !orig=241,232
 304  IfFalse  === 301  [[ 310 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 307  IfFalse  === 299  [[ 308 ]] #0 !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 308  Region  === 308 307 350  [[ 308 157 313 314 316 ]]  !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 310  Region  === 310 304 311  [[ 310 226 312 ]]  !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 311  IfFalse  === 321  [[ 310 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 312  Phi  === 310 282 354  [[ 236 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 313  Phi  === 308 290 356  [[ 157 ]]  #double
 314  Phi  === 308 296 360  [[ 157 157 ]]  #int
 316  Phi  === 308 298 361  [[ 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 318  OpaqueZeroTripGuard  === _ 358  [[ 319 ]] 
 319  CmpI  === _ 318 135  [[ 320 ]] 
 320  Bool  === _ 319  [[ 321 ]] [lt]
 321  If  === 352 320  [[ 311 322 ]] P=0.500000, C=-1.000000
 322  IfTrue  === 321  [[ 297 323 ]] #1
 323  SqrtD  === 322 432  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 324  StoreD  === 342 340 325 332  [[ 340 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 325  AddP  === _ 64 326 162  [[ 324 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 326  AddP  === _ 64 64 331  [[ 325 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 327  Bool  === _ 328  [[ 343 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 328  CmpI  === _ 335 370  [[ 327 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 329  Bool  === _ 330  [[ 341 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 330  CmpU  === _ 338 135  [[ 329 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 331  LShiftL  === _ 336 166  [[ 326 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 332  AddD  === _ 206 345  [[ 324 356 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 333  SqrtD  === 344 334  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 334  ConvI2D  === _ 335  [[ 333 368 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 335  AddI  === _ 338 78  [[ 328 334 338 358 364 243 391 400 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 336  ConvI2L  === _ 337  [[ 331 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 337  CastII  === 342 338  [[ 336 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 338  Phi  === 339 36 335  [[ 330 335 337 360 ]]  #int #tripcount !orig=243,[233]
 339  CountedLoop  === 339 220 344  [[ 338 339 340 341 345 ]] inner stride: 1 pre of N261 !orig=261,[224],[198]
 340  Phi  === 339 7 324  [[ 324 361 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 341  RangeCheck  === 339 329  [[ 342 349 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 342  IfTrue  === 341  [[ 324 337 343 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 343  CountedLoopEnd  === 342 327  [[ 344 362 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 344  IfTrue  === 343  [[ 333 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 345  Phi  === 339 214 333  [[ 332 ]]  #double !orig=241,232
 346  IfFalse  === 366  [[ 352 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 349  IfFalse  === 341  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 350  Region  === 350 349 1  [[ 350 308 356 360 361 ]]  !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 352  Region  === 352 346 353  [[ 352 321 354 358 ]]  !orig=[317]
 353  IfFalse  === 258  [[ 352 ]] #0 !orig=[317]
 354  Phi  === 352 324 201  [[ 298 312 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 356  Phi  === 350 332 205  [[ 313 ]]  #double
 358  Phi  === 352 335 211  [[ 296 318 432 ]]  #int !orig=[431],[357]
 360  Phi  === 350 338 243  [[ 314 ]]  #int
 361  Phi  === 350 340 237  [[ 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 362  IfFalse  === 343  [[ 366 ]] #0
 363  OpaqueZeroTripGuard  === _ 383  [[ 364 ]] 
 364  CmpI  === _ 335 363  [[ 365 ]] 
 365  Bool  === _ 364  [[ 366 ]] [lt]
 366  If  === 362 365  [[ 346 367 ]] P=0.999999, C=-1.000000
 367  IfTrue  === 366  [[ 395 368 ]] #1
 368  SqrtD  === 367 334  [[ 241 ]]  !orig=333,145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 369  AddI  === _ 36 78  [[ 384 ]] 
 370  Opaque1  === _ 428 135  [[ 328 ]] 
 371  ConL  === 0  [[ 385 ]]  #long:0
 375  ConvI2L  === _ 190  [[ 378 385 ]]  #long:minint..maxint
 377  ConvI2L  === _ 135  [[ 382 378 ]]  #long:0..maxint !orig=[376]
 378  SubL  === _ 377 375  [[ 381 ]]  !orig=[379]
 380  ConL  === 0  [[ 381 ]]  #long:minint
 381  MaxL  === _ 378 380  [[ 382 ]] 
 382  MinL  === _ 377 381  [[ 383 ]] 
 383  ConvL2I  === _ 382  [[ 254 363 434 ]]  #int !orig=[429]
 384  ConvI2L  === _ 369  [[ 389 ]]  #long:minint..maxint:www
 385  SubL  === _ 371 375  [[ 388 ]]  !orig=[386]
 387  ConL  === 0  [[ 388 ]]  #long:maxint
 388  MinL  === _ 385 387  [[ 389 ]] 
 389  MaxL  === _ 384 388  [[ 390 ]] 
 390  ConvL2I  === _ 389  [[ 428 ]]  #int:>=min+1:www
 391  OpaqueLoopInit  === _ 335  [[ 408 436 ]] 
 392  CmpU  === _ 434 135  [[ 393 ]] 
 393  Bool  === _ 392  [[ 394 ]] [lt]
 394  OpaqueInitializedAssertionPredicate  === _ 393  [[ 395 ]] 
 395  RangeCheck  === 367 394  [[ 396 397 ]] P=0.999999, C=-1.000000
 396  IfFalse  === 395  [[ 399 ]] #0
 397  IfTrue  === 395  [[ 403 ]] #1
 399  Halt  === 396 1 1 8 1  [[ 0 ]] 
 400  CmpU  === _ 335 135  [[ 401 ]] 
 401  Bool  === _ 400  [[ 402 ]] [lt]
 402  OpaqueInitializedAssertionPredicate  === _ 401  [[ 403 ]] 
 403  RangeCheck  === 397 402  [[ 404 405 ]] P=0.999999, C=-1.000000
 404  IfFalse  === 403  [[ 407 ]] #0
 405  IfTrue  === 403  [[ 411 ]] #1
 407  Halt  === 404 1 1 8 1  [[ 0 ]] 
 408  CmpU  === _ 391 135  [[ 409 ]] 
 409  Bool  === _ 408  [[ 410 ]] [lt]
 410  Opaque4  === _ 409 78  [[ 411 ]] 
 411  RangeCheck  === 405 410  [[ 412 413 ]] P=0.999999, C=-1.000000
 412  IfFalse  === 411  [[ 415 ]] #0
 413  IfTrue  === 411  [[ 423 ]] #1
 415  Halt  === 412 1 1 8 1  [[ 0 ]] 
 416  OpaqueLoopStride  === _ 78  [[ 436 ]] 
 418  AddI  === _ 436 433  [[ 420 ]]  !orig=[419]
 420  CmpU  === _ 418 135  [[ 421 ]] 
 421  Bool  === _ 420  [[ 422 ]] [lt]
 422  Opaque4  === _ 421 78  [[ 423 ]] 
 423  RangeCheck  === 413 422  [[ 424 425 ]] P=0.999999, C=-1.000000
 424  IfFalse  === 423  [[ 427 ]] #0
 425  IfTrue  === 423  [[ 260 ]] #1
 427  Halt  === 424 1 1 8 1  [[ 0 ]] 
 428  MinI  === _ 390 135  [[ 370 ]] 
 432  ConvI2D  === _ 358  [[ 323 ]]  #double !orig=[357]
 433  ConI  === 0  [[ 434 418 ]]  #int:-1
 434  AddI  === _ 383 433  [[ 392 ]]  !orig=[430],[374]
 436  AddI  === _ 391 416  [[ 418 ]]  !orig=[435],[417]
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 179 161 399 407 415 427  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 371 372 373 380 387 433 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 340 81 16 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 427 415 407 399 ]] FramePtr !orig=[426] !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 338 84 369 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  47  ConP  === 0  [[ 48 84 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !orig=[193] !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 84 ]] #0 !orig=[276],[195] !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 202 157 157 203 203 262 134 134 283 284 284 325 326 326 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !orig=281,[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 293 335 369 410 416 221 422 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 51 6 81 8 9 (83 47 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 64 64 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 428 408 208 286 288 319 370 330 420 400 377 392 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 316  [[ 157 ]]  { N40:rawptr:BotPTR - - N316:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 308 6 153 8 9 (156 64 32 1 314 1 1 1 1 64 314 313 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 283 325 ]]  #long:16
 166  ConI  === 0  [[ 204 289 331 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 219 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 375 ]]  #int:0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 64 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 64 64 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 206 241  [[ 201 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 290 332 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 211  AddI  === _ 243 78  [[ 144 262 254 243 358 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 186 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 78  [[ 222 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 310  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 236  Phi  === 226 7 312  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 324 201  [[ 361 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 368 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 335 211  [[ 211 360 213 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 383  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 353 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 425 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] inner stride: 1 main of N261 strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 64 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 282  StoreD  === 300 298 283 290  [[ 298 312 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 283  AddP  === _ 64 284 162  [[ 282 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 284  AddP  === _ 64 64 289  [[ 283 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 285  Bool  === _ 286  [[ 301 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 286  CmpI  === _ 293 135  [[ 285 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 287  Bool  === _ 288  [[ 299 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 288  CmpU  === _ 296 135  [[ 287 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 289  LShiftL  === _ 294 166  [[ 284 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 290  AddD  === _ 206 303  [[ 282 313 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 291  SqrtD  === 302 292  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 292  ConvI2D  === _ 293  [[ 291 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 293  AddI  === _ 296 78  [[ 286 292 296 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 294  ConvI2L  === _ 295  [[ 289 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 295  CastII  === 300 296  [[ 294 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 296  Phi  === 297 358 293  [[ 288 293 295 314 ]]  #int #tripcount !orig=243,[233]
 297  CountedLoop  === 297 322 302  [[ 296 297 298 299 303 ]] inner stride: 1 post of N261 !orig=261,[224],[198]
 298  Phi  === 297 354 282  [[ 282 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 299  RangeCheck  === 297 287  [[ 300 307 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 300  IfTrue  === 299  [[ 282 295 301 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 301  CountedLoopEnd  === 300 285  [[ 302 304 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 302  IfTrue  === 301  [[ 291 297 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 303  Phi  === 297 323 291  [[ 290 ]]  #double !orig=241,232
 304  IfFalse  === 301  [[ 310 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 307  IfFalse  === 299  [[ 308 ]] #0 !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 308  Region  === 308 307 350  [[ 308 157 313 314 316 ]]  !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 310  Region  === 310 304 311  [[ 310 226 312 ]]  !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 311  IfFalse  === 321  [[ 310 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 312  Phi  === 310 282 354  [[ 236 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 313  Phi  === 308 290 332  [[ 157 ]]  #double
 314  Phi  === 308 296 360  [[ 157 157 ]]  #int
 316  Phi  === 308 298 361  [[ 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 318  OpaqueZeroTripGuard  === _ 358  [[ 319 ]] 
 319  CmpI  === _ 318 135  [[ 320 ]] 
 320  Bool  === _ 319  [[ 321 ]] [lt]
 321  If  === 352 320  [[ 311 322 ]] P=0.500000, C=-1.000000
 322  IfTrue  === 321  [[ 297 323 ]] #1
 323  SqrtD  === 322 432  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 324  StoreD  === 342 340 325 332  [[ 340 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 325  AddP  === _ 64 326 162  [[ 324 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 326  AddP  === _ 64 64 331  [[ 325 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 327  Bool  === _ 328  [[ 343 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 328  CmpI  === _ 335 370  [[ 327 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 329  Bool  === _ 330  [[ 341 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 330  CmpU  === _ 338 135  [[ 329 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 331  LShiftL  === _ 336 166  [[ 326 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 332  AddD  === _ 206 345  [[ 324 313 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 333  SqrtD  === 344 334  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 334  ConvI2D  === _ 335  [[ 333 368 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 335  AddI  === _ 338 78  [[ 328 334 338 358 364 243 391 400 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 336  ConvI2L  === _ 337  [[ 331 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 337  CastII  === 342 338  [[ 336 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 338  Phi  === 339 36 335  [[ 330 335 337 360 ]]  #int #tripcount !orig=243,[233]
 339  CountedLoop  === 339 220 344  [[ 338 339 340 341 345 ]] inner stride: 1 pre of N261 !orig=261,[224],[198]
 340  Phi  === 339 7 324  [[ 324 361 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 341  RangeCheck  === 339 329  [[ 342 349 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 342  IfTrue  === 341  [[ 324 337 343 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 343  CountedLoopEnd  === 342 327  [[ 344 362 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 344  IfTrue  === 343  [[ 333 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 345  Phi  === 339 214 333  [[ 332 ]]  #double !orig=241,232
 346  IfFalse  === 366  [[ 352 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 349  IfFalse  === 341  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 350  Region  === 350 349 1  [[ 350 308 361 360 ]]  !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 352  Region  === 352 346 353  [[ 352 321 354 358 ]]  !orig=[317]
 353  IfFalse  === 258  [[ 352 ]] #0 !orig=[317]
 354  Phi  === 352 324 201  [[ 298 312 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 358  Phi  === 352 335 211  [[ 296 318 432 ]]  #int !orig=[431],[357]
 360  Phi  === 350 338 243  [[ 314 ]]  #int
 361  Phi  === 350 340 237  [[ 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 362  IfFalse  === 343  [[ 366 ]] #0
 363  OpaqueZeroTripGuard  === _ 383  [[ 364 ]] 
 364  CmpI  === _ 335 363  [[ 365 ]] 
 365  Bool  === _ 364  [[ 366 ]] [lt]
 366  If  === 362 365  [[ 346 367 ]] P=0.999999, C=-1.000000
 367  IfTrue  === 366  [[ 395 368 ]] #1
 368  SqrtD  === 367 334  [[ 241 ]]  !orig=333,145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 369  AddI  === _ 36 78  [[ 384 ]] 
 370  Opaque1  === _ 428 135  [[ 328 ]] 
 371  ConL  === 0  [[ 385 ]]  #long:0
 375  ConvI2L  === _ 190  [[ 378 385 ]]  #long:minint..maxint
 377  ConvI2L  === _ 135  [[ 382 378 ]]  #long:0..maxint !orig=[376]
 378  SubL  === _ 377 375  [[ 381 ]]  !orig=[379]
 380  ConL  === 0  [[ 381 ]]  #long:minint
 381  MaxL  === _ 378 380  [[ 382 ]] 
 382  MinL  === _ 377 381  [[ 383 ]] 
 383  ConvL2I  === _ 382  [[ 254 363 434 ]]  #int !orig=[429]
 384  ConvI2L  === _ 369  [[ 389 ]]  #long:minint..maxint:www
 385  SubL  === _ 371 375  [[ 388 ]]  !orig=[386]
 387  ConL  === 0  [[ 388 ]]  #long:maxint
 388  MinL  === _ 385 387  [[ 389 ]] 
 389  MaxL  === _ 384 388  [[ 390 ]] 
 390  ConvL2I  === _ 389  [[ 428 ]]  #int:>=min+1:www
 391  OpaqueLoopInit  === _ 335  [[ 408 436 ]] 
 392  CmpU  === _ 434 135  [[ 393 ]] 
 393  Bool  === _ 392  [[ 394 ]] [lt]
 394  OpaqueInitializedAssertionPredicate  === _ 393  [[ 395 ]] 
 395  RangeCheck  === 367 394  [[ 396 397 ]] P=0.999999, C=-1.000000
 396  IfFalse  === 395  [[ 399 ]] #0
 397  IfTrue  === 395  [[ 403 ]] #1
 399  Halt  === 396 1 1 8 1  [[ 0 ]] 
 400  CmpU  === _ 335 135  [[ 401 ]] 
 401  Bool  === _ 400  [[ 402 ]] [lt]
 402  OpaqueInitializedAssertionPredicate  === _ 401  [[ 403 ]] 
 403  RangeCheck  === 397 402  [[ 404 405 ]] P=0.999999, C=-1.000000
 404  IfFalse  === 403  [[ 407 ]] #0
 405  IfTrue  === 403  [[ 411 ]] #1
 407  Halt  === 404 1 1 8 1  [[ 0 ]] 
 408  CmpU  === _ 391 135  [[ 409 ]] 
 409  Bool  === _ 408  [[ 410 ]] [lt]
 410  Opaque4  === _ 409 78  [[ 411 ]] 
 411  RangeCheck  === 405 410  [[ 412 413 ]] P=0.999999, C=-1.000000
 412  IfFalse  === 411  [[ 415 ]] #0
 413  IfTrue  === 411  [[ 423 ]] #1
 415  Halt  === 412 1 1 8 1  [[ 0 ]] 
 416  OpaqueLoopStride  === _ 78  [[ 436 ]] 
 418  AddI  === _ 436 433  [[ 420 ]]  !orig=[419]
 420  CmpU  === _ 418 135  [[ 421 ]] 
 421  Bool  === _ 420  [[ 422 ]] [lt]
 422  Opaque4  === _ 421 78  [[ 423 ]] 
 423  RangeCheck  === 413 422  [[ 424 425 ]] P=0.999999, C=-1.000000
 424  IfFalse  === 423  [[ 427 ]] #0
 425  IfTrue  === 423  [[ 260 ]] #1
 427  Halt  === 424 1 1 8 1  [[ 0 ]] 
 428  MinI  === _ 390 135  [[ 370 ]] 
 432  ConvI2D  === _ 358  [[ 323 ]]  #double !orig=[357]
 433  ConI  === 0  [[ 434 418 ]]  #int:-1
 434  AddI  === _ 383 433  [[ 392 ]]  !orig=[430],[374]
 436  AddI  === _ 391 416  [[ 418 ]]  !orig=[435],[417]
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 179 161 399 407 415 427  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 371 372 373 380 387 433 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 340 81 16 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 427 415 407 399 ]] FramePtr !orig=[426] !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 338 84 369 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  47  ConP  === 0  [[ 48 84 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !orig=[193] !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 84 ]] #0 !orig=[276],[195] !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 202 157 157 203 203 262 134 134 283 284 284 325 326 326 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !orig=281,[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 293 335 369 410 416 221 422 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 51 6 81 8 9 (83 47 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 64 64 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 428 408 208 286 288 319 370 330 420 400 377 392 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 316  [[ 157 ]]  { N40:rawptr:BotPTR - - N316:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 308 6 153 8 9 (156 64 32 1 314 1 1 1 1 64 314 313 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 283 325 ]]  #long:16
 166  ConI  === 0  [[ 204 289 331 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 219 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 375 ]]  #int:0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 64 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 64 64 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 206 241  [[ 201 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 290 332 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 211  AddI  === _ 243 78  [[ 144 262 254 243 358 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 186 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 78  [[ 222 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 310  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 236  Phi  === 226 7 312  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 324 201  [[ 361 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 368 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 335 211  [[ 211 360 213 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 383  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 353 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 425 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] inner stride: 1 main of N261 strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 64 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 282  StoreD  === 300 298 283 290  [[ 298 312 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 283  AddP  === _ 64 284 162  [[ 282 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 284  AddP  === _ 64 64 289  [[ 283 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 285  Bool  === _ 286  [[ 301 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 286  CmpI  === _ 293 135  [[ 285 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 287  Bool  === _ 288  [[ 299 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 288  CmpU  === _ 296 135  [[ 287 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 289  LShiftL  === _ 294 166  [[ 284 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 290  AddD  === _ 206 303  [[ 282 313 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 291  SqrtD  === 302 292  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 292  ConvI2D  === _ 293  [[ 291 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 293  AddI  === _ 296 78  [[ 286 292 296 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 294  ConvI2L  === _ 295  [[ 289 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 295  CastII  === 300 296  [[ 294 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 296  Phi  === 297 358 293  [[ 288 293 295 314 ]]  #int #tripcount !orig=243,[233]
 297  CountedLoop  === 297 322 302  [[ 296 297 298 299 303 ]] inner stride: 1 post of N261 !orig=261,[224],[198]
 298  Phi  === 297 354 282  [[ 282 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 299  RangeCheck  === 297 287  [[ 300 307 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 300  IfTrue  === 299  [[ 282 295 301 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 301  CountedLoopEnd  === 300 285  [[ 302 304 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 302  IfTrue  === 301  [[ 291 297 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 303  Phi  === 297 323 291  [[ 290 ]]  #double !orig=241,232
 304  IfFalse  === 301  [[ 310 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 307  IfFalse  === 299  [[ 308 ]] #0 !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 308  Region  === 308 307 350  [[ 308 157 313 314 316 ]]  !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 310  Region  === 310 304 311  [[ 310 226 312 ]]  !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 311  IfFalse  === 321  [[ 310 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 312  Phi  === 310 282 354  [[ 236 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 313  Phi  === 308 290 332  [[ 157 ]]  #double
 314  Phi  === 308 296 360  [[ 157 157 ]]  #int
 316  Phi  === 308 298 361  [[ 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 318  OpaqueZeroTripGuard  === _ 358  [[ 319 ]] 
 319  CmpI  === _ 318 135  [[ 320 ]] 
 320  Bool  === _ 319  [[ 321 ]] [lt]
 321  If  === 352 320  [[ 311 322 ]] P=0.500000, C=-1.000000
 322  IfTrue  === 321  [[ 297 323 ]] #1
 323  SqrtD  === 322 432  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 324  StoreD  === 342 340 325 332  [[ 340 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 325  AddP  === _ 64 326 162  [[ 324 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 326  AddP  === _ 64 64 331  [[ 325 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 327  Bool  === _ 328  [[ 343 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 328  CmpI  === _ 335 370  [[ 327 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 329  Bool  === _ 330  [[ 341 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 330  CmpU  === _ 338 135  [[ 329 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 331  LShiftL  === _ 336 166  [[ 326 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 332  AddD  === _ 206 345  [[ 324 313 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 333  SqrtD  === 344 334  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 334  ConvI2D  === _ 335  [[ 333 368 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 335  AddI  === _ 338 78  [[ 328 334 338 358 364 243 391 400 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 336  ConvI2L  === _ 337  [[ 331 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 337  CastII  === 342 338  [[ 336 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 338  Phi  === 339 36 335  [[ 330 335 337 360 ]]  #int #tripcount !orig=243,[233]
 339  CountedLoop  === 339 220 344  [[ 338 339 340 341 345 ]] inner stride: 1 pre of N261 !orig=261,[224],[198]
 340  Phi  === 339 7 324  [[ 324 361 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 341  RangeCheck  === 339 329  [[ 342 349 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 342  IfTrue  === 341  [[ 324 337 343 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 343  CountedLoopEnd  === 342 327  [[ 344 362 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 344  IfTrue  === 343  [[ 333 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 345  Phi  === 339 214 333  [[ 332 ]]  #double !orig=241,232
 346  IfFalse  === 366  [[ 352 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 349  IfFalse  === 341  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 350  Region  === 350 349 1  [[ 350 308 361 360 ]]  !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 352  Region  === 352 346 353  [[ 352 321 354 358 ]]  !orig=[317]
 353  IfFalse  === 258  [[ 352 ]] #0 !orig=[317]
 354  Phi  === 352 324 201  [[ 298 312 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 358  Phi  === 352 335 211  [[ 296 318 432 ]]  #int !orig=[431],[357]
 360  Phi  === 350 338 243  [[ 314 ]]  #int
 361  Phi  === 350 340 237  [[ 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 362  IfFalse  === 343  [[ 366 ]] #0
 363  OpaqueZeroTripGuard  === _ 383  [[ 364 ]] 
 364  CmpI  === _ 335 363  [[ 365 ]] 
 365  Bool  === _ 364  [[ 366 ]] [lt]
 366  If  === 362 365  [[ 346 367 ]] P=0.999999, C=-1.000000
 367  IfTrue  === 366  [[ 395 368 ]] #1
 368  SqrtD  === 367 334  [[ 241 ]]  !orig=333,145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 369  AddI  === _ 36 78  [[ 384 ]] 
 370  Opaque1  === _ 428 135  [[ 328 ]] 
 371  ConL  === 0  [[ 385 ]]  #long:0
 375  ConvI2L  === _ 190  [[ 378 385 ]]  #long:minint..maxint
 377  ConvI2L  === _ 135  [[ 382 378 ]]  #long:0..maxint !orig=[376]
 378  SubL  === _ 377 375  [[ 381 ]]  !orig=[379]
 380  ConL  === 0  [[ 381 ]]  #long:minint
 381  MaxL  === _ 378 380  [[ 382 ]] 
 382  MinL  === _ 377 381  [[ 383 ]] 
 383  ConvL2I  === _ 382  [[ 254 363 434 ]]  #int !orig=[429]
 384  ConvI2L  === _ 369  [[ 389 ]]  #long:minint..maxint:www
 385  SubL  === _ 371 375  [[ 388 ]]  !orig=[386]
 387  ConL  === 0  [[ 388 ]]  #long:maxint
 388  MinL  === _ 385 387  [[ 389 ]] 
 389  MaxL  === _ 384 388  [[ 390 ]] 
 390  ConvL2I  === _ 389  [[ 428 ]]  #int:>=min+1:www
 391  OpaqueLoopInit  === _ 335  [[ 408 436 ]] 
 392  CmpU  === _ 434 135  [[ 393 ]] 
 393  Bool  === _ 392  [[ 394 ]] [lt]
 394  OpaqueInitializedAssertionPredicate  === _ 393  [[ 395 ]] 
 395  RangeCheck  === 367 394  [[ 396 397 ]] P=0.999999, C=-1.000000
 396  IfFalse  === 395  [[ 399 ]] #0
 397  IfTrue  === 395  [[ 403 ]] #1
 399  Halt  === 396 1 1 8 1  [[ 0 ]] 
 400  CmpU  === _ 335 135  [[ 401 ]] 
 401  Bool  === _ 400  [[ 402 ]] [lt]
 402  OpaqueInitializedAssertionPredicate  === _ 401  [[ 403 ]] 
 403  RangeCheck  === 397 402  [[ 404 405 ]] P=0.999999, C=-1.000000
 404  IfFalse  === 403  [[ 407 ]] #0
 405  IfTrue  === 403  [[ 411 ]] #1
 407  Halt  === 404 1 1 8 1  [[ 0 ]] 
 408  CmpU  === _ 391 135  [[ 409 ]] 
 409  Bool  === _ 408  [[ 410 ]] [lt]
 410  Opaque4  === _ 409 78  [[ 411 ]] 
 411  RangeCheck  === 405 410  [[ 412 413 ]] P=0.999999, C=-1.000000
 412  IfFalse  === 411  [[ 415 ]] #0
 413  IfTrue  === 411  [[ 423 ]] #1
 415  Halt  === 412 1 1 8 1  [[ 0 ]] 
 416  OpaqueLoopStride  === _ 78  [[ 436 ]] 
 418  AddI  === _ 436 433  [[ 420 ]]  !orig=[419]
 420  CmpU  === _ 418 135  [[ 421 ]] 
 421  Bool  === _ 420  [[ 422 ]] [lt]
 422  Opaque4  === _ 421 78  [[ 423 ]] 
 423  RangeCheck  === 413 422  [[ 424 425 ]] P=0.999999, C=-1.000000
 424  IfFalse  === 423  [[ 427 ]] #0
 425  IfTrue  === 423  [[ 260 ]] #1
 427  Halt  === 424 1 1 8 1  [[ 0 ]] 
 428  MinI  === _ 390 135  [[ 370 ]] 
 432  ConvI2D  === _ 358  [[ 323 ]]  #double !orig=[357]
 433  ConI  === 0  [[ 434 418 ]]  #int:-1
 434  AddI  === _ 383 433  [[ 392 ]]  !orig=[430],[374]
 436  AddI  === _ 391 416  [[ 418 ]]  !orig=[435],[417]
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 179 161 399 407 415 427  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 371 372 373 380 387 433 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 340 81 16 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 427 415 407 399 ]] FramePtr !orig=[426] !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 338 84 369 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  47  ConP  === 0  [[ 48 84 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !orig=[193] !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 84 ]] #0 !orig=[276],[195] !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 202 157 157 203 203 262 134 134 283 284 284 325 326 326 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !orig=281,[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 293 335 369 410 416 221 422 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 51 6 81 8 9 (83 47 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 64 64 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 428 408 208 286 288 319 370 330 420 400 377 392 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 316  [[ 157 ]]  { N40:rawptr:BotPTR - - N316:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 308 6 153 8 9 (156 64 32 1 314 1 1 1 1 64 314 313 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 283 325 ]]  #long:16
 166  ConI  === 0  [[ 204 289 331 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 219 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 375 ]]  #int:0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 64 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 64 64 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 206 241  [[ 201 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 290 332 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 211  AddI  === _ 243 78  [[ 144 262 254 243 358 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 186 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 78  [[ 222 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 310  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 236  Phi  === 226 7 312  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 324 201  [[ 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 368 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 335 211  [[ 211 360 213 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 383  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 353 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 425 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] inner stride: 1 main of N261 strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 64 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 282  StoreD  === 300 298 283 290  [[ 298 312 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 283  AddP  === _ 64 284 162  [[ 282 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 284  AddP  === _ 64 64 289  [[ 283 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 285  Bool  === _ 286  [[ 301 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 286  CmpI  === _ 293 135  [[ 285 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 287  Bool  === _ 288  [[ 299 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 288  CmpU  === _ 296 135  [[ 287 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 289  LShiftL  === _ 294 166  [[ 284 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 290  AddD  === _ 206 303  [[ 282 313 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 291  SqrtD  === 302 292  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 292  ConvI2D  === _ 293  [[ 291 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 293  AddI  === _ 296 78  [[ 286 292 296 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 294  ConvI2L  === _ 295  [[ 289 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 295  CastII  === 300 296  [[ 294 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 296  Phi  === 297 358 293  [[ 288 293 295 314 ]]  #int #tripcount !orig=243,[233]
 297  CountedLoop  === 297 322 302  [[ 296 297 298 299 303 ]] inner stride: 1 post of N261 !orig=261,[224],[198]
 298  Phi  === 297 354 282  [[ 282 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 299  RangeCheck  === 297 287  [[ 300 307 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 300  IfTrue  === 299  [[ 282 295 301 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 301  CountedLoopEnd  === 300 285  [[ 302 304 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 302  IfTrue  === 301  [[ 291 297 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 303  Phi  === 297 323 291  [[ 290 ]]  #double !orig=241,232
 304  IfFalse  === 301  [[ 310 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 307  IfFalse  === 299  [[ 308 ]] #0 !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 308  Region  === 308 307 350  [[ 308 157 313 314 316 ]]  !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 310  Region  === 310 304 311  [[ 310 226 312 ]]  !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 311  IfFalse  === 321  [[ 310 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 312  Phi  === 310 282 354  [[ 236 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 313  Phi  === 308 290 332  [[ 157 ]]  #double
 314  Phi  === 308 296 360  [[ 157 157 ]]  #int
 316  Phi  === 308 298 340  [[ 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 318  OpaqueZeroTripGuard  === _ 358  [[ 319 ]] 
 319  CmpI  === _ 318 135  [[ 320 ]] 
 320  Bool  === _ 319  [[ 321 ]] [lt]
 321  If  === 352 320  [[ 311 322 ]] P=0.500000, C=-1.000000
 322  IfTrue  === 321  [[ 297 323 ]] #1
 323  SqrtD  === 322 432  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 324  StoreD  === 342 340 325 332  [[ 340 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 325  AddP  === _ 64 326 162  [[ 324 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 326  AddP  === _ 64 64 331  [[ 325 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 327  Bool  === _ 328  [[ 343 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 328  CmpI  === _ 335 370  [[ 327 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 329  Bool  === _ 330  [[ 341 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 330  CmpU  === _ 338 135  [[ 329 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 331  LShiftL  === _ 336 166  [[ 326 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 332  AddD  === _ 206 345  [[ 324 313 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 333  SqrtD  === 344 334  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 334  ConvI2D  === _ 335  [[ 333 368 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 335  AddI  === _ 338 78  [[ 328 334 338 358 364 243 391 400 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 336  ConvI2L  === _ 337  [[ 331 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 337  CastII  === 342 338  [[ 336 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 338  Phi  === 339 36 335  [[ 330 335 337 360 ]]  #int #tripcount !orig=243,[233]
 339  CountedLoop  === 339 220 344  [[ 338 339 340 341 345 ]] inner stride: 1 pre of N261 !orig=261,[224],[198]
 340  Phi  === 339 7 324  [[ 324 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 341  RangeCheck  === 339 329  [[ 342 349 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 342  IfTrue  === 341  [[ 324 337 343 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 343  CountedLoopEnd  === 342 327  [[ 344 362 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 344  IfTrue  === 343  [[ 333 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 345  Phi  === 339 214 333  [[ 332 ]]  #double !orig=241,232
 346  IfFalse  === 366  [[ 352 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 349  IfFalse  === 341  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 350  Region  === 350 349 1  [[ 350 308 360 ]]  !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 352  Region  === 352 346 353  [[ 352 321 354 358 ]]  !orig=[317]
 353  IfFalse  === 258  [[ 352 ]] #0 !orig=[317]
 354  Phi  === 352 324 201  [[ 298 312 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 358  Phi  === 352 335 211  [[ 296 318 432 ]]  #int !orig=[431],[357]
 360  Phi  === 350 338 243  [[ 314 ]]  #int
 362  IfFalse  === 343  [[ 366 ]] #0
 363  OpaqueZeroTripGuard  === _ 383  [[ 364 ]] 
 364  CmpI  === _ 335 363  [[ 365 ]] 
 365  Bool  === _ 364  [[ 366 ]] [lt]
 366  If  === 362 365  [[ 346 367 ]] P=0.999999, C=-1.000000
 367  IfTrue  === 366  [[ 395 368 ]] #1
 368  SqrtD  === 367 334  [[ 241 ]]  !orig=333,145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 369  AddI  === _ 36 78  [[ 384 ]] 
 370  Opaque1  === _ 428 135  [[ 328 ]] 
 371  ConL  === 0  [[ 385 ]]  #long:0
 375  ConvI2L  === _ 190  [[ 378 385 ]]  #long:minint..maxint
 377  ConvI2L  === _ 135  [[ 382 378 ]]  #long:0..maxint !orig=[376]
 378  SubL  === _ 377 375  [[ 381 ]]  !orig=[379]
 380  ConL  === 0  [[ 381 ]]  #long:minint
 381  MaxL  === _ 378 380  [[ 382 ]] 
 382  MinL  === _ 377 381  [[ 383 ]] 
 383  ConvL2I  === _ 382  [[ 254 363 434 ]]  #int !orig=[429]
 384  ConvI2L  === _ 369  [[ 389 ]]  #long:minint..maxint:www
 385  SubL  === _ 371 375  [[ 388 ]]  !orig=[386]
 387  ConL  === 0  [[ 388 ]]  #long:maxint
 388  MinL  === _ 385 387  [[ 389 ]] 
 389  MaxL  === _ 384 388  [[ 390 ]] 
 390  ConvL2I  === _ 389  [[ 428 ]]  #int:>=min+1:www
 391  OpaqueLoopInit  === _ 335  [[ 408 436 ]] 
 392  CmpU  === _ 434 135  [[ 393 ]] 
 393  Bool  === _ 392  [[ 394 ]] [lt]
 394  OpaqueInitializedAssertionPredicate  === _ 393  [[ 395 ]] 
 395  RangeCheck  === 367 394  [[ 396 397 ]] P=0.999999, C=-1.000000
 396  IfFalse  === 395  [[ 399 ]] #0
 397  IfTrue  === 395  [[ 403 ]] #1
 399  Halt  === 396 1 1 8 1  [[ 0 ]] 
 400  CmpU  === _ 335 135  [[ 401 ]] 
 401  Bool  === _ 400  [[ 402 ]] [lt]
 402  OpaqueInitializedAssertionPredicate  === _ 401  [[ 403 ]] 
 403  RangeCheck  === 397 402  [[ 404 405 ]] P=0.999999, C=-1.000000
 404  IfFalse  === 403  [[ 407 ]] #0
 405  IfTrue  === 403  [[ 411 ]] #1
 407  Halt  === 404 1 1 8 1  [[ 0 ]] 
 408  CmpU  === _ 391 135  [[ 409 ]] 
 409  Bool  === _ 408  [[ 410 ]] [lt]
 410  Opaque4  === _ 409 78  [[ 411 ]] 
 411  RangeCheck  === 405 410  [[ 412 413 ]] P=0.999999, C=-1.000000
 412  IfFalse  === 411  [[ 415 ]] #0
 413  IfTrue  === 411  [[ 423 ]] #1
 415  Halt  === 412 1 1 8 1  [[ 0 ]] 
 416  OpaqueLoopStride  === _ 78  [[ 436 ]] 
 418  AddI  === _ 436 433  [[ 420 ]]  !orig=[419]
 420  CmpU  === _ 418 135  [[ 421 ]] 
 421  Bool  === _ 420  [[ 422 ]] [lt]
 422  Opaque4  === _ 421 78  [[ 423 ]] 
 423  RangeCheck  === 413 422  [[ 424 425 ]] P=0.999999, C=-1.000000
 424  IfFalse  === 423  [[ 427 ]] #0
 425  IfTrue  === 423  [[ 260 ]] #1
 427  Halt  === 424 1 1 8 1  [[ 0 ]] 
 428  MinI  === _ 390 135  [[ 370 ]] 
 432  ConvI2D  === _ 358  [[ 323 ]]  #double !orig=[357]
 433  ConI  === 0  [[ 434 418 ]]  #int:-1
 434  AddI  === _ 383 433  [[ 392 ]]  !orig=[430],[374]
 436  AddI  === _ 391 416  [[ 418 ]]  !orig=[435],[417]
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 179 161 399 407 415 427  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 371 372 373 380 387 433 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 340 81 16 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 427 415 407 399 ]] FramePtr !orig=[426] !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 338 84 369 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  47  ConP  === 0  [[ 48 84 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !orig=[193] !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 84 ]] #0 !orig=[276],[195] !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 202 157 157 203 203 262 134 134 283 284 284 325 326 326 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !orig=281,[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 293 335 369 410 416 221 422 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 51 6 81 8 9 (83 47 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 64 64 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 428 408 208 286 288 319 370 330 420 400 377 392 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 316  [[ 157 ]]  { N40:rawptr:BotPTR - - N316:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 308 6 153 8 9 (156 64 32 1 314 1 1 1 1 64 314 313 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 283 325 ]]  #long:16
 166  ConI  === 0  [[ 204 289 331 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 219 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 375 ]]  #int:0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 64 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 64 64 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 206 241  [[ 201 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 290 332 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 211  AddI  === _ 243 78  [[ 144 262 254 243 358 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 186 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 78  [[ 222 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 310  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 236  Phi  === 226 7 312  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 324 201  [[ 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 368 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 335 211  [[ 211 213 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 383  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 353 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 425 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] inner stride: 1 main of N261 strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 64 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 282  StoreD  === 300 298 283 290  [[ 298 312 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 283  AddP  === _ 64 284 162  [[ 282 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 284  AddP  === _ 64 64 289  [[ 283 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 285  Bool  === _ 286  [[ 301 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 286  CmpI  === _ 293 135  [[ 285 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 287  Bool  === _ 288  [[ 299 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 288  CmpU  === _ 296 135  [[ 287 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 289  LShiftL  === _ 294 166  [[ 284 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 290  AddD  === _ 206 303  [[ 282 313 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 291  SqrtD  === 302 292  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 292  ConvI2D  === _ 293  [[ 291 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 293  AddI  === _ 296 78  [[ 286 292 296 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 294  ConvI2L  === _ 295  [[ 289 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 295  CastII  === 300 296  [[ 294 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 296  Phi  === 297 358 293  [[ 288 293 295 314 ]]  #int #tripcount !orig=243,[233]
 297  CountedLoop  === 297 322 302  [[ 296 297 298 299 303 ]] inner stride: 1 post of N261 !orig=261,[224],[198]
 298  Phi  === 297 354 282  [[ 282 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 299  RangeCheck  === 297 287  [[ 300 307 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 300  IfTrue  === 299  [[ 282 295 301 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 301  CountedLoopEnd  === 300 285  [[ 302 304 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 302  IfTrue  === 301  [[ 291 297 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 303  Phi  === 297 323 291  [[ 290 ]]  #double !orig=241,232
 304  IfFalse  === 301  [[ 310 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 307  IfFalse  === 299  [[ 308 ]] #0 !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 308  Region  === 308 307 350  [[ 308 157 313 314 316 ]]  !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 310  Region  === 310 304 311  [[ 310 226 312 ]]  !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 311  IfFalse  === 321  [[ 310 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 312  Phi  === 310 282 354  [[ 236 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 313  Phi  === 308 290 332  [[ 157 ]]  #double
 314  Phi  === 308 296 338  [[ 157 157 ]]  #int
 316  Phi  === 308 298 340  [[ 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 318  OpaqueZeroTripGuard  === _ 358  [[ 319 ]] 
 319  CmpI  === _ 318 135  [[ 320 ]] 
 320  Bool  === _ 319  [[ 321 ]] [lt]
 321  If  === 352 320  [[ 311 322 ]] P=0.500000, C=-1.000000
 322  IfTrue  === 321  [[ 297 323 ]] #1
 323  SqrtD  === 322 432  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 324  StoreD  === 342 340 325 332  [[ 340 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 325  AddP  === _ 64 326 162  [[ 324 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 326  AddP  === _ 64 64 331  [[ 325 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 327  Bool  === _ 328  [[ 343 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 328  CmpI  === _ 335 370  [[ 327 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 329  Bool  === _ 330  [[ 341 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 330  CmpU  === _ 338 135  [[ 329 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 331  LShiftL  === _ 336 166  [[ 326 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 332  AddD  === _ 206 345  [[ 324 313 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 333  SqrtD  === 344 334  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 334  ConvI2D  === _ 335  [[ 333 368 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 335  AddI  === _ 338 78  [[ 328 334 338 358 364 243 391 400 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 336  ConvI2L  === _ 337  [[ 331 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 337  CastII  === 342 338  [[ 336 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 338  Phi  === 339 36 335  [[ 330 335 337 314 ]]  #int #tripcount !orig=243,[233]
 339  CountedLoop  === 339 220 344  [[ 338 339 340 341 345 ]] inner stride: 1 pre of N261 !orig=261,[224],[198]
 340  Phi  === 339 7 324  [[ 324 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 341  RangeCheck  === 339 329  [[ 342 349 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 342  IfTrue  === 341  [[ 324 337 343 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 343  CountedLoopEnd  === 342 327  [[ 344 362 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 344  IfTrue  === 343  [[ 333 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 345  Phi  === 339 214 333  [[ 332 ]]  #double !orig=241,232
 346  IfFalse  === 366  [[ 352 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 349  IfFalse  === 341  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 350  Region  === 350 349 1  [[ 350 308 ]]  !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 352  Region  === 352 346 353  [[ 352 321 354 358 ]]  !orig=[317]
 353  IfFalse  === 258  [[ 352 ]] #0 !orig=[317]
 354  Phi  === 352 324 201  [[ 298 312 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 358  Phi  === 352 335 211  [[ 296 318 432 ]]  #int !orig=[431],[357]
 362  IfFalse  === 343  [[ 366 ]] #0
 363  OpaqueZeroTripGuard  === _ 383  [[ 364 ]] 
 364  CmpI  === _ 335 363  [[ 365 ]] 
 365  Bool  === _ 364  [[ 366 ]] [lt]
 366  If  === 362 365  [[ 346 367 ]] P=0.999999, C=-1.000000
 367  IfTrue  === 366  [[ 395 368 ]] #1
 368  SqrtD  === 367 334  [[ 241 ]]  !orig=333,145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 369  AddI  === _ 36 78  [[ 384 ]] 
 370  Opaque1  === _ 428 135  [[ 328 ]] 
 371  ConL  === 0  [[ 385 ]]  #long:0
 375  ConvI2L  === _ 190  [[ 378 385 ]]  #long:minint..maxint
 377  ConvI2L  === _ 135  [[ 382 378 ]]  #long:0..maxint !orig=[376]
 378  SubL  === _ 377 375  [[ 381 ]]  !orig=[379]
 380  ConL  === 0  [[ 381 ]]  #long:minint
 381  MaxL  === _ 378 380  [[ 382 ]] 
 382  MinL  === _ 377 381  [[ 383 ]] 
 383  ConvL2I  === _ 382  [[ 254 363 434 ]]  #int !orig=[429]
 384  ConvI2L  === _ 369  [[ 389 ]]  #long:minint..maxint:www
 385  SubL  === _ 371 375  [[ 388 ]]  !orig=[386]
 387  ConL  === 0  [[ 388 ]]  #long:maxint
 388  MinL  === _ 385 387  [[ 389 ]] 
 389  MaxL  === _ 384 388  [[ 390 ]] 
 390  ConvL2I  === _ 389  [[ 428 ]]  #int:>=min+1:www
 391  OpaqueLoopInit  === _ 335  [[ 408 436 ]] 
 392  CmpU  === _ 434 135  [[ 393 ]] 
 393  Bool  === _ 392  [[ 394 ]] [lt]
 394  OpaqueInitializedAssertionPredicate  === _ 393  [[ 395 ]] 
 395  RangeCheck  === 367 394  [[ 396 397 ]] P=0.999999, C=-1.000000
 396  IfFalse  === 395  [[ 399 ]] #0
 397  IfTrue  === 395  [[ 403 ]] #1
 399  Halt  === 396 1 1 8 1  [[ 0 ]] 
 400  CmpU  === _ 335 135  [[ 401 ]] 
 401  Bool  === _ 400  [[ 402 ]] [lt]
 402  OpaqueInitializedAssertionPredicate  === _ 401  [[ 403 ]] 
 403  RangeCheck  === 397 402  [[ 404 405 ]] P=0.999999, C=-1.000000
 404  IfFalse  === 403  [[ 407 ]] #0
 405  IfTrue  === 403  [[ 411 ]] #1
 407  Halt  === 404 1 1 8 1  [[ 0 ]] 
 408  CmpU  === _ 391 135  [[ 409 ]] 
 409  Bool  === _ 408  [[ 410 ]] [lt]
 410  Opaque4  === _ 409 78  [[ 411 ]] 
 411  RangeCheck  === 405 410  [[ 412 413 ]] P=0.999999, C=-1.000000
 412  IfFalse  === 411  [[ 415 ]] #0
 413  IfTrue  === 411  [[ 423 ]] #1
 415  Halt  === 412 1 1 8 1  [[ 0 ]] 
 416  OpaqueLoopStride  === _ 78  [[ 436 ]] 
 418  AddI  === _ 436 433  [[ 420 ]]  !orig=[419]
 420  CmpU  === _ 418 135  [[ 421 ]] 
 421  Bool  === _ 420  [[ 422 ]] [lt]
 422  Opaque4  === _ 421 78  [[ 423 ]] 
 423  RangeCheck  === 413 422  [[ 424 425 ]] P=0.999999, C=-1.000000
 424  IfFalse  === 423  [[ 427 ]] #0
 425  IfTrue  === 423  [[ 260 ]] #1
 427  Halt  === 424 1 1 8 1  [[ 0 ]] 
 428  MinI  === _ 390 135  [[ 370 ]] 
 432  ConvI2D  === _ 358  [[ 323 ]]  #double !orig=[357]
 433  ConI  === 0  [[ 434 418 ]]  #int:-1
 434  AddI  === _ 383 433  [[ 392 ]]  !orig=[430],[374]
 436  AddI  === _ 391 416  [[ 418 ]]  !orig=[435],[417]
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 179 161 399 407 415 427  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 371 372 373 380 387 433 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 340 81 16 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 427 415 407 399 ]] FramePtr !orig=[426] !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 338 84 369 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  47  ConP  === 0  [[ 48 84 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !orig=[193] !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 84 ]] #0 !orig=[276],[195] !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 202 157 157 203 203 262 134 134 283 284 284 325 326 326 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !orig=281,[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 293 335 369 410 416 221 422 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 51 6 81 8 9 (83 47 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 64 64 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 428 408 208 286 288 319 370 330 420 400 377 392 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 316  [[ 157 ]]  { N40:rawptr:BotPTR - - N316:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 308 6 153 8 9 (156 64 32 1 314 1 1 1 1 64 314 313 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 283 325 ]]  #long:16
 166  ConI  === 0  [[ 204 289 331 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 219 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 ]]  #int:0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 64 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 64 64 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 206 241  [[ 201 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 290 332 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 211  AddI  === _ 243 78  [[ 144 262 254 243 358 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 186 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 78  [[ 222 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 310  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 236  Phi  === 226 7 312  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 324 201  [[ 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 368 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 335 211  [[ 211 213 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 383  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 353 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 425 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] inner stride: 1 main of N261 strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 64 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 282  StoreD  === 300 298 283 290  [[ 298 312 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 283  AddP  === _ 64 284 162  [[ 282 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 284  AddP  === _ 64 64 289  [[ 283 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 285  Bool  === _ 286  [[ 301 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 286  CmpI  === _ 293 135  [[ 285 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 287  Bool  === _ 288  [[ 299 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 288  CmpU  === _ 296 135  [[ 287 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 289  LShiftL  === _ 294 166  [[ 284 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 290  AddD  === _ 206 303  [[ 282 313 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 291  SqrtD  === 302 292  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 292  ConvI2D  === _ 293  [[ 291 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 293  AddI  === _ 296 78  [[ 286 292 296 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 294  ConvI2L  === _ 295  [[ 289 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 295  CastII  === 300 296  [[ 294 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 296  Phi  === 297 358 293  [[ 288 293 295 314 ]]  #int #tripcount !orig=243,[233]
 297  CountedLoop  === 297 322 302  [[ 296 297 298 299 303 ]] inner stride: 1 post of N261 !orig=261,[224],[198]
 298  Phi  === 297 354 282  [[ 282 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 299  RangeCheck  === 297 287  [[ 300 307 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 300  IfTrue  === 299  [[ 282 295 301 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 301  CountedLoopEnd  === 300 285  [[ 302 304 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 302  IfTrue  === 301  [[ 291 297 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 303  Phi  === 297 323 291  [[ 290 ]]  #double !orig=241,232
 304  IfFalse  === 301  [[ 310 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 307  IfFalse  === 299  [[ 308 ]] #0 !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 308  Region  === 308 307 350  [[ 308 157 313 314 316 ]]  !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 310  Region  === 310 304 311  [[ 310 226 312 ]]  !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 311  IfFalse  === 321  [[ 310 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 312  Phi  === 310 282 354  [[ 236 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 313  Phi  === 308 290 332  [[ 157 ]]  #double
 314  Phi  === 308 296 338  [[ 157 157 ]]  #int
 316  Phi  === 308 298 340  [[ 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 318  OpaqueZeroTripGuard  === _ 358  [[ 319 ]] 
 319  CmpI  === _ 318 135  [[ 320 ]] 
 320  Bool  === _ 319  [[ 321 ]] [lt]
 321  If  === 352 320  [[ 311 322 ]] P=0.500000, C=-1.000000
 322  IfTrue  === 321  [[ 297 323 ]] #1
 323  SqrtD  === 322 432  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 324  StoreD  === 342 340 325 332  [[ 340 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 325  AddP  === _ 64 326 162  [[ 324 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 326  AddP  === _ 64 64 331  [[ 325 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 327  Bool  === _ 328  [[ 343 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 328  CmpI  === _ 335 370  [[ 327 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 329  Bool  === _ 330  [[ 341 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 330  CmpU  === _ 338 135  [[ 329 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 331  LShiftL  === _ 336 166  [[ 326 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 332  AddD  === _ 206 345  [[ 324 313 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 333  SqrtD  === 344 334  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 334  ConvI2D  === _ 335  [[ 333 368 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 335  AddI  === _ 338 78  [[ 328 334 338 358 364 243 391 400 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 336  ConvI2L  === _ 337  [[ 331 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 337  CastII  === 342 338  [[ 336 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 338  Phi  === 339 36 335  [[ 330 335 337 314 ]]  #int #tripcount !orig=243,[233]
 339  CountedLoop  === 339 220 344  [[ 338 339 340 341 345 ]] inner stride: 1 pre of N261 !orig=261,[224],[198]
 340  Phi  === 339 7 324  [[ 324 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 341  RangeCheck  === 339 329  [[ 342 349 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 342  IfTrue  === 341  [[ 324 337 343 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 343  CountedLoopEnd  === 342 327  [[ 344 362 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 344  IfTrue  === 343  [[ 333 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 345  Phi  === 339 214 333  [[ 332 ]]  #double !orig=241,232
 346  IfFalse  === 366  [[ 352 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 349  IfFalse  === 341  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 350  Region  === 350 349 1  [[ 350 308 ]]  !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 352  Region  === 352 346 353  [[ 352 321 354 358 ]]  !orig=[317]
 353  IfFalse  === 258  [[ 352 ]] #0 !orig=[317]
 354  Phi  === 352 324 201  [[ 298 312 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 358  Phi  === 352 335 211  [[ 296 318 432 ]]  #int !orig=[431],[357]
 362  IfFalse  === 343  [[ 366 ]] #0
 363  OpaqueZeroTripGuard  === _ 383  [[ 364 ]] 
 364  CmpI  === _ 335 363  [[ 365 ]] 
 365  Bool  === _ 364  [[ 366 ]] [lt]
 366  If  === 362 365  [[ 346 367 ]] P=0.999999, C=-1.000000
 367  IfTrue  === 366  [[ 395 368 ]] #1
 368  SqrtD  === 367 334  [[ 241 ]]  !orig=333,145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 369  AddI  === _ 36 78  [[ 384 ]] 
 370  Opaque1  === _ 428 135  [[ 328 ]] 
 371  ConL  === 0  [[ 385 385 378 ]]  #long:0
 377  ConvI2L  === _ 135  [[ 382 378 ]]  #long:0..maxint !orig=[376]
 378  SubL  === _ 377 371  [[ 381 ]]  !orig=[379]
 380  ConL  === 0  [[ 381 ]]  #long:minint
 381  MaxL  === _ 378 380  [[ 382 ]] 
 382  MinL  === _ 377 381  [[ 383 ]] 
 383  ConvL2I  === _ 382  [[ 254 363 434 ]]  #int !orig=[429]
 384  ConvI2L  === _ 369  [[ 389 ]]  #long:minint..maxint:www
 385  SubL  === _ 371 371  [[ 388 ]]  !orig=[386]
 387  ConL  === 0  [[ 388 ]]  #long:maxint
 388  MinL  === _ 385 387  [[ 389 ]] 
 389  MaxL  === _ 384 388  [[ 390 ]] 
 390  ConvL2I  === _ 389  [[ 428 ]]  #int:>=min+1:www
 391  OpaqueLoopInit  === _ 335  [[ 408 436 ]] 
 392  CmpU  === _ 434 135  [[ 393 ]] 
 393  Bool  === _ 392  [[ 394 ]] [lt]
 394  OpaqueInitializedAssertionPredicate  === _ 393  [[ 395 ]] 
 395  RangeCheck  === 367 394  [[ 396 397 ]] P=0.999999, C=-1.000000
 396  IfFalse  === 395  [[ 399 ]] #0
 397  IfTrue  === 395  [[ 403 ]] #1
 399  Halt  === 396 1 1 8 1  [[ 0 ]] 
 400  CmpU  === _ 335 135  [[ 401 ]] 
 401  Bool  === _ 400  [[ 402 ]] [lt]
 402  OpaqueInitializedAssertionPredicate  === _ 401  [[ 403 ]] 
 403  RangeCheck  === 397 402  [[ 404 405 ]] P=0.999999, C=-1.000000
 404  IfFalse  === 403  [[ 407 ]] #0
 405  IfTrue  === 403  [[ 411 ]] #1
 407  Halt  === 404 1 1 8 1  [[ 0 ]] 
 408  CmpU  === _ 391 135  [[ 409 ]] 
 409  Bool  === _ 408  [[ 410 ]] [lt]
 410  Opaque4  === _ 409 78  [[ 411 ]] 
 411  RangeCheck  === 405 410  [[ 412 413 ]] P=0.999999, C=-1.000000
 412  IfFalse  === 411  [[ 415 ]] #0
 413  IfTrue  === 411  [[ 423 ]] #1
 415  Halt  === 412 1 1 8 1  [[ 0 ]] 
 416  OpaqueLoopStride  === _ 78  [[ 436 ]] 
 418  AddI  === _ 436 433  [[ 420 ]]  !orig=[419]
 420  CmpU  === _ 418 135  [[ 421 ]] 
 421  Bool  === _ 420  [[ 422 ]] [lt]
 422  Opaque4  === _ 421 78  [[ 423 ]] 
 423  RangeCheck  === 413 422  [[ 424 425 ]] P=0.999999, C=-1.000000
 424  IfFalse  === 423  [[ 427 ]] #0
 425  IfTrue  === 423  [[ 260 ]] #1
 427  Halt  === 424 1 1 8 1  [[ 0 ]] 
 428  MinI  === _ 390 135  [[ 370 ]] 
 432  ConvI2D  === _ 358  [[ 323 ]]  #double !orig=[357]
 433  ConI  === 0  [[ 434 418 ]]  #int:-1
 434  AddI  === _ 383 433  [[ 392 ]]  !orig=[430],[374]
 436  AddI  === _ 391 416  [[ 418 ]]  !orig=[435],[417]
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 179 161 399 407 415 427  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 371 372 373 380 387 433 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 340 81 16 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 427 415 407 399 ]] FramePtr !orig=[426] !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 338 84 369 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  47  ConP  === 0  [[ 48 84 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !orig=[193] !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 84 ]] #0 !orig=[276],[195] !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 202 157 157 203 203 262 134 134 283 284 284 325 326 326 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !orig=281,[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 293 335 369 410 416 221 422 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 51 6 81 8 9 (83 47 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 64 64 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 428 408 208 286 288 319 370 330 420 400 377 392 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 316  [[ 157 ]]  { N40:rawptr:BotPTR - - N316:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 308 6 153 8 9 (156 64 32 1 314 1 1 1 1 64 314 313 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 283 325 ]]  #long:16
 166  ConI  === 0  [[ 204 289 331 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 219 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 ]]  #int:0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 222 237 202 205  [[ 200 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 64 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 64 64 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 206 241  [[ 201 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 290 332 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 211  AddI  === _ 243 78  [[ 144 262 254 243 358 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 222 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 186 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 221  RangeCheck  === 261 78  [[ 222 ]] P=0.999999, C=-1.000000 !orig=151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 222  IfTrue  === 221  [[ 256 201 213 ]] #1 !orig=152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 310  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 236  Phi  === 226 7 312  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 324 201  [[ 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 368 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 335 211  [[ 211 213 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 383  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 222 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 353 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 425 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 221 237 ]] inner stride: 1 main of N261 strip mined !orig=[224],[198]
 262  SafePoint  === 257 1 200 1 1 263 64 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 282  StoreD  === 300 298 283 290  [[ 298 312 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 283  AddP  === _ 64 284 162  [[ 282 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 284  AddP  === _ 64 64 289  [[ 283 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 285  Bool  === _ 286  [[ 301 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 286  CmpI  === _ 293 135  [[ 285 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 287  Bool  === _ 288  [[ 299 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 288  CmpU  === _ 296 135  [[ 287 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 289  LShiftL  === _ 294 166  [[ 284 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 290  AddD  === _ 206 303  [[ 282 313 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 291  SqrtD  === 302 292  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 292  ConvI2D  === _ 293  [[ 291 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 293  AddI  === _ 296 78  [[ 286 292 296 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 294  ConvI2L  === _ 295  [[ 289 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 295  CastII  === 300 296  [[ 294 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 296  Phi  === 297 358 293  [[ 288 293 295 314 ]]  #int #tripcount !orig=243,[233]
 297  CountedLoop  === 297 322 302  [[ 296 297 298 299 303 ]] inner stride: 1 post of N261 !orig=261,[224],[198]
 298  Phi  === 297 354 282  [[ 282 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 299  RangeCheck  === 297 287  [[ 300 307 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 300  IfTrue  === 299  [[ 282 295 301 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 301  CountedLoopEnd  === 300 285  [[ 302 304 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 302  IfTrue  === 301  [[ 291 297 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 303  Phi  === 297 323 291  [[ 290 ]]  #double !orig=241,232
 304  IfFalse  === 301  [[ 310 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 307  IfFalse  === 299  [[ 308 ]] #0 !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 308  Region  === 308 307 350  [[ 308 157 313 314 316 ]]  !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 310  Region  === 310 304 311  [[ 310 226 312 ]]  !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 311  IfFalse  === 321  [[ 310 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 312  Phi  === 310 282 354  [[ 236 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 313  Phi  === 308 290 332  [[ 157 ]]  #double
 314  Phi  === 308 296 338  [[ 157 157 ]]  #int
 316  Phi  === 308 298 340  [[ 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 318  OpaqueZeroTripGuard  === _ 358  [[ 319 ]] 
 319  CmpI  === _ 318 135  [[ 320 ]] 
 320  Bool  === _ 319  [[ 321 ]] [lt]
 321  If  === 352 320  [[ 311 322 ]] P=0.500000, C=-1.000000
 322  IfTrue  === 321  [[ 297 323 ]] #1
 323  SqrtD  === 322 432  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 324  StoreD  === 342 340 325 332  [[ 340 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 325  AddP  === _ 64 326 162  [[ 324 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 326  AddP  === _ 64 64 331  [[ 325 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 327  Bool  === _ 328  [[ 343 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 328  CmpI  === _ 335 370  [[ 327 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 329  Bool  === _ 330  [[ 341 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 330  CmpU  === _ 338 135  [[ 329 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 331  LShiftL  === _ 336 166  [[ 326 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 332  AddD  === _ 206 345  [[ 324 313 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 333  SqrtD  === 344 334  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 334  ConvI2D  === _ 335  [[ 333 368 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 335  AddI  === _ 338 78  [[ 328 334 338 358 364 243 391 400 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 336  ConvI2L  === _ 337  [[ 331 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 337  CastII  === 342 338  [[ 336 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 338  Phi  === 339 36 335  [[ 330 335 337 314 ]]  #int #tripcount !orig=243,[233]
 339  CountedLoop  === 339 220 344  [[ 338 339 340 341 345 ]] inner stride: 1 pre of N261 !orig=261,[224],[198]
 340  Phi  === 339 7 324  [[ 324 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 341  RangeCheck  === 339 329  [[ 342 349 ]] P=0.999999, C=-1.000000 !orig=221,151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 342  IfTrue  === 341  [[ 324 337 343 ]] #1 !orig=222,152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 343  CountedLoopEnd  === 342 327  [[ 344 362 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 344  IfTrue  === 343  [[ 333 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 345  Phi  === 339 214 333  [[ 332 ]]  #double !orig=241,232
 346  IfFalse  === 366  [[ 352 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 349  IfFalse  === 341  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 350  Region  === 350 349 1  [[ 350 308 ]]  !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 352  Region  === 352 346 353  [[ 352 321 354 358 ]]  !orig=[317]
 353  IfFalse  === 258  [[ 352 ]] #0 !orig=[317]
 354  Phi  === 352 324 201  [[ 298 312 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 358  Phi  === 352 335 211  [[ 296 318 432 ]]  #int !orig=[431],[357]
 362  IfFalse  === 343  [[ 366 ]] #0
 363  OpaqueZeroTripGuard  === _ 383  [[ 364 ]] 
 364  CmpI  === _ 335 363  [[ 365 ]] 
 365  Bool  === _ 364  [[ 366 ]] [lt]
 366  If  === 362 365  [[ 346 367 ]] P=0.999999, C=-1.000000
 367  IfTrue  === 366  [[ 395 368 ]] #1
 368  SqrtD  === 367 334  [[ 241 ]]  !orig=333,145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 369  AddI  === _ 36 78  [[ 384 ]] 
 370  Opaque1  === _ 428 135  [[ 328 ]] 
 371  ConL  === 0  [[ 385 385 ]]  #long:0
 377  ConvI2L  === _ 135  [[ 382 381 ]]  #long:0..maxint !orig=[376]
 380  ConL  === 0  [[ 381 ]]  #long:minint
 381  MaxL  === _ 377 380  [[ 382 ]] 
 382  MinL  === _ 377 381  [[ 383 ]] 
 383  ConvL2I  === _ 382  [[ 254 363 434 ]]  #int !orig=[429]
 384  ConvI2L  === _ 369  [[ 389 ]]  #long:minint..maxint:www
 385  SubL  === _ 371 371  [[ 388 ]]  !orig=[386]
 387  ConL  === 0  [[ 388 ]]  #long:maxint
 388  MinL  === _ 385 387  [[ 389 ]] 
 389  MaxL  === _ 384 388  [[ 390 ]] 
 390  ConvL2I  === _ 389  [[ 428 ]]  #int:>=min+1:www
 391  OpaqueLoopInit  === _ 335  [[ 408 436 ]] 
 392  CmpU  === _ 434 135  [[ 393 ]] 
 393  Bool  === _ 392  [[ 394 ]] [lt]
 394  OpaqueInitializedAssertionPredicate  === _ 393  [[ 395 ]] 
 395  RangeCheck  === 367 394  [[ 396 397 ]] P=0.999999, C=-1.000000
 396  IfFalse  === 395  [[ 399 ]] #0
 397  IfTrue  === 395  [[ 403 ]] #1
 399  Halt  === 396 1 1 8 1  [[ 0 ]] 
 400  CmpU  === _ 335 135  [[ 401 ]] 
 401  Bool  === _ 400  [[ 402 ]] [lt]
 402  OpaqueInitializedAssertionPredicate  === _ 401  [[ 403 ]] 
 403  RangeCheck  === 397 402  [[ 404 405 ]] P=0.999999, C=-1.000000
 404  IfFalse  === 403  [[ 407 ]] #0
 405  IfTrue  === 403  [[ 411 ]] #1
 407  Halt  === 404 1 1 8 1  [[ 0 ]] 
 408  CmpU  === _ 391 135  [[ 409 ]] 
 409  Bool  === _ 408  [[ 410 ]] [lt]
 410  Opaque4  === _ 409 78  [[ 411 ]] 
 411  RangeCheck  === 405 410  [[ 412 413 ]] P=0.999999, C=-1.000000
 412  IfFalse  === 411  [[ 415 ]] #0
 413  IfTrue  === 411  [[ 423 ]] #1
 415  Halt  === 412 1 1 8 1  [[ 0 ]] 
 416  OpaqueLoopStride  === _ 78  [[ 436 ]] 
 418  AddI  === _ 436 433  [[ 420 ]]  !orig=[419]
 420  CmpU  === _ 418 135  [[ 421 ]] 
 421  Bool  === _ 420  [[ 422 ]] [lt]
 422  Opaque4  === _ 421 78  [[ 423 ]] 
 423  RangeCheck  === 413 422  [[ 424 425 ]] P=0.999999, C=-1.000000
 424  IfFalse  === 423  [[ 427 ]] #0
 425  IfTrue  === 423  [[ 260 ]] #1
 427  Halt  === 424 1 1 8 1  [[ 0 ]] 
 428  MinI  === _ 390 135  [[ 370 ]] 
 432  ConvI2D  === _ 358  [[ 323 ]]  #double !orig=[357]
 433  ConI  === 0  [[ 434 418 ]]  #int:-1
 434  AddI  === _ 383 433  [[ 392 ]]  !orig=[430],[374]
 436  AddI  === _ 391 416  [[ 418 ]]  !orig=[435],[417]
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 179 161 399 407 415 427  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 371 372 373 380 387 433 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 340 81 16 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 427 415 407 399 ]] FramePtr !orig=[426] !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 338 84 369 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  47  ConP  === 0  [[ 48 84 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !orig=[193] !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 84 ]] #0 !orig=[276],[195] !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 202 157 157 203 203 262 134 134 283 284 284 325 326 326 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !orig=281,[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 293 335 369 410 416 422 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 51 6 81 8 9 (83 47 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 64 64 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 428 408 208 286 288 319 370 330 420 400 377 392 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 316  [[ 157 ]]  { N40:rawptr:BotPTR - - N316:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 308 6 153 8 9 (156 64 32 1 314 1 1 1 1 64 314 313 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 283 325 ]]  #long:16
 166  ConI  === 0  [[ 204 289 331 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 219 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 ]]  #int:0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 261 237 202 205  [[ 200 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 64 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 64 64 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 206 241  [[ 201 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 290 332 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 211  AddI  === _ 243 78  [[ 144 262 254 243 358 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 261 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 186 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 310  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 236  Phi  === 226 7 312  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 324 201  [[ 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 368 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 335 211  [[ 211 213 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 383  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 261 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 353 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 425 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 256 237 213 201 ]] inner stride: 1 main of N261 strip mined !orig=[224],[198] !jvms: loop_invariant::micro @ bci:28 (line 9)
 262  SafePoint  === 257 1 200 1 1 263 64 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 282  StoreD  === 300 298 283 290  [[ 298 312 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 283  AddP  === _ 64 284 162  [[ 282 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 284  AddP  === _ 64 64 289  [[ 283 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 285  Bool  === _ 286  [[ 301 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 286  CmpI  === _ 293 135  [[ 285 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 287  Bool  === _ 288  [[ 299 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 288  CmpU  === _ 296 135  [[ 287 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 289  LShiftL  === _ 294 166  [[ 284 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 290  AddD  === _ 206 303  [[ 282 313 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 291  SqrtD  === 302 292  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 292  ConvI2D  === _ 293  [[ 291 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 293  AddI  === _ 296 78  [[ 286 292 296 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 294  ConvI2L  === _ 295  [[ 289 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 295  CastII  === 300 296  [[ 294 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 296  Phi  === 297 358 293  [[ 288 293 295 314 ]]  #int #tripcount !orig=243,[233]
 297  CountedLoop  === 297 322 302  [[ 296 297 298 299 303 ]] inner stride: 1 post of N261 !orig=261,[224],[198]
 298  Phi  === 297 354 282  [[ 282 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 299  RangeCheck  === 297 287  [[ 300 307 ]] P=0.999999, C=-1.000000 !orig=[221],151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 300  IfTrue  === 299  [[ 282 295 301 ]] #1 !orig=[222],152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 301  CountedLoopEnd  === 300 285  [[ 302 304 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 302  IfTrue  === 301  [[ 291 297 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 303  Phi  === 297 323 291  [[ 290 ]]  #double !orig=241,232
 304  IfFalse  === 301  [[ 310 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 307  IfFalse  === 299  [[ 308 ]] #0 !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 308  Region  === 308 307 350  [[ 308 157 313 314 316 ]]  !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 310  Region  === 310 304 311  [[ 310 226 312 ]]  !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 311  IfFalse  === 321  [[ 310 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 312  Phi  === 310 282 354  [[ 236 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 313  Phi  === 308 290 332  [[ 157 ]]  #double
 314  Phi  === 308 296 338  [[ 157 157 ]]  #int
 316  Phi  === 308 298 340  [[ 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 318  OpaqueZeroTripGuard  === _ 358  [[ 319 ]] 
 319  CmpI  === _ 318 135  [[ 320 ]] 
 320  Bool  === _ 319  [[ 321 ]] [lt]
 321  If  === 352 320  [[ 311 322 ]] P=0.500000, C=-1.000000
 322  IfTrue  === 321  [[ 297 323 ]] #1
 323  SqrtD  === 322 432  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 324  StoreD  === 342 340 325 332  [[ 340 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 325  AddP  === _ 64 326 162  [[ 324 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 326  AddP  === _ 64 64 331  [[ 325 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 327  Bool  === _ 328  [[ 343 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 328  CmpI  === _ 335 370  [[ 327 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 329  Bool  === _ 330  [[ 341 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 330  CmpU  === _ 338 135  [[ 329 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 331  LShiftL  === _ 336 166  [[ 326 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 332  AddD  === _ 206 345  [[ 324 313 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 333  SqrtD  === 344 334  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 334  ConvI2D  === _ 335  [[ 333 368 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 335  AddI  === _ 338 78  [[ 328 334 338 358 364 243 391 400 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 336  ConvI2L  === _ 337  [[ 331 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 337  CastII  === 342 338  [[ 336 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 338  Phi  === 339 36 335  [[ 330 335 337 314 ]]  #int #tripcount !orig=243,[233]
 339  CountedLoop  === 339 220 344  [[ 338 339 340 341 345 ]] inner stride: 1 pre of N261 !orig=261,[224],[198]
 340  Phi  === 339 7 324  [[ 324 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 341  RangeCheck  === 339 329  [[ 342 349 ]] P=0.999999, C=-1.000000 !orig=[221],151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 342  IfTrue  === 341  [[ 324 337 343 ]] #1 !orig=[222],152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 343  CountedLoopEnd  === 342 327  [[ 344 362 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 344  IfTrue  === 343  [[ 333 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 345  Phi  === 339 214 333  [[ 332 ]]  #double !orig=241,232
 346  IfFalse  === 366  [[ 352 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 349  IfFalse  === 341  [[ 350 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 350  Region  === 350 349 1  [[ 350 308 ]]  !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 352  Region  === 352 346 353  [[ 352 321 354 358 ]]  !orig=[317]
 353  IfFalse  === 258  [[ 352 ]] #0 !orig=[317]
 354  Phi  === 352 324 201  [[ 298 312 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 358  Phi  === 352 335 211  [[ 296 318 432 ]]  #int !orig=[431],[357]
 362  IfFalse  === 343  [[ 366 ]] #0
 363  OpaqueZeroTripGuard  === _ 383  [[ 364 ]] 
 364  CmpI  === _ 335 363  [[ 365 ]] 
 365  Bool  === _ 364  [[ 366 ]] [lt]
 366  If  === 362 365  [[ 346 367 ]] P=0.999999, C=-1.000000
 367  IfTrue  === 366  [[ 395 368 ]] #1
 368  SqrtD  === 367 334  [[ 241 ]]  !orig=333,145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 369  AddI  === _ 36 78  [[ 384 ]] 
 370  Opaque1  === _ 428 135  [[ 328 ]] 
 371  ConL  === 0  [[ 385 385 ]]  #long:0
 377  ConvI2L  === _ 135  [[ 382 381 ]]  #long:0..maxint !orig=[376]
 380  ConL  === 0  [[ 381 ]]  #long:minint
 381  MaxL  === _ 377 380  [[ 382 ]] 
 382  MinL  === _ 377 381  [[ 383 ]] 
 383  ConvL2I  === _ 382  [[ 254 363 434 ]]  #int !orig=[429]
 384  ConvI2L  === _ 369  [[ 389 ]]  #long:minint..maxint:www
 385  SubL  === _ 371 371  [[ 388 ]]  !orig=[386]
 387  ConL  === 0  [[ 388 ]]  #long:maxint
 388  MinL  === _ 385 387  [[ 389 ]] 
 389  MaxL  === _ 384 388  [[ 390 ]] 
 390  ConvL2I  === _ 389  [[ 428 ]]  #int:>=min+1:www
 391  OpaqueLoopInit  === _ 335  [[ 408 436 ]] 
 392  CmpU  === _ 434 135  [[ 393 ]] 
 393  Bool  === _ 392  [[ 394 ]] [lt]
 394  OpaqueInitializedAssertionPredicate  === _ 393  [[ 395 ]] 
 395  RangeCheck  === 367 394  [[ 396 397 ]] P=0.999999, C=-1.000000
 396  IfFalse  === 395  [[ 399 ]] #0
 397  IfTrue  === 395  [[ 403 ]] #1
 399  Halt  === 396 1 1 8 1  [[ 0 ]] 
 400  CmpU  === _ 335 135  [[ 401 ]] 
 401  Bool  === _ 400  [[ 402 ]] [lt]
 402  OpaqueInitializedAssertionPredicate  === _ 401  [[ 403 ]] 
 403  RangeCheck  === 397 402  [[ 404 405 ]] P=0.999999, C=-1.000000
 404  IfFalse  === 403  [[ 407 ]] #0
 405  IfTrue  === 403  [[ 411 ]] #1
 407  Halt  === 404 1 1 8 1  [[ 0 ]] 
 408  CmpU  === _ 391 135  [[ 409 ]] 
 409  Bool  === _ 408  [[ 410 ]] [lt]
 410  Opaque4  === _ 409 78  [[ 411 ]] 
 411  RangeCheck  === 405 410  [[ 412 413 ]] P=0.999999, C=-1.000000
 412  IfFalse  === 411  [[ 415 ]] #0
 413  IfTrue  === 411  [[ 423 ]] #1
 415  Halt  === 412 1 1 8 1  [[ 0 ]] 
 416  OpaqueLoopStride  === _ 78  [[ 436 ]] 
 418  AddI  === _ 436 433  [[ 420 ]]  !orig=[419]
 420  CmpU  === _ 418 135  [[ 421 ]] 
 421  Bool  === _ 420  [[ 422 ]] [lt]
 422  Opaque4  === _ 421 78  [[ 423 ]] 
 423  RangeCheck  === 413 422  [[ 424 425 ]] P=0.999999, C=-1.000000
 424  IfFalse  === 423  [[ 427 ]] #0
 425  IfTrue  === 423  [[ 260 ]] #1
 427  Halt  === 424 1 1 8 1  [[ 0 ]] 
 428  MinI  === _ 390 135  [[ 370 ]] 
 432  ConvI2D  === _ 358  [[ 323 ]]  #double !orig=[357]
 433  ConI  === 0  [[ 434 418 ]]  #int:-1
 434  AddI  === _ 383 433  [[ 392 ]]  !orig=[430],[374]
 436  AddI  === _ 391 416  [[ 418 ]]  !orig=[435],[417]
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 179 161 399 407 415 427  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 371 372 373 380 387 433 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 340 81 16 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 427 415 407 399 ]] FramePtr !orig=[426] !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 338 84 369 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  47  ConP  === 0  [[ 48 84 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !orig=[193] !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 84 ]] #0 !orig=[276],[195] !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 202 157 157 203 203 262 134 134 283 284 284 325 326 326 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !orig=281,[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 293 335 369 410 416 422 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 51 6 81 8 9 (83 47 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 64 64 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 428 408 208 286 288 319 370 330 420 400 377 392 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 316  [[ 157 ]]  { N40:rawptr:BotPTR - - N316:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 308 6 153 8 9 (156 64 32 1 314 1 1 1 1 64 314 313 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 283 325 ]]  #long:16
 166  ConI  === 0  [[ 204 289 331 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 219 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 ]]  #int:0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 261 237 202 205  [[ 200 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 64 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 64 64 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 206 241  [[ 201 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 290 332 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 211  AddI  === _ 243 78  [[ 144 262 254 243 358 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 261 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 186 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 310  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 236  Phi  === 226 7 312  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 324 201  [[ 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 368 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 335 211  [[ 211 213 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 383  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 261 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 353 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 425 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 256 237 213 201 ]] inner stride: 1 main of N261 strip mined !orig=[224],[198] !jvms: loop_invariant::micro @ bci:28 (line 9)
 262  SafePoint  === 257 1 200 1 1 263 64 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 282  StoreD  === 300 298 283 290  [[ 298 312 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 283  AddP  === _ 64 284 162  [[ 282 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 284  AddP  === _ 64 64 289  [[ 283 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 285  Bool  === _ 286  [[ 301 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 286  CmpI  === _ 293 135  [[ 285 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 287  Bool  === _ 288  [[ 299 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 288  CmpU  === _ 296 135  [[ 287 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 289  LShiftL  === _ 294 166  [[ 284 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 290  AddD  === _ 206 303  [[ 282 313 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 291  SqrtD  === 302 292  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 292  ConvI2D  === _ 293  [[ 291 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 293  AddI  === _ 296 78  [[ 286 292 296 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 294  ConvI2L  === _ 295  [[ 289 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 295  CastII  === 300 296  [[ 294 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 296  Phi  === 297 358 293  [[ 288 293 295 314 ]]  #int #tripcount !orig=243,[233]
 297  CountedLoop  === 297 322 302  [[ 296 297 298 299 303 ]] inner stride: 1 post of N261 !orig=261,[224],[198]
 298  Phi  === 297 354 282  [[ 282 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 299  RangeCheck  === 297 287  [[ 300 307 ]] P=0.999999, C=-1.000000 !orig=[221],151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 300  IfTrue  === 299  [[ 282 295 301 ]] #1 !orig=[222],152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 301  CountedLoopEnd  === 300 285  [[ 302 304 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 302  IfTrue  === 301  [[ 291 297 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 303  Phi  === 297 323 291  [[ 290 ]]  #double !orig=241,232
 304  IfFalse  === 301  [[ 310 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 307  IfFalse  === 299  [[ 308 ]] #0 !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 308  Region  === 308 307 349  [[ 308 157 313 314 316 ]]  !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 310  Region  === 310 304 311  [[ 310 226 312 ]]  !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 311  IfFalse  === 321  [[ 310 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 312  Phi  === 310 282 354  [[ 236 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 313  Phi  === 308 290 332  [[ 157 ]]  #double
 314  Phi  === 308 296 338  [[ 157 157 ]]  #int
 316  Phi  === 308 298 340  [[ 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 318  OpaqueZeroTripGuard  === _ 358  [[ 319 ]] 
 319  CmpI  === _ 318 135  [[ 320 ]] 
 320  Bool  === _ 319  [[ 321 ]] [lt]
 321  If  === 352 320  [[ 311 322 ]] P=0.500000, C=-1.000000
 322  IfTrue  === 321  [[ 297 323 ]] #1
 323  SqrtD  === 322 432  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 324  StoreD  === 342 340 325 332  [[ 340 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 325  AddP  === _ 64 326 162  [[ 324 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 326  AddP  === _ 64 64 331  [[ 325 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 327  Bool  === _ 328  [[ 343 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 328  CmpI  === _ 335 370  [[ 327 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 329  Bool  === _ 330  [[ 341 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 330  CmpU  === _ 338 135  [[ 329 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 331  LShiftL  === _ 336 166  [[ 326 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 332  AddD  === _ 206 345  [[ 324 313 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 333  SqrtD  === 344 334  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 334  ConvI2D  === _ 335  [[ 333 368 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 335  AddI  === _ 338 78  [[ 328 334 338 358 364 243 391 400 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 336  ConvI2L  === _ 337  [[ 331 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 337  CastII  === 342 338  [[ 336 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 338  Phi  === 339 36 335  [[ 330 335 337 314 ]]  #int #tripcount !orig=243,[233]
 339  CountedLoop  === 339 220 344  [[ 338 339 340 341 345 ]] inner stride: 1 pre of N261 !orig=261,[224],[198]
 340  Phi  === 339 7 324  [[ 324 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 341  RangeCheck  === 339 329  [[ 342 349 ]] P=0.999999, C=-1.000000 !orig=[221],151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 342  IfTrue  === 341  [[ 324 337 343 ]] #1 !orig=[222],152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 343  CountedLoopEnd  === 342 327  [[ 344 362 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 344  IfTrue  === 343  [[ 333 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 345  Phi  === 339 214 333  [[ 332 ]]  #double !orig=241,232
 346  IfFalse  === 366  [[ 352 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 349  IfFalse  === 341  [[ 308 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 352  Region  === 352 346 353  [[ 352 321 354 358 ]]  !orig=[317]
 353  IfFalse  === 258  [[ 352 ]] #0 !orig=[317]
 354  Phi  === 352 324 201  [[ 298 312 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 358  Phi  === 352 335 211  [[ 296 318 432 ]]  #int !orig=[431],[357]
 362  IfFalse  === 343  [[ 366 ]] #0
 363  OpaqueZeroTripGuard  === _ 383  [[ 364 ]] 
 364  CmpI  === _ 335 363  [[ 365 ]] 
 365  Bool  === _ 364  [[ 366 ]] [lt]
 366  If  === 362 365  [[ 346 367 ]] P=0.999999, C=-1.000000
 367  IfTrue  === 366  [[ 395 368 ]] #1
 368  SqrtD  === 367 334  [[ 241 ]]  !orig=333,145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 369  AddI  === _ 36 78  [[ 384 ]] 
 370  Opaque1  === _ 428 135  [[ 328 ]] 
 371  ConL  === 0  [[ 385 385 ]]  #long:0
 377  ConvI2L  === _ 135  [[ 382 381 ]]  #long:0..maxint !orig=[376]
 380  ConL  === 0  [[ 381 ]]  #long:minint
 381  MaxL  === _ 377 380  [[ 382 ]] 
 382  MinL  === _ 377 381  [[ 383 ]] 
 383  ConvL2I  === _ 382  [[ 254 363 434 ]]  #int !orig=[429]
 384  ConvI2L  === _ 369  [[ 389 ]]  #long:minint..maxint:www
 385  SubL  === _ 371 371  [[ 388 ]]  !orig=[386]
 387  ConL  === 0  [[ 388 ]]  #long:maxint
 388  MinL  === _ 385 387  [[ 389 ]] 
 389  MaxL  === _ 384 388  [[ 390 ]] 
 390  ConvL2I  === _ 389  [[ 428 ]]  #int:>=min+1:www
 391  OpaqueLoopInit  === _ 335  [[ 408 436 ]] 
 392  CmpU  === _ 434 135  [[ 393 ]] 
 393  Bool  === _ 392  [[ 394 ]] [lt]
 394  OpaqueInitializedAssertionPredicate  === _ 393  [[ 395 ]] 
 395  RangeCheck  === 367 394  [[ 396 397 ]] P=0.999999, C=-1.000000
 396  IfFalse  === 395  [[ 399 ]] #0
 397  IfTrue  === 395  [[ 403 ]] #1
 399  Halt  === 396 1 1 8 1  [[ 0 ]] 
 400  CmpU  === _ 335 135  [[ 401 ]] 
 401  Bool  === _ 400  [[ 402 ]] [lt]
 402  OpaqueInitializedAssertionPredicate  === _ 401  [[ 403 ]] 
 403  RangeCheck  === 397 402  [[ 404 405 ]] P=0.999999, C=-1.000000
 404  IfFalse  === 403  [[ 407 ]] #0
 405  IfTrue  === 403  [[ 411 ]] #1
 407  Halt  === 404 1 1 8 1  [[ 0 ]] 
 408  CmpU  === _ 391 135  [[ 409 ]] 
 409  Bool  === _ 408  [[ 410 ]] [lt]
 410  Opaque4  === _ 409 78  [[ 411 ]] 
 411  RangeCheck  === 405 410  [[ 412 413 ]] P=0.999999, C=-1.000000
 412  IfFalse  === 411  [[ 415 ]] #0
 413  IfTrue  === 411  [[ 423 ]] #1
 415  Halt  === 412 1 1 8 1  [[ 0 ]] 
 416  OpaqueLoopStride  === _ 78  [[ 436 ]] 
 418  AddI  === _ 436 433  [[ 420 ]]  !orig=[419]
 420  CmpU  === _ 418 135  [[ 421 ]] 
 421  Bool  === _ 420  [[ 422 ]] [lt]
 422  Opaque4  === _ 421 78  [[ 423 ]] 
 423  RangeCheck  === 413 422  [[ 424 425 ]] P=0.999999, C=-1.000000
 424  IfFalse  === 423  [[ 427 ]] #0
 425  IfTrue  === 423  [[ 260 ]] #1
 427  Halt  === 424 1 1 8 1  [[ 0 ]] 
 428  MinI  === _ 390 135  [[ 370 ]] 
 432  ConvI2D  === _ 358  [[ 323 ]]  #double !orig=[357]
 433  ConI  === 0  [[ 434 418 ]]  #int:-1
 434  AddI  === _ 383 433  [[ 392 ]]  !orig=[430],[374]
 436  AddI  === _ 391 416  [[ 418 ]]  !orig=[435],[417]
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 179 161 399 407 415 427  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 371 372 373 380 387 433 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 340 81 16 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 427 415 407 399 ]] FramePtr !orig=[426] !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 338 84 369 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  47  ConP  === 0  [[ 48 84 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !orig=[193] !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 84 ]] #0 !orig=[276],[195] !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 202 157 157 203 203 262 134 134 283 284 284 325 326 326 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !orig=281,[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 293 335 369 410 416 422 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 51 6 81 8 9 (83 47 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 64 64 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 428 408 208 286 288 319 370 330 420 400 377 392 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 316  [[ 157 ]]  { N40:rawptr:BotPTR - - N316:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 308 6 153 8 9 (156 64 32 1 314 1 1 1 1 64 314 313 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 283 325 ]]  #long:16
 166  ConI  === 0  [[ 204 289 331 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 219 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 ]]  #int:0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 261 237 202 205  [[ 200 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 64 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 64 64 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 206 241  [[ 201 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 290 332 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 211  AddI  === _ 243 78  [[ 144 262 254 243 358 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 261 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 186 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 310  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 236  Phi  === 226 7 312  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 324 201  [[ 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 368 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 335 211  [[ 211 213 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 383  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 261 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 353 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 425 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 256 237 213 201 ]] inner stride: 1 main of N261 strip mined !orig=[224],[198] !jvms: loop_invariant::micro @ bci:28 (line 9)
 262  SafePoint  === 257 1 200 1 1 263 64 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 282  StoreD  === 300 298 283 290  [[ 298 312 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 283  AddP  === _ 64 284 162  [[ 282 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 284  AddP  === _ 64 64 289  [[ 283 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 285  Bool  === _ 286  [[ 301 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 286  CmpI  === _ 293 135  [[ 285 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 287  Bool  === _ 288  [[ 299 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 288  CmpU  === _ 296 135  [[ 287 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 289  LShiftL  === _ 294 166  [[ 284 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 290  AddD  === _ 206 303  [[ 282 313 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 291  SqrtD  === 302 292  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 292  ConvI2D  === _ 293  [[ 291 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 293  AddI  === _ 296 78  [[ 286 292 296 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 294  ConvI2L  === _ 295  [[ 289 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 295  CastII  === 300 296  [[ 294 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 296  Phi  === 297 358 293  [[ 288 293 295 314 ]]  #int #tripcount !orig=243,[233]
 297  CountedLoop  === 297 322 302  [[ 296 297 298 299 303 ]] inner stride: 1 post of N261 !orig=261,[224],[198]
 298  Phi  === 297 354 282  [[ 282 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 299  RangeCheck  === 297 287  [[ 300 307 ]] P=0.999999, C=-1.000000 !orig=[221],151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 300  IfTrue  === 299  [[ 282 295 301 ]] #1 !orig=[222],152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 301  CountedLoopEnd  === 300 285  [[ 302 304 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 302  IfTrue  === 301  [[ 291 297 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 303  Phi  === 297 323 291  [[ 290 ]]  #double !orig=241,232
 304  IfFalse  === 301  [[ 310 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 307  IfFalse  === 299  [[ 308 ]] #0 !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 308  Region  === 308 307 349  [[ 308 157 313 314 316 ]]  !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 310  Region  === 310 304 311  [[ 310 226 312 ]]  !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 311  IfFalse  === 321  [[ 310 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 312  Phi  === 310 282 354  [[ 236 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 313  Phi  === 308 290 332  [[ 157 ]]  #double
 314  Phi  === 308 296 338  [[ 157 157 ]]  #int
 316  Phi  === 308 298 340  [[ 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 318  OpaqueZeroTripGuard  === _ 358  [[ 319 ]] 
 319  CmpI  === _ 318 135  [[ 320 ]] 
 320  Bool  === _ 319  [[ 321 ]] [lt]
 321  If  === 352 320  [[ 311 322 ]] P=0.500000, C=-1.000000
 322  IfTrue  === 321  [[ 297 323 ]] #1
 323  SqrtD  === 322 432  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 324  StoreD  === 342 340 325 332  [[ 340 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 325  AddP  === _ 64 326 162  [[ 324 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 326  AddP  === _ 64 64 331  [[ 325 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 327  Bool  === _ 328  [[ 343 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 328  CmpI  === _ 335 370  [[ 327 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 329  Bool  === _ 330  [[ 341 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 330  CmpU  === _ 338 135  [[ 329 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 331  LShiftL  === _ 336 166  [[ 326 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 332  AddD  === _ 206 345  [[ 324 313 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 333  SqrtD  === 344 334  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 334  ConvI2D  === _ 335  [[ 333 368 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 335  AddI  === _ 338 78  [[ 328 334 338 358 364 243 391 400 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 336  ConvI2L  === _ 337  [[ 331 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 337  CastII  === 342 338  [[ 336 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 338  Phi  === 339 36 335  [[ 330 335 337 314 ]]  #int #tripcount !orig=243,[233]
 339  CountedLoop  === 339 220 344  [[ 338 339 340 341 345 ]] inner stride: 1 pre of N261 !orig=261,[224],[198]
 340  Phi  === 339 7 324  [[ 324 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 341  RangeCheck  === 339 329  [[ 342 349 ]] P=0.999999, C=-1.000000 !orig=[221],151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 342  IfTrue  === 341  [[ 324 337 343 ]] #1 !orig=[222],152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 343  CountedLoopEnd  === 342 327  [[ 344 362 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 344  IfTrue  === 343  [[ 333 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 345  Phi  === 339 214 333  [[ 332 ]]  #double !orig=241,232
 346  IfFalse  === 366  [[ 352 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 349  IfFalse  === 341  [[ 308 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 352  Region  === 352 346 353  [[ 352 321 354 358 ]]  !orig=[317]
 353  IfFalse  === 258  [[ 352 ]] #0 !orig=[317]
 354  Phi  === 352 324 201  [[ 298 312 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 358  Phi  === 352 335 211  [[ 296 318 432 ]]  #int !orig=[431],[357]
 362  IfFalse  === 343  [[ 366 ]] #0
 363  OpaqueZeroTripGuard  === _ 383  [[ 364 ]] 
 364  CmpI  === _ 335 363  [[ 365 ]] 
 365  Bool  === _ 364  [[ 366 ]] [lt]
 366  If  === 362 365  [[ 346 367 ]] P=0.999999, C=-1.000000
 367  IfTrue  === 366  [[ 395 368 ]] #1
 368  SqrtD  === 367 334  [[ 241 ]]  !orig=333,145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 369  AddI  === _ 36 78  [[ 384 ]] 
 370  Opaque1  === _ 428 135  [[ 328 ]] 
 371  ConL  === 0  [[ 388 ]]  #long:0
 377  ConvI2L  === _ 135  [[ 382 381 ]]  #long:0..maxint !orig=[376]
 380  ConL  === 0  [[ 381 ]]  #long:minint
 381  MaxL  === _ 377 380  [[ 382 ]] 
 382  MinL  === _ 377 381  [[ 383 ]] 
 383  ConvL2I  === _ 382  [[ 254 363 434 ]]  #int !orig=[429]
 384  ConvI2L  === _ 369  [[ 389 ]]  #long:minint..maxint:www
 387  ConL  === 0  [[ 388 ]]  #long:maxint
 388  MinL  === _ 371 387  [[ 389 ]] 
 389  MaxL  === _ 384 388  [[ 390 ]] 
 390  ConvL2I  === _ 389  [[ 428 ]]  #int:>=min+1:www
 391  OpaqueLoopInit  === _ 335  [[ 408 436 ]] 
 392  CmpU  === _ 434 135  [[ 393 ]] 
 393  Bool  === _ 392  [[ 394 ]] [lt]
 394  OpaqueInitializedAssertionPredicate  === _ 393  [[ 395 ]] 
 395  RangeCheck  === 367 394  [[ 396 397 ]] P=0.999999, C=-1.000000
 396  IfFalse  === 395  [[ 399 ]] #0
 397  IfTrue  === 395  [[ 403 ]] #1
 399  Halt  === 396 1 1 8 1  [[ 0 ]] 
 400  CmpU  === _ 335 135  [[ 401 ]] 
 401  Bool  === _ 400  [[ 402 ]] [lt]
 402  OpaqueInitializedAssertionPredicate  === _ 401  [[ 403 ]] 
 403  RangeCheck  === 397 402  [[ 404 405 ]] P=0.999999, C=-1.000000
 404  IfFalse  === 403  [[ 407 ]] #0
 405  IfTrue  === 403  [[ 411 ]] #1
 407  Halt  === 404 1 1 8 1  [[ 0 ]] 
 408  CmpU  === _ 391 135  [[ 409 ]] 
 409  Bool  === _ 408  [[ 410 ]] [lt]
 410  Opaque4  === _ 409 78  [[ 411 ]] 
 411  RangeCheck  === 405 410  [[ 412 413 ]] P=0.999999, C=-1.000000
 412  IfFalse  === 411  [[ 415 ]] #0
 413  IfTrue  === 411  [[ 423 ]] #1
 415  Halt  === 412 1 1 8 1  [[ 0 ]] 
 416  OpaqueLoopStride  === _ 78  [[ 436 ]] 
 418  AddI  === _ 436 433  [[ 420 ]]  !orig=[419]
 420  CmpU  === _ 418 135  [[ 421 ]] 
 421  Bool  === _ 420  [[ 422 ]] [lt]
 422  Opaque4  === _ 421 78  [[ 423 ]] 
 423  RangeCheck  === 413 422  [[ 424 425 ]] P=0.999999, C=-1.000000
 424  IfFalse  === 423  [[ 427 ]] #0
 425  IfTrue  === 423  [[ 260 ]] #1
 427  Halt  === 424 1 1 8 1  [[ 0 ]] 
 428  MinI  === _ 390 135  [[ 370 ]] 
 432  ConvI2D  === _ 358  [[ 323 ]]  #double !orig=[357]
 433  ConI  === 0  [[ 434 418 ]]  #int:-1
 434  AddI  === _ 383 433  [[ 392 ]]  !orig=[430],[374]
 436  AddI  === _ 391 416  [[ 418 ]]  !orig=[435],[417]
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 179 161 399 407 415 427  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 371 372 373 380 387 433 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 340 81 16 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 427 415 407 399 ]] FramePtr !orig=[426] !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 338 84 369 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  47  ConP  === 0  [[ 48 84 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !orig=[193] !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 84 ]] #0 !orig=[276],[195] !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 202 157 157 203 203 262 134 134 283 284 284 325 326 326 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !orig=281,[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 293 335 369 410 416 422 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 51 6 81 8 9 (83 47 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 64 64 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 428 408 208 286 288 319 370 330 420 400 377 392 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 316  [[ 157 ]]  { N40:rawptr:BotPTR - - N316:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 308 6 153 8 9 (156 64 32 1 314 1 1 1 1 64 314 313 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 283 325 ]]  #long:16
 166  ConI  === 0  [[ 204 289 331 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 219 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 ]]  #int:0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 261 237 202 205  [[ 200 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 64 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 64 64 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 206 241  [[ 201 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 290 332 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 211  AddI  === _ 243 78  [[ 144 262 254 243 358 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 261 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 186 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 310  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 236  Phi  === 226 7 312  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 324 201  [[ 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 368 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 335 211  [[ 211 213 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 383  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 261 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 353 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 425 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 256 237 213 201 ]] inner stride: 1 main of N261 strip mined !orig=[224],[198] !jvms: loop_invariant::micro @ bci:28 (line 9)
 262  SafePoint  === 257 1 200 1 1 263 64 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 282  StoreD  === 300 298 283 290  [[ 298 312 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 283  AddP  === _ 64 284 162  [[ 282 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 284  AddP  === _ 64 64 289  [[ 283 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 285  Bool  === _ 286  [[ 301 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 286  CmpI  === _ 293 135  [[ 285 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 287  Bool  === _ 288  [[ 299 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 288  CmpU  === _ 296 135  [[ 287 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 289  LShiftL  === _ 294 166  [[ 284 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 290  AddD  === _ 206 303  [[ 282 313 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 291  SqrtD  === 302 292  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 292  ConvI2D  === _ 293  [[ 291 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 293  AddI  === _ 296 78  [[ 286 292 296 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 294  ConvI2L  === _ 295  [[ 289 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 295  CastII  === 300 296  [[ 294 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 296  Phi  === 297 358 293  [[ 288 293 295 314 ]]  #int #tripcount !orig=243,[233]
 297  CountedLoop  === 297 322 302  [[ 296 297 298 299 303 ]] inner stride: 1 post of N261 !orig=261,[224],[198]
 298  Phi  === 297 354 282  [[ 282 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 299  RangeCheck  === 297 287  [[ 300 307 ]] P=0.999999, C=-1.000000 !orig=[221],151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 300  IfTrue  === 299  [[ 282 295 301 ]] #1 !orig=[222],152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 301  CountedLoopEnd  === 300 285  [[ 302 304 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 302  IfTrue  === 301  [[ 291 297 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 303  Phi  === 297 323 291  [[ 290 ]]  #double !orig=241,232
 304  IfFalse  === 301  [[ 310 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 307  IfFalse  === 299  [[ 308 ]] #0 !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 308  Region  === 308 307 349  [[ 308 157 313 314 316 ]]  !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 310  Region  === 310 304 311  [[ 310 226 312 ]]  !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 311  IfFalse  === 321  [[ 310 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 312  Phi  === 310 282 354  [[ 236 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 313  Phi  === 308 290 332  [[ 157 ]]  #double
 314  Phi  === 308 296 338  [[ 157 157 ]]  #int
 316  Phi  === 308 298 340  [[ 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 318  OpaqueZeroTripGuard  === _ 358  [[ 319 ]] 
 319  CmpI  === _ 318 135  [[ 320 ]] 
 320  Bool  === _ 319  [[ 321 ]] [lt]
 321  If  === 352 320  [[ 311 322 ]] P=0.500000, C=-1.000000
 322  IfTrue  === 321  [[ 297 323 ]] #1
 323  SqrtD  === 322 432  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 324  StoreD  === 342 340 325 332  [[ 340 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 325  AddP  === _ 64 326 162  [[ 324 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 326  AddP  === _ 64 64 331  [[ 325 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 327  Bool  === _ 328  [[ 343 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 328  CmpI  === _ 335 370  [[ 327 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 329  Bool  === _ 330  [[ 341 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 330  CmpU  === _ 338 135  [[ 329 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 331  LShiftL  === _ 336 166  [[ 326 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 332  AddD  === _ 206 345  [[ 324 313 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 333  SqrtD  === 344 334  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 334  ConvI2D  === _ 335  [[ 333 368 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 335  AddI  === _ 338 78  [[ 328 334 338 358 364 243 391 400 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 336  ConvI2L  === _ 337  [[ 331 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 337  CastII  === 342 338  [[ 336 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 338  Phi  === 339 36 335  [[ 330 335 337 314 ]]  #int #tripcount !orig=243,[233]
 339  CountedLoop  === 339 220 344  [[ 338 339 340 341 345 ]] inner stride: 1 pre of N261 !orig=261,[224],[198]
 340  Phi  === 339 7 324  [[ 324 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 341  RangeCheck  === 339 329  [[ 342 349 ]] P=0.999999, C=-1.000000 !orig=[221],151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 342  IfTrue  === 341  [[ 324 337 343 ]] #1 !orig=[222],152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 343  CountedLoopEnd  === 342 327  [[ 344 362 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 344  IfTrue  === 343  [[ 333 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 345  Phi  === 339 214 333  [[ 332 ]]  #double !orig=241,232
 346  IfFalse  === 366  [[ 352 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 349  IfFalse  === 341  [[ 308 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 352  Region  === 352 346 353  [[ 352 321 354 358 ]]  !orig=[317]
 353  IfFalse  === 258  [[ 352 ]] #0 !orig=[317]
 354  Phi  === 352 324 201  [[ 298 312 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 358  Phi  === 352 335 211  [[ 296 318 432 ]]  #int !orig=[431],[357]
 362  IfFalse  === 343  [[ 366 ]] #0
 363  OpaqueZeroTripGuard  === _ 383  [[ 364 ]] 
 364  CmpI  === _ 335 363  [[ 365 ]] 
 365  Bool  === _ 364  [[ 366 ]] [lt]
 366  If  === 362 365  [[ 346 367 ]] P=0.999999, C=-1.000000
 367  IfTrue  === 366  [[ 395 368 ]] #1
 368  SqrtD  === 367 334  [[ 241 ]]  !orig=333,145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 369  AddI  === _ 36 78  [[ 384 ]] 
 370  Opaque1  === _ 428 135  [[ 328 ]] 
 371  ConL  === 0  [[ 388 ]]  #long:0
 377  ConvI2L  === _ 135  [[ 382 382 ]]  #long:0..maxint !orig=[376]
 382  MinL  === _ 377 377  [[ 383 ]] 
 383  ConvL2I  === _ 382  [[ 254 363 434 ]]  #int !orig=[429]
 384  ConvI2L  === _ 369  [[ 389 ]]  #long:minint..maxint:www
 387  ConL  === 0  [[ 388 ]]  #long:maxint
 388  MinL  === _ 371 387  [[ 389 ]] 
 389  MaxL  === _ 384 388  [[ 390 ]] 
 390  ConvL2I  === _ 389  [[ 428 ]]  #int:>=min+1:www
 391  OpaqueLoopInit  === _ 335  [[ 408 436 ]] 
 392  CmpU  === _ 434 135  [[ 393 ]] 
 393  Bool  === _ 392  [[ 394 ]] [lt]
 394  OpaqueInitializedAssertionPredicate  === _ 393  [[ 395 ]] 
 395  RangeCheck  === 367 394  [[ 396 397 ]] P=0.999999, C=-1.000000
 396  IfFalse  === 395  [[ 399 ]] #0
 397  IfTrue  === 395  [[ 403 ]] #1
 399  Halt  === 396 1 1 8 1  [[ 0 ]] 
 400  CmpU  === _ 335 135  [[ 401 ]] 
 401  Bool  === _ 400  [[ 402 ]] [lt]
 402  OpaqueInitializedAssertionPredicate  === _ 401  [[ 403 ]] 
 403  RangeCheck  === 397 402  [[ 404 405 ]] P=0.999999, C=-1.000000
 404  IfFalse  === 403  [[ 407 ]] #0
 405  IfTrue  === 403  [[ 411 ]] #1
 407  Halt  === 404 1 1 8 1  [[ 0 ]] 
 408  CmpU  === _ 391 135  [[ 409 ]] 
 409  Bool  === _ 408  [[ 410 ]] [lt]
 410  Opaque4  === _ 409 78  [[ 411 ]] 
 411  RangeCheck  === 405 410  [[ 412 413 ]] P=0.999999, C=-1.000000
 412  IfFalse  === 411  [[ 415 ]] #0
 413  IfTrue  === 411  [[ 423 ]] #1
 415  Halt  === 412 1 1 8 1  [[ 0 ]] 
 416  OpaqueLoopStride  === _ 78  [[ 436 ]] 
 418  AddI  === _ 436 433  [[ 420 ]]  !orig=[419]
 420  CmpU  === _ 418 135  [[ 421 ]] 
 421  Bool  === _ 420  [[ 422 ]] [lt]
 422  Opaque4  === _ 421 78  [[ 423 ]] 
 423  RangeCheck  === 413 422  [[ 424 425 ]] P=0.999999, C=-1.000000
 424  IfFalse  === 423  [[ 427 ]] #0
 425  IfTrue  === 423  [[ 260 ]] #1
 427  Halt  === 424 1 1 8 1  [[ 0 ]] 
 428  MinI  === _ 390 135  [[ 370 ]] 
 432  ConvI2D  === _ 358  [[ 323 ]]  #double !orig=[357]
 433  ConI  === 0  [[ 434 418 ]]  #int:-1
 434  AddI  === _ 383 433  [[ 392 ]]  !orig=[430],[374]
 436  AddI  === _ 391 416  [[ 418 ]]  !orig=[435],[417]
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 179 161 399 407 415 427  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 371 372 373 380 387 433 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 340 81 16 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 427 415 407 399 ]] FramePtr !orig=[426] !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 338 84 369 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  47  ConP  === 0  [[ 48 84 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !orig=[193] !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 84 ]] #0 !orig=[276],[195] !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 202 157 157 203 203 262 134 134 283 284 284 325 326 326 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !orig=281,[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 293 335 369 410 416 422 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 51 6 81 8 9 (83 47 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 64 64 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 428 408 208 286 288 319 370 330 420 400 377 392 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 316  [[ 157 ]]  { N40:rawptr:BotPTR - - N316:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 308 6 153 8 9 (156 64 32 1 314 1 1 1 1 64 314 313 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 283 325 ]]  #long:16
 166  ConI  === 0  [[ 204 289 331 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 219 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 ]]  #int:0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 261 237 202 205  [[ 200 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 64 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 64 64 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 206 241  [[ 201 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 290 332 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 211  AddI  === _ 243 78  [[ 144 262 254 243 358 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 261 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 186 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 310  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 236  Phi  === 226 7 312  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 324 201  [[ 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 368 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 335 211  [[ 211 213 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 383  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 261 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 353 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 425 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 256 237 213 201 ]] inner stride: 1 main of N261 strip mined !orig=[224],[198] !jvms: loop_invariant::micro @ bci:28 (line 9)
 262  SafePoint  === 257 1 200 1 1 263 64 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 282  StoreD  === 300 298 283 290  [[ 298 312 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 283  AddP  === _ 64 284 162  [[ 282 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 284  AddP  === _ 64 64 289  [[ 283 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 285  Bool  === _ 286  [[ 301 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 286  CmpI  === _ 293 135  [[ 285 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 287  Bool  === _ 288  [[ 299 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 288  CmpU  === _ 296 135  [[ 287 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 289  LShiftL  === _ 294 166  [[ 284 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 290  AddD  === _ 206 303  [[ 282 313 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 291  SqrtD  === 302 292  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 292  ConvI2D  === _ 293  [[ 291 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 293  AddI  === _ 296 78  [[ 286 292 296 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 294  ConvI2L  === _ 295  [[ 289 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 295  CastII  === 300 296  [[ 294 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 296  Phi  === 297 358 293  [[ 288 293 295 314 ]]  #int #tripcount !orig=243,[233]
 297  CountedLoop  === 297 322 302  [[ 296 297 298 299 303 ]] inner stride: 1 post of N261 !orig=261,[224],[198]
 298  Phi  === 297 354 282  [[ 282 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 299  RangeCheck  === 297 287  [[ 300 307 ]] P=0.999999, C=-1.000000 !orig=[221],151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 300  IfTrue  === 299  [[ 282 295 301 ]] #1 !orig=[222],152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 301  CountedLoopEnd  === 300 285  [[ 302 304 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 302  IfTrue  === 301  [[ 291 297 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 303  Phi  === 297 323 291  [[ 290 ]]  #double !orig=241,232
 304  IfFalse  === 301  [[ 310 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 307  IfFalse  === 299  [[ 308 ]] #0 !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 308  Region  === 308 307 349  [[ 308 157 313 314 316 ]]  !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 310  Region  === 310 304 311  [[ 310 226 312 ]]  !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 311  IfFalse  === 321  [[ 310 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 312  Phi  === 310 282 354  [[ 236 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 313  Phi  === 308 290 332  [[ 157 ]]  #double
 314  Phi  === 308 296 338  [[ 157 157 ]]  #int
 316  Phi  === 308 298 340  [[ 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 318  OpaqueZeroTripGuard  === _ 358  [[ 319 ]] 
 319  CmpI  === _ 318 135  [[ 320 ]] 
 320  Bool  === _ 319  [[ 321 ]] [lt]
 321  If  === 352 320  [[ 311 322 ]] P=0.500000, C=-1.000000
 322  IfTrue  === 321  [[ 297 323 ]] #1
 323  SqrtD  === 322 432  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 324  StoreD  === 342 340 325 332  [[ 340 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 325  AddP  === _ 64 326 162  [[ 324 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 326  AddP  === _ 64 64 331  [[ 325 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 327  Bool  === _ 328  [[ 343 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 328  CmpI  === _ 335 370  [[ 327 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 329  Bool  === _ 330  [[ 341 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 330  CmpU  === _ 338 135  [[ 329 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 331  LShiftL  === _ 336 166  [[ 326 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 332  AddD  === _ 206 345  [[ 324 313 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 333  SqrtD  === 344 334  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 334  ConvI2D  === _ 335  [[ 333 368 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 335  AddI  === _ 338 78  [[ 328 334 338 358 364 243 391 400 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 336  ConvI2L  === _ 337  [[ 331 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 337  CastII  === 342 338  [[ 336 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 338  Phi  === 339 36 335  [[ 330 335 337 314 ]]  #int #tripcount !orig=243,[233]
 339  CountedLoop  === 339 220 344  [[ 338 339 340 341 345 ]] inner stride: 1 pre of N261 !orig=261,[224],[198]
 340  Phi  === 339 7 324  [[ 324 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 341  RangeCheck  === 339 329  [[ 342 349 ]] P=0.999999, C=-1.000000 !orig=[221],151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 342  IfTrue  === 341  [[ 324 337 343 ]] #1 !orig=[222],152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 343  CountedLoopEnd  === 342 327  [[ 344 362 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 344  IfTrue  === 343  [[ 333 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 345  Phi  === 339 214 333  [[ 332 ]]  #double !orig=241,232
 346  IfFalse  === 366  [[ 352 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 349  IfFalse  === 341  [[ 308 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 352  Region  === 352 346 353  [[ 352 321 354 358 ]]  !orig=[317]
 353  IfFalse  === 258  [[ 352 ]] #0 !orig=[317]
 354  Phi  === 352 324 201  [[ 298 312 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 358  Phi  === 352 335 211  [[ 296 318 432 ]]  #int !orig=[431],[357]
 362  IfFalse  === 343  [[ 366 ]] #0
 363  OpaqueZeroTripGuard  === _ 383  [[ 364 ]] 
 364  CmpI  === _ 335 363  [[ 365 ]] 
 365  Bool  === _ 364  [[ 366 ]] [lt]
 366  If  === 362 365  [[ 346 367 ]] P=0.999999, C=-1.000000
 367  IfTrue  === 366  [[ 395 368 ]] #1
 368  SqrtD  === 367 334  [[ 241 ]]  !orig=333,145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 369  AddI  === _ 36 78  [[ 384 ]] 
 370  Opaque1  === _ 428 135  [[ 328 ]] 
 371  ConL  === 0  [[ 388 ]]  #long:0
 377  ConvI2L  === _ 135  [[ 383 ]]  #long:0..maxint !orig=[376]
 383  ConvL2I  === _ 377  [[ 254 363 434 ]]  #int !orig=[429]
 384  ConvI2L  === _ 369  [[ 389 ]]  #long:minint..maxint:www
 387  ConL  === 0  [[ 388 ]]  #long:maxint
 388  MinL  === _ 371 387  [[ 389 ]] 
 389  MaxL  === _ 384 388  [[ 390 ]] 
 390  ConvL2I  === _ 389  [[ 428 ]]  #int:>=min+1:www
 391  OpaqueLoopInit  === _ 335  [[ 408 436 ]] 
 392  CmpU  === _ 434 135  [[ 393 ]] 
 393  Bool  === _ 392  [[ 394 ]] [lt]
 394  OpaqueInitializedAssertionPredicate  === _ 393  [[ 395 ]] 
 395  RangeCheck  === 367 394  [[ 396 397 ]] P=0.999999, C=-1.000000
 396  IfFalse  === 395  [[ 399 ]] #0
 397  IfTrue  === 395  [[ 403 ]] #1
 399  Halt  === 396 1 1 8 1  [[ 0 ]] 
 400  CmpU  === _ 335 135  [[ 401 ]] 
 401  Bool  === _ 400  [[ 402 ]] [lt]
 402  OpaqueInitializedAssertionPredicate  === _ 401  [[ 403 ]] 
 403  RangeCheck  === 397 402  [[ 404 405 ]] P=0.999999, C=-1.000000
 404  IfFalse  === 403  [[ 407 ]] #0
 405  IfTrue  === 403  [[ 411 ]] #1
 407  Halt  === 404 1 1 8 1  [[ 0 ]] 
 408  CmpU  === _ 391 135  [[ 409 ]] 
 409  Bool  === _ 408  [[ 410 ]] [lt]
 410  Opaque4  === _ 409 78  [[ 411 ]] 
 411  RangeCheck  === 405 410  [[ 412 413 ]] P=0.999999, C=-1.000000
 412  IfFalse  === 411  [[ 415 ]] #0
 413  IfTrue  === 411  [[ 423 ]] #1
 415  Halt  === 412 1 1 8 1  [[ 0 ]] 
 416  OpaqueLoopStride  === _ 78  [[ 436 ]] 
 418  AddI  === _ 436 433  [[ 420 ]]  !orig=[419]
 420  CmpU  === _ 418 135  [[ 421 ]] 
 421  Bool  === _ 420  [[ 422 ]] [lt]
 422  Opaque4  === _ 421 78  [[ 423 ]] 
 423  RangeCheck  === 413 422  [[ 424 425 ]] P=0.999999, C=-1.000000
 424  IfFalse  === 423  [[ 427 ]] #0
 425  IfTrue  === 423  [[ 260 ]] #1
 427  Halt  === 424 1 1 8 1  [[ 0 ]] 
 428  MinI  === _ 390 135  [[ 370 ]] 
 432  ConvI2D  === _ 358  [[ 323 ]]  #double !orig=[357]
 433  ConI  === 0  [[ 434 418 ]]  #int:-1
 434  AddI  === _ 383 433  [[ 392 ]]  !orig=[430],[374]
 436  AddI  === _ 391 416  [[ 418 ]]  !orig=[435],[417]
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 179 161 399 407 415 427  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 371 372 373 380 387 433 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 340 81 16 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 427 415 407 399 ]] FramePtr !orig=[426] !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 338 84 369 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  47  ConP  === 0  [[ 48 84 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !orig=[193] !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 84 ]] #0 !orig=[276],[195] !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 202 157 157 203 203 262 134 134 283 284 284 325 326 326 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !orig=281,[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 293 335 369 410 416 422 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 51 6 81 8 9 (83 47 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 64 64 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 428 408 208 286 288 319 370 330 420 400 377 392 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 316  [[ 157 ]]  { N40:rawptr:BotPTR - - N316:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 308 6 153 8 9 (156 64 32 1 314 1 1 1 1 64 314 313 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 283 325 ]]  #long:16
 166  ConI  === 0  [[ 204 289 331 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 219 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 ]]  #int:0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 261 237 202 205  [[ 200 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 64 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 64 64 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 206 241  [[ 201 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 290 332 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 211  AddI  === _ 243 78  [[ 144 262 254 243 358 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 261 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 186 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 310  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 236  Phi  === 226 7 312  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 324 201  [[ 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 368 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 335 211  [[ 211 213 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 383  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 261 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 353 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 425 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 256 237 213 201 ]] inner stride: 1 main of N261 strip mined !orig=[224],[198] !jvms: loop_invariant::micro @ bci:28 (line 9)
 262  SafePoint  === 257 1 200 1 1 263 64 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 282  StoreD  === 300 298 283 290  [[ 298 312 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 283  AddP  === _ 64 284 162  [[ 282 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 284  AddP  === _ 64 64 289  [[ 283 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 285  Bool  === _ 286  [[ 301 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 286  CmpI  === _ 293 135  [[ 285 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 287  Bool  === _ 288  [[ 299 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 288  CmpU  === _ 296 135  [[ 287 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 289  LShiftL  === _ 294 166  [[ 284 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 290  AddD  === _ 206 303  [[ 282 313 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 291  SqrtD  === 302 292  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 292  ConvI2D  === _ 293  [[ 291 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 293  AddI  === _ 296 78  [[ 286 292 296 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 294  ConvI2L  === _ 295  [[ 289 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 295  CastII  === 300 296  [[ 294 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 296  Phi  === 297 358 293  [[ 288 293 295 314 ]]  #int #tripcount !orig=243,[233]
 297  CountedLoop  === 297 322 302  [[ 296 297 298 299 303 ]] inner stride: 1 post of N261 !orig=261,[224],[198]
 298  Phi  === 297 354 282  [[ 282 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 299  RangeCheck  === 297 287  [[ 300 307 ]] P=0.999999, C=-1.000000 !orig=[221],151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 300  IfTrue  === 299  [[ 282 295 301 ]] #1 !orig=[222],152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 301  CountedLoopEnd  === 300 285  [[ 302 304 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 302  IfTrue  === 301  [[ 291 297 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 303  Phi  === 297 323 291  [[ 290 ]]  #double !orig=241,232
 304  IfFalse  === 301  [[ 310 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 307  IfFalse  === 299  [[ 308 ]] #0 !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 308  Region  === 308 307 349  [[ 308 157 313 314 316 ]]  !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 310  Region  === 310 304 311  [[ 310 226 312 ]]  !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 311  IfFalse  === 321  [[ 310 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 312  Phi  === 310 282 354  [[ 236 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 313  Phi  === 308 290 332  [[ 157 ]]  #double
 314  Phi  === 308 296 338  [[ 157 157 ]]  #int
 316  Phi  === 308 298 340  [[ 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 318  OpaqueZeroTripGuard  === _ 358  [[ 319 ]] 
 319  CmpI  === _ 318 135  [[ 320 ]] 
 320  Bool  === _ 319  [[ 321 ]] [lt]
 321  If  === 352 320  [[ 311 322 ]] P=0.500000, C=-1.000000
 322  IfTrue  === 321  [[ 297 323 ]] #1
 323  SqrtD  === 322 432  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 324  StoreD  === 342 340 325 332  [[ 340 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 325  AddP  === _ 64 326 162  [[ 324 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 326  AddP  === _ 64 64 331  [[ 325 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 327  Bool  === _ 328  [[ 343 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 328  CmpI  === _ 335 370  [[ 327 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 329  Bool  === _ 330  [[ 341 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 330  CmpU  === _ 338 135  [[ 329 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 331  LShiftL  === _ 336 166  [[ 326 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 332  AddD  === _ 206 345  [[ 324 313 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 333  SqrtD  === 344 334  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 334  ConvI2D  === _ 335  [[ 333 368 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 335  AddI  === _ 338 78  [[ 328 334 338 358 364 243 391 400 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 336  ConvI2L  === _ 337  [[ 331 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 337  CastII  === 342 338  [[ 336 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 338  Phi  === 339 36 335  [[ 330 335 337 314 ]]  #int #tripcount !orig=243,[233]
 339  CountedLoop  === 339 220 344  [[ 338 339 340 341 345 ]] inner stride: 1 pre of N261 !orig=261,[224],[198]
 340  Phi  === 339 7 324  [[ 324 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 341  RangeCheck  === 339 329  [[ 342 349 ]] P=0.999999, C=-1.000000 !orig=[221],151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 342  IfTrue  === 341  [[ 324 337 343 ]] #1 !orig=[222],152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 343  CountedLoopEnd  === 342 327  [[ 344 362 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 344  IfTrue  === 343  [[ 333 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 345  Phi  === 339 214 333  [[ 332 ]]  #double !orig=241,232
 346  IfFalse  === 366  [[ 352 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 349  IfFalse  === 341  [[ 308 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 352  Region  === 352 346 353  [[ 352 321 354 358 ]]  !orig=[317]
 353  IfFalse  === 258  [[ 352 ]] #0 !orig=[317]
 354  Phi  === 352 324 201  [[ 298 312 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 358  Phi  === 352 335 211  [[ 296 318 432 ]]  #int !orig=[431],[357]
 362  IfFalse  === 343  [[ 366 ]] #0
 363  OpaqueZeroTripGuard  === _ 383  [[ 364 ]] 
 364  CmpI  === _ 335 363  [[ 365 ]] 
 365  Bool  === _ 364  [[ 366 ]] [lt]
 366  If  === 362 365  [[ 346 367 ]] P=0.999999, C=-1.000000
 367  IfTrue  === 366  [[ 395 368 ]] #1
 368  SqrtD  === 367 334  [[ 241 ]]  !orig=333,145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 369  AddI  === _ 36 78  [[ 384 ]] 
 370  Opaque1  === _ 428 135  [[ 328 ]] 
 371  ConL  === 0  [[ 389 ]]  #long:0
 377  ConvI2L  === _ 135  [[ 383 ]]  #long:0..maxint !orig=[376]
 383  ConvL2I  === _ 377  [[ 254 363 434 ]]  #int !orig=[429]
 384  ConvI2L  === _ 369  [[ 389 ]]  #long:minint..maxint:www
 389  MaxL  === _ 384 371  [[ 390 ]] 
 390  ConvL2I  === _ 389  [[ 428 ]]  #int:>=min+1:www
 391  OpaqueLoopInit  === _ 335  [[ 408 436 ]] 
 392  CmpU  === _ 434 135  [[ 393 ]] 
 393  Bool  === _ 392  [[ 394 ]] [lt]
 394  OpaqueInitializedAssertionPredicate  === _ 393  [[ 395 ]] 
 395  RangeCheck  === 367 394  [[ 396 397 ]] P=0.999999, C=-1.000000
 396  IfFalse  === 395  [[ 399 ]] #0
 397  IfTrue  === 395  [[ 403 ]] #1
 399  Halt  === 396 1 1 8 1  [[ 0 ]] 
 400  CmpU  === _ 335 135  [[ 401 ]] 
 401  Bool  === _ 400  [[ 402 ]] [lt]
 402  OpaqueInitializedAssertionPredicate  === _ 401  [[ 403 ]] 
 403  RangeCheck  === 397 402  [[ 404 405 ]] P=0.999999, C=-1.000000
 404  IfFalse  === 403  [[ 407 ]] #0
 405  IfTrue  === 403  [[ 411 ]] #1
 407  Halt  === 404 1 1 8 1  [[ 0 ]] 
 408  CmpU  === _ 391 135  [[ 409 ]] 
 409  Bool  === _ 408  [[ 410 ]] [lt]
 410  Opaque4  === _ 409 78  [[ 411 ]] 
 411  RangeCheck  === 405 410  [[ 412 413 ]] P=0.999999, C=-1.000000
 412  IfFalse  === 411  [[ 415 ]] #0
 413  IfTrue  === 411  [[ 423 ]] #1
 415  Halt  === 412 1 1 8 1  [[ 0 ]] 
 416  OpaqueLoopStride  === _ 78  [[ 436 ]] 
 418  AddI  === _ 436 433  [[ 420 ]]  !orig=[419]
 420  CmpU  === _ 418 135  [[ 421 ]] 
 421  Bool  === _ 420  [[ 422 ]] [lt]
 422  Opaque4  === _ 421 78  [[ 423 ]] 
 423  RangeCheck  === 413 422  [[ 424 425 ]] P=0.999999, C=-1.000000
 424  IfFalse  === 423  [[ 427 ]] #0
 425  IfTrue  === 423  [[ 260 ]] #1
 427  Halt  === 424 1 1 8 1  [[ 0 ]] 
 428  MinI  === _ 390 135  [[ 370 ]] 
 432  ConvI2D  === _ 358  [[ 323 ]]  #double !orig=[357]
 433  ConI  === 0  [[ 434 418 ]]  #int:-1
 434  AddI  === _ 383 433  [[ 392 ]]  !orig=[430],[374]
 436  AddI  === _ 391 416  [[ 418 ]]  !orig=[435],[417]
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 179 161 399 407 415 427  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 371 372 373 380 387 433 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 340 81 16 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 427 415 407 399 ]] FramePtr !orig=[426] !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 338 84 369 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  47  ConP  === 0  [[ 48 84 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !orig=[193] !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 84 ]] #0 !orig=[276],[195] !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 202 157 157 203 203 262 134 134 283 284 284 325 326 326 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !orig=281,[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 293 335 369 410 416 422 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 51 6 81 8 9 (83 47 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 64 64 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 428 408 208 286 288 319 370 330 420 400 254 392 434 363 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !orig=[383],[429] !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 316  [[ 157 ]]  { N40:rawptr:BotPTR - - N316:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 308 6 153 8 9 (156 64 32 1 314 1 1 1 1 64 314 313 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 283 325 ]]  #long:16
 166  ConI  === 0  [[ 204 289 331 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 219 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 ]]  #int:0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 261 237 202 205  [[ 200 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 64 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 64 64 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 206 241  [[ 201 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 290 332 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 211  AddI  === _ 243 78  [[ 144 262 254 243 358 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 261 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 186 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 310  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 236  Phi  === 226 7 312  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 324 201  [[ 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 368 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 335 211  [[ 211 213 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 135  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 261 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 353 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 425 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 256 237 213 201 ]] inner stride: 1 main of N261 strip mined !orig=[224],[198] !jvms: loop_invariant::micro @ bci:28 (line 9)
 262  SafePoint  === 257 1 200 1 1 263 64 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 282  StoreD  === 300 298 283 290  [[ 298 312 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 283  AddP  === _ 64 284 162  [[ 282 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 284  AddP  === _ 64 64 289  [[ 283 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 285  Bool  === _ 286  [[ 301 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 286  CmpI  === _ 293 135  [[ 285 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 287  Bool  === _ 288  [[ 299 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 288  CmpU  === _ 296 135  [[ 287 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 289  LShiftL  === _ 294 166  [[ 284 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 290  AddD  === _ 206 303  [[ 282 313 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 291  SqrtD  === 302 292  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 292  ConvI2D  === _ 293  [[ 291 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 293  AddI  === _ 296 78  [[ 286 292 296 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 294  ConvI2L  === _ 295  [[ 289 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 295  CastII  === 300 296  [[ 294 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 296  Phi  === 297 358 293  [[ 288 293 295 314 ]]  #int #tripcount !orig=243,[233]
 297  CountedLoop  === 297 322 302  [[ 296 297 298 299 303 ]] inner stride: 1 post of N261 !orig=261,[224],[198]
 298  Phi  === 297 354 282  [[ 282 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 299  RangeCheck  === 297 287  [[ 300 307 ]] P=0.999999, C=-1.000000 !orig=[221],151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 300  IfTrue  === 299  [[ 282 295 301 ]] #1 !orig=[222],152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 301  CountedLoopEnd  === 300 285  [[ 302 304 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 302  IfTrue  === 301  [[ 291 297 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 303  Phi  === 297 323 291  [[ 290 ]]  #double !orig=241,232
 304  IfFalse  === 301  [[ 310 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 307  IfFalse  === 299  [[ 308 ]] #0 !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 308  Region  === 308 307 349  [[ 308 157 313 314 316 ]]  !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 310  Region  === 310 304 311  [[ 310 226 312 ]]  !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 311  IfFalse  === 321  [[ 310 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 312  Phi  === 310 282 354  [[ 236 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 313  Phi  === 308 290 332  [[ 157 ]]  #double
 314  Phi  === 308 296 338  [[ 157 157 ]]  #int
 316  Phi  === 308 298 340  [[ 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 318  OpaqueZeroTripGuard  === _ 358  [[ 319 ]] 
 319  CmpI  === _ 318 135  [[ 320 ]] 
 320  Bool  === _ 319  [[ 321 ]] [lt]
 321  If  === 352 320  [[ 311 322 ]] P=0.500000, C=-1.000000
 322  IfTrue  === 321  [[ 297 323 ]] #1
 323  SqrtD  === 322 432  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 324  StoreD  === 342 340 325 332  [[ 340 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 325  AddP  === _ 64 326 162  [[ 324 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 326  AddP  === _ 64 64 331  [[ 325 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 327  Bool  === _ 328  [[ 343 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 328  CmpI  === _ 335 370  [[ 327 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 329  Bool  === _ 330  [[ 341 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 330  CmpU  === _ 338 135  [[ 329 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 331  LShiftL  === _ 336 166  [[ 326 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 332  AddD  === _ 206 345  [[ 324 313 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 333  SqrtD  === 344 334  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 334  ConvI2D  === _ 335  [[ 333 368 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 335  AddI  === _ 338 78  [[ 328 334 338 358 364 243 391 400 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 336  ConvI2L  === _ 337  [[ 331 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 337  CastII  === 342 338  [[ 336 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 338  Phi  === 339 36 335  [[ 330 335 337 314 ]]  #int #tripcount !orig=243,[233]
 339  CountedLoop  === 339 220 344  [[ 338 339 340 341 345 ]] inner stride: 1 pre of N261 !orig=261,[224],[198]
 340  Phi  === 339 7 324  [[ 324 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 341  RangeCheck  === 339 329  [[ 342 349 ]] P=0.999999, C=-1.000000 !orig=[221],151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 342  IfTrue  === 341  [[ 324 337 343 ]] #1 !orig=[222],152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 343  CountedLoopEnd  === 342 327  [[ 344 362 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 344  IfTrue  === 343  [[ 333 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 345  Phi  === 339 214 333  [[ 332 ]]  #double !orig=241,232
 346  IfFalse  === 366  [[ 352 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 349  IfFalse  === 341  [[ 308 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 352  Region  === 352 346 353  [[ 352 321 354 358 ]]  !orig=[317]
 353  IfFalse  === 258  [[ 352 ]] #0 !orig=[317]
 354  Phi  === 352 324 201  [[ 298 312 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 358  Phi  === 352 335 211  [[ 296 318 432 ]]  #int !orig=[431],[357]
 362  IfFalse  === 343  [[ 366 ]] #0
 363  OpaqueZeroTripGuard  === _ 135  [[ 364 ]] 
 364  CmpI  === _ 335 363  [[ 365 ]] 
 365  Bool  === _ 364  [[ 366 ]] [lt]
 366  If  === 362 365  [[ 346 367 ]] P=0.999999, C=-1.000000
 367  IfTrue  === 366  [[ 395 368 ]] #1
 368  SqrtD  === 367 334  [[ 241 ]]  !orig=333,145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 369  AddI  === _ 36 78  [[ 384 ]] 
 370  Opaque1  === _ 428 135  [[ 328 ]] 
 371  ConL  === 0  [[ 389 ]]  #long:0
 384  ConvI2L  === _ 369  [[ 389 ]]  #long:minint..maxint:www
 389  MaxL  === _ 384 371  [[ 390 ]] 
 390  ConvL2I  === _ 389  [[ 428 ]]  #int:>=min+1:www
 391  OpaqueLoopInit  === _ 335  [[ 408 436 ]] 
 392  CmpU  === _ 434 135  [[ 393 ]] 
 393  Bool  === _ 392  [[ 394 ]] [lt]
 394  OpaqueInitializedAssertionPredicate  === _ 393  [[ 395 ]] 
 395  RangeCheck  === 367 394  [[ 396 397 ]] P=0.999999, C=-1.000000
 396  IfFalse  === 395  [[ 399 ]] #0
 397  IfTrue  === 395  [[ 403 ]] #1
 399  Halt  === 396 1 1 8 1  [[ 0 ]] 
 400  CmpU  === _ 335 135  [[ 401 ]] 
 401  Bool  === _ 400  [[ 402 ]] [lt]
 402  OpaqueInitializedAssertionPredicate  === _ 401  [[ 403 ]] 
 403  RangeCheck  === 397 402  [[ 404 405 ]] P=0.999999, C=-1.000000
 404  IfFalse  === 403  [[ 407 ]] #0
 405  IfTrue  === 403  [[ 411 ]] #1
 407  Halt  === 404 1 1 8 1  [[ 0 ]] 
 408  CmpU  === _ 391 135  [[ 409 ]] 
 409  Bool  === _ 408  [[ 410 ]] [lt]
 410  Opaque4  === _ 409 78  [[ 411 ]] 
 411  RangeCheck  === 405 410  [[ 412 413 ]] P=0.999999, C=-1.000000
 412  IfFalse  === 411  [[ 415 ]] #0
 413  IfTrue  === 411  [[ 423 ]] #1
 415  Halt  === 412 1 1 8 1  [[ 0 ]] 
 416  OpaqueLoopStride  === _ 78  [[ 436 ]] 
 418  AddI  === _ 436 433  [[ 420 ]]  !orig=[419]
 420  CmpU  === _ 418 135  [[ 421 ]] 
 421  Bool  === _ 420  [[ 422 ]] [lt]
 422  Opaque4  === _ 421 78  [[ 423 ]] 
 423  RangeCheck  === 413 422  [[ 424 425 ]] P=0.999999, C=-1.000000
 424  IfFalse  === 423  [[ 427 ]] #0
 425  IfTrue  === 423  [[ 260 ]] #1
 427  Halt  === 424 1 1 8 1  [[ 0 ]] 
 428  MinI  === _ 390 135  [[ 370 ]] 
 432  ConvI2D  === _ 358  [[ 323 ]]  #double !orig=[357]
 433  ConI  === 0  [[ 434 418 ]]  #int:-1
 434  AddI  === _ 135 433  [[ 392 ]]  !orig=[430],[374]
 436  AddI  === _ 391 416  [[ 418 ]]  !orig=[435],[417]
[res] [3.1622776601683795, 4.16227766016838, 4.576491222541475, 4.894328467737257, 5.16227766016838, 5.39834563766817, 5.611767402951557, 5.80802897123297, 5.99070478491457, 6.16227766016838, 6.324555320336759, 6.47890245052378, 6.6263792753061335, 6.767828935632369, 6.903935046942321, 7.035261006375796]
AFTER: AFTER_ITER_GVN_STEP
   0  Root  === 0 70 88 179 161 399 407 415 427  [[ 0 1 3 19 174 166 162 28 156 31 133 35 44 47 190 65 78 83 371 372 373 380 387 433 ]] 
   1  Con  === 0  [[ ]]  #top
   3  StartOSR  === 3 0  [[ 3 5 6 7 8 9 10 ]]  #{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address, 5:rawptr:BotPTR}
   5  Parm  === 3  [[ 36 37 25 32 ]] Control !jvms: loop_invariant::micro @ bci:2 (line 6)
   6  Parm  === 3  [[ 179 66 157 84 ]] I_O !orig=[74] !jvms: loop_invariant::micro @ bci:2 (line 6)
   7  Parm  === 3  [[ 135 236 41 25 32 36 37 153 200 340 81 16 ]] Memory  Memory: @BotPTR *+bot, idx=Bot; !orig=[75],[181],[114] !jvms: loop_invariant::micro @ bci:2 (line 6)
   8  Parm  === 3  [[ 179 161 157 37 70 66 84 88 427 415 407 399 ]] FramePtr !orig=[426] !jvms: loop_invariant::micro @ bci:2 (line 6)
   9  Parm  === 3  [[ 179 157 84 66 ]] ReturnAdr !jvms: loop_invariant::micro @ bci:2 (line 6)
  10  Parm  === 3  [[ 37 21 21 34 34 30 30 ]] Parm0: rawptr:BotPTR !jvms: loop_invariant::micro @ bci:2 (line 6)
  16  MergeMem  === _ 1 7 40 1 1 236  [[ 179 ]]  { N40:rawptr:BotPTR - - N236:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot;
  19  ConL  === 0  [[ 21 ]]  #long:56
  21  AddP  === _ 10 10 19  [[ 25 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  25  LoadP  === 5 7 21  [[ 53 66 48 ]]  @rawptr:BotPTR, idx=Raw; #java/lang/Object * (does not depend only on test, raw access)  Oop:java/lang/Object * !jvms: loop_invariant::micro @ bci:2 (line 6)
  28  ConL  === 0  [[ 175 ]]  #long:48
  30  AddP  === _ 10 10 31  [[ 32 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  31  ConL  === 0  [[ 30 ]]  #long:40
  32  LoadD  === 5 7 30  [[ 66 157 206 84 262 ]]  @rawptr:BotPTR, idx=Raw; #double (does not depend only on test, raw access) !jvms: loop_invariant::micro @ bci:2 (line 6)
  34  AddP  === _ 10 10 35  [[ 36 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  35  ConL  === 0  [[ 34 ]]  #long:32
  36  LoadI  === 5 7 34  [[ 66 208 215 338 84 369 ]]  @rawptr:BotPTR, idx=Raw; #int (does not depend only on test, raw access) !orig=[77] !jvms: loop_invariant::micro @ bci:2 (line 6)
  37  CallLeaf  === 5 1 7 8 1 (10 ) [[ 38 40 ]] # OSR_migration_end void ( rawptr:BotPTR ) !jvms: loop_invariant::micro @ bci:2 (line 6)
  38  Proj  === 37  [[ 50 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  40  Proj  === 37  [[ 16 41 81 200 263 153 ]] #2  Memory: @rawptr:BotPTR, idx=Raw; !orig=[76],[115] !jvms: loop_invariant::micro @ bci:2 (line 6)
  41  MergeMem  === _ 1 7 40  [[ 66 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  44  ConP  === 0  [[ 54 ]]  #precise [double (java/lang/Cloneable,java/io/Serializable): :Constant:exact *
  47  ConP  === 0  [[ 48 84 ]]  #null
  48  CmpP  === _ 25 47  [[ 49 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  49  Bool  === _ 48  [[ 50 ]] [ne] !jvms: loop_invariant::micro @ bci:2 (line 6)
  50  If  === 38 49  [[ 51 52 ]] P=0.999000, C=-1.000000 !orig=[193] !jvms: loop_invariant::micro @ bci:2 (line 6)
  51  IfFalse  === 50  [[ 84 ]] #0 !orig=[276],[195] !jvms: loop_invariant::micro @ bci:2 (line 6)
  52  IfTrue  === 50  [[ 185 53 ]] #1 !jvms: loop_invariant::micro @ bci:2 (line 6)
  53  CastPP  === 52 25  [[ 54 64 ]]  #java/lang/Object:NotNull *  Oop:java/lang/Object:NotNull * !jvms: loop_invariant::micro @ bci:2 (line 6)
  54  SubTypeCheck  === _ 53 44  [[ 184 ]]  profiled at: loop_invariant::micro:2 !jvms: loop_invariant::micro @ bci:2 (line 6)
  64  CheckCastPP  === 186 53  [[ 202 157 157 203 203 262 134 134 283 284 284 325 326 326 ]]  #double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact * !orig=281,[46] !jvms: loop_invariant::micro @ bci:2 (line 6)
  65  ConI  === 0  [[ 66 ]]  #int:-115
  66  CallStaticJava  === 187 6 41 8 9 (65 25 32 1 36 1 1 1 1 ) [[ 67 ]] # Static uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  67  Proj  === 66  [[ 70 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  70  Halt  === 67 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
  78  ConI  === 0  [[ 211 293 335 369 410 416 422 ]]  #int:1
  81  MergeMem  === _ 1 7 40  [[ 84 ]]  { N40:rawptr:BotPTR }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:2 (line 6)
  83  ConI  === 0  [[ 84 ]]  #int:-138
  84  CallStaticJava  === 51 6 81 8 9 (83 47 32 1 36 1 1 1 1 ) [[ 85 ]] # Static uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:2 (line 6) !jvms: loop_invariant::micro @ bci:2 (line 6)
  85  Proj  === 84  [[ 88 ]] #0 !jvms: loop_invariant::micro @ bci:2 (line 6)
  88  Halt  === 85 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:2 (line 6)
 133  ConL  === 0  [[ 134 ]]  #long:12
 134  AddP  === _ 64 64 133  [[ 135 ]]  !jvms: loop_invariant::micro @ bci:4 (line 6)
 135  LoadRange  === _ 7 134  [[ 428 408 208 286 288 319 370 330 420 400 254 392 434 363 ]]  @bottom[int:>=0] (java/lang/Cloneable,java/io/Serializable)+12 * [narrow], idx=5; #int:>=0 !orig=[383],[429] !jvms: loop_invariant::micro @ bci:4 (line 6)
 139  IfTrue  === 256  [[ 261 145 ]] #1 !jvms: loop_invariant::micro @ bci:5 (line 6)
 144  ConvI2D  === _ 211  [[ 145 ]]  #double !jvms: loop_invariant::micro @ bci:15 (line 8)
 145  SqrtD  === 139 144  [[ 241 ]]  !jvms: loop_invariant::micro @ bci:16 (line 8)
 153  MergeMem  === _ 1 7 40 1 1 316  [[ 157 ]]  { N40:rawptr:BotPTR - - N316:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !jvms: loop_invariant::micro @ bci:28 (line 9)
 156  ConI  === 0  [[ 157 ]]  #int:-28
 157  CallStaticJava  === 308 6 153 8 9 (156 64 32 1 314 1 1 1 1 64 314 313 1 ) [[ 158 ]] # Static uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')  void ( int ) C=0.000100 loop_invariant::micro @ bci:28 (line 9) !jvms: loop_invariant::micro @ bci:28 (line 9)
 158  Proj  === 157  [[ 161 ]] #0 !jvms: loop_invariant::micro @ bci:28 (line 9)
 161  Halt  === 158 1 1 8 1  [[ 0 ]]  !jvms: loop_invariant::micro @ bci:28 (line 9)
 162  ConL  === 0  [[ 202 283 325 ]]  #long:16
 166  ConI  === 0  [[ 204 289 331 ]]  #int:3
 174  ThreadLocal  === 0  [[ 175 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 175  AddP  === _ 1 174 28  [[ 263 ]]  !jvms: loop_invariant::micro @ bci:32 (line 6)
 179  Return  === 226 6 16 8 9  [[ 0 ]] 
 184  Bool  === _ 54  [[ 185 ]] [ne]
 185  If  === 52 184  [[ 186 187 ]] P=0.100000, C=-1.000000 !orig=[61] !jvms: loop_invariant::micro @ bci:2 (line 6)
 186  IfFalse  === 185  [[ 64 219 ]] #0 !orig=[62] !jvms: loop_invariant::micro @ bci:2 (line 6)
 187  IfTrue  === 185  [[ 66 ]] #1 !orig=[63] !jvms: loop_invariant::micro @ bci:2 (line 6)
 190  ConI  === 0  [[ 258 ]]  #int:0
 200  MergeMem  === _ 1 7 40 1 1 201  [[ 262 ]]  { N40:rawptr:BotPTR - - N201:double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any * }  Memory: @BotPTR *+bot, idx=Bot; !orig=173 !jvms: loop_invariant::micro @ bci:32 (line 6)
 201  StoreD  === 261 237 202 205  [[ 200 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 202  AddP  === _ 64 203 162  [[ 201 ]]  !orig=168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 203  AddP  === _ 64 64 204  [[ 202 ]]  !orig=169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 204  LShiftL  === _ 212 166  [[ 203 ]]  !orig=167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 205  AddD  === _ 206 241  [[ 201 ]]  !orig=146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 206  SqrtD  === 220 32  [[ 205 290 332 ]]  !orig=[143] !jvms: loop_invariant::micro @ bci:9 (line 7)
 207  Bool  === _ 208  [[ 219 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 208  CmpI  === _ 36 135  [[ 207 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 211  AddI  === _ 243 78  [[ 144 262 254 243 358 ]]  !orig=171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 212  ConvI2L  === _ 213  [[ 204 ]]  #long:0..maxint-1:www !orig=165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 213  CastII  === 261 243  [[ 212 ]]  #int:0..max-1:www range check dependency !orig=164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 214  SqrtD  === 220 215  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 215  ConvI2D  === _ 36  [[ 214 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 219  If  === 186 207  [[ 220 225 ]] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 220  IfTrue  === 219  [[ 206 214 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 225  IfFalse  === 219  [[ 226 ]] #0 !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 226  Region  === 226 225 310  [[ 226 179 236 ]]  !orig=[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 236  Phi  === 226 7 312  [[ 16 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 237  Phi  === 261 324 201  [[ 201 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=235
 241  Phi  === 261 368 145  [[ 205 ]]  #double !orig=232
 243  Phi  === 261 335 211  [[ 211 213 ]]  #int #tripcount !orig=[233]
 254  CmpI  === _ 211 135  [[ 255 ]]  !orig=[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 255  Bool  === _ 254  [[ 256 ]] [lt] !orig=[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 256  CountedLoopEnd  === 261 255  [[ 257 139 ]] [lt] P=0.999026, C=211589.000000 !orig=[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 257  IfFalse  === 256  [[ 262 263 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 258  OuterStripMinedLoopEnd  === 262 190  [[ 259 353 ]] P=0.999026, C=211589.000000
 259  IfTrue  === 258  [[ 260 ]] #1
 260  OuterStripMinedLoop  === 260 425 259  [[ 260 261 ]] 
 261  CountedLoop  === 261 260 139  [[ 261 243 241 256 237 213 201 ]] inner stride: 1 main of N261 strip mined !orig=[224],[198] !jvms: loop_invariant::micro @ bci:28 (line 9)
 262  SafePoint  === 257 1 200 1 1 263 64 32 1 211 1 1 1 1  [[ 258 ]]  SafePoint  !orig=217,172 !jvms: loop_invariant::micro @ bci:32 (line 6)
 263  LoadP  === 257 40 175  [[ 262 ]]  @rawptr:BotPTR, idx=Raw; #rawptr:BotPTR (does not depend only on test, raw access) !orig=[199],176 !jvms: loop_invariant::micro @ bci:32 (line 6)
 282  StoreD  === 300 298 283 290  [[ 298 312 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 283  AddP  === _ 64 284 162  [[ 282 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 284  AddP  === _ 64 64 289  [[ 283 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 285  Bool  === _ 286  [[ 301 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 286  CmpI  === _ 293 135  [[ 285 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 287  Bool  === _ 288  [[ 299 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 288  CmpU  === _ 296 135  [[ 287 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 289  LShiftL  === _ 294 166  [[ 284 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 290  AddD  === _ 206 303  [[ 282 313 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 291  SqrtD  === 302 292  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 292  ConvI2D  === _ 293  [[ 291 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 293  AddI  === _ 296 78  [[ 286 292 296 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 294  ConvI2L  === _ 295  [[ 289 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 295  CastII  === 300 296  [[ 294 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 296  Phi  === 297 358 293  [[ 288 293 295 314 ]]  #int #tripcount !orig=243,[233]
 297  CountedLoop  === 297 322 302  [[ 296 297 298 299 303 ]] inner stride: 1 post of N261 !orig=261,[224],[198]
 298  Phi  === 297 354 282  [[ 282 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 299  RangeCheck  === 297 287  [[ 300 307 ]] P=0.999999, C=-1.000000 !orig=[221],151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 300  IfTrue  === 299  [[ 282 295 301 ]] #1 !orig=[222],152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 301  CountedLoopEnd  === 300 285  [[ 302 304 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 302  IfTrue  === 301  [[ 291 297 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 303  Phi  === 297 323 291  [[ 290 ]]  #double !orig=241,232
 304  IfFalse  === 301  [[ 310 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 307  IfFalse  === 299  [[ 308 ]] #0 !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 308  Region  === 308 307 349  [[ 308 157 313 314 316 ]]  !orig=[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 310  Region  === 310 304 311  [[ 310 226 312 ]]  !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 311  IfFalse  === 321  [[ 310 ]] #0 !orig=[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 312  Phi  === 310 282 354  [[ 236 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 313  Phi  === 308 290 332  [[ 157 ]]  #double
 314  Phi  === 308 296 338  [[ 157 157 ]]  #int
 316  Phi  === 308 298 340  [[ 153 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 318  OpaqueZeroTripGuard  === _ 358  [[ 319 ]] 
 319  CmpI  === _ 318 135  [[ 320 ]] 
 320  Bool  === _ 319  [[ 321 ]] [lt]
 321  If  === 352 320  [[ 311 322 ]] P=0.500000, C=-1.000000
 322  IfTrue  === 321  [[ 297 323 ]] #1
 323  SqrtD  === 322 432  [[ 303 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 324  StoreD  === 342 340 325 332  [[ 340 237 354 ]]  @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):NotNull:exact+any *, idx=6; !orig=201,170 !jvms: loop_invariant::micro @ bci:28 (line 9)
 325  AddP  === _ 64 326 162  [[ 324 ]]  !orig=202,168 !jvms: loop_invariant::micro @ bci:28 (line 9)
 326  AddP  === _ 64 64 331  [[ 325 ]]  !orig=203,169 !jvms: loop_invariant::micro @ bci:28 (line 9)
 327  Bool  === _ 328  [[ 343 ]] [lt] !orig=255,[137] !jvms: loop_invariant::micro @ bci:5 (line 6)
 328  CmpI  === _ 335 370  [[ 327 ]]  !orig=254,[136] !jvms: loop_invariant::micro @ bci:5 (line 6)
 329  Bool  === _ 330  [[ 341 ]] [lt] !orig=[209],150 !jvms: loop_invariant::micro @ bci:28 (line 9)
 330  CmpU  === _ 338 135  [[ 329 ]]  !orig=[210],149 !jvms: loop_invariant::micro @ bci:28 (line 9)
 331  LShiftL  === _ 336 166  [[ 326 ]]  !orig=204,167 !jvms: loop_invariant::micro @ bci:28 (line 9)
 332  AddD  === _ 206 345  [[ 324 313 ]]  !orig=205,146 !jvms: loop_invariant::micro @ bci:27 (line 9)
 333  SqrtD  === 344 334  [[ 345 ]]  !orig=145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 334  ConvI2D  === _ 335  [[ 333 368 ]]  #double !orig=144 !jvms: loop_invariant::micro @ bci:15 (line 8)
 335  AddI  === _ 338 78  [[ 328 334 338 358 364 243 391 400 ]]  !orig=211,171 !jvms: loop_invariant::micro @ bci:29 (line 6)
 336  ConvI2L  === _ 337  [[ 331 ]]  #long:0..maxint-1:www !orig=212,165 !jvms: loop_invariant::micro @ bci:28 (line 9)
 337  CastII  === 342 338  [[ 336 ]]  #int:0..max-1:www range check dependency !orig=213,164 !jvms: loop_invariant::micro @ bci:28 (line 9)
 338  Phi  === 339 36 335  [[ 330 335 337 314 ]]  #int #tripcount !orig=243,[233]
 339  CountedLoop  === 339 220 344  [[ 338 339 340 341 345 ]] inner stride: 1 pre of N261 !orig=261,[224],[198]
 340  Phi  === 339 7 324  [[ 324 316 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6; !orig=237,235
 341  RangeCheck  === 339 329  [[ 342 349 ]] P=0.999999, C=-1.000000 !orig=[221],151 !jvms: loop_invariant::micro @ bci:28 (line 9)
 342  IfTrue  === 341  [[ 324 337 343 ]] #1 !orig=[222],152 !jvms: loop_invariant::micro @ bci:28 (line 9)
 343  CountedLoopEnd  === 342 327  [[ 344 362 ]] [lt] P=0.500000, C=211589.000000 !orig=256,[138] !jvms: loop_invariant::micro @ bci:5 (line 6)
 344  IfTrue  === 343  [[ 333 339 ]] #1 !orig=139 !jvms: loop_invariant::micro @ bci:5 (line 6)
 345  Phi  === 339 214 333  [[ 332 ]]  #double !orig=241,232
 346  IfFalse  === 366  [[ 352 ]] #0 !orig=257,[227],[140] !jvms: loop_invariant::micro @ bci:5 (line 6)
 349  IfFalse  === 341  [[ 308 ]] #0 !orig=[309],[228],[155] !jvms: loop_invariant::micro @ bci:28 (line 9)
 352  Region  === 352 346 353  [[ 352 321 354 358 ]]  !orig=[317]
 353  IfFalse  === 258  [[ 352 ]] #0 !orig=[317]
 354  Phi  === 352 324 201  [[ 298 312 ]]  #memory  Memory: @double[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact+any *, idx=6;
 358  Phi  === 352 335 211  [[ 296 318 432 ]]  #int !orig=[431],[357]
 362  IfFalse  === 343  [[ 366 ]] #0
 363  OpaqueZeroTripGuard  === _ 135  [[ 364 ]] 
 364  CmpI  === _ 335 363  [[ 365 ]] 
 365  Bool  === _ 364  [[ 366 ]] [lt]
 366  If  === 362 365  [[ 346 367 ]] P=0.999999, C=-1.000000
 367  IfTrue  === 366  [[ 395 368 ]] #1
 368  SqrtD  === 367 334  [[ 241 ]]  !orig=333,145 !jvms: loop_invariant::micro @ bci:16 (line 8)
 369  AddI  === _ 36 78  [[ 384 ]] 
 370  Opaque1  === _ 428 135  [[ 328 ]] 
 371  ConL  === 0  [[ 389 ]]  #long:0
 384  ConvI2L  === _ 369  [[ 389 ]]  #long:minint..maxint:www
 389  MaxL  === _ 384 371  [[ 390 ]] 
 390  ConvL2I  === _ 389  [[ 428 ]]  #int:>=min+1:www
 391  OpaqueLoopInit  === _ 335  [[ 408 436 ]] 
 392  CmpU  === _ 434 135  [[ 393 ]] 
 393  Bool  === _ 392  [[ 394 ]] [lt]
 394  OpaqueInitializedAssertionPredicate  === _ 393  [[ 395 ]] 
 395  RangeCheck  === 367 394  [[ 396 397 ]] P=0.999999, C=-1.000000
 396  IfFalse  === 395  [[ 399 ]] #0
 397  IfTrue  === 395  [[ 403 ]] #1
 399  Halt  === 396 1 1 8 1  [[ 0 ]] 
 400  CmpU  === _ 335 135  [[ 401 ]] 
 401  Bool  === _ 400  [[ 402 ]] [lt]
 402  OpaqueInitializedAssertionPredicate  === _ 401  [[ 403 ]] 
 403  RangeCheck  === 397 402  [[ 404 405 ]] P=0.999999, C=-1.000000
 404  IfFalse  === 403  [[ 407 ]] #0
 405  IfTrue  === 403  [[ 411 ]] #1
 407  Halt  === 404 1 1 8 1  [[ 0 ]] 
 408  CmpU  === _ 391 135  [[ 409 ]] 
 409  Bool  === _ 408  [[ 410 ]] [lt]
 410  Opaque4  === _ 409 78  [[ 411 ]] 
 411  RangeCheck  === 405 410  [[ 412 413 ]] P=0.999999, C=-1.000000
 412  IfFalse  === 411  [[ 415 ]] #0
 413  IfTrue  === 411  [[ 423 ]] #1
 415  Halt  === 412 1 1 8 1  [[ 0 ]] 
 416  OpaqueLoopStride  === _ 78  [[ 436 ]] 
 418  AddI  === _ 436 433  [[ 420 ]]  !orig=[419]
 420  CmpU  === _ 418 135  [[ 421 ]] 
 421  Bool  === _ 420  [[ 422 ]] [lt]
 422  Opaque4  === _ 421 78  [[ 423 ]] 
 423  RangeCheck  === 413 422  [[ 424 425 ]] P=0.999999, C=-1.000000
 424  IfFalse  === 423  [[ 427 ]] #0
 425  IfTrue  === 423  [[ 260 ]] #1
 427  Halt  === 424 1 1 8 1  [[ 0 ]] 
 428  MinI  === _ 390 135  [[ 370 ]] 
 432  ConvI2D  === _ 358  [[ 323 ]]  #double !orig=[357]
 433  ConI  === 0  [[ 434 418 ]]  #int:-1
 434  AddI  === _ 135 433  [[ 392 ]]  !orig=[430],[374]
 436  AddI  === _ 391 416  [[ 418 ]]  !orig=[435],[417]
