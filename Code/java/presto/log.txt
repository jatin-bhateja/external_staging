CompileCommand: print test.* bool print = true

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     281  312 %           test::ReadFilter_vector @ 39 (163 bytes)
 total in heap  [0x00007f88610d9b90,0x00007f88610db878] = 7400
 relocation     [0x00007f88610d9ce0,0x00007f88610d9da0] = 192
 constants      [0x00007f88610d9da0,0x00007f88610d9dc0] = 32
 main code      [0x00007f88610d9dc0,0x00007f88610dab20] = 3424
 stub code      [0x00007f88610dab20,0x00007f88610dab58] = 56
 oops           [0x00007f88610dab58,0x00007f88610dabb0] = 88
 metadata       [0x00007f88610dabb0,0x00007f88610dad00] = 336
 scopes data    [0x00007f88610dad00,0x00007f88610db4e8] = 2024
 scopes pcs     [0x00007f88610db4e8,0x00007f88610db748] = 608
 dependencies   [0x00007f88610db748,0x00007f88610db778] = 48
 handler table  [0x00007f88610db778,0x00007f88610db820] = 168
 nul chk table  [0x00007f88610db820,0x00007f88610db878] = 88

[Disassembly]
--------------------------------------------------------------------------------

[Constant Pool]
             Address          hex4                    hex8      
  0x00007f88610d9da0:   0x00000000      0x3ca0000000000000      
  0x00007f88610d9da4:   0x3ca00000                              
  0x00007f88610d9da8:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x00007f88610d9dac:   0xf4f4f4f4                              
  0x00007f88610d9db0:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x00007f88610d9db4:   0xf4f4f4f4                              
  0x00007f88610d9db8:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x00007f88610d9dbc:   0xf4f4f4f4                              

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x00007f8818401c70} 'ReadFilter_vector' '()V' in 'test'
  0x00007f88610d9dc0:   callq  0x00007f8873436f80           ;   {no_reloc}
  0x00007f88610d9dc5:   data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f88610d9dd0:   mov    %eax,-0x14000(%rsp)
  0x00007f88610d9dd7:   push   %rbp
  0x00007f88610d9dd8:   sub    $0x110,%rsp
  0x00007f88610d9ddf:   mov    0x30(%rsi),%rbp
  0x00007f88610d9de3:   mov    0x38(%rsi),%r11d
  0x00007f88610d9de7:   mov    %r11d,0x3c(%rsp)
  0x00007f88610d9dec:   mov    0x18(%rsi),%ebx
  0x00007f88610d9def:   mov    0x28(%rsi),%r10d
  0x00007f88610d9df3:   mov    %r10d,0x30(%rsp)
  0x00007f88610d9df8:   mov    0x20(%rsi),%r11d
  0x00007f88610d9dfc:   mov    %r11d,0x34(%rsp)
  0x00007f88610d9e01:   mov    %rsi,%rdi
  0x00007f88610d9e04:   vzeroupper 
  0x00007f88610d9e07:   movabs $0x7f88734f2fd0,%r10
  0x00007f88610d9e11:   callq  *%r10
  0x00007f88610d9e14:   test   %rbp,%rbp
  0x00007f88610d9e17:   je     0x00007f88610da98c
  0x00007f88610d9e1d:   mov    %rbp,%r11
  0x00007f88610d9e20:   mov    0x8(%rbp),%r10d
  0x00007f88610d9e24:   movabs $0x8010460d8,%rax            ;   {metadata('jdk/incubator/vector/VectorSpecies')}
  0x00007f88610d9e2e:   movabs $0x800000000,%rsi
  0x00007f88610d9e38:   add    %r10,%rsi
  0x00007f88610d9e3b:   mov    0x20(%rsi),%r10
  0x00007f88610d9e3f:   nop
  0x00007f88610d9e40:   cmp    %rax,%r10
  0x00007f88610d9e43:   jne    0x00007f88610da53e
  0x00007f88610d9e49:   mov    0x8(%r11),%r8d
  0x00007f88610d9e4d:   movabs $0x8010464c0,%r10            ;   {metadata('jdk/incubator/vector/AbstractSpecies')}
  0x00007f88610d9e57:   movabs $0x800000000,%r9
  0x00007f88610d9e61:   add    %r8,%r9
  0x00007f88610d9e64:   mov    0x40(%r9),%r8
  0x00007f88610d9e68:   cmp    %r10,%r8
  0x00007f88610d9e6b:   jne    0x00007f88610da98f
  0x00007f88610d9e71:   mov    %r11,%r8
  0x00007f88610d9e74:   mov    0x8(%r8),%r10d
  0x00007f88610d9e78:   nopl   0x0(%rax,%rax,1)
  0x00007f88610d9e80:   cmp    $0x104c550,%r10d             ;   {metadata('jdk/incubator/vector/IntVector$IntSpecies')}
  0x00007f88610d9e87:   jne    0x00007f88610da98f
  0x00007f88610d9e8d:   mov    %r11,0x80(%rsp)
  0x00007f88610d9e95:   mov    %r8,0x88(%rsp)
  0x00007f88610d9e9d:   mov    %r8,0x90(%rsp)
  0x00007f88610d9ea5:   jmpq   0x00007f88610da390
  0x00007f88610d9eaa:   movabs $0x11f0de520,%r10            ;   {oop(a 'java/lang/Class'{0x000000011f0de520} = 'test')}
  0x00007f88610d9eb4:   mov    0x9c(%r10),%ebp
  0x00007f88610d9ebb:   vmovsd 0x88(%r10),%xmm0
  0x00007f88610d9ec4:   vmovsd 0x90(%r10),%xmm1
  0x00007f88610d9ecd:   mov    0x78(%r10),%r8d
  0x00007f88610d9ed1:   mov    0xc(%r12,%rdx,8),%r10d       ; implicit exception: dispatches to 0x00007f88610daa34
  0x00007f88610d9ed6:   mov    %r10d,%r11d
  0x00007f88610d9ed9:   add    $0xfffffff9,%r11d
  0x00007f88610d9edd:   data16 xchg %ax,%ax
  0x00007f88610d9ee0:   test   %r11d,%r11d
  0x00007f88610d9ee3:   jl     0x00007f88610da85c
  0x00007f88610d9ee9:   cmp    $0x7,%r10d
  0x00007f88610d9eed:   je     0x00007f88610da784
  0x00007f88610d9ef3:   mov    0xf8(%r15),%r9
  0x00007f88610d9efa:   vmovdqu32 0x10(%r12,%rdx,8),%zmm3
  0x00007f88610d9f05:   mov    %r9,%r10
  0x00007f88610d9f08:   add    $0x18,%r10
  0x00007f88610d9f0c:   vbroadcastsd %xmm0,%zmm0
  0x00007f88610d9f12:   vcmpge_oqpd %zmm0,%zmm3,%k7
  0x00007f88610d9f19:   kmovq  %k7,0x20(%rsp)
  0x00007f88610d9f20:   vbroadcastsd %xmm1,%zmm0
  0x00007f88610d9f26:   vcmple_oqpd %zmm0,%zmm3,%k7
  0x00007f88610d9f2d:   kmovq  %k7,0x28(%rsp)
  0x00007f88610d9f34:   kmovq  0x20(%rsp),%k7
  0x00007f88610d9f3b:   vpmovm2b %k7,%xmm1
  0x00007f88610d9f41:   vpabsb %xmm1,%xmm1
  0x00007f88610d9f46:   kmovq  0x28(%rsp),%k7
  0x00007f88610d9f4d:   vpmovm2b %k7,%xmm2
  0x00007f88610d9f53:   vpabsb %xmm2,%xmm2
  0x00007f88610d9f58:   nopl   0x0(%rax,%rax,1)
  0x00007f88610d9f60:   cmp    0x108(%r15),%r10
  0x00007f88610d9f67:   jae    0x00007f88610da584
  0x00007f88610d9f6d:   mov    %r10,0xf8(%r15)
  0x00007f88610d9f74:   prefetchw 0xc0(%r10)
  0x00007f88610d9f7c:   movq   $0x1,(%r9)
  0x00007f88610d9f83:   prefetchw 0x100(%r10)
  0x00007f88610d9f8b:   movl   $0x1ab8,0x8(%r9)             ;   {metadata({type array bool})}
  0x00007f88610d9f93:   prefetchw 0x140(%r10)
  0x00007f88610d9f9b:   movl   $0x8,0xc(%r9)
  0x00007f88610d9fa3:   prefetchw 0x180(%r10)
  0x00007f88610d9fab:   mov    %r9,%r10
  0x00007f88610d9fae:   add    $0x10,%r10
  0x00007f88610d9fb2:   vpxor  %ymm0,%ymm0,%ymm0
  0x00007f88610d9fb6:   vmovq  %xmm0,(%r10)
  0x00007f88610d9fbb:   mov    %r9,0x40(%rsp)
  0x00007f88610d9fc0:   mov    0xf8(%r15),%rax
  0x00007f88610d9fc7:   mov    %rax,%r10
  0x00007f88610d9fca:   add    $0x10,%r10
  0x00007f88610d9fce:   kmovq  0x28(%rsp),%k6
  0x00007f88610d9fd5:   kmovq  0x20(%rsp),%k5
  0x00007f88610d9fdc:   kandb  %k6,%k5,%k7
  0x00007f88610d9fe0:   kmovq  %k7,0x98(%rsp)
  0x00007f88610d9fea:   vpmovm2b %k7,%xmm0
  0x00007f88610d9ff0:   vpabsb %xmm0,%xmm0
  0x00007f88610d9ff5:   vmovq  %xmm0,0x10(%r9)
  0x00007f88610d9ffb:   nopl   0x0(%rax,%rax,1)
  0x00007f88610da000:   cmp    0x108(%r15),%r10
  0x00007f88610da007:   jae    0x00007f88610da5ea
  0x00007f88610da00d:   mov    %r10,0xf8(%r15)
  0x00007f88610da014:   prefetchw 0xc0(%r10)
  0x00007f88610da01c:   movq   $0x1,(%rax)
  0x00007f88610da023:   movl   $0x104ac38,0x8(%rax)         ;   {metadata('jdk/incubator/vector/Double512Vector$Double512Mask')}
  0x00007f88610da02a:   mov    0x40(%rsp),%r10
  0x00007f88610da02f:   shr    $0x3,%r10
  0x00007f88610da033:   mov    %r10d,0xc(%rax)
  0x00007f88610da037:   mov    %rax,0x20(%rsp)
  0x00007f88610da03c:   mov    0xf8(%r15),%r9
  0x00007f88610da043:   mov    %r9,%r10
  0x00007f88610da046:   add    $0x50,%r10
  0x00007f88610da04a:   kmovq  0x98(%rsp),%k7
  0x00007f88610da054:   vcompresspd %zmm3,%zmm2{%k7}{z}
  0x00007f88610da05a:   nopw   0x0(%rax,%rax,1)
  0x00007f88610da060:   cmp    0x108(%r15),%r10
  0x00007f88610da067:   jae    0x00007f88610da634
  0x00007f88610da06d:   mov    %r10,0xf8(%r15)
  0x00007f88610da074:   prefetchw 0xc0(%r10)
  0x00007f88610da07c:   movq   $0x1,(%r9)
  0x00007f88610da083:   prefetchw 0x100(%r10)
  0x00007f88610da08b:   movl   $0x29f8,0x8(%r9)             ;   {metadata({type array long})}
  0x00007f88610da093:   prefetchw 0x140(%r10)
  0x00007f88610da09b:   movl   $0x8,0xc(%r9)
  0x00007f88610da0a3:   prefetchw 0x180(%r10)
  0x00007f88610da0ab:   mov    %r9,%r10
  0x00007f88610da0ae:   add    $0x10,%r10
  0x00007f88610da0b2:   vpxor  %ymm1,%ymm1,%ymm1
  0x00007f88610da0b6:   vmovdqu %ymm1,(%r10)
  0x00007f88610da0bb:   vmovdqu %ymm1,0x20(%r10)
  0x00007f88610da0c1:   mov    %r9,0x28(%rsp)
  0x00007f88610da0c6:   mov    0xf8(%r15),%rdi
  0x00007f88610da0cd:   mov    %rdi,%r10
  0x00007f88610da0d0:   add    $0x10,%r10
  0x00007f88610da0d4:   vmovdqu64 %zmm2,%zmm1
  0x00007f88610da0da:   vmovdqu32 %zmm1,0x10(%r9)
  0x00007f88610da0e4:   cmp    0x108(%r15),%r10
  0x00007f88610da0eb:   jae    0x00007f88610da685
  0x00007f88610da0f1:   mov    %r10,0xf8(%r15)
  0x00007f88610da0f8:   prefetchw 0xc0(%r10)
  0x00007f88610da100:   movq   $0x1,(%rdi)
  0x00007f88610da107:   movl   $0x105e640,0x8(%rdi)         ;   {metadata('jdk/incubator/vector/Long512Vector')}
  0x00007f88610da10e:   mov    0x28(%rsp),%r10
  0x00007f88610da113:   shr    $0x3,%r10
  0x00007f88610da117:   mov    %r10d,0xc(%rdi)
  0x00007f88610da11b:   nopl   0x0(%rax,%rax,1)
  0x00007f88610da120:   mov    0xc(%r12,%r8,8),%r10d        ; implicit exception: dispatches to 0x00007f88610daa44
  0x00007f88610da125:   add    $0xfffffff9,%r10d
  0x00007f88610da129:   test   %r10d,%r10d
  0x00007f88610da12c:   jl     0x00007f88610da888
  0x00007f88610da132:   cmp    %r10d,%ebp
  0x00007f88610da135:   jae    0x00007f88610da7b0
  0x00007f88610da13b:   vmovq  %xmm0,0x48(%rsp)
  0x00007f88610da141:   shl    $0x3,%r8
  0x00007f88610da145:   movslq %ebp,%r10
  0x00007f88610da148:   lea    0x10(,%r10,8),%r9
  0x00007f88610da150:   movabs $0x11f5d19a8,%rsi            ;   {oop(a 'java/lang/Class'{0x000000011f5d19a8} = 'jdk/incubator/vector/Long512Vector')}
  0x00007f88610da15a:   movabs $0x7fef00310,%rdx            ;   {oop(a 'java/lang/Class'{0x00000007fef00310} = long)}
  0x00007f88610da164:   mov    $0x8,%ecx
  0x00007f88610da169:   mov    %r8,(%rsp)
  0x00007f88610da16d:   mov    %r10,0x8(%rsp)
  0x00007f88610da172:   movabs $0x11f62d4d0,%r10            ;   {oop(a 'jdk/incubator/vector/LongVector$$Lambda$59+0x00000008010686b8'{0x000000011f62d4d0})}
  0x00007f88610da17c:   mov    %r10,0x10(%rsp)
  0x00007f88610da181:   data16 xchg %ax,%ax
  0x00007f88610da184:   vzeroupper 
  0x00007f88610da187:   callq  0x00007f88610e4000           ; ImmutableOopMap {[32]=Oop [128]=Oop [136]=Oop [144]=Oop }
                                                            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.LongVector::intoArray@43 (line 3107)
                                                            ; - test::ReadFilter_vector@106 (line 47)
                                                            ;   {static_call}
  0x00007f88610da18c:   movabs $0x11f0de520,%r10            ;   {oop(a 'java/lang/Class'{0x000000011f0de520} = 'test')}
  0x00007f88610da196:   mov    0x80(%r10),%r8d
  0x00007f88610da19d:   data16 xchg %ax,%ax
  0x00007f88610da1a0:   mov    0xc(%r12,%r8,8),%r10d        ; implicit exception: dispatches to 0x00007f88610daa54
  0x00007f88610da1a5:   mov    0x88(%rsp),%r11
  0x00007f88610da1ad:   mov    0xc(%r11),%ecx
  0x00007f88610da1b1:   sub    %ecx,%r10d
  0x00007f88610da1b4:   inc    %r10d
  0x00007f88610da1b7:   test   %r10d,%r10d
  0x00007f88610da1ba:   nopw   0x0(%rax,%rax,1)
  0x00007f88610da1c0:   jl     0x00007f88610da8d0
  0x00007f88610da1c6:   mov    0x3c(%rsp),%ebp
  0x00007f88610da1ca:   cmp    %r10d,%ebp
  0x00007f88610da1cd:   jae    0x00007f88610da7f8
  0x00007f88610da1d3:   mov    0x90(%rsp),%r10
  0x00007f88610da1db:   mov    0x44(%r10),%r10d
  0x00007f88610da1df:   mov    0x3c(%rsp),%r9d
  0x00007f88610da1e4:   mov    %r9d,0x38(%rsp)
  0x00007f88610da1e9:   mov    0x8(%r12,%r10,8),%r11d       ; implicit exception: dispatches to 0x00007f88610daaa8
  0x00007f88610da1ee:   cmp    $0x104e068,%r11d             ;   {metadata('jdk/incubator/vector/Int256Vector')}
  0x00007f88610da1f5:   jne    0x00007f88610da9b4
  0x00007f88610da1fb:   lea    (%r12,%r8,8),%r10
  0x00007f88610da1ff:   vmovdqu 0x10(%r10,%r9,4),%ymm0
  0x00007f88610da206:   cmp    $0x8,%ecx
  0x00007f88610da209:   jne    0x00007f88610da8fc
  0x00007f88610da20f:   vmovdqu %ymm0,0x60(%rsp)
  0x00007f88610da215:   mov    0x88(%rsp),%r10
  0x00007f88610da21d:   mov    0x30(%r10),%ebp
  0x00007f88610da221:   mov    0x88(%rsp),%rsi
  0x00007f88610da229:   nop
  0x00007f88610da22a:   vzeroupper 
  0x00007f88610da22d:   movabs $0x80104c550,%rax
  0x00007f88610da237:   callq  0x00007f88610de100           ; ImmutableOopMap {rbp=NarrowOop [32]=Oop [128]=Oop [136]=Oop [144]=Oop }
                                                            ;*invokevirtual elementType {reexecute=0 rethrow=0 return_oop=1}
                                                            ; - jdk.incubator.vector.Double512Vector$Double512Mask::cast@43 (line 648)
                                                            ; - test::ReadFilter_vector@124 (line 50)
                                                            ;   {virtual_call}
  0x00007f88610da23c:   mov    %rbp,%r9
  0x00007f88610da23f:   shl    $0x3,%r9
  0x00007f88610da243:   mov    $0x11,%esi
  0x00007f88610da248:   movabs $0x11f0ed590,%rdx            ;   {oop(a 'java/lang/Class'{0x000000011f0ed590} = 'jdk/incubator/vector/Double512Vector$Double512Mask')}
  0x00007f88610da252:   movabs $0x7fef00150,%rcx            ;   {oop(a 'java/lang/Class'{0x00000007fef00150} = double)}
  0x00007f88610da25c:   mov    $0x8,%r8d
  0x00007f88610da262:   mov    %rax,%rdi
  0x00007f88610da265:   mov    $0x8,%r11d
  0x00007f88610da26b:   mov    %r11d,(%rsp)
  0x00007f88610da26f:   mov    0x20(%rsp),%r10
  0x00007f88610da274:   mov    %r10,0x8(%rsp)
  0x00007f88610da279:   mov    0x88(%rsp),%r10
  0x00007f88610da281:   mov    %r10,0x10(%rsp)
  0x00007f88610da286:   movabs $0x11f640c20,%r10            ;   {oop(a 'jdk/incubator/vector/Double512Vector$Double512Mask$$Lambda$63+0x00000008010692d8'{0x000000011f640c20})}
  0x00007f88610da290:   mov    %r10,0x18(%rsp)
  0x00007f88610da295:   data16 xchg %ax,%ax
  0x00007f88610da298:   vzeroupper 
  0x00007f88610da29b:   callq  0x00007f88610dab34           ; ImmutableOopMap {[32]=Oop [128]=Oop [136]=Oop [144]=Oop }
                                                            ;*invokestatic convert {reexecute=0 rethrow=0 return_oop=1}
                                                            ; - jdk.incubator.vector.Double512Vector$Double512Mask::cast@56 (line 646)
                                                            ; - test::ReadFilter_vector@124 (line 50)
                                                            ;   {static_call}
  0x00007f88610da2a0:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f88610daa64
  0x00007f88610da2a4:   movabs $0x800000000,%r11
  0x00007f88610da2ae:   add    %r10,%r11
  0x00007f88610da2b1:   mov    0x48(%r11),%r10
  0x00007f88610da2b5:   movabs $0x801042418,%r11            ;   {metadata('jdk/incubator/vector/VectorMask')}
  0x00007f88610da2bf:   nop
  0x00007f88610da2c0:   cmp    %r11,%r10
  0x00007f88610da2c3:   jne    0x00007f88610da934
  0x00007f88610da2c9:   mov    0x8(%rax),%r11d
  0x00007f88610da2cd:   cmp    $0x104e6e0,%r11d             ;   {metadata('jdk/incubator/vector/Int256Vector$Int256Mask')}
  0x00007f88610da2d4:   jne    0x00007f88610da944
  0x00007f88610da2da:   movabs $0x11f0de520,%r10            ;   {oop(a 'java/lang/Class'{0x000000011f0de520} = 'test')}
  0x00007f88610da2e4:   mov    0x7c(%r10),%r10d
  0x00007f88610da2e8:   mov    0xc(%r12,%r10,8),%r11d       ; implicit exception: dispatches to 0x00007f88610daa98
  0x00007f88610da2ed:   movabs $0x11f0de520,%r8             ;   {oop(a 'java/lang/Class'{0x000000011f0de520} = 'test')}
  0x00007f88610da2f7:   mov    0x9c(%r8),%r9d
  0x00007f88610da2fe:   mov    0xc(%rax),%ecx
  0x00007f88610da301:   vmovq  0x10(%r12,%rcx,8),%xmm0
  0x00007f88610da308:   add    $0xfffffff9,%r11d
  0x00007f88610da30c:   vpxor  %xmm1,%xmm1,%xmm1
  0x00007f88610da310:   vpsubb %xmm0,%xmm1,%xmm1
  0x00007f88610da314:   vpmovb2m %xmm1,%k7
  0x00007f88610da31a:   vmovdqu 0x60(%rsp),%ymm0
  0x00007f88610da320:   vpcompressd %ymm0,%ymm0{%k7}{z}
  0x00007f88610da326:   test   %r11d,%r11d
  0x00007f88610da329:   jl     0x00007f88610da954
  0x00007f88610da32f:   cmp    %r11d,%r9d
  0x00007f88610da332:   jae    0x00007f88610da824
  0x00007f88610da338:   mov    0x380(%r15),%r11
  0x00007f88610da33f:   mov    0x38(%rsp),%ecx
  0x00007f88610da343:   add    0x34(%rsp),%ecx
  0x00007f88610da347:   mov    %r9d,%r8d
  0x00007f88610da34a:   shl    $0x3,%r10
  0x00007f88610da34e:   vmovdqu %ymm0,0x10(%r10,%r8,4)
  0x00007f88610da355:   kmovq  0x98(%rsp),%k7
  0x00007f88610da35f:   kmovq  %k7,%r8
  0x00007f88610da364:   popcnt %r8,%r10
  0x00007f88610da369:   add    %r9d,%r10d
  0x00007f88610da36c:   movabs $0x11f0de520,%r8             ;   {oop(a 'java/lang/Class'{0x000000011f0de520} = 'test')}
  0x00007f88610da376:   mov    %r10d,0x9c(%r8)              ; ImmutableOopMap {[128]=Oop [136]=Oop [144]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) test::ReadFilter_vector@159 (line 38)
  0x00007f88610da37d:   test   %eax,(%r11)                  ;   {poll}
  0x00007f88610da380:   cmp    0x30(%rsp),%ecx
  0x00007f88610da384:   jge    0x00007f88610da525
  0x00007f88610da38a:   mov    %ecx,0x3c(%rsp)
  0x00007f88610da38e:   xor    %ebx,%ebx
  0x00007f88610da390:   movabs $0x11f0de520,%r10            ;   {oop(a 'java/lang/Class'{0x000000011f0de520} = 'test')}
  0x00007f88610da39a:   mov    0x70(%r10),%r9d
  0x00007f88610da39e:   xchg   %ax,%ax
  0x00007f88610da3a0:   cmp    0x34(%rsp),%ebx
  0x00007f88610da3a4:   jge    0x00007f88610da4fb
  0x00007f88610da3aa:   mov    0x84(%r10),%ecx
  0x00007f88610da3b1:   jmpq   0x00007f88610da4cf
  0x00007f88610da3b6:   data16 nopw 0x0(%rax,%rax,1)
  0x00007f88610da3c0:   mov    %edx,%r9d
  0x00007f88610da3c3:   mov    0x18(%r12,%rcx,8),%r10d      ; implicit exception: dispatches to 0x00007f88610da9ec
  0x00007f88610da3c8:   mov    0x10(%r12,%r10,8),%rax       ; implicit exception: dispatches to 0x00007f88610da9fc
  0x00007f88610da3cd:   mov    %rax,%r11
  0x00007f88610da3d0:   movabs $0x5deece66d,%r8
  0x00007f88610da3da:   imul   %r8,%r11
  0x00007f88610da3de:   add    $0xb,%r11
  0x00007f88610da3e2:   mov    %r11,%r8
  0x00007f88610da3e5:   movabs $0xffffffffffff,%rdx
  0x00007f88610da3ef:   and    %rdx,%r8
  0x00007f88610da3f2:   lock cmpxchg %r8,0x10(%r12,%r10,8)
  0x00007f88610da3f9:   sete   %r8b
  0x00007f88610da3fd:   movzbl %r8b,%r8d
  0x00007f88610da401:   test   %r8d,%r8d
  0x00007f88610da404:   je     0x00007f88610da70c
  0x00007f88610da40a:   mov    0x18(%r12,%rcx,8),%r10d
  0x00007f88610da40f:   mov    0x10(%r12,%r10,8),%rax       ; implicit exception: dispatches to 0x00007f88610daa0c
  0x00007f88610da414:   mov    %rax,%rcx
  0x00007f88610da417:   movabs $0x5deece66d,%r8
  0x00007f88610da421:   imul   %r8,%rcx
  0x00007f88610da425:   shr    $0x16,%r11
  0x00007f88610da429:   add    $0xb,%rcx
  0x00007f88610da42d:   mov    %rcx,%r8
  0x00007f88610da430:   and    %rdx,%r8
  0x00007f88610da433:   lock cmpxchg %r8,0x10(%r12,%r10,8)
  0x00007f88610da43a:   sete   %r8b
  0x00007f88610da43e:   movzbl %r8b,%r8d
  0x00007f88610da442:   and    $0x3ffffff,%r11
  0x00007f88610da449:   mov    %r11d,%edx
  0x00007f88610da44c:   movslq %edx,%r11
  0x00007f88610da44f:   shl    $0x1b,%r11
  0x00007f88610da453:   test   %r8d,%r8d
  0x00007f88610da456:   je     0x00007f88610da748
  0x00007f88610da45c:   shr    $0x15,%rcx
  0x00007f88610da460:   and    $0x7ffffff,%rcx
  0x00007f88610da467:   mov    %ecx,%r10d
  0x00007f88610da46a:   movslq %r10d,%r10
  0x00007f88610da46d:   add    %r11,%r10
  0x00007f88610da470:   vcvtsi2sd %r10,%xmm0,%xmm0
  0x00007f88610da475:   vmulsd -0x6dd(%rip),%xmm0,%xmm0        # 0x00007f88610d9da0
                                                            ;   {section_word}
  0x00007f88610da47d:   data16 xchg %ax,%ax
  0x00007f88610da480:   mov    0xc(%r12,%r9,8),%r10d        ; implicit exception: dispatches to 0x00007f88610daa1c
  0x00007f88610da485:   cmp    %r10d,%ebx
  0x00007f88610da488:   jae    0x00007f88610da6d9
  0x00007f88610da48e:   movabs $0x11f0de520,%r10            ;   {oop(a 'java/lang/Class'{0x000000011f0de520} = 'test')}
  0x00007f88610da498:   mov    0x84(%r10),%ecx
  0x00007f88610da49f:   mov    0x70(%r10),%edx
  0x00007f88610da4a3:   lea    (%r12,%r9,8),%r10
  0x00007f88610da4a7:   vmovsd %xmm0,0x10(%r10,%rbx,8)
  0x00007f88610da4ae:   inc    %ebx
  0x00007f88610da4b0:   cmp    %edi,%ebx
  0x00007f88610da4b2:   jl     0x00007f88610da3c0
  0x00007f88610da4b8:   mov    0x380(%r15),%r10             ; ImmutableOopMap {rcx=NarrowOop rdx=NarrowOop [128]=Oop [136]=Oop [144]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) test::ReadFilter_vector@60 (line 39)
  0x00007f88610da4bf:   test   %eax,(%r10)                  ;   {poll}
  0x00007f88610da4c2:   cmp    0x34(%rsp),%ebx
  0x00007f88610da4c6:   jge    0x00007f88610d9eaa
  0x00007f88610da4cc:   mov    %edx,%r9d
  0x00007f88610da4cf:   mov    0x34(%rsp),%edi
  0x00007f88610da4d3:   sub    %ebx,%edi
  0x00007f88610da4d5:   mov    0x34(%rsp),%r11d
  0x00007f88610da4da:   xor    %r10d,%r10d
  0x00007f88610da4dd:   cmp    %ebx,%r11d
  0x00007f88610da4e0:   cmovl  %r10d,%edi
  0x00007f88610da4e4:   cmp    $0x3e8,%edi
  0x00007f88610da4ea:   mov    $0x3e8,%r10d
  0x00007f88610da4f0:   cmova  %r10d,%edi
  0x00007f88610da4f4:   add    %ebx,%edi
  0x00007f88610da4f6:   jmpq   0x00007f88610da3c3
  0x00007f88610da4fb:   mov    0x9c(%r10),%ebp
  0x00007f88610da502:   vmovsd 0x88(%r10),%xmm0
  0x00007f88610da50b:   vmovsd 0x90(%r10),%xmm1
  0x00007f88610da514:   mov    0x78(%r10),%r8d
  0x00007f88610da518:   mov    %r9d,%edx
  0x00007f88610da51b:   nopl   0x0(%rax,%rax,1)
  0x00007f88610da520:   jmpq   0x00007f88610d9ed1
  0x00007f88610da525:   vzeroupper 
  0x00007f88610da528:   add    $0x110,%rsp
  0x00007f88610da52f:   pop    %rbp
  0x00007f88610da530:   cmp    0x378(%r15),%rsp             ;   {poll_return}
  0x00007f88610da537:   ja     0x00007f88610dab08
  0x00007f88610da53d:   retq   
  0x00007f88610da53e:   mov    0x28(%rsi),%rdi
  0x00007f88610da542:   mov    (%rdi),%ecx
  0x00007f88610da544:   add    $0x8,%rdi
  0x00007f88610da548:   test   %rax,%rax
  0x00007f88610da54b:   repnz scas %es:(%rdi),%rax
  0x00007f88610da54e:   jne    0x00007f88610da558
  0x00007f88610da554:   mov    %rax,0x20(%rsi)
  0x00007f88610da558:   je     0x00007f88610d9e49
  0x00007f88610da55e:   mov    $0xffffff8d,%esi
  0x00007f88610da563:   mov    0x3c(%rsp),%ebp
  0x00007f88610da567:   mov    %r11,0x20(%rsp)
  0x00007f88610da56c:   mov    0x30(%rsp),%r10d
  0x00007f88610da571:   mov    %r10d,0x28(%rsp)
  0x00007f88610da576:   mov    %ebx,0x30(%rsp)
  0x00007f88610da57a:   xchg   %ax,%ax
  0x00007f88610da57c:   vzeroupper 
  0x00007f88610da57f:   callq  0x00007f8861054580           ; ImmutableOopMap {[32]=Oop }
                                                            ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::ReadFilter_vector@39 (line 39)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610da584:   mov    %r8d,0xa8(%rsp)
  0x00007f88610da58c:   vmovq  %xmm2,0xa0(%rsp)
  0x00007f88610da595:   vmovq  %xmm1,0x98(%rsp)
  0x00007f88610da59e:   vmovdqu64 %zmm3,0x40(%rsp)
  0x00007f88610da5a6:   movabs $0x800001ab8,%rsi            ;   {metadata({type array bool})}
  0x00007f88610da5b0:   mov    $0x8,%edx
  0x00007f88610da5b5:   data16 xchg %ax,%ax
  0x00007f88610da5b8:   vzeroupper 
  0x00007f88610da5bb:   callq  0x00007f886106a000           ; ImmutableOopMap {[128]=Oop [136]=Oop [144]=Oop [168]=NarrowOop }
                                                            ;*invokestatic binaryOp {reexecute=1 rethrow=0 return_oop=1}
                                                            ; - (reexecute) jdk.incubator.vector.Double512Vector$Double512Mask::and@29 (line 685)
                                                            ; - jdk.incubator.vector.Double512Vector$Double512Mask::and@2 (line 554)
                                                            ; - test::DoubleRange_testDoubleVector@20 (line 25)
                                                            ; - test::ReadFilter_vector@77 (line 43)
                                                            ;   {runtime_call _new_array_Java}
  0x00007f88610da5c0:   mov    %rax,%r9
  0x00007f88610da5c3:   vmovdqu64 0x40(%rsp),%zmm3
  0x00007f88610da5cb:   vmovq  0x98(%rsp),%xmm1
  0x00007f88610da5d4:   vmovq  0xa0(%rsp),%xmm2
  0x00007f88610da5dd:   mov    0xa8(%rsp),%r8d
  0x00007f88610da5e5:   jmpq   0x00007f88610d9fbb
  0x00007f88610da5ea:   mov    %r8d,0x58(%rsp)
  0x00007f88610da5ef:   vmovq  %xmm0,0x48(%rsp)
  0x00007f88610da5f5:   vmovdqu64 %zmm3,0xc0(%rsp)
  0x00007f88610da5fd:   movabs $0x80104ac38,%rsi            ;   {metadata('jdk/incubator/vector/Double512Vector$Double512Mask')}
  0x00007f88610da607:   vmovq  %xmm2,0x20(%rsp)
  0x00007f88610da60d:   vmovq  %xmm1,0x28(%rsp)
  0x00007f88610da613:   nop
  0x00007f88610da614:   vzeroupper 
  0x00007f88610da617:   callq  0x00007f886106d280           ; ImmutableOopMap {[64]=Oop [88]=NarrowOop [128]=Oop [136]=Oop [144]=Oop }
                                                            ;*invokestatic binaryOp {reexecute=1 rethrow=0 return_oop=1}
                                                            ; - (reexecute) jdk.incubator.vector.Double512Vector$Double512Mask::and@29 (line 685)
                                                            ; - jdk.incubator.vector.Double512Vector$Double512Mask::and@2 (line 554)
                                                            ; - test::DoubleRange_testDoubleVector@20 (line 25)
                                                            ; - test::ReadFilter_vector@77 (line 43)
                                                            ;   {runtime_call _new_instance_Java}
  0x00007f88610da61c:   vmovdqu64 0xc0(%rsp),%zmm3
  0x00007f88610da624:   vmovq  0x48(%rsp),%xmm0
  0x00007f88610da62a:   mov    0x58(%rsp),%r8d
  0x00007f88610da62f:   jmpq   0x00007f88610da02a
  0x00007f88610da634:   mov    %r8d,0xa0(%rsp)
  0x00007f88610da63c:   vmovdqu64 %zmm2,0x40(%rsp)
  0x00007f88610da644:   vmovq  %xmm0,0x28(%rsp)
  0x00007f88610da64a:   movabs $0x8000029f8,%rsi            ;   {metadata({type array long})}
  0x00007f88610da654:   mov    $0x8,%edx
  0x00007f88610da659:   data16 xchg %ax,%ax
  0x00007f88610da65c:   vzeroupper 
  0x00007f88610da65f:   callq  0x00007f886106a000           ; ImmutableOopMap {[32]=Oop [128]=Oop [136]=Oop [144]=Oop [160]=NarrowOop }
                                                            ;*invokestatic convert {reexecute=1 rethrow=0 return_oop=1}
                                                            ; - (reexecute) jdk.incubator.vector.AbstractVector::convert0@322 (line 730)
                                                            ; - jdk.incubator.vector.AbstractVector::asVectorRawTemplate@11 (line 179)
                                                            ; - jdk.incubator.vector.Double512Vector::asVectorRaw@2 (line 183)
                                                            ; - jdk.incubator.vector.DoubleVector::viewAsIntegralLanes@9 (line 3620)
                                                            ; - test::ReadFilter_vector@93 (line 46)
                                                            ;   {runtime_call _new_array_Java}
  0x00007f88610da664:   mov    %rax,%r9
  0x00007f88610da667:   vmovq  0x28(%rsp),%xmm0
  0x00007f88610da66d:   vmovdqu64 0x40(%rsp),%zmm2
  0x00007f88610da675:   mov    0xa0(%rsp),%r8d
  0x00007f88610da67d:   data16 xchg %ax,%ax
  0x00007f88610da680:   jmpq   0x00007f88610da0c1
  0x00007f88610da685:   mov    %r8d,0xa8(%rsp)
  0x00007f88610da68d:   vmovdqu64 %zmm1,0xc0(%rsp)
  0x00007f88610da695:   vmovq  %xmm0,0xa0(%rsp)
  0x00007f88610da69e:   movabs $0x80105e640,%rsi            ;   {metadata('jdk/incubator/vector/Long512Vector')}
  0x00007f88610da6a8:   vmovdqu64 %zmm2,0x40(%rsp)
  0x00007f88610da6b0:   vzeroupper 
  0x00007f88610da6b3:   callq  0x00007f886106d280           ; ImmutableOopMap {[32]=Oop [40]=Oop [128]=Oop [136]=Oop [144]=Oop [168]=NarrowOop }
                                                            ;*invokestatic convert {reexecute=1 rethrow=0 return_oop=1}
                                                            ; - (reexecute) jdk.incubator.vector.AbstractVector::convert0@322 (line 730)
                                                            ; - jdk.incubator.vector.AbstractVector::asVectorRawTemplate@11 (line 179)
                                                            ; - jdk.incubator.vector.Double512Vector::asVectorRaw@2 (line 183)
                                                            ; - jdk.incubator.vector.DoubleVector::viewAsIntegralLanes@9 (line 3620)
                                                            ; - test::ReadFilter_vector@93 (line 46)
                                                            ;   {runtime_call _new_instance_Java}
  0x00007f88610da6b8:   mov    %rax,%rdi
  0x00007f88610da6bb:   vmovq  0xa0(%rsp),%xmm0
  0x00007f88610da6c4:   vmovdqu64 0xc0(%rsp),%zmm1
  0x00007f88610da6cc:   mov    0xa8(%rsp),%r8d
  0x00007f88610da6d4:   jmpq   0x00007f88610da10e
  0x00007f88610da6d9:   mov    $0xffffffe4,%esi
  0x00007f88610da6de:   mov    0x30(%rsp),%r11d
  0x00007f88610da6e3:   mov    %r11d,0x28(%rsp)
  0x00007f88610da6e8:   mov    0x34(%rsp),%r10d
  0x00007f88610da6ed:   mov    %r10d,0x2c(%rsp)
  0x00007f88610da6f2:   mov    %r9d,0x34(%rsp)
  0x00007f88610da6f7:   mov    %ebx,0x38(%rsp)
  0x00007f88610da6fb:   vmovsd %xmm0,0x40(%rsp)
  0x00007f88610da701:   data16 xchg %ax,%ax
  0x00007f88610da704:   vzeroupper 
  0x00007f88610da707:   callq  0x00007f8861054580           ; ImmutableOopMap {[52]=NarrowOop [128]=Oop }
                                                            ;*dastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::ReadFilter_vector@56 (line 40)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610da70c:   mov    $0xffffff45,%esi
  0x00007f88610da711:   mov    0x3c(%rsp),%ebp
  0x00007f88610da715:   mov    0x30(%rsp),%edi
  0x00007f88610da719:   mov    %edi,0x28(%rsp)
  0x00007f88610da71d:   mov    0x34(%rsp),%r11d
  0x00007f88610da722:   mov    %r11d,0x2c(%rsp)
  0x00007f88610da727:   mov    %r9d,0x34(%rsp)
  0x00007f88610da72c:   mov    %ebx,0x38(%rsp)
  0x00007f88610da730:   mov    %ecx,0x3c(%rsp)
  0x00007f88610da734:   mov    %r10d,0x40(%rsp)
  0x00007f88610da739:   mov    %r8d,0x44(%rsp)
  0x00007f88610da73e:   xchg   %ax,%ax
  0x00007f88610da740:   vzeroupper 
  0x00007f88610da743:   callq  0x00007f8861054580           ; ImmutableOopMap {[52]=NarrowOop [60]=NarrowOop [64]=NarrowOop [128]=Oop }
                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.Random::next@35 (line 444)
                                                            ; - java.util.Random::nextDouble@3 (line 698)
                                                            ; - test::ReadFilter_vector@53 (line 40)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610da748:   mov    $0xffffff45,%esi
  0x00007f88610da74d:   mov    0x3c(%rsp),%ebp
  0x00007f88610da751:   mov    0x30(%rsp),%edi
  0x00007f88610da755:   mov    %edi,0x28(%rsp)
  0x00007f88610da759:   mov    0x34(%rsp),%ecx
  0x00007f88610da75d:   mov    %ecx,0x2c(%rsp)
  0x00007f88610da761:   mov    %r9d,0x34(%rsp)
  0x00007f88610da766:   mov    %ebx,0x38(%rsp)
  0x00007f88610da76a:   mov    %r11,0x40(%rsp)
  0x00007f88610da76f:   mov    %r10d,0x3c(%rsp)
  0x00007f88610da774:   mov    %r8d,0x48(%rsp)
  0x00007f88610da779:   data16 xchg %ax,%ax
  0x00007f88610da77c:   vzeroupper 
  0x00007f88610da77f:   callq  0x00007f8861054580           ; ImmutableOopMap {[52]=NarrowOop [60]=NarrowOop [128]=Oop }
                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.Random::next@35 (line 444)
                                                            ; - java.util.Random::nextDouble@13 (line 698)
                                                            ; - test::ReadFilter_vector@53 (line 40)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610da784:   mov    $0xffffffe4,%esi
  0x00007f88610da789:   mov    0x30(%rsp),%r8d
  0x00007f88610da78e:   mov    %r8d,0x28(%rsp)
  0x00007f88610da793:   mov    0x34(%rsp),%r10d
  0x00007f88610da798:   mov    %r10d,0x2c(%rsp)
  0x00007f88610da79d:   mov    %edx,0x30(%rsp)
  0x00007f88610da7a1:   mov    %r11d,0x34(%rsp)
  0x00007f88610da7a6:   xchg   %ax,%ax
  0x00007f88610da7a8:   vzeroupper 
  0x00007f88610da7ab:   callq  0x00007f8861054580           ; ImmutableOopMap {[48]=NarrowOop [128]=Oop }
                                                            ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::checkIndex@3 (line 385)
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 57)
                                                            ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2773)
                                                            ; - test::ReadFilter_vector@70 (line 42)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610da7b0:   mov    $0xffffffe4,%esi
  0x00007f88610da7b5:   mov    0x80(%rsp),%r11
  0x00007f88610da7bd:   mov    %r11,0x28(%rsp)
  0x00007f88610da7c2:   mov    0x30(%rsp),%r11d
  0x00007f88610da7c7:   mov    %r11d,0x24(%rsp)
  0x00007f88610da7cc:   mov    0x34(%rsp),%r9d
  0x00007f88610da7d1:   mov    %r9d,0x30(%rsp)
  0x00007f88610da7d6:   mov    %r8d,0x34(%rsp)
  0x00007f88610da7db:   mov    %r10d,0x38(%rsp)
  0x00007f88610da7e0:   vmovq  %xmm0,0x40(%rsp)
  0x00007f88610da7e6:   vmovdqu64 %zmm1,0x80(%rsp)
  0x00007f88610da7ee:   xchg   %ax,%ax
  0x00007f88610da7f0:   vzeroupper 
  0x00007f88610da7f3:   callq  0x00007f8861054580           ; ImmutableOopMap {[40]=Oop [52]=NarrowOop }
                                                            ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::checkIndex@3 (line 385)
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 57)
                                                            ; - jdk.incubator.vector.LongVector::intoArray@7 (line 3105)
                                                            ; - test::ReadFilter_vector@106 (line 47)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610da7f8:   mov    $0xffffffe4,%esi
  0x00007f88610da7fd:   mov    0x30(%rsp),%r9d
  0x00007f88610da802:   mov    %r9d,0x28(%rsp)
  0x00007f88610da807:   mov    0x34(%rsp),%r11d
  0x00007f88610da80c:   mov    %r11d,0x2c(%rsp)
  0x00007f88610da811:   mov    %r8d,0x38(%rsp)
  0x00007f88610da816:   mov    %r10d,0x40(%rsp)
  0x00007f88610da81b:   nop
  0x00007f88610da81c:   vzeroupper 
  0x00007f88610da81f:   callq  0x00007f8861054580           ; ImmutableOopMap {[56]=NarrowOop [128]=Oop [136]=Oop }
                                                            ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::checkIndex@3 (line 385)
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 57)
                                                            ; - jdk.incubator.vector.IntVector::fromArray@9 (line 2953)
                                                            ; - test::ReadFilter_vector@114 (line 49)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610da824:   mov    $0xffffffe4,%esi
  0x00007f88610da829:   mov    0x38(%rsp),%ebp
  0x00007f88610da82d:   mov    0x30(%rsp),%ecx
  0x00007f88610da831:   mov    %ecx,0x28(%rsp)
  0x00007f88610da835:   mov    0x34(%rsp),%r8d
  0x00007f88610da83a:   mov    %r8d,0x2c(%rsp)
  0x00007f88610da83f:   mov    %r10d,0x30(%rsp)
  0x00007f88610da844:   mov    %r9d,0x34(%rsp)
  0x00007f88610da849:   mov    %r11d,0x38(%rsp)
  0x00007f88610da84e:   vmovdqu %ymm0,0x60(%rsp)
  0x00007f88610da854:   vzeroupper 
  0x00007f88610da857:   callq  0x00007f8861054580           ; ImmutableOopMap {[48]=NarrowOop [136]=Oop }
                                                            ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::checkIndex@3 (line 385)
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 57)
                                                            ; - jdk.incubator.vector.IntVector::intoArray@7 (line 3226)
                                                            ; - test::ReadFilter_vector@140 (line 51)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610da85c:   mov    $0xffffffcc,%esi
  0x00007f88610da861:   mov    0x30(%rsp),%r8d
  0x00007f88610da866:   mov    %r8d,0x28(%rsp)
  0x00007f88610da86b:   mov    0x34(%rsp),%r10d
  0x00007f88610da870:   mov    %r10d,0x2c(%rsp)
  0x00007f88610da875:   mov    %edx,0x30(%rsp)
  0x00007f88610da879:   mov    %r11d,0x34(%rsp)
  0x00007f88610da87e:   xchg   %ax,%ax
  0x00007f88610da880:   vzeroupper 
  0x00007f88610da883:   callq  0x00007f8861054580           ; ImmutableOopMap {[48]=NarrowOop [128]=Oop }
                                                            ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::checkIndex@3 (line 385)
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 57)
                                                            ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2773)
                                                            ; - test::ReadFilter_vector@70 (line 42)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610da888:   mov    $0xffffffcc,%esi
  0x00007f88610da88d:   mov    0x80(%rsp),%r11
  0x00007f88610da895:   mov    %r11,0x28(%rsp)
  0x00007f88610da89a:   mov    0x30(%rsp),%r9d
  0x00007f88610da89f:   mov    %r9d,0x24(%rsp)
  0x00007f88610da8a4:   mov    0x34(%rsp),%r11d
  0x00007f88610da8a9:   mov    %r11d,0x30(%rsp)
  0x00007f88610da8ae:   mov    %r8d,0x34(%rsp)
  0x00007f88610da8b3:   mov    %r10d,0x38(%rsp)
  0x00007f88610da8b8:   vmovq  %xmm0,0x40(%rsp)
  0x00007f88610da8be:   vmovdqu64 %zmm1,0x80(%rsp)
  0x00007f88610da8c6:   xchg   %ax,%ax
  0x00007f88610da8c8:   vzeroupper 
  0x00007f88610da8cb:   callq  0x00007f8861054580           ; ImmutableOopMap {[40]=Oop [52]=NarrowOop }
                                                            ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::checkIndex@3 (line 385)
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 57)
                                                            ; - jdk.incubator.vector.LongVector::intoArray@7 (line 3105)
                                                            ; - test::ReadFilter_vector@106 (line 47)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610da8d0:   mov    $0xffffffcc,%esi
  0x00007f88610da8d5:   mov    0x30(%rsp),%r9d
  0x00007f88610da8da:   mov    %r9d,0x28(%rsp)
  0x00007f88610da8df:   mov    0x34(%rsp),%r11d
  0x00007f88610da8e4:   mov    %r11d,0x2c(%rsp)
  0x00007f88610da8e9:   mov    %r8d,0x38(%rsp)
  0x00007f88610da8ee:   mov    %r10d,0x40(%rsp)
  0x00007f88610da8f3:   nop
  0x00007f88610da8f4:   vzeroupper 
  0x00007f88610da8f7:   callq  0x00007f8861054580           ; ImmutableOopMap {[56]=NarrowOop [128]=Oop [136]=Oop }
                                                            ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::checkIndex@3 (line 385)
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 57)
                                                            ; - jdk.incubator.vector.IntVector::fromArray@9 (line 2953)
                                                            ; - test::ReadFilter_vector@114 (line 49)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610da8fc:   mov    $0x4b,%esi
  0x00007f88610da901:   mov    %r9d,%ebp
  0x00007f88610da904:   mov    0x30(%rsp),%r11d
  0x00007f88610da909:   mov    %r11d,0x28(%rsp)
  0x00007f88610da90e:   mov    0x34(%rsp),%r10d
  0x00007f88610da913:   mov    %r10d,0x2c(%rsp)
  0x00007f88610da918:   vmovq  0x48(%rsp),%xmm1
  0x00007f88610da91e:   vmovq  %xmm1,0x30(%rsp)
  0x00007f88610da924:   vmovdqu %ymm0,0x40(%rsp)
  0x00007f88610da92a:   xchg   %ax,%ax
  0x00007f88610da92c:   vzeroupper 
  0x00007f88610da92f:   callq  0x00007f8861054580           ; ImmutableOopMap {[136]=Oop }
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.Double512Vector$Double512Mask::cast@16 (line 644)
                                                            ; - test::ReadFilter_vector@124 (line 50)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610da934:   mov    $0xffffffde,%esi
  0x00007f88610da939:   mov    %rax,%rbp
  0x00007f88610da93c:   vzeroupper 
  0x00007f88610da93f:   callq  0x00007f8861054580           ; ImmutableOopMap {rbp=Oop }
                                                            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.Double512Vector$Double512Mask::cast@59 (line 646)
                                                            ; - test::ReadFilter_vector@124 (line 50)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610da944:   mov    $0xffffffde,%esi
  0x00007f88610da949:   mov    %rax,%rbp
  0x00007f88610da94c:   vzeroupper 
  0x00007f88610da94f:   callq  0x00007f8861054580           ; ImmutableOopMap {rbp=Oop }
                                                            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.Int256Vector::compress@4 (line 480)
                                                            ; - jdk.incubator.vector.Int256Vector::compress@2 (line 41)
                                                            ; - test::ReadFilter_vector@127 (line 50)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610da954:   mov    $0xffffffcc,%esi
  0x00007f88610da959:   mov    0x38(%rsp),%ebp
  0x00007f88610da95d:   mov    0x30(%rsp),%ecx
  0x00007f88610da961:   mov    %ecx,0x28(%rsp)
  0x00007f88610da965:   mov    0x34(%rsp),%r8d
  0x00007f88610da96a:   mov    %r8d,0x2c(%rsp)
  0x00007f88610da96f:   mov    %r10d,0x30(%rsp)
  0x00007f88610da974:   mov    %r9d,0x34(%rsp)
  0x00007f88610da979:   mov    %r11d,0x38(%rsp)
  0x00007f88610da97e:   vmovdqu %ymm0,0x60(%rsp)
  0x00007f88610da984:   vzeroupper 
  0x00007f88610da987:   callq  0x00007f8861054580           ; ImmutableOopMap {[48]=NarrowOop [136]=Oop }
                                                            ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::checkIndex@3 (line 385)
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 57)
                                                            ; - jdk.incubator.vector.IntVector::intoArray@7 (line 3226)
                                                            ; - test::ReadFilter_vector@140 (line 51)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610da98c:   xor    %r11d,%r11d
  0x00007f88610da98f:   mov    $0xffffff76,%esi
  0x00007f88610da994:   mov    0x3c(%rsp),%ebp
  0x00007f88610da998:   mov    %r11,0x20(%rsp)
  0x00007f88610da99d:   mov    0x30(%rsp),%r10d
  0x00007f88610da9a2:   mov    %r10d,0x28(%rsp)
  0x00007f88610da9a7:   mov    %ebx,0x30(%rsp)
  0x00007f88610da9ab:   nop
  0x00007f88610da9ac:   vzeroupper 
  0x00007f88610da9af:   callq  0x00007f8861054580           ; ImmutableOopMap {[32]=Oop }
                                                            ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::ReadFilter_vector@39 (line 39)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610da9b4:   mov    $0xffffffde,%esi
  0x00007f88610da9b9:   mov    0x30(%rsp),%r9d
  0x00007f88610da9be:   mov    %r9d,0x28(%rsp)
  0x00007f88610da9c3:   mov    0x34(%rsp),%r11d
  0x00007f88610da9c8:   mov    %r11d,0x2c(%rsp)
  0x00007f88610da9cd:   mov    %r8d,0x30(%rsp)
  0x00007f88610da9d2:   mov    0x38(%rsp),%r8d
  0x00007f88610da9d7:   mov    %r8d,0x34(%rsp)
  0x00007f88610da9dc:   mov    %r10d,0x38(%rsp)
  0x00007f88610da9e1:   data16 xchg %ax,%ax
  0x00007f88610da9e4:   vzeroupper 
  0x00007f88610da9e7:   callq  0x00007f8861054580           ; ImmutableOopMap {[48]=NarrowOop [56]=NarrowOop [128]=Oop }
                                                            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::dummyVector@4 (line 3918)
                                                            ; - jdk.incubator.vector.IntVector::fromArray@19 (line 2955)
                                                            ; - test::ReadFilter_vector@114 (line 49)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610da9ec:   mov    $0xfffffff6,%esi
  0x00007f88610da9f1:   data16 xchg %ax,%ax
  0x00007f88610da9f4:   vzeroupper 
  0x00007f88610da9f7:   callq  0x00007f8861054580           ; ImmutableOopMap {}
                                                            ;*invokevirtual nextDouble {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::ReadFilter_vector@53 (line 40)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610da9fc:   mov    $0xfffffff6,%esi
  0x00007f88610daa01:   data16 xchg %ax,%ax
  0x00007f88610daa04:   vzeroupper 
  0x00007f88610daa07:   callq  0x00007f8861054580           ; ImmutableOopMap {}
                                                            ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@8 (line 442)
                                                            ; - java.util.Random::nextDouble@3 (line 698)
                                                            ; - test::ReadFilter_vector@53 (line 40)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610daa0c:   mov    $0xfffffff6,%esi
  0x00007f88610daa11:   data16 xchg %ax,%ax
  0x00007f88610daa14:   vzeroupper 
  0x00007f88610daa17:   callq  0x00007f8861054580           ; ImmutableOopMap {}
                                                            ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@8 (line 442)
                                                            ; - java.util.Random::nextDouble@13 (line 698)
                                                            ; - test::ReadFilter_vector@53 (line 40)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610daa1c:   mov    $0xfffffff6,%esi
  0x00007f88610daa21:   mov    %ebx,%ebp
  0x00007f88610daa23:   vmovsd %xmm0,0x20(%rsp)
  0x00007f88610daa29:   data16 xchg %ax,%ax
  0x00007f88610daa2c:   vzeroupper 
  0x00007f88610daa2f:   callq  0x00007f8861054580           ; ImmutableOopMap {}
                                                            ;*dastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::ReadFilter_vector@56 (line 40)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610daa34:   mov    $0xfffffff6,%esi
  0x00007f88610daa39:   data16 xchg %ax,%ax
  0x00007f88610daa3c:   vzeroupper 
  0x00007f88610daa3f:   callq  0x00007f8861054580           ; ImmutableOopMap {}
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.DoubleVector::fromArray@8 (line 2773)
                                                            ; - test::ReadFilter_vector@70 (line 42)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610daa44:   mov    $0xfffffff6,%esi
  0x00007f88610daa49:   data16 xchg %ax,%ax
  0x00007f88610daa4c:   vzeroupper 
  0x00007f88610daa4f:   callq  0x00007f8861054580           ; ImmutableOopMap {}
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.LongVector::intoArray@6 (line 3105)
                                                            ; - test::ReadFilter_vector@106 (line 47)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610daa54:   mov    $0xfffffff6,%esi
  0x00007f88610daa59:   data16 xchg %ax,%ax
  0x00007f88610daa5c:   vzeroupper 
  0x00007f88610daa5f:   callq  0x00007f8861054580           ; ImmutableOopMap {}
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::fromArray@8 (line 2953)
                                                            ; - test::ReadFilter_vector@114 (line 49)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610daa64:   mov    $0xfffffff4,%esi
  0x00007f88610daa69:   mov    0x38(%rsp),%ebp
  0x00007f88610daa6d:   mov    0x30(%rsp),%r10d
  0x00007f88610daa72:   mov    %r10d,0x28(%rsp)
  0x00007f88610daa77:   mov    0x34(%rsp),%r11d
  0x00007f88610daa7c:   mov    %r11d,0x2c(%rsp)
  0x00007f88610daa81:   vmovq  0x48(%rsp),%xmm0
  0x00007f88610daa87:   vmovq  %xmm0,0x30(%rsp)
  0x00007f88610daa8d:   data16 xchg %ax,%ax
  0x00007f88610daa90:   vzeroupper 
  0x00007f88610daa93:   callq  0x00007f8861054580           ; ImmutableOopMap {[136]=Oop }
                                                            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.Double512Vector$Double512Mask::cast@59 (line 646)
                                                            ; - test::ReadFilter_vector@124 (line 50)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610daa98:   mov    $0xfffffff6,%esi
  0x00007f88610daa9d:   data16 xchg %ax,%ax
  0x00007f88610daaa0:   vzeroupper 
  0x00007f88610daaa3:   callq  0x00007f8861054580           ; ImmutableOopMap {}
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@6 (line 3226)
                                                            ; - test::ReadFilter_vector@140 (line 51)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610daaa8:   mov    $0xffffff45,%esi
  0x00007f88610daaad:   mov    0x30(%rsp),%r11d
  0x00007f88610daab2:   mov    %r11d,0x28(%rsp)
  0x00007f88610daab7:   mov    0x34(%rsp),%r9d
  0x00007f88610daabc:   mov    %r9d,0x2c(%rsp)
  0x00007f88610daac1:   mov    %r8d,0x30(%rsp)
  0x00007f88610daac6:   mov    0x38(%rsp),%r11d
  0x00007f88610daacb:   mov    %r11d,0x34(%rsp)
  0x00007f88610daad0:   mov    %r10d,0x44(%rsp)
  0x00007f88610daad5:   data16 xchg %ax,%ax
  0x00007f88610daad8:   vzeroupper 
  0x00007f88610daadb:   callq  0x00007f8861054580           ; ImmutableOopMap {[48]=NarrowOop [68]=NarrowOop [128]=Oop [144]=Oop }
                                                            ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) jdk.incubator.vector.AbstractSpecies::dummyVector@6 (line 309)
                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::dummyVector@1 (line 3918)
                                                            ; - jdk.incubator.vector.IntVector::fromArray@19 (line 2955)
                                                            ; - test::ReadFilter_vector@114 (line 49)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610daae0:   jmp    0x00007f88610daae2
  0x00007f88610daae2:   mov    %rax,%rsi
  0x00007f88610daae5:   jmp    0x00007f88610daaf8
  0x00007f88610daae7:   jmp    0x00007f88610daae9
  0x00007f88610daae9:   mov    %rax,%rsi
  0x00007f88610daaec:   jmp    0x00007f88610daaf8
  0x00007f88610daaee:   jmp    0x00007f88610daaf0
  0x00007f88610daaf0:   mov    %rax,%rsi
  0x00007f88610daaf3:   jmp    0x00007f88610daaf8
  0x00007f88610daaf5:   mov    %rax,%rsi
  0x00007f88610daaf8:   vzeroupper 
  0x00007f88610daafb:   add    $0x110,%rsp
  0x00007f88610dab02:   pop    %rbp
  0x00007f88610dab03:   jmpq   0x00007f8861073c80           ;   {runtime_call _rethrow_Java}
  0x00007f88610dab08:   movabs $0x7f88610da530,%r10         ;   {internal_word}
  0x00007f88610dab12:   mov    %r10,0x390(%r15)
  0x00007f88610dab19:   jmpq   0x00007f8861053400           ;   {runtime_call SafepointBlob}
  0x00007f88610dab1e:   hlt    
  0x00007f88610dab1f:   hlt    
[Exception Handler]
  0x00007f88610dab20:   jmpq   0x00007f8861068a80           ;   {no_reloc}
[Deopt Handler Code]
  0x00007f88610dab25:   callq  0x00007f88610dab2a
  0x00007f88610dab2a:   subq   $0x5,(%rsp)
  0x00007f88610dab2f:   jmpq   0x00007f88610548a0           ;   {runtime_call DeoptimizationBlob}
  0x00007f88610dab34:   movabs $0x800044d70,%rbx            ;   {static_stub}
  0x00007f88610dab3e:   jmpq   0x00007f8861088114           ;   {runtime_call I2C/C2I adapters}
  0x00007f88610dab43:   movabs $0x0,%rbx                    ;   {static_stub}
  0x00007f88610dab4d:   jmpq   0x00007f88610dab4d           ;   {runtime_call}
  0x00007f88610dab52:   hlt    
  0x00007f88610dab53:   hlt    
  0x00007f88610dab54:   hlt    
  0x00007f88610dab55:   hlt    
  0x00007f88610dab56:   hlt    
  0x00007f88610dab57:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     305  329             test::ReadFilter_vector (163 bytes)
 total in heap  [0x00007f88610eaa10,0x00007f88610eb790] = 3456
 relocation     [0x00007f88610eab60,0x00007f88610eaba0] = 64
 constants      [0x00007f88610eaba0,0x00007f88610eabc0] = 32
 main code      [0x00007f88610eabc0,0x00007f88610eb0e8] = 1320
 stub code      [0x00007f88610eb0e8,0x00007f88610eb100] = 24
 oops           [0x00007f88610eb100,0x00007f88610eb130] = 48
 metadata       [0x00007f88610eb130,0x00007f88610eb210] = 224
 scopes data    [0x00007f88610eb210,0x00007f88610eb5a0] = 912
 scopes pcs     [0x00007f88610eb5a0,0x00007f88610eb710] = 368
 dependencies   [0x00007f88610eb710,0x00007f88610eb748] = 56
 nul chk table  [0x00007f88610eb748,0x00007f88610eb790] = 72

[Disassembly]
--------------------------------------------------------------------------------

[Constant Pool]
             Address          hex4                    hex8      
  0x00007f88610eaba0:   0x00000000      0x3ca0000000000000      
  0x00007f88610eaba4:   0x3ca00000                              
  0x00007f88610eaba8:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x00007f88610eabac:   0xf4f4f4f4                              
  0x00007f88610eabb0:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x00007f88610eabb4:   0xf4f4f4f4                              
  0x00007f88610eabb8:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x00007f88610eabbc:   0xf4f4f4f4                              

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x00007f8818401c70} 'ReadFilter_vector' '()V' in 'test'
  #           [sp+0xa0]  (sp of caller)
  0x00007f88610eabc0:   mov    %eax,-0x14000(%rsp)          ;   {no_reloc}
  0x00007f88610eabc7:   push   %rbp
  0x00007f88610eabc8:   sub    $0x90,%rsp
  0x00007f88610eabcf:   mov    $0xfffffff8,%r13d
  0x00007f88610eabd5:   movabs $0x11f0de520,%rdi            ;   {oop(a 'java/lang/Class'{0x000000011f0de520} = 'test')}
  0x00007f88610eabdf:   and    0x98(%rdi),%r13d
  0x00007f88610eabe6:   mov    %r12d,0x9c(%rdi)
  0x00007f88610eabed:   test   %r13d,%r13d
  0x00007f88610eabf0:   jle    0x00007f88610eae4e
  0x00007f88610eabf6:   data16 nopw 0x0(%rax,%rax,1)
  0x00007f88610eac00:   cmp    $0x7ffffff8,%r13d
  0x00007f88610eac07:   jg     0x00007f88610eb034
  0x00007f88610eac0d:   movabs $0x5deece66d,%rsi
  0x00007f88610eac17:   movabs $0xffffffffffff,%rbp
  0x00007f88610eac21:   xor    %r10d,%r10d
  0x00007f88610eac24:   xor    %edx,%edx
  0x00007f88610eac26:   data16 nopw 0x0(%rax,%rax,1)
  0x00007f88610eac30:   mov    0x84(%rdi),%r11d
  0x00007f88610eac37:   nopw   0x0(%rax,%rax,1)
  0x00007f88610eac40:   mov    0x18(%r12,%r11,8),%r9d       ; implicit exception: dispatches to 0x00007f88610eb048
  0x00007f88610eac45:   mov    0x10(%r12,%r9,8),%rax        ; implicit exception: dispatches to 0x00007f88610eb058
  0x00007f88610eac4a:   mov    %rax,%rcx
  0x00007f88610eac4d:   imul   %rsi,%rcx
  0x00007f88610eac51:   mov    0x70(%rdi),%r8d
  0x00007f88610eac55:   add    $0xb,%rcx
  0x00007f88610eac59:   mov    %rcx,%rbx
  0x00007f88610eac5c:   and    %rbp,%rbx
  0x00007f88610eac5f:   lock cmpxchg %rbx,0x10(%r12,%r9,8)
  0x00007f88610eac66:   sete   %bl
  0x00007f88610eac69:   movzbl %bl,%ebx
  0x00007f88610eac6c:   test   %ebx,%ebx
  0x00007f88610eac6e:   je     0x00007f88610eae8c
  0x00007f88610eac74:   mov    0x18(%r12,%r11,8),%r11d
  0x00007f88610eac79:   nopl   0x0(%rax)
  0x00007f88610eac80:   mov    0x10(%r12,%r11,8),%rax       ; implicit exception: dispatches to 0x00007f88610eb068
  0x00007f88610eac85:   mov    %rax,%rbx
  0x00007f88610eac88:   imul   %rsi,%rbx
  0x00007f88610eac8c:   shr    $0x16,%rcx
  0x00007f88610eac90:   add    $0xb,%rbx
  0x00007f88610eac94:   mov    %rbx,%r9
  0x00007f88610eac97:   and    %rbp,%r9
  0x00007f88610eac9a:   lock cmpxchg %r9,0x10(%r12,%r11,8)
  0x00007f88610eaca1:   sete   %r9b
  0x00007f88610eaca5:   movzbl %r9b,%r9d
  0x00007f88610eaca9:   and    $0x3ffffff,%rcx
  0x00007f88610eacb0:   mov    %ecx,%ecx
  0x00007f88610eacb2:   movslq %ecx,%rcx
  0x00007f88610eacb5:   shl    $0x1b,%rcx
  0x00007f88610eacb9:   test   %r9d,%r9d
  0x00007f88610eacbc:   nopl   0x0(%rax)
  0x00007f88610eacc0:   je     0x00007f88610eaeb8
  0x00007f88610eacc6:   shr    $0x15,%rbx
  0x00007f88610eacca:   and    $0x7ffffff,%rbx
  0x00007f88610eacd1:   mov    %ebx,%r9d
  0x00007f88610eacd4:   movslq %r9d,%r11
  0x00007f88610eacd7:   add    %rcx,%r11
  0x00007f88610eacda:   vcvtsi2sd %r11,%xmm0,%xmm0
  0x00007f88610eacdf:   vmulsd -0x147(%rip),%xmm0,%xmm0        # 0x00007f88610eaba0
                                                            ;   {section_word}
  0x00007f88610eace7:   mov    0xc(%r12,%r8,8),%r9d         ; implicit exception: dispatches to 0x00007f88610eb078
  0x00007f88610eacec:   cmp    %r9d,%edx
  0x00007f88610eacef:   jae    0x00007f88610eae67
  0x00007f88610eacf5:   lea    (%r12,%r8,8),%r11
  0x00007f88610eacf9:   vmovsd %xmm0,0x10(%r11,%rdx,8)
  0x00007f88610ead00:   inc    %edx
  0x00007f88610ead02:   cmp    $0x8,%edx
  0x00007f88610ead05:   jl     0x00007f88610eac30
  0x00007f88610ead0b:   mov    0x70(%rdi),%r9d
  0x00007f88610ead0f:   mov    0xc(%r12,%r9,8),%r11d        ; implicit exception: dispatches to 0x00007f88610eb08c
  0x00007f88610ead14:   mov    %r11d,%r8d
  0x00007f88610ead17:   add    $0xfffffff9,%r8d
  0x00007f88610ead1b:   nopl   0x0(%rax,%rax,1)
  0x00007f88610ead20:   test   %r8d,%r8d
  0x00007f88610ead23:   jl     0x00007f88610eaf8c
  0x00007f88610ead29:   cmp    $0x7,%r11d
  0x00007f88610ead2d:   je     0x00007f88610eaee4
  0x00007f88610ead33:   mov    0x78(%rdi),%edx
  0x00007f88610ead36:   data16 nopw 0x0(%rax,%rax,1)
  0x00007f88610ead40:   mov    0xc(%r12,%rdx,8),%r8d        ; implicit exception: dispatches to 0x00007f88610eb09c
  0x00007f88610ead45:   vmovdqu32 0x10(%r12,%r9,8),%zmm0
  0x00007f88610ead50:   vmovsd 0x90(%rdi),%xmm1
  0x00007f88610ead58:   vmovsd 0x88(%rdi),%xmm2
  0x00007f88610ead60:   add    $0xfffffff9,%r8d
  0x00007f88610ead64:   vbroadcastsd %xmm2,%zmm2
  0x00007f88610ead6a:   vbroadcastsd %xmm1,%zmm1
  0x00007f88610ead70:   mov    0x9c(%rdi),%r11d
  0x00007f88610ead77:   vcmple_oqpd %zmm1,%zmm0,%k7
  0x00007f88610ead7e:   vcmpge_oqpd %zmm2,%zmm0,%k6
  0x00007f88610ead85:   kandb  %k7,%k6,%k7
  0x00007f88610ead89:   kmovq  %k7,%k6
  0x00007f88610ead8e:   vcompresspd %zmm0,%zmm0{%k6}{z}

  0x00007f88610ead94:   vpmovm2b %k7,%xmm1
  0x00007f88610ead9a:   vpabsb %xmm1,%xmm1

  0x00007f88610ead9f:   nop
  0x00007f88610eada0:   test   %r8d,%r8d
  0x00007f88610eada3:   jl     0x00007f88610eafac
  0x00007f88610eada9:   cmp    %r8d,%r11d
  0x00007f88610eadac:   jae    0x00007f88610eaf04
  0x00007f88610eadb2:   mov    0x80(%rdi),%r9d
  0x00007f88610eadb9:   mov    %r11d,%ebx
  0x00007f88610eadbc:   lea    (%r12,%rdx,8),%r8
  0x00007f88610eadc0:   vmovdqu32 %zmm0,0x10(%r8,%rbx,8)
  0x00007f88610eadcb:   mov    0xc(%r12,%r9,8),%edx         ; implicit exception: dispatches to 0x00007f88610eb0ac
  0x00007f88610eadd0:   add    $0xfffffff9,%edx
  0x00007f88610eadd3:   test   %edx,%edx
  0x00007f88610eadd5:   jl     0x00007f88610eafdc
  0x00007f88610eaddb:   nopl   0x0(%rax,%rax,1)
  0x00007f88610eade0:   cmp    %edx,%r10d
  0x00007f88610eade3:   jae    0x00007f88610eaf34
  0x00007f88610eade9:   mov    0x7c(%rdi),%edx
  0x00007f88610eadec:   mov    0xc(%r12,%rdx,8),%r8d        ; implicit exception: dispatches to 0x00007f88610eb0bc
  0x00007f88610eadf1:   shl    $0x3,%r9
  0x00007f88610eadf5:   vmovdqu 0x10(%r9,%r10,4),%ymm0
  0x00007f88610eadfc:   vpcompressd %ymm0,%ymm0{%k6}{z}
  0x00007f88610eae02:   add    $0xfffffff9,%r8d
  0x00007f88610eae06:   test   %r8d,%r8d
  0x00007f88610eae09:   jl     0x00007f88610eb004
  0x00007f88610eae0f:   cmp    %r8d,%r11d
  0x00007f88610eae12:   jae    0x00007f88610eaf5c
  0x00007f88610eae18:   mov    0x380(%r15),%r8
  0x00007f88610eae1f:   lea    (%r12,%rdx,8),%r9
  0x00007f88610eae23:   vmovdqu %ymm0,0x10(%r9,%rbx,4)
  0x00007f88610eae2a:   kmovq  %k7,%rcx
  0x00007f88610eae2f:   popcnt %rcx,%r9
  0x00007f88610eae34:   add    %r11d,%r9d
  0x00007f88610eae37:   mov    %r9d,0x9c(%rdi)
  0x00007f88610eae3e:   add    $0x8,%r10d                   ; ImmutableOopMap {rdi=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) test::ReadFilter_vector@159 (line 38)
  0x00007f88610eae42:   test   %eax,(%r8)                   ;   {poll}
  0x00007f88610eae45:   cmp    %r13d,%r10d
  0x00007f88610eae48:   jl     0x00007f88610eac24
  0x00007f88610eae4e:   vzeroupper 
  0x00007f88610eae51:   add    $0x90,%rsp
  0x00007f88610eae58:   pop    %rbp
  0x00007f88610eae59:   cmp    0x378(%r15),%rsp             ;   {poll_return}
  0x00007f88610eae60:   ja     0x00007f88610eb0cc
  0x00007f88610eae66:   retq   
  0x00007f88610eae67:   mov    $0xffffffe4,%esi
  0x00007f88610eae6c:   mov    %r10d,%ebp
  0x00007f88610eae6f:   mov    %r13d,(%rsp)
  0x00007f88610eae73:   mov    %r8d,0x8(%rsp)
  0x00007f88610eae78:   mov    %edx,0xc(%rsp)
  0x00007f88610eae7c:   vmovsd %xmm0,0x10(%rsp)
  0x00007f88610eae82:   xchg   %ax,%ax
  0x00007f88610eae84:   vzeroupper 
  0x00007f88610eae87:   callq  0x00007f8861054580           ; ImmutableOopMap {[8]=NarrowOop }
                                                            ;*dastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::ReadFilter_vector@56 (line 40)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610eae8c:   mov    $0xffffff45,%esi
  0x00007f88610eae91:   mov    %r10d,%ebp
  0x00007f88610eae94:   mov    %r13d,(%rsp)
  0x00007f88610eae98:   mov    %r8d,0x8(%rsp)
  0x00007f88610eae9d:   mov    %edx,0xc(%rsp)
  0x00007f88610eaea1:   mov    %r11d,0x10(%rsp)
  0x00007f88610eaea6:   mov    %r9d,0x14(%rsp)
  0x00007f88610eaeab:   mov    %ebx,0x18(%rsp)
  0x00007f88610eaeaf:   nop
  0x00007f88610eaeb0:   vzeroupper 
  0x00007f88610eaeb3:   callq  0x00007f8861054580           ; ImmutableOopMap {[8]=NarrowOop [16]=NarrowOop [20]=NarrowOop }
                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.Random::next@35 (line 444)
                                                            ; - java.util.Random::nextDouble@3 (line 698)
                                                            ; - test::ReadFilter_vector@53 (line 40)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610eaeb8:   mov    $0xffffff45,%esi
  0x00007f88610eaebd:   mov    %r10d,%ebp
  0x00007f88610eaec0:   mov    %r13d,(%rsp)
  0x00007f88610eaec4:   mov    %r8d,0x8(%rsp)
  0x00007f88610eaec9:   mov    %edx,0xc(%rsp)
  0x00007f88610eaecd:   mov    %rcx,0x10(%rsp)
  0x00007f88610eaed2:   mov    %r11d,0x18(%rsp)
  0x00007f88610eaed7:   mov    %r9d,0x1c(%rsp)
  0x00007f88610eaedc:   vzeroupper 
  0x00007f88610eaedf:   callq  0x00007f8861054580           ; ImmutableOopMap {[8]=NarrowOop [24]=NarrowOop }
                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.Random::next@35 (line 444)
                                                            ; - java.util.Random::nextDouble@13 (line 698)
                                                            ; - test::ReadFilter_vector@53 (line 40)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610eaee4:   mov    $0xffffffe4,%esi
  0x00007f88610eaee9:   mov    %r10d,%ebp
  0x00007f88610eaeec:   mov    %r13d,(%rsp)
  0x00007f88610eaef0:   mov    %r9d,0x4(%rsp)
  0x00007f88610eaef5:   mov    %r8d,0x8(%rsp)
  0x00007f88610eaefa:   xchg   %ax,%ax
  0x00007f88610eaefc:   vzeroupper 
  0x00007f88610eaeff:   callq  0x00007f8861054580           ; ImmutableOopMap {[4]=NarrowOop }
                                                            ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::checkIndex@3 (line 385)
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 57)
                                                            ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2773)
                                                            ; - test::ReadFilter_vector@70 (line 42)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610eaf04:   mov    $0xffffffe4,%esi
  0x00007f88610eaf09:   mov    %r10d,%ebp
  0x00007f88610eaf0c:   mov    %r13d,(%rsp)
  0x00007f88610eaf10:   mov    %edx,0x4(%rsp)
  0x00007f88610eaf14:   mov    %r11d,0x8(%rsp)
  0x00007f88610eaf19:   mov    %r8d,0xc(%rsp)
  0x00007f88610eaf1e:   vmovq  %xmm1,0x10(%rsp)
  0x00007f88610eaf24:   vmovdqu64 %zmm0,0x40(%rsp)
  0x00007f88610eaf2c:   vzeroupper 
  0x00007f88610eaf2f:   callq  0x00007f8861054580           ; ImmutableOopMap {[4]=NarrowOop }
                                                            ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::checkIndex@3 (line 385)
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 57)
                                                            ; - jdk.incubator.vector.LongVector::intoArray@7 (line 3105)
                                                            ; - test::ReadFilter_vector@106 (line 47)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610eaf34:   mov    $0xffffffe4,%esi
  0x00007f88610eaf39:   mov    %r13d,(%rsp)
  0x00007f88610eaf3d:   mov    %r9d,0x4(%rsp)
  0x00007f88610eaf42:   mov    %r10d,0x8(%rsp)
  0x00007f88610eaf47:   mov    %edx,0xc(%rsp)
  0x00007f88610eaf4b:   vmovq  %xmm1,0x10(%rsp)
  0x00007f88610eaf51:   data16 xchg %ax,%ax
  0x00007f88610eaf54:   vzeroupper 
  0x00007f88610eaf57:   callq  0x00007f8861054580           ; ImmutableOopMap {[4]=NarrowOop }
                                                            ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::checkIndex@3 (line 385)
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 57)
                                                            ; - jdk.incubator.vector.IntVector::fromArray@9 (line 2953)
                                                            ; - test::ReadFilter_vector@114 (line 49)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610eaf5c:   mov    $0xffffffe4,%esi
  0x00007f88610eaf61:   mov    %r10d,%ebp
  0x00007f88610eaf64:   mov    %r13d,(%rsp)
  0x00007f88610eaf68:   mov    %edx,0x4(%rsp)
  0x00007f88610eaf6c:   mov    %r11d,0x8(%rsp)
  0x00007f88610eaf71:   mov    %r8d,0xc(%rsp)
  0x00007f88610eaf76:   vmovdqu %ymm0,0x20(%rsp)
  0x00007f88610eaf7c:   vmovq  %xmm1,0x10(%rsp)
  0x00007f88610eaf82:   xchg   %ax,%ax
  0x00007f88610eaf84:   vzeroupper 
  0x00007f88610eaf87:   callq  0x00007f8861054580           ; ImmutableOopMap {[4]=NarrowOop }
                                                            ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::checkIndex@3 (line 385)
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 57)
                                                            ; - jdk.incubator.vector.IntVector::intoArray@7 (line 3226)
                                                            ; - test::ReadFilter_vector@140 (line 51)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610eaf8c:   mov    $0xffffffcc,%esi
  0x00007f88610eaf91:   mov    %r10d,%ebp
  0x00007f88610eaf94:   mov    %r13d,(%rsp)
  0x00007f88610eaf98:   mov    %r9d,0x4(%rsp)
  0x00007f88610eaf9d:   mov    %r8d,0x8(%rsp)
  0x00007f88610eafa2:   xchg   %ax,%ax
  0x00007f88610eafa4:   vzeroupper 
  0x00007f88610eafa7:   callq  0x00007f8861054580           ; ImmutableOopMap {[4]=NarrowOop }
                                                            ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::checkIndex@3 (line 385)
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 57)
                                                            ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2773)
                                                            ; - test::ReadFilter_vector@70 (line 42)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610eafac:   mov    $0xffffffcc,%esi
  0x00007f88610eafb1:   mov    %r10d,%ebp
  0x00007f88610eafb4:   mov    %r13d,(%rsp)
  0x00007f88610eafb8:   mov    %edx,0x4(%rsp)
  0x00007f88610eafbc:   mov    %r11d,0x8(%rsp)
  0x00007f88610eafc1:   mov    %r8d,0xc(%rsp)
  0x00007f88610eafc6:   vmovq  %xmm1,0x10(%rsp)
  0x00007f88610eafcc:   vmovdqu64 %zmm0,0x40(%rsp)
  0x00007f88610eafd4:   vzeroupper 
  0x00007f88610eafd7:   callq  0x00007f8861054580           ; ImmutableOopMap {[4]=NarrowOop }
                                                            ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::checkIndex@3 (line 385)
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 57)
                                                            ; - jdk.incubator.vector.LongVector::intoArray@7 (line 3105)
                                                            ; - test::ReadFilter_vector@106 (line 47)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610eafdc:   mov    $0xffffffcc,%esi
  0x00007f88610eafe1:   mov    %r13d,(%rsp)
  0x00007f88610eafe5:   mov    %r9d,0x4(%rsp)
  0x00007f88610eafea:   mov    %r10d,0x8(%rsp)
  0x00007f88610eafef:   mov    %edx,0xc(%rsp)
  0x00007f88610eaff3:   vmovq  %xmm1,0x10(%rsp)
  0x00007f88610eaff9:   data16 xchg %ax,%ax
  0x00007f88610eaffc:   vzeroupper 
  0x00007f88610eafff:   callq  0x00007f8861054580           ; ImmutableOopMap {[4]=NarrowOop }
                                                            ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::checkIndex@3 (line 385)
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 57)
                                                            ; - jdk.incubator.vector.IntVector::fromArray@9 (line 2953)
                                                            ; - test::ReadFilter_vector@114 (line 49)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610eb004:   mov    $0xffffffcc,%esi
  0x00007f88610eb009:   mov    %r10d,%ebp
  0x00007f88610eb00c:   mov    %r13d,(%rsp)
  0x00007f88610eb010:   mov    %edx,0x4(%rsp)
  0x00007f88610eb014:   mov    %r11d,0x8(%rsp)
  0x00007f88610eb019:   mov    %r8d,0xc(%rsp)
  0x00007f88610eb01e:   vmovdqu %ymm0,0x20(%rsp)
  0x00007f88610eb024:   vmovq  %xmm1,0x10(%rsp)
  0x00007f88610eb02a:   xchg   %ax,%ax
  0x00007f88610eb02c:   vzeroupper 
  0x00007f88610eb02f:   callq  0x00007f8861054580           ; ImmutableOopMap {[4]=NarrowOop }
                                                            ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::checkIndex@3 (line 385)
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 57)
                                                            ; - jdk.incubator.vector.IntVector::intoArray@7 (line 3226)
                                                            ; - test::ReadFilter_vector@140 (line 51)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610eb034:   mov    $0xffffff6e,%esi
  0x00007f88610eb039:   mov    %r13d,(%rsp)
  0x00007f88610eb03d:   data16 xchg %ax,%ax
  0x00007f88610eb040:   vzeroupper 
  0x00007f88610eb043:   callq  0x00007f8861054580           ; ImmutableOopMap {}
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) test::ReadFilter_vector@33 (line 38)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610eb048:   mov    $0xfffffff6,%esi
  0x00007f88610eb04d:   data16 xchg %ax,%ax
  0x00007f88610eb050:   vzeroupper 
  0x00007f88610eb053:   callq  0x00007f8861054580           ; ImmutableOopMap {}
                                                            ;*invokevirtual nextDouble {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::ReadFilter_vector@53 (line 40)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610eb058:   mov    $0xfffffff6,%esi
  0x00007f88610eb05d:   data16 xchg %ax,%ax
  0x00007f88610eb060:   vzeroupper 
  0x00007f88610eb063:   callq  0x00007f8861054580           ; ImmutableOopMap {}
                                                            ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@8 (line 442)
                                                            ; - java.util.Random::nextDouble@3 (line 698)
                                                            ; - test::ReadFilter_vector@53 (line 40)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610eb068:   mov    $0xfffffff6,%esi
  0x00007f88610eb06d:   data16 xchg %ax,%ax
  0x00007f88610eb070:   vzeroupper 
  0x00007f88610eb073:   callq  0x00007f8861054580           ; ImmutableOopMap {}
                                                            ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@8 (line 442)
                                                            ; - java.util.Random::nextDouble@13 (line 698)
                                                            ; - test::ReadFilter_vector@53 (line 40)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610eb078:   mov    $0xfffffff6,%esi
  0x00007f88610eb07d:   mov    %edx,%ebp
  0x00007f88610eb07f:   vmovsd %xmm0,(%rsp)
  0x00007f88610eb084:   vzeroupper 
  0x00007f88610eb087:   callq  0x00007f8861054580           ; ImmutableOopMap {}
                                                            ;*dastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::ReadFilter_vector@56 (line 40)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610eb08c:   mov    $0xfffffff6,%esi
  0x00007f88610eb091:   data16 xchg %ax,%ax
  0x00007f88610eb094:   vzeroupper 
  0x00007f88610eb097:   callq  0x00007f8861054580           ; ImmutableOopMap {}
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.DoubleVector::fromArray@8 (line 2773)
                                                            ; - test::ReadFilter_vector@70 (line 42)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610eb09c:   mov    $0xfffffff6,%esi
  0x00007f88610eb0a1:   data16 xchg %ax,%ax
  0x00007f88610eb0a4:   vzeroupper 
  0x00007f88610eb0a7:   callq  0x00007f8861054580           ; ImmutableOopMap {}
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.LongVector::intoArray@6 (line 3105)
                                                            ; - test::ReadFilter_vector@106 (line 47)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610eb0ac:   mov    $0xfffffff6,%esi
  0x00007f88610eb0b1:   data16 xchg %ax,%ax
  0x00007f88610eb0b4:   vzeroupper 
  0x00007f88610eb0b7:   callq  0x00007f8861054580           ; ImmutableOopMap {}
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::fromArray@8 (line 2953)
                                                            ; - test::ReadFilter_vector@114 (line 49)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610eb0bc:   mov    $0xfffffff6,%esi
  0x00007f88610eb0c1:   data16 xchg %ax,%ax
  0x00007f88610eb0c4:   vzeroupper 
  0x00007f88610eb0c7:   callq  0x00007f8861054580           ; ImmutableOopMap {}
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.IntVector::intoArray@6 (line 3226)
                                                            ; - test::ReadFilter_vector@140 (line 51)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610eb0cc:   movabs $0x7f88610eae59,%r10         ;   {internal_word}
  0x00007f88610eb0d6:   mov    %r10,0x390(%r15)
  0x00007f88610eb0dd:   jmpq   0x00007f8861053400           ;   {runtime_call SafepointBlob}
  0x00007f88610eb0e2:   hlt    
  0x00007f88610eb0e3:   hlt    
  0x00007f88610eb0e4:   hlt    
  0x00007f88610eb0e5:   hlt    
  0x00007f88610eb0e6:   hlt    
  0x00007f88610eb0e7:   hlt    
[Exception Handler]
  0x00007f88610eb0e8:   jmpq   0x00007f8861068a80           ;   {no_reloc}
[Deopt Handler Code]
  0x00007f88610eb0ed:   callq  0x00007f88610eb0f2
  0x00007f88610eb0f2:   subq   $0x5,(%rsp)
  0x00007f88610eb0f7:   jmpq   0x00007f88610548a0           ;   {runtime_call DeoptimizationBlob}
  0x00007f88610eb0fc:   hlt    
  0x00007f88610eb0fd:   hlt    
  0x00007f88610eb0fe:   hlt    
  0x00007f88610eb0ff:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)    1953  353 %           test::main @ 24 (254 bytes)
 total in heap  [0x00007f88610f4110,0x00007f88610f43d8] = 712
 relocation     [0x00007f88610f4260,0x00007f88610f4280] = 32
 main code      [0x00007f88610f4280,0x00007f88610f42e8] = 104
 stub code      [0x00007f88610f42e8,0x00007f88610f4310] = 40
 oops           [0x00007f88610f4310,0x00007f88610f4318] = 8
 metadata       [0x00007f88610f4318,0x00007f88610f4320] = 8
 scopes data    [0x00007f88610f4320,0x00007f88610f4368] = 72
 scopes pcs     [0x00007f88610f4368,0x00007f88610f43b8] = 80
 dependencies   [0x00007f88610f43b8,0x00007f88610f43c0] = 8
 handler table  [0x00007f88610f43c0,0x00007f88610f43d8] = 24

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x00007f8818402168} 'main' '([Ljava/lang/String;)V' in 'test'
  0x00007f88610f4280:   callq  0x00007f8873436f80           ;   {runtime_call os::breakpoint()}
  0x00007f88610f4285:   data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f88610f4290:   mov    %eax,-0x14000(%rsp)
  0x00007f88610f4297:   push   %rbp
  0x00007f88610f4298:   sub    $0x10,%rsp
  0x00007f88610f429c:   mov    0x40(%rsi),%ebp
  0x00007f88610f429f:   mov    %rsi,%rdi
  0x00007f88610f42a2:   movabs $0x7f88734f2fd0,%r10
  0x00007f88610f42ac:   callq  *%r10
  0x00007f88610f42af:   jmp    0x00007f88610f42c4
  0x00007f88610f42b1:   xchg   %ax,%ax
  0x00007f88610f42b3:   callq  0x00007f886104d180           ; ImmutableOopMap {}
                                                            ;*invokestatic ReadFilter_vector {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::main@30 (line 86)
                                                            ;   {static_call}
  0x00007f88610f42b8:   mov    0x380(%r15),%r10
  0x00007f88610f42bf:   inc    %ebp                         ; ImmutableOopMap {}
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) test::main@36 (line 85)
  0x00007f88610f42c1:   test   %eax,(%r10)                  ;   {poll}
  0x00007f88610f42c4:   cmp    $0x186a0,%ebp
  0x00007f88610f42ca:   jl     0x00007f88610f42b1
  0x00007f88610f42cc:   mov    $0xffffff45,%esi
  0x00007f88610f42d1:   xchg   %ax,%ax
  0x00007f88610f42d3:   callq  0x00007f8861054580           ; ImmutableOopMap {}
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) test::main@27 (line 85)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610f42d8:   mov    %rax,%rsi
  0x00007f88610f42db:   add    $0x10,%rsp
  0x00007f88610f42df:   pop    %rbp
  0x00007f88610f42e0:   jmpq   0x00007f8861073c80           ;   {runtime_call _rethrow_Java}
  0x00007f88610f42e5:   hlt    
  0x00007f88610f42e6:   hlt    
  0x00007f88610f42e7:   hlt    
[Exception Handler]
  0x00007f88610f42e8:   jmpq   0x00007f8861068a80           ;   {no_reloc}
[Deopt Handler Code]
  0x00007f88610f42ed:   callq  0x00007f88610f42f2
  0x00007f88610f42f2:   subq   $0x5,(%rsp)
  0x00007f88610f42f7:   jmpq   0x00007f88610548a0           ;   {runtime_call DeoptimizationBlob}
  0x00007f88610f42fc:   movabs $0x0,%rbx                    ;   {static_stub}
  0x00007f88610f4306:   jmpq   0x00007f88610f4306           ;   {runtime_call}
  0x00007f88610f430b:   hlt    
  0x00007f88610f430c:   hlt    
  0x00007f88610f430d:   hlt    
  0x00007f88610f430e:   hlt    
  0x00007f88610f430f:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)    2048  354             test::main (254 bytes)
 total in heap  [0x00007f88610f9390,0x00007f88610f9b08] = 1912
 relocation     [0x00007f88610f94e0,0x00007f88610f9528] = 72
 main code      [0x00007f88610f9540,0x00007f88610f98e0] = 928
 stub code      [0x00007f88610f98e0,0x00007f88610f9928] = 72
 oops           [0x00007f88610f9928,0x00007f88610f9930] = 8
 metadata       [0x00007f88610f9930,0x00007f88610f9950] = 32
 scopes data    [0x00007f88610f9950,0x00007f88610f99d8] = 136
 scopes pcs     [0x00007f88610f99d8,0x00007f88610f9a78] = 160
 dependencies   [0x00007f88610f9a78,0x00007f88610f9a80] = 8
 handler table  [0x00007f88610f9a80,0x00007f88610f9af8] = 120
 nul chk table  [0x00007f88610f9af8,0x00007f88610f9b08] = 16

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x00007f8818402168} 'main' '([Ljava/lang/String;)V' in 'test'
  # parm0:    rsi:rsi   = '[Ljava/lang/String;'
  #           [sp+0x30]  (sp of caller)
  0x00007f88610f9540:   mov    %eax,-0x14000(%rsp)
  0x00007f88610f9547:   push   %rbp
  0x00007f88610f9548:   sub    $0x20,%rsp
  0x00007f88610f954c:   mov    %rsi,%r10
  0x00007f88610f954f:   mov    0xc(%rsi),%r11d              ; implicit exception: dispatches to 0x00007f88610f98b2
  0x00007f88610f9553:   test   %r11d,%r11d
  0x00007f88610f9556:   jbe    0x00007f88610f9865
  0x00007f88610f955c:   mov    0x10(%rsi),%r11d
  0x00007f88610f9560:   mov    %r11,%rsi
  0x00007f88610f9563:   shl    $0x3,%rsi
  0x00007f88610f9567:   callq  0x00007f886104d180           ; ImmutableOopMap {}
                                                            ;*invokestatic parseInt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::main@3 (line 83)
                                                            ;   {static_call}
  0x00007f88610f956c:   mov    %eax,%esi
  0x00007f88610f956e:   nop
  0x00007f88610f956f:   callq  0x00007f886104d180           ; ImmutableOopMap {}
                                                            ;*invokestatic setup {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::main@6 (line 83)
                                                            ;   {static_call}
  0x00007f88610f9574:   mov    0xf8(%r15),%r8
  0x00007f88610f957b:   mov    %r8,%r10
  0x00007f88610f957e:   add    $0x20,%r10
  0x00007f88610f9582:   cmp    0x108(%r15),%r10
  0x00007f88610f9589:   jae    0x00007f88610f982f
  0x00007f88610f958f:   mov    %r10,0xf8(%r15)
  0x00007f88610f9596:   prefetchw 0xc0(%r10)
  0x00007f88610f959e:   movq   $0x1,(%r8)
  0x00007f88610f95a5:   mov    %r8,%r10
  0x00007f88610f95a8:   add    $0x10,%r10
  0x00007f88610f95ac:   movl   $0x1aceb8,0x8(%r8)           ;   {metadata('java/util/Random')}
  0x00007f88610f95b4:   mov    %r12d,0xc(%r8)
  0x00007f88610f95b8:   vpxor  %ymm0,%ymm0,%ymm0
  0x00007f88610f95bc:   vmovdqu64 %xmm0,(%r10)
  0x00007f88610f95c2:   mov    %r8,(%rsp)
  0x00007f88610f95c6:   mov    0xf8(%r15),%rbx
  0x00007f88610f95cd:   mov    %rbx,%r10
  0x00007f88610f95d0:   add    $0x18,%r10
  0x00007f88610f95d4:   nopl   0x0(%rax,%rax,1)
  0x00007f88610f95dc:   data16 data16 xchg %ax,%ax
  0x00007f88610f95e0:   cmp    0x108(%r15),%r10
  0x00007f88610f95e7:   jae    0x00007f88610f9848
  0x00007f88610f95ed:   mov    %r10,0xf8(%r15)
  0x00007f88610f95f4:   prefetchw 0xc0(%r10)
  0x00007f88610f95fc:   movq   $0x1,(%rbx)
  0x00007f88610f9603:   mov    %rbx,%r10
  0x00007f88610f9606:   add    $0x10,%r10
  0x00007f88610f960a:   movl   $0x2777d8,0x8(%rbx)          ;   {metadata('java/util/concurrent/atomic/AtomicLong')}
  0x00007f88610f9611:   mov    %r12d,0xc(%rbx)
  0x00007f88610f9615:   vpxor  %ymm0,%ymm0,%ymm0
  0x00007f88610f9619:   vmovq  %xmm0,(%r10)
  0x00007f88610f961e:   mov    $0x3ff,%r10d
  0x00007f88610f9624:   movabs $0x5deece66d,%r11
  0x00007f88610f962e:   xor    %r11,%r10
  0x00007f88610f9631:   mov    %r10,0x10(%rbx)
  0x00007f88610f9635:   lock addl $0x0,-0x40(%rsp)
  0x00007f88610f963b:   nopl   0x0(%rax,%rax,1)
  0x00007f88610f9640:   cmpb   $0x0,0x40(%r15)
  0x00007f88610f9645:   jne    0x00007f88610f9714
  0x00007f88610f964b:   mov    (%rsp),%r10
  0x00007f88610f964f:   mov    %rbx,%r11
  0x00007f88610f9652:   xor    %r10,%r11
  0x00007f88610f9655:   mov    %rbx,%r9
  0x00007f88610f9658:   shr    $0x3,%r9
  0x00007f88610f965c:   mov    (%rsp),%r8
  0x00007f88610f9660:   mov    %r9d,0x18(%r8)
  0x00007f88610f9664:   shr    $0x18,%r11
  0x00007f88610f9668:   mov    %r8,%r13
  0x00007f88610f966b:   shr    $0x3,%r13
  0x00007f88610f966f:   movabs $0x11f0de520,%rbx            ;   {oop(a 'java/lang/Class'{0x000000011f0de520} = 'test')}
  0x00007f88610f9679:   xor    %ebp,%ebp
  0x00007f88610f967b:   nopl   0x0(%rax,%rax,1)
  0x00007f88610f9680:   test   %r11,%r11
  0x00007f88610f9683:   je     0x00007f88610f969f
  0x00007f88610f9685:   shr    $0x9,%r10
  0x00007f88610f9689:   movabs $0x7f8856ed9000,%rdi
  0x00007f88610f9693:   add    %r10,%rdi
  0x00007f88610f9696:   cmpb   $0x4,(%rdi)
  0x00007f88610f9699:   jne    0x00007f88610f9793
  0x00007f88610f969f:   nop
  0x00007f88610f96a0:   cmpb   $0x0,0x40(%r15)
  0x00007f88610f96a5:   jne    0x00007f88610f9753
  0x00007f88610f96ab:   mov    %r13d,0x84(%rbx)
  0x00007f88610f96b2:   mov    (%rsp),%r10
  0x00007f88610f96b6:   mov    %rbx,%r11
  0x00007f88610f96b9:   xor    %r11,%r10
  0x00007f88610f96bc:   shr    $0x18,%r10
  0x00007f88610f96c0:   test   %r10,%r10
  0x00007f88610f96c3:   je     0x00007f88610f96f0
  0x00007f88610f96c5:   shr    $0x9,%r11
  0x00007f88610f96c9:   movabs $0x7f8856ed9000,%r8
  0x00007f88610f96d3:   add    %r11,%r8
  0x00007f88610f96d6:   cmpb   $0x4,(%r8)
  0x00007f88610f96da:   nopw   0x0(%rax,%rax,1)
  0x00007f88610f96e0:   jne    0x00007f88610f97e5
  0x00007f88610f96e6:   data16 nopw 0x0(%rax,%rax,1)
  0x00007f88610f96f0:   data16 xchg %ax,%ax
  0x00007f88610f96f3:   callq  0x00007f886104d180           ; ImmutableOopMap {}
                                                            ;*invokestatic ReadFilter_vector {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::main@30 (line 86)
                                                            ;   {static_call}
  0x00007f88610f96f8:   inc    %ebp
  0x00007f88610f96fa:   nopw   0x0(%rax,%rax,1)
  0x00007f88610f9700:   cmp    $0x186a0,%ebp
  0x00007f88610f9706:   jl     0x00007f88610f96f0
  0x00007f88610f9708:   mov    $0xffffff45,%esi
  0x00007f88610f970d:   xchg   %ax,%ax
  0x00007f88610f970f:   callq  0x00007f8861054580           ; ImmutableOopMap {}
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) test::main@27 (line 85)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610f9714:   mov    (%rsp),%r10
  0x00007f88610f9718:   mov    0x18(%r10),%r10d
  0x00007f88610f971c:   nopl   0x0(%rax)
  0x00007f88610f9720:   test   %r10d,%r10d
  0x00007f88610f9723:   je     0x00007f88610f964b
  0x00007f88610f9729:   mov    0x28(%r15),%r11
  0x00007f88610f972d:   mov    %r10,%rdi
  0x00007f88610f9730:   shl    $0x3,%rdi
  0x00007f88610f9734:   test   %r11,%r11
  0x00007f88610f9737:   je     0x00007f88610f9874
  0x00007f88610f973d:   mov    0x38(%r15),%r10
  0x00007f88610f9741:   mov    %rdi,-0x8(%r10,%r11,1)
  0x00007f88610f9746:   add    $0xfffffffffffffff8,%r11
  0x00007f88610f974a:   mov    %r11,0x28(%r15)
  0x00007f88610f974e:   jmpq   0x00007f88610f964b
  0x00007f88610f9753:   mov    0x84(%rbx),%r11d
  0x00007f88610f975a:   nopw   0x0(%rax,%rax,1)
  0x00007f88610f9760:   test   %r11d,%r11d
  0x00007f88610f9763:   je     0x00007f88610f96ab
  0x00007f88610f9769:   mov    0x28(%r15),%r10
  0x00007f88610f976d:   mov    %r11,%rdi
  0x00007f88610f9770:   shl    $0x3,%rdi
  0x00007f88610f9774:   test   %r10,%r10
  0x00007f88610f9777:   je     0x00007f88610f9892
  0x00007f88610f977d:   mov    0x38(%r15),%r11
  0x00007f88610f9781:   mov    %rdi,-0x8(%r11,%r10,1)
  0x00007f88610f9786:   add    $0xfffffffffffffff8,%r10
  0x00007f88610f978a:   mov    %r10,0x28(%r15)
  0x00007f88610f978e:   jmpq   0x00007f88610f96ab
  0x00007f88610f9793:   mov    0x48(%r15),%r10
  0x00007f88610f9797:   mov    0x58(%r15),%r11
  0x00007f88610f979b:   lock addl $0x0,-0x40(%rsp)
  0x00007f88610f97a1:   cmpb   $0x0,(%rdi)
  0x00007f88610f97a4:   je     0x00007f88610f969f
  0x00007f88610f97aa:   mov    %r12b,(%rdi)
  0x00007f88610f97ad:   test   %r10,%r10
  0x00007f88610f97b0:   jne    0x00007f88610f97d2
  0x00007f88610f97b2:   mov    %r15,%rsi
  0x00007f88610f97b5:   data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f88610f97c0:   movabs $0x7f8872ee4440,%r10
  0x00007f88610f97ca:   callq  *%r10
  0x00007f88610f97cd:   jmpq   0x00007f88610f969f
  0x00007f88610f97d2:   mov    %rdi,-0x8(%r11,%r10,1)
  0x00007f88610f97d7:   add    $0xfffffffffffffff8,%r10
  0x00007f88610f97db:   mov    %r10,0x48(%r15)
  0x00007f88610f97df:   nop
  0x00007f88610f97e0:   jmpq   0x00007f88610f969f
  0x00007f88610f97e5:   mov    0x48(%r15),%r10
  0x00007f88610f97e9:   mov    0x58(%r15),%r11
  0x00007f88610f97ed:   lock addl $0x0,-0x40(%rsp)
  0x00007f88610f97f3:   cmpb   $0x0,(%r8)
  0x00007f88610f97f7:   je     0x00007f88610f96f0
  0x00007f88610f97fd:   mov    %r12b,(%r8)
  0x00007f88610f9800:   test   %r10,%r10
  0x00007f88610f9803:   jne    0x00007f88610f981d
  0x00007f88610f9805:   mov    %r8,%rdi
  0x00007f88610f9808:   mov    %r15,%rsi
  0x00007f88610f980b:   movabs $0x7f8872ee4440,%r10
  0x00007f88610f9815:   callq  *%r10
  0x00007f88610f9818:   jmpq   0x00007f88610f96f0
  0x00007f88610f981d:   mov    %r8,-0x8(%r11,%r10,1)
  0x00007f88610f9822:   add    $0xfffffffffffffff8,%r10
  0x00007f88610f9826:   mov    %r10,0x48(%r15)
  0x00007f88610f982a:   jmpq   0x00007f88610f96f0
  0x00007f88610f982f:   movabs $0x8001aceb8,%rsi            ;   {metadata('java/util/Random')}
  0x00007f88610f9839:   xchg   %ax,%ax
  0x00007f88610f983b:   callq  0x00007f886106d280           ; ImmutableOopMap {}
                                                            ;*new {reexecute=0 rethrow=0 return_oop=1}
                                                            ; - test::main@9 (line 84)
                                                            ;   {runtime_call _new_instance_Java}
  0x00007f88610f9840:   mov    %rax,%r8
  0x00007f88610f9843:   jmpq   0x00007f88610f95c2
  0x00007f88610f9848:   movabs $0x8002777d8,%rsi            ;   {metadata('java/util/concurrent/atomic/AtomicLong')}
  0x00007f88610f9852:   mov    %r8,%rbp
  0x00007f88610f9855:   xchg   %ax,%ax
  0x00007f88610f9857:   callq  0x00007f886106d280           ; ImmutableOopMap {rbp=Oop [0]=Oop }
                                                            ;*new {reexecute=0 rethrow=0 return_oop=1}
                                                            ; - java.util.Random::<init>@19 (line 355)
                                                            ; - test::main@16 (line 84)
                                                            ;   {runtime_call _new_instance_Java}
  0x00007f88610f985c:   mov    %rax,%rbx
  0x00007f88610f985f:   nop
  0x00007f88610f9860:   jmpq   0x00007f88610f961e
  0x00007f88610f9865:   mov    $0xffffffe4,%esi
  0x00007f88610f986a:   mov    %r10,%rbp
  0x00007f88610f986d:   xchg   %ax,%ax
  0x00007f88610f986f:   callq  0x00007f8861054580           ; ImmutableOopMap {rbp=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::main@2 (line 83)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610f9874:   mov    %r15,%rsi
  0x00007f88610f9877:   nopw   0x0(%rax,%rax,1)
  0x00007f88610f9880:   movabs $0x7f8872ee4420,%r10
  0x00007f88610f988a:   callq  *%r10
  0x00007f88610f988d:   jmpq   0x00007f88610f964b
  0x00007f88610f9892:   mov    %r15,%rsi
  0x00007f88610f9895:   data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f88610f98a0:   movabs $0x7f8872ee4420,%r10
  0x00007f88610f98aa:   callq  *%r10
  0x00007f88610f98ad:   jmpq   0x00007f88610f96ab
  0x00007f88610f98b2:   mov    $0xfffffff6,%esi
  0x00007f88610f98b7:   callq  0x00007f8861054580           ; ImmutableOopMap {}
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::main@2 (line 83)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610f98bc:   mov    %rax,%rsi
  0x00007f88610f98bf:   nop
  0x00007f88610f98c0:   jmp    0x00007f88610f98d4
  0x00007f88610f98c2:   mov    %rax,%rsi
  0x00007f88610f98c5:   jmp    0x00007f88610f98d4
  0x00007f88610f98c7:   mov    %rax,%rsi
  0x00007f88610f98ca:   jmp    0x00007f88610f98d4
  0x00007f88610f98cc:   mov    %rax,%rsi
  0x00007f88610f98cf:   jmp    0x00007f88610f98d4
  0x00007f88610f98d1:   mov    %rax,%rsi
  0x00007f88610f98d4:   add    $0x20,%rsp
  0x00007f88610f98d8:   pop    %rbp
  0x00007f88610f98d9:   jmpq   0x00007f8861073c80           ;   {runtime_call _rethrow_Java}
  0x00007f88610f98de:   hlt    
  0x00007f88610f98df:   hlt    
[Exception Handler]
  0x00007f88610f98e0:   jmpq   0x00007f8861068a80           ;   {no_reloc}
[Deopt Handler Code]
  0x00007f88610f98e5:   callq  0x00007f88610f98ea
  0x00007f88610f98ea:   subq   $0x5,(%rsp)
  0x00007f88610f98ef:   jmpq   0x00007f88610548a0           ;   {runtime_call DeoptimizationBlob}
  0x00007f88610f98f4:   movabs $0x0,%rbx                    ;   {static_stub}
  0x00007f88610f98fe:   jmpq   0x00007f88610f98fe           ;   {runtime_call}
  0x00007f88610f9903:   movabs $0x0,%rbx                    ;   {static_stub}
  0x00007f88610f990d:   jmpq   0x00007f88610f990d           ;   {runtime_call}
  0x00007f88610f9912:   movabs $0x0,%rbx                    ;   {static_stub}
  0x00007f88610f991c:   jmpq   0x00007f88610f991c           ;   {runtime_call}
  0x00007f88610f9921:   hlt    
  0x00007f88610f9922:   hlt    
  0x00007f88610f9923:   hlt    
  0x00007f88610f9924:   hlt    
  0x00007f88610f9925:   hlt    
  0x00007f88610f9926:   hlt    
  0x00007f88610f9927:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)    9569  355 %           test::main @ 45 (254 bytes)
 total in heap  [0x00007f88610efc10,0x00007f88610efef8] = 744
 relocation     [0x00007f88610efd60,0x00007f88610efd80] = 32
 main code      [0x00007f88610efd80,0x00007f88610efe08] = 136
 stub code      [0x00007f88610efe08,0x00007f88610efe30] = 40
 oops           [0x00007f88610efe30,0x00007f88610efe38] = 8
 metadata       [0x00007f88610efe38,0x00007f88610efe40] = 8
 scopes data    [0x00007f88610efe40,0x00007f88610efe88] = 72
 scopes pcs     [0x00007f88610efe88,0x00007f88610efed8] = 80
 dependencies   [0x00007f88610efed8,0x00007f88610efee0] = 8
 handler table  [0x00007f88610efee0,0x00007f88610efef8] = 24

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x00007f8818402168} 'main' '([Ljava/lang/String;)V' in 'test'
  0x00007f88610efd80:   callq  0x00007f8873436f80           ;   {runtime_call os::breakpoint()}
  0x00007f88610efd85:   data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f88610efd90:   mov    %eax,-0x14000(%rsp)
  0x00007f88610efd97:   push   %rbp
  0x00007f88610efd98:   sub    $0x20,%rsp
  0x00007f88610efd9c:   mov    0x38(%rsi),%rbx
  0x00007f88610efda0:   mov    0x30(%rsi),%ebp
  0x00007f88610efda3:   mov    %rsi,%rdi
  0x00007f88610efda6:   movabs $0x7f88734f2fd0,%r10
  0x00007f88610efdb0:   callq  *%r10
  0x00007f88610efdb3:   jmp    0x00007f88610efddc
  0x00007f88610efdb5:   data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f88610efdc0:   mov    %rbx,(%rsp)
  0x00007f88610efdc4:   data16 xchg %ax,%ax
  0x00007f88610efdc7:   callq  0x00007f886104d180           ; ImmutableOopMap {}
                                                            ;*invokestatic ReadFilter_vector {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::main@51 (line 90)
                                                            ;   {static_call}
  0x00007f88610efdcc:   mov    0x380(%r15),%r10
  0x00007f88610efdd3:   inc    %ebp                         ; ImmutableOopMap {}
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) test::main@57 (line 89)
  0x00007f88610efdd5:   test   %eax,(%r10)                  ;   {poll}
  0x00007f88610efdd8:   mov    (%rsp),%rbx
  0x00007f88610efddc:   nopl   0x0(%rax)
  0x00007f88610efde0:   cmp    $0x186a0,%ebp
  0x00007f88610efde6:   jl     0x00007f88610efdc0
  0x00007f88610efde8:   mov    $0xffffff45,%esi
  0x00007f88610efded:   mov    %rbx,(%rsp)
  0x00007f88610efdf1:   xchg   %ax,%ax
  0x00007f88610efdf3:   callq  0x00007f8861054580           ; ImmutableOopMap {}
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) test::main@48 (line 89)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610efdf8:   mov    %rax,%rsi
  0x00007f88610efdfb:   add    $0x20,%rsp
  0x00007f88610efdff:   pop    %rbp
  0x00007f88610efe00:   jmpq   0x00007f8861073c80           ;   {runtime_call _rethrow_Java}
  0x00007f88610efe05:   hlt    
  0x00007f88610efe06:   hlt    
  0x00007f88610efe07:   hlt    
[Exception Handler]
  0x00007f88610efe08:   jmpq   0x00007f8861068a80           ;   {no_reloc}
[Deopt Handler Code]
  0x00007f88610efe0d:   callq  0x00007f88610efe12
  0x00007f88610efe12:   subq   $0x5,(%rsp)
  0x00007f88610efe17:   jmpq   0x00007f88610548a0           ;   {runtime_call DeoptimizationBlob}
  0x00007f88610efe1c:   movabs $0x0,%rbx                    ;   {static_stub}
  0x00007f88610efe26:   jmpq   0x00007f88610efe26           ;   {runtime_call}
  0x00007f88610efe2b:   hlt    
  0x00007f88610efe2c:   hlt    
  0x00007f88610efe2d:   hlt    
  0x00007f88610efe2e:   hlt    
  0x00007f88610efe2f:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
[Vector Time]  8022 ms  [Pos] 5025813 [Output] 1.1273096303678644E22

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)   16365  380             test::DoubleRange_testDouble (22 bytes)
 total in heap  [0x00007f88610ff090,0x00007f88610ff2c0] = 560
 relocation     [0x00007f88610ff1e0,0x00007f88610ff1f0] = 16
 main code      [0x00007f88610ff200,0x00007f88610ff270] = 112
 stub code      [0x00007f88610ff270,0x00007f88610ff288] = 24
 oops           [0x00007f88610ff288,0x00007f88610ff290] = 8
 scopes data    [0x00007f88610ff290,0x00007f88610ff298] = 8
 scopes pcs     [0x00007f88610ff298,0x00007f88610ff2b8] = 32
 dependencies   [0x00007f88610ff2b8,0x00007f88610ff2c0] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x00007f8818401b10} 'DoubleRange_testDouble' '(D)Z' in 'test'
  # parm0:    xmm0:xmm0   = double
  #           [sp+0x20]  (sp of caller)
  0x00007f88610ff200:   sub    $0x18,%rsp
  0x00007f88610ff207:   mov    %rbp,0x10(%rsp)
  0x00007f88610ff20c:   movabs $0x11f0de520,%r10            ;   {oop(a 'java/lang/Class'{0x000000011f0de520} = 'test')}
  0x00007f88610ff216:   data16 nopw 0x0(%rax,%rax,1)
  0x00007f88610ff220:   vucomisd 0x88(%r10),%xmm0
  0x00007f88610ff229:   jb     0x00007f88610ff242
  0x00007f88610ff22b:   vmovsd 0x90(%r10),%xmm1
  0x00007f88610ff234:   vucomisd %xmm0,%xmm1
  0x00007f88610ff238:   jb     0x00007f88610ff242
  0x00007f88610ff23a:   mov    $0x1,%eax
  0x00007f88610ff23f:   nop
  0x00007f88610ff240:   jmp    0x00007f88610ff244
  0x00007f88610ff242:   xor    %eax,%eax
  0x00007f88610ff244:   add    $0x10,%rsp
  0x00007f88610ff248:   pop    %rbp
  0x00007f88610ff249:   cmp    0x378(%r15),%rsp             ;   {poll_return}
  0x00007f88610ff250:   ja     0x00007f88610ff257
  0x00007f88610ff256:   retq   
  0x00007f88610ff257:   movabs $0x7f88610ff249,%r10         ;   {internal_word}
  0x00007f88610ff261:   mov    %r10,0x390(%r15)
  0x00007f88610ff268:   jmpq   0x00007f8861053400           ;   {runtime_call SafepointBlob}
  0x00007f88610ff26d:   hlt    
  0x00007f88610ff26e:   hlt    
  0x00007f88610ff26f:   hlt    
[Exception Handler]
  0x00007f88610ff270:   jmpq   0x00007f8861068a80           ;   {no_reloc}
[Deopt Handler Code]
  0x00007f88610ff275:   callq  0x00007f88610ff27a
  0x00007f88610ff27a:   subq   $0x5,(%rsp)
  0x00007f88610ff27f:   jmpq   0x00007f88610548a0           ;   {runtime_call DeoptimizationBlob}
  0x00007f88610ff284:   hlt    
  0x00007f88610ff285:   hlt    
  0x00007f88610ff286:   hlt    
  0x00007f88610ff287:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)   16374  381 %           test::ReadFilter_scalar @ 6 (65 bytes)
 total in heap  [0x00007f88610fdf10,0x00007f88610fe5f0] = 1760
 relocation     [0x00007f88610fe060,0x00007f88610fe090] = 48
 constants      [0x00007f88610fe0a0,0x00007f88610fe0c0] = 32
 main code      [0x00007f88610fe0c0,0x00007f88610fe388] = 712
 stub code      [0x00007f88610fe388,0x00007f88610fe3a0] = 24
 oops           [0x00007f88610fe3a0,0x00007f88610fe3a8] = 8
 metadata       [0x00007f88610fe3a8,0x00007f88610fe3c8] = 32
 scopes data    [0x00007f88610fe3c8,0x00007f88610fe4c8] = 256
 scopes pcs     [0x00007f88610fe4c8,0x00007f88610fe5a8] = 224
 dependencies   [0x00007f88610fe5a8,0x00007f88610fe5b8] = 16
 nul chk table  [0x00007f88610fe5b8,0x00007f88610fe5f0] = 56

[Disassembly]
--------------------------------------------------------------------------------

[Constant Pool]
             Address          hex4                    hex8      
  0x00007f88610fe0a0:   0x00000000      0x3ca0000000000000      
  0x00007f88610fe0a4:   0x3ca00000                              
  0x00007f88610fe0a8:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x00007f88610fe0ac:   0xf4f4f4f4                              
  0x00007f88610fe0b0:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x00007f88610fe0b4:   0xf4f4f4f4                              
  0x00007f88610fe0b8:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x00007f88610fe0bc:   0xf4f4f4f4                              

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x00007f8818401d78} 'ReadFilter_scalar' '()V' in 'test'
  0x00007f88610fe0c0:   callq  0x00007f8873436f80           ;   {no_reloc}
  0x00007f88610fe0c5:   data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f88610fe0d0:   mov    %eax,-0x14000(%rsp)
  0x00007f88610fe0d7:   push   %rbp
  0x00007f88610fe0d8:   sub    $0x20,%rsp
  0x00007f88610fe0dc:   mov    0x10(%rsi),%ebp
  0x00007f88610fe0df:   mov    %rsi,%rdi
  0x00007f88610fe0e2:   movabs $0x7f88734f2fd0,%r10
  0x00007f88610fe0ec:   callq  *%r10
  0x00007f88610fe0ef:   movabs $0x11f0de520,%r9             ;   {oop(a 'java/lang/Class'{0x000000011f0de520} = 'test')}
  0x00007f88610fe0f9:   movabs $0x5deece66d,%rcx
  0x00007f88610fe103:   movabs $0xffffffffffff,%rdi
  0x00007f88610fe10d:   jmpq   0x00007f88610fe18f
  0x00007f88610fe112:   movabs $0x7ff8000000000000,%rbx
  0x00007f88610fe11c:   nopl   0x0(%rax)
  0x00007f88610fe120:   mov    0xc(%r12,%r10,8),%r8d        ; implicit exception: dispatches to 0x00007f88610fe338
  0x00007f88610fe125:   cmp    %r8d,%r11d
  0x00007f88610fe128:   jae    0x00007f88610fe29c
  0x00007f88610fe12e:   mov    0x80(%r9),%r8d
  0x00007f88610fe135:   shl    $0x3,%r10
  0x00007f88610fe139:   mov    %rbx,0x10(%r10,%r11,8)
  0x00007f88610fe13e:   xchg   %ax,%ax
  0x00007f88610fe140:   mov    0xc(%r12,%r8,8),%edx         ; implicit exception: dispatches to 0x00007f88610fe34c
  0x00007f88610fe145:   mov    0x7c(%r9),%r10d
  0x00007f88610fe149:   cmp    %edx,%ebp
  0x00007f88610fe14b:   jae    0x00007f88610fe2b4
  0x00007f88610fe151:   shl    $0x3,%r8
  0x00007f88610fe155:   mov    0x10(%r8,%rbp,4),%r8d
  0x00007f88610fe15a:   nopw   0x0(%rax,%rax,1)
  0x00007f88610fe160:   mov    0xc(%r12,%r10,8),%ebx        ; implicit exception: dispatches to 0x00007f88610fe358
  0x00007f88610fe165:   cmp    %ebx,%r11d
  0x00007f88610fe168:   jae    0x00007f88610fe2cc
  0x00007f88610fe16e:   mov    %r11d,%ebx
  0x00007f88610fe171:   inc    %ebx
  0x00007f88610fe173:   mov    %ebx,0x9c(%r9)
  0x00007f88610fe17a:   shl    $0x3,%r10
  0x00007f88610fe17e:   mov    %r8d,0x10(%r10,%r11,4)
  0x00007f88610fe183:   mov    0x380(%r15),%r10
  0x00007f88610fe18a:   inc    %ebp                         ; ImmutableOopMap {r9=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) test::ReadFilter_scalar@61 (line 58)
  0x00007f88610fe18c:   test   %eax,(%r10)                  ;   {poll}
  0x00007f88610fe18f:   mov    0x98(%r9),%r11d
  0x00007f88610fe196:   cmp    %r11d,%ebp
  0x00007f88610fe199:   jge    0x00007f88610fe289
  0x00007f88610fe19f:   mov    0x84(%r9),%r11d
  0x00007f88610fe1a6:   mov    0x18(%r12,%r11,8),%r8d       ; implicit exception: dispatches to 0x00007f88610fe314
  0x00007f88610fe1ab:   mov    0x10(%r12,%r8,8),%rax        ; implicit exception: dispatches to 0x00007f88610fe320
  0x00007f88610fe1b0:   mov    %rax,%rbx
  0x00007f88610fe1b3:   imul   %rcx,%rbx
  0x00007f88610fe1b7:   add    $0xb,%rbx
  0x00007f88610fe1bb:   mov    %rbx,%r10
  0x00007f88610fe1be:   and    %rdi,%r10
  0x00007f88610fe1c1:   lock cmpxchg %r10,0x10(%r12,%r8,8)
  0x00007f88610fe1c8:   sete   %r10b
  0x00007f88610fe1cc:   movzbl %r10b,%r10d
  0x00007f88610fe1d0:   test   %r10d,%r10d
  0x00007f88610fe1d3:   je     0x00007f88610fe2e4
  0x00007f88610fe1d9:   mov    0x18(%r12,%r11,8),%r10d
  0x00007f88610fe1de:   xchg   %ax,%ax
  0x00007f88610fe1e0:   mov    0x10(%r12,%r10,8),%rax       ; implicit exception: dispatches to 0x00007f88610fe32c
  0x00007f88610fe1e5:   mov    %rax,%r8
  0x00007f88610fe1e8:   imul   %rcx,%r8
  0x00007f88610fe1ec:   shr    $0x16,%rbx
  0x00007f88610fe1f0:   add    $0xb,%r8
  0x00007f88610fe1f4:   mov    %r8,%r11
  0x00007f88610fe1f7:   and    %rdi,%r11
  0x00007f88610fe1fa:   lock cmpxchg %r11,0x10(%r12,%r10,8)
  0x00007f88610fe201:   sete   %r11b
  0x00007f88610fe205:   movzbl %r11b,%r11d
  0x00007f88610fe209:   and    $0x3ffffff,%rbx
  0x00007f88610fe210:   mov    %ebx,%ebx
  0x00007f88610fe212:   movslq %ebx,%rbx
  0x00007f88610fe215:   shl    $0x1b,%rbx
  0x00007f88610fe219:   test   %r11d,%r11d
  0x00007f88610fe21c:   nopl   0x0(%rax)
  0x00007f88610fe220:   je     0x00007f88610fe2fc
  0x00007f88610fe226:   shr    $0x15,%r8
  0x00007f88610fe22a:   and    $0x7ffffff,%r8
  0x00007f88610fe231:   mov    %r8d,%r11d
  0x00007f88610fe234:   movslq %r11d,%r10
  0x00007f88610fe237:   add    %rbx,%r10
  0x00007f88610fe23a:   vcvtsi2sd %r10,%xmm0,%xmm0
  0x00007f88610fe23f:   vmulsd -0x1a7(%rip),%xmm0,%xmm0        # 0x00007f88610fe0a0
                                                            ;   {section_word}
  0x00007f88610fe247:   vucomisd 0x88(%r9),%xmm0
  0x00007f88610fe250:   jb     0x00007f88610fe183
  0x00007f88610fe256:   vmovsd 0x90(%r9),%xmm1
  0x00007f88610fe25f:   nop
  0x00007f88610fe260:   vucomisd %xmm0,%xmm1
  0x00007f88610fe264:   jb     0x00007f88610fe183
  0x00007f88610fe26a:   mov    0x9c(%r9),%r11d
  0x00007f88610fe271:   mov    0x78(%r9),%r10d
  0x00007f88610fe275:   vucomisd %xmm0,%xmm0
  0x00007f88610fe279:   jp     0x00007f88610fe112
  0x00007f88610fe27f:   vmovq  %xmm0,%rbx
  0x00007f88610fe284:   jmpq   0x00007f88610fe11c
  0x00007f88610fe289:   add    $0x20,%rsp
  0x00007f88610fe28d:   pop    %rbp
  0x00007f88610fe28e:   cmp    0x378(%r15),%rsp             ;   {poll_return}
  0x00007f88610fe295:   ja     0x00007f88610fe36c
  0x00007f88610fe29b:   retq   
  0x00007f88610fe29c:   mov    $0xffffffe4,%esi
  0x00007f88610fe2a1:   mov    %r10d,(%rsp)
  0x00007f88610fe2a5:   mov    %r11d,0x4(%rsp)
  0x00007f88610fe2aa:   mov    %rbx,0x8(%rsp)
  0x00007f88610fe2af:   callq  0x00007f8861054580           ; ImmutableOopMap {[0]=NarrowOop }
                                                            ;*lastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::ReadFilter_scalar@37 (line 62)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610fe2b4:   mov    $0xffffffe4,%esi
  0x00007f88610fe2b9:   mov    %r10d,(%rsp)
  0x00007f88610fe2bd:   mov    %r11d,0x4(%rsp)
  0x00007f88610fe2c2:   mov    %r8d,0x8(%rsp)
  0x00007f88610fe2c7:   callq  0x00007f8861054580           ; ImmutableOopMap {[0]=NarrowOop [8]=NarrowOop }
                                                            ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::ReadFilter_scalar@48 (line 64)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610fe2cc:   mov    $0xffffffe4,%esi
  0x00007f88610fe2d1:   mov    %r10d,(%rsp)
  0x00007f88610fe2d5:   mov    %r11d,0x4(%rsp)
  0x00007f88610fe2da:   mov    %r8d,0x8(%rsp)
  0x00007f88610fe2df:   callq  0x00007f8861054580           ; ImmutableOopMap {[0]=NarrowOop }
                                                            ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::ReadFilter_scalar@49 (line 64)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610fe2e4:   mov    $0xffffff45,%esi
  0x00007f88610fe2e9:   mov    %r11d,(%rsp)
  0x00007f88610fe2ed:   mov    %r8d,0x4(%rsp)
  0x00007f88610fe2f2:   mov    %r10d,0x8(%rsp)
  0x00007f88610fe2f7:   callq  0x00007f8861054580           ; ImmutableOopMap {[0]=NarrowOop [4]=NarrowOop }
                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.Random::next@35 (line 444)
                                                            ; - java.util.Random::nextDouble@3 (line 698)
                                                            ; - test::ReadFilter_scalar@16 (line 59)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610fe2fc:   mov    $0xffffff45,%esi
  0x00007f88610fe301:   mov    %rbx,(%rsp)
  0x00007f88610fe305:   mov    %r10d,0x8(%rsp)
  0x00007f88610fe30a:   mov    %r11d,0xc(%rsp)
  0x00007f88610fe30f:   callq  0x00007f8861054580           ; ImmutableOopMap {[8]=NarrowOop }
                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.Random::next@35 (line 444)
                                                            ; - java.util.Random::nextDouble@13 (line 698)
                                                            ; - test::ReadFilter_scalar@16 (line 59)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610fe314:   mov    $0xfffffff6,%esi
  0x00007f88610fe319:   xchg   %ax,%ax
  0x00007f88610fe31b:   callq  0x00007f8861054580           ; ImmutableOopMap {}
                                                            ;*invokevirtual nextDouble {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::ReadFilter_scalar@16 (line 59)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610fe320:   mov    $0xfffffff6,%esi
  0x00007f88610fe325:   xchg   %ax,%ax
  0x00007f88610fe327:   callq  0x00007f8861054580           ; ImmutableOopMap {}
                                                            ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@8 (line 442)
                                                            ; - java.util.Random::nextDouble@3 (line 698)
                                                            ; - test::ReadFilter_scalar@16 (line 59)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610fe32c:   mov    $0xfffffff6,%esi
  0x00007f88610fe331:   xchg   %ax,%ax
  0x00007f88610fe333:   callq  0x00007f8861054580           ; ImmutableOopMap {}
                                                            ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@8 (line 442)
                                                            ; - java.util.Random::nextDouble@13 (line 698)
                                                            ; - test::ReadFilter_scalar@16 (line 59)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610fe338:   mov    $0xfffffff6,%esi
  0x00007f88610fe33d:   mov    %r11d,%ebp
  0x00007f88610fe340:   mov    %rbx,(%rsp)
  0x00007f88610fe344:   data16 xchg %ax,%ax
  0x00007f88610fe347:   callq  0x00007f8861054580           ; ImmutableOopMap {}
                                                            ;*lastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::ReadFilter_scalar@37 (line 62)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610fe34c:   mov    $0xfffffff6,%esi
  0x00007f88610fe351:   xchg   %ax,%ax
  0x00007f88610fe353:   callq  0x00007f8861054580           ; ImmutableOopMap {}
                                                            ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::ReadFilter_scalar@48 (line 64)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610fe358:   mov    $0xfffffff6,%esi
  0x00007f88610fe35d:   mov    %r11d,%ebp
  0x00007f88610fe360:   mov    %r8d,(%rsp)
  0x00007f88610fe364:   data16 xchg %ax,%ax
  0x00007f88610fe367:   callq  0x00007f8861054580           ; ImmutableOopMap {}
                                                            ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::ReadFilter_scalar@49 (line 64)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610fe36c:   movabs $0x7f88610fe28e,%r10         ;   {internal_word}
  0x00007f88610fe376:   mov    %r10,0x390(%r15)
  0x00007f88610fe37d:   jmpq   0x00007f8861053400           ;   {runtime_call SafepointBlob}
  0x00007f88610fe382:   hlt    
  0x00007f88610fe383:   hlt    
  0x00007f88610fe384:   hlt    
  0x00007f88610fe385:   hlt    
  0x00007f88610fe386:   hlt    
  0x00007f88610fe387:   hlt    
[Exception Handler]
  0x00007f88610fe388:   jmpq   0x00007f8861068a80           ;   {no_reloc}
[Deopt Handler Code]
  0x00007f88610fe38d:   callq  0x00007f88610fe392
  0x00007f88610fe392:   subq   $0x5,(%rsp)
  0x00007f88610fe397:   jmpq   0x00007f88610548a0           ;   {runtime_call DeoptimizationBlob}
  0x00007f88610fe39c:   hlt    
  0x00007f88610fe39d:   hlt    
  0x00007f88610fe39e:   hlt    
  0x00007f88610fe39f:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)   16383  382             test::ReadFilter_scalar (65 bytes)
 total in heap  [0x00007f88610ffb90,0x00007f8861100290] = 1792
 relocation     [0x00007f88610ffce0,0x00007f88610ffd10] = 48
 constants      [0x00007f88610ffd20,0x00007f88610ffd40] = 32
 main code      [0x00007f88610ffd40,0x00007f8861100018] = 728
 stub code      [0x00007f8861100018,0x00007f8861100030] = 24
 oops           [0x00007f8861100030,0x00007f8861100038] = 8
 metadata       [0x00007f8861100038,0x00007f8861100058] = 32
 scopes data    [0x00007f8861100058,0x00007f8861100168] = 272
 scopes pcs     [0x00007f8861100168,0x00007f8861100248] = 224
 dependencies   [0x00007f8861100248,0x00007f8861100258] = 16
 nul chk table  [0x00007f8861100258,0x00007f8861100290] = 56

[Disassembly]
--------------------------------------------------------------------------------

[Constant Pool]
             Address          hex4                    hex8      
  0x00007f88610ffd20:   0x00000000      0x3ca0000000000000      
  0x00007f88610ffd24:   0x3ca00000                              
  0x00007f88610ffd28:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x00007f88610ffd2c:   0xf4f4f4f4                              
  0x00007f88610ffd30:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x00007f88610ffd34:   0xf4f4f4f4                              
  0x00007f88610ffd38:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x00007f88610ffd3c:   0xf4f4f4f4                              

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x00007f8818401d78} 'ReadFilter_scalar' '()V' in 'test'
  #           [sp+0x30]  (sp of caller)
  0x00007f88610ffd40:   mov    %eax,-0x14000(%rsp)          ;   {no_reloc}
  0x00007f88610ffd47:   push   %rbp
  0x00007f88610ffd48:   sub    $0x20,%rsp
  0x00007f88610ffd4c:   movabs $0x11f0de520,%rbx            ;   {oop(a 'java/lang/Class'{0x000000011f0de520} = 'test')}
  0x00007f88610ffd56:   mov    %r12d,0x9c(%rbx)
  0x00007f88610ffd5d:   mov    0x98(%rbx),%r10d
  0x00007f88610ffd64:   test   %r10d,%r10d
  0x00007f88610ffd67:   jle    0x00007f88610fff05
  0x00007f88610ffd6d:   movabs $0x5deece66d,%rcx
  0x00007f88610ffd77:   movabs $0xffffffffffff,%rsi
  0x00007f88610ffd81:   xor    %r11d,%r11d
  0x00007f88610ffd84:   jmpq   0x00007f88610ffe26
  0x00007f88610ffd89:   nopl   0x0(%rax)
  0x00007f88610ffd90:   movabs $0x7ff8000000000000,%rdi
  0x00007f88610ffd9a:   mov    0x9c(%rbx),%r9d
  0x00007f88610ffda1:   mov    0x78(%rbx),%r10d
  0x00007f88610ffda5:   mov    0xc(%r12,%r10,8),%r8d        ; implicit exception: dispatches to 0x00007f88610fffc8
  0x00007f88610ffdaa:   cmp    %r8d,%r9d
  0x00007f88610ffdad:   jae    0x00007f88610fff18
  0x00007f88610ffdb3:   mov    0x80(%rbx),%r8d
  0x00007f88610ffdba:   shl    $0x3,%r10
  0x00007f88610ffdbe:   mov    %rdi,0x10(%r10,%r9,8)
  0x00007f88610ffdc3:   mov    0xc(%r12,%r8,8),%edi         ; implicit exception: dispatches to 0x00007f88610fffdc
  0x00007f88610ffdc8:   mov    0x7c(%rbx),%edx
  0x00007f88610ffdcb:   cmp    %edi,%r11d
  0x00007f88610ffdce:   jae    0x00007f88610fff34
  0x00007f88610ffdd4:   lea    (%r12,%r8,8),%r10
  0x00007f88610ffdd8:   mov    0x10(%r10,%r11,4),%r10d
  0x00007f88610ffddd:   data16 xchg %ax,%ax
  0x00007f88610ffde0:   mov    0xc(%r12,%rdx,8),%r8d        ; implicit exception: dispatches to 0x00007f88610fffec
  0x00007f88610ffde5:   cmp    %r8d,%r9d
  0x00007f88610ffde8:   jae    0x00007f88610fff50
  0x00007f88610ffdee:   mov    %r9d,%r8d
  0x00007f88610ffdf1:   inc    %r8d
  0x00007f88610ffdf4:   mov    %r8d,0x9c(%rbx)
  0x00007f88610ffdfb:   lea    (%r12,%rdx,8),%r8
  0x00007f88610ffdff:   mov    %r10d,0x10(%r8,%r9,4)
  0x00007f88610ffe04:   mov    0x380(%r15),%r10
  0x00007f88610ffe0b:   mov    0x98(%rbx),%r9d
  0x00007f88610ffe12:   inc    %r11d                        ; ImmutableOopMap {rbx=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) test::ReadFilter_scalar@61 (line 58)
  0x00007f88610ffe15:   test   %eax,(%r10)                  ;   {poll}
  0x00007f88610ffe18:   cmp    %r9d,%r11d
  0x00007f88610ffe1b:   nopl   0x0(%rax,%rax,1)
  0x00007f88610ffe20:   jge    0x00007f88610fff05
  0x00007f88610ffe26:   mov    0x84(%rbx),%r8d
  0x00007f88610ffe2d:   mov    0x18(%r12,%r8,8),%r9d        ; implicit exception: dispatches to 0x00007f88610fffa4
  0x00007f88610ffe32:   mov    0x10(%r12,%r9,8),%rax        ; implicit exception: dispatches to 0x00007f88610fffb0
  0x00007f88610ffe37:   mov    %rax,%rdi
  0x00007f88610ffe3a:   imul   %rcx,%rdi
  0x00007f88610ffe3e:   add    $0xb,%rdi
  0x00007f88610ffe42:   mov    %rdi,%r10
  0x00007f88610ffe45:   and    %rsi,%r10
  0x00007f88610ffe48:   lock cmpxchg %r10,0x10(%r12,%r9,8)
  0x00007f88610ffe4f:   sete   %r10b
  0x00007f88610ffe53:   movzbl %r10b,%r10d
  0x00007f88610ffe57:   test   %r10d,%r10d
  0x00007f88610ffe5a:   nopw   0x0(%rax,%rax,1)
  0x00007f88610ffe60:   je     0x00007f88610fff6c
  0x00007f88610ffe66:   mov    0x18(%r12,%r8,8),%r10d
  0x00007f88610ffe6b:   mov    0x10(%r12,%r10,8),%rax       ; implicit exception: dispatches to 0x00007f88610fffbc
  0x00007f88610ffe70:   mov    %rax,%r8
  0x00007f88610ffe73:   imul   %rcx,%r8
  0x00007f88610ffe77:   shr    $0x16,%rdi
  0x00007f88610ffe7b:   add    $0xb,%r8
  0x00007f88610ffe7f:   mov    %r8,%r9
  0x00007f88610ffe82:   and    %rsi,%r9
  0x00007f88610ffe85:   lock cmpxchg %r9,0x10(%r12,%r10,8)
  0x00007f88610ffe8c:   sete   %r9b
  0x00007f88610ffe90:   movzbl %r9b,%r9d
  0x00007f88610ffe94:   and    $0x3ffffff,%rdi
  0x00007f88610ffe9b:   mov    %edi,%edi
  0x00007f88610ffe9d:   movslq %edi,%rdi
  0x00007f88610ffea0:   shl    $0x1b,%rdi
  0x00007f88610ffea4:   test   %r9d,%r9d
  0x00007f88610ffea7:   je     0x00007f88610fff88
  0x00007f88610ffead:   shr    $0x15,%r8
  0x00007f88610ffeb1:   and    $0x7ffffff,%r8
  0x00007f88610ffeb8:   mov    %r8d,%r8d
  0x00007f88610ffebb:   movslq %r8d,%r10
  0x00007f88610ffebe:   add    %rdi,%r10
  0x00007f88610ffec1:   vcvtsi2sd %r10,%xmm0,%xmm0
  0x00007f88610ffec6:   vmulsd -0x1ae(%rip),%xmm0,%xmm0        # 0x00007f88610ffd20
                                                            ;   {section_word}
  0x00007f88610ffece:   vucomisd 0x88(%rbx),%xmm0
  0x00007f88610ffed6:   jb     0x00007f88610ffe04
  0x00007f88610ffedc:   vmovsd 0x90(%rbx),%xmm1
  0x00007f88610ffee4:   vucomisd %xmm0,%xmm1
  0x00007f88610ffee8:   jb     0x00007f88610ffe04
  0x00007f88610ffeee:   vucomisd %xmm0,%xmm0
  0x00007f88610ffef2:   jp     0x00007f88610ffd90
  0x00007f88610ffef8:   vmovq  %xmm0,%rdi
  0x00007f88610ffefd:   data16 xchg %ax,%ax
  0x00007f88610fff00:   jmpq   0x00007f88610ffd9a
  0x00007f88610fff05:   add    $0x20,%rsp
  0x00007f88610fff09:   pop    %rbp
  0x00007f88610fff0a:   cmp    0x378(%r15),%rsp             ;   {poll_return}
  0x00007f88610fff11:   ja     0x00007f8861100000
  0x00007f88610fff17:   retq   
  0x00007f88610fff18:   mov    $0xffffffe4,%esi
  0x00007f88610fff1d:   mov    %r11d,%ebp
  0x00007f88610fff20:   mov    %r10d,(%rsp)
  0x00007f88610fff24:   mov    %r9d,0x4(%rsp)
  0x00007f88610fff29:   mov    %rdi,0x8(%rsp)
  0x00007f88610fff2e:   nop
  0x00007f88610fff2f:   callq  0x00007f8861054580           ; ImmutableOopMap {[0]=NarrowOop }
                                                            ;*lastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::ReadFilter_scalar@37 (line 62)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610fff34:   mov    $0xffffffe4,%esi
  0x00007f88610fff39:   mov    %edx,(%rsp)
  0x00007f88610fff3c:   mov    %r9d,0x4(%rsp)
  0x00007f88610fff41:   mov    %r8d,0x8(%rsp)
  0x00007f88610fff46:   mov    %r11d,0xc(%rsp)
  0x00007f88610fff4b:   callq  0x00007f8861054580           ; ImmutableOopMap {[0]=NarrowOop [8]=NarrowOop }
                                                            ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::ReadFilter_scalar@48 (line 64)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610fff50:   mov    $0xffffffe4,%esi
  0x00007f88610fff55:   mov    %r11d,%ebp
  0x00007f88610fff58:   mov    %edx,(%rsp)
  0x00007f88610fff5b:   mov    %r9d,0x4(%rsp)
  0x00007f88610fff60:   mov    %r10d,0x8(%rsp)
  0x00007f88610fff65:   xchg   %ax,%ax
  0x00007f88610fff67:   callq  0x00007f8861054580           ; ImmutableOopMap {[0]=NarrowOop }
                                                            ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::ReadFilter_scalar@49 (line 64)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610fff6c:   mov    $0xffffff45,%esi
  0x00007f88610fff71:   mov    %r11d,%ebp
  0x00007f88610fff74:   mov    %r8d,(%rsp)
  0x00007f88610fff78:   mov    %r9d,0x4(%rsp)
  0x00007f88610fff7d:   mov    %r10d,0x8(%rsp)
  0x00007f88610fff82:   nop
  0x00007f88610fff83:   callq  0x00007f8861054580           ; ImmutableOopMap {[0]=NarrowOop [4]=NarrowOop }
                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.Random::next@35 (line 444)
                                                            ; - java.util.Random::nextDouble@3 (line 698)
                                                            ; - test::ReadFilter_scalar@16 (line 59)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610fff88:   mov    $0xffffff45,%esi
  0x00007f88610fff8d:   mov    %r11d,%ebp
  0x00007f88610fff90:   mov    %rdi,(%rsp)
  0x00007f88610fff94:   mov    %r10d,0x8(%rsp)
  0x00007f88610fff99:   mov    %r9d,0xc(%rsp)
  0x00007f88610fff9e:   nop
  0x00007f88610fff9f:   callq  0x00007f8861054580           ; ImmutableOopMap {[8]=NarrowOop }
                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.Random::next@35 (line 444)
                                                            ; - java.util.Random::nextDouble@13 (line 698)
                                                            ; - test::ReadFilter_scalar@16 (line 59)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610fffa4:   mov    $0xfffffff6,%esi
  0x00007f88610fffa9:   xchg   %ax,%ax
  0x00007f88610fffab:   callq  0x00007f8861054580           ; ImmutableOopMap {}
                                                            ;*invokevirtual nextDouble {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::ReadFilter_scalar@16 (line 59)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610fffb0:   mov    $0xfffffff6,%esi
  0x00007f88610fffb5:   xchg   %ax,%ax
  0x00007f88610fffb7:   callq  0x00007f8861054580           ; ImmutableOopMap {}
                                                            ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@8 (line 442)
                                                            ; - java.util.Random::nextDouble@3 (line 698)
                                                            ; - test::ReadFilter_scalar@16 (line 59)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610fffbc:   mov    $0xfffffff6,%esi
  0x00007f88610fffc1:   xchg   %ax,%ax
  0x00007f88610fffc3:   callq  0x00007f8861054580           ; ImmutableOopMap {}
                                                            ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@8 (line 442)
                                                            ; - java.util.Random::nextDouble@13 (line 698)
                                                            ; - test::ReadFilter_scalar@16 (line 59)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610fffc8:   mov    $0xfffffff6,%esi
  0x00007f88610fffcd:   mov    %r9d,%ebp
  0x00007f88610fffd0:   mov    %rdi,(%rsp)
  0x00007f88610fffd4:   data16 xchg %ax,%ax
  0x00007f88610fffd7:   callq  0x00007f8861054580           ; ImmutableOopMap {}
                                                            ;*lastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::ReadFilter_scalar@37 (line 62)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610fffdc:   mov    $0xfffffff6,%esi
  0x00007f88610fffe1:   mov    %r11d,%ebp
  0x00007f88610fffe4:   data16 xchg %ax,%ax
  0x00007f88610fffe7:   callq  0x00007f8861054580           ; ImmutableOopMap {}
                                                            ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::ReadFilter_scalar@48 (line 64)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610fffec:   mov    $0xfffffff6,%esi
  0x00007f88610ffff1:   mov    %r9d,%ebp
  0x00007f88610ffff4:   mov    %r10d,(%rsp)
  0x00007f88610ffff8:   data16 xchg %ax,%ax
  0x00007f88610ffffb:   callq  0x00007f8861054580           ; ImmutableOopMap {}
                                                            ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::ReadFilter_scalar@49 (line 64)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f8861100000:   movabs $0x7f88610fff0a,%r10         ;   {internal_word}
  0x00007f886110000a:   mov    %r10,0x390(%r15)
  0x00007f8861100011:   jmpq   0x00007f8861053400           ;   {runtime_call SafepointBlob}
  0x00007f8861100016:   hlt    
  0x00007f8861100017:   hlt    
[Exception Handler]
  0x00007f8861100018:   jmpq   0x00007f8861068a80           ;   {no_reloc}
[Deopt Handler Code]
  0x00007f886110001d:   callq  0x00007f8861100022
  0x00007f8861100022:   subq   $0x5,(%rsp)
  0x00007f8861100027:   jmpq   0x00007f88610548a0           ;   {runtime_call DeoptimizationBlob}
  0x00007f886110002c:   hlt    
  0x00007f886110002d:   hlt    
  0x00007f886110002e:   hlt    
  0x00007f886110002f:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)   17502  383 %           test::main @ 145 (254 bytes)
 total in heap  [0x00007f88610f5e10,0x00007f88610f65a8] = 1944
 relocation     [0x00007f88610f5f60,0x00007f88610f5f90] = 48
 constants      [0x00007f88610f5fa0,0x00007f88610f5fc0] = 32
 main code      [0x00007f88610f5fc0,0x00007f88610f62b0] = 752
 stub code      [0x00007f88610f62b0,0x00007f88610f62c8] = 24
 oops           [0x00007f88610f62c8,0x00007f88610f62d0] = 8
 metadata       [0x00007f88610f62d0,0x00007f88610f62f8] = 40
 scopes data    [0x00007f88610f62f8,0x00007f88610f6460] = 360
 scopes pcs     [0x00007f88610f6460,0x00007f88610f6560] = 256
 dependencies   [0x00007f88610f6560,0x00007f88610f6570] = 16
 nul chk table  [0x00007f88610f6570,0x00007f88610f65a8] = 56

[Disassembly]
--------------------------------------------------------------------------------

[Constant Pool]
             Address          hex4                    hex8      
  0x00007f88610f5fa0:   0x00000000      0x3ca0000000000000      
  0x00007f88610f5fa4:   0x3ca00000                              
  0x00007f88610f5fa8:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x00007f88610f5fac:   0xf4f4f4f4                              
  0x00007f88610f5fb0:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x00007f88610f5fb4:   0xf4f4f4f4                              
  0x00007f88610f5fb8:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x00007f88610f5fbc:   0xf4f4f4f4                              

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x00007f8818402168} 'main' '([Ljava/lang/String;)V' in 'test'
  0x00007f88610f5fc0:   callq  0x00007f8873436f80           ;   {no_reloc}
  0x00007f88610f5fc5:   data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f88610f5fd0:   mov    %eax,-0x14000(%rsp)
  0x00007f88610f5fd7:   push   %rbp
  0x00007f88610f5fd8:   sub    $0x30,%rsp
  0x00007f88610f5fdc:   mov    (%rsi),%ebp
  0x00007f88610f5fde:   mov    %rsi,%rdi
  0x00007f88610f5fe1:   movabs $0x7f88734f2fd0,%r10
  0x00007f88610f5feb:   callq  *%r10
  0x00007f88610f5fee:   movabs $0x11f0de520,%r8             ;   {oop(a 'java/lang/Class'{0x000000011f0de520} = 'test')}
  0x00007f88610f5ff8:   movabs $0x5deece66d,%rdi
  0x00007f88610f6002:   movabs $0xffffffffffff,%rdx
  0x00007f88610f600c:   jmp    0x00007f88610f601a
  0x00007f88610f600e:   mov    0x380(%r15),%r10
  0x00007f88610f6015:   inc    %ebp                         ; ImmutableOopMap {r8=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) test::main@158 (line 102)
  0x00007f88610f6017:   test   %eax,(%r10)                  ;   {poll}
  0x00007f88610f601a:   nopw   0x0(%rax,%rax,1)
  0x00007f88610f6020:   cmp    $0x186a0,%ebp
  0x00007f88610f6026:   jge    0x00007f88610f6250
  0x00007f88610f602c:   mov    %r12d,0x9c(%r8)
  0x00007f88610f6033:   mov    0x98(%r8),%r10d
  0x00007f88610f603a:   nopw   0x0(%rax,%rax,1)
  0x00007f88610f6040:   test   %r10d,%r10d
  0x00007f88610f6043:   jle    0x00007f88610f600e
  0x00007f88610f6045:   xor    %r9d,%r9d
  0x00007f88610f6048:   jmpq   0x00007f88610f60de
  0x00007f88610f604d:   data16 xchg %ax,%ax
  0x00007f88610f6050:   movabs $0x7ff8000000000000,%r11
  0x00007f88610f605a:   mov    0x9c(%r8),%ecx
  0x00007f88610f6061:   mov    0x78(%r8),%r10d
  0x00007f88610f6065:   mov    0xc(%r12,%r10,8),%esi        ; implicit exception: dispatches to 0x00007f88610f6280
  0x00007f88610f606a:   cmp    %esi,%ecx
  0x00007f88610f606c:   jae    0x00007f88610f61be
  0x00007f88610f6072:   mov    0x80(%r8),%ebx
  0x00007f88610f6079:   shl    $0x3,%r10
  0x00007f88610f607d:   mov    %r11,0x10(%r10,%rcx,8)
  0x00007f88610f6082:   mov    0xc(%r12,%rbx,8),%r11d       ; implicit exception: dispatches to 0x00007f88610f6290
  0x00007f88610f6087:   mov    0x7c(%r8),%r10d
  0x00007f88610f608b:   cmp    %r11d,%r9d
  0x00007f88610f608e:   jae    0x00007f88610f61dc
  0x00007f88610f6094:   lea    (%r12,%rbx,8),%r11
  0x00007f88610f6098:   mov    0x10(%r11,%r9,4),%r11d
  0x00007f88610f609d:   data16 xchg %ax,%ax
  0x00007f88610f60a0:   mov    0xc(%r12,%r10,8),%esi        ; implicit exception: dispatches to 0x00007f88610f62a0
  0x00007f88610f60a5:   cmp    %esi,%ecx
  0x00007f88610f60a7:   jae    0x00007f88610f61f8
  0x00007f88610f60ad:   mov    %ecx,%esi
  0x00007f88610f60af:   inc    %esi
  0x00007f88610f60b1:   mov    %esi,0x9c(%r8)
  0x00007f88610f60b8:   shl    $0x3,%r10
  0x00007f88610f60bc:   mov    %r11d,0x10(%r10,%rcx,4)
  0x00007f88610f60c1:   mov    0x380(%r15),%r10
  0x00007f88610f60c8:   mov    0x98(%r8),%r11d
  0x00007f88610f60cf:   inc    %r9d                         ; ImmutableOopMap {r8=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) test::ReadFilter_scalar@61 (line 58)
                                                            ; - test::main@152 (line 103)
  0x00007f88610f60d2:   test   %eax,(%r10)                  ;   {poll}
  0x00007f88610f60d5:   cmp    %r11d,%r9d
  0x00007f88610f60d8:   jge    0x00007f88610f600e
  0x00007f88610f60de:   mov    0x84(%r8),%r10d
  0x00007f88610f60e5:   mov    0x18(%r12,%r10,8),%ecx       ; implicit exception: dispatches to 0x00007f88610f625c
  0x00007f88610f60ea:   mov    0x10(%r12,%rcx,8),%rax       ; implicit exception: dispatches to 0x00007f88610f6268
  0x00007f88610f60ef:   mov    %rax,%rbx
  0x00007f88610f60f2:   imul   %rdi,%rbx
  0x00007f88610f60f6:   add    $0xb,%rbx
  0x00007f88610f60fa:   mov    %rbx,%r11
  0x00007f88610f60fd:   and    %rdx,%r11
  0x00007f88610f6100:   lock cmpxchg %r11,0x10(%r12,%rcx,8)
  0x00007f88610f6107:   sete   %r11b
  0x00007f88610f610b:   movzbl %r11b,%r11d
  0x00007f88610f610f:   test   %r11d,%r11d
  0x00007f88610f6112:   je     0x00007f88610f6214
  0x00007f88610f6118:   mov    0x18(%r12,%r10,8),%r10d
  0x00007f88610f611d:   data16 xchg %ax,%ax
  0x00007f88610f6120:   mov    0x10(%r12,%r10,8),%rax       ; implicit exception: dispatches to 0x00007f88610f6274
  0x00007f88610f6125:   mov    %rax,%rcx
  0x00007f88610f6128:   imul   %rdi,%rcx
  0x00007f88610f612c:   shr    $0x16,%rbx
  0x00007f88610f6130:   add    $0xb,%rcx
  0x00007f88610f6134:   mov    %rcx,%r11
  0x00007f88610f6137:   and    %rdx,%r11
  0x00007f88610f613a:   lock cmpxchg %r11,0x10(%r12,%r10,8)
  0x00007f88610f6141:   sete   %r11b
  0x00007f88610f6145:   movzbl %r11b,%r11d
  0x00007f88610f6149:   and    $0x3ffffff,%rbx
  0x00007f88610f6150:   mov    %ebx,%esi
  0x00007f88610f6152:   movslq %esi,%rbx
  0x00007f88610f6155:   shl    $0x1b,%rbx
  0x00007f88610f6159:   test   %r11d,%r11d
  0x00007f88610f615c:   nopl   0x0(%rax)
  0x00007f88610f6160:   je     0x00007f88610f6230
  0x00007f88610f6166:   shr    $0x15,%rcx
  0x00007f88610f616a:   and    $0x7ffffff,%rcx
  0x00007f88610f6171:   mov    %ecx,%r10d
  0x00007f88610f6174:   movslq %r10d,%r10
  0x00007f88610f6177:   add    %rbx,%r10
  0x00007f88610f617a:   vcvtsi2sd %r10,%xmm0,%xmm0
  0x00007f88610f617f:   vmulsd -0x1e7(%rip),%xmm0,%xmm0        # 0x00007f88610f5fa0
                                                            ;   {section_word}
  0x00007f88610f6187:   vucomisd 0x88(%r8),%xmm0
  0x00007f88610f6190:   jb     0x00007f88610f60c1
  0x00007f88610f6196:   vmovsd 0x90(%r8),%xmm1
  0x00007f88610f619f:   nop
  0x00007f88610f61a0:   vucomisd %xmm0,%xmm1
  0x00007f88610f61a4:   jb     0x00007f88610f60c1
  0x00007f88610f61aa:   vucomisd %xmm0,%xmm0
  0x00007f88610f61ae:   jp     0x00007f88610f6050
  0x00007f88610f61b4:   vmovq  %xmm0,%r11
  0x00007f88610f61b9:   jmpq   0x00007f88610f605a
  0x00007f88610f61be:   mov    $0xffffffe4,%esi
  0x00007f88610f61c3:   mov    %r9d,(%rsp)
  0x00007f88610f61c7:   mov    %r10d,0x4(%rsp)
  0x00007f88610f61cc:   mov    %ecx,0x8(%rsp)
  0x00007f88610f61d0:   mov    %r11,0x10(%rsp)
  0x00007f88610f61d5:   xchg   %ax,%ax
  0x00007f88610f61d7:   callq  0x00007f8861054580           ; ImmutableOopMap {[4]=NarrowOop }
                                                            ;*lastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::ReadFilter_scalar@37 (line 62)
                                                            ; - test::main@152 (line 103)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610f61dc:   mov    $0xffffffe4,%esi
  0x00007f88610f61e1:   mov    %r10d,0x4(%rsp)
  0x00007f88610f61e6:   mov    %ecx,0x8(%rsp)
  0x00007f88610f61ea:   mov    %ebx,0xc(%rsp)
  0x00007f88610f61ee:   mov    %r9d,0x10(%rsp)
  0x00007f88610f61f3:   callq  0x00007f8861054580           ; ImmutableOopMap {[4]=NarrowOop [12]=NarrowOop }
                                                            ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::ReadFilter_scalar@48 (line 64)
                                                            ; - test::main@152 (line 103)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610f61f8:   mov    $0xffffffe4,%esi
  0x00007f88610f61fd:   mov    %r9d,(%rsp)
  0x00007f88610f6201:   mov    %r10d,0x4(%rsp)
  0x00007f88610f6206:   mov    %ecx,0x8(%rsp)
  0x00007f88610f620a:   mov    %r11d,0xc(%rsp)
  0x00007f88610f620f:   callq  0x00007f8861054580           ; ImmutableOopMap {[4]=NarrowOop }
                                                            ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::ReadFilter_scalar@49 (line 64)
                                                            ; - test::main@152 (line 103)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610f6214:   mov    $0xffffff45,%esi
  0x00007f88610f6219:   mov    %r9d,(%rsp)
  0x00007f88610f621d:   mov    %r10d,0x4(%rsp)
  0x00007f88610f6222:   mov    %ecx,0x8(%rsp)
  0x00007f88610f6226:   mov    %r11d,0xc(%rsp)
  0x00007f88610f622b:   callq  0x00007f8861054580           ; ImmutableOopMap {[4]=NarrowOop [8]=NarrowOop }
                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.Random::next@35 (line 444)
                                                            ; - java.util.Random::nextDouble@3 (line 698)
                                                            ; - test::ReadFilter_scalar@16 (line 59)
                                                            ; - test::main@152 (line 103)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610f6230:   mov    $0xffffff45,%esi
  0x00007f88610f6235:   mov    %r9d,(%rsp)
  0x00007f88610f6239:   mov    %rbx,0x8(%rsp)
  0x00007f88610f623e:   mov    %r10d,0x4(%rsp)
  0x00007f88610f6243:   mov    %r11d,0x10(%rsp)
  0x00007f88610f6248:   data16 xchg %ax,%ax
  0x00007f88610f624b:   callq  0x00007f8861054580           ; ImmutableOopMap {[4]=NarrowOop }
                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.Random::next@35 (line 444)
                                                            ; - java.util.Random::nextDouble@13 (line 698)
                                                            ; - test::ReadFilter_scalar@16 (line 59)
                                                            ; - test::main@152 (line 103)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610f6250:   mov    $0xffffff45,%esi
  0x00007f88610f6255:   xchg   %ax,%ax
  0x00007f88610f6257:   callq  0x00007f8861054580           ; ImmutableOopMap {}
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) test::main@149 (line 102)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610f625c:   mov    $0xfffffff6,%esi
  0x00007f88610f6261:   xchg   %ax,%ax
  0x00007f88610f6263:   callq  0x00007f8861054580           ; ImmutableOopMap {}
                                                            ;*invokevirtual nextDouble {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::ReadFilter_scalar@16 (line 59)
                                                            ; - test::main@152 (line 103)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610f6268:   mov    $0xfffffff6,%esi
  0x00007f88610f626d:   xchg   %ax,%ax
  0x00007f88610f626f:   callq  0x00007f8861054580           ; ImmutableOopMap {}
                                                            ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@8 (line 442)
                                                            ; - java.util.Random::nextDouble@3 (line 698)
                                                            ; - test::ReadFilter_scalar@16 (line 59)
                                                            ; - test::main@152 (line 103)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610f6274:   mov    $0xfffffff6,%esi
  0x00007f88610f6279:   xchg   %ax,%ax
  0x00007f88610f627b:   callq  0x00007f8861054580           ; ImmutableOopMap {}
                                                            ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@8 (line 442)
                                                            ; - java.util.Random::nextDouble@13 (line 698)
                                                            ; - test::ReadFilter_scalar@16 (line 59)
                                                            ; - test::main@152 (line 103)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610f6280:   mov    $0xfffffff6,%esi
  0x00007f88610f6285:   mov    %ecx,%ebp
  0x00007f88610f6287:   mov    %r11,(%rsp)
  0x00007f88610f628b:   callq  0x00007f8861054580           ; ImmutableOopMap {}
                                                            ;*lastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::ReadFilter_scalar@37 (line 62)
                                                            ; - test::main@152 (line 103)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610f6290:   mov    $0xfffffff6,%esi
  0x00007f88610f6295:   mov    %r9d,%ebp
  0x00007f88610f6298:   data16 xchg %ax,%ax
  0x00007f88610f629b:   callq  0x00007f8861054580           ; ImmutableOopMap {}
                                                            ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::ReadFilter_scalar@48 (line 64)
                                                            ; - test::main@152 (line 103)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610f62a0:   mov    $0xfffffff6,%esi
  0x00007f88610f62a5:   mov    %ecx,%ebp
  0x00007f88610f62a7:   mov    %r11d,(%rsp)
  0x00007f88610f62ab:   callq  0x00007f8861054580           ; ImmutableOopMap {}
                                                            ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::ReadFilter_scalar@49 (line 64)
                                                            ; - test::main@152 (line 103)
                                                            ;   {runtime_call UncommonTrapBlob}
[Exception Handler]
  0x00007f88610f62b0:   jmpq   0x00007f8861068a80           ;   {no_reloc}
[Deopt Handler Code]
  0x00007f88610f62b5:   callq  0x00007f88610f62ba
  0x00007f88610f62ba:   subq   $0x5,(%rsp)
  0x00007f88610f62bf:   jmpq   0x00007f88610548a0           ;   {runtime_call DeoptimizationBlob}
  0x00007f88610f62c4:   hlt    
  0x00007f88610f62c5:   hlt    
  0x00007f88610f62c6:   hlt    
  0x00007f88610f62c7:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)   26310  384 %           test::main @ 168 (254 bytes)
 total in heap  [0x00007f88610f7010,0x00007f88610f7818] = 2056
 relocation     [0x00007f88610f7160,0x00007f88610f7190] = 48
 constants      [0x00007f88610f71a0,0x00007f88610f71c0] = 32
 main code      [0x00007f88610f71c0,0x00007f88610f74e8] = 808
 stub code      [0x00007f88610f74e8,0x00007f88610f7500] = 24
 oops           [0x00007f88610f7500,0x00007f88610f7508] = 8
 metadata       [0x00007f88610f7508,0x00007f88610f7530] = 40
 scopes data    [0x00007f88610f7530,0x00007f88610f76d0] = 416
 scopes pcs     [0x00007f88610f76d0,0x00007f88610f77d0] = 256
 dependencies   [0x00007f88610f77d0,0x00007f88610f77e0] = 16
 nul chk table  [0x00007f88610f77e0,0x00007f88610f7818] = 56

[Disassembly]
--------------------------------------------------------------------------------

[Constant Pool]
             Address          hex4                    hex8      
  0x00007f88610f71a0:   0x00000000      0x3ca0000000000000      
  0x00007f88610f71a4:   0x3ca00000                              
  0x00007f88610f71a8:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x00007f88610f71ac:   0xf4f4f4f4                              
  0x00007f88610f71b0:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x00007f88610f71b4:   0xf4f4f4f4                              
  0x00007f88610f71b8:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x00007f88610f71bc:   0xf4f4f4f4                              

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x00007f8818402168} 'main' '([Ljava/lang/String;)V' in 'test'
  0x00007f88610f71c0:   callq  0x00007f8873436f80           ;   {no_reloc}
  0x00007f88610f71c5:   data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f88610f71d0:   mov    %eax,-0x14000(%rsp)
  0x00007f88610f71d7:   push   %rbp
  0x00007f88610f71d8:   sub    $0x30,%rsp
  0x00007f88610f71dc:   mov    0x38(%rsi),%r13
  0x00007f88610f71e0:   mov    (%rsi),%ebx
  0x00007f88610f71e2:   mov    %rsi,%rdi
  0x00007f88610f71e5:   movabs $0x7f88734f2fd0,%r10
  0x00007f88610f71ef:   callq  *%r10
  0x00007f88610f71f2:   movabs $0x11f0de520,%rdi            ;   {oop(a 'java/lang/Class'{0x000000011f0de520} = 'test')}
  0x00007f88610f71fc:   movabs $0x5deece66d,%rdx
  0x00007f88610f7206:   movabs $0xffffffffffff,%rbp
  0x00007f88610f7210:   jmp    0x00007f88610f721e
  0x00007f88610f7212:   mov    0x380(%r15),%r10
  0x00007f88610f7219:   inc    %ebx                         ; ImmutableOopMap {rdi=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) test::main@181 (line 106)
  0x00007f88610f721b:   test   %eax,(%r10)                  ;   {poll}
  0x00007f88610f721e:   xchg   %ax,%ax
  0x00007f88610f7220:   cmp    $0x186a0,%ebx
  0x00007f88610f7226:   jge    0x00007f88610f747c
  0x00007f88610f722c:   mov    %r12d,0x9c(%rdi)
  0x00007f88610f7233:   mov    0x98(%rdi),%r11d
  0x00007f88610f723a:   nopw   0x0(%rax,%rax,1)
  0x00007f88610f7240:   test   %r11d,%r11d
  0x00007f88610f7243:   jle    0x00007f88610f7212
  0x00007f88610f7245:   xor    %r9d,%r9d
  0x00007f88610f7248:   jmpq   0x00007f88610f72e6
  0x00007f88610f724d:   data16 xchg %ax,%ax
  0x00007f88610f7250:   movabs $0x7ff8000000000000,%rax
  0x00007f88610f725a:   mov    0x9c(%rdi),%r10d
  0x00007f88610f7261:   mov    0x78(%rdi),%r8d
  0x00007f88610f7265:   mov    0xc(%r12,%r8,8),%r11d        ; implicit exception: dispatches to 0x00007f88610f74b0
  0x00007f88610f726a:   cmp    %r11d,%r10d
  0x00007f88610f726d:   jae    0x00007f88610f73c5
  0x00007f88610f7273:   mov    0x80(%rdi),%ecx
  0x00007f88610f7279:   lea    (%r12,%r8,8),%r11
  0x00007f88610f727d:   mov    %rax,0x10(%r11,%r10,8)
  0x00007f88610f7282:   mov    0xc(%r12,%rcx,8),%esi        ; implicit exception: dispatches to 0x00007f88610f74c4
  0x00007f88610f7287:   mov    0x7c(%rdi),%r11d
  0x00007f88610f728b:   cmp    %esi,%r9d
  0x00007f88610f728e:   jae    0x00007f88610f73ec
  0x00007f88610f7294:   lea    (%r12,%rcx,8),%r8
  0x00007f88610f7298:   mov    0x10(%r8,%r9,4),%ecx
  0x00007f88610f729d:   data16 xchg %ax,%ax
  0x00007f88610f72a0:   mov    0xc(%r12,%r11,8),%r8d        ; implicit exception: dispatches to 0x00007f88610f74d4
  0x00007f88610f72a5:   cmp    %r8d,%r10d
  0x00007f88610f72a8:   jae    0x00007f88610f7410
  0x00007f88610f72ae:   mov    %r10d,%r8d
  0x00007f88610f72b1:   inc    %r8d
  0x00007f88610f72b4:   mov    %r8d,0x9c(%rdi)
  0x00007f88610f72bb:   shl    $0x3,%r11
  0x00007f88610f72bf:   mov    %ecx,0x10(%r11,%r10,4)
  0x00007f88610f72c4:   mov    0x380(%r15),%r10
  0x00007f88610f72cb:   mov    0x98(%rdi),%r8d
  0x00007f88610f72d2:   inc    %r9d                         ; ImmutableOopMap {rdi=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) test::ReadFilter_scalar@61 (line 58)
                                                            ; - test::main@175 (line 107)
  0x00007f88610f72d5:   test   %eax,(%r10)                  ;   {poll}
  0x00007f88610f72d8:   cmp    %r8d,%r9d
  0x00007f88610f72db:   nopl   0x0(%rax,%rax,1)
  0x00007f88610f72e0:   jge    0x00007f88610f7212
  0x00007f88610f72e6:   mov    0x84(%rdi),%r10d
  0x00007f88610f72ed:   mov    0x18(%r12,%r10,8),%r11d      ; implicit exception: dispatches to 0x00007f88610f748c
  0x00007f88610f72f2:   mov    0x10(%r12,%r11,8),%rax       ; implicit exception: dispatches to 0x00007f88610f7498
  0x00007f88610f72f7:   mov    %rax,%rcx
  0x00007f88610f72fa:   imul   %rdx,%rcx
  0x00007f88610f72fe:   add    $0xb,%rcx
  0x00007f88610f7302:   mov    %rcx,%r8
  0x00007f88610f7305:   and    %rbp,%r8
  0x00007f88610f7308:   lock cmpxchg %r8,0x10(%r12,%r11,8)
  0x00007f88610f730f:   sete   %r8b
  0x00007f88610f7313:   movzbl %r8b,%r8d
  0x00007f88610f7317:   test   %r8d,%r8d
  0x00007f88610f731a:   nopw   0x0(%rax,%rax,1)
  0x00007f88610f7320:   je     0x00007f88610f7434
  0x00007f88610f7326:   mov    0x18(%r12,%r10,8),%r10d
  0x00007f88610f732b:   mov    0x10(%r12,%r10,8),%rax       ; implicit exception: dispatches to 0x00007f88610f74a4
  0x00007f88610f7330:   mov    %rax,%rsi
  0x00007f88610f7333:   imul   %rdx,%rsi
  0x00007f88610f7337:   shr    $0x16,%rcx
  0x00007f88610f733b:   add    $0xb,%rsi
  0x00007f88610f733f:   mov    %rsi,%r11
  0x00007f88610f7342:   and    %rbp,%r11
  0x00007f88610f7345:   lock cmpxchg %r11,0x10(%r12,%r10,8)
  0x00007f88610f734c:   sete   %r11b
  0x00007f88610f7350:   movzbl %r11b,%r11d
  0x00007f88610f7354:   and    $0x3ffffff,%rcx
  0x00007f88610f735b:   mov    %ecx,%ecx
  0x00007f88610f735d:   movslq %ecx,%r8
  0x00007f88610f7360:   shl    $0x1b,%r8
  0x00007f88610f7364:   test   %r11d,%r11d
  0x00007f88610f7367:   je     0x00007f88610f7458
  0x00007f88610f736d:   shr    $0x15,%rsi
  0x00007f88610f7371:   and    $0x7ffffff,%rsi
  0x00007f88610f7378:   mov    %esi,%r11d
  0x00007f88610f737b:   movslq %r11d,%r10
  0x00007f88610f737e:   add    %r8,%r10
  0x00007f88610f7381:   vcvtsi2sd %r10,%xmm0,%xmm0
  0x00007f88610f7386:   vmulsd -0x1ee(%rip),%xmm0,%xmm0        # 0x00007f88610f71a0
                                                            ;   {section_word}
  0x00007f88610f738e:   vucomisd 0x88(%rdi),%xmm0
  0x00007f88610f7396:   jb     0x00007f88610f72c4
  0x00007f88610f739c:   vmovsd 0x90(%rdi),%xmm1
  0x00007f88610f73a4:   vucomisd %xmm0,%xmm1
  0x00007f88610f73a8:   jb     0x00007f88610f72c4
  0x00007f88610f73ae:   vucomisd %xmm0,%xmm0
  0x00007f88610f73b2:   jp     0x00007f88610f7250
  0x00007f88610f73b8:   vmovq  %xmm0,%rax
  0x00007f88610f73bd:   data16 xchg %ax,%ax
  0x00007f88610f73c0:   jmpq   0x00007f88610f725a
  0x00007f88610f73c5:   mov    $0xffffffe4,%esi
  0x00007f88610f73ca:   mov    %r13,%rbp
  0x00007f88610f73cd:   mov    %ebx,(%rsp)
  0x00007f88610f73d0:   mov    %r9d,0x4(%rsp)
  0x00007f88610f73d5:   mov    %r8d,0x8(%rsp)
  0x00007f88610f73da:   mov    %r10d,0xc(%rsp)
  0x00007f88610f73df:   mov    %rax,0x10(%rsp)
  0x00007f88610f73e4:   data16 xchg %ax,%ax
  0x00007f88610f73e7:   callq  0x00007f8861054580           ; ImmutableOopMap {[8]=NarrowOop }
                                                            ;*lastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::ReadFilter_scalar@37 (line 62)
                                                            ; - test::main@175 (line 107)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610f73ec:   mov    $0xffffffe4,%esi
  0x00007f88610f73f1:   mov    %r13,%rbp
  0x00007f88610f73f4:   mov    %ebx,(%rsp)
  0x00007f88610f73f7:   mov    %r11d,0x8(%rsp)
  0x00007f88610f73fc:   mov    %r10d,0xc(%rsp)
  0x00007f88610f7401:   mov    %ecx,0x10(%rsp)
  0x00007f88610f7405:   mov    %r9d,0x14(%rsp)
  0x00007f88610f740a:   nop
  0x00007f88610f740b:   callq  0x00007f8861054580           ; ImmutableOopMap {[8]=NarrowOop [16]=NarrowOop }
                                                            ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::ReadFilter_scalar@48 (line 64)
                                                            ; - test::main@175 (line 107)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610f7410:   mov    $0xffffffe4,%esi
  0x00007f88610f7415:   mov    %r13,%rbp
  0x00007f88610f7418:   mov    %ebx,(%rsp)
  0x00007f88610f741b:   mov    %r9d,0x4(%rsp)
  0x00007f88610f7420:   mov    %r11d,0x8(%rsp)
  0x00007f88610f7425:   mov    %r10d,0xc(%rsp)
  0x00007f88610f742a:   mov    %ecx,0x10(%rsp)
  0x00007f88610f742e:   nop
  0x00007f88610f742f:   callq  0x00007f8861054580           ; ImmutableOopMap {[8]=NarrowOop }
                                                            ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::ReadFilter_scalar@49 (line 64)
                                                            ; - test::main@175 (line 107)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610f7434:   mov    $0xffffff45,%esi
  0x00007f88610f7439:   mov    %r13,%rbp
  0x00007f88610f743c:   mov    %ebx,(%rsp)
  0x00007f88610f743f:   mov    %r9d,0x4(%rsp)
  0x00007f88610f7444:   mov    %r10d,0x8(%rsp)
  0x00007f88610f7449:   mov    %r11d,0xc(%rsp)
  0x00007f88610f744e:   mov    %r8d,0x10(%rsp)
  0x00007f88610f7453:   callq  0x00007f8861054580           ; ImmutableOopMap {[8]=NarrowOop [12]=NarrowOop }
                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.Random::next@35 (line 444)
                                                            ; - java.util.Random::nextDouble@3 (line 698)
                                                            ; - test::ReadFilter_scalar@16 (line 59)
                                                            ; - test::main@175 (line 107)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610f7458:   mov    $0xffffff45,%esi
  0x00007f88610f745d:   mov    %r13,%rbp
  0x00007f88610f7460:   mov    %ebx,(%rsp)
  0x00007f88610f7463:   mov    %r9d,0x4(%rsp)
  0x00007f88610f7468:   mov    %r8,0x8(%rsp)
  0x00007f88610f746d:   mov    %r10d,0x10(%rsp)
  0x00007f88610f7472:   mov    %r11d,0x14(%rsp)
  0x00007f88610f7477:   callq  0x00007f8861054580           ; ImmutableOopMap {[16]=NarrowOop }
                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.Random::next@35 (line 444)
                                                            ; - java.util.Random::nextDouble@13 (line 698)
                                                            ; - test::ReadFilter_scalar@16 (line 59)
                                                            ; - test::main@175 (line 107)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610f747c:   mov    $0xffffff45,%esi
  0x00007f88610f7481:   mov    %r13,%rbp
  0x00007f88610f7484:   mov    %ebx,(%rsp)
  0x00007f88610f7487:   callq  0x00007f8861054580           ; ImmutableOopMap {}
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) test::main@172 (line 106)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610f748c:   mov    $0xfffffff6,%esi
  0x00007f88610f7491:   xchg   %ax,%ax
  0x00007f88610f7493:   callq  0x00007f8861054580           ; ImmutableOopMap {}
                                                            ;*invokevirtual nextDouble {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::ReadFilter_scalar@16 (line 59)
                                                            ; - test::main@175 (line 107)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610f7498:   mov    $0xfffffff6,%esi
  0x00007f88610f749d:   xchg   %ax,%ax
  0x00007f88610f749f:   callq  0x00007f8861054580           ; ImmutableOopMap {}
                                                            ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@8 (line 442)
                                                            ; - java.util.Random::nextDouble@3 (line 698)
                                                            ; - test::ReadFilter_scalar@16 (line 59)
                                                            ; - test::main@175 (line 107)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610f74a4:   mov    $0xfffffff6,%esi
  0x00007f88610f74a9:   xchg   %ax,%ax
  0x00007f88610f74ab:   callq  0x00007f8861054580           ; ImmutableOopMap {}
                                                            ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@8 (line 442)
                                                            ; - java.util.Random::nextDouble@13 (line 698)
                                                            ; - test::ReadFilter_scalar@16 (line 59)
                                                            ; - test::main@175 (line 107)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610f74b0:   mov    $0xfffffff6,%esi
  0x00007f88610f74b5:   mov    %r10d,%ebp
  0x00007f88610f74b8:   mov    %rax,(%rsp)
  0x00007f88610f74bc:   data16 xchg %ax,%ax
  0x00007f88610f74bf:   callq  0x00007f8861054580           ; ImmutableOopMap {}
                                                            ;*lastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::ReadFilter_scalar@37 (line 62)
                                                            ; - test::main@175 (line 107)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610f74c4:   mov    $0xfffffff6,%esi
  0x00007f88610f74c9:   mov    %r9d,%ebp
  0x00007f88610f74cc:   data16 xchg %ax,%ax
  0x00007f88610f74cf:   callq  0x00007f8861054580           ; ImmutableOopMap {}
                                                            ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::ReadFilter_scalar@48 (line 64)
                                                            ; - test::main@175 (line 107)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610f74d4:   mov    $0xfffffff6,%esi
  0x00007f88610f74d9:   mov    %r10d,%ebp
  0x00007f88610f74dc:   mov    %ecx,(%rsp)
  0x00007f88610f74df:   callq  0x00007f8861054580           ; ImmutableOopMap {}
                                                            ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::ReadFilter_scalar@49 (line 64)
                                                            ; - test::main@175 (line 107)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f88610f74e4:   hlt    
  0x00007f88610f74e5:   hlt    
  0x00007f88610f74e6:   hlt    
  0x00007f88610f74e7:   hlt    
[Exception Handler]
  0x00007f88610f74e8:   jmpq   0x00007f8861068a80           ;   {no_reloc}
[Deopt Handler Code]
  0x00007f88610f74ed:   callq  0x00007f88610f74f2
  0x00007f88610f74f2:   subq   $0x5,(%rsp)
  0x00007f88610f74f7:   jmpq   0x00007f88610548a0           ;   {runtime_call DeoptimizationBlob}
  0x00007f88610f74fc:   hlt    
  0x00007f88610f74fd:   hlt    
  0x00007f88610f74fe:   hlt    
  0x00007f88610f74ff:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
[Scalar Time]  8563 ms  [Pos] 5025813 [Output] 1.1273096303678644E22
