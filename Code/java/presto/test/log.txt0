# JMH version: 1.35
# VM version: JDK 20-ea, OpenJDK 64-Bit Server VM, 20-ea+12-790
# VM invoker: /home/jatinbha/softwares/jdk-20/bin/java
# VM options: -XX:-TieredCompilation --add-modules=jdk.incubator.vector -XX:CompileCommand=Print,com.intel.lgiacchi.LongIntSimpleBenchmark::ivectorbase -XX:LoopUnrollLimit=0
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 30 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.intel.lgiacchi.LongIntSimpleBenchmark.ivectorbase
# Parameters: (selectivity = 10)

# Run progress: 0.00% complete, ETA 00:00:40
# Fork: 1 of 1
CompileCommand: print com/intel/lgiacchi/LongIntSimpleBenchmark.ivectorbase bool print = true
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 
============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     413  355 %           com.intel.lgiacchi.LongIntSimpleBenchmark::ivectorbase @ 14 (157 bytes)
 total in heap  [0x00007fbf590f3410,0x00007fbf590f3b98] = 1928
 relocation     [0x00007fbf590f3560,0x00007fbf590f3588] = 40
 main code      [0x00007fbf590f35a0,0x00007fbf590f38c8] = 808
 stub code      [0x00007fbf590f38c8,0x00007fbf590f38e0] = 24
 oops           [0x00007fbf590f38e0,0x00007fbf590f3908] = 40
 metadata       [0x00007fbf590f3908,0x00007fbf590f3998] = 144
 scopes data    [0x00007fbf590f3998,0x00007fbf590f3ac8] = 304
 scopes pcs     [0x00007fbf590f3ac8,0x00007fbf590f3b58] = 144
 dependencies   [0x00007fbf590f3b58,0x00007fbf590f3b78] = 32
 nul chk table  [0x00007fbf590f3b78,0x00007fbf590f3b98] = 32

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x00007fbf1047dca0} 'ivectorbase' '(Lcom/intel/lgiacchi/LongIntSimpleBenchmark$MyState;)V' in 'com/intel/lgiacchi/LongIntSimpleBenchmark'
  0x00007fbf590f35a0:   callq  0x00007fbf6bd32f80           ;   {runtime_call os::breakpoint()}
  0x00007fbf590f35a5:   data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fbf590f35b0:   mov    %eax,-0x14000(%rsp)
  0x00007fbf590f35b7:   push   %rbp
  0x00007fbf590f35b8:   sub    $0x90,%rsp
  0x00007fbf590f35bf:   mov    0x38(%rsi),%r14
  0x00007fbf590f35c3:   mov    0x30(%rsi),%r13
  0x00007fbf590f35c7:   mov    0x20(%rsi),%ebx
  0x00007fbf590f35ca:   mov    0x28(%rsi),%ebp
  0x00007fbf590f35cd:   mov    %rsi,%rdi
  0x00007fbf590f35d0:   data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fbf590f35db:   data16 data16 xchg %ax,%ax
  0x00007fbf590f35df:   nop
  0x00007fbf590f35e0:   vzeroupper 
  0x00007fbf590f35e3:   movabs $0x7fbf6bdeefd0,%r10
  0x00007fbf590f35ed:   callq  *%r10
  0x00007fbf590f35f0:   test   %r14,%r14
  0x00007fbf590f35f3:   je     0x00007fbf590f3805
  0x00007fbf590f35f9:   mov    0x8(%r14),%r10d
  0x00007fbf590f35fd:   movabs $0x80101e998,%r11            ;   {metadata('com/intel/lgiacchi/LongIntSimpleBenchmark')}
  0x00007fbf590f3607:   movabs $0x800000000,%r8
  0x00007fbf590f3611:   add    %r10,%r8
  0x00007fbf590f3614:   mov    0x38(%r8),%r10
  0x00007fbf590f3618:   cmp    %r11,%r10
  0x00007fbf590f361b:   nopl   0x0(%rax,%rax,1)
  0x00007fbf590f3620:   jne    0x00007fbf590f3878
  0x00007fbf590f3626:   mov    %r14,%rcx
  0x00007fbf590f3629:   test   %r13,%r13
  0x00007fbf590f362c:   je     0x00007fbf590f380c
  0x00007fbf590f3632:   mov    0x8(%r13),%r10d
  0x00007fbf590f3636:   movabs $0x80101c648,%r11            ;   {metadata('com/intel/lgiacchi/LongIntSimpleBenchmark$MyState')}
  0x00007fbf590f3640:   movabs $0x800000000,%r8
  0x00007fbf590f364a:   add    %r10,%r8
  0x00007fbf590f364d:   mov    0x38(%r8),%r10
  0x00007fbf590f3651:   cmp    %r11,%r10
  0x00007fbf590f3654:   jne    0x00007fbf590f3878
  0x00007fbf590f365a:   nopw   0x0(%rax,%rax,1)
  0x00007fbf590f3660:   test   %rcx,%rcx
  0x00007fbf590f3663:   je     0x00007fbf590f385c
  0x00007fbf590f3669:   movabs $0x11f89f290,%r11            ;   {oop(a 'java/lang/Class'{0x000000011f89f290} = 'com/intel/lgiacchi/LongIntSimpleBenchmark')}
  0x00007fbf590f3673:   mov    0x80(%r11),%r8
  0x00007fbf590f367a:   mov    %r8d,%r10d
  0x00007fbf590f367d:   movslq %r10d,%r9
  0x00007fbf590f3680:   cmp    %r8,%r9
  0x00007fbf590f3683:   jne    0x00007fbf590f385c
  0x00007fbf590f3689:   mov    0x88(%r11),%r11
  0x00007fbf590f3690:   mov    %r11d,%r8d
  0x00007fbf590f3693:   movslq %r8d,%r9
  0x00007fbf590f3696:   cmp    %r11,%r9
  0x00007fbf590f3699:   jne    0x00007fbf590f385c
  0x00007fbf590f369f:   nop
  0x00007fbf590f36a0:   mov    0x14(%r13),%r11d             ; implicit exception: dispatches to 0x00007fbf590f385c
  0x00007fbf590f36a4:   mov    0xc(%r12,%r11,8),%r9d        ; implicit exception: dispatches to 0x00007fbf590f385c
  0x00007fbf590f36a9:   add    $0xfffffff1,%r9d
  0x00007fbf590f36ad:   test   %r9d,%r9d
  0x00007fbf590f36b0:   jl     0x00007fbf590f385c
  0x00007fbf590f36b6:   mov    0x18(%r13),%edi
  0x00007fbf590f36ba:   nopw   0x0(%rax,%rax,1)
  0x00007fbf590f36c0:   mov    0xc(%r12,%rdi,8),%edx        ; implicit exception: dispatches to 0x00007fbf590f385c
  0x00007fbf590f36c5:   add    $0xfffffff1,%edx
  0x00007fbf590f36c8:   test   %edx,%edx
  0x00007fbf590f36ca:   jl     0x00007fbf590f385c
  0x00007fbf590f36d0:   lea    (%r12,%r11,8),%rsi
  0x00007fbf590f36d4:   vpbroadcastd %r8d,%zmm0
  0x00007fbf590f36da:   vpbroadcastd %r10d,%zmm1
  0x00007fbf590f36e0:   lea    (%r12,%rdi,8),%r10
  0x00007fbf590f36e4:   movabs $0x11fbc4458,%r8             ;   {oop([I{0x000000011fbc4458})}
  0x00007fbf590f36ee:   jmp    0x00007fbf590f372c
  0x00007fbf590f36f0:   mov    %r9d,0x4(%rsp)
  0x00007fbf590f36f5:   mov    %r13,%r14
  0x00007fbf590f36f8:   mov    0x380(%r15),%r13
  0x00007fbf590f36ff:   vmovdqu32 %zmm2,0x10(%r10,%r9,4)
  0x00007fbf590f370a:   add    $0x10,%ebp
  0x00007fbf590f370d:   kmovq  %k7,%r9
  0x00007fbf590f3712:   popcnt %r9,%rax
  0x00007fbf590f3717:   add    0x4(%rsp),%eax
  0x00007fbf590f371b:   mov    %eax,0xc(%r14)               ; ImmutableOopMap {r10=Oop r11=NarrowOop r8=Oop rcx=Oop rdi=NarrowOop rsi=Oop r14=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) com.intel.lgiacchi.LongIntSimpleBenchmark::ivectorbase@99 (line 130)
  0x00007fbf590f371f:   test   %eax,0x0(%r13)               ;   {poll}
  0x00007fbf590f3723:   mov    %r14,%r13
  0x00007fbf590f3726:   mov    %edx,%r9d
  0x00007fbf590f3729:   mov    (%rsp),%edx
  0x00007fbf590f372c:   cmp    %ebx,%ebp
  0x00007fbf590f372e:   jge    0x00007fbf590f37dc
  0x00007fbf590f3734:   nopl   0x0(%rax,%rax,1)
  0x00007fbf590f373c:   data16 data16 xchg %ax,%ax
  0x00007fbf590f3740:   cmp    $0xff1,%ebp
  0x00007fbf590f3746:   jae    0x00007fbf590f3814
  0x00007fbf590f374c:   mov    %edx,(%rsp)
  0x00007fbf590f374f:   mov    %r9d,%edx
  0x00007fbf590f3752:   vmovdqu32 0x10(%r8,%rbp,4),%zmm2
  0x00007fbf590f375d:   vpcmpnltd %zmm1,%zmm2,%k7
  0x00007fbf590f3764:   vpcmpled %zmm0,%zmm2,%k6
  0x00007fbf590f376b:   kandw  %k6,%k7,%k7
  0x00007fbf590f376f:   vpmovm2b %k7,%xmm3
  0x00007fbf590f3775:   vpabsb %xmm3,%xmm3
  0x00007fbf590f377a:   nopw   0x0(%rax,%rax,1)
  0x00007fbf590f3780:   cmp    %r9d,%ebp
  0x00007fbf590f3783:   jae    0x00007fbf590f3830
  0x00007fbf590f3789:   vmovdqu32 0x10(%rsi,%rbp,4),%zmm2
  0x00007fbf590f3794:   mov    0xc(%r13),%r9d
  0x00007fbf590f3798:   vpcompressd %zmm2,%zmm2{%k7}{z}
  0x00007fbf590f379e:   xchg   %ax,%ax
  0x00007fbf590f37a0:   cmp    (%rsp),%r9d
  0x00007fbf590f37a4:   jb     0x00007fbf590f36f0
  0x00007fbf590f37aa:   mov    $0xffffffe4,%esi
  0x00007fbf590f37af:   mov    %rcx,0x8(%rsp)
  0x00007fbf590f37b4:   mov    %r13,0x10(%rsp)
  0x00007fbf590f37b9:   mov    %ebx,0x4(%rsp)
  0x00007fbf590f37bd:   mov    %edi,0x18(%rsp)
  0x00007fbf590f37c1:   mov    %r9d,0x1c(%rsp)
  0x00007fbf590f37c6:   vmovdqu64 %zmm2,0x40(%rsp)
  0x00007fbf590f37ce:   vmovdqu %xmm3,0x20(%rsp)
  0x00007fbf590f37d4:   vzeroupper 
  0x00007fbf590f37d7:   callq  0x00007fbf59054580           ; ImmutableOopMap {[8]=Oop [16]=Oop [24]=NarrowOop }
                                                            ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::checkIndex@3 (line 385)
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 57)
                                                            ; - jdk.incubator.vector.IntVector::intoArray@7 (line 3226)
                                                            ; - com.intel.lgiacchi.LongIntSimpleBenchmark::ivectorbase@71 (line 137)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fbf590f37dc:   nopl   0x0(%rax)
  0x00007fbf590f37e0:   cmp    $0x1000,%ebp
  0x00007fbf590f37e6:   jl     0x00007fbf590f3894
  0x00007fbf590f37ec:   vzeroupper 
  0x00007fbf590f37ef:   add    $0x90,%rsp
  0x00007fbf590f37f6:   pop    %rbp
  0x00007fbf590f37f7:   cmp    0x378(%r15),%rsp             ;   {poll_return}
  0x00007fbf590f37fe:   ja     0x00007fbf590f38ac
  0x00007fbf590f3804:   retq   
  0x00007fbf590f3805:   xor    %ecx,%ecx
  0x00007fbf590f3807:   jmpq   0x00007fbf590f3629
  0x00007fbf590f380c:   xor    %r13d,%r13d
  0x00007fbf590f380f:   jmpq   0x00007fbf590f365a
  0x00007fbf590f3814:   mov    $0xffffffe4,%esi
  0x00007fbf590f3819:   mov    %rcx,(%rsp)
  0x00007fbf590f381d:   mov    %r13,0x8(%rsp)
  0x00007fbf590f3822:   mov    %ebx,0x10(%rsp)
  0x00007fbf590f3826:   xchg   %ax,%ax
  0x00007fbf590f3828:   vzeroupper 
  0x00007fbf590f382b:   callq  0x00007fbf59054580           ; ImmutableOopMap {[0]=Oop [8]=Oop }
                                                            ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::checkIndex@3 (line 385)
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 57)
                                                            ; - jdk.incubator.vector.IntVector::fromArray@9 (line 2953)
                                                            ; - com.intel.lgiacchi.LongIntSimpleBenchmark::ivectorbase@26 (line 131)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fbf590f3830:   mov    $0xffffffe4,%esi
  0x00007fbf590f3835:   mov    %rcx,(%rsp)
  0x00007fbf590f3839:   mov    %r13,0x8(%rsp)
  0x00007fbf590f383e:   mov    %ebx,0x10(%rsp)
  0x00007fbf590f3842:   mov    %r11d,0x14(%rsp)
  0x00007fbf590f3847:   mov    %r9d,0x1c(%rsp)
  0x00007fbf590f384c:   vmovdqu %xmm3,0x20(%rsp)
  0x00007fbf590f3852:   xchg   %ax,%ax
  0x00007fbf590f3854:   vzeroupper 
  0x00007fbf590f3857:   callq  0x00007fbf59054580           ; ImmutableOopMap {[0]=Oop [8]=Oop [20]=NarrowOop }
                                                            ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::checkIndex@3 (line 385)
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 57)
                                                            ; - jdk.incubator.vector.IntVector::fromArray@9 (line 2953)
                                                            ; - com.intel.lgiacchi.LongIntSimpleBenchmark::ivectorbase@47 (line 134)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fbf590f385c:   mov    $0xffffffbe,%esi
  0x00007fbf590f3861:   mov    %rcx,(%rsp)
  0x00007fbf590f3865:   mov    %r13,0x8(%rsp)
  0x00007fbf590f386a:   mov    %ebx,0x10(%rsp)
  0x00007fbf590f386e:   xchg   %ax,%ax
  0x00007fbf590f3870:   vzeroupper 
  0x00007fbf590f3873:   callq  0x00007fbf59054580           ; ImmutableOopMap {[0]=Oop [8]=Oop }
                                                            ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - com.intel.lgiacchi.LongIntSimpleBenchmark::ivectorbase@14 (line 130)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fbf590f3878:   mov    $0xffffff8d,%esi
  0x00007fbf590f387d:   mov    %r14,(%rsp)
  0x00007fbf590f3881:   mov    %r13,0x8(%rsp)
  0x00007fbf590f3886:   mov    %ebx,0x10(%rsp)
  0x00007fbf590f388a:   xchg   %ax,%ax
  0x00007fbf590f388c:   vzeroupper 
  0x00007fbf590f388f:   callq  0x00007fbf59054580           ; ImmutableOopMap {[0]=Oop [8]=Oop }
                                                            ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - com.intel.lgiacchi.LongIntSimpleBenchmark::ivectorbase@14 (line 130)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fbf590f3894:   mov    $0xffffff45,%esi
  0x00007fbf590f3899:   mov    %rcx,(%rsp)
  0x00007fbf590f389d:   mov    %r13,0x8(%rsp)
  0x00007fbf590f38a2:   xchg   %ax,%ax
  0x00007fbf590f38a4:   vzeroupper 
  0x00007fbf590f38a7:   callq  0x00007fbf59054580           ; ImmutableOopMap {[0]=Oop [8]=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) com.intel.lgiacchi.LongIntSimpleBenchmark::ivectorbase@106 (line 140)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fbf590f38ac:   movabs $0x7fbf590f37f7,%r10         ;   {internal_word}
  0x00007fbf590f38b6:   mov    %r10,0x390(%r15)
  0x00007fbf590f38bd:   jmpq   0x00007fbf59053400           ;   {runtime_call SafepointBlob}
  0x00007fbf590f38c2:   hlt    
  0x00007fbf590f38c3:   hlt    
  0x00007fbf590f38c4:   hlt    
  0x00007fbf590f38c5:   hlt    
  0x00007fbf590f38c6:   hlt    
  0x00007fbf590f38c7:   hlt    
[Exception Handler]
  0x00007fbf590f38c8:   jmpq   0x00007fbf59068a80           ;   {no_reloc}
[Deopt Handler Code]
  0x00007fbf590f38cd:   callq  0x00007fbf590f38d2
  0x00007fbf590f38d2:   subq   $0x5,(%rsp)
  0x00007fbf590f38d7:   jmpq   0x00007fbf590548a0           ;   {runtime_call DeoptimizationBlob}
  0x00007fbf590f38dc:   hlt    
  0x00007fbf590f38dd:   hlt    
  0x00007fbf590f38de:   hlt    
  0x00007fbf590f38df:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     430  356             com.intel.lgiacchi.LongIntSimpleBenchmark::ivectorbase (157 bytes)
 total in heap  [0x00007fbf590f4790,0x00007fbf590f4cb8] = 1320
 relocation     [0x00007fbf590f48e0,0x00007fbf590f4900] = 32
 main code      [0x00007fbf590f4900,0x00007fbf590f4ac0] = 448
 stub code      [0x00007fbf590f4ac0,0x00007fbf590f4ad8] = 24
 oops           [0x00007fbf590f4ad8,0x00007fbf590f4af0] = 24
 metadata       [0x00007fbf590f4af0,0x00007fbf590f4b88] = 152
 scopes data    [0x00007fbf590f4b88,0x00007fbf590f4c28] = 160
 scopes pcs     [0x00007fbf590f4c28,0x00007fbf590f4c78] = 80
 dependencies   [0x00007fbf590f4c78,0x00007fbf590f4c98] = 32
 nul chk table  [0x00007fbf590f4c98,0x00007fbf590f4cb8] = 32

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00007fbf1047dca0} 'ivectorbase' '(Lcom/intel/lgiacchi/LongIntSimpleBenchmark$MyState;)V' in 'com/intel/lgiacchi/LongIntSimpleBenchmark'
  # this:     rsi:rsi   = 'com/intel/lgiacchi/LongIntSimpleBenchmark'
  # parm0:    rdx:rdx   = 'com/intel/lgiacchi/LongIntSimpleBenchmark$MyState'
  #           [sp+0xa0]  (sp of caller)
  0x00007fbf590f4900:   mov    0x8(%rsi),%r10d
  0x00007fbf590f4904:   movabs $0x800000000,%r11
  0x00007fbf590f490e:   add    %r11,%r10
  0x00007fbf590f4911:   cmp    %r10,%rax
  0x00007fbf590f4914:   jne    0x00007fbf5904c280           ;   {runtime_call ic_miss_stub}
  0x00007fbf590f491a:   xchg   %ax,%ax
  0x00007fbf590f491c:   nopl   0x0(%rax)
[Verified Entry Point]
  0x00007fbf590f4920:   mov    %eax,-0x14000(%rsp)
  0x00007fbf590f4927:   push   %rbp
  0x00007fbf590f4928:   sub    $0x90,%rsp
  0x00007fbf590f492f:   mov    %rsi,%r8
  0x00007fbf590f4932:   movabs $0x11f89f290,%r10            ;   {oop(a 'java/lang/Class'{0x000000011f89f290} = 'com/intel/lgiacchi/LongIntSimpleBenchmark')}
  0x00007fbf590f493c:   mov    0x80(%r10),%r11
  0x00007fbf590f4943:   mov    %r11d,%ebx
  0x00007fbf590f4946:   movslq %ebx,%r9
  0x00007fbf590f4949:   cmp    %r11,%r9
  0x00007fbf590f494c:   jne    0x00007fbf590f4a90
  0x00007fbf590f4952:   mov    0x88(%r10),%r10
  0x00007fbf590f4959:   mov    %r10d,%ecx
  0x00007fbf590f495c:   movslq %ecx,%r11
  0x00007fbf590f495f:   nop
  0x00007fbf590f4960:   cmp    %r10,%r11
  0x00007fbf590f4963:   jne    0x00007fbf590f4a90
  0x00007fbf590f4969:   mov    0x14(%rdx),%r9d              ; implicit exception: dispatches to 0x00007fbf590f4a90
  0x00007fbf590f496d:   mov    0xc(%r12,%r9,8),%r11d        ; implicit exception: dispatches to 0x00007fbf590f4a90
  0x00007fbf590f4972:   mov    %r11d,%r10d
  0x00007fbf590f4975:   add    $0xfffffff1,%r10d
  0x00007fbf590f4979:   test   %r10d,%r10d
  0x00007fbf590f497c:   nopl   0x0(%rax)
  0x00007fbf590f4980:   jl     0x00007fbf590f4a90
  0x00007fbf590f4986:   cmp    $0xf,%r11d
  0x00007fbf590f498a:   je     0x00007fbf590f4a90
  0x00007fbf590f4990:   cmp    $0xff0,%r10d
  0x00007fbf590f4997:   jbe    0x00007fbf590f4a90
  0x00007fbf590f499d:   mov    0x18(%rdx),%ebp
  0x00007fbf590f49a0:   mov    0xc(%r12,%rbp,8),%edi        ; implicit exception: dispatches to 0x00007fbf590f4a90
  0x00007fbf590f49a5:   add    $0xfffffff1,%edi
  0x00007fbf590f49a8:   test   %edi,%edi
  0x00007fbf590f49aa:   jl     0x00007fbf590f4a90
  0x00007fbf590f49b0:   mov    0xc(%rdx),%r11d
  0x00007fbf590f49b4:   vpbroadcastd %ecx,%zmm0
  0x00007fbf590f49ba:   vpbroadcastd %ebx,%zmm1
  0x00007fbf590f49c0:   lea    (%r12,%r9,8),%r10
  0x00007fbf590f49c4:   xor    %ebx,%ebx
  0x00007fbf590f49c6:   lea    (%r12,%rbp,8),%r9
  0x00007fbf590f49ca:   movabs $0x11fbc4458,%rax            ;   {oop([I{0x000000011fbc4458})}
  0x00007fbf590f49d4:   vmovdqu32 0x10(%rax,%rbx,4),%zmm2
  0x00007fbf590f49df:   vmovdqu32 0x10(%r10,%rbx,4),%zmm3
  0x00007fbf590f49ea:   vpcmpled %zmm0,%zmm2,%k7
  0x00007fbf590f49f1:   vpcmpnltd %zmm1,%zmm2,%k6
  0x00007fbf590f49f8:   kandw  %k7,%k6,%k7
  0x00007fbf590f49fc:   vpcompressd %zmm3,%zmm2{%k7}{z}
  0x00007fbf590f4a02:   cmp    %edi,%r11d
  0x00007fbf590f4a05:   jae    0x00007fbf590f4a54
  0x00007fbf590f4a07:   mov    %r11d,%ecx
  0x00007fbf590f4a0a:   vmovdqu32 %zmm2,0x10(%r9,%rcx,4)
  0x00007fbf590f4a15:   kmovq  %k7,%rcx
  0x00007fbf590f4a1a:   popcnt %rcx,%rsi
  0x00007fbf590f4a1f:   add    %esi,%r11d
  0x00007fbf590f4a22:   mov    %r11d,0xc(%rdx)
  0x00007fbf590f4a26:   add    $0x10,%ebx
  0x00007fbf590f4a29:   cmp    $0x1000,%ebx
  0x00007fbf590f4a2f:   jl     0x00007fbf590f49d4
  0x00007fbf590f4a31:   mov    0x380(%r15),%r9              ; ImmutableOopMap {r8=Oop rdx=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) com.intel.lgiacchi.LongIntSimpleBenchmark::ivectorbase@99 (line 130)
  0x00007fbf590f4a38:   test   %eax,(%r9)                   ;   {poll}
  0x00007fbf590f4a3b:   vzeroupper 
  0x00007fbf590f4a3e:   add    $0x90,%rsp
  0x00007fbf590f4a45:   pop    %rbp
  0x00007fbf590f4a46:   cmp    0x378(%r15),%rsp             ;   {poll_return}
  0x00007fbf590f4a4d:   ja     0x00007fbf590f4aa4
  0x00007fbf590f4a53:   retq   
  0x00007fbf590f4a54:   mov    $0xffffffe4,%esi
  0x00007fbf590f4a59:   vpmovm2b %k7,%xmm0
  0x00007fbf590f4a5f:   vpabsb %xmm0,%xmm0
  0x00007fbf590f4a64:   mov    %ebx,(%rsp)
  0x00007fbf590f4a67:   mov    %r11d,0x4(%rsp)
  0x00007fbf590f4a6c:   mov    %edi,0x8(%rsp)
  0x00007fbf590f4a70:   vmovdqu64 %zmm2,0x40(%rsp)
  0x00007fbf590f4a78:   mov    %r8,0x10(%rsp)
  0x00007fbf590f4a7d:   mov    %rdx,0x18(%rsp)
  0x00007fbf590f4a82:   vmovdqu %xmm0,0x20(%rsp)
  0x00007fbf590f4a88:   vzeroupper 
  0x00007fbf590f4a8b:   callq  0x00007fbf59054580           ; ImmutableOopMap {rbp=NarrowOop [16]=Oop [24]=Oop }
                                                            ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::checkIndex@3 (line 385)
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 57)
                                                            ; - jdk.incubator.vector.IntVector::intoArray@7 (line 3226)
                                                            ; - com.intel.lgiacchi.LongIntSimpleBenchmark::ivectorbase@71 (line 137)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fbf590f4a90:   mov    $0xffffff76,%esi
  0x00007fbf590f4a95:   mov    %r8,%rbp
  0x00007fbf590f4a98:   mov    %rdx,(%rsp)
  0x00007fbf590f4a9c:   vzeroupper 
  0x00007fbf590f4a9f:   callq  0x00007fbf59054580           ; ImmutableOopMap {rbp=Oop [0]=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) com.intel.lgiacchi.LongIntSimpleBenchmark::ivectorbase@16 (line 130)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fbf590f4aa4:   movabs $0x7fbf590f4a46,%r10         ;   {internal_word}
  0x00007fbf590f4aae:   mov    %r10,0x390(%r15)
  0x00007fbf590f4ab5:   jmpq   0x00007fbf59053400           ;   {runtime_call SafepointBlob}
  0x00007fbf590f4aba:   hlt    
  0x00007fbf590f4abb:   hlt    
  0x00007fbf590f4abc:   hlt    
  0x00007fbf590f4abd:   hlt    
  0x00007fbf590f4abe:   hlt    
  0x00007fbf590f4abf:   hlt    
[Exception Handler]
  0x00007fbf590f4ac0:   jmpq   0x00007fbf59068a80           ;   {no_reloc}
[Deopt Handler Code]
  0x00007fbf590f4ac5:   callq  0x00007fbf590f4aca
  0x00007fbf590f4aca:   subq   $0x5,(%rsp)
  0x00007fbf590f4acf:   jmpq   0x00007fbf590548a0           ;   {runtime_call DeoptimizationBlob}
  0x00007fbf590f4ad4:   hlt    
  0x00007fbf590f4ad5:   hlt    
  0x00007fbf590f4ad6:   hlt    
  0x00007fbf590f4ad7:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
