clang version 10.0.0-4ubuntu1 
Target: x86_64-pc-linux-gnu
Thread model: posix
InstalledDir: /usr/bin
Found candidate GCC installation: /usr/bin/../lib/gcc/x86_64-linux-gnu/9
Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/9
Selected GCC installation: /usr/bin/../lib/gcc/x86_64-linux-gnu/9
Candidate multilib: .;@m64
Candidate multilib: 32;@m32
Candidate multilib: x32;@mx32
Selected multilib: .;@m64
 "/usr/lib/llvm-10/bin/clang" -cc1 -triple x86_64-pc-linux-gnu -emit-obj -mrelax-all -disable-free -disable-llvm-verifier -discard-value-names -main-file-name main.cxx -mrelocation-model static -mthread-model posix -mframe-pointer=all -fmath-errno -fno-rounding-math -masm-verbose -mconstructor-aliases -munwind-tables -target-cpu x86-64 -target-feature +avx512f -dwarf-column-info -fno-split-dwarf-inlining -debugger-tuning=gdb -v -resource-dir /usr/lib/llvm-10/lib/clang/10.0.0 -internal-isystem /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9 -internal-isystem /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9 -internal-isystem /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9 -internal-isystem /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/backward -internal-isystem /usr/local/include -internal-isystem /usr/lib/llvm-10/lib/clang/10.0.0/include -internal-externc-isystem /usr/include/x86_64-linux-gnu -internal-externc-isystem /include -internal-externc-isystem /usr/include -fdeprecated-macro -fdebug-compilation-dir /home/jatinbha/code/c/conv -ferror-limit 19 -fmessage-length 0 -fgnuc-version=4.2.1 -fobjc-runtime=gcc -fcxx-exceptions -fexceptions -fdiagnostics-show-option -ast-dump -faddrsig -o /tmp/main-2bb11f.o -x c++ main.cxx
clang -cc1 version 10.0.0 based upon LLVM 10.0.0 default target x86_64-pc-linux-gnu
ignoring nonexistent directory "/include"
ignoring duplicate directory "/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9"
#include "..." search starts here:
#include <...> search starts here:
 /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9
 /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9
 /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/backward
 /usr/local/include
 /usr/lib/llvm-10/lib/clang/10.0.0/include
 /usr/include/x86_64-linux-gnu
 /usr/include
End of search list.
TranslationUnitDecl 0x7db288 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x7dbb60 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x7db820 '__int128'
|-TypedefDecl 0x7dbbd0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x7db840 'unsigned __int128'
|-TypedefDecl 0x7dbf48 <<invalid sloc>> <invalid sloc> implicit __NSConstantString '__NSConstantString_tag'
| `-RecordType 0x7dbcc0 '__NSConstantString_tag'
|   `-CXXRecord 0x7dbc28 '__NSConstantString_tag'
|-TypedefDecl 0x7dbfe0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x7dbfa0 'char *'
|   `-BuiltinType 0x7db320 'char'
|-TypedefDecl 0x81a058 <<invalid sloc>> <invalid sloc> implicit referenced __builtin_va_list '__va_list_tag [1]'
| `-ConstantArrayType 0x81a000 '__va_list_tag [1]' 1 
|   `-RecordType 0x7dc0d0 '__va_list_tag'
|     `-CXXRecord 0x7dc038 '__va_list_tag'
|-NamespaceDecl 0x81a0b0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:252:1, line:260:1> line:252:11 std
| |-TypedefDecl 0x81a138 <line:254:3, col:26> col:26 referenced size_t 'unsigned long'
| | `-BuiltinType 0x7db440 'unsigned long'
| |-TypedefDecl 0x81a1a8 <line:255:3, col:28> col:28 ptrdiff_t 'long'
| | `-BuiltinType 0x7db3a0 'long'
| `-TypedefDecl 0x81a248 <line:258:3, col:29> col:29 referenced nullptr_t 'decltype(nullptr)':'nullptr_t'
|   `-DecltypeType 0x81a210 'decltype(nullptr)' sugar
|     |-CXXNullPtrLiteralExpr 0x81a200 <col:20> 'nullptr_t'
|     `-BuiltinType 0x7dbb10 'nullptr_t'
|-NamespaceDecl 0x81a2a0 prev 0x81a0b0 <line:274:1, line:277:1> line:274:11 std
| |-original Namespace 0x81a0b0 'std'
| `-NamespaceDecl 0x81a3a8 <line:276:3, col:69> col:20 __cxx11 inline
|   `-AbiTagAttr 0x81a418 <col:43, col:63> cxx11
|-NamespaceDecl 0x81a498 <line:278:1, line:281:1> line:278:11 __gnu_cxx
| `-NamespaceDecl 0x81a528 <line:280:3, col:69> col:20 __cxx11 inline
|   `-AbiTagAttr 0x81a598 <col:43, col:63> cxx11
|-LinkageSpecDecl 0x81a6b8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:67:1, line:433:1> line:67:8 C++
| `-NamespaceDecl 0x81a7a8 prev 0x81a2a0 <line:69:1, line:432:1> line:69:11 std
|   |-original Namespace 0x81a0b0 'std'
|   |-VisibilityAttr 0x81a818 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:70:49, col:67> Default
|   |-CXXRecordDecl 0x81a870 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:73:3, col:24> col:10 referenced struct __true_type definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | `-CXXRecordDecl 0x81a988 <col:3, col:10> col:10 implicit struct __true_type
|   |-CXXRecordDecl 0x81aa30 <line:74:3, col:25> col:10 referenced struct __false_type definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | `-CXXRecordDecl 0x81ab48 <col:3, col:10> col:10 implicit struct __false_type
|   |-ClassTemplateDecl 0x81ad10 <line:76:3, line:78:36> line:77:12 __truth_type
|   | |-NonTypeTemplateParmDecl 0x81ac00 <line:76:12> col:16 'bool' depth 0 index 0
|   | |-CXXRecordDecl 0x81ac80 <line:77:5, line:78:36> line:77:12 struct __truth_type definition
|   | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveConstructor exists simple trivial needs_implicit
|   | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveAssignment exists simple trivial needs_implicit
|   | | | `-Destructor simple irrelevant trivial needs_implicit
|   | | |-CXXRecordDecl 0x889db8 <col:5, col:12> col:12 implicit struct __truth_type
|   | | `-TypedefDecl 0x889e58 <line:78:7, col:28> col:28 __type 'std::__false_type'
|   | |   `-RecordType 0x81aac0 'std::__false_type'
|   | |     `-CXXRecord 0x81aa30 '__false_type'
|   | `-ClassTemplateSpecialization 0x889f10 '__truth_type'
|   |-ClassTemplateSpecializationDecl 0x889f10 <line:80:3, line:82:35> line:81:12 struct __truth_type definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument integral 1
|   | |-CXXRecordDecl 0x88a128 <col:5, col:12> col:12 implicit struct __truth_type
|   | `-TypedefDecl 0x88a1c8 <line:82:7, col:27> col:27 __type 'std::__true_type'
|   |   `-RecordType 0x81a900 'std::__true_type'
|   |     `-CXXRecord 0x81a870 '__true_type'
|   |-ClassTemplateDecl 0x88a450 <line:86:3, line:91:5> line:87:12 __traitor
|   | |-TemplateTypeParmDecl 0x88a238 <line:86:12, col:18> col:18 class depth 0 index 0 _Sp
|   | |-TemplateTypeParmDecl 0x88a2e8 <col:23, col:29> col:29 class depth 0 index 1 _Tp
|   | `-CXXRecordDecl 0x88a3c0 <line:87:5, line:91:5> line:87:12 struct __traitor definition
|   |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   |   | |-MoveConstructor exists simple trivial needs_implicit
|   |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   |   | |-MoveAssignment exists simple trivial needs_implicit
|   |   | `-Destructor simple irrelevant trivial needs_implicit
|   |   |-CXXRecordDecl 0x88a6e0 <col:5, col:12> col:12 implicit struct __traitor
|   |   |-EnumDecl 0x88a770 <line:89:7, col:65> col:7
|   |   | `-EnumConstantDecl 0x88a9d0 <col:14, col:63> col:14 referenced __value 'std::__traitor::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:89:7)'
|   |   |   `-BinaryOperator 0x88a9b0 <col:24, col:63> 'bool' '||'
|   |   |     |-CXXUnresolvedConstructExpr 0x88a8c8 <col:24, col:41> 'bool' 'bool'
|   |   |     | `-DependentScopeDeclRefExpr 0x88a890 <col:29, col:34> '<dependent type>' lvalue
|   |   |     `-CXXUnresolvedConstructExpr 0x88a988 <col:46, col:63> 'bool' 'bool'
|   |   |       `-DependentScopeDeclRefExpr 0x88a950 <col:51, col:56> '<dependent type>' lvalue
|   |   `-TypedefDecl 0x88abf0 <line:90:7, col:54> col:54 __type 'typename __truth_type<__value>::__type'
|   |     `-DependentNameType 0x88ab80 'typename __truth_type<__value>::__type' dependent
|   |-ClassTemplateDecl 0x88d640 <line:94:3, line:99:5> line:95:12 __are_same
|   | |-TemplateTypeParmDecl 0x88ac60 <line:94:12> col:20 typename depth 0 index 0
|   | |-TemplateTypeParmDecl 0x88acd8 <col:22> col:30 typename depth 0 index 1
|   | `-CXXRecordDecl 0x88d5b0 <line:95:5, line:99:5> line:95:12 struct __are_same definition
|   |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   |   | |-MoveConstructor exists simple trivial needs_implicit
|   |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   |   | |-MoveAssignment exists simple trivial needs_implicit
|   |   | `-Destructor simple irrelevant trivial needs_implicit
|   |   |-CXXRecordDecl 0x88d8d0 <col:5, col:12> col:12 implicit struct __are_same
|   |   |-EnumDecl 0x88d960 <line:97:7, col:26> col:7
|   |   | `-EnumConstantDecl 0x88da40 <col:14, col:24> col:14 __value 'std::__are_same::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:97:7)'
|   |   |   `-IntegerLiteral 0x88da20 <col:24> 'int' 0
|   |   `-TypedefDecl 0x88daa0 <line:98:7, col:28> col:28 __type 'std::__false_type'
|   |     `-RecordType 0x81aac0 'std::__false_type'
|   |       `-CXXRecord 0x81aa30 '__false_type'
|   |-ClassTemplatePartialSpecializationDecl 0x88dcf8 <line:101:3, line:106:5> line:102:12 struct __are_same definition
|   | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateTypeParmDecl 0x88db10 <line:101:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x88df78 <line:102:5, col:12> col:12 implicit struct __are_same
|   | |-EnumDecl 0x88e008 <line:104:7, col:26> col:7
|   | | `-EnumConstantDecl 0x88e0f0 <col:14, col:24> col:14 __value 'std::__are_same<type-parameter-0-0, type-parameter-0-0>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:104:7)'
|   | |   `-IntegerLiteral 0x88e0d0 <col:24> 'int' 1
|   | `-TypedefDecl 0x88e150 <line:105:7, col:27> col:27 __type 'std::__true_type'
|   |   `-RecordType 0x81a900 'std::__true_type'
|   |     `-CXXRecord 0x81a870 '__true_type'
|   |-ClassTemplateDecl 0x88e2e8 <line:109:3, line:114:5> line:110:12 __is_void
|   | |-TemplateTypeParmDecl 0x88e1c0 <line:109:12, col:21> col:21 typename depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x88e258 <line:110:5, line:114:5> line:110:12 struct __is_void definition
|   | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveConstructor exists simple trivial needs_implicit
|   | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveAssignment exists simple trivial needs_implicit
|   | | | `-Destructor simple irrelevant trivial needs_implicit
|   | | |-CXXRecordDecl 0x8902c0 <col:5, col:12> col:12 implicit struct __is_void
|   | | |-EnumDecl 0x890350 <line:112:7, col:26> col:7
|   | | | `-EnumConstantDecl 0x890430 <col:14, col:24> col:14 __value 'std::__is_void::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:112:7)'
|   | | |   `-IntegerLiteral 0x890410 <col:24> 'int' 0
|   | | `-TypedefDecl 0x890490 <line:113:7, col:28> col:28 __type 'std::__false_type'
|   | |   `-RecordType 0x81aac0 'std::__false_type'
|   | |     `-CXXRecord 0x81aa30 '__false_type'
|   | `-ClassTemplateSpecialization 0x890528 '__is_void'
|   |-ClassTemplateSpecializationDecl 0x890528 <line:116:3, line:121:5> line:117:12 struct __is_void definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'void'
|   | |-CXXRecordDecl 0x890748 <col:5, col:12> col:12 implicit struct __is_void
|   | |-EnumDecl 0x8907d8 <line:119:7, col:26> col:7
|   | | `-EnumConstantDecl 0x8908e0 <col:14, col:24> col:14 __value 'std::__is_void<void>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:119:7)'
|   | |   `-ImplicitCastExpr 0x890930 <col:24> 'unsigned int' <IntegralCast>
|   | |     `-ConstantExpr 0x8908c0 <col:24> 'int' Int: 1
|   | |       `-IntegerLiteral 0x8908a0 <col:24> 'int' 1
|   | `-TypedefDecl 0x890958 <line:120:7, col:27> col:27 __type 'std::__true_type'
|   |   `-RecordType 0x81a900 'std::__true_type'
|   |     `-CXXRecord 0x81a870 '__true_type'
|   |-ClassTemplateDecl 0x890af8 <line:126:3, line:131:5> line:127:12 __is_integer
|   | |-TemplateTypeParmDecl 0x8909c8 <line:126:12, col:21> col:21 typename depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x890a68 <line:127:5, line:131:5> line:127:12 struct __is_integer definition
|   | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveConstructor exists simple trivial needs_implicit
|   | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveAssignment exists simple trivial needs_implicit
|   | | | `-Destructor simple irrelevant trivial needs_implicit
|   | | |-CXXRecordDecl 0x890d50 <col:5, col:12> col:12 implicit struct __is_integer
|   | | |-EnumDecl 0x890de0 <line:129:7, col:26> col:7
|   | | | `-EnumConstantDecl 0x890ec0 <col:14, col:24> col:14 __value 'std::__is_integer::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:129:7)'
|   | | |   `-IntegerLiteral 0x890ea0 <col:24> 'int' 0
|   | | `-TypedefDecl 0x890f20 <line:130:7, col:28> col:28 __type 'std::__false_type'
|   | |   `-RecordType 0x81aac0 'std::__false_type'
|   | |     `-CXXRecord 0x81aa30 '__false_type'
|   | |-ClassTemplateSpecialization 0x890fb8 '__is_integer'
|   | |-ClassTemplateSpecialization 0x893310 '__is_integer'
|   | |-ClassTemplateSpecialization 0x8937d8 '__is_integer'
|   | |-ClassTemplateSpecialization 0x893ca8 '__is_integer'
|   | |-ClassTemplateSpecialization 0x8969d8 '__is_integer'
|   | |-ClassTemplateSpecialization 0x896ea0 '__is_integer'
|   | |-ClassTemplateSpecialization 0x897360 '__is_integer'
|   | |-ClassTemplateSpecialization 0x897828 '__is_integer'
|   | |-ClassTemplateSpecialization 0x899c58 '__is_integer'
|   | |-ClassTemplateSpecialization 0x89a128 '__is_integer'
|   | |-ClassTemplateSpecialization 0x89a5f8 '__is_integer'
|   | |-ClassTemplateSpecialization 0x89c708 '__is_integer'
|   | |-ClassTemplateSpecialization 0x89cbd8 '__is_integer'
|   | |-ClassTemplateSpecialization 0x89d0a8 '__is_integer'
|   | |-ClassTemplateSpecialization 0x89f118 '__is_integer'
|   | |-ClassTemplateSpecialization 0x89f5e8 '__is_integer'
|   | |-ClassTemplateSpecialization 0x89fab8 '__is_integer'
|   | |-ClassTemplateSpecializationDecl 0x8c2f48 <line:126:3, line:131:5> line:127:12 struct __is_integer definition
|   | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveConstructor exists simple trivial needs_implicit
|   | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveAssignment exists simple trivial needs_implicit
|   | | | `-Destructor simple irrelevant trivial needs_implicit
|   | | |-TemplateArgument type 'long double'
|   | | |-CXXRecordDecl 0x8c3158 prev 0x8c2f48 <col:5, col:12> col:12 implicit struct __is_integer
|   | | |-EnumDecl 0x8c31e8 <line:129:7> col:7
|   | | | `-EnumConstantDecl 0x8c32e0 <col:14, col:24> col:14 referenced __value 'std::__is_integer<long double>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:129:7)'
|   | | |   `-ImplicitCastExpr 0x8c3330 <col:24> 'unsigned int' <IntegralCast>
|   | | |     `-ConstantExpr 0x8c32c0 <col:24> 'int' Int: 0
|   | | |       `-IntegerLiteral 0x890ea0 <col:24> 'int' 0
|   | | `-TypedefDecl 0x8c3348 <line:130:7, col:28> col:28 __type 'std::__false_type'
|   | |   `-RecordType 0x81aac0 'std::__false_type'
|   | |     `-CXXRecord 0x81aa30 '__false_type'
|   | |-ClassTemplateSpecializationDecl 0x8c4468 <line:126:3, line:131:5> line:127:12 struct __is_integer definition
|   | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveConstructor exists simple trivial needs_implicit
|   | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveAssignment exists simple trivial needs_implicit
|   | | | `-Destructor simple irrelevant trivial needs_implicit
|   | | |-TemplateArgument type 'double'
|   | | |-CXXRecordDecl 0x8c4678 prev 0x8c4468 <col:5, col:12> col:12 implicit struct __is_integer
|   | | |-EnumDecl 0x8c4708 <line:129:7> col:7
|   | | | `-EnumConstantDecl 0x8c4800 <col:14, col:24> col:14 referenced __value 'std::__is_integer<double>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:129:7)'
|   | | |   `-ImplicitCastExpr 0x8c4850 <col:24> 'unsigned int' <IntegralCast>
|   | | |     `-ConstantExpr 0x8c47e0 <col:24> 'int' Int: 0
|   | | |       `-IntegerLiteral 0x890ea0 <col:24> 'int' 0
|   | | `-TypedefDecl 0x8c4868 <line:130:7, col:28> col:28 __type 'std::__false_type'
|   | |   `-RecordType 0x81aac0 'std::__false_type'
|   | |     `-CXXRecord 0x81aa30 '__false_type'
|   | `-ClassTemplateSpecializationDecl 0x8c4cf8 <line:126:3, line:131:5> line:127:12 struct __is_integer definition
|   |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   |   | |-MoveConstructor exists simple trivial needs_implicit
|   |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   |   | |-MoveAssignment exists simple trivial needs_implicit
|   |   | `-Destructor simple irrelevant trivial needs_implicit
|   |   |-TemplateArgument type 'float'
|   |   |-CXXRecordDecl 0x8c4f08 prev 0x8c4cf8 <col:5, col:12> col:12 implicit struct __is_integer
|   |   |-EnumDecl 0x8c4f98 <line:129:7> col:7
|   |   | `-EnumConstantDecl 0x8c55f0 <col:14, col:24> col:14 referenced __value 'std::__is_integer<float>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:129:7)'
|   |   |   `-ImplicitCastExpr 0x8c5640 <col:24> 'unsigned int' <IntegralCast>
|   |   |     `-ConstantExpr 0x8c5070 <col:24> 'int' Int: 0
|   |   |       `-IntegerLiteral 0x890ea0 <col:24> 'int' 0
|   |   `-TypedefDecl 0x8c5658 <line:130:7, col:28> col:28 __type 'std::__false_type'
|   |     `-RecordType 0x81aac0 'std::__false_type'
|   |       `-CXXRecord 0x81aa30 '__false_type'
|   |-ClassTemplateSpecializationDecl 0x890fb8 <line:137:3, line:142:5> line:138:12 struct __is_integer definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'bool'
|   | |-CXXRecordDecl 0x8911d8 <col:5, col:12> col:12 implicit struct __is_integer
|   | |-EnumDecl 0x893100 <line:140:7, col:26> col:7
|   | | `-EnumConstantDecl 0x893200 <col:14, col:24> col:14 __value 'std::__is_integer<bool>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:140:7)'
|   | |   `-ImplicitCastExpr 0x893250 <col:24> 'unsigned int' <IntegralCast>
|   | |     `-ConstantExpr 0x8931e0 <col:24> 'int' Int: 1
|   | |       `-IntegerLiteral 0x8931c0 <col:24> 'int' 1
|   | `-TypedefDecl 0x893278 <line:141:7, col:27> col:27 __type 'std::__true_type'
|   |   `-RecordType 0x81a900 'std::__true_type'
|   |     `-CXXRecord 0x81a870 '__true_type'
|   |-ClassTemplateSpecializationDecl 0x893310 <line:144:3, line:149:5> line:145:12 struct __is_integer definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'char'
|   | |-CXXRecordDecl 0x893528 <col:5, col:12> col:12 implicit struct __is_integer
|   | |-EnumDecl 0x8935b8 <line:147:7, col:26> col:7
|   | | `-EnumConstantDecl 0x8936c0 <col:14, col:24> col:14 __value 'std::__is_integer<char>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:147:7)'
|   | |   `-ImplicitCastExpr 0x893710 <col:24> 'unsigned int' <IntegralCast>
|   | |     `-ConstantExpr 0x8936a0 <col:24> 'int' Int: 1
|   | |       `-IntegerLiteral 0x893680 <col:24> 'int' 1
|   | `-TypedefDecl 0x893738 <line:148:7, col:27> col:27 __type 'std::__true_type'
|   |   `-RecordType 0x81a900 'std::__true_type'
|   |     `-CXXRecord 0x81a870 '__true_type'
|   |-ClassTemplateSpecializationDecl 0x8937d8 <line:151:3, line:156:5> line:152:12 struct __is_integer definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'signed char'
|   | |-CXXRecordDecl 0x8939f8 <col:5, col:12> col:12 implicit struct __is_integer
|   | |-EnumDecl 0x893a88 <line:154:7, col:26> col:7
|   | | `-EnumConstantDecl 0x893b90 <col:14, col:24> col:14 __value 'std::__is_integer<signed char>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:154:7)'
|   | |   `-ImplicitCastExpr 0x893be0 <col:24> 'unsigned int' <IntegralCast>
|   | |     `-ConstantExpr 0x893b70 <col:24> 'int' Int: 1
|   | |       `-IntegerLiteral 0x893b50 <col:24> 'int' 1
|   | `-TypedefDecl 0x893c08 <line:155:7, col:27> col:27 __type 'std::__true_type'
|   |   `-RecordType 0x81a900 'std::__true_type'
|   |     `-CXXRecord 0x81a870 '__true_type'
|   |-ClassTemplateSpecializationDecl 0x893ca8 <line:158:3, line:163:5> line:159:12 struct __is_integer definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'unsigned char'
|   | |-CXXRecordDecl 0x893ec8 <col:5, col:12> col:12 implicit struct __is_integer
|   | |-EnumDecl 0x893f58 <line:161:7, col:26> col:7
|   | | `-EnumConstantDecl 0x894060 <col:14, col:24> col:14 __value 'std::__is_integer<unsigned char>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:161:7)'
|   | |   `-ImplicitCastExpr 0x8940b0 <col:24> 'unsigned int' <IntegralCast>
|   | |     `-ConstantExpr 0x894040 <col:24> 'int' Int: 1
|   | |       `-IntegerLiteral 0x894020 <col:24> 'int' 1
|   | `-TypedefDecl 0x896940 <line:162:7, col:27> col:27 __type 'std::__true_type'
|   |   `-RecordType 0x81a900 'std::__true_type'
|   |     `-CXXRecord 0x81a870 '__true_type'
|   |-ClassTemplateSpecializationDecl 0x8969d8 <line:166:3, line:171:5> line:167:12 struct __is_integer definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'wchar_t'
|   | |-CXXRecordDecl 0x896bf8 <col:5, col:12> col:12 implicit struct __is_integer
|   | |-EnumDecl 0x896c88 <line:169:7, col:26> col:7
|   | | `-EnumConstantDecl 0x896d90 <col:14, col:24> col:14 __value 'std::__is_integer<wchar_t>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:169:7)'
|   | |   `-ImplicitCastExpr 0x896de0 <col:24> 'unsigned int' <IntegralCast>
|   | |     `-ConstantExpr 0x896d70 <col:24> 'int' Int: 1
|   | |       `-IntegerLiteral 0x896d50 <col:24> 'int' 1
|   | `-TypedefDecl 0x896e08 <line:170:7, col:27> col:27 __type 'std::__true_type'
|   |   `-RecordType 0x81a900 'std::__true_type'
|   |     `-CXXRecord 0x81a870 '__true_type'
|   |-ClassTemplateSpecializationDecl 0x896ea0 <line:184:3, line:189:5> line:185:12 struct __is_integer definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'char16_t'
|   | |-CXXRecordDecl 0x8970b8 <col:5, col:12> col:12 implicit struct __is_integer
|   | |-EnumDecl 0x897148 <line:187:7, col:26> col:7
|   | | `-EnumConstantDecl 0x897250 <col:14, col:24> col:14 __value 'std::__is_integer<char16_t>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:187:7)'
|   | |   `-ImplicitCastExpr 0x8972a0 <col:24> 'unsigned int' <IntegralCast>
|   | |     `-ConstantExpr 0x897230 <col:24> 'int' Int: 1
|   | |       `-IntegerLiteral 0x897210 <col:24> 'int' 1
|   | `-TypedefDecl 0x8972c8 <line:188:7, col:27> col:27 __type 'std::__true_type'
|   |   `-RecordType 0x81a900 'std::__true_type'
|   |     `-CXXRecord 0x81a870 '__true_type'
|   |-ClassTemplateSpecializationDecl 0x897360 <line:191:3, line:196:5> line:192:12 struct __is_integer definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'char32_t'
|   | |-CXXRecordDecl 0x897578 <col:5, col:12> col:12 implicit struct __is_integer
|   | |-EnumDecl 0x897608 <line:194:7, col:26> col:7
|   | | `-EnumConstantDecl 0x897710 <col:14, col:24> col:14 __value 'std::__is_integer<char32_t>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:194:7)'
|   | |   `-ImplicitCastExpr 0x897760 <col:24> 'unsigned int' <IntegralCast>
|   | |     `-ConstantExpr 0x8976f0 <col:24> 'int' Int: 1
|   | |       `-IntegerLiteral 0x8976d0 <col:24> 'int' 1
|   | `-TypedefDecl 0x897788 <line:195:7, col:27> col:27 __type 'std::__true_type'
|   |   `-RecordType 0x81a900 'std::__true_type'
|   |     `-CXXRecord 0x81a870 '__true_type'
|   |-ClassTemplateSpecializationDecl 0x897828 <line:199:3, line:204:5> line:200:12 struct __is_integer definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'short'
|   | |-CXXRecordDecl 0x8999a8 <col:5, col:12> col:12 implicit struct __is_integer
|   | |-EnumDecl 0x899a38 <line:202:7, col:26> col:7
|   | | `-EnumConstantDecl 0x899b40 <col:14, col:24> col:14 __value 'std::__is_integer<short>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:202:7)'
|   | |   `-ImplicitCastExpr 0x899b90 <col:24> 'unsigned int' <IntegralCast>
|   | |     `-ConstantExpr 0x899b20 <col:24> 'int' Int: 1
|   | |       `-IntegerLiteral 0x899b00 <col:24> 'int' 1
|   | `-TypedefDecl 0x899bb8 <line:203:7, col:27> col:27 __type 'std::__true_type'
|   |   `-RecordType 0x81a900 'std::__true_type'
|   |     `-CXXRecord 0x81a870 '__true_type'
|   |-ClassTemplateSpecializationDecl 0x899c58 <line:206:3, line:211:5> line:207:12 struct __is_integer definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'unsigned short'
|   | |-CXXRecordDecl 0x899e78 <col:5, col:12> col:12 implicit struct __is_integer
|   | |-EnumDecl 0x899f08 <line:209:7, col:26> col:7
|   | | `-EnumConstantDecl 0x89a010 <col:14, col:24> col:14 __value 'std::__is_integer<unsigned short>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:209:7)'
|   | |   `-ImplicitCastExpr 0x89a060 <col:24> 'unsigned int' <IntegralCast>
|   | |     `-ConstantExpr 0x899ff0 <col:24> 'int' Int: 1
|   | |       `-IntegerLiteral 0x899fd0 <col:24> 'int' 1
|   | `-TypedefDecl 0x89a088 <line:210:7, col:27> col:27 __type 'std::__true_type'
|   |   `-RecordType 0x81a900 'std::__true_type'
|   |     `-CXXRecord 0x81a870 '__true_type'
|   |-ClassTemplateSpecializationDecl 0x89a128 <line:213:3, line:218:5> line:214:12 struct __is_integer definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'int'
|   | |-CXXRecordDecl 0x89a348 <col:5, col:12> col:12 implicit struct __is_integer
|   | |-EnumDecl 0x89a3d8 <line:216:7, col:26> col:7
|   | | `-EnumConstantDecl 0x89a4e0 <col:14, col:24> col:14 __value 'std::__is_integer<int>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:216:7)'
|   | |   `-ImplicitCastExpr 0x89a530 <col:24> 'unsigned int' <IntegralCast>
|   | |     `-ConstantExpr 0x89a4c0 <col:24> 'int' Int: 1
|   | |       `-IntegerLiteral 0x89a4a0 <col:24> 'int' 1
|   | `-TypedefDecl 0x89a558 <line:217:7, col:27> col:27 __type 'std::__true_type'
|   |   `-RecordType 0x81a900 'std::__true_type'
|   |     `-CXXRecord 0x81a870 '__true_type'
|   |-ClassTemplateSpecializationDecl 0x89a5f8 <line:220:3, line:225:5> line:221:12 struct __is_integer definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'unsigned int'
|   | |-CXXRecordDecl 0x89c460 <col:5, col:12> col:12 implicit struct __is_integer
|   | |-EnumDecl 0x89c4f0 <line:223:7, col:26> col:7
|   | | `-EnumConstantDecl 0x89c5f0 <col:14, col:24> col:14 __value 'std::__is_integer<unsigned int>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:223:7)'
|   | |   `-ImplicitCastExpr 0x89c640 <col:24> 'unsigned int' <IntegralCast>
|   | |     `-ConstantExpr 0x89c5d0 <col:24> 'int' Int: 1
|   | |       `-IntegerLiteral 0x89c5b0 <col:24> 'int' 1
|   | `-TypedefDecl 0x89c668 <line:224:7, col:27> col:27 __type 'std::__true_type'
|   |   `-RecordType 0x81a900 'std::__true_type'
|   |     `-CXXRecord 0x81a870 '__true_type'
|   |-ClassTemplateSpecializationDecl 0x89c708 <line:227:3, line:232:5> line:228:12 struct __is_integer definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'long'
|   | |-CXXRecordDecl 0x89c928 <col:5, col:12> col:12 implicit struct __is_integer
|   | |-EnumDecl 0x89c9b8 <line:230:7, col:26> col:7
|   | | `-EnumConstantDecl 0x89cac0 <col:14, col:24> col:14 __value 'std::__is_integer<long>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:230:7)'
|   | |   `-ImplicitCastExpr 0x89cb10 <col:24> 'unsigned int' <IntegralCast>
|   | |     `-ConstantExpr 0x89caa0 <col:24> 'int' Int: 1
|   | |       `-IntegerLiteral 0x89ca80 <col:24> 'int' 1
|   | `-TypedefDecl 0x89cb38 <line:231:7, col:27> col:27 __type 'std::__true_type'
|   |   `-RecordType 0x81a900 'std::__true_type'
|   |     `-CXXRecord 0x81a870 '__true_type'
|   |-ClassTemplateSpecializationDecl 0x89cbd8 <line:234:3, line:239:5> line:235:12 struct __is_integer definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'unsigned long'
|   | |-CXXRecordDecl 0x89cdf8 <col:5, col:12> col:12 implicit struct __is_integer
|   | |-EnumDecl 0x89ce88 <line:237:7, col:26> col:7
|   | | `-EnumConstantDecl 0x89cf90 <col:14, col:24> col:14 __value 'std::__is_integer<unsigned long>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:237:7)'
|   | |   `-ImplicitCastExpr 0x89cfe0 <col:24> 'unsigned int' <IntegralCast>
|   | |     `-ConstantExpr 0x89cf70 <col:24> 'int' Int: 1
|   | |       `-IntegerLiteral 0x89cf50 <col:24> 'int' 1
|   | `-TypedefDecl 0x89d008 <line:238:7, col:27> col:27 __type 'std::__true_type'
|   |   `-RecordType 0x81a900 'std::__true_type'
|   |     `-CXXRecord 0x81a870 '__true_type'
|   |-ClassTemplateSpecializationDecl 0x89d0a8 <line:241:3, line:246:5> line:242:12 struct __is_integer definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'long long'
|   | |-CXXRecordDecl 0x89d2c8 <col:5, col:12> col:12 implicit struct __is_integer
|   | |-EnumDecl 0x89d358 <line:244:7, col:26> col:7
|   | | `-EnumConstantDecl 0x89f000 <col:14, col:24> col:14 __value 'std::__is_integer<long long>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:244:7)'
|   | |   `-ImplicitCastExpr 0x89f050 <col:24> 'unsigned int' <IntegralCast>
|   | |     `-ConstantExpr 0x89d440 <col:24> 'int' Int: 1
|   | |       `-IntegerLiteral 0x89d420 <col:24> 'int' 1
|   | `-TypedefDecl 0x89f078 <line:245:7, col:27> col:27 __type 'std::__true_type'
|   |   `-RecordType 0x81a900 'std::__true_type'
|   |     `-CXXRecord 0x81a870 '__true_type'
|   |-ClassTemplateSpecializationDecl 0x89f118 <line:248:3, line:253:5> line:249:12 struct __is_integer definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'unsigned long long'
|   | |-CXXRecordDecl 0x89f338 <col:5, col:12> col:12 implicit struct __is_integer
|   | |-EnumDecl 0x89f3c8 <line:251:7, col:26> col:7
|   | | `-EnumConstantDecl 0x89f4d0 <col:14, col:24> col:14 __value 'std::__is_integer<unsigned long long>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:251:7)'
|   | |   `-ImplicitCastExpr 0x89f520 <col:24> 'unsigned int' <IntegralCast>
|   | |     `-ConstantExpr 0x89f4b0 <col:24> 'int' Int: 1
|   | |       `-IntegerLiteral 0x89f490 <col:24> 'int' 1
|   | `-TypedefDecl 0x89f548 <line:252:7, col:27> col:27 __type 'std::__true_type'
|   |   `-RecordType 0x81a900 'std::__true_type'
|   |     `-CXXRecord 0x81a870 '__true_type'
|   |-ClassTemplateSpecializationDecl 0x89f5e8 <line:256:3, line:261:5> line:257:12 struct __is_integer definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type '__int128'
|   | |-CXXRecordDecl 0x89f808 <col:5, col:12> col:12 implicit struct __is_integer
|   | |-EnumDecl 0x89f898 <line:259:7, col:26> col:7
|   | | `-EnumConstantDecl 0x89f9a0 <col:14, col:24> col:14 __value 'std::__is_integer<__int128>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:270:1)'
|   | |   `-ImplicitCastExpr 0x89f9f0 <col:24> 'unsigned int' <IntegralCast>
|   | |     `-ConstantExpr 0x89f980 <col:24> 'int' Int: 1
|   | |       `-IntegerLiteral 0x89f960 <col:24> 'int' 1
|   | `-TypedefDecl 0x89fa18 <line:260:7, col:27> col:27 __type 'std::__true_type'
|   |   `-RecordType 0x81a900 'std::__true_type'
|   |     `-CXXRecord 0x81a870 '__true_type'
|   |-ClassTemplateSpecializationDecl 0x89fab8 <line:262:3, line:267:5> line:263:12 struct __is_integer definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'unsigned __int128'
|   | |-CXXRecordDecl 0x89fcd8 <col:5, col:12> col:12 implicit struct __is_integer
|   | |-EnumDecl 0x89fd68 <line:265:7, col:26> col:7
|   | | `-EnumConstantDecl 0x89fe70 <col:14, col:24> col:14 __value 'std::__is_integer<unsigned __int128>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:270:1)'
|   | |   `-ImplicitCastExpr 0x89fec0 <col:24> 'unsigned int' <IntegralCast>
|   | |     `-ConstantExpr 0x89fe50 <col:24> 'int' Int: 1
|   | |       `-IntegerLiteral 0x89fe30 <col:24> 'int' 1
|   | `-TypedefDecl 0x89fee8 <line:266:7, col:27> col:27 __type 'std::__true_type'
|   |   `-RecordType 0x81a900 'std::__true_type'
|   |     `-CXXRecord 0x81a870 '__true_type'
|   |-ClassTemplateDecl 0x8a3240 <line:287:3, line:292:5> line:288:12 __is_floating
|   | |-TemplateTypeParmDecl 0x89ff58 <line:287:12, col:21> col:21 typename depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x8a31b0 <line:288:5, line:292:5> line:288:12 struct __is_floating definition
|   | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveConstructor exists simple trivial needs_implicit
|   | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveAssignment exists simple trivial needs_implicit
|   | | | `-Destructor simple irrelevant trivial needs_implicit
|   | | |-CXXRecordDecl 0x8a3490 <col:5, col:12> col:12 implicit struct __is_floating
|   | | |-EnumDecl 0x8a3520 <line:290:7, col:26> col:7
|   | | | `-EnumConstantDecl 0x8a3600 <col:14, col:24> col:14 __value 'std::__is_floating::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:290:7)'
|   | | |   `-IntegerLiteral 0x8a35e0 <col:24> 'int' 0
|   | | `-TypedefDecl 0x8a3660 <line:291:7, col:28> col:28 __type 'std::__false_type'
|   | |   `-RecordType 0x81aac0 'std::__false_type'
|   | |     `-CXXRecord 0x81aa30 '__false_type'
|   | |-ClassTemplateSpecialization 0x8a3700 '__is_floating'
|   | |-ClassTemplateSpecialization 0x8a3bc8 '__is_floating'
|   | `-ClassTemplateSpecialization 0x8a4098 '__is_floating'
|   |-ClassTemplateSpecializationDecl 0x8a3700 <line:295:3, line:300:5> line:296:12 struct __is_floating definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'float'
|   | |-CXXRecordDecl 0x8a3918 <col:5, col:12> col:12 implicit struct __is_floating
|   | |-EnumDecl 0x8a39a8 <line:298:7, col:26> col:7
|   | | `-EnumConstantDecl 0x8a3ab0 <col:14, col:24> col:14 __value 'std::__is_floating<float>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:298:7)'
|   | |   `-ImplicitCastExpr 0x8a3b00 <col:24> 'unsigned int' <IntegralCast>
|   | |     `-ConstantExpr 0x8a3a90 <col:24> 'int' Int: 1
|   | |       `-IntegerLiteral 0x8a3a70 <col:24> 'int' 1
|   | `-TypedefDecl 0x8a3b28 <line:299:7, col:27> col:27 __type 'std::__true_type'
|   |   `-RecordType 0x81a900 'std::__true_type'
|   |     `-CXXRecord 0x81a870 '__true_type'
|   |-ClassTemplateSpecializationDecl 0x8a3bc8 <line:302:3, line:307:5> line:303:12 struct __is_floating definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'double'
|   | |-CXXRecordDecl 0x8a3de8 <col:5, col:12> col:12 implicit struct __is_floating
|   | |-EnumDecl 0x8a3e78 <line:305:7, col:26> col:7
|   | | `-EnumConstantDecl 0x8a3f80 <col:14, col:24> col:14 __value 'std::__is_floating<double>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:305:7)'
|   | |   `-ImplicitCastExpr 0x8a3fd0 <col:24> 'unsigned int' <IntegralCast>
|   | |     `-ConstantExpr 0x8a3f60 <col:24> 'int' Int: 1
|   | |       `-IntegerLiteral 0x8a3f40 <col:24> 'int' 1
|   | `-TypedefDecl 0x8a3ff8 <line:306:7, col:27> col:27 __type 'std::__true_type'
|   |   `-RecordType 0x81a900 'std::__true_type'
|   |     `-CXXRecord 0x81a870 '__true_type'
|   |-ClassTemplateSpecializationDecl 0x8a4098 <line:309:3, line:314:5> line:310:12 struct __is_floating definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'long double'
|   | |-CXXRecordDecl 0x8a6228 <col:5, col:12> col:12 implicit struct __is_floating
|   | |-EnumDecl 0x8a62b8 <line:312:7, col:26> col:7
|   | | `-EnumConstantDecl 0x8a63c0 <col:14, col:24> col:14 __value 'std::__is_floating<long double>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:312:7)'
|   | |   `-ImplicitCastExpr 0x8a6410 <col:24> 'unsigned int' <IntegralCast>
|   | |     `-ConstantExpr 0x8a63a0 <col:24> 'int' Int: 1
|   | |       `-IntegerLiteral 0x8a6380 <col:24> 'int' 1
|   | `-TypedefDecl 0x8a6438 <line:313:7, col:27> col:27 __type 'std::__true_type'
|   |   `-RecordType 0x81a900 'std::__true_type'
|   |     `-CXXRecord 0x81a870 '__true_type'
|   |-ClassTemplateDecl 0x8a65d8 <line:319:3, line:324:5> line:320:12 __is_pointer
|   | |-TemplateTypeParmDecl 0x8a64a8 <line:319:12, col:21> col:21 typename depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x8a6548 <line:320:5, line:324:5> line:320:12 struct __is_pointer definition
|   |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   |   | |-MoveConstructor exists simple trivial needs_implicit
|   |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   |   | |-MoveAssignment exists simple trivial needs_implicit
|   |   | `-Destructor simple irrelevant trivial needs_implicit
|   |   |-CXXRecordDecl 0x8a6830 <col:5, col:12> col:12 implicit struct __is_pointer
|   |   |-EnumDecl 0x8a68c0 <line:322:7, col:26> col:7
|   |   | `-EnumConstantDecl 0x8a69a0 <col:14, col:24> col:14 __value 'std::__is_pointer::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:322:7)'
|   |   |   `-IntegerLiteral 0x8a6980 <col:24> 'int' 0
|   |   `-TypedefDecl 0x8a6a00 <line:323:7, col:28> col:28 __type 'std::__false_type'
|   |     `-RecordType 0x81aac0 'std::__false_type'
|   |       `-CXXRecord 0x81aa30 '__false_type'
|   |-ClassTemplatePartialSpecializationDecl 0x8a6c40 <line:326:3, line:331:5> line:327:12 struct __is_pointer definition
|   | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'type-parameter-0-0 *'
|   | |-TemplateTypeParmDecl 0x8a6a70 <line:326:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x8a6e68 <line:327:5, col:12> col:12 implicit struct __is_pointer
|   | |-EnumDecl 0x8a6ef8 <line:329:7, col:26> col:7
|   | | `-EnumConstantDecl 0x8a6fe0 <col:14, col:24> col:14 __value 'std::__is_pointer<type-parameter-0-0 *>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:329:7)'
|   | |   `-IntegerLiteral 0x8a6fc0 <col:24> 'int' 1
|   | `-TypedefDecl 0x8a7040 <line:330:7, col:27> col:27 __type 'std::__true_type'
|   |   `-RecordType 0x81a900 'std::__true_type'
|   |     `-CXXRecord 0x81a870 '__true_type'
|   |-ClassTemplateDecl 0x8a9148 <line:336:3, line:339:7> line:337:12 __is_arithmetic
|   | |-TemplateTypeParmDecl 0x8a70b0 <line:336:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x8a90b8 <line:337:5, line:339:7> line:337:12 struct __is_arithmetic definition
|   |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   |   | |-MoveConstructor exists simple trivial needs_implicit
|   |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   |   | |-MoveAssignment exists simple trivial needs_implicit
|   |   | `-Destructor simple irrelevant trivial needs_implicit
|   |   |-public '__traitor<__is_integer<_Tp>, __is_floating<_Tp> >'
|   |   `-CXXRecordDecl 0x8a9630 <col:5, col:12> col:12 implicit struct __is_arithmetic
|   |-ClassTemplateDecl 0x8a9808 <line:344:3, line:347:7> line:345:12 __is_scalar
|   | |-TemplateTypeParmDecl 0x8a96d8 <line:344:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x8a9778 <line:345:5, line:347:7> line:345:12 struct __is_scalar definition
|   |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   |   | |-MoveConstructor exists simple trivial needs_implicit
|   |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   |   | |-MoveAssignment exists simple trivial needs_implicit
|   |   | `-Destructor simple irrelevant trivial needs_implicit
|   |   |-public '__traitor<__is_arithmetic<_Tp>, __is_pointer<_Tp> >'
|   |   `-CXXRecordDecl 0x8a9cf0 <col:5, col:12> col:12 implicit struct __is_scalar
|   |-ClassTemplateDecl 0x8a9ec8 <line:352:3, line:357:5> line:353:12 __is_char
|   | |-TemplateTypeParmDecl 0x8a9d98 <line:352:12, col:21> col:21 typename depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x8a9e38 <line:353:5, line:357:5> line:353:12 struct __is_char definition
|   | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveConstructor exists simple trivial needs_implicit
|   | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveAssignment exists simple trivial needs_implicit
|   | | | `-Destructor simple irrelevant trivial needs_implicit
|   | | |-CXXRecordDecl 0x8aaeb0 <col:5, col:12> col:12 implicit struct __is_char
|   | | |-EnumDecl 0x8aaf40 <line:355:7, col:26> col:7
|   | | | `-EnumConstantDecl 0x8ab020 <col:14, col:24> col:14 __value 'std::__is_char::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:355:7)'
|   | | |   `-IntegerLiteral 0x8ab000 <col:24> 'int' 0
|   | | `-TypedefDecl 0x8ab080 <line:356:7, col:28> col:28 __type 'std::__false_type'
|   | |   `-RecordType 0x81aac0 'std::__false_type'
|   | |     `-CXXRecord 0x81aa30 '__false_type'
|   | |-ClassTemplateSpecialization 0x8ab118 '__is_char'
|   | `-ClassTemplateSpecialization 0x8ab5e0 '__is_char'
|   |-ClassTemplateSpecializationDecl 0x8ab118 <line:359:3, line:364:5> line:360:12 struct __is_char definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'char'
|   | |-CXXRecordDecl 0x8ab338 <col:5, col:12> col:12 implicit struct __is_char
|   | |-EnumDecl 0x8ab3c8 <line:362:7, col:26> col:7
|   | | `-EnumConstantDecl 0x8ab4d0 <col:14, col:24> col:14 __value 'std::__is_char<char>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:362:7)'
|   | |   `-ImplicitCastExpr 0x8ab520 <col:24> 'unsigned int' <IntegralCast>
|   | |     `-ConstantExpr 0x8ab4b0 <col:24> 'int' Int: 1
|   | |       `-IntegerLiteral 0x8ab490 <col:24> 'int' 1
|   | `-TypedefDecl 0x8ab548 <line:363:7, col:27> col:27 __type 'std::__true_type'
|   |   `-RecordType 0x81a900 'std::__true_type'
|   |     `-CXXRecord 0x81a870 '__true_type'
|   |-ClassTemplateSpecializationDecl 0x8ab5e0 <line:367:3, line:372:5> line:368:12 struct __is_char definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'wchar_t'
|   | |-CXXRecordDecl 0x8ab7f8 <col:5, col:12> col:12 implicit struct __is_char
|   | |-EnumDecl 0x8ab888 <line:370:7, col:26> col:7
|   | | `-EnumConstantDecl 0x8ab990 <col:14, col:24> col:14 __value 'std::__is_char<wchar_t>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:370:7)'
|   | |   `-ImplicitCastExpr 0x8ab9e0 <col:24> 'unsigned int' <IntegralCast>
|   | |     `-ConstantExpr 0x8ab970 <col:24> 'int' Int: 1
|   | |       `-IntegerLiteral 0x8ab950 <col:24> 'int' 1
|   | `-TypedefDecl 0x8aba08 <line:371:7, col:27> col:27 __type 'std::__true_type'
|   |   `-RecordType 0x81a900 'std::__true_type'
|   |     `-CXXRecord 0x81a870 '__true_type'
|   |-ClassTemplateDecl 0x8abba8 <line:375:3, line:380:5> line:376:12 __is_byte
|   | |-TemplateTypeParmDecl 0x8aba78 <line:375:12, col:21> col:21 typename depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x8abb18 <line:376:5, line:380:5> line:376:12 struct __is_byte definition
|   | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveConstructor exists simple trivial needs_implicit
|   | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveAssignment exists simple trivial needs_implicit
|   | | | `-Destructor simple irrelevant trivial needs_implicit
|   | | |-CXXRecordDecl 0x8adda8 <col:5, col:12> col:12 implicit struct __is_byte
|   | | |-EnumDecl 0x8ade38 <line:378:7, col:26> col:7
|   | | | `-EnumConstantDecl 0x8adf20 <col:14, col:24> col:14 __value 'std::__is_byte::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:378:7)'
|   | | |   `-IntegerLiteral 0x8adf00 <col:24> 'int' 0
|   | | `-TypedefDecl 0x8adf80 <line:379:7, col:28> col:28 __type 'std::__false_type'
|   | |   `-RecordType 0x81aac0 'std::__false_type'
|   | |     `-CXXRecord 0x81aa30 '__false_type'
|   | |-ClassTemplateSpecialization 0x8ae018 '__is_byte'
|   | |-ClassTemplateSpecialization 0x8ae4e8 '__is_byte'
|   | `-ClassTemplateSpecialization 0x8ae9b8 '__is_byte'
|   |-ClassTemplateSpecializationDecl 0x8ae018 <line:382:3, line:387:5> line:383:12 struct __is_byte definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'char'
|   | |-CXXRecordDecl 0x8ae238 <col:5, col:12> col:12 implicit struct __is_byte
|   | |-EnumDecl 0x8ae2c8 <line:385:7, col:26> col:7
|   | | `-EnumConstantDecl 0x8ae3d0 <col:14, col:24> col:14 __value 'std::__is_byte<char>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:385:7)'
|   | |   `-ImplicitCastExpr 0x8ae420 <col:24> 'unsigned int' <IntegralCast>
|   | |     `-ConstantExpr 0x8ae3b0 <col:24> 'int' Int: 1
|   | |       `-IntegerLiteral 0x8ae390 <col:24> 'int' 1
|   | `-TypedefDecl 0x8ae448 <line:386:7, col:27> col:27 __type 'std::__true_type'
|   |   `-RecordType 0x81a900 'std::__true_type'
|   |     `-CXXRecord 0x81a870 '__true_type'
|   |-ClassTemplateSpecializationDecl 0x8ae4e8 <line:389:3, line:394:5> line:390:12 struct __is_byte definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'signed char'
|   | |-CXXRecordDecl 0x8ae708 <col:5, col:12> col:12 implicit struct __is_byte
|   | |-EnumDecl 0x8ae798 <line:392:7, col:26> col:7
|   | | `-EnumConstantDecl 0x8ae8a0 <col:14, col:24> col:14 __value 'std::__is_byte<signed char>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:392:7)'
|   | |   `-ImplicitCastExpr 0x8ae8f0 <col:24> 'unsigned int' <IntegralCast>
|   | |     `-ConstantExpr 0x8ae880 <col:24> 'int' Int: 1
|   | |       `-IntegerLiteral 0x8ae860 <col:24> 'int' 1
|   | `-TypedefDecl 0x8ae918 <line:393:7, col:27> col:27 __type 'std::__true_type'
|   |   `-RecordType 0x81a900 'std::__true_type'
|   |     `-CXXRecord 0x81a870 '__true_type'
|   |-ClassTemplateSpecializationDecl 0x8ae9b8 <line:396:3, line:401:5> line:397:12 struct __is_byte definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'unsigned char'
|   | |-CXXRecordDecl 0x8aebd8 <col:5, col:12> col:12 implicit struct __is_byte
|   | |-EnumDecl 0x8aec68 <line:399:7, col:26> col:7
|   | | `-EnumConstantDecl 0x8b08c0 <col:14, col:24> col:14 __value 'std::__is_byte<unsigned char>::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:399:7)'
|   | |   `-ImplicitCastExpr 0x8b0910 <col:24> 'unsigned int' <IntegralCast>
|   | |     `-ConstantExpr 0x8b08a0 <col:24> 'int' Int: 1
|   | |       `-IntegerLiteral 0x8b0880 <col:24> 'int' 1
|   | `-TypedefDecl 0x8b0938 <line:400:7, col:27> col:27 __type 'std::__true_type'
|   |   `-RecordType 0x81a900 'std::__true_type'
|   |     `-CXXRecord 0x81a870 '__true_type'
|   |-ClassTemplateDecl 0x8b0ad8 <line:417:3, line:422:5> line:418:12 __is_move_iterator
|   | |-TemplateTypeParmDecl 0x8b09a8 <line:417:12, col:21> col:21 typename depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x8b0a48 <line:418:5, line:422:5> line:418:12 struct __is_move_iterator definition
|   |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   |   | |-MoveConstructor exists simple trivial needs_implicit
|   |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   |   | |-MoveAssignment exists simple trivial needs_implicit
|   |   | `-Destructor simple irrelevant trivial needs_implicit
|   |   |-CXXRecordDecl 0x8b0d30 <col:5, col:12> col:12 implicit struct __is_move_iterator
|   |   |-EnumDecl 0x8b0dc0 <line:420:7, col:26> col:7
|   |   | `-EnumConstantDecl 0x8b0ea0 <col:14, col:24> col:14 __value 'std::__is_move_iterator::(anonymous enum at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/cpp_type_traits.h:420:7)'
|   |   |   `-IntegerLiteral 0x8b0e80 <col:24> 'int' 0
|   |   `-TypedefDecl 0x8b0f00 <line:421:7, col:28> col:28 __type 'std::__false_type'
|   |     `-RecordType 0x81aac0 'std::__false_type'
|   |       `-CXXRecord 0x81aa30 '__false_type'
|   `-FunctionTemplateDecl 0x8b11a8 <line:426:3, line:429:20> line:428:5 __miter_base
|     |-TemplateTypeParmDecl 0x8b0f70 <line:426:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
|     `-FunctionDecl 0x8b1108 <line:427:5, line:429:20> line:428:5 __miter_base '_Iterator (_Iterator)' inline
|       |-ParmVarDecl 0x8b1018 <col:18, col:28> col:28 referenced __it '_Iterator'
|       `-CompoundStmt 0x8b1238 <line:429:5, col:20>
|         `-ReturnStmt 0x8b1228 <col:7, col:14>
|           `-DeclRefExpr 0x8b1208 <col:14> '_Iterator' lvalue ParmVar 0x8b1018 '__it' '_Iterator'
|-LinkageSpecDecl 0x8b1270 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/type_traits.h:37:1, line:219:1> line:37:8 C++
| `-NamespaceDecl 0x8b12e0 prev 0x81a498 <line:39:1, line:218:1> line:39:11 __gnu_cxx
|   |-original Namespace 0x81a498 '__gnu_cxx'
|   |-VisibilityAttr 0x8b1350 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:70:49, col:67> Default
|   |-ClassTemplateDecl 0x8b1550 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/type_traits.h:44:3, line:46:7> line:45:12 __enable_if
|   | |-NonTypeTemplateParmDecl 0x8b13b8 <line:44:12> col:16 'bool' depth 0 index 0
|   | |-TemplateTypeParmDecl 0x8b1418 <col:18> col:26 typename depth 0 index 1
|   | `-CXXRecordDecl 0x8b14c0 <line:45:5, line:46:7> line:45:12 struct __enable_if definition
|   |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   |   | |-MoveConstructor exists simple trivial needs_implicit
|   |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   |   | |-MoveAssignment exists simple trivial needs_implicit
|   |   | `-Destructor simple irrelevant trivial needs_implicit
|   |   `-CXXRecordDecl 0x8b8b30 <col:5, col:12> col:12 implicit struct __enable_if
|   |-ClassTemplatePartialSpecializationDecl 0x8b8de8 <line:48:3, line:50:27> line:49:12 struct __enable_if definition
|   | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument integral 1
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateTypeParmDecl 0x8b8bd8 <line:48:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x8b9088 <line:49:5, col:12> col:12 implicit struct __enable_if
|   | `-TypedefDecl 0x8b9128 <line:50:7, col:19> col:19 __type '_Tp'
|   |   `-TemplateTypeParmType 0x8b8c30 '_Tp' dependent depth 0 index 0
|   |     `-TemplateTypeParm 0x8b8bd8 '_Tp'
|   |-ClassTemplateDecl 0x8b93f8 <line:54:3, line:56:31> line:55:12 __conditional_type
|   | |-NonTypeTemplateParmDecl 0x8b91a8 <line:54:12, col:17> col:17 'bool' depth 0 index 0 _Cond
|   | |-TemplateTypeParmDecl 0x8b9208 <col:24, col:33> col:33 referenced typename depth 0 index 1 _Iftrue
|   | |-TemplateTypeParmDecl 0x8b9288 <col:42, col:51> col:51 typename depth 0 index 2 _Iffalse
|   | `-CXXRecordDecl 0x8b9368 <line:55:5, line:56:31> line:55:12 struct __conditional_type definition
|   |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   |   | |-MoveConstructor exists simple trivial needs_implicit
|   |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   |   | |-MoveAssignment exists simple trivial needs_implicit
|   |   | `-Destructor simple irrelevant trivial needs_implicit
|   |   |-CXXRecordDecl 0x8b96d0 <col:5, col:12> col:12 implicit struct __conditional_type
|   |   `-TypedefDecl 0x8b9770 <line:56:7, col:23> col:23 __type '_Iftrue'
|   |     `-TemplateTypeParmType 0x8b9260 '_Iftrue' dependent depth 0 index 1
|   |       `-TemplateTypeParm 0x8b9208 '_Iftrue'
|   |-ClassTemplatePartialSpecializationDecl 0x8baf50 <line:58:3, line:60:32> line:59:12 struct __conditional_type definition
|   | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument integral 0
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument type 'type-parameter-0-1'
|   | |-TemplateTypeParmDecl 0x8b97e0 <line:58:12, col:21> col:21 referenced typename depth 0 index 0 _Iftrue
|   | |-TemplateTypeParmDecl 0x8b9858 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Iffalse
|   | |-CXXRecordDecl 0x8bb248 <line:59:5, col:12> col:12 implicit struct __conditional_type
|   | `-TypedefDecl 0x8bb2e8 <line:60:7, col:24> col:24 __type '_Iffalse'
|   |   `-TemplateTypeParmType 0x8b98b0 '_Iffalse' dependent depth 0 index 1
|   |     `-TemplateTypeParm 0x8b9858 '_Iffalse'
|   |-ClassTemplateDecl 0x8bb488 <line:64:3, line:72:5> line:65:12 __add_unsigned
|   | |-TemplateTypeParmDecl 0x8bb358 <line:64:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x8bb3f8 <line:65:5, line:72:5> line:65:12 struct __add_unsigned definition
|   | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveConstructor exists simple trivial needs_implicit
|   | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveAssignment exists simple trivial needs_implicit
|   | | | `-Destructor simple irrelevant trivial needs_implicit
|   | | |-CXXRecordDecl 0x8bb6e0 <col:5, col:12> col:12 implicit struct __add_unsigned
|   | | |-AccessSpecDecl 0x8bb770 <line:67:5, col:12> col:5 private
|   | | |-TypedefDecl 0x8bba88 <line:68:7, col:65> col:65 referenced __if_type '__enable_if<std::__is_integer<_Tp>::__value, _Tp>'
|   | | | `-TemplateSpecializationType 0x8bb9a0 '__enable_if<std::__is_integer<_Tp>::__value, _Tp>' dependent __enable_if
|   | | |   |-TemplateArgument expr
|   | | |   | `-ImplicitCastExpr 0x8bb908 <col:27, col:51> 'bool' <Dependent>
|   | | |   |   `-DependentScopeDeclRefExpr 0x8bb8c0 <col:27, col:51> '<dependent type>' lvalue
|   | | |   `-TemplateArgument type '_Tp'
|   | | |-AccessSpecDecl 0x8bbae0 <line:70:5, col:11> col:5 public
|   | | `-TypedefDecl 0x8bbc20 <line:71:7, col:42> col:42 __type 'typename __if_type::__type'
|   | |   `-DependentNameType 0x8bbbb0 'typename __if_type::__type' dependent
|   | |-ClassTemplateSpecialization 0x8bbcb8 '__add_unsigned'
|   | |-ClassTemplateSpecialization 0x8bc6c8 '__add_unsigned'
|   | |-ClassTemplateSpecialization 0x8bca30 '__add_unsigned'
|   | |-ClassTemplateSpecialization 0x8bcd90 '__add_unsigned'
|   | |-ClassTemplateSpecialization 0x8bd0f0 '__add_unsigned'
|   | |-ClassTemplateSpecialization 0x8bd450 '__add_unsigned'
|   | |-ClassTemplateSpecialization 0x8bd998 '__add_unsigned'
|   | `-ClassTemplateSpecialization 0x8bdb78 '__add_unsigned'
|   |-ClassTemplateSpecializationDecl 0x8bbcb8 <line:74:3, line:76:37> line:75:12 struct __add_unsigned definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'char'
|   | |-CXXRecordDecl 0x8bc580 <col:5, col:12> col:12 implicit struct __add_unsigned
|   | `-TypedefDecl 0x8bc628 <line:76:7, col:29> col:29 __type 'unsigned char'
|   |   `-BuiltinType 0x7db3e0 'unsigned char'
|   |-ClassTemplateSpecializationDecl 0x8bc6c8 <line:78:3, line:80:37> line:79:12 struct __add_unsigned definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'signed char'
|   | |-CXXRecordDecl 0x8bc8e8 <col:5, col:12> col:12 implicit struct __add_unsigned
|   | `-TypedefDecl 0x8bc990 <line:80:7, col:29> col:29 __type 'unsigned char'
|   |   `-BuiltinType 0x7db3e0 'unsigned char'
|   |-ClassTemplateSpecializationDecl 0x8bca30 <line:82:3, line:84:38> line:83:12 struct __add_unsigned definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'short'
|   | |-CXXRecordDecl 0x8bcc48 <col:5, col:12> col:12 implicit struct __add_unsigned
|   | `-TypedefDecl 0x8bccf0 <line:84:7, col:30> col:30 __type 'unsigned short'
|   |   `-BuiltinType 0x7db400 'unsigned short'
|   |-ClassTemplateSpecializationDecl 0x8bcd90 <line:86:3, line:88:36> line:87:12 struct __add_unsigned definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'int'
|   | |-CXXRecordDecl 0x8bcfa8 <col:5, col:12> col:12 implicit struct __add_unsigned
|   | `-TypedefDecl 0x8bd050 <line:88:7, col:28> col:28 __type 'unsigned int'
|   |   `-BuiltinType 0x7db420 'unsigned int'
|   |-ClassTemplateSpecializationDecl 0x8bd0f0 <line:90:3, line:92:37> line:91:12 struct __add_unsigned definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'long'
|   | |-CXXRecordDecl 0x8bd308 <col:5, col:12> col:12 implicit struct __add_unsigned
|   | `-TypedefDecl 0x8bd3b0 <line:92:7, col:29> col:29 __type 'unsigned long'
|   |   `-BuiltinType 0x7db440 'unsigned long'
|   |-ClassTemplateSpecializationDecl 0x8bd450 <line:94:3, line:96:42> line:95:12 struct __add_unsigned definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'long long'
|   | |-CXXRecordDecl 0x8bd858 <col:5, col:12> col:12 implicit struct __add_unsigned
|   | `-TypedefDecl 0x8bd900 <line:96:7, col:34> col:34 __type 'unsigned long long'
|   |   `-BuiltinType 0x7db460 'unsigned long long'
|   |-ClassTemplateSpecializationDecl 0x8bd998 <line:99:3, line:100:31> col:12 struct __add_unsigned
|   | `-TemplateArgument type 'bool'
|   |-ClassTemplateSpecializationDecl 0x8bdb78 <line:102:3, line:103:34> col:12 struct __add_unsigned
|   | `-TemplateArgument type 'wchar_t'
|   |-ClassTemplateDecl 0x8bde58 <line:107:3, line:115:5> line:108:12 __remove_unsigned
|   | |-TemplateTypeParmDecl 0x8bdd30 <line:107:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | |-CXXRecordDecl 0x8bddc8 <line:108:5, line:115:5> line:108:12 struct __remove_unsigned definition
|   | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveConstructor exists simple trivial needs_implicit
|   | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveAssignment exists simple trivial needs_implicit
|   | | | `-Destructor simple irrelevant trivial needs_implicit
|   | | |-CXXRecordDecl 0x8be0b0 <col:5, col:12> col:12 implicit struct __remove_unsigned
|   | | |-AccessSpecDecl 0x8be140 <line:110:5, col:12> col:5 private
|   | | |-TypedefDecl 0x8be3a8 <line:111:7, col:65> col:65 referenced __if_type '__enable_if<std::__is_integer<_Tp>::__value, _Tp>'
|   | | | `-TemplateSpecializationType 0x8be2c0 '__enable_if<std::__is_integer<_Tp>::__value, _Tp>' dependent __enable_if
|   | | |   |-TemplateArgument expr
|   | | |   | `-ImplicitCastExpr 0x8be2a8 <col:27, col:51> 'bool' <Dependent>
|   | | |   |   `-DependentScopeDeclRefExpr 0x8be260 <col:27, col:51> '<dependent type>' lvalue
|   | | |   `-TemplateArgument type '_Tp'
|   | | |-AccessSpecDecl 0x8be400 <line:113:5, col:11> col:5 public
|   | | `-TypedefDecl 0x8be4f0 <line:114:7, col:42> col:42 __type 'typename __if_type::__type'
|   | |   `-DependentNameType 0x8be480 'typename __if_type::__type' dependent
|   | |-ClassTemplateSpecialization 0x8be588 '__remove_unsigned'
|   | |-ClassTemplateSpecialization 0x8c0370 '__remove_unsigned'
|   | |-ClassTemplateSpecialization 0x8c06d0 '__remove_unsigned'
|   | |-ClassTemplateSpecialization 0x8c0a30 '__remove_unsigned'
|   | |-ClassTemplateSpecialization 0x8c0d90 '__remove_unsigned'
|   | |-ClassTemplateSpecialization 0x8c10f0 '__remove_unsigned'
|   | |-ClassTemplateSpecialization 0x8c1658 '__remove_unsigned'
|   | `-ClassTemplateSpecialization 0x8c1838 '__remove_unsigned'
|   |-ClassTemplateSpecializationDecl 0x8be588 <line:117:3, line:119:35> line:118:12 struct __remove_unsigned definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'char'
|   | |-CXXRecordDecl 0x8c0228 <col:5, col:12> col:12 implicit struct __remove_unsigned
|   | `-TypedefDecl 0x8c02d0 <line:119:7, col:27> col:27 __type 'signed char'
|   |   `-BuiltinType 0x7db340 'signed char'
|   |-ClassTemplateSpecializationDecl 0x8c0370 <line:121:3, line:123:35> line:122:12 struct __remove_unsigned definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'unsigned char'
|   | |-CXXRecordDecl 0x8c0588 <col:5, col:12> col:12 implicit struct __remove_unsigned
|   | `-TypedefDecl 0x8c0630 <line:123:7, col:27> col:27 __type 'signed char'
|   |   `-BuiltinType 0x7db340 'signed char'
|   |-ClassTemplateSpecializationDecl 0x8c06d0 <line:125:3, line:127:29> line:126:12 struct __remove_unsigned definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'unsigned short'
|   | |-CXXRecordDecl 0x8c08e8 <col:5, col:12> col:12 implicit struct __remove_unsigned
|   | `-TypedefDecl 0x8c0990 <line:127:7, col:21> col:21 __type 'short'
|   |   `-BuiltinType 0x7db360 'short'
|   |-ClassTemplateSpecializationDecl 0x8c0a30 <line:129:3, line:131:27> line:130:12 struct __remove_unsigned definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'unsigned int'
|   | |-CXXRecordDecl 0x8c0c48 <col:5, col:12> col:12 implicit struct __remove_unsigned
|   | `-TypedefDecl 0x8c0cf0 <line:131:7, col:19> col:19 __type 'int'
|   |   `-BuiltinType 0x7db380 'int'
|   |-ClassTemplateSpecializationDecl 0x8c0d90 <line:133:3, line:135:28> line:134:12 struct __remove_unsigned definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'unsigned long'
|   | |-CXXRecordDecl 0x8c0fa8 <col:5, col:12> col:12 implicit struct __remove_unsigned
|   | `-TypedefDecl 0x8c1050 <line:135:7, col:20> col:20 __type 'long'
|   |   `-BuiltinType 0x7db3a0 'long'
|   |-ClassTemplateSpecializationDecl 0x8c10f0 <line:137:3, line:139:33> line:138:12 struct __remove_unsigned definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'unsigned long long'
|   | |-CXXRecordDecl 0x8c1518 <col:5, col:12> col:12 implicit struct __remove_unsigned
|   | `-TypedefDecl 0x8c15c0 <line:139:7, col:25> col:25 __type 'long long'
|   |   `-BuiltinType 0x7db3c0 'long long'
|   |-ClassTemplateSpecializationDecl 0x8c1658 <line:142:3, line:143:34> col:12 struct __remove_unsigned
|   | `-TemplateArgument type 'bool'
|   |-ClassTemplateSpecializationDecl 0x8c1838 <line:145:3, line:146:37> col:12 struct __remove_unsigned
|   | `-TemplateArgument type 'wchar_t'
|   |-FunctionTemplateDecl 0x8c1c58 <line:150:3, line:153:26> line:152:5 __is_null_pointer
|   | |-TemplateTypeParmDecl 0x8c19f0 <line:150:12, col:21> col:21 referenced typename depth 0 index 0 _Type
|   | `-FunctionDecl 0x8c1bb8 <line:151:5, line:153:26> line:152:5 __is_null_pointer 'bool (_Type *)' inline
|   |   |-ParmVarDecl 0x8c1ac8 <col:23, col:30> col:30 referenced __ptr '_Type *'
|   |   `-CompoundStmt 0x8c1d28 <line:153:5, col:26>
|   |     `-ReturnStmt 0x8c1d18 <col:7, col:23>
|   |       `-BinaryOperator 0x8c1cf8 <col:14, col:23> '<dependent type>' '=='
|   |         |-DeclRefExpr 0x8c1cb8 <col:14> '_Type *' lvalue ParmVar 0x8c1ac8 '__ptr' '_Type *'
|   |         `-IntegerLiteral 0x8c1cd8 <col:23> 'int' 0
|   |-FunctionTemplateDecl 0x8c1f78 <line:155:3, line:158:21> line:157:5 __is_null_pointer
|   | |-TemplateTypeParmDecl 0x8c1d40 <line:155:12, col:21> col:21 referenced typename depth 0 index 0 _Type
|   | `-FunctionDecl 0x8c1ed8 <line:156:5, line:158:21> line:157:5 __is_null_pointer 'bool (_Type)' inline
|   |   |-ParmVarDecl 0x8c1de8 <col:23> col:28 '_Type'
|   |   `-CompoundStmt 0x8c1ff8 <line:158:5, col:21>
|   |     `-ReturnStmt 0x8c1fe8 <col:7, col:14>
|   |       `-CXXBoolLiteralExpr 0x8c1fd8 <col:14> 'bool' false
|   |-FunctionDecl 0x8c2198 <line:161:3, line:163:18> line:162:3 __is_null_pointer 'bool (std::nullptr_t)' inline
|   | |-ParmVarDecl 0x8c20a8 <col:21, col:26> col:35 'std::nullptr_t':'nullptr_t'
|   | `-CompoundStmt 0x8c2260 <line:163:3, col:18>
|   |   `-ReturnStmt 0x8c2250 <col:5, col:12>
|   |     `-CXXBoolLiteralExpr 0x8c2240 <col:12> 'bool' true
|   |-ClassTemplateDecl 0x8c25b8 <line:167:3, line:169:30> line:168:12 __promote
|   | |-TemplateTypeParmDecl 0x8c2278 <line:167:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | |-NonTypeTemplateParmDecl 0x8c2488 <col:26, col:57> col:31 'bool' depth 0 index 1
|   | | `-TemplateArgument expr
|   | |   `-ImplicitCastExpr 0x8c24e8 <col:33, col:57> 'bool' <Dependent>
|   | |     `-DependentScopeDeclRefExpr 0x8c2440 <col:33, col:57> '<dependent type>' lvalue
|   | |-CXXRecordDecl 0x8c2528 <line:168:5, line:169:30> line:168:12 struct __promote definition
|   | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveConstructor exists simple trivial needs_implicit
|   | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | | |-MoveAssignment exists simple trivial needs_implicit
|   | | | `-Destructor simple irrelevant trivial needs_implicit
|   | | |-CXXRecordDecl 0x8c2870 <col:5, col:12> col:12 implicit struct __promote
|   | | `-TypedefDecl 0x8c2918 <line:169:7, col:22> col:22 __type 'double'
|   | |   `-BuiltinType 0x7db4a0 'double'
|   | |-ClassTemplateSpecialization 0x8c40b0 '__promote'
|   | |-ClassTemplateSpecialization 0x8c4940 '__promote'
|   | `-ClassTemplateSpecialization 0x8c5730 '__promote'
|   |-ClassTemplatePartialSpecializationDecl 0x8c2b98 <line:174:3, line:176:7> line:175:12 struct __promote definition
|   | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'type-parameter-0-0'
|   | |-TemplateArgument integral 0
|   | |-TemplateTypeParmDecl 0x8c2988 <line:174:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | `-CXXRecordDecl 0x8c2e38 <line:175:5, col:12> col:12 implicit struct __promote
|   |-ClassTemplateSpecializationDecl 0x8c40b0 <line:178:3, line:180:35> line:179:12 struct __promote definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'long double'
|   | |-TemplateArgument integral 0
|   | |-CXXRecordDecl 0x8c42e8 <col:5, col:12> col:12 implicit struct __promote
|   | `-TypedefDecl 0x8c4390 <line:180:7, col:27> col:27 __type 'long double'
|   |   `-BuiltinType 0x7db4c0 'long double'
|   |-ClassTemplateSpecializationDecl 0x8c4940 <line:182:3, line:184:30> line:183:12 struct __promote definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'double'
|   | |-TemplateArgument integral 0
|   | |-CXXRecordDecl 0x8c4b78 <col:5, col:12> col:12 implicit struct __promote
|   | `-TypedefDecl 0x8c4c20 <line:184:7, col:22> col:22 __type 'double'
|   |   `-BuiltinType 0x7db4a0 'double'
|   |-ClassTemplateSpecializationDecl 0x8c5730 <line:186:3, line:188:29> line:187:12 struct __promote definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'float'
|   | |-TemplateArgument integral 0
|   | |-CXXRecordDecl 0x8c5968 <col:5, col:12> col:12 implicit struct __promote
|   | `-TypedefDecl 0x8c5a10 <line:188:7, col:21> col:21 __type 'float'
|   |   `-BuiltinType 0x7db480 'float'
|   |-ClassTemplateDecl 0x8c63b0 <line:190:3, line:196:5> line:193:12 __promote_2
|   | |-TemplateTypeParmDecl 0x8c5a80 <line:190:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl 0x8c5af8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
|   | |-TemplateTypeParmDecl 0x8c5e70 <line:191:12, col:53> col:21 referenced typename depth 0 index 2 _Tp2
|   | | `-TemplateArgument type 'typename __promote<_Tp>::__type'
|   | |-TemplateTypeParmDecl 0x8c6240 <line:192:12, col:53> col:21 referenced typename depth 0 index 3 _Up2
|   | | `-TemplateArgument type 'typename __promote<_Up>::__type'
|   | `-CXXRecordDecl 0x8c6320 <line:193:5, line:196:5> line:193:12 struct __promote_2 definition
|   |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   |   | |-MoveConstructor exists simple trivial needs_implicit
|   |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   |   | |-MoveAssignment exists simple trivial needs_implicit
|   |   | `-Destructor simple irrelevant trivial needs_implicit
|   |   |-CXXRecordDecl 0x8c7010 <col:5, col:12> col:12 implicit struct __promote_2
|   |   `-TypedefDecl 0x8c7188 <line:195:7, col:43> col:43 __type 'typeof (_Tp2() + _Up2())'
|   |     `-TypeOfExprType 0x8c7140 'typeof (_Tp2() + _Up2())' dependent
|   |       `-ParenExpr 0x8c7120 <col:25, col:41> '<dependent type>'
|   |         `-BinaryOperator 0x8c7100 <col:26, col:40> '<dependent type>' '+'
|   |           |-CXXUnresolvedConstructExpr 0x8c70b0 <col:26, col:31> '_Tp2' '_Tp2'
|   |           `-CXXUnresolvedConstructExpr 0x8c70e0 <col:35, col:40> '_Up2' '_Up2'
|   |-ClassTemplateDecl 0x8c7da0 <line:198:3, line:205:5> line:202:12 __promote_3
|   | |-TemplateTypeParmDecl 0x8c71f8 <line:198:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl 0x8c7278 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
|   | |-TemplateTypeParmDecl 0x8c72f8 <col:40, col:49> col:49 referenced typename depth 0 index 2 _Vp
|   | |-TemplateTypeParmDecl 0x8c7590 <line:199:12, col:53> col:21 referenced typename depth 0 index 3 _Tp2
|   | | `-TemplateArgument type 'typename __promote<_Tp>::__type'
|   | |-TemplateTypeParmDecl 0x8c7820 <line:200:12, col:53> col:21 referenced typename depth 0 index 4 _Up2
|   | | `-TemplateArgument type 'typename __promote<_Up>::__type'
|   | |-TemplateTypeParmDecl 0x8c7c20 <line:201:12, col:53> col:21 referenced typename depth 0 index 5 _Vp2
|   | | `-TemplateArgument type 'typename __promote<_Vp>::__type'
|   | `-CXXRecordDecl 0x8c7d10 <line:202:5, line:205:5> line:202:12 struct __promote_3 definition
|   |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   |   | |-MoveConstructor exists simple trivial needs_implicit
|   |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   |   | |-MoveAssignment exists simple trivial needs_implicit
|   |   | `-Destructor simple irrelevant trivial needs_implicit
|   |   |-CXXRecordDecl 0x8c85e0 <col:5, col:12> col:12 implicit struct __promote_3
|   |   `-TypedefDecl 0x8c87a8 <line:204:7, col:52> col:52 __type 'typeof (_Tp2() + _Up2() + _Vp2())'
|   |     `-TypeOfExprType 0x8c8760 'typeof (_Tp2() + _Up2() + _Vp2())' dependent
|   |       `-ParenExpr 0x8c8740 <col:25, col:50> '<dependent type>'
|   |         `-BinaryOperator 0x8c8720 <col:26, col:49> '<dependent type>' '+'
|   |           |-BinaryOperator 0x8c86d0 <col:26, col:40> '<dependent type>' '+'
|   |           | |-CXXUnresolvedConstructExpr 0x8c8680 <col:26, col:31> '_Tp2' '_Tp2'
|   |           | `-CXXUnresolvedConstructExpr 0x8c86b0 <col:35, col:40> '_Up2' '_Up2'
|   |           `-CXXUnresolvedConstructExpr 0x8c8700 <col:44, col:49> '_Vp2' '_Vp2'
|   `-ClassTemplateDecl 0x8c97f0 <line:207:3, line:215:5> line:212:12 __promote_4
|     |-TemplateTypeParmDecl 0x8c8818 <line:207:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|     |-TemplateTypeParmDecl 0x8c8898 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
|     |-TemplateTypeParmDecl 0x8c8918 <col:40, col:49> col:49 referenced typename depth 0 index 2 _Vp
|     |-TemplateTypeParmDecl 0x8c8998 <col:54, col:63> col:63 referenced typename depth 0 index 3 _Wp
|     |-TemplateTypeParmDecl 0x8c8c30 <line:208:12, col:53> col:21 referenced typename depth 0 index 4 _Tp2
|     | `-TemplateArgument type 'typename __promote<_Tp>::__type'
|     |-TemplateTypeParmDecl 0x8c8ec0 <line:209:12, col:53> col:21 referenced typename depth 0 index 5 _Up2
|     | `-TemplateArgument type 'typename __promote<_Up>::__type'
|     |-TemplateTypeParmDecl 0x8c9150 <line:210:12, col:53> col:21 referenced typename depth 0 index 6 _Vp2
|     | `-TemplateArgument type 'typename __promote<_Vp>::__type'
|     |-TemplateTypeParmDecl 0x8c9660 <line:211:12, col:53> col:21 referenced typename depth 0 index 7 _Wp2
|     | `-TemplateArgument type 'typename __promote<_Wp>::__type'
|     `-CXXRecordDecl 0x8c9760 <line:212:5, line:215:5> line:212:12 struct __promote_4 definition
|       |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|       | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|       | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|       | |-MoveConstructor exists simple trivial needs_implicit
|       | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|       | |-MoveAssignment exists simple trivial needs_implicit
|       | `-Destructor simple irrelevant trivial needs_implicit
|       |-CXXRecordDecl 0x8c9ba0 <col:5, col:12> col:12 implicit struct __promote_4
|       `-TypedefDecl 0x8c9db8 <line:214:7, col:61> col:61 __type 'typeof (_Tp2() + _Up2() + _Vp2() + _Wp2())'
|         `-TypeOfExprType 0x8c9d70 'typeof (_Tp2() + _Up2() + _Vp2() + _Wp2())' dependent
|           `-ParenExpr 0x8c9d50 <col:25, col:59> '<dependent type>'
|             `-BinaryOperator 0x8c9d30 <col:26, col:58> '<dependent type>' '+'
|               |-BinaryOperator 0x8c9ce0 <col:26, col:49> '<dependent type>' '+'
|               | |-BinaryOperator 0x8c9c90 <col:26, col:40> '<dependent type>' '+'
|               | | |-CXXUnresolvedConstructExpr 0x8c9c40 <col:26, col:31> '_Tp2' '_Tp2'
|               | | `-CXXUnresolvedConstructExpr 0x8c9c70 <col:35, col:40> '_Up2' '_Up2'
|               | `-CXXUnresolvedConstructExpr 0x8c9cc0 <col:44, col:49> '_Vp2' '_Vp2'
|               `-CXXUnresolvedConstructExpr 0x8c9d10 <col:53, col:58> '_Wp2' '_Wp2'
|-LinkageSpecDecl 0x8c9ec8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:114:24, line:115:22> line:114:31 C
| |-TypedefDecl 0x8c9f30 </usr/include/x86_64-linux-gnu/bits/types.h:31:1, col:23> col:23 referenced __u_char 'unsigned char'
| | `-BuiltinType 0x7db3e0 'unsigned char'
| |-TypedefDecl 0x8c9fa0 <line:32:1, col:28> col:28 referenced __u_short 'unsigned short'
| | `-BuiltinType 0x7db400 'unsigned short'
| |-TypedefDecl 0x8ca010 <line:33:1, col:22> col:22 referenced __u_int 'unsigned int'
| | `-BuiltinType 0x7db420 'unsigned int'
| |-TypedefDecl 0x8ca080 <line:34:1, col:27> col:27 referenced __u_long 'unsigned long'
| | `-BuiltinType 0x7db440 'unsigned long'
| |-TypedefDecl 0x8ca0f0 <line:37:1, col:21> col:21 referenced __int8_t 'signed char'
| | `-BuiltinType 0x7db340 'signed char'
| |-TypedefDecl 0x8ca160 <line:38:1, col:23> col:23 referenced __uint8_t 'unsigned char'
| | `-BuiltinType 0x7db3e0 'unsigned char'
| |-TypedefDecl 0x8ca1d0 <line:39:1, col:26> col:26 referenced __int16_t 'short'
| | `-BuiltinType 0x7db360 'short'
| |-TypedefDecl 0x8ca240 <line:40:1, col:28> col:28 referenced __uint16_t 'unsigned short'
| | `-BuiltinType 0x7db400 'unsigned short'
| |-TypedefDecl 0x8ca2b0 <line:41:1, col:20> col:20 referenced __int32_t 'int'
| | `-BuiltinType 0x7db380 'int'
| |-TypedefDecl 0x8ca320 <line:42:1, col:22> col:22 referenced __uint32_t 'unsigned int'
| | `-BuiltinType 0x7db420 'unsigned int'
| |-TypedefDecl 0x8ca390 <line:44:1, col:25> col:25 referenced __int64_t 'long'
| | `-BuiltinType 0x7db3a0 'long'
| |-TypedefDecl 0x8ca400 <line:45:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| | `-BuiltinType 0x7db440 'unsigned long'
| |-TypedefDecl 0x8d0500 <line:52:1, col:18> col:18 referenced __int_least8_t '__int8_t':'signed char'
| | `-TypedefType 0x8ca460 '__int8_t' sugar
| |   |-Typedef 0x8ca0f0 '__int8_t'
| |   `-BuiltinType 0x7db340 'signed char'
| |-TypedefDecl 0x8d0590 <line:53:1, col:19> col:19 referenced __uint_least8_t '__uint8_t':'unsigned char'
| | `-TypedefType 0x8d0560 '__uint8_t' sugar
| |   |-Typedef 0x8ca160 '__uint8_t'
| |   `-BuiltinType 0x7db3e0 'unsigned char'
| |-TypedefDecl 0x8d0620 <line:54:1, col:19> col:19 referenced __int_least16_t '__int16_t':'short'
| | `-TypedefType 0x8d05f0 '__int16_t' sugar
| |   |-Typedef 0x8ca1d0 '__int16_t'
| |   `-BuiltinType 0x7db360 'short'
| |-TypedefDecl 0x8d06b0 <line:55:1, col:20> col:20 referenced __uint_least16_t '__uint16_t':'unsigned short'
| | `-TypedefType 0x8d0680 '__uint16_t' sugar
| |   |-Typedef 0x8ca240 '__uint16_t'
| |   `-BuiltinType 0x7db400 'unsigned short'
| |-TypedefDecl 0x8d0740 <line:56:1, col:19> col:19 referenced __int_least32_t '__int32_t':'int'
| | `-TypedefType 0x8d0710 '__int32_t' sugar
| |   |-Typedef 0x8ca2b0 '__int32_t'
| |   `-BuiltinType 0x7db380 'int'
| |-TypedefDecl 0x8d07d0 <line:57:1, col:20> col:20 referenced __uint_least32_t '__uint32_t':'unsigned int'
| | `-TypedefType 0x8d07a0 '__uint32_t' sugar
| |   |-Typedef 0x8ca320 '__uint32_t'
| |   `-BuiltinType 0x7db420 'unsigned int'
| |-TypedefDecl 0x8d0860 <line:58:1, col:19> col:19 referenced __int_least64_t '__int64_t':'long'
| | `-TypedefType 0x8d0830 '__int64_t' sugar
| |   |-Typedef 0x8ca390 '__int64_t'
| |   `-BuiltinType 0x7db3a0 'long'
| |-TypedefDecl 0x8d08f0 <line:59:1, col:20> col:20 referenced __uint_least64_t '__uint64_t':'unsigned long'
| | `-TypedefType 0x8d08c0 '__uint64_t' sugar
| |   |-Typedef 0x8ca400 '__uint64_t'
| |   `-BuiltinType 0x7db440 'unsigned long'
| |-TypedefDecl 0x8d0960 <line:63:1, col:18> col:18 referenced __quad_t 'long'
| | `-BuiltinType 0x7db3a0 'long'
| |-TypedefDecl 0x8d09d0 <line:64:1, col:27> col:27 referenced __u_quad_t 'unsigned long'
| | `-BuiltinType 0x7db440 'unsigned long'
| |-TypedefDecl 0x8d0a40 <line:72:1, col:18> col:18 referenced __intmax_t 'long'
| | `-BuiltinType 0x7db3a0 'long'
| |-TypedefDecl 0x8d0ab0 <line:73:1, col:27> col:27 referenced __uintmax_t 'unsigned long'
| | `-BuiltinType 0x7db440 'unsigned long'
| |-TypedefDecl 0x8d0b20 <line:137:22, line:145:25> col:25 referenced __dev_t 'unsigned long'
| | `-BuiltinType 0x7db440 'unsigned long'
| |-TypedefDecl 0x8d0b90 <line:137:22, line:146:25> col:25 referenced __uid_t 'unsigned int'
| | `-BuiltinType 0x7db420 'unsigned int'
| |-TypedefDecl 0x8d0c00 <line:137:22, line:147:25> col:25 referenced __gid_t 'unsigned int'
| | `-BuiltinType 0x7db420 'unsigned int'
| |-TypedefDecl 0x8d0c70 <line:137:22, line:148:25> col:25 referenced __ino_t 'unsigned long'
| | `-BuiltinType 0x7db440 'unsigned long'
| |-TypedefDecl 0x8d0ce0 <line:137:22, line:149:27> col:27 referenced __ino64_t 'unsigned long'
| | `-BuiltinType 0x7db440 'unsigned long'
| |-TypedefDecl 0x8d0d50 <line:137:22, line:150:26> col:26 referenced __mode_t 'unsigned int'
| | `-BuiltinType 0x7db420 'unsigned int'
| |-TypedefDecl 0x8d0dc0 <line:137:22, line:151:27> col:27 referenced __nlink_t 'unsigned long'
| | `-BuiltinType 0x7db440 'unsigned long'
| |-TypedefDecl 0x8d0e30 <line:137:22, line:152:25> col:25 referenced __off_t 'long'
| | `-BuiltinType 0x7db3a0 'long'
| |-TypedefDecl 0x8d0ea0 <line:137:22, line:153:27> col:27 referenced __off64_t 'long'
| | `-BuiltinType 0x7db3a0 'long'
| |-TypedefDecl 0x8d0f10 <line:137:22, line:154:25> col:25 referenced __pid_t 'int'
| | `-BuiltinType 0x7db380 'int'
| |-CXXRecordDecl 0x8d0f68 </usr/include/x86_64-linux-gnu/bits/typesizes.h:72:24, col:47> col:24 struct definition
| | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial needs_implicit
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | `-FieldDecl 0x8d1130 <col:33, col:44> col:37 __val 'int [2]'
| |-TypedefDecl 0x8d11f8 </usr/include/x86_64-linux-gnu/bits/types.h:137:22, line:155:26> col:26 referenced __fsid_t 'struct __fsid_t':'__fsid_t'
| | `-ElaboratedType 0x8d11a0 'struct __fsid_t' sugar
| |   `-RecordType 0x8d1000 '__fsid_t'
| |     `-CXXRecord 0x8d0f68 ''
| |-TypedefDecl 0x8d1280 <line:137:22, line:156:27> col:27 referenced __clock_t 'long'
| | `-BuiltinType 0x7db3a0 'long'
| |-TypedefDecl 0x8d12f0 <line:137:22, line:157:26> col:26 __rlim_t 'unsigned long'
| | `-BuiltinType 0x7db440 'unsigned long'
| |-TypedefDecl 0x8d1360 <line:137:22, line:158:28> col:28 __rlim64_t 'unsigned long'
| | `-BuiltinType 0x7db440 'unsigned long'
| |-TypedefDecl 0x8d13d0 <line:137:22, line:159:24> col:24 referenced __id_t 'unsigned int'
| | `-BuiltinType 0x7db420 'unsigned int'
| |-TypedefDecl 0x8d1440 <line:137:22, line:160:26> col:26 referenced __time_t 'long'
| | `-BuiltinType 0x7db3a0 'long'
| |-TypedefDecl 0x8d9120 <line:137:22, line:161:30> col:30 referenced __useconds_t 'unsigned int'
| | `-BuiltinType 0x7db420 'unsigned int'
| |-TypedefDecl 0x8d9190 <line:137:22, line:162:31> col:31 referenced __suseconds_t 'long'
| | `-BuiltinType 0x7db3a0 'long'
| |-TypedefDecl 0x8d9200 <line:137:22, line:164:27> col:27 referenced __daddr_t 'int'
| | `-BuiltinType 0x7db380 'int'
| |-TypedefDecl 0x8d9270 <line:137:22, line:165:25> col:25 referenced __key_t 'int'
| | `-BuiltinType 0x7db380 'int'
| |-TypedefDecl 0x8d92e0 <line:137:22, line:168:29> col:29 referenced __clockid_t 'int'
| | `-BuiltinType 0x7db380 'int'
| |-TypedefDecl 0x8d9350 <line:137:22, line:171:27> col:27 referenced __timer_t 'void *'
| | `-PointerType 0x7dbae0 'void *'
| |   `-BuiltinType 0x7db2e0 'void'
| |-TypedefDecl 0x8d93c0 <line:137:22, line:174:29> col:29 referenced __blksize_t 'long'
| | `-BuiltinType 0x7db3a0 'long'
| |-TypedefDecl 0x8d9430 <line:137:22, line:179:28> col:28 referenced __blkcnt_t 'long'
| | `-BuiltinType 0x7db3a0 'long'
| |-TypedefDecl 0x8d94a0 <line:137:22, line:180:30> col:30 referenced __blkcnt64_t 'long'
| | `-BuiltinType 0x7db3a0 'long'
| |-TypedefDecl 0x8d9510 <line:137:22, line:183:30> col:30 referenced __fsblkcnt_t 'unsigned long'
| | `-BuiltinType 0x7db440 'unsigned long'
| |-TypedefDecl 0x8d9580 <line:137:22, line:184:32> col:32 referenced __fsblkcnt64_t 'unsigned long'
| | `-BuiltinType 0x7db440 'unsigned long'
| |-TypedefDecl 0x8d95f0 <line:137:22, line:187:30> col:30 referenced __fsfilcnt_t 'unsigned long'
| | `-BuiltinType 0x7db440 'unsigned long'
| |-TypedefDecl 0x8d9660 <line:137:22, line:188:32> col:32 referenced __fsfilcnt64_t 'unsigned long'
| | `-BuiltinType 0x7db440 'unsigned long'
| |-TypedefDecl 0x8d96d0 <line:137:22, line:191:28> col:28 __fsword_t 'long'
| | `-BuiltinType 0x7db3a0 'long'
| |-TypedefDecl 0x8d9740 <line:137:22, line:193:27> col:27 referenced __ssize_t 'long'
| | `-BuiltinType 0x7db3a0 'long'
| |-TypedefDecl 0x8d97b0 <line:137:22, line:196:33> col:33 referenced __syscall_slong_t 'long'
| | `-BuiltinType 0x7db3a0 'long'
| |-TypedefDecl 0x8d9820 <line:137:22, line:198:33> col:33 __syscall_ulong_t 'unsigned long'
| | `-BuiltinType 0x7db440 'unsigned long'
| |-TypedefDecl 0x8d98b0 <line:202:1, col:19> col:19 referenced __loff_t '__off64_t':'long'
| | `-TypedefType 0x8d9880 '__off64_t' sugar
| |   |-Typedef 0x8d0ea0 '__off64_t'
| |   `-BuiltinType 0x7db3a0 'long'
| |-TypedefDecl 0x8d9920 <line:203:1, col:15> col:15 referenced __caddr_t 'char *'
| | `-PointerType 0x7dbfa0 'char *'
| |   `-BuiltinType 0x7db320 'char'
| |-TypedefDecl 0x8d9990 <line:137:22, line:206:25> col:25 __intptr_t 'long'
| | `-BuiltinType 0x7db3a0 'long'
| |-TypedefDecl 0x8d9a00 <line:137:22, line:209:23> col:23 __socklen_t 'unsigned int'
| | `-BuiltinType 0x7db420 'unsigned int'
| |-TypedefDecl 0x8d9a70 <line:214:1, col:13> col:13 __sig_atomic_t 'int'
| | `-BuiltinType 0x7db380 'int'
| |-TypedefDecl 0x8d9ae0 </usr/include/x86_64-linux-gnu/bits/floatn-common.h:214:1, col:15> col:15 referenced _Float32 'float'
| | `-BuiltinType 0x7db480 'float'
| |-TypedefDecl 0x8d9b50 <line:251:1, col:16> col:16 referenced _Float64 'double'
| | `-BuiltinType 0x7db4a0 'double'
| |-TypedefDecl 0x8d9bc0 <line:268:1, col:16> col:16 referenced _Float32x 'double'
| | `-BuiltinType 0x7db4a0 'double'
| |-TypedefDecl 0x8d9c30 <line:285:1, col:21> col:21 referenced _Float64x 'long double'
| | `-BuiltinType 0x7db4c0 'long double'
| |-TypedefDecl 0x8d9ca0 </usr/include/math.h:149:1, col:15> col:15 float_t 'float'
| | `-BuiltinType 0x7db480 'float'
| |-TypedefDecl 0x8d9d10 <line:150:1, col:16> col:16 double_t 'double'
| | `-BuiltinType 0x7db4a0 'double'
| |-EnumDecl 0x8d9d68 <line:237:1, line:254:3> line:237:1
| | |-EnumConstantDecl 0x8d9e70 <line:239:5, line:240:24> line:239:5 FP_INT_UPWARD '(anonymous enum at /usr/include/math.h:237:1)'
| | | `-ImplicitCastExpr 0x8da100 <line:240:24> 'unsigned int' <IntegralCast>
| | |   `-ConstantExpr 0x8d9e50 <col:24> 'int' Int: 0
| | |     `-IntegerLiteral 0x8d9e30 <col:24> 'int' 0
| | |-EnumConstantDecl 0x8d9f00 <line:242:5, line:243:26> line:242:5 FP_INT_DOWNWARD '(anonymous enum at /usr/include/math.h:237:1)'
| | | `-ImplicitCastExpr 0x8f3890 <line:243:26> 'unsigned int' <IntegralCast>
| | |   `-ConstantExpr 0x8d9ee0 <col:26> 'int' Int: 1
| | |     `-IntegerLiteral 0x8d9ec0 <col:26> 'int' 1
| | |-EnumConstantDecl 0x8d9f90 <line:245:5, line:246:28> line:245:5 FP_INT_TOWARDZERO '(anonymous enum at /usr/include/math.h:237:1)'
| | | `-ImplicitCastExpr 0x8f38a8 <line:246:28> 'unsigned int' <IntegralCast>
| | |   `-ConstantExpr 0x8d9f70 <col:28> 'int' Int: 2
| | |     `-IntegerLiteral 0x8d9f50 <col:28> 'int' 2
| | |-EnumConstantDecl 0x8da020 <line:248:5, line:249:35> line:248:5 FP_INT_TONEARESTFROMZERO '(anonymous enum at /usr/include/math.h:237:1)'
| | | `-ImplicitCastExpr 0x8f38c0 <line:249:35> 'unsigned int' <IntegralCast>
| | |   `-ConstantExpr 0x8da000 <col:35> 'int' Int: 3
| | |     `-IntegerLiteral 0x8d9fe0 <col:35> 'int' 3
| | `-EnumConstantDecl 0x8da0b0 <line:251:5, line:252:27> line:251:5 FP_INT_TONEAREST '(anonymous enum at /usr/include/math.h:237:1)'
| |   `-ImplicitCastExpr 0x8f38d8 <line:252:27> 'unsigned int' <IntegralCast>
| |     `-ConstantExpr 0x8da090 <col:27> 'int' Int: 4
| |       `-IntegerLiteral 0x8da070 <col:27> 'int' 4
| |-FunctionDecl 0x8f3a08 <line:283:3, /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:22:32> line:21:20 __fpclassify 'int (double) throw()' extern
| | |-ParmVarDecl 0x8f3908 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:21:46> col:46 __value 'double'
| | `-ConstAttr 0x8f3ab0 <line:22:22>
| |-FunctionDecl 0x8f3c08 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:26:32> line:25:20 __signbit 'int (double) throw()' extern
| | |-ParmVarDecl 0x8f3b68 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:25:43> col:43 __value 'double'
| | `-ConstAttr 0x8f3cb0 <line:26:22>
| |-FunctionDecl 0x8f3dc0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:30:77> col:20 __isinf 'int (double) throw()' extern
| | |-ParmVarDecl 0x8f3d20 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:30:41> col:41 __value 'double'
| | `-ConstAttr 0x8f3e68 <col:67>
| |-FunctionDecl 0x8f3f78 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:33:78> col:20 __finite 'int (double) throw()' extern
| | |-ParmVarDecl 0x8f3ed8 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:33:42> col:42 __value 'double'
| | |-ConstAttr 0x8f4020 <col:68>
| | `-NoThrowAttr 0x8f40b0 <col:20> Implicit
| |-FunctionDecl 0x8f4190 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:36:77> col:20 __isnan 'int (double) throw()' extern
| | |-ParmVarDecl 0x8f40f0 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:36:41> col:41 __value 'double'
| | `-ConstAttr 0x8f4238 <col:67>
| |-FunctionDecl 0x8f4448 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:39:20 used __iseqsig 'int (double, double) throw()' extern
| | |-ParmVarDecl 0x8f42a8 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:39:43> col:43 __x 'double'
| | `-ParmVarDecl 0x8f4328 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:39:58> col:58 __y 'double'
| |-FunctionDecl 0x8f45b0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:43:32> line:42:20 used __issignaling 'int (double) throw()' extern
| | |-ParmVarDecl 0x8f4510 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:42:47> col:47 __value 'double'
| | `-ConstAttr 0x8f4658 <line:43:22>
| |-FunctionDecl 0x8f47c8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:53:13 acos 'double (double) throw()' extern
| | |-ParmVarDecl 0x8f46c8 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:53:31> col:31 __x 'double'
| | `-NoThrowAttr 0x8facf0 <col:13> Implicit
| |-FunctionDecl 0x8fae00 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:31:1 __acos 'double (double) throw()' extern
| | `-ParmVarDecl 0x8fad60 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:53:31> col:31 __x 'double'
| |-FunctionDecl 0x8faf60 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:55:13 asin 'double (double) throw()' extern
| | |-ParmVarDecl 0x8faec0 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:55:31> col:31 __x 'double'
| | `-NoThrowAttr 0x8fb008 <col:13> Implicit
| |-FunctionDecl 0x8fb118 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:32:1 __asin 'double (double) throw()' extern
| | `-ParmVarDecl 0x8fb078 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:55:31> col:31 __x 'double'
| |-FunctionDecl 0x8fb278 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:57:13 atan 'double (double) throw()' extern
| | |-ParmVarDecl 0x8fb1d8 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:57:31> col:31 __x 'double'
| | `-NoThrowAttr 0x8fb320 <col:13> Implicit
| |-FunctionDecl 0x8fb430 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:33:1 __atan 'double (double) throw()' extern
| | `-ParmVarDecl 0x8fb390 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:57:31> col:31 __x 'double'
| |-FunctionDecl 0x8fb698 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:59:13 atan2 'double (double, double) throw()' extern
| | |-ParmVarDecl 0x8fb4f0 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:59:32> col:32 __y 'double'
| | |-ParmVarDecl 0x8fb570 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:59:47> col:47 __x 'double'
| | `-NoThrowAttr 0x8fb788 <col:13> Implicit
| |-FunctionDecl 0x8fb920 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:34:1 __atan2 'double (double, double) throw()' extern
| | |-ParmVarDecl 0x8fb7f8 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:59:32> col:32 __y 'double'
| | `-ParmVarDecl 0x8fb878 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:59:47> col:47 __x 'double'
| |-FunctionDecl 0x8fba88 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:62:17 cos 'double (double) throw()' extern
| | |-ParmVarDecl 0x8fb9e8 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:62:34> col:34 __x 'double'
| | `-NoThrowAttr 0x8fbb30 <col:17> Implicit
| |-FunctionDecl 0x8fe1c0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:36:1 __cos 'double (double) throw()' extern
| | `-ParmVarDecl 0x8fbba0 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:62:34> col:34 __x 'double'
| |-FunctionDecl 0x8fe320 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:64:17 sin 'double (double) throw()' extern
| | |-ParmVarDecl 0x8fe280 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:64:34> col:34 __x 'double'
| | `-NoThrowAttr 0x8fe3c8 <col:17> Implicit
| |-FunctionDecl 0x8fe4d8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:38:1 __sin 'double (double) throw()' extern
| | `-ParmVarDecl 0x8fe438 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:64:34> col:34 __x 'double'
| |-FunctionDecl 0x8fe638 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:66:13 tan 'double (double) throw()' extern
| | |-ParmVarDecl 0x8fe598 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:66:30> col:30 __x 'double'
| | `-NoThrowAttr 0x8fe6e0 <col:13> Implicit
| |-FunctionDecl 0x8fe7f0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:39:1 __tan 'double (double) throw()' extern
| | `-ParmVarDecl 0x8fe750 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:66:30> col:30 __x 'double'
| |-FunctionDecl 0x8fe950 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:71:13 cosh 'double (double) throw()' extern
| | |-ParmVarDecl 0x8fe8b0 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:71:31> col:31 __x 'double'
| | `-NoThrowAttr 0x8fe9f8 <col:13> Implicit
| |-FunctionDecl 0x8feb08 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:40:1 __cosh 'double (double) throw()' extern
| | `-ParmVarDecl 0x8fea68 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:71:31> col:31 __x 'double'
| |-FunctionDecl 0x8fec68 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:73:13 sinh 'double (double) throw()' extern
| | |-ParmVarDecl 0x8febc8 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:73:31> col:31 __x 'double'
| | `-NoThrowAttr 0x8fed10 <col:13> Implicit
| |-FunctionDecl 0x8fee20 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:41:1 __sinh 'double (double) throw()' extern
| | `-ParmVarDecl 0x8fed80 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:73:31> col:31 __x 'double'
| |-FunctionDecl 0x8fef80 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:75:13 tanh 'double (double) throw()' extern
| | |-ParmVarDecl 0x8feee0 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:75:31> col:31 __x 'double'
| | `-NoThrowAttr 0x8ff028 <col:13> Implicit
| |-FunctionDecl 0x8e8380 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:42:1 __tanh 'double (double) throw()' extern
| | `-ParmVarDecl 0x8ff098 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:75:31> col:31 __x 'double'
| |-FunctionDecl 0x8e86a0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:79:22 sincos 'void (double, double *, double *) throw()' extern
| | |-ParmVarDecl 0x8e8440 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:80:14> col:14 __x 'double'
| | |-ParmVarDecl 0x8e84f0 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:80:30> col:30 __sinx 'double *'
| | `-ParmVarDecl 0x8e8570 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:80:49> col:49 __cosx 'double *'
| |-FunctionDecl 0x8e8918 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:44:1 __sincos 'void (double, double *, double *) throw()' extern
| | |-ParmVarDecl 0x8e8770 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:80:14> col:14 __x 'double'
| | |-ParmVarDecl 0x8e87f0 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:80:30> col:30 __sinx 'double *'
| | `-ParmVarDecl 0x8e8870 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:80:49> col:49 __cosx 'double *'
| |-FunctionDecl 0x8e8a88 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:85:13 acosh 'double (double) throw()' extern
| | |-ParmVarDecl 0x8e89e8 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:85:32> col:32 __x 'double'
| | `-NoThrowAttr 0x8e8b30 <col:13> Implicit
| |-FunctionDecl 0x8e8c40 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:45:1 __acosh 'double (double) throw()' extern
| | `-ParmVarDecl 0x8e8ba0 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:85:32> col:32 __x 'double'
| |-FunctionDecl 0x8e8da0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:87:13 asinh 'double (double) throw()' extern
| | |-ParmVarDecl 0x8e8d00 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:87:32> col:32 __x 'double'
| | `-NoThrowAttr 0x8e8e48 <col:13> Implicit
| |-FunctionDecl 0x8e8f58 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:46:1 __asinh 'double (double) throw()' extern
| | `-ParmVarDecl 0x8e8eb8 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:87:32> col:32 __x 'double'
| |-FunctionDecl 0x8e90b8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:89:13 atanh 'double (double) throw()' extern
| | |-ParmVarDecl 0x8e9018 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:89:32> col:32 __x 'double'
| | `-NoThrowAttr 0x8e9160 <col:13> Implicit
| |-FunctionDecl 0x8e9270 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:47:1 __atanh 'double (double) throw()' extern
| | `-ParmVarDecl 0x8e91d0 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:89:32> col:32 __x 'double'
| |-FunctionDecl 0x8e9b40 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:95:17 exp 'double (double) throw()' extern
| | |-ParmVarDecl 0x8e9aa0 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:95:34> col:34 __x 'double'
| | `-NoThrowAttr 0x8e9be8 <col:17> Implicit
| |-FunctionDecl 0x8e9cf8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:49:1 __exp 'double (double) throw()' extern
| | `-ParmVarDecl 0x8e9c58 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:95:34> col:34 __x 'double'
| |-FunctionDecl 0x8e9f88 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:98:13 frexp 'double (double, int *) throw()' extern
| | |-ParmVarDecl 0x8e9db8 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:98:32> col:32 __x 'double'
| | |-ParmVarDecl 0x8e9e60 <col:37, col:42> col:42 __exponent 'int *'
| | `-NoThrowAttr 0x8ea078 <col:13> Implicit
| |-FunctionDecl 0x8ea210 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:50:1 __frexp 'double (double, int *) throw()' extern
| | |-ParmVarDecl 0x8ea0e8 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:98:32> col:32 __x 'double'
| | `-ParmVarDecl 0x8ea168 <col:37, col:42> col:42 __exponent 'int *'
| |-FunctionDecl 0x8ea478 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:101:13 ldexp 'double (double, int) throw()' extern
| | |-ParmVarDecl 0x8ea2d8 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:101:32> col:32 __x 'double'
| | |-ParmVarDecl 0x8ea358 <col:37, col:41> col:41 __exponent 'int'
| | `-NoThrowAttr 0x8ea568 <col:13> Implicit
| |-FunctionDecl 0x8ea700 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:51:1 __ldexp 'double (double, int) throw()' extern
| | |-ParmVarDecl 0x8ea5d8 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:101:32> col:32 __x 'double'
| | `-ParmVarDecl 0x8ea658 <col:37, col:41> col:41 __exponent 'int'
| |-FunctionDecl 0x8ea868 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:104:17 log 'double (double) throw()' extern
| | |-ParmVarDecl 0x8ea7c8 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:104:34> col:34 __x 'double'
| | `-NoThrowAttr 0x8ea910 <col:17> Implicit
| |-FunctionDecl 0x8eacf0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:53:1 __log 'double (double) throw()' extern
| | `-ParmVarDecl 0x8ea980 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:104:34> col:34 __x 'double'
| |-FunctionDecl 0x8eae50 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:107:13 log10 'double (double) throw()' extern
| | |-ParmVarDecl 0x8eadb0 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:107:32> col:32 __x 'double'
| | `-NoThrowAttr 0x8eaef8 <col:13> Implicit
| |-FunctionDecl 0x8eb008 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:54:1 __log10 'double (double) throw()' extern
| | `-ParmVarDecl 0x8eaf68 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:107:32> col:32 __x 'double'
| |-FunctionDecl 0x8eb268 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:110:13 modf 'double (double, double *) throw()' extern
| | |-ParmVarDecl 0x8eb0c8 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:110:31> col:31 __x 'double'
| | |-ParmVarDecl 0x8eb148 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:110:47> col:47 __iptr 'double *'
| | `-NoThrowAttr 0x8eb358 <col:13> Implicit
| |-FunctionDecl 0x8eb510 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> <scratch space>:55:1 __modf 'double (double, double *) throw()' extern
| | |-ParmVarDecl 0x8eb3c8 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:110:31> col:31 __x 'double'
| | |-ParmVarDecl 0x8eb448 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:110:47> col:47 __iptr 'double *'
| | `-NonNullAttr 0x8eb5c0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:110:69> 2
| |-FunctionDecl 0x8eb6e0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:114:13 exp10 'double (double) throw()' extern
| | `-ParmVarDecl 0x8eb640 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:114:32> col:32 __x 'double'
| |-FunctionDecl 0x8eb840 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:57:1 __exp10 'double (double) throw()' extern
| | |-ParmVarDecl 0x8eb7a0 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:114:32> col:32 __x 'double'
| | `-NoThrowAttr 0x8eb8e8 <<scratch space>:57:1> Implicit
| |-FunctionDecl 0x8eb9f8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:119:13 expm1 'double (double) throw()' extern
| | |-ParmVarDecl 0x8eb958 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:119:32> col:32 __x 'double'
| | `-NoThrowAttr 0x8ebaa0 <col:13> Implicit
| |-FunctionDecl 0x8ebbb0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:58:1 __expm1 'double (double) throw()' extern
| | `-ParmVarDecl 0x8ebb10 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:119:32> col:32 __x 'double'
| |-FunctionDecl 0x8ed8a8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:122:13 log1p 'double (double) throw()' extern
| | |-ParmVarDecl 0x8ebc70 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:122:32> col:32 __x 'double'
| | `-NoThrowAttr 0x8ed950 <col:13> Implicit
| |-FunctionDecl 0x8eda60 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:59:1 __log1p 'double (double) throw()' extern
| | `-ParmVarDecl 0x8ed9c0 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:122:32> col:32 __x 'double'
| |-FunctionDecl 0x8edbc0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:125:13 logb 'double (double) throw()' extern
| | |-ParmVarDecl 0x8edb20 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:125:31> col:31 __x 'double'
| | `-NoThrowAttr 0x8edc68 <col:13> Implicit
| |-FunctionDecl 0x8edd78 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:60:1 __logb 'double (double) throw()' extern
| | `-ParmVarDecl 0x8edcd8 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:125:31> col:31 __x 'double'
| |-FunctionDecl 0x8eded8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:130:13 exp2 'double (double) throw()' extern
| | |-ParmVarDecl 0x8ede38 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:130:31> col:31 __x 'double'
| | `-NoThrowAttr 0x8edf80 <col:13> Implicit
| |-FunctionDecl 0x8ee090 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:61:1 __exp2 'double (double) throw()' extern
| | `-ParmVarDecl 0x8edff0 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:130:31> col:31 __x 'double'
| |-FunctionDecl 0x8ee1f0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:133:13 log2 'double (double) throw()' extern
| | |-ParmVarDecl 0x8ee150 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:133:31> col:31 __x 'double'
| | `-NoThrowAttr 0x8ee298 <col:13> Implicit
| |-FunctionDecl 0x8ee3a8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:62:1 __log2 'double (double) throw()' extern
| | `-ParmVarDecl 0x8ee308 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:133:31> col:31 __x 'double'
| |-FunctionDecl 0x8ee590 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:140:17 pow 'double (double, double) throw()' extern
| | |-ParmVarDecl 0x8ee468 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:140:34> col:34 __x 'double'
| | |-ParmVarDecl 0x8ee4e8 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:140:49> col:49 __y 'double'
| | `-NoThrowAttr 0x8ee640 <col:17> Implicit
| |-FunctionDecl 0x8eeb60 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:64:1 __pow 'double (double, double) throw()' extern
| | |-ParmVarDecl 0x8ee6b0 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:140:34> col:34 __x 'double'
| | `-ParmVarDecl 0x8ee730 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:140:49> col:49 __y 'double'
| |-FunctionDecl 0x8eecc8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:143:13 sqrt 'double (double) throw()' extern
| | |-ParmVarDecl 0x8eec28 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:143:31> col:31 __x 'double'
| | `-NoThrowAttr 0x8eed70 <col:13> Implicit
| |-FunctionDecl 0x8eee80 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:65:1 __sqrt 'double (double) throw()' extern
| | `-ParmVarDecl 0x8eede0 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:143:31> col:31 __x 'double'
| |-FunctionDecl 0x8ef068 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:147:13 hypot 'double (double, double) throw()' extern
| | |-ParmVarDecl 0x8eef40 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:147:32> col:32 __x 'double'
| | |-ParmVarDecl 0x8eefc0 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:147:47> col:47 __y 'double'
| | `-NoThrowAttr 0x8ef118 <col:13> Implicit
| |-FunctionDecl 0x8ef2b0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:66:1 __hypot 'double (double, double) throw()' extern
| | |-ParmVarDecl 0x8ef188 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:147:32> col:32 __x 'double'
| | `-ParmVarDecl 0x8ef208 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:147:47> col:47 __y 'double'
| |-FunctionDecl 0x8ef418 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:152:13 cbrt 'double (double) throw()' extern
| | |-ParmVarDecl 0x8ef378 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:152:31> col:31 __x 'double'
| | |-NoThrowAttr 0x8ef4c0 <col:13> Implicit
| | `-ConstAttr 0x8ef518 <col:13> Implicit
| |-FunctionDecl 0x8ef5f8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:67:1 __cbrt 'double (double) throw()' extern
| | `-ParmVarDecl 0x8ef558 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:152:31> col:31 __x 'double'
| |-FunctionDecl 0x8ef758 </usr/include/math.h:283:3, line:280:66> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:159:14 ceil 'double (double) throw()' extern
| | |-ParmVarDecl 0x8ef6b8 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:159:32> col:32 __x 'double'
| | |-ConstAttr 0x8ef800 <col:39>
| | `-NoThrowAttr 0x8ef858 <col:14> Implicit
| |-FunctionDecl 0x8ef938 </usr/include/math.h:283:3, line:281:79> <scratch space>:68:1 __ceil 'double (double) throw()' extern
| | |-ParmVarDecl 0x8ef898 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:159:32> col:32 __x 'double'
| | `-ConstAttr 0x8ef9e0 <col:39>
| |-FunctionDecl 0x8effa0 </usr/include/math.h:283:3, line:280:66> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:162:14 fabs 'double (double) throw()' extern
| | |-ParmVarDecl 0x8efa50 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:162:32> col:32 __x 'double'
| | |-ConstAttr 0x8f0048 <col:39>
| | `-NoThrowAttr 0x8f00a0 <col:14> Implicit
| |-FunctionDecl 0x8f0180 </usr/include/math.h:283:3, line:281:79> <scratch space>:69:1 __fabs 'double (double) throw()' extern
| | |-ParmVarDecl 0x8f00e0 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:162:32> col:32 __x 'double'
| | `-ConstAttr 0x8f0228 <col:39>
| |-FunctionDecl 0x8f0338 </usr/include/math.h:283:3, line:280:66> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:165:14 floor 'double (double) throw()' extern
| | |-ParmVarDecl 0x8f0298 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:165:33> col:33 __x 'double'
| | |-ConstAttr 0x8f03e0 <col:40>
| | `-NoThrowAttr 0x8f0438 <col:14> Implicit
| |-FunctionDecl 0x8f0518 </usr/include/math.h:283:3, line:281:79> <scratch space>:70:1 __floor 'double (double) throw()' extern
| | |-ParmVarDecl 0x8f0478 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:165:33> col:33 __x 'double'
| | `-ConstAttr 0x8f05c0 <col:40>
| |-FunctionDecl 0x8f0758 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:168:13 fmod 'double (double, double) throw()' extern
| | |-ParmVarDecl 0x8f0630 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:168:31> col:31 __x 'double'
| | |-ParmVarDecl 0x8f06b0 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:168:46> col:46 __y 'double'
| | `-NoThrowAttr 0x8f0808 <col:13> Implicit
| |-FunctionDecl 0x8f09a0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:71:1 __fmod 'double (double, double) throw()' extern
| | |-ParmVarDecl 0x8f0878 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:168:31> col:31 __x 'double'
| | `-ParmVarDecl 0x8f08f8 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:168:46> col:46 __y 'double'
| |-FunctionDecl 0x8f0b08 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:182:75> col:19 finite 'int (double) throw()' extern
| | |-ParmVarDecl 0x8f0a68 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:182:39> col:39 __value 'double'
| | |-ConstAttr 0x8f0bb0 <col:65>
| | `-NoThrowAttr 0x8f0c08 <col:19> Implicit
| |-FunctionDecl 0x8f0d70 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:185:13 drem 'double (double, double) throw()' extern
| | |-ParmVarDecl 0x8f0c48 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:185:31> col:31 __x 'double'
| | `-ParmVarDecl 0x8f0cc8 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:185:46> col:46 __y 'double'
| |-FunctionDecl 0x9296d0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:72:1 __drem 'double (double, double) throw()' extern
| | |-ParmVarDecl 0x8f0e38 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:185:31> col:31 __x 'double'
| | `-ParmVarDecl 0x8f0eb8 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:185:46> col:46 __y 'double'
| |-FunctionDecl 0x929838 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:189:13 significand 'double (double) throw()' extern
| | `-ParmVarDecl 0x929798 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:189:38> col:38 __x 'double'
| |-FunctionDecl 0x929998 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:73:1 __significand 'double (double) throw()' extern
| | `-ParmVarDecl 0x9298f8 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:189:38> col:38 __x 'double'
| |-FunctionDecl 0x929b80 </usr/include/math.h:283:3, line:280:66> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:196:14 copysign 'double (double, double) throw()' extern
| | |-ParmVarDecl 0x929a58 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:196:36> col:36 __x 'double'
| | |-ParmVarDecl 0x929ad8 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:196:51> col:51 __y 'double'
| | |-ConstAttr 0x929c30 <col:58>
| | `-NoThrowAttr 0x929c88 <col:14> Implicit
| |-FunctionDecl 0x929df0 </usr/include/math.h:283:3, line:281:79> <scratch space>:74:1 __copysign 'double (double, double) throw()' extern
| | |-ParmVarDecl 0x929cc8 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:196:36> col:36 __x 'double'
| | |-ParmVarDecl 0x929d48 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:196:51> col:51 __y 'double'
| | `-ConstAttr 0x929ea0 <col:58>
| |-FunctionDecl 0x92a018 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:201:13 nan 'double (const char *) throw()' extern
| | |-ParmVarDecl 0x929f10 <col:20, col:32> col:32 __tagb 'const char *'
| | |-NoThrowAttr 0x92a0f0 <col:13> Implicit
| | `-PureAttr 0x92a148 <col:13> Implicit
| |-FunctionDecl 0x92a228 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:75:1 __nan 'double (const char *) throw()' extern
| | `-ParmVarDecl 0x92a188 </usr/include/x86_64-linux-gnu/bits/mathcalls.h:201:20, col:32> col:32 __tagb 'const char *'
| |-FunctionDecl 0x92a388 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:217:13 j0 'double (double) throw()' extern
| | `-ParmVarDecl 0x92a2e8 </usr/include/math.h:285:20> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:217:28 'double'
| |-FunctionDecl 0x92a4e8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:76:1 __j0 'double (double) throw()' extern
| | `-ParmVarDecl 0x92a448 </usr/include/math.h:285:20> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:217:28 'double'
| |-FunctionDecl 0x92a6e0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:218:13 j1 'double (double) throw()' extern
| | `-ParmVarDecl 0x92a5a8 </usr/include/math.h:285:20> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:218:28 'double'
| |-FunctionDecl 0x92a840 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:77:1 __j1 'double (double) throw()' extern
| | `-ParmVarDecl 0x92a7a0 </usr/include/math.h:285:20> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:218:28 'double'
| |-FunctionDecl 0x92aaa8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:219:13 jn 'double (int, double) throw()' extern
| | |-ParmVarDecl 0x92a900 <col:19> col:22 'int'
| | `-ParmVarDecl 0x92a980 </usr/include/math.h:285:20> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:219:33 'double'
| |-FunctionDecl 0x92ac98 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:78:1 __jn 'double (int, double) throw()' extern
| | |-ParmVarDecl 0x92ab70 </usr/include/x86_64-linux-gnu/bits/mathcalls.h:219:19> col:22 'int'
| | `-ParmVarDecl 0x92abf0 </usr/include/math.h:285:20> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:219:33 'double'
| |-FunctionDecl 0x92ae00 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:220:13 y0 'double (double) throw()' extern
| | `-ParmVarDecl 0x92ad60 </usr/include/math.h:285:20> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:220:28 'double'
| |-FunctionDecl 0x92af60 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:79:1 __y0 'double (double) throw()' extern
| | `-ParmVarDecl 0x92aec0 </usr/include/math.h:285:20> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:220:28 'double'
| |-FunctionDecl 0x92b0c0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:221:13 y1 'double (double) throw()' extern
| | `-ParmVarDecl 0x92b020 </usr/include/math.h:285:20> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:221:28 'double'
| |-FunctionDecl 0x92b220 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:80:1 __y1 'double (double) throw()' extern
| | `-ParmVarDecl 0x92b180 </usr/include/math.h:285:20> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:221:28 'double'
| |-FunctionDecl 0x92b408 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:222:13 yn 'double (int, double) throw()' extern
| | |-ParmVarDecl 0x92b2e0 <col:19> col:22 'int'
| | `-ParmVarDecl 0x92b360 </usr/include/math.h:285:20> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:222:33 'double'
| |-FunctionDecl 0x92b5f8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:81:1 __yn 'double (int, double) throw()' extern
| | |-ParmVarDecl 0x92b4d0 </usr/include/x86_64-linux-gnu/bits/mathcalls.h:222:19> col:22 'int'
| | `-ParmVarDecl 0x92b550 </usr/include/math.h:285:20> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:222:33 'double'
| |-FunctionDecl 0x92c7a0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:228:13 erf 'double (double) throw()' extern
| | |-ParmVarDecl 0x92c700 </usr/include/math.h:285:20> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:228:29 'double'
| | `-NoThrowAttr 0x92c848 <col:13> Implicit
| |-FunctionDecl 0x92c958 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:82:1 __erf 'double (double) throw()' extern
| | `-ParmVarDecl 0x92c8b8 </usr/include/math.h:285:20> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:228:29 'double'
| |-FunctionDecl 0x92cab8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:229:13 erfc 'double (double) throw()' extern
| | |-ParmVarDecl 0x92ca18 </usr/include/math.h:285:20> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:229:30 'double'
| | `-NoThrowAttr 0x92cb60 <col:13> Implicit
| |-FunctionDecl 0x92cc70 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:83:1 __erfc 'double (double) throw()' extern
| | `-ParmVarDecl 0x92cbd0 </usr/include/math.h:285:20> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:229:30 'double'
| |-FunctionDecl 0x92cdd0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:230:13 lgamma 'double (double) throw()' extern
| | |-ParmVarDecl 0x92cd30 </usr/include/math.h:285:20> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:230:32 'double'
| | `-NoThrowAttr 0x92ce78 <col:13> Implicit
| |-FunctionDecl 0x92cf88 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:84:1 __lgamma 'double (double) throw()' extern
| | `-ParmVarDecl 0x92cee8 </usr/include/math.h:285:20> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:230:32 'double'
| |-FunctionDecl 0x92d0e8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:235:13 tgamma 'double (double) throw()' extern
| | |-ParmVarDecl 0x92d048 </usr/include/math.h:285:20> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:235:32 'double'
| | `-NoThrowAttr 0x92d190 <col:13> Implicit
| |-FunctionDecl 0x92d2a0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:85:1 __tgamma 'double (double) throw()' extern
| | `-ParmVarDecl 0x92d200 </usr/include/math.h:285:20> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:235:32 'double'
| |-FunctionDecl 0x92d400 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:241:13 gamma 'double (double) throw()' extern
| | `-ParmVarDecl 0x92d360 </usr/include/math.h:285:20> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:241:31 'double'
| |-FunctionDecl 0x92d560 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:86:1 __gamma 'double (double) throw()' extern
| | `-ParmVarDecl 0x92d4c0 </usr/include/math.h:285:20> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:241:31 'double'
| |-FunctionDecl 0x92d7b8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:87:1 lgamma_r 'double (double, int *) throw()' extern
| | |-ParmVarDecl 0x92d620 </usr/include/math.h:285:20> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:249:34 'double'
| | `-ParmVarDecl 0x92d710 <col:36, col:41> col:41 __signgamp 'int *'
| |-FunctionDecl 0x92d9a8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:89:1 __lgamma_r 'double (double, int *) throw()' extern
| | |-ParmVarDecl 0x92d880 </usr/include/math.h:285:20> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:249:34 'double'
| | `-ParmVarDecl 0x92d900 <col:36, col:41> col:41 __signgamp 'int *'
| |-FunctionDecl 0x92db10 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:256:13 rint 'double (double) throw()' extern
| | |-ParmVarDecl 0x92da70 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:256:31> col:31 __x 'double'
| | |-NoThrowAttr 0x92dbb8 <col:13> Implicit
| | `-ConstAttr 0x92dc10 <col:13> Implicit
| |-FunctionDecl 0x92dcf0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:90:1 __rint 'double (double) throw()' extern
| | `-ParmVarDecl 0x92dc50 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:256:31> col:31 __x 'double'
| |-FunctionDecl 0x92ded8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:259:13 nextafter 'double (double, double) throw()' extern
| | |-ParmVarDecl 0x92ddb0 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:259:36> col:36 __x 'double'
| | |-ParmVarDecl 0x92de30 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:259:51> col:51 __y 'double'
| | `-NoThrowAttr 0x92df88 <col:13> Implicit
| |-FunctionDecl 0x92e120 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:91:1 __nextafter 'double (double, double) throw()' extern
| | |-ParmVarDecl 0x92dff8 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:259:36> col:36 __x 'double'
| | `-ParmVarDecl 0x92e078 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:259:51> col:51 __y 'double'
| |-FunctionDecl 0x92e388 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:261:13 nexttoward 'double (double, long double) throw()' extern
| | |-ParmVarDecl 0x92e1e8 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:261:37> col:37 __x 'double'
| | |-ParmVarDecl 0x92e268 <col:42, col:54> col:54 __y 'long double'
| | `-NoThrowAttr 0x92e478 <col:13> Implicit
| |-FunctionDecl 0x92e610 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:92:1 __nexttoward 'double (double, long double) throw()' extern
| | |-ParmVarDecl 0x92e4e8 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:261:37> col:37 __x 'double'
| | `-ParmVarDecl 0x92e568 <col:42, col:54> col:54 __y 'long double'
| |-FunctionDecl 0x9307d0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:266:13 nextdown 'double (double) throw()' extern
| | `-ParmVarDecl 0x930730 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:266:35> col:35 __x 'double'
| |-FunctionDecl 0x930930 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:94:1 __nextdown 'double (double) throw()' extern
| | `-ParmVarDecl 0x930890 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:266:35> col:35 __x 'double'
| |-FunctionDecl 0x930a90 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:268:13 nextup 'double (double) throw()' extern
| | `-ParmVarDecl 0x9309f0 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:268:33> col:33 __x 'double'
| |-FunctionDecl 0x930bf0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:95:1 __nextup 'double (double) throw()' extern
| | `-ParmVarDecl 0x930b50 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:268:33> col:33 __x 'double'
| |-FunctionDecl 0x930dd8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:13 remainder 'double (double, double) throw()' extern
| | |-ParmVarDecl 0x930cb0 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:36> col:36 __x 'double'
| | |-ParmVarDecl 0x930d30 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:51> col:51 __y 'double'
| | `-NoThrowAttr 0x930e88 <col:13> Implicit
| |-FunctionDecl 0x931020 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:96:1 __remainder 'double (double, double) throw()' extern
| | |-ParmVarDecl 0x930ef8 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:36> col:36 __x 'double'
| | `-ParmVarDecl 0x930f78 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:51> col:51 __y 'double'
| |-FunctionDecl 0x931210 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:276:13 scalbn 'double (double, int) throw()' extern
| | |-ParmVarDecl 0x9310e8 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:276:33> col:33 __x 'double'
| | |-ParmVarDecl 0x931168 <col:38, col:42> col:42 __n 'int'
| | `-NoThrowAttr 0x9312c0 <col:13> Implicit
| |-FunctionDecl 0x931458 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:97:1 __scalbn 'double (double, int) throw()' extern
| | |-ParmVarDecl 0x931330 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:276:33> col:33 __x 'double'
| | `-ParmVarDecl 0x9313b0 <col:38, col:42> col:42 __n 'int'
| |-FunctionDecl 0x9315c0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:280:17 ilogb 'int (double) throw()' extern
| | |-ParmVarDecl 0x931520 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:280:36> col:36 __x 'double'
| | `-NoThrowAttr 0x931668 <col:17> Implicit
| |-FunctionDecl 0x9317e0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:98:1 __ilogb 'int (double) throw()' extern
| | `-ParmVarDecl 0x931740 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:280:36> col:36 __x 'double'
| |-FunctionDecl 0x9319a8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:285:23 llogb 'long (double) throw()' extern
| | `-ParmVarDecl 0x9318a0 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:285:42> col:42 __x 'double'
| |-FunctionDecl 0x931b08 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:100:1 __llogb 'long (double) throw()' extern
| | `-ParmVarDecl 0x931a68 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:285:42> col:42 __x 'double'
| |-FunctionDecl 0x931d68 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:290:13 scalbln 'double (double, long) throw()' extern
| | |-ParmVarDecl 0x931bc8 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:290:34> col:34 __x 'double'
| | |-ParmVarDecl 0x931c48 <col:39, col:48> col:48 __n 'long'
| | `-NoThrowAttr 0x931e58 <col:13> Implicit
| |-FunctionDecl 0x931ff0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:101:1 __scalbln 'double (double, long) throw()' extern
| | |-ParmVarDecl 0x931ec8 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:290:34> col:34 __x 'double'
| | `-ParmVarDecl 0x931f48 <col:39, col:48> col:48 __n 'long'
| |-FunctionDecl 0x932158 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:294:13 nearbyint 'double (double) throw()' extern
| | |-ParmVarDecl 0x9320b8 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:294:36> col:36 __x 'double'
| | |-NoThrowAttr 0x932200 <col:13> Implicit
| | `-ConstAttr 0x932258 <col:13> Implicit
| |-FunctionDecl 0x932338 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:102:1 __nearbyint 'double (double) throw()' extern
| | `-ParmVarDecl 0x932298 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:294:36> col:36 __x 'double'
| |-FunctionDecl 0x932498 </usr/include/math.h:283:3, line:280:66> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:14 round 'double (double) throw()' extern
| | |-ParmVarDecl 0x9323f8 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:33> col:33 __x 'double'
| | |-ConstAttr 0x932540 <col:40>
| | `-NoThrowAttr 0x932598 <col:14> Implicit
| |-FunctionDecl 0x932678 </usr/include/math.h:283:3, line:281:79> <scratch space>:103:1 __round 'double (double) throw()' extern
| | |-ParmVarDecl 0x9325d8 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:33> col:33 __x 'double'
| | `-ConstAttr 0x932750 <col:40>
| |-FunctionDecl 0x932860 </usr/include/math.h:283:3, line:280:66> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:302:14 trunc 'double (double) throw()' extern
| | |-ParmVarDecl 0x9327c0 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:302:33> col:33 __x 'double'
| | |-ConstAttr 0x932908 <col:40>
| | `-NoThrowAttr 0x932960 <col:14> Implicit
| |-FunctionDecl 0x932a40 </usr/include/math.h:283:3, line:281:79> <scratch space>:104:1 __trunc 'double (double) throw()' extern
| | |-ParmVarDecl 0x9329a0 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:302:33> col:33 __x 'double'
| | `-ConstAttr 0x932ae8 <col:40>
| |-FunctionDecl 0x932d88 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:307:13 remquo 'double (double, double, int *) throw()' extern
| | |-ParmVarDecl 0x932b58 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:307:33> col:33 __x 'double'
| | |-ParmVarDecl 0x932bd8 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:307:48> col:48 __y 'double'
| | |-ParmVarDecl 0x932c58 <col:53, col:58> col:58 __quo 'int *'
| | `-NoThrowAttr 0x932e80 <col:13> Implicit
| |-FunctionDecl 0x9330a0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:105:1 __remquo 'double (double, double, int *) throw()' extern
| | |-ParmVarDecl 0x932ef0 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:307:33> col:33 __x 'double'
| | |-ParmVarDecl 0x932f70 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:307:48> col:48 __y 'double'
| | `-ParmVarDecl 0x932ff0 <col:53, col:58> col:58 __quo 'int *'
| |-FunctionDecl 0x933210 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:314:22 lrint 'long (double) throw()' extern
| | |-ParmVarDecl 0x933170 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:314:41> col:41 __x 'double'
| | `-NoThrowAttr 0x9332f0 <col:22> Implicit
| |-FunctionDecl 0x933400 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:106:1 __lrint 'long (double) throw()' extern
| | `-ParmVarDecl 0x933360 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:314:41> col:41 __x 'double'
| |-FunctionDecl 0x9335c8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:316:27 llrint 'long long (double) throw()' extern
| | |-ParmVarDecl 0x9334c0 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:316:47> col:47 __x 'double'
| | `-NoThrowAttr 0x9336a0 <col:27> Implicit
| |-FunctionDecl 0x933800 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:107:1 __llrint 'long long (double) throw()' extern
| | `-ParmVarDecl 0x933760 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:316:47> col:47 __x 'double'
| |-FunctionDecl 0x933960 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:320:22 lround 'long (double) throw()' extern
| | |-ParmVarDecl 0x9338c0 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:320:42> col:42 __x 'double'
| | `-NoThrowAttr 0x933a08 <col:22> Implicit
| |-FunctionDecl 0x933b18 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:108:1 __lround 'long (double) throw()' extern
| | `-ParmVarDecl 0x933a78 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:320:42> col:42 __x 'double'
| |-FunctionDecl 0x933c78 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:322:27 llround 'long long (double) throw()' extern
| | |-ParmVarDecl 0x933bd8 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:322:48> col:48 __x 'double'
| | `-NoThrowAttr 0x933d20 <col:27> Implicit
| |-FunctionDecl 0x933e30 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:109:1 __llround 'long long (double) throw()' extern
| | `-ParmVarDecl 0x933d90 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:322:48> col:48 __x 'double'
| |-FunctionDecl 0x934018 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:326:13 fdim 'double (double, double) throw()' extern
| | |-ParmVarDecl 0x933ef0 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:326:31> col:31 __x 'double'
| | |-ParmVarDecl 0x933f70 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:326:46> col:46 __y 'double'
| | `-NoThrowAttr 0x9340c8 <col:13> Implicit
| |-FunctionDecl 0x934260 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:110:1 __fdim 'double (double, double) throw()' extern
| | |-ParmVarDecl 0x934138 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:326:31> col:31 __x 'double'
| | `-ParmVarDecl 0x9341b8 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:326:46> col:46 __y 'double'
| |-FunctionDecl 0x934450 </usr/include/math.h:283:3, line:280:66> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:14 fmax 'double (double, double) throw()' extern
| | |-ParmVarDecl 0x934328 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:32> col:32 __x 'double'
| | |-ParmVarDecl 0x9343a8 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:47> col:47 __y 'double'
| | |-ConstAttr 0x934500 <col:54>
| | `-NoThrowAttr 0x934558 <col:14> Implicit
| |-FunctionDecl 0x9346c0 </usr/include/math.h:283:3, line:281:79> <scratch space>:111:1 __fmax 'double (double, double) throw()' extern
| | |-ParmVarDecl 0x934598 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:32> col:32 __x 'double'
| | |-ParmVarDecl 0x934618 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:47> col:47 __y 'double'
| | `-ConstAttr 0x8ff1e0 <col:54>
| |-FunctionDecl 0x8ff378 </usr/include/math.h:283:3, line:280:66> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:14 fmin 'double (double, double) throw()' extern
| | |-ParmVarDecl 0x8ff250 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:32> col:32 __x 'double'
| | |-ParmVarDecl 0x8ff2d0 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:47> col:47 __y 'double'
| | |-ConstAttr 0x8ff428 <col:54>
| | `-NoThrowAttr 0x8ff480 <col:14> Implicit
| |-FunctionDecl 0x8ff5e8 </usr/include/math.h:283:3, line:281:79> <scratch space>:112:1 __fmin 'double (double, double) throw()' extern
| | |-ParmVarDecl 0x8ff4c0 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:32> col:32 __x 'double'
| | |-ParmVarDecl 0x8ff540 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:47> col:47 __y 'double'
| | `-ConstAttr 0x8ff698 <col:54>
| |-FunctionDecl 0x8ff938 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:335:13 fma 'double (double, double, double) throw()' extern
| | |-ParmVarDecl 0x8ff708 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:335:30> col:30 __x 'double'
| | |-ParmVarDecl 0x8ff788 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:335:45> col:45 __y 'double'
| | |-ParmVarDecl 0x8ff808 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:335:60> col:60 __z 'double'
| | |-ConstAttr 0x8ffa30 <col:13> Implicit
| | `-NoThrowAttr 0x8ffa88 <col:13> Implicit
| |-FunctionDecl 0x8ffc78 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:113:1 __fma 'double (double, double, double) throw()' extern
| | |-ParmVarDecl 0x8ffac8 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:335:30> col:30 __x 'double'
| | |-ParmVarDecl 0x8ffb48 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:335:45> col:45 __y 'double'
| | `-ParmVarDecl 0x8ffbc8 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:335:60> col:60 __z 'double'
| |-FunctionDecl 0x8ffde8 </usr/include/math.h:283:3, line:280:66> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:340:14 roundeven 'double (double) throw()' extern
| | |-ParmVarDecl 0x8ffd48 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:340:37> col:37 __x 'double'
| | `-ConstAttr 0x8ffe90 <col:44>
| |-FunctionDecl 0x8fffa0 </usr/include/math.h:283:3, line:281:79> <scratch space>:115:1 __roundeven 'double (double) throw()' extern
| | |-ParmVarDecl 0x8fff00 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:340:37> col:37 __x 'double'
| | `-ConstAttr 0x900048 <col:44>
| |-FunctionDecl 0x9009d0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:344:25 fromfp '__intmax_t (double, int, unsigned int) throw()' extern
| | |-ParmVarDecl 0x9000d8 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:344:45> col:45 __x 'double'
| | |-ParmVarDecl 0x900158 <col:50, col:54> col:54 __round 'int'
| | `-ParmVarDecl 0x9008a8 <line:345:7, col:20> col:20 __width 'unsigned int'
| |-FunctionDecl 0x900c48 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:116:1 __fromfp '__intmax_t (double, int, unsigned int) throw()' extern
| | |-ParmVarDecl 0x900aa0 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:344:45> col:45 __x 'double'
| | |-ParmVarDecl 0x900b20 <col:50, col:54> col:54 __round 'int'
| | `-ParmVarDecl 0x900ba0 <line:345:7, col:20> col:20 __width 'unsigned int'
| |-FunctionDecl 0x900f60 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:349:26 ufromfp '__uintmax_t (double, int, unsigned int) throw()' extern
| | |-ParmVarDecl 0x900d38 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:349:47> col:47 __x 'double'
| | |-ParmVarDecl 0x900db8 <col:52, col:56> col:56 __round 'int'
| | `-ParmVarDecl 0x900e38 <line:350:9, col:22> col:22 __width 'unsigned int'
| |-FunctionDecl 0x9011d8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:117:1 __ufromfp '__uintmax_t (double, int, unsigned int) throw()' extern
| | |-ParmVarDecl 0x901030 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:349:47> col:47 __x 'double'
| | |-ParmVarDecl 0x9010b0 <col:52, col:56> col:56 __round 'int'
| | `-ParmVarDecl 0x901130 <line:350:9, col:22> col:22 __width 'unsigned int'
| |-FunctionDecl 0x901450 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:355:25 fromfpx '__intmax_t (double, int, unsigned int) throw()' extern
| | |-ParmVarDecl 0x9012a8 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:355:46> col:46 __x 'double'
| | |-ParmVarDecl 0x901328 <col:51, col:55> col:55 __round 'int'
| | `-ParmVarDecl 0x9013a8 <line:356:8, col:21> col:21 __width 'unsigned int'
| |-FunctionDecl 0x9016c8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:118:1 __fromfpx '__intmax_t (double, int, unsigned int) throw()' extern
| | |-ParmVarDecl 0x901520 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:355:46> col:46 __x 'double'
| | |-ParmVarDecl 0x9015a0 <col:51, col:55> col:55 __round 'int'
| | `-ParmVarDecl 0x901620 <line:356:8, col:21> col:21 __width 'unsigned int'
| |-FunctionDecl 0x902e00 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:361:26 ufromfpx '__uintmax_t (double, int, unsigned int) throw()' extern
| | |-ParmVarDecl 0x901798 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:361:48> col:48 __x 'double'
| | |-ParmVarDecl 0x901818 <col:53, col:57> col:57 __round 'int'
| | `-ParmVarDecl 0x902d58 <line:362:10, col:23> col:23 __width 'unsigned int'
| |-FunctionDecl 0x903078 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:119:1 __ufromfpx '__uintmax_t (double, int, unsigned int) throw()' extern
| | |-ParmVarDecl 0x902ed0 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:361:48> col:48 __x 'double'
| | |-ParmVarDecl 0x902f50 <col:53, col:57> col:57 __round 'int'
| | `-ParmVarDecl 0x902fd0 <line:362:10, col:23> col:23 __width 'unsigned int'
| |-FunctionDecl 0x903270 </usr/include/math.h:283:3, line:280:66> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:365:14 fmaxmag 'double (double, double) throw()' extern
| | |-ParmVarDecl 0x903148 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:365:35> col:35 __x 'double'
| | |-ParmVarDecl 0x9031c8 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:365:50> col:50 __y 'double'
| | `-ConstAttr 0x903320 <col:57>
| |-FunctionDecl 0x9034b8 </usr/include/math.h:283:3, line:281:79> <scratch space>:120:1 __fmaxmag 'double (double, double) throw()' extern
| | |-ParmVarDecl 0x903390 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:365:35> col:35 __x 'double'
| | |-ParmVarDecl 0x903410 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:365:50> col:50 __y 'double'
| | `-ConstAttr 0x903568 <col:57>
| |-FunctionDecl 0x903700 </usr/include/math.h:283:3, line:280:66> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:368:14 fminmag 'double (double, double) throw()' extern
| | |-ParmVarDecl 0x9035d8 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:368:35> col:35 __x 'double'
| | |-ParmVarDecl 0x903658 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:368:50> col:50 __y 'double'
| | `-ConstAttr 0x9037b0 <col:57>
| |-FunctionDecl 0x903948 </usr/include/math.h:283:3, line:281:79> <scratch space>:121:1 __fminmag 'double (double, double) throw()' extern
| | |-ParmVarDecl 0x903820 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:368:35> col:35 __x 'double'
| | |-ParmVarDecl 0x9038a0 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:368:50> col:50 __y 'double'
| | `-ConstAttr 0x9039f8 <col:57>
| |-FunctionDecl 0x903c38 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:371:20 canonicalize 'int (double *, const double *) throw()' extern
| | |-ParmVarDecl 0x903a68 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:371:47> col:47 __cx 'double *'
| | `-ParmVarDecl 0x903b10 <col:53, col:70> col:70 __x 'const double *'
| |-FunctionDecl 0x904268 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:226:54> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:376:20 totalorder 'int (const double *, const double *) throw()' extern
| | |-ParmVarDecl 0x9040c0 <col:34, col:51> col:51 __x 'const double *'
| | |-ParmVarDecl 0x904140 <line:377:6, col:23> col:23 __y 'const double *'
| | `-PureAttr 0x904318 </usr/include/x86_64-linux-gnu/sys/cdefs.h:226:45>
| |-FunctionDecl 0x9044b0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:226:54> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:381:20 totalordermag 'int (const double *, const double *) throw()' extern
| | |-ParmVarDecl 0x904388 <col:37, col:54> col:54 __x 'const double *'
| | |-ParmVarDecl 0x904408 <line:382:9, col:26> col:26 __y 'const double *'
| | `-PureAttr 0x904560 </usr/include/x86_64-linux-gnu/sys/cdefs.h:226:45>
| |-FunctionDecl 0x9046d8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:386:13 getpayload 'double (const double *) throw()' extern
| | `-ParmVarDecl 0x9045d0 <col:27, col:44> col:44 __x 'const double *'
| |-FunctionDecl 0x904838 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:123:1 __getpayload 'double (const double *) throw()' extern
| | `-ParmVarDecl 0x904798 </usr/include/x86_64-linux-gnu/bits/mathcalls.h:386:27, col:44> col:44 __x 'const double *'
| |-FunctionDecl 0x904a98 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:389:20 setpayload 'int (double *, double) throw()' extern
| | |-ParmVarDecl 0x9048f8 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:389:45> col:45 __x 'double *'
| | `-ParmVarDecl 0x904978 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:389:60> col:60 __payload 'double'
| |-FunctionDecl 0x904c88 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:392:20 setpayloadsig 'int (double *, double) throw()' extern
| | |-ParmVarDecl 0x904b60 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:392:48> col:48 __x 'double *'
| | `-ParmVarDecl 0x904be0 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:392:63> col:63 __payload 'double'
| |-FunctionDecl 0x904e78 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:400:13 scalb 'double (double, double) throw()' extern
| | |-ParmVarDecl 0x904d50 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:400:32> col:32 __x 'double'
| | `-ParmVarDecl 0x904dd0 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:400:47> col:47 __n 'double'
| |-FunctionDecl 0x9072a0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:124:1 __scalb 'double (double, double) throw()' extern
| | |-ParmVarDecl 0x904f40 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:400:32> col:32 __x 'double'
| | `-ParmVarDecl 0x904fc0 </usr/include/math.h:285:20, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:400:47> col:47 __n 'double'
| |-FunctionDecl 0x907468 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:22:32> <scratch space>:125:1 __fpclassifyf 'int (float) throw()' extern
| | |-ParmVarDecl 0x907368 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:21:46> col:46 __value 'float'
| | `-ConstAttr 0x907510 <line:22:22>
| |-FunctionDecl 0x907620 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:26:32> <scratch space>:126:1 __signbitf 'int (float) throw()' extern
| | |-ParmVarDecl 0x907580 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:25:43> col:43 __value 'float'
| | `-ConstAttr 0x9076c8 <line:26:22>
| |-FunctionDecl 0x9077d8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:30:77> <scratch space>:127:1 __isinff 'int (float) throw()' extern
| | |-ParmVarDecl 0x907738 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:30:41> col:41 __value 'float'
| | `-ConstAttr 0x907880 <col:67>
| |-FunctionDecl 0x907990 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:33:78> <scratch space>:128:1 __finitef 'int (float) throw()' extern
| | |-ParmVarDecl 0x9078f0 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:33:42> col:42 __value 'float'
| | |-ConstAttr 0x907a38 <col:68>
| | `-NoThrowAttr 0x907ac0 <<scratch space>:128:1> Implicit
| |-FunctionDecl 0x907ba0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:36:77> <scratch space>:129:1 __isnanf 'int (float) throw()' extern
| | |-ParmVarDecl 0x907b00 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:36:41> col:41 __value 'float'
| | `-ConstAttr 0x907c48 <col:67>
| |-FunctionDecl 0x907e58 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:130:1 used __iseqsigf 'int (float, float) throw()' extern
| | |-ParmVarDecl 0x907cb8 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:39:43> col:43 __x 'float'
| | `-ParmVarDecl 0x907d38 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:39:58> col:58 __y 'float'
| |-FunctionDecl 0x907fc0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:43:32> <scratch space>:131:1 used __issignalingf 'int (float) throw()' extern
| | |-ParmVarDecl 0x907f20 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:42:47> col:47 __value 'float'
| | `-ConstAttr 0x908068 <line:43:22>
| |-FunctionDecl 0x9081d8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:132:1 acosf 'float (float) throw()' extern
| | |-ParmVarDecl 0x9080d8 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:53:31> col:31 __x 'float'
| | `-NoThrowAttr 0x9082e0 <<scratch space>:132:1> Implicit
| |-FunctionDecl 0x9083f0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:134:1 __acosf 'float (float) throw()' extern
| | `-ParmVarDecl 0x908350 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:53:31> col:31 __x 'float'
| |-FunctionDecl 0x908550 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:135:1 asinf 'float (float) throw()' extern
| | |-ParmVarDecl 0x9084b0 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:55:31> col:31 __x 'float'
| | `-NoThrowAttr 0x9085f8 <<scratch space>:135:1> Implicit
| |-FunctionDecl 0x908708 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:137:1 __asinf 'float (float) throw()' extern
| | `-ParmVarDecl 0x908668 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:55:31> col:31 __x 'float'
| |-FunctionDecl 0x908868 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:138:1 atanf 'float (float) throw()' extern
| | |-ParmVarDecl 0x9087c8 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:57:31> col:31 __x 'float'
| | `-NoThrowAttr 0x908910 <<scratch space>:138:1> Implicit
| |-FunctionDecl 0x908a20 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:140:1 __atanf 'float (float) throw()' extern
| | `-ParmVarDecl 0x908980 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:57:31> col:31 __x 'float'
| |-FunctionDecl 0x908c88 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:141:1 atan2f 'float (float, float) throw()' extern
| | |-ParmVarDecl 0x908ae0 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:59:32> col:32 __y 'float'
| | |-ParmVarDecl 0x908b60 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:59:47> col:47 __x 'float'
| | `-NoThrowAttr 0x908d78 <<scratch space>:141:1> Implicit
| |-FunctionDecl 0x908f10 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:143:1 __atan2f 'float (float, float) throw()' extern
| | |-ParmVarDecl 0x908de8 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:59:32> col:32 __y 'float'
| | `-ParmVarDecl 0x908e68 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:59:47> col:47 __x 'float'
| |-FunctionDecl 0x909078 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:146:1 cosf 'float (float) throw()' extern
| | |-ParmVarDecl 0x908fd8 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:62:34> col:34 __x 'float'
| | `-NoThrowAttr 0x909120 <<scratch space>:146:1> Implicit
| |-FunctionDecl 0x90a2d0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:148:1 __cosf 'float (float) throw()' extern
| | `-ParmVarDecl 0x909190 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:62:34> col:34 __x 'float'
| |-FunctionDecl 0x90a430 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:151:1 sinf 'float (float) throw()' extern
| | |-ParmVarDecl 0x90a390 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:64:34> col:34 __x 'float'
| | `-NoThrowAttr 0x90a4d8 <<scratch space>:151:1> Implicit
| |-FunctionDecl 0x90a5e8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:153:1 __sinf 'float (float) throw()' extern
| | `-ParmVarDecl 0x90a548 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:64:34> col:34 __x 'float'
| |-FunctionDecl 0x90a748 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:154:1 tanf 'float (float) throw()' extern
| | |-ParmVarDecl 0x90a6a8 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:66:30> col:30 __x 'float'
| | `-NoThrowAttr 0x90a7f0 <<scratch space>:154:1> Implicit
| |-FunctionDecl 0x90a900 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:156:1 __tanf 'float (float) throw()' extern
| | `-ParmVarDecl 0x90a860 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:66:30> col:30 __x 'float'
| |-FunctionDecl 0x90aa60 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:157:1 coshf 'float (float) throw()' extern
| | |-ParmVarDecl 0x90a9c0 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:71:31> col:31 __x 'float'
| | `-NoThrowAttr 0x90ab08 <<scratch space>:157:1> Implicit
| |-FunctionDecl 0x90ac18 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:159:1 __coshf 'float (float) throw()' extern
| | `-ParmVarDecl 0x90ab78 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:71:31> col:31 __x 'float'
| |-FunctionDecl 0x90ad78 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:160:1 sinhf 'float (float) throw()' extern
| | |-ParmVarDecl 0x90acd8 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:73:31> col:31 __x 'float'
| | `-NoThrowAttr 0x90ae20 <<scratch space>:160:1> Implicit
| |-FunctionDecl 0x90af30 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:162:1 __sinhf 'float (float) throw()' extern
| | `-ParmVarDecl 0x90ae90 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:73:31> col:31 __x 'float'
| |-FunctionDecl 0x90b090 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:163:1 tanhf 'float (float) throw()' extern
| | |-ParmVarDecl 0x90aff0 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:75:31> col:31 __x 'float'
| | `-NoThrowAttr 0x90b138 <<scratch space>:163:1> Implicit
| |-FunctionDecl 0x92b6f0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:165:1 __tanhf 'float (float) throw()' extern
| | `-ParmVarDecl 0x90b1a8 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:75:31> col:31 __x 'float'
| |-FunctionDecl 0x92ba10 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:168:1 sincosf 'void (float, float *, float *) throw()' extern
| | |-ParmVarDecl 0x92b7b0 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:80:14> col:14 __x 'float'
| | |-ParmVarDecl 0x92b860 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:80:30> col:30 __sinx 'float *'
| | `-ParmVarDecl 0x92b8e0 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:80:49> col:49 __cosx 'float *'
| |-FunctionDecl 0x92bc88 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:170:1 __sincosf 'void (float, float *, float *) throw()' extern
| | |-ParmVarDecl 0x92bae0 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:80:14> col:14 __x 'float'
| | |-ParmVarDecl 0x92bb60 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:80:30> col:30 __sinx 'float *'
| | `-ParmVarDecl 0x92bbe0 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:80:49> col:49 __cosx 'float *'
| |-FunctionDecl 0x92bdf8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:171:1 acoshf 'float (float) throw()' extern
| | |-ParmVarDecl 0x92bd58 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:85:32> col:32 __x 'float'
| | `-NoThrowAttr 0x92bea0 <<scratch space>:171:1> Implicit
| |-FunctionDecl 0x92bfb0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:173:1 __acoshf 'float (float) throw()' extern
| | `-ParmVarDecl 0x92bf10 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:85:32> col:32 __x 'float'
| |-FunctionDecl 0x92c110 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:174:1 asinhf 'float (float) throw()' extern
| | |-ParmVarDecl 0x92c070 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:87:32> col:32 __x 'float'
| | `-NoThrowAttr 0x92c1b8 <<scratch space>:174:1> Implicit
| |-FunctionDecl 0x92c2c8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:176:1 __asinhf 'float (float) throw()' extern
| | `-ParmVarDecl 0x92c228 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:87:32> col:32 __x 'float'
| |-FunctionDecl 0x92c428 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:177:1 atanhf 'float (float) throw()' extern
| | |-ParmVarDecl 0x92c388 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:89:32> col:32 __x 'float'
| | `-NoThrowAttr 0x92c4d0 <<scratch space>:177:1> Implicit
| |-FunctionDecl 0x92c5e0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:179:1 __atanhf 'float (float) throw()' extern
| | `-ParmVarDecl 0x92c540 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:89:32> col:32 __x 'float'
| |-FunctionDecl 0x90d390 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:182:1 expf 'float (float) throw()' extern
| | |-ParmVarDecl 0x90d2f0 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:95:34> col:34 __x 'float'
| | `-NoThrowAttr 0x90d438 <<scratch space>:182:1> Implicit
| |-FunctionDecl 0x90d548 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:184:1 __expf 'float (float) throw()' extern
| | `-ParmVarDecl 0x90d4a8 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:95:34> col:34 __x 'float'
| |-FunctionDecl 0x90d7a8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:185:1 frexpf 'float (float, int *) throw()' extern
| | |-ParmVarDecl 0x90d608 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:98:32> col:32 __x 'float'
| | |-ParmVarDecl 0x90d688 <col:37, col:42> col:42 __exponent 'int *'
| | `-NoThrowAttr 0x90d898 <<scratch space>:185:1> Implicit
| |-FunctionDecl 0x90da30 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:187:1 __frexpf 'float (float, int *) throw()' extern
| | |-ParmVarDecl 0x90d908 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:98:32> col:32 __x 'float'
| | `-ParmVarDecl 0x90d988 <col:37, col:42> col:42 __exponent 'int *'
| |-FunctionDecl 0x90dc98 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:188:1 ldexpf 'float (float, int) throw()' extern
| | |-ParmVarDecl 0x90daf8 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:101:32> col:32 __x 'float'
| | |-ParmVarDecl 0x90db78 <col:37, col:41> col:41 __exponent 'int'
| | `-NoThrowAttr 0x90dd88 <<scratch space>:188:1> Implicit
| |-FunctionDecl 0x90df20 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:190:1 __ldexpf 'float (float, int) throw()' extern
| | |-ParmVarDecl 0x90ddf8 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:101:32> col:32 __x 'float'
| | `-ParmVarDecl 0x90de78 <col:37, col:41> col:41 __exponent 'int'
| |-FunctionDecl 0x90e088 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:193:1 logf 'float (float) throw()' extern
| | |-ParmVarDecl 0x90dfe8 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:104:34> col:34 __x 'float'
| | `-NoThrowAttr 0x90e130 <<scratch space>:193:1> Implicit
| |-FunctionDecl 0x90e240 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:195:1 __logf 'float (float) throw()' extern
| | `-ParmVarDecl 0x90e1a0 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:104:34> col:34 __x 'float'
| |-FunctionDecl 0x90e3b8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:196:1 log10f 'float (float) throw()' extern
| | |-ParmVarDecl 0x90e318 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:107:32> col:32 __x 'float'
| | `-NoThrowAttr 0x90e460 <<scratch space>:196:1> Implicit
| |-FunctionDecl 0x90e570 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:198:1 __log10f 'float (float) throw()' extern
| | `-ParmVarDecl 0x90e4d0 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:107:32> col:32 __x 'float'
| |-FunctionDecl 0x90e7d8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:199:1 modff 'float (float, float *) throw()' extern
| | |-ParmVarDecl 0x90e630 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:110:31> col:31 __x 'float'
| | |-ParmVarDecl 0x90e6b0 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:110:47> col:47 __iptr 'float *'
| | `-NoThrowAttr 0x90e8c8 <<scratch space>:199:1> Implicit
| |-FunctionDecl 0x90ea80 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> <scratch space>:201:1 __modff 'float (float, float *) throw()' extern
| | |-ParmVarDecl 0x90e938 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:110:31> col:31 __x 'float'
| | |-ParmVarDecl 0x90e9b8 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:110:47> col:47 __iptr 'float *'
| | `-NonNullAttr 0x90eb30 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:110:69> 2
| |-FunctionDecl 0x90ec50 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:203:1 exp10f 'float (float) throw()' extern
| | `-ParmVarDecl 0x90ebb0 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:114:32> col:32 __x 'float'
| |-FunctionDecl 0x90edb0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:205:1 __exp10f 'float (float) throw()' extern
| | |-ParmVarDecl 0x90ed10 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:114:32> col:32 __x 'float'
| | `-NoThrowAttr 0x90ee58 <<scratch space>:205:1> Implicit
| |-FunctionDecl 0x90ef68 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:206:1 expm1f 'float (float) throw()' extern
| | |-ParmVarDecl 0x90eec8 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:119:32> col:32 __x 'float'
| | `-NoThrowAttr 0x90f010 <<scratch space>:206:1> Implicit
| |-FunctionDecl 0x90f120 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:208:1 __expm1f 'float (float) throw()' extern
| | `-ParmVarDecl 0x90f080 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:119:32> col:32 __x 'float'
| |-FunctionDecl 0x90f310 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:209:1 log1pf 'float (float) throw()' extern
| | |-ParmVarDecl 0x90f1e0 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:122:32> col:32 __x 'float'
| | `-NoThrowAttr 0x90f3b8 <<scratch space>:209:1> Implicit
| |-FunctionDecl 0x90f4c8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:211:1 __log1pf 'float (float) throw()' extern
| | `-ParmVarDecl 0x90f428 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:122:32> col:32 __x 'float'
| |-FunctionDecl 0x90f628 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:212:1 logbf 'float (float) throw()' extern
| | |-ParmVarDecl 0x90f588 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:125:31> col:31 __x 'float'
| | `-NoThrowAttr 0x90f6d0 <<scratch space>:212:1> Implicit
| |-FunctionDecl 0x90f7e0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:214:1 __logbf 'float (float) throw()' extern
| | `-ParmVarDecl 0x90f740 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:125:31> col:31 __x 'float'
| |-FunctionDecl 0x90f940 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:215:1 exp2f 'float (float) throw()' extern
| | |-ParmVarDecl 0x90f8a0 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:130:31> col:31 __x 'float'
| | `-NoThrowAttr 0x90f9e8 <<scratch space>:215:1> Implicit
| |-FunctionDecl 0x90faf8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:217:1 __exp2f 'float (float) throw()' extern
| | `-ParmVarDecl 0x90fa58 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:130:31> col:31 __x 'float'
| |-FunctionDecl 0x90fc58 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:218:1 log2f 'float (float) throw()' extern
| | |-ParmVarDecl 0x90fbb8 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:133:31> col:31 __x 'float'
| | `-NoThrowAttr 0x90fd00 <<scratch space>:218:1> Implicit
| |-FunctionDecl 0x90fe10 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:220:1 __log2f 'float (float) throw()' extern
| | `-ParmVarDecl 0x90fd70 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:133:31> col:31 __x 'float'
| |-FunctionDecl 0x90fff8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:223:1 powf 'float (float, float) throw()' extern
| | |-ParmVarDecl 0x90fed0 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:140:34> col:34 __x 'float'
| | |-ParmVarDecl 0x90ff50 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:140:49> col:49 __y 'float'
| | `-NoThrowAttr 0x9100a8 <<scratch space>:223:1> Implicit
| |-FunctionDecl 0x910240 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:225:1 __powf 'float (float, float) throw()' extern
| | |-ParmVarDecl 0x910118 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:140:34> col:34 __x 'float'
| | `-ParmVarDecl 0x910198 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:140:49> col:49 __y 'float'
| |-FunctionDecl 0x9103c0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:226:1 sqrtf 'float (float) throw()' extern
| | |-ParmVarDecl 0x910320 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:143:31> col:31 __x 'float'
| | `-NoThrowAttr 0x910468 <<scratch space>:226:1> Implicit
| |-FunctionDecl 0x910578 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:228:1 __sqrtf 'float (float) throw()' extern
| | `-ParmVarDecl 0x9104d8 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:143:31> col:31 __x 'float'
| |-FunctionDecl 0x910760 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:229:1 hypotf 'float (float, float) throw()' extern
| | |-ParmVarDecl 0x910638 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:147:32> col:32 __x 'float'
| | |-ParmVarDecl 0x9106b8 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:147:47> col:47 __y 'float'
| | `-NoThrowAttr 0x910810 <<scratch space>:229:1> Implicit
| |-FunctionDecl 0x9109a8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:231:1 __hypotf 'float (float, float) throw()' extern
| | |-ParmVarDecl 0x910880 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:147:32> col:32 __x 'float'
| | `-ParmVarDecl 0x910900 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:147:47> col:47 __y 'float'
| |-FunctionDecl 0x910b10 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:232:1 cbrtf 'float (float) throw()' extern
| | |-ParmVarDecl 0x910a70 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:152:31> col:31 __x 'float'
| | |-NoThrowAttr 0x910bb8 <<scratch space>:232:1> Implicit
| | `-ConstAttr 0x910c10 <col:1> Implicit
| |-FunctionDecl 0x910cf0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:234:1 __cbrtf 'float (float) throw()' extern
| | `-ParmVarDecl 0x910c50 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:152:31> col:31 __x 'float'
| |-FunctionDecl 0x910e50 </usr/include/math.h:283:3, line:280:66> <scratch space>:235:1 ceilf 'float (float) throw()' extern
| | |-ParmVarDecl 0x910db0 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:159:32> col:32 __x 'float'
| | |-ConstAttr 0x910ef8 <col:39>
| | `-NoThrowAttr 0x910f50 <<scratch space>:235:1> Implicit
| |-FunctionDecl 0x911030 </usr/include/math.h:283:3, line:281:79> <scratch space>:237:1 __ceilf 'float (float) throw()' extern
| | |-ParmVarDecl 0x910f90 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:159:32> col:32 __x 'float'
| | `-ConstAttr 0x9110d8 <col:39>
| |-FunctionDecl 0x9111e8 </usr/include/math.h:283:3, line:280:66> <scratch space>:238:1 fabsf 'float (float) throw()' extern
| | |-ParmVarDecl 0x911148 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:162:32> col:32 __x 'float'
| | |-ConstAttr 0x911290 <col:39>
| | `-NoThrowAttr 0x9112e8 <<scratch space>:238:1> Implicit
| |-FunctionDecl 0x9113e8 </usr/include/math.h:283:3, line:281:79> <scratch space>:240:1 __fabsf 'float (float) throw()' extern
| | |-ParmVarDecl 0x911348 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:162:32> col:32 __x 'float'
| | `-ConstAttr 0x911490 <col:39>
| |-FunctionDecl 0x9115a0 </usr/include/math.h:283:3, line:280:66> <scratch space>:241:1 floorf 'float (float) throw()' extern
| | |-ParmVarDecl 0x911500 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:165:33> col:33 __x 'float'
| | |-ConstAttr 0x911648 <col:40>
| | `-NoThrowAttr 0x9116a0 <<scratch space>:241:1> Implicit
| |-FunctionDecl 0x911780 </usr/include/math.h:283:3, line:281:79> <scratch space>:243:1 __floorf 'float (float) throw()' extern
| | |-ParmVarDecl 0x9116e0 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:165:33> col:33 __x 'float'
| | `-ConstAttr 0x911828 <col:40>
| |-FunctionDecl 0x9119c0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:244:1 fmodf 'float (float, float) throw()' extern
| | |-ParmVarDecl 0x911898 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:168:31> col:31 __x 'float'
| | |-ParmVarDecl 0x911918 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:168:46> col:46 __y 'float'
| | `-NoThrowAttr 0x911a70 <<scratch space>:244:1> Implicit
| |-FunctionDecl 0x911c08 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:246:1 __fmodf 'float (float, float) throw()' extern
| | |-ParmVarDecl 0x911ae0 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:168:31> col:31 __x 'float'
| | `-ParmVarDecl 0x911b60 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:168:46> col:46 __y 'float'
| |-FunctionDecl 0x911d70 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:177:74> <scratch space>:247:1 isinff 'int (float) throw()' extern
| | |-ParmVarDecl 0x911cd0 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:177:38> col:38 __value 'float'
| | `-ConstAttr 0x911e18 <col:64>
| |-FunctionDecl 0x911f28 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:182:75> <scratch space>:248:1 finitef 'int (float) throw()' extern
| | |-ParmVarDecl 0x911e88 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:182:39> col:39 __value 'float'
| | |-ConstAttr 0x911fd0 <col:65>
| | `-NoThrowAttr 0x912028 <<scratch space>:248:1> Implicit
| |-FunctionDecl 0x912190 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:249:1 dremf 'float (float, float) throw()' extern
| | |-ParmVarDecl 0x912068 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:185:31> col:31 __x 'float'
| | `-ParmVarDecl 0x9120e8 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:185:46> col:46 __y 'float'
| |-FunctionDecl 0x9123e8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:251:1 __dremf 'float (float, float) throw()' extern
| | |-ParmVarDecl 0x912258 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:185:31> col:31 __x 'float'
| | `-ParmVarDecl 0x912340 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:185:46> col:46 __y 'float'
| |-FunctionDecl 0x912550 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:252:1 significandf 'float (float) throw()' extern
| | `-ParmVarDecl 0x9124b0 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:189:38> col:38 __x 'float'
| |-FunctionDecl 0x9126b0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:254:1 __significandf 'float (float) throw()' extern
| | `-ParmVarDecl 0x912610 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:189:38> col:38 __x 'float'
| |-FunctionDecl 0x912898 </usr/include/math.h:283:3, line:280:66> <scratch space>:255:1 copysignf 'float (float, float) throw()' extern
| | |-ParmVarDecl 0x912770 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:196:36> col:36 __x 'float'
| | |-ParmVarDecl 0x9127f0 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:196:51> col:51 __y 'float'
| | |-ConstAttr 0x912948 <col:58>
| | `-NoThrowAttr 0x9129a0 <<scratch space>:255:1> Implicit
| |-FunctionDecl 0x912b08 </usr/include/math.h:283:3, line:281:79> <scratch space>:257:1 __copysignf 'float (float, float) throw()' extern
| | |-ParmVarDecl 0x9129e0 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:196:36> col:36 __x 'float'
| | |-ParmVarDecl 0x912a60 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:196:51> col:51 __y 'float'
| | `-ConstAttr 0x912bb8 <col:58>
| |-FunctionDecl 0x912d28 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:258:1 nanf 'float (const char *) throw()' extern
| | |-ParmVarDecl 0x912c28 </usr/include/x86_64-linux-gnu/bits/mathcalls.h:201:20, col:32> col:32 __tagb 'const char *'
| | |-NoThrowAttr 0x912e00 <<scratch space>:258:1> Implicit
| | `-PureAttr 0x912e58 <col:1> Implicit
| |-FunctionDecl 0x912f38 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:260:1 __nanf 'float (const char *) throw()' extern
| | `-ParmVarDecl 0x912e98 </usr/include/x86_64-linux-gnu/bits/mathcalls.h:201:20, col:32> col:32 __tagb 'const char *'
| |-FunctionDecl 0x913098 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:211:74> <scratch space>:261:1 isnanf 'int (float) throw()' extern
| | |-ParmVarDecl 0x912ff8 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:211:38> col:38 __value 'float'
| | `-ConstAttr 0x913140 <col:64>
| |-FunctionDecl 0x913250 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:262:1 j0f 'float (float) throw()' extern
| | `-ParmVarDecl 0x9131b0 </usr/include/math.h:302:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:217:28 'float'
| |-FunctionDecl 0x9133f0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:264:1 __j0f 'float (float) throw()' extern
| | `-ParmVarDecl 0x913350 </usr/include/math.h:302:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:217:28 'float'
| |-FunctionDecl 0x913550 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:265:1 j1f 'float (float) throw()' extern
| | `-ParmVarDecl 0x9134b0 </usr/include/math.h:302:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:218:28 'float'
| |-FunctionDecl 0x9136b0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:267:1 __j1f 'float (float) throw()' extern
| | `-ParmVarDecl 0x913610 </usr/include/math.h:302:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:218:28 'float'
| |-FunctionDecl 0x913918 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:268:1 jnf 'float (int, float) throw()' extern
| | |-ParmVarDecl 0x913770 </usr/include/x86_64-linux-gnu/bits/mathcalls.h:219:19> col:22 'int'
| | `-ParmVarDecl 0x9137f0 </usr/include/math.h:302:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:219:33 'float'
| |-FunctionDecl 0x913b08 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:270:1 __jnf 'float (int, float) throw()' extern
| | |-ParmVarDecl 0x9139e0 </usr/include/x86_64-linux-gnu/bits/mathcalls.h:219:19> col:22 'int'
| | `-ParmVarDecl 0x913a60 </usr/include/math.h:302:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:219:33 'float'
| |-FunctionDecl 0x913c70 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:271:1 y0f 'float (float) throw()' extern
| | `-ParmVarDecl 0x913bd0 </usr/include/math.h:302:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:220:28 'float'
| |-FunctionDecl 0x913dd0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:273:1 __y0f 'float (float) throw()' extern
| | `-ParmVarDecl 0x913d30 </usr/include/math.h:302:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:220:28 'float'
| |-FunctionDecl 0x913f30 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:274:1 y1f 'float (float) throw()' extern
| | `-ParmVarDecl 0x913e90 </usr/include/math.h:302:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:221:28 'float'
| |-FunctionDecl 0x914090 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:276:1 __y1f 'float (float) throw()' extern
| | `-ParmVarDecl 0x913ff0 </usr/include/math.h:302:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:221:28 'float'
| |-FunctionDecl 0x914278 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:277:1 ynf 'float (int, float) throw()' extern
| | |-ParmVarDecl 0x914150 </usr/include/x86_64-linux-gnu/bits/mathcalls.h:222:19> col:22 'int'
| | `-ParmVarDecl 0x9141d0 </usr/include/math.h:302:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:222:33 'float'
| |-FunctionDecl 0x915498 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:279:1 __ynf 'float (int, float) throw()' extern
| | |-ParmVarDecl 0x915370 </usr/include/x86_64-linux-gnu/bits/mathcalls.h:222:19> col:22 'int'
| | `-ParmVarDecl 0x9153f0 </usr/include/math.h:302:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:222:33 'float'
| |-FunctionDecl 0x915600 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:280:1 erff 'float (float) throw()' extern
| | |-ParmVarDecl 0x915560 </usr/include/math.h:302:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:228:29 'float'
| | `-NoThrowAttr 0x9156a8 <<scratch space>:280:1> Implicit
| |-FunctionDecl 0x9157b8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:282:1 __erff 'float (float) throw()' extern
| | `-ParmVarDecl 0x915718 </usr/include/math.h:302:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:228:29 'float'
| |-FunctionDecl 0x915918 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:283:1 erfcf 'float (float) throw()' extern
| | |-ParmVarDecl 0x915878 </usr/include/math.h:302:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:229:30 'float'
| | `-NoThrowAttr 0x9159c0 <<scratch space>:283:1> Implicit
| |-FunctionDecl 0x915ad0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:285:1 __erfcf 'float (float) throw()' extern
| | `-ParmVarDecl 0x915a30 </usr/include/math.h:302:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:229:30 'float'
| |-FunctionDecl 0x915c30 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:286:1 lgammaf 'float (float) throw()' extern
| | |-ParmVarDecl 0x915b90 </usr/include/math.h:302:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:230:32 'float'
| | `-NoThrowAttr 0x915cd8 <<scratch space>:286:1> Implicit
| |-FunctionDecl 0x915de8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:288:1 __lgammaf 'float (float) throw()' extern
| | `-ParmVarDecl 0x915d48 </usr/include/math.h:302:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:230:32 'float'
| |-FunctionDecl 0x915f48 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:289:1 tgammaf 'float (float) throw()' extern
| | |-ParmVarDecl 0x915ea8 </usr/include/math.h:302:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:235:32 'float'
| | `-NoThrowAttr 0x915ff0 <<scratch space>:289:1> Implicit
| |-FunctionDecl 0x916100 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:291:1 __tgammaf 'float (float) throw()' extern
| | `-ParmVarDecl 0x916060 </usr/include/math.h:302:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:235:32 'float'
| |-FunctionDecl 0x916260 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:292:1 gammaf 'float (float) throw()' extern
| | `-ParmVarDecl 0x9161c0 </usr/include/math.h:302:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:241:31 'float'
| |-FunctionDecl 0x916420 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:294:1 __gammaf 'float (float) throw()' extern
| | `-ParmVarDecl 0x916380 </usr/include/math.h:302:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:241:31 'float'
| |-FunctionDecl 0x916608 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:296:1 lgammaf_r 'float (float, int *) throw()' extern
| | |-ParmVarDecl 0x9164e0 </usr/include/math.h:302:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:249:34 'float'
| | `-ParmVarDecl 0x916560 <col:36, col:41> col:41 __signgamp 'int *'
| |-FunctionDecl 0x9167f8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:299:1 __lgammaf_r 'float (float, int *) throw()' extern
| | |-ParmVarDecl 0x9166d0 </usr/include/math.h:302:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:249:34 'float'
| | `-ParmVarDecl 0x916750 <col:36, col:41> col:41 __signgamp 'int *'
| |-FunctionDecl 0x916960 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:300:1 rintf 'float (float) throw()' extern
| | |-ParmVarDecl 0x9168c0 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:256:31> col:31 __x 'float'
| | |-NoThrowAttr 0x916a08 <<scratch space>:300:1> Implicit
| | `-ConstAttr 0x916a60 <col:1> Implicit
| |-FunctionDecl 0x916b40 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:302:1 __rintf 'float (float) throw()' extern
| | `-ParmVarDecl 0x916aa0 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:256:31> col:31 __x 'float'
| |-FunctionDecl 0x916d28 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:303:1 nextafterf 'float (float, float) throw()' extern
| | |-ParmVarDecl 0x916c00 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:259:36> col:36 __x 'float'
| | |-ParmVarDecl 0x916c80 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:259:51> col:51 __y 'float'
| | `-NoThrowAttr 0x916dd8 <<scratch space>:303:1> Implicit
| |-FunctionDecl 0x916f70 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:305:1 __nextafterf 'float (float, float) throw()' extern
| | |-ParmVarDecl 0x916e48 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:259:36> col:36 __x 'float'
| | `-ParmVarDecl 0x916ec8 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:259:51> col:51 __y 'float'
| |-FunctionDecl 0x9171d8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:306:1 nexttowardf 'float (float, long double) throw()' extern
| | |-ParmVarDecl 0x917038 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:261:37> col:37 __x 'float'
| | |-ParmVarDecl 0x9170b8 <col:42, col:54> col:54 __y 'long double'
| | `-NoThrowAttr 0x9172c8 <<scratch space>:306:1> Implicit
| |-FunctionDecl 0x9174b8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:308:1 __nexttowardf 'float (float, long double) throw()' extern
| | |-ParmVarDecl 0x917390 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:261:37> col:37 __x 'float'
| | `-ParmVarDecl 0x917410 <col:42, col:54> col:54 __y 'long double'
| |-FunctionDecl 0x917620 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:310:1 nextdownf 'float (float) throw()' extern
| | `-ParmVarDecl 0x917580 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:266:35> col:35 __x 'float'
| |-FunctionDecl 0x917780 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:312:1 __nextdownf 'float (float) throw()' extern
| | `-ParmVarDecl 0x9176e0 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:266:35> col:35 __x 'float'
| |-FunctionDecl 0x9178e0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:313:1 nextupf 'float (float) throw()' extern
| | `-ParmVarDecl 0x917840 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:268:33> col:33 __x 'float'
| |-FunctionDecl 0x917a40 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:315:1 __nextupf 'float (float) throw()' extern
| | `-ParmVarDecl 0x9179a0 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:268:33> col:33 __x 'float'
| |-FunctionDecl 0x917c28 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:316:1 remainderf 'float (float, float) throw()' extern
| | |-ParmVarDecl 0x917b00 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:36> col:36 __x 'float'
| | |-ParmVarDecl 0x917b80 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:51> col:51 __y 'float'
| | `-NoThrowAttr 0x917cd8 <<scratch space>:316:1> Implicit
| |-FunctionDecl 0x917e70 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:318:1 __remainderf 'float (float, float) throw()' extern
| | |-ParmVarDecl 0x917d48 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:36> col:36 __x 'float'
| | `-ParmVarDecl 0x917dc8 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:51> col:51 __y 'float'
| |-FunctionDecl 0x918060 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:319:1 scalbnf 'float (float, int) throw()' extern
| | |-ParmVarDecl 0x917f38 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:276:33> col:33 __x 'float'
| | |-ParmVarDecl 0x917fb8 <col:38, col:42> col:42 __n 'int'
| | `-NoThrowAttr 0x918110 <<scratch space>:319:1> Implicit
| |-FunctionDecl 0x9182a8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:321:1 __scalbnf 'float (float, int) throw()' extern
| | |-ParmVarDecl 0x918180 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:276:33> col:33 __x 'float'
| | `-ParmVarDecl 0x918200 <col:38, col:42> col:42 __n 'int'
| |-FunctionDecl 0x918440 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:322:1 ilogbf 'int (float) throw()' extern
| | |-ParmVarDecl 0x9183a0 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:280:36> col:36 __x 'float'
| | `-NoThrowAttr 0x9184e8 <<scratch space>:322:1> Implicit
| |-FunctionDecl 0x9185f8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:324:1 __ilogbf 'int (float) throw()' extern
| | `-ParmVarDecl 0x918558 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:280:36> col:36 __x 'float'
| |-FunctionDecl 0x9187b8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:326:1 llogbf 'long (float) throw()' extern
| | `-ParmVarDecl 0x9186b8 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:285:42> col:42 __x 'float'
| |-FunctionDecl 0x918918 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:328:1 __llogbf 'long (float) throw()' extern
| | `-ParmVarDecl 0x918878 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:285:42> col:42 __x 'float'
| |-FunctionDecl 0x918b78 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:329:1 scalblnf 'float (float, long) throw()' extern
| | |-ParmVarDecl 0x9189d8 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:290:34> col:34 __x 'float'
| | |-ParmVarDecl 0x918a58 <col:39, col:48> col:48 __n 'long'
| | `-NoThrowAttr 0x918c68 <<scratch space>:329:1> Implicit
| |-FunctionDecl 0x918e00 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:331:1 __scalblnf 'float (float, long) throw()' extern
| | |-ParmVarDecl 0x918cd8 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:290:34> col:34 __x 'float'
| | `-ParmVarDecl 0x918d58 <col:39, col:48> col:48 __n 'long'
| |-FunctionDecl 0x918f68 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:332:1 nearbyintf 'float (float) throw()' extern
| | |-ParmVarDecl 0x918ec8 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:294:36> col:36 __x 'float'
| | |-NoThrowAttr 0x919010 <<scratch space>:332:1> Implicit
| | `-ConstAttr 0x919068 <col:1> Implicit
| |-FunctionDecl 0x919148 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:334:1 __nearbyintf 'float (float) throw()' extern
| | `-ParmVarDecl 0x9190a8 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:294:36> col:36 __x 'float'
| |-FunctionDecl 0x9192a8 </usr/include/math.h:283:3, line:280:66> <scratch space>:335:1 roundf 'float (float) throw()' extern
| | |-ParmVarDecl 0x919208 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:33> col:33 __x 'float'
| | |-ConstAttr 0x919350 <col:40>
| | `-NoThrowAttr 0x8fd1e0 <<scratch space>:335:1> Implicit
| |-FunctionDecl 0x8fd2c0 </usr/include/math.h:283:3, line:281:79> <scratch space>:337:1 __roundf 'float (float) throw()' extern
| | |-ParmVarDecl 0x8fd220 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:33> col:33 __x 'float'
| | `-ConstAttr 0x8fd368 <col:40>
| |-FunctionDecl 0x8fd478 </usr/include/math.h:283:3, line:280:66> <scratch space>:338:1 truncf 'float (float) throw()' extern
| | |-ParmVarDecl 0x8fd3d8 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:302:33> col:33 __x 'float'
| | |-ConstAttr 0x8fd520 <col:40>
| | `-NoThrowAttr 0x8fd578 <<scratch space>:338:1> Implicit
| |-FunctionDecl 0x8fd658 </usr/include/math.h:283:3, line:281:79> <scratch space>:340:1 __truncf 'float (float) throw()' extern
| | |-ParmVarDecl 0x8fd5b8 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:302:33> col:33 __x 'float'
| | `-ConstAttr 0x8fd700 <col:40>
| |-FunctionDecl 0x8fd9a8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:341:1 remquof 'float (float, float, int *) throw()' extern
| | |-ParmVarDecl 0x8fd770 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:307:33> col:33 __x 'float'
| | |-ParmVarDecl 0x8fd7f0 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:307:48> col:48 __y 'float'
| | |-ParmVarDecl 0x8fd870 <col:53, col:58> col:58 __quo 'int *'
| | `-NoThrowAttr 0x8fdaa0 <<scratch space>:341:1> Implicit
| |-FunctionDecl 0x8fdcc0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:343:1 __remquof 'float (float, float, int *) throw()' extern
| | |-ParmVarDecl 0x8fdb10 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:307:33> col:33 __x 'float'
| | |-ParmVarDecl 0x8fdb90 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:307:48> col:48 __y 'float'
| | `-ParmVarDecl 0x8fdc10 <col:53, col:58> col:58 __quo 'int *'
| |-FunctionDecl 0x8fde30 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:344:1 lrintf 'long (float) throw()' extern
| | |-ParmVarDecl 0x8fdd90 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:314:41> col:41 __x 'float'
| | `-NoThrowAttr 0x8fdf10 <<scratch space>:344:1> Implicit
| |-FunctionDecl 0x8fe020 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:346:1 __lrintf 'long (float) throw()' extern
| | `-ParmVarDecl 0x8fdf80 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:314:41> col:41 __x 'float'
| |-FunctionDecl 0x91d3f8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:347:1 llrintf 'long long (float) throw()' extern
| | |-ParmVarDecl 0x8fe0e0 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:316:47> col:47 __x 'float'
| | `-NoThrowAttr 0x91d4d0 <<scratch space>:347:1> Implicit
| |-FunctionDecl 0x91d5e0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:349:1 __llrintf 'long long (float) throw()' extern
| | `-ParmVarDecl 0x91d540 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:316:47> col:47 __x 'float'
| |-FunctionDecl 0x91d740 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:350:1 lroundf 'long (float) throw()' extern
| | |-ParmVarDecl 0x91d6a0 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:320:42> col:42 __x 'float'
| | `-NoThrowAttr 0x91d7e8 <<scratch space>:350:1> Implicit
| |-FunctionDecl 0x91d8f8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:352:1 __lroundf 'long (float) throw()' extern
| | `-ParmVarDecl 0x91d858 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:320:42> col:42 __x 'float'
| |-FunctionDecl 0x91da58 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:353:1 llroundf 'long long (float) throw()' extern
| | |-ParmVarDecl 0x91d9b8 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:322:48> col:48 __x 'float'
| | `-NoThrowAttr 0x91db00 <<scratch space>:353:1> Implicit
| |-FunctionDecl 0x91dc10 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:355:1 __llroundf 'long long (float) throw()' extern
| | `-ParmVarDecl 0x91db70 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:322:48> col:48 __x 'float'
| |-FunctionDecl 0x91ddf8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:356:1 fdimf 'float (float, float) throw()' extern
| | |-ParmVarDecl 0x91dcd0 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:326:31> col:31 __x 'float'
| | |-ParmVarDecl 0x91dd50 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:326:46> col:46 __y 'float'
| | `-NoThrowAttr 0x91dea8 <<scratch space>:356:1> Implicit
| |-FunctionDecl 0x91e040 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:358:1 __fdimf 'float (float, float) throw()' extern
| | |-ParmVarDecl 0x91df18 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:326:31> col:31 __x 'float'
| | `-ParmVarDecl 0x91df98 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:326:46> col:46 __y 'float'
| |-FunctionDecl 0x91e230 </usr/include/math.h:283:3, line:280:66> <scratch space>:359:1 fmaxf 'float (float, float) throw()' extern
| | |-ParmVarDecl 0x91e108 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:32> col:32 __x 'float'
| | |-ParmVarDecl 0x91e188 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:47> col:47 __y 'float'
| | |-ConstAttr 0x91e2e0 <col:54>
| | `-NoThrowAttr 0x91e338 <<scratch space>:359:1> Implicit
| |-FunctionDecl 0x91e4f8 </usr/include/math.h:283:3, line:281:79> <scratch space>:361:1 __fmaxf 'float (float, float) throw()' extern
| | |-ParmVarDecl 0x91e3d0 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:32> col:32 __x 'float'
| | |-ParmVarDecl 0x91e450 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:47> col:47 __y 'float'
| | `-ConstAttr 0x91e5a8 <col:54>
| |-FunctionDecl 0x91e740 </usr/include/math.h:283:3, line:280:66> <scratch space>:362:1 fminf 'float (float, float) throw()' extern
| | |-ParmVarDecl 0x91e618 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:32> col:32 __x 'float'
| | |-ParmVarDecl 0x91e698 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:47> col:47 __y 'float'
| | |-ConstAttr 0x91e7f0 <col:54>
| | `-NoThrowAttr 0x91e848 <<scratch space>:362:1> Implicit
| |-FunctionDecl 0x91e9b0 </usr/include/math.h:283:3, line:281:79> <scratch space>:364:1 __fminf 'float (float, float) throw()' extern
| | |-ParmVarDecl 0x91e888 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:32> col:32 __x 'float'
| | |-ParmVarDecl 0x91e908 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:47> col:47 __y 'float'
| | `-ConstAttr 0x91ea60 <col:54>
| |-FunctionDecl 0x91ed08 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:365:1 fmaf 'float (float, float, float) throw()' extern
| | |-ParmVarDecl 0x91ead0 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:335:30> col:30 __x 'float'
| | |-ParmVarDecl 0x91eb50 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:335:45> col:45 __y 'float'
| | |-ParmVarDecl 0x91ebd0 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:335:60> col:60 __z 'float'
| | |-ConstAttr 0x91ee00 <<scratch space>:365:1> Implicit
| | `-NoThrowAttr 0x91ee58 <col:1> Implicit
| |-FunctionDecl 0x91f048 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:367:1 __fmaf 'float (float, float, float) throw()' extern
| | |-ParmVarDecl 0x91ee98 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:335:30> col:30 __x 'float'
| | |-ParmVarDecl 0x91ef18 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:335:45> col:45 __y 'float'
| | `-ParmVarDecl 0x91ef98 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:335:60> col:60 __z 'float'
| |-FunctionDecl 0x91f1b8 </usr/include/math.h:283:3, line:280:66> <scratch space>:3:1 roundevenf 'float (float) throw()' extern
| | |-ParmVarDecl 0x91f118 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:340:37> col:37 __x 'float'
| | `-ConstAttr 0x91f260 <col:44>
| |-FunctionDecl 0x920400 </usr/include/math.h:283:3, line:281:79> <scratch space>:5:1 __roundevenf 'float (float) throw()' extern
| | |-ParmVarDecl 0x91f2d0 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:340:37> col:37 __x 'float'
| | `-ConstAttr 0x9204a8 <col:44>
| |-FunctionDecl 0x920740 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:6:1 fromfpf '__intmax_t (float, int, unsigned int) throw()' extern
| | |-ParmVarDecl 0x920518 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:344:45> col:45 __x 'float'
| | |-ParmVarDecl 0x920598 <col:50, col:54> col:54 __round 'int'
| | `-ParmVarDecl 0x920618 <line:345:7, col:20> col:20 __width 'unsigned int'
| |-FunctionDecl 0x9209b8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:8:1 __fromfpf '__intmax_t (float, int, unsigned int) throw()' extern
| | |-ParmVarDecl 0x920810 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:344:45> col:45 __x 'float'
| | |-ParmVarDecl 0x920890 <col:50, col:54> col:54 __round 'int'
| | `-ParmVarDecl 0x920910 <line:345:7, col:20> col:20 __width 'unsigned int'
| |-FunctionDecl 0x920cb0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:9:1 ufromfpf '__uintmax_t (float, int, unsigned int) throw()' extern
| | |-ParmVarDecl 0x920a88 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:349:47> col:47 __x 'float'
| | |-ParmVarDecl 0x920b08 <col:52, col:56> col:56 __round 'int'
| | `-ParmVarDecl 0x920b88 <line:350:9, col:22> col:22 __width 'unsigned int'
| |-FunctionDecl 0x920f28 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:11:1 __ufromfpf '__uintmax_t (float, int, unsigned int) throw()' extern
| | |-ParmVarDecl 0x920d80 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:349:47> col:47 __x 'float'
| | |-ParmVarDecl 0x920e00 <col:52, col:56> col:56 __round 'int'
| | `-ParmVarDecl 0x920e80 <line:350:9, col:22> col:22 __width 'unsigned int'
| |-FunctionDecl 0x9211a0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:12:1 fromfpxf '__intmax_t (float, int, unsigned int) throw()' extern
| | |-ParmVarDecl 0x920ff8 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:355:46> col:46 __x 'float'
| | |-ParmVarDecl 0x921078 <col:51, col:55> col:55 __round 'int'
| | `-ParmVarDecl 0x9210f8 <line:356:8, col:21> col:21 __width 'unsigned int'
| |-FunctionDecl 0x921990 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:14:1 __fromfpxf '__intmax_t (float, int, unsigned int) throw()' extern
| | |-ParmVarDecl 0x921270 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:355:46> col:46 __x 'float'
| | |-ParmVarDecl 0x9212f0 <col:51, col:55> col:55 __round 'int'
| | `-ParmVarDecl 0x921370 <line:356:8, col:21> col:21 __width 'unsigned int'
| |-FunctionDecl 0x921c08 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:15:1 ufromfpxf '__uintmax_t (float, int, unsigned int) throw()' extern
| | |-ParmVarDecl 0x921a60 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:361:48> col:48 __x 'float'
| | |-ParmVarDecl 0x921ae0 <col:53, col:57> col:57 __round 'int'
| | `-ParmVarDecl 0x921b60 <line:362:10, col:23> col:23 __width 'unsigned int'
| |-FunctionDecl 0x921e80 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:17:1 __ufromfpxf '__uintmax_t (float, int, unsigned int) throw()' extern
| | |-ParmVarDecl 0x921cd8 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:361:48> col:48 __x 'float'
| | |-ParmVarDecl 0x921d58 <col:53, col:57> col:57 __round 'int'
| | `-ParmVarDecl 0x921dd8 <line:362:10, col:23> col:23 __width 'unsigned int'
| |-FunctionDecl 0x922078 </usr/include/math.h:283:3, line:280:66> <scratch space>:18:1 fmaxmagf 'float (float, float) throw()' extern
| | |-ParmVarDecl 0x921f50 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:365:35> col:35 __x 'float'
| | |-ParmVarDecl 0x921fd0 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:365:50> col:50 __y 'float'
| | `-ConstAttr 0x922128 <col:57>
| |-FunctionDecl 0x9222c0 </usr/include/math.h:283:3, line:281:79> <scratch space>:20:1 __fmaxmagf 'float (float, float) throw()' extern
| | |-ParmVarDecl 0x922198 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:365:35> col:35 __x 'float'
| | |-ParmVarDecl 0x922218 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:365:50> col:50 __y 'float'
| | `-ConstAttr 0x922370 <col:57>
| |-FunctionDecl 0x922508 </usr/include/math.h:283:3, line:280:66> <scratch space>:21:1 fminmagf 'float (float, float) throw()' extern
| | |-ParmVarDecl 0x9223e0 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:368:35> col:35 __x 'float'
| | |-ParmVarDecl 0x922460 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:368:50> col:50 __y 'float'
| | `-ConstAttr 0x9225b8 <col:57>
| |-FunctionDecl 0x922750 </usr/include/math.h:283:3, line:281:79> <scratch space>:23:1 __fminmagf 'float (float, float) throw()' extern
| | |-ParmVarDecl 0x922628 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:368:35> col:35 __x 'float'
| | |-ParmVarDecl 0x9226a8 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:368:50> col:50 __y 'float'
| | `-ConstAttr 0x922800 <col:57>
| |-FunctionDecl 0x922c18 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:24:1 canonicalizef 'int (float *, const float *) throw()' extern
| | |-ParmVarDecl 0x922870 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:371:47> col:47 __cx 'float *'
| | `-ParmVarDecl 0x922af0 <col:53, col:70> col:70 __x 'const float *'
| |-FunctionDecl 0x922e88 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:226:54> <scratch space>:26:1 totalorderf 'int (const float *, const float *) throw()' extern
| | |-ParmVarDecl 0x922ce0 </usr/include/x86_64-linux-gnu/bits/mathcalls.h:376:34, col:51> col:51 __x 'const float *'
| | |-ParmVarDecl 0x922d60 <line:377:6, col:23> col:23 __y 'const float *'
| | `-PureAttr 0x922f38 </usr/include/x86_64-linux-gnu/sys/cdefs.h:226:45>
| |-FunctionDecl 0x9230d0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:226:54> <scratch space>:27:1 totalordermagf 'int (const float *, const float *) throw()' extern
| | |-ParmVarDecl 0x922fa8 </usr/include/x86_64-linux-gnu/bits/mathcalls.h:381:37, col:54> col:54 __x 'const float *'
| | |-ParmVarDecl 0x923028 <line:382:9, col:26> col:26 __y 'const float *'
| | `-PureAttr 0x923180 </usr/include/x86_64-linux-gnu/sys/cdefs.h:226:45>
| |-FunctionDecl 0x9232f8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:28:1 getpayloadf 'float (const float *) throw()' extern
| | `-ParmVarDecl 0x9231f0 </usr/include/x86_64-linux-gnu/bits/mathcalls.h:386:27, col:44> col:44 __x 'const float *'
| |-FunctionDecl 0x923458 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:30:1 __getpayloadf 'float (const float *) throw()' extern
| | `-ParmVarDecl 0x9233b8 </usr/include/x86_64-linux-gnu/bits/mathcalls.h:386:27, col:44> col:44 __x 'const float *'
| |-FunctionDecl 0x9236b8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:31:1 setpayloadf 'int (float *, float) throw()' extern
| | |-ParmVarDecl 0x923518 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:389:45> col:45 __x 'float *'
| | `-ParmVarDecl 0x923598 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:389:60> col:60 __payload 'float'
| |-FunctionDecl 0x9238a8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:32:1 setpayloadsigf 'int (float *, float) throw()' extern
| | |-ParmVarDecl 0x923780 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:392:48> col:48 __x 'float *'
| | `-ParmVarDecl 0x923800 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:392:63> col:63 __payload 'float'
| |-FunctionDecl 0x923b00 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:33:1 scalbf 'float (float, float) throw()' extern
| | |-ParmVarDecl 0x923970 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:400:32> col:32 __x 'float'
| | `-ParmVarDecl 0x9239f0 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:400:47> col:47 __n 'float'
| |-FunctionDecl 0x923cf0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:35:1 __scalbf 'float (float, float) throw()' extern
| | |-ParmVarDecl 0x923bc8 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:400:32> col:32 __x 'float'
| | `-ParmVarDecl 0x923c48 </usr/include/math.h:302:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:400:47> col:47 __n 'float'
| |-FunctionDecl 0x923eb8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:22:32> <scratch space>:36:1 __fpclassifyl 'int (long double) throw()' extern
| | |-ParmVarDecl 0x923db8 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:21:46> col:46 __value 'long double'
| | `-ConstAttr 0x923f60 <line:22:22>
| |-FunctionDecl 0x924070 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:26:32> <scratch space>:37:1 __signbitl 'int (long double) throw()' extern
| | |-ParmVarDecl 0x923fd0 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:25:43> col:43 __value 'long double'
| | `-ConstAttr 0x924118 <line:26:22>
| |-FunctionDecl 0x924228 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:30:77> <scratch space>:38:1 __isinfl 'int (long double) throw()' extern
| | |-ParmVarDecl 0x924188 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:30:41> col:41 __value 'long double'
| | `-ConstAttr 0x9242d0 <col:67>
| |-FunctionDecl 0x9243e0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:33:78> <scratch space>:39:1 __finitel 'int (long double) throw()' extern
| | |-ParmVarDecl 0x924340 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:33:42> col:42 __value 'long double'
| | |-ConstAttr 0x924488 <col:68>
| | `-NoThrowAttr 0x924510 <<scratch space>:39:1> Implicit
| |-FunctionDecl 0x9245f0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:36:77> <scratch space>:40:1 __isnanl 'int (long double) throw()' extern
| | |-ParmVarDecl 0x924550 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:36:41> col:41 __value 'long double'
| | `-ConstAttr 0x924698 <col:67>
| |-FunctionDecl 0x9248a8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:41:1 used __iseqsigl 'int (long double, long double) throw()' extern
| | |-ParmVarDecl 0x924708 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:39:43> col:43 __x 'long double'
| | `-ParmVarDecl 0x924788 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:39:58> col:58 __y 'long double'
| |-FunctionDecl 0x924a10 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:43:32> <scratch space>:42:1 used __issignalingl 'int (long double) throw()' extern
| | |-ParmVarDecl 0x924970 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:42:47> col:47 __value 'long double'
| | `-ConstAttr 0x924ab8 <line:43:22>
| |-FunctionDecl 0x925d38 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:43:1 acosl 'long double (long double) throw()' extern
| | |-ParmVarDecl 0x925c38 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:53:31> col:31 __x 'long double'
| | `-NoThrowAttr 0x925e10 <<scratch space>:43:1> Implicit
| |-FunctionDecl 0x925f20 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:45:1 __acosl 'long double (long double) throw()' extern
| | `-ParmVarDecl 0x925e80 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:53:31> col:31 __x 'long double'
| |-FunctionDecl 0x926080 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:46:1 asinl 'long double (long double) throw()' extern
| | |-ParmVarDecl 0x925fe0 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:55:31> col:31 __x 'long double'
| | `-NoThrowAttr 0x926128 <<scratch space>:46:1> Implicit
| |-FunctionDecl 0x926238 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:48:1 __asinl 'long double (long double) throw()' extern
| | `-ParmVarDecl 0x926198 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:55:31> col:31 __x 'long double'
| |-FunctionDecl 0x926398 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:49:1 atanl 'long double (long double) throw()' extern
| | |-ParmVarDecl 0x9262f8 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:57:31> col:31 __x 'long double'
| | `-NoThrowAttr 0x926440 <<scratch space>:49:1> Implicit
| |-FunctionDecl 0x926550 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:51:1 __atanl 'long double (long double) throw()' extern
| | `-ParmVarDecl 0x9264b0 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:57:31> col:31 __x 'long double'
| |-FunctionDecl 0x9267b8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:52:1 atan2l 'long double (long double, long double) throw()' extern
| | |-ParmVarDecl 0x926610 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:59:32> col:32 __y 'long double'
| | |-ParmVarDecl 0x926690 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:59:47> col:47 __x 'long double'
| | `-NoThrowAttr 0x9268a8 <<scratch space>:52:1> Implicit
| |-FunctionDecl 0x926a40 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:54:1 __atan2l 'long double (long double, long double) throw()' extern
| | |-ParmVarDecl 0x926918 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:59:32> col:32 __y 'long double'
| | `-ParmVarDecl 0x926998 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:59:47> col:47 __x 'long double'
| |-FunctionDecl 0x934840 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:57:1 cosl 'long double (long double) throw()' extern
| | |-ParmVarDecl 0x926b08 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:62:34> col:34 __x 'long double'
| | `-NoThrowAttr 0x9348e8 <<scratch space>:57:1> Implicit
| |-FunctionDecl 0x9349f8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:59:1 __cosl 'long double (long double) throw()' extern
| | `-ParmVarDecl 0x934958 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:62:34> col:34 __x 'long double'
| |-FunctionDecl 0x934b58 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:62:1 sinl 'long double (long double) throw()' extern
| | |-ParmVarDecl 0x934ab8 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:64:34> col:34 __x 'long double'
| | `-NoThrowAttr 0x934c00 <<scratch space>:62:1> Implicit
| |-FunctionDecl 0x934d10 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:64:1 __sinl 'long double (long double) throw()' extern
| | `-ParmVarDecl 0x934c70 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:64:34> col:34 __x 'long double'
| |-FunctionDecl 0x934e70 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:65:1 tanl 'long double (long double) throw()' extern
| | |-ParmVarDecl 0x934dd0 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:66:30> col:30 __x 'long double'
| | `-NoThrowAttr 0x934f18 <<scratch space>:65:1> Implicit
| |-FunctionDecl 0x935028 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:67:1 __tanl 'long double (long double) throw()' extern
| | `-ParmVarDecl 0x934f88 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:66:30> col:30 __x 'long double'
| |-FunctionDecl 0x935188 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:68:1 coshl 'long double (long double) throw()' extern
| | |-ParmVarDecl 0x9350e8 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:71:31> col:31 __x 'long double'
| | `-NoThrowAttr 0x935230 <<scratch space>:68:1> Implicit
| |-FunctionDecl 0x935340 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:70:1 __coshl 'long double (long double) throw()' extern
| | `-ParmVarDecl 0x9352a0 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:71:31> col:31 __x 'long double'
| |-FunctionDecl 0x9354a0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:71:1 sinhl 'long double (long double) throw()' extern
| | |-ParmVarDecl 0x935400 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:73:31> col:31 __x 'long double'
| | `-NoThrowAttr 0x935548 <<scratch space>:71:1> Implicit
| |-FunctionDecl 0x935658 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:73:1 __sinhl 'long double (long double) throw()' extern
| | `-ParmVarDecl 0x9355b8 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:73:31> col:31 __x 'long double'
| |-FunctionDecl 0x936860 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:74:1 tanhl 'long double (long double) throw()' extern
| | |-ParmVarDecl 0x935718 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:75:31> col:31 __x 'long double'
| | `-NoThrowAttr 0x936908 <<scratch space>:74:1> Implicit
| |-FunctionDecl 0x936a18 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:76:1 __tanhl 'long double (long double) throw()' extern
| | `-ParmVarDecl 0x936978 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:75:31> col:31 __x 'long double'
| |-FunctionDecl 0x936d30 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:79:1 sincosl 'void (long double, long double *, long double *) throw()' extern
| | |-ParmVarDecl 0x936ad8 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:80:14> col:14 __x 'long double'
| | |-ParmVarDecl 0x936b80 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:80:30> col:30 __sinx 'long double *'
| | `-ParmVarDecl 0x936c00 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:80:49> col:49 __cosx 'long double *'
| |-FunctionDecl 0x936fa8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:81:1 __sincosl 'void (long double, long double *, long double *) throw()' extern
| | |-ParmVarDecl 0x936e00 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:80:14> col:14 __x 'long double'
| | |-ParmVarDecl 0x936e80 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:80:30> col:30 __sinx 'long double *'
| | `-ParmVarDecl 0x936f00 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:80:49> col:49 __cosx 'long double *'
| |-FunctionDecl 0x937118 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:82:1 acoshl 'long double (long double) throw()' extern
| | |-ParmVarDecl 0x937078 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:85:32> col:32 __x 'long double'
| | `-NoThrowAttr 0x9371c0 <<scratch space>:82:1> Implicit
| |-FunctionDecl 0x9372d0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:84:1 __acoshl 'long double (long double) throw()' extern
| | `-ParmVarDecl 0x937230 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:85:32> col:32 __x 'long double'
| |-FunctionDecl 0x937430 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:85:1 asinhl 'long double (long double) throw()' extern
| | |-ParmVarDecl 0x937390 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:87:32> col:32 __x 'long double'
| | `-NoThrowAttr 0x9374d8 <<scratch space>:85:1> Implicit
| |-FunctionDecl 0x9375e8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:87:1 __asinhl 'long double (long double) throw()' extern
| | `-ParmVarDecl 0x937548 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:87:32> col:32 __x 'long double'
| |-FunctionDecl 0x937748 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:88:1 atanhl 'long double (long double) throw()' extern
| | |-ParmVarDecl 0x9376a8 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:89:32> col:32 __x 'long double'
| | `-NoThrowAttr 0x9377f0 <<scratch space>:88:1> Implicit
| |-FunctionDecl 0x90b380 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:90:1 __atanhl 'long double (long double) throw()' extern
| | `-ParmVarDecl 0x90b2e0 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:89:32> col:32 __x 'long double'
| |-FunctionDecl 0x90b4e0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:93:1 expl 'long double (long double) throw()' extern
| | |-ParmVarDecl 0x90b440 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:95:34> col:34 __x 'long double'
| | `-NoThrowAttr 0x90b588 <<scratch space>:93:1> Implicit
| |-FunctionDecl 0x90b698 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:95:1 __expl 'long double (long double) throw()' extern
| | `-ParmVarDecl 0x90b5f8 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:95:34> col:34 __x 'long double'
| |-FunctionDecl 0x90b8f8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:96:1 frexpl 'long double (long double, int *) throw()' extern
| | |-ParmVarDecl 0x90b758 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:98:32> col:32 __x 'long double'
| | |-ParmVarDecl 0x90b7d8 <col:37, col:42> col:42 __exponent 'int *'
| | `-NoThrowAttr 0x90b9e8 <<scratch space>:96:1> Implicit
| |-FunctionDecl 0x90bb80 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:98:1 __frexpl 'long double (long double, int *) throw()' extern
| | |-ParmVarDecl 0x90ba58 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:98:32> col:32 __x 'long double'
| | `-ParmVarDecl 0x90bad8 <col:37, col:42> col:42 __exponent 'int *'
| |-FunctionDecl 0x90bde8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:99:1 ldexpl 'long double (long double, int) throw()' extern
| | |-ParmVarDecl 0x90bc48 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:101:32> col:32 __x 'long double'
| | |-ParmVarDecl 0x90bcc8 <col:37, col:41> col:41 __exponent 'int'
| | `-NoThrowAttr 0x90bed8 <<scratch space>:99:1> Implicit
| |-FunctionDecl 0x90c070 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:101:1 __ldexpl 'long double (long double, int) throw()' extern
| | |-ParmVarDecl 0x90bf48 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:101:32> col:32 __x 'long double'
| | `-ParmVarDecl 0x90bfc8 <col:37, col:41> col:41 __exponent 'int'
| |-FunctionDecl 0x90c1d8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:104:1 logl 'long double (long double) throw()' extern
| | |-ParmVarDecl 0x90c138 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:104:34> col:34 __x 'long double'
| | `-NoThrowAttr 0x90c280 <<scratch space>:104:1> Implicit
| |-FunctionDecl 0x909378 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:106:1 __logl 'long double (long double) throw()' extern
| | `-ParmVarDecl 0x9092d8 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:104:34> col:34 __x 'long double'
| |-FunctionDecl 0x9094d8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:107:1 log10l 'long double (long double) throw()' extern
| | |-ParmVarDecl 0x909438 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:107:32> col:32 __x 'long double'
| | `-NoThrowAttr 0x909580 <<scratch space>:107:1> Implicit
| |-FunctionDecl 0x909690 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:109:1 __log10l 'long double (long double) throw()' extern
| | `-ParmVarDecl 0x9095f0 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:107:32> col:32 __x 'long double'
| |-FunctionDecl 0x9098f8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:110:1 modfl 'long double (long double, long double *) throw()' extern
| | |-ParmVarDecl 0x909750 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:110:31> col:31 __x 'long double'
| | |-ParmVarDecl 0x9097d0 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:110:47> col:47 __iptr 'long double *'
| | `-NoThrowAttr 0x9099e8 <<scratch space>:110:1> Implicit
| |-FunctionDecl 0x909ba0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> <scratch space>:112:1 __modfl 'long double (long double, long double *) throw()' extern
| | |-ParmVarDecl 0x909a58 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:110:31> col:31 __x 'long double'
| | |-ParmVarDecl 0x909ad8 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:110:47> col:47 __iptr 'long double *'
| | `-NonNullAttr 0x909c50 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:110:69> 2
| |-FunctionDecl 0x909d70 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:114:1 exp10l 'long double (long double) throw()' extern
| | `-ParmVarDecl 0x909cd0 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:114:32> col:32 __x 'long double'
| |-FunctionDecl 0x909ed0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:116:1 __exp10l 'long double (long double) throw()' extern
| | `-ParmVarDecl 0x909e30 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:114:32> col:32 __x 'long double'
| |-FunctionDecl 0x90a030 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:117:1 expm1l 'long double (long double) throw()' extern
| | |-ParmVarDecl 0x909f90 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:119:32> col:32 __x 'long double'
| | `-NoThrowAttr 0x90a0d8 <<scratch space>:117:1> Implicit
| |-FunctionDecl 0x90a1e8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:119:1 __expm1l 'long double (long double) throw()' extern
| | `-ParmVarDecl 0x90a148 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:119:32> col:32 __x 'long double'
| |-FunctionDecl 0x93de40 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:120:1 log1pl 'long double (long double) throw()' extern
| | |-ParmVarDecl 0x93dda0 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:122:32> col:32 __x 'long double'
| | `-NoThrowAttr 0x93dee8 <<scratch space>:120:1> Implicit
| |-FunctionDecl 0x93dff8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:122:1 __log1pl 'long double (long double) throw()' extern
| | `-ParmVarDecl 0x93df58 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:122:32> col:32 __x 'long double'
| |-FunctionDecl 0x93e158 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:123:1 logbl 'long double (long double) throw()' extern
| | |-ParmVarDecl 0x93e0b8 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:125:31> col:31 __x 'long double'
| | `-NoThrowAttr 0x93e200 <<scratch space>:123:1> Implicit
| |-FunctionDecl 0x93e310 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:125:1 __logbl 'long double (long double) throw()' extern
| | `-ParmVarDecl 0x93e270 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:125:31> col:31 __x 'long double'
| |-FunctionDecl 0x93e470 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:126:1 exp2l 'long double (long double) throw()' extern
| | |-ParmVarDecl 0x93e3d0 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:130:31> col:31 __x 'long double'
| | `-NoThrowAttr 0x93e518 <<scratch space>:126:1> Implicit
| |-FunctionDecl 0x93e628 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:128:1 __exp2l 'long double (long double) throw()' extern
| | `-ParmVarDecl 0x93e588 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:130:31> col:31 __x 'long double'
| |-FunctionDecl 0x93e788 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:129:1 log2l 'long double (long double) throw()' extern
| | |-ParmVarDecl 0x93e6e8 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:133:31> col:31 __x 'long double'
| | `-NoThrowAttr 0x93e830 <<scratch space>:129:1> Implicit
| |-FunctionDecl 0x93e940 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:131:1 __log2l 'long double (long double) throw()' extern
| | `-ParmVarDecl 0x93e8a0 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:133:31> col:31 __x 'long double'
| |-FunctionDecl 0x93eb28 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:134:1 powl 'long double (long double, long double) throw()' extern
| | |-ParmVarDecl 0x93ea00 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:140:34> col:34 __x 'long double'
| | |-ParmVarDecl 0x93ea80 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:140:49> col:49 __y 'long double'
| | `-NoThrowAttr 0x93ebd8 <<scratch space>:134:1> Implicit
| |-FunctionDecl 0x93edb0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:136:1 __powl 'long double (long double, long double) throw()' extern
| | |-ParmVarDecl 0x93ec48 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:140:34> col:34 __x 'long double'
| | `-ParmVarDecl 0x93ecc8 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:140:49> col:49 __y 'long double'
| |-FunctionDecl 0x93ef18 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:137:1 sqrtl 'long double (long double) throw()' extern
| | |-ParmVarDecl 0x93ee78 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:143:31> col:31 __x 'long double'
| | `-NoThrowAttr 0x93efc0 <<scratch space>:137:1> Implicit
| |-FunctionDecl 0x93f0d0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:139:1 __sqrtl 'long double (long double) throw()' extern
| | `-ParmVarDecl 0x93f030 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:143:31> col:31 __x 'long double'
| |-FunctionDecl 0x93f2b8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:140:1 hypotl 'long double (long double, long double) throw()' extern
| | |-ParmVarDecl 0x93f190 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:147:32> col:32 __x 'long double'
| | |-ParmVarDecl 0x93f210 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:147:47> col:47 __y 'long double'
| | `-NoThrowAttr 0x93f368 <<scratch space>:140:1> Implicit
| |-FunctionDecl 0x93f500 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:142:1 __hypotl 'long double (long double, long double) throw()' extern
| | |-ParmVarDecl 0x93f3d8 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:147:32> col:32 __x 'long double'
| | `-ParmVarDecl 0x93f458 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:147:47> col:47 __y 'long double'
| |-FunctionDecl 0x93f668 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:143:1 cbrtl 'long double (long double) throw()' extern
| | |-ParmVarDecl 0x93f5c8 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:152:31> col:31 __x 'long double'
| | |-NoThrowAttr 0x93f710 <<scratch space>:143:1> Implicit
| | `-ConstAttr 0x93f768 <col:1> Implicit
| |-FunctionDecl 0x93f848 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:145:1 __cbrtl 'long double (long double) throw()' extern
| | `-ParmVarDecl 0x93f7a8 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:152:31> col:31 __x 'long double'
| |-FunctionDecl 0x93f9a8 </usr/include/math.h:283:3, line:280:66> <scratch space>:146:1 ceill 'long double (long double) throw()' extern
| | |-ParmVarDecl 0x93f908 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:159:32> col:32 __x 'long double'
| | |-ConstAttr 0x93fa50 <col:39>
| | `-NoThrowAttr 0x93faa8 <<scratch space>:146:1> Implicit
| |-FunctionDecl 0x93fb88 </usr/include/math.h:283:3, line:281:79> <scratch space>:148:1 __ceill 'long double (long double) throw()' extern
| | |-ParmVarDecl 0x93fae8 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:159:32> col:32 __x 'long double'
| | `-ConstAttr 0x93fc30 <col:39>
| |-FunctionDecl 0x93fdc0 </usr/include/math.h:283:3, line:280:66> <scratch space>:149:1 fabsl 'long double (long double) throw()' extern
| | |-ParmVarDecl 0x93fca0 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:162:32> col:32 __x 'long double'
| | |-ConstAttr 0x93fe68 <col:39>
| | `-NoThrowAttr 0x93fec0 <<scratch space>:149:1> Implicit
| |-FunctionDecl 0x93ffa0 </usr/include/math.h:283:3, line:281:79> <scratch space>:151:1 __fabsl 'long double (long double) throw()' extern
| | |-ParmVarDecl 0x93ff00 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:162:32> col:32 __x 'long double'
| | `-ConstAttr 0x940048 <col:39>
| |-FunctionDecl 0x940158 </usr/include/math.h:283:3, line:280:66> <scratch space>:152:1 floorl 'long double (long double) throw()' extern
| | |-ParmVarDecl 0x9400b8 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:165:33> col:33 __x 'long double'
| | |-ConstAttr 0x940200 <col:40>
| | `-NoThrowAttr 0x940258 <<scratch space>:152:1> Implicit
| |-FunctionDecl 0x940338 </usr/include/math.h:283:3, line:281:79> <scratch space>:154:1 __floorl 'long double (long double) throw()' extern
| | |-ParmVarDecl 0x940298 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:165:33> col:33 __x 'long double'
| | `-ConstAttr 0x9403e0 <col:40>
| |-FunctionDecl 0x940578 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:155:1 fmodl 'long double (long double, long double) throw()' extern
| | |-ParmVarDecl 0x940450 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:168:31> col:31 __x 'long double'
| | |-ParmVarDecl 0x9404d0 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:168:46> col:46 __y 'long double'
| | `-NoThrowAttr 0x940628 <<scratch space>:155:1> Implicit
| |-FunctionDecl 0x9407c0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:157:1 __fmodl 'long double (long double, long double) throw()' extern
| | |-ParmVarDecl 0x940698 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:168:31> col:31 __x 'long double'
| | `-ParmVarDecl 0x940718 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:168:46> col:46 __y 'long double'
| |-FunctionDecl 0x940928 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:177:74> <scratch space>:158:1 isinfl 'int (long double) throw()' extern
| | |-ParmVarDecl 0x940888 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:177:38> col:38 __value 'long double'
| | `-ConstAttr 0x9409d0 <col:64>
| |-FunctionDecl 0x940ae0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:182:75> <scratch space>:159:1 finitel 'int (long double) throw()' extern
| | |-ParmVarDecl 0x940a40 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:182:39> col:39 __value 'long double'
| | |-ConstAttr 0x940b88 <col:65>
| | `-NoThrowAttr 0x940be0 <<scratch space>:159:1> Implicit
| |-FunctionDecl 0x940dd0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:160:1 dreml 'long double (long double, long double) throw()' extern
| | |-ParmVarDecl 0x940c20 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:185:31> col:31 __x 'long double'
| | `-ParmVarDecl 0x940ca0 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:185:46> col:46 __y 'long double'
| |-FunctionDecl 0x940fc0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:162:1 __dreml 'long double (long double, long double) throw()' extern
| | |-ParmVarDecl 0x940e98 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:185:31> col:31 __x 'long double'
| | `-ParmVarDecl 0x940f18 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:185:46> col:46 __y 'long double'
| |-FunctionDecl 0x941128 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:163:1 significandl 'long double (long double) throw()' extern
| | `-ParmVarDecl 0x941088 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:189:38> col:38 __x 'long double'
| |-FunctionDecl 0x941288 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:165:1 __significandl 'long double (long double) throw()' extern
| | `-ParmVarDecl 0x9411e8 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:189:38> col:38 __x 'long double'
| |-FunctionDecl 0x941470 </usr/include/math.h:283:3, line:280:66> <scratch space>:166:1 copysignl 'long double (long double, long double) throw()' extern
| | |-ParmVarDecl 0x941348 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:196:36> col:36 __x 'long double'
| | |-ParmVarDecl 0x9413c8 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:196:51> col:51 __y 'long double'
| | |-ConstAttr 0x941520 <col:58>
| | `-NoThrowAttr 0x941578 <<scratch space>:166:1> Implicit
| |-FunctionDecl 0x9416e0 </usr/include/math.h:283:3, line:281:79> <scratch space>:168:1 __copysignl 'long double (long double, long double) throw()' extern
| | |-ParmVarDecl 0x9415b8 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:196:36> col:36 __x 'long double'
| | |-ParmVarDecl 0x941638 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:196:51> col:51 __y 'long double'
| | `-ConstAttr 0x941790 <col:58>
| |-FunctionDecl 0x941908 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:169:1 nanl 'long double (const char *) throw()' extern
| | |-ParmVarDecl 0x941800 </usr/include/x86_64-linux-gnu/bits/mathcalls.h:201:20, col:32> col:32 __tagb 'const char *'
| | |-NoThrowAttr 0x9419e0 <<scratch space>:169:1> Implicit
| | `-PureAttr 0x941a38 <col:1> Implicit
| |-FunctionDecl 0x941b18 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:171:1 __nanl 'long double (const char *) throw()' extern
| | `-ParmVarDecl 0x941a78 </usr/include/x86_64-linux-gnu/bits/mathcalls.h:201:20, col:32> col:32 __tagb 'const char *'
| |-FunctionDecl 0x941c78 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:211:74> <scratch space>:172:1 isnanl 'int (long double) throw()' extern
| | |-ParmVarDecl 0x941bd8 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:211:38> col:38 __value 'long double'
| | `-ConstAttr 0x941d20 <col:64>
| |-FunctionDecl 0x941e80 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:173:1 j0l 'long double (long double) throw()' extern
| | `-ParmVarDecl 0x941de0 </usr/include/math.h:344:22, col:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:217:28 'long double'
| |-FunctionDecl 0x941fe0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:175:1 __j0l 'long double (long double) throw()' extern
| | `-ParmVarDecl 0x941f40 </usr/include/math.h:344:22, col:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:217:28 'long double'
| |-FunctionDecl 0x942140 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:176:1 j1l 'long double (long double) throw()' extern
| | `-ParmVarDecl 0x9420a0 </usr/include/math.h:344:22, col:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:218:28 'long double'
| |-FunctionDecl 0x9422a0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:178:1 __j1l 'long double (long double) throw()' extern
| | `-ParmVarDecl 0x942200 </usr/include/math.h:344:22, col:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:218:28 'long double'
| |-FunctionDecl 0x942508 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:179:1 jnl 'long double (int, long double) throw()' extern
| | |-ParmVarDecl 0x942360 </usr/include/x86_64-linux-gnu/bits/mathcalls.h:219:19> col:22 'int'
| | `-ParmVarDecl 0x9423e0 </usr/include/math.h:344:22, col:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:219:33 'long double'
| |-FunctionDecl 0x9426f8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:181:1 __jnl 'long double (int, long double) throw()' extern
| | |-ParmVarDecl 0x9425d0 </usr/include/x86_64-linux-gnu/bits/mathcalls.h:219:19> col:22 'int'
| | `-ParmVarDecl 0x942650 </usr/include/math.h:344:22, col:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:219:33 'long double'
| |-FunctionDecl 0x942860 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:182:1 y0l 'long double (long double) throw()' extern
| | `-ParmVarDecl 0x9427c0 </usr/include/math.h:344:22, col:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:220:28 'long double'
| |-FunctionDecl 0x9429c0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:184:1 __y0l 'long double (long double) throw()' extern
| | `-ParmVarDecl 0x942920 </usr/include/math.h:344:22, col:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:220:28 'long double'
| |-FunctionDecl 0x942b20 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:185:1 y1l 'long double (long double) throw()' extern
| | `-ParmVarDecl 0x942a80 </usr/include/math.h:344:22, col:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:221:28 'long double'
| |-FunctionDecl 0x942c80 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:187:1 __y1l 'long double (long double) throw()' extern
| | `-ParmVarDecl 0x942be0 </usr/include/math.h:344:22, col:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:221:28 'long double'
| |-FunctionDecl 0x942e98 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:188:1 ynl 'long double (int, long double) throw()' extern
| | |-ParmVarDecl 0x942d40 </usr/include/x86_64-linux-gnu/bits/mathcalls.h:222:19> col:22 'int'
| | `-ParmVarDecl 0x942df0 </usr/include/math.h:344:22, col:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:222:33 'long double'
| |-FunctionDecl 0x943088 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:190:1 __ynl 'long double (int, long double) throw()' extern
| | |-ParmVarDecl 0x942f60 </usr/include/x86_64-linux-gnu/bits/mathcalls.h:222:19> col:22 'int'
| | `-ParmVarDecl 0x942fe0 </usr/include/math.h:344:22, col:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:222:33 'long double'
| |-FunctionDecl 0x9431f0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:191:1 erfl 'long double (long double) throw()' extern
| | |-ParmVarDecl 0x943150 </usr/include/math.h:344:22, col:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:228:29 'long double'
| | `-NoThrowAttr 0x943298 <<scratch space>:191:1> Implicit
| |-FunctionDecl 0x9433a8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:193:1 __erfl 'long double (long double) throw()' extern
| | `-ParmVarDecl 0x943308 </usr/include/math.h:344:22, col:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:228:29 'long double'
| |-FunctionDecl 0x943508 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:194:1 erfcl 'long double (long double) throw()' extern
| | |-ParmVarDecl 0x943468 </usr/include/math.h:344:22, col:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:229:30 'long double'
| | `-NoThrowAttr 0x9435b0 <<scratch space>:194:1> Implicit
| |-FunctionDecl 0x9436c0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:196:1 __erfcl 'long double (long double) throw()' extern
| | `-ParmVarDecl 0x943620 </usr/include/math.h:344:22, col:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:229:30 'long double'
| |-FunctionDecl 0x943820 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:197:1 lgammal 'long double (long double) throw()' extern
| | |-ParmVarDecl 0x943780 </usr/include/math.h:344:22, col:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:230:32 'long double'
| | `-NoThrowAttr 0x9438c8 <<scratch space>:197:1> Implicit
| |-FunctionDecl 0x9439d8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:199:1 __lgammal 'long double (long double) throw()' extern
| | `-ParmVarDecl 0x943938 </usr/include/math.h:344:22, col:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:230:32 'long double'
| |-FunctionDecl 0x943b38 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:200:1 tgammal 'long double (long double) throw()' extern
| | |-ParmVarDecl 0x943a98 </usr/include/math.h:344:22, col:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:235:32 'long double'
| | `-NoThrowAttr 0x943be0 <<scratch space>:200:1> Implicit
| |-FunctionDecl 0x943cf0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:202:1 __tgammal 'long double (long double) throw()' extern
| | `-ParmVarDecl 0x943c50 </usr/include/math.h:344:22, col:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:235:32 'long double'
| |-FunctionDecl 0x943ea0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:203:1 gammal 'long double (long double) throw()' extern
| | `-ParmVarDecl 0x943e00 </usr/include/math.h:344:22, col:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:241:31 'long double'
| |-FunctionDecl 0x944000 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:205:1 __gammal 'long double (long double) throw()' extern
| | `-ParmVarDecl 0x943f60 </usr/include/math.h:344:22, col:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:241:31 'long double'
| |-FunctionDecl 0x9441e8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:207:1 lgammal_r 'long double (long double, int *) throw()' extern
| | |-ParmVarDecl 0x9440c0 </usr/include/math.h:344:22, col:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:249:34 'long double'
| | `-ParmVarDecl 0x944140 <col:36, col:41> col:41 __signgamp 'int *'
| |-FunctionDecl 0x9443d8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:210:1 __lgammal_r 'long double (long double, int *) throw()' extern
| | |-ParmVarDecl 0x9442b0 </usr/include/math.h:344:22, col:27> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:249:34 'long double'
| | `-ParmVarDecl 0x944330 <col:36, col:41> col:41 __signgamp 'int *'
| |-FunctionDecl 0x944540 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:211:1 rintl 'long double (long double) throw()' extern
| | |-ParmVarDecl 0x9444a0 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:256:31> col:31 __x 'long double'
| | |-NoThrowAttr 0x9445e8 <<scratch space>:211:1> Implicit
| | `-ConstAttr 0x944640 <col:1> Implicit
| |-FunctionDecl 0x944720 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:213:1 __rintl 'long double (long double) throw()' extern
| | `-ParmVarDecl 0x944680 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:256:31> col:31 __x 'long double'
| |-FunctionDecl 0x944908 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:214:1 nextafterl 'long double (long double, long double) throw()' extern
| | |-ParmVarDecl 0x9447e0 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:259:36> col:36 __x 'long double'
| | |-ParmVarDecl 0x944860 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:259:51> col:51 __y 'long double'
| | `-NoThrowAttr 0x9449b8 <<scratch space>:214:1> Implicit
| |-FunctionDecl 0x944b50 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:216:1 __nextafterl 'long double (long double, long double) throw()' extern
| | |-ParmVarDecl 0x944a28 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:259:36> col:36 __x 'long double'
| | `-ParmVarDecl 0x944aa8 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:259:51> col:51 __y 'long double'
| |-FunctionDecl 0x944d40 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:217:1 nexttowardl 'long double (long double, long double) throw()' extern
| | |-ParmVarDecl 0x944c18 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:261:37> col:37 __x 'long double'
| | |-ParmVarDecl 0x944c98 <col:42, col:54> col:54 __y 'long double'
| | `-NoThrowAttr 0x944e10 <<scratch space>:217:1> Implicit
| |-FunctionDecl 0x944fa8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:219:1 __nexttowardl 'long double (long double, long double) throw()' extern
| | |-ParmVarDecl 0x944e80 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:261:37> col:37 __x 'long double'
| | `-ParmVarDecl 0x944f00 <col:42, col:54> col:54 __y 'long double'
| |-FunctionDecl 0x945110 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:221:1 nextdownl 'long double (long double) throw()' extern
| | `-ParmVarDecl 0x945070 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:266:35> col:35 __x 'long double'
| |-FunctionDecl 0x945270 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:223:1 __nextdownl 'long double (long double) throw()' extern
| | `-ParmVarDecl 0x9451d0 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:266:35> col:35 __x 'long double'
| |-FunctionDecl 0x9453d0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:224:1 nextupl 'long double (long double) throw()' extern
| | `-ParmVarDecl 0x945330 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:268:33> col:33 __x 'long double'
| |-FunctionDecl 0x945530 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:226:1 __nextupl 'long double (long double) throw()' extern
| | `-ParmVarDecl 0x945490 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:268:33> col:33 __x 'long double'
| |-FunctionDecl 0x945718 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:227:1 remainderl 'long double (long double, long double) throw()' extern
| | |-ParmVarDecl 0x9455f0 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:36> col:36 __x 'long double'
| | |-ParmVarDecl 0x945670 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:51> col:51 __y 'long double'
| | `-NoThrowAttr 0x9457c8 <<scratch space>:227:1> Implicit
| |-FunctionDecl 0x945960 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:229:1 __remainderl 'long double (long double, long double) throw()' extern
| | |-ParmVarDecl 0x945838 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:36> col:36 __x 'long double'
| | `-ParmVarDecl 0x9458b8 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:51> col:51 __y 'long double'
| |-FunctionDecl 0x945b50 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:230:1 scalbnl 'long double (long double, int) throw()' extern
| | |-ParmVarDecl 0x945a28 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:276:33> col:33 __x 'long double'
| | |-ParmVarDecl 0x945aa8 <col:38, col:42> col:42 __n 'int'
| | `-NoThrowAttr 0x945c00 <<scratch space>:230:1> Implicit
| |-FunctionDecl 0x945e20 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:232:1 __scalbnl 'long double (long double, int) throw()' extern
| | |-ParmVarDecl 0x945c70 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:276:33> col:33 __x 'long double'
| | `-ParmVarDecl 0x945cf0 <col:38, col:42> col:42 __n 'int'
| |-FunctionDecl 0x945f88 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:233:1 ilogbl 'int (long double) throw()' extern
| | |-ParmVarDecl 0x945ee8 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:280:36> col:36 __x 'long double'
| | `-NoThrowAttr 0x946030 <<scratch space>:233:1> Implicit
| |-FunctionDecl 0x946140 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:235:1 __ilogbl 'int (long double) throw()' extern
| | `-ParmVarDecl 0x9460a0 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:280:36> col:36 __x 'long double'
| |-FunctionDecl 0x946308 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:237:1 llogbl 'long (long double) throw()' extern
| | `-ParmVarDecl 0x946200 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:285:42> col:42 __x 'long double'
| |-FunctionDecl 0x946468 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:239:1 __llogbl 'long (long double) throw()' extern
| | `-ParmVarDecl 0x9463c8 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:285:42> col:42 __x 'long double'
| |-FunctionDecl 0x9466c8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:240:1 scalblnl 'long double (long double, long) throw()' extern
| | |-ParmVarDecl 0x946528 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:290:34> col:34 __x 'long double'
| | |-ParmVarDecl 0x9465a8 <col:39, col:48> col:48 __n 'long'
| | `-NoThrowAttr 0x9467b8 <<scratch space>:240:1> Implicit
| |-FunctionDecl 0x946950 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:242:1 __scalblnl 'long double (long double, long) throw()' extern
| | |-ParmVarDecl 0x946828 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:290:34> col:34 __x 'long double'
| | `-ParmVarDecl 0x9468a8 <col:39, col:48> col:48 __n 'long'
| |-FunctionDecl 0x946ab8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:243:1 nearbyintl 'long double (long double) throw()' extern
| | |-ParmVarDecl 0x946a18 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:294:36> col:36 __x 'long double'
| | |-NoThrowAttr 0x946b60 <<scratch space>:243:1> Implicit
| | `-ConstAttr 0x946bb8 <col:1> Implicit
| |-FunctionDecl 0x946c98 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:245:1 __nearbyintl 'long double (long double) throw()' extern
| | `-ParmVarDecl 0x946bf8 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:294:36> col:36 __x 'long double'
| |-FunctionDecl 0x946e30 </usr/include/math.h:283:3, line:280:66> <scratch space>:246:1 roundl 'long double (long double) throw()' extern
| | |-ParmVarDecl 0x946d58 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:33> col:33 __x 'long double'
| | |-ConstAttr 0x946ed8 <col:40>
| | `-NoThrowAttr 0x946f30 <<scratch space>:246:1> Implicit
| |-FunctionDecl 0x947010 </usr/include/math.h:283:3, line:281:79> <scratch space>:248:1 __roundl 'long double (long double) throw()' extern
| | |-ParmVarDecl 0x946f70 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:33> col:33 __x 'long double'
| | `-ConstAttr 0x9470b8 <col:40>
| |-FunctionDecl 0x9471c8 </usr/include/math.h:283:3, line:280:66> <scratch space>:249:1 truncl 'long double (long double) throw()' extern
| | |-ParmVarDecl 0x947128 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:302:33> col:33 __x 'long double'
| | |-ConstAttr 0x947270 <col:40>
| | `-NoThrowAttr 0x9472c8 <<scratch space>:249:1> Implicit
| |-FunctionDecl 0x9473a8 </usr/include/math.h:283:3, line:281:79> <scratch space>:251:1 __truncl 'long double (long double) throw()' extern
| | |-ParmVarDecl 0x947308 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:302:33> col:33 __x 'long double'
| | `-ConstAttr 0x947450 <col:40>
| |-FunctionDecl 0x9476f8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:252:1 remquol 'long double (long double, long double, int *) throw()' extern
| | |-ParmVarDecl 0x9474c0 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:307:33> col:33 __x 'long double'
| | |-ParmVarDecl 0x947540 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:307:48> col:48 __y 'long double'
| | |-ParmVarDecl 0x9475c0 <col:53, col:58> col:58 __quo 'int *'
| | `-NoThrowAttr 0x9477f0 <<scratch space>:252:1> Implicit
| |-FunctionDecl 0x947a10 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:254:1 __remquol 'long double (long double, long double, int *) throw()' extern
| | |-ParmVarDecl 0x947860 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:307:33> col:33 __x 'long double'
| | |-ParmVarDecl 0x9478e0 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:307:48> col:48 __y 'long double'
| | `-ParmVarDecl 0x947960 <col:53, col:58> col:58 __quo 'int *'
| |-FunctionDecl 0x947b80 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:255:1 lrintl 'long (long double) throw()' extern
| | |-ParmVarDecl 0x947ae0 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:314:41> col:41 __x 'long double'
| | `-NoThrowAttr 0x947c60 <<scratch space>:255:1> Implicit
| |-FunctionDecl 0x947d70 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:257:1 __lrintl 'long (long double) throw()' extern
| | `-ParmVarDecl 0x947cd0 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:314:41> col:41 __x 'long double'
| |-FunctionDecl 0x947f48 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:258:1 llrintl 'long long (long double) throw()' extern
| | |-ParmVarDecl 0x947e40 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:316:47> col:47 __x 'long double'
| | `-NoThrowAttr 0x948020 <<scratch space>:258:1> Implicit
| |-FunctionDecl 0x948130 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:260:1 __llrintl 'long long (long double) throw()' extern
| | `-ParmVarDecl 0x948090 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:316:47> col:47 __x 'long double'
| |-FunctionDecl 0x948290 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:261:1 lroundl 'long (long double) throw()' extern
| | |-ParmVarDecl 0x9481f0 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:320:42> col:42 __x 'long double'
| | `-NoThrowAttr 0x948338 <<scratch space>:261:1> Implicit
| |-FunctionDecl 0x948448 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:263:1 __lroundl 'long (long double) throw()' extern
| | `-ParmVarDecl 0x9483a8 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:320:42> col:42 __x 'long double'
| |-FunctionDecl 0x9485a8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:264:1 llroundl 'long long (long double) throw()' extern
| | |-ParmVarDecl 0x948508 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:322:48> col:48 __x 'long double'
| | `-NoThrowAttr 0x948650 <<scratch space>:264:1> Implicit
| |-FunctionDecl 0x948760 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:266:1 __llroundl 'long long (long double) throw()' extern
| | `-ParmVarDecl 0x9486c0 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:322:48> col:48 __x 'long double'
| |-FunctionDecl 0x948948 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:267:1 fdiml 'long double (long double, long double) throw()' extern
| | |-ParmVarDecl 0x948820 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:326:31> col:31 __x 'long double'
| | |-ParmVarDecl 0x9488a0 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:326:46> col:46 __y 'long double'
| | `-NoThrowAttr 0x9489f8 <<scratch space>:267:1> Implicit
| |-FunctionDecl 0x948b90 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:269:1 __fdiml 'long double (long double, long double) throw()' extern
| | |-ParmVarDecl 0x948a68 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:326:31> col:31 __x 'long double'
| | `-ParmVarDecl 0x948ae8 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:326:46> col:46 __y 'long double'
| |-FunctionDecl 0x948d80 </usr/include/math.h:283:3, line:280:66> <scratch space>:270:1 fmaxl 'long double (long double, long double) throw()' extern
| | |-ParmVarDecl 0x948c58 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:32> col:32 __x 'long double'
| | |-ParmVarDecl 0x948cd8 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:47> col:47 __y 'long double'
| | |-ConstAttr 0x948e50 <col:54>
| | `-NoThrowAttr 0x948ea8 <<scratch space>:270:1> Implicit
| |-FunctionDecl 0x949010 </usr/include/math.h:283:3, line:281:79> <scratch space>:272:1 __fmaxl 'long double (long double, long double) throw()' extern
| | |-ParmVarDecl 0x948ee8 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:32> col:32 __x 'long double'
| | |-ParmVarDecl 0x948f68 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:47> col:47 __y 'long double'
| | `-ConstAttr 0x9490c0 <col:54>
| |-FunctionDecl 0x949258 </usr/include/math.h:283:3, line:280:66> <scratch space>:273:1 fminl 'long double (long double, long double) throw()' extern
| | |-ParmVarDecl 0x949130 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:32> col:32 __x 'long double'
| | |-ParmVarDecl 0x9491b0 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:47> col:47 __y 'long double'
| | |-ConstAttr 0x949308 <col:54>
| | `-NoThrowAttr 0x949360 <<scratch space>:273:1> Implicit
| |-FunctionDecl 0x9494c8 </usr/include/math.h:283:3, line:281:79> <scratch space>:275:1 __fminl 'long double (long double, long double) throw()' extern
| | |-ParmVarDecl 0x9493a0 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:32> col:32 __x 'long double'
| | |-ParmVarDecl 0x949420 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:47> col:47 __y 'long double'
| | `-ConstAttr 0x949578 <col:54>
| |-FunctionDecl 0x949818 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:276:1 fmal 'long double (long double, long double, long double) throw()' extern
| | |-ParmVarDecl 0x9495e8 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:335:30> col:30 __x 'long double'
| | |-ParmVarDecl 0x949668 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:335:45> col:45 __y 'long double'
| | |-ParmVarDecl 0x9496e8 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:335:60> col:60 __z 'long double'
| | |-ConstAttr 0x949910 <<scratch space>:276:1> Implicit
| | `-NoThrowAttr 0x949968 <col:1> Implicit
| |-FunctionDecl 0x949b58 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:278:1 __fmal 'long double (long double, long double, long double) throw()' extern
| | |-ParmVarDecl 0x9499a8 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:335:30> col:30 __x 'long double'
| | |-ParmVarDecl 0x949a28 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:335:45> col:45 __y 'long double'
| | `-ParmVarDecl 0x949aa8 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:335:60> col:60 __z 'long double'
| |-FunctionDecl 0x949cc8 </usr/include/math.h:283:3, line:280:66> <scratch space>:280:1 roundevenl 'long double (long double) throw()' extern
| | |-ParmVarDecl 0x949c28 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:340:37> col:37 __x 'long double'
| | `-ConstAttr 0x949d70 <col:44>
| |-FunctionDecl 0x94aea8 </usr/include/math.h:283:3, line:281:79> <scratch space>:282:1 __roundevenl 'long double (long double) throw()' extern
| | |-ParmVarDecl 0x949de0 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:340:37> col:37 __x 'long double'
| | `-ConstAttr 0x94af50 <col:44>
| |-FunctionDecl 0x94b1f0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:283:1 fromfpl '__intmax_t (long double, int, unsigned int) throw()' extern
| | |-ParmVarDecl 0x94afc0 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:344:45> col:45 __x 'long double'
| | |-ParmVarDecl 0x94b040 <col:50, col:54> col:54 __round 'int'
| | `-ParmVarDecl 0x94b0c0 <line:345:7, col:20> col:20 __width 'unsigned int'
| |-FunctionDecl 0x94b468 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:285:1 __fromfpl '__intmax_t (long double, int, unsigned int) throw()' extern
| | |-ParmVarDecl 0x94b2c0 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:344:45> col:45 __x 'long double'
| | |-ParmVarDecl 0x94b340 <col:50, col:54> col:54 __round 'int'
| | `-ParmVarDecl 0x94b3c0 <line:345:7, col:20> col:20 __width 'unsigned int'
| |-FunctionDecl 0x94b760 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:286:1 ufromfpl '__uintmax_t (long double, int, unsigned int) throw()' extern
| | |-ParmVarDecl 0x94b538 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:349:47> col:47 __x 'long double'
| | |-ParmVarDecl 0x94b5b8 <col:52, col:56> col:56 __round 'int'
| | `-ParmVarDecl 0x94b638 <line:350:9, col:22> col:22 __width 'unsigned int'
| |-FunctionDecl 0x94b9d8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:288:1 __ufromfpl '__uintmax_t (long double, int, unsigned int) throw()' extern
| | |-ParmVarDecl 0x94b830 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:349:47> col:47 __x 'long double'
| | |-ParmVarDecl 0x94b8b0 <col:52, col:56> col:56 __round 'int'
| | `-ParmVarDecl 0x94b930 <line:350:9, col:22> col:22 __width 'unsigned int'
| |-FunctionDecl 0x94bc50 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:289:1 fromfpxl '__intmax_t (long double, int, unsigned int) throw()' extern
| | |-ParmVarDecl 0x94baa8 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:355:46> col:46 __x 'long double'
| | |-ParmVarDecl 0x94bb28 <col:51, col:55> col:55 __round 'int'
| | `-ParmVarDecl 0x94bba8 <line:356:8, col:21> col:21 __width 'unsigned int'
| |-FunctionDecl 0x94bf28 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:291:1 __fromfpxl '__intmax_t (long double, int, unsigned int) throw()' extern
| | |-ParmVarDecl 0x94bd20 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:355:46> col:46 __x 'long double'
| | |-ParmVarDecl 0x94bda0 <col:51, col:55> col:55 __round 'int'
| | `-ParmVarDecl 0x94be80 <line:356:8, col:21> col:21 __width 'unsigned int'
| |-FunctionDecl 0x94c1a0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:292:1 ufromfpxl '__uintmax_t (long double, int, unsigned int) throw()' extern
| | |-ParmVarDecl 0x94bff8 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:361:48> col:48 __x 'long double'
| | |-ParmVarDecl 0x94c078 <col:53, col:57> col:57 __round 'int'
| | `-ParmVarDecl 0x94c0f8 <line:362:10, col:23> col:23 __width 'unsigned int'
| |-FunctionDecl 0x94c418 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:294:1 __ufromfpxl '__uintmax_t (long double, int, unsigned int) throw()' extern
| | |-ParmVarDecl 0x94c270 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:361:48> col:48 __x 'long double'
| | |-ParmVarDecl 0x94c2f0 <col:53, col:57> col:57 __round 'int'
| | `-ParmVarDecl 0x94c370 <line:362:10, col:23> col:23 __width 'unsigned int'
| |-FunctionDecl 0x94c610 </usr/include/math.h:283:3, line:280:66> <scratch space>:295:1 fmaxmagl 'long double (long double, long double) throw()' extern
| | |-ParmVarDecl 0x94c4e8 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:365:35> col:35 __x 'long double'
| | |-ParmVarDecl 0x94c568 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:365:50> col:50 __y 'long double'
| | `-ConstAttr 0x94c6c0 <col:57>
| |-FunctionDecl 0x94c858 </usr/include/math.h:283:3, line:281:79> <scratch space>:297:1 __fmaxmagl 'long double (long double, long double) throw()' extern
| | |-ParmVarDecl 0x94c730 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:365:35> col:35 __x 'long double'
| | |-ParmVarDecl 0x94c7b0 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:365:50> col:50 __y 'long double'
| | `-ConstAttr 0x94c908 <col:57>
| |-FunctionDecl 0x94caa0 </usr/include/math.h:283:3, line:280:66> <scratch space>:298:1 fminmagl 'long double (long double, long double) throw()' extern
| | |-ParmVarDecl 0x94c978 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:368:35> col:35 __x 'long double'
| | |-ParmVarDecl 0x94c9f8 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:368:50> col:50 __y 'long double'
| | `-ConstAttr 0x94cb50 <col:57>
| |-FunctionDecl 0x94cce8 </usr/include/math.h:283:3, line:281:79> <scratch space>:300:1 __fminmagl 'long double (long double, long double) throw()' extern
| | |-ParmVarDecl 0x94cbc0 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:368:35> col:35 __x 'long double'
| | |-ParmVarDecl 0x94cc40 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:368:50> col:50 __y 'long double'
| | `-ConstAttr 0x94cd98 <col:57>
| |-FunctionDecl 0x94cff8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:301:1 canonicalizel 'int (long double *, const long double *) throw()' extern
| | |-ParmVarDecl 0x94ce08 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:371:47> col:47 __cx 'long double *'
| | `-ParmVarDecl 0x94ced0 <col:53, col:70> col:70 __x 'const long double *'
| |-FunctionDecl 0x94d268 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:226:54> <scratch space>:303:1 totalorderl 'int (const long double *, const long double *) throw()' extern
| | |-ParmVarDecl 0x94d0c0 </usr/include/x86_64-linux-gnu/bits/mathcalls.h:376:34, col:51> col:51 __x 'const long double *'
| | |-ParmVarDecl 0x94d140 <line:377:6, col:23> col:23 __y 'const long double *'
| | `-PureAttr 0x94d318 </usr/include/x86_64-linux-gnu/sys/cdefs.h:226:45>
| |-FunctionDecl 0x94d4b0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:226:54> <scratch space>:304:1 totalordermagl 'int (const long double *, const long double *) throw()' extern
| | |-ParmVarDecl 0x94d388 </usr/include/x86_64-linux-gnu/bits/mathcalls.h:381:37, col:54> col:54 __x 'const long double *'
| | |-ParmVarDecl 0x94d408 <line:382:9, col:26> col:26 __y 'const long double *'
| | `-PureAttr 0x94d560 </usr/include/x86_64-linux-gnu/sys/cdefs.h:226:45>
| |-FunctionDecl 0x94d6d8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:305:1 getpayloadl 'long double (const long double *) throw()' extern
| | `-ParmVarDecl 0x94d5d0 </usr/include/x86_64-linux-gnu/bits/mathcalls.h:386:27, col:44> col:44 __x 'const long double *'
| |-FunctionDecl 0x94d838 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:307:1 __getpayloadl 'long double (const long double *) throw()' extern
| | `-ParmVarDecl 0x94d798 </usr/include/x86_64-linux-gnu/bits/mathcalls.h:386:27, col:44> col:44 __x 'const long double *'
| |-FunctionDecl 0x94da98 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:308:1 setpayloadl 'int (long double *, long double) throw()' extern
| | |-ParmVarDecl 0x94d8f8 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:389:45> col:45 __x 'long double *'
| | `-ParmVarDecl 0x94d978 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:389:60> col:60 __payload 'long double'
| |-FunctionDecl 0x94dc88 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:309:1 setpayloadsigl 'int (long double *, long double) throw()' extern
| | |-ParmVarDecl 0x94db60 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:392:48> col:48 __x 'long double *'
| | `-ParmVarDecl 0x94dbe0 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:392:63> col:63 __payload 'long double'
| |-FunctionDecl 0x94dea0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:310:1 scalbl 'long double (long double, long double) throw()' extern
| | |-ParmVarDecl 0x94dd50 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:400:32> col:32 __x 'long double'
| | `-ParmVarDecl 0x94ddd0 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:400:47> col:47 __n 'long double'
| |-FunctionDecl 0x94e090 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:312:1 __scalbl 'long double (long double, long double) throw()' extern
| | |-ParmVarDecl 0x94df68 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:400:32> col:32 __x 'long double'
| | `-ParmVarDecl 0x94dfe8 </usr/include/math.h:344:22, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:400:47> col:47 __n 'long double'
| |-FunctionDecl 0x94e240 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:314:1 acosf32 '_Float32 (_Float32) throw()' extern
| | `-ParmVarDecl 0x94e170 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:53:31> col:31 __x '_Float32':'float'
| |-FunctionDecl 0x94e390 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:316:1 __acosf32 '_Float32 (_Float32) throw()' extern
| | `-ParmVarDecl 0x94e2f8 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:53:31> col:31 __x '_Float32':'float'
| |-FunctionDecl 0x94e4e0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:317:1 asinf32 '_Float32 (_Float32) throw()' extern
| | `-ParmVarDecl 0x94e448 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:55:31> col:31 __x '_Float32':'float'
| |-FunctionDecl 0x94e630 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:319:1 __asinf32 '_Float32 (_Float32) throw()' extern
| | `-ParmVarDecl 0x94e598 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:55:31> col:31 __x '_Float32':'float'
| |-FunctionDecl 0x94e780 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:320:1 atanf32 '_Float32 (_Float32) throw()' extern
| | `-ParmVarDecl 0x94e6e8 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:57:31> col:31 __x '_Float32':'float'
| |-FunctionDecl 0x94e8d0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:322:1 __atanf32 '_Float32 (_Float32) throw()' extern
| | `-ParmVarDecl 0x94e838 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:57:31> col:31 __x '_Float32':'float'
| |-FunctionDecl 0x94eae0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:323:1 atan2f32 '_Float32 (_Float32, _Float32) throw()' extern
| | |-ParmVarDecl 0x94e988 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:59:32> col:32 __y '_Float32':'float'
| | `-ParmVarDecl 0x94ea00 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:59:47> col:47 __x '_Float32':'float'
| |-FunctionDecl 0x94ecb8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:325:1 __atan2f32 '_Float32 (_Float32, _Float32) throw()' extern
| | |-ParmVarDecl 0x94eba0 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:59:32> col:32 __y '_Float32':'float'
| | `-ParmVarDecl 0x94ec18 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:59:47> col:47 __x '_Float32':'float'
| |-FunctionDecl 0x94eeb0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:328:1 cosf32 '_Float32 (_Float32) throw()' extern
| | `-ParmVarDecl 0x94ed78 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:62:34> col:34 __x '_Float32':'float'
| |-FunctionDecl 0x94f000 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:330:1 __cosf32 '_Float32 (_Float32) throw()' extern
| | `-ParmVarDecl 0x94ef68 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:62:34> col:34 __x '_Float32':'float'
| |-FunctionDecl 0x94f150 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:333:1 sinf32 '_Float32 (_Float32) throw()' extern
| | `-ParmVarDecl 0x94f0b8 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:64:34> col:34 __x '_Float32':'float'
| |-FunctionDecl 0x94f2a0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:335:1 __sinf32 '_Float32 (_Float32) throw()' extern
| | `-ParmVarDecl 0x94f208 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:64:34> col:34 __x '_Float32':'float'
| |-FunctionDecl 0x94f3f0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:336:1 tanf32 '_Float32 (_Float32) throw()' extern
| | `-ParmVarDecl 0x94f358 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:66:30> col:30 __x '_Float32':'float'
| |-FunctionDecl 0x94f540 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:338:1 __tanf32 '_Float32 (_Float32) throw()' extern
| | `-ParmVarDecl 0x94f4a8 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:66:30> col:30 __x '_Float32':'float'
| |-FunctionDecl 0x94f690 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:339:1 coshf32 '_Float32 (_Float32) throw()' extern
| | `-ParmVarDecl 0x94f5f8 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:71:31> col:31 __x '_Float32':'float'
| |-FunctionDecl 0x94f7e0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:341:1 __coshf32 '_Float32 (_Float32) throw()' extern
| | `-ParmVarDecl 0x94f748 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:71:31> col:31 __x '_Float32':'float'
| |-FunctionDecl 0x94f930 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:342:1 sinhf32 '_Float32 (_Float32) throw()' extern
| | `-ParmVarDecl 0x94f898 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:73:31> col:31 __x '_Float32':'float'
| |-FunctionDecl 0x94fa80 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:344:1 __sinhf32 '_Float32 (_Float32) throw()' extern
| | `-ParmVarDecl 0x94f9e8 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:73:31> col:31 __x '_Float32':'float'
| |-FunctionDecl 0x94fbd0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:345:1 tanhf32 '_Float32 (_Float32) throw()' extern
| | `-ParmVarDecl 0x94fb38 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:75:31> col:31 __x '_Float32':'float'
| |-FunctionDecl 0x94fd20 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:347:1 __tanhf32 '_Float32 (_Float32) throw()' extern
| | `-ParmVarDecl 0x94fc88 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:75:31> col:31 __x '_Float32':'float'
| |-FunctionDecl 0x950220 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:350:1 sincosf32 'void (_Float32, _Float32 *, _Float32 *) throw()' extern
| | |-ParmVarDecl 0x94fdd8 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:80:14> col:14 __x '_Float32':'float'
| | |-ParmVarDecl 0x9500c0 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:80:30> col:30 __sinx '_Float32 *'
| | `-ParmVarDecl 0x950138 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:80:49> col:49 __cosx '_Float32 *'
| |-FunctionDecl 0x950480 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:352:1 __sincosf32 'void (_Float32, _Float32 *, _Float32 *) throw()' extern
| | |-ParmVarDecl 0x9502e8 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:80:14> col:14 __x '_Float32':'float'
| | |-ParmVarDecl 0x950360 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:80:30> col:30 __sinx '_Float32 *'
| | `-ParmVarDecl 0x9503d8 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:80:49> col:49 __cosx '_Float32 *'
| |-FunctionDecl 0x9505e0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:353:1 acoshf32 '_Float32 (_Float32) throw()' extern
| | `-ParmVarDecl 0x950548 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:85:32> col:32 __x '_Float32':'float'
| |-FunctionDecl 0x950730 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:355:1 __acoshf32 '_Float32 (_Float32) throw()' extern
| | `-ParmVarDecl 0x950698 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:85:32> col:32 __x '_Float32':'float'
| |-FunctionDecl 0x950880 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:356:1 asinhf32 '_Float32 (_Float32) throw()' extern
| | `-ParmVarDecl 0x9507e8 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:87:32> col:32 __x '_Float32':'float'
| |-FunctionDecl 0x9509d0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:358:1 __asinhf32 '_Float32 (_Float32) throw()' extern
| | `-ParmVarDecl 0x950938 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:87:32> col:32 __x '_Float32':'float'
| |-FunctionDecl 0x950b20 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:359:1 atanhf32 '_Float32 (_Float32) throw()' extern
| | `-ParmVarDecl 0x950a88 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:89:32> col:32 __x '_Float32':'float'
| |-FunctionDecl 0x950c70 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:361:1 __atanhf32 '_Float32 (_Float32) throw()' extern
| | `-ParmVarDecl 0x950bd8 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:89:32> col:32 __x '_Float32':'float'
| |-FunctionDecl 0x950dc0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:364:1 expf32 '_Float32 (_Float32) throw()' extern
| | `-ParmVarDecl 0x950d28 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:95:34> col:34 __x '_Float32':'float'
| |-FunctionDecl 0x950f10 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:366:1 __expf32 '_Float32 (_Float32) throw()' extern
| | `-ParmVarDecl 0x950e78 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:95:34> col:34 __x '_Float32':'float'
| |-FunctionDecl 0x951140 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:367:1 frexpf32 '_Float32 (_Float32, int *) throw()' extern
| | |-ParmVarDecl 0x950fc8 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:98:32> col:32 __x '_Float32':'float'
| | `-ParmVarDecl 0x951048 <col:37, col:42> col:42 __exponent 'int *'
| |-FunctionDecl 0x951320 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:369:1 __frexpf32 '_Float32 (_Float32, int *) throw()' extern
| | |-ParmVarDecl 0x951200 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:98:32> col:32 __x '_Float32':'float'
| | `-ParmVarDecl 0x951280 <col:37, col:42> col:42 __exponent 'int *'
| |-FunctionDecl 0x951540 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:370:1 ldexpf32 '_Float32 (_Float32, int) throw()' extern
| | |-ParmVarDecl 0x9513e0 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:101:32> col:32 __x '_Float32':'float'
| | `-ParmVarDecl 0x951460 <col:37, col:41> col:41 __exponent 'int'
| |-FunctionDecl 0x951720 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:372:1 __ldexpf32 '_Float32 (_Float32, int) throw()' extern
| | |-ParmVarDecl 0x951600 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:101:32> col:32 __x '_Float32':'float'
| | `-ParmVarDecl 0x951680 <col:37, col:41> col:41 __exponent 'int'
| |-FunctionDecl 0x951878 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:375:1 logf32 '_Float32 (_Float32) throw()' extern
| | `-ParmVarDecl 0x9517e0 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:104:34> col:34 __x '_Float32':'float'
| |-FunctionDecl 0x9519c8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:377:1 __logf32 '_Float32 (_Float32) throw()' extern
| | `-ParmVarDecl 0x951930 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:104:34> col:34 __x '_Float32':'float'
| |-FunctionDecl 0x951b18 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:378:1 log10f32 '_Float32 (_Float32) throw()' extern
| | `-ParmVarDecl 0x951a80 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:107:32> col:32 __x '_Float32':'float'
| |-FunctionDecl 0x951c68 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:380:1 __log10f32 '_Float32 (_Float32) throw()' extern
| | `-ParmVarDecl 0x951bd0 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:107:32> col:32 __x '_Float32':'float'
| |-FunctionDecl 0x951e70 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:381:1 modff32 '_Float32 (_Float32, _Float32 *) throw()' extern
| | |-ParmVarDecl 0x951d20 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:110:31> col:31 __x '_Float32':'float'
| | `-ParmVarDecl 0x951d98 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:110:47> col:47 __iptr '_Float32 *'
| |-FunctionDecl 0x9520e0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> <scratch space>:383:1 __modff32 '_Float32 (_Float32, _Float32 *) throw()' extern
| | |-ParmVarDecl 0x951f30 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:110:31> col:31 __x '_Float32':'float'
| | |-ParmVarDecl 0x951fa8 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:110:47> col:47 __iptr '_Float32 *'
| | `-NonNullAttr 0x952190 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:110:69> 2
| |-FunctionDecl 0x9522a0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:385:1 exp10f32 '_Float32 (_Float32) throw()' extern
| | `-ParmVarDecl 0x952208 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:114:32> col:32 __x '_Float32':'float'
| |-FunctionDecl 0x9523f0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:387:1 __exp10f32 '_Float32 (_Float32) throw()' extern
| | `-ParmVarDecl 0x952358 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:114:32> col:32 __x '_Float32':'float'
| |-FunctionDecl 0x952540 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:388:1 expm1f32 '_Float32 (_Float32) throw()' extern
| | `-ParmVarDecl 0x9524a8 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:119:32> col:32 __x '_Float32':'float'
| |-FunctionDecl 0x952690 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:390:1 __expm1f32 '_Float32 (_Float32) throw()' extern
| | `-ParmVarDecl 0x9525f8 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:119:32> col:32 __x '_Float32':'float'
| |-FunctionDecl 0x9527e0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:391:1 log1pf32 '_Float32 (_Float32) throw()' extern
| | `-ParmVarDecl 0x952748 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:122:32> col:32 __x '_Float32':'float'
| |-FunctionDecl 0x952930 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:2:1 __log1pf32 '_Float32 (_Float32) throw()' extern
| | `-ParmVarDecl 0x952898 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:122:32> col:32 __x '_Float32':'float'
| |-FunctionDecl 0x952a80 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:3:1 logbf32 '_Float32 (_Float32) throw()' extern
| | `-ParmVarDecl 0x9529e8 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:125:31> col:31 __x '_Float32':'float'
| |-FunctionDecl 0x952bd0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:5:1 __logbf32 '_Float32 (_Float32) throw()' extern
| | `-ParmVarDecl 0x952b38 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:125:31> col:31 __x '_Float32':'float'
| |-FunctionDecl 0x952d20 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:6:1 exp2f32 '_Float32 (_Float32) throw()' extern
| | `-ParmVarDecl 0x952c88 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:130:31> col:31 __x '_Float32':'float'
| |-FunctionDecl 0x952e70 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:8:1 __exp2f32 '_Float32 (_Float32) throw()' extern
| | `-ParmVarDecl 0x952dd8 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:130:31> col:31 __x '_Float32':'float'
| |-FunctionDecl 0x952fc0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:9:1 log2f32 '_Float32 (_Float32) throw()' extern
| | `-ParmVarDecl 0x952f28 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:133:31> col:31 __x '_Float32':'float'
| |-FunctionDecl 0x955150 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:11:1 __log2f32 '_Float32 (_Float32) throw()' extern
| | `-ParmVarDecl 0x953078 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:133:31> col:31 __x '_Float32':'float'
| |-FunctionDecl 0x955320 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:14:1 powf32 '_Float32 (_Float32, _Float32) throw()' extern
| | |-ParmVarDecl 0x955208 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:140:34> col:34 __x '_Float32':'float'
| | `-ParmVarDecl 0x955280 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:140:49> col:49 __y '_Float32':'float'
| |-FunctionDecl 0x9554f8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:16:1 __powf32 '_Float32 (_Float32, _Float32) throw()' extern
| | |-ParmVarDecl 0x9553e0 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:140:34> col:34 __x '_Float32':'float'
| | `-ParmVarDecl 0x955458 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:140:49> col:49 __y '_Float32':'float'
| |-FunctionDecl 0x955650 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:17:1 sqrtf32 '_Float32 (_Float32) throw()' extern
| | `-ParmVarDecl 0x9555b8 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:143:31> col:31 __x '_Float32':'float'
| |-FunctionDecl 0x9557a0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:19:1 __sqrtf32 '_Float32 (_Float32) throw()' extern
| | `-ParmVarDecl 0x955708 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:143:31> col:31 __x '_Float32':'float'
| |-FunctionDecl 0x955970 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:20:1 hypotf32 '_Float32 (_Float32, _Float32) throw()' extern
| | |-ParmVarDecl 0x955858 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:147:32> col:32 __x '_Float32':'float'
| | `-ParmVarDecl 0x9558d0 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:147:47> col:47 __y '_Float32':'float'
| |-FunctionDecl 0x955b48 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:22:1 __hypotf32 '_Float32 (_Float32, _Float32) throw()' extern
| | |-ParmVarDecl 0x955a30 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:147:32> col:32 __x '_Float32':'float'
| | `-ParmVarDecl 0x955aa8 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:147:47> col:47 __y '_Float32':'float'
| |-FunctionDecl 0x955ca0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:23:1 cbrtf32 '_Float32 (_Float32) throw()' extern
| | `-ParmVarDecl 0x955c08 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:152:31> col:31 __x '_Float32':'float'
| |-FunctionDecl 0x955df0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:25:1 __cbrtf32 '_Float32 (_Float32) throw()' extern
| | `-ParmVarDecl 0x955d58 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:152:31> col:31 __x '_Float32':'float'
| |-FunctionDecl 0x955f40 </usr/include/math.h:283:3, line:280:66> <scratch space>:26:1 ceilf32 '_Float32 (_Float32) throw()' extern
| | |-ParmVarDecl 0x955ea8 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:159:32> col:32 __x '_Float32':'float'
| | `-ConstAttr 0x955fe8 <col:39>
| |-FunctionDecl 0x956130 </usr/include/math.h:283:3, line:281:79> <scratch space>:28:1 __ceilf32 '_Float32 (_Float32) throw()' extern
| | |-ParmVarDecl 0x956050 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:159:32> col:32 __x '_Float32':'float'
| | `-ConstAttr 0x9561d8 <col:39>
| |-FunctionDecl 0x9562d8 </usr/include/math.h:283:3, line:280:66> <scratch space>:29:1 fabsf32 '_Float32 (_Float32) throw()' extern
| | |-ParmVarDecl 0x956240 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:162:32> col:32 __x '_Float32':'float'
| | `-ConstAttr 0x956380 <col:39>
| |-FunctionDecl 0x956480 </usr/include/math.h:283:3, line:281:79> <scratch space>:31:1 __fabsf32 '_Float32 (_Float32) throw()' extern
| | |-ParmVarDecl 0x9563e8 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:162:32> col:32 __x '_Float32':'float'
| | `-ConstAttr 0x956528 <col:39>
| |-FunctionDecl 0x956628 </usr/include/math.h:283:3, line:280:66> <scratch space>:32:1 floorf32 '_Float32 (_Float32) throw()' extern
| | |-ParmVarDecl 0x956590 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:165:33> col:33 __x '_Float32':'float'
| | `-ConstAttr 0x9566d0 <col:40>
| |-FunctionDecl 0x9567d0 </usr/include/math.h:283:3, line:281:79> <scratch space>:34:1 __floorf32 '_Float32 (_Float32) throw()' extern
| | |-ParmVarDecl 0x956738 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:165:33> col:33 __x '_Float32':'float'
| | `-ConstAttr 0x956878 <col:40>
| |-FunctionDecl 0x9569f8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:35:1 fmodf32 '_Float32 (_Float32, _Float32) throw()' extern
| | |-ParmVarDecl 0x9568e0 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:168:31> col:31 __x '_Float32':'float'
| | `-ParmVarDecl 0x956958 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:168:46> col:46 __y '_Float32':'float'
| |-FunctionDecl 0x956bd0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:37:1 __fmodf32 '_Float32 (_Float32, _Float32) throw()' extern
| | |-ParmVarDecl 0x956ab8 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:168:31> col:31 __x '_Float32':'float'
| | `-ParmVarDecl 0x956b30 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:168:46> col:46 __y '_Float32':'float'
| |-FunctionDecl 0x956da8 </usr/include/math.h:283:3, line:280:66> <scratch space>:38:1 copysignf32 '_Float32 (_Float32, _Float32) throw()' extern
| | |-ParmVarDecl 0x956c90 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:196:36> col:36 __x '_Float32':'float'
| | |-ParmVarDecl 0x956d08 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:196:51> col:51 __y '_Float32':'float'
| | `-ConstAttr 0x956e58 <col:58>
| |-FunctionDecl 0x956fd8 </usr/include/math.h:283:3, line:281:79> <scratch space>:40:1 __copysignf32 '_Float32 (_Float32, _Float32) throw()' extern
| | |-ParmVarDecl 0x956ec0 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:196:36> col:36 __x '_Float32':'float'
| | |-ParmVarDecl 0x956f38 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:196:51> col:51 __y '_Float32':'float'
| | `-ConstAttr 0x957088 <col:58>
| |-FunctionDecl 0x957210 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:41:1 nanf32 '_Float32 (const char *) throw()' extern
| | `-ParmVarDecl 0x957140 </usr/include/x86_64-linux-gnu/bits/mathcalls.h:201:20, col:32> col:32 __tagb 'const char *'
| |-FunctionDecl 0x957368 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:43:1 __nanf32 '_Float32 (const char *) throw()' extern
| | `-ParmVarDecl 0x9572d0 </usr/include/x86_64-linux-gnu/bits/mathcalls.h:201:20, col:32> col:32 __tagb 'const char *'
| |-FunctionDecl 0x9574b8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:44:1 j0f32 '_Float32 (_Float32) throw()' extern
| | `-ParmVarDecl 0x957420 </usr/include/math.h:381:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:217:28 '_Float32':'float'
| |-FunctionDecl 0x957608 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:46:1 __j0f32 '_Float32 (_Float32) throw()' extern
| | `-ParmVarDecl 0x957570 </usr/include/math.h:381:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:217:28 '_Float32':'float'
| |-FunctionDecl 0x957758 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:47:1 j1f32 '_Float32 (_Float32) throw()' extern
| | `-ParmVarDecl 0x9576c0 </usr/include/math.h:381:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:218:28 '_Float32':'float'
| |-FunctionDecl 0x9578a8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:49:1 __j1f32 '_Float32 (_Float32) throw()' extern
| | `-ParmVarDecl 0x957810 </usr/include/math.h:381:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:218:28 '_Float32':'float'
| |-FunctionDecl 0x957ac0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:50:1 jnf32 '_Float32 (int, _Float32) throw()' extern
| | |-ParmVarDecl 0x957968 </usr/include/x86_64-linux-gnu/bits/mathcalls.h:219:19> col:22 'int'
| | `-ParmVarDecl 0x9579e0 </usr/include/math.h:381:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:219:33 '_Float32':'float'
| |-FunctionDecl 0x957ca0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:52:1 __jnf32 '_Float32 (int, _Float32) throw()' extern
| | |-ParmVarDecl 0x957b88 </usr/include/x86_64-linux-gnu/bits/mathcalls.h:219:19> col:22 'int'
| | `-ParmVarDecl 0x957c00 </usr/include/math.h:381:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:219:33 '_Float32':'float'
| |-FunctionDecl 0x957df8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:53:1 y0f32 '_Float32 (_Float32) throw()' extern
| | `-ParmVarDecl 0x957d60 </usr/include/math.h:381:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:220:28 '_Float32':'float'
| |-FunctionDecl 0x957f48 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:55:1 __y0f32 '_Float32 (_Float32) throw()' extern
| | `-ParmVarDecl 0x957eb0 </usr/include/math.h:381:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:220:28 '_Float32':'float'
| |-FunctionDecl 0x958098 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:56:1 y1f32 '_Float32 (_Float32) throw()' extern
| | `-ParmVarDecl 0x958000 </usr/include/math.h:381:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:221:28 '_Float32':'float'
| |-FunctionDecl 0x9581f8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:58:1 __y1f32 '_Float32 (_Float32) throw()' extern
| | `-ParmVarDecl 0x958160 </usr/include/math.h:381:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:221:28 '_Float32':'float'
| |-FunctionDecl 0x9583d0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:59:1 ynf32 '_Float32 (int, _Float32) throw()' extern
| | |-ParmVarDecl 0x9582b8 </usr/include/x86_64-linux-gnu/bits/mathcalls.h:222:19> col:22 'int'
| | `-ParmVarDecl 0x958330 </usr/include/math.h:381:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:222:33 '_Float32':'float'
| |-FunctionDecl 0x9585b0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:61:1 __ynf32 '_Float32 (int, _Float32) throw()' extern
| | |-ParmVarDecl 0x958498 </usr/include/x86_64-linux-gnu/bits/mathcalls.h:222:19> col:22 'int'
| | `-ParmVarDecl 0x958510 </usr/include/math.h:381:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:222:33 '_Float32':'float'
| |-FunctionDecl 0x958708 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:62:1 erff32 '_Float32 (_Float32) throw()' extern
| | `-ParmVarDecl 0x958670 </usr/include/math.h:381:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:228:29 '_Float32':'float'
| |-FunctionDecl 0x958858 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:64:1 __erff32 '_Float32 (_Float32) throw()' extern
| | `-ParmVarDecl 0x9587c0 </usr/include/math.h:381:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:228:29 '_Float32':'float'
| |-FunctionDecl 0x9589a8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:65:1 erfcf32 '_Float32 (_Float32) throw()' extern
| | `-ParmVarDecl 0x958910 </usr/include/math.h:381:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:229:30 '_Float32':'float'
| |-FunctionDecl 0x958af8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:67:1 __erfcf32 '_Float32 (_Float32) throw()' extern
| | `-ParmVarDecl 0x958a60 </usr/include/math.h:381:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:229:30 '_Float32':'float'
| |-FunctionDecl 0x958c48 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:68:1 lgammaf32 '_Float32 (_Float32) throw()' extern
| | `-ParmVarDecl 0x958bb0 </usr/include/math.h:381:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:230:32 '_Float32':'float'
| |-FunctionDecl 0x958d98 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:70:1 __lgammaf32 '_Float32 (_Float32) throw()' extern
| | `-ParmVarDecl 0x958d00 </usr/include/math.h:381:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:230:32 '_Float32':'float'
| |-FunctionDecl 0x958ee8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:71:1 tgammaf32 '_Float32 (_Float32) throw()' extern
| | `-ParmVarDecl 0x958e50 </usr/include/math.h:381:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:235:32 '_Float32':'float'
| |-FunctionDecl 0x959038 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:73:1 __tgammaf32 '_Float32 (_Float32) throw()' extern
| | `-ParmVarDecl 0x958fa0 </usr/include/math.h:381:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:235:32 '_Float32':'float'
| |-FunctionDecl 0x959280 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:75:1 lgammaf32_r '_Float32 (_Float32, int *) throw()' extern
| | |-ParmVarDecl 0x959160 </usr/include/math.h:381:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:249:34 '_Float32':'float'
| | `-ParmVarDecl 0x9591e0 <col:36, col:41> col:41 __signgamp 'int *'
| |-FunctionDecl 0x959460 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:78:1 __lgammaf32_r '_Float32 (_Float32, int *) throw()' extern
| | |-ParmVarDecl 0x959340 </usr/include/math.h:381:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:249:34 '_Float32':'float'
| | `-ParmVarDecl 0x9593c0 <col:36, col:41> col:41 __signgamp 'int *'
| |-FunctionDecl 0x9595b8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:79:1 rintf32 '_Float32 (_Float32) throw()' extern
| | `-ParmVarDecl 0x959520 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:256:31> col:31 __x '_Float32':'float'
| |-FunctionDecl 0x959708 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:81:1 __rintf32 '_Float32 (_Float32) throw()' extern
| | `-ParmVarDecl 0x959670 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:256:31> col:31 __x '_Float32':'float'
| |-FunctionDecl 0x9598d8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:82:1 nextafterf32 '_Float32 (_Float32, _Float32) throw()' extern
| | |-ParmVarDecl 0x9597c0 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:259:36> col:36 __x '_Float32':'float'
| | `-ParmVarDecl 0x959838 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:259:51> col:51 __y '_Float32':'float'
| |-FunctionDecl 0x959ab0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:84:1 __nextafterf32 '_Float32 (_Float32, _Float32) throw()' extern
| | |-ParmVarDecl 0x959998 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:259:36> col:36 __x '_Float32':'float'
| | `-ParmVarDecl 0x959a10 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:259:51> col:51 __y '_Float32':'float'
| |-FunctionDecl 0x959c08 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:86:1 nextdownf32 '_Float32 (_Float32) throw()' extern
| | `-ParmVarDecl 0x959b70 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:266:35> col:35 __x '_Float32':'float'
| |-FunctionDecl 0x959d58 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:88:1 __nextdownf32 '_Float32 (_Float32) throw()' extern
| | `-ParmVarDecl 0x959cc0 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:266:35> col:35 __x '_Float32':'float'
| |-FunctionDecl 0x959ea8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:89:1 nextupf32 '_Float32 (_Float32) throw()' extern
| | `-ParmVarDecl 0x959e10 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:268:33> col:33 __x '_Float32':'float'
| |-FunctionDecl 0x959ff8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:91:1 __nextupf32 '_Float32 (_Float32) throw()' extern
| | `-ParmVarDecl 0x959f60 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:268:33> col:33 __x '_Float32':'float'
| |-FunctionDecl 0x95a210 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:92:1 remainderf32 '_Float32 (_Float32, _Float32) throw()' extern
| | |-ParmVarDecl 0x95a0b0 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:36> col:36 __x '_Float32':'float'
| | `-ParmVarDecl 0x95a170 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:51> col:51 __y '_Float32':'float'
| |-FunctionDecl 0x95a3e8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:94:1 __remainderf32 '_Float32 (_Float32, _Float32) throw()' extern
| | |-ParmVarDecl 0x95a2d0 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:36> col:36 __x '_Float32':'float'
| | `-ParmVarDecl 0x95a348 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:51> col:51 __y '_Float32':'float'
| |-FunctionDecl 0x95a5c8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:95:1 scalbnf32 '_Float32 (_Float32, int) throw()' extern
| | |-ParmVarDecl 0x95a4a8 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:276:33> col:33 __x '_Float32':'float'
| | `-ParmVarDecl 0x95a528 <col:38, col:42> col:42 __n 'int'
| |-FunctionDecl 0x95a7a8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:97:1 __scalbnf32 '_Float32 (_Float32, int) throw()' extern
| | |-ParmVarDecl 0x95a688 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:276:33> col:33 __x '_Float32':'float'
| | `-ParmVarDecl 0x95a708 <col:38, col:42> col:42 __n 'int'
| |-FunctionDecl 0x95a938 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:98:1 ilogbf32 'int (_Float32) throw()' extern
| | `-ParmVarDecl 0x95a868 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:280:36> col:36 __x '_Float32':'float'
| |-FunctionDecl 0x95aa90 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:100:1 __ilogbf32 'int (_Float32) throw()' extern
| | `-ParmVarDecl 0x95a9f0 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:280:36> col:36 __x '_Float32':'float'
| |-FunctionDecl 0x95ac18 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:102:1 llogbf32 'long (_Float32) throw()' extern
| | `-ParmVarDecl 0x95ab48 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:285:42> col:42 __x '_Float32':'float'
| |-FunctionDecl 0x95ad70 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:104:1 __llogbf32 'long (_Float32) throw()' extern
| | `-ParmVarDecl 0x95acd0 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:285:42> col:42 __x '_Float32':'float'
| |-FunctionDecl 0x95af80 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:105:1 scalblnf32 '_Float32 (_Float32, long) throw()' extern
| | |-ParmVarDecl 0x95ae28 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:290:34> col:34 __x '_Float32':'float'
| | `-ParmVarDecl 0x95aea8 <col:39, col:48> col:48 __n 'long'
| |-FunctionDecl 0x95b180 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:107:1 __scalblnf32 '_Float32 (_Float32, long) throw()' extern
| | |-ParmVarDecl 0x95b040 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:290:34> col:34 __x '_Float32':'float'
| | `-ParmVarDecl 0x95b0c0 <col:39, col:48> col:48 __n 'long'
| |-FunctionDecl 0x95b2d8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:108:1 nearbyintf32 '_Float32 (_Float32) throw()' extern
| | `-ParmVarDecl 0x95b240 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:294:36> col:36 __x '_Float32':'float'
| |-FunctionDecl 0x95b428 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:110:1 __nearbyintf32 '_Float32 (_Float32) throw()' extern
| | `-ParmVarDecl 0x95b390 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:294:36> col:36 __x '_Float32':'float'
| |-FunctionDecl 0x95b578 </usr/include/math.h:283:3, line:280:66> <scratch space>:111:1 roundf32 '_Float32 (_Float32) throw()' extern
| | |-ParmVarDecl 0x95b4e0 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:33> col:33 __x '_Float32':'float'
| | `-ConstAttr 0x95b620 <col:40>
| |-FunctionDecl 0x95b720 </usr/include/math.h:283:3, line:281:79> <scratch space>:113:1 __roundf32 '_Float32 (_Float32) throw()' extern
| | |-ParmVarDecl 0x95b688 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:33> col:33 __x '_Float32':'float'
| | `-ConstAttr 0x95b7c8 <col:40>
| |-FunctionDecl 0x95b8c8 </usr/include/math.h:283:3, line:280:66> <scratch space>:114:1 truncf32 '_Float32 (_Float32) throw()' extern
| | |-ParmVarDecl 0x95b830 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:302:33> col:33 __x '_Float32':'float'
| | `-ConstAttr 0x95b970 <col:40>
| |-FunctionDecl 0x95ba70 </usr/include/math.h:283:3, line:281:79> <scratch space>:116:1 __truncf32 '_Float32 (_Float32) throw()' extern
| | |-ParmVarDecl 0x95b9d8 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:302:33> col:33 __x '_Float32':'float'
| | `-ConstAttr 0x95bb18 <col:40>
| |-FunctionDecl 0x95bd60 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:117:1 remquof32 '_Float32 (_Float32, _Float32, int *) throw()' extern
| | |-ParmVarDecl 0x95bb80 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:307:33> col:33 __x '_Float32':'float'
| | |-ParmVarDecl 0x95bbf8 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:307:48> col:48 __y '_Float32':'float'
| | `-ParmVarDecl 0x95bc78 <col:53, col:58> col:58 __quo 'int *'
| |-FunctionDecl 0x95bfc8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:119:1 __remquof32 '_Float32 (_Float32, _Float32, int *) throw()' extern
| | |-ParmVarDecl 0x95be28 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:307:33> col:33 __x '_Float32':'float'
| | |-ParmVarDecl 0x95bea0 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:307:48> col:48 __y '_Float32':'float'
| | `-ParmVarDecl 0x95bf20 <col:53, col:58> col:58 __quo 'int *'
| |-FunctionDecl 0x95c640 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:120:1 lrintf32 'long (_Float32) throw()' extern
| | `-ParmVarDecl 0x95c090 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:314:41> col:41 __x '_Float32':'float'
| |-FunctionDecl 0x95c798 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:122:1 __lrintf32 'long (_Float32) throw()' extern
| | `-ParmVarDecl 0x95c6f8 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:314:41> col:41 __x '_Float32':'float'
| |-FunctionDecl 0x95c928 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:123:1 llrintf32 'long long (_Float32) throw()' extern
| | `-ParmVarDecl 0x95c850 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:316:47> col:47 __x '_Float32':'float'
| |-FunctionDecl 0x95ca80 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:125:1 __llrintf32 'long long (_Float32) throw()' extern
| | `-ParmVarDecl 0x95c9e0 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:316:47> col:47 __x '_Float32':'float'
| |-FunctionDecl 0x95cbd8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:126:1 lroundf32 'long (_Float32) throw()' extern
| | `-ParmVarDecl 0x95cb38 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:320:42> col:42 __x '_Float32':'float'
| |-FunctionDecl 0x95cd30 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:128:1 __lroundf32 'long (_Float32) throw()' extern
| | `-ParmVarDecl 0x95cc90 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:320:42> col:42 __x '_Float32':'float'
| |-FunctionDecl 0x95ce88 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:129:1 llroundf32 'long long (_Float32) throw()' extern
| | `-ParmVarDecl 0x95cde8 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:322:48> col:48 __x '_Float32':'float'
| |-FunctionDecl 0x95cfe0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:131:1 __llroundf32 'long long (_Float32) throw()' extern
| | `-ParmVarDecl 0x95cf40 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:322:48> col:48 __x '_Float32':'float'
| |-FunctionDecl 0x95d1b0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:132:1 fdimf32 '_Float32 (_Float32, _Float32) throw()' extern
| | |-ParmVarDecl 0x95d098 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:326:31> col:31 __x '_Float32':'float'
| | `-ParmVarDecl 0x95d110 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:326:46> col:46 __y '_Float32':'float'
| |-FunctionDecl 0x95d388 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:134:1 __fdimf32 '_Float32 (_Float32, _Float32) throw()' extern
| | |-ParmVarDecl 0x95d270 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:326:31> col:31 __x '_Float32':'float'
| | `-ParmVarDecl 0x95d2e8 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:326:46> col:46 __y '_Float32':'float'
| |-FunctionDecl 0x95d560 </usr/include/math.h:283:3, line:280:66> <scratch space>:135:1 fmaxf32 '_Float32 (_Float32, _Float32) throw()' extern
| | |-ParmVarDecl 0x95d448 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:32> col:32 __x '_Float32':'float'
| | |-ParmVarDecl 0x95d4c0 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:47> col:47 __y '_Float32':'float'
| | `-ConstAttr 0x95d610 <col:54>
| |-FunctionDecl 0x95e7b8 </usr/include/math.h:283:3, line:281:79> <scratch space>:137:1 __fmaxf32 '_Float32 (_Float32, _Float32) throw()' extern
| | |-ParmVarDecl 0x95e6a0 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:32> col:32 __x '_Float32':'float'
| | |-ParmVarDecl 0x95e718 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:47> col:47 __y '_Float32':'float'
| | `-ConstAttr 0x95e868 <col:54>
| |-FunctionDecl 0x95e9e8 </usr/include/math.h:283:3, line:280:66> <scratch space>:138:1 fminf32 '_Float32 (_Float32, _Float32) throw()' extern
| | |-ParmVarDecl 0x95e8d0 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:32> col:32 __x '_Float32':'float'
| | |-ParmVarDecl 0x95e948 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:47> col:47 __y '_Float32':'float'
| | `-ConstAttr 0x95ea98 <col:54>
| |-FunctionDecl 0x95ec18 </usr/include/math.h:283:3, line:281:79> <scratch space>:140:1 __fminf32 '_Float32 (_Float32, _Float32) throw()' extern
| | |-ParmVarDecl 0x95eb00 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:32> col:32 __x '_Float32':'float'
| | |-ParmVarDecl 0x95eb78 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:47> col:47 __y '_Float32':'float'
| | `-ConstAttr 0x95ecc8 <col:54>
| |-FunctionDecl 0x95ef10 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:141:1 fmaf32 '_Float32 (_Float32, _Float32, _Float32) throw()' extern
| | |-ParmVarDecl 0x95ed30 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:335:30> col:30 __x '_Float32':'float'
| | |-ParmVarDecl 0x95eda8 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:335:45> col:45 __y '_Float32':'float'
| | `-ParmVarDecl 0x95ee20 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:335:60> col:60 __z '_Float32':'float'
| |-FunctionDecl 0x95f170 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:143:1 __fmaf32 '_Float32 (_Float32, _Float32, _Float32) throw()' extern
| | |-ParmVarDecl 0x95efd8 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:335:30> col:30 __x '_Float32':'float'
| | |-ParmVarDecl 0x95f050 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:335:45> col:45 __y '_Float32':'float'
| | `-ParmVarDecl 0x95f0c8 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:335:60> col:60 __z '_Float32':'float'
| |-FunctionDecl 0x95f2d0 </usr/include/math.h:283:3, line:280:66> <scratch space>:145:1 roundevenf32 '_Float32 (_Float32) throw()' extern
| | |-ParmVarDecl 0x95f238 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:340:37> col:37 __x '_Float32':'float'
| | `-ConstAttr 0x95f378 <col:44>
| |-FunctionDecl 0x95f478 </usr/include/math.h:283:3, line:281:79> <scratch space>:147:1 __roundevenf32 '_Float32 (_Float32) throw()' extern
| | |-ParmVarDecl 0x95f3e0 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:340:37> col:37 __x '_Float32':'float'
| | `-ConstAttr 0x95f520 <col:44>
| |-FunctionDecl 0x95fa40 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:148:1 fromfpf32 '__intmax_t (_Float32, int, unsigned int) throw()' extern
| | |-ParmVarDecl 0x95f588 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:344:45> col:45 __x '_Float32':'float'
| | |-ParmVarDecl 0x95f8d0 <col:50, col:54> col:54 __round 'int'
| | `-ParmVarDecl 0x95f950 <line:345:7, col:20> col:20 __width 'unsigned int'
| |-FunctionDecl 0x95fcb0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:150:1 __fromfpf32 '__intmax_t (_Float32, int, unsigned int) throw()' extern
| | |-ParmVarDecl 0x95fb08 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:344:45> col:45 __x '_Float32':'float'
| | |-ParmVarDecl 0x95fb88 <col:50, col:54> col:54 __round 'int'
| | `-ParmVarDecl 0x95fc08 <line:345:7, col:20> col:20 __width 'unsigned int'
| |-FunctionDecl 0x95ff60 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:151:1 ufromfpf32 '__uintmax_t (_Float32, int, unsigned int) throw()' extern
| | |-ParmVarDecl 0x95fd78 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:349:47> col:47 __x '_Float32':'float'
| | |-ParmVarDecl 0x95fdf8 <col:52, col:56> col:56 __round 'int'
| | `-ParmVarDecl 0x95fe78 <line:350:9, col:22> col:22 __width 'unsigned int'
| |-FunctionDecl 0x9601d0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:153:1 __ufromfpf32 '__uintmax_t (_Float32, int, unsigned int) throw()' extern
| | |-ParmVarDecl 0x960028 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:349:47> col:47 __x '_Float32':'float'
| | |-ParmVarDecl 0x9600a8 <col:52, col:56> col:56 __round 'int'
| | `-ParmVarDecl 0x960128 <line:350:9, col:22> col:22 __width 'unsigned int'
| |-FunctionDecl 0x960440 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:154:1 fromfpxf32 '__intmax_t (_Float32, int, unsigned int) throw()' extern
| | |-ParmVarDecl 0x960298 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:355:46> col:46 __x '_Float32':'float'
| | |-ParmVarDecl 0x960318 <col:51, col:55> col:55 __round 'int'
| | `-ParmVarDecl 0x960398 <line:356:8, col:21> col:21 __width 'unsigned int'
| |-FunctionDecl 0x9606b0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:156:1 __fromfpxf32 '__intmax_t (_Float32, int, unsigned int) throw()' extern
| | |-ParmVarDecl 0x960508 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:355:46> col:46 __x '_Float32':'float'
| | |-ParmVarDecl 0x960588 <col:51, col:55> col:55 __round 'int'
| | `-ParmVarDecl 0x960608 <line:356:8, col:21> col:21 __width 'unsigned int'
| |-FunctionDecl 0x960bd8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:157:1 ufromfpxf32 '__uintmax_t (_Float32, int, unsigned int) throw()' extern
| | |-ParmVarDecl 0x960778 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:361:48> col:48 __x '_Float32':'float'
| | |-ParmVarDecl 0x9607f8 <col:53, col:57> col:57 __round 'int'
| | `-ParmVarDecl 0x960b30 <line:362:10, col:23> col:23 __width 'unsigned int'
| |-FunctionDecl 0x960e48 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:159:1 __ufromfpxf32 '__uintmax_t (_Float32, int, unsigned int) throw()' extern
| | |-ParmVarDecl 0x960ca0 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:361:48> col:48 __x '_Float32':'float'
| | |-ParmVarDecl 0x960d20 <col:53, col:57> col:57 __round 'int'
| | `-ParmVarDecl 0x960da0 <line:362:10, col:23> col:23 __width 'unsigned int'
| |-FunctionDecl 0x961028 </usr/include/math.h:283:3, line:280:66> <scratch space>:160:1 fmaxmagf32 '_Float32 (_Float32, _Float32) throw()' extern
| | |-ParmVarDecl 0x960f10 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:365:35> col:35 __x '_Float32':'float'
| | |-ParmVarDecl 0x960f88 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:365:50> col:50 __y '_Float32':'float'
| | `-ConstAttr 0x9610d8 <col:57>
| |-FunctionDecl 0x961258 </usr/include/math.h:283:3, line:281:79> <scratch space>:162:1 __fmaxmagf32 '_Float32 (_Float32, _Float32) throw()' extern
| | |-ParmVarDecl 0x961140 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:365:35> col:35 __x '_Float32':'float'
| | |-ParmVarDecl 0x9611b8 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:365:50> col:50 __y '_Float32':'float'
| | `-ConstAttr 0x961308 <col:57>
| |-FunctionDecl 0x961488 </usr/include/math.h:283:3, line:280:66> <scratch space>:163:1 fminmagf32 '_Float32 (_Float32, _Float32) throw()' extern
| | |-ParmVarDecl 0x961370 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:368:35> col:35 __x '_Float32':'float'
| | |-ParmVarDecl 0x9613e8 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:368:50> col:50 __y '_Float32':'float'
| | `-ConstAttr 0x961538 <col:57>
| |-FunctionDecl 0x9616b8 </usr/include/math.h:283:3, line:281:79> <scratch space>:165:1 __fminmagf32 '_Float32 (_Float32, _Float32) throw()' extern
| | |-ParmVarDecl 0x9615a0 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:368:35> col:35 __x '_Float32':'float'
| | |-ParmVarDecl 0x961618 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:368:50> col:50 __y '_Float32':'float'
| | `-ConstAttr 0x961768 <col:57>
| |-FunctionDecl 0x961958 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:166:1 canonicalizef32 'int (_Float32 *, const _Float32 *) throw()' extern
| | |-ParmVarDecl 0x9617d0 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:371:47> col:47 __cx '_Float32 *'
| | `-ParmVarDecl 0x961878 <col:53, col:70> col:70 __x 'const _Float32 *'
| |-FunctionDecl 0x961bb8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:226:54> <scratch space>:168:1 totalorderf32 'int (const _Float32 *, const _Float32 *) throw()' extern
| | |-ParmVarDecl 0x961a18 </usr/include/x86_64-linux-gnu/bits/mathcalls.h:376:34, col:51> col:51 __x 'const _Float32 *'
| | |-ParmVarDecl 0x961a90 <line:377:6, col:23> col:23 __y 'const _Float32 *'
| | `-PureAttr 0x961c68 </usr/include/x86_64-linux-gnu/sys/cdefs.h:226:45>
| |-FunctionDecl 0x961df0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:226:54> <scratch space>:169:1 totalordermagf32 'int (const _Float32 *, const _Float32 *) throw()' extern
| | |-ParmVarDecl 0x961cd0 </usr/include/x86_64-linux-gnu/bits/mathcalls.h:381:37, col:54> col:54 __x 'const _Float32 *'
| | |-ParmVarDecl 0x961d48 <line:382:9, col:26> col:26 __y 'const _Float32 *'
| | `-PureAttr 0x961ea0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:226:45>
| |-FunctionDecl 0x961fd0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:170:1 getpayloadf32 '_Float32 (const _Float32 *) throw()' extern
| | `-ParmVarDecl 0x961f08 </usr/include/x86_64-linux-gnu/bits/mathcalls.h:386:27, col:44> col:44 __x 'const _Float32 *'
| |-FunctionDecl 0x962120 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:172:1 __getpayloadf32 '_Float32 (const _Float32 *) throw()' extern
| | `-ParmVarDecl 0x962088 </usr/include/x86_64-linux-gnu/bits/mathcalls.h:386:27, col:44> col:44 __x 'const _Float32 *'
| |-FunctionDecl 0x962338 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:173:1 setpayloadf32 'int (_Float32 *, _Float32) throw()' extern
| | |-ParmVarDecl 0x9621d8 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:389:45> col:45 __x '_Float32 *'
| | `-ParmVarDecl 0x962250 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:389:60> col:60 __payload '_Float32':'float'
| |-FunctionDecl 0x962518 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:174:1 setpayloadsigf32 'int (_Float32 *, _Float32) throw()' extern
| | |-ParmVarDecl 0x9623f8 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:392:48> col:48 __x '_Float32 *'
| | `-ParmVarDecl 0x962470 </usr/include/math.h:381:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:392:63> col:63 __payload '_Float32':'float'
| |-FunctionDecl 0x9626d0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:176:1 acosf64 '_Float64 (_Float64) throw()' extern
| | `-ParmVarDecl 0x962600 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:53:31> col:31 __x '_Float64':'double'
| |-FunctionDecl 0x962820 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:178:1 __acosf64 '_Float64 (_Float64) throw()' extern
| | `-ParmVarDecl 0x962788 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:53:31> col:31 __x '_Float64':'double'
| |-FunctionDecl 0x962970 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:179:1 asinf64 '_Float64 (_Float64) throw()' extern
| | `-ParmVarDecl 0x9628d8 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:55:31> col:31 __x '_Float64':'double'
| |-FunctionDecl 0x92e720 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:181:1 __asinf64 '_Float64 (_Float64) throw()' extern
| | `-ParmVarDecl 0x962a28 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:55:31> col:31 __x '_Float64':'double'
| |-FunctionDecl 0x92e870 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:182:1 atanf64 '_Float64 (_Float64) throw()' extern
| | `-ParmVarDecl 0x92e7d8 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:57:31> col:31 __x '_Float64':'double'
| |-FunctionDecl 0x92e9c0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:184:1 __atanf64 '_Float64 (_Float64) throw()' extern
| | `-ParmVarDecl 0x92e928 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:57:31> col:31 __x '_Float64':'double'
| |-FunctionDecl 0x92ebd0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:185:1 atan2f64 '_Float64 (_Float64, _Float64) throw()' extern
| | |-ParmVarDecl 0x92ea78 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:59:32> col:32 __y '_Float64':'double'
| | `-ParmVarDecl 0x92eaf0 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:59:47> col:47 __x '_Float64':'double'
| |-FunctionDecl 0x92eda8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:187:1 __atan2f64 '_Float64 (_Float64, _Float64) throw()' extern
| | |-ParmVarDecl 0x92ec90 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:59:32> col:32 __y '_Float64':'double'
| | `-ParmVarDecl 0x92ed08 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:59:47> col:47 __x '_Float64':'double'
| |-FunctionDecl 0x92ef00 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:190:1 cosf64 '_Float64 (_Float64) throw()' extern
| | `-ParmVarDecl 0x92ee68 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:62:34> col:34 __x '_Float64':'double'
| |-FunctionDecl 0x92f050 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:192:1 __cosf64 '_Float64 (_Float64) throw()' extern
| | `-ParmVarDecl 0x92efb8 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:62:34> col:34 __x '_Float64':'double'
| |-FunctionDecl 0x92f1a0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:195:1 sinf64 '_Float64 (_Float64) throw()' extern
| | `-ParmVarDecl 0x92f108 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:64:34> col:34 __x '_Float64':'double'
| |-FunctionDecl 0x92f2f0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:197:1 __sinf64 '_Float64 (_Float64) throw()' extern
| | `-ParmVarDecl 0x92f258 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:64:34> col:34 __x '_Float64':'double'
| |-FunctionDecl 0x92f440 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:198:1 tanf64 '_Float64 (_Float64) throw()' extern
| | `-ParmVarDecl 0x92f3a8 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:66:30> col:30 __x '_Float64':'double'
| |-FunctionDecl 0x92f590 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:200:1 __tanf64 '_Float64 (_Float64) throw()' extern
| | `-ParmVarDecl 0x92f4f8 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:66:30> col:30 __x '_Float64':'double'
| |-FunctionDecl 0x96ab60 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:201:1 coshf64 '_Float64 (_Float64) throw()' extern
| | `-ParmVarDecl 0x92f648 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:71:31> col:31 __x '_Float64':'double'
| |-FunctionDecl 0x96acb0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:203:1 __coshf64 '_Float64 (_Float64) throw()' extern
| | `-ParmVarDecl 0x96ac18 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:71:31> col:31 __x '_Float64':'double'
| |-FunctionDecl 0x96ae00 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:204:1 sinhf64 '_Float64 (_Float64) throw()' extern
| | `-ParmVarDecl 0x96ad68 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:73:31> col:31 __x '_Float64':'double'
| |-FunctionDecl 0x96af50 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:206:1 __sinhf64 '_Float64 (_Float64) throw()' extern
| | `-ParmVarDecl 0x96aeb8 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:73:31> col:31 __x '_Float64':'double'
| |-FunctionDecl 0x96b0a0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:207:1 tanhf64 '_Float64 (_Float64) throw()' extern
| | `-ParmVarDecl 0x96b008 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:75:31> col:31 __x '_Float64':'double'
| |-FunctionDecl 0x96b1f0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:209:1 __tanhf64 '_Float64 (_Float64) throw()' extern
| | `-ParmVarDecl 0x96b158 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:75:31> col:31 __x '_Float64':'double'
| |-FunctionDecl 0x96b4b0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:212:1 sincosf64 'void (_Float64, _Float64 *, _Float64 *) throw()' extern
| | |-ParmVarDecl 0x96b2a8 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:80:14> col:14 __x '_Float64':'double'
| | |-ParmVarDecl 0x96b348 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:80:30> col:30 __sinx '_Float64 *'
| | `-ParmVarDecl 0x96b3c0 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:80:49> col:49 __cosx '_Float64 *'
| |-FunctionDecl 0x96b710 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:214:1 __sincosf64 'void (_Float64, _Float64 *, _Float64 *) throw()' extern
| | |-ParmVarDecl 0x96b578 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:80:14> col:14 __x '_Float64':'double'
| | |-ParmVarDecl 0x96b5f0 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:80:30> col:30 __sinx '_Float64 *'
| | `-ParmVarDecl 0x96b668 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:80:49> col:49 __cosx '_Float64 *'
| |-FunctionDecl 0x96b870 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:215:1 acoshf64 '_Float64 (_Float64) throw()' extern
| | `-ParmVarDecl 0x96b7d8 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:85:32> col:32 __x '_Float64':'double'
| |-FunctionDecl 0x96b9c0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:217:1 __acoshf64 '_Float64 (_Float64) throw()' extern
| | `-ParmVarDecl 0x96b928 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:85:32> col:32 __x '_Float64':'double'
| |-FunctionDecl 0x96bb70 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:218:1 asinhf64 '_Float64 (_Float64) throw()' extern
| | `-ParmVarDecl 0x96ba78 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:87:32> col:32 __x '_Float64':'double'
| |-FunctionDecl 0x96bcc0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:220:1 __asinhf64 '_Float64 (_Float64) throw()' extern
| | `-ParmVarDecl 0x96bc28 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:87:32> col:32 __x '_Float64':'double'
| |-FunctionDecl 0x96be10 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:221:1 atanhf64 '_Float64 (_Float64) throw()' extern
| | `-ParmVarDecl 0x96bd78 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:89:32> col:32 __x '_Float64':'double'
| |-FunctionDecl 0x96bf60 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:223:1 __atanhf64 '_Float64 (_Float64) throw()' extern
| | `-ParmVarDecl 0x96bec8 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:89:32> col:32 __x '_Float64':'double'
| |-FunctionDecl 0x96c0b0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:226:1 expf64 '_Float64 (_Float64) throw()' extern
| | `-ParmVarDecl 0x96c018 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:95:34> col:34 __x '_Float64':'double'
| |-FunctionDecl 0x96c200 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:228:1 __expf64 '_Float64 (_Float64) throw()' extern
| | `-ParmVarDecl 0x96c168 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:95:34> col:34 __x '_Float64':'double'
| |-FunctionDecl 0x96c410 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:229:1 frexpf64 '_Float64 (_Float64, int *) throw()' extern
| | |-ParmVarDecl 0x96c2b8 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:98:32> col:32 __x '_Float64':'double'
| | `-ParmVarDecl 0x96c338 <col:37, col:42> col:42 __exponent 'int *'
| |-FunctionDecl 0x96c5f0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:231:1 __frexpf64 '_Float64 (_Float64, int *) throw()' extern
| | |-ParmVarDecl 0x96c4d0 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:98:32> col:32 __x '_Float64':'double'
| | `-ParmVarDecl 0x96c550 <col:37, col:42> col:42 __exponent 'int *'
| |-FunctionDecl 0x96c810 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:232:1 ldexpf64 '_Float64 (_Float64, int) throw()' extern
| | |-ParmVarDecl 0x96c6b0 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:101:32> col:32 __x '_Float64':'double'
| | `-ParmVarDecl 0x96c730 <col:37, col:41> col:41 __exponent 'int'
| |-FunctionDecl 0x96c9f0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:234:1 __ldexpf64 '_Float64 (_Float64, int) throw()' extern
| | |-ParmVarDecl 0x96c8d0 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:101:32> col:32 __x '_Float64':'double'
| | `-ParmVarDecl 0x96c950 <col:37, col:41> col:41 __exponent 'int'
| |-FunctionDecl 0x96cb80 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:237:1 logf64 '_Float64 (_Float64) throw()' extern
| | `-ParmVarDecl 0x96cab0 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:104:34> col:34 __x '_Float64':'double'
| |-FunctionDecl 0x96ccd0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:239:1 __logf64 '_Float64 (_Float64) throw()' extern
| | `-ParmVarDecl 0x96cc38 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:104:34> col:34 __x '_Float64':'double'
| |-FunctionDecl 0x96ce20 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:240:1 log10f64 '_Float64 (_Float64) throw()' extern
| | `-ParmVarDecl 0x96cd88 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:107:32> col:32 __x '_Float64':'double'
| |-FunctionDecl 0x96cf70 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:242:1 __log10f64 '_Float64 (_Float64) throw()' extern
| | `-ParmVarDecl 0x96ced8 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:107:32> col:32 __x '_Float64':'double'
| |-FunctionDecl 0x96d180 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:243:1 modff64 '_Float64 (_Float64, _Float64 *) throw()' extern
| | |-ParmVarDecl 0x96d028 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:110:31> col:31 __x '_Float64':'double'
| | `-ParmVarDecl 0x96d0a0 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:110:47> col:47 __iptr '_Float64 *'
| |-FunctionDecl 0x96d378 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> <scratch space>:245:1 __modff64 '_Float64 (_Float64, _Float64 *) throw()' extern
| | |-ParmVarDecl 0x96d240 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:110:31> col:31 __x '_Float64':'double'
| | |-ParmVarDecl 0x96d2b8 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:110:47> col:47 __iptr '_Float64 *'
| | `-NonNullAttr 0x96d428 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:110:69> 2
| |-FunctionDecl 0x96d540 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:247:1 exp10f64 '_Float64 (_Float64) throw()' extern
| | `-ParmVarDecl 0x96d4a8 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:114:32> col:32 __x '_Float64':'double'
| |-FunctionDecl 0x96d690 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:249:1 __exp10f64 '_Float64 (_Float64) throw()' extern
| | `-ParmVarDecl 0x96d5f8 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:114:32> col:32 __x '_Float64':'double'
| |-FunctionDecl 0x96d7e0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:250:1 expm1f64 '_Float64 (_Float64) throw()' extern
| | `-ParmVarDecl 0x96d748 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:119:32> col:32 __x '_Float64':'double'
| |-FunctionDecl 0x96d930 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:252:1 __expm1f64 '_Float64 (_Float64) throw()' extern
| | `-ParmVarDecl 0x96d898 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:119:32> col:32 __x '_Float64':'double'
| |-FunctionDecl 0x96da80 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:253:1 log1pf64 '_Float64 (_Float64) throw()' extern
| | `-ParmVarDecl 0x96d9e8 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:122:32> col:32 __x '_Float64':'double'
| |-FunctionDecl 0x96ec38 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:255:1 __log1pf64 '_Float64 (_Float64) throw()' extern
| | `-ParmVarDecl 0x96eba0 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:122:32> col:32 __x '_Float64':'double'
| |-FunctionDecl 0x96ed88 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:256:1 logbf64 '_Float64 (_Float64) throw()' extern
| | `-ParmVarDecl 0x96ecf0 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:125:31> col:31 __x '_Float64':'double'
| |-FunctionDecl 0x96eed8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:258:1 __logbf64 '_Float64 (_Float64) throw()' extern
| | `-ParmVarDecl 0x96ee40 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:125:31> col:31 __x '_Float64':'double'
| |-FunctionDecl 0x96f028 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:259:1 exp2f64 '_Float64 (_Float64) throw()' extern
| | `-ParmVarDecl 0x96ef90 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:130:31> col:31 __x '_Float64':'double'
| |-FunctionDecl 0x96f178 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:261:1 __exp2f64 '_Float64 (_Float64) throw()' extern
| | `-ParmVarDecl 0x96f0e0 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:130:31> col:31 __x '_Float64':'double'
| |-FunctionDecl 0x96f2c8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:262:1 log2f64 '_Float64 (_Float64) throw()' extern
| | `-ParmVarDecl 0x96f230 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:133:31> col:31 __x '_Float64':'double'
| |-FunctionDecl 0x96f418 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:264:1 __log2f64 '_Float64 (_Float64) throw()' extern
| | `-ParmVarDecl 0x96f380 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:133:31> col:31 __x '_Float64':'double'
| |-FunctionDecl 0x96f5e8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:267:1 powf64 '_Float64 (_Float64, _Float64) throw()' extern
| | |-ParmVarDecl 0x96f4d0 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:140:34> col:34 __x '_Float64':'double'
| | `-ParmVarDecl 0x96f548 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:140:49> col:49 __y '_Float64':'double'
| |-FunctionDecl 0x96f7c0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:269:1 __powf64 '_Float64 (_Float64, _Float64) throw()' extern
| | |-ParmVarDecl 0x96f6a8 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:140:34> col:34 __x '_Float64':'double'
| | `-ParmVarDecl 0x96f720 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:140:49> col:49 __y '_Float64':'double'
| |-FunctionDecl 0x96f918 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:270:1 sqrtf64 '_Float64 (_Float64) throw()' extern
| | `-ParmVarDecl 0x96f880 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:143:31> col:31 __x '_Float64':'double'
| |-FunctionDecl 0x96fa68 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:272:1 __sqrtf64 '_Float64 (_Float64) throw()' extern
| | `-ParmVarDecl 0x96f9d0 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:143:31> col:31 __x '_Float64':'double'
| |-FunctionDecl 0x96fc50 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:273:1 hypotf64 '_Float64 (_Float64, _Float64) throw()' extern
| | |-ParmVarDecl 0x96fb20 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:147:32> col:32 __x '_Float64':'double'
| | `-ParmVarDecl 0x96fbb0 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:147:47> col:47 __y '_Float64':'double'
| |-FunctionDecl 0x96fe28 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:275:1 __hypotf64 '_Float64 (_Float64, _Float64) throw()' extern
| | |-ParmVarDecl 0x96fd10 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:147:32> col:32 __x '_Float64':'double'
| | `-ParmVarDecl 0x96fd88 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:147:47> col:47 __y '_Float64':'double'
| |-FunctionDecl 0x96ff80 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:276:1 cbrtf64 '_Float64 (_Float64) throw()' extern
| | `-ParmVarDecl 0x96fee8 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:152:31> col:31 __x '_Float64':'double'
| |-FunctionDecl 0x9700d0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:278:1 __cbrtf64 '_Float64 (_Float64) throw()' extern
| | `-ParmVarDecl 0x970038 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:152:31> col:31 __x '_Float64':'double'
| |-FunctionDecl 0x970220 </usr/include/math.h:283:3, line:280:66> <scratch space>:279:1 ceilf64 '_Float64 (_Float64) throw()' extern
| | |-ParmVarDecl 0x970188 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:159:32> col:32 __x '_Float64':'double'
| | `-ConstAttr 0x9702c8 <col:39>
| |-FunctionDecl 0x9703c8 </usr/include/math.h:283:3, line:281:79> <scratch space>:281:1 __ceilf64 '_Float64 (_Float64) throw()' extern
| | |-ParmVarDecl 0x970330 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:159:32> col:32 __x '_Float64':'double'
| | `-ConstAttr 0x970470 <col:39>
| |-FunctionDecl 0x970570 </usr/include/math.h:283:3, line:280:66> <scratch space>:282:1 fabsf64 '_Float64 (_Float64) throw()' extern
| | |-ParmVarDecl 0x9704d8 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:162:32> col:32 __x '_Float64':'double'
| | `-ConstAttr 0x970618 <col:39>
| |-FunctionDecl 0x970718 </usr/include/math.h:283:3, line:281:79> <scratch space>:284:1 __fabsf64 '_Float64 (_Float64) throw()' extern
| | |-ParmVarDecl 0x970680 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:162:32> col:32 __x '_Float64':'double'
| | `-ConstAttr 0x9707c0 <col:39>
| |-FunctionDecl 0x9708c0 </usr/include/math.h:283:3, line:280:66> <scratch space>:285:1 floorf64 '_Float64 (_Float64) throw()' extern
| | |-ParmVarDecl 0x970828 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:165:33> col:33 __x '_Float64':'double'
| | `-ConstAttr 0x970968 <col:40>
| |-FunctionDecl 0x970a68 </usr/include/math.h:283:3, line:281:79> <scratch space>:287:1 __floorf64 '_Float64 (_Float64) throw()' extern
| | |-ParmVarDecl 0x9709d0 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:165:33> col:33 __x '_Float64':'double'
| | `-ConstAttr 0x970b10 <col:40>
| |-FunctionDecl 0x970cd8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:288:1 fmodf64 '_Float64 (_Float64, _Float64) throw()' extern
| | |-ParmVarDecl 0x970bc0 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:168:31> col:31 __x '_Float64':'double'
| | `-ParmVarDecl 0x970c38 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:168:46> col:46 __y '_Float64':'double'
| |-FunctionDecl 0x970eb0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:290:1 __fmodf64 '_Float64 (_Float64, _Float64) throw()' extern
| | |-ParmVarDecl 0x970d98 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:168:31> col:31 __x '_Float64':'double'
| | `-ParmVarDecl 0x970e10 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:168:46> col:46 __y '_Float64':'double'
| |-FunctionDecl 0x971088 </usr/include/math.h:283:3, line:280:66> <scratch space>:291:1 copysignf64 '_Float64 (_Float64, _Float64) throw()' extern
| | |-ParmVarDecl 0x970f70 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:196:36> col:36 __x '_Float64':'double'
| | |-ParmVarDecl 0x970fe8 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:196:51> col:51 __y '_Float64':'double'
| | `-ConstAttr 0x971138 <col:58>
| |-FunctionDecl 0x9712b8 </usr/include/math.h:283:3, line:281:79> <scratch space>:293:1 __copysignf64 '_Float64 (_Float64, _Float64) throw()' extern
| | |-ParmVarDecl 0x9711a0 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:196:36> col:36 __x '_Float64':'double'
| | |-ParmVarDecl 0x971218 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:196:51> col:51 __y '_Float64':'double'
| | `-ConstAttr 0x971368 <col:58>
| |-FunctionDecl 0x9714a0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:294:1 nanf64 '_Float64 (const char *) throw()' extern
| | `-ParmVarDecl 0x9713d8 </usr/include/x86_64-linux-gnu/bits/mathcalls.h:201:20, col:32> col:32 __tagb 'const char *'
| |-FunctionDecl 0x9715f8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:296:1 __nanf64 '_Float64 (const char *) throw()' extern
| | `-ParmVarDecl 0x971560 </usr/include/x86_64-linux-gnu/bits/mathcalls.h:201:20, col:32> col:32 __tagb 'const char *'
| |-FunctionDecl 0x971748 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:297:1 j0f64 '_Float64 (_Float64) throw()' extern
| | `-ParmVarDecl 0x9716b0 </usr/include/math.h:398:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:217:28 '_Float64':'double'
| |-FunctionDecl 0x971898 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:299:1 __j0f64 '_Float64 (_Float64) throw()' extern
| | `-ParmVarDecl 0x971800 </usr/include/math.h:398:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:217:28 '_Float64':'double'
| |-FunctionDecl 0x9719e8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:300:1 j1f64 '_Float64 (_Float64) throw()' extern
| | `-ParmVarDecl 0x971950 </usr/include/math.h:398:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:218:28 '_Float64':'double'
| |-FunctionDecl 0x971bd0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:302:1 __j1f64 '_Float64 (_Float64) throw()' extern
| | `-ParmVarDecl 0x971aa0 </usr/include/math.h:398:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:218:28 '_Float64':'double'
| |-FunctionDecl 0x971de0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:303:1 jnf64 '_Float64 (int, _Float64) throw()' extern
| | |-ParmVarDecl 0x971c90 </usr/include/x86_64-linux-gnu/bits/mathcalls.h:219:19> col:22 'int'
| | `-ParmVarDecl 0x971d08 </usr/include/math.h:398:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:219:33 '_Float64':'double'
| |-FunctionDecl 0x971fc0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:305:1 __jnf64 '_Float64 (int, _Float64) throw()' extern
| | |-ParmVarDecl 0x971ea8 </usr/include/x86_64-linux-gnu/bits/mathcalls.h:219:19> col:22 'int'
| | `-ParmVarDecl 0x971f20 </usr/include/math.h:398:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:219:33 '_Float64':'double'
| |-FunctionDecl 0x972118 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:306:1 y0f64 '_Float64 (_Float64) throw()' extern
| | `-ParmVarDecl 0x972080 </usr/include/math.h:398:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:220:28 '_Float64':'double'
| |-FunctionDecl 0x972268 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:308:1 __y0f64 '_Float64 (_Float64) throw()' extern
| | `-ParmVarDecl 0x9721d0 </usr/include/math.h:398:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:220:28 '_Float64':'double'
| |-FunctionDecl 0x9723b8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:309:1 y1f64 '_Float64 (_Float64) throw()' extern
| | `-ParmVarDecl 0x972320 </usr/include/math.h:398:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:221:28 '_Float64':'double'
| |-FunctionDecl 0x972508 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:311:1 __y1f64 '_Float64 (_Float64) throw()' extern
| | `-ParmVarDecl 0x972470 </usr/include/math.h:398:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:221:28 '_Float64':'double'
| |-FunctionDecl 0x9726e0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:312:1 ynf64 '_Float64 (int, _Float64) throw()' extern
| | |-ParmVarDecl 0x9725c8 </usr/include/x86_64-linux-gnu/bits/mathcalls.h:222:19> col:22 'int'
| | `-ParmVarDecl 0x972640 </usr/include/math.h:398:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:222:33 '_Float64':'double'
| |-FunctionDecl 0x9728c0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:314:1 __ynf64 '_Float64 (int, _Float64) throw()' extern
| | |-ParmVarDecl 0x9727a8 </usr/include/x86_64-linux-gnu/bits/mathcalls.h:222:19> col:22 'int'
| | `-ParmVarDecl 0x972820 </usr/include/math.h:398:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:222:33 '_Float64':'double'
| |-FunctionDecl 0x972a18 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:315:1 erff64 '_Float64 (_Float64) throw()' extern
| | `-ParmVarDecl 0x972980 </usr/include/math.h:398:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:228:29 '_Float64':'double'
| |-FunctionDecl 0x937d80 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:317:1 __erff64 '_Float64 (_Float64) throw()' extern
| | `-ParmVarDecl 0x972ad0 </usr/include/math.h:398:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:228:29 '_Float64':'double'
| |-FunctionDecl 0x937ed0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:318:1 erfcf64 '_Float64 (_Float64) throw()' extern
| | `-ParmVarDecl 0x937e38 </usr/include/math.h:398:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:229:30 '_Float64':'double'
| |-FunctionDecl 0x938020 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:320:1 __erfcf64 '_Float64 (_Float64) throw()' extern
| | `-ParmVarDecl 0x937f88 </usr/include/math.h:398:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:229:30 '_Float64':'double'
| |-FunctionDecl 0x938170 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:321:1 lgammaf64 '_Float64 (_Float64) throw()' extern
| | `-ParmVarDecl 0x9380d8 </usr/include/math.h:398:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:230:32 '_Float64':'double'
| |-FunctionDecl 0x9382c0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:323:1 __lgammaf64 '_Float64 (_Float64) throw()' extern
| | `-ParmVarDecl 0x938228 </usr/include/math.h:398:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:230:32 '_Float64':'double'
| |-FunctionDecl 0x938410 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:324:1 tgammaf64 '_Float64 (_Float64) throw()' extern
| | `-ParmVarDecl 0x938378 </usr/include/math.h:398:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:235:32 '_Float64':'double'
| |-FunctionDecl 0x938560 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:326:1 __tgammaf64 '_Float64 (_Float64) throw()' extern
| | `-ParmVarDecl 0x9384c8 </usr/include/math.h:398:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:235:32 '_Float64':'double'
| |-FunctionDecl 0x938738 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:328:1 lgammaf64_r '_Float64 (_Float64, int *) throw()' extern
| | |-ParmVarDecl 0x938618 </usr/include/math.h:398:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:249:34 '_Float64':'double'
| | `-ParmVarDecl 0x938698 <col:36, col:41> col:41 __signgamp 'int *'
| |-FunctionDecl 0x938918 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:331:1 __lgammaf64_r '_Float64 (_Float64, int *) throw()' extern
| | |-ParmVarDecl 0x9387f8 </usr/include/math.h:398:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:249:34 '_Float64':'double'
| | `-ParmVarDecl 0x938878 <col:36, col:41> col:41 __signgamp 'int *'
| |-FunctionDecl 0x938a70 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:332:1 rintf64 '_Float64 (_Float64) throw()' extern
| | `-ParmVarDecl 0x9389d8 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:256:31> col:31 __x '_Float64':'double'
| |-FunctionDecl 0x938bc0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:334:1 __rintf64 '_Float64 (_Float64) throw()' extern
| | `-ParmVarDecl 0x938b28 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:256:31> col:31 __x '_Float64':'double'
| |-FunctionDecl 0x938dc8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:335:1 nextafterf64 '_Float64 (_Float64, _Float64) throw()' extern
| | |-ParmVarDecl 0x938c78 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:259:36> col:36 __x '_Float64':'double'
| | `-ParmVarDecl 0x938cf0 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:259:51> col:51 __y '_Float64':'double'
| |-FunctionDecl 0x938fa0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:337:1 __nextafterf64 '_Float64 (_Float64, _Float64) throw()' extern
| | |-ParmVarDecl 0x938e88 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:259:36> col:36 __x '_Float64':'double'
| | `-ParmVarDecl 0x938f00 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:259:51> col:51 __y '_Float64':'double'
| |-FunctionDecl 0x9390f8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:339:1 nextdownf64 '_Float64 (_Float64) throw()' extern
| | `-ParmVarDecl 0x939060 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:266:35> col:35 __x '_Float64':'double'
| |-FunctionDecl 0x939248 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:341:1 __nextdownf64 '_Float64 (_Float64) throw()' extern
| | `-ParmVarDecl 0x9391b0 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:266:35> col:35 __x '_Float64':'double'
| |-FunctionDecl 0x939398 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:342:1 nextupf64 '_Float64 (_Float64) throw()' extern
| | `-ParmVarDecl 0x939300 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:268:33> col:33 __x '_Float64':'double'
| |-FunctionDecl 0x9394e8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:344:1 __nextupf64 '_Float64 (_Float64) throw()' extern
| | `-ParmVarDecl 0x939450 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:268:33> col:33 __x '_Float64':'double'
| |-FunctionDecl 0x9396b8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:345:1 remainderf64 '_Float64 (_Float64, _Float64) throw()' extern
| | |-ParmVarDecl 0x9395a0 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:36> col:36 __x '_Float64':'double'
| | `-ParmVarDecl 0x939618 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:51> col:51 __y '_Float64':'double'
| |-FunctionDecl 0x939890 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:347:1 __remainderf64 '_Float64 (_Float64, _Float64) throw()' extern
| | |-ParmVarDecl 0x939778 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:36> col:36 __x '_Float64':'double'
| | `-ParmVarDecl 0x9397f0 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:51> col:51 __y '_Float64':'double'
| |-FunctionDecl 0x939a70 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:348:1 scalbnf64 '_Float64 (_Float64, int) throw()' extern
| | |-ParmVarDecl 0x939950 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:276:33> col:33 __x '_Float64':'double'
| | `-ParmVarDecl 0x9399d0 <col:38, col:42> col:42 __n 'int'
| |-FunctionDecl 0x939c50 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:350:1 __scalbnf64 '_Float64 (_Float64, int) throw()' extern
| | |-ParmVarDecl 0x939b30 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:276:33> col:33 __x '_Float64':'double'
| | `-ParmVarDecl 0x939bb0 <col:38, col:42> col:42 __n 'int'
| |-FunctionDecl 0x939e08 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:351:1 ilogbf64 'int (_Float64) throw()' extern
| | `-ParmVarDecl 0x939d10 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:280:36> col:36 __x '_Float64':'double'
| |-FunctionDecl 0x939f60 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:353:1 __ilogbf64 'int (_Float64) throw()' extern
| | `-ParmVarDecl 0x939ec0 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:280:36> col:36 __x '_Float64':'double'
| |-FunctionDecl 0x93a0e8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:355:1 llogbf64 'long (_Float64) throw()' extern
| | `-ParmVarDecl 0x93a018 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:285:42> col:42 __x '_Float64':'double'
| |-FunctionDecl 0x93a240 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:357:1 __llogbf64 'long (_Float64) throw()' extern
| | `-ParmVarDecl 0x93a1a0 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:285:42> col:42 __x '_Float64':'double'
| |-FunctionDecl 0x93a450 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:358:1 scalblnf64 '_Float64 (_Float64, long) throw()' extern
| | |-ParmVarDecl 0x93a2f8 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:290:34> col:34 __x '_Float64':'double'
| | `-ParmVarDecl 0x93a378 <col:39, col:48> col:48 __n 'long'
| |-FunctionDecl 0x93a630 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:360:1 __scalblnf64 '_Float64 (_Float64, long) throw()' extern
| | |-ParmVarDecl 0x93a510 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:290:34> col:34 __x '_Float64':'double'
| | `-ParmVarDecl 0x93a590 <col:39, col:48> col:48 __n 'long'
| |-FunctionDecl 0x93a788 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:361:1 nearbyintf64 '_Float64 (_Float64) throw()' extern
| | `-ParmVarDecl 0x93a6f0 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:294:36> col:36 __x '_Float64':'double'
| |-FunctionDecl 0x93a8d8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:363:1 __nearbyintf64 '_Float64 (_Float64) throw()' extern
| | `-ParmVarDecl 0x93a840 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:294:36> col:36 __x '_Float64':'double'
| |-FunctionDecl 0x93aa28 </usr/include/math.h:283:3, line:280:66> <scratch space>:364:1 roundf64 '_Float64 (_Float64) throw()' extern
| | |-ParmVarDecl 0x93a990 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:33> col:33 __x '_Float64':'double'
| | `-ConstAttr 0x93aad0 <col:40>
| |-FunctionDecl 0x93abd0 </usr/include/math.h:283:3, line:281:79> <scratch space>:366:1 __roundf64 '_Float64 (_Float64) throw()' extern
| | |-ParmVarDecl 0x93ab38 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:33> col:33 __x '_Float64':'double'
| | `-ConstAttr 0x93ac78 <col:40>
| |-FunctionDecl 0x97abf0 </usr/include/math.h:283:3, line:280:66> <scratch space>:367:1 truncf64 '_Float64 (_Float64) throw()' extern
| | |-ParmVarDecl 0x93ace0 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:302:33> col:33 __x '_Float64':'double'
| | `-ConstAttr 0x97ac98 <col:40>
| |-FunctionDecl 0x97ad98 </usr/include/math.h:283:3, line:281:79> <scratch space>:2:1 __truncf64 '_Float64 (_Float64) throw()' extern
| | |-ParmVarDecl 0x97ad00 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:302:33> col:33 __x '_Float64':'double'
| | `-ConstAttr 0x97ae40 <col:40>
| |-FunctionDecl 0x97b090 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:3:1 remquof64 '_Float64 (_Float64, _Float64, int *) throw()' extern
| | |-ParmVarDecl 0x97aea8 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:307:33> col:33 __x '_Float64':'double'
| | |-ParmVarDecl 0x97af20 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:307:48> col:48 __y '_Float64':'double'
| | `-ParmVarDecl 0x97afa0 <col:53, col:58> col:58 __quo 'int *'
| |-FunctionDecl 0x97b2f8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:5:1 __remquof64 '_Float64 (_Float64, _Float64, int *) throw()' extern
| | |-ParmVarDecl 0x97b158 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:307:33> col:33 __x '_Float64':'double'
| | |-ParmVarDecl 0x97b1d0 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:307:48> col:48 __y '_Float64':'double'
| | `-ParmVarDecl 0x97b250 <col:53, col:58> col:58 __quo 'int *'
| |-FunctionDecl 0x97b460 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:6:1 lrintf64 'long (_Float64) throw()' extern
| | `-ParmVarDecl 0x97b3c0 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:314:41> col:41 __x '_Float64':'double'
| |-FunctionDecl 0x97b5b8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:8:1 __lrintf64 'long (_Float64) throw()' extern
| | `-ParmVarDecl 0x97b518 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:314:41> col:41 __x '_Float64':'double'
| |-FunctionDecl 0x97b748 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:9:1 llrintf64 'long long (_Float64) throw()' extern
| | `-ParmVarDecl 0x97b670 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:316:47> col:47 __x '_Float64':'double'
| |-FunctionDecl 0x97b8a0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:11:1 __llrintf64 'long long (_Float64) throw()' extern
| | `-ParmVarDecl 0x97b800 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:316:47> col:47 __x '_Float64':'double'
| |-FunctionDecl 0x97b9f8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:12:1 lroundf64 'long (_Float64) throw()' extern
| | `-ParmVarDecl 0x97b958 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:320:42> col:42 __x '_Float64':'double'
| |-FunctionDecl 0x97bb50 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:14:1 __lroundf64 'long (_Float64) throw()' extern
| | `-ParmVarDecl 0x97bab0 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:320:42> col:42 __x '_Float64':'double'
| |-FunctionDecl 0x97dce8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:15:1 llroundf64 'long long (_Float64) throw()' extern
| | `-ParmVarDecl 0x97dc48 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:322:48> col:48 __x '_Float64':'double'
| |-FunctionDecl 0x97de40 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:17:1 __llroundf64 'long long (_Float64) throw()' extern
| | `-ParmVarDecl 0x97dda0 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:322:48> col:48 __x '_Float64':'double'
| |-FunctionDecl 0x97e010 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:18:1 fdimf64 '_Float64 (_Float64, _Float64) throw()' extern
| | |-ParmVarDecl 0x97def8 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:326:31> col:31 __x '_Float64':'double'
| | `-ParmVarDecl 0x97df70 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:326:46> col:46 __y '_Float64':'double'
| |-FunctionDecl 0x97e1e8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:20:1 __fdimf64 '_Float64 (_Float64, _Float64) throw()' extern
| | |-ParmVarDecl 0x97e0d0 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:326:31> col:31 __x '_Float64':'double'
| | `-ParmVarDecl 0x97e148 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:326:46> col:46 __y '_Float64':'double'
| |-FunctionDecl 0x97e3c0 </usr/include/math.h:283:3, line:280:66> <scratch space>:21:1 fmaxf64 '_Float64 (_Float64, _Float64) throw()' extern
| | |-ParmVarDecl 0x97e2a8 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:32> col:32 __x '_Float64':'double'
| | |-ParmVarDecl 0x97e320 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:47> col:47 __y '_Float64':'double'
| | `-ConstAttr 0x97e470 <col:54>
| |-FunctionDecl 0x97e5f0 </usr/include/math.h:283:3, line:281:79> <scratch space>:23:1 __fmaxf64 '_Float64 (_Float64, _Float64) throw()' extern
| | |-ParmVarDecl 0x97e4d8 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:32> col:32 __x '_Float64':'double'
| | |-ParmVarDecl 0x97e550 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:47> col:47 __y '_Float64':'double'
| | `-ConstAttr 0x97e6a0 <col:54>
| |-FunctionDecl 0x97e820 </usr/include/math.h:283:3, line:280:66> <scratch space>:24:1 fminf64 '_Float64 (_Float64, _Float64) throw()' extern
| | |-ParmVarDecl 0x97e708 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:32> col:32 __x '_Float64':'double'
| | |-ParmVarDecl 0x97e780 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:47> col:47 __y '_Float64':'double'
| | `-ConstAttr 0x97e8d0 <col:54>
| |-FunctionDecl 0x97ea50 </usr/include/math.h:283:3, line:281:79> <scratch space>:26:1 __fminf64 '_Float64 (_Float64, _Float64) throw()' extern
| | |-ParmVarDecl 0x97e938 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:32> col:32 __x '_Float64':'double'
| | |-ParmVarDecl 0x97e9b0 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:47> col:47 __y '_Float64':'double'
| | `-ConstAttr 0x97eb00 <col:54>
| |-FunctionDecl 0x97eda0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:27:1 fmaf64 '_Float64 (_Float64, _Float64, _Float64) throw()' extern
| | |-ParmVarDecl 0x97eb68 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:335:30> col:30 __x '_Float64':'double'
| | |-ParmVarDecl 0x97ec40 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:335:45> col:45 __y '_Float64':'double'
| | `-ParmVarDecl 0x97ecb8 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:335:60> col:60 __z '_Float64':'double'
| |-FunctionDecl 0x97f000 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:29:1 __fmaf64 '_Float64 (_Float64, _Float64, _Float64) throw()' extern
| | |-ParmVarDecl 0x97ee68 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:335:30> col:30 __x '_Float64':'double'
| | |-ParmVarDecl 0x97eee0 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:335:45> col:45 __y '_Float64':'double'
| | `-ParmVarDecl 0x97ef58 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:335:60> col:60 __z '_Float64':'double'
| |-FunctionDecl 0x97f160 </usr/include/math.h:283:3, line:280:66> <scratch space>:31:1 roundevenf64 '_Float64 (_Float64) throw()' extern
| | |-ParmVarDecl 0x97f0c8 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:340:37> col:37 __x '_Float64':'double'
| | `-ConstAttr 0x97f208 <col:44>
| |-FunctionDecl 0x97f308 </usr/include/math.h:283:3, line:281:79> <scratch space>:33:1 __roundevenf64 '_Float64 (_Float64) throw()' extern
| | |-ParmVarDecl 0x97f270 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:340:37> col:37 __x '_Float64':'double'
| | `-ConstAttr 0x97f3b0 <col:44>
| |-FunctionDecl 0x97f600 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:34:1 fromfpf64 '__intmax_t (_Float64, int, unsigned int) throw()' extern
| | |-ParmVarDecl 0x97f418 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:344:45> col:45 __x '_Float64':'double'
| | |-ParmVarDecl 0x97f498 <col:50, col:54> col:54 __round 'int'
| | `-ParmVarDecl 0x97f518 <line:345:7, col:20> col:20 __width 'unsigned int'
| |-FunctionDecl 0x97f870 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:36:1 __fromfpf64 '__intmax_t (_Float64, int, unsigned int) throw()' extern
| | |-ParmVarDecl 0x97f6c8 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:344:45> col:45 __x '_Float64':'double'
| | |-ParmVarDecl 0x97f748 <col:50, col:54> col:54 __round 'int'
| | `-ParmVarDecl 0x97f7c8 <line:345:7, col:20> col:20 __width 'unsigned int'
| |-FunctionDecl 0x97fb20 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:37:1 ufromfpf64 '__uintmax_t (_Float64, int, unsigned int) throw()' extern
| | |-ParmVarDecl 0x97f938 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:349:47> col:47 __x '_Float64':'double'
| | |-ParmVarDecl 0x97f9b8 <col:52, col:56> col:56 __round 'int'
| | `-ParmVarDecl 0x97fa38 <line:350:9, col:22> col:22 __width 'unsigned int'
| |-FunctionDecl 0x97fdf8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:39:1 __ufromfpf64 '__uintmax_t (_Float64, int, unsigned int) throw()' extern
| | |-ParmVarDecl 0x97fc50 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:349:47> col:47 __x '_Float64':'double'
| | |-ParmVarDecl 0x97fcd0 <col:52, col:56> col:56 __round 'int'
| | `-ParmVarDecl 0x97fd50 <line:350:9, col:22> col:22 __width 'unsigned int'
| |-FunctionDecl 0x980068 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:40:1 fromfpxf64 '__intmax_t (_Float64, int, unsigned int) throw()' extern
| | |-ParmVarDecl 0x97fec0 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:355:46> col:46 __x '_Float64':'double'
| | |-ParmVarDecl 0x97ff40 <col:51, col:55> col:55 __round 'int'
| | `-ParmVarDecl 0x97ffc0 <line:356:8, col:21> col:21 __width 'unsigned int'
| |-FunctionDecl 0x9802d8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:42:1 __fromfpxf64 '__intmax_t (_Float64, int, unsigned int) throw()' extern
| | |-ParmVarDecl 0x980130 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:355:46> col:46 __x '_Float64':'double'
| | |-ParmVarDecl 0x9801b0 <col:51, col:55> col:55 __round 'int'
| | `-ParmVarDecl 0x980230 <line:356:8, col:21> col:21 __width 'unsigned int'
| |-FunctionDecl 0x980548 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:43:1 ufromfpxf64 '__uintmax_t (_Float64, int, unsigned int) throw()' extern
| | |-ParmVarDecl 0x9803a0 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:361:48> col:48 __x '_Float64':'double'
| | |-ParmVarDecl 0x980420 <col:53, col:57> col:57 __round 'int'
| | `-ParmVarDecl 0x9804a0 <line:362:10, col:23> col:23 __width 'unsigned int'
| |-FunctionDecl 0x9807b8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:45:1 __ufromfpxf64 '__uintmax_t (_Float64, int, unsigned int) throw()' extern
| | |-ParmVarDecl 0x980610 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:361:48> col:48 __x '_Float64':'double'
| | |-ParmVarDecl 0x980690 <col:53, col:57> col:57 __round 'int'
| | `-ParmVarDecl 0x980710 <line:362:10, col:23> col:23 __width 'unsigned int'
| |-FunctionDecl 0x980998 </usr/include/math.h:283:3, line:280:66> <scratch space>:46:1 fmaxmagf64 '_Float64 (_Float64, _Float64) throw()' extern
| | |-ParmVarDecl 0x980880 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:365:35> col:35 __x '_Float64':'double'
| | |-ParmVarDecl 0x9808f8 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:365:50> col:50 __y '_Float64':'double'
| | `-ConstAttr 0x980a48 <col:57>
| |-FunctionDecl 0x980c60 </usr/include/math.h:283:3, line:281:79> <scratch space>:48:1 __fmaxmagf64 '_Float64 (_Float64, _Float64) throw()' extern
| | |-ParmVarDecl 0x980ab0 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:365:35> col:35 __x '_Float64':'double'
| | |-ParmVarDecl 0x980b28 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:365:50> col:50 __y '_Float64':'double'
| | `-ConstAttr 0x980d10 <col:57>
| |-FunctionDecl 0x980e90 </usr/include/math.h:283:3, line:280:66> <scratch space>:49:1 fminmagf64 '_Float64 (_Float64, _Float64) throw()' extern
| | |-ParmVarDecl 0x980d78 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:368:35> col:35 __x '_Float64':'double'
| | |-ParmVarDecl 0x980df0 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:368:50> col:50 __y '_Float64':'double'
| | `-ConstAttr 0x980f40 <col:57>
| |-FunctionDecl 0x9810c0 </usr/include/math.h:283:3, line:281:79> <scratch space>:51:1 __fminmagf64 '_Float64 (_Float64, _Float64) throw()' extern
| | |-ParmVarDecl 0x980fa8 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:368:35> col:35 __x '_Float64':'double'
| | |-ParmVarDecl 0x981020 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:368:50> col:50 __y '_Float64':'double'
| | `-ConstAttr 0x981170 <col:57>
| |-FunctionDecl 0x981358 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:52:1 canonicalizef64 'int (_Float64 *, const _Float64 *) throw()' extern
| | |-ParmVarDecl 0x9811d8 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:371:47> col:47 __cx '_Float64 *'
| | `-ParmVarDecl 0x981278 <col:53, col:70> col:70 __x 'const _Float64 *'
| |-FunctionDecl 0x981578 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:226:54> <scratch space>:54:1 totalorderf64 'int (const _Float64 *, const _Float64 *) throw()' extern
| | |-ParmVarDecl 0x981418 </usr/include/x86_64-linux-gnu/bits/mathcalls.h:376:34, col:51> col:51 __x 'const _Float64 *'
| | |-ParmVarDecl 0x981490 <line:377:6, col:23> col:23 __y 'const _Float64 *'
| | `-PureAttr 0x981628 </usr/include/x86_64-linux-gnu/sys/cdefs.h:226:45>
| |-FunctionDecl 0x9817b0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:226:54> <scratch space>:55:1 totalordermagf64 'int (const _Float64 *, const _Float64 *) throw()' extern
| | |-ParmVarDecl 0x981690 </usr/include/x86_64-linux-gnu/bits/mathcalls.h:381:37, col:54> col:54 __x 'const _Float64 *'
| | |-ParmVarDecl 0x981708 <line:382:9, col:26> col:26 __y 'const _Float64 *'
| | `-PureAttr 0x981860 </usr/include/x86_64-linux-gnu/sys/cdefs.h:226:45>
| |-FunctionDecl 0x981990 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:56:1 getpayloadf64 '_Float64 (const _Float64 *) throw()' extern
| | `-ParmVarDecl 0x9818c8 </usr/include/x86_64-linux-gnu/bits/mathcalls.h:386:27, col:44> col:44 __x 'const _Float64 *'
| |-FunctionDecl 0x981ae0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:58:1 __getpayloadf64 '_Float64 (const _Float64 *) throw()' extern
| | `-ParmVarDecl 0x981a48 </usr/include/x86_64-linux-gnu/bits/mathcalls.h:386:27, col:44> col:44 __x 'const _Float64 *'
| |-FunctionDecl 0x981d58 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:59:1 setpayloadf64 'int (_Float64 *, _Float64) throw()' extern
| | |-ParmVarDecl 0x981b98 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:389:45> col:45 __x '_Float64 *'
| | `-ParmVarDecl 0x981c70 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:389:60> col:60 __payload '_Float64':'double'
| |-FunctionDecl 0x981f38 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:60:1 setpayloadsigf64 'int (_Float64 *, _Float64) throw()' extern
| | |-ParmVarDecl 0x981e18 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:392:48> col:48 __x '_Float64 *'
| | `-ParmVarDecl 0x981e90 </usr/include/math.h:398:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:392:63> col:63 __payload '_Float64':'double'
| |-FunctionDecl 0x9820f0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:62:1 acosf32x '_Float32x (_Float32x) throw()' extern
| | `-ParmVarDecl 0x982020 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:53:31> col:31 __x '_Float32x':'double'
| |-FunctionDecl 0x982240 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:64:1 __acosf32x '_Float32x (_Float32x) throw()' extern
| | `-ParmVarDecl 0x9821a8 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:53:31> col:31 __x '_Float32x':'double'
| |-FunctionDecl 0x982390 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:65:1 asinf32x '_Float32x (_Float32x) throw()' extern
| | `-ParmVarDecl 0x9822f8 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:55:31> col:31 __x '_Float32x':'double'
| |-FunctionDecl 0x9824e0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:67:1 __asinf32x '_Float32x (_Float32x) throw()' extern
| | `-ParmVarDecl 0x982448 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:55:31> col:31 __x '_Float32x':'double'
| |-FunctionDecl 0x982630 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:68:1 atanf32x '_Float32x (_Float32x) throw()' extern
| | `-ParmVarDecl 0x982598 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:57:31> col:31 __x '_Float32x':'double'
| |-FunctionDecl 0x982780 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:70:1 __atanf32x '_Float32x (_Float32x) throw()' extern
| | `-ParmVarDecl 0x9826e8 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:57:31> col:31 __x '_Float32x':'double'
| |-FunctionDecl 0x982990 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:71:1 atan2f32x '_Float32x (_Float32x, _Float32x) throw()' extern
| | |-ParmVarDecl 0x982838 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:59:32> col:32 __y '_Float32x':'double'
| | `-ParmVarDecl 0x9828b0 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:59:47> col:47 __x '_Float32x':'double'
| |-FunctionDecl 0x982b68 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:73:1 __atan2f32x '_Float32x (_Float32x, _Float32x) throw()' extern
| | |-ParmVarDecl 0x982a50 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:59:32> col:32 __y '_Float32x':'double'
| | `-ParmVarDecl 0x982ac8 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:59:47> col:47 __x '_Float32x':'double'
| |-FunctionDecl 0x983d28 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:76:1 cosf32x '_Float32x (_Float32x) throw()' extern
| | `-ParmVarDecl 0x983c90 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:62:34> col:34 __x '_Float32x':'double'
| |-FunctionDecl 0x983e78 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:78:1 __cosf32x '_Float32x (_Float32x) throw()' extern
| | `-ParmVarDecl 0x983de0 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:62:34> col:34 __x '_Float32x':'double'
| |-FunctionDecl 0x983fc8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:81:1 sinf32x '_Float32x (_Float32x) throw()' extern
| | `-ParmVarDecl 0x983f30 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:64:34> col:34 __x '_Float32x':'double'
| |-FunctionDecl 0x984118 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:83:1 __sinf32x '_Float32x (_Float32x) throw()' extern
| | `-ParmVarDecl 0x984080 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:64:34> col:34 __x '_Float32x':'double'
| |-FunctionDecl 0x984268 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:84:1 tanf32x '_Float32x (_Float32x) throw()' extern
| | `-ParmVarDecl 0x9841d0 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:66:30> col:30 __x '_Float32x':'double'
| |-FunctionDecl 0x9843b8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:86:1 __tanf32x '_Float32x (_Float32x) throw()' extern
| | `-ParmVarDecl 0x984320 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:66:30> col:30 __x '_Float32x':'double'
| |-FunctionDecl 0x984508 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:87:1 coshf32x '_Float32x (_Float32x) throw()' extern
| | `-ParmVarDecl 0x984470 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:71:31> col:31 __x '_Float32x':'double'
| |-FunctionDecl 0x984658 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:89:1 __coshf32x '_Float32x (_Float32x) throw()' extern
| | `-ParmVarDecl 0x9845c0 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:71:31> col:31 __x '_Float32x':'double'
| |-FunctionDecl 0x9847a8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:90:1 sinhf32x '_Float32x (_Float32x) throw()' extern
| | `-ParmVarDecl 0x984710 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:73:31> col:31 __x '_Float32x':'double'
| |-FunctionDecl 0x9848f8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:92:1 __sinhf32x '_Float32x (_Float32x) throw()' extern
| | `-ParmVarDecl 0x984860 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:73:31> col:31 __x '_Float32x':'double'
| |-FunctionDecl 0x984a48 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:93:1 tanhf32x '_Float32x (_Float32x) throw()' extern
| | `-ParmVarDecl 0x9849b0 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:75:31> col:31 __x '_Float32x':'double'
| |-FunctionDecl 0x984b98 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:95:1 __tanhf32x '_Float32x (_Float32x) throw()' extern
| | `-ParmVarDecl 0x984b00 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:75:31> col:31 __x '_Float32x':'double'
| |-FunctionDecl 0x984eb0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:98:1 sincosf32x 'void (_Float32x, _Float32x *, _Float32x *) throw()' extern
| | |-ParmVarDecl 0x984ca0 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:80:14> col:14 __x '_Float32x':'double'
| | |-ParmVarDecl 0x984d48 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:80:30> col:30 __sinx '_Float32x *'
| | `-ParmVarDecl 0x984dc0 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:80:49> col:49 __cosx '_Float32x *'
| |-FunctionDecl 0x985110 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:100:1 __sincosf32x 'void (_Float32x, _Float32x *, _Float32x *) throw()' extern
| | |-ParmVarDecl 0x984f78 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:80:14> col:14 __x '_Float32x':'double'
| | |-ParmVarDecl 0x984ff0 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:80:30> col:30 __sinx '_Float32x *'
| | `-ParmVarDecl 0x985068 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:80:49> col:49 __cosx '_Float32x *'
| |-FunctionDecl 0x985270 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:101:1 acoshf32x '_Float32x (_Float32x) throw()' extern
| | `-ParmVarDecl 0x9851d8 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:85:32> col:32 __x '_Float32x':'double'
| |-FunctionDecl 0x9853c0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:103:1 __acoshf32x '_Float32x (_Float32x) throw()' extern
| | `-ParmVarDecl 0x985328 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:85:32> col:32 __x '_Float32x':'double'
| |-FunctionDecl 0x985510 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:104:1 asinhf32x '_Float32x (_Float32x) throw()' extern
| | `-ParmVarDecl 0x985478 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:87:32> col:32 __x '_Float32x':'double'
| |-FunctionDecl 0x985660 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:106:1 __asinhf32x '_Float32x (_Float32x) throw()' extern
| | `-ParmVarDecl 0x9855c8 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:87:32> col:32 __x '_Float32x':'double'
| |-FunctionDecl 0x9857b0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:107:1 atanhf32x '_Float32x (_Float32x) throw()' extern
| | `-ParmVarDecl 0x985718 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:89:32> col:32 __x '_Float32x':'double'
| |-FunctionDecl 0x985900 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:109:1 __atanhf32x '_Float32x (_Float32x) throw()' extern
| | `-ParmVarDecl 0x985868 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:89:32> col:32 __x '_Float32x':'double'
| |-FunctionDecl 0x985a50 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:112:1 expf32x '_Float32x (_Float32x) throw()' extern
| | `-ParmVarDecl 0x9859b8 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:95:34> col:34 __x '_Float32x':'double'
| |-FunctionDecl 0x985ba0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:114:1 __expf32x '_Float32x (_Float32x) throw()' extern
| | `-ParmVarDecl 0x985b08 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:95:34> col:34 __x '_Float32x':'double'
| |-FunctionDecl 0x985db0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:115:1 frexpf32x '_Float32x (_Float32x, int *) throw()' extern
| | |-ParmVarDecl 0x985c58 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:98:32> col:32 __x '_Float32x':'double'
| | `-ParmVarDecl 0x985cd8 <col:37, col:42> col:42 __exponent 'int *'
| |-FunctionDecl 0x985f90 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:117:1 __frexpf32x '_Float32x (_Float32x, int *) throw()' extern
| | |-ParmVarDecl 0x985e70 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:98:32> col:32 __x '_Float32x':'double'
| | `-ParmVarDecl 0x985ef0 <col:37, col:42> col:42 __exponent 'int *'
| |-FunctionDecl 0x9861b0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:118:1 ldexpf32x '_Float32x (_Float32x, int) throw()' extern
| | |-ParmVarDecl 0x986050 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:101:32> col:32 __x '_Float32x':'double'
| | `-ParmVarDecl 0x9860d0 <col:37, col:41> col:41 __exponent 'int'
| |-FunctionDecl 0x986390 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:120:1 __ldexpf32x '_Float32x (_Float32x, int) throw()' extern
| | |-ParmVarDecl 0x986270 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:101:32> col:32 __x '_Float32x':'double'
| | `-ParmVarDecl 0x9862f0 <col:37, col:41> col:41 __exponent 'int'
| |-FunctionDecl 0x9864e8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:123:1 logf32x '_Float32x (_Float32x) throw()' extern
| | `-ParmVarDecl 0x986450 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:104:34> col:34 __x '_Float32x':'double'
| |-FunctionDecl 0x986638 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:125:1 __logf32x '_Float32x (_Float32x) throw()' extern
| | `-ParmVarDecl 0x9865a0 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:104:34> col:34 __x '_Float32x':'double'
| |-FunctionDecl 0x986788 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:126:1 log10f32x '_Float32x (_Float32x) throw()' extern
| | `-ParmVarDecl 0x9866f0 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:107:32> col:32 __x '_Float32x':'double'
| |-FunctionDecl 0x9868d8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:128:1 __log10f32x '_Float32x (_Float32x) throw()' extern
| | `-ParmVarDecl 0x986840 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:107:32> col:32 __x '_Float32x':'double'
| |-FunctionDecl 0x986ae0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:129:1 modff32x '_Float32x (_Float32x, _Float32x *) throw()' extern
| | |-ParmVarDecl 0x986990 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:110:31> col:31 __x '_Float32x':'double'
| | `-ParmVarDecl 0x986a08 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:110:47> col:47 __iptr '_Float32x *'
| |-FunctionDecl 0x987cf8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> <scratch space>:131:1 __modff32x '_Float32x (_Float32x, _Float32x *) throw()' extern
| | |-ParmVarDecl 0x986ba0 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:110:31> col:31 __x '_Float32x':'double'
| | |-ParmVarDecl 0x986c18 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:110:47> col:47 __iptr '_Float32x *'
| | `-NonNullAttr 0x987da8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:110:69> 2
| |-FunctionDecl 0x987ec0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:133:1 exp10f32x '_Float32x (_Float32x) throw()' extern
| | `-ParmVarDecl 0x987e28 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:114:32> col:32 __x '_Float32x':'double'
| |-FunctionDecl 0x988010 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:135:1 __exp10f32x '_Float32x (_Float32x) throw()' extern
| | `-ParmVarDecl 0x987f78 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:114:32> col:32 __x '_Float32x':'double'
| |-FunctionDecl 0x988160 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:136:1 expm1f32x '_Float32x (_Float32x) throw()' extern
| | `-ParmVarDecl 0x9880c8 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:119:32> col:32 __x '_Float32x':'double'
| |-FunctionDecl 0x9882b0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:138:1 __expm1f32x '_Float32x (_Float32x) throw()' extern
| | `-ParmVarDecl 0x988218 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:119:32> col:32 __x '_Float32x':'double'
| |-FunctionDecl 0x988400 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:139:1 log1pf32x '_Float32x (_Float32x) throw()' extern
| | `-ParmVarDecl 0x988368 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:122:32> col:32 __x '_Float32x':'double'
| |-FunctionDecl 0x988550 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:141:1 __log1pf32x '_Float32x (_Float32x) throw()' extern
| | `-ParmVarDecl 0x9884b8 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:122:32> col:32 __x '_Float32x':'double'
| |-FunctionDecl 0x9886a0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:142:1 logbf32x '_Float32x (_Float32x) throw()' extern
| | `-ParmVarDecl 0x988608 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:125:31> col:31 __x '_Float32x':'double'
| |-FunctionDecl 0x9887f0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:144:1 __logbf32x '_Float32x (_Float32x) throw()' extern
| | `-ParmVarDecl 0x988758 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:125:31> col:31 __x '_Float32x':'double'
| |-FunctionDecl 0x988940 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:145:1 exp2f32x '_Float32x (_Float32x) throw()' extern
| | `-ParmVarDecl 0x9888a8 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:130:31> col:31 __x '_Float32x':'double'
| |-FunctionDecl 0x988a90 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:147:1 __exp2f32x '_Float32x (_Float32x) throw()' extern
| | `-ParmVarDecl 0x9889f8 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:130:31> col:31 __x '_Float32x':'double'
| |-FunctionDecl 0x988be0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:148:1 log2f32x '_Float32x (_Float32x) throw()' extern
| | `-ParmVarDecl 0x988b48 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:133:31> col:31 __x '_Float32x':'double'
| |-FunctionDecl 0x988d30 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:150:1 __log2f32x '_Float32x (_Float32x) throw()' extern
| | `-ParmVarDecl 0x988c98 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:133:31> col:31 __x '_Float32x':'double'
| |-FunctionDecl 0x988f00 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:153:1 powf32x '_Float32x (_Float32x, _Float32x) throw()' extern
| | |-ParmVarDecl 0x988de8 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:140:34> col:34 __x '_Float32x':'double'
| | `-ParmVarDecl 0x988e60 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:140:49> col:49 __y '_Float32x':'double'
| |-FunctionDecl 0x9890d8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:155:1 __powf32x '_Float32x (_Float32x, _Float32x) throw()' extern
| | |-ParmVarDecl 0x988fc0 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:140:34> col:34 __x '_Float32x':'double'
| | `-ParmVarDecl 0x989038 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:140:49> col:49 __y '_Float32x':'double'
| |-FunctionDecl 0x989230 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:156:1 sqrtf32x '_Float32x (_Float32x) throw()' extern
| | `-ParmVarDecl 0x989198 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:143:31> col:31 __x '_Float32x':'double'
| |-FunctionDecl 0x989380 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:158:1 __sqrtf32x '_Float32x (_Float32x) throw()' extern
| | `-ParmVarDecl 0x9892e8 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:143:31> col:31 __x '_Float32x':'double'
| |-FunctionDecl 0x989550 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:159:1 hypotf32x '_Float32x (_Float32x, _Float32x) throw()' extern
| | |-ParmVarDecl 0x989438 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:147:32> col:32 __x '_Float32x':'double'
| | `-ParmVarDecl 0x9894b0 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:147:47> col:47 __y '_Float32x':'double'
| |-FunctionDecl 0x989728 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:161:1 __hypotf32x '_Float32x (_Float32x, _Float32x) throw()' extern
| | |-ParmVarDecl 0x989610 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:147:32> col:32 __x '_Float32x':'double'
| | `-ParmVarDecl 0x989688 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:147:47> col:47 __y '_Float32x':'double'
| |-FunctionDecl 0x989880 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:162:1 cbrtf32x '_Float32x (_Float32x) throw()' extern
| | `-ParmVarDecl 0x9897e8 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:152:31> col:31 __x '_Float32x':'double'
| |-FunctionDecl 0x9899d0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:164:1 __cbrtf32x '_Float32x (_Float32x) throw()' extern
| | `-ParmVarDecl 0x989938 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:152:31> col:31 __x '_Float32x':'double'
| |-FunctionDecl 0x989b20 </usr/include/math.h:283:3, line:280:66> <scratch space>:165:1 ceilf32x '_Float32x (_Float32x) throw()' extern
| | |-ParmVarDecl 0x989a88 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:159:32> col:32 __x '_Float32x':'double'
| | `-ConstAttr 0x989bc8 <col:39>
| |-FunctionDecl 0x989d00 </usr/include/math.h:283:3, line:281:79> <scratch space>:167:1 __ceilf32x '_Float32x (_Float32x) throw()' extern
| | |-ParmVarDecl 0x989c30 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:159:32> col:32 __x '_Float32x':'double'
| | `-ConstAttr 0x989da8 <col:39>
| |-FunctionDecl 0x989ea8 </usr/include/math.h:283:3, line:280:66> <scratch space>:168:1 fabsf32x '_Float32x (_Float32x) throw()' extern
| | |-ParmVarDecl 0x989e10 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:162:32> col:32 __x '_Float32x':'double'
| | `-ConstAttr 0x989f50 <col:39>
| |-FunctionDecl 0x98a050 </usr/include/math.h:283:3, line:281:79> <scratch space>:170:1 __fabsf32x '_Float32x (_Float32x) throw()' extern
| | |-ParmVarDecl 0x989fb8 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:162:32> col:32 __x '_Float32x':'double'
| | `-ConstAttr 0x98a0f8 <col:39>
| |-FunctionDecl 0x98a1f8 </usr/include/math.h:283:3, line:280:66> <scratch space>:171:1 floorf32x '_Float32x (_Float32x) throw()' extern
| | |-ParmVarDecl 0x98a160 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:165:33> col:33 __x '_Float32x':'double'
| | `-ConstAttr 0x98a2a0 <col:40>
| |-FunctionDecl 0x98a3a0 </usr/include/math.h:283:3, line:281:79> <scratch space>:173:1 __floorf32x '_Float32x (_Float32x) throw()' extern
| | |-ParmVarDecl 0x98a308 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:165:33> col:33 __x '_Float32x':'double'
| | `-ConstAttr 0x98a448 <col:40>
| |-FunctionDecl 0x98a5c8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:174:1 fmodf32x '_Float32x (_Float32x, _Float32x) throw()' extern
| | |-ParmVarDecl 0x98a4b0 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:168:31> col:31 __x '_Float32x':'double'
| | `-ParmVarDecl 0x98a528 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:168:46> col:46 __y '_Float32x':'double'
| |-FunctionDecl 0x98a7a0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:176:1 __fmodf32x '_Float32x (_Float32x, _Float32x) throw()' extern
| | |-ParmVarDecl 0x98a688 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:168:31> col:31 __x '_Float32x':'double'
| | `-ParmVarDecl 0x98a700 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:168:46> col:46 __y '_Float32x':'double'
| |-FunctionDecl 0x98a978 </usr/include/math.h:283:3, line:280:66> <scratch space>:177:1 copysignf32x '_Float32x (_Float32x, _Float32x) throw()' extern
| | |-ParmVarDecl 0x98a860 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:196:36> col:36 __x '_Float32x':'double'
| | |-ParmVarDecl 0x98a8d8 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:196:51> col:51 __y '_Float32x':'double'
| | `-ConstAttr 0x98aa28 <col:58>
| |-FunctionDecl 0x98aba8 </usr/include/math.h:283:3, line:281:79> <scratch space>:179:1 __copysignf32x '_Float32x (_Float32x, _Float32x) throw()' extern
| | |-ParmVarDecl 0x98aa90 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:196:36> col:36 __x '_Float32x':'double'
| | |-ParmVarDecl 0x98ab08 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:196:51> col:51 __y '_Float32x':'double'
| | `-ConstAttr 0x98ac58 <col:58>
| |-FunctionDecl 0x98ad90 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:180:1 nanf32x '_Float32x (const char *) throw()' extern
| | `-ParmVarDecl 0x98acc8 </usr/include/x86_64-linux-gnu/bits/mathcalls.h:201:20, col:32> col:32 __tagb 'const char *'
| |-FunctionDecl 0x98aee8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:182:1 __nanf32x '_Float32x (const char *) throw()' extern
| | `-ParmVarDecl 0x98ae50 </usr/include/x86_64-linux-gnu/bits/mathcalls.h:201:20, col:32> col:32 __tagb 'const char *'
| |-FunctionDecl 0x98b038 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:183:1 j0f32x '_Float32x (_Float32x) throw()' extern
| | `-ParmVarDecl 0x98afa0 </usr/include/math.h:432:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:217:28 '_Float32x':'double'
| |-FunctionDecl 0x98b188 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:185:1 __j0f32x '_Float32x (_Float32x) throw()' extern
| | `-ParmVarDecl 0x98b0f0 </usr/include/math.h:432:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:217:28 '_Float32x':'double'
| |-FunctionDecl 0x98b2d8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:186:1 j1f32x '_Float32x (_Float32x) throw()' extern
| | `-ParmVarDecl 0x98b240 </usr/include/math.h:432:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:218:28 '_Float32x':'double'
| |-FunctionDecl 0x98b428 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:188:1 __j1f32x '_Float32x (_Float32x) throw()' extern
| | `-ParmVarDecl 0x98b390 </usr/include/math.h:432:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:218:28 '_Float32x':'double'
| |-FunctionDecl 0x98b640 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:189:1 jnf32x '_Float32x (int, _Float32x) throw()' extern
| | |-ParmVarDecl 0x98b4e8 </usr/include/x86_64-linux-gnu/bits/mathcalls.h:219:19> col:22 'int'
| | `-ParmVarDecl 0x98b560 </usr/include/math.h:432:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:219:33 '_Float32x':'double'
| |-FunctionDecl 0x98b820 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:191:1 __jnf32x '_Float32x (int, _Float32x) throw()' extern
| | |-ParmVarDecl 0x98b708 </usr/include/x86_64-linux-gnu/bits/mathcalls.h:219:19> col:22 'int'
| | `-ParmVarDecl 0x98b780 </usr/include/math.h:432:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:219:33 '_Float32x':'double'
| |-FunctionDecl 0x98b978 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:192:1 y0f32x '_Float32x (_Float32x) throw()' extern
| | `-ParmVarDecl 0x98b8e0 </usr/include/math.h:432:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:220:28 '_Float32x':'double'
| |-FunctionDecl 0x98bac8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:194:1 __y0f32x '_Float32x (_Float32x) throw()' extern
| | `-ParmVarDecl 0x98ba30 </usr/include/math.h:432:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:220:28 '_Float32x':'double'
| |-FunctionDecl 0x98bc18 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:195:1 y1f32x '_Float32x (_Float32x) throw()' extern
| | `-ParmVarDecl 0x98bb80 </usr/include/math.h:432:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:221:28 '_Float32x':'double'
| |-FunctionDecl 0x98bd78 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:197:1 __y1f32x '_Float32x (_Float32x) throw()' extern
| | `-ParmVarDecl 0x98bce0 </usr/include/math.h:432:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:221:28 '_Float32x':'double'
| |-FunctionDecl 0x98bf50 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:198:1 ynf32x '_Float32x (int, _Float32x) throw()' extern
| | |-ParmVarDecl 0x98be38 </usr/include/x86_64-linux-gnu/bits/mathcalls.h:222:19> col:22 'int'
| | `-ParmVarDecl 0x98beb0 </usr/include/math.h:432:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:222:33 '_Float32x':'double'
| |-FunctionDecl 0x98c130 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:200:1 __ynf32x '_Float32x (int, _Float32x) throw()' extern
| | |-ParmVarDecl 0x98c018 </usr/include/x86_64-linux-gnu/bits/mathcalls.h:222:19> col:22 'int'
| | `-ParmVarDecl 0x98c090 </usr/include/math.h:432:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:222:33 '_Float32x':'double'
| |-FunctionDecl 0x98c288 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:201:1 erff32x '_Float32x (_Float32x) throw()' extern
| | `-ParmVarDecl 0x98c1f0 </usr/include/math.h:432:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:228:29 '_Float32x':'double'
| |-FunctionDecl 0x98c3d8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:203:1 __erff32x '_Float32x (_Float32x) throw()' extern
| | `-ParmVarDecl 0x98c340 </usr/include/math.h:432:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:228:29 '_Float32x':'double'
| |-FunctionDecl 0x98c528 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:204:1 erfcf32x '_Float32x (_Float32x) throw()' extern
| | `-ParmVarDecl 0x98c490 </usr/include/math.h:432:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:229:30 '_Float32x':'double'
| |-FunctionDecl 0x98c678 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:206:1 __erfcf32x '_Float32x (_Float32x) throw()' extern
| | `-ParmVarDecl 0x98c5e0 </usr/include/math.h:432:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:229:30 '_Float32x':'double'
| |-FunctionDecl 0x98c7c8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:207:1 lgammaf32x '_Float32x (_Float32x) throw()' extern
| | `-ParmVarDecl 0x98c730 </usr/include/math.h:432:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:230:32 '_Float32x':'double'
| |-FunctionDecl 0x98c918 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:209:1 __lgammaf32x '_Float32x (_Float32x) throw()' extern
| | `-ParmVarDecl 0x98c880 </usr/include/math.h:432:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:230:32 '_Float32x':'double'
| |-FunctionDecl 0x98ca68 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:210:1 tgammaf32x '_Float32x (_Float32x) throw()' extern
| | `-ParmVarDecl 0x98c9d0 </usr/include/math.h:432:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:235:32 '_Float32x':'double'
| |-FunctionDecl 0x98cbb8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:212:1 __tgammaf32x '_Float32x (_Float32x) throw()' extern
| | `-ParmVarDecl 0x98cb20 </usr/include/math.h:432:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:235:32 '_Float32x':'double'
| |-FunctionDecl 0x98cd90 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:214:1 lgammaf32x_r '_Float32x (_Float32x, int *) throw()' extern
| | |-ParmVarDecl 0x98cc70 </usr/include/math.h:432:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:249:34 '_Float32x':'double'
| | `-ParmVarDecl 0x98ccf0 <col:36, col:41> col:41 __signgamp 'int *'
| |-FunctionDecl 0x98cf70 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:217:1 __lgammaf32x_r '_Float32x (_Float32x, int *) throw()' extern
| | |-ParmVarDecl 0x98ce50 </usr/include/math.h:432:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:249:34 '_Float32x':'double'
| | `-ParmVarDecl 0x98ced0 <col:36, col:41> col:41 __signgamp 'int *'
| |-FunctionDecl 0x98d0c8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:218:1 rintf32x '_Float32x (_Float32x) throw()' extern
| | `-ParmVarDecl 0x98d030 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:256:31> col:31 __x '_Float32x':'double'
| |-FunctionDecl 0x98d218 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:220:1 __rintf32x '_Float32x (_Float32x) throw()' extern
| | `-ParmVarDecl 0x98d180 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:256:31> col:31 __x '_Float32x':'double'
| |-FunctionDecl 0x98d3e8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:221:1 nextafterf32x '_Float32x (_Float32x, _Float32x) throw()' extern
| | |-ParmVarDecl 0x98d2d0 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:259:36> col:36 __x '_Float32x':'double'
| | `-ParmVarDecl 0x98d348 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:259:51> col:51 __y '_Float32x':'double'
| |-FunctionDecl 0x98d5c0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:223:1 __nextafterf32x '_Float32x (_Float32x, _Float32x) throw()' extern
| | |-ParmVarDecl 0x98d4a8 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:259:36> col:36 __x '_Float32x':'double'
| | `-ParmVarDecl 0x98d520 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:259:51> col:51 __y '_Float32x':'double'
| |-FunctionDecl 0x98d718 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:225:1 nextdownf32x '_Float32x (_Float32x) throw()' extern
| | `-ParmVarDecl 0x98d680 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:266:35> col:35 __x '_Float32x':'double'
| |-FunctionDecl 0x98d868 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:227:1 __nextdownf32x '_Float32x (_Float32x) throw()' extern
| | `-ParmVarDecl 0x98d7d0 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:266:35> col:35 __x '_Float32x':'double'
| |-FunctionDecl 0x98d9b8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:228:1 nextupf32x '_Float32x (_Float32x) throw()' extern
| | `-ParmVarDecl 0x98d920 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:268:33> col:33 __x '_Float32x':'double'
| |-FunctionDecl 0x98db08 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:230:1 __nextupf32x '_Float32x (_Float32x) throw()' extern
| | `-ParmVarDecl 0x98da70 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:268:33> col:33 __x '_Float32x':'double'
| |-FunctionDecl 0x98dcf0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:231:1 remainderf32x '_Float32x (_Float32x, _Float32x) throw()' extern
| | |-ParmVarDecl 0x98dbc0 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:36> col:36 __x '_Float32x':'double'
| | `-ParmVarDecl 0x98dc38 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:51> col:51 __y '_Float32x':'double'
| |-FunctionDecl 0x98dec8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:233:1 __remainderf32x '_Float32x (_Float32x, _Float32x) throw()' extern
| | |-ParmVarDecl 0x98ddb0 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:36> col:36 __x '_Float32x':'double'
| | `-ParmVarDecl 0x98de28 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:51> col:51 __y '_Float32x':'double'
| |-FunctionDecl 0x98e0a8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:234:1 scalbnf32x '_Float32x (_Float32x, int) throw()' extern
| | |-ParmVarDecl 0x98df88 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:276:33> col:33 __x '_Float32x':'double'
| | `-ParmVarDecl 0x98e008 <col:38, col:42> col:42 __n 'int'
| |-FunctionDecl 0x98e288 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:236:1 __scalbnf32x '_Float32x (_Float32x, int) throw()' extern
| | |-ParmVarDecl 0x98e168 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:276:33> col:33 __x '_Float32x':'double'
| | `-ParmVarDecl 0x98e1e8 <col:38, col:42> col:42 __n 'int'
| |-FunctionDecl 0x98e418 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:237:1 ilogbf32x 'int (_Float32x) throw()' extern
| | `-ParmVarDecl 0x98e348 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:280:36> col:36 __x '_Float32x':'double'
| |-FunctionDecl 0x98e570 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:239:1 __ilogbf32x 'int (_Float32x) throw()' extern
| | `-ParmVarDecl 0x98e4d0 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:280:36> col:36 __x '_Float32x':'double'
| |-FunctionDecl 0x98e6f8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:241:1 llogbf32x 'long (_Float32x) throw()' extern
| | `-ParmVarDecl 0x98e628 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:285:42> col:42 __x '_Float32x':'double'
| |-FunctionDecl 0x98e850 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:243:1 __llogbf32x 'long (_Float32x) throw()' extern
| | `-ParmVarDecl 0x98e7b0 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:285:42> col:42 __x '_Float32x':'double'
| |-FunctionDecl 0x98ea60 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:244:1 scalblnf32x '_Float32x (_Float32x, long) throw()' extern
| | |-ParmVarDecl 0x98e908 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:290:34> col:34 __x '_Float32x':'double'
| | `-ParmVarDecl 0x98e988 <col:39, col:48> col:48 __n 'long'
| |-FunctionDecl 0x98ec40 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:246:1 __scalblnf32x '_Float32x (_Float32x, long) throw()' extern
| | |-ParmVarDecl 0x98eb20 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:290:34> col:34 __x '_Float32x':'double'
| | `-ParmVarDecl 0x98eba0 <col:39, col:48> col:48 __n 'long'
| |-FunctionDecl 0x98ed98 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:247:1 nearbyintf32x '_Float32x (_Float32x) throw()' extern
| | `-ParmVarDecl 0x98ed00 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:294:36> col:36 __x '_Float32x':'double'
| |-FunctionDecl 0x98eee8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:249:1 __nearbyintf32x '_Float32x (_Float32x) throw()' extern
| | `-ParmVarDecl 0x98ee50 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:294:36> col:36 __x '_Float32x':'double'
| |-FunctionDecl 0x98f038 </usr/include/math.h:283:3, line:280:66> <scratch space>:250:1 roundf32x '_Float32x (_Float32x) throw()' extern
| | |-ParmVarDecl 0x98efa0 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:33> col:33 __x '_Float32x':'double'
| | `-ConstAttr 0x98f0e0 <col:40>
| |-FunctionDecl 0x98f1e0 </usr/include/math.h:283:3, line:281:79> <scratch space>:252:1 __roundf32x '_Float32x (_Float32x) throw()' extern
| | |-ParmVarDecl 0x98f148 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:33> col:33 __x '_Float32x':'double'
| | `-ConstAttr 0x98f288 <col:40>
| |-FunctionDecl 0x98f388 </usr/include/math.h:283:3, line:280:66> <scratch space>:253:1 truncf32x '_Float32x (_Float32x) throw()' extern
| | |-ParmVarDecl 0x98f2f0 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:302:33> col:33 __x '_Float32x':'double'
| | `-ConstAttr 0x98f430 <col:40>
| |-FunctionDecl 0x98f530 </usr/include/math.h:283:3, line:281:79> <scratch space>:255:1 __truncf32x '_Float32x (_Float32x) throw()' extern
| | |-ParmVarDecl 0x98f498 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:302:33> col:33 __x '_Float32x':'double'
| | `-ConstAttr 0x98f5d8 <col:40>
| |-FunctionDecl 0x98f820 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:256:1 remquof32x '_Float32x (_Float32x, _Float32x, int *) throw()' extern
| | |-ParmVarDecl 0x98f640 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:307:33> col:33 __x '_Float32x':'double'
| | |-ParmVarDecl 0x98f6b8 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:307:48> col:48 __y '_Float32x':'double'
| | `-ParmVarDecl 0x98f738 <col:53, col:58> col:58 __quo 'int *'
| |-FunctionDecl 0x98fa88 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:258:1 __remquof32x '_Float32x (_Float32x, _Float32x, int *) throw()' extern
| | |-ParmVarDecl 0x98f8e8 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:307:33> col:33 __x '_Float32x':'double'
| | |-ParmVarDecl 0x98f960 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:307:48> col:48 __y '_Float32x':'double'
| | `-ParmVarDecl 0x98f9e0 <col:53, col:58> col:58 __quo 'int *'
| |-FunctionDecl 0x98fbf0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:259:1 lrintf32x 'long (_Float32x) throw()' extern
| | `-ParmVarDecl 0x98fb50 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:314:41> col:41 __x '_Float32x':'double'
| |-FunctionDecl 0x990db0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:261:1 __lrintf32x 'long (_Float32x) throw()' extern
| | `-ParmVarDecl 0x990d10 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:314:41> col:41 __x '_Float32x':'double'
| |-FunctionDecl 0x990f38 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:262:1 llrintf32x 'long long (_Float32x) throw()' extern
| | `-ParmVarDecl 0x990e68 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:316:47> col:47 __x '_Float32x':'double'
| |-FunctionDecl 0x991090 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:264:1 __llrintf32x 'long long (_Float32x) throw()' extern
| | `-ParmVarDecl 0x990ff0 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:316:47> col:47 __x '_Float32x':'double'
| |-FunctionDecl 0x9911e8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:265:1 lroundf32x 'long (_Float32x) throw()' extern
| | `-ParmVarDecl 0x991148 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:320:42> col:42 __x '_Float32x':'double'
| |-FunctionDecl 0x991340 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:267:1 __lroundf32x 'long (_Float32x) throw()' extern
| | `-ParmVarDecl 0x9912a0 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:320:42> col:42 __x '_Float32x':'double'
| |-FunctionDecl 0x991498 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:268:1 llroundf32x 'long long (_Float32x) throw()' extern
| | `-ParmVarDecl 0x9913f8 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:322:48> col:48 __x '_Float32x':'double'
| |-FunctionDecl 0x9915f0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:270:1 __llroundf32x 'long long (_Float32x) throw()' extern
| | `-ParmVarDecl 0x991550 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:322:48> col:48 __x '_Float32x':'double'
| |-FunctionDecl 0x9917c0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:271:1 fdimf32x '_Float32x (_Float32x, _Float32x) throw()' extern
| | |-ParmVarDecl 0x9916a8 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:326:31> col:31 __x '_Float32x':'double'
| | `-ParmVarDecl 0x991720 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:326:46> col:46 __y '_Float32x':'double'
| |-FunctionDecl 0x991998 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:273:1 __fdimf32x '_Float32x (_Float32x, _Float32x) throw()' extern
| | |-ParmVarDecl 0x991880 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:326:31> col:31 __x '_Float32x':'double'
| | `-ParmVarDecl 0x9918f8 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:326:46> col:46 __y '_Float32x':'double'
| |-FunctionDecl 0x991b70 </usr/include/math.h:283:3, line:280:66> <scratch space>:274:1 fmaxf32x '_Float32x (_Float32x, _Float32x) throw()' extern
| | |-ParmVarDecl 0x991a58 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:32> col:32 __x '_Float32x':'double'
| | |-ParmVarDecl 0x991ad0 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:47> col:47 __y '_Float32x':'double'
| | `-ConstAttr 0x991c20 <col:54>
| |-FunctionDecl 0x991da0 </usr/include/math.h:283:3, line:281:79> <scratch space>:276:1 __fmaxf32x '_Float32x (_Float32x, _Float32x) throw()' extern
| | |-ParmVarDecl 0x991c88 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:32> col:32 __x '_Float32x':'double'
| | |-ParmVarDecl 0x991d00 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:47> col:47 __y '_Float32x':'double'
| | `-ConstAttr 0x991e50 <col:54>
| |-FunctionDecl 0x991fd0 </usr/include/math.h:283:3, line:280:66> <scratch space>:277:1 fminf32x '_Float32x (_Float32x, _Float32x) throw()' extern
| | |-ParmVarDecl 0x991eb8 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:32> col:32 __x '_Float32x':'double'
| | |-ParmVarDecl 0x991f30 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:47> col:47 __y '_Float32x':'double'
| | `-ConstAttr 0x992080 <col:54>
| |-FunctionDecl 0x992200 </usr/include/math.h:283:3, line:281:79> <scratch space>:279:1 __fminf32x '_Float32x (_Float32x, _Float32x) throw()' extern
| | |-ParmVarDecl 0x9920e8 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:32> col:32 __x '_Float32x':'double'
| | |-ParmVarDecl 0x992160 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:47> col:47 __y '_Float32x':'double'
| | `-ConstAttr 0x9922b0 <col:54>
| |-FunctionDecl 0x9924f0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:280:1 fmaf32x '_Float32x (_Float32x, _Float32x, _Float32x) throw()' extern
| | |-ParmVarDecl 0x992318 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:335:30> col:30 __x '_Float32x':'double'
| | |-ParmVarDecl 0x992390 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:335:45> col:45 __y '_Float32x':'double'
| | `-ParmVarDecl 0x992408 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:335:60> col:60 __z '_Float32x':'double'
| |-FunctionDecl 0x992750 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:282:1 __fmaf32x '_Float32x (_Float32x, _Float32x, _Float32x) throw()' extern
| | |-ParmVarDecl 0x9925b8 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:335:30> col:30 __x '_Float32x':'double'
| | |-ParmVarDecl 0x992630 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:335:45> col:45 __y '_Float32x':'double'
| | `-ParmVarDecl 0x9926a8 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:335:60> col:60 __z '_Float32x':'double'
| |-FunctionDecl 0x9928b0 </usr/include/math.h:283:3, line:280:66> <scratch space>:284:1 roundevenf32x '_Float32x (_Float32x) throw()' extern
| | |-ParmVarDecl 0x992818 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:340:37> col:37 __x '_Float32x':'double'
| | `-ConstAttr 0x992958 <col:44>
| |-FunctionDecl 0x992a58 </usr/include/math.h:283:3, line:281:79> <scratch space>:286:1 __roundevenf32x '_Float32x (_Float32x) throw()' extern
| | |-ParmVarDecl 0x9929c0 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:340:37> col:37 __x '_Float32x':'double'
| | `-ConstAttr 0x992b00 <col:44>
| |-FunctionDecl 0x992d60 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:287:1 fromfpf32x '__intmax_t (_Float32x, int, unsigned int) throw()' extern
| | |-ParmVarDecl 0x992b68 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:344:45> col:45 __x '_Float32x':'double'
| | |-ParmVarDecl 0x992be8 <col:50, col:54> col:54 __round 'int'
| | `-ParmVarDecl 0x992c68 <line:345:7, col:20> col:20 __width 'unsigned int'
| |-FunctionDecl 0x992fd0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:289:1 __fromfpf32x '__intmax_t (_Float32x, int, unsigned int) throw()' extern
| | |-ParmVarDecl 0x992e28 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:344:45> col:45 __x '_Float32x':'double'
| | |-ParmVarDecl 0x992ea8 <col:50, col:54> col:54 __round 'int'
| | `-ParmVarDecl 0x992f28 <line:345:7, col:20> col:20 __width 'unsigned int'
| |-FunctionDecl 0x993280 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:290:1 ufromfpf32x '__uintmax_t (_Float32x, int, unsigned int) throw()' extern
| | |-ParmVarDecl 0x993098 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:349:47> col:47 __x '_Float32x':'double'
| | |-ParmVarDecl 0x993118 <col:52, col:56> col:56 __round 'int'
| | `-ParmVarDecl 0x993198 <line:350:9, col:22> col:22 __width 'unsigned int'
| |-FunctionDecl 0x9934f0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:292:1 __ufromfpf32x '__uintmax_t (_Float32x, int, unsigned int) throw()' extern
| | |-ParmVarDecl 0x993348 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:349:47> col:47 __x '_Float32x':'double'
| | |-ParmVarDecl 0x9933c8 <col:52, col:56> col:56 __round 'int'
| | `-ParmVarDecl 0x993448 <line:350:9, col:22> col:22 __width 'unsigned int'
| |-FunctionDecl 0x993760 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:293:1 fromfpxf32x '__intmax_t (_Float32x, int, unsigned int) throw()' extern
| | |-ParmVarDecl 0x9935b8 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:355:46> col:46 __x '_Float32x':'double'
| | |-ParmVarDecl 0x993638 <col:51, col:55> col:55 __round 'int'
| | `-ParmVarDecl 0x9936b8 <line:356:8, col:21> col:21 __width 'unsigned int'
| |-FunctionDecl 0x9939d0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:295:1 __fromfpxf32x '__intmax_t (_Float32x, int, unsigned int) throw()' extern
| | |-ParmVarDecl 0x993828 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:355:46> col:46 __x '_Float32x':'double'
| | |-ParmVarDecl 0x9938a8 <col:51, col:55> col:55 __round 'int'
| | `-ParmVarDecl 0x993928 <line:356:8, col:21> col:21 __width 'unsigned int'
| |-FunctionDecl 0x993c40 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:296:1 ufromfpxf32x '__uintmax_t (_Float32x, int, unsigned int) throw()' extern
| | |-ParmVarDecl 0x993a98 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:361:48> col:48 __x '_Float32x':'double'
| | |-ParmVarDecl 0x993b18 <col:53, col:57> col:57 __round 'int'
| | `-ParmVarDecl 0x993b98 <line:362:10, col:23> col:23 __width 'unsigned int'
| |-FunctionDecl 0x993eb0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:298:1 __ufromfpxf32x '__uintmax_t (_Float32x, int, unsigned int) throw()' extern
| | |-ParmVarDecl 0x993d08 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:361:48> col:48 __x '_Float32x':'double'
| | |-ParmVarDecl 0x993d88 <col:53, col:57> col:57 __round 'int'
| | `-ParmVarDecl 0x993e08 <line:362:10, col:23> col:23 __width 'unsigned int'
| |-FunctionDecl 0x994090 </usr/include/math.h:283:3, line:280:66> <scratch space>:299:1 fmaxmagf32x '_Float32x (_Float32x, _Float32x) throw()' extern
| | |-ParmVarDecl 0x993f78 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:365:35> col:35 __x '_Float32x':'double'
| | |-ParmVarDecl 0x993ff0 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:365:50> col:50 __y '_Float32x':'double'
| | `-ConstAttr 0x994140 <col:57>
| |-FunctionDecl 0x9942c0 </usr/include/math.h:283:3, line:281:79> <scratch space>:301:1 __fmaxmagf32x '_Float32x (_Float32x, _Float32x) throw()' extern
| | |-ParmVarDecl 0x9941a8 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:365:35> col:35 __x '_Float32x':'double'
| | |-ParmVarDecl 0x994220 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:365:50> col:50 __y '_Float32x':'double'
| | `-ConstAttr 0x994370 <col:57>
| |-FunctionDecl 0x9944f0 </usr/include/math.h:283:3, line:280:66> <scratch space>:302:1 fminmagf32x '_Float32x (_Float32x, _Float32x) throw()' extern
| | |-ParmVarDecl 0x9943d8 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:368:35> col:35 __x '_Float32x':'double'
| | |-ParmVarDecl 0x994450 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:368:50> col:50 __y '_Float32x':'double'
| | `-ConstAttr 0x9945a0 <col:57>
| |-FunctionDecl 0x994720 </usr/include/math.h:283:3, line:281:79> <scratch space>:304:1 __fminmagf32x '_Float32x (_Float32x, _Float32x) throw()' extern
| | |-ParmVarDecl 0x994608 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:368:35> col:35 __x '_Float32x':'double'
| | |-ParmVarDecl 0x994680 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:368:50> col:50 __y '_Float32x':'double'
| | `-ConstAttr 0x9947d0 <col:57>
| |-FunctionDecl 0x9949b8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:305:1 canonicalizef32x 'int (_Float32x *, const _Float32x *) throw()' extern
| | |-ParmVarDecl 0x994838 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:371:47> col:47 __cx '_Float32x *'
| | `-ParmVarDecl 0x9948d8 <col:53, col:70> col:70 __x 'const _Float32x *'
| |-FunctionDecl 0x994bd8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:226:54> <scratch space>:307:1 totalorderf32x 'int (const _Float32x *, const _Float32x *) throw()' extern
| | |-ParmVarDecl 0x994a78 </usr/include/x86_64-linux-gnu/bits/mathcalls.h:376:34, col:51> col:51 __x 'const _Float32x *'
| | |-ParmVarDecl 0x994af0 <line:377:6, col:23> col:23 __y 'const _Float32x *'
| | `-PureAttr 0x994c88 </usr/include/x86_64-linux-gnu/sys/cdefs.h:226:45>
| |-FunctionDecl 0x994e50 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:226:54> <scratch space>:308:1 totalordermagf32x 'int (const _Float32x *, const _Float32x *) throw()' extern
| | |-ParmVarDecl 0x994d30 </usr/include/x86_64-linux-gnu/bits/mathcalls.h:381:37, col:54> col:54 __x 'const _Float32x *'
| | |-ParmVarDecl 0x994da8 <line:382:9, col:26> col:26 __y 'const _Float32x *'
| | `-PureAttr 0x994f00 </usr/include/x86_64-linux-gnu/sys/cdefs.h:226:45>
| |-FunctionDecl 0x995030 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:309:1 getpayloadf32x '_Float32x (const _Float32x *) throw()' extern
| | `-ParmVarDecl 0x994f68 </usr/include/x86_64-linux-gnu/bits/mathcalls.h:386:27, col:44> col:44 __x 'const _Float32x *'
| |-FunctionDecl 0x995180 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:311:1 __getpayloadf32x '_Float32x (const _Float32x *) throw()' extern
| | `-ParmVarDecl 0x9950e8 </usr/include/x86_64-linux-gnu/bits/mathcalls.h:386:27, col:44> col:44 __x 'const _Float32x *'
| |-FunctionDecl 0x995398 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:312:1 setpayloadf32x 'int (_Float32x *, _Float32x) throw()' extern
| | |-ParmVarDecl 0x995238 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:389:45> col:45 __x '_Float32x *'
| | `-ParmVarDecl 0x9952b0 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:389:60> col:60 __payload '_Float32x':'double'
| |-FunctionDecl 0x995578 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:313:1 setpayloadsigf32x 'int (_Float32x *, _Float32x) throw()' extern
| | |-ParmVarDecl 0x995458 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:392:48> col:48 __x '_Float32x *'
| | `-ParmVarDecl 0x9954d0 </usr/include/math.h:432:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:392:63> col:63 __payload '_Float32x':'double'
| |-FunctionDecl 0x995730 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:315:1 acosf64x '_Float64x (_Float64x) throw()' extern
| | `-ParmVarDecl 0x995660 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:53:31> col:31 __x '_Float64x':'long double'
| |-FunctionDecl 0x995880 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:317:1 __acosf64x '_Float64x (_Float64x) throw()' extern
| | `-ParmVarDecl 0x9957e8 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:53:31> col:31 __x '_Float64x':'long double'
| |-FunctionDecl 0x9959d0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:318:1 asinf64x '_Float64x (_Float64x) throw()' extern
| | `-ParmVarDecl 0x995938 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:55:31> col:31 __x '_Float64x':'long double'
| |-FunctionDecl 0x995b20 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:320:1 __asinf64x '_Float64x (_Float64x) throw()' extern
| | `-ParmVarDecl 0x995a88 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:55:31> col:31 __x '_Float64x':'long double'
| |-FunctionDecl 0x995c70 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:321:1 atanf64x '_Float64x (_Float64x) throw()' extern
| | `-ParmVarDecl 0x995bd8 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:57:31> col:31 __x '_Float64x':'long double'
| |-FunctionDecl 0x995dc0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:323:1 __atanf64x '_Float64x (_Float64x) throw()' extern
| | `-ParmVarDecl 0x995d28 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:57:31> col:31 __x '_Float64x':'long double'
| |-FunctionDecl 0x995fd0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:324:1 atan2f64x '_Float64x (_Float64x, _Float64x) throw()' extern
| | |-ParmVarDecl 0x995e78 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:59:32> col:32 __y '_Float64x':'long double'
| | `-ParmVarDecl 0x995ef0 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:59:47> col:47 __x '_Float64x':'long double'
| |-FunctionDecl 0x9961a8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:326:1 __atan2f64x '_Float64x (_Float64x, _Float64x) throw()' extern
| | |-ParmVarDecl 0x996090 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:59:32> col:32 __y '_Float64x':'long double'
| | `-ParmVarDecl 0x996108 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:59:47> col:47 __x '_Float64x':'long double'
| |-FunctionDecl 0x996300 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:329:1 cosf64x '_Float64x (_Float64x) throw()' extern
| | `-ParmVarDecl 0x996268 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:62:34> col:34 __x '_Float64x':'long double'
| |-FunctionDecl 0x996450 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:331:1 __cosf64x '_Float64x (_Float64x) throw()' extern
| | `-ParmVarDecl 0x9963b8 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:62:34> col:34 __x '_Float64x':'long double'
| |-FunctionDecl 0x9965a0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:334:1 sinf64x '_Float64x (_Float64x) throw()' extern
| | `-ParmVarDecl 0x996508 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:64:34> col:34 __x '_Float64x':'long double'
| |-FunctionDecl 0x9966f0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:336:1 __sinf64x '_Float64x (_Float64x) throw()' extern
| | `-ParmVarDecl 0x996658 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:64:34> col:34 __x '_Float64x':'long double'
| |-FunctionDecl 0x996840 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:337:1 tanf64x '_Float64x (_Float64x) throw()' extern
| | `-ParmVarDecl 0x9967a8 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:66:30> col:30 __x '_Float64x':'long double'
| |-FunctionDecl 0x996990 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:339:1 __tanf64x '_Float64x (_Float64x) throw()' extern
| | `-ParmVarDecl 0x9968f8 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:66:30> col:30 __x '_Float64x':'long double'
| |-FunctionDecl 0x996ae0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:2:1 coshf64x '_Float64x (_Float64x) throw()' extern
| | `-ParmVarDecl 0x996a48 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:71:31> col:31 __x '_Float64x':'long double'
| |-FunctionDecl 0x996c30 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:4:1 __coshf64x '_Float64x (_Float64x) throw()' extern
| | `-ParmVarDecl 0x996b98 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:71:31> col:31 __x '_Float64x':'long double'
| |-FunctionDecl 0x997df8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:5:1 sinhf64x '_Float64x (_Float64x) throw()' extern
| | `-ParmVarDecl 0x997d60 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:73:31> col:31 __x '_Float64x':'long double'
| |-FunctionDecl 0x997f48 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:7:1 __sinhf64x '_Float64x (_Float64x) throw()' extern
| | `-ParmVarDecl 0x997eb0 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:73:31> col:31 __x '_Float64x':'long double'
| |-FunctionDecl 0x998098 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:8:1 tanhf64x '_Float64x (_Float64x) throw()' extern
| | `-ParmVarDecl 0x998000 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:75:31> col:31 __x '_Float64x':'long double'
| |-FunctionDecl 0x9981e8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:10:1 __tanhf64x '_Float64x (_Float64x) throw()' extern
| | `-ParmVarDecl 0x998150 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:75:31> col:31 __x '_Float64x':'long double'
| |-FunctionDecl 0x9984b0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:13:1 sincosf64x 'void (_Float64x, _Float64x *, _Float64x *) throw()' extern
| | |-ParmVarDecl 0x9982a0 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:80:14> col:14 __x '_Float64x':'long double'
| | |-ParmVarDecl 0x998348 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:80:30> col:30 __sinx '_Float64x *'
| | `-ParmVarDecl 0x9983c0 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:80:49> col:49 __cosx '_Float64x *'
| |-FunctionDecl 0x998710 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:15:1 __sincosf64x 'void (_Float64x, _Float64x *, _Float64x *) throw()' extern
| | |-ParmVarDecl 0x998578 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:80:14> col:14 __x '_Float64x':'long double'
| | |-ParmVarDecl 0x9985f0 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:80:30> col:30 __sinx '_Float64x *'
| | `-ParmVarDecl 0x998668 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:80:49> col:49 __cosx '_Float64x *'
| |-FunctionDecl 0x998870 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:16:1 acoshf64x '_Float64x (_Float64x) throw()' extern
| | `-ParmVarDecl 0x9987d8 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:85:32> col:32 __x '_Float64x':'long double'
| |-FunctionDecl 0x9989c0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:18:1 __acoshf64x '_Float64x (_Float64x) throw()' extern
| | `-ParmVarDecl 0x998928 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:85:32> col:32 __x '_Float64x':'long double'
| |-FunctionDecl 0x998b10 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:19:1 asinhf64x '_Float64x (_Float64x) throw()' extern
| | `-ParmVarDecl 0x998a78 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:87:32> col:32 __x '_Float64x':'long double'
| |-FunctionDecl 0x998c60 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:21:1 __asinhf64x '_Float64x (_Float64x) throw()' extern
| | `-ParmVarDecl 0x998bc8 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:87:32> col:32 __x '_Float64x':'long double'
| |-FunctionDecl 0x998db0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:22:1 atanhf64x '_Float64x (_Float64x) throw()' extern
| | `-ParmVarDecl 0x998d18 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:89:32> col:32 __x '_Float64x':'long double'
| |-FunctionDecl 0x998f00 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:24:1 __atanhf64x '_Float64x (_Float64x) throw()' extern
| | `-ParmVarDecl 0x998e68 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:89:32> col:32 __x '_Float64x':'long double'
| |-FunctionDecl 0x999050 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:27:1 expf64x '_Float64x (_Float64x) throw()' extern
| | `-ParmVarDecl 0x998fb8 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:95:34> col:34 __x '_Float64x':'long double'
| |-FunctionDecl 0x9991a0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:29:1 __expf64x '_Float64x (_Float64x) throw()' extern
| | `-ParmVarDecl 0x999108 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:95:34> col:34 __x '_Float64x':'long double'
| |-FunctionDecl 0x9993b0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:30:1 frexpf64x '_Float64x (_Float64x, int *) throw()' extern
| | |-ParmVarDecl 0x999258 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:98:32> col:32 __x '_Float64x':'long double'
| | `-ParmVarDecl 0x9992d8 <col:37, col:42> col:42 __exponent 'int *'
| |-FunctionDecl 0x999590 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:32:1 __frexpf64x '_Float64x (_Float64x, int *) throw()' extern
| | |-ParmVarDecl 0x999470 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:98:32> col:32 __x '_Float64x':'long double'
| | `-ParmVarDecl 0x9994f0 <col:37, col:42> col:42 __exponent 'int *'
| |-FunctionDecl 0x9997b0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:33:1 ldexpf64x '_Float64x (_Float64x, int) throw()' extern
| | |-ParmVarDecl 0x999650 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:101:32> col:32 __x '_Float64x':'long double'
| | `-ParmVarDecl 0x9996d0 <col:37, col:41> col:41 __exponent 'int'
| |-FunctionDecl 0x999990 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:35:1 __ldexpf64x '_Float64x (_Float64x, int) throw()' extern
| | |-ParmVarDecl 0x999870 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:101:32> col:32 __x '_Float64x':'long double'
| | `-ParmVarDecl 0x9998f0 <col:37, col:41> col:41 __exponent 'int'
| |-FunctionDecl 0x999ae8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:38:1 logf64x '_Float64x (_Float64x) throw()' extern
| | `-ParmVarDecl 0x999a50 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:104:34> col:34 __x '_Float64x':'long double'
| |-FunctionDecl 0x999c38 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:40:1 __logf64x '_Float64x (_Float64x) throw()' extern
| | `-ParmVarDecl 0x999ba0 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:104:34> col:34 __x '_Float64x':'long double'
| |-FunctionDecl 0x99b010 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:41:1 log10f64x '_Float64x (_Float64x) throw()' extern
| | `-ParmVarDecl 0x999cf0 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:107:32> col:32 __x '_Float64x':'long double'
| |-FunctionDecl 0x99b160 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:43:1 __log10f64x '_Float64x (_Float64x) throw()' extern
| | `-ParmVarDecl 0x99b0c8 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:107:32> col:32 __x '_Float64x':'long double'
| |-FunctionDecl 0x99b370 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:44:1 modff64x '_Float64x (_Float64x, _Float64x *) throw()' extern
| | |-ParmVarDecl 0x99b218 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:110:31> col:31 __x '_Float64x':'long double'
| | `-ParmVarDecl 0x99b290 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:110:47> col:47 __iptr '_Float64x *'
| |-FunctionDecl 0x99b568 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> <scratch space>:46:1 __modff64x '_Float64x (_Float64x, _Float64x *) throw()' extern
| | |-ParmVarDecl 0x99b430 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:110:31> col:31 __x '_Float64x':'long double'
| | |-ParmVarDecl 0x99b4a8 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:110:47> col:47 __iptr '_Float64x *'
| | `-NonNullAttr 0x99b618 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:110:69> 2
| |-FunctionDecl 0x99b730 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:48:1 exp10f64x '_Float64x (_Float64x) throw()' extern
| | `-ParmVarDecl 0x99b698 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:114:32> col:32 __x '_Float64x':'long double'
| |-FunctionDecl 0x99b880 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:50:1 __exp10f64x '_Float64x (_Float64x) throw()' extern
| | `-ParmVarDecl 0x99b7e8 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:114:32> col:32 __x '_Float64x':'long double'
| |-FunctionDecl 0x99b9d0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:51:1 expm1f64x '_Float64x (_Float64x) throw()' extern
| | `-ParmVarDecl 0x99b938 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:119:32> col:32 __x '_Float64x':'long double'
| |-FunctionDecl 0x99bb20 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:53:1 __expm1f64x '_Float64x (_Float64x) throw()' extern
| | `-ParmVarDecl 0x99ba88 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:119:32> col:32 __x '_Float64x':'long double'
| |-FunctionDecl 0x99bc70 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:54:1 log1pf64x '_Float64x (_Float64x) throw()' extern
| | `-ParmVarDecl 0x99bbd8 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:122:32> col:32 __x '_Float64x':'long double'
| |-FunctionDecl 0x99bdc0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:56:1 __log1pf64x '_Float64x (_Float64x) throw()' extern
| | `-ParmVarDecl 0x99bd28 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:122:32> col:32 __x '_Float64x':'long double'
| |-FunctionDecl 0x99bf10 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:57:1 logbf64x '_Float64x (_Float64x) throw()' extern
| | `-ParmVarDecl 0x99be78 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:125:31> col:31 __x '_Float64x':'long double'
| |-FunctionDecl 0x99c060 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:59:1 __logbf64x '_Float64x (_Float64x) throw()' extern
| | `-ParmVarDecl 0x99bfc8 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:125:31> col:31 __x '_Float64x':'long double'
| |-FunctionDecl 0x99c1b0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:60:1 exp2f64x '_Float64x (_Float64x) throw()' extern
| | `-ParmVarDecl 0x99c118 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:130:31> col:31 __x '_Float64x':'long double'
| |-FunctionDecl 0x99c300 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:62:1 __exp2f64x '_Float64x (_Float64x) throw()' extern
| | `-ParmVarDecl 0x99c268 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:130:31> col:31 __x '_Float64x':'long double'
| |-FunctionDecl 0x99c450 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:63:1 log2f64x '_Float64x (_Float64x) throw()' extern
| | `-ParmVarDecl 0x99c3b8 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:133:31> col:31 __x '_Float64x':'long double'
| |-FunctionDecl 0x99c5a0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:65:1 __log2f64x '_Float64x (_Float64x) throw()' extern
| | `-ParmVarDecl 0x99c508 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:133:31> col:31 __x '_Float64x':'long double'
| |-FunctionDecl 0x99c770 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:68:1 powf64x '_Float64x (_Float64x, _Float64x) throw()' extern
| | |-ParmVarDecl 0x99c658 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:140:34> col:34 __x '_Float64x':'long double'
| | `-ParmVarDecl 0x99c6d0 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:140:49> col:49 __y '_Float64x':'long double'
| |-FunctionDecl 0x99c948 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:70:1 __powf64x '_Float64x (_Float64x, _Float64x) throw()' extern
| | |-ParmVarDecl 0x99c830 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:140:34> col:34 __x '_Float64x':'long double'
| | `-ParmVarDecl 0x99c8a8 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:140:49> col:49 __y '_Float64x':'long double'
| |-FunctionDecl 0x99caa0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:71:1 sqrtf64x '_Float64x (_Float64x) throw()' extern
| | `-ParmVarDecl 0x99ca08 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:143:31> col:31 __x '_Float64x':'long double'
| |-FunctionDecl 0x99cbf0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:73:1 __sqrtf64x '_Float64x (_Float64x) throw()' extern
| | `-ParmVarDecl 0x99cb58 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:143:31> col:31 __x '_Float64x':'long double'
| |-FunctionDecl 0x99cdc0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:74:1 hypotf64x '_Float64x (_Float64x, _Float64x) throw()' extern
| | |-ParmVarDecl 0x99cca8 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:147:32> col:32 __x '_Float64x':'long double'
| | `-ParmVarDecl 0x99cd20 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:147:47> col:47 __y '_Float64x':'long double'
| |-FunctionDecl 0x99cff0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:76:1 __hypotf64x '_Float64x (_Float64x, _Float64x) throw()' extern
| | |-ParmVarDecl 0x99ce80 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:147:32> col:32 __x '_Float64x':'long double'
| | `-ParmVarDecl 0x99cef8 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:147:47> col:47 __y '_Float64x':'long double'
| |-FunctionDecl 0x99d148 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:77:1 cbrtf64x '_Float64x (_Float64x) throw()' extern
| | `-ParmVarDecl 0x99d0b0 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:152:31> col:31 __x '_Float64x':'long double'
| |-FunctionDecl 0x99d298 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:79:1 __cbrtf64x '_Float64x (_Float64x) throw()' extern
| | `-ParmVarDecl 0x99d200 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:152:31> col:31 __x '_Float64x':'long double'
| |-FunctionDecl 0x99d3e8 </usr/include/math.h:283:3, line:280:66> <scratch space>:80:1 ceilf64x '_Float64x (_Float64x) throw()' extern
| | |-ParmVarDecl 0x99d350 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:159:32> col:32 __x '_Float64x':'long double'
| | `-ConstAttr 0x99d490 <col:39>
| |-FunctionDecl 0x99d590 </usr/include/math.h:283:3, line:281:79> <scratch space>:82:1 __ceilf64x '_Float64x (_Float64x) throw()' extern
| | |-ParmVarDecl 0x99d4f8 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:159:32> col:32 __x '_Float64x':'long double'
| | `-ConstAttr 0x99d638 <col:39>
| |-FunctionDecl 0x99d738 </usr/include/math.h:283:3, line:280:66> <scratch space>:83:1 fabsf64x '_Float64x (_Float64x) throw()' extern
| | |-ParmVarDecl 0x99d6a0 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:162:32> col:32 __x '_Float64x':'long double'
| | `-ConstAttr 0x99d7e0 <col:39>
| |-FunctionDecl 0x99d8e0 </usr/include/math.h:283:3, line:281:79> <scratch space>:85:1 __fabsf64x '_Float64x (_Float64x) throw()' extern
| | |-ParmVarDecl 0x99d848 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:162:32> col:32 __x '_Float64x':'long double'
| | `-ConstAttr 0x99d988 <col:39>
| |-FunctionDecl 0x99da88 </usr/include/math.h:283:3, line:280:66> <scratch space>:86:1 floorf64x '_Float64x (_Float64x) throw()' extern
| | |-ParmVarDecl 0x99d9f0 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:165:33> col:33 __x '_Float64x':'long double'
| | `-ConstAttr 0x99db30 <col:40>
| |-FunctionDecl 0x99dc30 </usr/include/math.h:283:3, line:281:79> <scratch space>:88:1 __floorf64x '_Float64x (_Float64x) throw()' extern
| | |-ParmVarDecl 0x99db98 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:165:33> col:33 __x '_Float64x':'long double'
| | `-ConstAttr 0x99dcd8 <col:40>
| |-FunctionDecl 0x99de58 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:89:1 fmodf64x '_Float64x (_Float64x, _Float64x) throw()' extern
| | |-ParmVarDecl 0x99dd40 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:168:31> col:31 __x '_Float64x':'long double'
| | `-ParmVarDecl 0x99ddb8 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:168:46> col:46 __y '_Float64x':'long double'
| |-FunctionDecl 0x99e030 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:91:1 __fmodf64x '_Float64x (_Float64x, _Float64x) throw()' extern
| | |-ParmVarDecl 0x99df18 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:168:31> col:31 __x '_Float64x':'long double'
| | `-ParmVarDecl 0x99df90 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:168:46> col:46 __y '_Float64x':'long double'
| |-FunctionDecl 0x99e208 </usr/include/math.h:283:3, line:280:66> <scratch space>:92:1 copysignf64x '_Float64x (_Float64x, _Float64x) throw()' extern
| | |-ParmVarDecl 0x99e0f0 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:196:36> col:36 __x '_Float64x':'long double'
| | |-ParmVarDecl 0x99e168 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:196:51> col:51 __y '_Float64x':'long double'
| | `-ConstAttr 0x99e2b8 <col:58>
| |-FunctionDecl 0x99e438 </usr/include/math.h:283:3, line:281:79> <scratch space>:94:1 __copysignf64x '_Float64x (_Float64x, _Float64x) throw()' extern
| | |-ParmVarDecl 0x99e320 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:196:36> col:36 __x '_Float64x':'long double'
| | |-ParmVarDecl 0x99e398 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:196:51> col:51 __y '_Float64x':'long double'
| | `-ConstAttr 0x99e4e8 <col:58>
| |-FunctionDecl 0x99e620 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:95:1 nanf64x '_Float64x (const char *) throw()' extern
| | `-ParmVarDecl 0x99e558 </usr/include/x86_64-linux-gnu/bits/mathcalls.h:201:20, col:32> col:32 __tagb 'const char *'
| |-FunctionDecl 0x99e778 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:97:1 __nanf64x '_Float64x (const char *) throw()' extern
| | `-ParmVarDecl 0x99e6e0 </usr/include/x86_64-linux-gnu/bits/mathcalls.h:201:20, col:32> col:32 __tagb 'const char *'
| |-FunctionDecl 0x99e8c8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:98:1 j0f64x '_Float64x (_Float64x) throw()' extern
| | `-ParmVarDecl 0x99e830 </usr/include/math.h:449:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:217:28 '_Float64x':'long double'
| |-FunctionDecl 0x99ea18 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:100:1 __j0f64x '_Float64x (_Float64x) throw()' extern
| | `-ParmVarDecl 0x99e980 </usr/include/math.h:449:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:217:28 '_Float64x':'long double'
| |-FunctionDecl 0x99eb68 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:101:1 j1f64x '_Float64x (_Float64x) throw()' extern
| | `-ParmVarDecl 0x99ead0 </usr/include/math.h:449:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:218:28 '_Float64x':'long double'
| |-FunctionDecl 0x99ecb8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:103:1 __j1f64x '_Float64x (_Float64x) throw()' extern
| | `-ParmVarDecl 0x99ec20 </usr/include/math.h:449:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:218:28 '_Float64x':'long double'
| |-FunctionDecl 0x99eed0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:104:1 jnf64x '_Float64x (int, _Float64x) throw()' extern
| | |-ParmVarDecl 0x99ed78 </usr/include/x86_64-linux-gnu/bits/mathcalls.h:219:19> col:22 'int'
| | `-ParmVarDecl 0x99edf0 </usr/include/math.h:449:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:219:33 '_Float64x':'long double'
| |-FunctionDecl 0x99f118 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:106:1 __jnf64x '_Float64x (int, _Float64x) throw()' extern
| | |-ParmVarDecl 0x99f000 </usr/include/x86_64-linux-gnu/bits/mathcalls.h:219:19> col:22 'int'
| | `-ParmVarDecl 0x99f078 </usr/include/math.h:449:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:219:33 '_Float64x':'long double'
| |-FunctionDecl 0x99f270 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:107:1 y0f64x '_Float64x (_Float64x) throw()' extern
| | `-ParmVarDecl 0x99f1d8 </usr/include/math.h:449:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:220:28 '_Float64x':'long double'
| |-FunctionDecl 0x99f3c0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:109:1 __y0f64x '_Float64x (_Float64x) throw()' extern
| | `-ParmVarDecl 0x99f328 </usr/include/math.h:449:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:220:28 '_Float64x':'long double'
| |-FunctionDecl 0x99f510 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:110:1 y1f64x '_Float64x (_Float64x) throw()' extern
| | `-ParmVarDecl 0x99f478 </usr/include/math.h:449:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:221:28 '_Float64x':'long double'
| |-FunctionDecl 0x99f660 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:112:1 __y1f64x '_Float64x (_Float64x) throw()' extern
| | `-ParmVarDecl 0x99f5c8 </usr/include/math.h:449:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:221:28 '_Float64x':'long double'
| |-FunctionDecl 0x99f838 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:113:1 ynf64x '_Float64x (int, _Float64x) throw()' extern
| | |-ParmVarDecl 0x99f720 </usr/include/x86_64-linux-gnu/bits/mathcalls.h:222:19> col:22 'int'
| | `-ParmVarDecl 0x99f798 </usr/include/math.h:449:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:222:33 '_Float64x':'long double'
| |-FunctionDecl 0x99fa18 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:115:1 __ynf64x '_Float64x (int, _Float64x) throw()' extern
| | |-ParmVarDecl 0x99f900 </usr/include/x86_64-linux-gnu/bits/mathcalls.h:222:19> col:22 'int'
| | `-ParmVarDecl 0x99f978 </usr/include/math.h:449:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:222:33 '_Float64x':'long double'
| |-FunctionDecl 0x99fb70 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:116:1 erff64x '_Float64x (_Float64x) throw()' extern
| | `-ParmVarDecl 0x99fad8 </usr/include/math.h:449:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:228:29 '_Float64x':'long double'
| |-FunctionDecl 0x99fcc0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:118:1 __erff64x '_Float64x (_Float64x) throw()' extern
| | `-ParmVarDecl 0x99fc28 </usr/include/math.h:449:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:228:29 '_Float64x':'long double'
| |-FunctionDecl 0x99fe10 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:119:1 erfcf64x '_Float64x (_Float64x) throw()' extern
| | `-ParmVarDecl 0x99fd78 </usr/include/math.h:449:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:229:30 '_Float64x':'long double'
| |-FunctionDecl 0x99ff60 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:121:1 __erfcf64x '_Float64x (_Float64x) throw()' extern
| | `-ParmVarDecl 0x99fec8 </usr/include/math.h:449:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:229:30 '_Float64x':'long double'
| |-FunctionDecl 0x9a00b0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:122:1 lgammaf64x '_Float64x (_Float64x) throw()' extern
| | `-ParmVarDecl 0x9a0018 </usr/include/math.h:449:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:230:32 '_Float64x':'long double'
| |-FunctionDecl 0x9a0200 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:124:1 __lgammaf64x '_Float64x (_Float64x) throw()' extern
| | `-ParmVarDecl 0x9a0168 </usr/include/math.h:449:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:230:32 '_Float64x':'long double'
| |-FunctionDecl 0x9a0350 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:125:1 tgammaf64x '_Float64x (_Float64x) throw()' extern
| | `-ParmVarDecl 0x9a02b8 </usr/include/math.h:449:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:235:32 '_Float64x':'long double'
| |-FunctionDecl 0x9a04a0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:127:1 __tgammaf64x '_Float64x (_Float64x) throw()' extern
| | `-ParmVarDecl 0x9a0408 </usr/include/math.h:449:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:235:32 '_Float64x':'long double'
| |-FunctionDecl 0x9a0678 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:129:1 lgammaf64x_r '_Float64x (_Float64x, int *) throw()' extern
| | |-ParmVarDecl 0x9a0558 </usr/include/math.h:449:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:249:34 '_Float64x':'long double'
| | `-ParmVarDecl 0x9a05d8 <col:36, col:41> col:41 __signgamp 'int *'
| |-FunctionDecl 0x9a0858 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:132:1 __lgammaf64x_r '_Float64x (_Float64x, int *) throw()' extern
| | |-ParmVarDecl 0x9a0738 </usr/include/math.h:449:21> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:249:34 '_Float64x':'long double'
| | `-ParmVarDecl 0x9a07b8 <col:36, col:41> col:41 __signgamp 'int *'
| |-FunctionDecl 0x9a09b0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:133:1 rintf64x '_Float64x (_Float64x) throw()' extern
| | `-ParmVarDecl 0x9a0918 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:256:31> col:31 __x '_Float64x':'long double'
| |-FunctionDecl 0x9a0b00 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:135:1 __rintf64x '_Float64x (_Float64x) throw()' extern
| | `-ParmVarDecl 0x9a0a68 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:256:31> col:31 __x '_Float64x':'long double'
| |-FunctionDecl 0x9a0cd0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:136:1 nextafterf64x '_Float64x (_Float64x, _Float64x) throw()' extern
| | |-ParmVarDecl 0x9a0bb8 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:259:36> col:36 __x '_Float64x':'long double'
| | `-ParmVarDecl 0x9a0c30 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:259:51> col:51 __y '_Float64x':'long double'
| |-FunctionDecl 0x9a0ea8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:138:1 __nextafterf64x '_Float64x (_Float64x, _Float64x) throw()' extern
| | |-ParmVarDecl 0x9a0d90 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:259:36> col:36 __x '_Float64x':'long double'
| | `-ParmVarDecl 0x9a0e08 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:259:51> col:51 __y '_Float64x':'long double'
| |-FunctionDecl 0x9a1010 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:140:1 nextdownf64x '_Float64x (_Float64x) throw()' extern
| | `-ParmVarDecl 0x9a0f68 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:266:35> col:35 __x '_Float64x':'long double'
| |-FunctionDecl 0x9a1160 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:142:1 __nextdownf64x '_Float64x (_Float64x) throw()' extern
| | `-ParmVarDecl 0x9a10c8 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:266:35> col:35 __x '_Float64x':'long double'
| |-FunctionDecl 0x9a12b0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:143:1 nextupf64x '_Float64x (_Float64x) throw()' extern
| | `-ParmVarDecl 0x9a1218 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:268:33> col:33 __x '_Float64x':'long double'
| |-FunctionDecl 0x9a1400 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:145:1 __nextupf64x '_Float64x (_Float64x) throw()' extern
| | `-ParmVarDecl 0x9a1368 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:268:33> col:33 __x '_Float64x':'long double'
| |-FunctionDecl 0x9a15d0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:146:1 remainderf64x '_Float64x (_Float64x, _Float64x) throw()' extern
| | |-ParmVarDecl 0x9a14b8 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:36> col:36 __x '_Float64x':'long double'
| | `-ParmVarDecl 0x9a1530 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:51> col:51 __y '_Float64x':'long double'
| |-FunctionDecl 0x9a17a8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:148:1 __remainderf64x '_Float64x (_Float64x, _Float64x) throw()' extern
| | |-ParmVarDecl 0x9a1690 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:36> col:36 __x '_Float64x':'long double'
| | `-ParmVarDecl 0x9a1708 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:51> col:51 __y '_Float64x':'long double'
| |-FunctionDecl 0x9a1988 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:149:1 scalbnf64x '_Float64x (_Float64x, int) throw()' extern
| | |-ParmVarDecl 0x9a1868 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:276:33> col:33 __x '_Float64x':'long double'
| | `-ParmVarDecl 0x9a18e8 <col:38, col:42> col:42 __n 'int'
| |-FunctionDecl 0x9a1b68 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:151:1 __scalbnf64x '_Float64x (_Float64x, int) throw()' extern
| | |-ParmVarDecl 0x9a1a48 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:276:33> col:33 __x '_Float64x':'long double'
| | `-ParmVarDecl 0x9a1ac8 <col:38, col:42> col:42 __n 'int'
| |-FunctionDecl 0x9a1cf8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:152:1 ilogbf64x 'int (_Float64x) throw()' extern
| | `-ParmVarDecl 0x9a1c28 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:280:36> col:36 __x '_Float64x':'long double'
| |-FunctionDecl 0x9a1e50 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:154:1 __ilogbf64x 'int (_Float64x) throw()' extern
| | `-ParmVarDecl 0x9a1db0 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:280:36> col:36 __x '_Float64x':'long double'
| |-FunctionDecl 0x9a1fd8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:156:1 llogbf64x 'long (_Float64x) throw()' extern
| | `-ParmVarDecl 0x9a1f08 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:285:42> col:42 __x '_Float64x':'long double'
| |-FunctionDecl 0x9a2130 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:158:1 __llogbf64x 'long (_Float64x) throw()' extern
| | `-ParmVarDecl 0x9a2090 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:285:42> col:42 __x '_Float64x':'long double'
| |-FunctionDecl 0x9a2340 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:159:1 scalblnf64x '_Float64x (_Float64x, long) throw()' extern
| | |-ParmVarDecl 0x9a21e8 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:290:34> col:34 __x '_Float64x':'long double'
| | `-ParmVarDecl 0x9a2268 <col:39, col:48> col:48 __n 'long'
| |-FunctionDecl 0x9a2520 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:161:1 __scalblnf64x '_Float64x (_Float64x, long) throw()' extern
| | |-ParmVarDecl 0x9a2400 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:290:34> col:34 __x '_Float64x':'long double'
| | `-ParmVarDecl 0x9a2480 <col:39, col:48> col:48 __n 'long'
| |-FunctionDecl 0x9a2678 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:162:1 nearbyintf64x '_Float64x (_Float64x) throw()' extern
| | `-ParmVarDecl 0x9a25e0 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:294:36> col:36 __x '_Float64x':'long double'
| |-FunctionDecl 0x9a27c8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:164:1 __nearbyintf64x '_Float64x (_Float64x) throw()' extern
| | `-ParmVarDecl 0x9a2730 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:294:36> col:36 __x '_Float64x':'long double'
| |-FunctionDecl 0x9a2918 </usr/include/math.h:283:3, line:280:66> <scratch space>:165:1 roundf64x '_Float64x (_Float64x) throw()' extern
| | |-ParmVarDecl 0x9a2880 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:33> col:33 __x '_Float64x':'long double'
| | `-ConstAttr 0x9a29c0 <col:40>
| |-FunctionDecl 0x9a2ac0 </usr/include/math.h:283:3, line:281:79> <scratch space>:167:1 __roundf64x '_Float64x (_Float64x) throw()' extern
| | |-ParmVarDecl 0x9a2a28 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:33> col:33 __x '_Float64x':'long double'
| | `-ConstAttr 0x9a2b68 <col:40>
| |-FunctionDecl 0x9a2c68 </usr/include/math.h:283:3, line:280:66> <scratch space>:168:1 truncf64x '_Float64x (_Float64x) throw()' extern
| | |-ParmVarDecl 0x9a2bd0 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:302:33> col:33 __x '_Float64x':'long double'
| | `-ConstAttr 0x9a2d10 <col:40>
| |-FunctionDecl 0x9a2e10 </usr/include/math.h:283:3, line:281:79> <scratch space>:170:1 __truncf64x '_Float64x (_Float64x) throw()' extern
| | |-ParmVarDecl 0x9a2d78 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:302:33> col:33 __x '_Float64x':'long double'
| | `-ConstAttr 0x9a2eb8 <col:40>
| |-FunctionDecl 0x9a4130 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:171:1 remquof64x '_Float64x (_Float64x, _Float64x, int *) throw()' extern
| | |-ParmVarDecl 0x9a2f20 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:307:33> col:33 __x '_Float64x':'long double'
| | |-ParmVarDecl 0x9a2f98 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:307:48> col:48 __y '_Float64x':'long double'
| | `-ParmVarDecl 0x9a4048 <col:53, col:58> col:58 __quo 'int *'
| |-FunctionDecl 0x9a4398 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:173:1 __remquof64x '_Float64x (_Float64x, _Float64x, int *) throw()' extern
| | |-ParmVarDecl 0x9a41f8 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:307:33> col:33 __x '_Float64x':'long double'
| | |-ParmVarDecl 0x9a4270 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:307:48> col:48 __y '_Float64x':'long double'
| | `-ParmVarDecl 0x9a42f0 <col:53, col:58> col:58 __quo 'int *'
| |-FunctionDecl 0x9a4500 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:174:1 lrintf64x 'long (_Float64x) throw()' extern
| | `-ParmVarDecl 0x9a4460 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:314:41> col:41 __x '_Float64x':'long double'
| |-FunctionDecl 0x9a4658 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:176:1 __lrintf64x 'long (_Float64x) throw()' extern
| | `-ParmVarDecl 0x9a45b8 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:314:41> col:41 __x '_Float64x':'long double'
| |-FunctionDecl 0x9a47e8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:177:1 llrintf64x 'long long (_Float64x) throw()' extern
| | `-ParmVarDecl 0x9a4710 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:316:47> col:47 __x '_Float64x':'long double'
| |-FunctionDecl 0x9a4940 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:179:1 __llrintf64x 'long long (_Float64x) throw()' extern
| | `-ParmVarDecl 0x9a48a0 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:316:47> col:47 __x '_Float64x':'long double'
| |-FunctionDecl 0x9a4a98 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:180:1 lroundf64x 'long (_Float64x) throw()' extern
| | `-ParmVarDecl 0x9a49f8 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:320:42> col:42 __x '_Float64x':'long double'
| |-FunctionDecl 0x9a4bf0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:182:1 __lroundf64x 'long (_Float64x) throw()' extern
| | `-ParmVarDecl 0x9a4b50 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:320:42> col:42 __x '_Float64x':'long double'
| |-FunctionDecl 0x9a4d48 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:183:1 llroundf64x 'long long (_Float64x) throw()' extern
| | `-ParmVarDecl 0x9a4ca8 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:322:48> col:48 __x '_Float64x':'long double'
| |-FunctionDecl 0x9a4ea0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:185:1 __llroundf64x 'long long (_Float64x) throw()' extern
| | `-ParmVarDecl 0x9a4e00 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:322:48> col:48 __x '_Float64x':'long double'
| |-FunctionDecl 0x9a5070 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:186:1 fdimf64x '_Float64x (_Float64x, _Float64x) throw()' extern
| | |-ParmVarDecl 0x9a4f58 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:326:31> col:31 __x '_Float64x':'long double'
| | `-ParmVarDecl 0x9a4fd0 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:326:46> col:46 __y '_Float64x':'long double'
| |-FunctionDecl 0x9a5248 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:188:1 __fdimf64x '_Float64x (_Float64x, _Float64x) throw()' extern
| | |-ParmVarDecl 0x9a5130 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:326:31> col:31 __x '_Float64x':'long double'
| | `-ParmVarDecl 0x9a51a8 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:326:46> col:46 __y '_Float64x':'long double'
| |-FunctionDecl 0x9a5420 </usr/include/math.h:283:3, line:280:66> <scratch space>:189:1 fmaxf64x '_Float64x (_Float64x, _Float64x) throw()' extern
| | |-ParmVarDecl 0x9a5308 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:32> col:32 __x '_Float64x':'long double'
| | |-ParmVarDecl 0x9a5380 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:47> col:47 __y '_Float64x':'long double'
| | `-ConstAttr 0x9a54d0 <col:54>
| |-FunctionDecl 0x9a5650 </usr/include/math.h:283:3, line:281:79> <scratch space>:191:1 __fmaxf64x '_Float64x (_Float64x, _Float64x) throw()' extern
| | |-ParmVarDecl 0x9a5538 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:32> col:32 __x '_Float64x':'long double'
| | |-ParmVarDecl 0x9a55b0 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:329:47> col:47 __y '_Float64x':'long double'
| | `-ConstAttr 0x9a5700 <col:54>
| |-FunctionDecl 0x9a5880 </usr/include/math.h:283:3, line:280:66> <scratch space>:192:1 fminf64x '_Float64x (_Float64x, _Float64x) throw()' extern
| | |-ParmVarDecl 0x9a5768 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:32> col:32 __x '_Float64x':'long double'
| | |-ParmVarDecl 0x9a57e0 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:47> col:47 __y '_Float64x':'long double'
| | `-ConstAttr 0x9a5930 <col:54>
| |-FunctionDecl 0x9a5ab0 </usr/include/math.h:283:3, line:281:79> <scratch space>:194:1 __fminf64x '_Float64x (_Float64x, _Float64x) throw()' extern
| | |-ParmVarDecl 0x9a5998 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:32> col:32 __x '_Float64x':'long double'
| | |-ParmVarDecl 0x9a5a10 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:332:47> col:47 __y '_Float64x':'long double'
| | `-ConstAttr 0x9a5b60 <col:54>
| |-FunctionDecl 0x9a5da0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:195:1 fmaf64x '_Float64x (_Float64x, _Float64x, _Float64x) throw()' extern
| | |-ParmVarDecl 0x9a5bc8 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:335:30> col:30 __x '_Float64x':'long double'
| | |-ParmVarDecl 0x9a5c40 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:335:45> col:45 __y '_Float64x':'long double'
| | `-ParmVarDecl 0x9a5cb8 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:335:60> col:60 __z '_Float64x':'long double'
| |-FunctionDecl 0x9a6040 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:197:1 __fmaf64x '_Float64x (_Float64x, _Float64x, _Float64x) throw()' extern
| | |-ParmVarDecl 0x9a5e68 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:335:30> col:30 __x '_Float64x':'long double'
| | |-ParmVarDecl 0x9a5ee0 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:335:45> col:45 __y '_Float64x':'long double'
| | `-ParmVarDecl 0x9a5f58 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:335:60> col:60 __z '_Float64x':'long double'
| |-FunctionDecl 0x9a61a0 </usr/include/math.h:283:3, line:280:66> <scratch space>:199:1 roundevenf64x '_Float64x (_Float64x) throw()' extern
| | |-ParmVarDecl 0x9a6108 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:340:37> col:37 __x '_Float64x':'long double'
| | `-ConstAttr 0x9a6248 <col:44>
| |-FunctionDecl 0x9a6348 </usr/include/math.h:283:3, line:281:79> <scratch space>:201:1 __roundevenf64x '_Float64x (_Float64x) throw()' extern
| | |-ParmVarDecl 0x9a62b0 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:340:37> col:37 __x '_Float64x':'long double'
| | `-ConstAttr 0x9a63f0 <col:44>
| |-FunctionDecl 0x9a6640 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:202:1 fromfpf64x '__intmax_t (_Float64x, int, unsigned int) throw()' extern
| | |-ParmVarDecl 0x9a6458 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:344:45> col:45 __x '_Float64x':'long double'
| | |-ParmVarDecl 0x9a64d8 <col:50, col:54> col:54 __round 'int'
| | `-ParmVarDecl 0x9a6558 <line:345:7, col:20> col:20 __width 'unsigned int'
| |-FunctionDecl 0x9a68b0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:204:1 __fromfpf64x '__intmax_t (_Float64x, int, unsigned int) throw()' extern
| | |-ParmVarDecl 0x9a6708 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:344:45> col:45 __x '_Float64x':'long double'
| | |-ParmVarDecl 0x9a6788 <col:50, col:54> col:54 __round 'int'
| | `-ParmVarDecl 0x9a6808 <line:345:7, col:20> col:20 __width 'unsigned int'
| |-FunctionDecl 0x9a6b60 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:205:1 ufromfpf64x '__uintmax_t (_Float64x, int, unsigned int) throw()' extern
| | |-ParmVarDecl 0x9a6978 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:349:47> col:47 __x '_Float64x':'long double'
| | |-ParmVarDecl 0x9a69f8 <col:52, col:56> col:56 __round 'int'
| | `-ParmVarDecl 0x9a6a78 <line:350:9, col:22> col:22 __width 'unsigned int'
| |-FunctionDecl 0x9a6dd0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:207:1 __ufromfpf64x '__uintmax_t (_Float64x, int, unsigned int) throw()' extern
| | |-ParmVarDecl 0x9a6c28 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:349:47> col:47 __x '_Float64x':'long double'
| | |-ParmVarDecl 0x9a6ca8 <col:52, col:56> col:56 __round 'int'
| | `-ParmVarDecl 0x9a6d28 <line:350:9, col:22> col:22 __width 'unsigned int'
| |-FunctionDecl 0x9a7040 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:208:1 fromfpxf64x '__intmax_t (_Float64x, int, unsigned int) throw()' extern
| | |-ParmVarDecl 0x9a6e98 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:355:46> col:46 __x '_Float64x':'long double'
| | |-ParmVarDecl 0x9a6f18 <col:51, col:55> col:55 __round 'int'
| | `-ParmVarDecl 0x9a6f98 <line:356:8, col:21> col:21 __width 'unsigned int'
| |-FunctionDecl 0x9a72b0 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:210:1 __fromfpxf64x '__intmax_t (_Float64x, int, unsigned int) throw()' extern
| | |-ParmVarDecl 0x9a7108 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:355:46> col:46 __x '_Float64x':'long double'
| | |-ParmVarDecl 0x9a7188 <col:51, col:55> col:55 __round 'int'
| | `-ParmVarDecl 0x9a7208 <line:356:8, col:21> col:21 __width 'unsigned int'
| |-FunctionDecl 0x9a7520 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:211:1 ufromfpxf64x '__uintmax_t (_Float64x, int, unsigned int) throw()' extern
| | |-ParmVarDecl 0x9a7378 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:361:48> col:48 __x '_Float64x':'long double'
| | |-ParmVarDecl 0x9a73f8 <col:53, col:57> col:57 __round 'int'
| | `-ParmVarDecl 0x9a7478 <line:362:10, col:23> col:23 __width 'unsigned int'
| |-FunctionDecl 0x9a7790 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:213:1 __ufromfpxf64x '__uintmax_t (_Float64x, int, unsigned int) throw()' extern
| | |-ParmVarDecl 0x9a75e8 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:361:48> col:48 __x '_Float64x':'long double'
| | |-ParmVarDecl 0x9a7668 <col:53, col:57> col:57 __round 'int'
| | `-ParmVarDecl 0x9a76e8 <line:362:10, col:23> col:23 __width 'unsigned int'
| |-FunctionDecl 0x9a7970 </usr/include/math.h:283:3, line:280:66> <scratch space>:214:1 fmaxmagf64x '_Float64x (_Float64x, _Float64x) throw()' extern
| | |-ParmVarDecl 0x9a7858 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:365:35> col:35 __x '_Float64x':'long double'
| | |-ParmVarDecl 0x9a78d0 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:365:50> col:50 __y '_Float64x':'long double'
| | `-ConstAttr 0x9a7a20 <col:57>
| |-FunctionDecl 0x9a7ba0 </usr/include/math.h:283:3, line:281:79> <scratch space>:216:1 __fmaxmagf64x '_Float64x (_Float64x, _Float64x) throw()' extern
| | |-ParmVarDecl 0x9a7a88 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:365:35> col:35 __x '_Float64x':'long double'
| | |-ParmVarDecl 0x9a7b00 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:365:50> col:50 __y '_Float64x':'long double'
| | `-ConstAttr 0x9a7c50 <col:57>
| |-FunctionDecl 0x9a7dd0 </usr/include/math.h:283:3, line:280:66> <scratch space>:217:1 fminmagf64x '_Float64x (_Float64x, _Float64x) throw()' extern
| | |-ParmVarDecl 0x9a7cb8 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:368:35> col:35 __x '_Float64x':'long double'
| | |-ParmVarDecl 0x9a7d30 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:368:50> col:50 __y '_Float64x':'long double'
| | `-ConstAttr 0x9a7e80 <col:57>
| |-FunctionDecl 0x9a8050 </usr/include/math.h:283:3, line:281:79> <scratch space>:219:1 __fminmagf64x '_Float64x (_Float64x, _Float64x) throw()' extern
| | |-ParmVarDecl 0x9a7ee8 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:368:35> col:35 __x '_Float64x':'long double'
| | |-ParmVarDecl 0x9a7f60 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:368:50> col:50 __y '_Float64x':'long double'
| | `-ConstAttr 0x9a8100 <col:57>
| |-FunctionDecl 0x9a82e8 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:220:1 canonicalizef64x 'int (_Float64x *, const _Float64x *) throw()' extern
| | |-ParmVarDecl 0x9a8168 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:371:47> col:47 __cx '_Float64x *'
| | `-ParmVarDecl 0x9a8208 <col:53, col:70> col:70 __x 'const _Float64x *'
| |-FunctionDecl 0x9a8508 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:226:54> <scratch space>:222:1 totalorderf64x 'int (const _Float64x *, const _Float64x *) throw()' extern
| | |-ParmVarDecl 0x9a83a8 </usr/include/x86_64-linux-gnu/bits/mathcalls.h:376:34, col:51> col:51 __x 'const _Float64x *'
| | |-ParmVarDecl 0x9a8420 <line:377:6, col:23> col:23 __y 'const _Float64x *'
| | `-PureAttr 0x9a85b8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:226:45>
| |-FunctionDecl 0x9a8740 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:226:54> <scratch space>:223:1 totalordermagf64x 'int (const _Float64x *, const _Float64x *) throw()' extern
| | |-ParmVarDecl 0x9a8620 </usr/include/x86_64-linux-gnu/bits/mathcalls.h:381:37, col:54> col:54 __x 'const _Float64x *'
| | |-ParmVarDecl 0x9a8698 <line:382:9, col:26> col:26 __y 'const _Float64x *'
| | `-PureAttr 0x9a87f0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:226:45>
| |-FunctionDecl 0x9a8920 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:224:1 getpayloadf64x '_Float64x (const _Float64x *) throw()' extern
| | `-ParmVarDecl 0x9a8858 </usr/include/x86_64-linux-gnu/bits/mathcalls.h:386:27, col:44> col:44 __x 'const _Float64x *'
| |-FunctionDecl 0x9a8a70 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:226:1 __getpayloadf64x '_Float64x (const _Float64x *) throw()' extern
| | `-ParmVarDecl 0x9a89d8 </usr/include/x86_64-linux-gnu/bits/mathcalls.h:386:27, col:44> col:44 __x 'const _Float64x *'
| |-FunctionDecl 0x9a8c88 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:227:1 setpayloadf64x 'int (_Float64x *, _Float64x) throw()' extern
| | |-ParmVarDecl 0x9a8b28 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:389:45> col:45 __x '_Float64x *'
| | `-ParmVarDecl 0x9a8ba0 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:389:60> col:60 __payload '_Float64x':'long double'
| |-FunctionDecl 0x9a8e68 </usr/include/math.h:283:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:228:1 setpayloadsigf64x 'int (_Float64x *, _Float64x) throw()' extern
| | |-ParmVarDecl 0x9a8d48 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:392:48> col:48 __x '_Float64x *'
| | `-ParmVarDecl 0x9a8dc0 </usr/include/math.h:449:21, /usr/include/x86_64-linux-gnu/bits/mathcalls.h:392:63> col:63 __payload '_Float64x':'long double'
| |-FunctionDecl 0x9a90d8 </usr/include/math.h:491:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:230:1 fadd 'float (double, double) throw()' extern
| | |-ParmVarDecl 0x9a8f30 </usr/include/math.h:501:17, line:488:42> col:42 __x 'double'
| | `-ParmVarDecl 0x9a8fb0 <line:501:17, line:488:54> col:54 __y 'double'
| |-FunctionDecl 0x9a92c8 <line:491:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:232:1 fdiv 'float (double, double) throw()' extern
| | |-ParmVarDecl 0x9a91a0 </usr/include/math.h:501:17, line:488:42> col:42 __x 'double'
| | `-ParmVarDecl 0x9a9220 <line:501:17, line:488:54> col:54 __y 'double'
| |-FunctionDecl 0x9a94b8 <line:491:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:234:1 fmul 'float (double, double) throw()' extern
| | |-ParmVarDecl 0x9a9390 </usr/include/math.h:501:17, line:488:42> col:42 __x 'double'
| | `-ParmVarDecl 0x9a9410 <line:501:17, line:488:54> col:54 __y 'double'
| |-FunctionDecl 0x9a96a8 <line:491:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:236:1 fsub 'float (double, double) throw()' extern
| | |-ParmVarDecl 0x9a9580 </usr/include/math.h:501:17, line:488:42> col:42 __x 'double'
| | `-ParmVarDecl 0x9a9600 <line:501:17, line:488:54> col:54 __y 'double'
| |-FunctionDecl 0x9a9918 <line:491:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:239:1 faddl 'float (long double, long double) throw()' extern
| | |-ParmVarDecl 0x9a9770 </usr/include/math.h:509:17, line:488:42> col:42 __x 'long double'
| | `-ParmVarDecl 0x9a97f0 <line:509:17, line:488:54> col:54 __y 'long double'
| |-FunctionDecl 0x9a9b08 <line:491:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:242:1 fdivl 'float (long double, long double) throw()' extern
| | |-ParmVarDecl 0x9a99e0 </usr/include/math.h:509:17, line:488:42> col:42 __x 'long double'
| | `-ParmVarDecl 0x9a9a60 <line:509:17, line:488:54> col:54 __y 'long double'
| |-FunctionDecl 0x9a9cf8 <line:491:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:245:1 fmull 'float (long double, long double) throw()' extern
| | |-ParmVarDecl 0x9a9bd0 </usr/include/math.h:509:17, line:488:42> col:42 __x 'long double'
| | `-ParmVarDecl 0x9a9c50 <line:509:17, line:488:54> col:54 __y 'long double'
| |-FunctionDecl 0x9a9ee8 <line:491:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:248:1 fsubl 'float (long double, long double) throw()' extern
| | |-ParmVarDecl 0x9a9dc0 </usr/include/math.h:509:17, line:488:42> col:42 __x 'long double'
| | `-ParmVarDecl 0x9a9e40 <line:509:17, line:488:54> col:54 __y 'long double'
| |-FunctionDecl 0x9ad418 <line:491:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:251:1 daddl 'double (long double, long double) throw()' extern
| | |-ParmVarDecl 0x9a9fb0 </usr/include/math.h:529:17, line:488:42> col:42 __x 'long double'
| | `-ParmVarDecl 0x9ad2f0 <line:529:17, line:488:54> col:54 __y 'long double'
| |-FunctionDecl 0x9ad608 <line:491:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:254:1 ddivl 'double (long double, long double) throw()' extern
| | |-ParmVarDecl 0x9ad4e0 </usr/include/math.h:529:17, line:488:42> col:42 __x 'long double'
| | `-ParmVarDecl 0x9ad560 <line:529:17, line:488:54> col:54 __y 'long double'
| |-FunctionDecl 0x9ad7f8 <line:491:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:257:1 dmull 'double (long double, long double) throw()' extern
| | |-ParmVarDecl 0x9ad6d0 </usr/include/math.h:529:17, line:488:42> col:42 __x 'long double'
| | `-ParmVarDecl 0x9ad750 <line:529:17, line:488:54> col:54 __y 'long double'
| |-FunctionDecl 0x9ad9e8 <line:491:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:260:1 dsubl 'double (long double, long double) throw()' extern
| | |-ParmVarDecl 0x9ad8c0 </usr/include/math.h:529:17, line:488:42> col:42 __x 'long double'
| | `-ParmVarDecl 0x9ad940 <line:529:17, line:488:54> col:54 __y 'long double'
| |-FunctionDecl 0x9adc00 <line:491:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:264:1 f32addf32x '_Float32 (_Float32x, _Float32x) throw()' extern
| | |-ParmVarDecl 0x9adaa8 </usr/include/math.h:614:18, line:488:42> col:42 __x '_Float32x':'double'
| | `-ParmVarDecl 0x9adb20 <line:614:18, line:488:54> col:54 __y '_Float32x':'double'
| |-FunctionDecl 0x9addd8 <line:491:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:267:1 f32divf32x '_Float32 (_Float32x, _Float32x) throw()' extern
| | |-ParmVarDecl 0x9adcc0 </usr/include/math.h:614:18, line:488:42> col:42 __x '_Float32x':'double'
| | `-ParmVarDecl 0x9add38 <line:614:18, line:488:54> col:54 __y '_Float32x':'double'
| |-FunctionDecl 0x9adfb0 <line:491:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:270:1 f32mulf32x '_Float32 (_Float32x, _Float32x) throw()' extern
| | |-ParmVarDecl 0x9ade98 </usr/include/math.h:614:18, line:488:42> col:42 __x '_Float32x':'double'
| | `-ParmVarDecl 0x9adf10 <line:614:18, line:488:54> col:54 __y '_Float32x':'double'
| |-FunctionDecl 0x9ae188 <line:491:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:273:1 f32subf32x '_Float32 (_Float32x, _Float32x) throw()' extern
| | |-ParmVarDecl 0x9ae070 </usr/include/math.h:614:18, line:488:42> col:42 __x '_Float32x':'double'
| | `-ParmVarDecl 0x9ae0e8 <line:614:18, line:488:54> col:54 __y '_Float32x':'double'
| |-FunctionDecl 0x9ae3a0 <line:491:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:276:1 f32addf64 '_Float32 (_Float64, _Float64) throw()' extern
| | |-ParmVarDecl 0x9ae248 </usr/include/math.h:624:18, line:488:42> col:42 __x '_Float64':'double'
| | `-ParmVarDecl 0x9ae2c0 <line:624:18, line:488:54> col:54 __y '_Float64':'double'
| |-FunctionDecl 0x9ae578 <line:491:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:279:1 f32divf64 '_Float32 (_Float64, _Float64) throw()' extern
| | |-ParmVarDecl 0x9ae460 </usr/include/math.h:624:18, line:488:42> col:42 __x '_Float64':'double'
| | `-ParmVarDecl 0x9ae4d8 <line:624:18, line:488:54> col:54 __y '_Float64':'double'
| |-FunctionDecl 0x9ae750 <line:491:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:282:1 f32mulf64 '_Float32 (_Float64, _Float64) throw()' extern
| | |-ParmVarDecl 0x9ae638 </usr/include/math.h:624:18, line:488:42> col:42 __x '_Float64':'double'
| | `-ParmVarDecl 0x9ae6b0 <line:624:18, line:488:54> col:54 __y '_Float64':'double'
| |-FunctionDecl 0x9ae928 <line:491:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:285:1 f32subf64 '_Float32 (_Float64, _Float64) throw()' extern
| | |-ParmVarDecl 0x9ae810 </usr/include/math.h:624:18, line:488:42> col:42 __x '_Float64':'double'
| | `-ParmVarDecl 0x9ae888 <line:624:18, line:488:54> col:54 __y '_Float64':'double'
| |-FunctionDecl 0x9aeb40 <line:491:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:288:1 f32addf64x '_Float32 (_Float64x, _Float64x) throw()' extern
| | |-ParmVarDecl 0x9ae9e8 </usr/include/math.h:634:18, line:488:42> col:42 __x '_Float64x':'long double'
| | `-ParmVarDecl 0x9aea60 <line:634:18, line:488:54> col:54 __y '_Float64x':'long double'
| |-FunctionDecl 0x9aed18 <line:491:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:291:1 f32divf64x '_Float32 (_Float64x, _Float64x) throw()' extern
| | |-ParmVarDecl 0x9aec00 </usr/include/math.h:634:18, line:488:42> col:42 __x '_Float64x':'long double'
| | `-ParmVarDecl 0x9aec78 <line:634:18, line:488:54> col:54 __y '_Float64x':'long double'
| |-FunctionDecl 0x9aeef0 <line:491:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:294:1 f32mulf64x '_Float32 (_Float64x, _Float64x) throw()' extern
| | |-ParmVarDecl 0x9aedd8 </usr/include/math.h:634:18, line:488:42> col:42 __x '_Float64x':'long double'
| | `-ParmVarDecl 0x9aee50 <line:634:18, line:488:54> col:54 __y '_Float64x':'long double'
| |-FunctionDecl 0x9af0c8 <line:491:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:297:1 f32subf64x '_Float32 (_Float64x, _Float64x) throw()' extern
| | |-ParmVarDecl 0x9aefb0 </usr/include/math.h:634:18, line:488:42> col:42 __x '_Float64x':'long double'
| | `-ParmVarDecl 0x9af028 <line:634:18, line:488:54> col:54 __y '_Float64x':'long double'
| |-FunctionDecl 0x9b0310 <line:491:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:300:1 f32xaddf64 '_Float32x (_Float64, _Float64) throw()' extern
| | |-ParmVarDecl 0x9af188 </usr/include/math.h:664:18, line:488:42> col:42 __x '_Float64':'double'
| | `-ParmVarDecl 0x9af200 <line:664:18, line:488:54> col:54 __y '_Float64':'double'
| |-FunctionDecl 0x9b04e8 <line:491:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:303:1 f32xdivf64 '_Float32x (_Float64, _Float64) throw()' extern
| | |-ParmVarDecl 0x9b03d0 </usr/include/math.h:664:18, line:488:42> col:42 __x '_Float64':'double'
| | `-ParmVarDecl 0x9b0448 <line:664:18, line:488:54> col:54 __y '_Float64':'double'
| |-FunctionDecl 0x9b06c0 <line:491:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:306:1 f32xmulf64 '_Float32x (_Float64, _Float64) throw()' extern
| | |-ParmVarDecl 0x9b05a8 </usr/include/math.h:664:18, line:488:42> col:42 __x '_Float64':'double'
| | `-ParmVarDecl 0x9b0620 <line:664:18, line:488:54> col:54 __y '_Float64':'double'
| |-FunctionDecl 0x9b0898 <line:491:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:309:1 f32xsubf64 '_Float32x (_Float64, _Float64) throw()' extern
| | |-ParmVarDecl 0x9b0780 </usr/include/math.h:664:18, line:488:42> col:42 __x '_Float64':'double'
| | `-ParmVarDecl 0x9b07f8 <line:664:18, line:488:54> col:54 __y '_Float64':'double'
| |-FunctionDecl 0x9b0ab0 <line:491:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:312:1 f32xaddf64x '_Float32x (_Float64x, _Float64x) throw()' extern
| | |-ParmVarDecl 0x9b0958 </usr/include/math.h:674:18, line:488:42> col:42 __x '_Float64x':'long double'
| | `-ParmVarDecl 0x9b09d0 <line:674:18, line:488:54> col:54 __y '_Float64x':'long double'
| |-FunctionDecl 0x9b0c88 <line:491:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:315:1 f32xdivf64x '_Float32x (_Float64x, _Float64x) throw()' extern
| | |-ParmVarDecl 0x9b0b70 </usr/include/math.h:674:18, line:488:42> col:42 __x '_Float64x':'long double'
| | `-ParmVarDecl 0x9b0be8 <line:674:18, line:488:54> col:54 __y '_Float64x':'long double'
| |-FunctionDecl 0x9b0e60 <line:491:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:2:1 f32xmulf64x '_Float32x (_Float64x, _Float64x) throw()' extern
| | |-ParmVarDecl 0x9b0d48 </usr/include/math.h:674:18, line:488:42> col:42 __x '_Float64x':'long double'
| | `-ParmVarDecl 0x9b0dc0 <line:674:18, line:488:54> col:54 __y '_Float64x':'long double'
| |-FunctionDecl 0x9b1038 <line:491:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:5:1 f32xsubf64x '_Float32x (_Float64x, _Float64x) throw()' extern
| | |-ParmVarDecl 0x9b0f20 </usr/include/math.h:674:18, line:488:42> col:42 __x '_Float64x':'long double'
| | `-ParmVarDecl 0x9b0f98 <line:674:18, line:488:54> col:54 __y '_Float64x':'long double'
| |-FunctionDecl 0x9b1250 <line:491:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:8:1 f64addf64x '_Float64 (_Float64x, _Float64x) throw()' extern
| | |-ParmVarDecl 0x9b10f8 </usr/include/math.h:704:18, line:488:42> col:42 __x '_Float64x':'long double'
| | `-ParmVarDecl 0x9b1170 <line:704:18, line:488:54> col:54 __y '_Float64x':'long double'
| |-FunctionDecl 0x9b1428 <line:491:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:11:1 f64divf64x '_Float64 (_Float64x, _Float64x) throw()' extern
| | |-ParmVarDecl 0x9b1310 </usr/include/math.h:704:18, line:488:42> col:42 __x '_Float64x':'long double'
| | `-ParmVarDecl 0x9b1388 <line:704:18, line:488:54> col:54 __y '_Float64x':'long double'
| |-FunctionDecl 0x9b1600 <line:491:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:14:1 f64mulf64x '_Float64 (_Float64x, _Float64x) throw()' extern
| | |-ParmVarDecl 0x9b14e8 </usr/include/math.h:704:18, line:488:42> col:42 __x '_Float64x':'long double'
| | `-ParmVarDecl 0x9b1560 <line:704:18, line:488:54> col:54 __y '_Float64x':'long double'
| |-FunctionDecl 0x9b17d8 <line:491:3, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> <scratch space>:17:1 f64subf64x '_Float64 (_Float64x, _Float64x) throw()' extern
| | |-ParmVarDecl 0x9b16c0 </usr/include/math.h:704:18, line:488:42> col:42 __x '_Float64x':'long double'
| | `-ParmVarDecl 0x9b1738 <line:704:18, line:488:54> col:54 __y '_Float64x':'long double'
| |-VarDecl 0x9b18a0 <line:773:1, col:12> col:12 signgam 'int' extern
| |-EnumDecl 0x9b1908 <line:853:1, line:870:3> line:853:1
| | |-EnumConstantDecl 0x9b1a10 <line:855:5, line:856:17> line:855:5 FP_NAN '(anonymous enum at /usr/include/math.h:853:1)'
| | | `-ImplicitCastExpr 0x9b1ca0 <line:856:17> 'unsigned int' <IntegralCast>
| | |   `-ConstantExpr 0x9b19f0 <col:17> 'int' Int: 0
| | |     `-IntegerLiteral 0x9b19d0 <col:17> 'int' 0
| | |-EnumConstantDecl 0x9b1aa0 <line:858:5, line:859:22> line:858:5 FP_INFINITE '(anonymous enum at /usr/include/math.h:853:1)'
| | | `-ImplicitCastExpr 0x9b1cb8 <line:859:22> 'unsigned int' <IntegralCast>
| | |   `-ConstantExpr 0x9b1a80 <col:22> 'int' Int: 1
| | |     `-IntegerLiteral 0x9b1a60 <col:22> 'int' 1
| | |-EnumConstantDecl 0x9b1b30 <line:861:5, line:862:18> line:861:5 FP_ZERO '(anonymous enum at /usr/include/math.h:853:1)'
| | | `-ImplicitCastExpr 0x9b1cd0 <line:862:18> 'unsigned int' <IntegralCast>
| | |   `-ConstantExpr 0x9b1b10 <col:18> 'int' Int: 2
| | |     `-IntegerLiteral 0x9b1af0 <col:18> 'int' 2
| | |-EnumConstantDecl 0x9b1bc0 <line:864:5, line:865:23> line:864:5 FP_SUBNORMAL '(anonymous enum at /usr/include/math.h:853:1)'
| | | `-ImplicitCastExpr 0x9b1ce8 <line:865:23> 'unsigned int' <IntegralCast>
| | |   `-ConstantExpr 0x9b1ba0 <col:23> 'int' Int: 3
| | |     `-IntegerLiteral 0x9b1b80 <col:23> 'int' 3
| | `-EnumConstantDecl 0x9b1c50 <line:867:5, line:868:20> line:867:5 FP_NORMAL '(anonymous enum at /usr/include/math.h:853:1)'
| |   `-ImplicitCastExpr 0x9b1d00 <line:868:20> 'unsigned int' <IntegralCast>
| |     `-ConstantExpr 0x9b1c30 <col:20> 'int' Int: 4
| |       `-IntegerLiteral 0x9b1c10 <col:20> 'int' 4
| |-FunctionDecl 0x9b1dd0 </usr/include/x86_64-linux-gnu/bits/iscanonical.h:23:1, line:24:40> line:23:12 used __iscanonicall 'int (long double) throw()' extern
| | |-ParmVarDecl 0x9b1d30 <col:28, col:40> col:40 __x 'long double'
| | `-ConstAttr 0x9b1e78 <line:24:30>
| |-LinkageSpecDecl 0x9b1ef0 <line:46:1, line:53:1> line:46:8 C++
| | |-FunctionDecl 0x9b1ff0 <line:47:1, col:71> col:12 iscanonical 'int (float)' inline
| | | |-ParmVarDecl 0x9b1f58 <col:25, col:31> col:31 used __val 'float'
| | | `-CompoundStmt 0x9b2260 <col:38, col:71>
| | |   `-ReturnStmt 0x9b2250 <col:40, line:25:56>
| | |     `-ParenExpr 0x9b2230 <col:27, col:56> 'int'
| | |       `-BinaryOperator 0x9b2210 <col:28, col:55> 'int' ','
| | |         |-CStyleCastExpr 0x9b21c8 <col:28, col:52> 'void' <ToVoid>
| | |         | `-CStyleCastExpr 0x9b2190 <col:35, col:52> 'typeof (__val)':'float' <NoOp>
| | |         |   `-ImplicitCastExpr 0x9b2178 <col:50, col:52> 'float' <LValueToRValue> part_of_explicit_cast
| | |         |     `-ParenExpr 0x9b2158 <col:50, col:52> 'float' lvalue
| | |         |       `-DeclRefExpr 0x9b20d8 <line:47:63> 'float' lvalue ParmVar 0x9b1f58 '__val' 'float'
| | |         `-IntegerLiteral 0x9b21f0 <line:25:55> 'int' 1
| | |-FunctionDecl 0x9b7760 <line:48:1, col:71> col:12 iscanonical 'int (double)' inline
| | | |-ParmVarDecl 0x9b2290 <col:25, col:32> col:32 used __val 'double'
| | | `-CompoundStmt 0x9b79d0 <col:39, col:71>
| | |   `-ReturnStmt 0x9b79c0 <col:41, line:26:55>
| | |     `-ParenExpr 0x9b79a0 <col:26, col:55> 'int'
| | |       `-BinaryOperator 0x9b7980 <col:27, col:54> 'int' ','
| | |         |-CStyleCastExpr 0x9b7938 <col:27, col:51> 'void' <ToVoid>
| | |         | `-CStyleCastExpr 0x9b7900 <col:34, col:51> 'typeof (__val)':'double' <NoOp>
| | |         |   `-ImplicitCastExpr 0x9b78e8 <col:49, col:51> 'double' <LValueToRValue> part_of_explicit_cast
| | |         |     `-ParenExpr 0x9b78c8 <col:49, col:51> 'double' lvalue
| | |         |       `-DeclRefExpr 0x9b7848 <line:48:63> 'double' lvalue ParmVar 0x9b2290 '__val' 'double'
| | |         `-IntegerLiteral 0x9b7960 <line:26:54> 'int' 1
| | `-FunctionDecl 0x9b7a98 <line:49:1, col:77> col:12 iscanonical 'int (long double)' inline
| |   |-ParmVarDecl 0x9b7a00 <col:25, col:37> col:37 used __val 'long double'
| |   `-CompoundStmt 0x9b7c90 <col:44, col:77>
| |     `-ReturnStmt 0x9b7c80 <col:46, col:74>
| |       `-CallExpr 0x9b7c40 <col:53, col:74> 'int'
| |         |-ImplicitCastExpr 0x9b7c28 <col:53> 'int (*)(long double) throw()' <FunctionToPointerDecay>
| |         | `-DeclRefExpr 0x9b7ba8 <col:53> 'int (long double) throw()' lvalue Function 0x9b1dd0 '__iscanonicall' 'int (long double) throw()'
| |         `-ImplicitCastExpr 0x9b7c68 <col:69> 'long double' <LValueToRValue>
| |           `-DeclRefExpr 0x9b7b88 <col:69> 'long double' lvalue ParmVar 0x9b7a00 '__val' 'long double'
| |-LinkageSpecDecl 0x9b7cc8 </usr/include/math.h:985:1, line:1002:1> line:985:8 C++
| | |-FunctionDecl 0x9b7dc8 <line:986:1, col:71> col:12 issignaling 'int (float)' inline
| | | |-ParmVarDecl 0x9b7d30 <col:25, col:31> col:31 used __val 'float'
| | | `-CompoundStmt 0x9b7fc0 <col:38, col:71>
| | |   `-ReturnStmt 0x9b7fb0 <col:40, col:68>
| | |     `-CallExpr 0x9b7f70 <col:47, col:68> 'int'
| | |       |-ImplicitCastExpr 0x9b7f58 <col:47> 'int (*)(float) throw()' <FunctionToPointerDecay>
| | |       | `-DeclRefExpr 0x9b7ed8 <col:47> 'int (float) throw()' lvalue Function 0x907fc0 '__issignalingf' 'int (float) throw()'
| | |       `-ImplicitCastExpr 0x9b7f98 <col:63> 'float' <LValueToRValue>
| | |         `-DeclRefExpr 0x9b7eb8 <col:63> 'float' lvalue ParmVar 0x9b7d30 '__val' 'float'
| | |-FunctionDecl 0x9b8088 <line:987:1, col:71> col:12 issignaling 'int (double)' inline
| | | |-ParmVarDecl 0x9b7ff0 <col:25, col:32> col:32 used __val 'double'
| | | `-CompoundStmt 0x9b8280 <col:39, col:71>
| | |   `-ReturnStmt 0x9b8270 <col:41, col:68>
| | |     `-CallExpr 0x9b8230 <col:48, col:68> 'int'
| | |       |-ImplicitCastExpr 0x9b8218 <col:48> 'int (*)(double) throw()' <FunctionToPointerDecay>
| | |       | `-DeclRefExpr 0x9b8198 <col:48> 'int (double) throw()' lvalue Function 0x8f45b0 '__issignaling' 'int (double) throw()'
| | |       `-ImplicitCastExpr 0x9b8258 <col:63> 'double' <LValueToRValue>
| | |         `-DeclRefExpr 0x9b8178 <col:63> 'double' lvalue ParmVar 0x9b7ff0 '__val' 'double'
| | `-FunctionDecl 0x9b8348 <line:988:1, line:996:1> line:989:1 issignaling 'int (long double)' inline
| |   |-ParmVarDecl 0x9b82b0 <col:14, col:26> col:26 used __val 'long double'
| |   `-CompoundStmt 0x9b84e0 <line:990:1, line:996:1>
| |     `-ReturnStmt 0x9b84d0 <line:994:3, col:31>
| |       `-CallExpr 0x9b8490 <col:10, col:31> 'int'
| |         |-ImplicitCastExpr 0x9b8478 <col:10> 'int (*)(long double) throw()' <FunctionToPointerDecay>
| |         | `-DeclRefExpr 0x9b8458 <col:10> 'int (long double) throw()' lvalue Function 0x924a10 '__issignalingl' 'int (long double) throw()'
| |         `-ImplicitCastExpr 0x9b84b8 <col:26> 'long double' <LValueToRValue>
| |           `-DeclRefExpr 0x9b8438 <col:26> 'long double' lvalue ParmVar 0x9b82b0 '__val' 'long double'
| |-LinkageSpecDecl 0x9b8518 <line:1016:1, line:1053:1> line:1016:8 C++
| | `-FunctionTemplateDecl 0x9b8778 <line:1047:1, line:1051:1> line:1048:1 iszero
| |   |-TemplateTypeParmDecl 0x9b8568 <line:1047:11, col:17> col:17 referenced class depth 0 index 0 __T
| |   `-FunctionDecl 0x9b86d8 <col:22, line:1051:1> line:1048:1 iszero 'bool (__T)' inline
| |     |-ParmVarDecl 0x9b8618 <col:9, col:13> col:13 referenced __val '__T'
| |     `-CompoundStmt 0x9b8848 <line:1049:1, line:1051:1>
| |       `-ReturnStmt 0x9b8838 <line:1050:3, col:19>
| |         `-BinaryOperator 0x9b8818 <col:10, col:19> '<dependent type>' '=='
| |           |-DeclRefExpr 0x9b87d8 <col:10> '__T' lvalue ParmVar 0x9b8618 '__val' '__T'
| |           `-IntegerLiteral 0x9b87f8 <col:19> 'int' 0
| `-LinkageSpecDecl 0x9b8880 <line:1278:1, line:1333:1> line:1278:8 C++
|   |-ClassTemplateDecl 0x9b89f8 <line:1279:1, col:27> col:27 __iseqsig_type
|   | |-TemplateTypeParmDecl 0x9b88d0 <col:10> col:18 typename depth 0 index 0
|   | |-CXXRecordDecl 0x9b8968 <col:20, col:27> col:27 struct __iseqsig_type
|   | |-ClassTemplateSpecialization 0x9b8c18 '__iseqsig_type'
|   | |-ClassTemplateSpecialization 0x9b9318 '__iseqsig_type'
|   | `-ClassTemplateSpecialization 0x9c24b8 '__iseqsig_type'
|   |-ClassTemplateSpecializationDecl 0x9b8c18 <line:1281:1, line:1287:1> line:1281:19 struct __iseqsig_type definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'float'
|   | |-CXXRecordDecl 0x9b8e38 <col:12, col:19> col:19 implicit struct __iseqsig_type
|   | `-CXXMethodDecl 0x9b9078 <line:1283:3, line:1286:3> line:1283:14 __call 'int (float, float) throw()' static
|   |   |-ParmVarDecl 0x9b8ee0 <col:22, col:28> col:28 used __x 'float'
|   |   |-ParmVarDecl 0x9b8f60 <col:33, col:39> col:39 used __y 'float'
|   |   `-CompoundStmt 0x9b92d0 <line:1284:3, line:1286:3>
|   |     `-ReturnStmt 0x9b92c0 <line:1285:5, col:32>
|   |       `-CallExpr 0x9b9260 <col:12, col:32> 'int'
|   |         |-ImplicitCastExpr 0x9b9248 <col:12> 'int (*)(float, float) throw()' <FunctionToPointerDecay>
|   |         | `-DeclRefExpr 0x9b91c8 <col:12> 'int (float, float) throw()' lvalue Function 0x907e58 '__iseqsigf' 'int (float, float) throw()'
|   |         |-ImplicitCastExpr 0x9b9290 <col:24> 'float' <LValueToRValue>
|   |         | `-DeclRefExpr 0x9b9188 <col:24> 'float' lvalue ParmVar 0x9b8ee0 '__x' 'float'
|   |         `-ImplicitCastExpr 0x9b92a8 <col:29> 'float' <LValueToRValue>
|   |           `-DeclRefExpr 0x9b91a8 <col:29> 'float' lvalue ParmVar 0x9b8f60 '__y' 'float'
|   |-ClassTemplateSpecializationDecl 0x9b9318 <line:1289:1, line:1295:1> line:1289:19 struct __iseqsig_type definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'double'
|   | |-CXXRecordDecl 0x9b9538 <col:12, col:19> col:19 implicit struct __iseqsig_type
|   | `-CXXMethodDecl 0x9c2218 <line:1291:3, line:1294:3> line:1291:14 __call 'int (double, double) throw()' static
|   |   |-ParmVarDecl 0x9b95e0 <col:22, col:29> col:29 used __x 'double'
|   |   |-ParmVarDecl 0x9b9660 <col:34, col:41> col:41 used __y 'double'
|   |   `-CompoundStmt 0x9c2470 <line:1292:3, line:1294:3>
|   |     `-ReturnStmt 0x9c2460 <line:1293:5, col:31>
|   |       `-CallExpr 0x9c2400 <col:12, col:31> 'int'
|   |         |-ImplicitCastExpr 0x9c23e8 <col:12> 'int (*)(double, double) throw()' <FunctionToPointerDecay>
|   |         | `-DeclRefExpr 0x9c2368 <col:12> 'int (double, double) throw()' lvalue Function 0x8f4448 '__iseqsig' 'int (double, double) throw()'
|   |         |-ImplicitCastExpr 0x9c2430 <col:23> 'double' <LValueToRValue>
|   |         | `-DeclRefExpr 0x9c2328 <col:23> 'double' lvalue ParmVar 0x9b95e0 '__x' 'double'
|   |         `-ImplicitCastExpr 0x9c2448 <col:28> 'double' <LValueToRValue>
|   |           `-DeclRefExpr 0x9c2348 <col:28> 'double' lvalue ParmVar 0x9b9660 '__y' 'double'
|   |-ClassTemplateSpecializationDecl 0x9c24b8 <line:1297:1, line:1307:1> line:1297:19 struct __iseqsig_type definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'long double'
|   | |-CXXRecordDecl 0x9c26d8 <col:12, col:19> col:19 implicit struct __iseqsig_type
|   | `-CXXMethodDecl 0x9c2918 <line:1299:3, line:1306:3> line:1299:14 __call 'int (long double, long double) throw()' static
|   |   |-ParmVarDecl 0x9c2780 <col:22, col:34> col:34 used __x 'long double'
|   |   |-ParmVarDecl 0x9c2800 <col:39, col:51> col:51 used __y 'long double'
|   |   `-CompoundStmt 0x9c2b70 <line:1300:3, line:1306:3>
|   |     `-ReturnStmt 0x9c2b60 <line:1302:5, col:32>
|   |       `-CallExpr 0x9c2b00 <col:12, col:32> 'int'
|   |         |-ImplicitCastExpr 0x9c2ae8 <col:12> 'int (*)(long double, long double) throw()' <FunctionToPointerDecay>
|   |         | `-DeclRefExpr 0x9c2a68 <col:12> 'int (long double, long double) throw()' lvalue Function 0x9248a8 '__iseqsigl' 'int (long double, long double) throw()'
|   |         |-ImplicitCastExpr 0x9c2b30 <col:24> 'long double' <LValueToRValue>
|   |         | `-DeclRefExpr 0x9c2a28 <col:24> 'long double' lvalue ParmVar 0x9c2780 '__x' 'long double'
|   |         `-ImplicitCastExpr 0x9c2b48 <col:29> 'long double' <LValueToRValue>
|   |           `-DeclRefExpr 0x9c2a48 <col:29> 'long double' lvalue ParmVar 0x9c2800 '__y' 'long double'
|   `-FunctionTemplateDecl 0x9c2ef8 <line:1321:1, line:1331:1> line:1323:1 iseqsig
|     |-TemplateTypeParmDecl 0x9c2b88 <line:1321:10, col:19> col:19 referenced typename depth 0 index 0 _T1
|     |-TemplateTypeParmDecl 0x9c2c08 <col:24, col:33> col:33 referenced typename depth 0 index 1 _T2
|     `-FunctionDecl 0x9c2e58 <line:1322:1, line:1331:1> line:1323:1 iseqsig 'int (_T1, _T2) throw()' inline
|       |-ParmVarDecl 0x9c2cc0 <col:10, col:14> col:14 referenced __x '_T1'
|       |-ParmVarDecl 0x9c2d38 <col:19, col:23> col:23 referenced __y '_T2'
|       `-CompoundStmt 0x9c3328 <line:1324:1, line:1331:1>
|         |-DeclStmt 0x9c3130 <line:1326:3, col:53>
|         | `-TypedefDecl 0x9c30d8 <col:3, col:50> col:50 referenced _T3 'decltype(((__x) + (__y) + 0.F))'
|         |   `-DecltypeType 0x9c30a0 'decltype(((__x) + (__y) + 0.F))' dependent
|         |     `-ParenExpr 0x9c3040 <line:1257:34, col:51> '<dependent type>'
|         |       `-BinaryOperator 0x9c3020 <col:35, col:47> '<dependent type>' '+'
|         |         |-BinaryOperator 0x9c2fe0 <col:35, col:43> '<dependent type>' '+'
|         |         | |-ParenExpr 0x9c2f80 <col:35, col:37> '_T1' lvalue
|         |         | | `-DeclRefExpr 0x9c2f60 <line:1326:39> '_T1' lvalue ParmVar 0x9c2cc0 '__x' '_T1' non_odr_use_unevaluated
|         |         | `-ParenExpr 0x9c2fc0 <line:1257:41, col:43> '_T2' lvalue
|         |         |   `-DeclRefExpr 0x9c2fa0 <line:1326:44> '_T2' lvalue ParmVar 0x9c2d38 '__y' '_T2' non_odr_use_unevaluated
|         |         `-FloatingLiteral 0x9c3000 <line:1257:47> 'float' 0.000000e+00
|         `-ReturnStmt 0x9c3318 <line:1330:3, col:47>
|           `-CallExpr 0x9c32e8 <col:10, col:47> '<dependent type>'
|             |-DependentScopeDeclRefExpr 0x9c3270 <col:10, col:31> '<dependent type>' lvalue
|             |-DeclRefExpr 0x9c32a8 <col:39> '_T1' lvalue ParmVar 0x9c2cc0 '__x' '_T1'
|             `-DeclRefExpr 0x9c32c8 <col:44> '_T2' lvalue ParmVar 0x9c2d38 '__y' '_T2'
|-TypedefDecl 0x9c3360 </usr/lib/llvm-10/lib/clang/10.0.0/include/stddef.h:46:1, col:23> col:23 referenced size_t 'unsigned long'
| `-BuiltinType 0x7db440 'unsigned long'
|-LinkageSpecDecl 0x9c33d8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:114:24, line:115:22> line:114:31 C
| |-EnumDecl 0x9c3428 </usr/include/x86_64-linux-gnu/bits/waitflags.h:52:9, line:57:1> line:52:9
| | |-EnumConstantDecl 0x9c34f0 <line:54:3> col:3 P_ALL 'idtype_t'
| | |-EnumConstantDecl 0x9c3540 <line:55:3> col:3 P_PID 'idtype_t'
| | `-EnumConstantDecl 0x9c3590 <line:56:3> col:3 P_PGID 'idtype_t'
| |-TypedefDecl 0x9c3638 <line:52:1, line:57:3> col:3 idtype_t 'enum idtype_t':'idtype_t'
| | `-ElaboratedType 0x9c35e0 'enum idtype_t' sugar
| |   `-EnumType 0x9c34d0 'idtype_t'
| |     `-Enum 0x9c3428 ''
| |-CXXRecordDecl 0x9c36a8 </usr/include/stdlib.h:58:9, line:62:3> line:58:9 struct definition
| | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial needs_implicit
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-FieldDecl 0x9c37e0 <line:60:5, col:9> col:9 quot 'int'
| | `-FieldDecl 0x9c3848 <line:61:5, col:9> col:9 rem 'int'
| |-TypedefDecl 0x9c3908 <line:58:1, line:62:5> col:5 referenced div_t 'struct div_t':'div_t'
| | `-ElaboratedType 0x9c38b0 'struct div_t' sugar
| |   `-RecordType 0x9c3740 'div_t'
| |     `-CXXRecord 0x9c36a8 ''
| |-CXXRecordDecl 0x9c3978 <line:66:9, line:70:3> line:66:9 struct definition
| | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial needs_implicit
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-FieldDecl 0x9c3ab0 <line:68:5, col:14> col:14 quot 'long'
| | `-FieldDecl 0x9c3b18 <line:69:5, col:14> col:14 rem 'long'
| |-TypedefDecl 0x9c3bd8 <line:66:1, line:70:5> col:5 referenced ldiv_t 'struct ldiv_t':'ldiv_t'
| | `-ElaboratedType 0x9c3b80 'struct ldiv_t' sugar
| |   `-RecordType 0x9c3a10 'ldiv_t'
| |     `-CXXRecord 0x9c3978 ''
| |-CXXRecordDecl 0x9c3c48 <line:76:23, line:80:3> line:76:23 struct definition
| | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial needs_implicit
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-FieldDecl 0x9c3d80 <line:78:5, col:19> col:19 quot 'long long'
| | `-FieldDecl 0x9c3de8 <line:79:5, col:19> col:19 rem 'long long'
| |-TypedefDecl 0x9c3ea8 <line:76:15, line:80:5> col:5 referenced lldiv_t 'struct lldiv_t':'lldiv_t'
| | `-ElaboratedType 0x9c3e50 'struct lldiv_t' sugar
| |   `-RecordType 0x9c3ce0 'lldiv_t'
| |     `-CXXRecord 0x9c3c48 ''
| |-FunctionDecl 0x9c4040 <line:97:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/stdlib.h:97:15 __ctype_get_mb_cur_max 'size_t () throw()' extern
| |-FunctionDecl 0x9cdbd8 <line:101:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:101:15 atof 'double (const char *) throw()' extern
| | |-ParmVarDecl 0x9c40f8 <col:21, col:33> col:33 __nptr 'const char *'
| | |-PureAttr 0x9cdc80 </usr/include/x86_64-linux-gnu/sys/cdefs.h:226:45>
| | `-NonNullAttr 0x9cdcd8 <line:293:44, /usr/include/stdlib.h:102:46> 1
| |-FunctionDecl 0x9cde58 <line:104:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:104:12 used atoi 'int (const char *) throw()' extern
| | |-ParmVarDecl 0x9cdd30 <col:18, col:30> col:30 __nptr 'const char *'
| | |-PureAttr 0x9cdf00 </usr/include/x86_64-linux-gnu/sys/cdefs.h:226:45>
| | `-NonNullAttr 0x9cdf58 <line:293:44, /usr/include/stdlib.h:105:46> 1
| |-FunctionDecl 0x9ce0d8 <line:107:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:107:17 atol 'long (const char *) throw()' extern
| | |-ParmVarDecl 0x9cdfb0 <col:23, col:35> col:35 __nptr 'const char *'
| | |-PureAttr 0x9ce180 </usr/include/x86_64-linux-gnu/sys/cdefs.h:226:45>
| | `-NonNullAttr 0x9ce1d8 <line:293:44, /usr/include/stdlib.h:108:46> 1
| |-FunctionDecl 0x9ce358 <line:112:15, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:112:36 atoll 'long long (const char *) throw()' extern
| | |-ParmVarDecl 0x9ce230 <col:43, col:55> col:55 __nptr 'const char *'
| | |-PureAttr 0x9ce400 </usr/include/x86_64-linux-gnu/sys/cdefs.h:226:45>
| | `-NonNullAttr 0x9ce458 <line:293:44, /usr/include/stdlib.h:113:46> 1
| |-FunctionDecl 0x9ce6a8 <line:117:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:117:15 strtod 'double (const char *__restrict, char **__restrict) throw()' extern
| | |-ParmVarDecl 0x9ce4b0 <col:23, col:46> col:46 __nptr 'const char *__restrict'
| | |-ParmVarDecl 0x9ce560 <line:118:9, col:27> col:27 __endptr 'char **__restrict'
| | `-NonNullAttr 0x9ce758 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:119:27> 1
| |-FunctionDecl 0x9ce9a8 <line:123:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:123:14 strtof 'float (const char *__restrict, char **__restrict) throw()' extern
| | |-ParmVarDecl 0x9ce7e0 <col:22, col:45> col:45 __nptr 'const char *__restrict'
| | |-ParmVarDecl 0x9ce860 <line:124:8, col:26> col:26 __endptr 'char **__restrict'
| | `-NonNullAttr 0x9cea58 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:124:57> 1
| |-FunctionDecl 0x9ceca8 <line:126:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:126:20 strtold 'long double (const char *__restrict, char **__restrict) throw()' extern
| | |-ParmVarDecl 0x9ceae0 <col:29, col:52> col:52 __nptr 'const char *__restrict'
| | |-ParmVarDecl 0x9ceb60 <line:127:8, col:26> col:26 __endptr 'char **__restrict'
| | `-NonNullAttr 0x9ced58 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:128:27> 1
| |-FunctionDecl 0x9cef60 <line:140:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:140:17 strtof32 '_Float32 (const char *__restrict, char **__restrict) throw()' extern
| | |-ParmVarDecl 0x9cede0 <col:27, col:50> col:50 __nptr 'const char *__restrict'
| | |-ParmVarDecl 0x9cee60 <line:141:6, col:24> col:24 __endptr 'char **__restrict'
| | `-NonNullAttr 0x9cf010 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:142:27> 1
| |-FunctionDecl 0x9cf210 <line:146:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:146:17 strtof64 '_Float64 (const char *__restrict, char **__restrict) throw()' extern
| | |-ParmVarDecl 0x9cf090 <col:27, col:50> col:50 __nptr 'const char *__restrict'
| | |-ParmVarDecl 0x9cf110 <line:147:6, col:24> col:24 __endptr 'char **__restrict'
| | `-NonNullAttr 0x9cf2c0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:148:27> 1
| |-FunctionDecl 0x9cf4c0 <line:158:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:158:18 strtof32x '_Float32x (const char *__restrict, char **__restrict) throw()' extern
| | |-ParmVarDecl 0x9cf340 <col:29, col:52> col:52 __nptr 'const char *__restrict'
| | |-ParmVarDecl 0x9cf3c0 <line:159:8, col:26> col:26 __endptr 'char **__restrict'
| | `-NonNullAttr 0x9cf570 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:160:27> 1
| |-FunctionDecl 0x9cf770 <line:164:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:164:18 strtof64x '_Float64x (const char *__restrict, char **__restrict) throw()' extern
| | |-ParmVarDecl 0x9cf5f0 <col:29, col:52> col:52 __nptr 'const char *__restrict'
| | |-ParmVarDecl 0x9cf670 <line:165:8, col:26> col:26 __endptr 'char **__restrict'
| | `-NonNullAttr 0x9cf820 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:166:27> 1
| |-FunctionDecl 0x9cfaf8 <line:176:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:176:17 strtol 'long (const char *__restrict, char **__restrict, int) throw()' extern
| | |-ParmVarDecl 0x9cf8a0 <col:25, col:48> col:48 __nptr 'const char *__restrict'
| | |-ParmVarDecl 0x9cf920 <line:177:4, col:22> col:22 __endptr 'char **__restrict'
| | |-ParmVarDecl 0x9cf9a0 <col:32, col:36> col:36 __base 'int'
| | `-NonNullAttr 0x9cfbc8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:178:27> 1
| |-FunctionDecl 0x9cfea8 <line:180:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:180:26 strtoul 'unsigned long (const char *__restrict, char **__restrict, int) throw()' extern
| | |-ParmVarDecl 0x9cfc50 <col:35, col:58> col:58 __nptr 'const char *__restrict'
| | |-ParmVarDecl 0x9cfcd0 <line:181:7, col:25> col:25 __endptr 'char **__restrict'
| | |-ParmVarDecl 0x9cfd50 <col:35, col:39> col:39 __base 'int'
| | `-NonNullAttr 0x9cff60 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:182:27> 1
| |-FunctionDecl 0x9d0238 <line:187:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:187:22 strtoq 'long long (const char *__restrict, char **__restrict, int) throw()' extern
| | |-ParmVarDecl 0x9cffe0 <col:30, col:53> col:53 __nptr 'const char *__restrict'
| | |-ParmVarDecl 0x9d0060 <line:188:9, col:27> col:27 __endptr 'char **__restrict'
| | |-ParmVarDecl 0x9d00e0 <col:37, col:41> col:41 __base 'int'
| | `-NonNullAttr 0x9d02f0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:189:27> 1
| |-FunctionDecl 0x9d05c8 <line:192:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:192:31 strtouq 'unsigned long long (const char *__restrict, char **__restrict, int) throw()' extern
| | |-ParmVarDecl 0x9d0370 <col:40, col:63> col:63 __nptr 'const char *__restrict'
| | |-ParmVarDecl 0x9d03f0 <line:193:12, col:30> col:30 __endptr 'char **__restrict'
| | |-ParmVarDecl 0x9d0470 <col:40, col:44> col:44 __base 'int'
| | `-NonNullAttr 0x9d0680 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:194:27> 1
| |-FunctionDecl 0x9d08d0 <line:200:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:200:22 strtoll 'long long (const char *__restrict, char **__restrict, int) throw()' extern
| | |-ParmVarDecl 0x9d0700 <col:31, col:54> col:54 __nptr 'const char *__restrict'
| | |-ParmVarDecl 0x9d0780 <line:201:10, col:28> col:28 __endptr 'char **__restrict'
| | |-ParmVarDecl 0x9d0800 <col:38, col:42> col:42 __base 'int'
| | `-NonNullAttr 0x9d0988 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:202:27> 1
| |-FunctionDecl 0x9d0be0 <line:205:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:205:31 strtoull 'unsigned long long (const char *__restrict, char **__restrict, int) throw()' extern
| | |-ParmVarDecl 0x9d0a10 <col:41, col:64> col:64 __nptr 'const char *__restrict'
| | |-ParmVarDecl 0x9d0a90 <line:206:6, col:24> col:24 __endptr 'char **__restrict'
| | |-ParmVarDecl 0x9d0b10 <col:34, col:38> col:38 __base 'int'
| | `-NonNullAttr 0x9d0c98 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:207:27> 1
| |-FunctionDecl 0x9d1008 <line:212:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:212:12 strfromd 'int (char *, size_t, const char *, double) throw()' extern
| | |-ParmVarDecl 0x9d0d20 <col:22, col:28> col:28 __dest 'char *'
| | |-ParmVarDecl 0x9d0d98 <col:36, col:43> col:43 __size 'size_t':'unsigned long'
| | |-ParmVarDecl 0x9d0e18 <col:51, col:63> col:63 __format 'const char *'
| | |-ParmVarDecl 0x9d0e98 <line:213:8, col:15> col:15 __f 'double'
| | `-NonNullAttr 0x9d10c8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:214:27> 3
| |-FunctionDecl 0x9d1438 <line:216:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:216:12 strfromf 'int (char *, size_t, const char *, float) throw()' extern
| | |-ParmVarDecl 0x9d1150 <col:22, col:28> col:28 __dest 'char *'
| | |-ParmVarDecl 0x9d11c8 <col:36, col:43> col:43 __size 'size_t':'unsigned long'
| | |-ParmVarDecl 0x9d1248 <col:51, col:63> col:63 __format 'const char *'
| | |-ParmVarDecl 0x9d12c8 <line:217:8, col:14> col:14 __f 'float'
| | `-NonNullAttr 0x9d14f8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:218:27> 3
| |-FunctionDecl 0x9d1868 <line:220:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:220:12 strfroml 'int (char *, size_t, const char *, long double) throw()' extern
| | |-ParmVarDecl 0x9d1580 <col:22, col:28> col:28 __dest 'char *'
| | |-ParmVarDecl 0x9d15f8 <col:36, col:43> col:43 __size 'size_t':'unsigned long'
| | |-ParmVarDecl 0x9d1678 <col:51, col:63> col:63 __format 'const char *'
| | |-ParmVarDecl 0x9d16f8 <line:221:8, col:20> col:20 __f 'long double'
| | `-NonNullAttr 0x9d1928 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:222:27> 3
| |-FunctionDecl 0x9d1c58 <line:232:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:232:12 strfromf32 'int (char *, size_t, const char *, _Float32) throw()' extern
| | |-ParmVarDecl 0x9d19b0 <col:24, col:30> col:30 __dest 'char *'
| | |-ParmVarDecl 0x9d1a28 <col:38, col:45> col:45 __size 'size_t':'unsigned long'
| | |-ParmVarDecl 0x9d1aa8 <col:53, col:66> col:66 __format 'const char *'
| | |-ParmVarDecl 0x9d1b20 <line:233:10, col:19> col:19 __f '_Float32':'float'
| | `-NonNullAttr 0x9d1d18 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:234:27> 3
| |-FunctionDecl 0x9d2038 <line:238:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:238:12 strfromf64 'int (char *, size_t, const char *, _Float64) throw()' extern
| | |-ParmVarDecl 0x9d1da0 <col:24, col:30> col:30 __dest 'char *'
| | |-ParmVarDecl 0x9d1e18 <col:38, col:45> col:45 __size 'size_t':'unsigned long'
| | |-ParmVarDecl 0x9d1e98 <col:53, col:66> col:66 __format 'const char *'
| | |-ParmVarDecl 0x9d1f10 <line:239:10, col:19> col:19 __f '_Float64':'double'
| | `-NonNullAttr 0x9d20f8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:240:27> 3
| |-FunctionDecl 0x9d2418 <line:250:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:250:12 strfromf32x 'int (char *, size_t, const char *, _Float32x) throw()' extern
| | |-ParmVarDecl 0x9d2180 <col:25, col:31> col:31 __dest 'char *'
| | |-ParmVarDecl 0x9d21f8 <col:39, col:46> col:46 __size 'size_t':'unsigned long'
| | |-ParmVarDecl 0x9d2278 <col:54, col:67> col:67 __format 'const char *'
| | |-ParmVarDecl 0x9d22f0 <line:251:4, col:14> col:14 __f '_Float32x':'double'
| | `-NonNullAttr 0x9d24d8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:252:27> 3
| |-FunctionDecl 0x9d27f8 <line:256:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:256:12 strfromf64x 'int (char *, size_t, const char *, _Float64x) throw()' extern
| | |-ParmVarDecl 0x9d2560 <col:25, col:31> col:31 __dest 'char *'
| | |-ParmVarDecl 0x9d25d8 <col:39, col:46> col:46 __size 'size_t':'unsigned long'
| | |-ParmVarDecl 0x9d2658 <col:54, col:67> col:67 __format 'const char *'
| | |-ParmVarDecl 0x9d26d0 <line:257:4, col:14> col:14 __f '_Float64x':'long double'
| | `-NonNullAttr 0x9d28b8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:258:27> 3
| |-CXXRecordDecl 0x9d2928 </usr/include/x86_64-linux-gnu/bits/types/__locale_t.h:28:1, line:40:1> line:28:8 struct __locale_struct definition
| | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial needs_implicit
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-CXXRecordDecl 0x9d2a48 <col:1, col:8> col:8 implicit struct __locale_struct
| | |-CXXRecordDecl 0x9d2ad8 parent 0x7db288 <line:31:3, col:10> col:10 struct __locale_data
| | |-FieldDecl 0x9d2d30 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| | |-FieldDecl 0x9d2de0 <line:34:3, col:29> col:29 __ctype_b 'const unsigned short *'
| | |-FieldDecl 0x9d2e48 <line:35:3, col:14> col:14 __ctype_tolower 'const int *'
| | |-FieldDecl 0x9d2eb0 <line:36:3, col:14> col:14 __ctype_toupper 'const int *'
| | `-FieldDecl 0x9d2fa0 <line:39:3, col:25> col:15 __names 'const char *[13]'
| |-TypedefDecl 0x9d30c0 <line:42:1, col:33> col:33 referenced __locale_t 'struct __locale_struct *'
| | `-PointerType 0x9d3070 'struct __locale_struct *'
| |   `-ElaboratedType 0x9d3010 'struct __locale_struct' sugar
| |     `-RecordType 0x9d29c0 '__locale_struct'
| |       `-CXXRecord 0x9d2928 '__locale_struct'
| |-TypedefDecl 0x9d3150 </usr/include/x86_64-linux-gnu/bits/types/locale_t.h:24:1, col:20> col:20 referenced locale_t '__locale_t':'struct __locale_struct *'
| | `-TypedefType 0x9d3120 '__locale_t' sugar
| |   |-Typedef 0x9d30c0 '__locale_t'
| |   `-PointerType 0x9d3070 'struct __locale_struct *'
| |     `-ElaboratedType 0x9d3010 'struct __locale_struct' sugar
| |       `-RecordType 0x9d29c0 '__locale_struct'
| |         `-CXXRecord 0x9d2928 '__locale_struct'
| |-FunctionDecl 0x9d34f8 </usr/include/stdlib.h:274:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:274:17 strtol_l 'long (const char *__restrict, char **__restrict, int, locale_t) throw()' extern
| | |-ParmVarDecl 0x9d31c0 <col:27, col:50> col:50 __nptr 'const char *__restrict'
| | |-ParmVarDecl 0x9d3240 <line:275:6, col:24> col:24 __endptr 'char **__restrict'
| | |-ParmVarDecl 0x9d32c0 <col:34, col:38> col:38 __base 'int'
| | |-ParmVarDecl 0x9d3360 <line:276:6, col:15> col:15 __loc 'locale_t':'struct __locale_struct *'
| | `-NonNullAttr 0x9d35b8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:276:46> 1 4
| |-FunctionDecl 0x9d3948 <line:278:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:278:26 strtoul_l 'unsigned long (const char *__restrict, char **__restrict, int, locale_t) throw()' extern
| | |-ParmVarDecl 0x9d3640 <col:37, col:60> col:60 __nptr 'const char *__restrict'
| | |-ParmVarDecl 0x9d36c0 <line:279:9, col:27> col:27 __endptr 'char **__restrict'
| | |-ParmVarDecl 0x9d3740 <line:280:9, col:13> col:13 __base 'int'
| | |-ParmVarDecl 0x9d37b8 <col:21, col:30> col:30 __loc 'locale_t':'struct __locale_struct *'
| | `-NonNullAttr 0x9d3a08 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:281:30> 1 4
| |-FunctionDecl 0x9d6b18 <line:284:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:284:22 strtoll_l 'long long (const char *__restrict, char **__restrict, int, locale_t) throw()' extern
| | |-ParmVarDecl 0x9d3a90 <col:33, col:56> col:56 __nptr 'const char *__restrict'
| | |-ParmVarDecl 0x9d3b10 <line:285:5, col:23> col:23 __endptr 'char **__restrict'
| | |-ParmVarDecl 0x9d6910 <col:33, col:37> col:37 __base 'int'
| | |-ParmVarDecl 0x9d6988 <line:286:5, col:14> col:14 __loc 'locale_t':'struct __locale_struct *'
| | `-NonNullAttr 0x9d6bd8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:287:30> 1 4
| |-FunctionDecl 0x9d6f68 <line:290:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:290:31 strtoull_l 'unsigned long long (const char *__restrict, char **__restrict, int, locale_t) throw()' extern
| | |-ParmVarDecl 0x9d6c60 <col:43, col:66> col:66 __nptr 'const char *__restrict'
| | |-ParmVarDecl 0x9d6ce0 <line:291:8, col:26> col:26 __endptr 'char **__restrict'
| | |-ParmVarDecl 0x9d6d60 <line:292:8, col:12> col:12 __base 'int'
| | |-ParmVarDecl 0x9d6dd8 <col:20, col:29> col:29 __loc 'locale_t':'struct __locale_struct *'
| | `-NonNullAttr 0x9d7028 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:293:30> 1 4
| |-FunctionDecl 0x9d7318 <line:295:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:295:15 strtod_l 'double (const char *__restrict, char **__restrict, locale_t) throw()' extern
| | |-ParmVarDecl 0x9d70b0 <col:25, col:48> col:48 __nptr 'const char *__restrict'
| | |-ParmVarDecl 0x9d7130 <line:296:4, col:22> col:22 __endptr 'char **__restrict'
| | |-ParmVarDecl 0x9d71a8 <col:32, col:41> col:41 __loc 'locale_t':'struct __locale_struct *'
| | `-NonNullAttr 0x9d73d0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:297:30> 1 3
| |-FunctionDecl 0x9d76b8 <line:299:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:299:14 strtof_l 'float (const char *__restrict, char **__restrict, locale_t) throw()' extern
| | |-ParmVarDecl 0x9d7450 <col:24, col:47> col:47 __nptr 'const char *__restrict'
| | |-ParmVarDecl 0x9d74d0 <line:300:10, col:28> col:28 __endptr 'char **__restrict'
| | |-ParmVarDecl 0x9d7548 <col:38, col:47> col:47 __loc 'locale_t':'struct __locale_struct *'
| | `-NonNullAttr 0x9d7770 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:301:30> 1 3
| |-FunctionDecl 0x9d7a58 <line:303:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:303:20 strtold_l 'long double (const char *__restrict, char **__restrict, locale_t) throw()' extern
| | |-ParmVarDecl 0x9d77f0 <col:31, col:54> col:54 __nptr 'const char *__restrict'
| | |-ParmVarDecl 0x9d7870 <line:304:10, col:28> col:28 __endptr 'char **__restrict'
| | |-ParmVarDecl 0x9d78e8 <line:305:10, col:19> col:19 __loc 'locale_t':'struct __locale_struct *'
| | `-NonNullAttr 0x9d7b10 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:306:30> 1 3
| |-FunctionDecl 0x9d7db0 <line:316:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:316:17 strtof32_l '_Float32 (const char *__restrict, char **__restrict, locale_t) throw()' extern
| | |-ParmVarDecl 0x9d7b90 <col:29, col:52> col:52 __nptr 'const char *__restrict'
| | |-ParmVarDecl 0x9d7c10 <line:317:8, col:26> col:26 __endptr 'char **__restrict'
| | |-ParmVarDecl 0x9d7c88 <line:318:8, col:17> col:17 __loc 'locale_t':'struct __locale_struct *'
| | `-NonNullAttr 0x9d7e68 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:319:30> 1 3
| |-FunctionDecl 0x9d8110 <line:323:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:323:17 strtof64_l '_Float64 (const char *__restrict, char **__restrict, locale_t) throw()' extern
| | |-ParmVarDecl 0x9d7ef0 <col:29, col:52> col:52 __nptr 'const char *__restrict'
| | |-ParmVarDecl 0x9d7f70 <line:324:8, col:26> col:26 __endptr 'char **__restrict'
| | |-ParmVarDecl 0x9d7fe8 <line:325:8, col:17> col:17 __loc 'locale_t':'struct __locale_struct *'
| | `-NonNullAttr 0x9d81c8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:326:30> 1 3
| |-FunctionDecl 0x9d8470 <line:337:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:337:18 strtof32x_l '_Float32x (const char *__restrict, char **__restrict, locale_t) throw()' extern
| | |-ParmVarDecl 0x9d8250 <col:31, col:54> col:54 __nptr 'const char *__restrict'
| | |-ParmVarDecl 0x9d82d0 <line:338:10, col:28> col:28 __endptr 'char **__restrict'
| | |-ParmVarDecl 0x9d8348 <line:339:10, col:19> col:19 __loc 'locale_t':'struct __locale_struct *'
| | `-NonNullAttr 0x9d8528 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:340:30> 1 3
| |-FunctionDecl 0x9d87d0 <line:344:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:344:18 strtof64x_l '_Float64x (const char *__restrict, char **__restrict, locale_t) throw()' extern
| | |-ParmVarDecl 0x9d85b0 <col:31, col:54> col:54 __nptr 'const char *__restrict'
| | |-ParmVarDecl 0x9d8630 <line:345:10, col:28> col:28 __endptr 'char **__restrict'
| | |-ParmVarDecl 0x9d86a8 <line:346:10, col:19> col:19 __loc 'locale_t':'struct __locale_struct *'
| | `-NonNullAttr 0x9d8888 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:347:30> 1 3
| |-FunctionDecl 0x93be98 <line:385:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/stdlib.h:385:14 l64a 'char *(long) throw()' extern
| | `-ParmVarDecl 0x93bd90 <col:20, col:29> col:29 __n 'long'
| |-FunctionDecl 0x93c018 <line:388:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:388:17 a64l 'long (const char *) throw()' extern
| | |-ParmVarDecl 0x93bf58 <col:23, col:35> col:35 __s 'const char *'
| | |-PureAttr 0x93c0c0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:226:45>
| | `-NonNullAttr 0x93c118 <line:293:44, /usr/include/stdlib.h:389:46> 1
| |-LinkageSpecDecl 0x93c178 </usr/include/x86_64-linux-gnu/sys/cdefs.h:114:24, line:115:22> line:114:31 C
| | |-TypedefDecl 0x93c200 </usr/include/x86_64-linux-gnu/sys/types.h:33:1, col:18> col:18 u_char '__u_char':'unsigned char'
| | | `-TypedefType 0x93c1d0 '__u_char' sugar
| | |   |-Typedef 0x8c9f30 '__u_char'
| | |   `-BuiltinType 0x7db3e0 'unsigned char'
| | |-TypedefDecl 0x93c290 <line:34:1, col:19> col:19 u_short '__u_short':'unsigned short'
| | | `-TypedefType 0x93c260 '__u_short' sugar
| | |   |-Typedef 0x8c9fa0 '__u_short'
| | |   `-BuiltinType 0x7db400 'unsigned short'
| | |-TypedefDecl 0x93c320 <line:35:1, col:17> col:17 u_int '__u_int':'unsigned int'
| | | `-TypedefType 0x93c2f0 '__u_int' sugar
| | |   |-Typedef 0x8ca010 '__u_int'
| | |   `-BuiltinType 0x7db420 'unsigned int'
| | |-TypedefDecl 0x93c3b0 <line:36:1, col:18> col:18 u_long '__u_long':'unsigned long'
| | | `-TypedefType 0x93c380 '__u_long' sugar
| | |   |-Typedef 0x8ca080 '__u_long'
| | |   `-BuiltinType 0x7db440 'unsigned long'
| | |-TypedefDecl 0x93c440 <line:37:1, col:18> col:18 quad_t '__quad_t':'long'
| | | `-TypedefType 0x93c410 '__quad_t' sugar
| | |   |-Typedef 0x8d0960 '__quad_t'
| | |   `-BuiltinType 0x7db3a0 'long'
| | |-TypedefDecl 0x93c4d0 <line:38:1, col:20> col:20 u_quad_t '__u_quad_t':'unsigned long'
| | | `-TypedefType 0x93c4a0 '__u_quad_t' sugar
| | |   |-Typedef 0x8d09d0 '__u_quad_t'
| | |   `-BuiltinType 0x7db440 'unsigned long'
| | |-TypedefDecl 0x93c560 <line:39:1, col:18> col:18 fsid_t '__fsid_t':'__fsid_t'
| | | `-TypedefType 0x93c530 '__fsid_t' sugar
| | |   |-Typedef 0x8d11f8 '__fsid_t'
| | |   `-ElaboratedType 0x8d11a0 'struct __fsid_t' sugar
| | |     `-RecordType 0x8d1000 '__fsid_t'
| | |       `-CXXRecord 0x8d0f68 ''
| | |-TypedefDecl 0x93c5f0 <line:42:1, col:18> col:18 loff_t '__loff_t':'long'
| | | `-TypedefType 0x93c5c0 '__loff_t' sugar
| | |   |-Typedef 0x8d98b0 '__loff_t'
| | |   `-TypedefType 0x8d9880 '__off64_t' sugar
| | |     |-Typedef 0x8d0ea0 '__off64_t'
| | |     `-BuiltinType 0x7db3a0 'long'
| | |-TypedefDecl 0x93c680 <line:47:1, col:17> col:17 ino_t '__ino_t':'unsigned long'
| | | `-TypedefType 0x93c650 '__ino_t' sugar
| | |   |-Typedef 0x8d0c70 '__ino_t'
| | |   `-BuiltinType 0x7db440 'unsigned long'
| | |-TypedefDecl 0x93c710 <line:54:1, col:19> col:19 ino64_t '__ino64_t':'unsigned long'
| | | `-TypedefType 0x93c6e0 '__ino64_t' sugar
| | |   |-Typedef 0x8d0ce0 '__ino64_t'
| | |   `-BuiltinType 0x7db440 'unsigned long'
| | |-TypedefDecl 0x93c7a0 <line:59:1, col:17> col:17 dev_t '__dev_t':'unsigned long'
| | | `-TypedefType 0x93c770 '__dev_t' sugar
| | |   |-Typedef 0x8d0b20 '__dev_t'
| | |   `-BuiltinType 0x7db440 'unsigned long'
| | |-TypedefDecl 0x93c830 <line:64:1, col:17> col:17 gid_t '__gid_t':'unsigned int'
| | | `-TypedefType 0x93c800 '__gid_t' sugar
| | |   |-Typedef 0x8d0c00 '__gid_t'
| | |   `-BuiltinType 0x7db420 'unsigned int'
| | |-TypedefDecl 0x93c8c0 <line:69:1, col:18> col:18 mode_t '__mode_t':'unsigned int'
| | | `-TypedefType 0x93c890 '__mode_t' sugar
| | |   |-Typedef 0x8d0d50 '__mode_t'
| | |   `-BuiltinType 0x7db420 'unsigned int'
| | |-TypedefDecl 0x93c950 <line:74:1, col:19> col:19 nlink_t '__nlink_t':'unsigned long'
| | | `-TypedefType 0x93c920 '__nlink_t' sugar
| | |   |-Typedef 0x8d0dc0 '__nlink_t'
| | |   `-BuiltinType 0x7db440 'unsigned long'
| | |-TypedefDecl 0x93c9e0 <line:79:1, col:17> col:17 uid_t '__uid_t':'unsigned int'
| | | `-TypedefType 0x93c9b0 '__uid_t' sugar
| | |   |-Typedef 0x8d0b90 '__uid_t'
| | |   `-BuiltinType 0x7db420 'unsigned int'
| | |-TypedefDecl 0x93ca70 <line:85:1, col:17> col:17 off_t '__off_t':'long'
| | | `-TypedefType 0x93ca40 '__off_t' sugar
| | |   |-Typedef 0x8d0e30 '__off_t'
| | |   `-BuiltinType 0x7db3a0 'long'
| | |-TypedefDecl 0x93cad8 <line:92:1, col:19> col:19 off64_t '__off64_t':'long'
| | | `-TypedefType 0x8d9880 '__off64_t' sugar
| | |   |-Typedef 0x8d0ea0 '__off64_t'
| | |   `-BuiltinType 0x7db3a0 'long'
| | |-TypedefDecl 0x93cb60 <line:97:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| | | `-TypedefType 0x93cb30 '__pid_t' sugar
| | |   |-Typedef 0x8d0f10 '__pid_t'
| | |   `-BuiltinType 0x7db380 'int'
| | |-TypedefDecl 0x93cbf0 <line:103:1, col:16> col:16 id_t '__id_t':'unsigned int'
| | | `-TypedefType 0x93cbc0 '__id_t' sugar
| | |   |-Typedef 0x8d13d0 '__id_t'
| | |   `-BuiltinType 0x7db420 'unsigned int'
| | |-TypedefDecl 0x93cc80 <line:108:1, col:19> col:19 ssize_t '__ssize_t':'long'
| | | `-TypedefType 0x93cc50 '__ssize_t' sugar
| | |   |-Typedef 0x8d9740 '__ssize_t'
| | |   `-BuiltinType 0x7db3a0 'long'
| | |-TypedefDecl 0x93cd10 <line:114:1, col:19> col:19 daddr_t '__daddr_t':'int'
| | | `-TypedefType 0x93cce0 '__daddr_t' sugar
| | |   |-Typedef 0x8d9200 '__daddr_t'
| | |   `-BuiltinType 0x7db380 'int'
| | |-TypedefDecl 0x93cda0 <line:115:1, col:19> col:19 caddr_t '__caddr_t':'char *'
| | | `-TypedefType 0x93cd70 '__caddr_t' sugar
| | |   |-Typedef 0x8d9920 '__caddr_t'
| | |   `-PointerType 0x7dbfa0 'char *'
| | |     `-BuiltinType 0x7db320 'char'
| | |-TypedefDecl 0x93ce30 <line:121:1, col:17> col:17 key_t '__key_t':'int'
| | | `-TypedefType 0x93ce00 '__key_t' sugar
| | |   |-Typedef 0x8d9270 '__key_t'
| | |   `-BuiltinType 0x7db380 'int'
| | |-TypedefDecl 0x93cec0 </usr/include/x86_64-linux-gnu/bits/types/clock_t.h:7:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| | | `-TypedefType 0x93ce90 '__clock_t' sugar
| | |   |-Typedef 0x8d1280 '__clock_t'
| | |   `-BuiltinType 0x7db3a0 'long'
| | |-TypedefDecl 0x93cf50 </usr/include/x86_64-linux-gnu/bits/types/clockid_t.h:7:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| | | `-TypedefType 0x93cf20 '__clockid_t' sugar
| | |   |-Typedef 0x8d92e0 '__clockid_t'
| | |   `-BuiltinType 0x7db380 'int'
| | |-TypedefDecl 0x93cfe0 </usr/include/x86_64-linux-gnu/bits/types/time_t.h:7:1, col:18> col:18 referenced time_t '__time_t':'long'
| | | `-TypedefType 0x93cfb0 '__time_t' sugar
| | |   |-Typedef 0x8d1440 '__time_t'
| | |   `-BuiltinType 0x7db3a0 'long'
| | |-TypedefDecl 0x93d070 </usr/include/x86_64-linux-gnu/bits/types/timer_t.h:7:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| | | `-TypedefType 0x93d040 '__timer_t' sugar
| | |   |-Typedef 0x8d9350 '__timer_t'
| | |   `-PointerType 0x7dbae0 'void *'
| | |     `-BuiltinType 0x7db2e0 'void'
| | |-TypedefDecl 0x93d100 </usr/include/x86_64-linux-gnu/sys/types.h:134:1, col:22> col:22 useconds_t '__useconds_t':'unsigned int'
| | | `-TypedefType 0x93d0d0 '__useconds_t' sugar
| | |   |-Typedef 0x8d9120 '__useconds_t'
| | |   `-BuiltinType 0x7db420 'unsigned int'
| | |-TypedefDecl 0x93d190 <line:138:1, col:23> col:23 suseconds_t '__suseconds_t':'long'
| | | `-TypedefType 0x93d160 '__suseconds_t' sugar
| | |   |-Typedef 0x8d9190 '__suseconds_t'
| | |   `-BuiltinType 0x7db3a0 'long'
| | |-TypedefDecl 0x93d200 <line:148:1, col:27> col:27 ulong 'unsigned long'
| | | `-BuiltinType 0x7db440 'unsigned long'
| | |-TypedefDecl 0x93d270 <line:149:1, col:28> col:28 ushort 'unsigned short'
| | | `-BuiltinType 0x7db400 'unsigned short'
| | |-TypedefDecl 0x93d2e0 <line:150:1, col:22> col:22 uint 'unsigned int'
| | | `-BuiltinType 0x7db420 'unsigned int'
| | |-TypedefDecl 0x93d348 </usr/include/x86_64-linux-gnu/bits/stdint-intn.h:24:1, col:18> col:18 int8_t '__int8_t':'signed char'
| | | `-TypedefType 0x8ca460 '__int8_t' sugar
| | |   |-Typedef 0x8ca0f0 '__int8_t'
| | |   `-BuiltinType 0x7db340 'signed char'
| | |-TypedefDecl 0x93d3b0 <line:25:1, col:19> col:19 int16_t '__int16_t':'short'
| | | `-TypedefType 0x8d05f0 '__int16_t' sugar
| | |   |-Typedef 0x8ca1d0 '__int16_t'
| | |   `-BuiltinType 0x7db360 'short'
| | |-TypedefDecl 0x93d418 <line:26:1, col:19> col:19 referenced int32_t '__int32_t':'int'
| | | `-TypedefType 0x8d0710 '__int32_t' sugar
| | |   |-Typedef 0x8ca2b0 '__int32_t'
| | |   `-BuiltinType 0x7db380 'int'
| | |-TypedefDecl 0x93d480 <line:27:1, col:19> col:19 referenced int64_t '__int64_t':'long'
| | | `-TypedefType 0x8d0830 '__int64_t' sugar
| | |   |-Typedef 0x8ca390 '__int64_t'
| | |   `-BuiltinType 0x7db3a0 'long'
| | |-TypedefDecl 0x93d4e8 </usr/include/x86_64-linux-gnu/sys/types.h:158:1, col:19> col:19 u_int8_t '__uint8_t':'unsigned char'
| | | `-TypedefType 0x8d0560 '__uint8_t' sugar
| | |   |-Typedef 0x8ca160 '__uint8_t'
| | |   `-BuiltinType 0x7db3e0 'unsigned char'
| | |-TypedefDecl 0x93d550 <line:159:1, col:20> col:20 u_int16_t '__uint16_t':'unsigned short'
| | | `-TypedefType 0x8d0680 '__uint16_t' sugar
| | |   |-Typedef 0x8ca240 '__uint16_t'
| | |   `-BuiltinType 0x7db400 'unsigned short'
| | |-TypedefDecl 0x93d5b8 <line:160:1, col:20> col:20 u_int32_t '__uint32_t':'unsigned int'
| | | `-TypedefType 0x8d07a0 '__uint32_t' sugar
| | |   |-Typedef 0x8ca320 '__uint32_t'
| | |   `-BuiltinType 0x7db420 'unsigned int'
| | |-TypedefDecl 0x93d620 <line:161:1, col:20> col:20 u_int64_t '__uint64_t':'unsigned long'
| | | `-TypedefType 0x8d08c0 '__uint64_t' sugar
| | |   |-Typedef 0x8ca400 '__uint64_t'
| | |   `-BuiltinType 0x7db440 'unsigned long'
| | |-TypedefDecl 0x93d6a0 <line:164:1, col:13> col:13 register_t 'long'
| | | |-BuiltinType 0x7db3a0 'long'
| | | `-ModeAttr 0x93d708 <col:40, col:58> __word__
| | |-FunctionDecl 0x93d868 </usr/include/x86_64-linux-gnu/bits/byteswap.h:33:1, line:41:1> line:34:1 __bswap_16 '__uint16_t (__uint16_t)' static inline
| | | |-ParmVarDecl 0x93d778 <col:13, col:24> col:24 used __bsx '__uint16_t':'unsigned short'
| | | `-CompoundStmt 0x93dc50 <line:35:1, line:41:1>
| | |   `-ReturnStmt 0x93dc40 <line:39:3, line:31:60>
| | |     `-ParenExpr 0x93dc20 <col:3, col:60> '__uint16_t':'unsigned short'
| | |       `-CStyleCastExpr 0x93dbf8 <col:4, col:59> '__uint16_t':'unsigned short' <NoOp>
| | |         `-ImplicitCastExpr 0x93dbe0 <col:17, col:59> '__uint16_t':'unsigned short' <IntegralCast> part_of_explicit_cast
| | |           `-ParenExpr 0x93dbc0 <col:17, col:59> 'int'
| | |             `-BinaryOperator 0x93db70 <col:18, col:58> 'int' '|'
| | |               |-ParenExpr 0x93da20 <col:18, col:36> 'int'
| | |               | `-BinaryOperator 0x93da00 <col:19, col:32> 'int' '&'
| | |               |   |-ParenExpr 0x93d9c0 <col:19, col:28> 'int'
| | |               |   | `-BinaryOperator 0x93d9a0 <col:20, col:27> 'int' '>>'
| | |               |   |   |-ImplicitCastExpr 0x93d988 <col:20, col:22> 'int' <IntegralCast>
| | |               |   |   | `-ImplicitCastExpr 0x93d970 <col:20, col:22> '__uint16_t':'unsigned short' <LValueToRValue>
| | |               |   |   |   `-ParenExpr 0x93d930 <col:20, col:22> '__uint16_t':'unsigned short' lvalue
| | |               |   |   |     `-DeclRefExpr 0x93d910 <line:39:31> '__uint16_t':'unsigned short' lvalue ParmVar 0x93d778 '__bsx' '__uint16_t':'unsigned short'
| | |               |   |   `-IntegerLiteral 0x93d950 <line:31:27> 'int' 8
| | |               |   `-IntegerLiteral 0x93d9e0 <col:32> 'int' 255
| | |               `-ParenExpr 0x93db50 <col:40, col:58> 'int'
| | |                 `-BinaryOperator 0x93db30 <col:41, col:57> 'int' '<<'
| | |                   |-ParenExpr 0x93daf0 <col:41, col:52> 'int'
| | |                   | `-BinaryOperator 0x93dad0 <col:42, col:48> 'int' '&'
| | |                   |   |-ImplicitCastExpr 0x93dab8 <col:42, col:44> 'int' <IntegralCast>
| | |                   |   | `-ImplicitCastExpr 0x93daa0 <col:42, col:44> '__uint16_t':'unsigned short' <LValueToRValue>
| | |                   |   |   `-ParenExpr 0x93da60 <col:42, col:44> '__uint16_t':'unsigned short' lvalue
| | |                   |   |     `-DeclRefExpr 0x93da40 <line:39:31> '__uint16_t':'unsigned short' lvalue ParmVar 0x93d778 '__bsx' '__uint16_t':'unsigned short'
| | |                   |   `-IntegerLiteral 0x93da80 <line:31:48> 'int' 255
| | |                   `-IntegerLiteral 0x93db10 <col:57> 'int' 8
| | |-FunctionDecl 0x9e7ec0 <line:48:1, line:56:1> line:49:1 __bswap_32 '__uint32_t (__uint32_t)' static inline
| | | |-ParmVarDecl 0x93dc78 <col:13, col:24> col:24 used __bsx '__uint32_t':'unsigned int'
| | | `-CompoundStmt 0x9e8458 <line:50:1, line:56:1>
| | |   `-ReturnStmt 0x9e8448 <line:54:3, line:46:62>
| | |     `-ParenExpr 0x9e8428 <line:45:3, line:46:62> 'unsigned int'
| | |       `-BinaryOperator 0x9e8408 <line:45:4, line:46:61> 'unsigned int' '|'
| | |         |-BinaryOperator 0x9e82d0 <line:45:4, line:46:31> 'unsigned int' '|'
| | |         | |-BinaryOperator 0x9e8198 <line:45:4, col:59> 'unsigned int' '|'
| | |         | | |-ParenExpr 0x9e8060 <col:4, col:30> 'unsigned int'
| | |         | | | `-BinaryOperator 0x9e8040 <col:5, col:28> 'unsigned int' '>>'
| | |         | | |   |-ParenExpr 0x9e8000 <col:5, col:23> 'unsigned int'
| | |         | | |   | `-BinaryOperator 0x9e7fe0 <col:6, col:12> 'unsigned int' '&'
| | |         | | |   |   |-ImplicitCastExpr 0x9e7fc8 <col:6, col:8> '__uint32_t':'unsigned int' <LValueToRValue>
| | |         | | |   |   | `-ParenExpr 0x9e7f88 <col:6, col:8> '__uint32_t':'unsigned int' lvalue
| | |         | | |   |   |   `-DeclRefExpr 0x9e7f68 <line:54:31> '__uint32_t':'unsigned int' lvalue ParmVar 0x93dc78 '__bsx' '__uint32_t':'unsigned int'
| | |         | | |   |   `-IntegerLiteral 0x9e7fa8 <line:45:12> 'unsigned int' 4278190080
| | |         | | |   `-IntegerLiteral 0x9e8020 <col:28> 'int' 24
| | |         | | `-ParenExpr 0x9e8178 <col:34, col:59> 'unsigned int'
| | |         | |   `-BinaryOperator 0x9e8158 <col:35, col:58> 'unsigned int' '>>'
| | |         | |     |-ParenExpr 0x9e8118 <col:35, col:53> 'unsigned int'
| | |         | |     | `-BinaryOperator 0x9e80f8 <col:36, col:42> 'unsigned int' '&'
| | |         | |     |   |-ImplicitCastExpr 0x9e80e0 <col:36, col:38> '__uint32_t':'unsigned int' <LValueToRValue>
| | |         | |     |   | `-ParenExpr 0x9e80a0 <col:36, col:38> '__uint32_t':'unsigned int' lvalue
| | |         | |     |   |   `-DeclRefExpr 0x9e8080 <line:54:31> '__uint32_t':'unsigned int' lvalue ParmVar 0x93dc78 '__bsx' '__uint32_t':'unsigned int'
| | |         | |     |   `-IntegerLiteral 0x9e80c0 <line:45:42> 'unsigned int' 16711680
| | |         | |     `-IntegerLiteral 0x9e8138 <col:58> 'int' 8
| | |         | `-ParenExpr 0x9e82b0 <line:46:6, col:31> 'unsigned int'
| | |         |   `-BinaryOperator 0x9e8290 <col:7, col:30> 'unsigned int' '<<'
| | |         |     |-ParenExpr 0x9e8250 <col:7, col:25> 'unsigned int'
| | |         |     | `-BinaryOperator 0x9e8230 <col:8, col:14> 'unsigned int' '&'
| | |         |     |   |-ImplicitCastExpr 0x9e8218 <col:8, col:10> '__uint32_t':'unsigned int' <LValueToRValue>
| | |         |     |   | `-ParenExpr 0x9e81d8 <col:8, col:10> '__uint32_t':'unsigned int' lvalue
| | |         |     |   |   `-DeclRefExpr 0x9e81b8 <line:54:31> '__uint32_t':'unsigned int' lvalue ParmVar 0x93dc78 '__bsx' '__uint32_t':'unsigned int'
| | |         |     |   `-IntegerLiteral 0x9e81f8 <line:46:14> 'unsigned int' 65280
| | |         |     `-IntegerLiteral 0x9e8270 <col:30> 'int' 8
| | |         `-ParenExpr 0x9e83e8 <col:35, col:61> 'unsigned int'
| | |           `-BinaryOperator 0x9e83c8 <col:36, col:59> 'unsigned int' '<<'
| | |             |-ParenExpr 0x9e8388 <col:36, col:54> 'unsigned int'
| | |             | `-BinaryOperator 0x9e8368 <col:37, col:43> 'unsigned int' '&'
| | |             |   |-ImplicitCastExpr 0x9e8350 <col:37, col:39> '__uint32_t':'unsigned int' <LValueToRValue>
| | |             |   | `-ParenExpr 0x9e8310 <col:37, col:39> '__uint32_t':'unsigned int' lvalue
| | |             |   |   `-DeclRefExpr 0x9e82f0 <line:54:31> '__uint32_t':'unsigned int' lvalue ParmVar 0x93dc78 '__bsx' '__uint32_t':'unsigned int'
| | |             |   `-IntegerLiteral 0x9e8330 <line:46:43> 'unsigned int' 255
| | |             `-IntegerLiteral 0x9e83a8 <col:59> 'int' 24
| | |-FunctionDecl 0x9e8578 <line:69:15, line:77:1> line:70:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| | | |-ParmVarDecl 0x9e8480 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| | | `-CompoundStmt 0x9e90c8 <line:71:1, line:77:1>
| | |   `-ReturnStmt 0x9e90b8 <line:75:3, line:67:43>
| | |     `-ImplicitCastExpr 0x9e90a0 <line:60:3, line:67:43> '__uint64_t':'unsigned long' <IntegralCast>
| | |       `-ParenExpr 0x9e9080 <line:60:3, line:67:43> 'unsigned long long'
| | |         `-BinaryOperator 0x9e9060 <line:60:4, line:67:42> 'unsigned long long' '|'
| | |           |-BinaryOperator 0x9e8f10 <line:60:4, line:66:42> 'unsigned long long' '|'
| | |           | |-BinaryOperator 0x9e8dc0 <line:60:4, line:65:42> 'unsigned long long' '|'
| | |           | | |-BinaryOperator 0x9e8c70 <line:60:4, line:64:41> 'unsigned long long' '|'
| | |           | | | |-BinaryOperator 0x9e8b20 <line:60:4, line:63:41> 'unsigned long long' '|'
| | |           | | | | |-BinaryOperator 0x9e89d0 <line:60:4, line:62:42> 'unsigned long long' '|'
| | |           | | | | | |-BinaryOperator 0x9e8880 <line:60:4, line:61:42> 'unsigned long long' '|'
| | |           | | | | | | |-ParenExpr 0x9e8730 <line:60:4, col:40> 'unsigned long long'
| | |           | | | | | | | `-BinaryOperator 0x9e8710 <col:5, col:38> 'unsigned long long' '>>'
| | |           | | | | | | |   |-ParenExpr 0x9e86d0 <col:5, col:33> 'unsigned long long'
| | |           | | | | | | |   | `-BinaryOperator 0x9e86b0 <col:6, col:12> 'unsigned long long' '&'
| | |           | | | | | | |   |   |-ImplicitCastExpr 0x9e8698 <col:6, col:8> 'unsigned long long' <IntegralCast>
| | |           | | | | | | |   |   | `-ImplicitCastExpr 0x9e8680 <col:6, col:8> '__uint64_t':'unsigned long' <LValueToRValue>
| | |           | | | | | | |   |   |   `-ParenExpr 0x9e8640 <col:6, col:8> '__uint64_t':'unsigned long' lvalue
| | |           | | | | | | |   |   |     `-DeclRefExpr 0x9e8620 <line:75:31> '__uint64_t':'unsigned long' lvalue ParmVar 0x9e8480 '__bsx' '__uint64_t':'unsigned long'
| | |           | | | | | | |   |   `-IntegerLiteral 0x9e8660 <line:60:12> 'unsigned long long' 18374686479671623680
| | |           | | | | | | |   `-IntegerLiteral 0x9e86f0 <col:38> 'int' 56
| | |           | | | | | | `-ParenExpr 0x9e8860 <line:61:6, col:42> 'unsigned long long'
| | |           | | | | | |   `-BinaryOperator 0x9e8840 <col:7, col:40> 'unsigned long long' '>>'
| | |           | | | | | |     |-ParenExpr 0x9e8800 <col:7, col:35> 'unsigned long long'
| | |           | | | | | |     | `-BinaryOperator 0x9e87e0 <col:8, col:14> 'unsigned long long' '&'
| | |           | | | | | |     |   |-ImplicitCastExpr 0x9e87c8 <col:8, col:10> 'unsigned long long' <IntegralCast>
| | |           | | | | | |     |   | `-ImplicitCastExpr 0x9e87b0 <col:8, col:10> '__uint64_t':'unsigned long' <LValueToRValue>
| | |           | | | | | |     |   |   `-ParenExpr 0x9e8770 <col:8, col:10> '__uint64_t':'unsigned long' lvalue
| | |           | | | | | |     |   |     `-DeclRefExpr 0x9e8750 <line:75:31> '__uint64_t':'unsigned long' lvalue ParmVar 0x9e8480 '__bsx' '__uint64_t':'unsigned long'
| | |           | | | | | |     |   `-IntegerLiteral 0x9e8790 <line:61:14> 'unsigned long long' 71776119061217280
| | |           | | | | | |     `-IntegerLiteral 0x9e8820 <col:40> 'int' 40
| | |           | | | | | `-ParenExpr 0x9e89b0 <line:62:6, col:42> 'unsigned long long'
| | |           | | | | |   `-BinaryOperator 0x9e8990 <col:7, col:40> 'unsigned long long' '>>'
| | |           | | | | |     |-ParenExpr 0x9e8950 <col:7, col:35> 'unsigned long long'
| | |           | | | | |     | `-BinaryOperator 0x9e8930 <col:8, col:14> 'unsigned long long' '&'
| | |           | | | | |     |   |-ImplicitCastExpr 0x9e8918 <col:8, col:10> 'unsigned long long' <IntegralCast>
| | |           | | | | |     |   | `-ImplicitCastExpr 0x9e8900 <col:8, col:10> '__uint64_t':'unsigned long' <LValueToRValue>
| | |           | | | | |     |   |   `-ParenExpr 0x9e88c0 <col:8, col:10> '__uint64_t':'unsigned long' lvalue
| | |           | | | | |     |   |     `-DeclRefExpr 0x9e88a0 <line:75:31> '__uint64_t':'unsigned long' lvalue ParmVar 0x9e8480 '__bsx' '__uint64_t':'unsigned long'
| | |           | | | | |     |   `-IntegerLiteral 0x9e88e0 <line:62:14> 'unsigned long long' 280375465082880
| | |           | | | | |     `-IntegerLiteral 0x9e8970 <col:40> 'int' 24
| | |           | | | | `-ParenExpr 0x9e8b00 <line:63:6, col:41> 'unsigned long long'
| | |           | | | |   `-BinaryOperator 0x9e8ae0 <col:7, col:40> 'unsigned long long' '>>'
| | |           | | | |     |-ParenExpr 0x9e8aa0 <col:7, col:35> 'unsigned long long'
| | |           | | | |     | `-BinaryOperator 0x9e8a80 <col:8, col:14> 'unsigned long long' '&'
| | |           | | | |     |   |-ImplicitCastExpr 0x9e8a68 <col:8, col:10> 'unsigned long long' <IntegralCast>
| | |           | | | |     |   | `-ImplicitCastExpr 0x9e8a50 <col:8, col:10> '__uint64_t':'unsigned long' <LValueToRValue>
| | |           | | | |     |   |   `-ParenExpr 0x9e8a10 <col:8, col:10> '__uint64_t':'unsigned long' lvalue
| | |           | | | |     |   |     `-DeclRefExpr 0x9e89f0 <line:75:31> '__uint64_t':'unsigned long' lvalue ParmVar 0x9e8480 '__bsx' '__uint64_t':'unsigned long'
| | |           | | | |     |   `-IntegerLiteral 0x9e8a30 <line:63:14> 'unsigned long long' 1095216660480
| | |           | | | |     `-IntegerLiteral 0x9e8ac0 <col:40> 'int' 8
| | |           | | | `-ParenExpr 0x9e8c50 <line:64:6, col:41> 'unsigned long long'
| | |           | | |   `-BinaryOperator 0x9e8c30 <col:7, col:40> 'unsigned long long' '<<'
| | |           | | |     |-ParenExpr 0x9e8bf0 <col:7, col:35> 'unsigned long long'
| | |           | | |     | `-BinaryOperator 0x9e8bd0 <col:8, col:14> 'unsigned long long' '&'
| | |           | | |     |   |-ImplicitCastExpr 0x9e8bb8 <col:8, col:10> 'unsigned long long' <IntegralCast>
| | |           | | |     |   | `-ImplicitCastExpr 0x9e8ba0 <col:8, col:10> '__uint64_t':'unsigned long' <LValueToRValue>
| | |           | | |     |   |   `-ParenExpr 0x9e8b60 <col:8, col:10> '__uint64_t':'unsigned long' lvalue
| | |           | | |     |   |     `-DeclRefExpr 0x9e8b40 <line:75:31> '__uint64_t':'unsigned long' lvalue ParmVar 0x9e8480 '__bsx' '__uint64_t':'unsigned long'
| | |           | | |     |   `-IntegerLiteral 0x9e8b80 <line:64:14> 'unsigned long long' 4278190080
| | |           | | |     `-IntegerLiteral 0x9e8c10 <col:40> 'int' 8
| | |           | | `-ParenExpr 0x9e8da0 <line:65:6, col:42> 'unsigned long long'
| | |           | |   `-BinaryOperator 0x9e8d80 <col:7, col:40> 'unsigned long long' '<<'
| | |           | |     |-ParenExpr 0x9e8d40 <col:7, col:35> 'unsigned long long'
| | |           | |     | `-BinaryOperator 0x9e8d20 <col:8, col:14> 'unsigned long long' '&'
| | |           | |     |   |-ImplicitCastExpr 0x9e8d08 <col:8, col:10> 'unsigned long long' <IntegralCast>
| | |           | |     |   | `-ImplicitCastExpr 0x9e8cf0 <col:8, col:10> '__uint64_t':'unsigned long' <LValueToRValue>
| | |           | |     |   |   `-ParenExpr 0x9e8cb0 <col:8, col:10> '__uint64_t':'unsigned long' lvalue
| | |           | |     |   |     `-DeclRefExpr 0x9e8c90 <line:75:31> '__uint64_t':'unsigned long' lvalue ParmVar 0x9e8480 '__bsx' '__uint64_t':'unsigned long'
| | |           | |     |   `-IntegerLiteral 0x9e8cd0 <line:65:14> 'unsigned long long' 16711680
| | |           | |     `-IntegerLiteral 0x9e8d60 <col:40> 'int' 24
| | |           | `-ParenExpr 0x9e8ef0 <line:66:6, col:42> 'unsigned long long'
| | |           |   `-BinaryOperator 0x9e8ed0 <col:7, col:40> 'unsigned long long' '<<'
| | |           |     |-ParenExpr 0x9e8e90 <col:7, col:35> 'unsigned long long'
| | |           |     | `-BinaryOperator 0x9e8e70 <col:8, col:14> 'unsigned long long' '&'
| | |           |     |   |-ImplicitCastExpr 0x9e8e58 <col:8, col:10> 'unsigned long long' <IntegralCast>
| | |           |     |   | `-ImplicitCastExpr 0x9e8e40 <col:8, col:10> '__uint64_t':'unsigned long' <LValueToRValue>
| | |           |     |   |   `-ParenExpr 0x9e8e00 <col:8, col:10> '__uint64_t':'unsigned long' lvalue
| | |           |     |   |     `-DeclRefExpr 0x9e8de0 <line:75:31> '__uint64_t':'unsigned long' lvalue ParmVar 0x9e8480 '__bsx' '__uint64_t':'unsigned long'
| | |           |     |   `-IntegerLiteral 0x9e8e20 <line:66:14> 'unsigned long long' 65280
| | |           |     `-IntegerLiteral 0x9e8eb0 <col:40> 'int' 40
| | |           `-ParenExpr 0x9e9040 <line:67:6, col:42> 'unsigned long long'
| | |             `-BinaryOperator 0x9e9020 <col:7, col:40> 'unsigned long long' '<<'
| | |               |-ParenExpr 0x9e8fe0 <col:7, col:35> 'unsigned long long'
| | |               | `-BinaryOperator 0x9e8fc0 <col:8, col:14> 'unsigned long long' '&'
| | |               |   |-ImplicitCastExpr 0x9e8fa8 <col:8, col:10> 'unsigned long long' <IntegralCast>
| | |               |   | `-ImplicitCastExpr 0x9e8f90 <col:8, col:10> '__uint64_t':'unsigned long' <LValueToRValue>
| | |               |   |   `-ParenExpr 0x9e8f50 <col:8, col:10> '__uint64_t':'unsigned long' lvalue
| | |               |   |     `-DeclRefExpr 0x9e8f30 <line:75:31> '__uint64_t':'unsigned long' lvalue ParmVar 0x9e8480 '__bsx' '__uint64_t':'unsigned long'
| | |               |   `-IntegerLiteral 0x9e8f70 <line:67:14> 'unsigned long long' 255
| | |               `-IntegerLiteral 0x9e9000 <col:40> 'int' 56
| | |-FunctionDecl 0x9e9180 </usr/include/x86_64-linux-gnu/bits/uintn-identity.h:32:1, line:36:1> line:33:1 __uint16_identity '__uint16_t (__uint16_t)' static inline
| | | |-ParmVarDecl 0x9e90f0 <col:20, col:31> col:31 used __x '__uint16_t':'unsigned short'
| | | `-CompoundStmt 0x9e9270 <line:34:1, line:36:1>
| | |   `-ReturnStmt 0x9e9260 <line:35:3, col:10>
| | |     `-ImplicitCastExpr 0x9e9248 <col:10> '__uint16_t':'unsigned short' <LValueToRValue>
| | |       `-DeclRefExpr 0x9e9228 <col:10> '__uint16_t':'unsigned short' lvalue ParmVar 0x9e90f0 '__x' '__uint16_t':'unsigned short'
| | |-FunctionDecl 0x9e9328 <line:38:1, line:42:1> line:39:1 __uint32_identity '__uint32_t (__uint32_t)' static inline
| | | |-ParmVarDecl 0x9e9298 <col:20, col:31> col:31 used __x '__uint32_t':'unsigned int'
| | | `-CompoundStmt 0x9e9418 <line:40:1, line:42:1>
| | |   `-ReturnStmt 0x9e9408 <line:41:3, col:10>
| | |     `-ImplicitCastExpr 0x9e93f0 <col:10> '__uint32_t':'unsigned int' <LValueToRValue>
| | |       `-DeclRefExpr 0x9e93d0 <col:10> '__uint32_t':'unsigned int' lvalue ParmVar 0x9e9298 '__x' '__uint32_t':'unsigned int'
| | |-FunctionDecl 0x9e94d0 <line:44:1, line:48:1> line:45:1 __uint64_identity '__uint64_t (__uint64_t)' static inline
| | | |-ParmVarDecl 0x9e9440 <col:20, col:31> col:31 used __x '__uint64_t':'unsigned long'
| | | `-CompoundStmt 0x9e95c0 <line:46:1, line:48:1>
| | |   `-ReturnStmt 0x9e95b0 <line:47:3, col:10>
| | |     `-ImplicitCastExpr 0x9e9598 <col:10> '__uint64_t':'unsigned long' <LValueToRValue>
| | |       `-DeclRefExpr 0x9e9578 <col:10> '__uint64_t':'unsigned long' lvalue ParmVar 0x9e9440 '__x' '__uint64_t':'unsigned long'
| | |-CXXRecordDecl 0x9e95d8 </usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h:5:9, line:8:1> line:5:9 struct definition
| | | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | | |-DefaultConstructor exists trivial needs_implicit
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | `-FieldDecl 0x9e98a0 <line:7:3, col:41> col:21 __val 'unsigned long [16]'
| | |-TypedefDecl 0x9e9968 <line:5:1, line:8:3> col:3 referenced __sigset_t 'struct __sigset_t':'__sigset_t'
| | | `-ElaboratedType 0x9e9910 'struct __sigset_t' sugar
| | |   `-RecordType 0x9e9670 '__sigset_t'
| | |     `-CXXRecord 0x9e95d8 ''
| | |-TypedefDecl 0x9e9a10 </usr/include/x86_64-linux-gnu/bits/types/sigset_t.h:7:1, col:20> col:20 sigset_t '__sigset_t':'__sigset_t'
| | | `-TypedefType 0x9e99e0 '__sigset_t' sugar
| | |   |-Typedef 0x9e9968 '__sigset_t'
| | |   `-ElaboratedType 0x9e9910 'struct __sigset_t' sugar
| | |     `-RecordType 0x9e9670 '__sigset_t'
| | |       `-CXXRecord 0x9e95d8 ''
| | |-CXXRecordDecl 0x9e9a68 </usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h:8:1, line:12:1> line:8:8 struct timeval definition
| | | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | | |-DefaultConstructor exists trivial needs_implicit
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-CXXRecordDecl 0x9e9b88 <col:1, col:8> col:8 implicit struct timeval
| | | |-FieldDecl 0x9e9c28 <line:10:3, col:12> col:12 tv_sec '__time_t':'long'
| | | `-FieldDecl 0x9e9c88 <line:11:3, col:17> col:17 tv_usec '__suseconds_t':'long'
| | |-CXXRecordDecl 0x9e9cf0 </usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h:10:1, line:26:1> line:10:8 struct timespec definition
| | | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | | |-DefaultConstructor exists trivial needs_implicit
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-CXXRecordDecl 0x9e9e08 <col:1, col:8> col:8 implicit struct timespec
| | | |-FieldDecl 0x9f3230 <line:12:3, col:12> col:12 tv_sec '__time_t':'long'
| | | `-FieldDecl 0x9f32b0 <line:16:3, col:21> col:21 tv_nsec '__syscall_slong_t':'long'
| | |-TypedefDecl 0x9f3330 </usr/include/x86_64-linux-gnu/sys/select.h:49:1, col:18> col:18 referenced __fd_mask 'long'
| | | `-BuiltinType 0x7db3a0 'long'
| | |-CXXRecordDecl 0x9f3388 <line:59:9, line:70:3> line:59:9 struct definition
| | | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | | |-DefaultConstructor exists trivial needs_implicit
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | `-FieldDecl 0x9f36b8 <line:64:5, col:48> col:15 fds_bits '__fd_mask [16]'
| | |-TypedefDecl 0x9f3778 <line:59:1, line:70:5> col:5 referenced fd_set 'struct fd_set':'fd_set'
| | | `-ElaboratedType 0x9f3720 'struct fd_set' sugar
| | |   `-RecordType 0x9f3420 'fd_set'
| | |     `-CXXRecord 0x9f3388 ''
| | |-TypedefDecl 0x9f37f8 <line:77:1, col:19> col:19 fd_mask '__fd_mask':'long'
| | | `-TypedefType 0x9f34b0 '__fd_mask' sugar
| | |   |-Typedef 0x9f3330 '__fd_mask'
| | |   `-BuiltinType 0x7db3a0 'long'
| | |-LinkageSpecDecl 0x9f3870 </usr/include/x86_64-linux-gnu/sys/cdefs.h:114:24, line:115:22> line:114:31 C
| | | |-FunctionDecl 0x9f3d30 </usr/include/x86_64-linux-gnu/sys/select.h:101:1, line:104:42> line:101:12 select 'int (int, fd_set *__restrict, fd_set *__restrict, fd_set *__restrict, struct timeval *__restrict)' extern
| | | | |-ParmVarDecl 0x9f38d8 <col:20, col:24> col:24 __nfds 'int'
| | | | |-ParmVarDecl 0x9f39c8 <col:32, col:51> col:51 __readfds 'fd_set *__restrict'
| | | | |-ParmVarDecl 0x9f3a40 <line:102:6, col:25> col:25 __writefds 'fd_set *__restrict'
| | | | |-ParmVarDecl 0x9f3ab8 <line:103:6, col:25> col:25 __exceptfds 'fd_set *__restrict'
| | | | `-ParmVarDecl 0x9f3bd0 <line:104:6, col:33> col:33 __timeout 'struct timeval *__restrict'
| | | `-FunctionDecl 0x9f42e0 <line:113:1, line:117:45> line:113:12 pselect 'int (int, fd_set *__restrict, fd_set *__restrict, fd_set *__restrict, const struct timespec *__restrict, const __sigset_t *__restrict)' extern
| | |   |-ParmVarDecl 0x9f3e10 <col:21, col:25> col:25 __nfds 'int'
| | |   |-ParmVarDecl 0x9f3e88 <col:33, col:52> col:52 __readfds 'fd_set *__restrict'
| | |   |-ParmVarDecl 0x9f3f00 <line:114:7, col:26> col:26 __writefds 'fd_set *__restrict'
| | |   |-ParmVarDecl 0x9f3f78 <line:115:7, col:26> col:26 __exceptfds 'fd_set *__restrict'
| | |   |-ParmVarDecl 0x9f4090 <line:116:7, col:41> col:41 __timeout 'const struct timespec *__restrict'
| | |   `-ParmVarDecl 0x9f4168 <line:117:7, col:36> col:36 __sigmask 'const __sigset_t *__restrict'
| | |-TypedefDecl 0x9f43e0 </usr/include/x86_64-linux-gnu/sys/types.h:185:1, col:21> col:21 blksize_t '__blksize_t':'long'
| | | `-TypedefType 0x9f43b0 '__blksize_t' sugar
| | |   |-Typedef 0x8d93c0 '__blksize_t'
| | |   `-BuiltinType 0x7db3a0 'long'
| | |-TypedefDecl 0x9f4470 <line:192:1, col:20> col:20 blkcnt_t '__blkcnt_t':'long'
| | | `-TypedefType 0x9f4440 '__blkcnt_t' sugar
| | |   |-Typedef 0x8d9430 '__blkcnt_t'
| | |   `-BuiltinType 0x7db3a0 'long'
| | |-TypedefDecl 0x9f4500 <line:196:1, col:22> col:22 fsblkcnt_t '__fsblkcnt_t':'unsigned long'
| | | `-TypedefType 0x9f44d0 '__fsblkcnt_t' sugar
| | |   |-Typedef 0x8d9510 '__fsblkcnt_t'
| | |   `-BuiltinType 0x7db440 'unsigned long'
| | |-TypedefDecl 0x9f4590 <line:200:1, col:22> col:22 fsfilcnt_t '__fsfilcnt_t':'unsigned long'
| | | `-TypedefType 0x9f4560 '__fsfilcnt_t' sugar
| | |   |-Typedef 0x8d95f0 '__fsfilcnt_t'
| | |   `-BuiltinType 0x7db440 'unsigned long'
| | |-TypedefDecl 0x9f4620 <line:219:1, col:22> col:22 blkcnt64_t '__blkcnt64_t':'long'
| | | `-TypedefType 0x9f45f0 '__blkcnt64_t' sugar
| | |   |-Typedef 0x8d94a0 '__blkcnt64_t'
| | |   `-BuiltinType 0x7db3a0 'long'
| | |-TypedefDecl 0x9f46b0 <line:220:1, col:24> col:24 fsblkcnt64_t '__fsblkcnt64_t':'unsigned long'
| | | `-TypedefType 0x9f4680 '__fsblkcnt64_t' sugar
| | |   |-Typedef 0x8d9580 '__fsblkcnt64_t'
| | |   `-BuiltinType 0x7db440 'unsigned long'
| | |-TypedefDecl 0x9f4740 <line:221:1, col:24> col:24 fsfilcnt64_t '__fsfilcnt64_t':'unsigned long'
| | | `-TypedefType 0x9f4710 '__fsfilcnt64_t' sugar
| | |   |-Typedef 0x8d9660 '__fsfilcnt64_t'
| | |   `-BuiltinType 0x7db440 'unsigned long'
| | |-CXXRecordDecl 0x9f4798 </usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:49:9, line:53:1> line:49:16 struct __pthread_internal_list definition
| | | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | | |-DefaultConstructor exists trivial needs_implicit
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-CXXRecordDecl 0x9f48b8 <col:9, col:16> col:16 implicit struct __pthread_internal_list
| | | |-FieldDecl 0x9f4a00 <line:51:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| | | `-FieldDecl 0x9f4a78 <line:52:3, col:35> col:35 __next 'struct __pthread_internal_list *'
| | |-TypedefDecl 0x9f4b38 <line:49:1, line:53:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'__pthread_internal_list'
| | | `-ElaboratedType 0x9f4ae0 'struct __pthread_internal_list' sugar
| | |   `-RecordType 0x9f4830 '__pthread_internal_list'
| | |     `-CXXRecord 0x9f4798 '__pthread_internal_list'
| | |-CXXRecordDecl 0x9f4ba8 <line:55:9, line:58:1> line:55:16 struct __pthread_internal_slist definition
| | | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | | |-DefaultConstructor exists trivial needs_implicit
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-CXXRecordDecl 0x9f4cc8 <col:9, col:16> col:16 implicit struct __pthread_internal_slist
| | | `-FieldDecl 0x9f4e10 <line:57:3, col:36> col:36 __next 'struct __pthread_internal_slist *'
| | |-TypedefDecl 0x9f4ed8 <line:55:1, line:58:3> col:3 __pthread_slist_t 'struct __pthread_internal_slist':'__pthread_internal_slist'
| | | `-ElaboratedType 0x9f4e80 'struct __pthread_internal_slist' sugar
| | |   `-RecordType 0x9f4c40 '__pthread_internal_slist'
| | |     `-CXXRecord 0x9f4ba8 '__pthread_internal_slist'
| | |-CXXRecordDecl 0x9f4f48 </usr/include/x86_64-linux-gnu/bits/struct_mutex.h:22:1, line:53:1> line:22:8 struct __pthread_mutex_s definition
| | | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | | |-DefaultConstructor exists trivial needs_implicit
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-CXXRecordDecl 0x9f5068 <col:1, col:8> col:8 implicit struct __pthread_mutex_s
| | | |-FieldDecl 0x9f5110 <line:24:3, col:7> col:7 __lock 'int'
| | | |-FieldDecl 0x9f5178 <line:25:3, col:16> col:16 __count 'unsigned int'
| | | |-FieldDecl 0x9f51e0 <line:26:3, col:7> col:7 __owner 'int'
| | | |-FieldDecl 0x9fc918 <line:28:3, col:16> col:16 __nusers 'unsigned int'
| | | |-FieldDecl 0x9fc980 <line:32:3, col:7> col:7 __kind 'int'
| | | |-FieldDecl 0x9fc9e8 <line:34:3, col:9> col:9 __spins 'short'
| | | |-FieldDecl 0x9fca50 <line:35:3, col:9> col:9 __elision 'short'
| | | `-FieldDecl 0x9fcad0 <line:36:3, col:20> col:20 __list '__pthread_list_t':'__pthread_internal_list'
| | |-CXXRecordDecl 0x9fcb38 </usr/include/x86_64-linux-gnu/bits/struct_rwlock.h:23:1, line:55:1> line:23:8 struct __pthread_rwlock_arch_t definition
| | | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | | |-DefaultConstructor exists trivial needs_implicit
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-CXXRecordDecl 0x9fcc58 <col:1, col:8> col:8 implicit struct __pthread_rwlock_arch_t
| | | |-FieldDecl 0x9fcd00 <line:25:3, col:16> col:16 __readers 'unsigned int'
| | | |-FieldDecl 0x9fcd68 <line:26:3, col:16> col:16 __writers 'unsigned int'
| | | |-FieldDecl 0x9fcdd0 <line:27:3, col:16> col:16 __wrphase_futex 'unsigned int'
| | | |-FieldDecl 0x9fce38 <line:28:3, col:16> col:16 __writers_futex 'unsigned int'
| | | |-FieldDecl 0x9fcea0 <line:29:3, col:16> col:16 __pad3 'unsigned int'
| | | |-FieldDecl 0x9fcf08 <line:30:3, col:16> col:16 __pad4 'unsigned int'
| | | |-FieldDecl 0x9fcf70 <line:32:3, col:7> col:7 __cur_writer 'int'
| | | |-FieldDecl 0x9fcfd8 <line:33:3, col:7> col:7 __shared 'int'
| | | |-FieldDecl 0x9fd040 <line:34:3, col:15> col:15 __rwelision 'signed char'
| | | |-FieldDecl 0x9fd130 <line:39:3, col:25> col:17 __pad1 'unsigned char [7]'
| | | |-FieldDecl 0x9fd198 <line:42:3, col:21> col:21 __pad2 'unsigned long'
| | | `-FieldDecl 0x9fd200 <line:45:3, col:16> col:16 __flags 'unsigned int'
| | |-CXXRecordDecl 0x9fd268 </usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:92:1, line:117:1> line:92:8 struct __pthread_cond_s definition
| | | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | | | |-DefaultConstructor exists trivial needs_implicit
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-CXXRecordDecl 0x9fd388 <col:1, col:8> col:8 implicit struct __pthread_cond_s
| | | |-CXXRecordDecl 0x9fd418 <line:94:17, line:102:3> line:94:17 union definition
| | | | |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | | | | |-DefaultConstructor exists trivial needs_implicit
| | | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | | `-Destructor simple irrelevant trivial needs_implicit
| | | | |-FieldDecl 0x9fd550 <line:96:19, col:42> col:42 __wseq 'unsigned long long'
| | | | |-CXXRecordDecl 0x9fd5a0 <line:97:5, line:101:5> line:97:5 struct definition
| | | | | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | | | | |-DefaultConstructor exists trivial needs_implicit
| | | | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | | | `-Destructor simple irrelevant trivial needs_implicit
| | | | | |-FieldDecl 0x9fd6d0 <line:99:7, col:20> col:20 __low 'unsigned int'
| | | | | `-FieldDecl 0x9fd738 <line:100:7, col:20> col:20 __high 'unsigned int'
| | | | `-FieldDecl 0x9fd7f8 <line:97:5, line:101:7> col:7 __wseq32 'struct (anonymous struct at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:97:5)':'__pthread_cond_s::(anonymous struct at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:97:5)'
| | | |-FieldDecl 0x9fd8d8 <line:94:17> col:17 implicit '__pthread_cond_s::(anonymous union at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:94:17)'
| | | |-IndirectFieldDecl 0x9fd938 <line:96:42> col:42 implicit __wseq 'unsigned long long'
| | | | |-Field 0x9fd8d8 '' '__pthread_cond_s::(anonymous union at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:94:17)'
| | | | `-Field 0x9fd550 '__wseq' 'unsigned long long'
| | | |-IndirectFieldDecl 0x9fd990 <line:101:7> col:7 implicit __wseq32 'struct (anonymous struct at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:97:5)':'__pthread_cond_s::(anonymous struct at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:97:5)'
| | | | |-Field 0x9fd8d8 '' '__pthread_cond_s::(anonymous union at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:94:17)'
| | | | `-Field 0x9fd7f8 '__wseq32' 'struct (anonymous struct at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:97:5)':'__pthread_cond_s::(anonymous struct at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:97:5)'
| | | |-CXXRecordDecl 0x9fd9d8 <line:103:17, line:111:3> line:103:17 union definition
| | | | |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | | | | |-DefaultConstructor exists trivial needs_implicit
| | | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | | `-Destructor simple irrelevant trivial needs_implicit
| | | | |-FieldDecl 0x9fdb10 <line:105:19, col:42> col:42 __g1_start 'unsigned long long'
| | | | |-CXXRecordDecl 0x9fdb60 <line:106:5, line:110:5> line:106:5 struct definition
| | | | | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | | | | |-DefaultConstructor exists trivial needs_implicit
| | | | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | | | `-Destructor simple irrelevant trivial needs_implicit
| | | | | |-FieldDecl 0x9fdc90 <line:108:7, col:20> col:20 __low 'unsigned int'
| | | | | `-FieldDecl 0x9fdcf8 <line:109:7, col:20> col:20 __high 'unsigned int'
| | | | `-FieldDecl 0x9fddb8 <line:106:5, line:110:7> col:7 __g1_start32 'struct (anonymous struct at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:106:5)':'__pthread_cond_s::(anonymous struct at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:106:5)'
| | | |-FieldDecl 0x9fde98 <line:103:17> col:17 implicit '__pthread_cond_s::(anonymous union at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:103:17)'
| | | |-IndirectFieldDecl 0x9fdef8 <line:105:42> col:42 implicit __g1_start 'unsigned long long'
| | | | |-Field 0x9fde98 '' '__pthread_cond_s::(anonymous union at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:103:17)'
| | | | `-Field 0x9fdb10 '__g1_start' 'unsigned long long'
| | | |-IndirectFieldDecl 0x9fdf50 <line:110:7> col:7 implicit __g1_start32 'struct (anonymous struct at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:106:5)':'__pthread_cond_s::(anonymous struct at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:106:5)'
| | | | |-Field 0x9fde98 '' '__pthread_cond_s::(anonymous union at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:103:17)'
| | | | `-Field 0x9fddb8 '__g1_start32' 'struct (anonymous struct at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:106:5)':'__pthread_cond_s::(anonymous struct at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:106:5)'
| | | |-FieldDecl 0x9fe040 <line:112:3, col:26> col:16 __g_refs 'unsigned int [2]'
| | | |-FieldDecl 0x9fe0f8 <line:113:3, col:26> col:16 __g_size 'unsigned int [2]'
| | | |-FieldDecl 0x9fe160 <line:114:3, col:16> col:16 __g1_orig_size 'unsigned int'
| | | |-FieldDecl 0x9fe1c8 <line:115:3, col:16> col:16 __wrefs 'unsigned int'
| | | `-FieldDecl 0x9fe280 <line:116:3, col:29> col:16 __g_signals 'unsigned int [2]'
| | |-TypedefDecl 0x9fe480 </usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:27:1, col:27> col:27 pthread_t 'unsigned long'
| | | `-BuiltinType 0x7db440 'unsigned long'
| | |-CXXRecordDecl 0x9fe4d8 <line:32:9, line:36:1> line:32:9 union definition
| | | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | | | |-DefaultConstructor exists trivial needs_implicit
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-FieldDecl 0x9fe658 <line:34:3, col:43> col:8 __size 'char [4]'
| | | `-FieldDecl 0x9fe6c0 <line:35:3, col:7> col:7 __align 'int'
| | |-TypedefDecl 0x9fe788 <line:32:1, line:36:3> col:3 pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| | | `-ElaboratedType 0x9fe730 'union pthread_mutexattr_t' sugar
| | |   `-RecordType 0x9fe570 'pthread_mutexattr_t'
| | |     `-CXXRecord 0x9fe4d8 ''
| | |-CXXRecordDecl 0x9fe7f8 <line:41:9, line:45:1> line:41:9 union definition
| | | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | | | |-DefaultConstructor exists trivial needs_implicit
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-FieldDecl 0xa01768 <line:43:3, col:42> col:8 __size 'char [4]'
| | | `-FieldDecl 0xa017d0 <line:44:3, col:7> col:7 __align 'int'
| | |-TypedefDecl 0xa01898 <line:41:1, line:45:3> col:3 pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| | | `-ElaboratedType 0xa01840 'union pthread_condattr_t' sugar
| | |   `-RecordType 0x9fe890 'pthread_condattr_t'
| | |     `-CXXRecord 0x9fe7f8 ''
| | |-TypedefDecl 0xa01920 <line:49:1, col:22> col:22 pthread_key_t 'unsigned int'
| | | `-BuiltinType 0x7db420 'unsigned int'
| | |-TypedefDecl 0xa01990 <line:53:1, col:30> col:30 pthread_once_t 'int'
| | | `-BuiltinType 0x7db380 'int'
| | |-CXXRecordDecl 0xa019e8 <line:56:1, line:60:1> line:56:7 union pthread_attr_t definition
| | | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | | | |-DefaultConstructor exists trivial needs_implicit
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-CXXRecordDecl 0xa01b08 <col:1, col:7> col:7 implicit union pthread_attr_t
| | | |-FieldDecl 0xa01c38 <line:58:3, col:38> col:8 __size 'char [56]'
| | | `-FieldDecl 0xa01ca0 <line:59:3, col:12> col:12 __align 'long'
| | |-TypedefDecl 0xa01d60 <line:62:1, col:30> col:30 pthread_attr_t 'union pthread_attr_t':'pthread_attr_t'
| | | `-ElaboratedType 0xa01d10 'union pthread_attr_t' sugar
| | |   `-RecordType 0xa01a80 'pthread_attr_t'
| | |     `-CXXRecord 0xa019e8 'pthread_attr_t'
| | |-CXXRecordDecl 0xa01db8 <line:67:9, line:72:1> line:67:9 union definition
| | | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | | | |-DefaultConstructor exists trivial needs_implicit
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-FieldDecl 0xa01f30 <line:69:3, col:28> col:28 __data 'struct __pthread_mutex_s':'__pthread_mutex_s'
| | | |-FieldDecl 0xa02018 <line:70:3, col:39> col:8 __size 'char [40]'
| | | `-FieldDecl 0xa02080 <line:71:3, col:12> col:12 __align 'long'
| | |-TypedefDecl 0xa022f8 <line:67:1, line:72:3> col:3 pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| | | `-ElaboratedType 0xa022a0 'union pthread_mutex_t' sugar
| | |   `-RecordType 0xa01e50 'pthread_mutex_t'
| | |     `-CXXRecord 0xa01db8 ''
| | |-CXXRecordDecl 0xa02368 <line:75:9, line:80:1> line:75:9 union definition
| | | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | | | |-DefaultConstructor exists trivial needs_implicit
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-FieldDecl 0xa024e0 <line:77:3, col:27> col:27 __data 'struct __pthread_cond_s':'__pthread_cond_s'
| | | |-FieldDecl 0xa025c8 <line:78:3, col:38> col:8 __size 'char [48]'
| | | `-FieldDecl 0xa02630 <line:79:17, col:31> col:31 __align 'long long'
| | |-TypedefDecl 0xa02958 <line:75:1, line:80:3> col:3 pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| | | `-ElaboratedType 0xa02900 'union pthread_cond_t' sugar
| | |   `-RecordType 0xa02400 'pthread_cond_t'
| | |     `-CXXRecord 0xa02368 ''
| | |-CXXRecordDecl 0xa029c8 <line:86:9, line:91:1> line:86:9 union definition
| | | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | | | |-DefaultConstructor exists trivial needs_implicit
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-FieldDecl 0xa02b40 <line:88:3, col:34> col:34 __data 'struct __pthread_rwlock_arch_t':'__pthread_rwlock_arch_t'
| | | |-FieldDecl 0xa02bf0 <line:89:3, col:40> col:8 __size 'char [56]'
| | | `-FieldDecl 0xa02c58 <line:90:3, col:12> col:12 __align 'long'
| | |-TypedefDecl 0xa02e28 <line:86:1, line:91:3> col:3 pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| | | `-ElaboratedType 0xa02dd0 'union pthread_rwlock_t' sugar
| | |   `-RecordType 0xa02a60 'pthread_rwlock_t'
| | |     `-CXXRecord 0xa029c8 ''
| | |-CXXRecordDecl 0xa02e98 <line:93:9, line:97:1> line:93:9 union definition
| | | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | | | |-DefaultConstructor exists trivial needs_implicit
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-FieldDecl 0xa03018 <line:95:3, col:44> col:8 __size 'char [8]'
| | | `-FieldDecl 0xa03080 <line:96:3, col:12> col:12 __align 'long'
| | |-TypedefDecl 0xa03148 <line:93:1, line:97:3> col:3 pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| | | `-ElaboratedType 0xa030f0 'union pthread_rwlockattr_t' sugar
| | |   `-RecordType 0xa02f30 'pthread_rwlockattr_t'
| | |     `-CXXRecord 0xa02e98 ''
| | |-TypedefDecl 0xa031d0 <line:103:1, col:22> col:22 pthread_spinlock_t 'volatile int'
| | | `-QualType 0x7db384 'volatile int' volatile
| | |   `-BuiltinType 0x7db380 'int'
| | |-CXXRecordDecl 0xa03228 <line:108:9, line:112:1> line:108:9 union definition
| | | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | | | |-DefaultConstructor exists trivial needs_implicit
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-FieldDecl 0xa033e8 <line:110:3, col:41> col:8 __size 'char [32]'
| | | `-FieldDecl 0xa03450 <line:111:3, col:12> col:12 __align 'long'
| | |-TypedefDecl 0xa03518 <line:108:1, line:112:3> col:3 pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| | | `-ElaboratedType 0xa034c0 'union pthread_barrier_t' sugar
| | |   `-RecordType 0xa032c0 'pthread_barrier_t'
| | |     `-CXXRecord 0xa03228 ''
| | |-CXXRecordDecl 0xa03588 <line:114:9, line:118:1> line:114:9 union definition
| | | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | | | |-DefaultConstructor exists trivial needs_implicit
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-FieldDecl 0xa05a68 <line:116:3, col:45> col:8 __size 'char [4]'
| | | `-FieldDecl 0xa05ad0 <line:117:3, col:7> col:7 __align 'int'
| | `-TypedefDecl 0xa05b98 <line:114:1, line:118:3> col:3 pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| |   `-ElaboratedType 0xa05b40 'union pthread_barrierattr_t' sugar
| |     `-RecordType 0xa03620 'pthread_barrierattr_t'
| |       `-CXXRecord 0xa03588 ''
| |-FunctionDecl 0xa05d08 </usr/include/stdlib.h:401:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/stdlib.h:401:17 random 'long () throw()' extern
| |-FunctionDecl 0xa05ec0 <line:404:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/stdlib.h:404:13 srandom 'void (unsigned int) throw()' extern
| | `-ParmVarDecl 0xa05dc0 <col:22, col:35> col:35 __seed 'unsigned int'
| |-FunctionDecl 0xa061c8 <line:410:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:410:14 initstate 'char *(unsigned int, char *, size_t) throw()' extern
| | |-ParmVarDecl 0xa05f80 <col:25, col:38> col:38 __seed 'unsigned int'
| | |-ParmVarDecl 0xa06000 <col:46, col:52> col:52 __statebuf 'char *'
| | |-ParmVarDecl 0xa06078 <line:411:4, col:11> col:11 __statelen 'size_t':'unsigned long'
| | `-NonNullAttr 0xa06280 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:411:44> 2
| |-FunctionDecl 0xa06428 <line:415:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:415:14 setstate 'char *(char *) throw()' extern
| | |-ParmVarDecl 0xa06300 <col:24, col:30> col:30 __statebuf 'char *'
| | `-NonNullAttr 0xa064d0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:415:63> 1
| |-CXXRecordDecl 0xa06538 <line:423:1, line:432:3> line:423:8 struct random_data definition
| | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial needs_implicit
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-CXXRecordDecl 0xa06658 <col:1, col:8> col:8 implicit struct random_data
| | |-FieldDecl 0xa06748 <line:425:5, col:14> col:14 fptr 'int32_t *'
| | |-FieldDecl 0xa067a8 <line:426:5, col:14> col:14 rptr 'int32_t *'
| | |-FieldDecl 0xa06808 <line:427:5, col:14> col:14 state 'int32_t *'
| | |-FieldDecl 0xa06870 <line:428:5, col:9> col:9 rand_type 'int'
| | |-FieldDecl 0xa068d8 <line:429:5, col:9> col:9 rand_deg 'int'
| | |-FieldDecl 0xa06940 <line:430:5, col:9> col:9 rand_sep 'int'
| | `-FieldDecl 0xa069a0 <line:431:5, col:14> col:14 end_ptr 'int32_t *'
| |-FunctionDecl 0xa06c98 <line:434:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:434:12 random_r 'int (struct random_data *__restrict, int32_t *__restrict) throw()' extern
| | |-ParmVarDecl 0xa06ac0 <col:22, col:53> col:53 __buf 'struct random_data *__restrict'
| | |-ParmVarDecl 0xa06b38 <line:435:8, col:28> col:28 __result 'int32_t *__restrict'
| | `-NonNullAttr 0xa06d48 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:435:62> 1 2
| |-FunctionDecl 0xa06fa8 <line:437:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:437:12 srandom_r 'int (unsigned int, struct random_data *) throw()' extern
| | |-ParmVarDecl 0xa06dd0 <col:23, col:36> col:36 __seed 'unsigned int'
| | |-ParmVarDecl 0xa06e60 <col:44, col:64> col:64 __buf 'struct random_data *'
| | `-NonNullAttr 0xa07058 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:438:27> 2
| |-FunctionDecl 0xa073f8 <line:440:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:440:12 initstate_r 'int (unsigned int, char *__restrict, size_t, struct random_data *__restrict) throw()' extern
| | |-ParmVarDecl 0xa070e0 <col:25, col:38> col:38 __seed 'unsigned int'
| | |-ParmVarDecl 0xa07160 <col:46, col:63> col:63 __statebuf 'char *__restrict'
| | |-ParmVarDecl 0xa071d8 <line:441:4, col:11> col:11 __statelen 'size_t':'unsigned long'
| | |-ParmVarDecl 0xa07268 <line:442:4, col:35> col:35 __buf 'struct random_data *__restrict'
| | `-NonNullAttr 0xa074b8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:443:30> 2 4
| |-FunctionDecl 0xa07738 <line:445:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:445:12 setstate_r 'int (char *__restrict, struct random_data *__restrict) throw()' extern
| | |-ParmVarDecl 0xa07540 <col:24, col:41> col:41 __statebuf 'char *__restrict'
| | |-ParmVarDecl 0xa075d0 <line:446:10, col:41> col:41 __buf 'struct random_data *__restrict'
| | `-NonNullAttr 0xa077e8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:447:30> 1 2
| |-FunctionDecl 0xa07e80 <line:453:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/stdlib.h:453:12 rand 'int () throw()' extern
| |-FunctionDecl 0xa07fd0 <line:455:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/stdlib.h:455:13 srand 'void (unsigned int) throw()' extern
| | `-ParmVarDecl 0xa07f38 <col:20, col:33> col:33 __seed 'unsigned int'
| |-FunctionDecl 0xa081c8 <line:459:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/stdlib.h:459:12 rand_r 'int (unsigned int *) throw()' extern
| | `-ParmVarDecl 0xa080c0 <col:20, col:34> col:34 __seed 'unsigned int *'
| |-FunctionDecl 0xa08378 <line:467:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/stdlib.h:467:15 drand48 'double () throw()' extern
| |-FunctionDecl 0xa08648 <line:468:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:468:15 erand48 'double (unsigned short *) throw()' extern
| | |-ParmVarDecl 0xa08520 <col:24, col:52> col:43 __xsubi 'unsigned short *':'unsigned short *'
| | `-NonNullAttr 0xa086f0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:468:76> 1
| |-FunctionDecl 0xa08800 <line:471:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/stdlib.h:471:17 lrand48 'long () throw()' extern
| |-FunctionDecl 0xa08a28 <line:472:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:472:17 nrand48 'long (unsigned short *) throw()' extern
| | |-ParmVarDecl 0xa08908 <col:26, col:54> col:45 __xsubi 'unsigned short *':'unsigned short *'
| | `-NonNullAttr 0xa08ad0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:473:27> 1
| |-FunctionDecl 0xa08be0 <line:476:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/stdlib.h:476:17 mrand48 'long () throw()' extern
| |-FunctionDecl 0xa08da8 <line:477:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:477:17 jrand48 'long (unsigned short *) throw()' extern
| | |-ParmVarDecl 0xa08ce8 <col:26, col:54> col:45 __xsubi 'unsigned short *':'unsigned short *'
| | `-NonNullAttr 0xa08e50 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:478:27> 1
| |-FunctionDecl 0xa08fd0 <line:481:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/stdlib.h:481:13 srand48 'void (long) throw()' extern
| | `-ParmVarDecl 0xa08ed0 <col:22, col:31> col:31 __seedval 'long'
| |-FunctionDecl 0xa09208 <line:482:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:482:28 seed48 'unsigned short *(unsigned short *) throw()' extern
| | |-ParmVarDecl 0xa090e0 <col:36, col:66> col:55 __seed16v 'unsigned short *':'unsigned short *'
| | `-NonNullAttr 0xa092b0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:483:27> 1
| |-FunctionDecl 0xa09510 <line:484:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:484:13 lcong48 'void (unsigned short *) throw()' extern
| | |-ParmVarDecl 0xa093f0 <col:22, col:50> col:41 __param 'unsigned short *':'unsigned short *'
| | `-NonNullAttr 0xa095b8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:484:74> 1
| |-CXXRecordDecl 0xa09628 <line:490:1, line:498:3> line:490:8 struct drand48_data definition
| | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial needs_implicit
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-CXXRecordDecl 0xa09748 <col:1, col:8> col:8 implicit struct drand48_data
| | |-FieldDecl 0xa09840 <line:492:5, col:29> col:24 __x 'unsigned short [3]'
| | |-FieldDecl 0xa098f8 <line:493:5, col:33> col:24 __old_x 'unsigned short [3]'
| | |-FieldDecl 0xa09960 <line:494:5, col:24> col:24 __c 'unsigned short'
| | |-FieldDecl 0xa099c8 <line:495:5, col:24> col:24 __init 'unsigned short'
| | `-FieldDecl 0xa09a30 <line:496:19, col:42> col:42 __a 'unsigned long long'
| |-FunctionDecl 0xa09d38 <line:501:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:501:12 drand48_r 'int (struct drand48_data *__restrict, double *__restrict) throw()' extern
| | |-ParmVarDecl 0xa09b50 <col:23, col:55> col:55 __buffer 'struct drand48_data *__restrict'
| | |-ParmVarDecl 0xa09bd0 <line:502:9, col:28> col:28 __result 'double *__restrict'
| | `-NonNullAttr 0xa09de8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:502:62> 1 2
| |-FunctionDecl 0xa0a5c8 <line:503:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:503:12 erand48_r 'int (unsigned short *, struct drand48_data *__restrict, double *__restrict) throw()' extern
| | |-ParmVarDecl 0xa0a348 <col:23, col:51> col:42 __xsubi 'unsigned short *':'unsigned short *'
| | |-ParmVarDecl 0xa0a3d8 <line:504:9, col:41> col:41 __buffer 'struct drand48_data *__restrict'
| | |-ParmVarDecl 0xa0a458 <line:505:9, col:28> col:28 __result 'double *__restrict'
| | `-NonNullAttr 0xa0a680 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:505:62> 1 2
| |-FunctionDecl 0xa0a928 <line:508:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:508:12 lrand48_r 'int (struct drand48_data *__restrict, long *__restrict) throw()' extern
| | |-ParmVarDecl 0xa0a710 <col:23, col:55> col:55 __buffer 'struct drand48_data *__restrict'
| | |-ParmVarDecl 0xa0a7c0 <line:509:9, col:30> col:30 __result 'long *__restrict'
| | `-NonNullAttr 0xa0a9d8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:510:30> 1 2
| |-FunctionDecl 0xa0ad38 <line:511:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:511:12 nrand48_r 'int (unsigned short *, struct drand48_data *__restrict, long *__restrict) throw()' extern
| | |-ParmVarDecl 0xa0aab0 <col:23, col:51> col:42 __xsubi 'unsigned short *':'unsigned short *'
| | |-ParmVarDecl 0xa0ab40 <line:512:9, col:41> col:41 __buffer 'struct drand48_data *__restrict'
| | |-ParmVarDecl 0xa0abc0 <line:513:9, col:30> col:30 __result 'long *__restrict'
| | `-NonNullAttr 0xa0adf0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:514:30> 1 2
| |-FunctionDecl 0xa0afe8 <line:517:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:517:12 mrand48_r 'int (struct drand48_data *__restrict, long *__restrict) throw()' extern
| | |-ParmVarDecl 0xa0ae80 <col:23, col:55> col:55 __buffer 'struct drand48_data *__restrict'
| | |-ParmVarDecl 0xa0af00 <line:518:9, col:30> col:30 __result 'long *__restrict'
| | `-NonNullAttr 0xa0b098 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:519:30> 1 2
| |-FunctionDecl 0xa0b370 <line:520:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:520:12 jrand48_r 'int (unsigned short *, struct drand48_data *__restrict, long *__restrict) throw()' extern
| | |-ParmVarDecl 0xa0b170 <col:23, col:51> col:42 __xsubi 'unsigned short *':'unsigned short *'
| | |-ParmVarDecl 0xa0b200 <line:521:9, col:41> col:41 __buffer 'struct drand48_data *__restrict'
| | |-ParmVarDecl 0xa0b280 <line:522:9, col:30> col:30 __result 'long *__restrict'
| | `-NonNullAttr 0xa0b428 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:523:30> 1 2
| |-FunctionDecl 0xa0b688 <line:526:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:526:12 srand48_r 'int (long, struct drand48_data *) throw()' extern
| | |-ParmVarDecl 0xa0b4b0 <col:23, col:32> col:32 __seedval 'long'
| | |-ParmVarDecl 0xa0b540 <col:43, col:64> col:64 __buffer 'struct drand48_data *'
| | `-NonNullAttr 0xa0b738 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:527:27> 2
| |-FunctionDecl 0xa0ba08 <line:529:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:529:12 seed48_r 'int (unsigned short *, struct drand48_data *) throw()' extern
| | |-ParmVarDecl 0xa0b810 <col:22, col:52> col:41 __seed16v 'unsigned short *':'unsigned short *'
| | |-ParmVarDecl 0xa0b8a0 <line:530:8, col:29> col:29 __buffer 'struct drand48_data *'
| | `-NonNullAttr 0xa0bab8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:530:63> 1 2
| |-FunctionDecl 0xa0bd48 <line:532:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:532:12 lcong48_r 'int (unsigned short *, struct drand48_data *) throw()' extern
| | |-ParmVarDecl 0xa0bb90 <col:23, col:51> col:42 __param 'unsigned short *':'unsigned short *'
| | |-ParmVarDecl 0xa0bc20 <line:533:9, col:30> col:30 __buffer 'struct drand48_data *'
| | `-NonNullAttr 0xa0bdf8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:534:30> 1 2
| |-FunctionDecl 0xa0bf78 <line:539:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:208:58> /usr/include/stdlib.h:539:14 malloc 'void *(size_t) throw()' extern
| | |-ParmVarDecl 0xa0be78 <col:22, col:29> col:29 __size 'size_t':'unsigned long'
| | `-RestrictAttr 0xa0c020 </usr/include/x86_64-linux-gnu/sys/cdefs.h:208:47> malloc
| |-FunctionDecl 0xa0c228 </usr/include/stdlib.h:542:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:208:58> /usr/include/stdlib.h:542:14 calloc 'void *(size_t, size_t) throw()' extern
| | |-ParmVarDecl 0xa0c088 <col:22, col:29> col:29 __nmemb 'size_t':'unsigned long'
| | |-ParmVarDecl 0xa0c100 <col:38, col:45> col:45 __size 'size_t':'unsigned long'
| | `-RestrictAttr 0xa0c2d8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:208:47> malloc
| |-FunctionDecl 0xa10ef8 </usr/include/stdlib.h:550:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:302:43> /usr/include/stdlib.h:550:14 realloc 'void *(void *, size_t) throw()' extern
| | |-ParmVarDecl 0xa10d58 <col:23, col:29> col:29 __ptr 'void *'
| | |-ParmVarDecl 0xa10dd0 <col:36, col:43> col:43 __size 'size_t':'unsigned long'
| | `-WarnUnusedResultAttr 0xa10fa8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:302:20> warn_unused_result ""
| |-FunctionDecl 0xa11248 </usr/include/stdlib.h:559:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:302:43> /usr/include/stdlib.h:559:14 reallocarray 'void *(void *, size_t, size_t) throw()' extern
| | |-ParmVarDecl 0xa11020 <col:28, col:34> col:34 __ptr 'void *'
| | |-ParmVarDecl 0xa11098 <col:41, col:48> col:48 __nmemb 'size_t':'unsigned long'
| | |-ParmVarDecl 0xa11110 <col:57, col:64> col:64 __size 'size_t':'unsigned long'
| | `-WarnUnusedResultAttr 0xa11300 </usr/include/x86_64-linux-gnu/sys/cdefs.h:302:20> warn_unused_result ""
| |-FunctionDecl 0xa11470 </usr/include/stdlib.h:565:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/stdlib.h:565:13 free 'void (void *) throw()' extern
| | `-ParmVarDecl 0xa11378 <col:19, col:25> col:25 __ptr 'void *'
| |-LinkageSpecDecl 0xa11538 </usr/include/x86_64-linux-gnu/sys/cdefs.h:114:24, line:115:22> line:114:31 C
| | `-FunctionDecl 0xa11638 </usr/include/alloca.h:32:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/alloca.h:32:14 alloca 'void *(size_t) throw()' extern
| |   `-ParmVarDecl 0xa11598 <col:22, col:29> col:29 __size 'size_t':'unsigned long'
| |-FunctionDecl 0xa11790 </usr/include/stdlib.h:574:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:208:58> /usr/include/stdlib.h:574:14 valloc 'void *(size_t) throw()' extern
| | |-ParmVarDecl 0xa116f0 <col:22, col:29> col:29 __size 'size_t':'unsigned long'
| | `-RestrictAttr 0xa11838 </usr/include/x86_64-linux-gnu/sys/cdefs.h:208:47> malloc
| |-FunctionDecl 0xa11b18 </usr/include/stdlib.h:580:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:580:12 posix_memalign 'int (void **, size_t, size_t) throw()' extern
| | |-ParmVarDecl 0xa118d0 <col:28, col:35> col:35 __memptr 'void **'
| | |-ParmVarDecl 0xa11948 <col:45, col:52> col:52 __alignment 'size_t':'unsigned long'
| | |-ParmVarDecl 0xa119c0 <col:65, col:72> col:72 __size 'size_t':'unsigned long'
| | `-NonNullAttr 0xa11bd0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:581:27> 1
| |-FunctionDecl 0xa11d68 <line:586:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:208:58> /usr/include/stdlib.h:586:14 aligned_alloc 'void *(size_t, size_t) throw()' extern
| | |-ParmVarDecl 0xa11c48 <col:29, col:36> col:36 __alignment 'size_t':'unsigned long'
| | |-ParmVarDecl 0xa11cc0 <col:49, col:56> col:56 __size 'size_t':'unsigned long'
| | `-RestrictAttr 0xa11e18 </usr/include/x86_64-linux-gnu/sys/cdefs.h:208:47> malloc
| |-FunctionDecl 0xa11fd0 </usr/include/stdlib.h:591:1, col:63> col:13 abort 'void () __attribute__((noreturn)) throw()' extern
| |-FunctionDecl 0xa122c8 <line:595:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:595:12 atexit 'int (void (*)()) throw()' extern
| | |-ParmVarDecl 0xa121a8 <col:20, col:40> col:27 __func 'void (*)()'
| | `-NonNullAttr 0xa12370 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:595:64> 1
| |-LinkageSpecDecl 0xa123f8 <line:600:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:600:8 C++
| | `-FunctionDecl 0xa12658 <col:14, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:600:18 at_quick_exit 'int (void (*)()) throw()'
| |   |-ParmVarDecl 0xa124f0 <col:33, col:53> col:40 __func 'void (*)()'
| |   |-AsmLabelAttr 0xa126f8 <line:601:21> "at_quick_exit" IsLiteralLabel
| |   `-NonNullAttr 0xa12778 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:601:51> 1
| |-FunctionDecl 0xa12b88 <line:610:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:610:12 on_exit 'int (void (*)(int, void *), void *) throw()' extern
| | |-ParmVarDecl 0xa129c8 <col:21, col:62> col:28 __func 'void (*)(int, void *)'
| | |-ParmVarDecl 0xa12a48 <col:65, col:71> col:71 __arg 'void *'
| | `-NonNullAttr 0xa12c38 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:611:27> 1
| |-FunctionDecl 0xa14ec0 <line:617:1, col:70> col:13 exit 'void (int) __attribute__((noreturn)) throw()' extern
| | `-ParmVarDecl 0xa14d60 <col:19, col:23> col:23 __status 'int'
| |-FunctionDecl 0xa15018 <line:623:1, col:76> col:13 quick_exit 'void (int) __attribute__((noreturn)) throw()' extern
| | `-ParmVarDecl 0xa14f80 <col:25, col:29> col:29 __status 'int'
| |-FunctionDecl 0xa15170 <line:629:1, col:71> col:13 _Exit 'void (int) __attribute__((noreturn)) throw()' extern
| | `-ParmVarDecl 0xa150d8 <col:20, col:24> col:24 __status 'int'
| |-FunctionDecl 0xa15358 <line:634:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:634:14 getenv 'char *(const char *) throw()' extern
| | |-ParmVarDecl 0xa15230 <col:22, col:34> col:34 __name 'const char *'
| | `-NonNullAttr 0xa15400 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:634:63> 1
| |-FunctionDecl 0xa15540 <line:639:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:639:14 secure_getenv 'char *(const char *) throw()' extern
| | |-ParmVarDecl 0xa15480 <col:29, col:41> col:41 __name 'const char *'
| | `-NonNullAttr 0xa155e8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:640:27> 1
| |-FunctionDecl 0xa15798 <line:647:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:647:12 putenv 'int (char *) throw()' extern
| | |-ParmVarDecl 0xa15670 <col:20, col:26> col:26 __string 'char *'
| | `-NonNullAttr 0xa15840 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:647:57> 1
| |-FunctionDecl 0xa15b18 <line:653:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:653:12 setenv 'int (const char *, const char *, int) throw()' extern
| | |-ParmVarDecl 0xa158c0 <col:20, col:32> col:32 __name 'const char *'
| | |-ParmVarDecl 0xa15940 <col:40, col:52> col:52 __value 'const char *'
| | |-ParmVarDecl 0xa159c0 <col:61, col:65> col:65 __replace 'int'
| | `-NonNullAttr 0xa15bd0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:654:27> 2
| |-FunctionDecl 0xa15d10 <line:657:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:657:12 unsetenv 'int (const char *) throw()' extern
| | |-ParmVarDecl 0xa15c50 <col:22, col:34> col:34 __name 'const char *'
| | `-NonNullAttr 0xa15db8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:657:63> 1
| |-FunctionDecl 0xa15ed0 <line:664:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/stdlib.h:664:12 clearenv 'int () throw()' extern
| |-FunctionDecl 0xa16048 <line:675:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:675:14 mktemp 'char *(char *) throw()' extern
| | |-ParmVarDecl 0xa15f88 <col:22, col:28> col:28 __template 'char *'
| | `-NonNullAttr 0xa160f0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:675:61> 1
| |-FunctionDecl 0xa16228 <line:688:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:688:12 mkstemp 'int (char *)' extern
| | |-ParmVarDecl 0xa16170 <col:21, col:27> col:27 __template 'char *'
| | `-NonNullAttr 0xa162d0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:688:52> 1
| |-FunctionDecl 0xa16408 <line:698:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:698:12 mkstemp64 'int (char *)' extern
| | |-ParmVarDecl 0xa16350 <col:23, col:29> col:29 __template 'char *'
| | `-NonNullAttr 0xa164b0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:698:54> 1
| |-FunctionDecl 0xa166b0 <line:710:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:710:12 mkstemps 'int (char *, int)' extern
| | |-ParmVarDecl 0xa16530 <col:22, col:28> col:28 __template 'char *'
| | |-ParmVarDecl 0xa165b0 <col:40, col:44> col:44 __suffixlen 'int'
| | `-NonNullAttr 0xa16760 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:710:70> 1
| |-FunctionDecl 0xa16920 <line:720:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:720:12 mkstemps64 'int (char *, int)' extern
| | |-ParmVarDecl 0xa167e0 <col:24, col:30> col:30 __template 'char *'
| | |-ParmVarDecl 0xa16860 <col:42, col:46> col:46 __suffixlen 'int'
| | `-NonNullAttr 0xa169d0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:721:19> 1
| |-FunctionDecl 0xa16b10 <line:731:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:731:14 mkdtemp 'char *(char *) throw()' extern
| | |-ParmVarDecl 0xa16a50 <col:23, col:29> col:29 __template 'char *'
| | `-NonNullAttr 0xa16bb8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:731:62> 1
| |-FunctionDecl 0xa16da8 <line:742:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:742:12 mkostemp 'int (char *, int)' extern
| | |-ParmVarDecl 0xa16c40 <col:22, col:28> col:28 __template 'char *'
| | |-ParmVarDecl 0xa16cc0 <col:40, col:44> col:44 __flags 'int'
| | `-NonNullAttr 0xa16e58 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:742:66> 1
| |-FunctionDecl 0xa17020 <line:752:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:752:12 mkostemp64 'int (char *, int)' extern
| | |-ParmVarDecl 0xa16ee0 <col:24, col:30> col:30 __template 'char *'
| | |-ParmVarDecl 0xa16f60 <col:42, col:46> col:46 __flags 'int'
| | `-NonNullAttr 0xa170d0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:752:68> 1
| |-FunctionDecl 0xa17360 <line:762:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:762:12 mkostemps 'int (char *, int, int)' extern
| | |-ParmVarDecl 0xa17150 <col:23, col:29> col:29 __template 'char *'
| | |-ParmVarDecl 0xa171d0 <col:41, col:45> col:45 __suffixlen 'int'
| | |-ParmVarDecl 0xa17250 <col:58, col:62> col:62 __flags 'int'
| | `-NonNullAttr 0xa17418 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:763:19> 1
| |-FunctionDecl 0xa17668 <line:774:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:774:12 mkostemps64 'int (char *, int, int)' extern
| | |-ParmVarDecl 0xa174a0 <col:25, col:31> col:31 __template 'char *'
| | |-ParmVarDecl 0xa17520 <col:43, col:47> col:47 __suffixlen 'int'
| | |-ParmVarDecl 0xa175a0 <col:60, col:64> col:64 __flags 'int'
| | `-NonNullAttr 0xa17720 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:775:19> 1
| |-FunctionDecl 0xa17838 <line:784:1, col:41> col:12 system 'int (const char *)' extern
| | `-ParmVarDecl 0xa177a0 <col:20, col:32> col:32 __command 'const char *'
| |-FunctionDecl 0xa179b8 <line:790:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:790:14 canonicalize_file_name 'char *(const char *) throw()' extern
| | |-ParmVarDecl 0xa178f8 <col:38, col:50> col:50 __name 'const char *'
| | `-NonNullAttr 0xa17a60 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:791:27> 1
| |-FunctionDecl 0xa17c88 <line:800:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/stdlib.h:800:14 realpath 'char *(const char *__restrict, char *__restrict) throw()' extern
| | |-ParmVarDecl 0xa17ae0 <col:24, col:47> col:47 __name 'const char *__restrict'
| | `-ParmVarDecl 0xa17b60 <line:801:10, col:27> col:27 __resolved 'char *__restrict'
| |-TypedefDecl 0xa17f80 <line:808:1, col:57> col:15 referenced __compar_fn_t 'int (*)(const void *, const void *)'
| | `-PointerType 0xa17f10 'int (*)(const void *, const void *)'
| |   `-ParenType 0xa17eb0 'int (const void *, const void *)' sugar
| |     `-FunctionProtoType 0xa17e70 'int (const void *, const void *)' cdecl
| |       |-BuiltinType 0x7db380 'int'
| |       |-PointerType 0xa17d40 'const void *'
| |       | `-QualType 0x7db2e1 'const void' const
| |       |   `-BuiltinType 0x7db2e0 'void'
| |       `-PointerType 0xa17d40 'const void *'
| |         `-QualType 0x7db2e1 'const void' const
| |           `-BuiltinType 0x7db2e0 'void'
| |-TypedefDecl 0xa18010 <line:811:1, col:23> col:23 comparison_fn_t '__compar_fn_t':'int (*)(const void *, const void *)'
| | `-TypedefType 0xa17fe0 '__compar_fn_t' sugar
| |   |-Typedef 0xa17f80 '__compar_fn_t'
| |   `-PointerType 0xa17f10 'int (*)(const void *, const void *)'
| |     `-ParenType 0xa17eb0 'int (const void *, const void *)' sugar
| |       `-FunctionProtoType 0xa17e70 'int (const void *, const void *)' cdecl
| |         |-BuiltinType 0x7db380 'int'
| |         |-PointerType 0xa17d40 'const void *'
| |         | `-QualType 0x7db2e1 'const void' const
| |         |   `-BuiltinType 0x7db2e0 'void'
| |         `-PointerType 0xa17d40 'const void *'
| |           `-QualType 0x7db2e1 'const void' const
| |             `-BuiltinType 0x7db2e0 'void'
| |-TypedefDecl 0xa18308 <line:815:1, col:67> col:15 referenced __compar_d_fn_t 'int (*)(const void *, const void *, void *)'
| | `-PointerType 0xa18290 'int (*)(const void *, const void *, void *)'
| |   `-ParenType 0xa18230 'int (const void *, const void *, void *)' sugar
| |     `-FunctionProtoType 0xa181f0 'int (const void *, const void *, void *)' cdecl
| |       |-BuiltinType 0x7db380 'int'
| |       |-PointerType 0xa17d40 'const void *'
| |       | `-QualType 0x7db2e1 'const void' const
| |       |   `-BuiltinType 0x7db2e0 'void'
| |       |-PointerType 0xa17d40 'const void *'
| |       | `-QualType 0x7db2e1 'const void' const
| |       |   `-BuiltinType 0x7db2e0 'void'
| |       `-PointerType 0x7dbae0 'void *'
| |         `-BuiltinType 0x7db2e0 'void'
| |-FunctionDecl 0xa18720 <line:820:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:820:14 bsearch 'void *(const void *, const void *, size_t, size_t, __compar_fn_t)' extern
| | |-ParmVarDecl 0xa18378 <col:23, col:35> col:35 __key 'const void *'
| | |-ParmVarDecl 0xa183f8 <col:42, col:54> col:54 __base 'const void *'
| | |-ParmVarDecl 0xa18470 <line:821:9, col:16> col:16 __nmemb 'size_t':'unsigned long'
| | |-ParmVarDecl 0xa184e8 <col:25, col:32> col:32 __size 'size_t':'unsigned long'
| | |-ParmVarDecl 0xa18560 <col:40, col:54> col:54 __compar '__compar_fn_t':'int (*)(const void *, const void *)'
| | `-NonNullAttr 0xa187e8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:822:25> 1 2 5
| |-FunctionDecl 0xa18b68 <line:830:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:830:13 qsort 'void (void *, size_t, size_t, __compar_fn_t)' extern
| | |-ParmVarDecl 0xa18878 <col:20, col:26> col:26 __base 'void *'
| | |-ParmVarDecl 0xa188f0 <col:34, col:41> col:41 __nmemb 'size_t':'unsigned long'
| | |-ParmVarDecl 0xa18968 <col:50, col:57> col:57 __size 'size_t':'unsigned long'
| | |-ParmVarDecl 0xa189e0 <line:831:6, col:20> col:20 __compar '__compar_fn_t':'int (*)(const void *, const void *)'
| | `-NonNullAttr 0xa18c28 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:831:46> 1 4
| |-FunctionDecl 0xa190a8 <line:833:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:833:13 qsort_r 'void (void *, size_t, size_t, __compar_d_fn_t, void *)' extern
| | |-ParmVarDecl 0xa18cb0 <col:22, col:28> col:28 __base 'void *'
| | |-ParmVarDecl 0xa18d80 <col:36, col:43> col:43 __nmemb 'size_t':'unsigned long'
| | |-ParmVarDecl 0xa18df8 <col:52, col:59> col:59 __size 'size_t':'unsigned long'
| | |-ParmVarDecl 0xa18e90 <line:834:8, col:24> col:24 __compar '__compar_d_fn_t':'int (*)(const void *, const void *, void *)'
| | |-ParmVarDecl 0xa18f10 <col:34, col:40> col:40 __arg 'void *'
| | `-NonNullAttr 0xa19170 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:835:19> 1 4
| |-FunctionDecl 0xa192f8 <line:840:1, col:60> col:12 abs 'int (int) throw()' extern
| | |-ParmVarDecl 0xa191f0 <col:17, col:21> col:21 __x 'int'
| | |-ConstAttr 0xa193a0 <col:50>
| | `-NoThrowAttr 0xa19430 <col:12> Implicit
| |-FunctionDecl 0xa19578 <line:841:1, col:71> col:17 labs 'long (long) throw()' extern
| | |-ParmVarDecl 0xa19470 <col:23, col:32> col:32 __x 'long'
| | |-ConstAttr 0xa19620 <col:61>
| | `-NoThrowAttr 0xa196b0 <col:17> Implicit
| |-FunctionDecl 0xa197f8 <line:844:15, line:845:40> line:844:36 llabs 'long long (long long) throw()' extern
| | |-ParmVarDecl 0xa196f0 <col:43, col:57> col:57 __x 'long long'
| | |-ConstAttr 0xa198a0 <line:845:30>
| | `-NoThrowAttr 0xa19930 <line:844:36> Implicit
| |-FunctionDecl 0xa19b30 <line:852:1, line:853:40> line:852:14 div 'div_t (int, int) throw()' extern
| | |-ParmVarDecl 0xa19998 <col:19, col:23> col:23 __numer 'int'
| | |-ParmVarDecl 0xa19a18 <col:32, col:36> col:36 __denom 'int'
| | `-ConstAttr 0xa19be0 <line:853:30>
| |-FunctionDecl 0xa19e10 <line:854:1, line:855:40> line:854:15 ldiv 'ldiv_t (long, long) throw()' extern
| | |-ParmVarDecl 0xa19c78 <col:21, col:30> col:30 __numer 'long'
| | |-ParmVarDecl 0xa19cf8 <col:39, col:48> col:48 __denom 'long'
| | `-ConstAttr 0xa19ec0 <line:855:30>
| |-FunctionDecl 0xa1a0f0 <line:858:15, line:860:40> line:858:30 lldiv 'lldiv_t (long long, long long) throw()' extern
| | |-ParmVarDecl 0xa19f58 <col:37, col:51> col:51 __numer 'long long'
| | |-ParmVarDecl 0xa19fd8 <line:859:9, col:23> col:23 __denom 'long long'
| | `-ConstAttr 0xa1a1a0 <line:860:30>
| |-FunctionDecl 0xa1a528 <line:872:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:872:14 ecvt 'char *(double, int, int *__restrict, int *__restrict) throw()' extern
| | |-ParmVarDecl 0xa1a210 <col:20, col:27> col:27 __value 'double'
| | |-ParmVarDecl 0xa1a290 <col:36, col:40> col:40 __ndigit 'int'
| | |-ParmVarDecl 0xa1a310 <col:50, col:66> col:66 __decpt 'int *__restrict'
| | |-ParmVarDecl 0xa1a390 <line:873:6, col:22> col:22 __sign 'int *__restrict'
| | `-NonNullAttr 0xa1a5e8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:873:54> 3 4
| |-FunctionDecl 0xa1a8e8 <line:878:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:878:14 fcvt 'char *(double, int, int *__restrict, int *__restrict) throw()' extern
| | |-ParmVarDecl 0xa1a670 <col:20, col:27> col:27 __value 'double'
| | |-ParmVarDecl 0xa1a6f0 <col:36, col:40> col:40 __ndigit 'int'
| | |-ParmVarDecl 0xa1a770 <col:50, col:66> col:66 __decpt 'int *__restrict'
| | |-ParmVarDecl 0xa1a7f0 <line:879:6, col:22> col:22 __sign 'int *__restrict'
| | `-NonNullAttr 0xa1a9a8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:879:54> 3 4
| |-FunctionDecl 0xa1ac88 <line:884:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:884:14 gcvt 'char *(double, int, char *) throw()' extern
| | |-ParmVarDecl 0xa1aa30 <col:20, col:27> col:27 __value 'double'
| | |-ParmVarDecl 0xa1aab0 <col:36, col:40> col:40 __ndigit 'int'
| | |-ParmVarDecl 0xa1ab30 <col:50, col:56> col:56 __buf 'char *'
| | `-NonNullAttr 0xa1ad40 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:885:27> 3
| |-FunctionDecl 0xa1b0e8 <line:890:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:890:14 qecvt 'char *(long double, int, int *__restrict, int *__restrict) throw()' extern
| | |-ParmVarDecl 0xa1add8 <col:21, col:33> col:33 __value 'long double'
| | |-ParmVarDecl 0xa1ae58 <col:42, col:46> col:46 __ndigit 'int'
| | |-ParmVarDecl 0xa1aed8 <line:891:7, col:23> col:23 __decpt 'int *__restrict'
| | |-ParmVarDecl 0xa1af58 <col:32, col:48> col:48 __sign 'int *__restrict'
| | `-NonNullAttr 0xa1b1a8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:892:30> 3 4
| |-FunctionDecl 0xa1b4a8 <line:893:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:893:14 qfcvt 'char *(long double, int, int *__restrict, int *__restrict) throw()' extern
| | |-ParmVarDecl 0xa1b230 <col:21, col:33> col:33 __value 'long double'
| | |-ParmVarDecl 0xa1b2b0 <col:42, col:46> col:46 __ndigit 'int'
| | |-ParmVarDecl 0xa1b330 <line:894:7, col:23> col:23 __decpt 'int *__restrict'
| | |-ParmVarDecl 0xa1b3b0 <col:32, col:48> col:48 __sign 'int *__restrict'
| | `-NonNullAttr 0xa1b568 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:895:30> 3 4
| |-FunctionDecl 0xa1b848 <line:896:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:896:14 qgcvt 'char *(long double, int, char *) throw()' extern
| | |-ParmVarDecl 0xa1b5f0 <col:21, col:33> col:33 __value 'long double'
| | |-ParmVarDecl 0xa1b670 <col:42, col:46> col:46 __ndigit 'int'
| | |-ParmVarDecl 0xa1b6f0 <col:56, col:62> col:62 __buf 'char *'
| | `-NonNullAttr 0xa1b900 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:897:27> 3
| |-FunctionDecl 0xa1bdd8 <line:902:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:902:12 ecvt_r 'int (double, int, int *__restrict, int *__restrict, char *__restrict, size_t) throw()' extern
| | |-ParmVarDecl 0xa1b980 <col:20, col:27> col:27 __value 'double'
| | |-ParmVarDecl 0xa1ba00 <col:36, col:40> col:40 __ndigit 'int'
| | |-ParmVarDecl 0xa1ba80 <col:50, col:66> col:66 __decpt 'int *__restrict'
| | |-ParmVarDecl 0xa1bb00 <line:903:6, col:22> col:22 __sign 'int *__restrict'
| | |-ParmVarDecl 0xa1bb80 <col:30, col:47> col:47 __buf 'char *__restrict'
| | |-ParmVarDecl 0xa1bbf8 <line:904:6, col:13> col:13 __len 'size_t':'unsigned long'
| | `-NonNullAttr 0xa1bea8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:904:47> 3 4 5
| |-FunctionDecl 0xa1c2d8 <line:905:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:905:12 fcvt_r 'int (double, int, int *__restrict, int *__restrict, char *__restrict, size_t) throw()' extern
| | |-ParmVarDecl 0xa1bf38 <col:20, col:27> col:27 __value 'double'
| | |-ParmVarDecl 0xa1bfb8 <col:36, col:40> col:40 __ndigit 'int'
| | |-ParmVarDecl 0xa1c038 <col:50, col:66> col:66 __decpt 'int *__restrict'
| | |-ParmVarDecl 0xa1c0b8 <line:906:6, col:22> col:22 __sign 'int *__restrict'
| | |-ParmVarDecl 0xa1c138 <col:30, col:47> col:47 __buf 'char *__restrict'
| | |-ParmVarDecl 0xa1c1b0 <line:907:6, col:13> col:13 __len 'size_t':'unsigned long'
| | `-NonNullAttr 0xa1c3a8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:907:47> 3 4 5
| |-FunctionDecl 0xa1c898 <line:909:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:909:12 qecvt_r 'int (long double, int, int *__restrict, int *__restrict, char *__restrict, size_t) throw()' extern
| | |-ParmVarDecl 0xa1c438 <col:21, col:33> col:33 __value 'long double'
| | |-ParmVarDecl 0xa1c4b8 <col:42, col:46> col:46 __ndigit 'int'
| | |-ParmVarDecl 0xa1c538 <line:910:7, col:23> col:23 __decpt 'int *__restrict'
| | |-ParmVarDecl 0xa1c5b8 <col:32, col:48> col:48 __sign 'int *__restrict'
| | |-ParmVarDecl 0xa1c638 <line:911:7, col:24> col:24 __buf 'char *__restrict'
| | |-ParmVarDecl 0xa1c6b0 <col:31, col:38> col:38 __len 'size_t':'unsigned long'
| | `-NonNullAttr 0xa1c968 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:912:33> 3 4 5
| |-FunctionDecl 0xa1ce00 <line:913:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:913:12 qfcvt_r 'int (long double, int, int *__restrict, int *__restrict, char *__restrict, size_t) throw()' extern
| | |-ParmVarDecl 0xa1c9f8 <col:21, col:33> col:33 __value 'long double'
| | |-ParmVarDecl 0xa1ca78 <col:42, col:46> col:46 __ndigit 'int'
| | |-ParmVarDecl 0xa1caf8 <line:914:7, col:23> col:23 __decpt 'int *__restrict'
| | |-ParmVarDecl 0xa1cb78 <col:32, col:48> col:48 __sign 'int *__restrict'
| | |-ParmVarDecl 0xa1cbf8 <line:915:7, col:24> col:24 __buf 'char *__restrict'
| | |-ParmVarDecl 0xa1cc70 <col:31, col:38> col:38 __len 'size_t':'unsigned long'
| | `-NonNullAttr 0xa1ced0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:916:33> 3 4 5
| |-FunctionDecl 0xa1d0f8 <line:922:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/stdlib.h:922:12 mblen 'int (const char *, size_t) throw()' extern
| | |-ParmVarDecl 0xa1cf58 <col:19, col:31> col:31 __s 'const char *'
| | `-ParmVarDecl 0xa1cfd0 <col:36, col:43> col:43 __n 'size_t':'unsigned long'
| |-FunctionDecl 0xa1d418 <line:925:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/stdlib.h:925:12 mbtowc 'int (wchar_t *__restrict, const char *__restrict, size_t) throw()' extern
| | |-ParmVarDecl 0xa1d1f0 <col:20, col:40> col:40 __pwc 'wchar_t *__restrict'
| | |-ParmVarDecl 0xa1d270 <line:926:6, col:29> col:29 __s 'const char *__restrict'
| | `-ParmVarDecl 0xa1d2e8 <col:34, col:41> col:41 __n 'size_t':'unsigned long'
| |-FunctionDecl 0xa1d688 <line:929:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/stdlib.h:929:12 wctomb 'int (char *, wchar_t) throw()' extern
| | |-ParmVarDecl 0xa1d4e8 <col:20, col:26> col:26 __s 'char *'
| | `-ParmVarDecl 0xa1d560 <col:31, col:39> col:39 __wchar 'wchar_t'
| |-FunctionDecl 0xa1d970 <line:933:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/stdlib.h:933:15 mbstowcs 'size_t (wchar_t *__restrict, const char *__restrict, size_t) throw()' extern
| | |-ParmVarDecl 0xa1d750 <col:25, col:46> col:46 __pwcs 'wchar_t *__restrict'
| | |-ParmVarDecl 0xa1d7d0 <line:934:4, col:27> col:27 __s 'const char *__restrict'
| | `-ParmVarDecl 0xa1d848 <col:32, col:39> col:39 __n 'size_t':'unsigned long'
| |-FunctionDecl 0xa1dc90 <line:936:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/stdlib.h:936:15 wcstombs 'size_t (char *__restrict, const wchar_t *__restrict, size_t) throw()' extern
| | |-ParmVarDecl 0xa1da40 <col:25, col:42> col:42 __s 'char *__restrict'
| | |-ParmVarDecl 0xa1daf0 <line:937:4, col:30> col:30 __pwcs 'const wchar_t *__restrict'
| | `-ParmVarDecl 0xa1db68 <col:38, col:45> col:45 __n 'size_t':'unsigned long'
| |-FunctionDecl 0xa1de20 <line:946:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:946:12 rpmatch 'int (const char *) throw()' extern
| | |-ParmVarDecl 0xa1dd60 <col:21, col:33> col:33 __response 'const char *'
| | `-NonNullAttr 0xa1dec8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:946:66> 1
| |-FunctionDecl 0xa1e218 <line:957:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:957:12 getsubopt 'int (char **__restrict, char *const *__restrict, char **__restrict) throw()' extern
| | |-ParmVarDecl 0xa1df50 <col:23, col:41> col:41 __optionp 'char **__restrict'
| | |-ParmVarDecl 0xa1e000 <line:958:9, col:33> col:33 __tokens 'char *const *__restrict'
| | |-ParmVarDecl 0xa1e080 <line:959:9, col:27> col:27 __valuep 'char **__restrict'
| | `-NonNullAttr 0xa1e2d0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:960:33> 1 2 3
| |-FunctionDecl 0xa1e3f0 <line:968:1, col:37> col:12 posix_openpt 'int (int)' extern
| | `-ParmVarDecl 0xa1e358 <col:26, col:30> col:30 __oflag 'int'
| |-FunctionDecl 0xa1e550 <line:976:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/stdlib.h:976:12 grantpt 'int (int) throw()' extern
| | `-ParmVarDecl 0xa1e4b0 <col:21, col:25> col:25 __fd 'int'
| |-FunctionDecl 0xa1e6b0 <line:980:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/stdlib.h:980:12 unlockpt 'int (int) throw()' extern
| | `-ParmVarDecl 0xa1e610 <col:22, col:26> col:26 __fd 'int'
| |-FunctionDecl 0xa1e878 <line:985:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/stdlib.h:985:14 ptsname 'char *(int) throw()' extern
| | `-ParmVarDecl 0xa1e770 <col:23, col:27> col:27 __fd 'int'
| |-FunctionDecl 0xa1eb88 <line:992:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:992:12 ptsname_r 'int (int, char *, size_t) throw()' extern
| | |-ParmVarDecl 0xa1e938 <col:23, col:27> col:27 __fd 'int'
| | |-ParmVarDecl 0xa1e9b8 <col:33, col:39> col:39 __buf 'char *'
| | |-ParmVarDecl 0xa1ea30 <col:46, col:53> col:53 __buflen 'size_t':'unsigned long'
| | `-NonNullAttr 0xa1ec40 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:993:27> 2
| |-FunctionDecl 0xa1edb0 <line:996:1, col:23> col:12 getpt 'int ()' extern
| `-FunctionDecl 0xa1f098 <line:1003:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:1003:12 getloadavg 'int (double *, int) throw()' extern
|   |-ParmVarDecl 0xa1eed0 <col:24, col:41> col:31 __loadavg 'double *':'double *'
|   |-ParmVarDecl 0xa1ef50 <col:44, col:48> col:48 __nelem 'int'
|   `-NonNullAttr 0xa1f148 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:1004:27> 1
|-LinkageSpecDecl 0xa1f1d8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/std_abs.h:46:1, line:109:1> line:46:8 C++
| `-NamespaceDecl 0xa1f248 prev 0x81a7a8 <line:48:1, line:108:1> line:48:11 std
|   |-original Namespace 0x81a0b0 'std'
|   |-VisibilityAttr 0xa1f2b8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:70:49, col:67> Default
|   |-UsingDecl 0xa1f330 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/std_abs.h:52:3, col:11> col:11 ::abs
|   |-UsingShadowDecl 0xa1f388 <col:11> col:11 implicit Function 0xa192f8 'abs' 'int (int) throw()'
|   |-FunctionDecl 0xa1f488 <line:55:3, line:56:47> col:3 abs 'long (long)' inline
|   | |-ParmVarDecl 0xa1f3f0 <col:7, col:12> col:12 used __i 'long'
|   | `-CompoundStmt 0xa1f810 <col:17, col:47>
|   |   `-ReturnStmt 0xa1f800 <col:19, col:44>
|   |     `-CallExpr 0xa1f7c0 <col:26, col:44> 'long'
|   |       |-ImplicitCastExpr 0xa1f7a8 <col:26> 'long (*)(long) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa1f710 <col:26> '<builtin fn type>' Function 0xa1f580 '__builtin_labs' 'long (long) noexcept'
|   |       `-ImplicitCastExpr 0xa1f7e8 <col:41> 'long' <LValueToRValue>
|   |         `-DeclRefExpr 0xa1f730 <col:41> 'long' lvalue ParmVar 0xa1f3f0 '__i' 'long'
|   |-FunctionDecl 0xa1f8d8 <line:60:3, line:61:54> col:3 abs 'long long (long long)' inline
|   | |-ParmVarDecl 0xa1f840 <col:7, col:17> col:17 used __x 'long long'
|   | `-CompoundStmt 0xa1fc60 <col:22, col:54>
|   |   `-ReturnStmt 0xa1fc50 <col:24, col:51>
|   |     `-CallExpr 0xa1fc10 <col:31, col:51> 'long long'
|   |       |-ImplicitCastExpr 0xa1fbf8 <col:31> 'long long (*)(long long) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa1fb60 <col:31> '<builtin fn type>' Function 0xa1f9d0 '__builtin_llabs' 'long long (long long) noexcept'
|   |       `-ImplicitCastExpr 0xa1fc38 <col:48> 'long long' <LValueToRValue>
|   |         `-DeclRefExpr 0xa1fb80 <col:48> 'long long' lvalue ParmVar 0xa1f840 '__x' 'long long'
|   |-FunctionDecl 0xa1fd28 <line:70:3, line:72:33> line:71:3 constexpr abs 'double (double)' inline
|   | |-ParmVarDecl 0xa1fc90 <col:7, col:14> col:14 used __x 'double'
|   | `-CompoundStmt 0xa200b0 <line:72:3, col:33>
|   |   `-ReturnStmt 0xa200a0 <col:5, col:30>
|   |     `-CallExpr 0xa20060 <col:12, col:30> 'double'
|   |       |-ImplicitCastExpr 0xa20048 <col:12> 'double (*)(double) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa1ffb0 <col:12> '<builtin fn type>' Function 0xa1fe20 '__builtin_fabs' 'double (double) noexcept'
|   |       `-ImplicitCastExpr 0xa20088 <col:27> 'double' <LValueToRValue>
|   |         `-DeclRefExpr 0xa1ffd0 <col:27> 'double' lvalue ParmVar 0xa1fc90 '__x' 'double'
|   |-FunctionDecl 0xa20178 <line:74:3, line:76:34> line:75:3 constexpr abs 'float (float)' inline
|   | |-ParmVarDecl 0xa200e0 <col:7, col:13> col:13 used __x 'float'
|   | `-CompoundStmt 0xa20500 <line:76:3, col:34>
|   |   `-ReturnStmt 0xa204f0 <col:5, col:31>
|   |     `-CallExpr 0xa204b0 <col:12, col:31> 'float'
|   |       |-ImplicitCastExpr 0xa20498 <col:12> 'float (*)(float) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa20400 <col:12> '<builtin fn type>' Function 0xa20270 '__builtin_fabsf' 'float (float) noexcept'
|   |       `-ImplicitCastExpr 0xa204d8 <col:28> 'float' <LValueToRValue>
|   |         `-DeclRefExpr 0xa20420 <col:28> 'float' lvalue ParmVar 0xa200e0 '__x' 'float'
|   |-FunctionDecl 0xa205c8 <line:78:3, line:80:34> line:79:3 constexpr abs 'long double (long double)' inline
|   | |-ParmVarDecl 0xa20530 <col:7, col:19> col:19 used __x 'long double'
|   | `-CompoundStmt 0xa20950 <line:80:3, col:34>
|   |   `-ReturnStmt 0xa20940 <col:5, col:31>
|   |     `-CallExpr 0xa20900 <col:12, col:31> 'long double'
|   |       |-ImplicitCastExpr 0xa208e8 <col:12> 'long double (*)(long double) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa20850 <col:12> '<builtin fn type>' Function 0xa206c0 '__builtin_fabsl' 'long double (long double) noexcept'
|   |       `-ImplicitCastExpr 0xa20928 <col:28> 'long double' <LValueToRValue>
|   |         `-DeclRefExpr 0xa20870 <col:28> 'long double' lvalue ParmVar 0xa20530 '__x' 'long double'
|   |-FunctionDecl 0xa20a50 <line:84:3, line:85:67> col:3 constexpr abs '__int128 (__int128)' inline
|   | |-ParmVarDecl 0xa20980 <<built-in>:339:32, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/std_abs.h:85:30> col:30 used __x '__int128'
|   | `-CompoundStmt 0xa20c50 <col:35, col:67>
|   |   `-ReturnStmt 0xa20c40 <col:37, col:62>
|   |     `-ConditionalOperator 0xa20c10 <col:44, col:62> '__int128'
|   |       |-BinaryOperator 0xa20b68 <col:44, col:51> 'bool' '>='
|   |       | |-ImplicitCastExpr 0xa20b38 <col:44> '__int128' <LValueToRValue>
|   |       | | `-DeclRefExpr 0xa20af8 <col:44> '__int128' lvalue ParmVar 0xa20980 '__x' '__int128'
|   |       | `-ImplicitCastExpr 0xa20b50 <col:51> '__int128' <IntegralCast>
|   |       |   `-IntegerLiteral 0xa20b18 <col:51> 'int' 0
|   |       |-ImplicitCastExpr 0xa20bf8 <col:55> '__int128' <LValueToRValue>
|   |       | `-DeclRefExpr 0xa20b88 <col:55> '__int128' lvalue ParmVar 0xa20980 '__x' '__int128'
|   |       `-UnaryOperator 0xa20be0 <col:61, col:62> '__int128' prefix '-'
|   |         `-ImplicitCastExpr 0xa20bc8 <col:62> '__int128' <LValueToRValue>
|   |           `-DeclRefExpr 0xa20ba8 <col:62> '__int128' lvalue ParmVar 0xa20980 '__x' '__int128'
|   `-FunctionDecl 0xa21dd0 <line:101:3, line:104:34> line:103:3 constexpr abs '__float128 (__float128)' inline
|     |-ParmVarDecl 0xa20c80 <col:7, col:18> col:18 used __x '__float128'
|     `-CompoundStmt 0xa21fd0 <line:104:3, col:34>
|       `-ReturnStmt 0xa21fc0 <col:5, col:29>
|         `-ConditionalOperator 0xa21f90 <col:12, col:29> '__float128'
|           |-BinaryOperator 0xa21ee8 <col:12, col:18> 'bool' '<'
|           | |-ImplicitCastExpr 0xa21eb8 <col:12> '__float128' <LValueToRValue>
|           | | `-DeclRefExpr 0xa21e78 <col:12> '__float128' lvalue ParmVar 0xa20c80 '__x' '__float128'
|           | `-ImplicitCastExpr 0xa21ed0 <col:18> '__float128' <IntegralToFloating>
|           |   `-IntegerLiteral 0xa21e98 <col:18> 'int' 0
|           |-UnaryOperator 0xa21f40 <col:22, col:23> '__float128' prefix '-'
|           | `-ImplicitCastExpr 0xa21f28 <col:23> '__float128' <LValueToRValue>
|           |   `-DeclRefExpr 0xa21f08 <col:23> '__float128' lvalue ParmVar 0xa20c80 '__x' '__float128'
|           `-ImplicitCastExpr 0xa21f78 <col:29> '__float128' <LValueToRValue>
|             `-DeclRefExpr 0xa21f58 <col:29> '__float128' lvalue ParmVar 0xa20c80 '__x' '__float128'
|-LinkageSpecDecl 0xa1f530 <line:56:26> col:26 implicit C
| `-FunctionDecl 0xa1f580 <col:26> col:26 implicit used __builtin_labs 'long (long) noexcept' extern
|   |-ParmVarDecl 0xa1f620 <<invalid sloc>> <invalid sloc> 'long'
|   |-NoThrowAttr 0xa1f690 <col:26> Implicit
|   `-ConstAttr 0xa1f6e8 <col:26> Implicit
|-LinkageSpecDecl 0xa1f980 <line:61:31> col:31 implicit C
| `-FunctionDecl 0xa1f9d0 <col:31> col:31 implicit used __builtin_llabs 'long long (long long) noexcept' extern
|   |-ParmVarDecl 0xa1fa70 <<invalid sloc>> <invalid sloc> 'long long'
|   |-NoThrowAttr 0xa1fae0 <col:31> Implicit
|   `-ConstAttr 0xa1fb38 <col:31> Implicit
|-LinkageSpecDecl 0xa1fdd0 <line:72:12> col:12 implicit C
| `-FunctionDecl 0xa1fe20 <col:12> col:12 implicit used __builtin_fabs 'double (double) noexcept' extern
|   |-ParmVarDecl 0xa1fec0 <<invalid sloc>> <invalid sloc> 'double'
|   |-NoThrowAttr 0xa1ff30 <col:12> Implicit
|   `-ConstAttr 0xa1ff88 <col:12> Implicit
|-LinkageSpecDecl 0xa20220 <line:76:12> col:12 implicit C
| `-FunctionDecl 0xa20270 <col:12> col:12 implicit used __builtin_fabsf 'float (float) noexcept' extern
|   |-ParmVarDecl 0xa20310 <<invalid sloc>> <invalid sloc> 'float'
|   |-NoThrowAttr 0xa20380 <col:12> Implicit
|   `-ConstAttr 0xa203d8 <col:12> Implicit
|-LinkageSpecDecl 0xa20670 <line:80:12> col:12 implicit C
| `-FunctionDecl 0xa206c0 <col:12> col:12 implicit used __builtin_fabsl 'long double (long double) noexcept' extern
|   |-ParmVarDecl 0xa20760 <<invalid sloc>> <invalid sloc> 'long double'
|   |-NoThrowAttr 0xa207d0 <col:12> Implicit
|   `-ConstAttr 0xa20828 <col:12> Implicit
|-LinkageSpecDecl 0xa22008 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/cmath:77:1, line:1930:1> line:77:8 C++
| `-NamespaceDecl 0xa22078 prev 0xa1f248 <line:79:1, line:1924:1> line:79:11 std
|   |-original Namespace 0x81a0b0 'std'
|   |-VisibilityAttr 0xa220e8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:70:49, col:67> Default
|   |-UsingDecl 0xa22148 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/cmath:83:3, col:11> col:11 ::acos
|   |-UsingShadowDecl 0xa221a0 <col:11> col:11 implicit Function 0x8f47c8 'acos' 'double (double) throw()'
|   |-FunctionDecl 0xa222a0 <line:86:3, line:88:34> line:87:3 constexpr acos 'float (float)' inline
|   | |-ParmVarDecl 0xa22208 <col:8, col:14> col:14 used __x 'float'
|   | `-CompoundStmt 0xa225a8 <line:88:3, col:34>
|   |   `-ReturnStmt 0xa22598 <col:5, col:31>
|   |     `-CallExpr 0xa22558 <col:12, col:31> 'float'
|   |       |-ImplicitCastExpr 0xa22540 <col:12> 'float (*)(float) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa22500 <col:12> '<builtin fn type>' Function 0xa22398 '__builtin_acosf' 'float (float) noexcept'
|   |       `-ImplicitCastExpr 0xa22580 <col:28> 'float' <LValueToRValue>
|   |         `-DeclRefExpr 0xa22520 <col:28> 'float' lvalue ParmVar 0xa22208 '__x' 'float'
|   |-FunctionDecl 0xa22670 <line:90:3, line:92:34> line:91:3 constexpr acos 'long double (long double)' inline
|   | |-ParmVarDecl 0xa225d8 <col:8, col:20> col:20 used __x 'long double'
|   | `-CompoundStmt 0xa22978 <line:92:3, col:34>
|   |   `-ReturnStmt 0xa22968 <col:5, col:31>
|   |     `-CallExpr 0xa22928 <col:12, col:31> 'long double'
|   |       |-ImplicitCastExpr 0xa22910 <col:12> 'long double (*)(long double) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa228d0 <col:12> '<builtin fn type>' Function 0xa22768 '__builtin_acosl' 'long double (long double) noexcept'
|   |       `-ImplicitCastExpr 0xa22950 <col:28> 'long double' <LValueToRValue>
|   |         `-DeclRefExpr 0xa228f0 <col:28> 'long double' lvalue ParmVar 0xa225d8 '__x' 'long double'
|   |-FunctionTemplateDecl 0xa22f18 <line:95:3, line:100:35> line:99:5 acos
|   | |-TemplateTypeParmDecl 0xa22990 <line:95:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | `-FunctionDecl 0xa22e78 <line:96:5, line:100:35> line:99:5 constexpr acos 'typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, double>::__type (_Tp)' inline
|   |   |-ParmVarDecl 0xa22d70 <col:10, col:14> col:14 referenced __x '_Tp'
|   |   `-CompoundStmt 0xa231a8 <line:100:5, col:35>
|   |     `-ReturnStmt 0xa23198 <col:7, col:32>
|   |       `-CallExpr 0xa23170 <col:14, col:32> '<dependent type>'
|   |         |-DeclRefExpr 0xa23130 <col:14> '<builtin fn type>' Function 0xa22fc8 '__builtin_acos' 'double (double) noexcept'
|   |         `-DeclRefExpr 0xa23150 <col:29> '_Tp' lvalue ParmVar 0xa22d70 '__x' '_Tp'
|   |-UsingDecl 0xa231c8 <line:102:3, col:11> col:11 ::asin
|   |-UsingShadowDecl 0xa23220 <col:11> col:11 implicit Function 0x8faf60 'asin' 'double (double) throw()'
|   |-FunctionDecl 0xa23320 <line:105:3, line:107:34> line:106:3 constexpr asin 'float (float)' inline
|   | |-ParmVarDecl 0xa23288 <col:8, col:14> col:14 used __x 'float'
|   | `-CompoundStmt 0xa23628 <line:107:3, col:34>
|   |   `-ReturnStmt 0xa23618 <col:5, col:31>
|   |     `-CallExpr 0xa235d8 <col:12, col:31> 'float'
|   |       |-ImplicitCastExpr 0xa235c0 <col:12> 'float (*)(float) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa23580 <col:12> '<builtin fn type>' Function 0xa23418 '__builtin_asinf' 'float (float) noexcept'
|   |       `-ImplicitCastExpr 0xa23600 <col:28> 'float' <LValueToRValue>
|   |         `-DeclRefExpr 0xa235a0 <col:28> 'float' lvalue ParmVar 0xa23288 '__x' 'float'
|   |-FunctionDecl 0xa236f0 <line:109:3, line:111:34> line:110:3 constexpr asin 'long double (long double)' inline
|   | |-ParmVarDecl 0xa23658 <col:8, col:20> col:20 used __x 'long double'
|   | `-CompoundStmt 0xa239f8 <line:111:3, col:34>
|   |   `-ReturnStmt 0xa239e8 <col:5, col:31>
|   |     `-CallExpr 0xa239a8 <col:12, col:31> 'long double'
|   |       |-ImplicitCastExpr 0xa23990 <col:12> 'long double (*)(long double) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa23950 <col:12> '<builtin fn type>' Function 0xa237e8 '__builtin_asinl' 'long double (long double) noexcept'
|   |       `-ImplicitCastExpr 0xa239d0 <col:28> 'long double' <LValueToRValue>
|   |         `-DeclRefExpr 0xa23970 <col:28> 'long double' lvalue ParmVar 0xa23658 '__x' 'long double'
|   |-FunctionTemplateDecl 0xa24ec8 <line:114:3, line:119:35> line:118:5 asin
|   | |-TemplateTypeParmDecl 0xa23a10 <line:114:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | `-FunctionDecl 0xa24e28 <line:115:5, line:119:35> line:118:5 constexpr asin 'typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, double>::__type (_Tp)' inline
|   |   |-ParmVarDecl 0xa23d20 <col:10, col:14> col:14 referenced __x '_Tp'
|   |   `-CompoundStmt 0xa25158 <line:119:5, col:35>
|   |     `-ReturnStmt 0xa25148 <col:7, col:32>
|   |       `-CallExpr 0xa25120 <col:14, col:32> '<dependent type>'
|   |         |-DeclRefExpr 0xa250e0 <col:14> '<builtin fn type>' Function 0xa24f78 '__builtin_asin' 'double (double) noexcept'
|   |         `-DeclRefExpr 0xa25100 <col:29> '_Tp' lvalue ParmVar 0xa23d20 '__x' '_Tp'
|   |-UsingDecl 0xa25178 <line:121:3, col:11> col:11 ::atan
|   |-UsingShadowDecl 0xa251d0 <col:11> col:11 implicit Function 0x8fb278 'atan' 'double (double) throw()'
|   |-FunctionDecl 0xa252d0 <line:124:3, line:126:34> line:125:3 constexpr atan 'float (float)' inline
|   | |-ParmVarDecl 0xa25238 <col:8, col:14> col:14 used __x 'float'
|   | `-CompoundStmt 0xa255d8 <line:126:3, col:34>
|   |   `-ReturnStmt 0xa255c8 <col:5, col:31>
|   |     `-CallExpr 0xa25588 <col:12, col:31> 'float'
|   |       |-ImplicitCastExpr 0xa25570 <col:12> 'float (*)(float) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa25530 <col:12> '<builtin fn type>' Function 0xa253c8 '__builtin_atanf' 'float (float) noexcept'
|   |       `-ImplicitCastExpr 0xa255b0 <col:28> 'float' <LValueToRValue>
|   |         `-DeclRefExpr 0xa25550 <col:28> 'float' lvalue ParmVar 0xa25238 '__x' 'float'
|   |-FunctionDecl 0xa256a0 <line:128:3, line:130:34> line:129:3 constexpr atan 'long double (long double)' inline
|   | |-ParmVarDecl 0xa25608 <col:8, col:20> col:20 used __x 'long double'
|   | `-CompoundStmt 0xa259a8 <line:130:3, col:34>
|   |   `-ReturnStmt 0xa25998 <col:5, col:31>
|   |     `-CallExpr 0xa25958 <col:12, col:31> 'long double'
|   |       |-ImplicitCastExpr 0xa25940 <col:12> 'long double (*)(long double) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa25900 <col:12> '<builtin fn type>' Function 0xa25798 '__builtin_atanl' 'long double (long double) noexcept'
|   |       `-ImplicitCastExpr 0xa25980 <col:28> 'long double' <LValueToRValue>
|   |         `-DeclRefExpr 0xa25920 <col:28> 'long double' lvalue ParmVar 0xa25608 '__x' 'long double'
|   |-FunctionTemplateDecl 0xa25e48 <line:133:3, line:138:35> line:137:5 atan
|   | |-TemplateTypeParmDecl 0xa259c0 <line:133:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | `-FunctionDecl 0xa25da8 <line:134:5, line:138:35> line:137:5 constexpr atan 'typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, double>::__type (_Tp)' inline
|   |   |-ParmVarDecl 0xa25cd0 <col:10, col:14> col:14 referenced __x '_Tp'
|   |   `-CompoundStmt 0xa260d8 <line:138:5, col:35>
|   |     `-ReturnStmt 0xa260c8 <col:7, col:32>
|   |       `-CallExpr 0xa260a0 <col:14, col:32> '<dependent type>'
|   |         |-DeclRefExpr 0xa26060 <col:14> '<builtin fn type>' Function 0xa25ef8 '__builtin_atan' 'double (double) noexcept'
|   |         `-DeclRefExpr 0xa26080 <col:29> '_Tp' lvalue ParmVar 0xa25cd0 '__x' '_Tp'
|   |-UsingDecl 0xa260f8 <line:140:3, col:11> col:11 ::atan2
|   |-UsingShadowDecl 0xa26150 <col:11> col:11 implicit Function 0x8fb698 'atan2' 'double (double, double) throw()'
|   |-FunctionDecl 0xa262d8 <line:143:3, line:145:40> line:144:3 constexpr atan2 'float (float, float)' inline
|   | |-ParmVarDecl 0xa261b8 <col:9, col:15> col:15 used __y 'float'
|   | |-ParmVarDecl 0xa26238 <col:20, col:26> col:26 used __x 'float'
|   | `-CompoundStmt 0xa266f0 <line:145:3, col:40>
|   |   `-ReturnStmt 0xa266e0 <col:5, col:37>
|   |     `-CallExpr 0xa26680 <col:12, col:37> 'float'
|   |       |-ImplicitCastExpr 0xa26668 <col:12> 'float (*)(float, float) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa265b0 <col:12> '<builtin fn type>' Function 0xa263d8 '__builtin_atan2f' 'float (float, float) noexcept'
|   |       |-ImplicitCastExpr 0xa266b0 <col:29> 'float' <LValueToRValue>
|   |       | `-DeclRefExpr 0xa265d0 <col:29> 'float' lvalue ParmVar 0xa261b8 '__y' 'float'
|   |       `-ImplicitCastExpr 0xa266c8 <col:34> 'float' <LValueToRValue>
|   |         `-DeclRefExpr 0xa265f0 <col:34> 'float' lvalue ParmVar 0xa26238 '__x' 'float'
|   |-FunctionDecl 0xa26840 <line:147:3, line:149:40> line:148:3 constexpr atan2 'long double (long double, long double)' inline
|   | |-ParmVarDecl 0xa26720 <col:9, col:21> col:21 used __y 'long double'
|   | |-ParmVarDecl 0xa267a0 <col:26, col:38> col:38 used __x 'long double'
|   | `-CompoundStmt 0xa26c60 <line:149:3, col:40>
|   |   `-ReturnStmt 0xa26c50 <col:5, col:37>
|   |     `-CallExpr 0xa26bf0 <col:12, col:37> 'long double'
|   |       |-ImplicitCastExpr 0xa26bd8 <col:12> 'long double (*)(long double, long double) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa26b18 <col:12> '<builtin fn type>' Function 0xa26940 '__builtin_atan2l' 'long double (long double, long double) noexcept'
|   |       |-ImplicitCastExpr 0xa26c20 <col:29> 'long double' <LValueToRValue>
|   |       | `-DeclRefExpr 0xa26b38 <col:29> 'long double' lvalue ParmVar 0xa26720 '__y' 'long double'
|   |       `-ImplicitCastExpr 0xa26c38 <col:34> 'long double' <LValueToRValue>
|   |         `-DeclRefExpr 0xa26b58 <col:34> 'long double' lvalue ParmVar 0xa267a0 '__x' 'long double'
|   |-FunctionTemplateDecl 0x919c48 <line:152:3, line:159:5> line:155:5 atan2
|   | |-TemplateTypeParmDecl 0xa26c78 <line:152:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl 0xa26cf8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
|   | `-FunctionDecl 0x919ba8 <line:153:5, line:159:5> line:155:5 constexpr atan2 'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type (_Tp, _Up)' inline
|   |   |-ParmVarDecl 0x919a10 <col:11, col:15> col:15 referenced __y '_Tp'
|   |   |-ParmVarDecl 0x919a88 <col:20, col:24> col:24 referenced __x '_Up'
|   |   `-CompoundStmt 0x91a3f0 <line:156:5, line:159:5>
|   |     |-DeclStmt 0x91a268 <line:157:7, col:71>
|   |     | `-TypedefDecl 0x91a210 <col:7, col:65> col:65 referenced __type 'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'
|   |     |   `-DependentNameType 0x91a1a0 'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type' dependent
|   |     `-ReturnStmt 0x91a3e0 <line:158:7, col:44>
|   |       `-CallExpr 0x91a3b0 <col:14, col:44> '<dependent type>'
|   |         |-UnresolvedLookupExpr 0x91a280 <col:14> '<overloaded function type>' lvalue (ADL) = 'atan2' 0x919c48 0xa26840 0xa262d8 0xa26150
|   |         |-CXXUnresolvedConstructExpr 0x91a330 <col:20, col:30> '__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type' '__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'
|   |         | `-DeclRefExpr 0x91a310 <col:27> '_Tp' lvalue ParmVar 0x919a10 '__y' '_Tp'
|   |         `-CXXUnresolvedConstructExpr 0x91a388 <col:33, col:43> '__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type' '__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'
|   |           `-DeclRefExpr 0x91a368 <col:40> '_Up' lvalue ParmVar 0x919a88 '__x' '_Up'
|   |-UsingDecl 0x91a418 <line:161:3, col:11> col:11 ::ceil
|   |-UsingShadowDecl 0x91a470 <col:11> col:11 implicit Function 0x8ef758 'ceil' 'double (double) throw()'
|   |-FunctionDecl 0x91a570 <line:164:3, line:166:34> line:165:3 constexpr ceil 'float (float)' inline
|   | |-ParmVarDecl 0x91a4d8 <col:8, col:14> col:14 used __x 'float'
|   | `-CompoundStmt 0x91a8a0 <line:166:3, col:34>
|   |   `-ReturnStmt 0x91a890 <col:5, col:31>
|   |     `-CallExpr 0x91a850 <col:12, col:31> 'float'
|   |       |-ImplicitCastExpr 0x91a838 <col:12> 'float (*)(float) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0x91a7f8 <col:12> '<builtin fn type>' Function 0x91a668 '__builtin_ceilf' 'float (float) noexcept'
|   |       `-ImplicitCastExpr 0x91a878 <col:28> 'float' <LValueToRValue>
|   |         `-DeclRefExpr 0x91a818 <col:28> 'float' lvalue ParmVar 0x91a4d8 '__x' 'float'
|   |-FunctionDecl 0x91a968 <line:168:3, line:170:34> line:169:3 constexpr ceil 'long double (long double)' inline
|   | |-ParmVarDecl 0x91a8d0 <col:8, col:20> col:20 used __x 'long double'
|   | `-CompoundStmt 0x91ac98 <line:170:3, col:34>
|   |   `-ReturnStmt 0x91ac88 <col:5, col:31>
|   |     `-CallExpr 0x91ac48 <col:12, col:31> 'long double'
|   |       |-ImplicitCastExpr 0x91ac30 <col:12> 'long double (*)(long double) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0x91abf0 <col:12> '<builtin fn type>' Function 0x91aa60 '__builtin_ceill' 'long double (long double) noexcept'
|   |       `-ImplicitCastExpr 0x91ac70 <col:28> 'long double' <LValueToRValue>
|   |         `-DeclRefExpr 0x91ac10 <col:28> 'long double' lvalue ParmVar 0x91a8d0 '__x' 'long double'
|   |-FunctionTemplateDecl 0x91b138 <line:173:3, line:178:35> line:177:5 ceil
|   | |-TemplateTypeParmDecl 0x91acb0 <line:173:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | `-FunctionDecl 0x91b098 <line:174:5, line:178:35> line:177:5 constexpr ceil 'typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, double>::__type (_Tp)' inline
|   |   |-ParmVarDecl 0x91afc0 <col:10, col:14> col:14 referenced __x '_Tp'
|   |   `-CompoundStmt 0x962ba8 <line:178:5, col:35>
|   |     `-ReturnStmt 0x962b98 <col:7, col:32>
|   |       `-CallExpr 0x962b70 <col:14, col:32> '<dependent type>'
|   |         |-DeclRefExpr 0x91b378 <col:14> '<builtin fn type>' Function 0x91b1e8 '__builtin_ceil' 'double (double) noexcept'
|   |         `-DeclRefExpr 0x962b50 <col:29> '_Tp' lvalue ParmVar 0x91afc0 '__x' '_Tp'
|   |-UsingDecl 0x962bc8 <line:180:3, col:11> col:11 ::cos
|   |-UsingShadowDecl 0x962c20 <col:11> col:11 implicit Function 0x8fba88 'cos' 'double (double) throw()'
|   |-FunctionDecl 0x962d20 <line:183:3, line:185:33> line:184:3 constexpr cos 'float (float)' inline
|   | |-ParmVarDecl 0x962c88 <col:7, col:13> col:13 used __x 'float'
|   | `-CompoundStmt 0x963028 <line:185:3, col:33>
|   |   `-ReturnStmt 0x963018 <col:5, col:30>
|   |     `-CallExpr 0x962fd8 <col:12, col:30> 'float'
|   |       |-ImplicitCastExpr 0x962fc0 <col:12> 'float (*)(float) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0x962f80 <col:12> '<builtin fn type>' Function 0x962e18 '__builtin_cosf' 'float (float) noexcept'
|   |       `-ImplicitCastExpr 0x963000 <col:27> 'float' <LValueToRValue>
|   |         `-DeclRefExpr 0x962fa0 <col:27> 'float' lvalue ParmVar 0x962c88 '__x' 'float'
|   |-FunctionDecl 0x9630f0 <line:187:3, line:189:33> line:188:3 constexpr cos 'long double (long double)' inline
|   | |-ParmVarDecl 0x963058 <col:7, col:19> col:19 used __x 'long double'
|   | `-CompoundStmt 0x9633f8 <line:189:3, col:33>
|   |   `-ReturnStmt 0x9633e8 <col:5, col:30>
|   |     `-CallExpr 0x9633a8 <col:12, col:30> 'long double'
|   |       |-ImplicitCastExpr 0x963390 <col:12> 'long double (*)(long double) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0x963350 <col:12> '<builtin fn type>' Function 0x9631e8 '__builtin_cosl' 'long double (long double) noexcept'
|   |       `-ImplicitCastExpr 0x9633d0 <col:27> 'long double' <LValueToRValue>
|   |         `-DeclRefExpr 0x963370 <col:27> 'long double' lvalue ParmVar 0x963058 '__x' 'long double'
|   |-FunctionTemplateDecl 0x963898 <line:192:3, line:197:34> line:196:5 cos
|   | |-TemplateTypeParmDecl 0x963410 <line:192:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | `-FunctionDecl 0x9637f8 <line:193:5, line:197:34> line:196:5 constexpr cos 'typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, double>::__type (_Tp)' inline
|   |   |-ParmVarDecl 0x963720 <col:9, col:13> col:13 referenced __x '_Tp'
|   |   `-CompoundStmt 0x963b28 <line:197:5, col:34>
|   |     `-ReturnStmt 0x963b18 <col:7, col:31>
|   |       `-CallExpr 0x963af0 <col:14, col:31> '<dependent type>'
|   |         |-DeclRefExpr 0x963ab0 <col:14> '<builtin fn type>' Function 0x963948 '__builtin_cos' 'double (double) noexcept'
|   |         `-DeclRefExpr 0x963ad0 <col:28> '_Tp' lvalue ParmVar 0x963720 '__x' '_Tp'
|   |-UsingDecl 0x963b48 <line:199:3, col:11> col:11 ::cosh
|   |-UsingShadowDecl 0x963ba0 <col:11> col:11 implicit Function 0x8fe950 'cosh' 'double (double) throw()'
|   |-FunctionDecl 0x963ca0 <line:202:3, line:204:34> line:203:3 constexpr cosh 'float (float)' inline
|   | |-ParmVarDecl 0x963c08 <col:8, col:14> col:14 used __x 'float'
|   | `-CompoundStmt 0x963fa8 <line:204:3, col:34>
|   |   `-ReturnStmt 0x963f98 <col:5, col:31>
|   |     `-CallExpr 0x963f58 <col:12, col:31> 'float'
|   |       |-ImplicitCastExpr 0x963f40 <col:12> 'float (*)(float) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0x963f00 <col:12> '<builtin fn type>' Function 0x963d98 '__builtin_coshf' 'float (float) noexcept'
|   |       `-ImplicitCastExpr 0x963f80 <col:28> 'float' <LValueToRValue>
|   |         `-DeclRefExpr 0x963f20 <col:28> 'float' lvalue ParmVar 0x963c08 '__x' 'float'
|   |-FunctionDecl 0x964070 <line:206:3, line:208:34> line:207:3 constexpr cosh 'long double (long double)' inline
|   | |-ParmVarDecl 0x963fd8 <col:8, col:20> col:20 used __x 'long double'
|   | `-CompoundStmt 0x964378 <line:208:3, col:34>
|   |   `-ReturnStmt 0x964368 <col:5, col:31>
|   |     `-CallExpr 0x964328 <col:12, col:31> 'long double'
|   |       |-ImplicitCastExpr 0x964310 <col:12> 'long double (*)(long double) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0x9642d0 <col:12> '<builtin fn type>' Function 0x964168 '__builtin_coshl' 'long double (long double) noexcept'
|   |       `-ImplicitCastExpr 0x964350 <col:28> 'long double' <LValueToRValue>
|   |         `-DeclRefExpr 0x9642f0 <col:28> 'long double' lvalue ParmVar 0x963fd8 '__x' 'long double'
|   |-FunctionTemplateDecl 0x964818 <line:211:3, line:216:35> line:215:5 cosh
|   | |-TemplateTypeParmDecl 0x964390 <line:211:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | `-FunctionDecl 0x964778 <line:212:5, line:216:35> line:215:5 constexpr cosh 'typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, double>::__type (_Tp)' inline
|   |   |-ParmVarDecl 0x9646a0 <col:10, col:14> col:14 referenced __x '_Tp'
|   |   `-CompoundStmt 0x964aa8 <line:216:5, col:35>
|   |     `-ReturnStmt 0x964a98 <col:7, col:32>
|   |       `-CallExpr 0x964a70 <col:14, col:32> '<dependent type>'
|   |         |-DeclRefExpr 0x964a30 <col:14> '<builtin fn type>' Function 0x9648c8 '__builtin_cosh' 'double (double) noexcept'
|   |         `-DeclRefExpr 0x964a50 <col:29> '_Tp' lvalue ParmVar 0x9646a0 '__x' '_Tp'
|   |-UsingDecl 0x964ac8 <line:218:3, col:11> col:11 ::exp
|   |-UsingShadowDecl 0x964b60 <col:11> col:11 implicit Function 0x8e9b40 'exp' 'double (double) throw()'
|   |-FunctionDecl 0x964c60 <line:221:3, line:223:33> line:222:3 constexpr exp 'float (float)' inline
|   | |-ParmVarDecl 0x964bc8 <col:7, col:13> col:13 used __x 'float'
|   | `-CompoundStmt 0x964f68 <line:223:3, col:33>
|   |   `-ReturnStmt 0x964f58 <col:5, col:30>
|   |     `-CallExpr 0x964f18 <col:12, col:30> 'float'
|   |       |-ImplicitCastExpr 0x964f00 <col:12> 'float (*)(float) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0x964ec0 <col:12> '<builtin fn type>' Function 0x964d58 '__builtin_expf' 'float (float) noexcept'
|   |       `-ImplicitCastExpr 0x964f40 <col:27> 'float' <LValueToRValue>
|   |         `-DeclRefExpr 0x964ee0 <col:27> 'float' lvalue ParmVar 0x964bc8 '__x' 'float'
|   |-FunctionDecl 0x965030 <line:225:3, line:227:33> line:226:3 constexpr exp 'long double (long double)' inline
|   | |-ParmVarDecl 0x964f98 <col:7, col:19> col:19 used __x 'long double'
|   | `-CompoundStmt 0x965338 <line:227:3, col:33>
|   |   `-ReturnStmt 0x965328 <col:5, col:30>
|   |     `-CallExpr 0x9652e8 <col:12, col:30> 'long double'
|   |       |-ImplicitCastExpr 0x9652d0 <col:12> 'long double (*)(long double) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0x965290 <col:12> '<builtin fn type>' Function 0x965128 '__builtin_expl' 'long double (long double) noexcept'
|   |       `-ImplicitCastExpr 0x965310 <col:27> 'long double' <LValueToRValue>
|   |         `-DeclRefExpr 0x9652b0 <col:27> 'long double' lvalue ParmVar 0x964f98 '__x' 'long double'
|   |-FunctionTemplateDecl 0x9657d8 <line:230:3, line:235:34> line:234:5 exp
|   | |-TemplateTypeParmDecl 0x965350 <line:230:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | `-FunctionDecl 0x965738 <line:231:5, line:235:34> line:234:5 constexpr exp 'typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, double>::__type (_Tp)' inline
|   |   |-ParmVarDecl 0x965660 <col:9, col:13> col:13 referenced __x '_Tp'
|   |   `-CompoundStmt 0x965a68 <line:235:5, col:34>
|   |     `-ReturnStmt 0x965a58 <col:7, col:31>
|   |       `-CallExpr 0x965a30 <col:14, col:31> '<dependent type>'
|   |         |-DeclRefExpr 0x9659f0 <col:14> '<builtin fn type>' Function 0x965888 '__builtin_exp' 'double (double) noexcept'
|   |         `-DeclRefExpr 0x965a10 <col:28> '_Tp' lvalue ParmVar 0x965660 '__x' '_Tp'
|   |-UsingDecl 0x965a88 <line:237:3, col:11> col:11 ::fabs
|   |-UsingShadowDecl 0x965ae0 <col:11> col:11 implicit Function 0x8effa0 'fabs' 'double (double) throw()'
|   |-FunctionDecl 0x965be0 <line:240:3, line:242:34> line:241:3 constexpr fabs 'float (float)' inline
|   | |-ParmVarDecl 0x965b48 <col:8, col:14> col:14 used __x 'float'
|   | `-CompoundStmt 0x965d30 <line:242:3, col:34>
|   |   `-ReturnStmt 0x965d20 <col:5, col:31>
|   |     `-CallExpr 0x965ce0 <col:12, col:31> 'float'
|   |       |-ImplicitCastExpr 0x965cc8 <col:12> 'float (*)(float) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0x965c88 <col:12> '<builtin fn type>' Function 0xa20270 '__builtin_fabsf' 'float (float) noexcept'
|   |       `-ImplicitCastExpr 0x965d08 <col:28> 'float' <LValueToRValue>
|   |         `-DeclRefExpr 0x965ca8 <col:28> 'float' lvalue ParmVar 0x965b48 '__x' 'float'
|   |-FunctionDecl 0x965df8 <line:244:3, line:246:34> line:245:3 constexpr fabs 'long double (long double)' inline
|   | |-ParmVarDecl 0x965d60 <col:8, col:20> col:20 used __x 'long double'
|   | `-CompoundStmt 0x965f48 <line:246:3, col:34>
|   |   `-ReturnStmt 0x965f38 <col:5, col:31>
|   |     `-CallExpr 0x965ef8 <col:12, col:31> 'long double'
|   |       |-ImplicitCastExpr 0x965ee0 <col:12> 'long double (*)(long double) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0x965ea0 <col:12> '<builtin fn type>' Function 0xa206c0 '__builtin_fabsl' 'long double (long double) noexcept'
|   |       `-ImplicitCastExpr 0x965f20 <col:28> 'long double' <LValueToRValue>
|   |         `-DeclRefExpr 0x965ec0 <col:28> 'long double' lvalue ParmVar 0x965d60 '__x' 'long double'
|   |-FunctionTemplateDecl 0x9663e8 <line:249:3, line:254:35> line:253:5 fabs
|   | |-TemplateTypeParmDecl 0x965f60 <line:249:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | `-FunctionDecl 0x966348 <line:250:5, line:254:35> line:253:5 constexpr fabs 'typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, double>::__type (_Tp)' inline
|   |   |-ParmVarDecl 0x966270 <col:10, col:14> col:14 referenced __x '_Tp'
|   |   `-CompoundStmt 0x9664c0 <line:254:5, col:35>
|   |     `-ReturnStmt 0x9664b0 <col:7, col:32>
|   |       `-CallExpr 0x966488 <col:14, col:32> '<dependent type>'
|   |         |-DeclRefExpr 0x966448 <col:14> '<builtin fn type>' Function 0xa1fe20 '__builtin_fabs' 'double (double) noexcept'
|   |         `-DeclRefExpr 0x966468 <col:29> '_Tp' lvalue ParmVar 0x966270 '__x' '_Tp'
|   |-UsingDecl 0x9664e0 <line:256:3, col:11> col:11 ::floor
|   |-UsingShadowDecl 0x966538 <col:11> col:11 implicit Function 0x8f0338 'floor' 'double (double) throw()'
|   |-FunctionDecl 0x966638 <line:259:3, line:261:35> line:260:3 constexpr floor 'float (float)' inline
|   | |-ParmVarDecl 0x9665a0 <col:9, col:15> col:15 used __x 'float'
|   | `-CompoundStmt 0x966968 <line:261:3, col:35>
|   |   `-ReturnStmt 0x966958 <col:5, col:32>
|   |     `-CallExpr 0x966918 <col:12, col:32> 'float'
|   |       |-ImplicitCastExpr 0x966900 <col:12> 'float (*)(float) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0x9668c0 <col:12> '<builtin fn type>' Function 0x966730 '__builtin_floorf' 'float (float) noexcept'
|   |       `-ImplicitCastExpr 0x966940 <col:29> 'float' <LValueToRValue>
|   |         `-DeclRefExpr 0x9668e0 <col:29> 'float' lvalue ParmVar 0x9665a0 '__x' 'float'
|   |-FunctionDecl 0x966a30 <line:263:3, line:265:35> line:264:3 constexpr floor 'long double (long double)' inline
|   | |-ParmVarDecl 0x966998 <col:9, col:21> col:21 used __x 'long double'
|   | `-CompoundStmt 0x966da8 <line:265:3, col:35>
|   |   `-ReturnStmt 0x966d98 <col:5, col:32>
|   |     `-CallExpr 0x966d58 <col:12, col:32> 'long double'
|   |       |-ImplicitCastExpr 0x966d40 <col:12> 'long double (*)(long double) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0x966d00 <col:12> '<builtin fn type>' Function 0x966b70 '__builtin_floorl' 'long double (long double) noexcept'
|   |       `-ImplicitCastExpr 0x966d80 <col:29> 'long double' <LValueToRValue>
|   |         `-DeclRefExpr 0x966d20 <col:29> 'long double' lvalue ParmVar 0x966998 '__x' 'long double'
|   |-FunctionTemplateDecl 0x967248 <line:268:3, line:273:36> line:272:5 floor
|   | |-TemplateTypeParmDecl 0x966dc0 <line:268:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | `-FunctionDecl 0x9671a8 <line:269:5, line:273:36> line:272:5 constexpr floor 'typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, double>::__type (_Tp)' inline
|   |   |-ParmVarDecl 0x9670d0 <col:11, col:15> col:15 referenced __x '_Tp'
|   |   `-CompoundStmt 0x967500 <line:273:5, col:36>
|   |     `-ReturnStmt 0x9674f0 <col:7, col:33>
|   |       `-CallExpr 0x9674c8 <col:14, col:33> '<dependent type>'
|   |         |-DeclRefExpr 0x967488 <col:14> '<builtin fn type>' Function 0x9672f8 '__builtin_floor' 'double (double) noexcept'
|   |         `-DeclRefExpr 0x9674a8 <col:30> '_Tp' lvalue ParmVar 0x9670d0 '__x' '_Tp'
|   |-UsingDecl 0x967520 <line:275:3, col:11> col:11 ::fmod
|   |-UsingShadowDecl 0x967578 <col:11> col:11 implicit Function 0x8f0758 'fmod' 'double (double, double) throw()'
|   |-FunctionDecl 0x967700 <line:278:3, line:280:39> line:279:3 constexpr fmod 'float (float, float)' inline
|   | |-ParmVarDecl 0x9675e0 <col:8, col:14> col:14 used __x 'float'
|   | |-ParmVarDecl 0x967660 <col:19, col:25> col:25 used __y 'float'
|   | `-CompoundStmt 0x967ac0 <line:280:3, col:39>
|   |   `-ReturnStmt 0x967ab0 <col:5, col:36>
|   |     `-CallExpr 0x967a50 <col:12, col:36> 'float'
|   |       |-ImplicitCastExpr 0x967a38 <col:12> 'float (*)(float, float) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0x9679d8 <col:12> '<builtin fn type>' Function 0x967800 '__builtin_fmodf' 'float (float, float) noexcept'
|   |       |-ImplicitCastExpr 0x967a80 <col:28> 'float' <LValueToRValue>
|   |       | `-DeclRefExpr 0x9679f8 <col:28> 'float' lvalue ParmVar 0x9675e0 '__x' 'float'
|   |       `-ImplicitCastExpr 0x967a98 <col:33> 'float' <LValueToRValue>
|   |         `-DeclRefExpr 0x967a18 <col:33> 'float' lvalue ParmVar 0x967660 '__y' 'float'
|   |-FunctionDecl 0x967c10 <line:282:3, line:284:39> line:283:3 constexpr fmod 'long double (long double, long double)' inline
|   | |-ParmVarDecl 0x967af0 <col:8, col:20> col:20 used __x 'long double'
|   | |-ParmVarDecl 0x967b70 <col:25, col:37> col:37 used __y 'long double'
|   | `-CompoundStmt 0x967fd0 <line:284:3, col:39>
|   |   `-ReturnStmt 0x967fc0 <col:5, col:36>
|   |     `-CallExpr 0x967f60 <col:12, col:36> 'long double'
|   |       |-ImplicitCastExpr 0x967f48 <col:12> 'long double (*)(long double, long double) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0x967ee8 <col:12> '<builtin fn type>' Function 0x967d10 '__builtin_fmodl' 'long double (long double, long double) noexcept'
|   |       |-ImplicitCastExpr 0x967f90 <col:28> 'long double' <LValueToRValue>
|   |       | `-DeclRefExpr 0x967f08 <col:28> 'long double' lvalue ParmVar 0x967af0 '__x' 'long double'
|   |       `-ImplicitCastExpr 0x967fa8 <col:33> 'long double' <LValueToRValue>
|   |         `-DeclRefExpr 0x967f28 <col:33> 'long double' lvalue ParmVar 0x967b70 '__y' 'long double'
|   |-FunctionTemplateDecl 0x968858 <line:287:3, line:294:5> line:290:5 fmod
|   | |-TemplateTypeParmDecl 0x967fe8 <line:287:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl 0x968068 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
|   | `-FunctionDecl 0x9687b8 <line:288:5, line:294:5> line:290:5 constexpr fmod 'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type (_Tp, _Up)' inline
|   |   |-ParmVarDecl 0x968660 <col:10, col:14> col:14 referenced __x '_Tp'
|   |   |-ParmVarDecl 0x9686d8 <col:19, col:23> col:23 referenced __y '_Up'
|   |   `-CompoundStmt 0xa3f2b0 <line:291:5, line:294:5>
|   |     |-DeclStmt 0xa3f128 <line:292:7, col:71>
|   |     | `-TypedefDecl 0xa3f0d0 <col:7, col:65> col:65 referenced __type 'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'
|   |     |   `-DependentNameType 0xa3f060 'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type' dependent
|   |     `-ReturnStmt 0xa3f2a0 <line:293:7, col:43>
|   |       `-CallExpr 0xa3f270 <col:14, col:43> '<dependent type>'
|   |         |-UnresolvedLookupExpr 0xa3f140 <col:14> '<overloaded function type>' lvalue (ADL) = 'fmod' 0x968858 0x967c10 0x967700 0x967578
|   |         |-CXXUnresolvedConstructExpr 0xa3f1f0 <col:19, col:29> '__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type' '__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'
|   |         | `-DeclRefExpr 0xa3f1d0 <col:26> '_Tp' lvalue ParmVar 0x968660 '__x' '_Tp'
|   |         `-CXXUnresolvedConstructExpr 0xa3f248 <col:32, col:42> '__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type' '__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'
|   |           `-DeclRefExpr 0xa3f228 <col:39> '_Up' lvalue ParmVar 0x9686d8 '__y' '_Up'
|   |-UsingDecl 0xa3f2d8 <line:296:3, col:11> col:11 ::frexp
|   |-UsingShadowDecl 0xa3f330 <col:11> col:11 implicit Function 0x8e9f88 'frexp' 'double (double, int *) throw()'
|   |-FunctionDecl 0xa3f4b8 <line:299:3, line:301:42> line:300:3 frexp 'float (float, int *)' inline
|   | |-ParmVarDecl 0xa3f398 <col:9, col:15> col:15 used __x 'float'
|   | |-ParmVarDecl 0xa3f418 <col:20, col:25> col:25 used __exp 'int *'
|   | `-CompoundStmt 0xa3f900 <line:301:3, col:42>
|   |   `-ReturnStmt 0xa3f8f0 <col:5, col:39>
|   |     `-CallExpr 0xa3f890 <col:12, col:39> 'float'
|   |       |-ImplicitCastExpr 0xa3f878 <col:12> 'float (*)(float, int *) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa3f790 <col:12> '<builtin fn type>' Function 0xa3f5b8 '__builtin_frexpf' 'float (float, int *) noexcept'
|   |       |-ImplicitCastExpr 0xa3f8c0 <col:29> 'float' <LValueToRValue>
|   |       | `-DeclRefExpr 0xa3f7b0 <col:29> 'float' lvalue ParmVar 0xa3f398 '__x' 'float'
|   |       `-ImplicitCastExpr 0xa3f8d8 <col:34> 'int *' <LValueToRValue>
|   |         `-DeclRefExpr 0xa3f7d0 <col:34> 'int *' lvalue ParmVar 0xa3f418 '__exp' 'int *'
|   |-FunctionDecl 0xa3fa50 <line:303:3, line:305:42> line:304:3 frexp 'long double (long double, int *)' inline
|   | |-ParmVarDecl 0xa3f930 <col:9, col:21> col:21 used __x 'long double'
|   | |-ParmVarDecl 0xa3f9b0 <col:26, col:31> col:31 used __exp 'int *'
|   | `-CompoundStmt 0xa3fea0 <line:305:3, col:42>
|   |   `-ReturnStmt 0xa3fe90 <col:5, col:39>
|   |     `-CallExpr 0xa3fe30 <col:12, col:39> 'long double'
|   |       |-ImplicitCastExpr 0xa3fe18 <col:12> 'long double (*)(long double, int *) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa3fd28 <col:12> '<builtin fn type>' Function 0xa3fb50 '__builtin_frexpl' 'long double (long double, int *) noexcept'
|   |       |-ImplicitCastExpr 0xa3fe60 <col:29> 'long double' <LValueToRValue>
|   |       | `-DeclRefExpr 0xa3fd48 <col:29> 'long double' lvalue ParmVar 0xa3f930 '__x' 'long double'
|   |       `-ImplicitCastExpr 0xa3fe78 <col:34> 'int *' <LValueToRValue>
|   |         `-DeclRefExpr 0xa3fd68 <col:34> 'int *' lvalue ParmVar 0xa3f9b0 '__exp' 'int *'
|   |-FunctionTemplateDecl 0xa40418 <line:308:3, line:313:43> line:312:5 frexp
|   | |-TemplateTypeParmDecl 0xa3feb8 <line:308:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | `-FunctionDecl 0xa40378 <line:309:5, line:313:43> line:312:5 constexpr frexp 'typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, double>::__type (_Tp, int *)' inline
|   |   |-ParmVarDecl 0xa401d0 <col:11, col:15> col:15 referenced __x '_Tp'
|   |   |-ParmVarDecl 0xa40250 <col:20, col:25> col:25 referenced __exp 'int *'
|   |   `-CompoundStmt 0xa40748 <line:313:5, col:43>
|   |     `-ReturnStmt 0xa40738 <col:7, col:40>
|   |       `-CallExpr 0xa40708 <col:14, col:40> '<dependent type>'
|   |         |-DeclRefExpr 0xa406a8 <col:14> '<builtin fn type>' Function 0xa404d0 '__builtin_frexp' 'double (double, int *) noexcept'
|   |         |-DeclRefExpr 0xa406c8 <col:30> '_Tp' lvalue ParmVar 0xa401d0 '__x' '_Tp'
|   |         `-DeclRefExpr 0xa406e8 <col:35> 'int *' lvalue ParmVar 0xa40250 '__exp' 'int *'
|   |-UsingDecl 0xa40768 <line:315:3, col:11> col:11 ::ldexp
|   |-UsingShadowDecl 0xa407c0 <col:11> col:11 implicit Function 0x8ea478 'ldexp' 'double (double, int) throw()'
|   |-FunctionDecl 0xa40948 <line:318:3, line:320:42> line:319:3 constexpr ldexp 'float (float, int)' inline
|   | |-ParmVarDecl 0xa40828 <col:9, col:15> col:15 used __x 'float'
|   | |-ParmVarDecl 0xa408a8 <col:20, col:24> col:24 used __exp 'int'
|   | `-CompoundStmt 0xa40d60 <line:320:3, col:42>
|   |   `-ReturnStmt 0xa40d50 <col:5, col:39>
|   |     `-CallExpr 0xa40cf0 <col:12, col:39> 'float'
|   |       |-ImplicitCastExpr 0xa40cd8 <col:12> 'float (*)(float, int) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa40c20 <col:12> '<builtin fn type>' Function 0xa40a48 '__builtin_ldexpf' 'float (float, int) noexcept'
|   |       |-ImplicitCastExpr 0xa40d20 <col:29> 'float' <LValueToRValue>
|   |       | `-DeclRefExpr 0xa40c40 <col:29> 'float' lvalue ParmVar 0xa40828 '__x' 'float'
|   |       `-ImplicitCastExpr 0xa40d38 <col:34> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0xa40c60 <col:34> 'int' lvalue ParmVar 0xa408a8 '__exp' 'int'
|   |-FunctionDecl 0xa40ed0 <line:322:3, line:324:42> line:323:3 constexpr ldexp 'long double (long double, int)' inline
|   | |-ParmVarDecl 0xa40d90 <col:9, col:21> col:21 used __x 'long double'
|   | |-ParmVarDecl 0xa40e30 <col:26, col:30> col:30 used __exp 'int'
|   | `-CompoundStmt 0xa412f0 <line:324:3, col:42>
|   |   `-ReturnStmt 0xa412e0 <col:5, col:39>
|   |     `-CallExpr 0xa41280 <col:12, col:39> 'long double'
|   |       |-ImplicitCastExpr 0xa41268 <col:12> 'long double (*)(long double, int) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa411a8 <col:12> '<builtin fn type>' Function 0xa40fd0 '__builtin_ldexpl' 'long double (long double, int) noexcept'
|   |       |-ImplicitCastExpr 0xa412b0 <col:29> 'long double' <LValueToRValue>
|   |       | `-DeclRefExpr 0xa411c8 <col:29> 'long double' lvalue ParmVar 0xa40d90 '__x' 'long double'
|   |       `-ImplicitCastExpr 0xa412c8 <col:34> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0xa411e8 <col:34> 'int' lvalue ParmVar 0xa40e30 '__exp' 'int'
|   |-FunctionTemplateDecl 0xa41868 <line:327:3, line:332:43> line:331:5 ldexp
|   | |-TemplateTypeParmDecl 0xa41308 <line:327:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | `-FunctionDecl 0xa417c8 <line:328:5, line:332:43> line:331:5 constexpr ldexp 'typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, double>::__type (_Tp, int)' inline
|   |   |-ParmVarDecl 0xa41620 <col:11, col:15> col:15 referenced __x '_Tp'
|   |   |-ParmVarDecl 0xa416a0 <col:20, col:24> col:24 referenced __exp 'int'
|   |   `-CompoundStmt 0xa41b98 <line:332:5, col:43>
|   |     `-ReturnStmt 0xa41b88 <col:7, col:40>
|   |       `-CallExpr 0xa41b58 <col:14, col:40> '<dependent type>'
|   |         |-DeclRefExpr 0xa41af8 <col:14> '<builtin fn type>' Function 0xa41920 '__builtin_ldexp' 'double (double, int) noexcept'
|   |         |-DeclRefExpr 0xa41b18 <col:30> '_Tp' lvalue ParmVar 0xa41620 '__x' '_Tp'
|   |         `-DeclRefExpr 0xa41b38 <col:35> 'int' lvalue ParmVar 0xa416a0 '__exp' 'int'
|   |-UsingDecl 0xa41bb8 <line:334:3, col:11> col:11 ::log
|   |-UsingShadowDecl 0xa41c10 <col:11> col:11 implicit Function 0x8ea868 'log' 'double (double) throw()'
|   |-FunctionDecl 0xa41d10 <line:337:3, line:339:33> line:338:3 constexpr log 'float (float)' inline
|   | |-ParmVarDecl 0xa41c78 <col:7, col:13> col:13 used __x 'float'
|   | `-CompoundStmt 0xa42018 <line:339:3, col:33>
|   |   `-ReturnStmt 0xa42008 <col:5, col:30>
|   |     `-CallExpr 0xa41fc8 <col:12, col:30> 'float'
|   |       |-ImplicitCastExpr 0xa41fb0 <col:12> 'float (*)(float) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa41f70 <col:12> '<builtin fn type>' Function 0xa41e08 '__builtin_logf' 'float (float) noexcept'
|   |       `-ImplicitCastExpr 0xa41ff0 <col:27> 'float' <LValueToRValue>
|   |         `-DeclRefExpr 0xa41f90 <col:27> 'float' lvalue ParmVar 0xa41c78 '__x' 'float'
|   |-FunctionDecl 0xa420e0 <line:341:3, line:343:33> line:342:3 constexpr log 'long double (long double)' inline
|   | |-ParmVarDecl 0xa42048 <col:7, col:19> col:19 used __x 'long double'
|   | `-CompoundStmt 0xa423e8 <line:343:3, col:33>
|   |   `-ReturnStmt 0xa423d8 <col:5, col:30>
|   |     `-CallExpr 0xa42398 <col:12, col:30> 'long double'
|   |       |-ImplicitCastExpr 0xa42380 <col:12> 'long double (*)(long double) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa42340 <col:12> '<builtin fn type>' Function 0xa421d8 '__builtin_logl' 'long double (long double) noexcept'
|   |       `-ImplicitCastExpr 0xa423c0 <col:27> 'long double' <LValueToRValue>
|   |         `-DeclRefExpr 0xa42360 <col:27> 'long double' lvalue ParmVar 0xa42048 '__x' 'long double'
|   |-FunctionTemplateDecl 0xa42888 <line:346:3, line:351:34> line:350:5 log
|   | |-TemplateTypeParmDecl 0xa42400 <line:346:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | `-FunctionDecl 0xa427e8 <line:347:5, line:351:34> line:350:5 constexpr log 'typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, double>::__type (_Tp)' inline
|   |   |-ParmVarDecl 0xa42710 <col:9, col:13> col:13 referenced __x '_Tp'
|   |   `-CompoundStmt 0xa42b18 <line:351:5, col:34>
|   |     `-ReturnStmt 0xa42b08 <col:7, col:31>
|   |       `-CallExpr 0xa42ae0 <col:14, col:31> '<dependent type>'
|   |         |-DeclRefExpr 0xa42aa0 <col:14> '<builtin fn type>' Function 0xa42938 '__builtin_log' 'double (double) noexcept'
|   |         `-DeclRefExpr 0xa42ac0 <col:28> '_Tp' lvalue ParmVar 0xa42710 '__x' '_Tp'
|   |-UsingDecl 0xa42b38 <line:353:3, col:11> col:11 ::log10
|   |-UsingShadowDecl 0xa42b90 <col:11> col:11 implicit Function 0x8eae50 'log10' 'double (double) throw()'
|   |-FunctionDecl 0xa42c90 <line:356:3, line:358:35> line:357:3 constexpr log10 'float (float)' inline
|   | |-ParmVarDecl 0xa42bf8 <col:9, col:15> col:15 used __x 'float'
|   | `-CompoundStmt 0xa42fb0 <line:358:3, col:35>
|   |   `-ReturnStmt 0xa42fa0 <col:5, col:32>
|   |     `-CallExpr 0xa42f60 <col:12, col:32> 'float'
|   |       |-ImplicitCastExpr 0xa42f48 <col:12> 'float (*)(float) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa42f08 <col:12> '<builtin fn type>' Function 0xa42d88 '__builtin_log10f' 'float (float) noexcept'
|   |       `-ImplicitCastExpr 0xa42f88 <col:29> 'float' <LValueToRValue>
|   |         `-DeclRefExpr 0xa42f28 <col:29> 'float' lvalue ParmVar 0xa42bf8 '__x' 'float'
|   |-FunctionDecl 0xa43078 <line:360:3, line:362:35> line:361:3 constexpr log10 'long double (long double)' inline
|   | |-ParmVarDecl 0xa42fe0 <col:9, col:21> col:21 used __x 'long double'
|   | `-CompoundStmt 0xa43380 <line:362:3, col:35>
|   |   `-ReturnStmt 0xa43370 <col:5, col:32>
|   |     `-CallExpr 0xa43330 <col:12, col:32> 'long double'
|   |       |-ImplicitCastExpr 0xa43318 <col:12> 'long double (*)(long double) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa432d8 <col:12> '<builtin fn type>' Function 0xa43170 '__builtin_log10l' 'long double (long double) noexcept'
|   |       `-ImplicitCastExpr 0xa43358 <col:29> 'long double' <LValueToRValue>
|   |         `-DeclRefExpr 0xa432f8 <col:29> 'long double' lvalue ParmVar 0xa42fe0 '__x' 'long double'
|   |-FunctionTemplateDecl 0xa43828 <line:365:3, line:370:36> line:369:5 log10
|   | |-TemplateTypeParmDecl 0xa43398 <line:365:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | `-FunctionDecl 0xa43788 <line:366:5, line:370:36> line:369:5 constexpr log10 'typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, double>::__type (_Tp)' inline
|   |   |-ParmVarDecl 0xa436b0 <col:11, col:15> col:15 referenced __x '_Tp'
|   |   `-CompoundStmt 0xa43ab8 <line:370:5, col:36>
|   |     `-ReturnStmt 0xa43aa8 <col:7, col:33>
|   |       `-CallExpr 0xa43a80 <col:14, col:33> '<dependent type>'
|   |         |-DeclRefExpr 0xa43a40 <col:14> '<builtin fn type>' Function 0xa438d8 '__builtin_log10' 'double (double) noexcept'
|   |         `-DeclRefExpr 0xa43a60 <col:30> '_Tp' lvalue ParmVar 0xa436b0 '__x' '_Tp'
|   |-UsingDecl 0xa43ad8 <line:372:3, col:11> col:11 ::modf
|   |-UsingShadowDecl 0xa43b30 <col:11> col:11 implicit Function 0x8eb268 'modf' 'double (double, double *) throw()'
|   |-FunctionDecl 0xa43cb8 <line:375:3, line:377:42> line:376:3 modf 'float (float, float *)' inline
|   | |-ParmVarDecl 0xa43b98 <col:8, col:14> col:14 used __x 'float'
|   | |-ParmVarDecl 0xa43c18 <col:19, col:26> col:26 used __iptr 'float *'
|   | `-CompoundStmt 0xa44100 <line:377:3, col:42>
|   |   `-ReturnStmt 0xa440f0 <col:5, col:39>
|   |     `-CallExpr 0xa44090 <col:12, col:39> 'float'
|   |       |-ImplicitCastExpr 0xa44078 <col:12> 'float (*)(float, float *) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa43f90 <col:12> '<builtin fn type>' Function 0xa43db8 '__builtin_modff' 'float (float, float *) noexcept'
|   |       |-ImplicitCastExpr 0xa440c0 <col:28> 'float' <LValueToRValue>
|   |       | `-DeclRefExpr 0xa43fb0 <col:28> 'float' lvalue ParmVar 0xa43b98 '__x' 'float'
|   |       `-ImplicitCastExpr 0xa440d8 <col:33> 'float *' <LValueToRValue>
|   |         `-DeclRefExpr 0xa43fd0 <col:33> 'float *' lvalue ParmVar 0xa43c18 '__iptr' 'float *'
|   |-FunctionDecl 0xa44250 <line:379:3, line:381:42> line:380:3 modf 'long double (long double, long double *)' inline
|   | |-ParmVarDecl 0xa44130 <col:8, col:20> col:20 used __x 'long double'
|   | |-ParmVarDecl 0xa441b0 <col:25, col:38> col:38 used __iptr 'long double *'
|   | `-CompoundStmt 0xa446a0 <line:381:3, col:42>
|   |   `-ReturnStmt 0xa44690 <col:5, col:39>
|   |     `-CallExpr 0xa44630 <col:12, col:39> 'long double'
|   |       |-ImplicitCastExpr 0xa44618 <col:12> 'long double (*)(long double, long double *) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa44528 <col:12> '<builtin fn type>' Function 0xa44350 '__builtin_modfl' 'long double (long double, long double *) noexcept'
|   |       |-ImplicitCastExpr 0xa44660 <col:28> 'long double' <LValueToRValue>
|   |       | `-DeclRefExpr 0xa44548 <col:28> 'long double' lvalue ParmVar 0xa44130 '__x' 'long double'
|   |       `-ImplicitCastExpr 0xa44678 <col:33> 'long double *' <LValueToRValue>
|   |         `-DeclRefExpr 0xa44568 <col:33> 'long double *' lvalue ParmVar 0xa441b0 '__iptr' 'long double *'
|   |-UsingDecl 0xa446c0 <line:384:3, col:11> col:11 ::pow
|   |-UsingShadowDecl 0xa44718 <col:11> col:11 implicit Function 0x8ee590 'pow' 'double (double, double) throw()'
|   |-FunctionDecl 0xa448a0 <line:387:3, line:389:38> line:388:3 constexpr pow 'float (float, float)' inline
|   | |-ParmVarDecl 0xa44780 <col:7, col:13> col:13 used __x 'float'
|   | |-ParmVarDecl 0xa44800 <col:18, col:24> col:24 used __y 'float'
|   | `-CompoundStmt 0xa44c60 <line:389:3, col:38>
|   |   `-ReturnStmt 0xa44c50 <col:5, col:35>
|   |     `-CallExpr 0xa44bf0 <col:12, col:35> 'float'
|   |       |-ImplicitCastExpr 0xa44bd8 <col:12> 'float (*)(float, float) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa44b78 <col:12> '<builtin fn type>' Function 0xa449a0 '__builtin_powf' 'float (float, float) noexcept'
|   |       |-ImplicitCastExpr 0xa44c20 <col:27> 'float' <LValueToRValue>
|   |       | `-DeclRefExpr 0xa44b98 <col:27> 'float' lvalue ParmVar 0xa44780 '__x' 'float'
|   |       `-ImplicitCastExpr 0xa44c38 <col:32> 'float' <LValueToRValue>
|   |         `-DeclRefExpr 0xa44bb8 <col:32> 'float' lvalue ParmVar 0xa44800 '__y' 'float'
|   |-FunctionDecl 0xa44e50 <line:391:3, line:393:38> line:392:3 constexpr pow 'long double (long double, long double)' inline
|   | |-ParmVarDecl 0xa44c90 <col:7, col:19> col:19 used __x 'long double'
|   | |-ParmVarDecl 0xa44d10 <col:24, col:36> col:36 used __y 'long double'
|   | `-CompoundStmt 0xa45210 <line:393:3, col:38>
|   |   `-ReturnStmt 0xa45200 <col:5, col:35>
|   |     `-CallExpr 0xa451a0 <col:12, col:35> 'long double'
|   |       |-ImplicitCastExpr 0xa45188 <col:12> 'long double (*)(long double, long double) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa45128 <col:12> '<builtin fn type>' Function 0xa44f50 '__builtin_powl' 'long double (long double, long double) noexcept'
|   |       |-ImplicitCastExpr 0xa451d0 <col:27> 'long double' <LValueToRValue>
|   |       | `-DeclRefExpr 0xa45148 <col:27> 'long double' lvalue ParmVar 0xa44c90 '__x' 'long double'
|   |       `-ImplicitCastExpr 0xa451e8 <col:32> 'long double' <LValueToRValue>
|   |         `-DeclRefExpr 0xa45168 <col:32> 'long double' lvalue ParmVar 0xa44d10 '__y' 'long double'
|   |-FunctionTemplateDecl 0xa45a98 <line:412:3, line:419:5> line:415:5 pow
|   | |-TemplateTypeParmDecl 0xa45228 <line:412:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl 0xa452a8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
|   | `-FunctionDecl 0xa459f8 <line:413:5, line:419:5> line:415:5 constexpr pow 'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type (_Tp, _Up)' inline
|   |   |-ParmVarDecl 0xa458a0 <col:9, col:13> col:13 referenced __x '_Tp'
|   |   |-ParmVarDecl 0xa45918 <col:18, col:22> col:22 referenced __y '_Up'
|   |   `-CompoundStmt 0xa46240 <line:416:5, line:419:5>
|   |     |-DeclStmt 0xa460b8 <line:417:7, col:71>
|   |     | `-TypedefDecl 0xa46060 <col:7, col:65> col:65 referenced __type 'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'
|   |     |   `-DependentNameType 0xa45ff0 'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type' dependent
|   |     `-ReturnStmt 0xa46230 <line:418:7, col:42>
|   |       `-CallExpr 0xa46200 <col:14, col:42> '<dependent type>'
|   |         |-UnresolvedLookupExpr 0xa460d0 <col:14> '<overloaded function type>' lvalue (ADL) = 'pow' 0xa45a98 0xa44e50 0xa448a0 0xa44718
|   |         |-CXXUnresolvedConstructExpr 0xa46180 <col:18, col:28> '__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type' '__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'
|   |         | `-DeclRefExpr 0xa46160 <col:25> '_Tp' lvalue ParmVar 0xa458a0 '__x' '_Tp'
|   |         `-CXXUnresolvedConstructExpr 0xa461d8 <col:31, col:41> '__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type' '__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'
|   |           `-DeclRefExpr 0xa461b8 <col:38> '_Up' lvalue ParmVar 0xa45918 '__y' '_Up'
|   |-UsingDecl 0xa46268 <line:421:3, col:11> col:11 ::sin
|   |-UsingShadowDecl 0xa462c0 <col:11> col:11 implicit Function 0x8fe320 'sin' 'double (double) throw()'
|   |-FunctionDecl 0xa463c0 <line:424:3, line:426:33> line:425:3 constexpr sin 'float (float)' inline
|   | |-ParmVarDecl 0xa46328 <col:7, col:13> col:13 used __x 'float'
|   | `-CompoundStmt 0xa466c8 <line:426:3, col:33>
|   |   `-ReturnStmt 0xa466b8 <col:5, col:30>
|   |     `-CallExpr 0xa46678 <col:12, col:30> 'float'
|   |       |-ImplicitCastExpr 0xa46660 <col:12> 'float (*)(float) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa46620 <col:12> '<builtin fn type>' Function 0xa464b8 '__builtin_sinf' 'float (float) noexcept'
|   |       `-ImplicitCastExpr 0xa466a0 <col:27> 'float' <LValueToRValue>
|   |         `-DeclRefExpr 0xa46640 <col:27> 'float' lvalue ParmVar 0xa46328 '__x' 'float'
|   |-FunctionDecl 0xa46790 <line:428:3, line:430:33> line:429:3 constexpr sin 'long double (long double)' inline
|   | |-ParmVarDecl 0xa466f8 <col:7, col:19> col:19 used __x 'long double'
|   | `-CompoundStmt 0xa46a98 <line:430:3, col:33>
|   |   `-ReturnStmt 0xa46a88 <col:5, col:30>
|   |     `-CallExpr 0xa46a48 <col:12, col:30> 'long double'
|   |       |-ImplicitCastExpr 0xa46a30 <col:12> 'long double (*)(long double) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa469f0 <col:12> '<builtin fn type>' Function 0xa46888 '__builtin_sinl' 'long double (long double) noexcept'
|   |       `-ImplicitCastExpr 0xa46a70 <col:27> 'long double' <LValueToRValue>
|   |         `-DeclRefExpr 0xa46a10 <col:27> 'long double' lvalue ParmVar 0xa466f8 '__x' 'long double'
|   |-FunctionTemplateDecl 0xa46f68 <line:433:3, line:438:34> line:437:5 sin
|   | |-TemplateTypeParmDecl 0xa46ab0 <line:433:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | `-FunctionDecl 0xa46ec8 <line:434:5, line:438:34> line:437:5 constexpr sin 'typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, double>::__type (_Tp)' inline
|   |   |-ParmVarDecl 0xa46dc0 <col:9, col:13> col:13 referenced __x '_Tp'
|   |   `-CompoundStmt 0xa471f8 <line:438:5, col:34>
|   |     `-ReturnStmt 0xa471e8 <col:7, col:31>
|   |       `-CallExpr 0xa471c0 <col:14, col:31> '<dependent type>'
|   |         |-DeclRefExpr 0xa47180 <col:14> '<builtin fn type>' Function 0xa47018 '__builtin_sin' 'double (double) noexcept'
|   |         `-DeclRefExpr 0xa471a0 <col:28> '_Tp' lvalue ParmVar 0xa46dc0 '__x' '_Tp'
|   |-UsingDecl 0xa47218 <line:440:3, col:11> col:11 ::sinh
|   |-UsingShadowDecl 0xa47270 <col:11> col:11 implicit Function 0x8fec68 'sinh' 'double (double) throw()'
|   |-FunctionDecl 0xa47370 <line:443:3, line:445:34> line:444:3 constexpr sinh 'float (float)' inline
|   | |-ParmVarDecl 0xa472d8 <col:8, col:14> col:14 used __x 'float'
|   | `-CompoundStmt 0xa47678 <line:445:3, col:34>
|   |   `-ReturnStmt 0xa47668 <col:5, col:31>
|   |     `-CallExpr 0xa47628 <col:12, col:31> 'float'
|   |       |-ImplicitCastExpr 0xa47610 <col:12> 'float (*)(float) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa475d0 <col:12> '<builtin fn type>' Function 0xa47468 '__builtin_sinhf' 'float (float) noexcept'
|   |       `-ImplicitCastExpr 0xa47650 <col:28> 'float' <LValueToRValue>
|   |         `-DeclRefExpr 0xa475f0 <col:28> 'float' lvalue ParmVar 0xa472d8 '__x' 'float'
|   |-FunctionDecl 0xa47740 <line:447:3, line:449:34> line:448:3 constexpr sinh 'long double (long double)' inline
|   | |-ParmVarDecl 0xa476a8 <col:8, col:20> col:20 used __x 'long double'
|   | `-CompoundStmt 0xa47a48 <line:449:3, col:34>
|   |   `-ReturnStmt 0xa47a38 <col:5, col:31>
|   |     `-CallExpr 0xa479f8 <col:12, col:31> 'long double'
|   |       |-ImplicitCastExpr 0xa479e0 <col:12> 'long double (*)(long double) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa479a0 <col:12> '<builtin fn type>' Function 0xa47838 '__builtin_sinhl' 'long double (long double) noexcept'
|   |       `-ImplicitCastExpr 0xa47a20 <col:28> 'long double' <LValueToRValue>
|   |         `-DeclRefExpr 0xa479c0 <col:28> 'long double' lvalue ParmVar 0xa476a8 '__x' 'long double'
|   |-FunctionTemplateDecl 0xa47ee8 <line:452:3, line:457:35> line:456:5 sinh
|   | |-TemplateTypeParmDecl 0xa47a60 <line:452:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | `-FunctionDecl 0xa47e48 <line:453:5, line:457:35> line:456:5 constexpr sinh 'typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, double>::__type (_Tp)' inline
|   |   |-ParmVarDecl 0xa47d70 <col:10, col:14> col:14 referenced __x '_Tp'
|   |   `-CompoundStmt 0xa48178 <line:457:5, col:35>
|   |     `-ReturnStmt 0xa48168 <col:7, col:32>
|   |       `-CallExpr 0xa48140 <col:14, col:32> '<dependent type>'
|   |         |-DeclRefExpr 0xa48100 <col:14> '<builtin fn type>' Function 0xa47f98 '__builtin_sinh' 'double (double) noexcept'
|   |         `-DeclRefExpr 0xa48120 <col:29> '_Tp' lvalue ParmVar 0xa47d70 '__x' '_Tp'
|   |-UsingDecl 0xa48198 <line:459:3, col:11> col:11 ::sqrt
|   |-UsingShadowDecl 0xa481f0 <col:11> col:11 implicit Function 0x8eecc8 'sqrt' 'double (double) throw()'
|   |-FunctionDecl 0xa482f0 <line:462:3, line:464:34> line:463:3 constexpr sqrt 'float (float)' inline
|   | |-ParmVarDecl 0xa48258 <col:8, col:14> col:14 used __x 'float'
|   | `-CompoundStmt 0xa485f8 <line:464:3, col:34>
|   |   `-ReturnStmt 0xa485e8 <col:5, col:31>
|   |     `-CallExpr 0xa485a8 <col:12, col:31> 'float'
|   |       |-ImplicitCastExpr 0xa48590 <col:12> 'float (*)(float) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa48550 <col:12> '<builtin fn type>' Function 0xa483e8 '__builtin_sqrtf' 'float (float) noexcept'
|   |       `-ImplicitCastExpr 0xa485d0 <col:28> 'float' <LValueToRValue>
|   |         `-DeclRefExpr 0xa48570 <col:28> 'float' lvalue ParmVar 0xa48258 '__x' 'float'
|   |-FunctionDecl 0xa486c0 <line:466:3, line:468:34> line:467:3 constexpr sqrt 'long double (long double)' inline
|   | |-ParmVarDecl 0xa48628 <col:8, col:20> col:20 used __x 'long double'
|   | `-CompoundStmt 0xa489c8 <line:468:3, col:34>
|   |   `-ReturnStmt 0xa489b8 <col:5, col:31>
|   |     `-CallExpr 0xa48978 <col:12, col:31> 'long double'
|   |       |-ImplicitCastExpr 0xa48960 <col:12> 'long double (*)(long double) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa48920 <col:12> '<builtin fn type>' Function 0xa487b8 '__builtin_sqrtl' 'long double (long double) noexcept'
|   |       `-ImplicitCastExpr 0xa489a0 <col:28> 'long double' <LValueToRValue>
|   |         `-DeclRefExpr 0xa48940 <col:28> 'long double' lvalue ParmVar 0xa48628 '__x' 'long double'
|   |-FunctionTemplateDecl 0xa48f10 <line:471:3, line:476:35> line:475:5 sqrt
|   | |-TemplateTypeParmDecl 0xa489e0 <line:471:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | `-FunctionDecl 0xa48e70 <line:472:5, line:476:35> line:475:5 constexpr sqrt 'typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, double>::__type (_Tp)' inline
|   |   |-ParmVarDecl 0xa48cf0 <col:10, col:14> col:14 referenced __x '_Tp'
|   |   `-CompoundStmt 0xa491a0 <line:476:5, col:35>
|   |     `-ReturnStmt 0xa49190 <col:7, col:32>
|   |       `-CallExpr 0xa49168 <col:14, col:32> '<dependent type>'
|   |         |-DeclRefExpr 0xa49128 <col:14> '<builtin fn type>' Function 0xa48fc0 '__builtin_sqrt' 'double (double) noexcept'
|   |         `-DeclRefExpr 0xa49148 <col:29> '_Tp' lvalue ParmVar 0xa48cf0 '__x' '_Tp'
|   |-UsingDecl 0xa491c0 <line:478:3, col:11> col:11 ::tan
|   |-UsingShadowDecl 0xa49218 <col:11> col:11 implicit Function 0x8fe638 'tan' 'double (double) throw()'
|   |-FunctionDecl 0xa49318 <line:481:3, line:483:33> line:482:3 constexpr tan 'float (float)' inline
|   | |-ParmVarDecl 0xa49280 <col:7, col:13> col:13 used __x 'float'
|   | `-CompoundStmt 0xa49620 <line:483:3, col:33>
|   |   `-ReturnStmt 0xa49610 <col:5, col:30>
|   |     `-CallExpr 0xa495d0 <col:12, col:30> 'float'
|   |       |-ImplicitCastExpr 0xa495b8 <col:12> 'float (*)(float) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa49578 <col:12> '<builtin fn type>' Function 0xa49410 '__builtin_tanf' 'float (float) noexcept'
|   |       `-ImplicitCastExpr 0xa495f8 <col:27> 'float' <LValueToRValue>
|   |         `-DeclRefExpr 0xa49598 <col:27> 'float' lvalue ParmVar 0xa49280 '__x' 'float'
|   |-FunctionDecl 0xa496e8 <line:485:3, line:487:33> line:486:3 constexpr tan 'long double (long double)' inline
|   | |-ParmVarDecl 0xa49650 <col:7, col:19> col:19 used __x 'long double'
|   | `-CompoundStmt 0xa499f0 <line:487:3, col:33>
|   |   `-ReturnStmt 0xa499e0 <col:5, col:30>
|   |     `-CallExpr 0xa499a0 <col:12, col:30> 'long double'
|   |       |-ImplicitCastExpr 0xa49988 <col:12> 'long double (*)(long double) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa49948 <col:12> '<builtin fn type>' Function 0xa497e0 '__builtin_tanl' 'long double (long double) noexcept'
|   |       `-ImplicitCastExpr 0xa499c8 <col:27> 'long double' <LValueToRValue>
|   |         `-DeclRefExpr 0xa49968 <col:27> 'long double' lvalue ParmVar 0xa49650 '__x' 'long double'
|   |-FunctionTemplateDecl 0xa49e98 <line:490:3, line:495:34> line:494:5 tan
|   | |-TemplateTypeParmDecl 0xa49a08 <line:490:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | `-FunctionDecl 0xa49df8 <line:491:5, line:495:34> line:494:5 constexpr tan 'typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, double>::__type (_Tp)' inline
|   |   |-ParmVarDecl 0xa49d20 <col:9, col:13> col:13 referenced __x '_Tp'
|   |   `-CompoundStmt 0xa4a128 <line:495:5, col:34>
|   |     `-ReturnStmt 0xa4a118 <col:7, col:31>
|   |       `-CallExpr 0xa4a0f0 <col:14, col:31> '<dependent type>'
|   |         |-DeclRefExpr 0xa4a0b0 <col:14> '<builtin fn type>' Function 0xa49f48 '__builtin_tan' 'double (double) noexcept'
|   |         `-DeclRefExpr 0xa4a0d0 <col:28> '_Tp' lvalue ParmVar 0xa49d20 '__x' '_Tp'
|   |-UsingDecl 0xa4a148 <line:497:3, col:11> col:11 ::tanh
|   |-UsingShadowDecl 0xa4a1a0 <col:11> col:11 implicit Function 0x8fef80 'tanh' 'double (double) throw()'
|   |-FunctionDecl 0xa4a2a0 <line:500:3, line:502:34> line:501:3 constexpr tanh 'float (float)' inline
|   | |-ParmVarDecl 0xa4a208 <col:8, col:14> col:14 used __x 'float'
|   | `-CompoundStmt 0xa4a5a8 <line:502:3, col:34>
|   |   `-ReturnStmt 0xa4a598 <col:5, col:31>
|   |     `-CallExpr 0xa4a558 <col:12, col:31> 'float'
|   |       |-ImplicitCastExpr 0xa4a540 <col:12> 'float (*)(float) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa4a500 <col:12> '<builtin fn type>' Function 0xa4a398 '__builtin_tanhf' 'float (float) noexcept'
|   |       `-ImplicitCastExpr 0xa4a580 <col:28> 'float' <LValueToRValue>
|   |         `-DeclRefExpr 0xa4a520 <col:28> 'float' lvalue ParmVar 0xa4a208 '__x' 'float'
|   |-FunctionDecl 0xa4a670 <line:504:3, line:506:34> line:505:3 constexpr tanh 'long double (long double)' inline
|   | |-ParmVarDecl 0xa4a5d8 <col:8, col:20> col:20 used __x 'long double'
|   | `-CompoundStmt 0xa4a978 <line:506:3, col:34>
|   |   `-ReturnStmt 0xa4a968 <col:5, col:31>
|   |     `-CallExpr 0xa4a928 <col:12, col:31> 'long double'
|   |       |-ImplicitCastExpr 0xa4a910 <col:12> 'long double (*)(long double) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa4a8d0 <col:12> '<builtin fn type>' Function 0xa4a768 '__builtin_tanhl' 'long double (long double) noexcept'
|   |       `-ImplicitCastExpr 0xa4a950 <col:28> 'long double' <LValueToRValue>
|   |         `-DeclRefExpr 0xa4a8f0 <col:28> 'long double' lvalue ParmVar 0xa4a5d8 '__x' 'long double'
|   |-FunctionTemplateDecl 0xa4ae18 <line:509:3, line:514:35> line:513:5 tanh
|   | |-TemplateTypeParmDecl 0xa4a990 <line:509:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | `-FunctionDecl 0xa4ad78 <line:510:5, line:514:35> line:513:5 constexpr tanh 'typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, double>::__type (_Tp)' inline
|   |   |-ParmVarDecl 0xa4aca0 <col:10, col:14> col:14 referenced __x '_Tp'
|   |   `-CompoundStmt 0xa4b0b8 <line:514:5, col:35>
|   |     `-ReturnStmt 0xa4b0a8 <col:7, col:32>
|   |       `-CallExpr 0xa4b080 <col:14, col:32> '<dependent type>'
|   |         |-DeclRefExpr 0xa4b040 <col:14> '<builtin fn type>' Function 0xa4aed8 '__builtin_tanh' 'double (double) noexcept'
|   |         `-DeclRefExpr 0xa4b060 <col:29> '_Tp' lvalue ParmVar 0xa4aca0 '__x' '_Tp'
|   |-FunctionDecl 0xa4b180 <line:536:3, line:539:34> line:537:3 constexpr fpclassify 'int (float)'
|   | |-ParmVarDecl 0xa4b0e8 <col:14, col:20> col:20 used __x 'float'
|   | `-CompoundStmt 0xa4b858 <line:538:3, line:539:34>
|   |   `-ReturnStmt 0xa4b848 <line:538:5, line:539:31>
|   |     `-CallExpr 0xa4b7e0 <line:538:12, line:539:31> 'int'
|   |       |-ImplicitCastExpr 0xa4b7c8 <line:538:12> 'int (*)(int, int, int, int, int, ...) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa4b688 <col:12> '<builtin fn type>' Function 0xa4b338 '__builtin_fpclassify' 'int (int, int, int, int, int, ...) noexcept'
|   |       |-IntegerLiteral 0xa4b6a8 </usr/include/math.h:856:17> 'int' 0
|   |       |-IntegerLiteral 0xa4b6c8 <line:859:22> 'int' 1
|   |       |-IntegerLiteral 0xa4b6e8 <line:868:20> 'int' 4
|   |       |-IntegerLiteral 0xa4b708 <line:865:23> 'int' 3
|   |       |-IntegerLiteral 0xa4b728 <line:862:18> 'int' 2
|   |       `-ImplicitCastExpr 0xa4b830 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/cmath:539:28> 'float' <LValueToRValue>
|   |         `-DeclRefExpr 0xa4b748 <col:28> 'float' lvalue ParmVar 0xa4b0e8 '__x' 'float'
|   |-FunctionDecl 0xa4b920 <line:541:3, line:544:34> line:542:3 constexpr fpclassify 'int (double)'
|   | |-ParmVarDecl 0xa4b888 <col:14, col:21> col:21 used __x 'double'
|   | `-CompoundStmt 0xa4bb38 <line:543:3, line:544:34>
|   |   `-ReturnStmt 0xa4bb28 <line:543:5, line:544:31>
|   |     `-CallExpr 0xa4bac0 <line:543:12, line:544:31> 'int'
|   |       |-ImplicitCastExpr 0xa4baa8 <line:543:12> 'int (*)(int, int, int, int, int, ...) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa4b9c8 <col:12> '<builtin fn type>' Function 0xa4b338 '__builtin_fpclassify' 'int (int, int, int, int, int, ...) noexcept'
|   |       |-IntegerLiteral 0xa4b9e8 </usr/include/math.h:856:17> 'int' 0
|   |       |-IntegerLiteral 0xa4ba08 <line:859:22> 'int' 1
|   |       |-IntegerLiteral 0xa4ba28 <line:868:20> 'int' 4
|   |       |-IntegerLiteral 0xa4ba48 <line:865:23> 'int' 3
|   |       |-IntegerLiteral 0xa4ba68 <line:862:18> 'int' 2
|   |       `-ImplicitCastExpr 0xa4bb10 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/cmath:544:28> 'double' <LValueToRValue>
|   |         `-DeclRefExpr 0xa4ba88 <col:28> 'double' lvalue ParmVar 0xa4b888 '__x' 'double'
|   |-FunctionDecl 0xa4bc00 <line:546:3, line:549:34> line:547:3 constexpr fpclassify 'int (long double)'
|   | |-ParmVarDecl 0xa4bb68 <col:14, col:26> col:26 used __x 'long double'
|   | `-CompoundStmt 0xa4be18 <line:548:3, line:549:34>
|   |   `-ReturnStmt 0xa4be08 <line:548:5, line:549:31>
|   |     `-CallExpr 0xa4bda0 <line:548:12, line:549:31> 'int'
|   |       |-ImplicitCastExpr 0xa4bd88 <line:548:12> 'int (*)(int, int, int, int, int, ...) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa4bca8 <col:12> '<builtin fn type>' Function 0xa4b338 '__builtin_fpclassify' 'int (int, int, int, int, int, ...) noexcept'
|   |       |-IntegerLiteral 0xa4bcc8 </usr/include/math.h:856:17> 'int' 0
|   |       |-IntegerLiteral 0xa4bce8 <line:859:22> 'int' 1
|   |       |-IntegerLiteral 0xa4bd08 <line:868:20> 'int' 4
|   |       |-IntegerLiteral 0xa4bd28 <line:865:23> 'int' 3
|   |       |-IntegerLiteral 0xa4bd48 <line:862:18> 'int' 2
|   |       `-ImplicitCastExpr 0xa4bdf0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/cmath:549:28> 'long double' <LValueToRValue>
|   |         `-DeclRefExpr 0xa4bd68 <col:28> 'long double' lvalue ParmVar 0xa4bb68 '__x' 'long double'
|   |-FunctionTemplateDecl 0xa4c388 <line:553:3, line:557:46> line:556:5 fpclassify
|   | |-TemplateTypeParmDecl 0xa4be30 <line:553:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | `-FunctionDecl 0xa4c2e8 <line:554:5, line:557:46> line:556:5 constexpr fpclassify 'typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, int>::__type (_Tp)'
|   |   |-ParmVarDecl 0xa4c1e0 <col:16, col:20> col:20 referenced __x '_Tp'
|   |   `-CompoundStmt 0xa4c4c8 <line:557:5, col:46>
|   |     `-ReturnStmt 0xa4c4b8 <col:7, /usr/include/math.h:862:18>
|   |       `-ConditionalOperator 0xa4c488 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/cmath:557:14, /usr/include/math.h:862:18> '<dependent type>'
|   |         |-BinaryOperator 0xa4c428 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/cmath:557:14, col:21> '<dependent type>' '!='
|   |         | |-DeclRefExpr 0xa4c3e8 <col:14> '_Tp' lvalue ParmVar 0xa4c1e0 '__x' '_Tp'
|   |         | `-IntegerLiteral 0xa4c408 <col:21> 'int' 0
|   |         |-IntegerLiteral 0xa4c448 </usr/include/math.h:868:20> 'int' 4
|   |         `-IntegerLiteral 0xa4c468 <line:862:18> 'int' 2
|   |-FunctionDecl 0xa4c5b8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/cmath:561:3, line:563:37> line:562:3 constexpr isfinite 'bool (float)'
|   | |-ParmVarDecl 0xa4c4f8 <col:12, col:18> col:18 used __x 'float'
|   | `-CompoundStmt 0xa4c948 <line:563:3, col:37>
|   |   `-ReturnStmt 0xa4c938 <col:5, col:34>
|   |     `-ImplicitCastExpr 0xa4c920 <col:12, col:34> 'bool' <IntegralToBoolean>
|   |       `-CallExpr 0xa4c8e0 <col:12, col:34> 'int'
|   |         |-ImplicitCastExpr 0xa4c8c8 <col:12> 'int (*)(...) noexcept' <BuiltinFnToFnPtr>
|   |         | `-DeclRefExpr 0xa4c830 <col:12> '<builtin fn type>' Function 0xa4c710 '__builtin_isfinite' 'int (...) noexcept'
|   |         `-ImplicitCastExpr 0xa4c908 <col:31> 'float' <LValueToRValue>
|   |           `-DeclRefExpr 0xa4c850 <col:31> 'float' lvalue ParmVar 0xa4c4f8 '__x' 'float'
|   |-FunctionDecl 0xa4ca38 <line:565:3, line:567:37> line:566:3 constexpr isfinite 'bool (double)'
|   | |-ParmVarDecl 0xa4c978 <col:12, col:19> col:19 used __x 'double'
|   | `-CompoundStmt 0xa4cba0 <line:567:3, col:37>
|   |   `-ReturnStmt 0xa4cb90 <col:5, col:34>
|   |     `-ImplicitCastExpr 0xa4cb78 <col:12, col:34> 'bool' <IntegralToBoolean>
|   |       `-CallExpr 0xa4cb38 <col:12, col:34> 'int'
|   |         |-ImplicitCastExpr 0xa4cb20 <col:12> 'int (*)(...) noexcept' <BuiltinFnToFnPtr>
|   |         | `-DeclRefExpr 0xa4cae0 <col:12> '<builtin fn type>' Function 0xa4c710 '__builtin_isfinite' 'int (...) noexcept'
|   |         `-ImplicitCastExpr 0xa4cb60 <col:31> 'double' <LValueToRValue>
|   |           `-DeclRefExpr 0xa4cb00 <col:31> 'double' lvalue ParmVar 0xa4c978 '__x' 'double'
|   |-FunctionDecl 0xa4cc98 <line:569:3, line:571:37> line:570:3 constexpr isfinite 'bool (long double)'
|   | |-ParmVarDecl 0xa4cbd0 <col:12, col:24> col:24 used __x 'long double'
|   | `-CompoundStmt 0xa4ce00 <line:571:3, col:37>
|   |   `-ReturnStmt 0xa4cdf0 <col:5, col:34>
|   |     `-ImplicitCastExpr 0xa4cdd8 <col:12, col:34> 'bool' <IntegralToBoolean>
|   |       `-CallExpr 0xa4cd98 <col:12, col:34> 'int'
|   |         |-ImplicitCastExpr 0xa4cd80 <col:12> 'int (*)(...) noexcept' <BuiltinFnToFnPtr>
|   |         | `-DeclRefExpr 0xa4cd40 <col:12> '<builtin fn type>' Function 0xa4c710 '__builtin_isfinite' 'int (...) noexcept'
|   |         `-ImplicitCastExpr 0xa4cdc0 <col:31> 'long double' <LValueToRValue>
|   |           `-DeclRefExpr 0xa4cd60 <col:31> 'long double' lvalue ParmVar 0xa4cbd0 '__x' 'long double'
|   |-FunctionTemplateDecl 0xa4d398 <line:575:3, line:579:20> line:578:5 isfinite
|   | |-TemplateTypeParmDecl 0xa4ce18 <line:575:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | `-FunctionDecl 0xa4d2f8 <line:576:5, line:579:20> line:578:5 constexpr isfinite 'typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, bool>::__type (_Tp)'
|   |   |-ParmVarDecl 0xa4d1f0 <col:14, col:18> col:18 __x '_Tp'
|   |   `-CompoundStmt 0xa4d418 <line:579:5, col:20>
|   |     `-ReturnStmt 0xa4d408 <col:7, col:14>
|   |       `-CXXBoolLiteralExpr 0xa4d3f8 <col:14> 'bool' true
|   |-FunctionDecl 0xa4d4d8 <line:583:3, line:585:34> line:584:3 constexpr isinf 'bool (float)'
|   | |-ParmVarDecl 0xa4d448 <col:9, col:15> col:15 used __x 'float'
|   | `-CompoundStmt 0xa4d7b0 <line:585:3, col:34>
|   |   `-ReturnStmt 0xa4d7a0 <col:5, col:31>
|   |     `-ImplicitCastExpr 0xa4d788 <col:12, col:31> 'bool' <IntegralToBoolean>
|   |       `-CallExpr 0xa4d748 <col:12, col:31> 'int'
|   |         |-ImplicitCastExpr 0xa4d730 <col:12> 'int (*)(...) noexcept' <BuiltinFnToFnPtr>
|   |         | `-DeclRefExpr 0xa4d6f0 <col:12> '<builtin fn type>' Function 0xa4d5d0 '__builtin_isinf' 'int (...) noexcept'
|   |         `-ImplicitCastExpr 0xa4d770 <col:28> 'float' <LValueToRValue>
|   |           `-DeclRefExpr 0xa4d710 <col:28> 'float' lvalue ParmVar 0xa4d448 '__x' 'float'
|   |-FunctionDecl 0xa4d870 <line:591:3, line:593:34> line:592:3 constexpr isinf 'bool (double)'
|   | |-ParmVarDecl 0xa4d7e0 <col:9, col:16> col:16 used __x 'double'
|   | `-CompoundStmt 0xa4d9d8 <line:593:3, col:34>
|   |   `-ReturnStmt 0xa4d9c8 <col:5, col:31>
|   |     `-ImplicitCastExpr 0xa4d9b0 <col:12, col:31> 'bool' <IntegralToBoolean>
|   |       `-CallExpr 0xa4d970 <col:12, col:31> 'int'
|   |         |-ImplicitCastExpr 0xa4d958 <col:12> 'int (*)(...) noexcept' <BuiltinFnToFnPtr>
|   |         | `-DeclRefExpr 0xa4d918 <col:12> '<builtin fn type>' Function 0xa4d5d0 '__builtin_isinf' 'int (...) noexcept'
|   |         `-ImplicitCastExpr 0xa4d998 <col:28> 'double' <LValueToRValue>
|   |           `-DeclRefExpr 0xa4d938 <col:28> 'double' lvalue ParmVar 0xa4d7e0 '__x' 'double'
|   |-FunctionDecl 0xa4da98 <line:596:3, line:598:34> line:597:3 constexpr isinf 'bool (long double)'
|   | |-ParmVarDecl 0xa4da08 <col:9, col:21> col:21 used __x 'long double'
|   | `-CompoundStmt 0xa4dc00 <line:598:3, col:34>
|   |   `-ReturnStmt 0xa4dbf0 <col:5, col:31>
|   |     `-ImplicitCastExpr 0xa4dbd8 <col:12, col:31> 'bool' <IntegralToBoolean>
|   |       `-CallExpr 0xa4db98 <col:12, col:31> 'int'
|   |         |-ImplicitCastExpr 0xa4db80 <col:12> 'int (*)(...) noexcept' <BuiltinFnToFnPtr>
|   |         | `-DeclRefExpr 0xa4db40 <col:12> '<builtin fn type>' Function 0xa4d5d0 '__builtin_isinf' 'int (...) noexcept'
|   |         `-ImplicitCastExpr 0xa4dbc0 <col:28> 'long double' <LValueToRValue>
|   |           `-DeclRefExpr 0xa4db60 <col:28> 'long double' lvalue ParmVar 0xa4da08 '__x' 'long double'
|   |-FunctionTemplateDecl 0xa4e0a8 <line:602:3, line:606:21> line:605:5 isinf
|   | |-TemplateTypeParmDecl 0xa4dc18 <line:602:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | `-FunctionDecl 0xa4e008 <line:603:5, line:606:21> line:605:5 constexpr isinf 'typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, bool>::__type (_Tp)'
|   |   |-ParmVarDecl 0xa4df30 <col:11, col:15> col:15 __x '_Tp'
|   |   `-CompoundStmt 0xa4e128 <line:606:5, col:21>
|   |     `-ReturnStmt 0xa4e118 <col:7, col:14>
|   |       `-CXXBoolLiteralExpr 0xa4e108 <col:14> 'bool' false
|   |-FunctionDecl 0xa4e1e8 <line:610:3, line:612:34> line:611:3 constexpr isnan 'bool (float)'
|   | |-ParmVarDecl 0xa4e158 <col:9, col:15> col:15 used __x 'float'
|   | `-CompoundStmt 0xa4e4c0 <line:612:3, col:34>
|   |   `-ReturnStmt 0xa4e4b0 <col:5, col:31>
|   |     `-ImplicitCastExpr 0xa4e498 <col:12, col:31> 'bool' <IntegralToBoolean>
|   |       `-CallExpr 0xa4e458 <col:12, col:31> 'int'
|   |         |-ImplicitCastExpr 0xa4e440 <col:12> 'int (*)(...) noexcept' <BuiltinFnToFnPtr>
|   |         | `-DeclRefExpr 0xa4e400 <col:12> '<builtin fn type>' Function 0xa4e2e0 '__builtin_isnan' 'int (...) noexcept'
|   |         `-ImplicitCastExpr 0xa4e480 <col:28> 'float' <LValueToRValue>
|   |           `-DeclRefExpr 0xa4e420 <col:28> 'float' lvalue ParmVar 0xa4e158 '__x' 'float'
|   |-FunctionDecl 0xa4e580 <line:618:3, line:620:34> line:619:3 constexpr isnan 'bool (double)'
|   | |-ParmVarDecl 0xa4e4f0 <col:9, col:16> col:16 used __x 'double'
|   | `-CompoundStmt 0xa4e6e8 <line:620:3, col:34>
|   |   `-ReturnStmt 0xa4e6d8 <col:5, col:31>
|   |     `-ImplicitCastExpr 0xa4e6c0 <col:12, col:31> 'bool' <IntegralToBoolean>
|   |       `-CallExpr 0xa4e680 <col:12, col:31> 'int'
|   |         |-ImplicitCastExpr 0xa4e668 <col:12> 'int (*)(...) noexcept' <BuiltinFnToFnPtr>
|   |         | `-DeclRefExpr 0xa4e628 <col:12> '<builtin fn type>' Function 0xa4e2e0 '__builtin_isnan' 'int (...) noexcept'
|   |         `-ImplicitCastExpr 0xa4e6a8 <col:28> 'double' <LValueToRValue>
|   |           `-DeclRefExpr 0xa4e648 <col:28> 'double' lvalue ParmVar 0xa4e4f0 '__x' 'double'
|   |-FunctionDecl 0xa4e7a8 <line:623:3, line:625:34> line:624:3 constexpr isnan 'bool (long double)'
|   | |-ParmVarDecl 0xa4e718 <col:9, col:21> col:21 used __x 'long double'
|   | `-CompoundStmt 0xa4e910 <line:625:3, col:34>
|   |   `-ReturnStmt 0xa4e900 <col:5, col:31>
|   |     `-ImplicitCastExpr 0xa4e8e8 <col:12, col:31> 'bool' <IntegralToBoolean>
|   |       `-CallExpr 0xa4e8a8 <col:12, col:31> 'int'
|   |         |-ImplicitCastExpr 0xa4e890 <col:12> 'int (*)(...) noexcept' <BuiltinFnToFnPtr>
|   |         | `-DeclRefExpr 0xa4e850 <col:12> '<builtin fn type>' Function 0xa4e2e0 '__builtin_isnan' 'int (...) noexcept'
|   |         `-ImplicitCastExpr 0xa4e8d0 <col:28> 'long double' <LValueToRValue>
|   |           `-DeclRefExpr 0xa4e870 <col:28> 'long double' lvalue ParmVar 0xa4e718 '__x' 'long double'
|   |-FunctionTemplateDecl 0xa4edb8 <line:629:3, line:633:21> line:632:5 isnan
|   | |-TemplateTypeParmDecl 0xa4e928 <line:629:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | `-FunctionDecl 0xa4ed18 <line:630:5, line:633:21> line:632:5 constexpr isnan 'typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, bool>::__type (_Tp)'
|   |   |-ParmVarDecl 0xa4ec40 <col:11, col:15> col:15 __x '_Tp'
|   |   `-CompoundStmt 0xa4ee38 <line:633:5, col:21>
|   |     `-ReturnStmt 0xa4ee28 <col:7, col:14>
|   |       `-CXXBoolLiteralExpr 0xa4ee18 <col:14> 'bool' false
|   |-FunctionDecl 0xa4ef30 <line:637:3, line:639:37> line:638:3 constexpr isnormal 'bool (float)'
|   | |-ParmVarDecl 0xa4eea0 <col:12, col:18> col:18 used __x 'float'
|   | `-CompoundStmt 0xa4f208 <line:639:3, col:37>
|   |   `-ReturnStmt 0xa4f1f8 <col:5, col:34>
|   |     `-ImplicitCastExpr 0xa4f1e0 <col:12, col:34> 'bool' <IntegralToBoolean>
|   |       `-CallExpr 0xa4f1a0 <col:12, col:34> 'int'
|   |         |-ImplicitCastExpr 0xa4f188 <col:12> 'int (*)(...) noexcept' <BuiltinFnToFnPtr>
|   |         | `-DeclRefExpr 0xa4f148 <col:12> '<builtin fn type>' Function 0xa4f028 '__builtin_isnormal' 'int (...) noexcept'
|   |         `-ImplicitCastExpr 0xa4f1c8 <col:31> 'float' <LValueToRValue>
|   |           `-DeclRefExpr 0xa4f168 <col:31> 'float' lvalue ParmVar 0xa4eea0 '__x' 'float'
|   |-FunctionDecl 0xa4f2c8 <line:641:3, line:643:37> line:642:3 constexpr isnormal 'bool (double)'
|   | |-ParmVarDecl 0xa4f238 <col:12, col:19> col:19 used __x 'double'
|   | `-CompoundStmt 0xa4f430 <line:643:3, col:37>
|   |   `-ReturnStmt 0xa4f420 <col:5, col:34>
|   |     `-ImplicitCastExpr 0xa4f408 <col:12, col:34> 'bool' <IntegralToBoolean>
|   |       `-CallExpr 0xa4f3c8 <col:12, col:34> 'int'
|   |         |-ImplicitCastExpr 0xa4f3b0 <col:12> 'int (*)(...) noexcept' <BuiltinFnToFnPtr>
|   |         | `-DeclRefExpr 0xa4f370 <col:12> '<builtin fn type>' Function 0xa4f028 '__builtin_isnormal' 'int (...) noexcept'
|   |         `-ImplicitCastExpr 0xa4f3f0 <col:31> 'double' <LValueToRValue>
|   |           `-DeclRefExpr 0xa4f390 <col:31> 'double' lvalue ParmVar 0xa4f238 '__x' 'double'
|   |-FunctionDecl 0xa4f4f0 <line:645:3, line:647:37> line:646:3 constexpr isnormal 'bool (long double)'
|   | |-ParmVarDecl 0xa4f460 <col:12, col:24> col:24 used __x 'long double'
|   | `-CompoundStmt 0xa4f658 <line:647:3, col:37>
|   |   `-ReturnStmt 0xa4f648 <col:5, col:34>
|   |     `-ImplicitCastExpr 0xa4f630 <col:12, col:34> 'bool' <IntegralToBoolean>
|   |       `-CallExpr 0xa4f5f0 <col:12, col:34> 'int'
|   |         |-ImplicitCastExpr 0xa4f5d8 <col:12> 'int (*)(...) noexcept' <BuiltinFnToFnPtr>
|   |         | `-DeclRefExpr 0xa4f598 <col:12> '<builtin fn type>' Function 0xa4f028 '__builtin_isnormal' 'int (...) noexcept'
|   |         `-ImplicitCastExpr 0xa4f618 <col:31> 'long double' <LValueToRValue>
|   |           `-DeclRefExpr 0xa4f5b8 <col:31> 'long double' lvalue ParmVar 0xa4f460 '__x' 'long double'
|   |-FunctionTemplateDecl 0xa4faf8 <line:651:3, line:655:39> line:654:5 isnormal
|   | |-TemplateTypeParmDecl 0xa4f670 <line:651:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | `-FunctionDecl 0xa4fa58 <line:652:5, line:655:39> line:654:5 constexpr isnormal 'typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, bool>::__type (_Tp)'
|   |   |-ParmVarDecl 0xa4f980 <col:14, col:18> col:18 referenced __x '_Tp'
|   |   `-CompoundStmt 0xa4fc18 <line:655:5, col:39>
|   |     `-ReturnStmt 0xa4fc08 <col:7, col:32>
|   |       `-ConditionalOperator 0xa4fbd8 <col:14, col:32> '<dependent type>'
|   |         |-BinaryOperator 0xa4fb98 <col:14, col:21> '<dependent type>' '!='
|   |         | |-DeclRefExpr 0xa4fb58 <col:14> '_Tp' lvalue ParmVar 0xa4f980 '__x' '_Tp'
|   |         | `-IntegerLiteral 0xa4fb78 <col:21> 'int' 0
|   |         |-CXXBoolLiteralExpr 0xa4fbb8 <col:25> 'bool' true
|   |         `-CXXBoolLiteralExpr 0xa4fbc8 <col:32> 'bool' false
|   |-FunctionDecl 0xa4fcd8 <line:660:3, line:662:36> line:661:3 constexpr signbit 'bool (float)'
|   | |-ParmVarDecl 0xa4fc48 <col:11, col:17> col:17 used __x 'float'
|   | `-CompoundStmt 0xa4ffb0 <line:662:3, col:36>
|   |   `-ReturnStmt 0xa4ffa0 <col:5, col:33>
|   |     `-ImplicitCastExpr 0xa4ff88 <col:12, col:33> 'bool' <IntegralToBoolean>
|   |       `-CallExpr 0xa4ff48 <col:12, col:33> 'int'
|   |         |-ImplicitCastExpr 0xa4ff30 <col:12> 'int (*)(...) noexcept' <BuiltinFnToFnPtr>
|   |         | `-DeclRefExpr 0xa4fef0 <col:12> '<builtin fn type>' Function 0xa4fdd0 '__builtin_signbit' 'int (...) noexcept'
|   |         `-ImplicitCastExpr 0xa4ff70 <col:30> 'float' <LValueToRValue>
|   |           `-DeclRefExpr 0xa4ff10 <col:30> 'float' lvalue ParmVar 0xa4fc48 '__x' 'float'
|   |-FunctionDecl 0xa50070 <line:664:3, line:666:36> line:665:3 constexpr signbit 'bool (double)'
|   | |-ParmVarDecl 0xa4ffe0 <col:11, col:18> col:18 used __x 'double'
|   | `-CompoundStmt 0xa501d8 <line:666:3, col:36>
|   |   `-ReturnStmt 0xa501c8 <col:5, col:33>
|   |     `-ImplicitCastExpr 0xa501b0 <col:12, col:33> 'bool' <IntegralToBoolean>
|   |       `-CallExpr 0xa50170 <col:12, col:33> 'int'
|   |         |-ImplicitCastExpr 0xa50158 <col:12> 'int (*)(...) noexcept' <BuiltinFnToFnPtr>
|   |         | `-DeclRefExpr 0xa50118 <col:12> '<builtin fn type>' Function 0xa4fdd0 '__builtin_signbit' 'int (...) noexcept'
|   |         `-ImplicitCastExpr 0xa50198 <col:30> 'double' <LValueToRValue>
|   |           `-DeclRefExpr 0xa50138 <col:30> 'double' lvalue ParmVar 0xa4ffe0 '__x' 'double'
|   |-FunctionDecl 0xa50298 <line:668:3, line:670:36> line:669:3 constexpr signbit 'bool (long double)'
|   | |-ParmVarDecl 0xa50208 <col:11, col:23> col:23 used __x 'long double'
|   | `-CompoundStmt 0xa50400 <line:670:3, col:36>
|   |   `-ReturnStmt 0xa503f0 <col:5, col:33>
|   |     `-ImplicitCastExpr 0xa503d8 <col:12, col:33> 'bool' <IntegralToBoolean>
|   |       `-CallExpr 0xa50398 <col:12, col:33> 'int'
|   |         |-ImplicitCastExpr 0xa50380 <col:12> 'int (*)(...) noexcept' <BuiltinFnToFnPtr>
|   |         | `-DeclRefExpr 0xa50340 <col:12> '<builtin fn type>' Function 0xa4fdd0 '__builtin_signbit' 'int (...) noexcept'
|   |         `-ImplicitCastExpr 0xa503c0 <col:30> 'long double' <LValueToRValue>
|   |           `-DeclRefExpr 0xa50360 <col:30> 'long double' lvalue ParmVar 0xa50208 '__x' 'long double'
|   |-FunctionTemplateDecl 0xa508a8 <line:674:3, line:678:38> line:677:5 signbit
|   | |-TemplateTypeParmDecl 0xa50418 <line:674:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | `-FunctionDecl 0xa50808 <line:675:5, line:678:38> line:677:5 constexpr signbit 'typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, bool>::__type (_Tp)'
|   |   |-ParmVarDecl 0xa50730 <col:13, col:17> col:17 referenced __x '_Tp'
|   |   `-CompoundStmt 0xa509c8 <line:678:5, col:38>
|   |     `-ReturnStmt 0xa509b8 <col:7, col:31>
|   |       `-ConditionalOperator 0xa50988 <col:14, col:31> '<dependent type>'
|   |         |-BinaryOperator 0xa50948 <col:14, col:20> '<dependent type>' '<'
|   |         | |-DeclRefExpr 0xa50908 <col:14> '_Tp' lvalue ParmVar 0xa50730 '__x' '_Tp'
|   |         | `-IntegerLiteral 0xa50928 <col:20> 'int' 0
|   |         |-CXXBoolLiteralExpr 0xa50968 <col:24> 'bool' true
|   |         `-CXXBoolLiteralExpr 0xa50978 <col:31> 'bool' false
|   |-FunctionDecl 0xa50b48 <line:682:3, line:684:43> line:683:3 constexpr isgreater 'bool (float, float)'
|   | |-ParmVarDecl 0xa509f8 <col:13, col:19> col:19 used __x 'float'
|   | |-ParmVarDecl 0xa50a78 <col:24, col:30> col:30 used __y 'float'
|   | `-CompoundStmt 0xa50e68 <line:684:3, col:43>
|   |   `-ReturnStmt 0xa50e58 <col:5, col:40>
|   |     `-ImplicitCastExpr 0xa50e40 <col:12, col:40> 'bool' <IntegralToBoolean>
|   |       `-CallExpr 0xa50de0 <col:12, col:40> 'int'
|   |         |-ImplicitCastExpr 0xa50dc8 <col:12> 'int (*)(...) noexcept' <BuiltinFnToFnPtr>
|   |         | `-DeclRefExpr 0xa50d68 <col:12> '<builtin fn type>' Function 0xa50c48 '__builtin_isgreater' 'int (...) noexcept'
|   |         |-ImplicitCastExpr 0xa50e10 <col:32> 'float' <LValueToRValue>
|   |         | `-DeclRefExpr 0xa50d88 <col:32> 'float' lvalue ParmVar 0xa509f8 '__x' 'float'
|   |         `-ImplicitCastExpr 0xa50e28 <col:37> 'float' <LValueToRValue>
|   |           `-DeclRefExpr 0xa50da8 <col:37> 'float' lvalue ParmVar 0xa50a78 '__y' 'float'
|   |-FunctionDecl 0xa51008 <line:686:3, line:688:43> line:687:3 constexpr isgreater 'bool (double, double)'
|   | |-ParmVarDecl 0xa50eb0 <col:13, col:20> col:20 used __x 'double'
|   | |-ParmVarDecl 0xa50f30 <col:25, col:32> col:32 used __y 'double'
|   | `-CompoundStmt 0xa511b8 <line:688:3, col:43>
|   |   `-ReturnStmt 0xa511a8 <col:5, col:40>
|   |     `-ImplicitCastExpr 0xa51190 <col:12, col:40> 'bool' <IntegralToBoolean>
|   |       `-CallExpr 0xa51130 <col:12, col:40> 'int'
|   |         |-ImplicitCastExpr 0xa51118 <col:12> 'int (*)(...) noexcept' <BuiltinFnToFnPtr>
|   |         | `-DeclRefExpr 0xa510b8 <col:12> '<builtin fn type>' Function 0xa50c48 '__builtin_isgreater' 'int (...) noexcept'
|   |         |-ImplicitCastExpr 0xa51160 <col:32> 'double' <LValueToRValue>
|   |         | `-DeclRefExpr 0xa510d8 <col:32> 'double' lvalue ParmVar 0xa50eb0 '__x' 'double'
|   |         `-ImplicitCastExpr 0xa51178 <col:37> 'double' <LValueToRValue>
|   |           `-DeclRefExpr 0xa510f8 <col:37> 'double' lvalue ParmVar 0xa50f30 '__y' 'double'
|   |-FunctionDecl 0xa51338 <line:690:3, line:692:43> line:691:3 constexpr isgreater 'bool (long double, long double)'
|   | |-ParmVarDecl 0xa511e8 <col:13, col:25> col:25 used __x 'long double'
|   | |-ParmVarDecl 0xa51268 <col:30, col:42> col:42 used __y 'long double'
|   | `-CompoundStmt 0xa514e8 <line:692:3, col:43>
|   |   `-ReturnStmt 0xa514d8 <col:5, col:40>
|   |     `-ImplicitCastExpr 0xa514c0 <col:12, col:40> 'bool' <IntegralToBoolean>
|   |       `-CallExpr 0xa51460 <col:12, col:40> 'int'
|   |         |-ImplicitCastExpr 0xa51448 <col:12> 'int (*)(...) noexcept' <BuiltinFnToFnPtr>
|   |         | `-DeclRefExpr 0xa513e8 <col:12> '<builtin fn type>' Function 0xa50c48 '__builtin_isgreater' 'int (...) noexcept'
|   |         |-ImplicitCastExpr 0xa51490 <col:32> 'long double' <LValueToRValue>
|   |         | `-DeclRefExpr 0xa51408 <col:32> 'long double' lvalue ParmVar 0xa511e8 '__x' 'long double'
|   |         `-ImplicitCastExpr 0xa514a8 <col:37> 'long double' <LValueToRValue>
|   |           `-DeclRefExpr 0xa51428 <col:37> 'long double' lvalue ParmVar 0xa51268 '__y' 'long double'
|   |-FunctionTemplateDecl 0xa51d08 <line:696:3, line:704:5> line:700:5 isgreater
|   | |-TemplateTypeParmDecl 0xa51500 <line:696:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl 0xa51578 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
|   | `-FunctionDecl 0xa51c68 <line:697:5, line:704:5> line:700:5 constexpr isgreater 'typename __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value && __is_arithmetic<_Up>::__value), bool>::__type (_Tp, _Up)'
|   |   |-ParmVarDecl 0xa51ad0 <col:15, col:19> col:19 referenced __x '_Tp'
|   |   |-ParmVarDecl 0xa51b48 <col:24, col:28> col:28 referenced __y '_Up'
|   |   `-CompoundStmt 0xa52470 <line:701:5, line:704:5>
|   |     |-DeclStmt 0xa52328 <line:702:7, col:71>
|   |     | `-TypedefDecl 0xa522d0 <col:7, col:65> col:65 referenced __type 'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'
|   |     |   `-DependentNameType 0xa52260 'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type' dependent
|   |     `-ReturnStmt 0xa52460 <line:703:7, col:58>
|   |       `-CallExpr 0xa52430 <col:14, col:58> '<dependent type>'
|   |         |-DeclRefExpr 0xa52340 <col:14> '<builtin fn type>' Function 0xa50c48 '__builtin_isgreater' 'int (...) noexcept'
|   |         |-CXXUnresolvedConstructExpr 0xa523b0 <col:34, col:44> '__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type' '__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'
|   |         | `-DeclRefExpr 0xa52390 <col:41> '_Tp' lvalue ParmVar 0xa51ad0 '__x' '_Tp'
|   |         `-CXXUnresolvedConstructExpr 0xa52408 <col:47, col:57> '__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type' '__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'
|   |           `-DeclRefExpr 0xa523e8 <col:54> '_Up' lvalue ParmVar 0xa51b48 '__y' '_Up'
|   |-FunctionDecl 0xa525c0 <line:708:3, line:710:48> line:709:3 constexpr isgreaterequal 'bool (float, float)'
|   | |-ParmVarDecl 0xa524a8 <col:18, col:24> col:24 used __x 'float'
|   | |-ParmVarDecl 0xa52528 <col:29, col:35> col:35 used __y 'float'
|   | `-CompoundStmt 0xa528e0 <line:710:3, col:48>
|   |   `-ReturnStmt 0xa528d0 <col:5, col:45>
|   |     `-ImplicitCastExpr 0xa528b8 <col:12, col:45> 'bool' <IntegralToBoolean>
|   |       `-CallExpr 0xa52858 <col:12, col:45> 'int'
|   |         |-ImplicitCastExpr 0xa52840 <col:12> 'int (*)(...) noexcept' <BuiltinFnToFnPtr>
|   |         | `-DeclRefExpr 0xa527e0 <col:12> '<builtin fn type>' Function 0xa526c0 '__builtin_isgreaterequal' 'int (...) noexcept'
|   |         |-ImplicitCastExpr 0xa52888 <col:37> 'float' <LValueToRValue>
|   |         | `-DeclRefExpr 0xa52800 <col:37> 'float' lvalue ParmVar 0xa524a8 '__x' 'float'
|   |         `-ImplicitCastExpr 0xa528a0 <col:42> 'float' <LValueToRValue>
|   |           `-DeclRefExpr 0xa52820 <col:42> 'float' lvalue ParmVar 0xa52528 '__y' 'float'
|   |-FunctionDecl 0xa52a28 <line:712:3, line:714:48> line:713:3 constexpr isgreaterequal 'bool (double, double)'
|   | |-ParmVarDecl 0xa52910 <col:18, col:25> col:25 used __x 'double'
|   | |-ParmVarDecl 0xa52990 <col:30, col:37> col:37 used __y 'double'
|   | `-CompoundStmt 0xa52bd8 <line:714:3, col:48>
|   |   `-ReturnStmt 0xa52bc8 <col:5, col:45>
|   |     `-ImplicitCastExpr 0xa52bb0 <col:12, col:45> 'bool' <IntegralToBoolean>
|   |       `-CallExpr 0xa52b50 <col:12, col:45> 'int'
|   |         |-ImplicitCastExpr 0xa52b38 <col:12> 'int (*)(...) noexcept' <BuiltinFnToFnPtr>
|   |         | `-DeclRefExpr 0xa52ad8 <col:12> '<builtin fn type>' Function 0xa526c0 '__builtin_isgreaterequal' 'int (...) noexcept'
|   |         |-ImplicitCastExpr 0xa52b80 <col:37> 'double' <LValueToRValue>
|   |         | `-DeclRefExpr 0xa52af8 <col:37> 'double' lvalue ParmVar 0xa52910 '__x' 'double'
|   |         `-ImplicitCastExpr 0xa52b98 <col:42> 'double' <LValueToRValue>
|   |           `-DeclRefExpr 0xa52b18 <col:42> 'double' lvalue ParmVar 0xa52990 '__y' 'double'
|   |-FunctionDecl 0xa52d20 <line:716:3, line:718:48> line:717:3 constexpr isgreaterequal 'bool (long double, long double)'
|   | |-ParmVarDecl 0xa52c08 <col:18, col:30> col:30 used __x 'long double'
|   | |-ParmVarDecl 0xa52c88 <col:35, col:47> col:47 used __y 'long double'
|   | `-CompoundStmt 0xa52ee8 <line:718:3, col:48>
|   |   `-ReturnStmt 0xa52ed8 <col:5, col:45>
|   |     `-ImplicitCastExpr 0xa52ec0 <col:12, col:45> 'bool' <IntegralToBoolean>
|   |       `-CallExpr 0xa52e48 <col:12, col:45> 'int'
|   |         |-ImplicitCastExpr 0xa52e30 <col:12> 'int (*)(...) noexcept' <BuiltinFnToFnPtr>
|   |         | `-DeclRefExpr 0xa52dd0 <col:12> '<builtin fn type>' Function 0xa526c0 '__builtin_isgreaterequal' 'int (...) noexcept'
|   |         |-ImplicitCastExpr 0xa52e78 <col:37> 'long double' <LValueToRValue>
|   |         | `-DeclRefExpr 0xa52df0 <col:37> 'long double' lvalue ParmVar 0xa52c08 '__x' 'long double'
|   |         `-ImplicitCastExpr 0xa52e90 <col:42> 'long double' <LValueToRValue>
|   |           `-DeclRefExpr 0xa52e10 <col:42> 'long double' lvalue ParmVar 0xa52c88 '__y' 'long double'
|   |-FunctionTemplateDecl 0xa535b8 <line:722:3, line:730:5> line:726:5 isgreaterequal
|   | |-TemplateTypeParmDecl 0xa52f00 <line:722:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl 0xa52f78 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
|   | `-FunctionDecl 0xa53518 <line:723:5, line:730:5> line:726:5 constexpr isgreaterequal 'typename __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value && __is_arithmetic<_Up>::__value), bool>::__type (_Tp, _Up)'
|   |   |-ParmVarDecl 0xa533c0 <col:20, col:24> col:24 referenced __x '_Tp'
|   |   |-ParmVarDecl 0xa53438 <col:29, col:33> col:33 referenced __y '_Up'
|   |   `-CompoundStmt 0xa53d20 <line:727:5, line:730:5>
|   |     |-DeclStmt 0xa53bd8 <line:728:7, col:71>
|   |     | `-TypedefDecl 0xa53b80 <col:7, col:65> col:65 referenced __type 'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'
|   |     |   `-DependentNameType 0xa53b10 'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type' dependent
|   |     `-ReturnStmt 0xa53d10 <line:729:7, col:63>
|   |       `-CallExpr 0xa53ce0 <col:14, col:63> '<dependent type>'
|   |         |-DeclRefExpr 0xa53bf0 <col:14> '<builtin fn type>' Function 0xa526c0 '__builtin_isgreaterequal' 'int (...) noexcept'
|   |         |-CXXUnresolvedConstructExpr 0xa53c60 <col:39, col:49> '__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type' '__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'
|   |         | `-DeclRefExpr 0xa53c40 <col:46> '_Tp' lvalue ParmVar 0xa533c0 '__x' '_Tp'
|   |         `-CXXUnresolvedConstructExpr 0xa53cb8 <col:52, col:62> '__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type' '__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'
|   |           `-DeclRefExpr 0xa53c98 <col:59> '_Up' lvalue ParmVar 0xa53438 '__y' '_Up'
|   |-FunctionDecl 0xa53e70 <line:734:3, line:736:40> line:735:3 constexpr isless 'bool (float, float)'
|   | |-ParmVarDecl 0xa53d58 <col:10, col:16> col:16 used __x 'float'
|   | |-ParmVarDecl 0xa53dd8 <col:21, col:27> col:27 used __y 'float'
|   | `-CompoundStmt 0xa54190 <line:736:3, col:40>
|   |   `-ReturnStmt 0xa54180 <col:5, col:37>
|   |     `-ImplicitCastExpr 0xa54168 <col:12, col:37> 'bool' <IntegralToBoolean>
|   |       `-CallExpr 0xa54108 <col:12, col:37> 'int'
|   |         |-ImplicitCastExpr 0xa540f0 <col:12> 'int (*)(...) noexcept' <BuiltinFnToFnPtr>
|   |         | `-DeclRefExpr 0xa54090 <col:12> '<builtin fn type>' Function 0xa53f70 '__builtin_isless' 'int (...) noexcept'
|   |         |-ImplicitCastExpr 0xa54138 <col:29> 'float' <LValueToRValue>
|   |         | `-DeclRefExpr 0xa540b0 <col:29> 'float' lvalue ParmVar 0xa53d58 '__x' 'float'
|   |         `-ImplicitCastExpr 0xa54150 <col:34> 'float' <LValueToRValue>
|   |           `-DeclRefExpr 0xa540d0 <col:34> 'float' lvalue ParmVar 0xa53dd8 '__y' 'float'
|   |-FunctionDecl 0xa542d8 <line:738:3, line:740:40> line:739:3 constexpr isless 'bool (double, double)'
|   | |-ParmVarDecl 0xa541c0 <col:10, col:17> col:17 used __x 'double'
|   | |-ParmVarDecl 0xa54240 <col:22, col:29> col:29 used __y 'double'
|   | `-CompoundStmt 0xa54488 <line:740:3, col:40>
|   |   `-ReturnStmt 0xa54478 <col:5, col:37>
|   |     `-ImplicitCastExpr 0xa54460 <col:12, col:37> 'bool' <IntegralToBoolean>
|   |       `-CallExpr 0xa54400 <col:12, col:37> 'int'
|   |         |-ImplicitCastExpr 0xa543e8 <col:12> 'int (*)(...) noexcept' <BuiltinFnToFnPtr>
|   |         | `-DeclRefExpr 0xa54388 <col:12> '<builtin fn type>' Function 0xa53f70 '__builtin_isless' 'int (...) noexcept'
|   |         |-ImplicitCastExpr 0xa54430 <col:29> 'double' <LValueToRValue>
|   |         | `-DeclRefExpr 0xa543a8 <col:29> 'double' lvalue ParmVar 0xa541c0 '__x' 'double'
|   |         `-ImplicitCastExpr 0xa54448 <col:34> 'double' <LValueToRValue>
|   |           `-DeclRefExpr 0xa543c8 <col:34> 'double' lvalue ParmVar 0xa54240 '__y' 'double'
|   |-FunctionDecl 0xa545d0 <line:742:3, line:744:40> line:743:3 constexpr isless 'bool (long double, long double)'
|   | |-ParmVarDecl 0xa544b8 <col:10, col:22> col:22 used __x 'long double'
|   | |-ParmVarDecl 0xa54538 <col:27, col:39> col:39 used __y 'long double'
|   | `-CompoundStmt 0xa54780 <line:744:3, col:40>
|   |   `-ReturnStmt 0xa54770 <col:5, col:37>
|   |     `-ImplicitCastExpr 0xa54758 <col:12, col:37> 'bool' <IntegralToBoolean>
|   |       `-CallExpr 0xa546f8 <col:12, col:37> 'int'
|   |         |-ImplicitCastExpr 0xa546e0 <col:12> 'int (*)(...) noexcept' <BuiltinFnToFnPtr>
|   |         | `-DeclRefExpr 0xa54680 <col:12> '<builtin fn type>' Function 0xa53f70 '__builtin_isless' 'int (...) noexcept'
|   |         |-ImplicitCastExpr 0xa54728 <col:29> 'long double' <LValueToRValue>
|   |         | `-DeclRefExpr 0xa546a0 <col:29> 'long double' lvalue ParmVar 0xa544b8 '__x' 'long double'
|   |         `-ImplicitCastExpr 0xa54740 <col:34> 'long double' <LValueToRValue>
|   |           `-DeclRefExpr 0xa546c0 <col:34> 'long double' lvalue ParmVar 0xa54538 '__y' 'long double'
|   |-FunctionTemplateDecl 0xa54e58 <line:748:3, line:756:5> line:752:5 isless
|   | |-TemplateTypeParmDecl 0xa54798 <line:748:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl 0xa54818 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
|   | `-FunctionDecl 0xa54db8 <line:749:5, line:756:5> line:752:5 constexpr isless 'typename __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value && __is_arithmetic<_Up>::__value), bool>::__type (_Tp, _Up)'
|   |   |-ParmVarDecl 0xa54c60 <col:12, col:16> col:16 referenced __x '_Tp'
|   |   |-ParmVarDecl 0xa54cd8 <col:21, col:25> col:25 referenced __y '_Up'
|   |   `-CompoundStmt 0xa555d0 <line:753:5, line:756:5>
|   |     |-DeclStmt 0xa55488 <line:754:7, col:71>
|   |     | `-TypedefDecl 0xa55430 <col:7, col:65> col:65 referenced __type 'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'
|   |     |   `-DependentNameType 0xa553c0 'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type' dependent
|   |     `-ReturnStmt 0xa555c0 <line:755:7, col:55>
|   |       `-CallExpr 0xa55590 <col:14, col:55> '<dependent type>'
|   |         |-DeclRefExpr 0xa554a0 <col:14> '<builtin fn type>' Function 0xa53f70 '__builtin_isless' 'int (...) noexcept'
|   |         |-CXXUnresolvedConstructExpr 0xa55510 <col:31, col:41> '__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type' '__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'
|   |         | `-DeclRefExpr 0xa554f0 <col:38> '_Tp' lvalue ParmVar 0xa54c60 '__x' '_Tp'
|   |         `-CXXUnresolvedConstructExpr 0xa55568 <col:44, col:54> '__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type' '__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'
|   |           `-DeclRefExpr 0xa55548 <col:51> '_Up' lvalue ParmVar 0xa54cd8 '__y' '_Up'
|   |-FunctionDecl 0xa55720 <line:760:3, line:762:45> line:761:3 constexpr islessequal 'bool (float, float)'
|   | |-ParmVarDecl 0xa55608 <col:15, col:21> col:21 used __x 'float'
|   | |-ParmVarDecl 0xa55688 <col:26, col:32> col:32 used __y 'float'
|   | `-CompoundStmt 0xa55a40 <line:762:3, col:45>
|   |   `-ReturnStmt 0xa55a30 <col:5, col:42>
|   |     `-ImplicitCastExpr 0xa55a18 <col:12, col:42> 'bool' <IntegralToBoolean>
|   |       `-CallExpr 0xa559b8 <col:12, col:42> 'int'
|   |         |-ImplicitCastExpr 0xa559a0 <col:12> 'int (*)(...) noexcept' <BuiltinFnToFnPtr>
|   |         | `-DeclRefExpr 0xa55940 <col:12> '<builtin fn type>' Function 0xa55820 '__builtin_islessequal' 'int (...) noexcept'
|   |         |-ImplicitCastExpr 0xa559e8 <col:34> 'float' <LValueToRValue>
|   |         | `-DeclRefExpr 0xa55960 <col:34> 'float' lvalue ParmVar 0xa55608 '__x' 'float'
|   |         `-ImplicitCastExpr 0xa55a00 <col:39> 'float' <LValueToRValue>
|   |           `-DeclRefExpr 0xa55980 <col:39> 'float' lvalue ParmVar 0xa55688 '__y' 'float'
|   |-FunctionDecl 0xa55b88 <line:764:3, line:766:45> line:765:3 constexpr islessequal 'bool (double, double)'
|   | |-ParmVarDecl 0xa55a70 <col:15, col:22> col:22 used __x 'double'
|   | |-ParmVarDecl 0xa55af0 <col:27, col:34> col:34 used __y 'double'
|   | `-CompoundStmt 0xa55d38 <line:766:3, col:45>
|   |   `-ReturnStmt 0xa55d28 <col:5, col:42>
|   |     `-ImplicitCastExpr 0xa55d10 <col:12, col:42> 'bool' <IntegralToBoolean>
|   |       `-CallExpr 0xa55cb0 <col:12, col:42> 'int'
|   |         |-ImplicitCastExpr 0xa55c98 <col:12> 'int (*)(...) noexcept' <BuiltinFnToFnPtr>
|   |         | `-DeclRefExpr 0xa55c38 <col:12> '<builtin fn type>' Function 0xa55820 '__builtin_islessequal' 'int (...) noexcept'
|   |         |-ImplicitCastExpr 0xa55ce0 <col:34> 'double' <LValueToRValue>
|   |         | `-DeclRefExpr 0xa55c58 <col:34> 'double' lvalue ParmVar 0xa55a70 '__x' 'double'
|   |         `-ImplicitCastExpr 0xa55cf8 <col:39> 'double' <LValueToRValue>
|   |           `-DeclRefExpr 0xa55c78 <col:39> 'double' lvalue ParmVar 0xa55af0 '__y' 'double'
|   |-FunctionDecl 0xa55e80 <line:768:3, line:770:45> line:769:3 constexpr islessequal 'bool (long double, long double)'
|   | |-ParmVarDecl 0xa55d68 <col:15, col:27> col:27 used __x 'long double'
|   | |-ParmVarDecl 0xa55de8 <col:32, col:44> col:44 used __y 'long double'
|   | `-CompoundStmt 0xa56030 <line:770:3, col:45>
|   |   `-ReturnStmt 0xa56020 <col:5, col:42>
|   |     `-ImplicitCastExpr 0xa56008 <col:12, col:42> 'bool' <IntegralToBoolean>
|   |       `-CallExpr 0xa55fa8 <col:12, col:42> 'int'
|   |         |-ImplicitCastExpr 0xa55f90 <col:12> 'int (*)(...) noexcept' <BuiltinFnToFnPtr>
|   |         | `-DeclRefExpr 0xa55f30 <col:12> '<builtin fn type>' Function 0xa55820 '__builtin_islessequal' 'int (...) noexcept'
|   |         |-ImplicitCastExpr 0xa55fd8 <col:34> 'long double' <LValueToRValue>
|   |         | `-DeclRefExpr 0xa55f50 <col:34> 'long double' lvalue ParmVar 0xa55d68 '__x' 'long double'
|   |         `-ImplicitCastExpr 0xa55ff0 <col:39> 'long double' <LValueToRValue>
|   |           `-DeclRefExpr 0xa55f70 <col:39> 'long double' lvalue ParmVar 0xa55de8 '__y' 'long double'
|   |-FunctionTemplateDecl 0xa56708 <line:774:3, line:782:5> line:778:5 islessequal
|   | |-TemplateTypeParmDecl 0xa56048 <line:774:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl 0xa560c8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
|   | `-FunctionDecl 0xa56668 <line:775:5, line:782:5> line:778:5 constexpr islessequal 'typename __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value && __is_arithmetic<_Up>::__value), bool>::__type (_Tp, _Up)'
|   |   |-ParmVarDecl 0xa56510 <col:17, col:21> col:21 referenced __x '_Tp'
|   |   |-ParmVarDecl 0xa56588 <col:26, col:30> col:30 referenced __y '_Up'
|   |   `-CompoundStmt 0xa56e70 <line:779:5, line:782:5>
|   |     |-DeclStmt 0xa56d28 <line:780:7, col:71>
|   |     | `-TypedefDecl 0xa56cd0 <col:7, col:65> col:65 referenced __type 'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'
|   |     |   `-DependentNameType 0xa56c60 'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type' dependent
|   |     `-ReturnStmt 0xa56e60 <line:781:7, col:60>
|   |       `-CallExpr 0xa56e30 <col:14, col:60> '<dependent type>'
|   |         |-DeclRefExpr 0xa56d40 <col:14> '<builtin fn type>' Function 0xa55820 '__builtin_islessequal' 'int (...) noexcept'
|   |         |-CXXUnresolvedConstructExpr 0xa56db0 <col:36, col:46> '__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type' '__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'
|   |         | `-DeclRefExpr 0xa56d90 <col:43> '_Tp' lvalue ParmVar 0xa56510 '__x' '_Tp'
|   |         `-CXXUnresolvedConstructExpr 0xa56e08 <col:49, col:59> '__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type' '__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'
|   |           `-DeclRefExpr 0xa56de8 <col:56> '_Up' lvalue ParmVar 0xa56588 '__y' '_Up'
|   |-FunctionDecl 0xa58008 <line:786:3, line:788:47> line:787:3 constexpr islessgreater 'bool (float, float)'
|   | |-ParmVarDecl 0xa57ef0 <col:17, col:23> col:23 used __x 'float'
|   | |-ParmVarDecl 0xa57f70 <col:28, col:34> col:34 used __y 'float'
|   | `-CompoundStmt 0xa58328 <line:788:3, col:47>
|   |   `-ReturnStmt 0xa58318 <col:5, col:44>
|   |     `-ImplicitCastExpr 0xa58300 <col:12, col:44> 'bool' <IntegralToBoolean>
|   |       `-CallExpr 0xa582a0 <col:12, col:44> 'int'
|   |         |-ImplicitCastExpr 0xa58288 <col:12> 'int (*)(...) noexcept' <BuiltinFnToFnPtr>
|   |         | `-DeclRefExpr 0xa58228 <col:12> '<builtin fn type>' Function 0xa58108 '__builtin_islessgreater' 'int (...) noexcept'
|   |         |-ImplicitCastExpr 0xa582d0 <col:36> 'float' <LValueToRValue>
|   |         | `-DeclRefExpr 0xa58248 <col:36> 'float' lvalue ParmVar 0xa57ef0 '__x' 'float'
|   |         `-ImplicitCastExpr 0xa582e8 <col:41> 'float' <LValueToRValue>
|   |           `-DeclRefExpr 0xa58268 <col:41> 'float' lvalue ParmVar 0xa57f70 '__y' 'float'
|   |-FunctionDecl 0xa58470 <line:790:3, line:792:47> line:791:3 constexpr islessgreater 'bool (double, double)'
|   | |-ParmVarDecl 0xa58358 <col:17, col:24> col:24 used __x 'double'
|   | |-ParmVarDecl 0xa583d8 <col:29, col:36> col:36 used __y 'double'
|   | `-CompoundStmt 0xa58620 <line:792:3, col:47>
|   |   `-ReturnStmt 0xa58610 <col:5, col:44>
|   |     `-ImplicitCastExpr 0xa585f8 <col:12, col:44> 'bool' <IntegralToBoolean>
|   |       `-CallExpr 0xa58598 <col:12, col:44> 'int'
|   |         |-ImplicitCastExpr 0xa58580 <col:12> 'int (*)(...) noexcept' <BuiltinFnToFnPtr>
|   |         | `-DeclRefExpr 0xa58520 <col:12> '<builtin fn type>' Function 0xa58108 '__builtin_islessgreater' 'int (...) noexcept'
|   |         |-ImplicitCastExpr 0xa585c8 <col:36> 'double' <LValueToRValue>
|   |         | `-DeclRefExpr 0xa58540 <col:36> 'double' lvalue ParmVar 0xa58358 '__x' 'double'
|   |         `-ImplicitCastExpr 0xa585e0 <col:41> 'double' <LValueToRValue>
|   |           `-DeclRefExpr 0xa58560 <col:41> 'double' lvalue ParmVar 0xa583d8 '__y' 'double'
|   |-FunctionDecl 0xa58768 <line:794:3, line:796:47> line:795:3 constexpr islessgreater 'bool (long double, long double)'
|   | |-ParmVarDecl 0xa58650 <col:17, col:29> col:29 used __x 'long double'
|   | |-ParmVarDecl 0xa586d0 <col:34, col:46> col:46 used __y 'long double'
|   | `-CompoundStmt 0xa58918 <line:796:3, col:47>
|   |   `-ReturnStmt 0xa58908 <col:5, col:44>
|   |     `-ImplicitCastExpr 0xa588f0 <col:12, col:44> 'bool' <IntegralToBoolean>
|   |       `-CallExpr 0xa58890 <col:12, col:44> 'int'
|   |         |-ImplicitCastExpr 0xa58878 <col:12> 'int (*)(...) noexcept' <BuiltinFnToFnPtr>
|   |         | `-DeclRefExpr 0xa58818 <col:12> '<builtin fn type>' Function 0xa58108 '__builtin_islessgreater' 'int (...) noexcept'
|   |         |-ImplicitCastExpr 0xa588c0 <col:36> 'long double' <LValueToRValue>
|   |         | `-DeclRefExpr 0xa58838 <col:36> 'long double' lvalue ParmVar 0xa58650 '__x' 'long double'
|   |         `-ImplicitCastExpr 0xa588d8 <col:41> 'long double' <LValueToRValue>
|   |           `-DeclRefExpr 0xa58858 <col:41> 'long double' lvalue ParmVar 0xa586d0 '__y' 'long double'
|   |-FunctionTemplateDecl 0xa58fe8 <line:800:3, line:808:5> line:804:5 islessgreater
|   | |-TemplateTypeParmDecl 0xa58930 <line:800:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl 0xa589a8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
|   | `-FunctionDecl 0xa58f48 <line:801:5, line:808:5> line:804:5 constexpr islessgreater 'typename __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value && __is_arithmetic<_Up>::__value), bool>::__type (_Tp, _Up)'
|   |   |-ParmVarDecl 0xa58df0 <col:19, col:23> col:23 referenced __x '_Tp'
|   |   |-ParmVarDecl 0xa58e68 <col:28, col:32> col:32 referenced __y '_Up'
|   |   `-CompoundStmt 0xa59750 <line:805:5, line:808:5>
|   |     |-DeclStmt 0xa59608 <line:806:7, col:71>
|   |     | `-TypedefDecl 0xa595b0 <col:7, col:65> col:65 referenced __type 'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'
|   |     |   `-DependentNameType 0xa59540 'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type' dependent
|   |     `-ReturnStmt 0xa59740 <line:807:7, col:62>
|   |       `-CallExpr 0xa59710 <col:14, col:62> '<dependent type>'
|   |         |-DeclRefExpr 0xa59620 <col:14> '<builtin fn type>' Function 0xa58108 '__builtin_islessgreater' 'int (...) noexcept'
|   |         |-CXXUnresolvedConstructExpr 0xa59690 <col:38, col:48> '__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type' '__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'
|   |         | `-DeclRefExpr 0xa59670 <col:45> '_Tp' lvalue ParmVar 0xa58df0 '__x' '_Tp'
|   |         `-CXXUnresolvedConstructExpr 0xa596e8 <col:51, col:61> '__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type' '__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'
|   |           `-DeclRefExpr 0xa596c8 <col:58> '_Up' lvalue ParmVar 0xa58e68 '__y' '_Up'
|   |-FunctionDecl 0xa598a0 <line:812:3, line:814:45> line:813:3 constexpr isunordered 'bool (float, float)'
|   | |-ParmVarDecl 0xa59788 <col:15, col:21> col:21 used __x 'float'
|   | |-ParmVarDecl 0xa59808 <col:26, col:32> col:32 used __y 'float'
|   | `-CompoundStmt 0xa59bc0 <line:814:3, col:45>
|   |   `-ReturnStmt 0xa59bb0 <col:5, col:42>
|   |     `-ImplicitCastExpr 0xa59b98 <col:12, col:42> 'bool' <IntegralToBoolean>
|   |       `-CallExpr 0xa59b38 <col:12, col:42> 'int'
|   |         |-ImplicitCastExpr 0xa59b20 <col:12> 'int (*)(...) noexcept' <BuiltinFnToFnPtr>
|   |         | `-DeclRefExpr 0xa59ac0 <col:12> '<builtin fn type>' Function 0xa599a0 '__builtin_isunordered' 'int (...) noexcept'
|   |         |-ImplicitCastExpr 0xa59b68 <col:34> 'float' <LValueToRValue>
|   |         | `-DeclRefExpr 0xa59ae0 <col:34> 'float' lvalue ParmVar 0xa59788 '__x' 'float'
|   |         `-ImplicitCastExpr 0xa59b80 <col:39> 'float' <LValueToRValue>
|   |           `-DeclRefExpr 0xa59b00 <col:39> 'float' lvalue ParmVar 0xa59808 '__y' 'float'
|   |-FunctionDecl 0xa59d08 <line:816:3, line:818:45> line:817:3 constexpr isunordered 'bool (double, double)'
|   | |-ParmVarDecl 0xa59bf0 <col:15, col:22> col:22 used __x 'double'
|   | |-ParmVarDecl 0xa59c70 <col:27, col:34> col:34 used __y 'double'
|   | `-CompoundStmt 0xa59eb8 <line:818:3, col:45>
|   |   `-ReturnStmt 0xa59ea8 <col:5, col:42>
|   |     `-ImplicitCastExpr 0xa59e90 <col:12, col:42> 'bool' <IntegralToBoolean>
|   |       `-CallExpr 0xa59e30 <col:12, col:42> 'int'
|   |         |-ImplicitCastExpr 0xa59e18 <col:12> 'int (*)(...) noexcept' <BuiltinFnToFnPtr>
|   |         | `-DeclRefExpr 0xa59db8 <col:12> '<builtin fn type>' Function 0xa599a0 '__builtin_isunordered' 'int (...) noexcept'
|   |         |-ImplicitCastExpr 0xa59e60 <col:34> 'double' <LValueToRValue>
|   |         | `-DeclRefExpr 0xa59dd8 <col:34> 'double' lvalue ParmVar 0xa59bf0 '__x' 'double'
|   |         `-ImplicitCastExpr 0xa59e78 <col:39> 'double' <LValueToRValue>
|   |           `-DeclRefExpr 0xa59df8 <col:39> 'double' lvalue ParmVar 0xa59c70 '__y' 'double'
|   |-FunctionDecl 0xa5a018 <line:820:3, line:822:45> line:821:3 constexpr isunordered 'bool (long double, long double)'
|   | |-ParmVarDecl 0xa59f00 <col:15, col:27> col:27 used __x 'long double'
|   | |-ParmVarDecl 0xa59f80 <col:32, col:44> col:44 used __y 'long double'
|   | `-CompoundStmt 0xa5a1c8 <line:822:3, col:45>
|   |   `-ReturnStmt 0xa5a1b8 <col:5, col:42>
|   |     `-ImplicitCastExpr 0xa5a1a0 <col:12, col:42> 'bool' <IntegralToBoolean>
|   |       `-CallExpr 0xa5a140 <col:12, col:42> 'int'
|   |         |-ImplicitCastExpr 0xa5a128 <col:12> 'int (*)(...) noexcept' <BuiltinFnToFnPtr>
|   |         | `-DeclRefExpr 0xa5a0c8 <col:12> '<builtin fn type>' Function 0xa599a0 '__builtin_isunordered' 'int (...) noexcept'
|   |         |-ImplicitCastExpr 0xa5a170 <col:34> 'long double' <LValueToRValue>
|   |         | `-DeclRefExpr 0xa5a0e8 <col:34> 'long double' lvalue ParmVar 0xa59f00 '__x' 'long double'
|   |         `-ImplicitCastExpr 0xa5a188 <col:39> 'long double' <LValueToRValue>
|   |           `-DeclRefExpr 0xa5a108 <col:39> 'long double' lvalue ParmVar 0xa59f80 '__y' 'long double'
|   |-FunctionTemplateDecl 0xa5a898 <line:826:3, line:834:5> line:830:5 isunordered
|   | |-TemplateTypeParmDecl 0xa5a1e0 <line:826:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl 0xa5a258 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
|   | `-FunctionDecl 0xa5a7f8 <line:827:5, line:834:5> line:830:5 constexpr isunordered 'typename __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value && __is_arithmetic<_Up>::__value), bool>::__type (_Tp, _Up)'
|   |   |-ParmVarDecl 0xa5a6a0 <col:17, col:21> col:21 referenced __x '_Tp'
|   |   |-ParmVarDecl 0xa5a718 <col:26, col:30> col:30 referenced __y '_Up'
|   |   `-CompoundStmt 0xa5b000 <line:831:5, line:834:5>
|   |     |-DeclStmt 0xa5aeb8 <line:832:7, col:71>
|   |     | `-TypedefDecl 0xa5ae60 <col:7, col:65> col:65 referenced __type 'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'
|   |     |   `-DependentNameType 0xa5adf0 'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type' dependent
|   |     `-ReturnStmt 0xa5aff0 <line:833:7, col:60>
|   |       `-CallExpr 0xa5afc0 <col:14, col:60> '<dependent type>'
|   |         |-DeclRefExpr 0xa5aed0 <col:14> '<builtin fn type>' Function 0xa599a0 '__builtin_isunordered' 'int (...) noexcept'
|   |         |-CXXUnresolvedConstructExpr 0xa5af40 <col:36, col:46> '__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type' '__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'
|   |         | `-DeclRefExpr 0xa5af20 <col:43> '_Tp' lvalue ParmVar 0xa5a6a0 '__x' '_Tp'
|   |         `-CXXUnresolvedConstructExpr 0xa5af98 <col:49, col:59> '__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type' '__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'
|   |           `-DeclRefExpr 0xa5af78 <col:56> '_Up' lvalue ParmVar 0xa5a718 '__y' '_Up'
|   |-UsingDecl 0xa5b028 <line:1065:3, col:11> col:11 ::double_t
|   |-UsingShadowDecl 0xa5b080 <col:11> col:11 implicit Typedef 0x8d9d10 'double_t'
|   | `-<<<NULL>>>
|   |-UsingDecl 0xa5b0d8 <line:1066:3, col:11> col:11 ::float_t
|   |-UsingShadowDecl 0xa5b130 <col:11> col:11 implicit Typedef 0x8d9ca0 'float_t'
|   | `-<<<NULL>>>
|   |-UsingDecl 0xa5b188 <line:1069:3, col:11> col:11 ::acosh
|   |-UsingShadowDecl 0xa5b1e0 <col:11> col:11 implicit Function 0x8e8a88 'acosh' 'double (double) throw()'
|   |-UsingDecl 0xa5b238 <line:1070:3, col:11> col:11 ::acoshf
|   |-UsingShadowDecl 0xa5b290 <col:11> col:11 implicit Function 0x92bdf8 'acoshf' 'float (float) throw()'
|   |-UsingDecl 0xa5b2e8 <line:1071:3, col:11> col:11 ::acoshl
|   |-UsingShadowDecl 0xa5b340 <col:11> col:11 implicit Function 0x937118 'acoshl' 'long double (long double) throw()'
|   |-UsingDecl 0xa5b398 <line:1073:3, col:11> col:11 ::asinh
|   |-UsingShadowDecl 0xa5b3f0 <col:11> col:11 implicit Function 0x8e8da0 'asinh' 'double (double) throw()'
|   |-UsingDecl 0xa5b448 <line:1074:3, col:11> col:11 ::asinhf
|   |-UsingShadowDecl 0xa5b4a0 <col:11> col:11 implicit Function 0x92c110 'asinhf' 'float (float) throw()'
|   |-UsingDecl 0xa5b4f8 <line:1075:3, col:11> col:11 ::asinhl
|   |-UsingShadowDecl 0xa5b550 <col:11> col:11 implicit Function 0x937430 'asinhl' 'long double (long double) throw()'
|   |-UsingDecl 0xa5b5a8 <line:1077:3, col:11> col:11 ::atanh
|   |-UsingShadowDecl 0xa5b600 <col:11> col:11 implicit Function 0x8e90b8 'atanh' 'double (double) throw()'
|   |-UsingDecl 0xa5b658 <line:1078:3, col:11> col:11 ::atanhf
|   |-UsingShadowDecl 0xa5b6b0 <col:11> col:11 implicit Function 0x92c428 'atanhf' 'float (float) throw()'
|   |-UsingDecl 0xa5b708 <line:1079:3, col:11> col:11 ::atanhl
|   |-UsingShadowDecl 0xa5b760 <col:11> col:11 implicit Function 0x937748 'atanhl' 'long double (long double) throw()'
|   |-UsingDecl 0xa5b7b8 <line:1081:3, col:11> col:11 ::cbrt
|   |-UsingShadowDecl 0xa5b810 <col:11> col:11 implicit Function 0x8ef418 'cbrt' 'double (double) throw()'
|   |-UsingDecl 0xa5b868 <line:1082:3, col:11> col:11 ::cbrtf
|   |-UsingShadowDecl 0xa5b8c0 <col:11> col:11 implicit Function 0x910b10 'cbrtf' 'float (float) throw()'
|   |-UsingDecl 0xa5b918 <line:1083:3, col:11> col:11 ::cbrtl
|   |-UsingShadowDecl 0xa5b970 <col:11> col:11 implicit Function 0x93f668 'cbrtl' 'long double (long double) throw()'
|   |-UsingDecl 0xa5b9c8 <line:1085:3, col:11> col:11 ::copysign
|   |-UsingShadowDecl 0xa5ba20 <col:11> col:11 implicit Function 0x929b80 'copysign' 'double (double, double) throw()'
|   |-UsingDecl 0xa5ba78 <line:1086:3, col:11> col:11 ::copysignf
|   |-UsingShadowDecl 0xa5bad0 <col:11> col:11 implicit Function 0x912898 'copysignf' 'float (float, float) throw()'
|   |-UsingDecl 0xa5bb28 <line:1087:3, col:11> col:11 ::copysignl
|   |-UsingShadowDecl 0xa5bb80 <col:11> col:11 implicit Function 0x941470 'copysignl' 'long double (long double, long double) throw()'
|   |-UsingDecl 0xa5bbd8 <line:1089:3, col:11> col:11 ::erf
|   |-UsingShadowDecl 0xa5bc30 <col:11> col:11 implicit Function 0x92c7a0 'erf' 'double (double) throw()'
|   |-UsingDecl 0xa5bc88 <line:1090:3, col:11> col:11 ::erff
|   |-UsingShadowDecl 0xa5bce0 <col:11> col:11 implicit Function 0x915600 'erff' 'float (float) throw()'
|   |-UsingDecl 0xa5bd38 <line:1091:3, col:11> col:11 ::erfl
|   |-UsingShadowDecl 0xa5bd90 <col:11> col:11 implicit Function 0x9431f0 'erfl' 'long double (long double) throw()'
|   |-UsingDecl 0xa5bde8 <line:1093:3, col:11> col:11 ::erfc
|   |-UsingShadowDecl 0xa5be40 <col:11> col:11 implicit Function 0x92cab8 'erfc' 'double (double) throw()'
|   |-UsingDecl 0xa5be98 <line:1094:3, col:11> col:11 ::erfcf
|   |-UsingShadowDecl 0xa5cf20 <col:11> col:11 implicit Function 0x915918 'erfcf' 'float (float) throw()'
|   |-UsingDecl 0xa5cf78 <line:1095:3, col:11> col:11 ::erfcl
|   |-UsingShadowDecl 0xa5cfd0 <col:11> col:11 implicit Function 0x943508 'erfcl' 'long double (long double) throw()'
|   |-UsingDecl 0xa5d028 <line:1097:3, col:11> col:11 ::exp2
|   |-UsingShadowDecl 0xa5d080 <col:11> col:11 implicit Function 0x8eded8 'exp2' 'double (double) throw()'
|   |-UsingDecl 0xa5d0d8 <line:1098:3, col:11> col:11 ::exp2f
|   |-UsingShadowDecl 0xa5d130 <col:11> col:11 implicit Function 0x90f940 'exp2f' 'float (float) throw()'
|   |-UsingDecl 0xa5d188 <line:1099:3, col:11> col:11 ::exp2l
|   |-UsingShadowDecl 0xa5d1e0 <col:11> col:11 implicit Function 0x93e470 'exp2l' 'long double (long double) throw()'
|   |-UsingDecl 0xa5d238 <line:1101:3, col:11> col:11 ::expm1
|   |-UsingShadowDecl 0xa5d290 <col:11> col:11 implicit Function 0x8eb9f8 'expm1' 'double (double) throw()'
|   |-UsingDecl 0xa5d2e8 <line:1102:3, col:11> col:11 ::expm1f
|   |-UsingShadowDecl 0xa5d340 <col:11> col:11 implicit Function 0x90ef68 'expm1f' 'float (float) throw()'
|   |-UsingDecl 0xa5d398 <line:1103:3, col:11> col:11 ::expm1l
|   |-UsingShadowDecl 0xa5d3f0 <col:11> col:11 implicit Function 0x90a030 'expm1l' 'long double (long double) throw()'
|   |-UsingDecl 0xa5d448 <line:1105:3, col:11> col:11 ::fdim
|   |-UsingShadowDecl 0xa5d4a0 <col:11> col:11 implicit Function 0x934018 'fdim' 'double (double, double) throw()'
|   |-UsingDecl 0xa5d4f8 <line:1106:3, col:11> col:11 ::fdimf
|   |-UsingShadowDecl 0xa5d550 <col:11> col:11 implicit Function 0x91ddf8 'fdimf' 'float (float, float) throw()'
|   |-UsingDecl 0xa5d5a8 <line:1107:3, col:11> col:11 ::fdiml
|   |-UsingShadowDecl 0xa5d600 <col:11> col:11 implicit Function 0x948948 'fdiml' 'long double (long double, long double) throw()'
|   |-UsingDecl 0xa5d658 <line:1109:3, col:11> col:11 ::fma
|   |-UsingShadowDecl 0xa5d6b0 <col:11> col:11 implicit Function 0x8ff938 'fma' 'double (double, double, double) throw()'
|   |-UsingDecl 0xa5d708 <line:1110:3, col:11> col:11 ::fmaf
|   |-UsingShadowDecl 0xa5d760 <col:11> col:11 implicit Function 0x91ed08 'fmaf' 'float (float, float, float) throw()'
|   |-UsingDecl 0xa5d7b8 <line:1111:3, col:11> col:11 ::fmal
|   |-UsingShadowDecl 0xa5d810 <col:11> col:11 implicit Function 0x949818 'fmal' 'long double (long double, long double, long double) throw()'
|   |-UsingDecl 0xa5d868 <line:1113:3, col:11> col:11 ::fmax
|   |-UsingShadowDecl 0xa5d8c0 <col:11> col:11 implicit Function 0x934450 'fmax' 'double (double, double) throw()'
|   |-UsingDecl 0xa5d918 <line:1114:3, col:11> col:11 ::fmaxf
|   |-UsingShadowDecl 0xa5d970 <col:11> col:11 implicit Function 0x91e230 'fmaxf' 'float (float, float) throw()'
|   |-UsingDecl 0xa5d9c8 <line:1115:3, col:11> col:11 ::fmaxl
|   |-UsingShadowDecl 0xa5da20 <col:11> col:11 implicit Function 0x948d80 'fmaxl' 'long double (long double, long double) throw()'
|   |-UsingDecl 0xa5da78 <line:1117:3, col:11> col:11 ::fmin
|   |-UsingShadowDecl 0xa5dad0 <col:11> col:11 implicit Function 0x8ff378 'fmin' 'double (double, double) throw()'
|   |-UsingDecl 0xa5db28 <line:1118:3, col:11> col:11 ::fminf
|   |-UsingShadowDecl 0xa5db80 <col:11> col:11 implicit Function 0x91e740 'fminf' 'float (float, float) throw()'
|   |-UsingDecl 0xa5dbd8 <line:1119:3, col:11> col:11 ::fminl
|   |-UsingShadowDecl 0xa5dc30 <col:11> col:11 implicit Function 0x949258 'fminl' 'long double (long double, long double) throw()'
|   |-UsingDecl 0xa5dc88 <line:1121:3, col:11> col:11 ::hypot
|   |-UsingShadowDecl 0xa5dce0 <col:11> col:11 implicit Function 0x8ef068 'hypot' 'double (double, double) throw()'
|   |-UsingDecl 0xa5dd38 <line:1122:3, col:11> col:11 ::hypotf
|   |-UsingShadowDecl 0xa5dd90 <col:11> col:11 implicit Function 0x910760 'hypotf' 'float (float, float) throw()'
|   |-UsingDecl 0xa5dde8 <line:1123:3, col:11> col:11 ::hypotl
|   |-UsingShadowDecl 0xa5de40 <col:11> col:11 implicit Function 0x93f2b8 'hypotl' 'long double (long double, long double) throw()'
|   |-UsingDecl 0xa5de98 <line:1125:3, col:11> col:11 ::ilogb
|   |-UsingShadowDecl 0xa5def0 <col:11> col:11 implicit Function 0x9315c0 'ilogb' 'int (double) throw()'
|   |-UsingDecl 0xa5df48 <line:1126:3, col:11> col:11 ::ilogbf
|   |-UsingShadowDecl 0xa5dfa0 <col:11> col:11 implicit Function 0x918440 'ilogbf' 'int (float) throw()'
|   |-UsingDecl 0xa5dff8 <line:1127:3, col:11> col:11 ::ilogbl
|   |-UsingShadowDecl 0xa5e050 <col:11> col:11 implicit Function 0x945f88 'ilogbl' 'int (long double) throw()'
|   |-UsingDecl 0xa5e0a8 <line:1129:3, col:11> col:11 ::lgamma
|   |-UsingShadowDecl 0xa5e100 <col:11> col:11 implicit Function 0x92cdd0 'lgamma' 'double (double) throw()'
|   |-UsingDecl 0xa5e158 <line:1130:3, col:11> col:11 ::lgammaf
|   |-UsingShadowDecl 0xa5e1b0 <col:11> col:11 implicit Function 0x915c30 'lgammaf' 'float (float) throw()'
|   |-UsingDecl 0xa5e208 <line:1131:3, col:11> col:11 ::lgammal
|   |-UsingShadowDecl 0xa5e260 <col:11> col:11 implicit Function 0x943820 'lgammal' 'long double (long double) throw()'
|   |-UsingDecl 0xa5e2b8 <line:1134:3, col:11> col:11 ::llrint
|   |-UsingShadowDecl 0xa5e310 <col:11> col:11 implicit Function 0x9335c8 'llrint' 'long long (double) throw()'
|   |-UsingDecl 0xa5e368 <line:1135:3, col:11> col:11 ::llrintf
|   |-UsingShadowDecl 0xa5e3c0 <col:11> col:11 implicit Function 0x91d3f8 'llrintf' 'long long (float) throw()'
|   |-UsingDecl 0xa5e418 <line:1136:3, col:11> col:11 ::llrintl
|   |-UsingShadowDecl 0xa5e470 <col:11> col:11 implicit Function 0x947f48 'llrintl' 'long long (long double) throw()'
|   |-UsingDecl 0xa5e4c8 <line:1138:3, col:11> col:11 ::llround
|   |-UsingShadowDecl 0xa5e520 <col:11> col:11 implicit Function 0x933c78 'llround' 'long long (double) throw()'
|   |-UsingDecl 0xa5e578 <line:1139:3, col:11> col:11 ::llroundf
|   |-UsingShadowDecl 0xa5e5d0 <col:11> col:11 implicit Function 0x91da58 'llroundf' 'long long (float) throw()'
|   |-UsingDecl 0xa5e628 <line:1140:3, col:11> col:11 ::llroundl
|   |-UsingShadowDecl 0xa5e680 <col:11> col:11 implicit Function 0x9485a8 'llroundl' 'long long (long double) throw()'
|   |-UsingDecl 0xa5e6d8 <line:1143:3, col:11> col:11 ::log1p
|   |-UsingShadowDecl 0xa5e730 <col:11> col:11 implicit Function 0x8ed8a8 'log1p' 'double (double) throw()'
|   |-UsingDecl 0xa5e788 <line:1144:3, col:11> col:11 ::log1pf
|   |-UsingShadowDecl 0xa5e7e0 <col:11> col:11 implicit Function 0x90f310 'log1pf' 'float (float) throw()'
|   |-UsingDecl 0xa5e838 <line:1145:3, col:11> col:11 ::log1pl
|   |-UsingShadowDecl 0xa5e890 <col:11> col:11 implicit Function 0x93de40 'log1pl' 'long double (long double) throw()'
|   |-UsingDecl 0xa5e8e8 <line:1147:3, col:11> col:11 ::log2
|   |-UsingShadowDecl 0xa5e940 <col:11> col:11 implicit Function 0x8ee1f0 'log2' 'double (double) throw()'
|   |-UsingDecl 0xa5e998 <line:1148:3, col:11> col:11 ::log2f
|   |-UsingShadowDecl 0xa5e9f0 <col:11> col:11 implicit Function 0x90fc58 'log2f' 'float (float) throw()'
|   |-UsingDecl 0xa5ea48 <line:1149:3, col:11> col:11 ::log2l
|   |-UsingShadowDecl 0xa5eaa0 <col:11> col:11 implicit Function 0x93e788 'log2l' 'long double (long double) throw()'
|   |-UsingDecl 0xa5eaf8 <line:1151:3, col:11> col:11 ::logb
|   |-UsingShadowDecl 0xa5eb50 <col:11> col:11 implicit Function 0x8edbc0 'logb' 'double (double) throw()'
|   |-UsingDecl 0xa5eba8 <line:1152:3, col:11> col:11 ::logbf
|   |-UsingShadowDecl 0xa5ec00 <col:11> col:11 implicit Function 0x90f628 'logbf' 'float (float) throw()'
|   |-UsingDecl 0xa5ec58 <line:1153:3, col:11> col:11 ::logbl
|   |-UsingShadowDecl 0xa5ecb0 <col:11> col:11 implicit Function 0x93e158 'logbl' 'long double (long double) throw()'
|   |-UsingDecl 0xa5ed08 <line:1155:3, col:11> col:11 ::lrint
|   |-UsingShadowDecl 0xa5ed60 <col:11> col:11 implicit Function 0x933210 'lrint' 'long (double) throw()'
|   |-UsingDecl 0xa5edb8 <line:1156:3, col:11> col:11 ::lrintf
|   |-UsingShadowDecl 0xa5ee10 <col:11> col:11 implicit Function 0x8fde30 'lrintf' 'long (float) throw()'
|   |-UsingDecl 0xa5ee68 <line:1157:3, col:11> col:11 ::lrintl
|   |-UsingShadowDecl 0xa5eec0 <col:11> col:11 implicit Function 0x947b80 'lrintl' 'long (long double) throw()'
|   |-UsingDecl 0xa60220 <line:1159:3, col:11> col:11 ::lround
|   |-UsingShadowDecl 0xa60278 <col:11> col:11 implicit Function 0x933960 'lround' 'long (double) throw()'
|   |-UsingDecl 0xa602d0 <line:1160:3, col:11> col:11 ::lroundf
|   |-UsingShadowDecl 0xa60328 <col:11> col:11 implicit Function 0x91d740 'lroundf' 'long (float) throw()'
|   |-UsingDecl 0xa60380 <line:1161:3, col:11> col:11 ::lroundl
|   |-UsingShadowDecl 0xa603d8 <col:11> col:11 implicit Function 0x948290 'lroundl' 'long (long double) throw()'
|   |-UsingDecl 0xa60430 <line:1163:3, col:11> col:11 ::nan
|   |-UsingShadowDecl 0xa60488 <col:11> col:11 implicit Function 0x92a018 'nan' 'double (const char *) throw()'
|   |-UsingDecl 0xa604e0 <line:1164:3, col:11> col:11 ::nanf
|   |-UsingShadowDecl 0xa60538 <col:11> col:11 implicit Function 0x912d28 'nanf' 'float (const char *) throw()'
|   |-UsingDecl 0xa60590 <line:1165:3, col:11> col:11 ::nanl
|   |-UsingShadowDecl 0xa605e8 <col:11> col:11 implicit Function 0x941908 'nanl' 'long double (const char *) throw()'
|   |-UsingDecl 0xa60640 <line:1167:3, col:11> col:11 ::nearbyint
|   |-UsingShadowDecl 0xa60698 <col:11> col:11 implicit Function 0x932158 'nearbyint' 'double (double) throw()'
|   |-UsingDecl 0xa606f0 <line:1168:3, col:11> col:11 ::nearbyintf
|   |-UsingShadowDecl 0xa60748 <col:11> col:11 implicit Function 0x918f68 'nearbyintf' 'float (float) throw()'
|   |-UsingDecl 0xa607a0 <line:1169:3, col:11> col:11 ::nearbyintl
|   |-UsingShadowDecl 0xa607f8 <col:11> col:11 implicit Function 0x946ab8 'nearbyintl' 'long double (long double) throw()'
|   |-UsingDecl 0xa60850 <line:1171:3, col:11> col:11 ::nextafter
|   |-UsingShadowDecl 0xa608a8 <col:11> col:11 implicit Function 0x92ded8 'nextafter' 'double (double, double) throw()'
|   |-UsingDecl 0xa60900 <line:1172:3, col:11> col:11 ::nextafterf
|   |-UsingShadowDecl 0xa60958 <col:11> col:11 implicit Function 0x916d28 'nextafterf' 'float (float, float) throw()'
|   |-UsingDecl 0xa609b0 <line:1173:3, col:11> col:11 ::nextafterl
|   |-UsingShadowDecl 0xa60a08 <col:11> col:11 implicit Function 0x944908 'nextafterl' 'long double (long double, long double) throw()'
|   |-UsingDecl 0xa60a60 <line:1175:3, col:11> col:11 ::nexttoward
|   |-UsingShadowDecl 0xa60ab8 <col:11> col:11 implicit Function 0x92e388 'nexttoward' 'double (double, long double) throw()'
|   |-UsingDecl 0xa60b10 <line:1176:3, col:11> col:11 ::nexttowardf
|   |-UsingShadowDecl 0xa60b68 <col:11> col:11 implicit Function 0x9171d8 'nexttowardf' 'float (float, long double) throw()'
|   |-UsingDecl 0xa60bc0 <line:1177:3, col:11> col:11 ::nexttowardl
|   |-UsingShadowDecl 0xa60c18 <col:11> col:11 implicit Function 0x944d40 'nexttowardl' 'long double (long double, long double) throw()'
|   |-UsingDecl 0xa60c70 <line:1179:3, col:11> col:11 ::remainder
|   |-UsingShadowDecl 0xa60cc8 <col:11> col:11 implicit Function 0x930dd8 'remainder' 'double (double, double) throw()'
|   |-UsingDecl 0xa60d20 <line:1180:3, col:11> col:11 ::remainderf
|   |-UsingShadowDecl 0xa60d78 <col:11> col:11 implicit Function 0x917c28 'remainderf' 'float (float, float) throw()'
|   |-UsingDecl 0xa60dd0 <line:1181:3, col:11> col:11 ::remainderl
|   |-UsingShadowDecl 0xa60e28 <col:11> col:11 implicit Function 0x945718 'remainderl' 'long double (long double, long double) throw()'
|   |-UsingDecl 0xa60e80 <line:1183:3, col:11> col:11 ::remquo
|   |-UsingShadowDecl 0xa60ed8 <col:11> col:11 implicit Function 0x932d88 'remquo' 'double (double, double, int *) throw()'
|   |-UsingDecl 0xa60f30 <line:1184:3, col:11> col:11 ::remquof
|   |-UsingShadowDecl 0xa60f88 <col:11> col:11 implicit Function 0x8fd9a8 'remquof' 'float (float, float, int *) throw()'
|   |-UsingDecl 0xa60fe0 <line:1185:3, col:11> col:11 ::remquol
|   |-UsingShadowDecl 0xa61038 <col:11> col:11 implicit Function 0x9476f8 'remquol' 'long double (long double, long double, int *) throw()'
|   |-UsingDecl 0xa61090 <line:1187:3, col:11> col:11 ::rint
|   |-UsingShadowDecl 0xa610e8 <col:11> col:11 implicit Function 0x92db10 'rint' 'double (double) throw()'
|   |-UsingDecl 0xa61140 <line:1188:3, col:11> col:11 ::rintf
|   |-UsingShadowDecl 0xa61198 <col:11> col:11 implicit Function 0x916960 'rintf' 'float (float) throw()'
|   |-UsingDecl 0xa611f0 <line:1189:3, col:11> col:11 ::rintl
|   |-UsingShadowDecl 0xa61248 <col:11> col:11 implicit Function 0x944540 'rintl' 'long double (long double) throw()'
|   |-UsingDecl 0xa612a0 <line:1191:3, col:11> col:11 ::round
|   |-UsingShadowDecl 0xa612f8 <col:11> col:11 implicit Function 0x932498 'round' 'double (double) throw()'
|   |-UsingDecl 0xa61350 <line:1192:3, col:11> col:11 ::roundf
|   |-UsingShadowDecl 0xa613a8 <col:11> col:11 implicit Function 0x9192a8 'roundf' 'float (float) throw()'
|   |-UsingDecl 0xa61400 <line:1193:3, col:11> col:11 ::roundl
|   |-UsingShadowDecl 0xa61458 <col:11> col:11 implicit Function 0x946e30 'roundl' 'long double (long double) throw()'
|   |-UsingDecl 0xa614b0 <line:1195:3, col:11> col:11 ::scalbln
|   |-UsingShadowDecl 0xa61508 <col:11> col:11 implicit Function 0x931d68 'scalbln' 'double (double, long) throw()'
|   |-UsingDecl 0xa61560 <line:1196:3, col:11> col:11 ::scalblnf
|   |-UsingShadowDecl 0xa615b8 <col:11> col:11 implicit Function 0x918b78 'scalblnf' 'float (float, long) throw()'
|   |-UsingDecl 0xa61610 <line:1197:3, col:11> col:11 ::scalblnl
|   |-UsingShadowDecl 0xa61668 <col:11> col:11 implicit Function 0x9466c8 'scalblnl' 'long double (long double, long) throw()'
|   |-UsingDecl 0xa616c0 <line:1199:3, col:11> col:11 ::scalbn
|   |-UsingShadowDecl 0xa61718 <col:11> col:11 implicit Function 0x931210 'scalbn' 'double (double, int) throw()'
|   |-UsingDecl 0xa61770 <line:1200:3, col:11> col:11 ::scalbnf
|   |-UsingShadowDecl 0xa617c8 <col:11> col:11 implicit Function 0x918060 'scalbnf' 'float (float, int) throw()'
|   |-UsingDecl 0xa61820 <line:1201:3, col:11> col:11 ::scalbnl
|   |-UsingShadowDecl 0xa61878 <col:11> col:11 implicit Function 0x945b50 'scalbnl' 'long double (long double, int) throw()'
|   |-UsingDecl 0xa618d0 <line:1203:3, col:11> col:11 ::tgamma
|   |-UsingShadowDecl 0xa61928 <col:11> col:11 implicit Function 0x92d0e8 'tgamma' 'double (double) throw()'
|   |-UsingDecl 0xa61980 <line:1204:3, col:11> col:11 ::tgammaf
|   |-UsingShadowDecl 0xa619d8 <col:11> col:11 implicit Function 0x915f48 'tgammaf' 'float (float) throw()'
|   |-UsingDecl 0xa61a30 <line:1205:3, col:11> col:11 ::tgammal
|   |-UsingShadowDecl 0xa61a88 <col:11> col:11 implicit Function 0x943b38 'tgammal' 'long double (long double) throw()'
|   |-UsingDecl 0xa61ae0 <line:1207:3, col:11> col:11 ::trunc
|   |-UsingShadowDecl 0xa61b38 <col:11> col:11 implicit Function 0x932860 'trunc' 'double (double) throw()'
|   |-UsingDecl 0xa61b90 <line:1208:3, col:11> col:11 ::truncf
|   |-UsingShadowDecl 0xa61be8 <col:11> col:11 implicit Function 0x8fd478 'truncf' 'float (float) throw()'
|   |-UsingDecl 0xa61c40 <line:1209:3, col:11> col:11 ::truncl
|   |-UsingShadowDecl 0xa61c98 <col:11> col:11 implicit Function 0x9471c8 'truncl' 'long double (long double) throw()'
|   |-FunctionDecl 0xa61d98 <line:1213:3, line:1215:35> line:1214:3 constexpr acosh 'float (float)'
|   | |-ParmVarDecl 0xa61d00 <col:9, col:15> col:15 used __x 'float'
|   | `-CompoundStmt 0xa620a0 <line:1215:3, col:35>
|   |   `-ReturnStmt 0xa62090 <col:5, col:32>
|   |     `-CallExpr 0xa62050 <col:12, col:32> 'float'
|   |       |-ImplicitCastExpr 0xa62038 <col:12> 'float (*)(float) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa61ff8 <col:12> '<builtin fn type>' Function 0xa61e90 '__builtin_acoshf' 'float (float) noexcept'
|   |       `-ImplicitCastExpr 0xa62078 <col:29> 'float' <LValueToRValue>
|   |         `-DeclRefExpr 0xa62018 <col:29> 'float' lvalue ParmVar 0xa61d00 '__x' 'float'
|   |-FunctionDecl 0xa62168 <line:1217:3, line:1219:35> line:1218:3 constexpr acosh 'long double (long double)'
|   | |-ParmVarDecl 0xa620d0 <col:9, col:21> col:21 used __x 'long double'
|   | `-CompoundStmt 0xa635a0 <line:1219:3, col:35>
|   |   `-ReturnStmt 0xa63590 <col:5, col:32>
|   |     `-CallExpr 0xa63550 <col:12, col:32> 'long double'
|   |       |-ImplicitCastExpr 0xa63538 <col:12> 'long double (*)(long double) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa634f8 <col:12> '<builtin fn type>' Function 0xa63390 '__builtin_acoshl' 'long double (long double) noexcept'
|   |       `-ImplicitCastExpr 0xa63578 <col:29> 'long double' <LValueToRValue>
|   |         `-DeclRefExpr 0xa63518 <col:29> 'long double' lvalue ParmVar 0xa620d0 '__x' 'long double'
|   |-FunctionTemplateDecl 0xa63a48 <line:1223:3, line:1227:36> line:1226:5 acosh
|   | |-TemplateTypeParmDecl 0xa635b8 <line:1223:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | `-FunctionDecl 0xa639a8 <line:1224:5, line:1227:36> line:1226:5 constexpr acosh 'typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, double>::__type (_Tp)'
|   |   |-ParmVarDecl 0xa638d0 <col:11, col:15> col:15 referenced __x '_Tp'
|   |   `-CompoundStmt 0xa63cd8 <line:1227:5, col:36>
|   |     `-ReturnStmt 0xa63cc8 <col:7, col:33>
|   |       `-CallExpr 0xa63ca0 <col:14, col:33> '<dependent type>'
|   |         |-DeclRefExpr 0xa63c60 <col:14> '<builtin fn type>' Function 0xa63af8 '__builtin_acosh' 'double (double) noexcept'
|   |         `-DeclRefExpr 0xa63c80 <col:30> '_Tp' lvalue ParmVar 0xa638d0 '__x' '_Tp'
|   |-FunctionDecl 0xa63da0 <line:1231:3, line:1233:35> line:1232:3 constexpr asinh 'float (float)'
|   | |-ParmVarDecl 0xa63d08 <col:9, col:15> col:15 used __x 'float'
|   | `-CompoundStmt 0xa640a8 <line:1233:3, col:35>
|   |   `-ReturnStmt 0xa64098 <col:5, col:32>
|   |     `-CallExpr 0xa64058 <col:12, col:32> 'float'
|   |       |-ImplicitCastExpr 0xa64040 <col:12> 'float (*)(float) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa64000 <col:12> '<builtin fn type>' Function 0xa63e98 '__builtin_asinhf' 'float (float) noexcept'
|   |       `-ImplicitCastExpr 0xa64080 <col:29> 'float' <LValueToRValue>
|   |         `-DeclRefExpr 0xa64020 <col:29> 'float' lvalue ParmVar 0xa63d08 '__x' 'float'
|   |-FunctionDecl 0xa64170 <line:1235:3, line:1237:35> line:1236:3 constexpr asinh 'long double (long double)'
|   | |-ParmVarDecl 0xa640d8 <col:9, col:21> col:21 used __x 'long double'
|   | `-CompoundStmt 0xa64478 <line:1237:3, col:35>
|   |   `-ReturnStmt 0xa64468 <col:5, col:32>
|   |     `-CallExpr 0xa64428 <col:12, col:32> 'long double'
|   |       |-ImplicitCastExpr 0xa64410 <col:12> 'long double (*)(long double) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa643d0 <col:12> '<builtin fn type>' Function 0xa64268 '__builtin_asinhl' 'long double (long double) noexcept'
|   |       `-ImplicitCastExpr 0xa64450 <col:29> 'long double' <LValueToRValue>
|   |         `-DeclRefExpr 0xa643f0 <col:29> 'long double' lvalue ParmVar 0xa640d8 '__x' 'long double'
|   |-FunctionTemplateDecl 0xa64918 <line:1241:3, line:1245:36> line:1244:5 asinh
|   | |-TemplateTypeParmDecl 0xa64490 <line:1241:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | `-FunctionDecl 0xa64878 <line:1242:5, line:1245:36> line:1244:5 constexpr asinh 'typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, double>::__type (_Tp)'
|   |   |-ParmVarDecl 0xa647a0 <col:11, col:15> col:15 referenced __x '_Tp'
|   |   `-CompoundStmt 0xa64ba8 <line:1245:5, col:36>
|   |     `-ReturnStmt 0xa64b98 <col:7, col:33>
|   |       `-CallExpr 0xa64b70 <col:14, col:33> '<dependent type>'
|   |         |-DeclRefExpr 0xa64b30 <col:14> '<builtin fn type>' Function 0xa649c8 '__builtin_asinh' 'double (double) noexcept'
|   |         `-DeclRefExpr 0xa64b50 <col:30> '_Tp' lvalue ParmVar 0xa647a0 '__x' '_Tp'
|   |-FunctionDecl 0xa64c70 <line:1249:3, line:1251:35> line:1250:3 constexpr atanh 'float (float)'
|   | |-ParmVarDecl 0xa64bd8 <col:9, col:15> col:15 used __x 'float'
|   | `-CompoundStmt 0xa64f78 <line:1251:3, col:35>
|   |   `-ReturnStmt 0xa64f68 <col:5, col:32>
|   |     `-CallExpr 0xa64f28 <col:12, col:32> 'float'
|   |       |-ImplicitCastExpr 0xa64f10 <col:12> 'float (*)(float) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa64ed0 <col:12> '<builtin fn type>' Function 0xa64d68 '__builtin_atanhf' 'float (float) noexcept'
|   |       `-ImplicitCastExpr 0xa64f50 <col:29> 'float' <LValueToRValue>
|   |         `-DeclRefExpr 0xa64ef0 <col:29> 'float' lvalue ParmVar 0xa64bd8 '__x' 'float'
|   |-FunctionDecl 0xa65040 <line:1253:3, line:1255:35> line:1254:3 constexpr atanh 'long double (long double)'
|   | |-ParmVarDecl 0xa64fa8 <col:9, col:21> col:21 used __x 'long double'
|   | `-CompoundStmt 0xa654a0 <line:1255:3, col:35>
|   |   `-ReturnStmt 0xa65490 <col:5, col:32>
|   |     `-CallExpr 0xa652f8 <col:12, col:32> 'long double'
|   |       |-ImplicitCastExpr 0xa652e0 <col:12> 'long double (*)(long double) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa652a0 <col:12> '<builtin fn type>' Function 0xa65138 '__builtin_atanhl' 'long double (long double) noexcept'
|   |       `-ImplicitCastExpr 0xa65320 <col:29> 'long double' <LValueToRValue>
|   |         `-DeclRefExpr 0xa652c0 <col:29> 'long double' lvalue ParmVar 0xa64fa8 '__x' 'long double'
|   |-FunctionTemplateDecl 0xa65948 <line:1259:3, line:1263:36> line:1262:5 atanh
|   | |-TemplateTypeParmDecl 0xa654b8 <line:1259:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | `-FunctionDecl 0xa658a8 <line:1260:5, line:1263:36> line:1262:5 constexpr atanh 'typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, double>::__type (_Tp)'
|   |   |-ParmVarDecl 0xa657d0 <col:11, col:15> col:15 referenced __x '_Tp'
|   |   `-CompoundStmt 0xa65bd8 <line:1263:5, col:36>
|   |     `-ReturnStmt 0xa65bc8 <col:7, col:33>
|   |       `-CallExpr 0xa65ba0 <col:14, col:33> '<dependent type>'
|   |         |-DeclRefExpr 0xa65b60 <col:14> '<builtin fn type>' Function 0xa659f8 '__builtin_atanh' 'double (double) noexcept'
|   |         `-DeclRefExpr 0xa65b80 <col:30> '_Tp' lvalue ParmVar 0xa657d0 '__x' '_Tp'
|   |-FunctionDecl 0xa65ca0 <line:1267:3, line:1269:34> line:1268:3 constexpr cbrt 'float (float)'
|   | |-ParmVarDecl 0xa65c08 <col:8, col:14> col:14 used __x 'float'
|   | `-CompoundStmt 0xa65fd0 <line:1269:3, col:34>
|   |   `-ReturnStmt 0xa65fc0 <col:5, col:31>
|   |     `-CallExpr 0xa65f80 <col:12, col:31> 'float'
|   |       |-ImplicitCastExpr 0xa65f68 <col:12> 'float (*)(float) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa65f28 <col:12> '<builtin fn type>' Function 0xa65d98 '__builtin_cbrtf' 'float (float) noexcept'
|   |       `-ImplicitCastExpr 0xa65fa8 <col:28> 'float' <LValueToRValue>
|   |         `-DeclRefExpr 0xa65f48 <col:28> 'float' lvalue ParmVar 0xa65c08 '__x' 'float'
|   |-FunctionDecl 0xa66098 <line:1271:3, line:1273:34> line:1272:3 constexpr cbrt 'long double (long double)'
|   | |-ParmVarDecl 0xa66000 <col:8, col:20> col:20 used __x 'long double'
|   | `-CompoundStmt 0xa663c8 <line:1273:3, col:34>
|   |   `-ReturnStmt 0xa663b8 <col:5, col:31>
|   |     `-CallExpr 0xa66378 <col:12, col:31> 'long double'
|   |       |-ImplicitCastExpr 0xa66360 <col:12> 'long double (*)(long double) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa66320 <col:12> '<builtin fn type>' Function 0xa66190 '__builtin_cbrtl' 'long double (long double) noexcept'
|   |       `-ImplicitCastExpr 0xa663a0 <col:28> 'long double' <LValueToRValue>
|   |         `-DeclRefExpr 0xa66340 <col:28> 'long double' lvalue ParmVar 0xa66000 '__x' 'long double'
|   |-FunctionTemplateDecl 0xa66868 <line:1277:3, line:1281:35> line:1280:5 cbrt
|   | |-TemplateTypeParmDecl 0xa663e0 <line:1277:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | `-FunctionDecl 0xa667c8 <line:1278:5, line:1281:35> line:1280:5 constexpr cbrt 'typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, double>::__type (_Tp)'
|   |   |-ParmVarDecl 0xa666f0 <col:10, col:14> col:14 referenced __x '_Tp'
|   |   `-CompoundStmt 0xa66b20 <line:1281:5, col:35>
|   |     `-ReturnStmt 0xa66b10 <col:7, col:32>
|   |       `-CallExpr 0xa66ae8 <col:14, col:32> '<dependent type>'
|   |         |-DeclRefExpr 0xa66aa8 <col:14> '<builtin fn type>' Function 0xa66918 '__builtin_cbrt' 'double (double) noexcept'
|   |         `-DeclRefExpr 0xa66ac8 <col:29> '_Tp' lvalue ParmVar 0xa666f0 '__x' '_Tp'
|   |-FunctionDecl 0xa66c70 <line:1285:3, line:1287:43> line:1286:3 constexpr copysign 'float (float, float)'
|   | |-ParmVarDecl 0xa66b50 <col:12, col:18> col:18 used __x 'float'
|   | |-ParmVarDecl 0xa66bd0 <col:23, col:29> col:29 used __y 'float'
|   | `-CompoundStmt 0xa67058 <line:1287:3, col:43>
|   |   `-ReturnStmt 0xa67048 <col:5, col:40>
|   |     `-CallExpr 0xa66fe8 <col:12, col:40> 'float'
|   |       |-ImplicitCastExpr 0xa66fd0 <col:12> 'float (*)(float, float) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa66f70 <col:12> '<builtin fn type>' Function 0xa66d70 '__builtin_copysignf' 'float (float, float) noexcept'
|   |       |-ImplicitCastExpr 0xa67018 <col:32> 'float' <LValueToRValue>
|   |       | `-DeclRefExpr 0xa66f90 <col:32> 'float' lvalue ParmVar 0xa66b50 '__x' 'float'
|   |       `-ImplicitCastExpr 0xa67030 <col:37> 'float' <LValueToRValue>
|   |         `-DeclRefExpr 0xa66fb0 <col:37> 'float' lvalue ParmVar 0xa66bd0 '__y' 'float'
|   |-FunctionDecl 0xa671a8 <line:1289:3, line:1291:43> line:1290:3 constexpr copysign 'long double (long double, long double)'
|   | |-ParmVarDecl 0xa67088 <col:12, col:24> col:24 used __x 'long double'
|   | |-ParmVarDecl 0xa67108 <col:29, col:41> col:41 used __y 'long double'
|   | `-CompoundStmt 0xa69720 <line:1291:3, col:43>
|   |   `-ReturnStmt 0xa69710 <col:5, col:40>
|   |     `-CallExpr 0xa696b0 <col:12, col:40> 'long double'
|   |       |-ImplicitCastExpr 0xa69698 <col:12> 'long double (*)(long double, long double) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa69638 <col:12> '<builtin fn type>' Function 0xa672a8 '__builtin_copysignl' 'long double (long double, long double) noexcept'
|   |       |-ImplicitCastExpr 0xa696e0 <col:32> 'long double' <LValueToRValue>
|   |       | `-DeclRefExpr 0xa69658 <col:32> 'long double' lvalue ParmVar 0xa67088 '__x' 'long double'
|   |       `-ImplicitCastExpr 0xa696f8 <col:37> 'long double' <LValueToRValue>
|   |         `-DeclRefExpr 0xa69678 <col:37> 'long double' lvalue ParmVar 0xa67108 '__y' 'long double'
|   |-FunctionTemplateDecl 0xa69fa8 <line:1295:3, line:1301:5> line:1297:5 copysign
|   | |-TemplateTypeParmDecl 0xa69738 <line:1295:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl 0xa697b8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
|   | `-FunctionDecl 0xa69f08 <line:1296:5, line:1301:5> line:1297:5 constexpr copysign 'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type (_Tp, _Up)'
|   |   |-ParmVarDecl 0xa69db0 <col:14, col:18> col:18 referenced __x '_Tp'
|   |   |-ParmVarDecl 0xa69e28 <col:23, col:27> col:27 referenced __y '_Up'
|   |   `-CompoundStmt 0xa6a750 <line:1298:5, line:1301:5>
|   |     |-DeclStmt 0xa6a5c8 <line:1299:7, col:71>
|   |     | `-TypedefDecl 0xa6a570 <col:7, col:65> col:65 referenced __type 'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'
|   |     |   `-DependentNameType 0xa6a500 'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type' dependent
|   |     `-ReturnStmt 0xa6a740 <line:1300:7, col:47>
|   |       `-CallExpr 0xa6a710 <col:14, col:47> '<dependent type>'
|   |         |-UnresolvedLookupExpr 0xa6a5e0 <col:14> '<overloaded function type>' lvalue (ADL) = 'copysign' 0xa69fa8 0xa671a8 0xa66c70 0xa5ba20
|   |         |-CXXUnresolvedConstructExpr 0xa6a690 <col:23, col:33> '__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type' '__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'
|   |         | `-DeclRefExpr 0xa6a670 <col:30> '_Tp' lvalue ParmVar 0xa69db0 '__x' '_Tp'
|   |         `-CXXUnresolvedConstructExpr 0xa6a6e8 <col:36, col:46> '__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type' '__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'
|   |           `-DeclRefExpr 0xa6a6c8 <col:43> '_Up' lvalue ParmVar 0xa69e28 '__y' '_Up'
|   |-FunctionDecl 0xa6a820 <line:1305:3, line:1307:33> line:1306:3 constexpr erf 'float (float)'
|   | |-ParmVarDecl 0xa6a788 <col:7, col:13> col:13 used __x 'float'
|   | `-CompoundStmt 0xa6ab28 <line:1307:3, col:33>
|   |   `-ReturnStmt 0xa6ab18 <col:5, col:30>
|   |     `-CallExpr 0xa6aad8 <col:12, col:30> 'float'
|   |       |-ImplicitCastExpr 0xa6aac0 <col:12> 'float (*)(float) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa6aa80 <col:12> '<builtin fn type>' Function 0xa6a918 '__builtin_erff' 'float (float) noexcept'
|   |       `-ImplicitCastExpr 0xa6ab00 <col:27> 'float' <LValueToRValue>
|   |         `-DeclRefExpr 0xa6aaa0 <col:27> 'float' lvalue ParmVar 0xa6a788 '__x' 'float'
|   |-FunctionDecl 0xa6abf0 <line:1309:3, line:1311:33> line:1310:3 constexpr erf 'long double (long double)'
|   | |-ParmVarDecl 0xa6ab58 <col:7, col:19> col:19 used __x 'long double'
|   | `-CompoundStmt 0xa6aef8 <line:1311:3, col:33>
|   |   `-ReturnStmt 0xa6aee8 <col:5, col:30>
|   |     `-CallExpr 0xa6aea8 <col:12, col:30> 'long double'
|   |       |-ImplicitCastExpr 0xa6ae90 <col:12> 'long double (*)(long double) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa6ae50 <col:12> '<builtin fn type>' Function 0xa6ace8 '__builtin_erfl' 'long double (long double) noexcept'
|   |       `-ImplicitCastExpr 0xa6aed0 <col:27> 'long double' <LValueToRValue>
|   |         `-DeclRefExpr 0xa6ae70 <col:27> 'long double' lvalue ParmVar 0xa6ab58 '__x' 'long double'
|   |-FunctionTemplateDecl 0xa6b398 <line:1315:3, line:1319:34> line:1318:5 erf
|   | |-TemplateTypeParmDecl 0xa6af10 <line:1315:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | `-FunctionDecl 0xa6b2f8 <line:1316:5, line:1319:34> line:1318:5 constexpr erf 'typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, double>::__type (_Tp)'
|   |   |-ParmVarDecl 0xa6b220 <col:9, col:13> col:13 referenced __x '_Tp'
|   |   `-CompoundStmt 0xa6b658 <line:1319:5, col:34>
|   |     `-ReturnStmt 0xa6b648 <col:7, col:31>
|   |       `-CallExpr 0xa6b620 <col:14, col:31> '<dependent type>'
|   |         |-DeclRefExpr 0xa6b5b0 <col:14> '<builtin fn type>' Function 0xa6b448 '__builtin_erf' 'double (double) noexcept'
|   |         `-DeclRefExpr 0xa6b5d0 <col:28> '_Tp' lvalue ParmVar 0xa6b220 '__x' '_Tp'
|   |-FunctionDecl 0xa6b720 <line:1323:3, line:1325:34> line:1324:3 constexpr erfc 'float (float)'
|   | |-ParmVarDecl 0xa6b688 <col:8, col:14> col:14 used __x 'float'
|   | `-CompoundStmt 0xa6ba28 <line:1325:3, col:34>
|   |   `-ReturnStmt 0xa6ba18 <col:5, col:31>
|   |     `-CallExpr 0xa6b9d8 <col:12, col:31> 'float'
|   |       |-ImplicitCastExpr 0xa6b9c0 <col:12> 'float (*)(float) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa6b980 <col:12> '<builtin fn type>' Function 0xa6b818 '__builtin_erfcf' 'float (float) noexcept'
|   |       `-ImplicitCastExpr 0xa6ba00 <col:28> 'float' <LValueToRValue>
|   |         `-DeclRefExpr 0xa6b9a0 <col:28> 'float' lvalue ParmVar 0xa6b688 '__x' 'float'
|   |-FunctionDecl 0xa6baf0 <line:1327:3, line:1329:34> line:1328:3 constexpr erfc 'long double (long double)'
|   | |-ParmVarDecl 0xa6ba58 <col:8, col:20> col:20 used __x 'long double'
|   | `-CompoundStmt 0xa6bdf8 <line:1329:3, col:34>
|   |   `-ReturnStmt 0xa6bde8 <col:5, col:31>
|   |     `-CallExpr 0xa6bda8 <col:12, col:31> 'long double'
|   |       |-ImplicitCastExpr 0xa6bd90 <col:12> 'long double (*)(long double) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa6bd50 <col:12> '<builtin fn type>' Function 0xa6bbe8 '__builtin_erfcl' 'long double (long double) noexcept'
|   |       `-ImplicitCastExpr 0xa6bdd0 <col:28> 'long double' <LValueToRValue>
|   |         `-DeclRefExpr 0xa6bd70 <col:28> 'long double' lvalue ParmVar 0xa6ba58 '__x' 'long double'
|   |-FunctionTemplateDecl 0xa6c298 <line:1333:3, line:1337:35> line:1336:5 erfc
|   | |-TemplateTypeParmDecl 0xa6be10 <line:1333:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | `-FunctionDecl 0xa6c1f8 <line:1334:5, line:1337:35> line:1336:5 constexpr erfc 'typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, double>::__type (_Tp)'
|   |   |-ParmVarDecl 0xa6c120 <col:10, col:14> col:14 referenced __x '_Tp'
|   |   `-CompoundStmt 0xa6c528 <line:1337:5, col:35>
|   |     `-ReturnStmt 0xa6c518 <col:7, col:32>
|   |       `-CallExpr 0xa6c4f0 <col:14, col:32> '<dependent type>'
|   |         |-DeclRefExpr 0xa6c4b0 <col:14> '<builtin fn type>' Function 0xa6c348 '__builtin_erfc' 'double (double) noexcept'
|   |         `-DeclRefExpr 0xa6c4d0 <col:29> '_Tp' lvalue ParmVar 0xa6c120 '__x' '_Tp'
|   |-FunctionDecl 0xa6c5f0 <line:1341:3, line:1343:34> line:1342:3 constexpr exp2 'float (float)'
|   | |-ParmVarDecl 0xa6c558 <col:8, col:14> col:14 used __x 'float'
|   | `-CompoundStmt 0xa6c8f8 <line:1343:3, col:34>
|   |   `-ReturnStmt 0xa6c8e8 <col:5, col:31>
|   |     `-CallExpr 0xa6c8a8 <col:12, col:31> 'float'
|   |       |-ImplicitCastExpr 0xa6c890 <col:12> 'float (*)(float) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa6c850 <col:12> '<builtin fn type>' Function 0xa6c6e8 '__builtin_exp2f' 'float (float) noexcept'
|   |       `-ImplicitCastExpr 0xa6c8d0 <col:28> 'float' <LValueToRValue>
|   |         `-DeclRefExpr 0xa6c870 <col:28> 'float' lvalue ParmVar 0xa6c558 '__x' 'float'
|   |-FunctionDecl 0xa6c9c0 <line:1345:3, line:1347:34> line:1346:3 constexpr exp2 'long double (long double)'
|   | |-ParmVarDecl 0xa6c928 <col:8, col:20> col:20 used __x 'long double'
|   | `-CompoundStmt 0xa6ccc8 <line:1347:3, col:34>
|   |   `-ReturnStmt 0xa6ccb8 <col:5, col:31>
|   |     `-CallExpr 0xa6cc78 <col:12, col:31> 'long double'
|   |       |-ImplicitCastExpr 0xa6cc60 <col:12> 'long double (*)(long double) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa6cc20 <col:12> '<builtin fn type>' Function 0xa6cab8 '__builtin_exp2l' 'long double (long double) noexcept'
|   |       `-ImplicitCastExpr 0xa6cca0 <col:28> 'long double' <LValueToRValue>
|   |         `-DeclRefExpr 0xa6cc40 <col:28> 'long double' lvalue ParmVar 0xa6c928 '__x' 'long double'
|   |-FunctionTemplateDecl 0xa6d168 <line:1351:3, line:1355:35> line:1354:5 exp2
|   | |-TemplateTypeParmDecl 0xa6cce0 <line:1351:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | `-FunctionDecl 0xa6d0c8 <line:1352:5, line:1355:35> line:1354:5 constexpr exp2 'typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, double>::__type (_Tp)'
|   |   |-ParmVarDecl 0xa6cff0 <col:10, col:14> col:14 referenced __x '_Tp'
|   |   `-CompoundStmt 0xa6d3f8 <line:1355:5, col:35>
|   |     `-ReturnStmt 0xa6d3e8 <col:7, col:32>
|   |       `-CallExpr 0xa6d3c0 <col:14, col:32> '<dependent type>'
|   |         |-DeclRefExpr 0xa6d380 <col:14> '<builtin fn type>' Function 0xa6d218 '__builtin_exp2' 'double (double) noexcept'
|   |         `-DeclRefExpr 0xa6d3a0 <col:29> '_Tp' lvalue ParmVar 0xa6cff0 '__x' '_Tp'
|   |-FunctionDecl 0xa6d4c0 <line:1359:3, line:1361:35> line:1360:3 constexpr expm1 'float (float)'
|   | |-ParmVarDecl 0xa6d428 <col:9, col:15> col:15 used __x 'float'
|   | `-CompoundStmt 0xa6d840 <line:1361:3, col:35>
|   |   `-ReturnStmt 0xa6d830 <col:5, col:32>
|   |     `-CallExpr 0xa6d7f0 <col:12, col:32> 'float'
|   |       |-ImplicitCastExpr 0xa6d7d8 <col:12> 'float (*)(float) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa6d798 <col:12> '<builtin fn type>' Function 0xa6d630 '__builtin_expm1f' 'float (float) noexcept'
|   |       `-ImplicitCastExpr 0xa6d818 <col:29> 'float' <LValueToRValue>
|   |         `-DeclRefExpr 0xa6d7b8 <col:29> 'float' lvalue ParmVar 0xa6d428 '__x' 'float'
|   |-FunctionDecl 0xa6d908 <line:1363:3, line:1365:35> line:1364:3 constexpr expm1 'long double (long double)'
|   | |-ParmVarDecl 0xa6d870 <col:9, col:21> col:21 used __x 'long double'
|   | `-CompoundStmt 0xa6dc10 <line:1365:3, col:35>
|   |   `-ReturnStmt 0xa6dc00 <col:5, col:32>
|   |     `-CallExpr 0xa6dbc0 <col:12, col:32> 'long double'
|   |       |-ImplicitCastExpr 0xa6dba8 <col:12> 'long double (*)(long double) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa6db68 <col:12> '<builtin fn type>' Function 0xa6da00 '__builtin_expm1l' 'long double (long double) noexcept'
|   |       `-ImplicitCastExpr 0xa6dbe8 <col:29> 'long double' <LValueToRValue>
|   |         `-DeclRefExpr 0xa6db88 <col:29> 'long double' lvalue ParmVar 0xa6d870 '__x' 'long double'
|   |-FunctionTemplateDecl 0xa6e0b8 <line:1369:3, line:1373:36> line:1372:5 expm1
|   | |-TemplateTypeParmDecl 0xa6dc28 <line:1369:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | `-FunctionDecl 0xa6e018 <line:1370:5, line:1373:36> line:1372:5 constexpr expm1 'typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, double>::__type (_Tp)'
|   |   |-ParmVarDecl 0xa6df40 <col:11, col:15> col:15 referenced __x '_Tp'
|   |   `-CompoundStmt 0xa6e348 <line:1373:5, col:36>
|   |     `-ReturnStmt 0xa6e338 <col:7, col:33>
|   |       `-CallExpr 0xa6e310 <col:14, col:33> '<dependent type>'
|   |         |-DeclRefExpr 0xa6e2d0 <col:14> '<builtin fn type>' Function 0xa6e168 '__builtin_expm1' 'double (double) noexcept'
|   |         `-DeclRefExpr 0xa6e2f0 <col:30> '_Tp' lvalue ParmVar 0xa6df40 '__x' '_Tp'
|   |-FunctionDecl 0xa6e498 <line:1377:3, line:1379:39> line:1378:3 constexpr fdim 'float (float, float)'
|   | |-ParmVarDecl 0xa6e378 <col:8, col:14> col:14 used __x 'float'
|   | |-ParmVarDecl 0xa6e3f8 <col:19, col:25> col:25 used __y 'float'
|   | `-CompoundStmt 0xa6e858 <line:1379:3, col:39>
|   |   `-ReturnStmt 0xa6e848 <col:5, col:36>
|   |     `-CallExpr 0xa6e7e8 <col:12, col:36> 'float'
|   |       |-ImplicitCastExpr 0xa6e7d0 <col:12> 'float (*)(float, float) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa6e770 <col:12> '<builtin fn type>' Function 0xa6e598 '__builtin_fdimf' 'float (float, float) noexcept'
|   |       |-ImplicitCastExpr 0xa6e818 <col:28> 'float' <LValueToRValue>
|   |       | `-DeclRefExpr 0xa6e790 <col:28> 'float' lvalue ParmVar 0xa6e378 '__x' 'float'
|   |       `-ImplicitCastExpr 0xa6e830 <col:33> 'float' <LValueToRValue>
|   |         `-DeclRefExpr 0xa6e7b0 <col:33> 'float' lvalue ParmVar 0xa6e3f8 '__y' 'float'
|   |-FunctionDecl 0xa6e9a8 <line:1381:3, line:1383:39> line:1382:3 constexpr fdim 'long double (long double, long double)'
|   | |-ParmVarDecl 0xa6e888 <col:8, col:20> col:20 used __x 'long double'
|   | |-ParmVarDecl 0xa6e908 <col:25, col:37> col:37 used __y 'long double'
|   | `-CompoundStmt 0xa6ed68 <line:1383:3, col:39>
|   |   `-ReturnStmt 0xa6ed58 <col:5, col:36>
|   |     `-CallExpr 0xa6ecf8 <col:12, col:36> 'long double'
|   |       |-ImplicitCastExpr 0xa6ece0 <col:12> 'long double (*)(long double, long double) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa6ec80 <col:12> '<builtin fn type>' Function 0xa6eaa8 '__builtin_fdiml' 'long double (long double, long double) noexcept'
|   |       |-ImplicitCastExpr 0xa6ed28 <col:28> 'long double' <LValueToRValue>
|   |       | `-DeclRefExpr 0xa6eca0 <col:28> 'long double' lvalue ParmVar 0xa6e888 '__x' 'long double'
|   |       `-ImplicitCastExpr 0xa6ed40 <col:33> 'long double' <LValueToRValue>
|   |         `-DeclRefExpr 0xa6ecc0 <col:33> 'long double' lvalue ParmVar 0xa6e908 '__y' 'long double'
|   |-FunctionTemplateDecl 0xa6f640 <line:1387:3, line:1393:5> line:1389:5 fdim
|   | |-TemplateTypeParmDecl 0xa6ed80 <line:1387:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl 0xa6edf8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
|   | `-FunctionDecl 0xa6f548 <line:1388:5, line:1393:5> line:1389:5 constexpr fdim 'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type (_Tp, _Up)'
|   |   |-ParmVarDecl 0xa6f3f0 <col:10, col:14> col:14 referenced __x '_Tp'
|   |   |-ParmVarDecl 0xa6f468 <col:19, col:23> col:23 referenced __y '_Up'
|   |   `-CompoundStmt 0xa6fdf0 <line:1390:5, line:1393:5>
|   |     |-DeclStmt 0xa6fc68 <line:1391:7, col:71>
|   |     | `-TypedefDecl 0xa6fc10 <col:7, col:65> col:65 referenced __type 'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'
|   |     |   `-DependentNameType 0xa6fba0 'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type' dependent
|   |     `-ReturnStmt 0xa6fde0 <line:1392:7, col:43>
|   |       `-CallExpr 0xa6fdb0 <col:14, col:43> '<dependent type>'
|   |         |-UnresolvedLookupExpr 0xa6fc80 <col:14> '<overloaded function type>' lvalue (ADL) = 'fdim' 0xa6f640 0xa6e9a8 0xa6e498 0xa5d4a0
|   |         |-CXXUnresolvedConstructExpr 0xa6fd30 <col:19, col:29> '__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type' '__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'
|   |         | `-DeclRefExpr 0xa6fd10 <col:26> '_Tp' lvalue ParmVar 0xa6f3f0 '__x' '_Tp'
|   |         `-CXXUnresolvedConstructExpr 0xa6fd88 <col:32, col:42> '__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type' '__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'
|   |           `-DeclRefExpr 0xa6fd68 <col:39> '_Up' lvalue ParmVar 0xa6f468 '__y' '_Up'
|   |-FunctionDecl 0xa6ffd0 <line:1397:3, line:1399:43> line:1398:3 constexpr fma 'float (float, float, float)'
|   | |-ParmVarDecl 0xa6fe28 <col:7, col:13> col:13 used __x 'float'
|   | |-ParmVarDecl 0xa6fea8 <col:18, col:24> col:24 used __y 'float'
|   | |-ParmVarDecl 0xa6ff28 <col:29, col:35> col:35 used __z 'float'
|   | `-CompoundStmt 0xa704d0 <line:1399:3, col:43>
|   |   `-ReturnStmt 0xa704c0 <col:5, col:40>
|   |     `-CallExpr 0xa70440 <col:12, col:40> 'float'
|   |       |-ImplicitCastExpr 0xa70428 <col:12> 'float (*)(float, float, float) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa70348 <col:12> '<builtin fn type>' Function 0xa700d8 '__builtin_fmaf' 'float (float, float, float) noexcept'
|   |       |-ImplicitCastExpr 0xa70478 <col:27> 'float' <LValueToRValue>
|   |       | `-DeclRefExpr 0xa70368 <col:27> 'float' lvalue ParmVar 0xa6fe28 '__x' 'float'
|   |       |-ImplicitCastExpr 0xa70490 <col:32> 'float' <LValueToRValue>
|   |       | `-DeclRefExpr 0xa70388 <col:32> 'float' lvalue ParmVar 0xa6fea8 '__y' 'float'
|   |       `-ImplicitCastExpr 0xa704a8 <col:37> 'float' <LValueToRValue>
|   |         `-DeclRefExpr 0xa703a8 <col:37> 'float' lvalue ParmVar 0xa6ff28 '__z' 'float'
|   |-FunctionDecl 0xa706a8 <line:1401:3, line:1403:43> line:1402:3 constexpr fma 'long double (long double, long double, long double)'
|   | |-ParmVarDecl 0xa70500 <col:7, col:19> col:19 used __x 'long double'
|   | |-ParmVarDecl 0xa70580 <col:24, col:36> col:36 used __y 'long double'
|   | |-ParmVarDecl 0xa70600 <col:41, col:53> col:53 used __z 'long double'
|   | `-CompoundStmt 0xa70ba0 <line:1403:3, col:43>
|   |   `-ReturnStmt 0xa70b90 <col:5, col:40>
|   |     `-CallExpr 0xa70b10 <col:12, col:40> 'long double'
|   |       |-ImplicitCastExpr 0xa70af8 <col:12> 'long double (*)(long double, long double, long double) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa70a20 <col:12> '<builtin fn type>' Function 0xa707b0 '__builtin_fmal' 'long double (long double, long double, long double) noexcept'
|   |       |-ImplicitCastExpr 0xa70b48 <col:27> 'long double' <LValueToRValue>
|   |       | `-DeclRefExpr 0xa70a40 <col:27> 'long double' lvalue ParmVar 0xa70500 '__x' 'long double'
|   |       |-ImplicitCastExpr 0xa70b60 <col:32> 'long double' <LValueToRValue>
|   |       | `-DeclRefExpr 0xa70a60 <col:32> 'long double' lvalue ParmVar 0xa70580 '__y' 'long double'
|   |       `-ImplicitCastExpr 0xa70b78 <col:37> 'long double' <LValueToRValue>
|   |         `-DeclRefExpr 0xa70a80 <col:37> 'long double' lvalue ParmVar 0xa70600 '__z' 'long double'
|   |-FunctionTemplateDecl 0xa71978 <line:1407:3, line:1413:5> line:1409:5 fma
|   | |-TemplateTypeParmDecl 0xa70bb8 <line:1407:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl 0xa70c38 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
|   | |-TemplateTypeParmDecl 0xa70cb8 <col:40, col:49> col:49 referenced typename depth 0 index 2 _Vp
|   | `-FunctionDecl 0xa718d8 <line:1408:5, line:1413:5> line:1409:5 constexpr fma 'typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type (_Tp, _Up, _Vp)'
|   |   |-ParmVarDecl 0xa716b0 <col:9, col:13> col:13 referenced __x '_Tp'
|   |   |-ParmVarDecl 0xa71728 <col:18, col:22> col:22 referenced __y '_Up'
|   |   |-ParmVarDecl 0xa717a0 <col:27, col:31> col:31 referenced __z '_Vp'
|   |   `-CompoundStmt 0xa723d0 <line:1410:5, line:1413:5>
|   |     |-DeclStmt 0xa721e8 <line:1411:7, col:76>
|   |     | `-TypedefDecl 0xa72190 <col:7, col:70> col:70 referenced __type 'typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type'
|   |     |   `-DependentNameType 0xa72120 'typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type' dependent
|   |     `-ReturnStmt 0xa723c0 <line:1412:7, col:55>
|   |       `-CallExpr 0xa72388 <col:14, col:55> '<dependent type>'
|   |         |-UnresolvedLookupExpr 0xa72200 <col:14> '<overloaded function type>' lvalue (ADL) = 'fma' 0xa71978 0xa706a8 0xa6ffd0 0xa5d6b0
|   |         |-CXXUnresolvedConstructExpr 0xa722b0 <col:18, col:28> '__type':'typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type' '__type':'typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type'
|   |         | `-DeclRefExpr 0xa72290 <col:25> '_Tp' lvalue ParmVar 0xa716b0 '__x' '_Tp'
|   |         |-CXXUnresolvedConstructExpr 0xa72308 <col:31, col:41> '__type':'typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type' '__type':'typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type'
|   |         | `-DeclRefExpr 0xa722e8 <col:38> '_Up' lvalue ParmVar 0xa71728 '__y' '_Up'
|   |         `-CXXUnresolvedConstructExpr 0xa72360 <col:44, col:54> '__type':'typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type' '__type':'typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type'
|   |           `-DeclRefExpr 0xa72340 <col:51> '_Vp' lvalue ParmVar 0xa717a0 '__z' '_Vp'
|   |-FunctionDecl 0xa72528 <line:1417:3, line:1419:39> line:1418:3 constexpr fmax 'float (float, float)'
|   | |-ParmVarDecl 0xa72408 <col:8, col:14> col:14 used __x 'float'
|   | |-ParmVarDecl 0xa72488 <col:19, col:25> col:25 used __y 'float'
|   | `-CompoundStmt 0xa72910 <line:1419:3, col:39>
|   |   `-ReturnStmt 0xa72900 <col:5, col:36>
|   |     `-CallExpr 0xa728a0 <col:12, col:36> 'float'
|   |       |-ImplicitCastExpr 0xa72888 <col:12> 'float (*)(float, float) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa72828 <col:12> '<builtin fn type>' Function 0xa72628 '__builtin_fmaxf' 'float (float, float) noexcept'
|   |       |-ImplicitCastExpr 0xa728d0 <col:28> 'float' <LValueToRValue>
|   |       | `-DeclRefExpr 0xa72848 <col:28> 'float' lvalue ParmVar 0xa72408 '__x' 'float'
|   |       `-ImplicitCastExpr 0xa728e8 <col:33> 'float' <LValueToRValue>
|   |         `-DeclRefExpr 0xa72868 <col:33> 'float' lvalue ParmVar 0xa72488 '__y' 'float'
|   |-FunctionDecl 0xa72a60 <line:1421:3, line:1423:39> line:1422:3 constexpr fmax 'long double (long double, long double)'
|   | |-ParmVarDecl 0xa72940 <col:8, col:20> col:20 used __x 'long double'
|   | |-ParmVarDecl 0xa729c0 <col:25, col:37> col:37 used __y 'long double'
|   | `-CompoundStmt 0xa72e48 <line:1423:3, col:39>
|   |   `-ReturnStmt 0xa72e38 <col:5, col:36>
|   |     `-CallExpr 0xa72dd8 <col:12, col:36> 'long double'
|   |       |-ImplicitCastExpr 0xa72dc0 <col:12> 'long double (*)(long double, long double) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa72d60 <col:12> '<builtin fn type>' Function 0xa72b60 '__builtin_fmaxl' 'long double (long double, long double) noexcept'
|   |       |-ImplicitCastExpr 0xa72e08 <col:28> 'long double' <LValueToRValue>
|   |       | `-DeclRefExpr 0xa72d80 <col:28> 'long double' lvalue ParmVar 0xa72940 '__x' 'long double'
|   |       `-ImplicitCastExpr 0xa72e20 <col:33> 'long double' <LValueToRValue>
|   |         `-DeclRefExpr 0xa72da0 <col:33> 'long double' lvalue ParmVar 0xa729c0 '__y' 'long double'
|   |-FunctionTemplateDecl 0xa73700 <line:1427:3, line:1433:5> line:1429:5 fmax
|   | |-TemplateTypeParmDecl 0xa72e60 <line:1427:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl 0xa72ed8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
|   | `-FunctionDecl 0xa73660 <line:1428:5, line:1433:5> line:1429:5 constexpr fmax 'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type (_Tp, _Up)'
|   |   |-ParmVarDecl 0xa734d0 <col:10, col:14> col:14 referenced __x '_Tp'
|   |   |-ParmVarDecl 0xa73548 <col:19, col:23> col:23 referenced __y '_Up'
|   |   `-CompoundStmt 0xa73eb0 <line:1430:5, line:1433:5>
|   |     |-DeclStmt 0xa73d28 <line:1431:7, col:71>
|   |     | `-TypedefDecl 0xa73cd0 <col:7, col:65> col:65 referenced __type 'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'
|   |     |   `-DependentNameType 0xa73c60 'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type' dependent
|   |     `-ReturnStmt 0xa73ea0 <line:1432:7, col:43>
|   |       `-CallExpr 0xa73e70 <col:14, col:43> '<dependent type>'
|   |         |-UnresolvedLookupExpr 0xa73d40 <col:14> '<overloaded function type>' lvalue (ADL) = 'fmax' 0xa73700 0xa72a60 0xa72528 0xa5d8c0
|   |         |-CXXUnresolvedConstructExpr 0xa73df0 <col:19, col:29> '__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type' '__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'
|   |         | `-DeclRefExpr 0xa73dd0 <col:26> '_Tp' lvalue ParmVar 0xa734d0 '__x' '_Tp'
|   |         `-CXXUnresolvedConstructExpr 0xa73e48 <col:32, col:42> '__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type' '__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'
|   |           `-DeclRefExpr 0xa73e28 <col:39> '_Up' lvalue ParmVar 0xa73548 '__y' '_Up'
|   |-FunctionDecl 0xa74008 <line:1437:3, line:1439:39> line:1438:3 constexpr fmin 'float (float, float)'
|   | |-ParmVarDecl 0xa73ee8 <col:8, col:14> col:14 used __x 'float'
|   | |-ParmVarDecl 0xa73f68 <col:19, col:25> col:25 used __y 'float'
|   | `-CompoundStmt 0xa743f0 <line:1439:3, col:39>
|   |   `-ReturnStmt 0xa743e0 <col:5, col:36>
|   |     `-CallExpr 0xa74380 <col:12, col:36> 'float'
|   |       |-ImplicitCastExpr 0xa74368 <col:12> 'float (*)(float, float) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa74308 <col:12> '<builtin fn type>' Function 0xa74108 '__builtin_fminf' 'float (float, float) noexcept'
|   |       |-ImplicitCastExpr 0xa743b0 <col:28> 'float' <LValueToRValue>
|   |       | `-DeclRefExpr 0xa74328 <col:28> 'float' lvalue ParmVar 0xa73ee8 '__x' 'float'
|   |       `-ImplicitCastExpr 0xa743c8 <col:33> 'float' <LValueToRValue>
|   |         `-DeclRefExpr 0xa74348 <col:33> 'float' lvalue ParmVar 0xa73f68 '__y' 'float'
|   |-FunctionDecl 0xa74540 <line:1441:3, line:1443:39> line:1442:3 constexpr fmin 'long double (long double, long double)'
|   | |-ParmVarDecl 0xa74420 <col:8, col:20> col:20 used __x 'long double'
|   | |-ParmVarDecl 0xa744a0 <col:25, col:37> col:37 used __y 'long double'
|   | `-CompoundStmt 0xa74928 <line:1443:3, col:39>
|   |   `-ReturnStmt 0xa74918 <col:5, col:36>
|   |     `-CallExpr 0xa748b8 <col:12, col:36> 'long double'
|   |       |-ImplicitCastExpr 0xa748a0 <col:12> 'long double (*)(long double, long double) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa74840 <col:12> '<builtin fn type>' Function 0xa74640 '__builtin_fminl' 'long double (long double, long double) noexcept'
|   |       |-ImplicitCastExpr 0xa748e8 <col:28> 'long double' <LValueToRValue>
|   |       | `-DeclRefExpr 0xa74860 <col:28> 'long double' lvalue ParmVar 0xa74420 '__x' 'long double'
|   |       `-ImplicitCastExpr 0xa74900 <col:33> 'long double' <LValueToRValue>
|   |         `-DeclRefExpr 0xa74880 <col:33> 'long double' lvalue ParmVar 0xa744a0 '__y' 'long double'
|   |-FunctionTemplateDecl 0xa751a8 <line:1447:3, line:1453:5> line:1449:5 fmin
|   | |-TemplateTypeParmDecl 0xa74940 <line:1447:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl 0xa749b8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
|   | `-FunctionDecl 0xa75108 <line:1448:5, line:1453:5> line:1449:5 constexpr fmin 'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type (_Tp, _Up)'
|   |   |-ParmVarDecl 0xa74fb0 <col:10, col:14> col:14 referenced __x '_Tp'
|   |   |-ParmVarDecl 0xa75028 <col:19, col:23> col:23 referenced __y '_Up'
|   |   `-CompoundStmt 0xa75990 <line:1450:5, line:1453:5>
|   |     |-DeclStmt 0xa75808 <line:1451:7, col:71>
|   |     | `-TypedefDecl 0xa757b0 <col:7, col:65> col:65 referenced __type 'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'
|   |     |   `-DependentNameType 0xa75740 'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type' dependent
|   |     `-ReturnStmt 0xa75980 <line:1452:7, col:43>
|   |       `-CallExpr 0xa75950 <col:14, col:43> '<dependent type>'
|   |         |-UnresolvedLookupExpr 0xa75820 <col:14> '<overloaded function type>' lvalue (ADL) = 'fmin' 0xa751a8 0xa74540 0xa74008 0xa5dad0
|   |         |-CXXUnresolvedConstructExpr 0xa758d0 <col:19, col:29> '__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type' '__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'
|   |         | `-DeclRefExpr 0xa758b0 <col:26> '_Tp' lvalue ParmVar 0xa74fb0 '__x' '_Tp'
|   |         `-CXXUnresolvedConstructExpr 0xa75928 <col:32, col:42> '__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type' '__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'
|   |           `-DeclRefExpr 0xa75908 <col:39> '_Up' lvalue ParmVar 0xa75028 '__y' '_Up'
|   |-FunctionDecl 0xa75ae8 <line:1457:3, line:1459:40> line:1458:3 constexpr hypot 'float (float, float)'
|   | |-ParmVarDecl 0xa759c8 <col:9, col:15> col:15 used __x 'float'
|   | |-ParmVarDecl 0xa75a48 <col:20, col:26> col:26 used __y 'float'
|   | `-CompoundStmt 0xa75ea8 <line:1459:3, col:40>
|   |   `-ReturnStmt 0xa75e98 <col:5, col:37>
|   |     `-CallExpr 0xa75e38 <col:12, col:37> 'float'
|   |       |-ImplicitCastExpr 0xa75e20 <col:12> 'float (*)(float, float) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa75dc0 <col:12> '<builtin fn type>' Function 0xa75be8 '__builtin_hypotf' 'float (float, float) noexcept'
|   |       |-ImplicitCastExpr 0xa75e68 <col:29> 'float' <LValueToRValue>
|   |       | `-DeclRefExpr 0xa75de0 <col:29> 'float' lvalue ParmVar 0xa759c8 '__x' 'float'
|   |       `-ImplicitCastExpr 0xa75e80 <col:34> 'float' <LValueToRValue>
|   |         `-DeclRefExpr 0xa75e00 <col:34> 'float' lvalue ParmVar 0xa75a48 '__y' 'float'
|   |-FunctionDecl 0xa75ff8 <line:1461:3, line:1463:40> line:1462:3 constexpr hypot 'long double (long double, long double)'
|   | |-ParmVarDecl 0xa75ed8 <col:9, col:21> col:21 used __x 'long double'
|   | |-ParmVarDecl 0xa75f58 <col:26, col:38> col:38 used __y 'long double'
|   | `-CompoundStmt 0xa763b8 <line:1463:3, col:40>
|   |   `-ReturnStmt 0xa763a8 <col:5, col:37>
|   |     `-CallExpr 0xa76348 <col:12, col:37> 'long double'
|   |       |-ImplicitCastExpr 0xa76330 <col:12> 'long double (*)(long double, long double) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa762d0 <col:12> '<builtin fn type>' Function 0xa760f8 '__builtin_hypotl' 'long double (long double, long double) noexcept'
|   |       |-ImplicitCastExpr 0xa76378 <col:29> 'long double' <LValueToRValue>
|   |       | `-DeclRefExpr 0xa762f0 <col:29> 'long double' lvalue ParmVar 0xa75ed8 '__x' 'long double'
|   |       `-ImplicitCastExpr 0xa76390 <col:34> 'long double' <LValueToRValue>
|   |         `-DeclRefExpr 0xa76310 <col:34> 'long double' lvalue ParmVar 0xa75f58 '__y' 'long double'
|   |-FunctionTemplateDecl 0xa76c38 <line:1467:3, line:1473:5> line:1469:5 hypot
|   | |-TemplateTypeParmDecl 0xa763d0 <line:1467:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl 0xa76448 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
|   | `-FunctionDecl 0xa76b98 <line:1468:5, line:1473:5> line:1469:5 constexpr hypot 'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type (_Tp, _Up)'
|   |   |-ParmVarDecl 0xa76a40 <col:11, col:15> col:15 referenced __x '_Tp'
|   |   |-ParmVarDecl 0xa76ab8 <col:20, col:24> col:24 referenced __y '_Up'
|   |   `-CompoundStmt 0xa773e0 <line:1470:5, line:1473:5>
|   |     |-DeclStmt 0xa77258 <line:1471:7, col:71>
|   |     | `-TypedefDecl 0xa77200 <col:7, col:65> col:65 referenced __type 'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'
|   |     |   `-DependentNameType 0xa77190 'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type' dependent
|   |     `-ReturnStmt 0xa773d0 <line:1472:7, col:44>
|   |       `-CallExpr 0xa773a0 <col:14, col:44> '<dependent type>'
|   |         |-UnresolvedLookupExpr 0xa77270 <col:14> '<overloaded function type>' lvalue (ADL) = 'hypot' 0xa76c38 0xa75ff8 0xa75ae8 0xa5dce0
|   |         |-CXXUnresolvedConstructExpr 0xa77320 <col:20, col:30> '__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type' '__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'
|   |         | `-DeclRefExpr 0xa77300 <col:27> '_Tp' lvalue ParmVar 0xa76a40 '__x' '_Tp'
|   |         `-CXXUnresolvedConstructExpr 0xa77378 <col:33, col:43> '__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type' '__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'
|   |           `-DeclRefExpr 0xa77358 <col:40> '_Up' lvalue ParmVar 0xa76ab8 '__y' '_Up'
|   |-FunctionDecl 0xa774b0 <line:1477:3, line:1479:35> line:1478:3 constexpr ilogb 'int (float)'
|   | |-ParmVarDecl 0xa77418 <col:9, col:15> col:15 used __x 'float'
|   | `-CompoundStmt 0xa77820 <line:1479:3, col:35>
|   |   `-ReturnStmt 0xa77810 <col:5, col:32>
|   |     `-CallExpr 0xa777d0 <col:12, col:32> 'int'
|   |       |-ImplicitCastExpr 0xa777b8 <col:12> 'int (*)(float) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa77748 <col:12> '<builtin fn type>' Function 0xa775a8 '__builtin_ilogbf' 'int (float) noexcept'
|   |       `-ImplicitCastExpr 0xa777f8 <col:29> 'float' <LValueToRValue>
|   |         `-DeclRefExpr 0xa77768 <col:29> 'float' lvalue ParmVar 0xa77418 '__x' 'float'
|   |-FunctionDecl 0xa778e8 <line:1481:3, line:1483:35> line:1482:3 constexpr ilogb 'int (long double)'
|   | |-ParmVarDecl 0xa77850 <col:9, col:21> col:21 used __x 'long double'
|   | `-CompoundStmt 0xa77c20 <line:1483:3, col:35>
|   |   `-ReturnStmt 0xa77c10 <col:5, col:32>
|   |     `-CallExpr 0xa77bd0 <col:12, col:32> 'int'
|   |       |-ImplicitCastExpr 0xa77bb8 <col:12> 'int (*)(long double) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa77b48 <col:12> '<builtin fn type>' Function 0xa779e0 '__builtin_ilogbl' 'int (long double) noexcept'
|   |       `-ImplicitCastExpr 0xa77bf8 <col:29> 'long double' <LValueToRValue>
|   |         `-DeclRefExpr 0xa77b68 <col:29> 'long double' lvalue ParmVar 0xa77850 '__x' 'long double'
|   |-FunctionTemplateDecl 0xa780c8 <line:1487:3, line:1492:36> line:1491:5 ilogb
|   | |-TemplateTypeParmDecl 0xa77c38 <line:1487:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | `-FunctionDecl 0xa78028 <line:1488:5, line:1492:36> line:1491:5 constexpr ilogb 'typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, int>::__type (_Tp)'
|   |   |-ParmVarDecl 0xa77f50 <col:11, col:15> col:15 referenced __x '_Tp'
|   |   `-CompoundStmt 0xa78358 <line:1492:5, col:36>
|   |     `-ReturnStmt 0xa78348 <col:7, col:33>
|   |       `-CallExpr 0xa78320 <col:14, col:33> '<dependent type>'
|   |         |-DeclRefExpr 0xa782e0 <col:14> '<builtin fn type>' Function 0xa78178 '__builtin_ilogb' 'int (double) noexcept'
|   |         `-DeclRefExpr 0xa78300 <col:30> '_Tp' lvalue ParmVar 0xa77f50 '__x' '_Tp'
|   |-FunctionDecl 0xa78420 <line:1496:3, line:1498:36> line:1497:3 constexpr lgamma 'float (float)'
|   | |-ParmVarDecl 0xa78388 <col:10, col:16> col:16 used __x 'float'
|   | `-CompoundStmt 0xa78728 <line:1498:3, col:36>
|   |   `-ReturnStmt 0xa78718 <col:5, col:33>
|   |     `-CallExpr 0xa786d8 <col:12, col:33> 'float'
|   |       |-ImplicitCastExpr 0xa786c0 <col:12> 'float (*)(float) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa78680 <col:12> '<builtin fn type>' Function 0xa78518 '__builtin_lgammaf' 'float (float) noexcept'
|   |       `-ImplicitCastExpr 0xa78700 <col:30> 'float' <LValueToRValue>
|   |         `-DeclRefExpr 0xa786a0 <col:30> 'float' lvalue ParmVar 0xa78388 '__x' 'float'
|   |-FunctionDecl 0xa787f0 <line:1500:3, line:1502:36> line:1501:3 constexpr lgamma 'long double (long double)'
|   | |-ParmVarDecl 0xa78758 <col:10, col:22> col:22 used __x 'long double'
|   | `-CompoundStmt 0xa78af8 <line:1502:3, col:36>
|   |   `-ReturnStmt 0xa78ae8 <col:5, col:33>
|   |     `-CallExpr 0xa78aa8 <col:12, col:33> 'long double'
|   |       |-ImplicitCastExpr 0xa78a90 <col:12> 'long double (*)(long double) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa78a50 <col:12> '<builtin fn type>' Function 0xa788e8 '__builtin_lgammal' 'long double (long double) noexcept'
|   |       `-ImplicitCastExpr 0xa78ad0 <col:30> 'long double' <LValueToRValue>
|   |         `-DeclRefExpr 0xa78a70 <col:30> 'long double' lvalue ParmVar 0xa78758 '__x' 'long double'
|   |-FunctionTemplateDecl 0xa78f98 <line:1506:3, line:1510:37> line:1509:5 lgamma
|   | |-TemplateTypeParmDecl 0xa78b10 <line:1506:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | `-FunctionDecl 0xa78ef8 <line:1507:5, line:1510:37> line:1509:5 constexpr lgamma 'typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, double>::__type (_Tp)'
|   |   |-ParmVarDecl 0xa78e20 <col:12, col:16> col:16 referenced __x '_Tp'
|   |   `-CompoundStmt 0xa79228 <line:1510:5, col:37>
|   |     `-ReturnStmt 0xa79218 <col:7, col:34>
|   |       `-CallExpr 0xa791f0 <col:14, col:34> '<dependent type>'
|   |         |-DeclRefExpr 0xa791b0 <col:14> '<builtin fn type>' Function 0xa79048 '__builtin_lgamma' 'double (double) noexcept'
|   |         `-DeclRefExpr 0xa791d0 <col:31> '_Tp' lvalue ParmVar 0xa78e20 '__x' '_Tp'
|   |-FunctionDecl 0xa792f0 <line:1514:3, line:1516:36> line:1515:3 constexpr llrint 'long long (float)'
|   | |-ParmVarDecl 0xa79258 <col:10, col:16> col:16 used __x 'float'
|   | `-CompoundStmt 0xa79650 <line:1516:3, col:36>
|   |   `-ReturnStmt 0xa79640 <col:5, col:33>
|   |     `-CallExpr 0xa79600 <col:12, col:33> 'long long'
|   |       |-ImplicitCastExpr 0xa795e8 <col:12> 'long long (*)(float) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa79550 <col:12> '<builtin fn type>' Function 0xa793e8 '__builtin_llrintf' 'long long (float) noexcept'
|   |       `-ImplicitCastExpr 0xa79628 <col:30> 'float' <LValueToRValue>
|   |         `-DeclRefExpr 0xa79570 <col:30> 'float' lvalue ParmVar 0xa79258 '__x' 'float'
|   |-FunctionDecl 0xa79f38 <line:1518:3, line:1520:36> line:1519:3 constexpr llrint 'long long (long double)'
|   | |-ParmVarDecl 0xa79ea0 <col:10, col:22> col:22 used __x 'long double'
|   | `-CompoundStmt 0xa7a2a0 <line:1520:3, col:36>
|   |   `-ReturnStmt 0xa7a290 <col:5, col:33>
|   |     `-CallExpr 0xa7a250 <col:12, col:33> 'long long'
|   |       |-ImplicitCastExpr 0xa7a238 <col:12> 'long long (*)(long double) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa7a198 <col:12> '<builtin fn type>' Function 0xa7a030 '__builtin_llrintl' 'long long (long double) noexcept'
|   |       `-ImplicitCastExpr 0xa7a278 <col:30> 'long double' <LValueToRValue>
|   |         `-DeclRefExpr 0xa7a1b8 <col:30> 'long double' lvalue ParmVar 0xa79ea0 '__x' 'long double'
|   |-FunctionTemplateDecl 0xa7a818 <line:1524:3, line:1528:37> line:1527:5 llrint
|   | |-TemplateTypeParmDecl 0xa7a2b8 <line:1524:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | `-FunctionDecl 0xa7a778 <line:1525:5, line:1528:37> line:1527:5 constexpr llrint 'typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, long long>::__type (_Tp)'
|   |   |-ParmVarDecl 0xa7a670 <col:12, col:16> col:16 referenced __x '_Tp'
|   |   `-CompoundStmt 0xa7aaa8 <line:1528:5, col:37>
|   |     `-ReturnStmt 0xa7aa98 <col:7, col:34>
|   |       `-CallExpr 0xa7aa70 <col:14, col:34> '<dependent type>'
|   |         |-DeclRefExpr 0xa7aa30 <col:14> '<builtin fn type>' Function 0xa7a8c8 '__builtin_llrint' 'long long (double) noexcept'
|   |         `-DeclRefExpr 0xa7aa50 <col:31> '_Tp' lvalue ParmVar 0xa7a670 '__x' '_Tp'
|   |-FunctionDecl 0xa7ab70 <line:1532:3, line:1534:37> line:1533:3 constexpr llround 'long long (float)'
|   | |-ParmVarDecl 0xa7aad8 <col:11, col:17> col:17 used __x 'float'
|   | `-CompoundStmt 0xa7ae78 <line:1534:3, col:37>
|   |   `-ReturnStmt 0xa7ae68 <col:5, col:34>
|   |     `-CallExpr 0xa7ae28 <col:12, col:34> 'long long'
|   |       |-ImplicitCastExpr 0xa7ae10 <col:12> 'long long (*)(float) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa7add0 <col:12> '<builtin fn type>' Function 0xa7ac68 '__builtin_llroundf' 'long long (float) noexcept'
|   |       `-ImplicitCastExpr 0xa7ae50 <col:31> 'float' <LValueToRValue>
|   |         `-DeclRefExpr 0xa7adf0 <col:31> 'float' lvalue ParmVar 0xa7aad8 '__x' 'float'
|   |-FunctionDecl 0xa7af40 <line:1536:3, line:1538:37> line:1537:3 constexpr llround 'long long (long double)'
|   | |-ParmVarDecl 0xa7aea8 <col:11, col:23> col:23 used __x 'long double'
|   | `-CompoundStmt 0xa7b248 <line:1538:3, col:37>
|   |   `-ReturnStmt 0xa7b238 <col:5, col:34>
|   |     `-CallExpr 0xa7b1f8 <col:12, col:34> 'long long'
|   |       |-ImplicitCastExpr 0xa7b1e0 <col:12> 'long long (*)(long double) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa7b1a0 <col:12> '<builtin fn type>' Function 0xa7b038 '__builtin_llroundl' 'long long (long double) noexcept'
|   |       `-ImplicitCastExpr 0xa7b220 <col:31> 'long double' <LValueToRValue>
|   |         `-DeclRefExpr 0xa7b1c0 <col:31> 'long double' lvalue ParmVar 0xa7aea8 '__x' 'long double'
|   |-FunctionTemplateDecl 0xa7b6e8 <line:1542:3, line:1546:38> line:1545:5 llround
|   | |-TemplateTypeParmDecl 0xa7b260 <line:1542:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | `-FunctionDecl 0xa7b648 <line:1543:5, line:1546:38> line:1545:5 constexpr llround 'typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, long long>::__type (_Tp)'
|   |   |-ParmVarDecl 0xa7b570 <col:13, col:17> col:17 referenced __x '_Tp'
|   |   `-CompoundStmt 0xa7b978 <line:1546:5, col:38>
|   |     `-ReturnStmt 0xa7b968 <col:7, col:35>
|   |       `-CallExpr 0xa7b940 <col:14, col:35> '<dependent type>'
|   |         |-DeclRefExpr 0xa7b900 <col:14> '<builtin fn type>' Function 0xa7b798 '__builtin_llround' 'long long (double) noexcept'
|   |         `-DeclRefExpr 0xa7b920 <col:32> '_Tp' lvalue ParmVar 0xa7b570 '__x' '_Tp'
|   |-FunctionDecl 0xa7ba40 <line:1550:3, line:1552:35> line:1551:3 constexpr log1p 'float (float)'
|   | |-ParmVarDecl 0xa7b9a8 <col:9, col:15> col:15 used __x 'float'
|   | `-CompoundStmt 0xa7bd48 <line:1552:3, col:35>
|   |   `-ReturnStmt 0xa7bd38 <col:5, col:32>
|   |     `-CallExpr 0xa7bcf8 <col:12, col:32> 'float'
|   |       |-ImplicitCastExpr 0xa7bce0 <col:12> 'float (*)(float) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa7bca0 <col:12> '<builtin fn type>' Function 0xa7bb38 '__builtin_log1pf' 'float (float) noexcept'
|   |       `-ImplicitCastExpr 0xa7bd20 <col:29> 'float' <LValueToRValue>
|   |         `-DeclRefExpr 0xa7bcc0 <col:29> 'float' lvalue ParmVar 0xa7b9a8 '__x' 'float'
|   |-FunctionDecl 0xa7beb0 <line:1554:3, line:1556:35> line:1555:3 constexpr log1p 'long double (long double)'
|   | |-ParmVarDecl 0xa7bd78 <col:9, col:21> col:21 used __x 'long double'
|   | `-CompoundStmt 0xa7c1b8 <line:1556:3, col:35>
|   |   `-ReturnStmt 0xa7c1a8 <col:5, col:32>
|   |     `-CallExpr 0xa7c168 <col:12, col:32> 'long double'
|   |       |-ImplicitCastExpr 0xa7c150 <col:12> 'long double (*)(long double) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa7c110 <col:12> '<builtin fn type>' Function 0xa7bfa8 '__builtin_log1pl' 'long double (long double) noexcept'
|   |       `-ImplicitCastExpr 0xa7c190 <col:29> 'long double' <LValueToRValue>
|   |         `-DeclRefExpr 0xa7c130 <col:29> 'long double' lvalue ParmVar 0xa7bd78 '__x' 'long double'
|   |-FunctionTemplateDecl 0xa7c658 <line:1560:3, line:1564:36> line:1563:5 log1p
|   | |-TemplateTypeParmDecl 0xa7c1d0 <line:1560:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | `-FunctionDecl 0xa7c5b8 <line:1561:5, line:1564:36> line:1563:5 constexpr log1p 'typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, double>::__type (_Tp)'
|   |   |-ParmVarDecl 0xa7c4e0 <col:11, col:15> col:15 referenced __x '_Tp'
|   |   `-CompoundStmt 0xa7c8e8 <line:1564:5, col:36>
|   |     `-ReturnStmt 0xa7c8d8 <col:7, col:33>
|   |       `-CallExpr 0xa7c8b0 <col:14, col:33> '<dependent type>'
|   |         |-DeclRefExpr 0xa7c870 <col:14> '<builtin fn type>' Function 0xa7c708 '__builtin_log1p' 'double (double) noexcept'
|   |         `-DeclRefExpr 0xa7c890 <col:30> '_Tp' lvalue ParmVar 0xa7c4e0 '__x' '_Tp'
|   |-FunctionDecl 0xa7c9b0 <line:1569:3, line:1571:34> line:1570:3 constexpr log2 'float (float)'
|   | |-ParmVarDecl 0xa7c918 <col:8, col:14> col:14 used __x 'float'
|   | `-CompoundStmt 0xa7ccb8 <line:1571:3, col:34>
|   |   `-ReturnStmt 0xa7cca8 <col:5, col:31>
|   |     `-CallExpr 0xa7cc68 <col:12, col:31> 'float'
|   |       |-ImplicitCastExpr 0xa7cc50 <col:12> 'float (*)(float) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa7cc10 <col:12> '<builtin fn type>' Function 0xa7caa8 '__builtin_log2f' 'float (float) noexcept'
|   |       `-ImplicitCastExpr 0xa7cc90 <col:28> 'float' <LValueToRValue>
|   |         `-DeclRefExpr 0xa7cc30 <col:28> 'float' lvalue ParmVar 0xa7c918 '__x' 'float'
|   |-FunctionDecl 0xa7cd80 <line:1573:3, line:1575:34> line:1574:3 constexpr log2 'long double (long double)'
|   | |-ParmVarDecl 0xa7cce8 <col:8, col:20> col:20 used __x 'long double'
|   | `-CompoundStmt 0xa7d088 <line:1575:3, col:34>
|   |   `-ReturnStmt 0xa7d078 <col:5, col:31>
|   |     `-CallExpr 0xa7d038 <col:12, col:31> 'long double'
|   |       |-ImplicitCastExpr 0xa7d020 <col:12> 'long double (*)(long double) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa7cfe0 <col:12> '<builtin fn type>' Function 0xa7ce78 '__builtin_log2l' 'long double (long double) noexcept'
|   |       `-ImplicitCastExpr 0xa7d060 <col:28> 'long double' <LValueToRValue>
|   |         `-DeclRefExpr 0xa7d000 <col:28> 'long double' lvalue ParmVar 0xa7cce8 '__x' 'long double'
|   |-FunctionTemplateDecl 0xa7d528 <line:1579:3, line:1583:35> line:1582:5 log2
|   | |-TemplateTypeParmDecl 0xa7d0a0 <line:1579:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | `-FunctionDecl 0xa7d488 <line:1580:5, line:1583:35> line:1582:5 constexpr log2 'typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, double>::__type (_Tp)'
|   |   |-ParmVarDecl 0xa7d3b0 <col:10, col:14> col:14 referenced __x '_Tp'
|   |   `-CompoundStmt 0xa7d7b8 <line:1583:5, col:35>
|   |     `-ReturnStmt 0xa7d7a8 <col:7, col:32>
|   |       `-CallExpr 0xa7d780 <col:14, col:32> '<dependent type>'
|   |         |-DeclRefExpr 0xa7d740 <col:14> '<builtin fn type>' Function 0xa7d5d8 '__builtin_log2' 'double (double) noexcept'
|   |         `-DeclRefExpr 0xa7d760 <col:29> '_Tp' lvalue ParmVar 0xa7d3b0 '__x' '_Tp'
|   |-FunctionDecl 0xa7d880 <line:1587:3, line:1589:34> line:1588:3 constexpr logb 'float (float)'
|   | |-ParmVarDecl 0xa7d7e8 <col:8, col:14> col:14 used __x 'float'
|   | `-CompoundStmt 0xa7db88 <line:1589:3, col:34>
|   |   `-ReturnStmt 0xa7db78 <col:5, col:31>
|   |     `-CallExpr 0xa7db38 <col:12, col:31> 'float'
|   |       |-ImplicitCastExpr 0xa7db20 <col:12> 'float (*)(float) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa7dae0 <col:12> '<builtin fn type>' Function 0xa7d978 '__builtin_logbf' 'float (float) noexcept'
|   |       `-ImplicitCastExpr 0xa7db60 <col:28> 'float' <LValueToRValue>
|   |         `-DeclRefExpr 0xa7db00 <col:28> 'float' lvalue ParmVar 0xa7d7e8 '__x' 'float'
|   |-FunctionDecl 0xa7dc50 <line:1591:3, line:1593:34> line:1592:3 constexpr logb 'long double (long double)'
|   | |-ParmVarDecl 0xa7dbb8 <col:8, col:20> col:20 used __x 'long double'
|   | `-CompoundStmt 0xa7df68 <line:1593:3, col:34>
|   |   `-ReturnStmt 0xa7df58 <col:5, col:31>
|   |     `-CallExpr 0xa7df18 <col:12, col:31> 'long double'
|   |       |-ImplicitCastExpr 0xa7df00 <col:12> 'long double (*)(long double) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa7dec0 <col:12> '<builtin fn type>' Function 0xa7dd48 '__builtin_logbl' 'long double (long double) noexcept'
|   |       `-ImplicitCastExpr 0xa7df40 <col:28> 'long double' <LValueToRValue>
|   |         `-DeclRefExpr 0xa7dee0 <col:28> 'long double' lvalue ParmVar 0xa7dbb8 '__x' 'long double'
|   |-FunctionTemplateDecl 0xa7e408 <line:1597:3, line:1601:35> line:1600:5 logb
|   | |-TemplateTypeParmDecl 0xa7df80 <line:1597:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | `-FunctionDecl 0xa7e368 <line:1598:5, line:1601:35> line:1600:5 constexpr logb 'typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, double>::__type (_Tp)'
|   |   |-ParmVarDecl 0xa7e290 <col:10, col:14> col:14 referenced __x '_Tp'
|   |   `-CompoundStmt 0xa7e698 <line:1601:5, col:35>
|   |     `-ReturnStmt 0xa7e688 <col:7, col:32>
|   |       `-CallExpr 0xa7e660 <col:14, col:32> '<dependent type>'
|   |         |-DeclRefExpr 0xa7e620 <col:14> '<builtin fn type>' Function 0xa7e4b8 '__builtin_logb' 'double (double) noexcept'
|   |         `-DeclRefExpr 0xa7e640 <col:29> '_Tp' lvalue ParmVar 0xa7e290 '__x' '_Tp'
|   |-FunctionDecl 0xa7e760 <line:1605:3, line:1607:35> line:1606:3 constexpr lrint 'long (float)'
|   | |-ParmVarDecl 0xa7e6c8 <col:9, col:15> col:15 used __x 'float'
|   | `-CompoundStmt 0xa7eac0 <line:1607:3, col:35>
|   |   `-ReturnStmt 0xa7eab0 <col:5, col:32>
|   |     `-CallExpr 0xa7ea70 <col:12, col:32> 'long'
|   |       |-ImplicitCastExpr 0xa7ea58 <col:12> 'long (*)(float) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa7e9c0 <col:12> '<builtin fn type>' Function 0xa7e858 '__builtin_lrintf' 'long (float) noexcept'
|   |       `-ImplicitCastExpr 0xa7ea98 <col:29> 'float' <LValueToRValue>
|   |         `-DeclRefExpr 0xa7e9e0 <col:29> 'float' lvalue ParmVar 0xa7e6c8 '__x' 'float'
|   |-FunctionDecl 0xa7eb88 <line:1609:3, line:1611:35> line:1610:3 constexpr lrint 'long (long double)'
|   | |-ParmVarDecl 0xa7eaf0 <col:9, col:21> col:21 used __x 'long double'
|   | `-CompoundStmt 0xa7eef0 <line:1611:3, col:35>
|   |   `-ReturnStmt 0xa7eee0 <col:5, col:32>
|   |     `-CallExpr 0xa7eea0 <col:12, col:32> 'long'
|   |       |-ImplicitCastExpr 0xa7ee88 <col:12> 'long (*)(long double) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa7ede8 <col:12> '<builtin fn type>' Function 0xa7ec80 '__builtin_lrintl' 'long (long double) noexcept'
|   |       `-ImplicitCastExpr 0xa7eec8 <col:29> 'long double' <LValueToRValue>
|   |         `-DeclRefExpr 0xa7ee08 <col:29> 'long double' lvalue ParmVar 0xa7eaf0 '__x' 'long double'
|   |-FunctionTemplateDecl 0xa7f468 <line:1615:3, line:1619:36> line:1618:5 lrint
|   | |-TemplateTypeParmDecl 0xa7ef08 <line:1615:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | `-FunctionDecl 0xa7f3c8 <line:1616:5, line:1619:36> line:1618:5 constexpr lrint 'typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, long>::__type (_Tp)'
|   |   |-ParmVarDecl 0xa7f2c0 <col:11, col:15> col:15 referenced __x '_Tp'
|   |   `-CompoundStmt 0xa7f6f8 <line:1619:5, col:36>
|   |     `-ReturnStmt 0xa7f6e8 <col:7, col:33>
|   |       `-CallExpr 0xa7f6c0 <col:14, col:33> '<dependent type>'
|   |         |-DeclRefExpr 0xa7f680 <col:14> '<builtin fn type>' Function 0xa7f518 '__builtin_lrint' 'long (double) noexcept'
|   |         `-DeclRefExpr 0xa7f6a0 <col:30> '_Tp' lvalue ParmVar 0xa7f2c0 '__x' '_Tp'
|   |-FunctionDecl 0xa7f7c0 <line:1623:3, line:1625:36> line:1624:3 constexpr lround 'long (float)'
|   | |-ParmVarDecl 0xa7f728 <col:10, col:16> col:16 used __x 'float'
|   | `-CompoundStmt 0xa7fac8 <line:1625:3, col:36>
|   |   `-ReturnStmt 0xa7fab8 <col:5, col:33>
|   |     `-CallExpr 0xa7fa78 <col:12, col:33> 'long'
|   |       |-ImplicitCastExpr 0xa7fa60 <col:12> 'long (*)(float) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa7fa20 <col:12> '<builtin fn type>' Function 0xa7f8b8 '__builtin_lroundf' 'long (float) noexcept'
|   |       `-ImplicitCastExpr 0xa7faa0 <col:30> 'float' <LValueToRValue>
|   |         `-DeclRefExpr 0xa7fa40 <col:30> 'float' lvalue ParmVar 0xa7f728 '__x' 'float'
|   |-FunctionDecl 0xa7fb90 <line:1627:3, line:1629:36> line:1628:3 constexpr lround 'long (long double)'
|   | |-ParmVarDecl 0xa7faf8 <col:10, col:22> col:22 used __x 'long double'
|   | `-CompoundStmt 0xa7fe98 <line:1629:3, col:36>
|   |   `-ReturnStmt 0xa7fe88 <col:5, col:33>
|   |     `-CallExpr 0xa7fe48 <col:12, col:33> 'long'
|   |       |-ImplicitCastExpr 0xa7fe30 <col:12> 'long (*)(long double) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa7fdf0 <col:12> '<builtin fn type>' Function 0xa7fc88 '__builtin_lroundl' 'long (long double) noexcept'
|   |       `-ImplicitCastExpr 0xa7fe70 <col:30> 'long double' <LValueToRValue>
|   |         `-DeclRefExpr 0xa7fe10 <col:30> 'long double' lvalue ParmVar 0xa7faf8 '__x' 'long double'
|   |-FunctionTemplateDecl 0xa807c8 <line:1633:3, line:1637:37> line:1636:5 lround
|   | |-TemplateTypeParmDecl 0xa80340 <line:1633:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | `-FunctionDecl 0xa80728 <line:1634:5, line:1637:37> line:1636:5 constexpr lround 'typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, long>::__type (_Tp)'
|   |   |-ParmVarDecl 0xa80650 <col:12, col:16> col:16 referenced __x '_Tp'
|   |   `-CompoundStmt 0xa80a58 <line:1637:5, col:37>
|   |     `-ReturnStmt 0xa80a48 <col:7, col:34>
|   |       `-CallExpr 0xa80a20 <col:14, col:34> '<dependent type>'
|   |         |-DeclRefExpr 0xa809e0 <col:14> '<builtin fn type>' Function 0xa80878 '__builtin_lround' 'long (double) noexcept'
|   |         `-DeclRefExpr 0xa80a00 <col:31> '_Tp' lvalue ParmVar 0xa80650 '__x' '_Tp'
|   |-FunctionDecl 0xa80b20 <line:1641:3, line:1643:39> line:1642:3 constexpr nearbyint 'float (float)'
|   | |-ParmVarDecl 0xa80a88 <col:13, col:19> col:19 used __x 'float'
|   | `-CompoundStmt 0xa80e50 <line:1643:3, col:39>
|   |   `-ReturnStmt 0xa80e40 <col:5, col:36>
|   |     `-CallExpr 0xa80e00 <col:12, col:36> 'float'
|   |       |-ImplicitCastExpr 0xa80de8 <col:12> 'float (*)(float) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa80da8 <col:12> '<builtin fn type>' Function 0xa80c18 '__builtin_nearbyintf' 'float (float) noexcept'
|   |       `-ImplicitCastExpr 0xa80e28 <col:33> 'float' <LValueToRValue>
|   |         `-DeclRefExpr 0xa80dc8 <col:33> 'float' lvalue ParmVar 0xa80a88 '__x' 'float'
|   |-FunctionDecl 0xa80f18 <line:1645:3, line:1647:39> line:1646:3 constexpr nearbyint 'long double (long double)'
|   | |-ParmVarDecl 0xa80e80 <col:13, col:25> col:25 used __x 'long double'
|   | `-CompoundStmt 0xa81248 <line:1647:3, col:39>
|   |   `-ReturnStmt 0xa81238 <col:5, col:36>
|   |     `-CallExpr 0xa811f8 <col:12, col:36> 'long double'
|   |       |-ImplicitCastExpr 0xa811e0 <col:12> 'long double (*)(long double) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa811a0 <col:12> '<builtin fn type>' Function 0xa81010 '__builtin_nearbyintl' 'long double (long double) noexcept'
|   |       `-ImplicitCastExpr 0xa81220 <col:33> 'long double' <LValueToRValue>
|   |         `-DeclRefExpr 0xa811c0 <col:33> 'long double' lvalue ParmVar 0xa80e80 '__x' 'long double'
|   |-FunctionTemplateDecl 0xa816e8 <line:1651:3, line:1655:40> line:1654:5 nearbyint
|   | |-TemplateTypeParmDecl 0xa81260 <line:1651:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | `-FunctionDecl 0xa81648 <line:1652:5, line:1655:40> line:1654:5 constexpr nearbyint 'typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, double>::__type (_Tp)'
|   |   |-ParmVarDecl 0xa81570 <col:15, col:19> col:19 referenced __x '_Tp'
|   |   `-CompoundStmt 0xa819a0 <line:1655:5, col:40>
|   |     `-ReturnStmt 0xa81990 <col:7, col:37>
|   |       `-CallExpr 0xa81968 <col:14, col:37> '<dependent type>'
|   |         |-DeclRefExpr 0xa81928 <col:14> '<builtin fn type>' Function 0xa81798 '__builtin_nearbyint' 'double (double) noexcept'
|   |         `-DeclRefExpr 0xa81948 <col:34> '_Tp' lvalue ParmVar 0xa81570 '__x' '_Tp'
|   |-FunctionDecl 0xa81af0 <line:1659:3, line:1661:44> line:1660:3 constexpr nextafter 'float (float, float)'
|   | |-ParmVarDecl 0xa819d0 <col:13, col:19> col:19 used __x 'float'
|   | |-ParmVarDecl 0xa81a50 <col:24, col:30> col:30 used __y 'float'
|   | `-CompoundStmt 0xa81eb0 <line:1661:3, col:44>
|   |   `-ReturnStmt 0xa81ea0 <col:5, col:41>
|   |     `-CallExpr 0xa81e40 <col:12, col:41> 'float'
|   |       |-ImplicitCastExpr 0xa81e28 <col:12> 'float (*)(float, float) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa81dc8 <col:12> '<builtin fn type>' Function 0xa81bf0 '__builtin_nextafterf' 'float (float, float) noexcept'
|   |       |-ImplicitCastExpr 0xa81e70 <col:33> 'float' <LValueToRValue>
|   |       | `-DeclRefExpr 0xa81de8 <col:33> 'float' lvalue ParmVar 0xa819d0 '__x' 'float'
|   |       `-ImplicitCastExpr 0xa81e88 <col:38> 'float' <LValueToRValue>
|   |         `-DeclRefExpr 0xa81e08 <col:38> 'float' lvalue ParmVar 0xa81a50 '__y' 'float'
|   |-FunctionDecl 0xa82000 <line:1663:3, line:1665:44> line:1664:3 constexpr nextafter 'long double (long double, long double)'
|   | |-ParmVarDecl 0xa81ee0 <col:13, col:25> col:25 used __x 'long double'
|   | |-ParmVarDecl 0xa81f60 <col:30, col:42> col:42 used __y 'long double'
|   | `-CompoundStmt 0xa82538 <line:1665:3, col:44>
|   |   `-ReturnStmt 0xa82528 <col:5, col:41>
|   |     `-CallExpr 0xa824c8 <col:12, col:41> 'long double'
|   |       |-ImplicitCastExpr 0xa824b0 <col:12> 'long double (*)(long double, long double) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa822d8 <col:12> '<builtin fn type>' Function 0xa82100 '__builtin_nextafterl' 'long double (long double, long double) noexcept'
|   |       |-ImplicitCastExpr 0xa824f8 <col:33> 'long double' <LValueToRValue>
|   |       | `-DeclRefExpr 0xa822f8 <col:33> 'long double' lvalue ParmVar 0xa81ee0 '__x' 'long double'
|   |       `-ImplicitCastExpr 0xa82510 <col:38> 'long double' <LValueToRValue>
|   |         `-DeclRefExpr 0xa82318 <col:38> 'long double' lvalue ParmVar 0xa81f60 '__y' 'long double'
|   |-FunctionTemplateDecl 0xa82db8 <line:1669:3, line:1675:5> line:1671:5 nextafter
|   | |-TemplateTypeParmDecl 0xa82550 <line:1669:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl 0xa825c8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
|   | `-FunctionDecl 0xa82d18 <line:1670:5, line:1675:5> line:1671:5 constexpr nextafter 'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type (_Tp, _Up)'
|   |   |-ParmVarDecl 0xa82bc0 <col:15, col:19> col:19 referenced __x '_Tp'
|   |   |-ParmVarDecl 0xa82c38 <col:24, col:28> col:28 referenced __y '_Up'
|   |   `-CompoundStmt 0xa83560 <line:1672:5, line:1675:5>
|   |     |-DeclStmt 0xa833d8 <line:1673:7, col:71>
|   |     | `-TypedefDecl 0xa83380 <col:7, col:65> col:65 referenced __type 'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'
|   |     |   `-DependentNameType 0xa83310 'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type' dependent
|   |     `-ReturnStmt 0xa83550 <line:1674:7, col:48>
|   |       `-CallExpr 0xa83520 <col:14, col:48> '<dependent type>'
|   |         |-UnresolvedLookupExpr 0xa833f0 <col:14> '<overloaded function type>' lvalue (ADL) = 'nextafter' 0xa82db8 0xa82000 0xa81af0 0xa608a8
|   |         |-CXXUnresolvedConstructExpr 0xa834a0 <col:24, col:34> '__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type' '__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'
|   |         | `-DeclRefExpr 0xa83480 <col:31> '_Tp' lvalue ParmVar 0xa82bc0 '__x' '_Tp'
|   |         `-CXXUnresolvedConstructExpr 0xa834f8 <col:37, col:47> '__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type' '__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'
|   |           `-DeclRefExpr 0xa834d8 <col:44> '_Up' lvalue ParmVar 0xa82c38 '__y' '_Up'
|   |-FunctionDecl 0xa836b8 <line:1679:3, line:1681:45> line:1680:3 constexpr nexttoward 'float (float, long double)'
|   | |-ParmVarDecl 0xa83598 <col:14, col:20> col:20 used __x 'float'
|   | |-ParmVarDecl 0xa83618 <col:25, col:37> col:37 used __y 'long double'
|   | `-CompoundStmt 0xa83ad0 <line:1681:3, col:45>
|   |   `-ReturnStmt 0xa83ac0 <col:5, col:42>
|   |     `-CallExpr 0xa83a60 <col:12, col:42> 'float'
|   |       |-ImplicitCastExpr 0xa83a48 <col:12> 'float (*)(float, long double) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa83990 <col:12> '<builtin fn type>' Function 0xa837b8 '__builtin_nexttowardf' 'float (float, long double) noexcept'
|   |       |-ImplicitCastExpr 0xa83a90 <col:34> 'float' <LValueToRValue>
|   |       | `-DeclRefExpr 0xa839b0 <col:34> 'float' lvalue ParmVar 0xa83598 '__x' 'float'
|   |       `-ImplicitCastExpr 0xa83aa8 <col:39> 'long double' <LValueToRValue>
|   |         `-DeclRefExpr 0xa839d0 <col:39> 'long double' lvalue ParmVar 0xa83618 '__y' 'long double'
|   |-FunctionDecl 0xa83c20 <line:1683:3, line:1685:45> line:1684:3 constexpr nexttoward 'long double (long double, long double)'
|   | |-ParmVarDecl 0xa83b00 <col:14, col:26> col:26 used __x 'long double'
|   | |-ParmVarDecl 0xa83b80 <col:31, col:43> col:43 used __y 'long double'
|   | `-CompoundStmt 0xa83fe0 <line:1685:3, col:45>
|   |   `-ReturnStmt 0xa83fd0 <col:5, col:42>
|   |     `-CallExpr 0xa83f70 <col:12, col:42> 'long double'
|   |       |-ImplicitCastExpr 0xa83f58 <col:12> 'long double (*)(long double, long double) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa83ef8 <col:12> '<builtin fn type>' Function 0xa83d20 '__builtin_nexttowardl' 'long double (long double, long double) noexcept'
|   |       |-ImplicitCastExpr 0xa83fa0 <col:34> 'long double' <LValueToRValue>
|   |       | `-DeclRefExpr 0xa83f18 <col:34> 'long double' lvalue ParmVar 0xa83b00 '__x' 'long double'
|   |       `-ImplicitCastExpr 0xa83fb8 <col:39> 'long double' <LValueToRValue>
|   |         `-DeclRefExpr 0xa83f38 <col:39> 'long double' lvalue ParmVar 0xa83b80 '__y' 'long double'
|   |-FunctionTemplateDecl 0xa856b0 <line:1689:3, line:1693:46> line:1692:5 nexttoward
|   | |-TemplateTypeParmDecl 0xa83ff8 <line:1689:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | `-FunctionDecl 0xa85610 <line:1690:5, line:1693:46> line:1692:5 constexpr nexttoward 'typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, double>::__type (_Tp, long double)'
|   |   |-ParmVarDecl 0xa84310 <col:16, col:20> col:20 referenced __x '_Tp'
|   |   |-ParmVarDecl 0xa84390 <col:25, col:37> col:37 referenced __y 'long double'
|   |   `-CompoundStmt 0xa859e0 <line:1693:5, col:46>
|   |     `-ReturnStmt 0xa859d0 <col:7, col:43>
|   |       `-CallExpr 0xa859a0 <col:14, col:43> '<dependent type>'
|   |         |-DeclRefExpr 0xa85940 <col:14> '<builtin fn type>' Function 0xa85768 '__builtin_nexttoward' 'double (double, long double) noexcept'
|   |         |-DeclRefExpr 0xa85960 <col:35> '_Tp' lvalue ParmVar 0xa84310 '__x' '_Tp'
|   |         `-DeclRefExpr 0xa85980 <col:40> 'long double' lvalue ParmVar 0xa84390 '__y' 'long double'
|   |-FunctionDecl 0xa85b30 <line:1697:3, line:1699:44> line:1698:3 constexpr remainder 'float (float, float)'
|   | |-ParmVarDecl 0xa85a10 <col:13, col:19> col:19 used __x 'float'
|   | |-ParmVarDecl 0xa85a90 <col:24, col:30> col:30 used __y 'float'
|   | `-CompoundStmt 0xa85ef0 <line:1699:3, col:44>
|   |   `-ReturnStmt 0xa85ee0 <col:5, col:41>
|   |     `-CallExpr 0xa85e80 <col:12, col:41> 'float'
|   |       |-ImplicitCastExpr 0xa85e68 <col:12> 'float (*)(float, float) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa85e08 <col:12> '<builtin fn type>' Function 0xa85c30 '__builtin_remainderf' 'float (float, float) noexcept'
|   |       |-ImplicitCastExpr 0xa85eb0 <col:33> 'float' <LValueToRValue>
|   |       | `-DeclRefExpr 0xa85e28 <col:33> 'float' lvalue ParmVar 0xa85a10 '__x' 'float'
|   |       `-ImplicitCastExpr 0xa85ec8 <col:38> 'float' <LValueToRValue>
|   |         `-DeclRefExpr 0xa85e48 <col:38> 'float' lvalue ParmVar 0xa85a90 '__y' 'float'
|   |-FunctionDecl 0xa86040 <line:1701:3, line:1703:44> line:1702:3 constexpr remainder 'long double (long double, long double)'
|   | |-ParmVarDecl 0xa85f20 <col:13, col:25> col:25 used __x 'long double'
|   | |-ParmVarDecl 0xa85fa0 <col:30, col:42> col:42 used __y 'long double'
|   | `-CompoundStmt 0xa86400 <line:1703:3, col:44>
|   |   `-ReturnStmt 0xa863f0 <col:5, col:41>
|   |     `-CallExpr 0xa86390 <col:12, col:41> 'long double'
|   |       |-ImplicitCastExpr 0xa86378 <col:12> 'long double (*)(long double, long double) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa86318 <col:12> '<builtin fn type>' Function 0xa86140 '__builtin_remainderl' 'long double (long double, long double) noexcept'
|   |       |-ImplicitCastExpr 0xa863c0 <col:33> 'long double' <LValueToRValue>
|   |       | `-DeclRefExpr 0xa86338 <col:33> 'long double' lvalue ParmVar 0xa85f20 '__x' 'long double'
|   |       `-ImplicitCastExpr 0xa863d8 <col:38> 'long double' <LValueToRValue>
|   |         `-DeclRefExpr 0xa86358 <col:38> 'long double' lvalue ParmVar 0xa85fa0 '__y' 'long double'
|   |-FunctionTemplateDecl 0xa86c88 <line:1707:3, line:1713:5> line:1709:5 remainder
|   | |-TemplateTypeParmDecl 0xa86418 <line:1707:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl 0xa86498 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
|   | `-FunctionDecl 0xa86be8 <line:1708:5, line:1713:5> line:1709:5 constexpr remainder 'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type (_Tp, _Up)'
|   |   |-ParmVarDecl 0xa86a90 <col:15, col:19> col:19 referenced __x '_Tp'
|   |   |-ParmVarDecl 0xa86b08 <col:24, col:28> col:28 referenced __y '_Up'
|   |   `-CompoundStmt 0xa87430 <line:1710:5, line:1713:5>
|   |     |-DeclStmt 0xa872a8 <line:1711:7, col:71>
|   |     | `-TypedefDecl 0xa87250 <col:7, col:65> col:65 referenced __type 'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'
|   |     |   `-DependentNameType 0xa871e0 'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type' dependent
|   |     `-ReturnStmt 0xa87420 <line:1712:7, col:48>
|   |       `-CallExpr 0xa873f0 <col:14, col:48> '<dependent type>'
|   |         |-UnresolvedLookupExpr 0xa872c0 <col:14> '<overloaded function type>' lvalue (ADL) = 'remainder' 0xa86c88 0xa86040 0xa85b30 0xa60cc8
|   |         |-CXXUnresolvedConstructExpr 0xa87370 <col:24, col:34> '__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type' '__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'
|   |         | `-DeclRefExpr 0xa87350 <col:31> '_Tp' lvalue ParmVar 0xa86a90 '__x' '_Tp'
|   |         `-CXXUnresolvedConstructExpr 0xa873c8 <col:37, col:47> '__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type' '__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'
|   |           `-DeclRefExpr 0xa873a8 <col:44> '_Up' lvalue ParmVar 0xa86b08 '__y' '_Up'
|   |-FunctionDecl 0xa87780 <line:1717:3, line:1719:49> line:1718:3 remquo 'float (float, float, int *)' inline
|   | |-ParmVarDecl 0xa87468 <col:10, col:16> col:16 used __x 'float'
|   | |-ParmVarDecl 0xa874e8 <col:21, col:27> col:27 used __y 'float'
|   | |-ParmVarDecl 0xa87568 <col:32, col:37> col:37 used __pquo 'int *'
|   | `-CompoundStmt 0xa87ca0 <line:1719:3, col:49>
|   |   `-ReturnStmt 0xa87c90 <col:5, col:46>
|   |     `-CallExpr 0xa87c10 <col:12, col:46> 'float'
|   |       |-ImplicitCastExpr 0xa87bf8 <col:12> 'float (*)(float, float, int *) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa87ad0 <col:12> '<builtin fn type>' Function 0xa87888 '__builtin_remquof' 'float (float, float, int *) noexcept'
|   |       |-ImplicitCastExpr 0xa87c48 <col:30> 'float' <LValueToRValue>
|   |       | `-DeclRefExpr 0xa87af0 <col:30> 'float' lvalue ParmVar 0xa87468 '__x' 'float'
|   |       |-ImplicitCastExpr 0xa87c60 <col:35> 'float' <LValueToRValue>
|   |       | `-DeclRefExpr 0xa87b10 <col:35> 'float' lvalue ParmVar 0xa874e8 '__y' 'float'
|   |       `-ImplicitCastExpr 0xa87c78 <col:40> 'int *' <LValueToRValue>
|   |         `-DeclRefExpr 0xa87b30 <col:40> 'int *' lvalue ParmVar 0xa87568 '__pquo' 'int *'
|   |-FunctionDecl 0xa87e78 <line:1721:3, line:1723:49> line:1722:3 remquo 'long double (long double, long double, int *)' inline
|   | |-ParmVarDecl 0xa87cd0 <col:10, col:22> col:22 used __x 'long double'
|   | |-ParmVarDecl 0xa87d50 <col:27, col:39> col:39 used __y 'long double'
|   | |-ParmVarDecl 0xa87dd0 <col:44, col:49> col:49 used __pquo 'int *'
|   | `-CompoundStmt 0xa88390 <line:1723:3, col:49>
|   |   `-ReturnStmt 0xa88380 <col:5, col:46>
|   |     `-CallExpr 0xa88300 <col:12, col:46> 'long double'
|   |       |-ImplicitCastExpr 0xa882e8 <col:12> 'long double (*)(long double, long double, int *) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa881c8 <col:12> '<builtin fn type>' Function 0xa87f80 '__builtin_remquol' 'long double (long double, long double, int *) noexcept'
|   |       |-ImplicitCastExpr 0xa88338 <col:30> 'long double' <LValueToRValue>
|   |       | `-DeclRefExpr 0xa881e8 <col:30> 'long double' lvalue ParmVar 0xa87cd0 '__x' 'long double'
|   |       |-ImplicitCastExpr 0xa88350 <col:35> 'long double' <LValueToRValue>
|   |       | `-DeclRefExpr 0xa88208 <col:35> 'long double' lvalue ParmVar 0xa87d50 '__y' 'long double'
|   |       `-ImplicitCastExpr 0xa88368 <col:40> 'int *' <LValueToRValue>
|   |         `-DeclRefExpr 0xa88228 <col:40> 'int *' lvalue ParmVar 0xa87dd0 '__pquo' 'int *'
|   |-FunctionTemplateDecl 0xa88ce8 <line:1727:3, line:1733:5> line:1729:5 remquo
|   | |-TemplateTypeParmDecl 0xa883a8 <line:1727:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl 0xa88428 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
|   | `-FunctionDecl 0xa88c48 <line:1728:5, line:1733:5> line:1729:5 remquo 'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type (_Tp, _Up, int *)' inline
|   |   |-ParmVarDecl 0xa88a20 <col:12, col:16> col:16 referenced __x '_Tp'
|   |   |-ParmVarDecl 0xa88a98 <col:21, col:25> col:25 referenced __y '_Up'
|   |   |-ParmVarDecl 0xa88b18 <col:30, col:35> col:35 referenced __pquo 'int *'
|   |   `-CompoundStmt 0xa894c8 <line:1730:5, line:1733:5>
|   |     |-DeclStmt 0xa89318 <line:1731:7, col:71>
|   |     | `-TypedefDecl 0xa892c0 <col:7, col:65> col:65 referenced __type 'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'
|   |     |   `-DependentNameType 0xa89250 'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type' dependent
|   |     `-ReturnStmt 0xa894b8 <line:1732:7, col:53>
|   |       `-CallExpr 0xa89480 <col:14, col:53> '<dependent type>'
|   |         |-UnresolvedLookupExpr 0xa89330 <col:14> '<overloaded function type>' lvalue (ADL) = 'remquo' 0xa88ce8 0xa87e78 0xa87780 0xa60ed8
|   |         |-CXXUnresolvedConstructExpr 0xa893e0 <col:21, col:31> '__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type' '__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'
|   |         | `-DeclRefExpr 0xa893c0 <col:28> '_Tp' lvalue ParmVar 0xa88a20 '__x' '_Tp'
|   |         |-CXXUnresolvedConstructExpr 0xa89438 <col:34, col:44> '__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type' '__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'
|   |         | `-DeclRefExpr 0xa89418 <col:41> '_Up' lvalue ParmVar 0xa88a98 '__y' '_Up'
|   |         `-DeclRefExpr 0xa89460 <col:47> 'int *' lvalue ParmVar 0xa88b18 '__pquo' 'int *'
|   |-FunctionDecl 0xa89598 <line:1737:3, line:1739:34> line:1738:3 constexpr rint 'float (float)'
|   | |-ParmVarDecl 0xa89500 <col:8, col:14> col:14 used __x 'float'
|   | `-CompoundStmt 0xa89998 <line:1739:3, col:34>
|   |   `-ReturnStmt 0xa89988 <col:5, col:31>
|   |     `-CallExpr 0xa89948 <col:12, col:31> 'float'
|   |       |-ImplicitCastExpr 0xa89930 <col:12> 'float (*)(float) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa898f0 <col:12> '<builtin fn type>' Function 0xa89690 '__builtin_rintf' 'float (float) noexcept'
|   |       `-ImplicitCastExpr 0xa89970 <col:28> 'float' <LValueToRValue>
|   |         `-DeclRefExpr 0xa89910 <col:28> 'float' lvalue ParmVar 0xa89500 '__x' 'float'
|   |-FunctionDecl 0xa89a60 <line:1741:3, line:1743:34> line:1742:3 constexpr rint 'long double (long double)'
|   | |-ParmVarDecl 0xa899c8 <col:8, col:20> col:20 used __x 'long double'
|   | `-CompoundStmt 0xa89d90 <line:1743:3, col:34>
|   |   `-ReturnStmt 0xa89d80 <col:5, col:31>
|   |     `-CallExpr 0xa89d40 <col:12, col:31> 'long double'
|   |       |-ImplicitCastExpr 0xa89d28 <col:12> 'long double (*)(long double) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa89ce8 <col:12> '<builtin fn type>' Function 0xa89b58 '__builtin_rintl' 'long double (long double) noexcept'
|   |       `-ImplicitCastExpr 0xa89d68 <col:28> 'long double' <LValueToRValue>
|   |         `-DeclRefExpr 0xa89d08 <col:28> 'long double' lvalue ParmVar 0xa899c8 '__x' 'long double'
|   |-FunctionTemplateDecl 0xa8a238 <line:1747:3, line:1751:35> line:1750:5 rint
|   | |-TemplateTypeParmDecl 0xa89da8 <line:1747:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | `-FunctionDecl 0xa8a198 <line:1748:5, line:1751:35> line:1750:5 constexpr rint 'typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, double>::__type (_Tp)'
|   |   |-ParmVarDecl 0xa8a0c0 <col:10, col:14> col:14 referenced __x '_Tp'
|   |   `-CompoundStmt 0xa8a4f0 <line:1751:5, col:35>
|   |     `-ReturnStmt 0xa8a4e0 <col:7, col:32>
|   |       `-CallExpr 0xa8a4b8 <col:14, col:32> '<dependent type>'
|   |         |-DeclRefExpr 0xa8a478 <col:14> '<builtin fn type>' Function 0xa8a2e8 '__builtin_rint' 'double (double) noexcept'
|   |         `-DeclRefExpr 0xa8a498 <col:29> '_Tp' lvalue ParmVar 0xa8a0c0 '__x' '_Tp'
|   |-FunctionDecl 0xa8a5b8 <line:1755:3, line:1757:35> line:1756:3 constexpr round 'float (float)'
|   | |-ParmVarDecl 0xa8a520 <col:9, col:15> col:15 used __x 'float'
|   | `-CompoundStmt 0xa8a8e8 <line:1757:3, col:35>
|   |   `-ReturnStmt 0xa8a8d8 <col:5, col:32>
|   |     `-CallExpr 0xa8a898 <col:12, col:32> 'float'
|   |       |-ImplicitCastExpr 0xa8a880 <col:12> 'float (*)(float) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa8a840 <col:12> '<builtin fn type>' Function 0xa8a6b0 '__builtin_roundf' 'float (float) noexcept'
|   |       `-ImplicitCastExpr 0xa8a8c0 <col:29> 'float' <LValueToRValue>
|   |         `-DeclRefExpr 0xa8a860 <col:29> 'float' lvalue ParmVar 0xa8a520 '__x' 'float'
|   |-FunctionDecl 0xa8a9b0 <line:1759:3, line:1761:35> line:1760:3 constexpr round 'long double (long double)'
|   | |-ParmVarDecl 0xa8a918 <col:9, col:21> col:21 used __x 'long double'
|   | `-CompoundStmt 0xa8ace0 <line:1761:3, col:35>
|   |   `-ReturnStmt 0xa8acd0 <col:5, col:32>
|   |     `-CallExpr 0xa8ac90 <col:12, col:32> 'long double'
|   |       |-ImplicitCastExpr 0xa8ac78 <col:12> 'long double (*)(long double) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa8ac38 <col:12> '<builtin fn type>' Function 0xa8aaa8 '__builtin_roundl' 'long double (long double) noexcept'
|   |       `-ImplicitCastExpr 0xa8acb8 <col:29> 'long double' <LValueToRValue>
|   |         `-DeclRefExpr 0xa8ac58 <col:29> 'long double' lvalue ParmVar 0xa8a918 '__x' 'long double'
|   |-FunctionTemplateDecl 0xa8b188 <line:1765:3, line:1769:36> line:1768:5 round
|   | |-TemplateTypeParmDecl 0xa8acf8 <line:1765:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | `-FunctionDecl 0xa8b0e8 <line:1766:5, line:1769:36> line:1768:5 constexpr round 'typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, double>::__type (_Tp)'
|   |   |-ParmVarDecl 0xa8b010 <col:11, col:15> col:15 referenced __x '_Tp'
|   |   `-CompoundStmt 0xa8b440 <line:1769:5, col:36>
|   |     `-ReturnStmt 0xa8b430 <col:7, col:33>
|   |       `-CallExpr 0xa8b408 <col:14, col:33> '<dependent type>'
|   |         |-DeclRefExpr 0xa8b3c8 <col:14> '<builtin fn type>' Function 0xa8b238 '__builtin_round' 'double (double) noexcept'
|   |         `-DeclRefExpr 0xa8b3e8 <col:30> '_Tp' lvalue ParmVar 0xa8b010 '__x' '_Tp'
|   |-FunctionDecl 0xa8b590 <line:1773:3, line:1775:43> line:1774:3 constexpr scalbln 'float (float, long)'
|   | |-ParmVarDecl 0xa8b470 <col:11, col:17> col:17 used __x 'float'
|   | |-ParmVarDecl 0xa8b4f0 <col:22, col:27> col:27 used __ex 'long'
|   | `-CompoundStmt 0xa8bad0 <line:1775:3, col:43>
|   |   `-ReturnStmt 0xa8bac0 <col:5, col:40>
|   |     `-CallExpr 0xa8ba60 <col:12, col:40> 'float'
|   |       |-ImplicitCastExpr 0xa8ba48 <col:12> 'float (*)(float, long) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa8b988 <col:12> '<builtin fn type>' Function 0xa8b690 '__builtin_scalblnf' 'float (float, long) noexcept'
|   |       |-ImplicitCastExpr 0xa8ba90 <col:31> 'float' <LValueToRValue>
|   |       | `-DeclRefExpr 0xa8b9a8 <col:31> 'float' lvalue ParmVar 0xa8b470 '__x' 'float'
|   |       `-ImplicitCastExpr 0xa8baa8 <col:36> 'long' <LValueToRValue>
|   |         `-DeclRefExpr 0xa8b9c8 <col:36> 'long' lvalue ParmVar 0xa8b4f0 '__ex' 'long'
|   |-FunctionDecl 0xa8bc20 <line:1777:3, line:1779:43> line:1778:3 constexpr scalbln 'long double (long double, long)'
|   | |-ParmVarDecl 0xa8bb00 <col:11, col:23> col:23 used __x 'long double'
|   | |-ParmVarDecl 0xa8bb80 <col:28, col:33> col:33 used __ex 'long'
|   | `-CompoundStmt 0xa8c040 <line:1779:3, col:43>
|   |   `-ReturnStmt 0xa8c030 <col:5, col:40>
|   |     `-CallExpr 0xa8bfd0 <col:12, col:40> 'long double'
|   |       |-ImplicitCastExpr 0xa8bfb8 <col:12> 'long double (*)(long double, long) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa8bef8 <col:12> '<builtin fn type>' Function 0xa8bd20 '__builtin_scalblnl' 'long double (long double, long) noexcept'
|   |       |-ImplicitCastExpr 0xa8c000 <col:31> 'long double' <LValueToRValue>
|   |       | `-DeclRefExpr 0xa8bf18 <col:31> 'long double' lvalue ParmVar 0xa8bb00 '__x' 'long double'
|   |       `-ImplicitCastExpr 0xa8c018 <col:36> 'long' <LValueToRValue>
|   |         `-DeclRefExpr 0xa8bf38 <col:36> 'long' lvalue ParmVar 0xa8bb80 '__ex' 'long'
|   |-FunctionTemplateDecl 0xa8c5b8 <line:1783:3, line:1787:44> line:1786:5 scalbln
|   | |-TemplateTypeParmDecl 0xa8c058 <line:1783:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | `-FunctionDecl 0xa8c518 <line:1784:5, line:1787:44> line:1786:5 constexpr scalbln 'typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, double>::__type (_Tp, long)'
|   |   |-ParmVarDecl 0xa8c370 <col:13, col:17> col:17 referenced __x '_Tp'
|   |   |-ParmVarDecl 0xa8c3f0 <col:22, col:27> col:27 referenced __ex 'long'
|   |   `-CompoundStmt 0xa8c8e8 <line:1787:5, col:44>
|   |     `-ReturnStmt 0xa8c8d8 <col:7, col:41>
|   |       `-CallExpr 0xa8c8a8 <col:14, col:41> '<dependent type>'
|   |         |-DeclRefExpr 0xa8c848 <col:14> '<builtin fn type>' Function 0xa8c670 '__builtin_scalbln' 'double (double, long) noexcept'
|   |         |-DeclRefExpr 0xa8c868 <col:32> '_Tp' lvalue ParmVar 0xa8c370 '__x' '_Tp'
|   |         `-DeclRefExpr 0xa8c888 <col:37> 'long' lvalue ParmVar 0xa8c3f0 '__ex' 'long'
|   |-FunctionDecl 0xa8ca38 <line:1791:3, line:1793:42> line:1792:3 constexpr scalbn 'float (float, int)'
|   | |-ParmVarDecl 0xa8c918 <col:10, col:16> col:16 used __x 'float'
|   | |-ParmVarDecl 0xa8c998 <col:21, col:25> col:25 used __ex 'int'
|   | `-CompoundStmt 0xa8cdf8 <line:1793:3, col:42>
|   |   `-ReturnStmt 0xa8cde8 <col:5, col:39>
|   |     `-CallExpr 0xa8cd88 <col:12, col:39> 'float'
|   |       |-ImplicitCastExpr 0xa8cd70 <col:12> 'float (*)(float, int) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa8cd10 <col:12> '<builtin fn type>' Function 0xa8cb38 '__builtin_scalbnf' 'float (float, int) noexcept'
|   |       |-ImplicitCastExpr 0xa8cdb8 <col:30> 'float' <LValueToRValue>
|   |       | `-DeclRefExpr 0xa8cd30 <col:30> 'float' lvalue ParmVar 0xa8c918 '__x' 'float'
|   |       `-ImplicitCastExpr 0xa8cdd0 <col:35> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0xa8cd50 <col:35> 'int' lvalue ParmVar 0xa8c998 '__ex' 'int'
|   |-FunctionDecl 0xa8cf48 <line:1795:3, line:1797:42> line:1796:3 constexpr scalbn 'long double (long double, int)'
|   | |-ParmVarDecl 0xa8ce28 <col:10, col:22> col:22 used __x 'long double'
|   | |-ParmVarDecl 0xa8cea8 <col:27, col:31> col:31 used __ex 'int'
|   | `-CompoundStmt 0xa8d308 <line:1797:3, col:42>
|   |   `-ReturnStmt 0xa8d2f8 <col:5, col:39>
|   |     `-CallExpr 0xa8d298 <col:12, col:39> 'long double'
|   |       |-ImplicitCastExpr 0xa8d280 <col:12> 'long double (*)(long double, int) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa8d220 <col:12> '<builtin fn type>' Function 0xa8d048 '__builtin_scalbnl' 'long double (long double, int) noexcept'
|   |       |-ImplicitCastExpr 0xa8d2c8 <col:30> 'long double' <LValueToRValue>
|   |       | `-DeclRefExpr 0xa8d240 <col:30> 'long double' lvalue ParmVar 0xa8ce28 '__x' 'long double'
|   |       `-ImplicitCastExpr 0xa8d2e0 <col:35> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0xa8d260 <col:35> 'int' lvalue ParmVar 0xa8cea8 '__ex' 'int'
|   |-FunctionTemplateDecl 0xa8d838 <line:1801:3, line:1805:43> line:1804:5 scalbn
|   | |-TemplateTypeParmDecl 0xa8d320 <line:1801:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | `-FunctionDecl 0xa8d798 <line:1802:5, line:1805:43> line:1804:5 constexpr scalbn 'typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, double>::__type (_Tp, int)'
|   |   |-ParmVarDecl 0xa8d630 <col:12, col:16> col:16 referenced __x '_Tp'
|   |   |-ParmVarDecl 0xa8d6b0 <col:21, col:25> col:25 referenced __ex 'int'
|   |   `-CompoundStmt 0xa8e118 <line:1805:5, col:43>
|   |     `-ReturnStmt 0xa8e108 <col:7, col:40>
|   |       `-CallExpr 0xa8e0d8 <col:14, col:40> '<dependent type>'
|   |         |-DeclRefExpr 0xa8e078 <col:14> '<builtin fn type>' Function 0xa8dea0 '__builtin_scalbn' 'double (double, int) noexcept'
|   |         |-DeclRefExpr 0xa8e098 <col:31> '_Tp' lvalue ParmVar 0xa8d630 '__x' '_Tp'
|   |         `-DeclRefExpr 0xa8e0b8 <col:36> 'int' lvalue ParmVar 0xa8d6b0 '__ex' 'int'
|   |-FunctionDecl 0xa8e1e0 <line:1809:3, line:1811:36> line:1810:3 constexpr tgamma 'float (float)'
|   | |-ParmVarDecl 0xa8e148 <col:10, col:16> col:16 used __x 'float'
|   | `-CompoundStmt 0xa8e4e8 <line:1811:3, col:36>
|   |   `-ReturnStmt 0xa8e4d8 <col:5, col:33>
|   |     `-CallExpr 0xa8e498 <col:12, col:33> 'float'
|   |       |-ImplicitCastExpr 0xa8e480 <col:12> 'float (*)(float) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa8e440 <col:12> '<builtin fn type>' Function 0xa8e2d8 '__builtin_tgammaf' 'float (float) noexcept'
|   |       `-ImplicitCastExpr 0xa8e4c0 <col:30> 'float' <LValueToRValue>
|   |         `-DeclRefExpr 0xa8e460 <col:30> 'float' lvalue ParmVar 0xa8e148 '__x' 'float'
|   |-FunctionDecl 0xa8e5b0 <line:1813:3, line:1815:36> line:1814:3 constexpr tgamma 'long double (long double)'
|   | |-ParmVarDecl 0xa8e518 <col:10, col:22> col:22 used __x 'long double'
|   | `-CompoundStmt 0xa8e8b8 <line:1815:3, col:36>
|   |   `-ReturnStmt 0xa8e8a8 <col:5, col:33>
|   |     `-CallExpr 0xa8e868 <col:12, col:33> 'long double'
|   |       |-ImplicitCastExpr 0xa8e850 <col:12> 'long double (*)(long double) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa8e810 <col:12> '<builtin fn type>' Function 0xa8e6a8 '__builtin_tgammal' 'long double (long double) noexcept'
|   |       `-ImplicitCastExpr 0xa8e890 <col:30> 'long double' <LValueToRValue>
|   |         `-DeclRefExpr 0xa8e830 <col:30> 'long double' lvalue ParmVar 0xa8e518 '__x' 'long double'
|   |-FunctionTemplateDecl 0xa8ed58 <line:1819:3, line:1823:37> line:1822:5 tgamma
|   | |-TemplateTypeParmDecl 0xa8e8d0 <line:1819:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | `-FunctionDecl 0xa8ecb8 <line:1820:5, line:1823:37> line:1822:5 constexpr tgamma 'typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, double>::__type (_Tp)'
|   |   |-ParmVarDecl 0xa8ebe0 <col:12, col:16> col:16 referenced __x '_Tp'
|   |   `-CompoundStmt 0xa8efe8 <line:1823:5, col:37>
|   |     `-ReturnStmt 0xa8efd8 <col:7, col:34>
|   |       `-CallExpr 0xa8efb0 <col:14, col:34> '<dependent type>'
|   |         |-DeclRefExpr 0xa8ef70 <col:14> '<builtin fn type>' Function 0xa8ee08 '__builtin_tgamma' 'double (double) noexcept'
|   |         `-DeclRefExpr 0xa8ef90 <col:31> '_Tp' lvalue ParmVar 0xa8ebe0 '__x' '_Tp'
|   |-FunctionDecl 0xa8f0b0 <line:1827:3, line:1829:35> line:1828:3 constexpr trunc 'float (float)'
|   | |-ParmVarDecl 0xa8f018 <col:9, col:15> col:15 used __x 'float'
|   | `-CompoundStmt 0xa8f3e0 <line:1829:3, col:35>
|   |   `-ReturnStmt 0xa8f3d0 <col:5, col:32>
|   |     `-CallExpr 0xa8f390 <col:12, col:32> 'float'
|   |       |-ImplicitCastExpr 0xa8f378 <col:12> 'float (*)(float) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa8f338 <col:12> '<builtin fn type>' Function 0xa8f1a8 '__builtin_truncf' 'float (float) noexcept'
|   |       `-ImplicitCastExpr 0xa8f3b8 <col:29> 'float' <LValueToRValue>
|   |         `-DeclRefExpr 0xa8f358 <col:29> 'float' lvalue ParmVar 0xa8f018 '__x' 'float'
|   |-FunctionDecl 0xa8f4a8 <line:1831:3, line:1833:35> line:1832:3 constexpr trunc 'long double (long double)'
|   | |-ParmVarDecl 0xa8f410 <col:9, col:21> col:21 used __x 'long double'
|   | `-CompoundStmt 0xa8f7d8 <line:1833:3, col:35>
|   |   `-ReturnStmt 0xa8f7c8 <col:5, col:32>
|   |     `-CallExpr 0xa8f788 <col:12, col:32> 'long double'
|   |       |-ImplicitCastExpr 0xa8f770 <col:12> 'long double (*)(long double) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xa8f730 <col:12> '<builtin fn type>' Function 0xa8f5a0 '__builtin_truncl' 'long double (long double) noexcept'
|   |       `-ImplicitCastExpr 0xa8f7b0 <col:29> 'long double' <LValueToRValue>
|   |         `-DeclRefExpr 0xa8f750 <col:29> 'long double' lvalue ParmVar 0xa8f410 '__x' 'long double'
|   `-FunctionTemplateDecl 0xa8fc78 <line:1837:3, line:1841:36> line:1840:5 trunc
|     |-TemplateTypeParmDecl 0xa8f7f0 <line:1837:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|     `-FunctionDecl 0xa8fbd8 <line:1838:5, line:1841:36> line:1840:5 constexpr trunc 'typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, double>::__type (_Tp)'
|       |-ParmVarDecl 0xa8fb00 <col:11, col:15> col:15 referenced __x '_Tp'
|       `-CompoundStmt 0xa900b0 <line:1841:5, col:36>
|         `-ReturnStmt 0xa900a0 <col:7, col:33>
|           `-CallExpr 0xa90078 <col:14, col:33> '<dependent type>'
|             |-DeclRefExpr 0xa90038 <col:14> '<builtin fn type>' Function 0xa8fd28 '__builtin_trunc' 'double (double) noexcept'
|             `-DeclRefExpr 0xa90058 <col:30> '_Tp' lvalue ParmVar 0xa8fb00 '__x' '_Tp'
|-LinkageSpecDecl 0xa22348 <line:88:12> col:12 implicit C
| `-FunctionDecl 0xa22398 <col:12> col:12 implicit used __builtin_acosf 'float (float) noexcept' extern
|   |-ParmVarDecl 0xa22438 <<invalid sloc>> <invalid sloc> 'float'
|   `-NoThrowAttr 0xa224a8 <col:12> Implicit
|-LinkageSpecDecl 0xa22718 <line:92:12> col:12 implicit C
| `-FunctionDecl 0xa22768 <col:12> col:12 implicit used __builtin_acosl 'long double (long double) noexcept' extern
|   |-ParmVarDecl 0xa22808 <<invalid sloc>> <invalid sloc> 'long double'
|   `-NoThrowAttr 0xa22878 <col:12> Implicit
|-LinkageSpecDecl 0xa22f78 <line:100:14> col:14 implicit C
| `-FunctionDecl 0xa22fc8 <col:14> col:14 implicit referenced __builtin_acos 'double (double) noexcept' extern
|   |-ParmVarDecl 0xa23068 <<invalid sloc>> <invalid sloc> 'double'
|   `-NoThrowAttr 0xa230d8 <col:14> Implicit
|-LinkageSpecDecl 0xa233c8 <line:107:12> col:12 implicit C
| `-FunctionDecl 0xa23418 <col:12> col:12 implicit used __builtin_asinf 'float (float) noexcept' extern
|   |-ParmVarDecl 0xa234b8 <<invalid sloc>> <invalid sloc> 'float'
|   `-NoThrowAttr 0xa23528 <col:12> Implicit
|-LinkageSpecDecl 0xa23798 <line:111:12> col:12 implicit C
| `-FunctionDecl 0xa237e8 <col:12> col:12 implicit used __builtin_asinl 'long double (long double) noexcept' extern
|   |-ParmVarDecl 0xa23888 <<invalid sloc>> <invalid sloc> 'long double'
|   `-NoThrowAttr 0xa238f8 <col:12> Implicit
|-LinkageSpecDecl 0xa24f28 <line:119:14> col:14 implicit C
| `-FunctionDecl 0xa24f78 <col:14> col:14 implicit referenced __builtin_asin 'double (double) noexcept' extern
|   |-ParmVarDecl 0xa25018 <<invalid sloc>> <invalid sloc> 'double'
|   `-NoThrowAttr 0xa25088 <col:14> Implicit
|-LinkageSpecDecl 0xa25378 <line:126:12> col:12 implicit C
| `-FunctionDecl 0xa253c8 <col:12> col:12 implicit used __builtin_atanf 'float (float) noexcept' extern
|   |-ParmVarDecl 0xa25468 <<invalid sloc>> <invalid sloc> 'float'
|   `-NoThrowAttr 0xa254d8 <col:12> Implicit
|-LinkageSpecDecl 0xa25748 <line:130:12> col:12 implicit C
| `-FunctionDecl 0xa25798 <col:12> col:12 implicit used __builtin_atanl 'long double (long double) noexcept' extern
|   |-ParmVarDecl 0xa25838 <<invalid sloc>> <invalid sloc> 'long double'
|   `-NoThrowAttr 0xa258a8 <col:12> Implicit
|-LinkageSpecDecl 0xa25ea8 <line:138:14> col:14 implicit C
| `-FunctionDecl 0xa25ef8 <col:14> col:14 implicit referenced __builtin_atan 'double (double) noexcept' extern
|   |-ParmVarDecl 0xa25f98 <<invalid sloc>> <invalid sloc> 'double'
|   `-NoThrowAttr 0xa26008 <col:14> Implicit
|-LinkageSpecDecl 0xa26388 <line:145:12> col:12 implicit C
| `-FunctionDecl 0xa263d8 <col:12> col:12 implicit used __builtin_atan2f 'float (float, float) noexcept' extern
|   |-ParmVarDecl 0xa26478 <<invalid sloc>> <invalid sloc> 'float'
|   |-ParmVarDecl 0xa264e0 <<invalid sloc>> <invalid sloc> 'float'
|   `-NoThrowAttr 0xa26558 <col:12> Implicit
|-LinkageSpecDecl 0xa268f0 <line:149:12> col:12 implicit C
| `-FunctionDecl 0xa26940 <col:12> col:12 implicit used __builtin_atan2l 'long double (long double, long double) noexcept' extern
|   |-ParmVarDecl 0xa269e0 <<invalid sloc>> <invalid sloc> 'long double'
|   |-ParmVarDecl 0xa26a48 <<invalid sloc>> <invalid sloc> 'long double'
|   `-NoThrowAttr 0xa26ac0 <col:12> Implicit
|-LinkageSpecDecl 0x91a618 <line:166:12> col:12 implicit C
| `-FunctionDecl 0x91a668 <col:12> col:12 implicit used __builtin_ceilf 'float (float) noexcept' extern
|   |-ParmVarDecl 0x91a708 <<invalid sloc>> <invalid sloc> 'float'
|   |-NoThrowAttr 0x91a778 <col:12> Implicit
|   `-ConstAttr 0x91a7d0 <col:12> Implicit
|-LinkageSpecDecl 0x91aa10 <line:170:12> col:12 implicit C
| `-FunctionDecl 0x91aa60 <col:12> col:12 implicit used __builtin_ceill 'long double (long double) noexcept' extern
|   |-ParmVarDecl 0x91ab00 <<invalid sloc>> <invalid sloc> 'long double'
|   |-NoThrowAttr 0x91ab70 <col:12> Implicit
|   `-ConstAttr 0x91abc8 <col:12> Implicit
|-LinkageSpecDecl 0x91b198 <line:178:14> col:14 implicit C
| `-FunctionDecl 0x91b1e8 <col:14> col:14 implicit referenced __builtin_ceil 'double (double) noexcept' extern
|   |-ParmVarDecl 0x91b288 <<invalid sloc>> <invalid sloc> 'double'
|   |-NoThrowAttr 0x91b2f8 <col:14> Implicit
|   `-ConstAttr 0x91b350 <col:14> Implicit
|-LinkageSpecDecl 0x962dc8 <line:185:12> col:12 implicit C
| `-FunctionDecl 0x962e18 <col:12> col:12 implicit used __builtin_cosf 'float (float) noexcept' extern
|   |-ParmVarDecl 0x962eb8 <<invalid sloc>> <invalid sloc> 'float'
|   `-NoThrowAttr 0x962f28 <col:12> Implicit
|-LinkageSpecDecl 0x963198 <line:189:12> col:12 implicit C
| `-FunctionDecl 0x9631e8 <col:12> col:12 implicit used __builtin_cosl 'long double (long double) noexcept' extern
|   |-ParmVarDecl 0x963288 <<invalid sloc>> <invalid sloc> 'long double'
|   `-NoThrowAttr 0x9632f8 <col:12> Implicit
|-LinkageSpecDecl 0x9638f8 <line:197:14> col:14 implicit C
| `-FunctionDecl 0x963948 <col:14> col:14 implicit referenced __builtin_cos 'double (double) noexcept' extern
|   |-ParmVarDecl 0x9639e8 <<invalid sloc>> <invalid sloc> 'double'
|   `-NoThrowAttr 0x963a58 <col:14> Implicit
|-LinkageSpecDecl 0x963d48 <line:204:12> col:12 implicit C
| `-FunctionDecl 0x963d98 <col:12> col:12 implicit used __builtin_coshf 'float (float) noexcept' extern
|   |-ParmVarDecl 0x963e38 <<invalid sloc>> <invalid sloc> 'float'
|   `-NoThrowAttr 0x963ea8 <col:12> Implicit
|-LinkageSpecDecl 0x964118 <line:208:12> col:12 implicit C
| `-FunctionDecl 0x964168 <col:12> col:12 implicit used __builtin_coshl 'long double (long double) noexcept' extern
|   |-ParmVarDecl 0x964208 <<invalid sloc>> <invalid sloc> 'long double'
|   `-NoThrowAttr 0x964278 <col:12> Implicit
|-LinkageSpecDecl 0x964878 <line:216:14> col:14 implicit C
| `-FunctionDecl 0x9648c8 <col:14> col:14 implicit referenced __builtin_cosh 'double (double) noexcept' extern
|   |-ParmVarDecl 0x964968 <<invalid sloc>> <invalid sloc> 'double'
|   `-NoThrowAttr 0x9649d8 <col:14> Implicit
|-LinkageSpecDecl 0x964d08 <line:223:12> col:12 implicit C
| `-FunctionDecl 0x964d58 <col:12> col:12 implicit used __builtin_expf 'float (float) noexcept' extern
|   |-ParmVarDecl 0x964df8 <<invalid sloc>> <invalid sloc> 'float'
|   `-NoThrowAttr 0x964e68 <col:12> Implicit
|-LinkageSpecDecl 0x9650d8 <line:227:12> col:12 implicit C
| `-FunctionDecl 0x965128 <col:12> col:12 implicit used __builtin_expl 'long double (long double) noexcept' extern
|   |-ParmVarDecl 0x9651c8 <<invalid sloc>> <invalid sloc> 'long double'
|   `-NoThrowAttr 0x965238 <col:12> Implicit
|-LinkageSpecDecl 0x965838 <line:235:14> col:14 implicit C
| `-FunctionDecl 0x965888 <col:14> col:14 implicit referenced __builtin_exp 'double (double) noexcept' extern
|   |-ParmVarDecl 0x965928 <<invalid sloc>> <invalid sloc> 'double'
|   `-NoThrowAttr 0x965998 <col:14> Implicit
|-LinkageSpecDecl 0x9666e0 <line:261:12> col:12 implicit C
| `-FunctionDecl 0x966730 <col:12> col:12 implicit used __builtin_floorf 'float (float) noexcept' extern
|   |-ParmVarDecl 0x9667d0 <<invalid sloc>> <invalid sloc> 'float'
|   |-NoThrowAttr 0x966840 <col:12> Implicit
|   `-ConstAttr 0x966898 <col:12> Implicit
|-LinkageSpecDecl 0x966ad8 <line:265:12> col:12 implicit C
| `-FunctionDecl 0x966b70 <col:12> col:12 implicit used __builtin_floorl 'long double (long double) noexcept' extern
|   |-ParmVarDecl 0x966c10 <<invalid sloc>> <invalid sloc> 'long double'
|   |-NoThrowAttr 0x966c80 <col:12> Implicit
|   `-ConstAttr 0x966cd8 <col:12> Implicit
|-LinkageSpecDecl 0x9672a8 <line:273:14> col:14 implicit C
| `-FunctionDecl 0x9672f8 <col:14> col:14 implicit referenced __builtin_floor 'double (double) noexcept' extern
|   |-ParmVarDecl 0x967398 <<invalid sloc>> <invalid sloc> 'double'
|   |-NoThrowAttr 0x967408 <col:14> Implicit
|   `-ConstAttr 0x967460 <col:14> Implicit
|-LinkageSpecDecl 0x9677b0 <line:280:12> col:12 implicit C
| `-FunctionDecl 0x967800 <col:12> col:12 implicit used __builtin_fmodf 'float (float, float) noexcept' extern
|   |-ParmVarDecl 0x9678a0 <<invalid sloc>> <invalid sloc> 'float'
|   |-ParmVarDecl 0x967908 <<invalid sloc>> <invalid sloc> 'float'
|   `-NoThrowAttr 0x967980 <col:12> Implicit
|-LinkageSpecDecl 0x967cc0 <line:284:12> col:12 implicit C
| `-FunctionDecl 0x967d10 <col:12> col:12 implicit used __builtin_fmodl 'long double (long double, long double) noexcept' extern
|   |-ParmVarDecl 0x967db0 <<invalid sloc>> <invalid sloc> 'long double'
|   |-ParmVarDecl 0x967e18 <<invalid sloc>> <invalid sloc> 'long double'
|   `-NoThrowAttr 0x967e90 <col:12> Implicit
|-LinkageSpecDecl 0xa3f568 <line:301:12> col:12 implicit C
| `-FunctionDecl 0xa3f5b8 <col:12> col:12 implicit used __builtin_frexpf 'float (float, int *) noexcept' extern
|   |-ParmVarDecl 0xa3f658 <<invalid sloc>> <invalid sloc> 'float'
|   |-ParmVarDecl 0xa3f6c0 <<invalid sloc>> <invalid sloc> 'int *'
|   `-NoThrowAttr 0xa3f738 <col:12> Implicit
|-LinkageSpecDecl 0xa3fb00 <line:305:12> col:12 implicit C
| `-FunctionDecl 0xa3fb50 <col:12> col:12 implicit used __builtin_frexpl 'long double (long double, int *) noexcept' extern
|   |-ParmVarDecl 0xa3fbf0 <<invalid sloc>> <invalid sloc> 'long double'
|   |-ParmVarDecl 0xa3fc58 <<invalid sloc>> <invalid sloc> 'int *'
|   `-NoThrowAttr 0xa3fcd0 <col:12> Implicit
|-LinkageSpecDecl 0xa40480 <line:313:14> col:14 implicit C
| `-FunctionDecl 0xa404d0 <col:14> col:14 implicit referenced __builtin_frexp 'double (double, int *) noexcept' extern
|   |-ParmVarDecl 0xa40570 <<invalid sloc>> <invalid sloc> 'double'
|   |-ParmVarDecl 0xa405d8 <<invalid sloc>> <invalid sloc> 'int *'
|   `-NoThrowAttr 0xa40650 <col:14> Implicit
|-LinkageSpecDecl 0xa409f8 <line:320:12> col:12 implicit C
| `-FunctionDecl 0xa40a48 <col:12> col:12 implicit used __builtin_ldexpf 'float (float, int) noexcept' extern
|   |-ParmVarDecl 0xa40ae8 <<invalid sloc>> <invalid sloc> 'float'
|   |-ParmVarDecl 0xa40b50 <<invalid sloc>> <invalid sloc> 'int'
|   `-NoThrowAttr 0xa40bc8 <col:12> Implicit
|-LinkageSpecDecl 0xa40f80 <line:324:12> col:12 implicit C
| `-FunctionDecl 0xa40fd0 <col:12> col:12 implicit used __builtin_ldexpl 'long double (long double, int) noexcept' extern
|   |-ParmVarDecl 0xa41070 <<invalid sloc>> <invalid sloc> 'long double'
|   |-ParmVarDecl 0xa410d8 <<invalid sloc>> <invalid sloc> 'int'
|   `-NoThrowAttr 0xa41150 <col:12> Implicit
|-LinkageSpecDecl 0xa418d0 <line:332:14> col:14 implicit C
| `-FunctionDecl 0xa41920 <col:14> col:14 implicit referenced __builtin_ldexp 'double (double, int) noexcept' extern
|   |-ParmVarDecl 0xa419c0 <<invalid sloc>> <invalid sloc> 'double'
|   |-ParmVarDecl 0xa41a28 <<invalid sloc>> <invalid sloc> 'int'
|   `-NoThrowAttr 0xa41aa0 <col:14> Implicit
|-LinkageSpecDecl 0xa41db8 <line:339:12> col:12 implicit C
| `-FunctionDecl 0xa41e08 <col:12> col:12 implicit used __builtin_logf 'float (float) noexcept' extern
|   |-ParmVarDecl 0xa41ea8 <<invalid sloc>> <invalid sloc> 'float'
|   `-NoThrowAttr 0xa41f18 <col:12> Implicit
|-LinkageSpecDecl 0xa42188 <line:343:12> col:12 implicit C
| `-FunctionDecl 0xa421d8 <col:12> col:12 implicit used __builtin_logl 'long double (long double) noexcept' extern
|   |-ParmVarDecl 0xa42278 <<invalid sloc>> <invalid sloc> 'long double'
|   `-NoThrowAttr 0xa422e8 <col:12> Implicit
|-LinkageSpecDecl 0xa428e8 <line:351:14> col:14 implicit C
| `-FunctionDecl 0xa42938 <col:14> col:14 implicit referenced __builtin_log 'double (double) noexcept' extern
|   |-ParmVarDecl 0xa429d8 <<invalid sloc>> <invalid sloc> 'double'
|   `-NoThrowAttr 0xa42a48 <col:14> Implicit
|-LinkageSpecDecl 0xa42d38 <line:358:12> col:12 implicit C
| `-FunctionDecl 0xa42d88 <col:12> col:12 implicit used __builtin_log10f 'float (float) noexcept' extern
|   |-ParmVarDecl 0xa42e40 <<invalid sloc>> <invalid sloc> 'float'
|   `-NoThrowAttr 0xa42eb0 <col:12> Implicit
|-LinkageSpecDecl 0xa43120 <line:362:12> col:12 implicit C
| `-FunctionDecl 0xa43170 <col:12> col:12 implicit used __builtin_log10l 'long double (long double) noexcept' extern
|   |-ParmVarDecl 0xa43210 <<invalid sloc>> <invalid sloc> 'long double'
|   `-NoThrowAttr 0xa43280 <col:12> Implicit
|-LinkageSpecDecl 0xa43888 <line:370:14> col:14 implicit C
| `-FunctionDecl 0xa438d8 <col:14> col:14 implicit referenced __builtin_log10 'double (double) noexcept' extern
|   |-ParmVarDecl 0xa43978 <<invalid sloc>> <invalid sloc> 'double'
|   `-NoThrowAttr 0xa439e8 <col:14> Implicit
|-LinkageSpecDecl 0xa43d68 <line:377:12> col:12 implicit C
| `-FunctionDecl 0xa43db8 <col:12> col:12 implicit used __builtin_modff 'float (float, float *) noexcept' extern
|   |-ParmVarDecl 0xa43e58 <<invalid sloc>> <invalid sloc> 'float'
|   |-ParmVarDecl 0xa43ec0 <<invalid sloc>> <invalid sloc> 'float *'
|   `-NoThrowAttr 0xa43f38 <col:12> Implicit
|-LinkageSpecDecl 0xa44300 <line:381:12> col:12 implicit C
| `-FunctionDecl 0xa44350 <col:12> col:12 implicit used __builtin_modfl 'long double (long double, long double *) noexcept' extern
|   |-ParmVarDecl 0xa443f0 <<invalid sloc>> <invalid sloc> 'long double'
|   |-ParmVarDecl 0xa44458 <<invalid sloc>> <invalid sloc> 'long double *'
|   `-NoThrowAttr 0xa444d0 <col:12> Implicit
|-LinkageSpecDecl 0xa44950 <line:389:12> col:12 implicit C
| `-FunctionDecl 0xa449a0 <col:12> col:12 implicit used __builtin_powf 'float (float, float) noexcept' extern
|   |-ParmVarDecl 0xa44a40 <<invalid sloc>> <invalid sloc> 'float'
|   |-ParmVarDecl 0xa44aa8 <<invalid sloc>> <invalid sloc> 'float'
|   `-NoThrowAttr 0xa44b20 <col:12> Implicit
|-LinkageSpecDecl 0xa44f00 <line:393:12> col:12 implicit C
| `-FunctionDecl 0xa44f50 <col:12> col:12 implicit used __builtin_powl 'long double (long double, long double) noexcept' extern
|   |-ParmVarDecl 0xa44ff0 <<invalid sloc>> <invalid sloc> 'long double'
|   |-ParmVarDecl 0xa45058 <<invalid sloc>> <invalid sloc> 'long double'
|   `-NoThrowAttr 0xa450d0 <col:12> Implicit
|-LinkageSpecDecl 0xa46468 <line:426:12> col:12 implicit C
| `-FunctionDecl 0xa464b8 <col:12> col:12 implicit used __builtin_sinf 'float (float) noexcept' extern
|   |-ParmVarDecl 0xa46558 <<invalid sloc>> <invalid sloc> 'float'
|   `-NoThrowAttr 0xa465c8 <col:12> Implicit
|-LinkageSpecDecl 0xa46838 <line:430:12> col:12 implicit C
| `-FunctionDecl 0xa46888 <col:12> col:12 implicit used __builtin_sinl 'long double (long double) noexcept' extern
|   |-ParmVarDecl 0xa46928 <<invalid sloc>> <invalid sloc> 'long double'
|   `-NoThrowAttr 0xa46998 <col:12> Implicit
|-LinkageSpecDecl 0xa46fc8 <line:438:14> col:14 implicit C
| `-FunctionDecl 0xa47018 <col:14> col:14 implicit referenced __builtin_sin 'double (double) noexcept' extern
|   |-ParmVarDecl 0xa470b8 <<invalid sloc>> <invalid sloc> 'double'
|   `-NoThrowAttr 0xa47128 <col:14> Implicit
|-LinkageSpecDecl 0xa47418 <line:445:12> col:12 implicit C
| `-FunctionDecl 0xa47468 <col:12> col:12 implicit used __builtin_sinhf 'float (float) noexcept' extern
|   |-ParmVarDecl 0xa47508 <<invalid sloc>> <invalid sloc> 'float'
|   `-NoThrowAttr 0xa47578 <col:12> Implicit
|-LinkageSpecDecl 0xa477e8 <line:449:12> col:12 implicit C
| `-FunctionDecl 0xa47838 <col:12> col:12 implicit used __builtin_sinhl 'long double (long double) noexcept' extern
|   |-ParmVarDecl 0xa478d8 <<invalid sloc>> <invalid sloc> 'long double'
|   `-NoThrowAttr 0xa47948 <col:12> Implicit
|-LinkageSpecDecl 0xa47f48 <line:457:14> col:14 implicit C
| `-FunctionDecl 0xa47f98 <col:14> col:14 implicit referenced __builtin_sinh 'double (double) noexcept' extern
|   |-ParmVarDecl 0xa48038 <<invalid sloc>> <invalid sloc> 'double'
|   `-NoThrowAttr 0xa480a8 <col:14> Implicit
|-LinkageSpecDecl 0xa48398 <line:464:12> col:12 implicit C
| `-FunctionDecl 0xa483e8 <col:12> col:12 implicit used __builtin_sqrtf 'float (float) noexcept' extern
|   |-ParmVarDecl 0xa48488 <<invalid sloc>> <invalid sloc> 'float'
|   `-NoThrowAttr 0xa484f8 <col:12> Implicit
|-LinkageSpecDecl 0xa48768 <line:468:12> col:12 implicit C
| `-FunctionDecl 0xa487b8 <col:12> col:12 implicit used __builtin_sqrtl 'long double (long double) noexcept' extern
|   |-ParmVarDecl 0xa48858 <<invalid sloc>> <invalid sloc> 'long double'
|   `-NoThrowAttr 0xa488c8 <col:12> Implicit
|-LinkageSpecDecl 0xa48f70 <line:476:14> col:14 implicit C
| `-FunctionDecl 0xa48fc0 <col:14> col:14 implicit referenced __builtin_sqrt 'double (double) noexcept' extern
|   |-ParmVarDecl 0xa49060 <<invalid sloc>> <invalid sloc> 'double'
|   `-NoThrowAttr 0xa490d0 <col:14> Implicit
|-LinkageSpecDecl 0xa493c0 <line:483:12> col:12 implicit C
| `-FunctionDecl 0xa49410 <col:12> col:12 implicit used __builtin_tanf 'float (float) noexcept' extern
|   |-ParmVarDecl 0xa494b0 <<invalid sloc>> <invalid sloc> 'float'
|   `-NoThrowAttr 0xa49520 <col:12> Implicit
|-LinkageSpecDecl 0xa49790 <line:487:12> col:12 implicit C
| `-FunctionDecl 0xa497e0 <col:12> col:12 implicit used __builtin_tanl 'long double (long double) noexcept' extern
|   |-ParmVarDecl 0xa49880 <<invalid sloc>> <invalid sloc> 'long double'
|   `-NoThrowAttr 0xa498f0 <col:12> Implicit
|-LinkageSpecDecl 0xa49ef8 <line:495:14> col:14 implicit C
| `-FunctionDecl 0xa49f48 <col:14> col:14 implicit referenced __builtin_tan 'double (double) noexcept' extern
|   |-ParmVarDecl 0xa49fe8 <<invalid sloc>> <invalid sloc> 'double'
|   `-NoThrowAttr 0xa4a058 <col:14> Implicit
|-LinkageSpecDecl 0xa4a348 <line:502:12> col:12 implicit C
| `-FunctionDecl 0xa4a398 <col:12> col:12 implicit used __builtin_tanhf 'float (float) noexcept' extern
|   |-ParmVarDecl 0xa4a438 <<invalid sloc>> <invalid sloc> 'float'
|   `-NoThrowAttr 0xa4a4a8 <col:12> Implicit
|-LinkageSpecDecl 0xa4a718 <line:506:12> col:12 implicit C
| `-FunctionDecl 0xa4a768 <col:12> col:12 implicit used __builtin_tanhl 'long double (long double) noexcept' extern
|   |-ParmVarDecl 0xa4a808 <<invalid sloc>> <invalid sloc> 'long double'
|   `-NoThrowAttr 0xa4a878 <col:12> Implicit
|-LinkageSpecDecl 0xa4ae88 <line:514:14> col:14 implicit C
| `-FunctionDecl 0xa4aed8 <col:14> col:14 implicit referenced __builtin_tanh 'double (double) noexcept' extern
|   |-ParmVarDecl 0xa4af78 <<invalid sloc>> <invalid sloc> 'double'
|   `-NoThrowAttr 0xa4afe8 <col:14> Implicit
|-LinkageSpecDecl 0xa4b2e8 <line:538:12> col:12 implicit C
| `-FunctionDecl 0xa4b338 <col:12> col:12 implicit used __builtin_fpclassify 'int (int, int, int, int, int, ...) noexcept' extern
|   |-ParmVarDecl 0xa4b3d8 <<invalid sloc>> <invalid sloc> 'int'
|   |-ParmVarDecl 0xa4b440 <<invalid sloc>> <invalid sloc> 'int'
|   |-ParmVarDecl 0xa4b4a8 <<invalid sloc>> <invalid sloc> 'int'
|   |-ParmVarDecl 0xa4b510 <<invalid sloc>> <invalid sloc> 'int'
|   |-ParmVarDecl 0xa4b578 <<invalid sloc>> <invalid sloc> 'int'
|   |-NoThrowAttr 0xa4b608 <col:12> Implicit
|   `-ConstAttr 0xa4b660 <col:12> Implicit
|-LinkageSpecDecl 0xa4c6c0 <line:563:12> col:12 implicit C
| `-FunctionDecl 0xa4c710 <col:12> col:12 implicit used __builtin_isfinite 'int (...) noexcept' extern
|   |-NoThrowAttr 0xa4c7b0 <col:12> Implicit
|   `-ConstAttr 0xa4c808 <col:12> Implicit
|-LinkageSpecDecl 0xa4d580 <line:585:12> col:12 implicit C
| `-FunctionDecl 0xa4d5d0 <col:12> col:12 implicit used __builtin_isinf 'int (...) noexcept' extern
|   |-NoThrowAttr 0xa4d670 <col:12> Implicit
|   `-ConstAttr 0xa4d6c8 <col:12> Implicit
|-LinkageSpecDecl 0xa4e290 <line:612:12> col:12 implicit C
| `-FunctionDecl 0xa4e2e0 <col:12> col:12 implicit used __builtin_isnan 'int (...) noexcept' extern
|   |-NoThrowAttr 0xa4e380 <col:12> Implicit
|   `-ConstAttr 0xa4e3d8 <col:12> Implicit
|-LinkageSpecDecl 0xa4efd8 <line:639:12> col:12 implicit C
| `-FunctionDecl 0xa4f028 <col:12> col:12 implicit used __builtin_isnormal 'int (...) noexcept' extern
|   |-NoThrowAttr 0xa4f0c8 <col:12> Implicit
|   `-ConstAttr 0xa4f120 <col:12> Implicit
|-LinkageSpecDecl 0xa4fd80 <line:662:12> col:12 implicit C
| `-FunctionDecl 0xa4fdd0 <col:12> col:12 implicit used __builtin_signbit 'int (...) noexcept' extern
|   |-NoThrowAttr 0xa4fe70 <col:12> Implicit
|   `-ConstAttr 0xa4fec8 <col:12> Implicit
|-LinkageSpecDecl 0xa50bf8 <line:684:12> col:12 implicit C
| `-FunctionDecl 0xa50c48 <col:12> col:12 implicit used __builtin_isgreater 'int (...) noexcept' extern
|   |-NoThrowAttr 0xa50ce8 <col:12> Implicit
|   `-ConstAttr 0xa50d40 <col:12> Implicit
|-LinkageSpecDecl 0xa52670 <line:710:12> col:12 implicit C
| `-FunctionDecl 0xa526c0 <col:12> col:12 implicit used __builtin_isgreaterequal 'int (...) noexcept' extern
|   |-NoThrowAttr 0xa52760 <col:12> Implicit
|   `-ConstAttr 0xa527b8 <col:12> Implicit
|-LinkageSpecDecl 0xa53f20 <line:736:12> col:12 implicit C
| `-FunctionDecl 0xa53f70 <col:12> col:12 implicit used __builtin_isless 'int (...) noexcept' extern
|   |-NoThrowAttr 0xa54010 <col:12> Implicit
|   `-ConstAttr 0xa54068 <col:12> Implicit
|-LinkageSpecDecl 0xa557d0 <line:762:12> col:12 implicit C
| `-FunctionDecl 0xa55820 <col:12> col:12 implicit used __builtin_islessequal 'int (...) noexcept' extern
|   |-NoThrowAttr 0xa558c0 <col:12> Implicit
|   `-ConstAttr 0xa55918 <col:12> Implicit
|-LinkageSpecDecl 0xa580b8 <line:788:12> col:12 implicit C
| `-FunctionDecl 0xa58108 <col:12> col:12 implicit used __builtin_islessgreater 'int (...) noexcept' extern
|   |-NoThrowAttr 0xa581a8 <col:12> Implicit
|   `-ConstAttr 0xa58200 <col:12> Implicit
|-LinkageSpecDecl 0xa59950 <line:814:12> col:12 implicit C
| `-FunctionDecl 0xa599a0 <col:12> col:12 implicit used __builtin_isunordered 'int (...) noexcept' extern
|   |-NoThrowAttr 0xa59a40 <col:12> Implicit
|   `-ConstAttr 0xa59a98 <col:12> Implicit
|-LinkageSpecDecl 0xa61e40 <line:1215:12> col:12 implicit C
| `-FunctionDecl 0xa61e90 <col:12> col:12 implicit used __builtin_acoshf 'float (float) noexcept' extern
|   |-ParmVarDecl 0xa61f30 <<invalid sloc>> <invalid sloc> 'float'
|   `-NoThrowAttr 0xa61fa0 <col:12> Implicit
|-LinkageSpecDecl 0xa63340 <line:1219:12> col:12 implicit C
| `-FunctionDecl 0xa63390 <col:12> col:12 implicit used __builtin_acoshl 'long double (long double) noexcept' extern
|   |-ParmVarDecl 0xa63430 <<invalid sloc>> <invalid sloc> 'long double'
|   `-NoThrowAttr 0xa634a0 <col:12> Implicit
|-LinkageSpecDecl 0xa63aa8 <line:1227:14> col:14 implicit C
| `-FunctionDecl 0xa63af8 <col:14> col:14 implicit referenced __builtin_acosh 'double (double) noexcept' extern
|   |-ParmVarDecl 0xa63b98 <<invalid sloc>> <invalid sloc> 'double'
|   `-NoThrowAttr 0xa63c08 <col:14> Implicit
|-LinkageSpecDecl 0xa63e48 <line:1233:12> col:12 implicit C
| `-FunctionDecl 0xa63e98 <col:12> col:12 implicit used __builtin_asinhf 'float (float) noexcept' extern
|   |-ParmVarDecl 0xa63f38 <<invalid sloc>> <invalid sloc> 'float'
|   `-NoThrowAttr 0xa63fa8 <col:12> Implicit
|-LinkageSpecDecl 0xa64218 <line:1237:12> col:12 implicit C
| `-FunctionDecl 0xa64268 <col:12> col:12 implicit used __builtin_asinhl 'long double (long double) noexcept' extern
|   |-ParmVarDecl 0xa64308 <<invalid sloc>> <invalid sloc> 'long double'
|   `-NoThrowAttr 0xa64378 <col:12> Implicit
|-LinkageSpecDecl 0xa64978 <line:1245:14> col:14 implicit C
| `-FunctionDecl 0xa649c8 <col:14> col:14 implicit referenced __builtin_asinh 'double (double) noexcept' extern
|   |-ParmVarDecl 0xa64a68 <<invalid sloc>> <invalid sloc> 'double'
|   `-NoThrowAttr 0xa64ad8 <col:14> Implicit
|-LinkageSpecDecl 0xa64d18 <line:1251:12> col:12 implicit C
| `-FunctionDecl 0xa64d68 <col:12> col:12 implicit used __builtin_atanhf 'float (float) noexcept' extern
|   |-ParmVarDecl 0xa64e08 <<invalid sloc>> <invalid sloc> 'float'
|   `-NoThrowAttr 0xa64e78 <col:12> Implicit
|-LinkageSpecDecl 0xa650e8 <line:1255:12> col:12 implicit C
| `-FunctionDecl 0xa65138 <col:12> col:12 implicit used __builtin_atanhl 'long double (long double) noexcept' extern
|   |-ParmVarDecl 0xa651d8 <<invalid sloc>> <invalid sloc> 'long double'
|   `-NoThrowAttr 0xa65248 <col:12> Implicit
|-LinkageSpecDecl 0xa659a8 <line:1263:14> col:14 implicit C
| `-FunctionDecl 0xa659f8 <col:14> col:14 implicit referenced __builtin_atanh 'double (double) noexcept' extern
|   |-ParmVarDecl 0xa65a98 <<invalid sloc>> <invalid sloc> 'double'
|   `-NoThrowAttr 0xa65b08 <col:14> Implicit
|-LinkageSpecDecl 0xa65d48 <line:1269:12> col:12 implicit C
| `-FunctionDecl 0xa65d98 <col:12> col:12 implicit used __builtin_cbrtf 'float (float) noexcept' extern
|   |-ParmVarDecl 0xa65e38 <<invalid sloc>> <invalid sloc> 'float'
|   |-NoThrowAttr 0xa65ea8 <col:12> Implicit
|   `-ConstAttr 0xa65f00 <col:12> Implicit
|-LinkageSpecDecl 0xa66140 <line:1273:12> col:12 implicit C
| `-FunctionDecl 0xa66190 <col:12> col:12 implicit used __builtin_cbrtl 'long double (long double) noexcept' extern
|   |-ParmVarDecl 0xa66230 <<invalid sloc>> <invalid sloc> 'long double'
|   |-NoThrowAttr 0xa662a0 <col:12> Implicit
|   `-ConstAttr 0xa662f8 <col:12> Implicit
|-LinkageSpecDecl 0xa668c8 <line:1281:14> col:14 implicit C
| `-FunctionDecl 0xa66918 <col:14> col:14 implicit referenced __builtin_cbrt 'double (double) noexcept' extern
|   |-ParmVarDecl 0xa669b8 <<invalid sloc>> <invalid sloc> 'double'
|   |-NoThrowAttr 0xa66a28 <col:14> Implicit
|   `-ConstAttr 0xa66a80 <col:14> Implicit
|-LinkageSpecDecl 0xa66d20 <line:1287:12> col:12 implicit C
| `-FunctionDecl 0xa66d70 <col:12> col:12 implicit used __builtin_copysignf 'float (float, float) noexcept' extern
|   |-ParmVarDecl 0xa66e10 <<invalid sloc>> <invalid sloc> 'float'
|   |-ParmVarDecl 0xa66e78 <<invalid sloc>> <invalid sloc> 'float'
|   |-NoThrowAttr 0xa66ef0 <col:12> Implicit
|   `-ConstAttr 0xa66f48 <col:12> Implicit
|-LinkageSpecDecl 0xa67258 <line:1291:12> col:12 implicit C
| `-FunctionDecl 0xa672a8 <col:12> col:12 implicit used __builtin_copysignl 'long double (long double, long double) noexcept' extern
|   |-ParmVarDecl 0xa67348 <<invalid sloc>> <invalid sloc> 'long double'
|   |-ParmVarDecl 0xa673b0 <<invalid sloc>> <invalid sloc> 'long double'
|   |-NoThrowAttr 0xa67428 <col:12> Implicit
|   `-ConstAttr 0xa69610 <col:12> Implicit
|-LinkageSpecDecl 0xa6a8c8 <line:1307:12> col:12 implicit C
| `-FunctionDecl 0xa6a918 <col:12> col:12 implicit used __builtin_erff 'float (float) noexcept' extern
|   |-ParmVarDecl 0xa6a9b8 <<invalid sloc>> <invalid sloc> 'float'
|   `-NoThrowAttr 0xa6aa28 <col:12> Implicit
|-LinkageSpecDecl 0xa6ac98 <line:1311:12> col:12 implicit C
| `-FunctionDecl 0xa6ace8 <col:12> col:12 implicit used __builtin_erfl 'long double (long double) noexcept' extern
|   |-ParmVarDecl 0xa6ad88 <<invalid sloc>> <invalid sloc> 'long double'
|   `-NoThrowAttr 0xa6adf8 <col:12> Implicit
|-LinkageSpecDecl 0xa6b3f8 <line:1319:14> col:14 implicit C
| `-FunctionDecl 0xa6b448 <col:14> col:14 implicit referenced __builtin_erf 'double (double) noexcept' extern
|   |-ParmVarDecl 0xa6b4e8 <<invalid sloc>> <invalid sloc> 'double'
|   `-NoThrowAttr 0xa6b558 <col:14> Implicit
|-LinkageSpecDecl 0xa6b7c8 <line:1325:12> col:12 implicit C
| `-FunctionDecl 0xa6b818 <col:12> col:12 implicit used __builtin_erfcf 'float (float) noexcept' extern
|   |-ParmVarDecl 0xa6b8b8 <<invalid sloc>> <invalid sloc> 'float'
|   `-NoThrowAttr 0xa6b928 <col:12> Implicit
|-LinkageSpecDecl 0xa6bb98 <line:1329:12> col:12 implicit C
| `-FunctionDecl 0xa6bbe8 <col:12> col:12 implicit used __builtin_erfcl 'long double (long double) noexcept' extern
|   |-ParmVarDecl 0xa6bc88 <<invalid sloc>> <invalid sloc> 'long double'
|   `-NoThrowAttr 0xa6bcf8 <col:12> Implicit
|-LinkageSpecDecl 0xa6c2f8 <line:1337:14> col:14 implicit C
| `-FunctionDecl 0xa6c348 <col:14> col:14 implicit referenced __builtin_erfc 'double (double) noexcept' extern
|   |-ParmVarDecl 0xa6c3e8 <<invalid sloc>> <invalid sloc> 'double'
|   `-NoThrowAttr 0xa6c458 <col:14> Implicit
|-LinkageSpecDecl 0xa6c698 <line:1343:12> col:12 implicit C
| `-FunctionDecl 0xa6c6e8 <col:12> col:12 implicit used __builtin_exp2f 'float (float) noexcept' extern
|   |-ParmVarDecl 0xa6c788 <<invalid sloc>> <invalid sloc> 'float'
|   `-NoThrowAttr 0xa6c7f8 <col:12> Implicit
|-LinkageSpecDecl 0xa6ca68 <line:1347:12> col:12 implicit C
| `-FunctionDecl 0xa6cab8 <col:12> col:12 implicit used __builtin_exp2l 'long double (long double) noexcept' extern
|   |-ParmVarDecl 0xa6cb58 <<invalid sloc>> <invalid sloc> 'long double'
|   `-NoThrowAttr 0xa6cbc8 <col:12> Implicit
|-LinkageSpecDecl 0xa6d1c8 <line:1355:14> col:14 implicit C
| `-FunctionDecl 0xa6d218 <col:14> col:14 implicit referenced __builtin_exp2 'double (double) noexcept' extern
|   |-ParmVarDecl 0xa6d2b8 <<invalid sloc>> <invalid sloc> 'double'
|   `-NoThrowAttr 0xa6d328 <col:14> Implicit
|-LinkageSpecDecl 0xa6d568 <line:1361:12> col:12 implicit C
| `-FunctionDecl 0xa6d630 <col:12> col:12 implicit used __builtin_expm1f 'float (float) noexcept' extern
|   |-ParmVarDecl 0xa6d6d0 <<invalid sloc>> <invalid sloc> 'float'
|   `-NoThrowAttr 0xa6d740 <col:12> Implicit
|-LinkageSpecDecl 0xa6d9b0 <line:1365:12> col:12 implicit C
| `-FunctionDecl 0xa6da00 <col:12> col:12 implicit used __builtin_expm1l 'long double (long double) noexcept' extern
|   |-ParmVarDecl 0xa6daa0 <<invalid sloc>> <invalid sloc> 'long double'
|   `-NoThrowAttr 0xa6db10 <col:12> Implicit
|-LinkageSpecDecl 0xa6e118 <line:1373:14> col:14 implicit C
| `-FunctionDecl 0xa6e168 <col:14> col:14 implicit referenced __builtin_expm1 'double (double) noexcept' extern
|   |-ParmVarDecl 0xa6e208 <<invalid sloc>> <invalid sloc> 'double'
|   `-NoThrowAttr 0xa6e278 <col:14> Implicit
|-LinkageSpecDecl 0xa6e548 <line:1379:12> col:12 implicit C
| `-FunctionDecl 0xa6e598 <col:12> col:12 implicit used __builtin_fdimf 'float (float, float) noexcept' extern
|   |-ParmVarDecl 0xa6e638 <<invalid sloc>> <invalid sloc> 'float'
|   |-ParmVarDecl 0xa6e6a0 <<invalid sloc>> <invalid sloc> 'float'
|   `-NoThrowAttr 0xa6e718 <col:12> Implicit
|-LinkageSpecDecl 0xa6ea58 <line:1383:12> col:12 implicit C
| `-FunctionDecl 0xa6eaa8 <col:12> col:12 implicit used __builtin_fdiml 'long double (long double, long double) noexcept' extern
|   |-ParmVarDecl 0xa6eb48 <<invalid sloc>> <invalid sloc> 'long double'
|   |-ParmVarDecl 0xa6ebb0 <<invalid sloc>> <invalid sloc> 'long double'
|   `-NoThrowAttr 0xa6ec28 <col:12> Implicit
|-LinkageSpecDecl 0xa70088 <line:1399:12> col:12 implicit C
| `-FunctionDecl 0xa700d8 <col:12> col:12 implicit used __builtin_fmaf 'float (float, float, float) noexcept' extern
|   |-ParmVarDecl 0xa70178 <<invalid sloc>> <invalid sloc> 'float'
|   |-ParmVarDecl 0xa701e0 <<invalid sloc>> <invalid sloc> 'float'
|   |-ParmVarDecl 0xa70248 <<invalid sloc>> <invalid sloc> 'float'
|   |-ConstAttr 0xa702c8 <col:12> Implicit
|   `-NoThrowAttr 0xa70320 <col:12> Implicit
|-LinkageSpecDecl 0xa70760 <line:1403:12> col:12 implicit C
| `-FunctionDecl 0xa707b0 <col:12> col:12 implicit used __builtin_fmal 'long double (long double, long double, long double) noexcept' extern
|   |-ParmVarDecl 0xa70850 <<invalid sloc>> <invalid sloc> 'long double'
|   |-ParmVarDecl 0xa708b8 <<invalid sloc>> <invalid sloc> 'long double'
|   |-ParmVarDecl 0xa70920 <<invalid sloc>> <invalid sloc> 'long double'
|   |-ConstAttr 0xa709a0 <col:12> Implicit
|   `-NoThrowAttr 0xa709f8 <col:12> Implicit
|-LinkageSpecDecl 0xa725d8 <line:1419:12> col:12 implicit C
| `-FunctionDecl 0xa72628 <col:12> col:12 implicit used __builtin_fmaxf 'float (float, float) noexcept' extern
|   |-ParmVarDecl 0xa726c8 <<invalid sloc>> <invalid sloc> 'float'
|   |-ParmVarDecl 0xa72730 <<invalid sloc>> <invalid sloc> 'float'
|   |-NoThrowAttr 0xa727a8 <col:12> Implicit
|   `-ConstAttr 0xa72800 <col:12> Implicit
|-LinkageSpecDecl 0xa72b10 <line:1423:12> col:12 implicit C
| `-FunctionDecl 0xa72b60 <col:12> col:12 implicit used __builtin_fmaxl 'long double (long double, long double) noexcept' extern
|   |-ParmVarDecl 0xa72c00 <<invalid sloc>> <invalid sloc> 'long double'
|   |-ParmVarDecl 0xa72c68 <<invalid sloc>> <invalid sloc> 'long double'
|   |-NoThrowAttr 0xa72ce0 <col:12> Implicit
|   `-ConstAttr 0xa72d38 <col:12> Implicit
|-LinkageSpecDecl 0xa740b8 <line:1439:12> col:12 implicit C
| `-FunctionDecl 0xa74108 <col:12> col:12 implicit used __builtin_fminf 'float (float, float) noexcept' extern
|   |-ParmVarDecl 0xa741a8 <<invalid sloc>> <invalid sloc> 'float'
|   |-ParmVarDecl 0xa74210 <<invalid sloc>> <invalid sloc> 'float'
|   |-NoThrowAttr 0xa74288 <col:12> Implicit
|   `-ConstAttr 0xa742e0 <col:12> Implicit
|-LinkageSpecDecl 0xa745f0 <line:1443:12> col:12 implicit C
| `-FunctionDecl 0xa74640 <col:12> col:12 implicit used __builtin_fminl 'long double (long double, long double) noexcept' extern
|   |-ParmVarDecl 0xa746e0 <<invalid sloc>> <invalid sloc> 'long double'
|   |-ParmVarDecl 0xa74748 <<invalid sloc>> <invalid sloc> 'long double'
|   |-NoThrowAttr 0xa747c0 <col:12> Implicit
|   `-ConstAttr 0xa74818 <col:12> Implicit
|-LinkageSpecDecl 0xa75b98 <line:1459:12> col:12 implicit C
| `-FunctionDecl 0xa75be8 <col:12> col:12 implicit used __builtin_hypotf 'float (float, float) noexcept' extern
|   |-ParmVarDecl 0xa75c88 <<invalid sloc>> <invalid sloc> 'float'
|   |-ParmVarDecl 0xa75cf0 <<invalid sloc>> <invalid sloc> 'float'
|   `-NoThrowAttr 0xa75d68 <col:12> Implicit
|-LinkageSpecDecl 0xa760a8 <line:1463:12> col:12 implicit C
| `-FunctionDecl 0xa760f8 <col:12> col:12 implicit used __builtin_hypotl 'long double (long double, long double) noexcept' extern
|   |-ParmVarDecl 0xa76198 <<invalid sloc>> <invalid sloc> 'long double'
|   |-ParmVarDecl 0xa76200 <<invalid sloc>> <invalid sloc> 'long double'
|   `-NoThrowAttr 0xa76278 <col:12> Implicit
|-LinkageSpecDecl 0xa77558 <line:1479:12> col:12 implicit C
| `-FunctionDecl 0xa775a8 <col:12> col:12 implicit used __builtin_ilogbf 'int (float) noexcept' extern
|   |-ParmVarDecl 0xa77680 <<invalid sloc>> <invalid sloc> 'float'
|   `-NoThrowAttr 0xa776f0 <col:12> Implicit
|-LinkageSpecDecl 0xa77990 <line:1483:12> col:12 implicit C
| `-FunctionDecl 0xa779e0 <col:12> col:12 implicit used __builtin_ilogbl 'int (long double) noexcept' extern
|   |-ParmVarDecl 0xa77a80 <<invalid sloc>> <invalid sloc> 'long double'
|   `-NoThrowAttr 0xa77af0 <col:12> Implicit
|-LinkageSpecDecl 0xa78128 <line:1492:14> col:14 implicit C
| `-FunctionDecl 0xa78178 <col:14> col:14 implicit referenced __builtin_ilogb 'int (double) noexcept' extern
|   |-ParmVarDecl 0xa78218 <<invalid sloc>> <invalid sloc> 'double'
|   `-NoThrowAttr 0xa78288 <col:14> Implicit
|-LinkageSpecDecl 0xa784c8 <line:1498:12> col:12 implicit C
| `-FunctionDecl 0xa78518 <col:12> col:12 implicit used __builtin_lgammaf 'float (float) noexcept' extern
|   |-ParmVarDecl 0xa785b8 <<invalid sloc>> <invalid sloc> 'float'
|   `-NoThrowAttr 0xa78628 <col:12> Implicit
|-LinkageSpecDecl 0xa78898 <line:1502:12> col:12 implicit C
| `-FunctionDecl 0xa788e8 <col:12> col:12 implicit used __builtin_lgammal 'long double (long double) noexcept' extern
|   |-ParmVarDecl 0xa78988 <<invalid sloc>> <invalid sloc> 'long double'
|   `-NoThrowAttr 0xa789f8 <col:12> Implicit
|-LinkageSpecDecl 0xa78ff8 <line:1510:14> col:14 implicit C
| `-FunctionDecl 0xa79048 <col:14> col:14 implicit referenced __builtin_lgamma 'double (double) noexcept' extern
|   |-ParmVarDecl 0xa790e8 <<invalid sloc>> <invalid sloc> 'double'
|   `-NoThrowAttr 0xa79158 <col:14> Implicit
|-LinkageSpecDecl 0xa79398 <line:1516:12> col:12 implicit C
| `-FunctionDecl 0xa793e8 <col:12> col:12 implicit used __builtin_llrintf 'long long (float) noexcept' extern
|   |-ParmVarDecl 0xa79488 <<invalid sloc>> <invalid sloc> 'float'
|   `-NoThrowAttr 0xa794f8 <col:12> Implicit
|-LinkageSpecDecl 0xa79fe0 <line:1520:12> col:12 implicit C
| `-FunctionDecl 0xa7a030 <col:12> col:12 implicit used __builtin_llrintl 'long long (long double) noexcept' extern
|   |-ParmVarDecl 0xa7a0d0 <<invalid sloc>> <invalid sloc> 'long double'
|   `-NoThrowAttr 0xa7a140 <col:12> Implicit
|-LinkageSpecDecl 0xa7a878 <line:1528:14> col:14 implicit C
| `-FunctionDecl 0xa7a8c8 <col:14> col:14 implicit referenced __builtin_llrint 'long long (double) noexcept' extern
|   |-ParmVarDecl 0xa7a968 <<invalid sloc>> <invalid sloc> 'double'
|   `-NoThrowAttr 0xa7a9d8 <col:14> Implicit
|-LinkageSpecDecl 0xa7ac18 <line:1534:12> col:12 implicit C
| `-FunctionDecl 0xa7ac68 <col:12> col:12 implicit used __builtin_llroundf 'long long (float) noexcept' extern
|   |-ParmVarDecl 0xa7ad08 <<invalid sloc>> <invalid sloc> 'float'
|   `-NoThrowAttr 0xa7ad78 <col:12> Implicit
|-LinkageSpecDecl 0xa7afe8 <line:1538:12> col:12 implicit C
| `-FunctionDecl 0xa7b038 <col:12> col:12 implicit used __builtin_llroundl 'long long (long double) noexcept' extern
|   |-ParmVarDecl 0xa7b0d8 <<invalid sloc>> <invalid sloc> 'long double'
|   `-NoThrowAttr 0xa7b148 <col:12> Implicit
|-LinkageSpecDecl 0xa7b748 <line:1546:14> col:14 implicit C
| `-FunctionDecl 0xa7b798 <col:14> col:14 implicit referenced __builtin_llround 'long long (double) noexcept' extern
|   |-ParmVarDecl 0xa7b838 <<invalid sloc>> <invalid sloc> 'double'
|   `-NoThrowAttr 0xa7b8a8 <col:14> Implicit
|-LinkageSpecDecl 0xa7bae8 <line:1552:12> col:12 implicit C
| `-FunctionDecl 0xa7bb38 <col:12> col:12 implicit used __builtin_log1pf 'float (float) noexcept' extern
|   |-ParmVarDecl 0xa7bbd8 <<invalid sloc>> <invalid sloc> 'float'
|   `-NoThrowAttr 0xa7bc48 <col:12> Implicit
|-LinkageSpecDecl 0xa7bf58 <line:1556:12> col:12 implicit C
| `-FunctionDecl 0xa7bfa8 <col:12> col:12 implicit used __builtin_log1pl 'long double (long double) noexcept' extern
|   |-ParmVarDecl 0xa7c048 <<invalid sloc>> <invalid sloc> 'long double'
|   `-NoThrowAttr 0xa7c0b8 <col:12> Implicit
|-LinkageSpecDecl 0xa7c6b8 <line:1564:14> col:14 implicit C
| `-FunctionDecl 0xa7c708 <col:14> col:14 implicit referenced __builtin_log1p 'double (double) noexcept' extern
|   |-ParmVarDecl 0xa7c7a8 <<invalid sloc>> <invalid sloc> 'double'
|   `-NoThrowAttr 0xa7c818 <col:14> Implicit
|-LinkageSpecDecl 0xa7ca58 <line:1571:12> col:12 implicit C
| `-FunctionDecl 0xa7caa8 <col:12> col:12 implicit used __builtin_log2f 'float (float) noexcept' extern
|   |-ParmVarDecl 0xa7cb48 <<invalid sloc>> <invalid sloc> 'float'
|   `-NoThrowAttr 0xa7cbb8 <col:12> Implicit
|-LinkageSpecDecl 0xa7ce28 <line:1575:12> col:12 implicit C
| `-FunctionDecl 0xa7ce78 <col:12> col:12 implicit used __builtin_log2l 'long double (long double) noexcept' extern
|   |-ParmVarDecl 0xa7cf18 <<invalid sloc>> <invalid sloc> 'long double'
|   `-NoThrowAttr 0xa7cf88 <col:12> Implicit
|-LinkageSpecDecl 0xa7d588 <line:1583:14> col:14 implicit C
| `-FunctionDecl 0xa7d5d8 <col:14> col:14 implicit referenced __builtin_log2 'double (double) noexcept' extern
|   |-ParmVarDecl 0xa7d678 <<invalid sloc>> <invalid sloc> 'double'
|   `-NoThrowAttr 0xa7d6e8 <col:14> Implicit
|-LinkageSpecDecl 0xa7d928 <line:1589:12> col:12 implicit C
| `-FunctionDecl 0xa7d978 <col:12> col:12 implicit used __builtin_logbf 'float (float) noexcept' extern
|   |-ParmVarDecl 0xa7da18 <<invalid sloc>> <invalid sloc> 'float'
|   `-NoThrowAttr 0xa7da88 <col:12> Implicit
|-LinkageSpecDecl 0xa7dcf8 <line:1593:12> col:12 implicit C
| `-FunctionDecl 0xa7dd48 <col:12> col:12 implicit used __builtin_logbl 'long double (long double) noexcept' extern
|   |-ParmVarDecl 0xa7dde8 <<invalid sloc>> <invalid sloc> 'long double'
|   `-NoThrowAttr 0xa7de58 <col:12> Implicit
|-LinkageSpecDecl 0xa7e468 <line:1601:14> col:14 implicit C
| `-FunctionDecl 0xa7e4b8 <col:14> col:14 implicit referenced __builtin_logb 'double (double) noexcept' extern
|   |-ParmVarDecl 0xa7e558 <<invalid sloc>> <invalid sloc> 'double'
|   `-NoThrowAttr 0xa7e5c8 <col:14> Implicit
|-LinkageSpecDecl 0xa7e808 <line:1607:12> col:12 implicit C
| `-FunctionDecl 0xa7e858 <col:12> col:12 implicit used __builtin_lrintf 'long (float) noexcept' extern
|   |-ParmVarDecl 0xa7e8f8 <<invalid sloc>> <invalid sloc> 'float'
|   `-NoThrowAttr 0xa7e968 <col:12> Implicit
|-LinkageSpecDecl 0xa7ec30 <line:1611:12> col:12 implicit C
| `-FunctionDecl 0xa7ec80 <col:12> col:12 implicit used __builtin_lrintl 'long (long double) noexcept' extern
|   |-ParmVarDecl 0xa7ed20 <<invalid sloc>> <invalid sloc> 'long double'
|   `-NoThrowAttr 0xa7ed90 <col:12> Implicit
|-LinkageSpecDecl 0xa7f4c8 <line:1619:14> col:14 implicit C
| `-FunctionDecl 0xa7f518 <col:14> col:14 implicit referenced __builtin_lrint 'long (double) noexcept' extern
|   |-ParmVarDecl 0xa7f5b8 <<invalid sloc>> <invalid sloc> 'double'
|   `-NoThrowAttr 0xa7f628 <col:14> Implicit
|-LinkageSpecDecl 0xa7f868 <line:1625:12> col:12 implicit C
| `-FunctionDecl 0xa7f8b8 <col:12> col:12 implicit used __builtin_lroundf 'long (float) noexcept' extern
|   |-ParmVarDecl 0xa7f958 <<invalid sloc>> <invalid sloc> 'float'
|   `-NoThrowAttr 0xa7f9c8 <col:12> Implicit
|-LinkageSpecDecl 0xa7fc38 <line:1629:12> col:12 implicit C
| `-FunctionDecl 0xa7fc88 <col:12> col:12 implicit used __builtin_lroundl 'long (long double) noexcept' extern
|   |-ParmVarDecl 0xa7fd28 <<invalid sloc>> <invalid sloc> 'long double'
|   `-NoThrowAttr 0xa7fd98 <col:12> Implicit
|-LinkageSpecDecl 0xa80828 <line:1637:14> col:14 implicit C
| `-FunctionDecl 0xa80878 <col:14> col:14 implicit referenced __builtin_lround 'long (double) noexcept' extern
|   |-ParmVarDecl 0xa80918 <<invalid sloc>> <invalid sloc> 'double'
|   `-NoThrowAttr 0xa80988 <col:14> Implicit
|-LinkageSpecDecl 0xa80bc8 <line:1643:12> col:12 implicit C
| `-FunctionDecl 0xa80c18 <col:12> col:12 implicit used __builtin_nearbyintf 'float (float) noexcept' extern
|   |-ParmVarDecl 0xa80cb8 <<invalid sloc>> <invalid sloc> 'float'
|   |-NoThrowAttr 0xa80d28 <col:12> Implicit
|   `-ConstAttr 0xa80d80 <col:12> Implicit
|-LinkageSpecDecl 0xa80fc0 <line:1647:12> col:12 implicit C
| `-FunctionDecl 0xa81010 <col:12> col:12 implicit used __builtin_nearbyintl 'long double (long double) noexcept' extern
|   |-ParmVarDecl 0xa810b0 <<invalid sloc>> <invalid sloc> 'long double'
|   |-NoThrowAttr 0xa81120 <col:12> Implicit
|   `-ConstAttr 0xa81178 <col:12> Implicit
|-LinkageSpecDecl 0xa81748 <line:1655:14> col:14 implicit C
| `-FunctionDecl 0xa81798 <col:14> col:14 implicit referenced __builtin_nearbyint 'double (double) noexcept' extern
|   |-ParmVarDecl 0xa81838 <<invalid sloc>> <invalid sloc> 'double'
|   |-NoThrowAttr 0xa818a8 <col:14> Implicit
|   `-ConstAttr 0xa81900 <col:14> Implicit
|-LinkageSpecDecl 0xa81ba0 <line:1661:12> col:12 implicit C
| `-FunctionDecl 0xa81bf0 <col:12> col:12 implicit used __builtin_nextafterf 'float (float, float) noexcept' extern
|   |-ParmVarDecl 0xa81c90 <<invalid sloc>> <invalid sloc> 'float'
|   |-ParmVarDecl 0xa81cf8 <<invalid sloc>> <invalid sloc> 'float'
|   `-NoThrowAttr 0xa81d70 <col:12> Implicit
|-LinkageSpecDecl 0xa820b0 <line:1665:12> col:12 implicit C
| `-FunctionDecl 0xa82100 <col:12> col:12 implicit used __builtin_nextafterl 'long double (long double, long double) noexcept' extern
|   |-ParmVarDecl 0xa821a0 <<invalid sloc>> <invalid sloc> 'long double'
|   |-ParmVarDecl 0xa82208 <<invalid sloc>> <invalid sloc> 'long double'
|   `-NoThrowAttr 0xa82280 <col:12> Implicit
|-LinkageSpecDecl 0xa83768 <line:1681:12> col:12 implicit C
| `-FunctionDecl 0xa837b8 <col:12> col:12 implicit used __builtin_nexttowardf 'float (float, long double) noexcept' extern
|   |-ParmVarDecl 0xa83858 <<invalid sloc>> <invalid sloc> 'float'
|   |-ParmVarDecl 0xa838c0 <<invalid sloc>> <invalid sloc> 'long double'
|   `-NoThrowAttr 0xa83938 <col:12> Implicit
|-LinkageSpecDecl 0xa83cd0 <line:1685:12> col:12 implicit C
| `-FunctionDecl 0xa83d20 <col:12> col:12 implicit used __builtin_nexttowardl 'long double (long double, long double) noexcept' extern
|   |-ParmVarDecl 0xa83dc0 <<invalid sloc>> <invalid sloc> 'long double'
|   |-ParmVarDecl 0xa83e28 <<invalid sloc>> <invalid sloc> 'long double'
|   `-NoThrowAttr 0xa83ea0 <col:12> Implicit
|-LinkageSpecDecl 0xa85718 <line:1693:14> col:14 implicit C
| `-FunctionDecl 0xa85768 <col:14> col:14 implicit referenced __builtin_nexttoward 'double (double, long double) noexcept' extern
|   |-ParmVarDecl 0xa85808 <<invalid sloc>> <invalid sloc> 'double'
|   |-ParmVarDecl 0xa85870 <<invalid sloc>> <invalid sloc> 'long double'
|   `-NoThrowAttr 0xa858e8 <col:14> Implicit
|-LinkageSpecDecl 0xa85be0 <line:1699:12> col:12 implicit C
| `-FunctionDecl 0xa85c30 <col:12> col:12 implicit used __builtin_remainderf 'float (float, float) noexcept' extern
|   |-ParmVarDecl 0xa85cd0 <<invalid sloc>> <invalid sloc> 'float'
|   |-ParmVarDecl 0xa85d38 <<invalid sloc>> <invalid sloc> 'float'
|   `-NoThrowAttr 0xa85db0 <col:12> Implicit
|-LinkageSpecDecl 0xa860f0 <line:1703:12> col:12 implicit C
| `-FunctionDecl 0xa86140 <col:12> col:12 implicit used __builtin_remainderl 'long double (long double, long double) noexcept' extern
|   |-ParmVarDecl 0xa861e0 <<invalid sloc>> <invalid sloc> 'long double'
|   |-ParmVarDecl 0xa86248 <<invalid sloc>> <invalid sloc> 'long double'
|   `-NoThrowAttr 0xa862c0 <col:12> Implicit
|-LinkageSpecDecl 0xa87838 <line:1719:12> col:12 implicit C
| `-FunctionDecl 0xa87888 <col:12> col:12 implicit used __builtin_remquof 'float (float, float, int *) noexcept' extern
|   |-ParmVarDecl 0xa87928 <<invalid sloc>> <invalid sloc> 'float'
|   |-ParmVarDecl 0xa87990 <<invalid sloc>> <invalid sloc> 'float'
|   |-ParmVarDecl 0xa879f8 <<invalid sloc>> <invalid sloc> 'int *'
|   `-NoThrowAttr 0xa87a78 <col:12> Implicit
|-LinkageSpecDecl 0xa87f30 <line:1723:12> col:12 implicit C
| `-FunctionDecl 0xa87f80 <col:12> col:12 implicit used __builtin_remquol 'long double (long double, long double, int *) noexcept' extern
|   |-ParmVarDecl 0xa88020 <<invalid sloc>> <invalid sloc> 'long double'
|   |-ParmVarDecl 0xa88088 <<invalid sloc>> <invalid sloc> 'long double'
|   |-ParmVarDecl 0xa880f0 <<invalid sloc>> <invalid sloc> 'int *'
|   `-NoThrowAttr 0xa88170 <col:12> Implicit
|-LinkageSpecDecl 0xa89640 <line:1739:12> col:12 implicit C
| `-FunctionDecl 0xa89690 <col:12> col:12 implicit used __builtin_rintf 'float (float) noexcept' extern
|   |-ParmVarDecl 0xa89800 <<invalid sloc>> <invalid sloc> 'float'
|   |-NoThrowAttr 0xa89870 <col:12> Implicit
|   `-ConstAttr 0xa898c8 <col:12> Implicit
|-LinkageSpecDecl 0xa89b08 <line:1743:12> col:12 implicit C
| `-FunctionDecl 0xa89b58 <col:12> col:12 implicit used __builtin_rintl 'long double (long double) noexcept' extern
|   |-ParmVarDecl 0xa89bf8 <<invalid sloc>> <invalid sloc> 'long double'
|   |-NoThrowAttr 0xa89c68 <col:12> Implicit
|   `-ConstAttr 0xa89cc0 <col:12> Implicit
|-LinkageSpecDecl 0xa8a298 <line:1751:14> col:14 implicit C
| `-FunctionDecl 0xa8a2e8 <col:14> col:14 implicit referenced __builtin_rint 'double (double) noexcept' extern
|   |-ParmVarDecl 0xa8a388 <<invalid sloc>> <invalid sloc> 'double'
|   |-NoThrowAttr 0xa8a3f8 <col:14> Implicit
|   `-ConstAttr 0xa8a450 <col:14> Implicit
|-LinkageSpecDecl 0xa8a660 <line:1757:12> col:12 implicit C
| `-FunctionDecl 0xa8a6b0 <col:12> col:12 implicit used __builtin_roundf 'float (float) noexcept' extern
|   |-ParmVarDecl 0xa8a750 <<invalid sloc>> <invalid sloc> 'float'
|   |-NoThrowAttr 0xa8a7c0 <col:12> Implicit
|   `-ConstAttr 0xa8a818 <col:12> Implicit
|-LinkageSpecDecl 0xa8aa58 <line:1761:12> col:12 implicit C
| `-FunctionDecl 0xa8aaa8 <col:12> col:12 implicit used __builtin_roundl 'long double (long double) noexcept' extern
|   |-ParmVarDecl 0xa8ab48 <<invalid sloc>> <invalid sloc> 'long double'
|   |-NoThrowAttr 0xa8abb8 <col:12> Implicit
|   `-ConstAttr 0xa8ac10 <col:12> Implicit
|-LinkageSpecDecl 0xa8b1e8 <line:1769:14> col:14 implicit C
| `-FunctionDecl 0xa8b238 <col:14> col:14 implicit referenced __builtin_round 'double (double) noexcept' extern
|   |-ParmVarDecl 0xa8b2d8 <<invalid sloc>> <invalid sloc> 'double'
|   |-NoThrowAttr 0xa8b348 <col:14> Implicit
|   `-ConstAttr 0xa8b3a0 <col:14> Implicit
|-LinkageSpecDecl 0xa8b640 <line:1775:12> col:12 implicit C
| `-FunctionDecl 0xa8b690 <col:12> col:12 implicit used __builtin_scalblnf 'float (float, long) noexcept' extern
|   |-ParmVarDecl 0xa8b730 <<invalid sloc>> <invalid sloc> 'float'
|   |-ParmVarDecl 0xa8b798 <<invalid sloc>> <invalid sloc> 'long'
|   `-NoThrowAttr 0xa8b930 <col:12> Implicit
|-LinkageSpecDecl 0xa8bcd0 <line:1779:12> col:12 implicit C
| `-FunctionDecl 0xa8bd20 <col:12> col:12 implicit used __builtin_scalblnl 'long double (long double, long) noexcept' extern
|   |-ParmVarDecl 0xa8bdc0 <<invalid sloc>> <invalid sloc> 'long double'
|   |-ParmVarDecl 0xa8be28 <<invalid sloc>> <invalid sloc> 'long'
|   `-NoThrowAttr 0xa8bea0 <col:12> Implicit
|-LinkageSpecDecl 0xa8c620 <line:1787:14> col:14 implicit C
| `-FunctionDecl 0xa8c670 <col:14> col:14 implicit referenced __builtin_scalbln 'double (double, long) noexcept' extern
|   |-ParmVarDecl 0xa8c710 <<invalid sloc>> <invalid sloc> 'double'
|   |-ParmVarDecl 0xa8c778 <<invalid sloc>> <invalid sloc> 'long'
|   `-NoThrowAttr 0xa8c7f0 <col:14> Implicit
|-LinkageSpecDecl 0xa8cae8 <line:1793:12> col:12 implicit C
| `-FunctionDecl 0xa8cb38 <col:12> col:12 implicit used __builtin_scalbnf 'float (float, int) noexcept' extern
|   |-ParmVarDecl 0xa8cbd8 <<invalid sloc>> <invalid sloc> 'float'
|   |-ParmVarDecl 0xa8cc40 <<invalid sloc>> <invalid sloc> 'int'
|   `-NoThrowAttr 0xa8ccb8 <col:12> Implicit
|-LinkageSpecDecl 0xa8cff8 <line:1797:12> col:12 implicit C
| `-FunctionDecl 0xa8d048 <col:12> col:12 implicit used __builtin_scalbnl 'long double (long double, int) noexcept' extern
|   |-ParmVarDecl 0xa8d0e8 <<invalid sloc>> <invalid sloc> 'long double'
|   |-ParmVarDecl 0xa8d150 <<invalid sloc>> <invalid sloc> 'int'
|   `-NoThrowAttr 0xa8d1c8 <col:12> Implicit
|-LinkageSpecDecl 0xa8d8a0 <line:1805:14> col:14 implicit C
| `-FunctionDecl 0xa8dea0 <col:14> col:14 implicit referenced __builtin_scalbn 'double (double, int) noexcept' extern
|   |-ParmVarDecl 0xa8df40 <<invalid sloc>> <invalid sloc> 'double'
|   |-ParmVarDecl 0xa8dfa8 <<invalid sloc>> <invalid sloc> 'int'
|   `-NoThrowAttr 0xa8e020 <col:14> Implicit
|-LinkageSpecDecl 0xa8e288 <line:1811:12> col:12 implicit C
| `-FunctionDecl 0xa8e2d8 <col:12> col:12 implicit used __builtin_tgammaf 'float (float) noexcept' extern
|   |-ParmVarDecl 0xa8e378 <<invalid sloc>> <invalid sloc> 'float'
|   `-NoThrowAttr 0xa8e3e8 <col:12> Implicit
|-LinkageSpecDecl 0xa8e658 <line:1815:12> col:12 implicit C
| `-FunctionDecl 0xa8e6a8 <col:12> col:12 implicit used __builtin_tgammal 'long double (long double) noexcept' extern
|   |-ParmVarDecl 0xa8e748 <<invalid sloc>> <invalid sloc> 'long double'
|   `-NoThrowAttr 0xa8e7b8 <col:12> Implicit
|-LinkageSpecDecl 0xa8edb8 <line:1823:14> col:14 implicit C
| `-FunctionDecl 0xa8ee08 <col:14> col:14 implicit referenced __builtin_tgamma 'double (double) noexcept' extern
|   |-ParmVarDecl 0xa8eea8 <<invalid sloc>> <invalid sloc> 'double'
|   `-NoThrowAttr 0xa8ef18 <col:14> Implicit
|-LinkageSpecDecl 0xa8f158 <line:1829:12> col:12 implicit C
| `-FunctionDecl 0xa8f1a8 <col:12> col:12 implicit used __builtin_truncf 'float (float) noexcept' extern
|   |-ParmVarDecl 0xa8f248 <<invalid sloc>> <invalid sloc> 'float'
|   |-NoThrowAttr 0xa8f2b8 <col:12> Implicit
|   `-ConstAttr 0xa8f310 <col:12> Implicit
|-LinkageSpecDecl 0xa8f550 <line:1833:12> col:12 implicit C
| `-FunctionDecl 0xa8f5a0 <col:12> col:12 implicit used __builtin_truncl 'long double (long double) noexcept' extern
|   |-ParmVarDecl 0xa8f640 <<invalid sloc>> <invalid sloc> 'long double'
|   |-NoThrowAttr 0xa8f6b0 <col:12> Implicit
|   `-ConstAttr 0xa8f708 <col:12> Implicit
|-LinkageSpecDecl 0xa8fcd8 <line:1841:14> col:14 implicit C
| `-FunctionDecl 0xa8fd28 <col:14> col:14 implicit referenced __builtin_trunc 'double (double) noexcept' extern
|   |-ParmVarDecl 0xa8fdc8 <<invalid sloc>> <invalid sloc> 'double'
|   |-NoThrowAttr 0xa8fe38 <col:14> Implicit
|   `-ConstAttr 0xa90010 <col:14> Implicit
|-UsingDecl 0xa900e8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/math.h:38:1, col:12> col:12 std::abs
|-UsingShadowDecl 0xa90140 <col:12> col:12 implicit Function 0xa192f8 'abs' 'int (int) throw()'
|-UsingShadowDecl 0xa90190 <col:12> col:12 implicit Function 0xa1f488 'abs' 'long (long)'
|-UsingShadowDecl 0xa901e0 <col:12> col:12 implicit Function 0xa1f8d8 'abs' 'long long (long long)'
|-UsingShadowDecl 0xa90230 <col:12> col:12 implicit Function 0xa1fd28 'abs' 'double (double)'
|-UsingShadowDecl 0xa90280 <col:12> col:12 implicit Function 0xa20178 'abs' 'float (float)'
|-UsingShadowDecl 0xa902d0 <col:12> col:12 implicit Function 0xa205c8 'abs' 'long double (long double)'
|-UsingShadowDecl 0xa90320 <col:12> col:12 implicit Function 0xa20a50 'abs' '__int128 (__int128)'
|-UsingShadowDecl 0xa90370 <col:12> col:12 implicit Function 0xa21dd0 'abs' '__float128 (__float128)'
|-UsingDecl 0xa903c8 <line:39:1, col:12> col:12 std::acos
|-UsingShadowDecl 0xa90420 <col:12> col:12 implicit Function 0x8f47c8 'acos' 'double (double) throw()'
|-UsingShadowDecl 0xa90470 <col:12> col:12 implicit Function 0xa222a0 'acos' 'float (float)'
|-UsingShadowDecl 0xa904c0 <col:12> col:12 implicit Function 0xa22670 'acos' 'long double (long double)'
|-UsingShadowDecl 0xa90510 <col:12> col:12 implicit FunctionTemplate 0xa22f18 'acos'
|-UsingDecl 0xa90568 <line:40:1, col:12> col:12 std::asin
|-UsingShadowDecl 0xa905c0 <col:12> col:12 implicit Function 0x8faf60 'asin' 'double (double) throw()'
|-UsingShadowDecl 0xa90610 <col:12> col:12 implicit Function 0xa23320 'asin' 'float (float)'
|-UsingShadowDecl 0xa90660 <col:12> col:12 implicit Function 0xa236f0 'asin' 'long double (long double)'
|-UsingShadowDecl 0xa906b0 <col:12> col:12 implicit FunctionTemplate 0xa24ec8 'asin'
|-UsingDecl 0xa90708 <line:41:1, col:12> col:12 std::atan
|-UsingShadowDecl 0xa90760 <col:12> col:12 implicit Function 0x8fb278 'atan' 'double (double) throw()'
|-UsingShadowDecl 0xa907b0 <col:12> col:12 implicit Function 0xa252d0 'atan' 'float (float)'
|-UsingShadowDecl 0xa90800 <col:12> col:12 implicit Function 0xa256a0 'atan' 'long double (long double)'
|-UsingShadowDecl 0xa90850 <col:12> col:12 implicit FunctionTemplate 0xa25e48 'atan'
|-UsingDecl 0xa908a8 <line:42:1, col:12> col:12 std::atan2
|-UsingShadowDecl 0xa90900 <col:12> col:12 implicit Function 0x8fb698 'atan2' 'double (double, double) throw()'
|-UsingShadowDecl 0xa90950 <col:12> col:12 implicit Function 0xa262d8 'atan2' 'float (float, float)'
|-UsingShadowDecl 0xa909a0 <col:12> col:12 implicit Function 0xa26840 'atan2' 'long double (long double, long double)'
|-UsingShadowDecl 0xa909f0 <col:12> col:12 implicit FunctionTemplate 0x919c48 'atan2'
|-UsingDecl 0xa90a48 <line:43:1, col:12> col:12 std::cos
|-UsingShadowDecl 0xa90aa0 <col:12> col:12 implicit Function 0x8fba88 'cos' 'double (double) throw()'
|-UsingShadowDecl 0xa90af0 <col:12> col:12 implicit Function 0x962d20 'cos' 'float (float)'
|-UsingShadowDecl 0xa90b40 <col:12> col:12 implicit Function 0x9630f0 'cos' 'long double (long double)'
|-UsingShadowDecl 0xa90b90 <col:12> col:12 implicit FunctionTemplate 0x963898 'cos'
|-UsingDecl 0xa90be8 <line:44:1, col:12> col:12 std::sin
|-UsingShadowDecl 0xa90c40 <col:12> col:12 implicit Function 0x8fe320 'sin' 'double (double) throw()'
|-UsingShadowDecl 0xa90c90 <col:12> col:12 implicit Function 0xa463c0 'sin' 'float (float)'
|-UsingShadowDecl 0xa90ce0 <col:12> col:12 implicit Function 0xa46790 'sin' 'long double (long double)'
|-UsingShadowDecl 0xa90d30 <col:12> col:12 implicit FunctionTemplate 0xa46f68 'sin'
|-UsingDecl 0xa90d88 <line:45:1, col:12> col:12 std::tan
|-UsingShadowDecl 0xa90de0 <col:12> col:12 implicit Function 0x8fe638 'tan' 'double (double) throw()'
|-UsingShadowDecl 0xa90e30 <col:12> col:12 implicit Function 0xa49318 'tan' 'float (float)'
|-UsingShadowDecl 0xa90e80 <col:12> col:12 implicit Function 0xa496e8 'tan' 'long double (long double)'
|-UsingShadowDecl 0xa90ed0 <col:12> col:12 implicit FunctionTemplate 0xa49e98 'tan'
|-UsingDecl 0xa90f28 <line:46:1, col:12> col:12 std::cosh
|-UsingShadowDecl 0xa90f80 <col:12> col:12 implicit Function 0x8fe950 'cosh' 'double (double) throw()'
|-UsingShadowDecl 0xa90fd0 <col:12> col:12 implicit Function 0x963ca0 'cosh' 'float (float)'
|-UsingShadowDecl 0xa91020 <col:12> col:12 implicit Function 0x964070 'cosh' 'long double (long double)'
|-UsingShadowDecl 0xa91070 <col:12> col:12 implicit FunctionTemplate 0x964818 'cosh'
|-UsingDecl 0xa910c8 <line:47:1, col:12> col:12 std::sinh
|-UsingShadowDecl 0xa91120 <col:12> col:12 implicit Function 0x8fec68 'sinh' 'double (double) throw()'
|-UsingShadowDecl 0xa91170 <col:12> col:12 implicit Function 0xa47370 'sinh' 'float (float)'
|-UsingShadowDecl 0xa911c0 <col:12> col:12 implicit Function 0xa47740 'sinh' 'long double (long double)'
|-UsingShadowDecl 0xa91210 <col:12> col:12 implicit FunctionTemplate 0xa47ee8 'sinh'
|-UsingDecl 0xa91268 <line:48:1, col:12> col:12 std::tanh
|-UsingShadowDecl 0xa912c0 <col:12> col:12 implicit Function 0x8fef80 'tanh' 'double (double) throw()'
|-UsingShadowDecl 0xa91310 <col:12> col:12 implicit Function 0xa4a2a0 'tanh' 'float (float)'
|-UsingShadowDecl 0xa91360 <col:12> col:12 implicit Function 0xa4a670 'tanh' 'long double (long double)'
|-UsingShadowDecl 0xa913b0 <col:12> col:12 implicit FunctionTemplate 0xa4ae18 'tanh'
|-UsingDecl 0xa91408 <line:49:1, col:12> col:12 std::exp
|-UsingShadowDecl 0xa91460 <col:12> col:12 implicit Function 0x8e9b40 'exp' 'double (double) throw()'
|-UsingShadowDecl 0xa914b0 <col:12> col:12 implicit Function 0x964c60 'exp' 'float (float)'
|-UsingShadowDecl 0xa91500 <col:12> col:12 implicit Function 0x965030 'exp' 'long double (long double)'
|-UsingShadowDecl 0xa91550 <col:12> col:12 implicit FunctionTemplate 0x9657d8 'exp'
|-UsingDecl 0xa915a8 <line:50:1, col:12> col:12 std::frexp
|-UsingShadowDecl 0xa91600 <col:12> col:12 implicit Function 0x8e9f88 'frexp' 'double (double, int *) throw()'
|-UsingShadowDecl 0xa91650 <col:12> col:12 implicit Function 0xa3f4b8 'frexp' 'float (float, int *)'
|-UsingShadowDecl 0xa916a0 <col:12> col:12 implicit Function 0xa3fa50 'frexp' 'long double (long double, int *)'
|-UsingShadowDecl 0xa916f0 <col:12> col:12 implicit FunctionTemplate 0xa40418 'frexp'
|-UsingDecl 0xa91748 <line:51:1, col:12> col:12 std::ldexp
|-UsingShadowDecl 0xa917a0 <col:12> col:12 implicit Function 0x8ea478 'ldexp' 'double (double, int) throw()'
|-UsingShadowDecl 0xa917f0 <col:12> col:12 implicit Function 0xa40948 'ldexp' 'float (float, int)'
|-UsingShadowDecl 0xa91840 <col:12> col:12 implicit Function 0xa40ed0 'ldexp' 'long double (long double, int)'
|-UsingShadowDecl 0xa91890 <col:12> col:12 implicit FunctionTemplate 0xa41868 'ldexp'
|-UsingDecl 0xa918e8 <line:52:1, col:12> col:12 std::log
|-UsingShadowDecl 0xa91940 <col:12> col:12 implicit Function 0x8ea868 'log' 'double (double) throw()'
|-UsingShadowDecl 0xa91990 <col:12> col:12 implicit Function 0xa41d10 'log' 'float (float)'
|-UsingShadowDecl 0xa919e0 <col:12> col:12 implicit Function 0xa420e0 'log' 'long double (long double)'
|-UsingShadowDecl 0xa91a30 <col:12> col:12 implicit FunctionTemplate 0xa42888 'log'
|-UsingDecl 0xa91a88 <line:53:1, col:12> col:12 std::log10
|-UsingShadowDecl 0xa91ae0 <col:12> col:12 implicit Function 0x8eae50 'log10' 'double (double) throw()'
|-UsingShadowDecl 0xa91b30 <col:12> col:12 implicit Function 0xa42c90 'log10' 'float (float)'
|-UsingShadowDecl 0xa91b80 <col:12> col:12 implicit Function 0xa43078 'log10' 'long double (long double)'
|-UsingShadowDecl 0xa91bd0 <col:12> col:12 implicit FunctionTemplate 0xa43828 'log10'
|-UsingDecl 0xa91c28 <line:54:1, col:12> col:12 std::modf
|-UsingShadowDecl 0xa91c80 <col:12> col:12 implicit Function 0x8eb268 'modf' 'double (double, double *) throw()'
|-UsingShadowDecl 0xa91cd0 <col:12> col:12 implicit Function 0xa43cb8 'modf' 'float (float, float *)'
|-UsingShadowDecl 0xa91d20 <col:12> col:12 implicit Function 0xa44250 'modf' 'long double (long double, long double *)'
|-UsingDecl 0xa91d78 <line:55:1, col:12> col:12 std::pow
|-UsingShadowDecl 0xa91dd0 <col:12> col:12 implicit Function 0x8ee590 'pow' 'double (double, double) throw()'
|-UsingShadowDecl 0xa91e20 <col:12> col:12 implicit Function 0xa448a0 'pow' 'float (float, float)'
|-UsingShadowDecl 0xa91e70 <col:12> col:12 implicit Function 0xa44e50 'pow' 'long double (long double, long double)'
|-UsingShadowDecl 0xa91ec0 <col:12> col:12 implicit FunctionTemplate 0xa45a98 'pow'
|-UsingDecl 0xa91f18 <line:56:1, col:12> col:12 std::sqrt
|-UsingShadowDecl 0xa91f70 <col:12> col:12 implicit Function 0x8eecc8 'sqrt' 'double (double) throw()'
|-UsingShadowDecl 0xa91fc0 <col:12> col:12 implicit Function 0xa482f0 'sqrt' 'float (float)'
|-UsingShadowDecl 0xa927b0 <col:12> col:12 implicit Function 0xa486c0 'sqrt' 'long double (long double)'
|-UsingShadowDecl 0xa92800 <col:12> col:12 implicit FunctionTemplate 0xa48f10 'sqrt'
|-UsingDecl 0xa92858 <line:57:1, col:12> col:12 std::ceil
|-UsingShadowDecl 0xa928b0 <col:12> col:12 implicit Function 0x8ef758 'ceil' 'double (double) throw()'
|-UsingShadowDecl 0xa92900 <col:12> col:12 implicit Function 0x91a570 'ceil' 'float (float)'
|-UsingShadowDecl 0xa92950 <col:12> col:12 implicit Function 0x91a968 'ceil' 'long double (long double)'
|-UsingShadowDecl 0xa929a0 <col:12> col:12 implicit FunctionTemplate 0x91b138 'ceil'
|-UsingDecl 0xa929f8 <line:58:1, col:12> col:12 std::fabs
|-UsingShadowDecl 0xa92a50 <col:12> col:12 implicit Function 0x8effa0 'fabs' 'double (double) throw()'
|-UsingShadowDecl 0xa92aa0 <col:12> col:12 implicit Function 0x965be0 'fabs' 'float (float)'
|-UsingShadowDecl 0xa92af0 <col:12> col:12 implicit Function 0x965df8 'fabs' 'long double (long double)'
|-UsingShadowDecl 0xa92b40 <col:12> col:12 implicit FunctionTemplate 0x9663e8 'fabs'
|-UsingDecl 0xa92b98 <line:59:1, col:12> col:12 std::floor
|-UsingShadowDecl 0xa92bf0 <col:12> col:12 implicit Function 0x8f0338 'floor' 'double (double) throw()'
|-UsingShadowDecl 0xa92c40 <col:12> col:12 implicit Function 0x966638 'floor' 'float (float)'
|-UsingShadowDecl 0xa92c90 <col:12> col:12 implicit Function 0x966a30 'floor' 'long double (long double)'
|-UsingShadowDecl 0xa92ce0 <col:12> col:12 implicit FunctionTemplate 0x967248 'floor'
|-UsingDecl 0xa92d38 <line:60:1, col:12> col:12 std::fmod
|-UsingShadowDecl 0xa92d90 <col:12> col:12 implicit Function 0x8f0758 'fmod' 'double (double, double) throw()'
|-UsingShadowDecl 0xa92de0 <col:12> col:12 implicit Function 0x967700 'fmod' 'float (float, float)'
|-UsingShadowDecl 0xa92e30 <col:12> col:12 implicit Function 0x967c10 'fmod' 'long double (long double, long double)'
|-UsingShadowDecl 0xa92e80 <col:12> col:12 implicit FunctionTemplate 0x968858 'fmod'
|-UsingDecl 0xa92ed8 <line:63:1, col:12> col:12 std::fpclassify
|-UsingShadowDecl 0xa92f30 <col:12> col:12 implicit Function 0xa4b180 'fpclassify' 'int (float)'
|-UsingShadowDecl 0xa92f80 <col:12> col:12 implicit Function 0xa4b920 'fpclassify' 'int (double)'
|-UsingShadowDecl 0xa92fd0 <col:12> col:12 implicit Function 0xa4bc00 'fpclassify' 'int (long double)'
|-UsingShadowDecl 0xa93020 <col:12> col:12 implicit FunctionTemplate 0xa4c388 'fpclassify'
|-UsingDecl 0xa93078 <line:64:1, col:12> col:12 std::isfinite
|-UsingShadowDecl 0xa930d0 <col:12> col:12 implicit Function 0xa4c5b8 'isfinite' 'bool (float)'
|-UsingShadowDecl 0xa93120 <col:12> col:12 implicit Function 0xa4ca38 'isfinite' 'bool (double)'
|-UsingShadowDecl 0xa93170 <col:12> col:12 implicit Function 0xa4cc98 'isfinite' 'bool (long double)'
|-UsingShadowDecl 0xa931c0 <col:12> col:12 implicit FunctionTemplate 0xa4d398 'isfinite'
|-UsingDecl 0xa93218 <line:65:1, col:12> col:12 std::isinf
|-UsingShadowDecl 0xa93270 <col:12> col:12 implicit Function 0xa4d4d8 'isinf' 'bool (float)'
|-UsingShadowDecl 0xa932c0 <col:12> col:12 implicit Function 0xa4d870 'isinf' 'bool (double)'
|-UsingShadowDecl 0xa93310 <col:12> col:12 implicit Function 0xa4da98 'isinf' 'bool (long double)'
|-UsingShadowDecl 0xa93360 <col:12> col:12 implicit FunctionTemplate 0xa4e0a8 'isinf'
|-UsingDecl 0xa933b8 <line:66:1, col:12> col:12 std::isnan
|-UsingShadowDecl 0xa93410 <col:12> col:12 implicit Function 0xa4e1e8 'isnan' 'bool (float)'
|-UsingShadowDecl 0xa93460 <col:12> col:12 implicit Function 0xa4e580 'isnan' 'bool (double)'
|-UsingShadowDecl 0xa934b0 <col:12> col:12 implicit Function 0xa4e7a8 'isnan' 'bool (long double)'
|-UsingShadowDecl 0xa93500 <col:12> col:12 implicit FunctionTemplate 0xa4edb8 'isnan'
|-UsingDecl 0xa93558 <line:67:1, col:12> col:12 std::isnormal
|-UsingShadowDecl 0xa935b0 <col:12> col:12 implicit Function 0xa4ef30 'isnormal' 'bool (float)'
|-UsingShadowDecl 0xa93600 <col:12> col:12 implicit Function 0xa4f2c8 'isnormal' 'bool (double)'
|-UsingShadowDecl 0xa93650 <col:12> col:12 implicit Function 0xa4f4f0 'isnormal' 'bool (long double)'
|-UsingShadowDecl 0xa936a0 <col:12> col:12 implicit FunctionTemplate 0xa4faf8 'isnormal'
|-UsingDecl 0xa936f8 <line:68:1, col:12> col:12 std::signbit
|-UsingShadowDecl 0xa93750 <col:12> col:12 implicit Function 0xa4fcd8 'signbit' 'bool (float)'
|-UsingShadowDecl 0xa937a0 <col:12> col:12 implicit Function 0xa50070 'signbit' 'bool (double)'
|-UsingShadowDecl 0xa937f0 <col:12> col:12 implicit Function 0xa50298 'signbit' 'bool (long double)'
|-UsingShadowDecl 0xa93840 <col:12> col:12 implicit FunctionTemplate 0xa508a8 'signbit'
|-UsingDecl 0xa93898 <line:69:1, col:12> col:12 std::isgreater
|-UsingShadowDecl 0xa938f0 <col:12> col:12 implicit Function 0xa50b48 'isgreater' 'bool (float, float)'
|-UsingShadowDecl 0xa93940 <col:12> col:12 implicit Function 0xa51008 'isgreater' 'bool (double, double)'
|-UsingShadowDecl 0xa93990 <col:12> col:12 implicit Function 0xa51338 'isgreater' 'bool (long double, long double)'
|-UsingShadowDecl 0xa939e0 <col:12> col:12 implicit FunctionTemplate 0xa51d08 'isgreater'
|-UsingDecl 0xa93a38 <line:70:1, col:12> col:12 std::isgreaterequal
|-UsingShadowDecl 0xa93a90 <col:12> col:12 implicit Function 0xa525c0 'isgreaterequal' 'bool (float, float)'
|-UsingShadowDecl 0xa93ae0 <col:12> col:12 implicit Function 0xa52a28 'isgreaterequal' 'bool (double, double)'
|-UsingShadowDecl 0xa93b30 <col:12> col:12 implicit Function 0xa52d20 'isgreaterequal' 'bool (long double, long double)'
|-UsingShadowDecl 0xa93b80 <col:12> col:12 implicit FunctionTemplate 0xa535b8 'isgreaterequal'
|-UsingDecl 0xa93bd8 <line:71:1, col:12> col:12 std::isless
|-UsingShadowDecl 0xa93c30 <col:12> col:12 implicit Function 0xa53e70 'isless' 'bool (float, float)'
|-UsingShadowDecl 0xa93c80 <col:12> col:12 implicit Function 0xa542d8 'isless' 'bool (double, double)'
|-UsingShadowDecl 0xa93cd0 <col:12> col:12 implicit Function 0xa545d0 'isless' 'bool (long double, long double)'
|-UsingShadowDecl 0xa93d20 <col:12> col:12 implicit FunctionTemplate 0xa54e58 'isless'
|-UsingDecl 0xa93d78 <line:72:1, col:12> col:12 std::islessequal
|-UsingShadowDecl 0xa93dd0 <col:12> col:12 implicit Function 0xa55720 'islessequal' 'bool (float, float)'
|-UsingShadowDecl 0xa93e20 <col:12> col:12 implicit Function 0xa55b88 'islessequal' 'bool (double, double)'
|-UsingShadowDecl 0xa93e70 <col:12> col:12 implicit Function 0xa55e80 'islessequal' 'bool (long double, long double)'
|-UsingShadowDecl 0xa93ec0 <col:12> col:12 implicit FunctionTemplate 0xa56708 'islessequal'
|-UsingDecl 0xa93f18 <line:73:1, col:12> col:12 std::islessgreater
|-UsingShadowDecl 0xa93f70 <col:12> col:12 implicit Function 0xa58008 'islessgreater' 'bool (float, float)'
|-UsingShadowDecl 0xa93fc0 <col:12> col:12 implicit Function 0xa58470 'islessgreater' 'bool (double, double)'
|-UsingShadowDecl 0xa94010 <col:12> col:12 implicit Function 0xa58768 'islessgreater' 'bool (long double, long double)'
|-UsingShadowDecl 0xa94060 <col:12> col:12 implicit FunctionTemplate 0xa58fe8 'islessgreater'
|-UsingDecl 0xa940b8 <line:74:1, col:12> col:12 std::isunordered
|-UsingShadowDecl 0xa94110 <col:12> col:12 implicit Function 0xa598a0 'isunordered' 'bool (float, float)'
|-UsingShadowDecl 0xa94160 <col:12> col:12 implicit Function 0xa59d08 'isunordered' 'bool (double, double)'
|-UsingShadowDecl 0xa941b0 <col:12> col:12 implicit Function 0xa5a018 'isunordered' 'bool (long double, long double)'
|-UsingShadowDecl 0xa94200 <col:12> col:12 implicit FunctionTemplate 0xa5a898 'isunordered'
|-UsingDecl 0xa94258 <line:78:1, col:12> col:12 std::acosh
|-UsingShadowDecl 0xa942b0 <col:12> col:12 implicit Function 0x8e8a88 'acosh' 'double (double) throw()'
|-UsingShadowDecl 0xa94300 <col:12> col:12 implicit Function 0xa61d98 'acosh' 'float (float)'
|-UsingShadowDecl 0xa94350 <col:12> col:12 implicit Function 0xa62168 'acosh' 'long double (long double)'
|-UsingShadowDecl 0xa943a0 <col:12> col:12 implicit FunctionTemplate 0xa63a48 'acosh'
|-UsingDecl 0xa943f8 <line:79:1, col:12> col:12 std::asinh
|-UsingShadowDecl 0xa94450 <col:12> col:12 implicit Function 0x8e8da0 'asinh' 'double (double) throw()'
|-UsingShadowDecl 0xa944a0 <col:12> col:12 implicit Function 0xa63da0 'asinh' 'float (float)'
|-UsingShadowDecl 0xa944f0 <col:12> col:12 implicit Function 0xa64170 'asinh' 'long double (long double)'
|-UsingShadowDecl 0xa94540 <col:12> col:12 implicit FunctionTemplate 0xa64918 'asinh'
|-UsingDecl 0xa94598 <line:80:1, col:12> col:12 std::atanh
|-UsingShadowDecl 0xa945f0 <col:12> col:12 implicit Function 0x8e90b8 'atanh' 'double (double) throw()'
|-UsingShadowDecl 0xa94640 <col:12> col:12 implicit Function 0xa64c70 'atanh' 'float (float)'
|-UsingShadowDecl 0xa94690 <col:12> col:12 implicit Function 0xa65040 'atanh' 'long double (long double)'
|-UsingShadowDecl 0xa946e0 <col:12> col:12 implicit FunctionTemplate 0xa65948 'atanh'
|-UsingDecl 0xa94738 <line:81:1, col:12> col:12 std::cbrt
|-UsingShadowDecl 0xa95300 <col:12> col:12 implicit Function 0x8ef418 'cbrt' 'double (double) throw()'
|-UsingShadowDecl 0xa95350 <col:12> col:12 implicit Function 0xa65ca0 'cbrt' 'float (float)'
|-UsingShadowDecl 0xa953a0 <col:12> col:12 implicit Function 0xa66098 'cbrt' 'long double (long double)'
|-UsingShadowDecl 0xa953f0 <col:12> col:12 implicit FunctionTemplate 0xa66868 'cbrt'
|-UsingDecl 0xa95448 <line:82:1, col:12> col:12 std::copysign
|-UsingShadowDecl 0xa954a0 <col:12> col:12 implicit Function 0x929b80 'copysign' 'double (double, double) throw()'
|-UsingShadowDecl 0xa954f0 <col:12> col:12 implicit Function 0xa66c70 'copysign' 'float (float, float)'
|-UsingShadowDecl 0xa95540 <col:12> col:12 implicit Function 0xa671a8 'copysign' 'long double (long double, long double)'
|-UsingShadowDecl 0xa95590 <col:12> col:12 implicit FunctionTemplate 0xa69fa8 'copysign'
|-UsingDecl 0xa955e8 <line:83:1, col:12> col:12 std::erf
|-UsingShadowDecl 0xa95640 <col:12> col:12 implicit Function 0x92c7a0 'erf' 'double (double) throw()'
|-UsingShadowDecl 0xa95690 <col:12> col:12 implicit Function 0xa6a820 'erf' 'float (float)'
|-UsingShadowDecl 0xa956e0 <col:12> col:12 implicit Function 0xa6abf0 'erf' 'long double (long double)'
|-UsingShadowDecl 0xa95730 <col:12> col:12 implicit FunctionTemplate 0xa6b398 'erf'
|-UsingDecl 0xa95788 <line:84:1, col:12> col:12 std::erfc
|-UsingShadowDecl 0xa957e0 <col:12> col:12 implicit Function 0x92cab8 'erfc' 'double (double) throw()'
|-UsingShadowDecl 0xa95830 <col:12> col:12 implicit Function 0xa6b720 'erfc' 'float (float)'
|-UsingShadowDecl 0xa95880 <col:12> col:12 implicit Function 0xa6baf0 'erfc' 'long double (long double)'
|-UsingShadowDecl 0xa958d0 <col:12> col:12 implicit FunctionTemplate 0xa6c298 'erfc'
|-UsingDecl 0xa95928 <line:85:1, col:12> col:12 std::exp2
|-UsingShadowDecl 0xa95980 <col:12> col:12 implicit Function 0x8eded8 'exp2' 'double (double) throw()'
|-UsingShadowDecl 0xa959d0 <col:12> col:12 implicit Function 0xa6c5f0 'exp2' 'float (float)'
|-UsingShadowDecl 0xa95a20 <col:12> col:12 implicit Function 0xa6c9c0 'exp2' 'long double (long double)'
|-UsingShadowDecl 0xa95a70 <col:12> col:12 implicit FunctionTemplate 0xa6d168 'exp2'
|-UsingDecl 0xa95ac8 <line:86:1, col:12> col:12 std::expm1
|-UsingShadowDecl 0xa95b20 <col:12> col:12 implicit Function 0x8eb9f8 'expm1' 'double (double) throw()'
|-UsingShadowDecl 0xa95b70 <col:12> col:12 implicit Function 0xa6d4c0 'expm1' 'float (float)'
|-UsingShadowDecl 0xa95bc0 <col:12> col:12 implicit Function 0xa6d908 'expm1' 'long double (long double)'
|-UsingShadowDecl 0xa95c10 <col:12> col:12 implicit FunctionTemplate 0xa6e0b8 'expm1'
|-UsingDecl 0xa95c68 <line:87:1, col:12> col:12 std::fdim
|-UsingShadowDecl 0xa95cc0 <col:12> col:12 implicit Function 0x934018 'fdim' 'double (double, double) throw()'
|-UsingShadowDecl 0xa95d10 <col:12> col:12 implicit Function 0xa6e498 'fdim' 'float (float, float)'
|-UsingShadowDecl 0xa95d60 <col:12> col:12 implicit Function 0xa6e9a8 'fdim' 'long double (long double, long double)'
|-UsingShadowDecl 0xa95db0 <col:12> col:12 implicit FunctionTemplate 0xa6f640 'fdim'
|-UsingDecl 0xa95e08 <line:88:1, col:12> col:12 std::fma
|-UsingShadowDecl 0xa95e60 <col:12> col:12 implicit Function 0x8ff938 'fma' 'double (double, double, double) throw()'
|-UsingShadowDecl 0xa95eb0 <col:12> col:12 implicit Function 0xa6ffd0 'fma' 'float (float, float, float)'
|-UsingShadowDecl 0xa95f00 <col:12> col:12 implicit Function 0xa706a8 'fma' 'long double (long double, long double, long double)'
|-UsingShadowDecl 0xa95f50 <col:12> col:12 implicit FunctionTemplate 0xa71978 'fma'
|-UsingDecl 0xa95fa8 <line:89:1, col:12> col:12 std::fmax
|-UsingShadowDecl 0xa96000 <col:12> col:12 implicit Function 0x934450 'fmax' 'double (double, double) throw()'
|-UsingShadowDecl 0xa96050 <col:12> col:12 implicit Function 0xa72528 'fmax' 'float (float, float)'
|-UsingShadowDecl 0xa960a0 <col:12> col:12 implicit Function 0xa72a60 'fmax' 'long double (long double, long double)'
|-UsingShadowDecl 0xa960f0 <col:12> col:12 implicit FunctionTemplate 0xa73700 'fmax'
|-UsingDecl 0xa96148 <line:90:1, col:12> col:12 std::fmin
|-UsingShadowDecl 0xa961a0 <col:12> col:12 implicit Function 0x8ff378 'fmin' 'double (double, double) throw()'
|-UsingShadowDecl 0xa961f0 <col:12> col:12 implicit Function 0xa74008 'fmin' 'float (float, float)'
|-UsingShadowDecl 0xa96240 <col:12> col:12 implicit Function 0xa74540 'fmin' 'long double (long double, long double)'
|-UsingShadowDecl 0xa96290 <col:12> col:12 implicit FunctionTemplate 0xa751a8 'fmin'
|-UsingDecl 0xa962e8 <line:91:1, col:12> col:12 std::hypot
|-UsingShadowDecl 0xa96340 <col:12> col:12 implicit Function 0x8ef068 'hypot' 'double (double, double) throw()'
|-UsingShadowDecl 0xa96390 <col:12> col:12 implicit Function 0xa75ae8 'hypot' 'float (float, float)'
|-UsingShadowDecl 0xa963e0 <col:12> col:12 implicit Function 0xa75ff8 'hypot' 'long double (long double, long double)'
|-UsingShadowDecl 0xa96430 <col:12> col:12 implicit FunctionTemplate 0xa76c38 'hypot'
|-UsingDecl 0xa96488 <line:92:1, col:12> col:12 std::ilogb
|-UsingShadowDecl 0xa964e0 <col:12> col:12 implicit Function 0x9315c0 'ilogb' 'int (double) throw()'
|-UsingShadowDecl 0xa96530 <col:12> col:12 implicit Function 0xa774b0 'ilogb' 'int (float)'
|-UsingShadowDecl 0xa96580 <col:12> col:12 implicit Function 0xa778e8 'ilogb' 'int (long double)'
|-UsingShadowDecl 0xa965d0 <col:12> col:12 implicit FunctionTemplate 0xa780c8 'ilogb'
|-UsingDecl 0xa96628 <line:93:1, col:12> col:12 std::lgamma
|-UsingShadowDecl 0xa96680 <col:12> col:12 implicit Function 0x92cdd0 'lgamma' 'double (double) throw()'
|-UsingShadowDecl 0xa966d0 <col:12> col:12 implicit Function 0xa78420 'lgamma' 'float (float)'
|-UsingShadowDecl 0xa96720 <col:12> col:12 implicit Function 0xa787f0 'lgamma' 'long double (long double)'
|-UsingShadowDecl 0xa96770 <col:12> col:12 implicit FunctionTemplate 0xa78f98 'lgamma'
|-UsingDecl 0xa967c8 <line:94:1, col:12> col:12 std::llrint
|-UsingShadowDecl 0xa96820 <col:12> col:12 implicit Function 0x9335c8 'llrint' 'long long (double) throw()'
|-UsingShadowDecl 0xa96870 <col:12> col:12 implicit Function 0xa792f0 'llrint' 'long long (float)'
|-UsingShadowDecl 0xa968c0 <col:12> col:12 implicit Function 0xa79f38 'llrint' 'long long (long double)'
|-UsingShadowDecl 0xa96910 <col:12> col:12 implicit FunctionTemplate 0xa7a818 'llrint'
|-UsingDecl 0xa96968 <line:95:1, col:12> col:12 std::llround
|-UsingShadowDecl 0xa969c0 <col:12> col:12 implicit Function 0x933c78 'llround' 'long long (double) throw()'
|-UsingShadowDecl 0xa96a10 <col:12> col:12 implicit Function 0xa7ab70 'llround' 'long long (float)'
|-UsingShadowDecl 0xa96a60 <col:12> col:12 implicit Function 0xa7af40 'llround' 'long long (long double)'
|-UsingShadowDecl 0xa96ab0 <col:12> col:12 implicit FunctionTemplate 0xa7b6e8 'llround'
|-UsingDecl 0xa96b08 <line:96:1, col:12> col:12 std::log1p
|-UsingShadowDecl 0xa96b60 <col:12> col:12 implicit Function 0x8ed8a8 'log1p' 'double (double) throw()'
|-UsingShadowDecl 0xa96bb0 <col:12> col:12 implicit Function 0xa7ba40 'log1p' 'float (float)'
|-UsingShadowDecl 0xa96c00 <col:12> col:12 implicit Function 0xa7beb0 'log1p' 'long double (long double)'
|-UsingShadowDecl 0xa96c50 <col:12> col:12 implicit FunctionTemplate 0xa7c658 'log1p'
|-UsingDecl 0xa96ca8 <line:97:1, col:12> col:12 std::log2
|-UsingShadowDecl 0xa96d00 <col:12> col:12 implicit Function 0x8ee1f0 'log2' 'double (double) throw()'
|-UsingShadowDecl 0xa96d50 <col:12> col:12 implicit Function 0xa7c9b0 'log2' 'float (float)'
|-UsingShadowDecl 0xa96da0 <col:12> col:12 implicit Function 0xa7cd80 'log2' 'long double (long double)'
|-UsingShadowDecl 0xa96df0 <col:12> col:12 implicit FunctionTemplate 0xa7d528 'log2'
|-UsingDecl 0xa96e48 <line:98:1, col:12> col:12 std::logb
|-UsingShadowDecl 0xa96ea0 <col:12> col:12 implicit Function 0x8edbc0 'logb' 'double (double) throw()'
|-UsingShadowDecl 0xa96ef0 <col:12> col:12 implicit Function 0xa7d880 'logb' 'float (float)'
|-UsingShadowDecl 0xa96f40 <col:12> col:12 implicit Function 0xa7dc50 'logb' 'long double (long double)'
|-UsingShadowDecl 0xa96f90 <col:12> col:12 implicit FunctionTemplate 0xa7e408 'logb'
|-UsingDecl 0xa96fe8 <line:99:1, col:12> col:12 std::lrint
|-UsingShadowDecl 0xa97040 <col:12> col:12 implicit Function 0x933210 'lrint' 'long (double) throw()'
|-UsingShadowDecl 0xa97090 <col:12> col:12 implicit Function 0xa7e760 'lrint' 'long (float)'
|-UsingShadowDecl 0xa970e0 <col:12> col:12 implicit Function 0xa7eb88 'lrint' 'long (long double)'
|-UsingShadowDecl 0xa97130 <col:12> col:12 implicit FunctionTemplate 0xa7f468 'lrint'
|-UsingDecl 0xa97188 <line:100:1, col:12> col:12 std::lround
|-UsingShadowDecl 0xa971e0 <col:12> col:12 implicit Function 0x933960 'lround' 'long (double) throw()'
|-UsingShadowDecl 0xa97230 <col:12> col:12 implicit Function 0xa7f7c0 'lround' 'long (float)'
|-UsingShadowDecl 0xa97280 <col:12> col:12 implicit Function 0xa7fb90 'lround' 'long (long double)'
|-UsingShadowDecl 0xa97e10 <col:12> col:12 implicit FunctionTemplate 0xa807c8 'lround'
|-UsingDecl 0xa97e68 <line:101:1, col:12> col:12 std::nearbyint
|-UsingShadowDecl 0xa97ec0 <col:12> col:12 implicit Function 0x932158 'nearbyint' 'double (double) throw()'
|-UsingShadowDecl 0xa97f10 <col:12> col:12 implicit Function 0xa80b20 'nearbyint' 'float (float)'
|-UsingShadowDecl 0xa97f60 <col:12> col:12 implicit Function 0xa80f18 'nearbyint' 'long double (long double)'
|-UsingShadowDecl 0xa97fb0 <col:12> col:12 implicit FunctionTemplate 0xa816e8 'nearbyint'
|-UsingDecl 0xa98008 <line:102:1, col:12> col:12 std::nextafter
|-UsingShadowDecl 0xa98060 <col:12> col:12 implicit Function 0x92ded8 'nextafter' 'double (double, double) throw()'
|-UsingShadowDecl 0xa980b0 <col:12> col:12 implicit Function 0xa81af0 'nextafter' 'float (float, float)'
|-UsingShadowDecl 0xa98100 <col:12> col:12 implicit Function 0xa82000 'nextafter' 'long double (long double, long double)'
|-UsingShadowDecl 0xa98150 <col:12> col:12 implicit FunctionTemplate 0xa82db8 'nextafter'
|-UsingDecl 0xa981a8 <line:103:1, col:12> col:12 std::nexttoward
|-UsingShadowDecl 0xa98200 <col:12> col:12 implicit Function 0x92e388 'nexttoward' 'double (double, long double) throw()'
|-UsingShadowDecl 0xa98250 <col:12> col:12 implicit Function 0xa836b8 'nexttoward' 'float (float, long double)'
|-UsingShadowDecl 0xa982a0 <col:12> col:12 implicit Function 0xa83c20 'nexttoward' 'long double (long double, long double)'
|-UsingShadowDecl 0xa982f0 <col:12> col:12 implicit FunctionTemplate 0xa856b0 'nexttoward'
|-UsingDecl 0xa98348 <line:104:1, col:12> col:12 std::remainder
|-UsingShadowDecl 0xa983a0 <col:12> col:12 implicit Function 0x930dd8 'remainder' 'double (double, double) throw()'
|-UsingShadowDecl 0xa983f0 <col:12> col:12 implicit Function 0xa85b30 'remainder' 'float (float, float)'
|-UsingShadowDecl 0xa98440 <col:12> col:12 implicit Function 0xa86040 'remainder' 'long double (long double, long double)'
|-UsingShadowDecl 0xa98490 <col:12> col:12 implicit FunctionTemplate 0xa86c88 'remainder'
|-UsingDecl 0xa984e8 <line:105:1, col:12> col:12 std::remquo
|-UsingShadowDecl 0xa98540 <col:12> col:12 implicit Function 0x932d88 'remquo' 'double (double, double, int *) throw()'
|-UsingShadowDecl 0xa98590 <col:12> col:12 implicit Function 0xa87780 'remquo' 'float (float, float, int *)'
|-UsingShadowDecl 0xa985e0 <col:12> col:12 implicit Function 0xa87e78 'remquo' 'long double (long double, long double, int *)'
|-UsingShadowDecl 0xa98630 <col:12> col:12 implicit FunctionTemplate 0xa88ce8 'remquo'
|-UsingDecl 0xa98688 <line:106:1, col:12> col:12 std::rint
|-UsingShadowDecl 0xa986e0 <col:12> col:12 implicit Function 0x92db10 'rint' 'double (double) throw()'
|-UsingShadowDecl 0xa98730 <col:12> col:12 implicit Function 0xa89598 'rint' 'float (float)'
|-UsingShadowDecl 0xa98780 <col:12> col:12 implicit Function 0xa89a60 'rint' 'long double (long double)'
|-UsingShadowDecl 0xa987d0 <col:12> col:12 implicit FunctionTemplate 0xa8a238 'rint'
|-UsingDecl 0xa98828 <line:107:1, col:12> col:12 std::round
|-UsingShadowDecl 0xa98880 <col:12> col:12 implicit Function 0x932498 'round' 'double (double) throw()'
|-UsingShadowDecl 0xa988d0 <col:12> col:12 implicit Function 0xa8a5b8 'round' 'float (float)'
|-UsingShadowDecl 0xa98920 <col:12> col:12 implicit Function 0xa8a9b0 'round' 'long double (long double)'
|-UsingShadowDecl 0xa98970 <col:12> col:12 implicit FunctionTemplate 0xa8b188 'round'
|-UsingDecl 0xa989c8 <line:108:1, col:12> col:12 std::scalbln
|-UsingShadowDecl 0xa98a20 <col:12> col:12 implicit Function 0x931d68 'scalbln' 'double (double, long) throw()'
|-UsingShadowDecl 0xa98a70 <col:12> col:12 implicit Function 0xa8b590 'scalbln' 'float (float, long)'
|-UsingShadowDecl 0xa98ac0 <col:12> col:12 implicit Function 0xa8bc20 'scalbln' 'long double (long double, long)'
|-UsingShadowDecl 0xa98b10 <col:12> col:12 implicit FunctionTemplate 0xa8c5b8 'scalbln'
|-UsingDecl 0xa98b68 <line:109:1, col:12> col:12 std::scalbn
|-UsingShadowDecl 0xa98bc0 <col:12> col:12 implicit Function 0x931210 'scalbn' 'double (double, int) throw()'
|-UsingShadowDecl 0xa98c10 <col:12> col:12 implicit Function 0xa8ca38 'scalbn' 'float (float, int)'
|-UsingShadowDecl 0xa98c60 <col:12> col:12 implicit Function 0xa8cf48 'scalbn' 'long double (long double, int)'
|-UsingShadowDecl 0xa98cb0 <col:12> col:12 implicit FunctionTemplate 0xa8d838 'scalbn'
|-UsingDecl 0xa98d08 <line:110:1, col:12> col:12 std::tgamma
|-UsingShadowDecl 0xa98d60 <col:12> col:12 implicit Function 0x92d0e8 'tgamma' 'double (double) throw()'
|-UsingShadowDecl 0xa98db0 <col:12> col:12 implicit Function 0xa8e1e0 'tgamma' 'float (float)'
|-UsingShadowDecl 0xa98e00 <col:12> col:12 implicit Function 0xa8e5b0 'tgamma' 'long double (long double)'
|-UsingShadowDecl 0xa98e50 <col:12> col:12 implicit FunctionTemplate 0xa8ed58 'tgamma'
|-UsingDecl 0xa98ea8 <line:111:1, col:12> col:12 std::trunc
|-UsingShadowDecl 0xa98f00 <col:12> col:12 implicit Function 0x932860 'trunc' 'double (double) throw()'
|-UsingShadowDecl 0xa98f50 <col:12> col:12 implicit Function 0xa8f0b0 'trunc' 'float (float)'
|-UsingShadowDecl 0xa98fa0 <col:12> col:12 implicit Function 0xa8f4a8 'trunc' 'long double (long double)'
|-UsingShadowDecl 0xa98ff0 <col:12> col:12 implicit FunctionTemplate 0xa8fc78 'trunc'
|-LinkageSpecDecl 0xa99060 </usr/include/x86_64-linux-gnu/sys/cdefs.h:114:24, line:115:22> line:114:31 C
| |-TypedefDecl 0xa990e0 </usr/lib/llvm-10/lib/clang/10.0.0/include/stdarg.h:14:1, col:27> col:27 va_list '__builtin_va_list':'__va_list_tag [1]'
| | `-TypedefType 0xa990b0 '__builtin_va_list' sugar
| |   |-Typedef 0x81a058 '__builtin_va_list'
| |   `-ConstantArrayType 0x81a000 '__va_list_tag [1]' 1 
| |     `-RecordType 0x7dc0d0 '__va_list_tag'
| |       `-CXXRecord 0x7dc038 '__va_list_tag'
| |-TypedefDecl 0xa99148 <line:32:1, col:27> col:27 referenced __gnuc_va_list '__builtin_va_list':'__va_list_tag [1]'
| | `-TypedefType 0xa990b0 '__builtin_va_list' sugar
| |   |-Typedef 0x81a058 '__builtin_va_list'
| |   `-ConstantArrayType 0x81a000 '__va_list_tag [1]' 1 
| |     `-RecordType 0x7dc0d0 '__va_list_tag'
| |       `-CXXRecord 0x7dc038 '__va_list_tag'
| |-CXXRecordDecl 0xa991a0 </usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h:13:9, line:21:1> line:13:9 struct definition
| | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial needs_implicit
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-FieldDecl 0xa992d0 <line:15:3, col:7> col:7 __count 'int'
| | |-CXXRecordDecl 0xa99320 <line:16:3, line:20:3> line:16:3 union definition
| | | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | | | |-DefaultConstructor exists trivial needs_implicit
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-FieldDecl 0xa99450 <<built-in>:125:23, /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h:18:19> col:19 __wch 'unsigned int'
| | | `-FieldDecl 0xa99500 <line:19:5, col:18> col:10 __wchb 'char [4]'
| | `-FieldDecl 0xa995c8 <line:16:3, line:20:5> col:5 __value 'union (anonymous union at /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h:16:3)':'__mbstate_t::(anonymous union at /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h:16:3)'
| |-TypedefDecl 0xa996a8 <line:13:1, line:21:3> col:3 referenced __mbstate_t 'struct __mbstate_t':'__mbstate_t'
| | `-ElaboratedType 0xa99650 'struct __mbstate_t' sugar
| |   `-RecordType 0xa99230 '__mbstate_t'
| |     `-CXXRecord 0xa991a0 ''
| |-CXXRecordDecl 0xa99718 </usr/include/x86_64-linux-gnu/bits/types/__fpos_t.h:10:9, line:14:1> line:10:16 struct _G_fpos_t definition
| | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial needs_implicit
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-CXXRecordDecl 0xa99838 <col:9, col:16> col:16 implicit struct _G_fpos_t
| | |-FieldDecl 0xa998d8 <line:12:3, col:11> col:11 __pos '__off_t':'long'
| | `-FieldDecl 0xa99960 <line:13:3, col:15> col:15 __state '__mbstate_t':'__mbstate_t'
| |-TypedefDecl 0xa99a28 <line:10:1, line:14:3> col:3 referenced __fpos_t 'struct _G_fpos_t':'_G_fpos_t'
| | `-ElaboratedType 0xa999d0 'struct _G_fpos_t' sugar
| |   `-RecordType 0xa997b0 '_G_fpos_t'
| |     `-CXXRecord 0xa99718 '_G_fpos_t'
| |-CXXRecordDecl 0xa99a98 </usr/include/x86_64-linux-gnu/bits/types/__fpos64_t.h:10:9, line:14:1> line:10:16 struct _G_fpos64_t definition
| | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial needs_implicit
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-CXXRecordDecl 0xa99bb8 <col:9, col:16> col:16 implicit struct _G_fpos64_t
| | |-FieldDecl 0xa99c58 <line:12:3, col:13> col:13 __pos '__off64_t':'long'
| | `-FieldDecl 0xa99cb8 <line:13:3, col:15> col:15 __state '__mbstate_t':'__mbstate_t'
| |-TypedefDecl 0xa99d78 <line:10:1, line:14:3> col:3 referenced __fpos64_t 'struct _G_fpos64_t':'_G_fpos64_t'
| | `-ElaboratedType 0xa99d20 'struct _G_fpos64_t' sugar
| |   `-RecordType 0xa99b30 '_G_fpos64_t'
| |     `-CXXRecord 0xa99a98 '_G_fpos64_t'
| |-CXXRecordDecl 0xa9d8b0 </usr/include/x86_64-linux-gnu/bits/types/__FILE.h:4:1, col:8> col:8 struct _IO_FILE
| |-TypedefDecl 0xa9d9b0 <line:5:1, col:25> col:25 __FILE 'struct _IO_FILE':'_IO_FILE'
| | `-ElaboratedType 0xa9d960 'struct _IO_FILE' sugar
| |   `-RecordType 0xa9d940 '_IO_FILE'
| |     `-CXXRecord 0xa9de18 '_IO_FILE'
| |-CXXRecordDecl 0xa9da08 prev 0xa9d8b0 </usr/include/x86_64-linux-gnu/bits/types/FILE.h:4:1, col:8> col:8 struct _IO_FILE
| |-TypedefDecl 0xa9dab8 <line:7:1, col:25> col:25 referenced FILE 'struct _IO_FILE':'_IO_FILE'
| | `-ElaboratedType 0xa9d960 'struct _IO_FILE' sugar
| |   `-RecordType 0xa9d940 '_IO_FILE'
| |     `-CXXRecord 0xa9de18 '_IO_FILE'
| |-CXXRecordDecl 0xa9db10 prev 0xa9da08 </usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h:35:1, col:8> col:8 struct _IO_FILE
| |-CXXRecordDecl 0xa9dba0 <line:36:1, col:8> col:8 struct _IO_marker
| |-CXXRecordDecl 0xa9dc50 <line:37:1, col:8> col:8 struct _IO_codecvt
| |-CXXRecordDecl 0xa9dd00 <line:38:1, col:8> col:8 struct _IO_wide_data
| |-TypedefDecl 0xa9ddc0 <line:43:1, col:14> col:14 referenced _IO_lock_t 'void'
| | `-BuiltinType 0x7db2e0 'void'
| |-CXXRecordDecl 0xa9de18 prev 0xa9db10 <line:49:1, line:99:1> line:49:8 struct _IO_FILE definition
| | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial needs_implicit
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-CXXRecordDecl 0xa9df10 <col:1, col:8> col:8 implicit struct _IO_FILE
| | |-FieldDecl 0xa9dfb8 <line:51:3, col:7> col:7 _flags 'int'
| | |-FieldDecl 0xa9e020 <line:54:3, col:9> col:9 _IO_read_ptr 'char *'
| | |-FieldDecl 0xa9e088 <line:55:3, col:9> col:9 _IO_read_end 'char *'
| | |-FieldDecl 0xa9e0f0 <line:56:3, col:9> col:9 _IO_read_base 'char *'
| | |-FieldDecl 0xa9e158 <line:57:3, col:9> col:9 _IO_write_base 'char *'
| | |-FieldDecl 0xa9e1c0 <line:58:3, col:9> col:9 _IO_write_ptr 'char *'
| | |-FieldDecl 0xa9e228 <line:59:3, col:9> col:9 _IO_write_end 'char *'
| | |-FieldDecl 0xa9e290 <line:60:3, col:9> col:9 _IO_buf_base 'char *'
| | |-FieldDecl 0xa9e2f8 <line:61:3, col:9> col:9 _IO_buf_end 'char *'
| | |-FieldDecl 0xa9e360 <line:64:3, col:9> col:9 _IO_save_base 'char *'
| | |-FieldDecl 0xa9e3c8 <line:65:3, col:9> col:9 _IO_backup_base 'char *'
| | |-FieldDecl 0xa9e430 <line:66:3, col:9> col:9 _IO_save_end 'char *'
| | |-FieldDecl 0xa9e530 <line:68:3, col:22> col:22 _markers 'struct _IO_marker *'
| | |-FieldDecl 0xa9e600 <line:70:3, col:20> col:20 _chain 'struct _IO_FILE *'
| | |-FieldDecl 0xa9e668 <line:72:3, col:7> col:7 _fileno 'int'
| | |-FieldDecl 0xa9e6d0 <line:73:3, col:7> col:7 _flags2 'int'
| | |-FieldDecl 0xa9e730 <line:74:3, col:11> col:11 _old_offset '__off_t':'long'
| | |-FieldDecl 0xa9e798 <line:77:3, col:18> col:18 _cur_column 'unsigned short'
| | |-FieldDecl 0xa9e800 <line:78:3, col:15> col:15 _vtable_offset 'signed char'
| | |-FieldDecl 0xa9e8e8 <line:79:3, col:19> col:8 _shortbuf 'char [1]'
| | |-FieldDecl 0xa9e998 <line:81:3, col:15> col:15 _lock '_IO_lock_t *'
| | |-FieldDecl 0xa9e9f8 <line:89:3, col:13> col:13 _offset '__off64_t':'long'
| | |-FieldDecl 0xa9eb00 <line:91:3, col:23> col:23 _codecvt 'struct _IO_codecvt *'
| | |-FieldDecl 0xa9ec00 <line:92:3, col:25> col:25 _wide_data 'struct _IO_wide_data *'
| | |-FieldDecl 0xa9ec78 <line:93:3, col:20> col:20 _freeres_list 'struct _IO_FILE *'
| | |-FieldDecl 0xa9ece0 <line:94:3, col:9> col:9 _freeres_buf 'void *'
| | |-FieldDecl 0xa9ed40 <line:95:3, col:10> col:10 __pad5 'size_t':'unsigned long'
| | |-FieldDecl 0xa9eda8 <line:96:3, col:7> col:7 _mode 'int'
| | `-FieldDecl 0xa9f008 <line:98:3, col:74> col:8 _unused2 'char [20]'
| |-TypedefDecl 0xa9f2a8 </usr/include/x86_64-linux-gnu/bits/types/cookie_io_functions_t.h:27:1, line:28:58> line:27:19 referenced cookie_read_function_t '__ssize_t (void *, char *, size_t)'
| | `-FunctionProtoType 0xa9f230 '__ssize_t (void *, char *, size_t)' cdecl
| |   |-TypedefType 0x93cc50 '__ssize_t' sugar
| |   | |-Typedef 0x8d9740 '__ssize_t'
| |   | `-BuiltinType 0x7db3a0 'long'
| |   |-PointerType 0x7dbae0 'void *'
| |   | `-BuiltinType 0x7db2e0 'void'
| |   |-PointerType 0x7dbfa0 'char *'
| |   | `-BuiltinType 0x7db320 'char'
| |   `-TypedefType 0x9c3f20 'size_t' sugar
| |     |-Typedef 0x9c3360 'size_t'
| |     `-BuiltinType 0x7db440 'unsigned long'
| |-TypedefDecl 0xa9f538 <line:36:1, line:37:59> line:36:19 referenced cookie_write_function_t '__ssize_t (void *, const char *, size_t)'
| | `-FunctionProtoType 0xa9f4c0 '__ssize_t (void *, const char *, size_t)' cdecl
| |   |-TypedefType 0x93cc50 '__ssize_t' sugar
| |   | |-Typedef 0x8d9740 '__ssize_t'
| |   | `-BuiltinType 0x7db3a0 'long'
| |   |-PointerType 0x7dbae0 'void *'
| |   | `-BuiltinType 0x7db2e0 'void'
| |   |-PointerType 0x7dbdd0 'const char *'
| |   | `-QualType 0x7db321 'const char' const
| |   |   `-BuiltinType 0x7db320 'char'
| |   `-TypedefType 0x9c3f20 'size_t' sugar
| |     |-Typedef 0x9c3360 'size_t'
| |     `-BuiltinType 0x7db440 'unsigned long'
| |-TypedefDecl 0xa9f7f0 <line:45:1, col:78> col:13 referenced cookie_seek_function_t 'int (void *, __off64_t *, int)'
| | `-FunctionProtoType 0xa9f770 'int (void *, __off64_t *, int)' cdecl
| |   |-BuiltinType 0x7db380 'int'
| |   |-PointerType 0x7dbae0 'void *'
| |   | `-BuiltinType 0x7db2e0 'void'
| |   |-PointerType 0xa9f610 '__off64_t *'
| |   | `-TypedefType 0x8d9880 '__off64_t' sugar
| |   |   |-Typedef 0x8d0ea0 '__off64_t'
| |   |   `-BuiltinType 0x7db3a0 'long'
| |   `-BuiltinType 0x7db380 'int'
| |-TypedefDecl 0xaa5d80 <line:48:1, col:52> col:13 referenced cookie_close_function_t 'int (void *)'
| | `-FunctionProtoType 0xaa5d20 'int (void *)' cdecl
| |   |-BuiltinType 0x7db380 'int'
| |   `-PointerType 0x7dbae0 'void *'
| |     `-BuiltinType 0x7db2e0 'void'
| |-CXXRecordDecl 0xaa5dd8 <line:55:9, line:61:1> line:55:16 struct _IO_cookie_io_functions_t definition
| | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial needs_implicit
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-CXXRecordDecl 0xaa5ef8 <col:9, col:16> col:16 implicit struct _IO_cookie_io_functions_t
| | |-FieldDecl 0xaa6018 <line:57:3, col:27> col:27 read 'cookie_read_function_t *'
| | |-FieldDecl 0xaa60f8 <line:58:3, col:28> col:28 write 'cookie_write_function_t *'
| | |-FieldDecl 0xaa61d8 <line:59:3, col:27> col:27 seek 'cookie_seek_function_t *'
| | `-FieldDecl 0xaa62b8 <line:60:3, col:28> col:28 close 'cookie_close_function_t *'
| |-TypedefDecl 0xaa6378 <line:55:1, line:61:3> col:3 referenced cookie_io_functions_t 'struct _IO_cookie_io_functions_t':'_IO_cookie_io_functions_t'
| | `-ElaboratedType 0xaa6320 'struct _IO_cookie_io_functions_t' sugar
| |   `-RecordType 0xaa5e70 '_IO_cookie_io_functions_t'
| |     `-CXXRecord 0xaa5dd8 '_IO_cookie_io_functions_t'
| |-TypedefDecl 0xaa6440 prev 0xa990e0 </usr/include/stdio.h:52:1, col:24> col:24 va_list '__gnuc_va_list':'__va_list_tag [1]'
| | `-TypedefType 0xaa63f0 '__gnuc_va_list' sugar
| |   |-Typedef 0xa99148 '__gnuc_va_list'
| |   `-TypedefType 0xa990b0 '__builtin_va_list' sugar
| |     |-Typedef 0x81a058 '__builtin_va_list'
| |     `-ConstantArrayType 0x81a000 '__va_list_tag [1]' 1 
| |       `-RecordType 0x7dc0d0 '__va_list_tag'
| |         `-CXXRecord 0x7dc038 '__va_list_tag'
| |-TypedefDecl 0xaa64d0 <line:84:1, col:18> col:18 referenced fpos_t '__fpos_t':'_G_fpos_t'
| | `-TypedefType 0xaa64a0 '__fpos_t' sugar
| |   |-Typedef 0xa99a28 '__fpos_t'
| |   `-ElaboratedType 0xa999d0 'struct _G_fpos_t' sugar
| |     `-RecordType 0xa997b0 '_G_fpos_t'
| |       `-CXXRecord 0xa99718 '_G_fpos_t'
| |-TypedefDecl 0xaa6560 <line:89:1, col:20> col:20 referenced fpos64_t '__fpos64_t':'_G_fpos64_t'
| | `-TypedefType 0xaa6530 '__fpos64_t' sugar
| |   |-Typedef 0xa99d78 '__fpos64_t'
| |   `-ElaboratedType 0xa99d20 'struct _G_fpos64_t' sugar
| |     `-RecordType 0xa99b30 '_G_fpos64_t'
| |       `-CXXRecord 0xa99a98 '_G_fpos64_t'
| |-VarDecl 0xaa6618 <line:137:1, col:14> col:14 stdin 'FILE *' extern
| |-VarDecl 0xaa6690 <line:138:1, col:14> col:14 stdout 'FILE *' extern
| |-VarDecl 0xaa6708 <line:139:1, col:14> col:14 used stderr 'FILE *' extern
| |-FunctionDecl 0xaa6828 <line:146:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/stdio.h:146:12 remove 'int (const char *) throw()' extern
| | `-ParmVarDecl 0xaa6788 <col:20, col:32> col:32 __filename 'const char *'
| |-FunctionDecl 0xaa6a88 <line:148:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/stdio.h:148:12 rename 'int (const char *, const char *) throw()' extern
| | |-ParmVarDecl 0xaa68e8 <col:20, col:32> col:32 __old 'const char *'
| | `-ParmVarDecl 0xaa6968 <col:39, col:51> col:51 __new 'const char *'
| |-FunctionDecl 0xaa6e28 <line:152:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/stdio.h:152:12 renameat 'int (int, const char *, int, const char *) throw()' extern
| | |-ParmVarDecl 0xaa6b50 <col:22, col:26> col:26 __oldfd 'int'
| | |-ParmVarDecl 0xaa6bd0 <col:35, col:47> col:47 __old 'const char *'
| | |-ParmVarDecl 0xaa6c50 <col:54, col:58> col:58 __newfd 'int'
| | `-ParmVarDecl 0xaa6cd0 <line:153:8, col:20> col:20 __new 'const char *'
| |-FunctionDecl 0xaa7268 <line:164:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/stdio.h:164:12 renameat2 'int (int, const char *, int, const char *, unsigned int) throw()' extern
| | |-ParmVarDecl 0xaa6f00 <col:23, col:27> col:27 __oldfd 'int'
| | |-ParmVarDecl 0xaa6f80 <col:36, col:48> col:48 __old 'const char *'
| | |-ParmVarDecl 0xaa7000 <col:55, col:59> col:59 __newfd 'int'
| | |-ParmVarDecl 0xaa7080 <line:165:9, col:21> col:21 __new 'const char *'
| | `-ParmVarDecl 0xaa7100 <col:28, col:41> col:41 __flags 'unsigned int'
| |-FunctionDecl 0xaa7428 <line:173:1, col:27> col:14 tmpfile 'FILE *()' extern
| |-FunctionDecl 0xaa7560 <line:183:1, col:29> col:14 tmpfile64 'FILE *()' extern
| |-FunctionDecl 0xaa76b8 <line:187:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/stdio.h:187:14 tmpnam 'char *(char *) throw()' extern
| | `-ParmVarDecl 0xaa7618 <col:22, col:28> col:28 __s 'char *'
| |-FunctionDecl 0xaa7818 <line:192:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/stdio.h:192:14 tmpnam_r 'char *(char *) throw()' extern
| | `-ParmVarDecl 0xaa7778 <col:24, col:30> col:30 __s 'char *'
| |-FunctionDecl 0xaa7a78 <line:204:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:208:58> /usr/include/stdio.h:204:14 tempnam 'char *(const char *, const char *) throw()' extern
| | |-ParmVarDecl 0xaa78d8 <col:23, col:35> col:35 __dir 'const char *'
| | |-ParmVarDecl 0xaa7958 <col:42, col:54> col:54 __pfx 'const char *'
| | `-RestrictAttr 0xaa7b28 </usr/include/x86_64-linux-gnu/sys/cdefs.h:208:47> malloc
| |-FunctionDecl 0xaab350 </usr/include/stdio.h:213:1, col:34> col:12 fclose 'int (FILE *)' extern
| | `-ParmVarDecl 0xaa7b90 <col:20, col:26> col:26 __stream 'FILE *'
| |-FunctionDecl 0xaab4a0 <line:218:1, col:34> col:12 fflush 'int (FILE *)' extern
| | `-ParmVarDecl 0xaab408 <col:20, col:26> col:26 __stream 'FILE *'
| |-FunctionDecl 0xaab5f0 <line:227:1, col:43> col:12 fflush_unlocked 'int (FILE *)' extern
| | `-ParmVarDecl 0xaab558 <col:29, col:35> col:35 __stream 'FILE *'
| |-FunctionDecl 0xaab738 <line:237:1, col:27> col:12 fcloseall 'int ()' extern
| |-FunctionDecl 0xaab988 <line:246:1, line:247:37> line:246:14 fopen 'FILE *(const char *__restrict, const char *__restrict)' extern
| | |-ParmVarDecl 0xaab7f0 <col:21, col:44> col:44 __filename 'const char *__restrict'
| | `-ParmVarDecl 0xaab870 <line:247:7, col:30> col:30 __modes 'const char *__restrict'
| |-FunctionDecl 0xaabca8 <line:252:1, line:254:34> line:252:14 freopen 'FILE *(const char *__restrict, const char *__restrict, FILE *__restrict)' extern
| | |-ParmVarDecl 0xaaba90 <col:23, col:46> col:46 __filename 'const char *__restrict'
| | |-ParmVarDecl 0xaabb10 <line:253:9, col:32> col:32 __modes 'const char *__restrict'
| | `-ParmVarDecl 0xaabb88 <line:254:9, col:26> col:26 __stream 'FILE *__restrict'
| |-FunctionDecl 0xaabe90 <line:270:1, line:271:39> line:270:14 fopen64 'FILE *(const char *__restrict, const char *__restrict)' extern
| | |-ParmVarDecl 0xaabd78 <col:23, col:46> col:46 __filename 'const char *__restrict'
| | `-ParmVarDecl 0xaabdf8 <line:271:9, col:32> col:32 __modes 'const char *__restrict'
| |-FunctionDecl 0xaac0f0 <line:272:1, line:274:29> line:272:14 freopen64 'FILE *(const char *__restrict, const char *__restrict, FILE *__restrict)' extern
| | |-ParmVarDecl 0xaabf58 <col:25, col:48> col:48 __filename 'const char *__restrict'
| | |-ParmVarDecl 0xaabfd8 <line:273:4, col:27> col:27 __modes 'const char *__restrict'
| | `-ParmVarDecl 0xaac050 <line:274:4, col:21> col:21 __stream 'FILE *__restrict'
| |-FunctionDecl 0xaac360 <line:279:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/stdio.h:279:14 fdopen 'FILE *(int, const char *) throw()' extern
| | |-ParmVarDecl 0xaac1c0 <col:22, col:26> col:26 __fd 'int'
| | `-ParmVarDecl 0xaac240 <col:32, col:44> col:44 __modes 'const char *'
| |-FunctionDecl 0xaac670 <line:285:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/stdio.h:285:14 fopencookie 'FILE *(void *__restrict, const char *__restrict, cookie_io_functions_t) throw()' extern
| | |-ParmVarDecl 0xaac428 <col:27, col:44> col:44 __magic_cookie 'void *__restrict'
| | |-ParmVarDecl 0xaac4a8 <line:286:6, col:29> col:29 __modes 'const char *__restrict'
| | `-ParmVarDecl 0xaac540 <line:287:6, col:28> col:28 __io_funcs 'cookie_io_functions_t':'_IO_cookie_io_functions_t'
| |-FunctionDecl 0xaac960 <line:292:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/stdio.h:292:14 fmemopen 'FILE *(void *, size_t, const char *) throw()' extern
| | |-ParmVarDecl 0xaac740 <col:24, col:30> col:30 __s 'void *'
| | |-ParmVarDecl 0xaac7b8 <col:35, col:42> col:42 __len 'size_t':'unsigned long'
| | `-ParmVarDecl 0xaac838 <col:49, col:61> col:61 __modes 'const char *'
| |-FunctionDecl 0xaacc20 <line:298:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/stdio.h:298:14 open_memstream 'FILE *(char **, size_t *) throw()' extern
| | |-ParmVarDecl 0xaaca30 <col:30, col:37> col:37 __bufloc 'char **'
| | `-ParmVarDecl 0xaacb08 <col:47, col:55> col:55 __sizeloc 'size_t *'
| |-FunctionDecl 0xaace80 <line:304:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/stdio.h:304:13 setbuf 'void (FILE *__restrict, char *__restrict) throw()' extern
| | |-ParmVarDecl 0xaacce0 <col:21, col:38> col:38 __stream 'FILE *__restrict'
| | `-ParmVarDecl 0xaacd60 <col:48, col:65> col:65 __buf 'char *__restrict'
| |-FunctionDecl 0xaad208 <line:308:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/stdio.h:308:12 setvbuf 'int (FILE *__restrict, char *__restrict, int, size_t) throw()' extern
| | |-ParmVarDecl 0xaacf40 <col:21, col:38> col:38 __stream 'FILE *__restrict'
| | |-ParmVarDecl 0xaacfc0 <col:48, col:65> col:65 __buf 'char *__restrict'
| | |-ParmVarDecl 0xaad040 <line:309:7, col:11> col:11 __modes 'int'
| | `-ParmVarDecl 0xaad0b8 <col:20, col:27> col:27 __n 'size_t':'unsigned long'
| |-FunctionDecl 0xaad520 <line:314:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/stdio.h:314:13 setbuffer 'void (FILE *__restrict, char *__restrict, size_t) throw()' extern
| | |-ParmVarDecl 0xaad2d8 <col:24, col:41> col:41 __stream 'FILE *__restrict'
| | |-ParmVarDecl 0xaad378 <col:51, col:68> col:68 __buf 'char *__restrict'
| | `-ParmVarDecl 0xaad3f0 <line:315:10, col:17> col:17 __size 'size_t':'unsigned long'
| |-FunctionDecl 0xaad6e0 <line:318:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/stdio.h:318:13 setlinebuf 'void (FILE *) throw()' extern
| | `-ParmVarDecl 0xaad5e8 <col:25, col:31> col:31 __stream 'FILE *'
| |-FunctionDecl 0xaad938 <line:326:1, line:327:43> line:326:12 used fprintf 'int (FILE *__restrict, const char *__restrict, ...)' extern
| | |-ParmVarDecl 0xaad798 <col:21, col:38> col:38 __stream 'FILE *__restrict'
| | |-ParmVarDecl 0xaad818 <line:327:7, col:30> col:30 __format 'const char *__restrict'
| | `-FormatAttr 0xaada30 <line:326:12> Implicit printf 2 3
| |-FunctionDecl 0xaadbc8 <line:332:1, col:56> col:12 used printf 'int (const char *__restrict, ...)' extern
| | |-ParmVarDecl 0xaadab0 <col:20, col:43> col:43 __format 'const char *__restrict'
| | `-FormatAttr 0xaadc70 <col:12> Implicit printf 1 2
| |-FunctionDecl 0xaadea0 <line:334:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:62:29> /usr/include/stdio.h:334:12 sprintf 'int (char *__restrict, const char *__restrict, ...) throw()' extern
| | |-ParmVarDecl 0xaadcf0 <col:21, col:38> col:38 __s 'char *__restrict'
| | |-ParmVarDecl 0xaadd70 <line:335:7, col:30> col:30 __format 'const char *__restrict'
| | `-FormatAttr 0xaadf50 <line:334:12> Implicit printf 2 3
| |-FunctionDecl 0xaae250 <line:341:1, line:342:28> line:341:12 vfprintf 'int (FILE *__restrict, const char *__restrict, __va_list_tag *)' extern
| | |-ParmVarDecl 0xaadfc8 <col:22, col:39> col:39 __s 'FILE *__restrict'
| | |-ParmVarDecl 0xaae048 <col:44, col:67> col:67 __format 'const char *__restrict'
| | |-ParmVarDecl 0xaae120 <line:342:8, col:23> col:23 __arg '__va_list_tag *':'__va_list_tag *'
| | `-FormatAttr 0xaae350 <line:341:12> Implicit printf 2 0
| |-FunctionDecl 0xaae560 <line:347:1, col:74> col:12 vprintf 'int (const char *__restrict, __va_list_tag *)' extern
| | |-ParmVarDecl 0xaae3d0 <col:21, col:44> col:44 __format 'const char *__restrict'
| | |-ParmVarDecl 0xaae448 <col:54, col:69> col:69 __arg '__va_list_tag *':'__va_list_tag *'
| | `-FormatAttr 0xaae610 <col:12> Implicit printf 1 0
| |-FunctionDecl 0xaae8b8 <line:349:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:62:29> /usr/include/stdio.h:349:12 vsprintf 'int (char *__restrict, const char *__restrict, __va_list_tag *) throw()' extern
| | |-ParmVarDecl 0xaae690 <col:22, col:39> col:39 __s 'char *__restrict'
| | |-ParmVarDecl 0xaae710 <col:44, col:67> col:67 __format 'const char *__restrict'
| | |-ParmVarDecl 0xaae788 <line:350:8, col:23> col:23 __arg '__va_list_tag *':'__va_list_tag *'
| | `-FormatAttr 0xaae970 <line:349:12> Implicit printf 2 0
| |-FunctionDecl 0xaaec80 <line:354:1, line:356:62> line:354:12 snprintf 'int (char *__restrict, size_t, const char *__restrict, ...) throw()' extern
| | |-ParmVarDecl 0xaae9f0 <col:22, col:39> col:39 __s 'char *__restrict'
| | |-ParmVarDecl 0xaaea68 <col:44, col:51> col:51 __maxlen 'size_t':'unsigned long'
| | |-ParmVarDecl 0xaaeae8 <line:355:8, col:31> col:31 __format 'const char *__restrict'
| | `-FormatAttr 0xaaed38 <line:356:32, col:60> printf 3 4
| |-FunctionDecl 0xaaf0c8 <line:358:1, line:360:62> line:358:12 vsnprintf 'int (char *__restrict, size_t, const char *__restrict, __va_list_tag *) throw()' extern
| | |-ParmVarDecl 0xaaedb8 <col:23, col:40> col:40 __s 'char *__restrict'
| | |-ParmVarDecl 0xaaee30 <col:45, col:52> col:52 __maxlen 'size_t':'unsigned long'
| | |-ParmVarDecl 0xaaeeb0 <line:359:9, col:32> col:32 __format 'const char *__restrict'
| | |-ParmVarDecl 0xaaef28 <col:42, col:57> col:57 __arg '__va_list_tag *':'__va_list_tag *'
| | `-FormatAttr 0xaaf188 <line:360:32, col:60> printf 3 0
| |-FunctionDecl 0x972d68 <line:366:1, line:368:62> line:366:12 vasprintf 'int (char **__restrict, const char *__restrict, __va_list_tag *) throw()' extern
| | |-ParmVarDecl 0xaaf208 <col:23, col:41> col:41 __ptr 'char **__restrict'
| | |-ParmVarDecl 0xaaf288 <col:48, col:71> col:71 __f 'const char *__restrict'
| | |-ParmVarDecl 0x972be0 <line:367:9, col:24> col:24 __arg '__va_list_tag *':'__va_list_tag *'
| | `-FormatAttr 0x972e20 <line:368:32, col:60> printf 2 0
| |-FunctionDecl 0x9730a0 <line:369:1, line:371:62> line:369:12 __asprintf 'int (char **__restrict, const char *__restrict, ...) throw()' extern
| | |-ParmVarDecl 0x972ea0 <col:24, col:42> col:42 __ptr 'char **__restrict'
| | |-ParmVarDecl 0x972f20 <line:370:10, col:33> col:33 __fmt 'const char *__restrict'
| | `-FormatAttr 0x973150 <line:371:32, col:60> printf 2 3
| |-FunctionDecl 0x973348 <line:372:1, line:374:62> line:372:12 asprintf 'int (char **__restrict, const char *__restrict, ...) throw()' extern
| | |-ParmVarDecl 0x9731d0 <col:22, col:40> col:40 __ptr 'char **__restrict'
| | |-ParmVarDecl 0x973250 <line:373:8, col:31> col:31 __fmt 'const char *__restrict'
| | `-FormatAttr 0x9733f8 <line:374:32, col:60> printf 2 3
| |-FunctionDecl 0x9736f0 <line:379:1, line:381:52> line:379:12 vdprintf 'int (int, const char *__restrict, __va_list_tag *)' extern
| | |-ParmVarDecl 0x973478 <col:22, col:26> col:26 __fd 'int'
| | |-ParmVarDecl 0x9734f8 <col:32, col:55> col:55 __fmt 'const char *__restrict'
| | |-ParmVarDecl 0x973570 <line:380:8, col:23> col:23 __arg '__va_list_tag *':'__va_list_tag *'
| | `-FormatAttr 0x9737a8 <line:381:22, col:50> printf 2 0
| |-FunctionDecl 0x973a18 <line:382:1, line:383:52> line:382:12 dprintf 'int (int, const char *__restrict, ...)' extern
| | |-ParmVarDecl 0x973828 <col:21, col:25> col:25 __fd 'int'
| | |-ParmVarDecl 0x9738a8 <col:31, col:54> col:54 __fmt 'const char *__restrict'
| | `-FormatAttr 0x973ac8 <line:383:22, col:50> printf 2 3
| |-FunctionDecl 0x973c60 <line:391:1, line:392:42> line:391:12 fscanf 'int (FILE *__restrict, const char *__restrict, ...)' extern
| | |-ParmVarDecl 0x973b40 <col:20, col:37> col:37 __stream 'FILE *__restrict'
| | |-ParmVarDecl 0x973bc0 <line:392:6, col:29> col:29 __format 'const char *__restrict'
| | `-FormatAttr 0x973d10 <line:391:12> Implicit scanf 2 3
| |-FunctionDecl 0x973e28 <line:397:1, col:55> col:12 scanf 'int (const char *__restrict, ...)' extern
| | |-ParmVarDecl 0x973d90 <col:19, col:42> col:42 __format 'const char *__restrict'
| | `-FormatAttr 0x973ed0 <col:12> Implicit scanf 1 2
| |-FunctionDecl 0x974100 <line:399:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/stdio.h:399:12 sscanf 'int (const char *__restrict, const char *__restrict, ...) throw()' extern
| | |-ParmVarDecl 0x973f50 <col:20, col:43> col:43 __s 'const char *__restrict'
| | |-ParmVarDecl 0x973fd0 <line:400:6, col:29> col:29 __format 'const char *__restrict'
| | `-FormatAttr 0x9741f0 <line:399:12> Implicit scanf 2 3
| |-FunctionDecl 0x974430 prev 0x973c60 <line:407:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:174:79> /usr/include/stdio.h:407:24 fscanf 'int (FILE *__restrict, const char *__restrict, ...)' extern
| | |-ParmVarDecl 0x974268 <col:33, col:50> col:50 __stream 'FILE *__restrict'
| | |-ParmVarDecl 0x9742e8 <line:408:5, col:28> col:28 __format 'const char *__restrict'
| | |-FormatAttr 0x974558 <line:391:12> Inherited scanf 2 3
| | `-AsmLabelAttr 0x9744d0 <<scratch space>:55:1> "__isoc99_fscanf" IsLiteralLabel
| |-FunctionDecl 0x9746e8 prev 0x973e28 </usr/include/stdio.h:410:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:174:79> /usr/include/stdio.h:410:24 scanf 'int (const char *__restrict, ...)' extern
| | |-ParmVarDecl 0x9745a8 <col:32, col:55> col:55 __format 'const char *__restrict'
| | |-FormatAttr 0x974808 <line:397:12> Inherited scanf 1 2
| | `-AsmLabelAttr 0x974788 <<scratch space>:57:1> "__isoc99_scanf" IsLiteralLabel
| |-FunctionDecl 0x9749b0 prev 0x974100 </usr/include/stdio.h:412:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:177:52> /usr/include/stdio.h:412:28 sscanf 'int (const char *__restrict, const char *__restrict, ...) throw()' extern
| | |-ParmVarDecl 0x974858 <col:37, col:60> col:60 __s 'const char *__restrict'
| | |-ParmVarDecl 0x9748d8 <line:413:9, col:32> col:32 __format 'const char *__restrict'
| | |-FormatAttr 0x974ad8 <line:399:12> Inherited scanf 2 3
| | `-AsmLabelAttr 0x974a50 <<scratch space>:59:1> "__isoc99_sscanf" IsLiteralLabel
| |-FunctionDecl 0x974d60 </usr/include/stdio.h:432:1, line:434:51> line:432:12 vfscanf 'int (FILE *__restrict, const char *__restrict, __va_list_tag *)' extern
| | |-ParmVarDecl 0x974b20 <col:21, col:38> col:38 __s 'FILE *__restrict'
| | |-ParmVarDecl 0x974bf0 <col:43, col:66> col:66 __format 'const char *__restrict'
| | |-ParmVarDecl 0x974c68 <line:433:7, col:22> col:22 __arg '__va_list_tag *':'__va_list_tag *'
| | `-FormatAttr 0x974e18 <line:434:22, col:49> scanf 2 0
| |-FunctionDecl 0x975040 <line:440:1, line:441:51> line:440:12 vscanf 'int (const char *__restrict, __va_list_tag *)' extern
| | |-ParmVarDecl 0x974ed8 <col:20, col:43> col:43 __format 'const char *__restrict'
| | |-ParmVarDecl 0x974f50 <col:53, col:68> col:68 __arg '__va_list_tag *':'__va_list_tag *'
| | `-FormatAttr 0x9750f0 <line:441:22, col:49> scanf 1 0
| |-FunctionDecl 0x975428 <line:444:1, line:446:59> line:444:12 vsscanf 'int (const char *__restrict, const char *__restrict, __va_list_tag *) throw()' extern
| | |-ParmVarDecl 0x9751b0 <col:21, col:44> col:44 __s 'const char *__restrict'
| | |-ParmVarDecl 0x975230 <line:445:7, col:30> col:30 __format 'const char *__restrict'
| | |-ParmVarDecl 0x9752a8 <col:40, col:55> col:55 __arg '__va_list_tag *':'__va_list_tag *'
| | `-FormatAttr 0x9754e0 <line:446:30, col:57> scanf 2 0
| |-FunctionDecl 0x975838 prev 0x974d60 <line:451:1, line:455:51> line:451:24 vfscanf 'int (FILE *__restrict, const char *__restrict, __va_list_tag *)' extern
| | |-ParmVarDecl 0x9755a0 <line:452:11, col:28> col:28 __s 'FILE *__restrict'
| | |-ParmVarDecl 0x975620 <line:453:4, col:27> col:27 __format 'const char *__restrict'
| | |-ParmVarDecl 0x975698 <col:37, col:52> col:52 __arg '__va_list_tag *':'__va_list_tag *'
| | |-AsmLabelAttr 0x9758d8 <<scratch space>:62:1> "__isoc99_vfscanf" IsLiteralLabel
| | `-FormatAttr 0x975968 </usr/include/stdio.h:455:22, col:49> scanf 2 0
| |-FunctionDecl 0x975b50 prev 0x975040 <line:456:1, line:458:51> line:456:24 vscanf 'int (const char *__restrict, __va_list_tag *)' extern
| | |-ParmVarDecl 0x9759b8 <col:33, col:56> col:56 __format 'const char *__restrict'
| | |-ParmVarDecl 0x975a30 <line:457:5, col:20> col:20 __arg '__va_list_tag *':'__va_list_tag *'
| | |-AsmLabelAttr 0x975bf0 <<scratch space>:64:1> "__isoc99_vscanf" IsLiteralLabel
| | `-FormatAttr 0x975c78 </usr/include/stdio.h:458:22, col:49> scanf 1 0
| |-FunctionDecl 0x975ef0 prev 0x975428 <line:459:1, line:463:51> line:459:28 vsscanf 'int (const char *__restrict, const char *__restrict, __va_list_tag *) throw()' extern
| | |-ParmVarDecl 0x975cc8 <line:460:8, col:31> col:31 __s 'const char *__restrict'
| | |-ParmVarDecl 0x975d48 <line:461:8, col:31> col:31 __format 'const char *__restrict'
| | |-ParmVarDecl 0x975dc0 <line:462:8, col:23> col:23 __arg '__va_list_tag *':'__va_list_tag *'
| | |-AsmLabelAttr 0x975f90 <<scratch space>:66:1> "__isoc99_vsscanf" IsLiteralLabel
| | `-FormatAttr 0x976020 </usr/include/stdio.h:463:22, col:49> scanf 2 0
| |-FunctionDecl 0x976100 <line:485:1, col:33> col:12 fgetc 'int (FILE *)' extern
| | `-ParmVarDecl 0x976068 <col:19, col:25> col:25 __stream 'FILE *'
| |-FunctionDecl 0x976250 <line:486:1, col:32> col:12 getc 'int (FILE *)' extern
| | `-ParmVarDecl 0x9761b8 <col:18, col:24> col:24 __stream 'FILE *'
| |-FunctionDecl 0x976398 <line:492:1, col:25> col:12 getchar 'int ()' extern
| |-FunctionDecl 0x9764e0 <line:499:1, col:41> col:12 getc_unlocked 'int (FILE *)' extern
| | `-ParmVarDecl 0x976448 <col:27, col:33> col:33 __stream 'FILE *'
| |-FunctionDecl 0x976628 <line:500:1, col:34> col:12 getchar_unlocked 'int ()' extern
| |-FunctionDecl 0x976770 <line:510:1, col:42> col:12 fgetc_unlocked 'int (FILE *)' extern
| | `-ParmVarDecl 0x9766d8 <col:28, col:34> col:34 __stream 'FILE *'
| |-FunctionDecl 0x9769c0 <line:521:1, col:42> col:12 fputc 'int (int, FILE *)' extern
| | |-ParmVarDecl 0x976830 <col:19, col:23> col:23 __c 'int'
| | `-ParmVarDecl 0x9768a8 <col:28, col:34> col:34 __stream 'FILE *'
| |-FunctionDecl 0x976c00 <line:522:1, col:41> col:12 putc 'int (int, FILE *)' extern
| | |-ParmVarDecl 0x976a88 <col:18, col:22> col:22 __c 'int'
| | `-ParmVarDecl 0x976b00 <col:27, col:33> col:33 __stream 'FILE *'
| |-FunctionDecl 0x976d60 <line:528:1, col:28> col:12 putchar 'int (int)' extern
| | `-ParmVarDecl 0x976cc8 <col:21, col:25> col:25 __c 'int'
| |-FunctionDecl 0x976f38 <line:537:1, col:51> col:12 fputc_unlocked 'int (int, FILE *)' extern
| | |-ParmVarDecl 0x976e20 <col:28, col:32> col:32 __c 'int'
| | `-ParmVarDecl 0x976e98 <col:37, col:43> col:43 __stream 'FILE *'
| |-FunctionDecl 0x977118 <line:545:1, col:50> col:12 putc_unlocked 'int (int, FILE *)' extern
| | |-ParmVarDecl 0x977000 <col:27, col:31> col:31 __c 'int'
| | `-ParmVarDecl 0x977078 <col:36, col:42> col:42 __stream 'FILE *'
| |-FunctionDecl 0x977278 <line:546:1, col:37> col:12 putchar_unlocked 'int (int)' extern
| | `-ParmVarDecl 0x9771e0 <col:30, col:34> col:34 __c 'int'
| |-FunctionDecl 0x9773c8 <line:553:1, col:32> col:12 getw 'int (FILE *)' extern
| | `-ParmVarDecl 0x977330 <col:18, col:24> col:24 __stream 'FILE *'
| |-FunctionDecl 0x9775a0 <line:556:1, col:41> col:12 putw 'int (int, FILE *)' extern
| | |-ParmVarDecl 0x977488 <col:18, col:22> col:22 __w 'int'
| | `-ParmVarDecl 0x977500 <col:27, col:33> col:33 __stream 'FILE *'
| |-FunctionDecl 0x977890 <line:564:1, col:77> col:14 fgets 'char *(char *__restrict, int, FILE *__restrict)' extern
| | |-ParmVarDecl 0x977668 <col:21, col:38> col:38 __s 'char *__restrict'
| | |-ParmVarDecl 0x9776e8 <col:43, col:47> col:47 __n 'int'
| | `-ParmVarDecl 0x977760 <col:52, col:69> col:69 __stream 'FILE *__restrict'
| |-FunctionDecl 0x977b00 <line:587:1, line:588:34> line:587:14 fgets_unlocked 'char *(char *__restrict, int, FILE *__restrict)' extern
| | |-ParmVarDecl 0x977960 <col:30, col:47> col:47 __s 'char *__restrict'
| | |-ParmVarDecl 0x9779e0 <col:52, col:56> col:56 __n 'int'
| | `-ParmVarDecl 0x977a58 <line:588:9, col:26> col:26 __stream 'FILE *__restrict'
| |-FunctionDecl 0x977e88 <line:603:1, line:605:55> line:603:18 __getdelim '__ssize_t (char **__restrict, size_t *__restrict, int, FILE *__restrict)' extern
| | |-ParmVarDecl 0x977bd0 <col:30, col:48> col:48 __lineptr 'char **__restrict'
| | |-ParmVarDecl 0x977c48 <line:604:30, col:49> col:49 __n 'size_t *__restrict'
| | |-ParmVarDecl 0x977cc8 <col:54, col:58> col:58 __delimiter 'int'
| | `-ParmVarDecl 0x977d40 <line:605:30, col:47> col:47 __stream 'FILE *__restrict'
| |-FunctionDecl 0x978178 <line:606:1, line:608:53> line:606:18 getdelim '__ssize_t (char **__restrict, size_t *__restrict, int, FILE *__restrict)' extern
| | |-ParmVarDecl 0x977f60 <col:28, col:46> col:46 __lineptr 'char **__restrict'
| | |-ParmVarDecl 0x977fd8 <line:607:28, col:47> col:47 __n 'size_t *__restrict'
| | |-ParmVarDecl 0x978058 <col:52, col:56> col:56 __delimiter 'int'
| | `-ParmVarDecl 0x9780d0 <line:608:28, col:45> col:45 __stream 'FILE *__restrict'
| |-FunctionDecl 0x978468 <line:616:1, line:618:52> line:616:18 getline '__ssize_t (char **__restrict, size_t *__restrict, FILE *__restrict)' extern
| | |-ParmVarDecl 0x978250 <col:27, col:45> col:45 __lineptr 'char **__restrict'
| | |-ParmVarDecl 0x9782c8 <line:617:27, col:46> col:46 __n 'size_t *__restrict'
| | `-ParmVarDecl 0x978340 <line:618:27, col:44> col:44 __stream 'FILE *__restrict'
| |-FunctionDecl 0x9786d0 <line:626:1, col:72> col:12 fputs 'int (const char *__restrict, FILE *__restrict)' extern
| | |-ParmVarDecl 0x978538 <col:19, col:42> col:42 __s 'const char *__restrict'
| | `-ParmVarDecl 0x9785b0 <col:47, col:64> col:64 __stream 'FILE *__restrict'
| |-FunctionDecl 0x978830 <line:632:1, col:33> col:12 puts 'int (const char *)' extern
| | `-ParmVarDecl 0x978798 <col:18, col:30> col:30 __s 'const char *'
| |-FunctionDecl 0x978a08 <line:639:1, col:43> col:12 ungetc 'int (int, FILE *)' extern
| | |-ParmVarDecl 0x9788f0 <col:20, col:24> col:24 __c 'int'
| | `-ParmVarDecl 0x978968 <col:29, col:35> col:35 __stream 'FILE *'
| |-FunctionDecl 0xac1568 <line:646:1, line:647:45> line:646:15 fread 'size_t (void *__restrict, size_t, size_t, FILE *__restrict)' extern
| | |-ParmVarDecl 0x978ad0 <col:22, col:39> col:39 __ptr 'void *__restrict'
| | |-ParmVarDecl 0x978b48 <col:46, col:53> col:53 __size 'size_t':'unsigned long'
| | |-ParmVarDecl 0xac13b0 <line:647:8, col:15> col:15 __n 'size_t':'unsigned long'
| | `-ParmVarDecl 0xac1428 <col:20, col:37> col:37 __stream 'FILE *__restrict'
| |-FunctionDecl 0xac1938 <line:652:1, line:653:41> line:652:15 fwrite 'size_t (const void *__restrict, size_t, size_t, FILE *__restrict)' extern
| | |-ParmVarDecl 0xac1690 <col:23, col:46> col:46 __ptr 'const void *__restrict'
| | |-ParmVarDecl 0xac1708 <col:53, col:60> col:60 __size 'size_t':'unsigned long'
| | |-ParmVarDecl 0xac1780 <line:653:9, col:16> col:16 __n 'size_t':'unsigned long'
| | `-ParmVarDecl 0xac17f8 <col:21, col:38> col:38 __s 'FILE *__restrict'
| |-FunctionDecl 0xac1b78 <line:662:1, line:663:32> line:662:12 fputs_unlocked 'int (const char *__restrict, FILE *__restrict)' extern
| | |-ParmVarDecl 0xac1a60 <col:28, col:51> col:51 __s 'const char *__restrict'
| | `-ParmVarDecl 0xac1ad8 <line:663:7, col:24> col:24 __stream 'FILE *__restrict'
| |-FunctionDecl 0xac1e50 <line:673:1, line:674:47> line:673:15 fread_unlocked 'size_t (void *__restrict, size_t, size_t, FILE *__restrict)' extern
| | |-ParmVarDecl 0xac1c40 <col:31, col:48> col:48 __ptr 'void *__restrict'
| | |-ParmVarDecl 0xac1cb8 <col:55, col:62> col:62 __size 'size_t':'unsigned long'
| | |-ParmVarDecl 0xac1d30 <line:674:10, col:17> col:17 __n 'size_t':'unsigned long'
| | `-ParmVarDecl 0xac1da8 <col:22, col:39> col:39 __stream 'FILE *__restrict'
| |-FunctionDecl 0xac2138 <line:675:1, line:676:48> line:675:15 fwrite_unlocked 'size_t (const void *__restrict, size_t, size_t, FILE *__restrict)' extern
| | |-ParmVarDecl 0xac1f28 <col:32, col:55> col:55 __ptr 'const void *__restrict'
| | |-ParmVarDecl 0xac1fa0 <col:62, col:69> col:69 __size 'size_t':'unsigned long'
| | |-ParmVarDecl 0xac2018 <line:676:11, col:18> col:18 __n 'size_t':'unsigned long'
| | `-ParmVarDecl 0xac2090 <col:23, col:40> col:40 __stream 'FILE *__restrict'
| |-FunctionDecl 0xac2430 <line:684:1, col:63> col:12 fseek 'int (FILE *, long, int)' extern
| | |-ParmVarDecl 0xac2208 <col:19, col:25> col:25 __stream 'FILE *'
| | |-ParmVarDecl 0xac2288 <col:35, col:44> col:44 __off 'long'
| | `-ParmVarDecl 0xac2308 <col:51, col:55> col:55 __whence 'int'
| |-FunctionDecl 0xac25f0 <line:689:1, col:38> col:17 ftell 'long (FILE *)' extern
| | `-ParmVarDecl 0xac24f8 <col:24, col:30> col:30 __stream 'FILE *'
| |-FunctionDecl 0xac2768 <line:694:1, col:35> col:13 rewind 'void (FILE *)' extern
| | `-ParmVarDecl 0xac26a8 <col:21, col:27> col:27 __stream 'FILE *'
| |-FunctionDecl 0xac2a00 <line:707:1, col:63> col:12 fseeko 'int (FILE *, __off_t, int)' extern
| | |-ParmVarDecl 0xac2820 <col:20, col:26> col:26 __stream 'FILE *'
| | |-ParmVarDecl 0xac2898 <col:36, col:44> col:44 __off '__off_t':'long'
| | `-ParmVarDecl 0xac2918 <col:51, col:55> col:55 __whence 'int'
| |-FunctionDecl 0xac2b88 <line:712:1, col:38> col:16 ftello '__off_t (FILE *)' extern
| | `-ParmVarDecl 0xac2ac8 <col:24, col:30> col:30 __stream 'FILE *'
| |-FunctionDecl 0xac2e50 <line:731:1, col:72> col:12 fgetpos 'int (FILE *__restrict, fpos_t *__restrict)' extern
| | |-ParmVarDecl 0xac2c40 <col:21, col:38> col:38 __stream 'FILE *__restrict'
| | `-ParmVarDecl 0xac2d38 <col:48, col:67> col:67 __pos 'fpos_t *__restrict'
| |-FunctionDecl 0xac3100 <line:736:1, col:56> col:12 fsetpos 'int (FILE *, const fpos_t *)' extern
| | |-ParmVarDecl 0xac2f10 <col:21, col:27> col:27 __stream 'FILE *'
| | `-ParmVarDecl 0xac2fe8 <col:37, col:51> col:51 __pos 'const fpos_t *'
| |-FunctionDecl 0xac33c0 <line:750:1, col:67> col:12 fseeko64 'int (FILE *, __off64_t, int)' extern
| | |-ParmVarDecl 0xac31c0 <col:22, col:28> col:28 __stream 'FILE *'
| | |-ParmVarDecl 0xac3238 <col:38, col:48> col:48 __off '__off64_t':'long'
| | `-ParmVarDecl 0xac32b8 <col:55, col:59> col:59 __whence 'int'
| |-FunctionDecl 0xac3548 <line:751:1, col:42> col:18 ftello64 '__off64_t (FILE *)' extern
| | `-ParmVarDecl 0xac3488 <col:28, col:34> col:34 __stream 'FILE *'
| |-FunctionDecl 0xac3810 <line:752:1, col:76> col:12 fgetpos64 'int (FILE *__restrict, fpos64_t *__restrict)' extern
| | |-ParmVarDecl 0xac3600 <col:23, col:40> col:40 __stream 'FILE *__restrict'
| | `-ParmVarDecl 0xac36f8 <col:50, col:71> col:71 __pos 'fpos64_t *__restrict'
| |-FunctionDecl 0xac3ac0 <line:753:1, col:60> col:12 fsetpos64 'int (FILE *, const fpos64_t *)' extern
| | |-ParmVarDecl 0xac38d0 <col:23, col:29> col:29 __stream 'FILE *'
| | `-ParmVarDecl 0xac39a8 <col:39, col:55> col:55 __pos 'const fpos64_t *'
| |-FunctionDecl 0xac3c18 <line:757:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/stdio.h:757:13 clearerr 'void (FILE *) throw()' extern
| | `-ParmVarDecl 0xac3b80 <col:23, col:29> col:29 __stream 'FILE *'
| |-FunctionDecl 0xac3da8 <line:759:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/stdio.h:759:12 feof 'int (FILE *) throw()' extern
| | `-ParmVarDecl 0xac3cd0 <col:18, col:24> col:24 __stream 'FILE *'
| |-FunctionDecl 0xac3f00 <line:761:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/stdio.h:761:12 ferror 'int (FILE *) throw()' extern
| | `-ParmVarDecl 0xac3e60 <col:20, col:26> col:26 __stream 'FILE *'
| |-FunctionDecl 0xac4050 <line:765:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/stdio.h:765:13 clearerr_unlocked 'void (FILE *) throw()' extern
| | `-ParmVarDecl 0xac3fb8 <col:32, col:38> col:38 __stream 'FILE *'
| |-FunctionDecl 0xac41a8 <line:766:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/stdio.h:766:12 feof_unlocked 'int (FILE *) throw()' extern
| | `-ParmVarDecl 0xac4108 <col:27, col:33> col:33 __stream 'FILE *'
| |-FunctionDecl 0xac4300 <line:767:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/stdio.h:767:12 ferror_unlocked 'int (FILE *) throw()' extern
| | `-ParmVarDecl 0xac4260 <col:29, col:35> col:35 __stream 'FILE *'
| |-FunctionDecl 0xac4488 <line:775:1, col:36> col:13 perror 'void (const char *)' extern
| | `-ParmVarDecl 0xac43c0 <col:21, col:33> col:33 __s 'const char *'
| |-VarDecl 0xac4548 </usr/include/x86_64-linux-gnu/bits/sys_errlist.h:26:1, col:12> col:12 sys_nerr 'int' extern
| |-VarDecl 0xac4630 <line:27:1, col:38> col:26 sys_errlist 'const char *const []' extern
| |-VarDecl 0xac46b0 <line:30:1, col:12> col:12 _sys_nerr 'int' extern
| |-VarDecl 0xac4740 <line:31:1, col:39> col:26 _sys_errlist 'const char *const []' extern
| |-FunctionDecl 0xac4858 </usr/include/stdio.h:786:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/stdio.h:786:12 fileno 'int (FILE *) throw()' extern
| | `-ParmVarDecl 0xac47b8 <col:20, col:26> col:26 __stream 'FILE *'
| |-FunctionDecl 0xac49b0 <line:791:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/stdio.h:791:12 fileno_unlocked 'int (FILE *) throw()' extern
| | `-ParmVarDecl 0xac4910 <col:29, col:35> col:35 __stream 'FILE *'
| |-FunctionDecl 0xac4b88 <line:800:1, col:63> col:14 popen 'FILE *(const char *, const char *)' extern
| | |-ParmVarDecl 0xac4a70 <col:21, col:33> col:33 __command 'const char *'
| | `-ParmVarDecl 0xac4af0 <col:44, col:56> col:56 __modes 'const char *'
| |-FunctionDecl 0xac4ce0 <line:806:1, col:34> col:12 pclose 'int (FILE *)' extern
| | `-ParmVarDecl 0xac4c48 <col:20, col:26> col:26 __stream 'FILE *'
| |-FunctionDecl 0xac4e40 <line:812:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/stdio.h:812:14 ctermid 'char *(char *) throw()' extern
| | `-ParmVarDecl 0xac4da0 <col:23, col:29> col:29 __s 'char *'
| |-FunctionDecl 0xac4f98 <line:818:1, col:32> col:14 cuserid 'char *(char *)' extern
| | `-ParmVarDecl 0xac4f00 <col:23, col:29> col:29 __s 'char *'
| |-CXXRecordDecl 0xac5040 <line:823:1, col:8> col:8 struct obstack
| |-FunctionDecl 0xac53d0 <line:826:1, line:828:62> line:826:12 obstack_printf 'int (struct obstack *__restrict, const char *__restrict, ...) throw()' extern
| | |-ParmVarDecl 0xac51a0 <col:28, col:55> col:55 __obstack 'struct obstack *__restrict'
| | |-ParmVarDecl 0xac5220 <line:827:7, col:30> col:30 __format 'const char *__restrict'
| | `-FormatAttr 0xac5480 <line:828:32, col:60> printf 2 3
| |-FunctionDecl 0xac5788 <line:829:1, line:832:62> line:829:12 obstack_vprintf 'int (struct obstack *__restrict, const char *__restrict, __va_list_tag *) throw()' extern
| | |-ParmVarDecl 0xac5510 <col:29, col:56> col:56 __obstack 'struct obstack *__restrict'
| | |-ParmVarDecl 0xac5590 <line:830:8, col:31> col:31 __format 'const char *__restrict'
| | |-ParmVarDecl 0xac5608 <line:831:8, col:23> col:23 __args '__va_list_tag *':'__va_list_tag *'
| | `-FormatAttr 0xac5840 <line:832:32, col:60> printf 2 0
| |-FunctionDecl 0xac5950 <line:840:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/stdio.h:840:13 flockfile 'void (FILE *) throw()' extern
| | `-ParmVarDecl 0xac58b8 <col:24, col:30> col:30 __stream 'FILE *'
| |-FunctionDecl 0xac5aa8 <line:844:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/stdio.h:844:12 ftrylockfile 'int (FILE *) throw()' extern
| | `-ParmVarDecl 0xac5a08 <col:26, col:32> col:32 __stream 'FILE *'
| |-FunctionDecl 0xac5bf8 <line:847:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/stdio.h:847:13 funlockfile 'void (FILE *) throw()' extern
| | `-ParmVarDecl 0xac5b60 <col:26, col:32> col:32 __stream 'FILE *'
| |-FunctionDecl 0xac5d48 <line:858:1, col:27> col:12 __uflow 'int (FILE *)' extern
| | `-ParmVarDecl 0xac5cb0 <col:21, col:26> col:27 'FILE *'
| `-FunctionDecl 0xac5fa0 <line:859:1, col:35> col:12 __overflow 'int (FILE *, int)' extern
|   |-ParmVarDecl 0xac5e00 <col:24, col:29> col:30 'FILE *'
|   `-ParmVarDecl 0xac5e80 <col:32> col:35 'int'
|-LinkageSpecDecl 0xac6070 </usr/include/x86_64-linux-gnu/sys/cdefs.h:114:24, line:115:22> line:114:31 C
| |-FunctionDecl 0xac6440 </usr/include/assert.h:69:1, line:71:43> line:69:13 used __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' extern
| | |-ParmVarDecl 0xac60d8 <col:28, col:40> col:40 __assertion 'const char *'
| | |-ParmVarDecl 0xac6158 <col:53, col:65> col:65 __file 'const char *'
| | |-ParmVarDecl 0xac61d8 <line:70:7, col:20> col:20 __line 'unsigned int'
| | `-ParmVarDecl 0xac6258 <col:28, col:40> col:40 __function 'const char *'
| |-FunctionDecl 0xac6880 <line:74:1, line:76:43> line:74:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' extern
| | |-ParmVarDecl 0xac6518 <col:35, col:39> col:39 __errnum 'int'
| | |-ParmVarDecl 0xac6598 <col:49, col:61> col:61 __file 'const char *'
| | |-ParmVarDecl 0xac6618 <line:75:7, col:20> col:20 __line 'unsigned int'
| | `-ParmVarDecl 0xac6698 <col:28, col:40> col:40 __function 'const char *'
| `-FunctionDecl 0xac6c00 <line:81:1, line:82:43> line:81:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn)) throw()' extern
|   |-ParmVarDecl 0xac6958 <col:23, col:35> col:35 __assertion 'const char *'
|   |-ParmVarDecl 0xac69d8 <col:48, col:60> col:60 __file 'const char *'
|   `-ParmVarDecl 0xac6a58 <col:68, col:72> col:72 __line 'int'
|-NamespaceDecl 0xac6cd8 prev 0xa22078 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/type_traits:40:1, line:3104:1> line:40:11 std
| |-original Namespace 0x81a0b0 'std'
| |-VisibilityAttr 0xac6d48 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:70:49, col:67> Default
| |-ClassTemplateDecl 0xac6f40 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/type_traits:56:3, line:69:5> line:57:12 integral_constant
| | |-TemplateTypeParmDecl 0xac6da0 <line:56:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0xac6e28 <col:26, col:30> col:30 referenced '_Tp' depth 0 index 1 __v
| | |-CXXRecordDecl 0xac6eb0 <line:57:5, line:69:5> line:57:12 struct integral_constant definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-CXXRecordDecl 0xac71f0 <col:5, col:12> col:12 implicit struct integral_constant
| | | |-VarDecl 0xac7290 <line:59:7, col:53> col:45 referenced value 'const _Tp' static constexpr cinit
| | | | `-DeclRefExpr 0xac72f8 <col:53> '_Tp' NonTypeTemplateParm 0xac6e28 '__v' '_Tp'
| | | |-TypedefDecl 0xac7328 <line:60:7, col:45> col:45 referenced value_type '_Tp'
| | | | `-TemplateTypeParmType 0xac6df0 '_Tp' dependent depth 0 index 0
| | | |   `-TemplateTypeParm 0xac6da0 '_Tp'
| | | |-TypedefDecl 0xacd978 <line:61:7, col:45> col:45 type 'integral_constant<_Tp, __v>':'integral_constant<_Tp, __v>'
| | | | `-TemplateSpecializationType 0xacd890 'integral_constant<_Tp, __v>' sugar dependent integral_constant
| | | |   |-TemplateArgument type '_Tp'
| | | |   |-TemplateArgument expr
| | | |   | `-DeclRefExpr 0xac7390 <col:38> '_Tp' NonTypeTemplateParm 0xac6e28 '__v' '_Tp'
| | | |   `-InjectedClassNameType 0xac7160 'integral_constant<_Tp, __v>' dependent
| | | |     `-CXXRecord 0xac6eb0 'integral_constant'
| | | |-CXXConversionDecl 0xacdac0 <line:62:7, col:70> col:17 constexpr operator type-parameter-0-0 'std::integral_constant::value_type () const noexcept'
| | | | `-CompoundStmt 0xacdca8 <col:54, col:70>
| | | |   `-ReturnStmt 0xacdc98 <col:56, col:63>
| | | |     `-DeclRefExpr 0xacdc78 <col:63> 'const _Tp' lvalue Var 0xac7290 'value' 'const _Tp'
| | | `-CXXMethodDecl 0xacdb98 <line:67:7, col:72> col:28 constexpr operator() 'std::integral_constant::value_type () const noexcept'
| | |   `-CompoundStmt 0xacdcf0 <col:56, col:72>
| | |     `-ReturnStmt 0xacdce0 <col:58, col:65>
| | |       `-DeclRefExpr 0xacdcc0 <col:65> 'const _Tp' lvalue Var 0xac7290 'value' 'const _Tp'
| | |-ClassTemplateSpecializationDecl 0xace198 <line:56:3, line:69:5> line:57:12 struct integral_constant definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'bool'
| | | |-TemplateArgument integral 1
| | | |-CXXRecordDecl 0xa0d4f8 prev 0xace198 <col:5, col:12> col:12 implicit struct integral_constant
| | | |-VarDecl 0xa0d598 <line:59:7, col:53> col:45 used value 'const bool':'const bool' static constexpr cinit
| | | | `-SubstNonTypeTemplateParmExpr 0xa0d620 <col:53> 'bool'
| | | |   `-CXXBoolLiteralExpr 0xa0d610 <col:53> 'bool' true
| | | |-TypedefDecl 0xa0d6a8 <line:60:7, col:45> col:45 value_type 'bool':'bool'
| | | | `-SubstTemplateTypeParmType 0xace140 'bool' sugar
| | | |   |-TemplateTypeParmType 0xac6df0 '_Tp' dependent depth 0 index 0
| | | |   | `-TemplateTypeParm 0xac6da0 '_Tp'
| | | |   `-BuiltinType 0x7db300 'bool'
| | | |-TypedefDecl 0xa0d820 <line:61:7, col:45> col:45 referenced type 'integral_constant<bool, true>':'std::integral_constant<bool, true>'
| | | | `-TemplateSpecializationType 0xa0d780 'integral_constant<bool, true>' sugar integral_constant
| | | |   |-TemplateArgument type 'bool':'bool'
| | | |   |-TemplateArgument expr
| | | |   | `-ConstantExpr 0xa0d760 <col:38> 'bool' Int: 1
| | | |   |   `-SubstNonTypeTemplateParmExpr 0xa0d720 <col:38> 'bool'
| | | |   |     `-CXXBoolLiteralExpr 0xa0d710 <col:38> 'bool' true
| | | |   `-RecordType 0xace290 'std::integral_constant<bool, true>'
| | | |     `-ClassTemplateSpecialization 0xace198 'integral_constant'
| | | |-CXXConversionDecl 0xa0d900 <line:62:7, col:70> col:17 constexpr operator bool 'std::integral_constant<bool, true>::value_type () const noexcept'
| | | `-CXXMethodDecl 0xa0d9e8 <line:67:7, col:72> col:28 constexpr operator() 'std::integral_constant<bool, true>::value_type () const noexcept'
| | |-ClassTemplateSpecializationDecl 0xace450 <line:56:3, line:69:5> line:57:12 struct integral_constant definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'bool'
| | | |-TemplateArgument integral 0
| | | |-CXXRecordDecl 0xacf4a8 prev 0xace450 <col:5, col:12> col:12 implicit struct integral_constant
| | | |-VarDecl 0xacf548 <line:59:7, col:53> col:45 used value 'const bool':'const bool' static constexpr cinit
| | | | `-SubstNonTypeTemplateParmExpr 0xacf5d0 <col:53> 'bool'
| | | |   `-CXXBoolLiteralExpr 0xacf5c0 <col:53> 'bool' false
| | | |-TypedefDecl 0xacf658 <line:60:7, col:45> col:45 value_type 'bool':'bool'
| | | | `-SubstTemplateTypeParmType 0xace140 'bool' sugar
| | | |   |-TemplateTypeParmType 0xac6df0 '_Tp' dependent depth 0 index 0
| | | |   | `-TemplateTypeParm 0xac6da0 '_Tp'
| | | |   `-BuiltinType 0x7db300 'bool'
| | | |-TypedefDecl 0xacf7d0 <line:61:7, col:45> col:45 referenced type 'integral_constant<bool, false>':'std::integral_constant<bool, false>'
| | | | `-TemplateSpecializationType 0xacf730 'integral_constant<bool, false>' sugar integral_constant
| | | |   |-TemplateArgument type 'bool':'bool'
| | | |   |-TemplateArgument expr
| | | |   | `-ConstantExpr 0xacf710 <col:38> 'bool' Int: 0
| | | |   |   `-SubstNonTypeTemplateParmExpr 0xacf6d0 <col:38> 'bool'
| | | |   |     `-CXXBoolLiteralExpr 0xacf6c0 <col:38> 'bool' false
| | | |   `-RecordType 0xace550 'std::integral_constant<bool, false>'
| | | |     `-ClassTemplateSpecialization 0xace450 'integral_constant'
| | | |-CXXConversionDecl 0xacf908 <line:62:7, col:70> col:17 constexpr operator bool 'std::integral_constant<bool, false>::value_type () const noexcept'
| | | `-CXXMethodDecl 0xacf9f0 <line:67:7, col:72> col:28 constexpr operator() 'std::integral_constant<bool, false>::value_type () const noexcept'
| | |-ClassTemplateSpecializationDecl 0xb52550 <line:56:3, line:69:5> line:57:12 struct integral_constant definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'unsigned long'
| | | |-TemplateArgument integral 0
| | | |-CXXRecordDecl 0xb52778 prev 0xb52550 <col:5, col:12> col:12 implicit struct integral_constant
| | | |-VarDecl 0xb52818 <line:59:7, col:53> col:45 value 'const unsigned long':'const unsigned long' static constexpr cinit
| | | | `-SubstNonTypeTemplateParmExpr 0xb528b0 <col:53> 'unsigned long'
| | | |   `-IntegerLiteral 0xb52890 <col:53> 'unsigned long' 0
| | | |-TypedefDecl 0xb52938 <line:60:7, col:45> col:45 value_type 'unsigned long':'unsigned long'
| | | | `-SubstTemplateTypeParmType 0xb51ef0 'unsigned long' sugar
| | | |   |-TemplateTypeParmType 0xac6df0 '_Tp' dependent depth 0 index 0
| | | |   | `-TemplateTypeParm 0xac6da0 '_Tp'
| | | |   `-BuiltinType 0x7db440 'unsigned long'
| | | |-TypedefDecl 0xb52ac0 <line:61:7, col:45> col:45 type 'integral_constant<unsigned long, 0UL>':'std::integral_constant<unsigned long, 0>'
| | | | `-TemplateSpecializationType 0xb52a20 'integral_constant<unsigned long, 0UL>' sugar integral_constant
| | | |   |-TemplateArgument type 'unsigned long':'unsigned long'
| | | |   |-TemplateArgument expr
| | | |   | `-ConstantExpr 0xb52a00 <col:38> 'unsigned long' Int: 0
| | | |   |   `-SubstNonTypeTemplateParmExpr 0xb529c0 <col:38> 'unsigned long'
| | | |   |     `-IntegerLiteral 0xb529a0 <col:38> 'unsigned long' 0
| | | |   `-RecordType 0xb52650 'std::integral_constant<unsigned long, 0>'
| | | |     `-ClassTemplateSpecialization 0xb52550 'integral_constant'
| | | |-CXXConversionDecl 0xb52be8 <line:62:7, col:70> col:17 constexpr operator unsigned long 'std::integral_constant<unsigned long, 0>::value_type () const noexcept'
| | | `-CXXMethodDecl 0xb52cd0 <line:67:7, col:72> col:28 constexpr operator() 'std::integral_constant<unsigned long, 0>::value_type () const noexcept'
| | |-ClassTemplateSpecializationDecl 0xccda30 <line:56:3, line:69:5> line:57:12 struct integral_constant definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'unsigned int'
| | | |-TemplateArgument integral 0
| | | |-CXXRecordDecl 0xccdc58 prev 0xccda30 <col:5, col:12> col:12 implicit struct integral_constant
| | | |-VarDecl 0xccdcf8 <line:59:7, col:53> col:45 value 'const unsigned int':'const unsigned int' static constexpr cinit
| | | | `-SubstNonTypeTemplateParmExpr 0xccdd90 <col:53> 'unsigned int'
| | | |   `-IntegerLiteral 0xccdd70 <col:53> 'unsigned int' 0
| | | |-TypedefDecl 0xccde18 <line:60:7, col:45> col:45 value_type 'unsigned int':'unsigned int'
| | | | `-SubstTemplateTypeParmType 0xccd9c0 'unsigned int' sugar
| | | |   |-TemplateTypeParmType 0xac6df0 '_Tp' dependent depth 0 index 0
| | | |   | `-TemplateTypeParm 0xac6da0 '_Tp'
| | | |   `-BuiltinType 0x7db420 'unsigned int'
| | | |-TypedefDecl 0xccdfa0 <line:61:7, col:45> col:45 type 'integral_constant<unsigned int, 0U>':'std::integral_constant<unsigned int, 0>'
| | | | `-TemplateSpecializationType 0xccdf00 'integral_constant<unsigned int, 0U>' sugar integral_constant
| | | |   |-TemplateArgument type 'unsigned int':'unsigned int'
| | | |   |-TemplateArgument expr
| | | |   | `-ConstantExpr 0xccdee0 <col:38> 'unsigned int' Int: 0
| | | |   |   `-SubstNonTypeTemplateParmExpr 0xccdea0 <col:38> 'unsigned int'
| | | |   |     `-IntegerLiteral 0xccde80 <col:38> 'unsigned int' 0
| | | |   `-RecordType 0xccdb30 'std::integral_constant<unsigned int, 0>'
| | | |     `-ClassTemplateSpecialization 0xccda30 'integral_constant'
| | | |-CXXConversionDecl 0xcce0c8 <line:62:7, col:70> col:17 constexpr operator unsigned int 'std::integral_constant<unsigned int, 0>::value_type () const noexcept'
| | | `-CXXMethodDecl 0xcce1b0 <line:67:7, col:72> col:28 constexpr operator() 'std::integral_constant<unsigned int, 0>::value_type () const noexcept'
| | |-ClassTemplateSpecializationDecl 0xcce8f8 <line:56:3, line:69:5> line:57:12 struct integral_constant definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'unsigned int'
| | | |-TemplateArgument integral 1
| | | |-CXXRecordDecl 0xcceb18 prev 0xcce8f8 <col:5, col:12> col:12 implicit struct integral_constant
| | | |-VarDecl 0xccebb8 <line:59:7, col:53> col:45 value 'const unsigned int':'const unsigned int' static constexpr cinit
| | | | `-SubstNonTypeTemplateParmExpr 0xccec50 <col:53> 'unsigned int'
| | | |   `-IntegerLiteral 0xccec30 <col:53> 'unsigned int' 1
| | | |-TypedefDecl 0xccecd8 <line:60:7, col:45> col:45 value_type 'unsigned int':'unsigned int'
| | | | `-SubstTemplateTypeParmType 0xccd9c0 'unsigned int' sugar
| | | |   |-TemplateTypeParmType 0xac6df0 '_Tp' dependent depth 0 index 0
| | | |   | `-TemplateTypeParm 0xac6da0 '_Tp'
| | | |   `-BuiltinType 0x7db420 'unsigned int'
| | | |-TypedefDecl 0xccee60 <line:61:7, col:45> col:45 type 'integral_constant<unsigned int, 1U>':'std::integral_constant<unsigned int, 1>'
| | | | `-TemplateSpecializationType 0xccedc0 'integral_constant<unsigned int, 1U>' sugar integral_constant
| | | |   |-TemplateArgument type 'unsigned int':'unsigned int'
| | | |   |-TemplateArgument expr
| | | |   | `-ConstantExpr 0xcceda0 <col:38> 'unsigned int' Int: 1
| | | |   |   `-SubstNonTypeTemplateParmExpr 0xcced60 <col:38> 'unsigned int'
| | | |   |     `-IntegerLiteral 0xcced40 <col:38> 'unsigned int' 1
| | | |   `-RecordType 0xcce9f0 'std::integral_constant<unsigned int, 1>'
| | | |     `-ClassTemplateSpecialization 0xcce8f8 'integral_constant'
| | | |-CXXConversionDecl 0xccef40 <line:62:7, col:70> col:17 constexpr operator unsigned int 'std::integral_constant<unsigned int, 1>::value_type () const noexcept'
| | | `-CXXMethodDecl 0xccf028 <line:67:7, col:72> col:28 constexpr operator() 'std::integral_constant<unsigned int, 1>::value_type () const noexcept'
| | |-ClassTemplateSpecializationDecl 0xcdfb80 <line:56:3, line:69:5> line:57:12 struct integral_constant definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'unsigned long long'
| | | |-TemplateArgument integral 0
| | | |-CXXRecordDecl 0xcdfe48 prev 0xcdfb80 <col:5, col:12> col:12 implicit struct integral_constant
| | | |-VarDecl 0xcdfee8 <line:59:7, col:53> col:45 value 'const unsigned long long':'const unsigned long long' static constexpr cinit
| | | | `-SubstNonTypeTemplateParmExpr 0xcdff80 <col:53> 'unsigned long long'
| | | |   `-IntegerLiteral 0xcdff60 <col:53> 'unsigned long long' 0
| | | |-TypedefDecl 0xce0008 <line:60:7, col:45> col:45 value_type 'unsigned long long':'unsigned long long'
| | | | `-SubstTemplateTypeParmType 0xcdd050 'unsigned long long' sugar
| | | |   |-TemplateTypeParmType 0xac6df0 '_Tp' dependent depth 0 index 0
| | | |   | `-TemplateTypeParm 0xac6da0 '_Tp'
| | | |   `-BuiltinType 0x7db460 'unsigned long long'
| | | |-TypedefDecl 0xce0190 <line:61:7, col:45> col:45 type 'integral_constant<unsigned long long, 0ULL>':'std::integral_constant<unsigned long long, 0>'
| | | | `-TemplateSpecializationType 0xce00f0 'integral_constant<unsigned long long, 0ULL>' sugar integral_constant
| | | |   |-TemplateArgument type 'unsigned long long':'unsigned long long'
| | | |   |-TemplateArgument expr
| | | |   | `-ConstantExpr 0xce00d0 <col:38> 'unsigned long long' Int: 0
| | | |   |   `-SubstNonTypeTemplateParmExpr 0xce0090 <col:38> 'unsigned long long'
| | | |   |     `-IntegerLiteral 0xce0070 <col:38> 'unsigned long long' 0
| | | |   `-RecordType 0xcdfc80 'std::integral_constant<unsigned long long, 0>'
| | | |     `-ClassTemplateSpecialization 0xcdfb80 'integral_constant'
| | | |-CXXConversionDecl 0xce02b8 <line:62:7, col:70> col:17 constexpr operator unsigned long long 'std::integral_constant<unsigned long long, 0>::value_type () const noexcept'
| | | `-CXXMethodDecl 0xce03a0 <line:67:7, col:72> col:28 constexpr operator() 'std::integral_constant<unsigned long long, 0>::value_type () const noexcept'
| | |-ClassTemplateSpecializationDecl 0xd2b650 <line:56:3, line:69:5> line:57:12 struct integral_constant definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'long'
| | | |-TemplateArgument integral 1
| | | |-CXXRecordDecl 0xd2b878 prev 0xd2b650 <col:5, col:12> col:12 implicit struct integral_constant
| | | |-VarDecl 0xd2b918 <line:59:7, col:53> col:45 referenced value 'const long':'const long' static constexpr cinit
| | | | `-SubstNonTypeTemplateParmExpr 0xd2b9b0 <col:53> 'long'
| | | |   `-IntegerLiteral 0xd2b990 <col:53> 'long' 1
| | | |-TypedefDecl 0xd2ba38 <line:60:7, col:45> col:45 value_type 'long':'long'
| | | | `-SubstTemplateTypeParmType 0xc176a0 'long' sugar
| | | |   |-TemplateTypeParmType 0xac6df0 '_Tp' dependent depth 0 index 0
| | | |   | `-TemplateTypeParm 0xac6da0 '_Tp'
| | | |   `-BuiltinType 0x7db3a0 'long'
| | | |-TypedefDecl 0xd2bbc0 <line:61:7, col:45> col:45 type 'integral_constant<long, 1L>':'std::integral_constant<long, 1>'
| | | | `-TemplateSpecializationType 0xd2bb20 'integral_constant<long, 1L>' sugar integral_constant
| | | |   |-TemplateArgument type 'long':'long'
| | | |   |-TemplateArgument expr
| | | |   | `-ConstantExpr 0xd2bb00 <col:38> 'long' Int: 1
| | | |   |   `-SubstNonTypeTemplateParmExpr 0xd2bac0 <col:38> 'long'
| | | |   |     `-IntegerLiteral 0xd2baa0 <col:38> 'long' 1
| | | |   `-RecordType 0xd2b750 'std::integral_constant<long, 1>'
| | | |     `-ClassTemplateSpecialization 0xd2b650 'integral_constant'
| | | |-CXXConversionDecl 0xd2bce8 <line:62:7, col:70> col:17 constexpr operator long 'std::integral_constant<long, 1>::value_type () const noexcept'
| | | `-CXXMethodDecl 0xd2bdd0 <line:67:7, col:72> col:28 constexpr operator() 'std::integral_constant<long, 1>::value_type () const noexcept'
| | |-ClassTemplateSpecializationDecl 0xd2e290 <line:56:3, line:69:5> line:57:12 struct integral_constant definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'long'
| | | |-TemplateArgument integral 1000000000
| | | |-CXXRecordDecl 0xd2e4b8 prev 0xd2e290 <col:5, col:12> col:12 implicit struct integral_constant
| | | |-VarDecl 0xd2e558 <line:59:7, col:53> col:45 referenced value 'const long':'const long' static constexpr cinit
| | | | `-SubstNonTypeTemplateParmExpr 0xd2e5f0 <col:53> 'long'
| | | |   `-IntegerLiteral 0xd2e5d0 <col:53> 'long' 1000000000
| | | |-TypedefDecl 0xd2e678 <line:60:7, col:45> col:45 value_type 'long':'long'
| | | | `-SubstTemplateTypeParmType 0xc176a0 'long' sugar
| | | |   |-TemplateTypeParmType 0xac6df0 '_Tp' dependent depth 0 index 0
| | | |   | `-TemplateTypeParm 0xac6da0 '_Tp'
| | | |   `-BuiltinType 0x7db3a0 'long'
| | | |-TypedefDecl 0xd2e800 <line:61:7, col:45> col:45 type 'integral_constant<long, 1000000000L>':'std::integral_constant<long, 1000000000>'
| | | | `-TemplateSpecializationType 0xd2e760 'integral_constant<long, 1000000000L>' sugar integral_constant
| | | |   |-TemplateArgument type 'long':'long'
| | | |   |-TemplateArgument expr
| | | |   | `-ConstantExpr 0xd2e740 <col:38> 'long' Int: 1000000000
| | | |   |   `-SubstNonTypeTemplateParmExpr 0xd2e700 <col:38> 'long'
| | | |   |     `-IntegerLiteral 0xd2e6e0 <col:38> 'long' 1000000000
| | | |   `-RecordType 0xd2e390 'std::integral_constant<long, 1000000000>'
| | | |     `-ClassTemplateSpecialization 0xd2e290 'integral_constant'
| | | |-CXXConversionDecl 0xd2e8e0 <line:62:7, col:70> col:17 constexpr operator long 'std::integral_constant<long, 1000000000>::value_type () const noexcept'
| | | `-CXXMethodDecl 0xd2e9c8 <line:67:7, col:72> col:28 constexpr operator() 'std::integral_constant<long, 1000000000>::value_type () const noexcept'
| | |-ClassTemplateSpecializationDecl 0xdd31e0 <line:56:3, line:69:5> line:57:12 struct integral_constant definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'long'
| | | |-TemplateArgument integral 3600
| | | |-CXXRecordDecl 0xdd3408 prev 0xdd31e0 <col:5, col:12> col:12 implicit struct integral_constant
| | | |-VarDecl 0xdd34a8 <line:59:7, col:53> col:45 referenced value 'const long':'const long' static constexpr cinit
| | | | `-SubstNonTypeTemplateParmExpr 0xdd3540 <col:53> 'long'
| | | |   `-IntegerLiteral 0xdd3520 <col:53> 'long' 3600
| | | |-TypedefDecl 0xdd35c8 <line:60:7, col:45> col:45 value_type 'long':'long'
| | | | `-SubstTemplateTypeParmType 0xc176a0 'long' sugar
| | | |   |-TemplateTypeParmType 0xac6df0 '_Tp' dependent depth 0 index 0
| | | |   | `-TemplateTypeParm 0xac6da0 '_Tp'
| | | |   `-BuiltinType 0x7db3a0 'long'
| | | |-TypedefDecl 0xdd3750 <line:61:7, col:45> col:45 type 'integral_constant<long, 3600L>':'std::integral_constant<long, 3600>'
| | | | `-TemplateSpecializationType 0xdd36b0 'integral_constant<long, 3600L>' sugar integral_constant
| | | |   |-TemplateArgument type 'long':'long'
| | | |   |-TemplateArgument expr
| | | |   | `-ConstantExpr 0xdd3690 <col:38> 'long' Int: 3600
| | | |   |   `-SubstNonTypeTemplateParmExpr 0xdd3650 <col:38> 'long'
| | | |   |     `-IntegerLiteral 0xdd3630 <col:38> 'long' 3600
| | | |   `-RecordType 0xdd32e0 'std::integral_constant<long, 3600>'
| | | |     `-ClassTemplateSpecialization 0xdd31e0 'integral_constant'
| | | |-CXXConversionDecl 0xdd3830 <line:62:7, col:70> col:17 constexpr operator long 'std::integral_constant<long, 3600>::value_type () const noexcept'
| | | `-CXXMethodDecl 0xdd3918 <line:67:7, col:72> col:28 constexpr operator() 'std::integral_constant<long, 3600>::value_type () const noexcept'
| | |-ClassTemplateSpecializationDecl 0xdeb750 <line:56:3, line:69:5> line:57:12 struct integral_constant definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'long'
| | | |-TemplateArgument integral 60
| | | |-CXXRecordDecl 0xdeb978 prev 0xdeb750 <col:5, col:12> col:12 implicit struct integral_constant
| | | |-VarDecl 0xdeba18 <line:59:7, col:53> col:45 referenced value 'const long':'const long' static constexpr cinit
| | | | `-SubstNonTypeTemplateParmExpr 0xdebab0 <col:53> 'long'
| | | |   `-IntegerLiteral 0xdeba90 <col:53> 'long' 60
| | | |-TypedefDecl 0xdebb38 <line:60:7, col:45> col:45 value_type 'long':'long'
| | | | `-SubstTemplateTypeParmType 0xc176a0 'long' sugar
| | | |   |-TemplateTypeParmType 0xac6df0 '_Tp' dependent depth 0 index 0
| | | |   | `-TemplateTypeParm 0xac6da0 '_Tp'
| | | |   `-BuiltinType 0x7db3a0 'long'
| | | |-TypedefDecl 0xdebcc0 <line:61:7, col:45> col:45 type 'integral_constant<long, 60L>':'std::integral_constant<long, 60>'
| | | | `-TemplateSpecializationType 0xdebc20 'integral_constant<long, 60L>' sugar integral_constant
| | | |   |-TemplateArgument type 'long':'long'
| | | |   |-TemplateArgument expr
| | | |   | `-ConstantExpr 0xdebc00 <col:38> 'long' Int: 60
| | | |   |   `-SubstNonTypeTemplateParmExpr 0xdebbc0 <col:38> 'long'
| | | |   |     `-IntegerLiteral 0xdebba0 <col:38> 'long' 60
| | | |   `-RecordType 0xdeb850 'std::integral_constant<long, 60>'
| | | |     `-ClassTemplateSpecialization 0xdeb750 'integral_constant'
| | | |-CXXConversionDecl 0xdebda0 <line:62:7, col:70> col:17 constexpr operator long 'std::integral_constant<long, 60>::value_type () const noexcept'
| | | `-CXXMethodDecl 0xdebe88 <line:67:7, col:72> col:28 constexpr operator() 'std::integral_constant<long, 60>::value_type () const noexcept'
| | |-ClassTemplateSpecializationDecl 0xe05ba0 <line:56:3, line:69:5> line:57:12 struct integral_constant definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'long'
| | | |-TemplateArgument integral 1000
| | | |-CXXRecordDecl 0xe05dc8 prev 0xe05ba0 <col:5, col:12> col:12 implicit struct integral_constant
| | | |-VarDecl 0xe05e68 <line:59:7, col:53> col:45 referenced value 'const long':'const long' static constexpr cinit
| | | | `-SubstNonTypeTemplateParmExpr 0xe05f00 <col:53> 'long'
| | | |   `-IntegerLiteral 0xe05ee0 <col:53> 'long' 1000
| | | |-TypedefDecl 0xe05f88 <line:60:7, col:45> col:45 value_type 'long':'long'
| | | | `-SubstTemplateTypeParmType 0xc176a0 'long' sugar
| | | |   |-TemplateTypeParmType 0xac6df0 '_Tp' dependent depth 0 index 0
| | | |   | `-TemplateTypeParm 0xac6da0 '_Tp'
| | | |   `-BuiltinType 0x7db3a0 'long'
| | | |-TypedefDecl 0xe06110 <line:61:7, col:45> col:45 type 'integral_constant<long, 1000L>':'std::integral_constant<long, 1000>'
| | | | `-TemplateSpecializationType 0xe06070 'integral_constant<long, 1000L>' sugar integral_constant
| | | |   |-TemplateArgument type 'long':'long'
| | | |   |-TemplateArgument expr
| | | |   | `-ConstantExpr 0xe06050 <col:38> 'long' Int: 1000
| | | |   |   `-SubstNonTypeTemplateParmExpr 0xe06010 <col:38> 'long'
| | | |   |     `-IntegerLiteral 0xe05ff0 <col:38> 'long' 1000
| | | |   `-RecordType 0xe05ca0 'std::integral_constant<long, 1000>'
| | | |     `-ClassTemplateSpecialization 0xe05ba0 'integral_constant'
| | | |-CXXConversionDecl 0xe061f0 <line:62:7, col:70> col:17 constexpr operator long 'std::integral_constant<long, 1000>::value_type () const noexcept'
| | | `-CXXMethodDecl 0xe06330 <line:67:7, col:72> col:28 constexpr operator() 'std::integral_constant<long, 1000>::value_type () const noexcept'
| | `-ClassTemplateSpecializationDecl 0xe1cc30 <line:56:3, line:69:5> line:57:12 struct integral_constant definition
| |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-TemplateArgument type 'long'
| |   |-TemplateArgument integral 1000000
| |   |-CXXRecordDecl 0xe1ce58 prev 0xe1cc30 <col:5, col:12> col:12 implicit struct integral_constant
| |   |-VarDecl 0xe1cef8 <line:59:7, col:53> col:45 referenced value 'const long':'const long' static constexpr cinit
| |   | `-SubstNonTypeTemplateParmExpr 0xe1cf90 <col:53> 'long'
| |   |   `-IntegerLiteral 0xe1cf70 <col:53> 'long' 1000000
| |   |-TypedefDecl 0xe1d018 <line:60:7, col:45> col:45 value_type 'long':'long'
| |   | `-SubstTemplateTypeParmType 0xc176a0 'long' sugar
| |   |   |-TemplateTypeParmType 0xac6df0 '_Tp' dependent depth 0 index 0
| |   |   | `-TemplateTypeParm 0xac6da0 '_Tp'
| |   |   `-BuiltinType 0x7db3a0 'long'
| |   |-TypedefDecl 0xe1d9e0 <line:61:7, col:45> col:45 type 'integral_constant<long, 1000000L>':'std::integral_constant<long, 1000000>'
| |   | `-TemplateSpecializationType 0xe1d100 'integral_constant<long, 1000000L>' sugar integral_constant
| |   |   |-TemplateArgument type 'long':'long'
| |   |   |-TemplateArgument expr
| |   |   | `-ConstantExpr 0xe1d0e0 <col:38> 'long' Int: 1000000
| |   |   |   `-SubstNonTypeTemplateParmExpr 0xe1d0a0 <col:38> 'long'
| |   |   |     `-IntegerLiteral 0xe1d080 <col:38> 'long' 1000000
| |   |   `-RecordType 0xe1cd30 'std::integral_constant<long, 1000000>'
| |   |     `-ClassTemplateSpecialization 0xe1cc30 'integral_constant'
| |   |-CXXConversionDecl 0xe1dac0 <line:62:7, col:70> col:17 constexpr operator long 'std::integral_constant<long, 1000000>::value_type () const noexcept'
| |   `-CXXMethodDecl 0xe1dba8 <line:67:7, col:72> col:28 constexpr operator() 'std::integral_constant<long, 1000000>::value_type () const noexcept'
| |-VarDecl 0xace058 parent 0xac6eb0 prev 0xac7290 <line:71:3, line:72:48> col:48 value 'const _Tp' constexpr
| |-TypedefDecl 0xace398 <line:75:3, col:45> col:45 referenced true_type 'integral_constant<bool, true>':'std::integral_constant<bool, true>'
| | `-TemplateSpecializationType 0xace2b0 'integral_constant<bool, true>' sugar integral_constant
| |   |-TemplateArgument type 'bool'
| |   |-TemplateArgument expr
| |   | `-ConstantExpr 0xace178 <col:35> 'bool' Int: 1
| |   |   `-CXXBoolLiteralExpr 0xace118 <col:35> 'bool' true
| |   `-RecordType 0xace290 'std::integral_constant<bool, true>'
| |     `-ClassTemplateSpecialization 0xace198 'integral_constant'
| |-TypedefDecl 0xace658 <line:78:3, col:45> col:45 referenced false_type 'integral_constant<bool, false>':'std::integral_constant<bool, false>'
| | `-TemplateSpecializationType 0xace570 'integral_constant<bool, false>' sugar integral_constant
| |   |-TemplateArgument type 'bool'
| |   |-TemplateArgument expr
| |   | `-ConstantExpr 0xace430 <col:35> 'bool' Int: 0
| |   |   `-CXXBoolLiteralExpr 0xace400 <col:35> 'bool' false
| |   `-RecordType 0xace550 'std::integral_constant<bool, false>'
| |     `-ClassTemplateSpecialization 0xace450 'integral_constant'
| |-TypeAliasTemplateDecl 0xace938 <line:80:3, line:81:56> col:5 __bool_constant
| | |-NonTypeTemplateParmDecl 0xace6c0 <line:80:12, col:17> col:17 referenced 'bool' depth 0 index 0 __v
| | `-TypeAliasDecl 0xace8d8 <line:81:5, col:56> col:11 __bool_constant 'integral_constant<bool, __v>'
| |   `-TemplateSpecializationType 0xace7f0 'integral_constant<bool, __v>' dependent integral_constant
| |     |-TemplateArgument type 'bool'
| |     `-TemplateArgument expr
| |       `-DeclRefExpr 0xace750 <col:53> 'bool' NonTypeTemplateParm 0xace6c0 '__v' 'bool'
| |-ClassTemplateDecl 0xacebb8 <line:91:3, line:92:12> col:12 conditional
| | |-NonTypeTemplateParmDecl 0xace9a0 <line:91:12> col:16 'bool' depth 0 index 0
| | |-TemplateTypeParmDecl 0xacea00 <col:18> col:26 typename depth 0 index 1
| | |-TemplateTypeParmDecl 0xacea78 <col:28> col:36 typename depth 0 index 2
| | |-CXXRecordDecl 0xaceb28 <line:92:5, col:12> col:12 struct conditional
| | |-ClassTemplateSpecializationDecl 0xd38b88 <line:2064:3, line:2066:30> line:2065:12 struct conditional definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument integral 0
| | | |-TemplateArgument type 'std::is_void<const long &>'
| | | |-TemplateArgument type 'std::__or_<std::is_function<long>, std::is_array<long> >'
| | | |-CXXRecordDecl 0xd38f30 prev 0xd38b88 <col:5, col:12> col:12 implicit struct conditional
| | | `-TypedefDecl 0xd38fd0 <line:2066:7, col:24> col:24 referenced type 'std::__or_<std::is_function<long>, std::is_array<long> >':'std::__or_<std::is_function<long>, std::is_array<long> >'
| | |   `-SubstTemplateTypeParmType 0xd38e60 'std::__or_<std::is_function<long>, std::is_array<long> >' sugar
| | |     |-TemplateTypeParmType 0xbbbf20 '_Iffalse' dependent depth 0 index 1
| | |     | `-TemplateTypeParm 0xbbbec8 '_Iffalse'
| | |     `-RecordType 0xd38a90 'std::__or_<std::is_function<long>, std::is_array<long> >'
| | |       `-ClassTemplateSpecialization 0xd389a8 '__or_'
| | |-ClassTemplateSpecializationDecl 0xd399c0 <line:2064:3, line:2066:30> line:2065:12 struct conditional definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument integral 0
| | | |-TemplateArgument type 'std::is_function<long>'
| | | |-TemplateArgument type 'std::is_array<long>'
| | | |-CXXRecordDecl 0xd3a650 prev 0xd399c0 <col:5, col:12> col:12 implicit struct conditional
| | | `-TypedefDecl 0xd3a6f0 <line:2066:7, col:24> col:24 referenced type 'std::is_array<long>':'std::is_array<long>'
| | |   `-SubstTemplateTypeParmType 0xd3a580 'std::is_array<long>' sugar
| | |     |-TemplateTypeParmType 0xbbbf20 '_Iffalse' dependent depth 0 index 1
| | |     | `-TemplateTypeParm 0xbbbec8 '_Iffalse'
| | |     `-RecordType 0xd37140 'std::is_array<long>'
| | |       `-ClassTemplateSpecialization 0xd37060 'is_array'
| | |-ClassTemplateSpecializationDecl 0xd3db40 <line:91:3, line:92:12> line:2060:12 struct conditional definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument integral 1
| | | |-TemplateArgument type 'std::__or_<std::chrono::treat_as_floating_point<long>, std::__not_<std::chrono::treat_as_floating_point<long> > >'
| | | |-TemplateArgument type 'std::is_convertible<const long &, long>'
| | | |-CXXRecordDecl 0xd3de00 prev 0xd3db40 <col:5, col:12> col:12 implicit struct conditional
| | | `-TypedefDecl 0xd3dec8 <line:2061:7, col:23> col:23 referenced type 'std::__or_<std::chrono::treat_as_floating_point<long>, std::__not_<std::chrono::treat_as_floating_point<long> > >':'std::__or_<std::chrono::treat_as_floating_point<long>, std::__not_<std::chrono::treat_as_floating_point<long> > >'
| | |   `-SubstTemplateTypeParmType 0xd3de90 'std::__or_<std::chrono::treat_as_floating_point<long>, std::__not_<std::chrono::treat_as_floating_point<long> > >' sugar
| | |     |-TemplateTypeParmType 0xbbbb10 '_Iftrue' dependent depth 0 index 1
| | |     | `-TemplateTypeParm 0xbbbab8 '_Iftrue'
| | |     `-RecordType 0xd365a0 'std::__or_<std::chrono::treat_as_floating_point<long>, std::__not_<std::chrono::treat_as_floating_point<long> > >'
| | |       `-ClassTemplateSpecialization 0xd364c0 '__or_'
| | |-ClassTemplateSpecializationDecl 0xd43988 <line:2064:3, line:2066:30> line:2065:12 struct conditional definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument integral 0
| | | |-TemplateArgument type 'std::chrono::treat_as_floating_point<long>'
| | | |-TemplateArgument type 'std::__not_<std::chrono::treat_as_floating_point<long> >'
| | | |-CXXRecordDecl 0xd43d30 prev 0xd43988 <col:5, col:12> col:12 implicit struct conditional
| | | `-TypedefDecl 0xd43dd0 <line:2066:7, col:24> col:24 referenced type 'std::__not_<std::chrono::treat_as_floating_point<long> >':'std::__not_<std::chrono::treat_as_floating_point<long> >'
| | |   `-SubstTemplateTypeParmType 0xd43c60 'std::__not_<std::chrono::treat_as_floating_point<long> >' sugar
| | |     |-TemplateTypeParmType 0xbbbf20 '_Iffalse' dependent depth 0 index 1
| | |     | `-TemplateTypeParm 0xbbbec8 '_Iffalse'
| | |     `-RecordType 0xd36400 'std::__not_<std::chrono::treat_as_floating_point<long> >'
| | |       `-ClassTemplateSpecialization 0xd36318 '__not_'
| | |-ClassTemplateSpecializationDecl 0xd4d1b8 <line:2064:3, line:2066:30> line:2065:12 struct conditional definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument integral 0
| | | |-TemplateArgument type 'std::chrono::treat_as_floating_point<long>'
| | | |-TemplateArgument type 'std::__and_<std::integral_constant<bool, true>, std::__not_<std::chrono::treat_as_floating_point<long> > >'
| | | |-CXXRecordDecl 0xd4d530 prev 0xd4d1b8 <col:5, col:12> col:12 implicit struct conditional
| | | `-TypedefDecl 0xd4d5d0 <line:2066:7, col:24> col:24 referenced type 'std::__and_<std::integral_constant<bool, true>, std::__not_<std::chrono::treat_as_floating_point<long> > >':'std::__and_<std::integral_constant<bool, true>, std::__not_<std::chrono::treat_as_floating_point<long> > >'
| | |   `-SubstTemplateTypeParmType 0xd4d460 'std::__and_<std::integral_constant<bool, true>, std::__not_<std::chrono::treat_as_floating_point<long> > >' sugar
| | |     |-TemplateTypeParmType 0xbbbf20 '_Iffalse' dependent depth 0 index 1
| | |     | `-TemplateTypeParm 0xbbbec8 '_Iffalse'
| | |     `-RecordType 0xd4c8a0 'std::__and_<std::integral_constant<bool, true>, std::__not_<std::chrono::treat_as_floating_point<long> > >'
| | |       `-ClassTemplateSpecialization 0xd4c7c0 '__and_'
| | |-ClassTemplateSpecializationDecl 0xd4da00 <line:91:3, line:92:12> line:2060:12 struct conditional definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument integral 1
| | | |-TemplateArgument type 'std::__not_<std::chrono::treat_as_floating_point<long> >'
| | | |-TemplateArgument type 'std::integral_constant<bool, true>'
| | | |-CXXRecordDecl 0xd4dcc0 prev 0xd4da00 <col:5, col:12> col:12 implicit struct conditional
| | | `-TypedefDecl 0xd4dd88 <line:2061:7, col:23> col:23 referenced type 'std::__not_<std::chrono::treat_as_floating_point<long> >':'std::__not_<std::chrono::treat_as_floating_point<long> >'
| | |   `-SubstTemplateTypeParmType 0xd4dd50 'std::__not_<std::chrono::treat_as_floating_point<long> >' sugar
| | |     |-TemplateTypeParmType 0xbbbb10 '_Iftrue' dependent depth 0 index 1
| | |     | `-TemplateTypeParm 0xbbbab8 '_Iftrue'
| | |     `-RecordType 0xd36400 'std::__not_<std::chrono::treat_as_floating_point<long> >'
| | |       `-ClassTemplateSpecialization 0xd36318 '__not_'
| | |-ClassTemplateSpecializationDecl 0xd5e978 <line:2064:3, line:2066:30> line:2065:12 struct conditional definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument integral 0
| | | |-TemplateArgument type 'std::is_void<const std::chrono::duration<long, std::ratio<1, 1000000000> > &>'
| | | |-TemplateArgument type 'std::__or_<std::is_function<long>, std::is_array<long> >'
| | | |-CXXRecordDecl 0xd5ecf0 prev 0xd5e978 <col:5, col:12> col:12 implicit struct conditional
| | | `-TypedefDecl 0xd5ed90 <line:2066:7, col:24> col:24 referenced type 'std::__or_<std::is_function<long>, std::is_array<long> >':'std::__or_<std::is_function<long>, std::is_array<long> >'
| | |   `-SubstTemplateTypeParmType 0xd38e60 'std::__or_<std::is_function<long>, std::is_array<long> >' sugar
| | |     |-TemplateTypeParmType 0xbbbf20 '_Iffalse' dependent depth 0 index 1
| | |     | `-TemplateTypeParm 0xbbbec8 '_Iffalse'
| | |     `-RecordType 0xd38a90 'std::__or_<std::is_function<long>, std::is_array<long> >'
| | |       `-ClassTemplateSpecialization 0xd389a8 '__or_'
| | |-ClassTemplateSpecializationDecl 0xd618a0 <line:2064:3, line:2066:30> line:2065:12 struct conditional definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument integral 0
| | | |-TemplateArgument type 'std::__or_<std::chrono::treat_as_floating_point<long>, std::__not_<std::chrono::treat_as_floating_point<std::chrono::duration<long, std::ratio<1, 1000000000> > > > >'
| | | |-TemplateArgument type 'std::is_convertible<const std::chrono::duration<long, std::ratio<1, 1000000000> > &, long>'
| | | |-CXXRecordDecl 0xd61c40 prev 0xd618a0 <col:5, col:12> col:12 implicit struct conditional
| | | `-TypedefDecl 0xd64eb0 <line:2066:7, col:24> col:24 referenced type 'std::is_convertible<const std::chrono::duration<long, std::ratio<1, 1000000000> > &, long>':'std::is_convertible<const std::chrono::duration<long, std::ratio<1, 1000000000> > &, long>'
| | |   `-SubstTemplateTypeParmType 0xd61b70 'std::is_convertible<const std::chrono::duration<long, std::ratio<1, 1000000000> > &, long>' sugar
| | |     |-TemplateTypeParmType 0xbbbf20 '_Iffalse' dependent depth 0 index 1
| | |     | `-TemplateTypeParm 0xbbbec8 '_Iffalse'
| | |     `-RecordType 0xd5b990 'std::is_convertible<const std::chrono::duration<long, std::ratio<1, 1000000000> > &, long>'
| | |       `-ClassTemplateSpecialization 0xd5b898 'is_convertible'
| | |-ClassTemplateSpecializationDecl 0xd9a338 <line:2064:3, line:2066:30> line:2065:12 struct conditional definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument integral 0
| | | |-TemplateArgument type 'std::is_void<const std::chrono::duration<long, std::ratio<1, 1> > &>'
| | | |-TemplateArgument type 'std::__or_<std::is_function<long>, std::is_array<long> >'
| | | |-CXXRecordDecl 0xd9a6b0 prev 0xd9a338 <col:5, col:12> col:12 implicit struct conditional
| | | `-TypedefDecl 0xd9a750 <line:2066:7, col:24> col:24 referenced type 'std::__or_<std::is_function<long>, std::is_array<long> >':'std::__or_<std::is_function<long>, std::is_array<long> >'
| | |   `-SubstTemplateTypeParmType 0xd38e60 'std::__or_<std::is_function<long>, std::is_array<long> >' sugar
| | |     |-TemplateTypeParmType 0xbbbf20 '_Iffalse' dependent depth 0 index 1
| | |     | `-TemplateTypeParm 0xbbbec8 '_Iffalse'
| | |     `-RecordType 0xd38a90 'std::__or_<std::is_function<long>, std::is_array<long> >'
| | |       `-ClassTemplateSpecialization 0xd389a8 '__or_'
| | |-ClassTemplateSpecializationDecl 0xd9d220 <line:2064:3, line:2066:30> line:2065:12 struct conditional definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument integral 0
| | | |-TemplateArgument type 'std::__or_<std::chrono::treat_as_floating_point<long>, std::__not_<std::chrono::treat_as_floating_point<std::chrono::duration<long, std::ratio<1, 1> > > > >'
| | | |-TemplateArgument type 'std::is_convertible<const std::chrono::duration<long, std::ratio<1, 1> > &, long>'
| | | |-CXXRecordDecl 0xd9d5c0 prev 0xd9d220 <col:5, col:12> col:12 implicit struct conditional
| | | `-TypedefDecl 0xd9d660 <line:2066:7, col:24> col:24 referenced type 'std::is_convertible<const std::chrono::duration<long, std::ratio<1, 1> > &, long>':'std::is_convertible<const std::chrono::duration<long, std::ratio<1, 1> > &, long>'
| | |   `-SubstTemplateTypeParmType 0xd9d4f0 'std::is_convertible<const std::chrono::duration<long, std::ratio<1, 1> > &, long>' sugar
| | |     |-TemplateTypeParmType 0xbbbf20 '_Iffalse' dependent depth 0 index 1
| | |     | `-TemplateTypeParm 0xbbbec8 '_Iffalse'
| | |     `-RecordType 0xd97ba0 'std::is_convertible<const std::chrono::duration<long, std::ratio<1, 1> > &, long>'
| | |       `-ClassTemplateSpecialization 0xd97aa8 'is_convertible'
| | |-ClassTemplateSpecializationDecl 0xdb3578 <line:2064:3, line:2066:30> line:2065:12 struct conditional definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument integral 0
| | | |-TemplateArgument type 'std::is_void<std::chrono::duration<long, std::ratio<1, 1000000000> > >'
| | | |-TemplateArgument type 'std::__or_<std::is_function<std::chrono::duration<long, std::ratio<1, 1000000000> > >, std::is_array<std::chrono::duration<long, std::ratio<1, 1000000000> > > >'
| | | |-CXXRecordDecl 0xdb3920 prev 0xdb3578 <col:5, col:12> col:12 implicit struct conditional
| | | `-TypedefDecl 0xdb39c0 <line:2066:7, col:24> col:24 referenced type 'std::__or_<std::is_function<std::chrono::duration<long, std::ratio<1, 1000000000> > >, std::is_array<std::chrono::duration<long, std::ratio<1, 1000000000> > > >':'std::__or_<std::is_function<std::chrono::duration<long, std::ratio<1, 1000000000> > >, std::is_array<std::chrono::duration<long, std::ratio<1, 1000000000> > > >'
| | |   `-SubstTemplateTypeParmType 0xdb3850 'std::__or_<std::is_function<std::chrono::duration<long, std::ratio<1, 1000000000> > >, std::is_array<std::chrono::duration<long, std::ratio<1, 1000000000> > > >' sugar
| | |     |-TemplateTypeParmType 0xbbbf20 '_Iffalse' dependent depth 0 index 1
| | |     | `-TemplateTypeParm 0xbbbec8 '_Iffalse'
| | |     `-RecordType 0xdb3480 'std::__or_<std::is_function<std::chrono::duration<long, std::ratio<1, 1000000000> > >, std::is_array<std::chrono::duration<long, std::ratio<1, 1000000000> > > >'
| | |       `-ClassTemplateSpecialization 0xdb3398 '__or_'
| | |-ClassTemplateSpecializationDecl 0xdb43b0 <line:2064:3, line:2066:30> line:2065:12 struct conditional definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument integral 0
| | | |-TemplateArgument type 'std::is_function<std::chrono::duration<long, std::ratio<1, 1000000000> > >'
| | | |-TemplateArgument type 'std::is_array<std::chrono::duration<long, std::ratio<1, 1000000000> > >'
| | | |-CXXRecordDecl 0xdb4750 prev 0xdb43b0 <col:5, col:12> col:12 implicit struct conditional
| | | `-TypedefDecl 0xdb47f0 <line:2066:7, col:24> col:24 referenced type 'std::is_array<std::chrono::duration<long, std::ratio<1, 1000000000> > >':'std::is_array<std::chrono::duration<long, std::ratio<1, 1000000000> > >'
| | |   `-SubstTemplateTypeParmType 0xdb4680 'std::is_array<std::chrono::duration<long, std::ratio<1, 1000000000> > >' sugar
| | |     |-TemplateTypeParmType 0xbbbf20 '_Iffalse' dependent depth 0 index 1
| | |     | `-TemplateTypeParm 0xbbbec8 '_Iffalse'
| | |     `-RecordType 0xdb1b50 'std::is_array<std::chrono::duration<long, std::ratio<1, 1000000000> > >'
| | |       `-ClassTemplateSpecialization 0xdb1a70 'is_array'
| | |-ClassTemplateSpecializationDecl 0xdc9558 <line:2064:3, line:2066:30> line:2065:12 struct conditional definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument integral 0
| | | |-TemplateArgument type 'std::is_void<const long double &>'
| | | |-TemplateArgument type 'std::__or_<std::is_function<long double>, std::is_array<long double> >'
| | | |-CXXRecordDecl 0xdc9900 prev 0xdc9558 <col:5, col:12> col:12 implicit struct conditional
| | | `-TypedefDecl 0xdc99a0 <line:2066:7, col:24> col:24 referenced type 'std::__or_<std::is_function<long double>, std::is_array<long double> >':'std::__or_<std::is_function<long double>, std::is_array<long double> >'
| | |   `-SubstTemplateTypeParmType 0xdc9830 'std::__or_<std::is_function<long double>, std::is_array<long double> >' sugar
| | |     |-TemplateTypeParmType 0xbbbf20 '_Iffalse' dependent depth 0 index 1
| | |     | `-TemplateTypeParm 0xbbbec8 '_Iffalse'
| | |     `-RecordType 0xdc9460 'std::__or_<std::is_function<long double>, std::is_array<long double> >'
| | |       `-ClassTemplateSpecialization 0xdc9378 '__or_'
| | |-ClassTemplateSpecializationDecl 0xdca390 <line:2064:3, line:2066:30> line:2065:12 struct conditional definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument integral 0
| | | |-TemplateArgument type 'std::is_function<long double>'
| | | |-TemplateArgument type 'std::is_array<long double>'
| | | |-CXXRecordDecl 0xdca730 prev 0xdca390 <col:5, col:12> col:12 implicit struct conditional
| | | `-TypedefDecl 0xdca7d0 <line:2066:7, col:24> col:24 referenced type 'std::is_array<long double>':'std::is_array<long double>'
| | |   `-SubstTemplateTypeParmType 0xdca660 'std::is_array<long double>' sugar
| | |     |-TemplateTypeParmType 0xbbbf20 '_Iffalse' dependent depth 0 index 1
| | |     | `-TemplateTypeParm 0xbbbec8 '_Iffalse'
| | |     `-RecordType 0xdc7b20 'std::is_array<long double>'
| | |       `-ClassTemplateSpecialization 0xdc7a40 'is_array'
| | |-ClassTemplateSpecializationDecl 0xdcddc0 <line:91:3, line:92:12> line:2060:12 struct conditional definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument integral 1
| | | |-TemplateArgument type 'std::__or_<std::chrono::treat_as_floating_point<long double>, std::__not_<std::chrono::treat_as_floating_point<long double> > >'
| | | |-TemplateArgument type 'std::is_convertible<const long double &, long double>'
| | | |-CXXRecordDecl 0xdce080 prev 0xdcddc0 <col:5, col:12> col:12 implicit struct conditional
| | | `-TypedefDecl 0xdce148 <line:2061:7, col:23> col:23 referenced type 'std::__or_<std::chrono::treat_as_floating_point<long double>, std::__not_<std::chrono::treat_as_floating_point<long double> > >':'std::__or_<std::chrono::treat_as_floating_point<long double>, std::__not_<std::chrono::treat_as_floating_point<long double> > >'
| | |   `-SubstTemplateTypeParmType 0xdce110 'std::__or_<std::chrono::treat_as_floating_point<long double>, std::__not_<std::chrono::treat_as_floating_point<long double> > >' sugar
| | |     |-TemplateTypeParmType 0xbbbb10 '_Iftrue' dependent depth 0 index 1
| | |     | `-TemplateTypeParm 0xbbbab8 '_Iftrue'
| | |     `-RecordType 0xdc6f80 'std::__or_<std::chrono::treat_as_floating_point<long double>, std::__not_<std::chrono::treat_as_floating_point<long double> > >'
| | |       `-ClassTemplateSpecialization 0xdc6ea0 '__or_'
| | |-ClassTemplateSpecializationDecl 0xdcf678 <line:91:3, line:92:12> line:2060:12 struct conditional definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument integral 1
| | | |-TemplateArgument type 'std::chrono::treat_as_floating_point<long double>'
| | | |-TemplateArgument type 'std::__not_<std::chrono::treat_as_floating_point<long double> >'
| | | |-CXXRecordDecl 0xdcf940 prev 0xdcf678 <col:5, col:12> col:12 implicit struct conditional
| | | `-TypedefDecl 0xdcfa08 <line:2061:7, col:23> col:23 referenced type 'std::chrono::treat_as_floating_point<long double>':'std::chrono::treat_as_floating_point<long double>'
| | |   `-SubstTemplateTypeParmType 0xdcf9d0 'std::chrono::treat_as_floating_point<long double>' sugar
| | |     |-TemplateTypeParmType 0xbbbb10 '_Iftrue' dependent depth 0 index 1
| | |     | `-TemplateTypeParm 0xbbbab8 '_Iftrue'
| | |     `-RecordType 0xdc2390 'std::chrono::treat_as_floating_point<long double>'
| | |       `-ClassTemplateSpecialization 0xdc22a8 'treat_as_floating_point'
| | |-ClassTemplateSpecializationDecl 0xdd7f48 <line:91:3, line:92:12> line:2060:12 struct conditional definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument integral 1
| | | |-TemplateArgument type 'std::chrono::treat_as_floating_point<long double>'
| | | |-TemplateArgument type 'std::__and_<std::integral_constant<bool, true>, std::__not_<std::chrono::treat_as_floating_point<long double> > >'
| | | |-CXXRecordDecl 0xdd8210 prev 0xdd7f48 <col:5, col:12> col:12 implicit struct conditional
| | | `-TypedefDecl 0xdd82b0 <line:2061:7, col:23> col:23 referenced type 'std::chrono::treat_as_floating_point<long double>':'std::chrono::treat_as_floating_point<long double>'
| | |   `-SubstTemplateTypeParmType 0xdcf9d0 'std::chrono::treat_as_floating_point<long double>' sugar
| | |     |-TemplateTypeParmType 0xbbbb10 '_Iftrue' dependent depth 0 index 1
| | |     | `-TemplateTypeParm 0xbbbab8 '_Iftrue'
| | |     `-RecordType 0xdc2390 'std::chrono::treat_as_floating_point<long double>'
| | |       `-ClassTemplateSpecialization 0xdc22a8 'treat_as_floating_point'
| | |-ClassTemplateSpecializationDecl 0xe56ca0 <line:91:3, line:92:12> line:2060:12 struct conditional definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument integral 1
| | | |-TemplateArgument type 'std::chrono::treat_as_floating_point<double>'
| | | |-TemplateArgument type 'std::__and_<std::integral_constant<bool, false>, std::__not_<std::chrono::treat_as_floating_point<long> > >'
| | | |-CXXRecordDecl 0xe56f60 prev 0xe56ca0 <col:5, col:12> col:12 implicit struct conditional
| | | `-TypedefDecl 0xe57028 <line:2061:7, col:23> col:23 referenced type 'std::chrono::treat_as_floating_point<double>':'std::chrono::treat_as_floating_point<double>'
| | |   `-SubstTemplateTypeParmType 0xe56ff0 'std::chrono::treat_as_floating_point<double>' sugar
| | |     |-TemplateTypeParmType 0xbbbb10 '_Iftrue' dependent depth 0 index 1
| | |     | `-TemplateTypeParm 0xbbbab8 '_Iftrue'
| | |     `-RecordType 0xe50760 'std::chrono::treat_as_floating_point<double>'
| | |       `-ClassTemplateSpecialization 0xe50678 'treat_as_floating_point'
| | |-ClassTemplateSpecializationDecl 0xe63f68 <line:2064:3, line:2066:30> line:2065:12 struct conditional definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument integral 0
| | | |-TemplateArgument type 'std::is_void<const double &>'
| | | |-TemplateArgument type 'std::__or_<std::is_function<double>, std::is_array<double> >'
| | | |-CXXRecordDecl 0xe64310 prev 0xe63f68 <col:5, col:12> col:12 implicit struct conditional
| | | `-TypedefDecl 0xe643b0 <line:2066:7, col:24> col:24 referenced type 'std::__or_<std::is_function<double>, std::is_array<double> >':'std::__or_<std::is_function<double>, std::is_array<double> >'
| | |   `-SubstTemplateTypeParmType 0xe64240 'std::__or_<std::is_function<double>, std::is_array<double> >' sugar
| | |     |-TemplateTypeParmType 0xbbbf20 '_Iffalse' dependent depth 0 index 1
| | |     | `-TemplateTypeParm 0xbbbec8 '_Iffalse'
| | |     `-RecordType 0xe63e70 'std::__or_<std::is_function<double>, std::is_array<double> >'
| | |       `-ClassTemplateSpecialization 0xe63d88 '__or_'
| | |-ClassTemplateSpecializationDecl 0xe647e0 <line:2064:3, line:2066:30> line:2065:12 struct conditional definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument integral 0
| | | |-TemplateArgument type 'std::is_function<double>'
| | | |-TemplateArgument type 'std::is_array<double>'
| | | |-CXXRecordDecl 0xe64b80 prev 0xe647e0 <col:5, col:12> col:12 implicit struct conditional
| | | `-TypedefDecl 0xe64c20 <line:2066:7, col:24> col:24 referenced type 'std::is_array<double>':'std::is_array<double>'
| | |   `-SubstTemplateTypeParmType 0xe64ab0 'std::is_array<double>' sugar
| | |     |-TemplateTypeParmType 0xbbbf20 '_Iffalse' dependent depth 0 index 1
| | |     | `-TemplateTypeParm 0xbbbec8 '_Iffalse'
| | |     `-RecordType 0xe5c980 'std::is_array<double>'
| | |       `-ClassTemplateSpecialization 0xe5c898 'is_array'
| | |-ClassTemplateSpecializationDecl 0xe68bb0 <line:91:3, line:92:12> line:2060:12 struct conditional definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument integral 1
| | | |-TemplateArgument type 'std::__or_<std::chrono::treat_as_floating_point<double>, std::__not_<std::chrono::treat_as_floating_point<double> > >'
| | | |-TemplateArgument type 'std::is_convertible<const double &, double>'
| | | |-CXXRecordDecl 0xe68e70 prev 0xe68bb0 <col:5, col:12> col:12 implicit struct conditional
| | | `-TypedefDecl 0xe68f38 <line:2061:7, col:23> col:23 referenced type 'std::__or_<std::chrono::treat_as_floating_point<double>, std::__not_<std::chrono::treat_as_floating_point<double> > >':'std::__or_<std::chrono::treat_as_floating_point<double>, std::__not_<std::chrono::treat_as_floating_point<double> > >'
| | |   `-SubstTemplateTypeParmType 0xe68f00 'std::__or_<std::chrono::treat_as_floating_point<double>, std::__not_<std::chrono::treat_as_floating_point<double> > >' sugar
| | |     |-TemplateTypeParmType 0xbbbb10 '_Iftrue' dependent depth 0 index 1
| | |     | `-TemplateTypeParm 0xbbbab8 '_Iftrue'
| | |     `-RecordType 0xe61ba0 'std::__or_<std::chrono::treat_as_floating_point<double>, std::__not_<std::chrono::treat_as_floating_point<double> > >'
| | |       `-ClassTemplateSpecialization 0xe61ac0 '__or_'
| | |-ClassTemplateSpecializationDecl 0xe692f8 <line:91:3, line:92:12> line:2060:12 struct conditional definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument integral 1
| | | |-TemplateArgument type 'std::chrono::treat_as_floating_point<double>'
| | | |-TemplateArgument type 'std::__not_<std::chrono::treat_as_floating_point<double> >'
| | | |-CXXRecordDecl 0xe695c0 prev 0xe692f8 <col:5, col:12> col:12 implicit struct conditional
| | | `-TypedefDecl 0xe69660 <line:2061:7, col:23> col:23 referenced type 'std::chrono::treat_as_floating_point<double>':'std::chrono::treat_as_floating_point<double>'
| | |   `-SubstTemplateTypeParmType 0xe56ff0 'std::chrono::treat_as_floating_point<double>' sugar
| | |     |-TemplateTypeParmType 0xbbbb10 '_Iftrue' dependent depth 0 index 1
| | |     | `-TemplateTypeParm 0xbbbab8 '_Iftrue'
| | |     `-RecordType 0xe50760 'std::chrono::treat_as_floating_point<double>'
| | |       `-ClassTemplateSpecialization 0xe50678 'treat_as_floating_point'
| | |-ClassTemplateSpecializationDecl 0xe6b1c8 <line:91:3, line:92:12> line:2060:12 struct conditional definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument integral 1
| | | |-TemplateArgument type 'std::chrono::treat_as_floating_point<double>'
| | | |-TemplateArgument type 'std::__and_<std::integral_constant<bool, true>, std::__not_<std::chrono::treat_as_floating_point<double> > >'
| | | |-CXXRecordDecl 0xe6b490 prev 0xe6b1c8 <col:5, col:12> col:12 implicit struct conditional
| | | `-TypedefDecl 0xe6b530 <line:2061:7, col:23> col:23 referenced type 'std::chrono::treat_as_floating_point<double>':'std::chrono::treat_as_floating_point<double>'
| | |   `-SubstTemplateTypeParmType 0xe56ff0 'std::chrono::treat_as_floating_point<double>' sugar
| | |     |-TemplateTypeParmType 0xbbbb10 '_Iftrue' dependent depth 0 index 1
| | |     | `-TemplateTypeParm 0xbbbab8 '_Iftrue'
| | |     `-RecordType 0xe50760 'std::chrono::treat_as_floating_point<double>'
| | |       `-ClassTemplateSpecialization 0xe50678 'treat_as_floating_point'
| | |-ClassTemplateSpecializationDecl 0xe6f8f8 <line:2064:3, line:2066:30> line:2065:12 struct conditional definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument integral 0
| | | |-TemplateArgument type 'std::is_void<const std::chrono::duration<double, std::ratio<1, 1> > &>'
| | | |-TemplateArgument type 'std::__or_<std::is_function<double>, std::is_array<double> >'
| | | |-CXXRecordDecl 0xe70968 prev 0xe6f8f8 <col:5, col:12> col:12 implicit struct conditional
| | | `-TypedefDecl 0xe70a08 <line:2066:7, col:24> col:24 referenced type 'std::__or_<std::is_function<double>, std::is_array<double> >':'std::__or_<std::is_function<double>, std::is_array<double> >'
| | |   `-SubstTemplateTypeParmType 0xe64240 'std::__or_<std::is_function<double>, std::is_array<double> >' sugar
| | |     |-TemplateTypeParmType 0xbbbf20 '_Iffalse' dependent depth 0 index 1
| | |     | `-TemplateTypeParm 0xbbbec8 '_Iffalse'
| | |     `-RecordType 0xe63e70 'std::__or_<std::is_function<double>, std::is_array<double> >'
| | |       `-ClassTemplateSpecialization 0xe63d88 '__or_'
| | `-ClassTemplateSpecializationDecl 0xe734d0 <line:2064:3, line:2066:30> line:2065:12 struct conditional definition
| |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-TemplateArgument integral 0
| |   |-TemplateArgument type 'std::__or_<std::chrono::treat_as_floating_point<double>, std::__not_<std::chrono::treat_as_floating_point<std::chrono::duration<double, std::ratio<1, 1> > > > >'
| |   |-TemplateArgument type 'std::is_convertible<const std::chrono::duration<double, std::ratio<1, 1> > &, double>'
| |   |-CXXRecordDecl 0xe73870 prev 0xe734d0 <col:5, col:12> col:12 implicit struct conditional
| |   `-TypedefDecl 0xe73910 <line:2066:7, col:24> col:24 referenced type 'std::is_convertible<const std::chrono::duration<double, std::ratio<1, 1> > &, double>':'std::is_convertible<const std::chrono::duration<double, std::ratio<1, 1> > &, double>'
| |     `-SubstTemplateTypeParmType 0xe737a0 'std::is_convertible<const std::chrono::duration<double, std::ratio<1, 1> > &, double>' sugar
| |       |-TemplateTypeParmType 0xbbbf20 '_Iffalse' dependent depth 0 index 1
| |       | `-TemplateTypeParm 0xbbbec8 '_Iffalse'
| |       `-RecordType 0xe6d160 'std::is_convertible<const std::chrono::duration<double, std::ratio<1, 1> > &, double>'
| |         `-ClassTemplateSpecialization 0xe6d068 'is_convertible'
| |-ClassTemplateDecl 0xacef88 <line:94:3, line:95:12> col:12 __or_
| | |-TemplateTypeParmDecl 0xacee28 <line:94:12> col:23 typename depth 0 index 0 ...
| | |-CXXRecordDecl 0xaceef8 <line:95:5, col:12> col:12 struct __or_
| | |-ClassTemplateSpecialization 0xacf220 '__or_'
| | |-ClassTemplateSpecializationDecl 0xd364c0 <line:107:3, line:110:7> line:108:12 struct __or_ definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'conditional<treat_as_floating_point<long>::value, treat_as_floating_point<long>, __not_<treat_as_floating_point<long> > >::type':'std::__not_<std::chrono::treat_as_floating_point<long> >'
| | | |-TemplateArgument pack
| | | | |-TemplateArgument type 'std::chrono::treat_as_floating_point<long>'
| | | | `-TemplateArgument type 'std::__not_<std::chrono::treat_as_floating_point<long> >'
| | | `-CXXRecordDecl 0xd44340 prev 0xd364c0 <col:5, col:12> col:12 implicit struct __or_
| | |-ClassTemplateSpecializationDecl 0xd37218 <line:112:3, line:115:7> line:113:12 struct __or_ definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'conditional<is_void<const long &>::value, is_void<const long &>, __or_<is_function<long>, is_array<long> > >::type':'std::__or_<std::is_function<long>, std::is_array<long> >'
| | | |-TemplateArgument pack
| | | | |-TemplateArgument type 'std::is_void<const long &>'
| | | | |-TemplateArgument type 'std::is_function<long>'
| | | | `-TemplateArgument type 'std::is_array<long>'
| | | `-CXXRecordDecl 0xd3aa78 prev 0xd37218 <col:5, col:12> col:12 implicit struct __or_
| | |-ClassTemplateSpecializationDecl 0xd389a8 <line:107:3, line:110:7> line:108:12 struct __or_ definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'conditional<is_function<long>::value, is_function<long>, is_array<long> >::type':'std::is_array<long>'
| | | |-TemplateArgument pack
| | | | |-TemplateArgument type 'std::is_function<long>'
| | | | `-TemplateArgument type 'std::is_array<long>'
| | | `-CXXRecordDecl 0xd3a9a0 prev 0xd389a8 <col:5, col:12> col:12 implicit struct __or_
| | |-ClassTemplateSpecializationDecl 0xd4c990 <line:107:3, line:110:7> line:108:12 struct __or_ definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'conditional<treat_as_floating_point<long>::value, treat_as_floating_point<long>, __and_<integral_constant<bool, true>, __not_<treat_as_floating_point<long> > > >::type':'std::__and_<std::integral_constant<bool, true>, std::__not_<std::chrono::treat_as_floating_point<long> > >'
| | | |-TemplateArgument pack
| | | | |-TemplateArgument type 'std::chrono::treat_as_floating_point<long>'
| | | | `-TemplateArgument type 'std::__and_<std::integral_constant<bool, true>, std::__not_<std::chrono::treat_as_floating_point<long> > >'
| | | `-CXXRecordDecl 0xd4df78 prev 0xd4c990 <col:5, col:12> col:12 implicit struct __or_
| | |-ClassTemplateSpecializationDecl 0xd5be70 <line:94:3, line:95:12> col:12 struct __or_
| | | `-TemplateArgument pack
| | |   |-TemplateArgument type 'std::chrono::treat_as_floating_point<long>'
| | |   `-TemplateArgument type 'std::__not_<std::chrono::treat_as_floating_point<std::chrono::duration<long, std::ratio<1, 1000000000> > > >'
| | |-ClassTemplateSpecializationDecl 0xd5c968 <line:112:3, line:115:7> line:113:12 struct __or_ definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'conditional<is_void<const duration<long, ratio<1, 1000000000> > &>::value, is_void<const duration<long, ratio<1, 1000000000> > &>, __or_<is_function<long>, is_array<long> > >::type':'std::__or_<std::is_function<long>, std::is_array<long> >'
| | | |-TemplateArgument pack
| | | | |-TemplateArgument type 'std::is_void<const std::chrono::duration<long, std::ratio<1, 1000000000> > &>'
| | | | |-TemplateArgument type 'std::is_function<long>'
| | | | `-TemplateArgument type 'std::is_array<long>'
| | | `-CXXRecordDecl 0xd5eea0 prev 0xd5c968 <col:5, col:12> col:12 implicit struct __or_
| | |-ClassTemplateSpecializationDecl 0xd98080 <line:94:3, line:95:12> col:12 struct __or_
| | | `-TemplateArgument pack
| | |   |-TemplateArgument type 'std::chrono::treat_as_floating_point<long>'
| | |   `-TemplateArgument type 'std::__not_<std::chrono::treat_as_floating_point<std::chrono::duration<long, std::ratio<1, 1> > > >'
| | |-ClassTemplateSpecializationDecl 0xd98b78 <line:112:3, line:115:7> line:113:12 struct __or_ definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'conditional<is_void<const duration<long, ratio<1, 1> > &>::value, is_void<const duration<long, ratio<1, 1> > &>, __or_<is_function<long>, is_array<long> > >::type':'std::__or_<std::is_function<long>, std::is_array<long> >'
| | | |-TemplateArgument pack
| | | | |-TemplateArgument type 'std::is_void<const std::chrono::duration<long, std::ratio<1, 1> > &>'
| | | | |-TemplateArgument type 'std::is_function<long>'
| | | | `-TemplateArgument type 'std::is_array<long>'
| | | `-CXXRecordDecl 0xd9a870 prev 0xd98b78 <col:5, col:12> col:12 implicit struct __or_
| | |-ClassTemplateSpecializationDecl 0xdb1c28 <line:112:3, line:115:7> line:113:12 struct __or_ definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'conditional<is_void<duration<long, ratio<1, 1000000000> > >::value, is_void<duration<long, ratio<1, 1000000000> > >, __or_<is_function<duration<long, ratio<1, 1000000000> > >, is_array<duration<long, ratio<1, 1000000000> > > > >::type':'std::__or_<std::is_function<std::chrono::duration<long, std::ratio<1, 1000000000> > >, std::is_array<std::chrono::duration<long, std::ratio<1, 1000000000> > > >'
| | | |-TemplateArgument pack
| | | | |-TemplateArgument type 'std::is_void<std::chrono::duration<long, std::ratio<1, 1000000000> > >'
| | | | |-TemplateArgument type 'std::is_function<std::chrono::duration<long, std::ratio<1, 1000000000> > >'
| | | | `-TemplateArgument type 'std::is_array<std::chrono::duration<long, std::ratio<1, 1000000000> > >'
| | | `-CXXRecordDecl 0xdb4b78 prev 0xdb1c28 <col:5, col:12> col:12 implicit struct __or_
| | |-ClassTemplateSpecializationDecl 0xdb3398 <line:107:3, line:110:7> line:108:12 struct __or_ definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'conditional<is_function<duration<long, ratio<1, 1000000000> > >::value, is_function<duration<long, ratio<1, 1000000000> > >, is_array<duration<long, ratio<1, 1000000000> > > >::type':'std::is_array<std::chrono::duration<long, std::ratio<1, 1000000000> > >'
| | | |-TemplateArgument pack
| | | | |-TemplateArgument type 'std::is_function<std::chrono::duration<long, std::ratio<1, 1000000000> > >'
| | | | `-TemplateArgument type 'std::is_array<std::chrono::duration<long, std::ratio<1, 1000000000> > >'
| | | `-CXXRecordDecl 0xdb4aa0 prev 0xdb3398 <col:5, col:12> col:12 implicit struct __or_
| | |-ClassTemplateSpecializationDecl 0xdc6ea0 <line:107:3, line:110:7> line:108:12 struct __or_ definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'conditional<treat_as_floating_point<long double>::value, treat_as_floating_point<long double>, __not_<treat_as_floating_point<long double> > >::type':'std::chrono::treat_as_floating_point<long double>'
| | | |-TemplateArgument pack
| | | | |-TemplateArgument type 'std::chrono::treat_as_floating_point<long double>'
| | | | `-TemplateArgument type 'std::__not_<std::chrono::treat_as_floating_point<long double> >'
| | | `-CXXRecordDecl 0xdcfb20 prev 0xdc6ea0 <col:5, col:12> col:12 implicit struct __or_
| | |-ClassTemplateSpecializationDecl 0xdc7bf8 <line:112:3, line:115:7> line:113:12 struct __or_ definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'conditional<is_void<const long double &>::value, is_void<const long double &>, __or_<is_function<long double>, is_array<long double> > >::type':'std::__or_<std::is_function<long double>, std::is_array<long double> >'
| | | |-TemplateArgument pack
| | | | |-TemplateArgument type 'std::is_void<const long double &>'
| | | | |-TemplateArgument type 'std::is_function<long double>'
| | | | `-TemplateArgument type 'std::is_array<long double>'
| | | `-CXXRecordDecl 0xdcab58 prev 0xdc7bf8 <col:5, col:12> col:12 implicit struct __or_
| | |-ClassTemplateSpecializationDecl 0xdc9378 <line:107:3, line:110:7> line:108:12 struct __or_ definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'conditional<is_function<long double>::value, is_function<long double>, is_array<long double> >::type':'std::is_array<long double>'
| | | |-TemplateArgument pack
| | | | |-TemplateArgument type 'std::is_function<long double>'
| | | | `-TemplateArgument type 'std::is_array<long double>'
| | | `-CXXRecordDecl 0xdcaa80 prev 0xdc9378 <col:5, col:12> col:12 implicit struct __or_
| | |-ClassTemplateSpecializationDecl 0xdd7720 <line:107:3, line:110:7> line:108:12 struct __or_ definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'conditional<treat_as_floating_point<long double>::value, treat_as_floating_point<long double>, __and_<integral_constant<bool, true>, __not_<treat_as_floating_point<long double> > > >::type':'std::chrono::treat_as_floating_point<long double>'
| | | |-TemplateArgument pack
| | | | |-TemplateArgument type 'std::chrono::treat_as_floating_point<long double>'
| | | | `-TemplateArgument type 'std::__and_<std::integral_constant<bool, true>, std::__not_<std::chrono::treat_as_floating_point<long double> > >'
| | | `-CXXRecordDecl 0xdd83c0 prev 0xdd7720 <col:5, col:12> col:12 implicit struct __or_
| | |-ClassTemplateSpecializationDecl 0xe552e0 <line:107:3, line:110:7> line:108:12 struct __or_ definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'conditional<treat_as_floating_point<double>::value, treat_as_floating_point<double>, __and_<integral_constant<bool, false>, __not_<treat_as_floating_point<long> > > >::type':'std::chrono::treat_as_floating_point<double>'
| | | |-TemplateArgument pack
| | | | |-TemplateArgument type 'std::chrono::treat_as_floating_point<double>'
| | | | `-TemplateArgument type 'std::__and_<std::integral_constant<bool, false>, std::__not_<std::chrono::treat_as_floating_point<long> > >'
| | | `-CXXRecordDecl 0xe57140 prev 0xe552e0 <col:5, col:12> col:12 implicit struct __or_
| | |-ClassTemplateSpecializationDecl 0xe61ac0 <line:107:3, line:110:7> line:108:12 struct __or_ definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'conditional<treat_as_floating_point<double>::value, treat_as_floating_point<double>, __not_<treat_as_floating_point<double> > >::type':'std::chrono::treat_as_floating_point<double>'
| | | |-TemplateArgument pack
| | | | |-TemplateArgument type 'std::chrono::treat_as_floating_point<double>'
| | | | `-TemplateArgument type 'std::__not_<std::chrono::treat_as_floating_point<double> >'
| | | `-CXXRecordDecl 0xe69770 prev 0xe61ac0 <col:5, col:12> col:12 implicit struct __or_
| | |-ClassTemplateSpecializationDecl 0xe62618 <line:112:3, line:115:7> line:113:12 struct __or_ definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'conditional<is_void<const double &>::value, is_void<const double &>, __or_<is_function<double>, is_array<double> > >::type':'std::__or_<std::is_function<double>, std::is_array<double> >'
| | | |-TemplateArgument pack
| | | | |-TemplateArgument type 'std::is_void<const double &>'
| | | | |-TemplateArgument type 'std::is_function<double>'
| | | | `-TemplateArgument type 'std::is_array<double>'
| | | `-CXXRecordDecl 0xe64e08 prev 0xe62618 <col:5, col:12> col:12 implicit struct __or_
| | |-ClassTemplateSpecializationDecl 0xe63d88 <line:107:3, line:110:7> line:108:12 struct __or_ definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'conditional<is_function<double>::value, is_function<double>, is_array<double> >::type':'std::is_array<double>'
| | | |-TemplateArgument pack
| | | | |-TemplateArgument type 'std::is_function<double>'
| | | | `-TemplateArgument type 'std::is_array<double>'
| | | `-CXXRecordDecl 0xe64d30 prev 0xe63d88 <col:5, col:12> col:12 implicit struct __or_
| | |-ClassTemplateSpecializationDecl 0xe6a9a0 <line:107:3, line:110:7> line:108:12 struct __or_ definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'conditional<treat_as_floating_point<double>::value, treat_as_floating_point<double>, __and_<integral_constant<bool, true>, __not_<treat_as_floating_point<double> > > >::type':'std::chrono::treat_as_floating_point<double>'
| | | |-TemplateArgument pack
| | | | |-TemplateArgument type 'std::chrono::treat_as_floating_point<double>'
| | | | `-TemplateArgument type 'std::__and_<std::integral_constant<bool, true>, std::__not_<std::chrono::treat_as_floating_point<double> > >'
| | | `-CXXRecordDecl 0xe6b640 prev 0xe6a9a0 <col:5, col:12> col:12 implicit struct __or_
| | |-ClassTemplateSpecializationDecl 0xe6d640 <line:94:3, line:95:12> col:12 struct __or_
| | | `-TemplateArgument pack
| | |   |-TemplateArgument type 'std::chrono::treat_as_floating_point<double>'
| | |   `-TemplateArgument type 'std::__not_<std::chrono::treat_as_floating_point<std::chrono::duration<double, std::ratio<1, 1> > > >'
| | `-ClassTemplateSpecializationDecl 0xe6e138 <line:112:3, line:115:7> line:113:12 struct __or_ definition
| |   |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'conditional<is_void<const duration<double, ratio<1, 1> > &>::value, is_void<const duration<double, ratio<1, 1> > &>, __or_<is_function<double>, is_array<double> > >::type':'std::__or_<std::is_function<double>, std::is_array<double> >'
| |   |-TemplateArgument pack
| |   | |-TemplateArgument type 'std::is_void<const std::chrono::duration<double, std::ratio<1, 1> > &>'
| |   | |-TemplateArgument type 'std::is_function<double>'
| |   | `-TemplateArgument type 'std::is_array<double>'
| |   `-CXXRecordDecl 0xe70b20 prev 0xe6e138 <col:5, col:12> col:12 implicit struct __or_
| |-ClassTemplateSpecializationDecl 0xacf220 <line:97:3, line:100:7> line:98:12 struct __or_ definition
| | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | |-TemplateArgument pack
| | `-CXXRecordDecl 0xacfae8 <col:5, col:12> col:12 implicit struct __or_
| |-ClassTemplatePartialSpecializationDecl 0xacfd30 <line:102:3, line:105:7> line:103:12 struct __or_ definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public '_B1'
| | |-TemplateArgument pack
| | | `-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateTypeParmDecl 0xacfb90 <line:102:12, col:21> col:21 referenced typename depth 0 index 0 _B1
| | `-CXXRecordDecl 0xacffc8 <line:103:5, col:12> col:12 implicit struct __or_
| |-ClassTemplatePartialSpecializationDecl 0xad0300 <line:107:3, line:110:7> line:108:12 struct __or_ definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'conditional<_B1::value, _B1, _B2>::type'
| | |-TemplateArgument pack
| | | |-TemplateArgument type 'type-parameter-0-0'
| | | `-TemplateArgument type 'type-parameter-0-1'
| | |-TemplateTypeParmDecl 0xad0070 <line:107:12, col:21> col:21 referenced typename depth 0 index 0 _B1
| | |-TemplateTypeParmDecl 0xad00e8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _B2
| | `-CXXRecordDecl 0xad0910 <line:108:5, col:12> col:12 implicit struct __or_
| |-ClassTemplatePartialSpecializationDecl 0xad0ee0 <line:112:3, line:115:7> line:113:12 struct __or_ definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'conditional<_B1::value, _B1, __or_<_B2, _B3, _Bn...> >::type'
| | |-TemplateArgument pack
| | | |-TemplateArgument type 'type-parameter-0-0'
| | | |-TemplateArgument type 'type-parameter-0-1'
| | | |-TemplateArgument type 'type-parameter-0-2'
| | | `-TemplateArgument type 'type-parameter-0-3...'
| | |-TemplateTypeParmDecl 0xad09b8 <line:112:12, col:21> col:21 referenced typename depth 0 index 0 _B1
| | |-TemplateTypeParmDecl 0xad0a38 <col:26, col:35> col:35 referenced typename depth 0 index 1 _B2
| | |-TemplateTypeParmDecl 0xad0ab8 <col:40, col:49> col:49 referenced typename depth 0 index 2 _B3
| | |-TemplateTypeParmDecl 0xad0b38 <col:54, col:66> col:66 referenced typename depth 0 index 3 ... _Bn
| | `-CXXRecordDecl 0xa0ce30 <line:113:5, col:12> col:12 implicit struct __or_
| |-ClassTemplateDecl 0xa0d008 <line:117:3, line:118:12> col:12 __and_
| | |-TemplateTypeParmDecl 0xa0ced8 <line:117:12> col:23 typename depth 0 index 0 ...
| | |-CXXRecordDecl 0xa0cf78 <line:118:5, col:12> col:12 struct __and_
| | |-ClassTemplateSpecialization 0xa0d270 '__and_'
| | |-ClassTemplateSpecializationDecl 0xd367a8 <line:130:3, line:133:7> line:131:12 struct __and_ definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'conditional<is_convertible<const long &, long>::value, __or_<treat_as_floating_point<long>, __not_<treat_as_floating_point<long> > >, is_convertible<const long &, long> >::type':'std::__or_<std::chrono::treat_as_floating_point<long>, std::__not_<std::chrono::treat_as_floating_point<long> > >'
| | | |-TemplateArgument pack
| | | | |-TemplateArgument type 'std::is_convertible<const long &, long>'
| | | | `-TemplateArgument type 'std::__or_<std::chrono::treat_as_floating_point<long>, std::__not_<std::chrono::treat_as_floating_point<long> > >'
| | | `-CXXRecordDecl 0xd44418 prev 0xd367a8 <col:5, col:12> col:12 implicit struct __and_
| | |-ClassTemplateSpecializationDecl 0xd4c7c0 <line:130:3, line:133:7> line:131:12 struct __and_ definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'conditional<integral_constant<bool, true>::value, __not_<treat_as_floating_point<long> >, integral_constant<bool, true> >::type':'std::__not_<std::chrono::treat_as_floating_point<long> >'
| | | |-TemplateArgument pack
| | | | |-TemplateArgument type 'std::integral_constant<bool, true>'
| | | | `-TemplateArgument type 'std::__not_<std::chrono::treat_as_floating_point<long> >'
| | | `-CXXRecordDecl 0xd4dea0 prev 0xd4c7c0 <col:5, col:12> col:12 implicit struct __and_
| | |-ClassTemplateSpecializationDecl 0xd4cc10 <line:125:3, line:128:7> line:126:12 struct __and_ definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'std::__or_<std::chrono::treat_as_floating_point<long>, std::__and_<std::integral_constant<bool, true>, std::__not_<std::chrono::treat_as_floating_point<long> > > >':'std::__or_<std::chrono::treat_as_floating_point<long>, std::__and_<std::integral_constant<bool, true>, std::__not_<std::chrono::treat_as_floating_point<long> > > >'
| | | |-TemplateArgument pack
| | | | `-TemplateArgument type 'std::__or_<std::chrono::treat_as_floating_point<long>, std::__and_<std::integral_constant<bool, true>, std::__not_<std::chrono::treat_as_floating_point<long> > > >'
| | | `-CXXRecordDecl 0xd4e050 prev 0xd4cc10 <col:5, col:12> col:12 implicit struct __and_
| | |-ClassTemplateSpecializationDecl 0xd5c158 <line:130:3, line:133:7> line:131:12 struct __and_ definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'conditional<is_convertible<const duration<long, ratio<1, 1000000000> > &, long>::value, __or_<treat_as_floating_point<long>, __not_<treat_as_floating_point<duration<long, ratio<1, 1000000000> > > > >, is_convertible<const duration<long, ratio<1, 1000000000> > &, long> >::type':'std::is_convertible<const std::chrono::duration<long, std::ratio<1, 1000000000> > &, long>'
| | | |-TemplateArgument pack
| | | | |-TemplateArgument type 'std::is_convertible<const std::chrono::duration<long, std::ratio<1, 1000000000> > &, long>'
| | | | `-TemplateArgument type 'std::__or_<std::chrono::treat_as_floating_point<long>, std::__not_<std::chrono::treat_as_floating_point<std::chrono::duration<long, std::ratio<1, 1000000000> > > > >'
| | | `-CXXRecordDecl 0xd64fc0 prev 0xd5c158 <col:5, col:12> col:12 implicit struct __and_
| | |-ClassTemplateSpecializationDecl 0xd98368 <line:130:3, line:133:7> line:131:12 struct __and_ definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'conditional<is_convertible<const duration<long, ratio<1, 1> > &, long>::value, __or_<treat_as_floating_point<long>, __not_<treat_as_floating_point<duration<long, ratio<1, 1> > > > >, is_convertible<const duration<long, ratio<1, 1> > &, long> >::type':'std::is_convertible<const std::chrono::duration<long, std::ratio<1, 1> > &, long>'
| | | |-TemplateArgument pack
| | | | |-TemplateArgument type 'std::is_convertible<const std::chrono::duration<long, std::ratio<1, 1> > &, long>'
| | | | `-TemplateArgument type 'std::__or_<std::chrono::treat_as_floating_point<long>, std::__not_<std::chrono::treat_as_floating_point<std::chrono::duration<long, std::ratio<1, 1> > > > >'
| | | `-CXXRecordDecl 0xd9d770 prev 0xd98368 <col:5, col:12> col:12 implicit struct __and_
| | |-ClassTemplateSpecializationDecl 0xdb0e90 <line:125:3, line:128:7> line:126:12 struct __and_ definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'std::is_convertible<std::chrono::duration<long, std::ratio<1, 1000000000> >, std::chrono::duration<long, std::ratio<1, 1000000000> > >':'std::is_convertible<std::chrono::duration<long, std::ratio<1, 1000000000> >, std::chrono::duration<long, std::ratio<1, 1000000000> > >'
| | | |-TemplateArgument pack
| | | | `-TemplateArgument type 'std::is_convertible<std::chrono::duration<long, std::ratio<1, 1000000000> >, std::chrono::duration<long, std::ratio<1, 1000000000> > >'
| | | `-CXXRecordDecl 0xdb8758 prev 0xdb0e90 <col:5, col:12> col:12 implicit struct __and_
| | |-ClassTemplateSpecializationDecl 0xdc7188 <line:130:3, line:133:7> line:131:12 struct __and_ definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'conditional<is_convertible<const long double &, long double>::value, __or_<treat_as_floating_point<long double>, __not_<treat_as_floating_point<long double> > >, is_convertible<const long double &, long double> >::type':'std::__or_<std::chrono::treat_as_floating_point<long double>, std::__not_<std::chrono::treat_as_floating_point<long double> > >'
| | | |-TemplateArgument pack
| | | | |-TemplateArgument type 'std::is_convertible<const long double &, long double>'
| | | | `-TemplateArgument type 'std::__or_<std::chrono::treat_as_floating_point<long double>, std::__not_<std::chrono::treat_as_floating_point<long double> > >'
| | | `-CXXRecordDecl 0xdcfbf8 prev 0xdc7188 <col:5, col:12> col:12 implicit struct __and_
| | |-ClassTemplateSpecializationDecl 0xdd7550 <line:117:3, line:118:12> col:12 struct __and_
| | | `-TemplateArgument pack
| | |   |-TemplateArgument type 'std::integral_constant<bool, true>'
| | |   `-TemplateArgument type 'std::__not_<std::chrono::treat_as_floating_point<long double> >'
| | |-ClassTemplateSpecializationDecl 0xdd79a0 <line:125:3, line:128:7> line:126:12 struct __and_ definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'std::__or_<std::chrono::treat_as_floating_point<long double>, std::__and_<std::integral_constant<bool, true>, std::__not_<std::chrono::treat_as_floating_point<long double> > > >':'std::__or_<std::chrono::treat_as_floating_point<long double>, std::__and_<std::integral_constant<bool, true>, std::__not_<std::chrono::treat_as_floating_point<long double> > > >'
| | | |-TemplateArgument pack
| | | | `-TemplateArgument type 'std::__or_<std::chrono::treat_as_floating_point<long double>, std::__and_<std::integral_constant<bool, true>, std::__not_<std::chrono::treat_as_floating_point<long double> > > >'
| | | `-CXXRecordDecl 0xdd8498 prev 0xdd79a0 <col:5, col:12> col:12 implicit struct __and_
| | |-ClassTemplateSpecializationDecl 0xe55110 <line:117:3, line:118:12> col:12 struct __and_
| | | `-TemplateArgument pack
| | |   |-TemplateArgument type 'std::integral_constant<bool, false>'
| | |   `-TemplateArgument type 'std::__not_<std::chrono::treat_as_floating_point<long> >'
| | |-ClassTemplateSpecializationDecl 0xe55560 <line:125:3, line:128:7> line:126:12 struct __and_ definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'std::__or_<std::chrono::treat_as_floating_point<double>, std::__and_<std::integral_constant<bool, false>, std::__not_<std::chrono::treat_as_floating_point<long> > > >':'std::__or_<std::chrono::treat_as_floating_point<double>, std::__and_<std::integral_constant<bool, false>, std::__not_<std::chrono::treat_as_floating_point<long> > > >'
| | | |-TemplateArgument pack
| | | | `-TemplateArgument type 'std::__or_<std::chrono::treat_as_floating_point<double>, std::__and_<std::integral_constant<bool, false>, std::__not_<std::chrono::treat_as_floating_point<long> > > >'
| | | `-CXXRecordDecl 0xe57218 prev 0xe55560 <col:5, col:12> col:12 implicit struct __and_
| | |-ClassTemplateSpecializationDecl 0xe61da8 <line:130:3, line:133:7> line:131:12 struct __and_ definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'conditional<is_convertible<const double &, double>::value, __or_<treat_as_floating_point<double>, __not_<treat_as_floating_point<double> > >, is_convertible<const double &, double> >::type':'std::__or_<std::chrono::treat_as_floating_point<double>, std::__not_<std::chrono::treat_as_floating_point<double> > >'
| | | |-TemplateArgument pack
| | | | |-TemplateArgument type 'std::is_convertible<const double &, double>'
| | | | `-TemplateArgument type 'std::__or_<std::chrono::treat_as_floating_point<double>, std::__not_<std::chrono::treat_as_floating_point<double> > >'
| | | `-CXXRecordDecl 0xe69848 prev 0xe61da8 <col:5, col:12> col:12 implicit struct __and_
| | |-ClassTemplateSpecializationDecl 0xe6a7d0 <line:117:3, line:118:12> col:12 struct __and_
| | | `-TemplateArgument pack
| | |   |-TemplateArgument type 'std::integral_constant<bool, true>'
| | |   `-TemplateArgument type 'std::__not_<std::chrono::treat_as_floating_point<double> >'
| | |-ClassTemplateSpecializationDecl 0xe6ac20 <line:125:3, line:128:7> line:126:12 struct __and_ definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'std::__or_<std::chrono::treat_as_floating_point<double>, std::__and_<std::integral_constant<bool, true>, std::__not_<std::chrono::treat_as_floating_point<double> > > >':'std::__or_<std::chrono::treat_as_floating_point<double>, std::__and_<std::integral_constant<bool, true>, std::__not_<std::chrono::treat_as_floating_point<double> > > >'
| | | |-TemplateArgument pack
| | | | `-TemplateArgument type 'std::__or_<std::chrono::treat_as_floating_point<double>, std::__and_<std::integral_constant<bool, true>, std::__not_<std::chrono::treat_as_floating_point<double> > > >'
| | | `-CXXRecordDecl 0xe6b718 prev 0xe6ac20 <col:5, col:12> col:12 implicit struct __and_
| | `-ClassTemplateSpecializationDecl 0xe6d928 <line:130:3, line:133:7> line:131:12 struct __and_ definition
| |   |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'conditional<is_convertible<const duration<double, ratio<1, 1> > &, double>::value, __or_<treat_as_floating_point<double>, __not_<treat_as_floating_point<duration<double, ratio<1, 1> > > > >, is_convertible<const duration<double, ratio<1, 1> > &, double> >::type':'std::is_convertible<const std::chrono::duration<double, std::ratio<1, 1> > &, double>'
| |   |-TemplateArgument pack
| |   | |-TemplateArgument type 'std::is_convertible<const std::chrono::duration<double, std::ratio<1, 1> > &, double>'
| |   | `-TemplateArgument type 'std::__or_<std::chrono::treat_as_floating_point<double>, std::__not_<std::chrono::treat_as_floating_point<std::chrono::duration<double, std::ratio<1, 1> > > > >'
| |   `-CXXRecordDecl 0xe73a20 prev 0xe6d928 <col:5, col:12> col:12 implicit struct __and_
| |-ClassTemplateSpecializationDecl 0xa0d270 <line:120:3, line:123:7> line:121:12 struct __and_ definition
| | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument pack
| | `-CXXRecordDecl 0xa0dae0 <col:5, col:12> col:12 implicit struct __and_
| |-ClassTemplatePartialSpecializationDecl 0xa0dd30 <line:125:3, line:128:7> line:126:12 struct __and_ definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public '_B1'
| | |-TemplateArgument pack
| | | `-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateTypeParmDecl 0xa0db88 <line:125:12, col:21> col:21 referenced typename depth 0 index 0 _B1
| | `-CXXRecordDecl 0xa0dfc8 <line:126:5, col:12> col:12 implicit struct __and_
| |-ClassTemplatePartialSpecializationDecl 0xa0e300 <line:130:3, line:133:7> line:131:12 struct __and_ definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'conditional<_B1::value, _B2, _B1>::type'
| | |-TemplateArgument pack
| | | |-TemplateArgument type 'type-parameter-0-0'
| | | `-TemplateArgument type 'type-parameter-0-1'
| | |-TemplateTypeParmDecl 0xa0e070 <line:130:12, col:21> col:21 referenced typename depth 0 index 0 _B1
| | |-TemplateTypeParmDecl 0xa0e0e8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _B2
| | `-CXXRecordDecl 0xa0e8f0 <line:131:5, col:12> col:12 implicit struct __and_
| |-ClassTemplatePartialSpecializationDecl 0xadca10 <line:135:3, line:138:7> line:136:12 struct __and_ definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'conditional<_B1::value, __and_<_B2, _B3, _Bn...>, _B1>::type'
| | |-TemplateArgument pack
| | | |-TemplateArgument type 'type-parameter-0-0'
| | | |-TemplateArgument type 'type-parameter-0-1'
| | | |-TemplateArgument type 'type-parameter-0-2'
| | | `-TemplateArgument type 'type-parameter-0-3...'
| | |-TemplateTypeParmDecl 0xa0e998 <line:135:12, col:21> col:21 referenced typename depth 0 index 0 _B1
| | |-TemplateTypeParmDecl 0xa0ea18 <col:26, col:35> col:35 referenced typename depth 0 index 1 _B2
| | |-TemplateTypeParmDecl 0xa0ea98 <col:40, col:49> col:49 referenced typename depth 0 index 2 _B3
| | |-TemplateTypeParmDecl 0xa0eb18 <col:54, col:66> col:66 referenced typename depth 0 index 3 ... _Bn
| | `-CXXRecordDecl 0xadd320 <line:136:5, col:12> col:12 implicit struct __and_
| |-ClassTemplateDecl 0xadd4f8 <line:140:3, line:143:7> line:141:12 __not_
| | |-TemplateTypeParmDecl 0xadd3c8 <line:140:12, col:21> col:21 typename depth 0 index 0 _Pp
| | |-CXXRecordDecl 0xadd468 <line:141:5, line:143:7> line:141:12 struct __not_ definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__bool_constant<!bool(_Pp::value)>':'integral_constant<bool, !bool(_Pp::value)>'
| | | `-CXXRecordDecl 0xadda68 <col:5, col:12> col:12 implicit struct __not_
| | |-ClassTemplateSpecializationDecl 0xd36318 <line:140:3, line:143:7> line:141:12 struct __not_ definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__bool_constant<!bool(treat_as_floating_point<long>::value)>':'std::integral_constant<bool, true>'
| | | |-TemplateArgument type 'std::chrono::treat_as_floating_point<long>'
| | | `-CXXRecordDecl 0xd44268 prev 0xd36318 <col:5, col:12> col:12 implicit struct __not_
| | |-ClassTemplateSpecializationDecl 0xd5bcc8 <line:140:3, line:143:7> line:141:12 struct __not_
| | | `-TemplateArgument type 'std::chrono::treat_as_floating_point<std::chrono::duration<long, std::ratio<1, 1000000000> > >'
| | |-ClassTemplateSpecializationDecl 0xd97ed8 <line:140:3, line:143:7> line:141:12 struct __not_
| | | `-TemplateArgument type 'std::chrono::treat_as_floating_point<std::chrono::duration<long, std::ratio<1, 1> > >'
| | |-ClassTemplateSpecializationDecl 0xdc6cf8 <line:140:3, line:143:7> line:141:12 struct __not_
| | | `-TemplateArgument type 'std::chrono::treat_as_floating_point<long double>'
| | |-ClassTemplateSpecializationDecl 0xe61918 <line:140:3, line:143:7> line:141:12 struct __not_
| | | `-TemplateArgument type 'std::chrono::treat_as_floating_point<double>'
| | `-ClassTemplateSpecializationDecl 0xe6d498 <line:140:3, line:143:7> line:141:12 struct __not_
| |   `-TemplateArgument type 'std::chrono::treat_as_floating_point<std::chrono::duration<double, std::ratio<1, 1> > >'
| |-ClassTemplateDecl 0xaddc38 <line:185:3, line:187:25> line:186:12 __success_type
| | |-TemplateTypeParmDecl 0xaddb10 <line:185:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0xaddba8 <line:186:5, line:187:25> line:186:12 struct __success_type definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-CXXRecordDecl 0xadde90 <col:5, col:12> col:12 implicit struct __success_type
| | | `-TypedefDecl 0xaddf30 <line:187:7, col:19> col:19 type '_Tp'
| | |   `-TemplateTypeParmType 0xaddb60 '_Tp' dependent depth 0 index 0
| | |     `-TemplateTypeParm 0xaddb10 '_Tp'
| | |-ClassTemplateSpecializationDecl 0xd57f70 <line:185:3, line:187:25> line:186:12 struct __success_type definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'long'
| | | |-CXXRecordDecl 0xd59778 prev 0xd57f70 <col:5, col:12> col:12 implicit struct __success_type
| | | `-TypedefDecl 0xd59848 <line:187:7, col:19> col:19 referenced type 'long':'long'
| | |   `-SubstTemplateTypeParmType 0xd59810 'long' sugar
| | |     |-TemplateTypeParmType 0xaddb60 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0xaddb10 '_Tp'
| | |     `-BuiltinType 0x7db3a0 'long'
| | |-ClassTemplateSpecializationDecl 0xd5b1c8 <line:185:3, line:187:25> line:186:12 struct __success_type definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | | |-CXXRecordDecl 0xd5b488 prev 0xd5b1c8 <col:5, col:12> col:12 implicit struct __success_type
| | | `-TypedefDecl 0xd5b558 <line:187:7, col:19> col:19 referenced type 'std::chrono::duration<long, std::ratio<1, 1000000000> >':'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | |   `-SubstTemplateTypeParmType 0xd5b520 'std::chrono::duration<long, std::ratio<1, 1000000000> >' sugar
| | |     |-TemplateTypeParmType 0xaddb60 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0xaddb10 '_Tp'
| | |     `-RecordType 0xd1d100 'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | |       `-ClassTemplateSpecialization 0xd1d000 'duration'
| | `-ClassTemplateSpecializationDecl 0xe5db20 <line:185:3, line:187:25> line:186:12 struct __success_type definition
| |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-TemplateArgument type 'double'
| |   |-CXXRecordDecl 0xe5f008 prev 0xe5db20 <col:5, col:12> col:12 implicit struct __success_type
| |   `-TypedefDecl 0xe5f0d8 <line:187:7, col:19> col:19 referenced type 'double':'double'
| |     `-SubstTemplateTypeParmType 0xe5f0a0 'double' sugar
| |       |-TemplateTypeParmType 0xaddb60 '_Tp' dependent depth 0 index 0
| |       | `-TemplateTypeParm 0xaddb10 '_Tp'
| |       `-BuiltinType 0x7db4a0 'double'
| |-CXXRecordDecl 0xaddfa0 <line:189:3, line:190:5> line:189:10 referenced struct __failure_type definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | `-CXXRecordDecl 0xade0b8 <col:3, col:10> col:10 implicit struct __failure_type
| |-ClassTemplateDecl 0xade288 <line:194:3, line:195:12> col:12 remove_cv
| | |-TemplateTypeParmDecl 0xade160 <line:194:12> col:20 typename depth 0 index 0
| | |-CXXRecordDecl 0xade1f8 <line:195:5, col:12> col:12 struct remove_cv
| | |-ClassTemplateSpecializationDecl 0xad68b8 <line:194:3, line:195:12> line:1400:12 struct remove_cv definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'wchar_t'
| | | |-CXXRecordDecl 0xad6ac0 prev 0xad68b8 <col:5, col:12> col:12 implicit struct remove_cv
| | | `-TypedefDecl 0xad7370 <line:1402:7, line:1403:67> col:67 referenced type 'typename remove_const<typename remove_volatile<wchar_t>::type>::type':'wchar_t'
| | |   `-ElaboratedType 0xad7320 'typename remove_const<typename remove_volatile<wchar_t>::type>::type' sugar
| | |     `-TypedefType 0xad7300 'std::remove_const<wchar_t>::type' sugar
| | |       |-Typedef 0xad7288 'type'
| | |       `-SubstTemplateTypeParmType 0xad7250 'wchar_t' sugar
| | |         |-TemplateTypeParmType 0xb5d350 '_Tp' dependent depth 0 index 0
| | |         | `-TemplateTypeParm 0xb5d2f8 '_Tp'
| | |         `-BuiltinType 0x7db860 'wchar_t'
| | |-ClassTemplateSpecializationDecl 0xb9aac8 <line:194:3, line:195:12> line:1400:12 struct remove_cv definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'unsigned int'
| | | |-CXXRecordDecl 0xb9acd0 prev 0xb9aac8 <col:5, col:12> col:12 implicit struct remove_cv
| | | `-TypedefDecl 0xb9b580 <line:1402:7, line:1403:67> col:67 referenced type 'typename remove_const<typename remove_volatile<unsigned int>::type>::type':'unsigned int'
| | |   `-ElaboratedType 0xb9b530 'typename remove_const<typename remove_volatile<unsigned int>::type>::type' sugar
| | |     `-TypedefType 0xb9b510 'std::remove_const<unsigned int>::type' sugar
| | |       |-Typedef 0xb9b498 'type'
| | |       `-SubstTemplateTypeParmType 0xb9b460 'unsigned int' sugar
| | |         |-TemplateTypeParmType 0xb5d350 '_Tp' dependent depth 0 index 0
| | |         | `-TemplateTypeParm 0xb5d2f8 '_Tp'
| | |         `-BuiltinType 0x7db420 'unsigned int'
| | |-ClassTemplateSpecializationDecl 0xb9e2f8 <line:194:3, line:195:12> line:1400:12 struct remove_cv definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'char16_t'
| | | |-CXXRecordDecl 0xb9e500 prev 0xb9e2f8 <col:5, col:12> col:12 implicit struct remove_cv
| | | `-TypedefDecl 0xb9ee30 <line:1402:7, line:1403:67> col:67 referenced type 'typename remove_const<typename remove_volatile<char16_t>::type>::type':'char16_t'
| | |   `-ElaboratedType 0xb9ede0 'typename remove_const<typename remove_volatile<char16_t>::type>::type' sugar
| | |     `-TypedefType 0xb9edc0 'std::remove_const<char16_t>::type' sugar
| | |       |-Typedef 0xb9ed48 'type'
| | |       `-SubstTemplateTypeParmType 0xb9ed10 'char16_t' sugar
| | |         |-TemplateTypeParmType 0xb5d350 '_Tp' dependent depth 0 index 0
| | |         | `-TemplateTypeParm 0xb5d2f8 '_Tp'
| | |         `-BuiltinType 0x7db8a0 'char16_t'
| | |-ClassTemplateSpecializationDecl 0xba0478 <line:194:3, line:195:12> line:1400:12 struct remove_cv definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'unsigned short'
| | | |-CXXRecordDecl 0xba0680 prev 0xba0478 <col:5, col:12> col:12 implicit struct remove_cv
| | | `-TypedefDecl 0xba0f30 <line:1402:7, line:1403:67> col:67 referenced type 'typename remove_const<typename remove_volatile<unsigned short>::type>::type':'unsigned short'
| | |   `-ElaboratedType 0xba0ee0 'typename remove_const<typename remove_volatile<unsigned short>::type>::type' sugar
| | |     `-TypedefType 0xba0ec0 'std::remove_const<unsigned short>::type' sugar
| | |       |-Typedef 0xba0e48 'type'
| | |       `-SubstTemplateTypeParmType 0xba0e10 'unsigned short' sugar
| | |         |-TemplateTypeParmType 0xb5d350 '_Tp' dependent depth 0 index 0
| | |         | `-TemplateTypeParm 0xb5d2f8 '_Tp'
| | |         `-BuiltinType 0x7db400 'unsigned short'
| | |-ClassTemplateSpecializationDecl 0xba3cc8 <line:194:3, line:195:12> line:1400:12 struct remove_cv definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'char32_t'
| | | |-CXXRecordDecl 0xba3ed0 prev 0xba3cc8 <col:5, col:12> col:12 implicit struct remove_cv
| | | `-TypedefDecl 0xba4780 <line:1402:7, line:1403:67> col:67 referenced type 'typename remove_const<typename remove_volatile<char32_t>::type>::type':'char32_t'
| | |   `-ElaboratedType 0xba4730 'typename remove_const<typename remove_volatile<char32_t>::type>::type' sugar
| | |     `-TypedefType 0xba4710 'std::remove_const<char32_t>::type' sugar
| | |       |-Typedef 0xba4698 'type'
| | |       `-SubstTemplateTypeParmType 0xba4660 'char32_t' sugar
| | |         |-TemplateTypeParmType 0xb5d350 '_Tp' dependent depth 0 index 0
| | |         | `-TemplateTypeParm 0xb5d2f8 '_Tp'
| | |         `-BuiltinType 0x7db8c0 'char32_t'
| | |-ClassTemplateSpecializationDecl 0xbfd5a8 <line:194:3, line:195:12> line:1400:12 struct remove_cv definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'void'
| | | |-CXXRecordDecl 0xbfd7b0 prev 0xbfd5a8 <col:5, col:12> col:12 implicit struct remove_cv
| | | `-TypedefDecl 0xbfe060 <line:1402:7, line:1403:67> col:67 referenced type 'typename remove_const<typename remove_volatile<void>::type>::type':'void'
| | |   `-ElaboratedType 0xbfe010 'typename remove_const<typename remove_volatile<void>::type>::type' sugar
| | |     `-TypedefType 0xbfdff0 'std::remove_const<void>::type' sugar
| | |       |-Typedef 0xbfdf78 'type'
| | |       `-SubstTemplateTypeParmType 0xbfdf40 'void' sugar
| | |         |-TemplateTypeParmType 0xb5d350 '_Tp' dependent depth 0 index 0
| | |         | `-TemplateTypeParm 0xb5d2f8 '_Tp'
| | |         `-BuiltinType 0x7db2e0 'void'
| | |-ClassTemplateSpecializationDecl 0xd37918 <line:194:3, line:195:12> line:1400:12 struct remove_cv definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'const long &'
| | | |-CXXRecordDecl 0xd37b20 prev 0xd37918 <col:5, col:12> col:12 implicit struct remove_cv
| | | `-TypedefDecl 0xd383d0 <line:1402:7, line:1403:67> col:67 referenced type 'typename remove_const<typename remove_volatile<const long &>::type>::type':'const long &'
| | |   `-ElaboratedType 0xd38380 'typename remove_const<typename remove_volatile<const long &>::type>::type' sugar
| | |     `-TypedefType 0xd38360 'std::remove_const<const long &>::type' sugar
| | |       |-Typedef 0xd382e8 'type'
| | |       `-SubstTemplateTypeParmType 0xd382b0 'const long &' sugar
| | |         |-TemplateTypeParmType 0xb5d350 '_Tp' dependent depth 0 index 0
| | |         | `-TemplateTypeParm 0xb5d2f8 '_Tp'
| | |         `-LValueReferenceType 0xd33260 'const long &'
| | |           `-QualType 0x7db3a1 'const long' const
| | |             `-BuiltinType 0x7db3a0 'long'
| | |-ClassTemplateSpecializationDecl 0xd42858 <line:194:3, line:195:12> line:1400:12 struct remove_cv definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'long'
| | | |-CXXRecordDecl 0xd42a60 prev 0xd42858 <col:5, col:12> col:12 implicit struct remove_cv
| | | `-TypedefDecl 0xd43310 <line:1402:7, line:1403:67> col:67 referenced type 'typename remove_const<typename remove_volatile<long>::type>::type':'long'
| | |   `-ElaboratedType 0xd432c0 'typename remove_const<typename remove_volatile<long>::type>::type' sugar
| | |     `-TypedefType 0xd432a0 'std::remove_const<long>::type' sugar
| | |       |-Typedef 0xd43228 'type'
| | |       `-SubstTemplateTypeParmType 0xd431f0 'long' sugar
| | |         |-TemplateTypeParmType 0xb5d350 '_Tp' dependent depth 0 index 0
| | |         | `-TemplateTypeParm 0xb5d2f8 '_Tp'
| | |         `-BuiltinType 0x7db3a0 'long'
| | |-ClassTemplateSpecializationDecl 0xd5cfd8 <line:194:3, line:195:12> line:1400:12 struct remove_cv definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'const std::chrono::duration<long, std::ratio<1, 1000000000> > &'
| | | |-CXXRecordDecl 0xd5d1e0 prev 0xd5cfd8 <col:5, col:12> col:12 implicit struct remove_cv
| | | `-TypedefDecl 0xd5e2e0 <line:1402:7, line:1403:67> col:67 referenced type 'typename remove_const<typename remove_volatile<const duration<long, ratio<1, 1000000000> > &>::type>::type':'const std::chrono::duration<long, std::ratio<1, 1000000000> > &'
| | |   `-ElaboratedType 0xd5e290 'typename remove_const<typename remove_volatile<const duration<long, ratio<1, 1000000000> > &>::type>::type' sugar
| | |     `-TypedefType 0xd5e270 'std::remove_const<const std::chrono::duration<long, std::ratio<1, 1000000000> > &>::type' sugar
| | |       |-Typedef 0xd5e1f8 'type'
| | |       `-SubstTemplateTypeParmType 0xd5e1c0 'const std::chrono::duration<long, std::ratio<1, 1000000000> > &' sugar
| | |         |-TemplateTypeParmType 0xb5d350 '_Tp' dependent depth 0 index 0
| | |         | `-TemplateTypeParm 0xb5d2f8 '_Tp'
| | |         `-LValueReferenceType 0xd2f910 'const std::chrono::duration<long, std::ratio<1, 1000000000> > &'
| | |           `-QualType 0xd1d101 'const std::chrono::duration<long, std::ratio<1, 1000000000> >' const
| | |             `-RecordType 0xd1d100 'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | |               `-ClassTemplateSpecialization 0xd1d000 'duration'
| | |-ClassTemplateSpecializationDecl 0xd991e8 <line:194:3, line:195:12> line:1400:12 struct remove_cv definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'const std::chrono::duration<long, std::ratio<1, 1> > &'
| | | |-CXXRecordDecl 0xd993f0 prev 0xd991e8 <col:5, col:12> col:12 implicit struct remove_cv
| | | `-TypedefDecl 0xd99ca0 <line:1402:7, line:1403:67> col:67 referenced type 'typename remove_const<typename remove_volatile<const duration<long, ratio<1, 1> > &>::type>::type':'const std::chrono::duration<long, std::ratio<1, 1> > &'
| | |   `-ElaboratedType 0xd99c50 'typename remove_const<typename remove_volatile<const duration<long, ratio<1, 1> > &>::type>::type' sugar
| | |     `-TypedefType 0xd99c30 'std::remove_const<const std::chrono::duration<long, std::ratio<1, 1> > &>::type' sugar
| | |       |-Typedef 0xd99bb8 'type'
| | |       `-SubstTemplateTypeParmType 0xd99b80 'const std::chrono::duration<long, std::ratio<1, 1> > &' sugar
| | |         |-TemplateTypeParmType 0xb5d350 '_Tp' dependent depth 0 index 0
| | |         | `-TemplateTypeParm 0xb5d2f8 '_Tp'
| | |         `-LValueReferenceType 0xb8f140 'const std::chrono::duration<long, std::ratio<1, 1> > &'
| | |           `-QualType 0xd1d8b1 'const std::chrono::duration<long, std::ratio<1, 1> >' const
| | |             `-RecordType 0xd1d8b0 'std::chrono::duration<long, std::ratio<1, 1> >'
| | |               `-ClassTemplateSpecialization 0xd1d7b0 'duration'
| | |-ClassTemplateSpecializationDecl 0xdb2328 <line:194:3, line:195:12> line:1400:12 struct remove_cv definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | | |-CXXRecordDecl 0xdb2530 prev 0xdb2328 <col:5, col:12> col:12 implicit struct remove_cv
| | | `-TypedefDecl 0xdb2de0 <line:1402:7, line:1403:67> col:67 referenced type 'typename remove_const<typename remove_volatile<duration<long, ratio<1, 1000000000> > >::type>::type':'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | |   `-ElaboratedType 0xdb2d90 'typename remove_const<typename remove_volatile<duration<long, ratio<1, 1000000000> > >::type>::type' sugar
| | |     `-TypedefType 0xdb2d70 'std::remove_const<std::chrono::duration<long, std::ratio<1, 1000000000> > >::type' sugar
| | |       |-Typedef 0xdb2cf8 'type'
| | |       `-SubstTemplateTypeParmType 0xdb2cc0 'std::chrono::duration<long, std::ratio<1, 1000000000> >' sugar
| | |         |-TemplateTypeParmType 0xb5d350 '_Tp' dependent depth 0 index 0
| | |         | `-TemplateTypeParm 0xb5d2f8 '_Tp'
| | |         `-RecordType 0xd1d100 'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | |           `-ClassTemplateSpecialization 0xd1d000 'duration'
| | |-ClassTemplateSpecializationDecl 0xdc82f8 <line:194:3, line:195:12> line:1400:12 struct remove_cv definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'const long double &'
| | | |-CXXRecordDecl 0xdc8510 prev 0xdc82f8 <col:5, col:12> col:12 implicit struct remove_cv
| | | `-TypedefDecl 0xdc8dc0 <line:1402:7, line:1403:67> col:67 referenced type 'typename remove_const<typename remove_volatile<const long double &>::type>::type':'const long double &'
| | |   `-ElaboratedType 0xdc8d70 'typename remove_const<typename remove_volatile<const long double &>::type>::type' sugar
| | |     `-TypedefType 0xdc8d50 'std::remove_const<const long double &>::type' sugar
| | |       |-Typedef 0xdc8cd8 'type'
| | |       `-SubstTemplateTypeParmType 0xdc8ca0 'const long double &' sugar
| | |         |-TemplateTypeParmType 0xb5d350 '_Tp' dependent depth 0 index 0
| | |         | `-TemplateTypeParm 0xb5d2f8 '_Tp'
| | |         `-LValueReferenceType 0xdc52d0 'const long double &'
| | |           `-QualType 0x7db4c1 'const long double' const
| | |             `-BuiltinType 0x7db4c0 'long double'
| | |-ClassTemplateSpecializationDecl 0xdce788 <line:194:3, line:195:12> line:1400:12 struct remove_cv definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'long double'
| | | |-CXXRecordDecl 0xdce990 prev 0xdce788 <col:5, col:12> col:12 implicit struct remove_cv
| | | `-TypedefDecl 0xdcf240 <line:1402:7, line:1403:67> col:67 referenced type 'typename remove_const<typename remove_volatile<long double>::type>::type':'long double'
| | |   `-ElaboratedType 0xdcf1f0 'typename remove_const<typename remove_volatile<long double>::type>::type' sugar
| | |     `-TypedefType 0xdcf1d0 'std::remove_const<long double>::type' sugar
| | |       |-Typedef 0xdcf158 'type'
| | |       `-SubstTemplateTypeParmType 0xdcf120 'long double' sugar
| | |         |-TemplateTypeParmType 0xb5d350 '_Tp' dependent depth 0 index 0
| | |         | `-TemplateTypeParm 0xb5d2f8 '_Tp'
| | |         `-BuiltinType 0x7db4c0 'long double'
| | |-ClassTemplateSpecializationDecl 0xe55d78 <line:194:3, line:195:12> line:1400:12 struct remove_cv definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'double'
| | | |-CXXRecordDecl 0xe55f80 prev 0xe55d78 <col:5, col:12> col:12 implicit struct remove_cv
| | | `-TypedefDecl 0xe56830 <line:1402:7, line:1403:67> col:67 referenced type 'typename remove_const<typename remove_volatile<double>::type>::type':'double'
| | |   `-ElaboratedType 0xe567e0 'typename remove_const<typename remove_volatile<double>::type>::type' sugar
| | |     `-TypedefType 0xe567c0 'std::remove_const<double>::type' sugar
| | |       |-Typedef 0xe56748 'type'
| | |       `-SubstTemplateTypeParmType 0xe56710 'double' sugar
| | |         |-TemplateTypeParmType 0xb5d350 '_Tp' dependent depth 0 index 0
| | |         | `-TemplateTypeParm 0xb5d2f8 '_Tp'
| | |         `-BuiltinType 0x7db4a0 'double'
| | |-ClassTemplateSpecializationDecl 0xe62d18 <line:194:3, line:195:12> line:1400:12 struct remove_cv definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'const double &'
| | | |-CXXRecordDecl 0xe62f20 prev 0xe62d18 <col:5, col:12> col:12 implicit struct remove_cv
| | | `-TypedefDecl 0xe637d0 <line:1402:7, line:1403:67> col:67 referenced type 'typename remove_const<typename remove_volatile<const double &>::type>::type':'const double &'
| | |   `-ElaboratedType 0xe63780 'typename remove_const<typename remove_volatile<const double &>::type>::type' sugar
| | |     `-TypedefType 0xe63760 'std::remove_const<const double &>::type' sugar
| | |       |-Typedef 0xe636e8 'type'
| | |       `-SubstTemplateTypeParmType 0xe636b0 'const double &' sugar
| | |         |-TemplateTypeParmType 0xb5d350 '_Tp' dependent depth 0 index 0
| | |         | `-TemplateTypeParm 0xb5d2f8 '_Tp'
| | |         `-LValueReferenceType 0xe53500 'const double &'
| | |           `-QualType 0x7db4a1 'const double' const
| | |             `-BuiltinType 0x7db4a0 'double'
| | `-ClassTemplateSpecializationDecl 0xe6e7a8 <line:194:3, line:195:12> line:1400:12 struct remove_cv definition
| |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-TemplateArgument type 'const std::chrono::duration<double, std::ratio<1, 1> > &'
| |   |-CXXRecordDecl 0xe6e9b0 prev 0xe6e7a8 <col:5, col:12> col:12 implicit struct remove_cv
| |   `-TypedefDecl 0xe6f260 <line:1402:7, line:1403:67> col:67 referenced type 'typename remove_const<typename remove_volatile<const duration<double, ratio<1, 1> > &>::type>::type':'const std::chrono::duration<double, std::ratio<1, 1> > &'
| |     `-ElaboratedType 0xe6f210 'typename remove_const<typename remove_volatile<const duration<double, ratio<1, 1> > &>::type>::type' sugar
| |       `-TypedefType 0xe6f1f0 'std::remove_const<const std::chrono::duration<double, std::ratio<1, 1> > &>::type' sugar
| |         |-Typedef 0xe6f178 'type'
| |         `-SubstTemplateTypeParmType 0xe6f140 'const std::chrono::duration<double, std::ratio<1, 1> > &' sugar
| |           |-TemplateTypeParmType 0xb5d350 '_Tp' dependent depth 0 index 0
| |           | `-TemplateTypeParm 0xb5d2f8 '_Tp'
| |           `-LValueReferenceType 0xe501a0 'const std::chrono::duration<double, std::ratio<1, 1> > &'
| |             `-QualType 0xe444a1 'const std::chrono::duration<double, std::ratio<1, 1> >' const
| |               `-RecordType 0xe444a0 'std::chrono::duration<double, std::ratio<1, 1> >'
| |                 `-ClassTemplateSpecialization 0xe443a0 'duration'
| |-ClassTemplateDecl 0xade5a8 <line:197:3, line:199:27> line:198:12 __is_void_helper
| | |-TemplateTypeParmDecl 0xade478 <line:197:12> col:20 typename depth 0 index 0
| | |-CXXRecordDecl 0xade518 <line:198:5, line:199:27> line:198:12 struct __is_void_helper definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | | `-CXXRecordDecl 0xade840 <col:5, col:12> col:12 implicit struct __is_void_helper
| | |-ClassTemplateSpecialization 0xade950 '__is_void_helper'
| | |-ClassTemplateSpecializationDecl 0xd384b0 <line:197:3, line:199:27> line:198:12 struct __is_void_helper definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'const long &'
| | | `-CXXRecordDecl 0xd386e0 prev 0xd384b0 <col:5, col:12> col:12 implicit struct __is_void_helper
| | |-ClassTemplateSpecializationDecl 0xd5e3c0 <line:197:3, line:199:27> line:198:12 struct __is_void_helper definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'const std::chrono::duration<long, std::ratio<1, 1000000000> > &'
| | | `-CXXRecordDecl 0xd5e5f0 prev 0xd5e3c0 <col:5, col:12> col:12 implicit struct __is_void_helper
| | |-ClassTemplateSpecializationDecl 0xd99d80 <line:197:3, line:199:27> line:198:12 struct __is_void_helper definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'const std::chrono::duration<long, std::ratio<1, 1> > &'
| | | `-CXXRecordDecl 0xd99fb0 prev 0xd99d80 <col:5, col:12> col:12 implicit struct __is_void_helper
| | |-ClassTemplateSpecializationDecl 0xdb2ec0 <line:197:3, line:199:27> line:198:12 struct __is_void_helper definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | | `-CXXRecordDecl 0xdb30f0 prev 0xdb2ec0 <col:5, col:12> col:12 implicit struct __is_void_helper
| | |-ClassTemplateSpecializationDecl 0xdc8ea0 <line:197:3, line:199:27> line:198:12 struct __is_void_helper definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'const long double &'
| | | `-CXXRecordDecl 0xdc90d0 prev 0xdc8ea0 <col:5, col:12> col:12 implicit struct __is_void_helper
| | |-ClassTemplateSpecializationDecl 0xe638b0 <line:197:3, line:199:27> line:198:12 struct __is_void_helper definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'const double &'
| | | `-CXXRecordDecl 0xe63ae0 prev 0xe638b0 <col:5, col:12> col:12 implicit struct __is_void_helper
| | `-ClassTemplateSpecializationDecl 0xe6f340 <line:197:3, line:199:27> line:198:12 struct __is_void_helper definition
| |   |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'std::false_type':'std::integral_constant<bool, false>'
| |   |-TemplateArgument type 'const std::chrono::duration<double, std::ratio<1, 1> > &'
| |   `-CXXRecordDecl 0xe6f570 prev 0xe6f340 <col:5, col:12> col:12 implicit struct __is_void_helper
| |-ClassTemplateSpecializationDecl 0xade950 <line:201:3, line:203:26> line:202:12 struct __is_void_helper definition
| | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'void'
| | `-CXXRecordDecl 0xadeba8 <col:5, col:12> col:12 implicit struct __is_void_helper
| |-ClassTemplateDecl 0xaded78 <line:206:3, line:209:7> line:207:12 is_void
| | |-TemplateTypeParmDecl 0xadec50 <line:206:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0xadece8 <line:207:5, line:209:7> line:207:12 struct is_void definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__is_void_helper<typename remove_cv<_Tp>::type>::type'
| | | `-CXXRecordDecl 0xadf2f0 <col:5, col:12> col:12 implicit struct is_void
| | |-ClassTemplateSpecializationDecl 0xbfd368 <line:206:3, line:209:7> line:207:12 struct is_void definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__is_void_helper<typename remove_cv<void>::type>::type':'std::integral_constant<bool, true>'
| | | |-TemplateArgument type 'void'
| | | `-CXXRecordDecl 0xbfe260 prev 0xbfd368 <col:5, col:12> col:12 implicit struct is_void
| | |-ClassTemplateSpecializationDecl 0xd36d28 <line:206:3, line:209:7> line:207:12 struct is_void definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__is_void_helper<typename remove_cv<const long &>::type>::type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'const long &'
| | | `-CXXRecordDecl 0xd38830 prev 0xd36d28 <col:5, col:12> col:12 implicit struct is_void
| | |-ClassTemplateSpecializationDecl 0xd5c6a8 <line:206:3, line:209:7> line:207:12 struct is_void definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__is_void_helper<typename remove_cv<const duration<long, ratio<1, 1000000000> > &>::type>::type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'const std::chrono::duration<long, std::ratio<1, 1000000000> > &'
| | | `-CXXRecordDecl 0xd5e720 prev 0xd5c6a8 <col:5, col:12> col:12 implicit struct is_void
| | |-ClassTemplateSpecializationDecl 0xd988b8 <line:206:3, line:209:7> line:207:12 struct is_void definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__is_void_helper<typename remove_cv<const duration<long, ratio<1, 1> > &>::type>::type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'const std::chrono::duration<long, std::ratio<1, 1> > &'
| | | `-CXXRecordDecl 0xd9a0e0 prev 0xd988b8 <col:5, col:12> col:12 implicit struct is_void
| | |-ClassTemplateSpecializationDecl 0xdb1278 <line:206:3, line:209:7> line:207:12 struct is_void definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__is_void_helper<typename remove_cv<duration<long, ratio<1, 1000000000> > >::type>::type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | | `-CXXRecordDecl 0xdb3220 prev 0xdb1278 <col:5, col:12> col:12 implicit struct is_void
| | |-ClassTemplateSpecializationDecl 0xdc7708 <line:206:3, line:209:7> line:207:12 struct is_void definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__is_void_helper<typename remove_cv<const long double &>::type>::type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'const long double &'
| | | `-CXXRecordDecl 0xdc9200 prev 0xdc7708 <col:5, col:12> col:12 implicit struct is_void
| | |-ClassTemplateSpecializationDecl 0xe62328 <line:206:3, line:209:7> line:207:12 struct is_void definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__is_void_helper<typename remove_cv<const double &>::type>::type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'const double &'
| | | `-CXXRecordDecl 0xe63c10 prev 0xe62328 <col:5, col:12> col:12 implicit struct is_void
| | `-ClassTemplateSpecializationDecl 0xe6de78 <line:206:3, line:209:7> line:207:12 struct is_void definition
| |   |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__is_void_helper<typename remove_cv<const duration<double, ratio<1, 1> > &>::type>::type':'std::integral_constant<bool, false>'
| |   |-TemplateArgument type 'const std::chrono::duration<double, std::ratio<1, 1> > &'
| |   `-CXXRecordDecl 0xe6f6a0 prev 0xe6de78 <col:5, col:12> col:12 implicit struct is_void
| |-ClassTemplateDecl 0xadf4c8 <line:211:3, line:213:27> line:212:12 __is_integral_helper
| | |-TemplateTypeParmDecl 0xadf398 <line:211:12> col:20 typename depth 0 index 0
| | |-CXXRecordDecl 0xadf438 <line:212:5, line:213:27> line:212:12 struct __is_integral_helper definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | | `-CXXRecordDecl 0xadf760 <col:5, col:12> col:12 implicit struct __is_integral_helper
| | |-ClassTemplateSpecialization 0xadf830 '__is_integral_helper'
| | |-ClassTemplateSpecialization 0xadfb58 '__is_integral_helper'
| | |-ClassTemplateSpecialization 0xadfe90 '__is_integral_helper'
| | |-ClassTemplateSpecialization 0xae01c0 '__is_integral_helper'
| | |-ClassTemplateSpecialization 0xae04e8 '__is_integral_helper'
| | |-ClassTemplateSpecialization 0xae0818 '__is_integral_helper'
| | |-ClassTemplateSpecialization 0xae1868 '__is_integral_helper'
| | |-ClassTemplateSpecialization 0xae1ba0 '__is_integral_helper'
| | |-ClassTemplateSpecialization 0xae1ed0 '__is_integral_helper'
| | |-ClassTemplateSpecialization 0xae2200 '__is_integral_helper'
| | |-ClassTemplateSpecialization 0xae2530 '__is_integral_helper'
| | |-ClassTemplateSpecialization 0xae2860 '__is_integral_helper'
| | |-ClassTemplateSpecialization 0xae2b90 '__is_integral_helper'
| | |-ClassTemplateSpecialization 0xae2ec0 '__is_integral_helper'
| | |-ClassTemplateSpecialization 0xae31f0 '__is_integral_helper'
| | |-ClassTemplateSpecialization 0xae3520 '__is_integral_helper'
| | `-ClassTemplateSpecialization 0xae4c50 '__is_integral_helper'
| |-ClassTemplateSpecializationDecl 0xadf830 <line:215:3, line:217:26> line:216:12 struct __is_integral_helper definition
| | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'bool'
| | `-CXXRecordDecl 0xadfa88 <col:5, col:12> col:12 implicit struct __is_integral_helper
| |-ClassTemplateSpecializationDecl 0xadfb58 <line:219:3, line:221:26> line:220:12 struct __is_integral_helper definition
| | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'char'
| | `-CXXRecordDecl 0xadfdb8 <col:5, col:12> col:12 implicit struct __is_integral_helper
| |-ClassTemplateSpecializationDecl 0xadfe90 <line:223:3, line:225:26> line:224:12 struct __is_integral_helper definition
| | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'signed char'
| | `-CXXRecordDecl 0xae00e8 <col:5, col:12> col:12 implicit struct __is_integral_helper
| |-ClassTemplateSpecializationDecl 0xae01c0 <line:227:3, line:229:26> line:228:12 struct __is_integral_helper definition
| | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'unsigned char'
| | `-CXXRecordDecl 0xae0418 <col:5, col:12> col:12 implicit struct __is_integral_helper
| |-ClassTemplateSpecializationDecl 0xae04e8 <line:232:3, line:234:26> line:233:12 struct __is_integral_helper definition
| | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'wchar_t'
| | `-CXXRecordDecl 0xae0748 <col:5, col:12> col:12 implicit struct __is_integral_helper
| |-ClassTemplateSpecializationDecl 0xae0818 <line:243:3, line:245:26> line:244:12 struct __is_integral_helper definition
| | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'char16_t'
| | `-CXXRecordDecl 0xae1798 <col:5, col:12> col:12 implicit struct __is_integral_helper
| |-ClassTemplateSpecializationDecl 0xae1868 <line:247:3, line:249:26> line:248:12 struct __is_integral_helper definition
| | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'char32_t'
| | `-CXXRecordDecl 0xae1ac8 <col:5, col:12> col:12 implicit struct __is_integral_helper
| |-ClassTemplateSpecializationDecl 0xae1ba0 <line:251:3, line:253:26> line:252:12 struct __is_integral_helper definition
| | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'short'
| | `-CXXRecordDecl 0xae1df8 <col:5, col:12> col:12 implicit struct __is_integral_helper
| |-ClassTemplateSpecializationDecl 0xae1ed0 <line:255:3, line:257:26> line:256:12 struct __is_integral_helper definition
| | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'unsigned short'
| | `-CXXRecordDecl 0xae2128 <col:5, col:12> col:12 implicit struct __is_integral_helper
| |-ClassTemplateSpecializationDecl 0xae2200 <line:259:3, line:261:26> line:260:12 struct __is_integral_helper definition
| | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'int'
| | `-CXXRecordDecl 0xae2458 <col:5, col:12> col:12 implicit struct __is_integral_helper
| |-ClassTemplateSpecializationDecl 0xae2530 <line:263:3, line:265:26> line:264:12 struct __is_integral_helper definition
| | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'unsigned int'
| | `-CXXRecordDecl 0xae2788 <col:5, col:12> col:12 implicit struct __is_integral_helper
| |-ClassTemplateSpecializationDecl 0xae2860 <line:267:3, line:269:26> line:268:12 struct __is_integral_helper definition
| | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'long'
| | `-CXXRecordDecl 0xae2ab8 <col:5, col:12> col:12 implicit struct __is_integral_helper
| |-ClassTemplateSpecializationDecl 0xae2b90 <line:271:3, line:273:26> line:272:12 struct __is_integral_helper definition
| | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'unsigned long'
| | `-CXXRecordDecl 0xae2de8 <col:5, col:12> col:12 implicit struct __is_integral_helper
| |-ClassTemplateSpecializationDecl 0xae2ec0 <line:275:3, line:277:26> line:276:12 struct __is_integral_helper definition
| | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'long long'
| | `-CXXRecordDecl 0xae3118 <col:5, col:12> col:12 implicit struct __is_integral_helper
| |-ClassTemplateSpecializationDecl 0xae31f0 <line:279:3, line:281:26> line:280:12 struct __is_integral_helper definition
| | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'unsigned long long'
| | `-CXXRecordDecl 0xae3448 <col:5, col:12> col:12 implicit struct __is_integral_helper
| |-ClassTemplateSpecializationDecl 0xae3520 <line:286:3, line:288:26> line:287:12 struct __is_integral_helper definition
| | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type '__int128'
| | `-CXXRecordDecl 0xae4b78 <col:5, col:12> col:12 implicit struct __is_integral_helper
| |-ClassTemplateSpecializationDecl 0xae4c50 <line:290:3, line:292:26> line:291:12 struct __is_integral_helper definition
| | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'unsigned __int128'
| | `-CXXRecordDecl 0xae4ea8 <col:5, col:12> col:12 implicit struct __is_integral_helper
| |-ClassTemplateDecl 0xae5078 <line:323:3, line:326:7> line:324:12 is_integral
| | |-TemplateTypeParmDecl 0xae4f50 <line:323:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0xae4fe8 <line:324:5, line:326:7> line:324:12 struct is_integral definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__is_integral_helper<typename remove_cv<_Tp>::type>::type'
| | | `-CXXRecordDecl 0xae55a0 <col:5, col:12> col:12 implicit struct is_integral
| | |-ClassTemplateSpecializationDecl 0xad6678 <line:323:3, line:326:7> line:324:12 struct is_integral definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__is_integral_helper<typename remove_cv<wchar_t>::type>::type':'std::integral_constant<bool, true>'
| | | |-TemplateArgument type 'wchar_t'
| | | `-CXXRecordDecl 0xad7590 prev 0xad6678 <col:5, col:12> col:12 implicit struct is_integral
| | |-ClassTemplateSpecializationDecl 0xb9a890 <line:323:3, line:326:7> line:324:12 struct is_integral definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__is_integral_helper<typename remove_cv<unsigned int>::type>::type':'std::integral_constant<bool, true>'
| | | |-TemplateArgument type 'unsigned int'
| | | `-CXXRecordDecl 0xb9b780 prev 0xb9a890 <col:5, col:12> col:12 implicit struct is_integral
| | |-ClassTemplateSpecializationDecl 0xb9e0b8 <line:323:3, line:326:7> line:324:12 struct is_integral definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__is_integral_helper<typename remove_cv<char16_t>::type>::type':'std::integral_constant<bool, true>'
| | | |-TemplateArgument type 'char16_t'
| | | `-CXXRecordDecl 0xb9f030 prev 0xb9e0b8 <col:5, col:12> col:12 implicit struct is_integral
| | |-ClassTemplateSpecializationDecl 0xba0238 <line:323:3, line:326:7> line:324:12 struct is_integral definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__is_integral_helper<typename remove_cv<unsigned short>::type>::type':'std::integral_constant<bool, true>'
| | | |-TemplateArgument type 'unsigned short'
| | | `-CXXRecordDecl 0xba1130 prev 0xba0238 <col:5, col:12> col:12 implicit struct is_integral
| | `-ClassTemplateSpecializationDecl 0xba3a88 <line:323:3, line:326:7> line:324:12 struct is_integral definition
| |   |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__is_integral_helper<typename remove_cv<char32_t>::type>::type':'std::integral_constant<bool, true>'
| |   |-TemplateArgument type 'char32_t'
| |   `-CXXRecordDecl 0xba4980 prev 0xba3a88 <col:5, col:12> col:12 implicit struct is_integral
| |-ClassTemplateDecl 0xae5778 <line:328:3, line:330:27> line:329:12 __is_floating_point_helper
| | |-TemplateTypeParmDecl 0xae5648 <line:328:12> col:20 typename depth 0 index 0
| | |-CXXRecordDecl 0xae56e8 <line:329:5, line:330:27> line:329:12 struct __is_floating_point_helper definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | | `-CXXRecordDecl 0xae5a10 <col:5, col:12> col:12 implicit struct __is_floating_point_helper
| | |-ClassTemplateSpecialization 0xae5ae8 '__is_floating_point_helper'
| | |-ClassTemplateSpecialization 0xae5e20 '__is_floating_point_helper'
| | |-ClassTemplateSpecialization 0xae6150 '__is_floating_point_helper'
| | |-ClassTemplateSpecialization 0xae6480 '__is_floating_point_helper'
| | `-ClassTemplateSpecializationDecl 0xd433f0 <line:328:3, line:330:27> line:329:12 struct __is_floating_point_helper definition
| |   |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'std::false_type':'std::integral_constant<bool, false>'
| |   |-TemplateArgument type 'long'
| |   `-CXXRecordDecl 0xd43620 prev 0xd433f0 <col:5, col:12> col:12 implicit struct __is_floating_point_helper
| |-ClassTemplateSpecializationDecl 0xae5ae8 <line:332:3, line:334:26> line:333:12 struct __is_floating_point_helper definition
| | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'float'
| | `-CXXRecordDecl 0xae5d48 <col:5, col:12> col:12 implicit struct __is_floating_point_helper
| |-ClassTemplateSpecializationDecl 0xae5e20 <line:336:3, line:338:26> line:337:12 struct __is_floating_point_helper definition
| | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'double'
| | `-CXXRecordDecl 0xae6078 <col:5, col:12> col:12 implicit struct __is_floating_point_helper
| |-ClassTemplateSpecializationDecl 0xae6150 <line:340:3, line:342:26> line:341:12 struct __is_floating_point_helper definition
| | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'long double'
| | `-CXXRecordDecl 0xae63a8 <col:5, col:12> col:12 implicit struct __is_floating_point_helper
| |-ClassTemplateSpecializationDecl 0xae6480 <line:345:3, line:347:26> line:346:12 struct __is_floating_point_helper definition
| | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type '__float128'
| | `-CXXRecordDecl 0xae66d8 <col:5, col:12> col:12 implicit struct __is_floating_point_helper
| |-ClassTemplateDecl 0xae68a8 <line:351:3, line:354:7> line:352:12 is_floating_point
| | |-TemplateTypeParmDecl 0xae6780 <line:351:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0xae6818 <line:352:5, line:354:7> line:352:12 struct is_floating_point definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__is_floating_point_helper<typename remove_cv<_Tp>::type>::type'
| | | `-CXXRecordDecl 0xae8fa0 <col:5, col:12> col:12 implicit struct is_floating_point
| | |-ClassTemplateSpecializationDecl 0xd3e2e8 <line:351:3, line:354:7> line:352:12 struct is_floating_point definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__is_floating_point_helper<typename remove_cv<long>::type>::type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'long'
| | | `-CXXRecordDecl 0xd43750 prev 0xd3e2e8 <col:5, col:12> col:12 implicit struct is_floating_point
| | |-ClassTemplateSpecializationDecl 0xdce568 <line:351:3, line:354:7> line:352:12 struct is_floating_point definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__is_floating_point_helper<typename remove_cv<long double>::type>::type':'std::integral_constant<bool, true>'
| | | |-TemplateArgument type 'long double'
| | | `-CXXRecordDecl 0xdcf440 prev 0xdce568 <col:5, col:12> col:12 implicit struct is_floating_point
| | `-ClassTemplateSpecializationDecl 0xe55b58 <line:351:3, line:354:7> line:352:12 struct is_floating_point definition
| |   |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__is_floating_point_helper<typename remove_cv<double>::type>::type':'std::integral_constant<bool, true>'
| |   |-TemplateArgument type 'double'
| |   `-CXXRecordDecl 0xe56a30 prev 0xe55b58 <col:5, col:12> col:12 implicit struct is_floating_point
| |-ClassTemplateDecl 0xae9178 <line:357:3, line:359:27> line:358:12 is_array
| | |-TemplateTypeParmDecl 0xae9048 <line:357:12> col:20 typename depth 0 index 0
| | |-CXXRecordDecl 0xae90e8 <line:358:5, line:359:27> line:358:12 struct is_array definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | | `-CXXRecordDecl 0xae9410 <col:5, col:12> col:12 implicit struct is_array
| | |-ClassTemplateSpecializationDecl 0xd37060 <line:357:3, line:359:27> line:358:12 struct is_array definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'long'
| | | `-CXXRecordDecl 0xd3a8c8 prev 0xd37060 <col:5, col:12> col:12 implicit struct is_array
| | |-ClassTemplateSpecializationDecl 0xdb1a70 <line:357:3, line:359:27> line:358:12 struct is_array definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | | `-CXXRecordDecl 0xdb49c8 prev 0xdb1a70 <col:5, col:12> col:12 implicit struct is_array
| | |-ClassTemplateSpecializationDecl 0xdc7a40 <line:357:3, line:359:27> line:358:12 struct is_array definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'long double'
| | | `-CXXRecordDecl 0xdca9a8 prev 0xdc7a40 <col:5, col:12> col:12 implicit struct is_array
| | `-ClassTemplateSpecializationDecl 0xe5c898 <line:357:3, line:359:27> line:358:12 struct is_array definition
| |   |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'std::false_type':'std::integral_constant<bool, false>'
| |   |-TemplateArgument type 'double'
| |   `-CXXRecordDecl 0xe5cb30 prev 0xe5c898 <col:5, col:12> col:12 implicit struct is_array
| |-ClassTemplatePartialSpecializationDecl 0xae9800 <line:361:3, line:363:26> line:362:12 struct is_array definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0 [_Size]'
| | |-TemplateTypeParmDecl 0xae94b8 <line:361:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0xae95f0 <col:26, col:38> col:38 referenced 'std::size_t':'unsigned long' depth 0 index 1 _Size
| | `-CXXRecordDecl 0xae9a78 <line:362:5, col:12> col:12 implicit struct is_array
| |-ClassTemplatePartialSpecializationDecl 0xae9d00 <line:365:3, line:367:26> line:366:12 struct is_array definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0 []'
| | |-TemplateTypeParmDecl 0xae9b20 <line:365:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xae9f78 <line:366:5, col:12> col:12 implicit struct is_array
| |-ClassTemplateDecl 0xaea148 <line:369:3, line:371:27> line:370:12 __is_pointer_helper
| | |-TemplateTypeParmDecl 0xaea020 <line:369:12> col:20 typename depth 0 index 0
| | `-CXXRecordDecl 0xaea0b8 <line:370:5, line:371:27> line:370:12 struct __is_pointer_helper definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'std::false_type':'std::integral_constant<bool, false>'
| |   `-CXXRecordDecl 0xaea3e0 <col:5, col:12> col:12 implicit struct __is_pointer_helper
| |-ClassTemplatePartialSpecializationDecl 0xaea630 <line:373:3, line:375:26> line:374:12 struct __is_pointer_helper definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0 *'
| | |-TemplateTypeParmDecl 0xaea488 <line:373:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xaea898 <line:374:5, col:12> col:12 implicit struct __is_pointer_helper
| |-ClassTemplateDecl 0xaeaa68 <line:378:3, line:381:7> line:379:12 is_pointer
| | |-TemplateTypeParmDecl 0xaea940 <line:378:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xaea9d8 <line:379:5, line:381:7> line:379:12 struct is_pointer definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__is_pointer_helper<typename remove_cv<_Tp>::type>::type'
| |   `-CXXRecordDecl 0xaebe50 <col:5, col:12> col:12 implicit struct is_pointer
| |-ClassTemplateDecl 0xaec028 <line:384:3, line:386:27> line:385:12 is_lvalue_reference
| | |-TemplateTypeParmDecl 0xaebef8 <line:384:12> col:20 typename depth 0 index 0
| | `-CXXRecordDecl 0xaebf98 <line:385:5, line:386:27> line:385:12 struct is_lvalue_reference definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'std::false_type':'std::integral_constant<bool, false>'
| |   `-CXXRecordDecl 0xaec2c0 <col:5, col:12> col:12 implicit struct is_lvalue_reference
| |-ClassTemplatePartialSpecializationDecl 0xaec540 <line:388:3, line:390:26> line:389:12 struct is_lvalue_reference definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0 &'
| | |-TemplateTypeParmDecl 0xaec368 <line:388:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xaec7a8 <line:389:5, col:12> col:12 implicit struct is_lvalue_reference
| |-ClassTemplateDecl 0xaec978 <line:393:3, line:395:27> line:394:12 is_rvalue_reference
| | |-TemplateTypeParmDecl 0xaec850 <line:393:12> col:20 typename depth 0 index 0
| | `-CXXRecordDecl 0xaec8e8 <line:394:5, line:395:27> line:394:12 struct is_rvalue_reference definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'std::false_type':'std::integral_constant<bool, false>'
| |   `-CXXRecordDecl 0xaecc10 <col:5, col:12> col:12 implicit struct is_rvalue_reference
| |-ClassTemplatePartialSpecializationDecl 0xaece90 <line:397:3, line:399:26> line:398:12 struct is_rvalue_reference definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0 &&'
| | |-TemplateTypeParmDecl 0xaeccb8 <line:397:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xaed0f8 <line:398:5, col:12> col:12 implicit struct is_rvalue_reference
| |-ClassTemplateDecl 0xaed2c8 <line:401:3, line:402:12> col:12 is_function
| | |-TemplateTypeParmDecl 0xaed1a0 <line:401:12> col:20 typename depth 0 index 0
| | |-CXXRecordDecl 0xaed238 <line:402:5, col:12> col:12 struct is_function
| | |-ClassTemplateSpecializationDecl 0xd36ed8 <line:453:3, line:455:27> line:454:12 struct is_function definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'long'
| | | `-CXXRecordDecl 0xd39860 prev 0xd36ed8 <col:5, col:12> col:12 implicit struct is_function
| | |-ClassTemplateSpecializationDecl 0xdb18f0 <line:453:3, line:455:27> line:454:12 struct is_function definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | | `-CXXRecordDecl 0xdb4250 prev 0xdb18f0 <col:5, col:12> col:12 implicit struct is_function
| | |-ClassTemplateSpecializationDecl 0xdc78b8 <line:453:3, line:455:27> line:454:12 struct is_function definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'long double'
| | | `-CXXRecordDecl 0xdca230 prev 0xdc78b8 <col:5, col:12> col:12 implicit struct is_function
| | `-ClassTemplateSpecializationDecl 0xe5cc80 <line:453:3, line:455:27> line:454:12 struct is_function definition
| |   |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'std::false_type':'std::integral_constant<bool, false>'
| |   |-TemplateArgument type 'double'
| |   `-CXXRecordDecl 0xe5d330 prev 0xe5cc80 <col:5, col:12> col:12 implicit struct is_function
| |-ClassTemplateDecl 0xaed5e8 <line:404:3, line:406:27> line:405:12 __is_member_object_pointer_helper
| | |-TemplateTypeParmDecl 0xaed4b8 <line:404:12> col:20 typename depth 0 index 0
| | `-CXXRecordDecl 0xaed558 <line:405:5, line:406:27> line:405:12 struct __is_member_object_pointer_helper definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'std::false_type':'std::integral_constant<bool, false>'
| |   `-CXXRecordDecl 0xaed880 <col:5, col:12> col:12 implicit struct __is_member_object_pointer_helper
| |-ClassTemplatePartialSpecializationDecl 0xaeeeb0 <line:408:3, line:410:47> line:409:12 struct __is_member_object_pointer_helper definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public '__not_<is_function<_Tp> >::type'
| | |-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
| | |-TemplateTypeParmDecl 0xaed928 <line:408:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0xaed9a8 <col:26, col:35> col:35 typename depth 0 index 1 _Cp
| | `-CXXRecordDecl 0xaef360 <line:409:5, col:12> col:12 implicit struct __is_member_object_pointer_helper
| |-ClassTemplateDecl 0xaef538 <line:413:3, line:417:7> line:414:12 is_member_object_pointer
| | |-TemplateTypeParmDecl 0xaef408 <line:413:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xaef4a8 <line:414:5, line:417:7> line:414:12 struct is_member_object_pointer definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__is_member_object_pointer_helper<typename remove_cv<_Tp>::type>::type'
| |   `-CXXRecordDecl 0xaefa60 <col:5, col:12> col:12 implicit struct is_member_object_pointer
| |-ClassTemplateDecl 0xaefc38 <line:419:3, line:421:27> line:420:12 __is_member_function_pointer_helper
| | |-TemplateTypeParmDecl 0xaefb08 <line:419:12> col:20 typename depth 0 index 0
| | `-CXXRecordDecl 0xaefba8 <line:420:5, line:421:27> line:420:12 struct __is_member_function_pointer_helper definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'std::false_type':'std::integral_constant<bool, false>'
| |   `-CXXRecordDecl 0xaefed0 <col:5, col:12> col:12 implicit struct __is_member_function_pointer_helper
| |-ClassTemplatePartialSpecializationDecl 0xaf01f0 <line:423:3, line:425:39> line:424:12 struct __is_member_function_pointer_helper definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'is_function<_Tp>::type'
| | |-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
| | |-TemplateTypeParmDecl 0xaeff78 <line:423:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0xaefff8 <col:26, col:35> col:35 typename depth 0 index 1 _Cp
| | `-CXXRecordDecl 0xaf05c0 <line:424:5, col:12> col:12 implicit struct __is_member_function_pointer_helper
| |-ClassTemplateDecl 0xaf0798 <line:428:3, line:432:7> line:429:12 is_member_function_pointer
| | |-TemplateTypeParmDecl 0xaf0668 <line:428:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xaf0708 <line:429:5, line:432:7> line:429:12 struct is_member_function_pointer definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__is_member_function_pointer_helper<typename remove_cv<_Tp>::type>::type'
| |   `-CXXRecordDecl 0xaf0cc0 <col:5, col:12> col:12 implicit struct is_member_function_pointer
| |-ClassTemplateDecl 0xaf1d68 <line:435:3, line:438:7> line:436:12 is_enum
| | |-TemplateTypeParmDecl 0xaf1c40 <line:435:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0xaf1cd8 <line:436:5, line:438:7> line:436:12 struct is_enum definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'integral_constant<bool, __is_enum(_Tp)>'
| | | `-CXXRecordDecl 0xaf2150 <col:5, col:12> col:12 implicit struct is_enum
| | |-ClassTemplateSpecializationDecl 0xad78f0 <line:435:3, line:438:7> line:436:12 struct is_enum definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'integral_constant<bool, __is_enum(wchar_t)>':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'wchar_t'
| | | `-CXXRecordDecl 0xad7c60 prev 0xad78f0 <col:5, col:12> col:12 implicit struct is_enum
| | |-ClassTemplateSpecializationDecl 0xb9b8d0 <line:435:3, line:438:7> line:436:12 struct is_enum definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'integral_constant<bool, __is_enum(unsigned int)>':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'unsigned int'
| | | `-CXXRecordDecl 0xb9bc40 prev 0xb9b8d0 <col:5, col:12> col:12 implicit struct is_enum
| | |-ClassTemplateSpecializationDecl 0xb9f180 <line:435:3, line:438:7> line:436:12 struct is_enum definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'integral_constant<bool, __is_enum(char16_t)>':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'char16_t'
| | | `-CXXRecordDecl 0xb9f4f0 prev 0xb9f180 <col:5, col:12> col:12 implicit struct is_enum
| | |-ClassTemplateSpecializationDecl 0xba1280 <line:435:3, line:438:7> line:436:12 struct is_enum definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'integral_constant<bool, __is_enum(unsigned short)>':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'unsigned short'
| | | `-CXXRecordDecl 0xba15f0 prev 0xba1280 <col:5, col:12> col:12 implicit struct is_enum
| | `-ClassTemplateSpecializationDecl 0xba4ad0 <line:435:3, line:438:7> line:436:12 struct is_enum definition
| |   |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'integral_constant<bool, __is_enum(char32_t)>':'std::integral_constant<bool, false>'
| |   |-TemplateArgument type 'char32_t'
| |   `-CXXRecordDecl 0xba4e40 prev 0xba4ad0 <col:5, col:12> col:12 implicit struct is_enum
| |-ClassTemplateDecl 0xaf2328 <line:441:3, line:444:7> line:442:12 is_union
| | |-TemplateTypeParmDecl 0xaf21f8 <line:441:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xaf2298 <line:442:5, line:444:7> line:442:12 struct is_union definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'integral_constant<bool, __is_union(_Tp)>'
| |   `-CXXRecordDecl 0xaf2710 <col:5, col:12> col:12 implicit struct is_union
| |-ClassTemplateDecl 0xaf28e8 <line:447:3, line:450:7> line:448:12 is_class
| | |-TemplateTypeParmDecl 0xaf27b8 <line:447:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xaf2858 <line:448:5, line:450:7> line:448:12 struct is_class definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'integral_constant<bool, __is_class(_Tp)>'
| |   `-CXXRecordDecl 0xaf2cd0 <col:5, col:12> col:12 implicit struct is_class
| |-ClassTemplateDecl 0xaf2ea8 prev 0xaed2c8 <line:453:3, line:455:27> line:454:12 is_function
| | |-TemplateTypeParmDecl 0xaf2d78 <line:453:12> col:20 typename depth 0 index 0
| | |-CXXRecordDecl 0xaf2e18 prev 0xaed238 <line:454:5, line:455:27> line:454:12 struct is_function definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | | `-CXXRecordDecl 0xaf2fa8 <col:5, col:12> col:12 implicit struct is_function
| | |-ClassTemplateSpecialization 0xd36ed8 'is_function'
| | |-ClassTemplateSpecialization 0xdb18f0 'is_function'
| | |-ClassTemplateSpecialization 0xdc78b8 'is_function'
| | `-ClassTemplateSpecialization 0xe5cc80 'is_function'
| |-ClassTemplatePartialSpecializationDecl 0xaf33c0 <line:457:3, line:459:26> line:458:12 struct is_function definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1...)'
| | |-TemplateTypeParmDecl 0xaf3050 <line:457:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| | |-TemplateTypeParmDecl 0xaf30c8 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| | `-CXXRecordDecl 0xaf3638 <line:458:5, col:12> col:12 implicit struct is_function
| |-ClassTemplatePartialSpecializationDecl 0xaf39f0 <line:461:3, line:463:26> line:462:12 struct is_function definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1...) &'
| | |-TemplateTypeParmDecl 0xaf36e0 <line:461:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| | |-TemplateTypeParmDecl 0xaf3758 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| | `-CXXRecordDecl 0xaf4ac0 <line:462:5, col:12> col:12 implicit struct is_function
| |-ClassTemplatePartialSpecializationDecl 0xaf4e80 <line:465:3, line:467:26> line:466:12 struct is_function definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1...) &&'
| | |-TemplateTypeParmDecl 0xaf4b68 <line:465:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| | |-TemplateTypeParmDecl 0xaf4be8 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| | `-CXXRecordDecl 0xaf50f8 <line:466:5, col:12> col:12 implicit struct is_function
| |-ClassTemplatePartialSpecializationDecl 0xaf54c0 <line:469:3, line:471:26> line:470:12 struct is_function definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1..., ...)'
| | |-TemplateTypeParmDecl 0xaf51a0 <line:469:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| | |-TemplateTypeParmDecl 0xaf5218 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| | `-CXXRecordDecl 0xaf5738 <line:470:5, col:12> col:12 implicit struct is_function
| |-ClassTemplatePartialSpecializationDecl 0xaf5b00 <line:473:3, line:475:26> line:474:12 struct is_function definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1..., ...) &'
| | |-TemplateTypeParmDecl 0xaf57e0 <line:473:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| | |-TemplateTypeParmDecl 0xaf5858 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| | `-CXXRecordDecl 0xaf5d78 <line:474:5, col:12> col:12 implicit struct is_function
| |-ClassTemplatePartialSpecializationDecl 0xaf6140 <line:477:3, line:479:26> line:478:12 struct is_function definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1..., ...) &&'
| | |-TemplateTypeParmDecl 0xaf5e20 <line:477:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| | |-TemplateTypeParmDecl 0xaf5e98 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| | `-CXXRecordDecl 0xaf63b8 <line:478:5, col:12> col:12 implicit struct is_function
| |-ClassTemplatePartialSpecializationDecl 0xaf6770 <line:481:3, line:483:26> line:482:12 struct is_function definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1...) const'
| | |-TemplateTypeParmDecl 0xaf6460 <line:481:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| | |-TemplateTypeParmDecl 0xaf64d8 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| | `-CXXRecordDecl 0xaf69e8 <line:482:5, col:12> col:12 implicit struct is_function
| |-ClassTemplatePartialSpecializationDecl 0xaf6ff0 <line:485:3, line:487:26> line:486:12 struct is_function definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1...) const &'
| | |-TemplateTypeParmDecl 0xaf6ce0 <line:485:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| | |-TemplateTypeParmDecl 0xaf6d58 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| | `-CXXRecordDecl 0xaf7268 <line:486:5, col:12> col:12 implicit struct is_function
| |-ClassTemplatePartialSpecializationDecl 0xaf7620 <line:489:3, line:491:26> line:490:12 struct is_function definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1...) const &&'
| | |-TemplateTypeParmDecl 0xaf7310 <line:489:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| | |-TemplateTypeParmDecl 0xaf7388 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| | `-CXXRecordDecl 0xaf7898 <line:490:5, col:12> col:12 implicit struct is_function
| |-ClassTemplatePartialSpecializationDecl 0xaf7c60 <line:493:3, line:495:26> line:494:12 struct is_function definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1..., ...) const'
| | |-TemplateTypeParmDecl 0xaf7940 <line:493:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| | |-TemplateTypeParmDecl 0xaf79b8 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| | `-CXXRecordDecl 0xaf7ed8 <line:494:5, col:12> col:12 implicit struct is_function
| |-ClassTemplatePartialSpecializationDecl 0xaf82a0 <line:497:3, line:499:26> line:498:12 struct is_function definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1..., ...) const &'
| | |-TemplateTypeParmDecl 0xaf7f80 <line:497:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| | |-TemplateTypeParmDecl 0xaf7ff8 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| | `-CXXRecordDecl 0xaf8518 <line:498:5, col:12> col:12 implicit struct is_function
| |-ClassTemplatePartialSpecializationDecl 0xaf88e0 <line:501:3, line:503:26> line:502:12 struct is_function definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1..., ...) const &&'
| | |-TemplateTypeParmDecl 0xaf85c0 <line:501:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| | |-TemplateTypeParmDecl 0xaf8638 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| | `-CXXRecordDecl 0xaf8b58 <line:502:5, col:12> col:12 implicit struct is_function
| |-ClassTemplatePartialSpecializationDecl 0xaf91a0 <line:505:3, line:507:26> line:506:12 struct is_function definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1...) volatile'
| | |-TemplateTypeParmDecl 0xaf8c00 <line:505:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| | |-TemplateTypeParmDecl 0xaf8c78 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| | `-CXXRecordDecl 0xaf9418 <line:506:5, col:12> col:12 implicit struct is_function
| |-ClassTemplatePartialSpecializationDecl 0xaf97d0 <line:509:3, line:511:26> line:510:12 struct is_function definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1...) volatile &'
| | |-TemplateTypeParmDecl 0xaf94c0 <line:509:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| | |-TemplateTypeParmDecl 0xaf9538 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| | `-CXXRecordDecl 0xaf9a48 <line:510:5, col:12> col:12 implicit struct is_function
| |-ClassTemplatePartialSpecializationDecl 0xaf9e00 <line:513:3, line:515:26> line:514:12 struct is_function definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1...) volatile &&'
| | |-TemplateTypeParmDecl 0xaf9af0 <line:513:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| | |-TemplateTypeParmDecl 0xaf9b68 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| | `-CXXRecordDecl 0xafa078 <line:514:5, col:12> col:12 implicit struct is_function
| |-ClassTemplatePartialSpecializationDecl 0xafa440 <line:517:3, line:519:26> line:518:12 struct is_function definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1..., ...) volatile'
| | |-TemplateTypeParmDecl 0xafa120 <line:517:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| | |-TemplateTypeParmDecl 0xafa198 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| | `-CXXRecordDecl 0xafa6b8 <line:518:5, col:12> col:12 implicit struct is_function
| |-ClassTemplatePartialSpecializationDecl 0xafaa80 <line:521:3, line:523:26> line:522:12 struct is_function definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1..., ...) volatile &'
| | |-TemplateTypeParmDecl 0xafa760 <line:521:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| | |-TemplateTypeParmDecl 0xafa7d8 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| | `-CXXRecordDecl 0xafacf8 <line:522:5, col:12> col:12 implicit struct is_function
| |-ClassTemplatePartialSpecializationDecl 0xafb2b0 <line:525:3, line:527:26> line:526:12 struct is_function definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1..., ...) volatile &&'
| | |-TemplateTypeParmDecl 0xafada0 <line:525:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| | |-TemplateTypeParmDecl 0xafae18 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| | `-CXXRecordDecl 0xafb528 <line:526:5, col:12> col:12 implicit struct is_function
| |-ClassTemplatePartialSpecializationDecl 0xafb8e0 <line:529:3, line:531:26> line:530:12 struct is_function definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1...) const volatile'
| | |-TemplateTypeParmDecl 0xafb5d0 <line:529:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| | |-TemplateTypeParmDecl 0xafb648 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| | `-CXXRecordDecl 0xafbb58 <line:530:5, col:12> col:12 implicit struct is_function
| |-ClassTemplatePartialSpecializationDecl 0xafbf10 <line:533:3, line:535:26> line:534:12 struct is_function definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1...) const volatile &'
| | |-TemplateTypeParmDecl 0xafbc00 <line:533:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| | |-TemplateTypeParmDecl 0xafbc78 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| | `-CXXRecordDecl 0xafc188 <line:534:5, col:12> col:12 implicit struct is_function
| |-ClassTemplatePartialSpecializationDecl 0xafc540 <line:537:3, line:539:26> line:538:12 struct is_function definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1...) const volatile &&'
| | |-TemplateTypeParmDecl 0xafc230 <line:537:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| | |-TemplateTypeParmDecl 0xafc2a8 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| | `-CXXRecordDecl 0xafc7b8 <line:538:5, col:12> col:12 implicit struct is_function
| |-ClassTemplatePartialSpecializationDecl 0xafcb80 <line:541:3, line:543:26> line:542:12 struct is_function definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1..., ...) const volatile'
| | |-TemplateTypeParmDecl 0xafc860 <line:541:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| | |-TemplateTypeParmDecl 0xafc8d8 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| | `-CXXRecordDecl 0xafcdf8 <line:542:5, col:12> col:12 implicit struct is_function
| |-ClassTemplatePartialSpecializationDecl 0xafe4f0 <line:545:3, line:547:26> line:546:12 struct is_function definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1..., ...) const volatile &'
| | |-TemplateTypeParmDecl 0xafcea0 <line:545:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| | |-TemplateTypeParmDecl 0xafcf18 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| | `-CXXRecordDecl 0xafe768 <line:546:5, col:12> col:12 implicit struct is_function
| |-ClassTemplatePartialSpecializationDecl 0xafeb30 <line:549:3, line:551:26> line:550:12 struct is_function definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1..., ...) const volatile &&'
| | |-TemplateTypeParmDecl 0xafe810 <line:549:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| | |-TemplateTypeParmDecl 0xafe888 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| | `-CXXRecordDecl 0xafeda8 <line:550:5, col:12> col:12 implicit struct is_function
| |-ClassTemplateDecl 0xafef78 <line:555:3, line:557:27> line:556:12 __is_null_pointer_helper
| | |-TemplateTypeParmDecl 0xafee50 <line:555:12> col:20 typename depth 0 index 0
| | |-CXXRecordDecl 0xafeee8 <line:556:5, line:557:27> line:556:12 struct __is_null_pointer_helper definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | | `-CXXRecordDecl 0xaff210 <col:5, col:12> col:12 implicit struct __is_null_pointer_helper
| | `-ClassTemplateSpecialization 0xaff348 '__is_null_pointer_helper'
| |-ClassTemplateSpecializationDecl 0xaff348 <line:559:3, line:561:26> line:560:12 struct __is_null_pointer_helper definition
| | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'nullptr_t'
| | `-CXXRecordDecl 0xaff5a8 <col:5, col:12> col:12 implicit struct __is_null_pointer_helper
| |-ClassTemplateDecl 0xaff778 <line:564:3, line:567:7> line:565:12 is_null_pointer
| | |-TemplateTypeParmDecl 0xaff650 <line:564:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xaff6e8 <line:565:5, line:567:7> line:565:12 struct is_null_pointer definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__is_null_pointer_helper<typename remove_cv<_Tp>::type>::type'
| |   `-CXXRecordDecl 0xaffca0 <col:5, col:12> col:12 implicit struct is_null_pointer
| |-ClassTemplateDecl 0xaffe78 <line:570:3, line:573:7> line:571:12 __is_nullptr_t
| | |-TemplateTypeParmDecl 0xaffd48 <line:570:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xaffde8 <line:571:5, line:573:7> line:571:12 struct __is_nullptr_t definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'is_null_pointer<_Tp>'
| |   `-CXXRecordDecl 0xb00180 <col:5, col:12> col:12 implicit struct __is_nullptr_t
| |-ClassTemplateDecl 0xb00358 <line:578:3, line:582:7> line:579:12 is_reference
| | |-TemplateTypeParmDecl 0xb00228 <line:578:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb002c8 <line:579:5, line:582:7> line:579:12 struct is_reference definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__or_<is_lvalue_reference<_Tp>, is_rvalue_reference<_Tp> >::type'
| |   `-CXXRecordDecl 0xb03330 <col:5, col:12> col:12 implicit struct is_reference
| |-ClassTemplateDecl 0xb03508 <line:585:3, line:588:7> line:586:12 is_arithmetic
| | |-TemplateTypeParmDecl 0xb033d8 <line:585:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb03478 <line:586:5, line:588:7> line:586:12 struct is_arithmetic definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__or_<is_integral<_Tp>, is_floating_point<_Tp> >::type'
| |   `-CXXRecordDecl 0xb03b10 <col:5, col:12> col:12 implicit struct is_arithmetic
| |-ClassTemplateDecl 0xb03ce8 <line:591:3, line:595:7> line:592:12 is_fundamental
| | |-TemplateTypeParmDecl 0xb03bb8 <line:591:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb03c58 <line:592:5, line:595:7> line:592:12 struct is_fundamental definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__or_<is_arithmetic<_Tp>, is_void<_Tp>, is_null_pointer<_Tp> >::type'
| |   `-CXXRecordDecl 0xb04400 <col:5, col:12> col:12 implicit struct is_fundamental
| |-ClassTemplateDecl 0xb045d8 <line:598:3, line:602:7> line:599:12 is_object
| | |-TemplateTypeParmDecl 0xb044a8 <line:598:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb04548 <line:599:5, line:602:7> line:599:12 struct is_object definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__not_<__or_<is_function<_Tp>, is_reference<_Tp>, is_void<_Tp> > >::type'
| |   `-CXXRecordDecl 0xb05ca0 <col:5, col:12> col:12 implicit struct is_object
| |-ClassTemplateDecl 0xb05e78 <line:604:3, line:605:12> col:12 is_member_pointer
| | |-TemplateTypeParmDecl 0xb05d48 <line:604:12> col:20 typename depth 0 index 0
| | `-CXXRecordDecl 0xb05de8 <line:605:5, col:12> col:12 struct is_member_pointer
| |-ClassTemplateDecl 0xb06198 <line:608:3, line:612:7> line:609:12 is_scalar
| | |-TemplateTypeParmDecl 0xb06068 <line:608:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb06108 <line:609:5, line:612:7> line:609:12 struct is_scalar definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__or_<is_arithmetic<_Tp>, is_enum<_Tp>, is_pointer<_Tp>, is_member_pointer<_Tp>, is_null_pointer<_Tp> >::type'
| |   `-CXXRecordDecl 0xb06ad0 <col:5, col:12> col:12 implicit struct is_scalar
| |-ClassTemplateDecl 0xb06ca8 <line:615:3, line:617:50> line:616:12 is_compound
| | |-TemplateTypeParmDecl 0xb06b78 <line:615:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb06c18 <line:616:5, line:617:50> line:616:12 struct is_compound definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__not_<is_fundamental<_Tp> >::type'
| |   `-CXXRecordDecl 0xb07170 <col:5, col:12> col:12 implicit struct is_compound
| |-ClassTemplateDecl 0xb07348 <line:619:3, line:621:27> line:620:12 __is_member_pointer_helper
| | |-TemplateTypeParmDecl 0xb07218 <line:619:12, col:21> col:21 typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb072b8 <line:620:5, line:621:27> line:620:12 struct __is_member_pointer_helper definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'std::false_type':'std::integral_constant<bool, false>'
| |   `-CXXRecordDecl 0xb075e0 <col:5, col:12> col:12 implicit struct __is_member_pointer_helper
| |-ClassTemplatePartialSpecializationDecl 0xb07900 <line:623:3, line:625:26> line:624:12 struct __is_member_pointer_helper definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
| | |-TemplateTypeParmDecl 0xb07688 <line:623:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0xb07708 <col:26, col:35> col:35 typename depth 0 index 1 _Cp
| | `-CXXRecordDecl 0xb09890 <line:624:5, col:12> col:12 implicit struct __is_member_pointer_helper
| |-ClassTemplateDecl 0xb09a68 prev 0xb05e78 <line:628:3, line:631:7> line:629:12 is_member_pointer
| | |-TemplateTypeParmDecl 0xb09938 <line:628:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb099d8 prev 0xb05de8 <line:629:5, line:631:7> line:629:12 struct is_member_pointer definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__is_member_pointer_helper<typename remove_cv<_Tp>::type>::type'
| |   `-CXXRecordDecl 0xb09e00 <col:5, col:12> col:12 implicit struct is_member_pointer
| |-ClassTemplateDecl 0xb09fd8 <line:635:3, line:638:7> line:636:12 __is_referenceable
| | |-TemplateTypeParmDecl 0xb09ea8 <line:635:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb09f48 <line:636:5, line:638:7> line:636:12 struct __is_referenceable definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__or_<is_object<_Tp>, is_reference<_Tp> >::type'
| |   `-CXXRecordDecl 0xb0a5e0 <col:5, col:12> col:12 implicit struct __is_referenceable
| |-ClassTemplatePartialSpecializationDecl 0xb0a970 <line:640:3, line:643:7> line:641:12 struct __is_referenceable definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1...)'
| | |-TemplateTypeParmDecl 0xb0a688 <line:640:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| | |-TemplateTypeParmDecl 0xb0a708 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _Args
| | `-CXXRecordDecl 0xb0abe8 <line:641:5, col:12> col:12 implicit struct __is_referenceable
| |-ClassTemplatePartialSpecializationDecl 0xb0af70 <line:645:3, line:648:7> line:646:12 struct __is_referenceable definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1..., ...)'
| | |-TemplateTypeParmDecl 0xb0ac90 <line:645:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| | |-TemplateTypeParmDecl 0xb0ad08 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _Args
| | `-CXXRecordDecl 0xb0b1e8 <line:646:5, col:12> col:12 implicit struct __is_referenceable
| |-ClassTemplateDecl 0xb0b3b8 <line:653:3, line:655:27> line:654:12 is_const
| | |-TemplateTypeParmDecl 0xb0b290 <line:653:12> col:20 typename depth 0 index 0
| | |-CXXRecordDecl 0xb0b328 <line:654:5, line:655:27> line:654:12 struct is_const definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | | `-CXXRecordDecl 0xb0b650 <col:5, col:12> col:12 implicit struct is_const
| | |-ClassTemplateSpecializationDecl 0xb7d808 <line:653:3, line:655:27> line:654:12 struct is_const definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'wchar_t'
| | | `-CXXRecordDecl 0xb7da78 prev 0xb7d808 <col:5, col:12> col:12 implicit struct is_const
| | |-ClassTemplateSpecializationDecl 0xb820e8 <line:653:3, line:655:27> line:654:12 struct is_const definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'char16_t'
| | | `-CXXRecordDecl 0xb82358 prev 0xb820e8 <col:5, col:12> col:12 implicit struct is_const
| | |-ClassTemplateSpecializationDecl 0xb84068 <line:653:3, line:655:27> line:654:12 struct is_const definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'char32_t'
| | | `-CXXRecordDecl 0xb842d8 prev 0xb84068 <col:5, col:12> col:12 implicit struct is_const
| | |-ClassTemplateSpecializationDecl 0xb9c458 <line:653:3, line:655:27> line:654:12 struct is_const definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'unsigned int'
| | | `-CXXRecordDecl 0xb9c6c8 prev 0xb9c458 <col:5, col:12> col:12 implicit struct is_const
| | `-ClassTemplateSpecializationDecl 0xba1e08 <line:653:3, line:655:27> line:654:12 struct is_const definition
| |   |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'std::false_type':'std::integral_constant<bool, false>'
| |   |-TemplateArgument type 'unsigned short'
| |   `-CXXRecordDecl 0xba2078 prev 0xba1e08 <col:5, col:12> col:12 implicit struct is_const
| |-ClassTemplatePartialSpecializationDecl 0xb0c320 <line:657:3, line:659:26> line:658:12 struct is_const definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'const type-parameter-0-0'
| | |-TemplateTypeParmDecl 0xb0b6f8 <line:657:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb0c588 <line:658:5, col:12> col:12 implicit struct is_const
| |-ClassTemplateDecl 0xb0c758 <line:662:3, line:664:27> line:663:12 is_volatile
| | |-TemplateTypeParmDecl 0xb0c630 <line:662:12> col:20 typename depth 0 index 0
| | |-CXXRecordDecl 0xb0c6c8 <line:663:5, line:664:27> line:663:12 struct is_volatile definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | | `-CXXRecordDecl 0xb0c9f0 <col:5, col:12> col:12 implicit struct is_volatile
| | |-ClassTemplateSpecializationDecl 0xb7de00 <line:662:3, line:664:27> line:663:12 struct is_volatile definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'wchar_t'
| | | `-CXXRecordDecl 0xb7e068 prev 0xb7de00 <col:5, col:12> col:12 implicit struct is_volatile
| | |-ClassTemplateSpecializationDecl 0xb824a8 <line:662:3, line:664:27> line:663:12 struct is_volatile definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'char16_t'
| | | `-CXXRecordDecl 0xb82718 prev 0xb824a8 <col:5, col:12> col:12 implicit struct is_volatile
| | |-ClassTemplateSpecializationDecl 0xb84428 <line:662:3, line:664:27> line:663:12 struct is_volatile definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'char32_t'
| | | `-CXXRecordDecl 0xb854c0 prev 0xb84428 <col:5, col:12> col:12 implicit struct is_volatile
| | |-ClassTemplateSpecializationDecl 0xb9c818 <line:662:3, line:664:27> line:663:12 struct is_volatile definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'unsigned int'
| | | `-CXXRecordDecl 0xb9ca88 prev 0xb9c818 <col:5, col:12> col:12 implicit struct is_volatile
| | `-ClassTemplateSpecializationDecl 0xba21c8 <line:662:3, line:664:27> line:663:12 struct is_volatile definition
| |   |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'std::false_type':'std::integral_constant<bool, false>'
| |   |-TemplateArgument type 'unsigned short'
| |   `-CXXRecordDecl 0xba2438 prev 0xba21c8 <col:5, col:12> col:12 implicit struct is_volatile
| |-ClassTemplatePartialSpecializationDecl 0xb0cc10 <line:666:3, line:668:26> line:667:12 struct is_volatile definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'volatile type-parameter-0-0'
| | |-TemplateTypeParmDecl 0xb0ca98 <line:666:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb0ce78 <line:667:5, col:12> col:12 implicit struct is_volatile
| |-ClassTemplateDecl 0xb0d048 <line:671:3, line:674:7> line:672:12 is_trivial
| | |-TemplateTypeParmDecl 0xb0cf20 <line:671:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb0cfb8 <line:672:5, line:674:7> line:672:12 struct is_trivial definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'integral_constant<bool, __is_trivial(_Tp)>'
| |   `-CXXRecordDecl 0xb0d430 <col:5, col:12> col:12 implicit struct is_trivial
| |-ClassTemplateDecl 0xb0d608 <line:677:3, line:680:7> line:678:12 is_trivially_copyable
| | |-TemplateTypeParmDecl 0xb0d4d8 <line:677:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb0d578 <line:678:5, line:680:7> line:678:12 struct is_trivially_copyable definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'integral_constant<bool, __is_trivially_copyable(_Tp)>'
| |   `-CXXRecordDecl 0xb0d9f0 <col:5, col:12> col:12 implicit struct is_trivially_copyable
| |-ClassTemplateDecl 0xb0dbc8 <line:683:3, line:686:7> line:684:12 is_standard_layout
| | |-TemplateTypeParmDecl 0xb0da98 <line:683:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb0db38 <line:684:5, line:686:7> line:684:12 struct is_standard_layout definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'integral_constant<bool, __is_standard_layout(_Tp)>'
| |   `-CXXRecordDecl 0xb0dfb0 <col:5, col:12> col:12 implicit struct is_standard_layout
| |-ClassTemplateDecl 0xb0e188 <line:690:3, line:693:7> line:691:12 is_pod
| | |-TemplateTypeParmDecl 0xb0e058 <line:690:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb0e0f8 <line:691:5, line:693:7> line:691:12 struct is_pod definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'integral_constant<bool, __is_pod(_Tp)>'
| |   `-CXXRecordDecl 0xb10480 <col:5, col:12> col:12 implicit struct is_pod
| |-ClassTemplateDecl 0xb10658 <line:696:3, line:699:7> line:697:12 is_literal_type
| | |-TemplateTypeParmDecl 0xb10528 <line:696:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb105c8 <line:697:5, line:699:7> line:697:12 struct is_literal_type definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'integral_constant<bool, __is_literal(_Tp)>'
| |   `-CXXRecordDecl 0xb10a40 <col:5, col:12> col:12 implicit struct is_literal_type
| |-ClassTemplateDecl 0xb10c18 <line:702:3, line:705:7> line:703:12 is_empty
| | |-TemplateTypeParmDecl 0xb10ae8 <line:702:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb10b88 <line:703:5, line:705:7> line:703:12 struct is_empty definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'integral_constant<bool, __is_empty(_Tp)>'
| |   `-CXXRecordDecl 0xb11000 <col:5, col:12> col:12 implicit struct is_empty
| |-ClassTemplateDecl 0xb111d8 <line:708:3, line:711:7> line:709:12 is_polymorphic
| | |-TemplateTypeParmDecl 0xb110a8 <line:708:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb11148 <line:709:5, line:711:7> line:709:12 struct is_polymorphic definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'integral_constant<bool, __is_polymorphic(_Tp)>'
| |   `-CXXRecordDecl 0xb115c0 <col:5, col:12> col:12 implicit struct is_polymorphic
| |-ClassTemplateDecl 0xb11798 <line:716:3, line:719:7> line:717:12 is_final
| | |-TemplateTypeParmDecl 0xb11668 <line:716:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb11708 <line:717:5, line:719:7> line:717:12 struct is_final definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'integral_constant<bool, __is_final(_Tp)>'
| |   `-CXXRecordDecl 0xb11b80 <col:5, col:12> col:12 implicit struct is_final
| |-ClassTemplateDecl 0xb11d58 <line:723:3, line:726:7> line:724:12 is_abstract
| | |-TemplateTypeParmDecl 0xb11c28 <line:723:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb11cc8 <line:724:5, line:726:7> line:724:12 struct is_abstract definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'integral_constant<bool, __is_abstract(_Tp)>'
| |   `-CXXRecordDecl 0xb12140 <col:5, col:12> col:12 implicit struct is_abstract
| |-ClassTemplateDecl 0xb14bd8 <line:728:3, line:731:27> line:730:12 __is_signed_helper
| | |-TemplateTypeParmDecl 0xb14920 <line:728:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0xb14aa8 <line:729:5, col:32> col:10 'bool' depth 0 index 1
| | | `-TemplateArgument expr
| | |   `-ImplicitCastExpr 0xb14b08 <col:12, col:32> 'bool' <Dependent>
| | |     `-DependentScopeDeclRefExpr 0xb14a60 <col:12, col:32> '<dependent type>' lvalue
| | `-CXXRecordDecl 0xb14b48 <line:730:5, line:731:27> line:730:12 struct __is_signed_helper definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'std::false_type':'std::integral_constant<bool, false>'
| |   `-CXXRecordDecl 0xb14ed0 <col:5, col:12> col:12 implicit struct __is_signed_helper
| |-ClassTemplatePartialSpecializationDecl 0xb15188 <line:733:3, line:736:7> line:734:12 struct __is_signed_helper definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'integral_constant<bool, _Tp(-1) < _Tp(0)>'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 1
| | |-TemplateTypeParmDecl 0xb14f78 <line:733:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb15690 <line:734:5, col:12> col:12 implicit struct __is_signed_helper
| |-ClassTemplateDecl 0xb15868 <line:739:3, line:742:7> line:740:12 is_signed
| | |-TemplateTypeParmDecl 0xb15738 <line:739:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb157d8 <line:740:5, line:742:7> line:740:12 struct is_signed definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__is_signed_helper<_Tp>::type'
| |   `-CXXRecordDecl 0xb15df0 <col:5, col:12> col:12 implicit struct is_signed
| |-ClassTemplateDecl 0xb15fc8 <line:745:3, line:748:7> line:746:12 is_unsigned
| | |-TemplateTypeParmDecl 0xb15e98 <line:745:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb15f38 <line:746:5, line:748:7> line:746:12 struct is_unsigned definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__and_<is_arithmetic<_Tp>, __not_<is_signed<_Tp> > >'
| |   `-CXXRecordDecl 0xb165d0 <col:5, col:12> col:12 implicit struct is_unsigned
| |-FunctionTemplateDecl 0xb177b0 <line:758:3, line:760:18> col:5 __declval
| | |-TemplateTypeParmDecl 0xb16678 <line:758:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0xb16738 <col:26, col:44> col:35 referenced typename depth 0 index 1 _Up
| | | `-TemplateArgument type '_Tp &&'
| | |-FunctionDecl 0xb17710 <line:759:5, line:760:18> col:5 __declval '_Up (int)'
| | | `-ParmVarDecl 0xb167f8 <col:15> col:18 'int'
| | |-FunctionDecl 0xd3c818 <line:759:5, line:760:18> col:5 referenced __declval 'const long &(int)'
| | | |-TemplateArgument type 'const long &'
| | | |-TemplateArgument type 'const long &'
| | | `-ParmVarDecl 0xd3c728 <col:15> col:18 'int'
| | |-FunctionDecl 0xd56028 <line:759:5, line:760:18> col:5 referenced __declval 'long &&(int)'
| | | |-TemplateArgument type 'long'
| | | |-TemplateArgument type 'long &&'
| | | `-ParmVarDecl 0xd55f38 <col:15> col:18 'int'
| | |-FunctionDecl 0xd60a08 <line:759:5, line:760:18> col:5 referenced __declval 'const std::chrono::duration<long, std::ratio<1, 1000000000> > &(int)'
| | | |-TemplateArgument type 'const std::chrono::duration<long, std::ratio<1, 1000000000> > &'
| | | |-TemplateArgument type 'const std::chrono::duration<long, std::ratio<1, 1000000000> > &'
| | | `-ParmVarDecl 0xd60918 <col:15> col:18 'int'
| | |-FunctionDecl 0xd9c3d8 <line:759:5, line:760:18> col:5 referenced __declval 'const std::chrono::duration<long, std::ratio<1, 1> > &(int)'
| | | |-TemplateArgument type 'const std::chrono::duration<long, std::ratio<1, 1> > &'
| | | |-TemplateArgument type 'const std::chrono::duration<long, std::ratio<1, 1> > &'
| | | `-ParmVarDecl 0xd9c2e8 <col:15> col:18 'int'
| | |-FunctionDecl 0xdb67a8 <line:759:5, line:760:18> col:5 referenced __declval 'std::chrono::duration<long, std::ratio<1, 1000000000> > &&(int)'
| | | |-TemplateArgument type 'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | | |-TemplateArgument type 'std::chrono::duration<long, std::ratio<1, 1000000000> > &&'
| | | `-ParmVarDecl 0xdb66b8 <col:15> col:18 'int'
| | |-FunctionDecl 0xdccb48 <line:759:5, line:760:18> col:5 referenced __declval 'const long double &(int)'
| | | |-TemplateArgument type 'const long double &'
| | | |-TemplateArgument type 'const long double &'
| | | `-ParmVarDecl 0xdcca58 <col:15> col:18 'int'
| | |-FunctionDecl 0xe5b2b8 <line:759:5, line:760:18> col:5 referenced __declval 'double &&(int)'
| | | |-TemplateArgument type 'double'
| | | |-TemplateArgument type 'double &&'
| | | `-ParmVarDecl 0xe5b1c8 <col:15> col:18 'int'
| | |-FunctionDecl 0xe669b8 <line:759:5, line:760:18> col:5 referenced __declval 'const double &(int)'
| | | |-TemplateArgument type 'const double &'
| | | |-TemplateArgument type 'const double &'
| | | `-ParmVarDecl 0xe668c8 <col:15> col:18 'int'
| | `-FunctionDecl 0xe72688 <line:759:5, line:760:18> col:5 referenced __declval 'const std::chrono::duration<double, std::ratio<1, 1> > &(int)'
| |   |-TemplateArgument type 'const std::chrono::duration<double, std::ratio<1, 1> > &'
| |   |-TemplateArgument type 'const std::chrono::duration<double, std::ratio<1, 1> > &'
| |   `-ParmVarDecl 0xe72598 <col:15> col:18 'int'
| |-FunctionTemplateDecl 0xb17a58 <line:762:3, line:764:19> col:5 __declval
| | |-TemplateTypeParmDecl 0xb17810 <line:762:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-FunctionDecl 0xb179b8 <line:763:5, line:764:19> col:5 __declval '_Tp (long)'
| | | `-ParmVarDecl 0xb178c0 <col:15> col:19 'long'
| | |-FunctionDecl 0xd3c418 <line:763:5, line:764:19> col:5 __declval 'const long &(long)'
| | | |-TemplateArgument type 'const long &'
| | | `-ParmVarDecl 0xd3c328 <col:15> col:19 'long'
| | |-FunctionDecl 0xd55c78 <line:763:5, line:764:19> col:5 __declval 'long (long)'
| | | |-TemplateArgument type 'long'
| | | `-ParmVarDecl 0xd55bb8 <col:15> col:19 'long'
| | |-FunctionDecl 0xd60688 <line:763:5, line:764:19> col:5 __declval 'const std::chrono::duration<long, std::ratio<1, 1000000000> > &(long)'
| | | |-TemplateArgument type 'const std::chrono::duration<long, std::ratio<1, 1000000000> > &'
| | | `-ParmVarDecl 0xd60598 <col:15> col:19 'long'
| | |-FunctionDecl 0xd9c058 <line:763:5, line:764:19> col:5 __declval 'const std::chrono::duration<long, std::ratio<1, 1> > &(long)'
| | | |-TemplateArgument type 'const std::chrono::duration<long, std::ratio<1, 1> > &'
| | | `-ParmVarDecl 0xd9bf68 <col:15> col:19 'long'
| | |-FunctionDecl 0xdb63f8 <line:763:5, line:764:19> col:5 __declval 'std::chrono::duration<long, std::ratio<1, 1000000000> > (long)'
| | | |-TemplateArgument type 'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | | `-ParmVarDecl 0xdb6308 <col:15> col:19 'long'
| | |-FunctionDecl 0xdcc388 <line:763:5, line:764:19> col:5 __declval 'const long double &(long)'
| | | |-TemplateArgument type 'const long double &'
| | | `-ParmVarDecl 0xdcc298 <col:15> col:19 'long'
| | |-FunctionDecl 0xe5af08 <line:763:5, line:764:19> col:5 __declval 'double (long)'
| | | |-TemplateArgument type 'double'
| | | `-ParmVarDecl 0xe5ae18 <col:15> col:19 'long'
| | |-FunctionDecl 0xe66638 <line:763:5, line:764:19> col:5 __declval 'const double &(long)'
| | | |-TemplateArgument type 'const double &'
| | | `-ParmVarDecl 0xe66548 <col:15> col:19 'long'
| | `-FunctionDecl 0xe72308 <line:763:5, line:764:19> col:5 __declval 'const std::chrono::duration<double, std::ratio<1, 1> > &(long)'
| |   |-TemplateArgument type 'const std::chrono::duration<double, std::ratio<1, 1> > &'
| |   `-ParmVarDecl 0xe72218 <col:15> col:19 'long'
| |-FunctionTemplateDecl 0xb17e30 <line:766:3, line:767:10> col:10 declval
| | |-TemplateTypeParmDecl 0xb17ab8 <line:766:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-FunctionDecl 0xb17d90 <line:767:5, col:10> col:10 declval 'auto () noexcept -> decltype(__declval<_Tp>(0))'
| | |-FunctionDecl 0xd3cef0 <col:5, col:10> col:10 referenced declval 'auto () noexcept -> decltype(__declval<const long &>(0))'
| | | `-TemplateArgument type 'const long &'
| | |-FunctionDecl 0xd56680 <col:5, col:10> col:10 referenced declval 'auto () noexcept -> decltype(__declval<long>(0))'
| | | `-TemplateArgument type 'long'
| | |-FunctionDecl 0xd61060 <col:5, col:10> col:10 referenced declval 'auto () noexcept -> decltype(__declval<const std::chrono::duration<long, std::ratio<1, 1000000000> > &>(0))'
| | | `-TemplateArgument type 'const std::chrono::duration<long, std::ratio<1, 1000000000> > &'
| | |-FunctionDecl 0xd9ca30 <col:5, col:10> col:10 referenced declval 'auto () noexcept -> decltype(__declval<const std::chrono::duration<long, std::ratio<1, 1> > &>(0))'
| | | `-TemplateArgument type 'const std::chrono::duration<long, std::ratio<1, 1> > &'
| | |-FunctionDecl 0xdb6e00 <col:5, col:10> col:10 referenced declval 'auto () noexcept -> decltype(__declval<std::chrono::duration<long, std::ratio<1, 1000000000> > >(0))'
| | | `-TemplateArgument type 'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | |-FunctionDecl 0xdcd1a0 <col:5, col:10> col:10 referenced declval 'auto () noexcept -> decltype(__declval<const long double &>(0))'
| | | `-TemplateArgument type 'const long double &'
| | |-FunctionDecl 0xe5b910 <col:5, col:10> col:10 referenced declval 'auto () noexcept -> decltype(__declval<double>(0))'
| | | `-TemplateArgument type 'double'
| | |-FunctionDecl 0xe67f90 <col:5, col:10> col:10 referenced declval 'auto () noexcept -> decltype(__declval<const double &>(0))'
| | | `-TemplateArgument type 'const double &'
| | `-FunctionDecl 0xe72ce0 <col:5, col:10> col:10 referenced declval 'auto () noexcept -> decltype(__declval<const std::chrono::duration<double, std::ratio<1, 1> > &>(0))'
| |   `-TemplateArgument type 'const std::chrono::duration<double, std::ratio<1, 1> > &'
| |-ClassTemplateDecl 0xb18090 <line:769:3, line:770:12> col:12 extent
| | |-TemplateTypeParmDecl 0xb17e88 <line:769:12> col:20 typename depth 0 index 0
| | |-NonTypeTemplateParmDecl 0xb17f40 <col:22, col:33> col:31 'unsigned int' depth 0 index 1
| | | `-TemplateArgument expr
| | |   `-ConstantExpr 0xb17fb8 <col:33> 'unsigned int' Int: 0
| | |     `-ImplicitCastExpr 0xb17fa0 <col:33> 'unsigned int' <IntegralCast>
| | |       `-IntegerLiteral 0xb17f08 <col:33> 'int' 0
| | `-CXXRecordDecl 0xb18000 <line:770:5, col:12> col:12 struct extent
| |-ClassTemplateDecl 0xb18408 <line:772:3, line:773:12> col:12 remove_all_extents
| | |-TemplateTypeParmDecl 0xb182d8 <line:772:12> col:20 typename depth 0 index 0
| | `-CXXRecordDecl 0xb18378 <line:773:5, col:12> col:12 struct remove_all_extents
| |-ClassTemplateDecl 0xb18728 <line:775:3, line:778:7> line:776:12 __is_array_known_bounds
| | |-TemplateTypeParmDecl 0xb185f8 <line:775:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb18698 <line:776:5, line:778:7> line:776:12 struct __is_array_known_bounds definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'integral_constant<bool, (extent<_Tp>::value > 0)>'
| |   `-CXXRecordDecl 0xb18d20 <col:5, col:12> col:12 implicit struct __is_array_known_bounds
| |-ClassTemplateDecl 0xb18ef8 <line:780:3, line:783:7> line:781:12 __is_array_unknown_bounds
| | |-TemplateTypeParmDecl 0xb18dc8 <line:780:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb18e68 <line:781:5, line:783:7> line:781:12 struct __is_array_unknown_bounds definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__and_<is_array<_Tp>, __not_<extent<_Tp> > >'
| |   `-CXXRecordDecl 0xb19540 <col:5, col:12> col:12 implicit struct __is_array_unknown_bounds
| |-CXXRecordDecl 0xb195e8 <line:790:3, line:797:3> line:790:10 referenced struct __do_is_destructible_impl definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-CXXRecordDecl 0xb1a860 <col:3, col:10> col:10 implicit struct __do_is_destructible_impl
| | |-FunctionTemplateDecl 0xb1adc8 <line:792:5, line:793:34> col:24 __test
| | | |-TemplateTypeParmDecl 0xb1a8f0 <line:792:14, col:23> col:23 referenced typename depth 0 index 0 _Tp
| | | |-TemplateTypeParmDecl 0xb1ab48 <col:28, col:39> col:37 typename depth 0 index 1
| | | | `-TemplateArgument type 'decltype(declval<_Tp &>().~_Tp())'
| | | `-CXXMethodDecl 0xb1ad28 <line:793:7, col:34> col:24 __test 'std::true_type (int)' static
| | |   `-ParmVarDecl 0xb1ac08 <col:31> col:34 'int'
| | `-FunctionTemplateDecl 0xb1aff0 <line:795:5, line:796:35> col:25 __test
| |   |-TemplateTypeParmDecl 0xb1ae28 <line:795:14> col:22 typename depth 0 index 0
| |   `-CXXMethodDecl 0xb1af50 <line:796:7, col:35> col:25 __test 'std::false_type (...)' static
| |-ClassTemplateDecl 0xb1b188 <line:799:3, line:804:5> line:800:12 __is_destructible_impl
| | |-TemplateTypeParmDecl 0xb1b060 <line:799:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb1b0f8 <line:800:5, line:804:5> line:800:12 struct __is_destructible_impl definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'std::__do_is_destructible_impl'
| |   |-CXXRecordDecl 0xb1b420 <col:5, col:12> col:12 implicit struct __is_destructible_impl
| |   `-TypedefDecl 0xb1b628 <line:803:7, col:40> col:40 type 'decltype(__test<_Tp>(0))'
| |     `-DecltypeType 0xb1b5f0 'decltype(__test<_Tp>(0))' dependent
| |       `-CallExpr 0xb1b588 <col:24, col:37> '<dependent type>'
| |         |-UnresolvedLookupExpr 0xb1b4d8 <col:24, col:34> '<dependent type>' lvalue (no ADL) = '__test' 0xb1adc8 0xb1aff0
| |         `-IntegerLiteral 0xb1b568 <col:36> 'int' 0
| |-ClassTemplateDecl 0xb1c030 <line:806:3, line:811:12> col:12 __is_destructible_safe
| | |-TemplateTypeParmDecl 0xb1b698 <line:806:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0xb1bb58 <line:807:12, line:809:44> line:807:17 'bool' depth 0 index 1
| | | `-TemplateArgument expr
| | |   `-ImplicitCastExpr 0xb1bbb8 <col:19, line:809:44> 'bool' <Dependent>
| | |     `-DependentScopeDeclRefExpr 0xb1bb10 <line:807:19, line:809:44> '<dependent type>' lvalue
| | |-NonTypeTemplateParmDecl 0xb1bef8 <line:810:12, col:61> col:17 'bool' depth 0 index 2
| | | `-TemplateArgument expr
| | |   `-ImplicitCastExpr 0xb1bf58 <col:19, col:61> 'bool' <Dependent>
| | |     `-DependentScopeDeclRefExpr 0xb1beb0 <col:19, col:61> '<dependent type>' lvalue
| | `-CXXRecordDecl 0xb1bfa0 <line:811:5, col:12> col:12 struct __is_destructible_safe
| |-ClassTemplatePartialSpecializationDecl 0xb1c550 <line:813:3, line:817:7> line:814:12 struct __is_destructible_safe definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public '__is_destructible_impl<typename remove_all_extents<_Tp>::type>::type'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 0
| | |-TemplateArgument integral 0
| | |-TemplateTypeParmDecl 0xb1c2b8 <line:813:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb1d500 <line:814:5, col:12> col:12 implicit struct __is_destructible_safe
| |-ClassTemplatePartialSpecializationDecl 0xb1d840 <line:819:3, line:821:27> line:820:12 struct __is_destructible_safe definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 1
| | |-TemplateArgument integral 0
| | |-TemplateTypeParmDecl 0xb1d5a8 <line:819:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb1db98 <line:820:5, col:12> col:12 implicit struct __is_destructible_safe
| |-ClassTemplatePartialSpecializationDecl 0xb1ded0 <line:823:3, line:825:26> line:824:12 struct __is_destructible_safe definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 0
| | |-TemplateArgument integral 1
| | |-TemplateTypeParmDecl 0xb1dc40 <line:823:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb1e228 <line:824:5, col:12> col:12 implicit struct __is_destructible_safe
| |-ClassTemplateDecl 0xb1e3f8 <line:828:3, line:831:7> line:829:12 is_destructible
| | |-TemplateTypeParmDecl 0xb1e2d0 <line:828:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb1e368 <line:829:5, line:831:7> line:829:12 struct is_destructible definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__is_destructible_safe<_Tp>::type'
| |   `-CXXRecordDecl 0xb1ee90 <col:5, col:12> col:12 implicit struct is_destructible
| |-CXXRecordDecl 0xb1ef38 <line:837:3, line:845:3> line:837:10 referenced struct __do_is_nt_destructible_impl definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-CXXRecordDecl 0xb1f058 <col:3, col:10> col:10 implicit struct __do_is_nt_destructible_impl
| | |-FunctionTemplateDecl 0xb1fd38 <line:839:5, line:841:17> col:7 __test
| | | |-TemplateTypeParmDecl 0xb1f0e8 <line:839:14, col:23> col:23 referenced typename depth 0 index 0 _Tp
| | | `-CXXMethodDecl 0xb1fc98 <line:840:7, line:841:17> col:7 __test '__bool_constant<noexcept(declval<_Tp &>().~_Tp())> (int)' static
| | |   `-ParmVarDecl 0xb1fb50 <col:14> col:17 'int'
| | `-FunctionTemplateDecl 0xb1fef8 <line:843:5, line:844:35> col:25 __test
| |   |-TemplateTypeParmDecl 0xb1fd98 <line:843:14> col:22 typename depth 0 index 0
| |   `-CXXMethodDecl 0xb1fe58 <line:844:7, col:35> col:25 __test 'std::false_type (...)' static
| |-ClassTemplateDecl 0xb20098 <line:847:3, line:852:5> line:848:12 __is_nt_destructible_impl
| | |-TemplateTypeParmDecl 0xb1ff68 <line:847:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb20008 <line:848:5, line:852:5> line:848:12 struct __is_nt_destructible_impl definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'std::__do_is_nt_destructible_impl'
| |   |-CXXRecordDecl 0xb20330 <col:5, col:12> col:12 implicit struct __is_nt_destructible_impl
| |   `-TypedefDecl 0xb204f8 <line:851:7, col:40> col:40 type 'decltype(__test<_Tp>(0))'
| |     `-DecltypeType 0xb204c0 'decltype(__test<_Tp>(0))' dependent
| |       `-CallExpr 0xb20498 <col:24, col:37> '<dependent type>'
| |         |-UnresolvedLookupExpr 0xb203e8 <col:24, col:34> '<dependent type>' lvalue (no ADL) = '__test' 0xb1fd38 0xb1fef8
| |         `-IntegerLiteral 0xb20478 <col:36> 'int' 0
| |-ClassTemplateDecl 0xb20e80 <line:854:3, line:859:12> col:12 __is_nt_destructible_safe
| | |-TemplateTypeParmDecl 0xb20568 <line:854:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0xb209e8 <line:855:12, line:857:44> line:855:17 'bool' depth 0 index 1
| | | `-TemplateArgument expr
| | |   `-ImplicitCastExpr 0xb20a48 <col:19, line:857:44> 'bool' <Dependent>
| | |     `-DependentScopeDeclRefExpr 0xb209a0 <line:855:19, line:857:44> '<dependent type>' lvalue
| | |-NonTypeTemplateParmDecl 0xb20d48 <line:858:12, col:61> col:17 'bool' depth 0 index 2
| | | `-TemplateArgument expr
| | |   `-ImplicitCastExpr 0xb20da8 <col:19, col:61> 'bool' <Dependent>
| | |     `-DependentScopeDeclRefExpr 0xb20d00 <col:19, col:61> '<dependent type>' lvalue
| | `-CXXRecordDecl 0xb20df0 <line:859:5, col:12> col:12 struct __is_nt_destructible_safe
| |-ClassTemplatePartialSpecializationDecl 0xb213a0 <line:861:3, line:865:7> line:862:12 struct __is_nt_destructible_safe definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public '__is_nt_destructible_impl<typename remove_all_extents<_Tp>::type>::type'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 0
| | |-TemplateArgument integral 0
| | |-TemplateTypeParmDecl 0xb21108 <line:861:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb222a0 <line:862:5, col:12> col:12 implicit struct __is_nt_destructible_safe
| |-ClassTemplatePartialSpecializationDecl 0xb225e0 <line:867:3, line:869:27> line:868:12 struct __is_nt_destructible_safe definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 1
| | |-TemplateArgument integral 0
| | |-TemplateTypeParmDecl 0xb22348 <line:867:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb22938 <line:868:5, col:12> col:12 implicit struct __is_nt_destructible_safe
| |-ClassTemplatePartialSpecializationDecl 0xb22c70 <line:871:3, line:873:26> line:872:12 struct __is_nt_destructible_safe definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 0
| | |-TemplateArgument integral 1
| | |-TemplateTypeParmDecl 0xb229e0 <line:871:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb22fc8 <line:872:5, col:12> col:12 implicit struct __is_nt_destructible_safe
| |-ClassTemplateDecl 0xb23198 <line:876:3, line:879:7> line:877:12 is_nothrow_destructible
| | |-TemplateTypeParmDecl 0xb23070 <line:876:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb23108 <line:877:5, line:879:7> line:877:12 struct is_nothrow_destructible definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__is_nt_destructible_safe<_Tp>::type'
| |   `-CXXRecordDecl 0xb23c00 <col:5, col:12> col:12 implicit struct is_nothrow_destructible
| |-ClassTemplateDecl 0xb23e60 <line:882:3, line:885:7> line:883:12 is_constructible
| | |-TemplateTypeParmDecl 0xb23ca8 <line:882:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0xb23d28 <col:26, col:38> col:38 referenced typename depth 0 index 1 ... _Args
| | `-CXXRecordDecl 0xb23dd0 <line:883:5, line:885:7> line:883:12 struct is_constructible definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__bool_constant<__is_constructible(_Tp, _Args...)>':'integral_constant<bool, __is_constructible(_Tp, _Args...)>'
| |   `-CXXRecordDecl 0xb24dc8 <col:5, col:12> col:12 implicit struct is_constructible
| |-ClassTemplateDecl 0xb24f98 <line:888:3, line:891:7> line:889:12 is_default_constructible
| | |-TemplateTypeParmDecl 0xb24e70 <line:888:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb24f08 <line:889:5, line:891:7> line:889:12 struct is_default_constructible definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'is_constructible<_Tp>::type'
| |   `-CXXRecordDecl 0xb253e0 <col:5, col:12> col:12 implicit struct is_default_constructible
| |-ClassTemplateDecl 0xb25748 <line:893:3, line:894:12> col:12 __is_copy_constructible_impl
| | |-TemplateTypeParmDecl 0xb25488 <line:893:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0xb25618 <col:26, col:58> col:31 'bool' depth 0 index 1
| | | `-TemplateArgument expr
| | |   `-ImplicitCastExpr 0xb25678 <col:33, col:58> 'bool' <Dependent>
| | |     `-DependentScopeDeclRefExpr 0xb255d0 <col:33, col:58> '<dependent type>' lvalue
| | `-CXXRecordDecl 0xb256b8 <line:894:5, col:12> col:12 struct __is_copy_constructible_impl
| |-ClassTemplatePartialSpecializationDecl 0xb25ba8 <line:896:3, line:898:27> line:897:12 struct __is_copy_constructible_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 0
| | |-TemplateTypeParmDecl 0xb25998 <line:896:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb25e88 <line:897:5, col:12> col:12 implicit struct __is_copy_constructible_impl
| |-ClassTemplatePartialSpecializationDecl 0xb26138 <line:900:3, line:903:7> line:901:12 struct __is_copy_constructible_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'is_constructible<_Tp, const _Tp &>'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 1
| | |-TemplateTypeParmDecl 0xb25f30 <line:900:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb265c0 <line:901:5, col:12> col:12 implicit struct __is_copy_constructible_impl
| |-ClassTemplateDecl 0xb26798 <line:906:3, line:909:7> line:907:12 is_copy_constructible
| | |-TemplateTypeParmDecl 0xb26668 <line:906:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb26708 <line:907:5, line:909:7> line:907:12 struct is_copy_constructible definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__is_copy_constructible_impl<_Tp>'
| |   `-CXXRecordDecl 0xb27a30 <col:5, col:12> col:12 implicit struct is_copy_constructible
| |-ClassTemplateDecl 0xb27d98 <line:911:3, line:912:12> col:12 __is_move_constructible_impl
| | |-TemplateTypeParmDecl 0xb27ad8 <line:911:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0xb27c68 <col:26, col:58> col:31 'bool' depth 0 index 1
| | | `-TemplateArgument expr
| | |   `-ImplicitCastExpr 0xb27cc8 <col:33, col:58> 'bool' <Dependent>
| | |     `-DependentScopeDeclRefExpr 0xb27c20 <col:33, col:58> '<dependent type>' lvalue
| | `-CXXRecordDecl 0xb27d08 <line:912:5, col:12> col:12 struct __is_move_constructible_impl
| |-ClassTemplatePartialSpecializationDecl 0xb281f8 <line:914:3, line:916:27> line:915:12 struct __is_move_constructible_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 0
| | |-TemplateTypeParmDecl 0xb27fe8 <line:914:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb284d8 <line:915:5, col:12> col:12 implicit struct __is_move_constructible_impl
| |-ClassTemplatePartialSpecializationDecl 0xb28788 <line:918:3, line:921:7> line:919:12 struct __is_move_constructible_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'is_constructible<_Tp, _Tp &&>'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 1
| | |-TemplateTypeParmDecl 0xb28580 <line:918:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb28be0 <line:919:5, col:12> col:12 implicit struct __is_move_constructible_impl
| |-ClassTemplateDecl 0xb28db8 <line:924:3, line:927:7> line:925:12 is_move_constructible
| | |-TemplateTypeParmDecl 0xb28c88 <line:924:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb28d28 <line:925:5, line:927:7> line:925:12 struct is_move_constructible definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__is_move_constructible_impl<_Tp>'
| |   `-CXXRecordDecl 0xb29250 <col:5, col:12> col:12 implicit struct is_move_constructible
| |-ClassTemplateDecl 0xb29428 <line:929:3, line:932:7> line:930:12 __is_nt_default_constructible_atom
| | |-TemplateTypeParmDecl 0xb292f8 <line:929:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb29398 <line:930:5, line:932:7> line:930:12 struct __is_nt_default_constructible_atom definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'integral_constant<bool, noexcept(_Tp())>'
| |   `-CXXRecordDecl 0xb2c640 <col:5, col:12> col:12 implicit struct __is_nt_default_constructible_atom
| |-ClassTemplateDecl 0xb2c9a8 <line:934:3, line:935:12> col:12 __is_nt_default_constructible_impl
| | |-TemplateTypeParmDecl 0xb2c6e8 <line:934:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0xb2c878 <col:26, col:48> col:31 'bool' depth 0 index 1
| | | `-TemplateArgument expr
| | |   `-ImplicitCastExpr 0xb2c8d8 <col:33, col:48> 'bool' <Dependent>
| | |     `-DependentScopeDeclRefExpr 0xb2c830 <col:33, col:48> '<dependent type>' lvalue
| | `-CXXRecordDecl 0xb2c918 <line:935:5, col:12> col:12 struct __is_nt_default_constructible_impl
| |-ClassTemplatePartialSpecializationDecl 0xb2ce08 <line:937:3, line:942:7> line:938:12 struct __is_nt_default_constructible_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public '__and_<__is_array_known_bounds<_Tp>, __is_nt_default_constructible_atom<typename remove_all_extents<_Tp>::type> >'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 1
| | |-TemplateTypeParmDecl 0xb2cbf8 <line:937:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb2d4c0 <line:938:5, col:12> col:12 implicit struct __is_nt_default_constructible_impl
| |-ClassTemplatePartialSpecializationDecl 0xb2d778 <line:944:3, line:947:7> line:945:12 struct __is_nt_default_constructible_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public '__is_nt_default_constructible_atom<_Tp>'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 0
| | |-TemplateTypeParmDecl 0xb2d568 <line:944:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb2dad0 <line:945:5, col:12> col:12 implicit struct __is_nt_default_constructible_impl
| |-ClassTemplateDecl 0xb2dca8 <line:950:3, line:954:7> line:951:12 is_nothrow_default_constructible
| | |-TemplateTypeParmDecl 0xb2db78 <line:950:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb2dc18 <line:951:5, line:954:7> line:951:12 struct is_nothrow_default_constructible definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__and_<is_default_constructible<_Tp>, __is_nt_default_constructible_impl<_Tp> >'
| |   `-CXXRecordDecl 0xb2e370 <col:5, col:12> col:12 implicit struct is_nothrow_default_constructible
| |-ClassTemplateDecl 0xb2e5d0 <line:956:3, line:959:7> line:957:12 __is_nt_constructible_impl
| | |-TemplateTypeParmDecl 0xb2e418 <line:956:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0xb2e498 <col:26, col:38> col:38 referenced typename depth 0 index 1 ... _Args
| | `-CXXRecordDecl 0xb2e540 <line:957:5, line:959:7> line:957:12 struct __is_nt_constructible_impl definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'integral_constant<bool, noexcept(_Tp(declval<_Args>()...))>'
| |   `-CXXRecordDecl 0xb2f540 <col:5, col:12> col:12 implicit struct __is_nt_constructible_impl
| |-ClassTemplatePartialSpecializationDecl 0xb2f888 <line:961:3, line:965:7> line:962:12 struct __is_nt_constructible_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'integral_constant<bool, noexcept(static_cast<_Tp>(declval<_Arg>()))>'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument pack
| | | `-TemplateArgument type 'type-parameter-0-1'
| | |-TemplateTypeParmDecl 0xb2f5e8 <line:961:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0xb2f668 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Arg
| | `-CXXRecordDecl 0xb2fdb0 <line:962:5, col:12> col:12 implicit struct __is_nt_constructible_impl
| |-ClassTemplatePartialSpecializationDecl 0xb30008 <line:967:3, line:970:7> line:968:12 struct __is_nt_constructible_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'is_nothrow_default_constructible<_Tp>'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument pack
| | |-TemplateTypeParmDecl 0xb2fe58 <line:967:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb30370 <line:968:5, col:12> col:12 implicit struct __is_nt_constructible_impl
| |-ClassTemplateDecl 0xb305d0 <line:973:3, line:977:7> line:974:12 is_nothrow_constructible
| | |-TemplateTypeParmDecl 0xb30418 <line:973:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0xb30498 <col:26, col:38> col:38 referenced typename depth 0 index 1 ... _Args
| | `-CXXRecordDecl 0xb30540 <line:974:5, line:977:7> line:974:12 struct is_nothrow_constructible definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__and_<is_constructible<_Tp, _Args...>, __is_nt_constructible_impl<_Tp, _Args...> >'
| |   `-CXXRecordDecl 0xb30cd0 <col:5, col:12> col:12 implicit struct is_nothrow_constructible
| |-ClassTemplateDecl 0xb32330 <line:979:3, line:980:12> col:12 __is_nothrow_copy_constructible_impl
| | |-TemplateTypeParmDecl 0xb30d78 <line:979:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0xb30f08 <col:26, col:58> col:31 'bool' depth 0 index 1
| | | `-TemplateArgument expr
| | |   `-ImplicitCastExpr 0xb30f68 <col:33, col:58> 'bool' <Dependent>
| | |     `-DependentScopeDeclRefExpr 0xb30ec0 <col:33, col:58> '<dependent type>' lvalue
| | `-CXXRecordDecl 0xb322a0 <line:980:5, col:12> col:12 struct __is_nothrow_copy_constructible_impl
| |-ClassTemplatePartialSpecializationDecl 0xb32788 <line:982:3, line:984:27> line:983:12 struct __is_nothrow_copy_constructible_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 0
| | |-TemplateTypeParmDecl 0xb32578 <line:982:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb32a68 <line:983:5, col:12> col:12 implicit struct __is_nothrow_copy_constructible_impl
| |-ClassTemplatePartialSpecializationDecl 0xb32d18 <line:986:3, line:989:7> line:987:12 struct __is_nothrow_copy_constructible_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'is_nothrow_constructible<_Tp, const _Tp &>'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 1
| | |-TemplateTypeParmDecl 0xb32b10 <line:986:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb33170 <line:987:5, col:12> col:12 implicit struct __is_nothrow_copy_constructible_impl
| |-ClassTemplateDecl 0xb33348 <line:992:3, line:995:7> line:993:12 is_nothrow_copy_constructible
| | |-TemplateTypeParmDecl 0xb33218 <line:992:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb332b8 <line:993:5, line:995:7> line:993:12 struct is_nothrow_copy_constructible definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__is_nothrow_copy_constructible_impl<_Tp>'
| |   `-CXXRecordDecl 0xb337e0 <col:5, col:12> col:12 implicit struct is_nothrow_copy_constructible
| |-ClassTemplateDecl 0xb33b48 <line:997:3, line:998:12> col:12 __is_nothrow_move_constructible_impl
| | |-TemplateTypeParmDecl 0xb33888 <line:997:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0xb33a18 <col:26, col:58> col:31 'bool' depth 0 index 1
| | | `-TemplateArgument expr
| | |   `-ImplicitCastExpr 0xb33a78 <col:33, col:58> 'bool' <Dependent>
| | |     `-DependentScopeDeclRefExpr 0xb339d0 <col:33, col:58> '<dependent type>' lvalue
| | `-CXXRecordDecl 0xb33ab8 <line:998:5, col:12> col:12 struct __is_nothrow_move_constructible_impl
| |-ClassTemplatePartialSpecializationDecl 0xb33fa8 <line:1000:3, line:1002:27> line:1001:12 struct __is_nothrow_move_constructible_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 0
| | |-TemplateTypeParmDecl 0xb33d98 <line:1000:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb35030 <line:1001:5, col:12> col:12 implicit struct __is_nothrow_move_constructible_impl
| |-ClassTemplatePartialSpecializationDecl 0xb352e8 <line:1004:3, line:1007:7> line:1005:12 struct __is_nothrow_move_constructible_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'is_nothrow_constructible<_Tp, _Tp &&>'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 1
| | |-TemplateTypeParmDecl 0xb350d8 <line:1004:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb35740 <line:1005:5, col:12> col:12 implicit struct __is_nothrow_move_constructible_impl
| |-ClassTemplateDecl 0xb35918 <line:1010:3, line:1013:7> line:1011:12 is_nothrow_move_constructible
| | |-TemplateTypeParmDecl 0xb357e8 <line:1010:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb35888 <line:1011:5, line:1013:7> line:1011:12 struct is_nothrow_move_constructible definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__is_nothrow_move_constructible_impl<_Tp>'
| |   `-CXXRecordDecl 0xb35db0 <col:5, col:12> col:12 implicit struct is_nothrow_move_constructible
| |-ClassTemplateDecl 0xb36010 <line:1016:3, line:1019:7> line:1017:12 is_assignable
| | |-TemplateTypeParmDecl 0xb35e58 <line:1016:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0xb35ed8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| | `-CXXRecordDecl 0xb35f80 <line:1017:5, line:1019:7> line:1017:12 struct is_assignable definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__bool_constant<__is_assignable(_Tp, _Up)>':'integral_constant<bool, __is_assignable(_Tp, _Up)>'
| |   `-CXXRecordDecl 0xb36528 <col:5, col:12> col:12 implicit struct is_assignable
| |-ClassTemplateDecl 0xb36888 <line:1021:3, line:1022:12> col:12 __is_copy_assignable_impl
| | |-TemplateTypeParmDecl 0xb365d0 <line:1021:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0xb36758 <col:26, col:58> col:31 'bool' depth 0 index 1
| | | `-TemplateArgument expr
| | |   `-ImplicitCastExpr 0xb367b8 <col:33, col:58> 'bool' <Dependent>
| | |     `-DependentScopeDeclRefExpr 0xb36710 <col:33, col:58> '<dependent type>' lvalue
| | `-CXXRecordDecl 0xb367f8 <line:1022:5, col:12> col:12 struct __is_copy_assignable_impl
| |-ClassTemplatePartialSpecializationDecl 0xb36ce8 <line:1024:3, line:1026:27> line:1025:12 struct __is_copy_assignable_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 0
| | |-TemplateTypeParmDecl 0xb36ad8 <line:1024:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb38630 <line:1025:5, col:12> col:12 implicit struct __is_copy_assignable_impl
| |-ClassTemplatePartialSpecializationDecl 0xb388e8 <line:1028:3, line:1031:7> line:1029:12 struct __is_copy_assignable_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'is_assignable<_Tp &, const _Tp &>'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 1
| | |-TemplateTypeParmDecl 0xb386d8 <line:1028:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb38d40 <line:1029:5, col:12> col:12 implicit struct __is_copy_assignable_impl
| |-ClassTemplateDecl 0xb38f18 <line:1034:3, line:1037:7> line:1035:12 is_copy_assignable
| | |-TemplateTypeParmDecl 0xb38de8 <line:1034:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb38e88 <line:1035:5, line:1037:7> line:1035:12 struct is_copy_assignable definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__is_copy_assignable_impl<_Tp>'
| |   `-CXXRecordDecl 0xb393b0 <col:5, col:12> col:12 implicit struct is_copy_assignable
| |-ClassTemplateDecl 0xb39718 <line:1039:3, line:1040:12> col:12 __is_move_assignable_impl
| | |-TemplateTypeParmDecl 0xb39458 <line:1039:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0xb395e8 <col:26, col:58> col:31 'bool' depth 0 index 1
| | | `-TemplateArgument expr
| | |   `-ImplicitCastExpr 0xb39648 <col:33, col:58> 'bool' <Dependent>
| | |     `-DependentScopeDeclRefExpr 0xb395a0 <col:33, col:58> '<dependent type>' lvalue
| | `-CXXRecordDecl 0xb39688 <line:1040:5, col:12> col:12 struct __is_move_assignable_impl
| |-ClassTemplatePartialSpecializationDecl 0xb39b78 <line:1042:3, line:1044:27> line:1043:12 struct __is_move_assignable_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 0
| | |-TemplateTypeParmDecl 0xb39968 <line:1042:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb39e58 <line:1043:5, col:12> col:12 implicit struct __is_move_assignable_impl
| |-ClassTemplatePartialSpecializationDecl 0xb3a108 <line:1046:3, line:1049:7> line:1047:12 struct __is_move_assignable_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'is_assignable<_Tp &, _Tp &&>'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 1
| | |-TemplateTypeParmDecl 0xb39f00 <line:1046:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb3a560 <line:1047:5, col:12> col:12 implicit struct __is_move_assignable_impl
| |-ClassTemplateDecl 0xb3a738 <line:1052:3, line:1055:7> line:1053:12 is_move_assignable
| | |-TemplateTypeParmDecl 0xb3a608 <line:1052:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb3a6a8 <line:1053:5, line:1055:7> line:1053:12 struct is_move_assignable definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__is_move_assignable_impl<_Tp>'
| |   `-CXXRecordDecl 0xb3abd0 <col:5, col:12> col:12 implicit struct is_move_assignable
| |-ClassTemplateDecl 0xb3ae30 <line:1057:3, line:1060:7> line:1058:12 __is_nt_assignable_impl
| | |-TemplateTypeParmDecl 0xb3ac78 <line:1057:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0xb3acf8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| | `-CXXRecordDecl 0xb3ada0 <line:1058:5, line:1060:7> line:1058:12 struct __is_nt_assignable_impl definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'integral_constant<bool, noexcept(declval<_Tp>() = declval<_Up>())>'
| |   `-CXXRecordDecl 0xb3b3d0 <col:5, col:12> col:12 implicit struct __is_nt_assignable_impl
| |-ClassTemplateDecl 0xb3b630 <line:1063:3, line:1067:7> line:1064:12 is_nothrow_assignable
| | |-TemplateTypeParmDecl 0xb3b478 <line:1063:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0xb3b4f8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| | `-CXXRecordDecl 0xb3b5a0 <line:1064:5, line:1067:7> line:1064:12 struct is_nothrow_assignable definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__and_<is_assignable<_Tp, _Up>, __is_nt_assignable_impl<_Tp, _Up> >'
| |   `-CXXRecordDecl 0xb3bc50 <col:5, col:12> col:12 implicit struct is_nothrow_assignable
| |-ClassTemplateDecl 0xb3bfb8 <line:1069:3, line:1070:12> col:12 __is_nt_copy_assignable_impl
| | |-TemplateTypeParmDecl 0xb3bcf8 <line:1069:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0xb3be88 <col:26, col:58> col:31 'bool' depth 0 index 1
| | | `-TemplateArgument expr
| | |   `-ImplicitCastExpr 0xb3bee8 <col:33, col:58> 'bool' <Dependent>
| | |     `-DependentScopeDeclRefExpr 0xb3be40 <col:33, col:58> '<dependent type>' lvalue
| | `-CXXRecordDecl 0xb3bf28 <line:1070:5, col:12> col:12 struct __is_nt_copy_assignable_impl
| |-ClassTemplatePartialSpecializationDecl 0xb3c418 <line:1072:3, line:1074:27> line:1073:12 struct __is_nt_copy_assignable_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 0
| | |-TemplateTypeParmDecl 0xb3c208 <line:1072:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb3e300 <line:1073:5, col:12> col:12 implicit struct __is_nt_copy_assignable_impl
| |-ClassTemplatePartialSpecializationDecl 0xb3e5b8 <line:1076:3, line:1079:7> line:1077:12 struct __is_nt_copy_assignable_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'is_nothrow_assignable<_Tp &, const _Tp &>'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 1
| | |-TemplateTypeParmDecl 0xb3e3a8 <line:1076:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb3ea10 <line:1077:5, col:12> col:12 implicit struct __is_nt_copy_assignable_impl
| |-ClassTemplateDecl 0xb3ebe8 <line:1082:3, line:1085:7> line:1083:12 is_nothrow_copy_assignable
| | |-TemplateTypeParmDecl 0xb3eab8 <line:1082:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb3eb58 <line:1083:5, line:1085:7> line:1083:12 struct is_nothrow_copy_assignable definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__is_nt_copy_assignable_impl<_Tp>'
| |   `-CXXRecordDecl 0xb3f080 <col:5, col:12> col:12 implicit struct is_nothrow_copy_assignable
| |-ClassTemplateDecl 0xb3f3e8 <line:1087:3, line:1088:12> col:12 __is_nt_move_assignable_impl
| | |-TemplateTypeParmDecl 0xb3f128 <line:1087:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0xb3f2b8 <col:26, col:58> col:31 'bool' depth 0 index 1
| | | `-TemplateArgument expr
| | |   `-ImplicitCastExpr 0xb3f318 <col:33, col:58> 'bool' <Dependent>
| | |     `-DependentScopeDeclRefExpr 0xb3f270 <col:33, col:58> '<dependent type>' lvalue
| | `-CXXRecordDecl 0xb3f358 <line:1088:5, col:12> col:12 struct __is_nt_move_assignable_impl
| |-ClassTemplatePartialSpecializationDecl 0xb3f848 <line:1090:3, line:1092:27> line:1091:12 struct __is_nt_move_assignable_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 0
| | |-TemplateTypeParmDecl 0xb3f638 <line:1090:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb3fb28 <line:1091:5, col:12> col:12 implicit struct __is_nt_move_assignable_impl
| |-ClassTemplatePartialSpecializationDecl 0xb3fdd8 <line:1094:3, line:1097:7> line:1095:12 struct __is_nt_move_assignable_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'is_nothrow_assignable<_Tp &, _Tp &&>'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 1
| | |-TemplateTypeParmDecl 0xb3fbd0 <line:1094:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb40230 <line:1095:5, col:12> col:12 implicit struct __is_nt_move_assignable_impl
| |-ClassTemplateDecl 0xb40408 <line:1100:3, line:1103:7> line:1101:12 is_nothrow_move_assignable
| | |-TemplateTypeParmDecl 0xb402d8 <line:1100:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb40378 <line:1101:5, line:1103:7> line:1101:12 struct is_nothrow_move_assignable definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__is_nt_move_assignable_impl<_Tp>'
| |   `-CXXRecordDecl 0xb408a0 <col:5, col:12> col:12 implicit struct is_nothrow_move_assignable
| |-ClassTemplateDecl 0xb40b00 <line:1106:3, line:1109:7> line:1107:12 is_trivially_constructible
| | |-TemplateTypeParmDecl 0xb40948 <line:1106:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0xb409c8 <col:26, col:38> col:38 referenced typename depth 0 index 1 ... _Args
| | `-CXXRecordDecl 0xb40a70 <line:1107:5, line:1109:7> line:1107:12 struct is_trivially_constructible definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__bool_constant<__is_trivially_constructible(_Tp, _Args...)>':'integral_constant<bool, __is_trivially_constructible(_Tp, _Args...)>'
| |   `-CXXRecordDecl 0xb41088 <col:5, col:12> col:12 implicit struct is_trivially_constructible
| |-ClassTemplateDecl 0xb41258 <line:1112:3, line:1115:7> line:1113:12 is_trivially_default_constructible
| | |-TemplateTypeParmDecl 0xb41130 <line:1112:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb411c8 <line:1113:5, line:1115:7> line:1113:12 struct is_trivially_default_constructible definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'is_trivially_constructible<_Tp>::type'
| |   `-CXXRecordDecl 0xb416a0 <col:5, col:12> col:12 implicit struct is_trivially_default_constructible
| |-CXXRecordDecl 0xb41748 <line:1117:3, line:1127:3> line:1117:10 referenced struct __do_is_implicitly_default_constructible_impl definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-CXXRecordDecl 0xb41868 <col:3, col:10> col:10 implicit struct __do_is_implicitly_default_constructible_impl
| | |-FunctionTemplateDecl 0xb41b98 <line:1119:5, line:1120:36> col:17 __helper
| | | |-TemplateTypeParmDecl 0xb418f8 <line:1119:15, col:24> col:24 referenced typename depth 0 index 0 _Tp
| | | `-CXXMethodDecl 0xb41af8 <line:1120:5, col:36> col:17 __helper 'void (const _Tp &)' static
| | |   `-ParmVarDecl 0xb419d8 <col:26, col:35> col:36 'const _Tp &'
| | |-FunctionTemplateDecl 0xb420c8 <line:1122:5, line:1124:68> line:1123:22 __test
| | | |-TemplateTypeParmDecl 0xb41bf8 <line:1122:15, col:24> col:24 referenced typename depth 0 index 0 _Tp
| | | `-CXXMethodDecl 0xb42028 <line:1123:5, line:1124:68> line:1123:22 __test 'std::true_type (const _Tp &, decltype(__helper<const _Tp &>({})) *)' static
| | |   |-ParmVarDecl 0xb41cd8 <col:29, col:38> col:39 'const _Tp &'
| | |   `-ParmVarDecl 0xb41f18 <line:1124:29, col:67> col:65 'decltype(__helper<const _Tp &>({})) *' cinit
| | |     `-IntegerLiteral 0xb45248 <col:67> 'int' 0
| | `-CXXMethodDecl 0xb42150 <line:1126:5, col:33> col:23 __test 'std::false_type (...)' static
| |-ClassTemplateDecl 0xb45398 <line:1129:3, line:1134:5> line:1130:12 __is_implicitly_default_constructible_impl
| | |-TemplateTypeParmDecl 0xb45268 <line:1129:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb45308 <line:1130:5, line:1134:5> line:1130:12 struct __is_implicitly_default_constructible_impl definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'std::__do_is_implicitly_default_constructible_impl'
| |   |-CXXRecordDecl 0xb45630 <col:5, col:12> col:12 implicit struct __is_implicitly_default_constructible_impl
| |   `-TypedefDecl 0xb45868 <line:1133:7, col:48> col:48 type 'decltype(__test(declval<_Tp>()))'
| |     `-DecltypeType 0xb45830 'decltype(__test(declval<_Tp>()))' dependent
| |       `-CallExpr 0xb457c8 <col:24, col:45> '<dependent type>'
| |         |-UnresolvedLookupExpr 0xb456c0 <col:24> '<overloaded function type>' lvalue (no ADL) = '__test' 0xb420c8 0xb42150
| |         `-CallExpr 0xb457a8 <col:31, col:44> '<dependent type>'
| |           `-UnresolvedLookupExpr 0xb45720 <col:31, col:42> '<dependent type>' lvalue (ADL) = 'declval' 0xb17e30
| |-ClassTemplateDecl 0xb45a08 <line:1136:3, line:1139:7> line:1137:12 __is_implicitly_default_constructible_safe
| | |-TemplateTypeParmDecl 0xb458d8 <line:1136:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb45978 <line:1137:5, line:1139:7> line:1137:12 struct __is_implicitly_default_constructible_safe definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__is_implicitly_default_constructible_impl<_Tp>::type'
| |   `-CXXRecordDecl 0xb45df0 <col:5, col:12> col:12 implicit struct __is_implicitly_default_constructible_safe
| |-ClassTemplateDecl 0xb45fc8 <line:1141:3, line:1145:7> line:1142:12 __is_implicitly_default_constructible
| | |-TemplateTypeParmDecl 0xb45e98 <line:1141:13, col:22> col:22 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb45f38 <line:1142:5, line:1145:7> line:1142:12 struct __is_implicitly_default_constructible definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__and_<is_default_constructible<_Tp>, __is_implicitly_default_constructible_safe<_Tp> >'
| |   `-CXXRecordDecl 0xb464f0 <col:5, col:12> col:12 implicit struct __is_implicitly_default_constructible
| |-ClassTemplateDecl 0xb46858 <line:1149:3, line:1150:12> col:12 __is_trivially_copy_constructible_impl
| | |-TemplateTypeParmDecl 0xb46598 <line:1149:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0xb46728 <col:26, col:58> col:31 'bool' depth 0 index 1
| | | `-TemplateArgument expr
| | |   `-ImplicitCastExpr 0xb46788 <col:33, col:58> 'bool' <Dependent>
| | |     `-DependentScopeDeclRefExpr 0xb466e0 <col:33, col:58> '<dependent type>' lvalue
| | `-CXXRecordDecl 0xb467c8 <line:1150:5, col:12> col:12 struct __is_trivially_copy_constructible_impl
| |-ClassTemplatePartialSpecializationDecl 0xb46cb8 <line:1152:3, line:1154:27> line:1153:12 struct __is_trivially_copy_constructible_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 0
| | |-TemplateTypeParmDecl 0xb46aa8 <line:1152:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb46f98 <line:1153:5, col:12> col:12 implicit struct __is_trivially_copy_constructible_impl
| |-ClassTemplatePartialSpecializationDecl 0xb47248 <line:1156:3, line:1161:7> line:1157:12 struct __is_trivially_copy_constructible_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public '__and_<is_copy_constructible<_Tp>, integral_constant<bool, __is_trivially_constructible(_Tp, const _Tp &)> >'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 1
| | |-TemplateTypeParmDecl 0xb47040 <line:1156:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb47900 <line:1157:5, col:12> col:12 implicit struct __is_trivially_copy_constructible_impl
| |-ClassTemplateDecl 0xb47ad8 <line:1163:3, line:1166:7> line:1164:12 is_trivially_copy_constructible
| | |-TemplateTypeParmDecl 0xb479a8 <line:1163:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb47a48 <line:1164:5, line:1166:7> line:1164:12 struct is_trivially_copy_constructible definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__is_trivially_copy_constructible_impl<_Tp>'
| |   `-CXXRecordDecl 0xb47f70 <col:5, col:12> col:12 implicit struct is_trivially_copy_constructible
| |-ClassTemplateDecl 0xb482d8 <line:1170:3, line:1171:12> col:12 __is_trivially_move_constructible_impl
| | |-TemplateTypeParmDecl 0xb48018 <line:1170:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0xb481a8 <col:26, col:58> col:31 'bool' depth 0 index 1
| | | `-TemplateArgument expr
| | |   `-ImplicitCastExpr 0xb48208 <col:33, col:58> 'bool' <Dependent>
| | |     `-DependentScopeDeclRefExpr 0xb48160 <col:33, col:58> '<dependent type>' lvalue
| | `-CXXRecordDecl 0xb48248 <line:1171:5, col:12> col:12 struct __is_trivially_move_constructible_impl
| |-ClassTemplatePartialSpecializationDecl 0xb48738 <line:1173:3, line:1175:27> line:1174:12 struct __is_trivially_move_constructible_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 0
| | |-TemplateTypeParmDecl 0xb48528 <line:1173:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb48a18 <line:1174:5, col:12> col:12 implicit struct __is_trivially_move_constructible_impl
| |-ClassTemplatePartialSpecializationDecl 0xb48cc8 <line:1177:3, line:1182:7> line:1178:12 struct __is_trivially_move_constructible_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public '__and_<is_move_constructible<_Tp>, integral_constant<bool, __is_trivially_constructible(_Tp, _Tp &&)> >'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 1
| | |-TemplateTypeParmDecl 0xb48ac0 <line:1177:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb4af50 <line:1178:5, col:12> col:12 implicit struct __is_trivially_move_constructible_impl
| |-ClassTemplateDecl 0xb4b128 <line:1184:3, line:1187:7> line:1185:12 is_trivially_move_constructible
| | |-TemplateTypeParmDecl 0xb4aff8 <line:1184:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb4b098 <line:1185:5, line:1187:7> line:1185:12 struct is_trivially_move_constructible definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__is_trivially_move_constructible_impl<_Tp>'
| |   `-CXXRecordDecl 0xb4b5c0 <col:5, col:12> col:12 implicit struct is_trivially_move_constructible
| |-ClassTemplateDecl 0xb4b820 <line:1190:3, line:1193:7> line:1191:12 is_trivially_assignable
| | |-TemplateTypeParmDecl 0xb4b668 <line:1190:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0xb4b6e8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| | `-CXXRecordDecl 0xb4b790 <line:1191:5, line:1193:7> line:1191:12 struct is_trivially_assignable definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__bool_constant<__is_trivially_assignable(_Tp, _Up)>':'integral_constant<bool, __is_trivially_assignable(_Tp, _Up)>'
| |   `-CXXRecordDecl 0xb4bd38 <col:5, col:12> col:12 implicit struct is_trivially_assignable
| |-ClassTemplateDecl 0xb4c098 <line:1197:3, line:1198:12> col:12 __is_trivially_copy_assignable_impl
| | |-TemplateTypeParmDecl 0xb4bde0 <line:1197:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0xb4bf68 <col:26, col:58> col:31 'bool' depth 0 index 1
| | | `-TemplateArgument expr
| | |   `-ImplicitCastExpr 0xb4bfc8 <col:33, col:58> 'bool' <Dependent>
| | |     `-DependentScopeDeclRefExpr 0xb4bf20 <col:33, col:58> '<dependent type>' lvalue
| | `-CXXRecordDecl 0xb4c008 <line:1198:5, col:12> col:12 struct __is_trivially_copy_assignable_impl
| |-ClassTemplatePartialSpecializationDecl 0xb4c4f8 <line:1200:3, line:1202:27> line:1201:12 struct __is_trivially_copy_assignable_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 0
| | |-TemplateTypeParmDecl 0xb4c2e8 <line:1200:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb4c7d8 <line:1201:5, col:12> col:12 implicit struct __is_trivially_copy_assignable_impl
| |-ClassTemplatePartialSpecializationDecl 0xb4ca88 <line:1204:3, line:1207:7> line:1205:12 struct __is_trivially_copy_assignable_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public '__bool_constant<__is_trivially_assignable(_Tp &, const _Tp &)>':'integral_constant<bool, __is_trivially_assignable(_Tp &, const _Tp &)>'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 1
| | |-TemplateTypeParmDecl 0xb4c880 <line:1204:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb4d018 <line:1205:5, col:12> col:12 implicit struct __is_trivially_copy_assignable_impl
| |-ClassTemplateDecl 0xb4d1e8 <line:1209:3, line:1212:7> line:1210:12 is_trivially_copy_assignable
| | |-TemplateTypeParmDecl 0xb4d0c0 <line:1209:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb4d158 <line:1210:5, line:1212:7> line:1210:12 struct is_trivially_copy_assignable definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__is_trivially_copy_assignable_impl<_Tp>'
| |   `-CXXRecordDecl 0xb4d680 <col:5, col:12> col:12 implicit struct is_trivially_copy_assignable
| |-ClassTemplateDecl 0xb4d9e8 <line:1216:3, line:1217:12> col:12 __is_trivially_move_assignable_impl
| | |-TemplateTypeParmDecl 0xb4d728 <line:1216:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0xb4d8b8 <col:26, col:58> col:31 'bool' depth 0 index 1
| | | `-TemplateArgument expr
| | |   `-ImplicitCastExpr 0xb4d918 <col:33, col:58> 'bool' <Dependent>
| | |     `-DependentScopeDeclRefExpr 0xb4d870 <col:33, col:58> '<dependent type>' lvalue
| | `-CXXRecordDecl 0xb4d958 <line:1217:5, col:12> col:12 struct __is_trivially_move_assignable_impl
| |-ClassTemplatePartialSpecializationDecl 0xb4de48 <line:1219:3, line:1221:27> line:1220:12 struct __is_trivially_move_assignable_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 0
| | |-TemplateTypeParmDecl 0xb4dc38 <line:1219:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb4e128 <line:1220:5, col:12> col:12 implicit struct __is_trivially_move_assignable_impl
| |-ClassTemplatePartialSpecializationDecl 0xb4e3d8 <line:1223:3, line:1226:7> line:1224:12 struct __is_trivially_move_assignable_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public '__bool_constant<__is_trivially_assignable(_Tp &, _Tp &&)>':'integral_constant<bool, __is_trivially_assignable(_Tp &, _Tp &&)>'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 1
| | |-TemplateTypeParmDecl 0xb4e1d0 <line:1223:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb4e968 <line:1224:5, col:12> col:12 implicit struct __is_trivially_move_assignable_impl
| |-ClassTemplateDecl 0xb4eb38 <line:1228:3, line:1231:7> line:1229:12 is_trivially_move_assignable
| | |-TemplateTypeParmDecl 0xb4ea10 <line:1228:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb4eaa8 <line:1229:5, line:1231:7> line:1229:12 struct is_trivially_move_assignable definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__is_trivially_move_assignable_impl<_Tp>'
| |   `-CXXRecordDecl 0xb50ba0 <col:5, col:12> col:12 implicit struct is_trivially_move_assignable
| |-ClassTemplateDecl 0xb50d78 <line:1234:3, line:1238:7> line:1235:12 is_trivially_destructible
| | |-TemplateTypeParmDecl 0xb50c48 <line:1234:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb50ce8 <line:1235:5, line:1238:7> line:1235:12 struct is_trivially_destructible definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__and_<is_destructible<_Tp>, __bool_constant<__has_trivial_destructor(_Tp)> >'
| |   `-CXXRecordDecl 0xb51470 <col:5, col:12> col:12 implicit struct is_trivially_destructible
| |-ClassTemplateDecl 0xb51648 <line:1242:3, line:1245:7> line:1243:12 has_virtual_destructor
| | |-TemplateTypeParmDecl 0xb51518 <line:1242:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb515b8 <line:1243:5, line:1245:7> line:1243:12 struct has_virtual_destructor definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'integral_constant<bool, __has_virtual_destructor(_Tp)>'
| |   `-CXXRecordDecl 0xb51a30 <col:5, col:12> col:12 implicit struct has_virtual_destructor
| |-ClassTemplateDecl 0xb51c08 <line:1251:3, line:1253:61> line:1252:12 alignment_of
| | |-TemplateTypeParmDecl 0xb51ad8 <line:1251:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb51b78 <line:1252:5, line:1253:61> line:1252:12 struct alignment_of definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'integral_constant<std::size_t, alignof(_Tp)>'
| |   `-CXXRecordDecl 0xb52060 <col:5, col:12> col:12 implicit struct alignment_of
| |-ClassTemplateDecl 0xb52238 <line:1256:3, line:1258:50> line:1257:12 rank
| | |-TemplateTypeParmDecl 0xb52108 <line:1256:12> col:20 typename depth 0 index 0
| | `-CXXRecordDecl 0xb521a8 <line:1257:5, line:1258:50> line:1257:12 struct rank definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'integral_constant<std::size_t, 0>':'std::integral_constant<unsigned long, 0>'
| |   `-CXXRecordDecl 0xb52dc8 <col:5, col:12> col:12 implicit struct rank
| |-ClassTemplatePartialSpecializationDecl 0xb53100 <line:1260:3, line:1262:69> line:1261:12 struct rank definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'integral_constant<std::size_t, 1 + rank<_Tp>::value>'
| | |-TemplateArgument type 'type-parameter-0-0 [_Size]'
| | |-TemplateTypeParmDecl 0xb52e70 <line:1260:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0xb52f38 <col:26, col:38> col:38 referenced 'std::size_t':'unsigned long' depth 0 index 1 _Size
| | `-CXXRecordDecl 0xb53640 <line:1261:5, col:12> col:12 implicit struct rank
| |-ClassTemplatePartialSpecializationDecl 0xb538a0 <line:1264:3, line:1266:69> line:1265:12 struct rank definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'integral_constant<std::size_t, 1 + rank<_Tp>::value>'
| | |-TemplateArgument type 'type-parameter-0-0 []'
| | |-TemplateTypeParmDecl 0xb536e8 <line:1264:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb53d60 <line:1265:5, col:12> col:12 implicit struct rank
| |-ClassTemplateDecl 0xb53fb8 prev 0xb18090 <line:1269:3, line:1271:50> line:1270:12 extent
| | |-TemplateTypeParmDecl 0xb53e08 <line:1269:12> col:20 typename depth 0 index 0
| | |-NonTypeTemplateParmDecl 0xb53ea0 <col:22, col:31> col:31 'unsigned int' depth 0 index 1 _Uint
| | | `-TemplateArgument expr
| | |   |-inherited from NonTypeTemplateParm 0xb17f40 '' 'unsigned int'
| | |   `-ConstantExpr 0xb17fb8 <line:769:33> 'unsigned int' Int: 0
| | |     `-ImplicitCastExpr 0xb17fa0 <col:33> 'unsigned int' <IntegralCast>
| | |       `-IntegerLiteral 0xb17f08 <col:33> 'int' 0
| | `-CXXRecordDecl 0xb53f28 prev 0xb18000 <line:1270:5, line:1271:50> line:1270:12 struct extent definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'integral_constant<std::size_t, 0>':'std::integral_constant<unsigned long, 0>'
| |   `-CXXRecordDecl 0xb54210 <col:5, col:12> col:12 implicit struct extent
| |-ClassTemplatePartialSpecializationDecl 0xb54698 <line:1273:3, line:1278:7> line:1274:12 struct extent definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'integral_constant<std::size_t, _Uint == 0 ? _Size : extent<_Tp, _Uint - 1>::value>'
| | |-TemplateArgument type 'type-parameter-0-0 [_Size]'
| | |-TemplateArgument expr
| | | `-DeclRefExpr 0xb54550 <col:31> 'unsigned int' NonTypeTemplateParm 0xb54350 '_Uint' 'unsigned int'
| | |-TemplateTypeParmDecl 0xb542b8 <line:1273:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0xb54350 <col:26, col:35> col:35 referenced 'unsigned int' depth 0 index 1 _Uint
| | |-NonTypeTemplateParmDecl 0xb54400 <col:42, col:54> col:54 referenced 'std::size_t':'unsigned long' depth 0 index 2 _Size
| | `-CXXRecordDecl 0xb561b0 <line:1274:5, col:12> col:12 implicit struct extent
| |-ClassTemplatePartialSpecializationDecl 0xb56518 <line:1280:3, line:1285:7> line:1281:12 struct extent definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'integral_constant<std::size_t, _Uint == 0 ? 0 : extent<_Tp, _Uint - 1>::value>'
| | |-TemplateArgument type 'type-parameter-0-0 []'
| | |-TemplateArgument expr
| | | `-DeclRefExpr 0xb563c8 <col:26> 'unsigned int' NonTypeTemplateParm 0xb562f0 '_Uint' 'unsigned int'
| | |-TemplateTypeParmDecl 0xb56258 <line:1280:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0xb562f0 <col:26, col:35> col:35 referenced 'unsigned int' depth 0 index 1 _Uint
| | `-CXXRecordDecl 0xb56bb0 <line:1281:5, col:12> col:12 implicit struct extent
| |-ClassTemplateDecl 0xb56e10 <line:1291:3, line:1293:27> line:1292:12 is_same
| | |-TemplateTypeParmDecl 0xb56c58 <line:1291:12> col:20 typename depth 0 index 0
| | |-TemplateTypeParmDecl 0xb56cd8 <col:22> col:30 typename depth 0 index 1
| | `-CXXRecordDecl 0xb56d80 <line:1292:5, line:1293:27> line:1292:12 struct is_same definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'std::false_type':'std::integral_constant<bool, false>'
| |   `-CXXRecordDecl 0xb570e0 <col:5, col:12> col:12 implicit struct is_same
| |-ClassTemplatePartialSpecializationDecl 0xb57378 <line:1295:3, line:1297:26> line:1296:12 struct is_same definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateTypeParmDecl 0xb57188 <line:1295:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb57638 <line:1296:5, col:12> col:12 implicit struct is_same
| |-ClassTemplateDecl 0xb57890 <line:1300:3, line:1303:7> line:1301:12 is_base_of
| | |-TemplateTypeParmDecl 0xb576e0 <line:1300:12, col:21> col:21 referenced typename depth 0 index 0 _Base
| | |-TemplateTypeParmDecl 0xb57758 <col:28, col:37> col:37 referenced typename depth 0 index 1 _Derived
| | `-CXXRecordDecl 0xb57800 <line:1301:5, line:1303:7> line:1301:12 struct is_base_of definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'integral_constant<bool, __is_base_of(_Base, _Derived)>'
| |   `-CXXRecordDecl 0xb57cd0 <col:5, col:12> col:12 implicit struct is_base_of
| |-ClassTemplateDecl 0xb58470 <line:1305:3, line:1311:5> line:1308:12 __is_convertible_helper
| | |-TemplateTypeParmDecl 0xb57d78 <line:1305:12, col:21> col:21 referenced typename depth 0 index 0 _From
| | |-TemplateTypeParmDecl 0xb57df8 <col:28, col:37> col:37 referenced typename depth 0 index 1 _To
| | |-NonTypeTemplateParmDecl 0xb58338 <line:1306:12, line:1307:41> line:1306:17 'bool' depth 0 index 2
| | | `-TemplateArgument expr
| | |   `-ImplicitCastExpr 0xb58398 <col:19, line:1307:41> 'bool' <Dependent>
| | |     `-DependentScopeDeclRefExpr 0xb582f0 <line:1306:19, line:1307:41> '<dependent type>' lvalue
| | |-CXXRecordDecl 0xb583e0 <line:1308:5, line:1311:5> line:1308:12 struct __is_convertible_helper definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-CXXRecordDecl 0xb58740 <col:5, col:12> col:12 implicit struct __is_convertible_helper
| | | `-TypedefDecl 0xb58970 <line:1310:7, col:43> col:43 type 'typename is_void<_To>::type'
| | |   `-DependentNameType 0xb58900 'typename is_void<_To>::type' dependent
| | |-ClassTemplateSpecializationDecl 0xd3abb8 <line:1313:3, line:1330:5> line:1314:11 class __is_convertible_helper definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'const long &'
| | | |-TemplateArgument type 'long'
| | | |-TemplateArgument integral 0
| | | |-CXXRecordDecl 0xd3af40 prev 0xd3abb8 <col:5, col:11> col:11 implicit class __is_convertible_helper
| | | |-FunctionTemplateDecl 0xd3b210 <line:1316:7, line:1317:31> col:14 __test_aux
| | | | |-TemplateTypeParmDecl 0xd3afd0 <line:1316:16, col:25> col:25 typename depth 0 index 0 _To1
| | | | |-CXXMethodDecl 0xd3b170 <line:1317:2, col:31> col:14 __test_aux 'void (_To1) noexcept' static
| | | | | `-ParmVarDecl 0xd3b078 <col:25> col:29 '_To1'
| | | | `-CXXMethodDecl 0xd3d2c0 <col:2, col:31> col:14 referenced __test_aux 'void (long) noexcept' static
| | | |   |-TemplateArgument type 'long'
| | | |   `-ParmVarDecl 0xd3d1f8 <col:25> col:29 'long':'long'
| | | |-FunctionTemplateDecl 0xd3b7b8 <line:1319:7, line:1322:12> col:2 __test
| | | | |-TemplateTypeParmDecl 0xd3b2f0 <line:1319:16, col:25> col:25 typename depth 0 index 0 _From1
| | | | |-TemplateTypeParmDecl 0xd3b368 <col:33, col:42> col:42 typename depth 0 index 1 _To1
| | | | |-TemplateTypeParmDecl 0xd3b3e8 <line:1320:9, col:20> col:18 typename depth 0 index 2
| | | | | `-TemplateArgument type 'decltype(__test_aux<_To1>(std::declval<_From1>()))'
| | | | |-CXXMethodDecl 0xd3b718 <line:1321:2, line:1322:12> col:2 __test 'std::true_type (int)' static
| | | | | `-ParmVarDecl 0xd3b688 <col:9> col:12 'int'
| | | | `-CXXMethodDecl 0xd3d600 <line:1321:2, line:1322:12> col:2 referenced __test 'std::true_type (int)' static
| | | |   |-TemplateArgument type 'const long &'
| | | |   |-TemplateArgument type 'long'
| | | |   |-TemplateArgument type 'void'
| | | |   `-ParmVarDecl 0xd3d570 <col:9> col:12 'int'
| | | |-FunctionTemplateDecl 0xd3ba60 <line:1324:7, line:1326:12> col:2 __test
| | | | |-TemplateTypeParmDecl 0xd3b898 <line:1324:16> col:24 typename depth 0 index 0
| | | | |-TemplateTypeParmDecl 0xd3b918 <col:26> col:34 typename depth 0 index 1
| | | | |-CXXMethodDecl 0xd3b9c0 <line:1325:2, line:1326:12> col:2 __test 'std::false_type (...)' static
| | | | `-CXXMethodDecl 0xd3bd68 <line:1325:2, line:1326:12> col:2 __test 'std::false_type (...)' static
| | | |   |-TemplateArgument type 'const long &'
| | | |   `-TemplateArgument type 'long'
| | | |-AccessSpecDecl 0xd3bb38 <line:1328:5, col:11> col:5 public
| | | `-TypedefDecl 0xd3d8c8 <line:1329:7, col:47> col:47 referenced type 'decltype(__test<const long &, long>(0))':'std::integral_constant<bool, true>'
| | |   `-DecltypeType 0xd3d890 'decltype(__test<const long &, long>(0))' sugar
| | |     |-CallExpr 0xd3d840 <col:24, col:44> 'std::true_type':'std::integral_constant<bool, true>'
| | |     | |-ImplicitCastExpr 0xd3d828 <col:24, col:41> 'std::true_type (*)(int)' <FunctionToPointerDecay>
| | |     | | `-DeclRefExpr 0xd3d730 <col:24, col:41> 'std::true_type (int)' lvalue CXXMethod 0xd3d600 '__test' 'std::true_type (int)' (FunctionTemplate 0xd3b7b8 '__test') non_odr_use_unevaluated
| | |     | `-IntegerLiteral 0xb59ca8 <col:43> 'int' 0
| | |     `-TypedefType 0xa0d460 'std::true_type' sugar
| | |       |-Typedef 0xace398 'true_type'
| | |       `-TemplateSpecializationType 0xace2b0 'integral_constant<bool, true>' sugar integral_constant
| | |         |-TemplateArgument type 'bool'
| | |         |-TemplateArgument expr
| | |         | `-ConstantExpr 0xace178 <line:75:35> 'bool' Int: 1
| | |         |   `-CXXBoolLiteralExpr 0xace118 <col:35> 'bool' true
| | |         `-RecordType 0xace290 'std::integral_constant<bool, true>'
| | |           `-ClassTemplateSpecialization 0xace198 'integral_constant'
| | |-ClassTemplateSpecializationDecl 0xd5efe0 <line:1313:3, line:1330:5> line:1314:11 class __is_convertible_helper definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'const std::chrono::duration<long, std::ratio<1, 1000000000> > &'
| | | |-TemplateArgument type 'long'
| | | |-TemplateArgument integral 0
| | | |-CXXRecordDecl 0xd5f320 prev 0xd5efe0 <col:5, col:11> col:11 implicit class __is_convertible_helper
| | | |-FunctionTemplateDecl 0xd5f5c0 <line:1316:7, line:1317:31> col:14 __test_aux
| | | | |-TemplateTypeParmDecl 0xd5f3b0 <line:1316:16, col:25> col:25 typename depth 0 index 0 _To1
| | | | `-CXXMethodDecl 0xd5f520 <line:1317:2, col:31> col:14 __test_aux 'void (_To1) noexcept' static
| | | |   `-ParmVarDecl 0xd5f458 <col:25> col:29 '_To1'
| | | |-FunctionTemplateDecl 0xd5fb28 <line:1319:7, line:1322:12> col:2 __test
| | | | |-TemplateTypeParmDecl 0xd5f6a0 <line:1319:16, col:25> col:25 typename depth 0 index 0 _From1
| | | | |-TemplateTypeParmDecl 0xd5f718 <col:33, col:42> col:42 typename depth 0 index 1 _To1
| | | | |-TemplateTypeParmDecl 0xd5f798 <line:1320:9, col:20> col:18 typename depth 0 index 2
| | | | | `-TemplateArgument type 'decltype(__test_aux<_To1>(std::declval<_From1>()))'
| | | | `-CXXMethodDecl 0xd5fa88 <line:1321:2, line:1322:12> col:2 __test 'std::true_type (int)' static
| | | |   `-ParmVarDecl 0xd5f9f8 <col:9> col:12 'int'
| | | |-FunctionTemplateDecl 0xd5fdd0 <line:1324:7, line:1326:12> col:2 __test
| | | | |-TemplateTypeParmDecl 0xd5fc08 <line:1324:16> col:24 typename depth 0 index 0
| | | | |-TemplateTypeParmDecl 0xd5fc88 <col:26> col:34 typename depth 0 index 1
| | | | |-CXXMethodDecl 0xd5fd30 <line:1325:2, line:1326:12> col:2 __test 'std::false_type (...)' static
| | | | `-CXXMethodDecl 0xd60058 <line:1325:2, line:1326:12> col:2 referenced __test 'std::false_type (...)' static
| | | |   |-TemplateArgument type 'const std::chrono::duration<long, std::ratio<1, 1000000000> > &'
| | | |   `-TemplateArgument type 'long'
| | | |-AccessSpecDecl 0xd5fea8 <line:1328:5, col:11> col:5 public
| | | `-TypedefDecl 0xd61628 <line:1329:7, col:47> col:47 referenced type 'decltype(__test<const std::chrono::duration<long, std::ratio<1, 1000000000> > &, long>(0))':'std::integral_constant<bool, false>'
| | |   `-DecltypeType 0xd615f0 'decltype(__test<const std::chrono::duration<long, std::ratio<1, 1000000000> > &, long>(0))' sugar
| | |     |-CallExpr 0xd615a0 <col:24, col:44> 'std::false_type':'std::integral_constant<bool, false>'
| | |     | |-ImplicitCastExpr 0xd61588 <col:24, col:41> 'std::false_type (*)(...)' <FunctionToPointerDecay>
| | |     | | `-DeclRefExpr 0xd61498 <col:24, col:41> 'std::false_type (...)' lvalue CXXMethod 0xd60058 '__test' 'std::false_type (...)' (FunctionTemplate 0xd5fdd0 '__test') non_odr_use_unevaluated
| | |     | `-IntegerLiteral 0xb59ca8 <col:43> 'int' 0
| | |     `-TypedefType 0xacf410 'std::false_type' sugar
| | |       |-Typedef 0xace658 'false_type'
| | |       `-TemplateSpecializationType 0xace570 'integral_constant<bool, false>' sugar integral_constant
| | |         |-TemplateArgument type 'bool'
| | |         |-TemplateArgument expr
| | |         | `-ConstantExpr 0xace430 <line:78:35> 'bool' Int: 0
| | |         |   `-CXXBoolLiteralExpr 0xace400 <col:35> 'bool' false
| | |         `-RecordType 0xace550 'std::integral_constant<bool, false>'
| | |           `-ClassTemplateSpecialization 0xace450 'integral_constant'
| | |-ClassTemplateSpecializationDecl 0xd9a9b0 <line:1313:3, line:1330:5> line:1314:11 class __is_convertible_helper definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'const std::chrono::duration<long, std::ratio<1, 1> > &'
| | | |-TemplateArgument type 'long'
| | | |-TemplateArgument integral 0
| | | |-CXXRecordDecl 0xd9acf0 prev 0xd9a9b0 <col:5, col:11> col:11 implicit class __is_convertible_helper
| | | |-FunctionTemplateDecl 0xd9af90 <line:1316:7, line:1317:31> col:14 __test_aux
| | | | |-TemplateTypeParmDecl 0xd9ad80 <line:1316:16, col:25> col:25 typename depth 0 index 0 _To1
| | | | `-CXXMethodDecl 0xd9aef0 <line:1317:2, col:31> col:14 __test_aux 'void (_To1) noexcept' static
| | | |   `-ParmVarDecl 0xd9ae28 <col:25> col:29 '_To1'
| | | |-FunctionTemplateDecl 0xd9b4f8 <line:1319:7, line:1322:12> col:2 __test
| | | | |-TemplateTypeParmDecl 0xd9b070 <line:1319:16, col:25> col:25 typename depth 0 index 0 _From1
| | | | |-TemplateTypeParmDecl 0xd9b0e8 <col:33, col:42> col:42 typename depth 0 index 1 _To1
| | | | |-TemplateTypeParmDecl 0xd9b168 <line:1320:9, col:20> col:18 typename depth 0 index 2
| | | | | `-TemplateArgument type 'decltype(__test_aux<_To1>(std::declval<_From1>()))'
| | | | `-CXXMethodDecl 0xd9b458 <line:1321:2, line:1322:12> col:2 __test 'std::true_type (int)' static
| | | |   `-ParmVarDecl 0xd9b3c8 <col:9> col:12 'int'
| | | |-FunctionTemplateDecl 0xd9b7a0 <line:1324:7, line:1326:12> col:2 __test
| | | | |-TemplateTypeParmDecl 0xd9b5d8 <line:1324:16> col:24 typename depth 0 index 0
| | | | |-TemplateTypeParmDecl 0xd9b658 <col:26> col:34 typename depth 0 index 1
| | | | |-CXXMethodDecl 0xd9b700 <line:1325:2, line:1326:12> col:2 __test 'std::false_type (...)' static
| | | | `-CXXMethodDecl 0xd9ba28 <line:1325:2, line:1326:12> col:2 referenced __test 'std::false_type (...)' static
| | | |   |-TemplateArgument type 'const std::chrono::duration<long, std::ratio<1, 1> > &'
| | | |   `-TemplateArgument type 'long'
| | | |-AccessSpecDecl 0xd9b878 <line:1328:5, col:11> col:5 public
| | | `-TypedefDecl 0xd9cfa8 <line:1329:7, col:47> col:47 referenced type 'decltype(__test<const std::chrono::duration<long, std::ratio<1, 1> > &, long>(0))':'std::integral_constant<bool, false>'
| | |   `-DecltypeType 0xd9cf70 'decltype(__test<const std::chrono::duration<long, std::ratio<1, 1> > &, long>(0))' sugar
| | |     |-CallExpr 0xd9cf18 <col:24, col:44> 'std::false_type':'std::integral_constant<bool, false>'
| | |     | |-ImplicitCastExpr 0xd9cf00 <col:24, col:41> 'std::false_type (*)(...)' <FunctionToPointerDecay>
| | |     | | `-DeclRefExpr 0xd9ce68 <col:24, col:41> 'std::false_type (...)' lvalue CXXMethod 0xd9ba28 '__test' 'std::false_type (...)' (FunctionTemplate 0xd9b7a0 '__test') non_odr_use_unevaluated
| | |     | `-IntegerLiteral 0xb59ca8 <col:43> 'int' 0
| | |     `-TypedefType 0xacf410 'std::false_type' sugar
| | |       |-Typedef 0xace658 'false_type'
| | |       `-TemplateSpecializationType 0xace570 'integral_constant<bool, false>' sugar integral_constant
| | |         |-TemplateArgument type 'bool'
| | |         |-TemplateArgument expr
| | |         | `-ConstantExpr 0xace430 <line:78:35> 'bool' Int: 0
| | |         |   `-CXXBoolLiteralExpr 0xace400 <col:35> 'bool' false
| | |         `-RecordType 0xace550 'std::integral_constant<bool, false>'
| | |           `-ClassTemplateSpecialization 0xace450 'integral_constant'
| | |-ClassTemplateSpecializationDecl 0xdb4cb8 <line:1313:3, line:1330:5> line:1314:11 class __is_convertible_helper definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | | |-TemplateArgument type 'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | | |-TemplateArgument integral 0
| | | |-CXXRecordDecl 0xdb5030 prev 0xdb4cb8 <col:5, col:11> col:11 implicit class __is_convertible_helper
| | | |-FunctionTemplateDecl 0xdb52d0 <line:1316:7, line:1317:31> col:14 __test_aux
| | | | |-TemplateTypeParmDecl 0xdb50c0 <line:1316:16, col:25> col:25 typename depth 0 index 0 _To1
| | | | |-CXXMethodDecl 0xdb5230 <line:1317:2, col:31> col:14 __test_aux 'void (_To1) noexcept' static
| | | | | `-ParmVarDecl 0xdb5168 <col:25> col:29 '_To1'
| | | | `-CXXMethodDecl 0xdb7200 <col:2, col:31> col:14 referenced __test_aux 'void (std::chrono::duration<long, std::ratio<1, 1000000000> >) noexcept' static
| | | |   |-TemplateArgument type 'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | | |   `-ParmVarDecl 0xdb7108 <col:25> col:29 'std::chrono::duration<long, std::ratio<1, 1000000000> >':'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | | |-FunctionTemplateDecl 0xdb5838 <line:1319:7, line:1322:12> col:2 __test
| | | | |-TemplateTypeParmDecl 0xdb53b0 <line:1319:16, col:25> col:25 typename depth 0 index 0 _From1
| | | | |-TemplateTypeParmDecl 0xdb5428 <col:33, col:42> col:42 typename depth 0 index 1 _To1
| | | | |-TemplateTypeParmDecl 0xdb54a8 <line:1320:9, col:20> col:18 typename depth 0 index 2
| | | | | `-TemplateArgument type 'decltype(__test_aux<_To1>(std::declval<_From1>()))'
| | | | |-CXXMethodDecl 0xdb5798 <line:1321:2, line:1322:12> col:2 __test 'std::true_type (int)' static
| | | | | `-ParmVarDecl 0xdb5708 <col:9> col:12 'int'
| | | | `-CXXMethodDecl 0xdb8300 <line:1321:2, line:1322:12> col:2 referenced __test 'std::true_type (int)' static
| | | |   |-TemplateArgument type 'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | | |   |-TemplateArgument type 'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | | |   |-TemplateArgument type 'void'
| | | |   `-ParmVarDecl 0xdb8270 <col:9> col:12 'int'
| | | |-FunctionTemplateDecl 0xdb5b40 <line:1324:7, line:1326:12> col:2 __test
| | | | |-TemplateTypeParmDecl 0xdb5980 <line:1324:16> col:24 typename depth 0 index 0
| | | | |-TemplateTypeParmDecl 0xdb59f8 <col:26> col:34 typename depth 0 index 1
| | | | |-CXXMethodDecl 0xdb5aa0 <line:1325:2, line:1326:12> col:2 __test 'std::false_type (...)' static
| | | | `-CXXMethodDecl 0xdb5dc8 <line:1325:2, line:1326:12> col:2 __test 'std::false_type (...)' static
| | | |   |-TemplateArgument type 'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | | |   `-TemplateArgument type 'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | | |-AccessSpecDecl 0xdb5c18 <line:1328:5, col:11> col:5 public
| | | `-TypedefDecl 0xdb8568 <line:1329:7, col:47> col:47 referenced type 'decltype(__test<std::chrono::duration<long, std::ratio<1, 1000000000> >, std::chrono::duration<long, std::ratio<1, 1000000000> > >(0))':'std::integral_constant<bool, true>'
| | |   `-DecltypeType 0xdb8530 'decltype(__test<std::chrono::duration<long, std::ratio<1, 1000000000> >, std::chrono::duration<long, std::ratio<1, 1000000000> > >(0))' sugar
| | |     |-CallExpr 0xdb84e0 <col:24, col:44> 'std::true_type':'std::integral_constant<bool, true>'
| | |     | |-ImplicitCastExpr 0xdb84c8 <col:24, col:41> 'std::true_type (*)(int)' <FunctionToPointerDecay>
| | |     | | `-DeclRefExpr 0xdb8430 <col:24, col:41> 'std::true_type (int)' lvalue CXXMethod 0xdb8300 '__test' 'std::true_type (int)' (FunctionTemplate 0xdb5838 '__test') non_odr_use_unevaluated
| | |     | `-IntegerLiteral 0xb59ca8 <col:43> 'int' 0
| | |     `-TypedefType 0xa0d460 'std::true_type' sugar
| | |       |-Typedef 0xace398 'true_type'
| | |       `-TemplateSpecializationType 0xace2b0 'integral_constant<bool, true>' sugar integral_constant
| | |         |-TemplateArgument type 'bool'
| | |         |-TemplateArgument expr
| | |         | `-ConstantExpr 0xace178 <line:75:35> 'bool' Int: 1
| | |         |   `-CXXBoolLiteralExpr 0xace118 <col:35> 'bool' true
| | |         `-RecordType 0xace290 'std::integral_constant<bool, true>'
| | |           `-ClassTemplateSpecialization 0xace198 'integral_constant'
| | |-ClassTemplateSpecializationDecl 0xdcac98 <line:1313:3, line:1330:5> line:1314:11 class __is_convertible_helper definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'const long double &'
| | | |-TemplateArgument type 'long double'
| | | |-TemplateArgument integral 0
| | | |-CXXRecordDecl 0xdcb020 prev 0xdcac98 <col:5, col:11> col:11 implicit class __is_convertible_helper
| | | |-FunctionTemplateDecl 0xdcb2c0 <line:1316:7, line:1317:31> col:14 __test_aux
| | | | |-TemplateTypeParmDecl 0xdcb0b0 <line:1316:16, col:25> col:25 typename depth 0 index 0 _To1
| | | | |-CXXMethodDecl 0xdcb220 <line:1317:2, col:31> col:14 __test_aux 'void (_To1) noexcept' static
| | | | | `-ParmVarDecl 0xdcb158 <col:25> col:29 '_To1'
| | | | `-CXXMethodDecl 0xdcd5a0 <col:2, col:31> col:14 referenced __test_aux 'void (long double) noexcept' static
| | | |   |-TemplateArgument type 'long double'
| | | |   `-ParmVarDecl 0xdcd4a8 <col:25> col:29 'long double':'long double'
| | | |-FunctionTemplateDecl 0xdcb828 <line:1319:7, line:1322:12> col:2 __test
| | | | |-TemplateTypeParmDecl 0xdcb3a0 <line:1319:16, col:25> col:25 typename depth 0 index 0 _From1
| | | | |-TemplateTypeParmDecl 0xdcb418 <col:33, col:42> col:42 typename depth 0 index 1 _To1
| | | | |-TemplateTypeParmDecl 0xdcb498 <line:1320:9, col:20> col:18 typename depth 0 index 2
| | | | | `-TemplateArgument type 'decltype(__test_aux<_To1>(std::declval<_From1>()))'
| | | | |-CXXMethodDecl 0xdcb788 <line:1321:2, line:1322:12> col:2 __test 'std::true_type (int)' static
| | | | | `-ParmVarDecl 0xdcb6f8 <col:9> col:12 'int'
| | | | `-CXXMethodDecl 0xdcd8e0 <line:1321:2, line:1322:12> col:2 referenced __test 'std::true_type (int)' static
| | | |   |-TemplateArgument type 'const long double &'
| | | |   |-TemplateArgument type 'long double'
| | | |   |-TemplateArgument type 'void'
| | | |   `-ParmVarDecl 0xdcd850 <col:9> col:12 'int'
| | | |-FunctionTemplateDecl 0xdcbad0 <line:1324:7, line:1326:12> col:2 __test
| | | | |-TemplateTypeParmDecl 0xdcb908 <line:1324:16> col:24 typename depth 0 index 0
| | | | |-TemplateTypeParmDecl 0xdcb988 <col:26> col:34 typename depth 0 index 1
| | | | |-CXXMethodDecl 0xdcba30 <line:1325:2, line:1326:12> col:2 __test 'std::false_type (...)' static
| | | | `-CXXMethodDecl 0xdcbd58 <line:1325:2, line:1326:12> col:2 __test 'std::false_type (...)' static
| | | |   |-TemplateArgument type 'const long double &'
| | | |   `-TemplateArgument type 'long double'
| | | |-AccessSpecDecl 0xdcbba8 <line:1328:5, col:11> col:5 public
| | | `-TypedefDecl 0xdcdb48 <line:1329:7, col:47> col:47 referenced type 'decltype(__test<const long double &, long double>(0))':'std::integral_constant<bool, true>'
| | |   `-DecltypeType 0xdcdb10 'decltype(__test<const long double &, long double>(0))' sugar
| | |     |-CallExpr 0xdcdac0 <col:24, col:44> 'std::true_type':'std::integral_constant<bool, true>'
| | |     | |-ImplicitCastExpr 0xdcdaa8 <col:24, col:41> 'std::true_type (*)(int)' <FunctionToPointerDecay>
| | |     | | `-DeclRefExpr 0xdcda10 <col:24, col:41> 'std::true_type (int)' lvalue CXXMethod 0xdcd8e0 '__test' 'std::true_type (int)' (FunctionTemplate 0xdcb828 '__test') non_odr_use_unevaluated
| | |     | `-IntegerLiteral 0xb59ca8 <col:43> 'int' 0
| | |     `-TypedefType 0xa0d460 'std::true_type' sugar
| | |       |-Typedef 0xace398 'true_type'
| | |       `-TemplateSpecializationType 0xace2b0 'integral_constant<bool, true>' sugar integral_constant
| | |         |-TemplateArgument type 'bool'
| | |         |-TemplateArgument expr
| | |         | `-ConstantExpr 0xace178 <line:75:35> 'bool' Int: 1
| | |         |   `-CXXBoolLiteralExpr 0xace118 <col:35> 'bool' true
| | |         `-RecordType 0xace290 'std::integral_constant<bool, true>'
| | |           `-ClassTemplateSpecialization 0xace198 'integral_constant'
| | |-ClassTemplateSpecializationDecl 0xe64f48 <line:1313:3, line:1330:5> line:1314:11 class __is_convertible_helper definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'const double &'
| | | |-TemplateArgument type 'double'
| | | |-TemplateArgument integral 0
| | | |-CXXRecordDecl 0xe652d0 prev 0xe64f48 <col:5, col:11> col:11 implicit class __is_convertible_helper
| | | |-FunctionTemplateDecl 0xe65570 <line:1316:7, line:1317:31> col:14 __test_aux
| | | | |-TemplateTypeParmDecl 0xe65360 <line:1316:16, col:25> col:25 typename depth 0 index 0 _To1
| | | | |-CXXMethodDecl 0xe654d0 <line:1317:2, col:31> col:14 __test_aux 'void (_To1) noexcept' static
| | | | | `-ParmVarDecl 0xe65408 <col:25> col:29 '_To1'
| | | | `-CXXMethodDecl 0xe68390 <col:2, col:31> col:14 referenced __test_aux 'void (double) noexcept' static
| | | |   |-TemplateArgument type 'double'
| | | |   `-ParmVarDecl 0xe68298 <col:25> col:29 'double':'double'
| | | |-FunctionTemplateDecl 0xe65ad8 <line:1319:7, line:1322:12> col:2 __test
| | | | |-TemplateTypeParmDecl 0xe65650 <line:1319:16, col:25> col:25 typename depth 0 index 0 _From1
| | | | |-TemplateTypeParmDecl 0xe656c8 <col:33, col:42> col:42 typename depth 0 index 1 _To1
| | | | |-TemplateTypeParmDecl 0xe65748 <line:1320:9, col:20> col:18 typename depth 0 index 2
| | | | | `-TemplateArgument type 'decltype(__test_aux<_To1>(std::declval<_From1>()))'
| | | | |-CXXMethodDecl 0xe65a38 <line:1321:2, line:1322:12> col:2 __test 'std::true_type (int)' static
| | | | | `-ParmVarDecl 0xe659a8 <col:9> col:12 'int'
| | | | `-CXXMethodDecl 0xe686d0 <line:1321:2, line:1322:12> col:2 referenced __test 'std::true_type (int)' static
| | | |   |-TemplateArgument type 'const double &'
| | | |   |-TemplateArgument type 'double'
| | | |   |-TemplateArgument type 'void'
| | | |   `-ParmVarDecl 0xe68640 <col:9> col:12 'int'
| | | |-FunctionTemplateDecl 0xe65d80 <line:1324:7, line:1326:12> col:2 __test
| | | | |-TemplateTypeParmDecl 0xe65bb8 <line:1324:16> col:24 typename depth 0 index 0
| | | | |-TemplateTypeParmDecl 0xe65c38 <col:26> col:34 typename depth 0 index 1
| | | | |-CXXMethodDecl 0xe65ce0 <line:1325:2, line:1326:12> col:2 __test 'std::false_type (...)' static
| | | | `-CXXMethodDecl 0xe66008 <line:1325:2, line:1326:12> col:2 __test 'std::false_type (...)' static
| | | |   |-TemplateArgument type 'const double &'
| | | |   `-TemplateArgument type 'double'
| | | |-AccessSpecDecl 0xe65e58 <line:1328:5, col:11> col:5 public
| | | `-TypedefDecl 0xe68938 <line:1329:7, col:47> col:47 referenced type 'decltype(__test<const double &, double>(0))':'std::integral_constant<bool, true>'
| | |   `-DecltypeType 0xe68900 'decltype(__test<const double &, double>(0))' sugar
| | |     |-CallExpr 0xe688b0 <col:24, col:44> 'std::true_type':'std::integral_constant<bool, true>'
| | |     | |-ImplicitCastExpr 0xe68898 <col:24, col:41> 'std::true_type (*)(int)' <FunctionToPointerDecay>
| | |     | | `-DeclRefExpr 0xe68800 <col:24, col:41> 'std::true_type (int)' lvalue CXXMethod 0xe686d0 '__test' 'std::true_type (int)' (FunctionTemplate 0xe65ad8 '__test') non_odr_use_unevaluated
| | |     | `-IntegerLiteral 0xb59ca8 <col:43> 'int' 0
| | |     `-TypedefType 0xa0d460 'std::true_type' sugar
| | |       |-Typedef 0xace398 'true_type'
| | |       `-TemplateSpecializationType 0xace2b0 'integral_constant<bool, true>' sugar integral_constant
| | |         |-TemplateArgument type 'bool'
| | |         |-TemplateArgument expr
| | |         | `-ConstantExpr 0xace178 <line:75:35> 'bool' Int: 1
| | |         |   `-CXXBoolLiteralExpr 0xace118 <col:35> 'bool' true
| | |         `-RecordType 0xace290 'std::integral_constant<bool, true>'
| | |           `-ClassTemplateSpecialization 0xace198 'integral_constant'
| | `-ClassTemplateSpecializationDecl 0xe70c60 <line:1313:3, line:1330:5> line:1314:11 class __is_convertible_helper definition
| |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-TemplateArgument type 'const std::chrono::duration<double, std::ratio<1, 1> > &'
| |   |-TemplateArgument type 'double'
| |   |-TemplateArgument integral 0
| |   |-CXXRecordDecl 0xe70fa0 prev 0xe70c60 <col:5, col:11> col:11 implicit class __is_convertible_helper
| |   |-FunctionTemplateDecl 0xe71240 <line:1316:7, line:1317:31> col:14 __test_aux
| |   | |-TemplateTypeParmDecl 0xe71030 <line:1316:16, col:25> col:25 typename depth 0 index 0 _To1
| |   | `-CXXMethodDecl 0xe711a0 <line:1317:2, col:31> col:14 __test_aux 'void (_To1) noexcept' static
| |   |   `-ParmVarDecl 0xe710d8 <col:25> col:29 '_To1'
| |   |-FunctionTemplateDecl 0xe717a8 <line:1319:7, line:1322:12> col:2 __test
| |   | |-TemplateTypeParmDecl 0xe71320 <line:1319:16, col:25> col:25 typename depth 0 index 0 _From1
| |   | |-TemplateTypeParmDecl 0xe71398 <col:33, col:42> col:42 typename depth 0 index 1 _To1
| |   | |-TemplateTypeParmDecl 0xe71418 <line:1320:9, col:20> col:18 typename depth 0 index 2
| |   | | `-TemplateArgument type 'decltype(__test_aux<_To1>(std::declval<_From1>()))'
| |   | `-CXXMethodDecl 0xe71708 <line:1321:2, line:1322:12> col:2 __test 'std::true_type (int)' static
| |   |   `-ParmVarDecl 0xe71678 <col:9> col:12 'int'
| |   |-FunctionTemplateDecl 0xe71a50 <line:1324:7, line:1326:12> col:2 __test
| |   | |-TemplateTypeParmDecl 0xe71888 <line:1324:16> col:24 typename depth 0 index 0
| |   | |-TemplateTypeParmDecl 0xe71908 <col:26> col:34 typename depth 0 index 1
| |   | |-CXXMethodDecl 0xe719b0 <line:1325:2, line:1326:12> col:2 __test 'std::false_type (...)' static
| |   | `-CXXMethodDecl 0xe71cd8 <line:1325:2, line:1326:12> col:2 referenced __test 'std::false_type (...)' static
| |   |   |-TemplateArgument type 'const std::chrono::duration<double, std::ratio<1, 1> > &'
| |   |   `-TemplateArgument type 'double'
| |   |-AccessSpecDecl 0xe71b28 <line:1328:5, col:11> col:5 public
| |   `-TypedefDecl 0xe73258 <line:1329:7, col:47> col:47 referenced type 'decltype(__test<const std::chrono::duration<double, std::ratio<1, 1> > &, double>(0))':'std::integral_constant<bool, false>'
| |     `-DecltypeType 0xe73220 'decltype(__test<const std::chrono::duration<double, std::ratio<1, 1> > &, double>(0))' sugar
| |       |-CallExpr 0xe731c8 <col:24, col:44> 'std::false_type':'std::integral_constant<bool, false>'
| |       | |-ImplicitCastExpr 0xe731b0 <col:24, col:41> 'std::false_type (*)(...)' <FunctionToPointerDecay>
| |       | | `-DeclRefExpr 0xe73118 <col:24, col:41> 'std::false_type (...)' lvalue CXXMethod 0xe71cd8 '__test' 'std::false_type (...)' (FunctionTemplate 0xe71a50 '__test') non_odr_use_unevaluated
| |       | `-IntegerLiteral 0xb59ca8 <col:43> 'int' 0
| |       `-TypedefType 0xacf410 'std::false_type' sugar
| |         |-Typedef 0xace658 'false_type'
| |         `-TemplateSpecializationType 0xace570 'integral_constant<bool, false>' sugar integral_constant
| |           |-TemplateArgument type 'bool'
| |           |-TemplateArgument expr
| |           | `-ConstantExpr 0xace430 <line:78:35> 'bool' Int: 0
| |           |   `-CXXBoolLiteralExpr 0xace400 <col:35> 'bool' false
| |           `-RecordType 0xace550 'std::integral_constant<bool, false>'
| |             `-ClassTemplateSpecialization 0xace450 'integral_constant'
| |-ClassTemplatePartialSpecializationDecl 0xb58cd0 <line:1313:3, line:1330:5> line:1314:11 class __is_convertible_helper definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument type 'type-parameter-0-1'
| | |-TemplateArgument integral 0
| | |-TemplateTypeParmDecl 0xb589e0 <line:1313:12, col:21> col:21 referenced typename depth 0 index 0 _From
| | |-TemplateTypeParmDecl 0xb58a58 <col:28, col:37> col:37 referenced typename depth 0 index 1 _To
| | |-CXXRecordDecl 0xb58fc8 <line:1314:5, col:11> col:11 implicit class __is_convertible_helper
| | |-FunctionTemplateDecl 0xb59300 <line:1316:7, line:1317:31> col:14 __test_aux
| | | |-TemplateTypeParmDecl 0xb59058 <line:1316:16, col:25> col:25 referenced typename depth 1 index 0 _To1
| | | `-CXXMethodDecl 0xb59260 <line:1317:2, col:31> col:14 __test_aux 'void (_To1) noexcept' static
| | |   `-ParmVarDecl 0xb59138 <col:25> col:29 '_To1'
| | |-FunctionTemplateDecl 0xb598f0 <line:1319:7, line:1322:12> col:2 __test
| | | |-TemplateTypeParmDecl 0xb59360 <line:1319:16, col:25> col:25 referenced typename depth 1 index 0 _From1
| | | |-TemplateTypeParmDecl 0xb593d8 <col:33, col:42> col:42 referenced typename depth 1 index 1 _To1
| | | |-TemplateTypeParmDecl 0xb596c8 <line:1320:9, col:20> col:18 typename depth 1 index 2
| | | | `-TemplateArgument type 'decltype(__test_aux<_To1>(std::declval<_From1>()))'
| | | `-CXXMethodDecl 0xb59850 <line:1321:2, line:1322:12> col:2 __test 'std::true_type (int)' static
| | |   `-ParmVarDecl 0xb597c0 <col:9> col:12 'int'
| | |-FunctionTemplateDecl 0xb59b30 <line:1324:7, line:1326:12> col:2 __test
| | | |-TemplateTypeParmDecl 0xb59950 <line:1324:16> col:24 typename depth 1 index 0
| | | |-TemplateTypeParmDecl 0xb599c8 <col:26> col:34 typename depth 1 index 1
| | | `-CXXMethodDecl 0xb59a90 <line:1325:2, line:1326:12> col:2 __test 'std::false_type (...)' static
| | |-AccessSpecDecl 0xb59b88 <line:1328:5, col:11> col:5 public
| | `-TypedefDecl 0xb5c790 <line:1329:7, col:47> col:47 type 'decltype(__test<_From, _To>(0))'
| |   `-DecltypeType 0xb59d30 'decltype(__test<_From, _To>(0))' dependent
| |     `-CallExpr 0xb59cc8 <col:24, col:44> '<dependent type>'
| |       |-UnresolvedLookupExpr 0xb59be8 <col:24, col:41> '<dependent type>' lvalue (no ADL) = '__test' 0xb59b30 0xb598f0
| |       `-IntegerLiteral 0xb59ca8 <col:43> 'int' 0
| |-ClassTemplateDecl 0xb5c9b0 <line:1334:3, line:1337:7> line:1335:12 is_convertible
| | |-TemplateTypeParmDecl 0xb5c800 <line:1334:12, col:21> col:21 referenced typename depth 0 index 0 _From
| | |-TemplateTypeParmDecl 0xb5c878 <col:28, col:37> col:37 referenced typename depth 0 index 1 _To
| | |-CXXRecordDecl 0xb5c920 <line:1335:5, line:1337:7> line:1335:12 struct is_convertible definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__is_convertible_helper<_From, _To>::type'
| | | `-CXXRecordDecl 0xb5d250 <col:5, col:12> col:12 implicit struct is_convertible
| | |-ClassTemplateSpecializationDecl 0xd36018 <line:1334:3, line:1337:7> line:1335:12 struct is_convertible definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__is_convertible_helper<const long &, long>::type':'std::integral_constant<bool, true>'
| | | |-TemplateArgument type 'const long &'
| | | |-TemplateArgument type 'long'
| | | `-CXXRecordDecl 0xd3d9e0 prev 0xd36018 <col:5, col:12> col:12 implicit struct is_convertible
| | |-ClassTemplateSpecializationDecl 0xd5b898 <line:1334:3, line:1337:7> line:1335:12 struct is_convertible definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__is_convertible_helper<const duration<long, ratio<1, 1000000000> > &, long>::type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'const std::chrono::duration<long, std::ratio<1, 1000000000> > &'
| | | |-TemplateArgument type 'long'
| | | `-CXXRecordDecl 0xd61740 prev 0xd5b898 <col:5, col:12> col:12 implicit struct is_convertible
| | |-ClassTemplateSpecializationDecl 0xd97aa8 <line:1334:3, line:1337:7> line:1335:12 struct is_convertible definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__is_convertible_helper<const duration<long, ratio<1, 1> > &, long>::type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'const std::chrono::duration<long, std::ratio<1, 1> > &'
| | | |-TemplateArgument type 'long'
| | | `-CXXRecordDecl 0xd9d0c0 prev 0xd97aa8 <col:5, col:12> col:12 implicit struct is_convertible
| | |-ClassTemplateSpecializationDecl 0xdb0bf8 <line:1334:3, line:1337:7> line:1335:12 struct is_convertible definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__is_convertible_helper<duration<long, ratio<1, 1000000000> >, duration<long, ratio<1, 1000000000> > >::type':'std::integral_constant<bool, true>'
| | | |-TemplateArgument type 'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | | |-TemplateArgument type 'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | | `-CXXRecordDecl 0xdb8680 prev 0xdb0bf8 <col:5, col:12> col:12 implicit struct is_convertible
| | |-ClassTemplateSpecializationDecl 0xdc69f8 <line:1334:3, line:1337:7> line:1335:12 struct is_convertible definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__is_convertible_helper<const long double &, long double>::type':'std::integral_constant<bool, true>'
| | | |-TemplateArgument type 'const long double &'
| | | |-TemplateArgument type 'long double'
| | | `-CXXRecordDecl 0xdcdc60 prev 0xdc69f8 <col:5, col:12> col:12 implicit struct is_convertible
| | |-ClassTemplateSpecializationDecl 0xe61618 <line:1334:3, line:1337:7> line:1335:12 struct is_convertible definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__is_convertible_helper<const double &, double>::type':'std::integral_constant<bool, true>'
| | | |-TemplateArgument type 'const double &'
| | | |-TemplateArgument type 'double'
| | | `-CXXRecordDecl 0xe68a50 prev 0xe61618 <col:5, col:12> col:12 implicit struct is_convertible
| | `-ClassTemplateSpecializationDecl 0xe6d068 <line:1334:3, line:1337:7> line:1335:12 struct is_convertible definition
| |   |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__is_convertible_helper<const duration<double, ratio<1, 1> > &, double>::type':'std::integral_constant<bool, false>'
| |   |-TemplateArgument type 'const std::chrono::duration<double, std::ratio<1, 1> > &'
| |   |-TemplateArgument type 'double'
| |   `-CXXRecordDecl 0xe73370 prev 0xe6d068 <col:5, col:12> col:12 implicit struct is_convertible
| |-ClassTemplateDecl 0xb5d428 <line:1381:3, line:1383:29> line:1382:12 remove_const
| | |-TemplateTypeParmDecl 0xb5d2f8 <line:1381:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0xb5d398 <line:1382:5, line:1383:29> line:1382:12 struct remove_const definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-CXXRecordDecl 0xb5d680 <col:5, col:12> col:12 implicit struct remove_const
| | | `-TypedefDecl 0xb5d720 <line:1383:7, col:23> col:23 type '_Tp'
| | |   `-TemplateTypeParmType 0xb5d350 '_Tp' dependent depth 0 index 0
| | |     `-TemplateTypeParm 0xb5d2f8 '_Tp'
| | |-ClassTemplateSpecializationDecl 0xad6f80 <line:1381:3, line:1383:29> line:1382:12 struct remove_const definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'wchar_t'
| | | |-CXXRecordDecl 0xad71b8 prev 0xad6f80 <col:5, col:12> col:12 implicit struct remove_const
| | | `-TypedefDecl 0xad7288 <line:1383:7, col:23> col:23 referenced type 'wchar_t':'wchar_t'
| | |   `-SubstTemplateTypeParmType 0xad7250 'wchar_t' sugar
| | |     |-TemplateTypeParmType 0xb5d350 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0xb5d2f8 '_Tp'
| | |     `-BuiltinType 0x7db860 'wchar_t'
| | |-ClassTemplateSpecializationDecl 0xb9b190 <line:1381:3, line:1383:29> line:1382:12 struct remove_const definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'unsigned int'
| | | |-CXXRecordDecl 0xb9b3c8 prev 0xb9b190 <col:5, col:12> col:12 implicit struct remove_const
| | | `-TypedefDecl 0xb9b498 <line:1383:7, col:23> col:23 referenced type 'unsigned int':'unsigned int'
| | |   `-SubstTemplateTypeParmType 0xb9b460 'unsigned int' sugar
| | |     |-TemplateTypeParmType 0xb5d350 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0xb5d2f8 '_Tp'
| | |     `-BuiltinType 0x7db420 'unsigned int'
| | |-ClassTemplateSpecializationDecl 0xb9ea40 <line:1381:3, line:1383:29> line:1382:12 struct remove_const definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'char16_t'
| | | |-CXXRecordDecl 0xb9ec78 prev 0xb9ea40 <col:5, col:12> col:12 implicit struct remove_const
| | | `-TypedefDecl 0xb9ed48 <line:1383:7, col:23> col:23 referenced type 'char16_t':'char16_t'
| | |   `-SubstTemplateTypeParmType 0xb9ed10 'char16_t' sugar
| | |     |-TemplateTypeParmType 0xb5d350 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0xb5d2f8 '_Tp'
| | |     `-BuiltinType 0x7db8a0 'char16_t'
| | |-ClassTemplateSpecializationDecl 0xba0b40 <line:1381:3, line:1383:29> line:1382:12 struct remove_const definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'unsigned short'
| | | |-CXXRecordDecl 0xba0d78 prev 0xba0b40 <col:5, col:12> col:12 implicit struct remove_const
| | | `-TypedefDecl 0xba0e48 <line:1383:7, col:23> col:23 referenced type 'unsigned short':'unsigned short'
| | |   `-SubstTemplateTypeParmType 0xba0e10 'unsigned short' sugar
| | |     |-TemplateTypeParmType 0xb5d350 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0xb5d2f8 '_Tp'
| | |     `-BuiltinType 0x7db400 'unsigned short'
| | |-ClassTemplateSpecializationDecl 0xba4390 <line:1381:3, line:1383:29> line:1382:12 struct remove_const definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'char32_t'
| | | |-CXXRecordDecl 0xba45c8 prev 0xba4390 <col:5, col:12> col:12 implicit struct remove_const
| | | `-TypedefDecl 0xba4698 <line:1383:7, col:23> col:23 referenced type 'char32_t':'char32_t'
| | |   `-SubstTemplateTypeParmType 0xba4660 'char32_t' sugar
| | |     |-TemplateTypeParmType 0xb5d350 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0xb5d2f8 '_Tp'
| | |     `-BuiltinType 0x7db8c0 'char32_t'
| | |-ClassTemplateSpecializationDecl 0xbfdc70 <line:1381:3, line:1383:29> line:1382:12 struct remove_const definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'void'
| | | |-CXXRecordDecl 0xbfdea8 prev 0xbfdc70 <col:5, col:12> col:12 implicit struct remove_const
| | | `-TypedefDecl 0xbfdf78 <line:1383:7, col:23> col:23 referenced type 'void':'void'
| | |   `-SubstTemplateTypeParmType 0xbfdf40 'void' sugar
| | |     |-TemplateTypeParmType 0xb5d350 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0xb5d2f8 '_Tp'
| | |     `-BuiltinType 0x7db2e0 'void'
| | |-ClassTemplateSpecializationDecl 0xd37fe0 <line:1381:3, line:1383:29> line:1382:12 struct remove_const definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'const long &'
| | | |-CXXRecordDecl 0xd38218 prev 0xd37fe0 <col:5, col:12> col:12 implicit struct remove_const
| | | `-TypedefDecl 0xd382e8 <line:1383:7, col:23> col:23 referenced type 'const long &':'const long &'
| | |   `-SubstTemplateTypeParmType 0xd382b0 'const long &' sugar
| | |     |-TemplateTypeParmType 0xb5d350 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0xb5d2f8 '_Tp'
| | |     `-LValueReferenceType 0xd33260 'const long &'
| | |       `-QualType 0x7db3a1 'const long' const
| | |         `-BuiltinType 0x7db3a0 'long'
| | |-ClassTemplateSpecializationDecl 0xd42f20 <line:1381:3, line:1383:29> line:1382:12 struct remove_const definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'long'
| | | |-CXXRecordDecl 0xd43158 prev 0xd42f20 <col:5, col:12> col:12 implicit struct remove_const
| | | `-TypedefDecl 0xd43228 <line:1383:7, col:23> col:23 referenced type 'long':'long'
| | |   `-SubstTemplateTypeParmType 0xd431f0 'long' sugar
| | |     |-TemplateTypeParmType 0xb5d350 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0xb5d2f8 '_Tp'
| | |     `-BuiltinType 0x7db3a0 'long'
| | |-ClassTemplateSpecializationDecl 0xd5def0 <line:1381:3, line:1383:29> line:1382:12 struct remove_const definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'const std::chrono::duration<long, std::ratio<1, 1000000000> > &'
| | | |-CXXRecordDecl 0xd5e128 prev 0xd5def0 <col:5, col:12> col:12 implicit struct remove_const
| | | `-TypedefDecl 0xd5e1f8 <line:1383:7, col:23> col:23 referenced type 'const std::chrono::duration<long, std::ratio<1, 1000000000> > &':'const std::chrono::duration<long, std::ratio<1, 1000000000> > &'
| | |   `-SubstTemplateTypeParmType 0xd5e1c0 'const std::chrono::duration<long, std::ratio<1, 1000000000> > &' sugar
| | |     |-TemplateTypeParmType 0xb5d350 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0xb5d2f8 '_Tp'
| | |     `-LValueReferenceType 0xd2f910 'const std::chrono::duration<long, std::ratio<1, 1000000000> > &'
| | |       `-QualType 0xd1d101 'const std::chrono::duration<long, std::ratio<1, 1000000000> >' const
| | |         `-RecordType 0xd1d100 'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | |           `-ClassTemplateSpecialization 0xd1d000 'duration'
| | |-ClassTemplateSpecializationDecl 0xd998b0 <line:1381:3, line:1383:29> line:1382:12 struct remove_const definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'const std::chrono::duration<long, std::ratio<1, 1> > &'
| | | |-CXXRecordDecl 0xd99ae8 prev 0xd998b0 <col:5, col:12> col:12 implicit struct remove_const
| | | `-TypedefDecl 0xd99bb8 <line:1383:7, col:23> col:23 referenced type 'const std::chrono::duration<long, std::ratio<1, 1> > &':'const std::chrono::duration<long, std::ratio<1, 1> > &'
| | |   `-SubstTemplateTypeParmType 0xd99b80 'const std::chrono::duration<long, std::ratio<1, 1> > &' sugar
| | |     |-TemplateTypeParmType 0xb5d350 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0xb5d2f8 '_Tp'
| | |     `-LValueReferenceType 0xb8f140 'const std::chrono::duration<long, std::ratio<1, 1> > &'
| | |       `-QualType 0xd1d8b1 'const std::chrono::duration<long, std::ratio<1, 1> >' const
| | |         `-RecordType 0xd1d8b0 'std::chrono::duration<long, std::ratio<1, 1> >'
| | |           `-ClassTemplateSpecialization 0xd1d7b0 'duration'
| | |-ClassTemplateSpecializationDecl 0xdb29f0 <line:1381:3, line:1383:29> line:1382:12 struct remove_const definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | | |-CXXRecordDecl 0xdb2c28 prev 0xdb29f0 <col:5, col:12> col:12 implicit struct remove_const
| | | `-TypedefDecl 0xdb2cf8 <line:1383:7, col:23> col:23 referenced type 'std::chrono::duration<long, std::ratio<1, 1000000000> >':'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | |   `-SubstTemplateTypeParmType 0xdb2cc0 'std::chrono::duration<long, std::ratio<1, 1000000000> >' sugar
| | |     |-TemplateTypeParmType 0xb5d350 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0xb5d2f8 '_Tp'
| | |     `-RecordType 0xd1d100 'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | |       `-ClassTemplateSpecialization 0xd1d000 'duration'
| | |-ClassTemplateSpecializationDecl 0xdc89d0 <line:1381:3, line:1383:29> line:1382:12 struct remove_const definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'const long double &'
| | | |-CXXRecordDecl 0xdc8c08 prev 0xdc89d0 <col:5, col:12> col:12 implicit struct remove_const
| | | `-TypedefDecl 0xdc8cd8 <line:1383:7, col:23> col:23 referenced type 'const long double &':'const long double &'
| | |   `-SubstTemplateTypeParmType 0xdc8ca0 'const long double &' sugar
| | |     |-TemplateTypeParmType 0xb5d350 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0xb5d2f8 '_Tp'
| | |     `-LValueReferenceType 0xdc52d0 'const long double &'
| | |       `-QualType 0x7db4c1 'const long double' const
| | |         `-BuiltinType 0x7db4c0 'long double'
| | |-ClassTemplateSpecializationDecl 0xdcee50 <line:1381:3, line:1383:29> line:1382:12 struct remove_const definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'long double'
| | | |-CXXRecordDecl 0xdcf088 prev 0xdcee50 <col:5, col:12> col:12 implicit struct remove_const
| | | `-TypedefDecl 0xdcf158 <line:1383:7, col:23> col:23 referenced type 'long double':'long double'
| | |   `-SubstTemplateTypeParmType 0xdcf120 'long double' sugar
| | |     |-TemplateTypeParmType 0xb5d350 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0xb5d2f8 '_Tp'
| | |     `-BuiltinType 0x7db4c0 'long double'
| | |-ClassTemplateSpecializationDecl 0xe56440 <line:1381:3, line:1383:29> line:1382:12 struct remove_const definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'double'
| | | |-CXXRecordDecl 0xe56678 prev 0xe56440 <col:5, col:12> col:12 implicit struct remove_const
| | | `-TypedefDecl 0xe56748 <line:1383:7, col:23> col:23 referenced type 'double':'double'
| | |   `-SubstTemplateTypeParmType 0xe56710 'double' sugar
| | |     |-TemplateTypeParmType 0xb5d350 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0xb5d2f8 '_Tp'
| | |     `-BuiltinType 0x7db4a0 'double'
| | |-ClassTemplateSpecializationDecl 0xe633e0 <line:1381:3, line:1383:29> line:1382:12 struct remove_const definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'const double &'
| | | |-CXXRecordDecl 0xe63618 prev 0xe633e0 <col:5, col:12> col:12 implicit struct remove_const
| | | `-TypedefDecl 0xe636e8 <line:1383:7, col:23> col:23 referenced type 'const double &':'const double &'
| | |   `-SubstTemplateTypeParmType 0xe636b0 'const double &' sugar
| | |     |-TemplateTypeParmType 0xb5d350 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0xb5d2f8 '_Tp'
| | |     `-LValueReferenceType 0xe53500 'const double &'
| | |       `-QualType 0x7db4a1 'const double' const
| | |         `-BuiltinType 0x7db4a0 'double'
| | `-ClassTemplateSpecializationDecl 0xe6ee70 <line:1381:3, line:1383:29> line:1382:12 struct remove_const definition
| |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-TemplateArgument type 'const std::chrono::duration<double, std::ratio<1, 1> > &'
| |   |-CXXRecordDecl 0xe6f0a8 prev 0xe6ee70 <col:5, col:12> col:12 implicit struct remove_const
| |   `-TypedefDecl 0xe6f178 <line:1383:7, col:23> col:23 referenced type 'const std::chrono::duration<double, std::ratio<1, 1> > &':'const std::chrono::duration<double, std::ratio<1, 1> > &'
| |     `-SubstTemplateTypeParmType 0xe6f140 'const std::chrono::duration<double, std::ratio<1, 1> > &' sugar
| |       |-TemplateTypeParmType 0xb5d350 '_Tp' dependent depth 0 index 0
| |       | `-TemplateTypeParm 0xb5d2f8 '_Tp'
| |       `-LValueReferenceType 0xe501a0 'const std::chrono::duration<double, std::ratio<1, 1> > &'
| |         `-QualType 0xe444a1 'const std::chrono::duration<double, std::ratio<1, 1> >' const
| |           `-RecordType 0xe444a0 'std::chrono::duration<double, std::ratio<1, 1> >'
| |             `-ClassTemplateSpecialization 0xe443a0 'duration'
| |-ClassTemplatePartialSpecializationDecl 0xb5d900 <line:1385:3, line:1387:29> line:1386:12 struct remove_const definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'const type-parameter-0-0'
| | |-TemplateTypeParmDecl 0xb5d790 <line:1385:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0xb5db28 <line:1386:5, col:12> col:12 implicit struct remove_const
| | `-TypedefDecl 0xb5dbc8 <line:1387:7, col:23> col:23 type '_Tp'
| |   `-TemplateTypeParmType 0xb5d7e0 '_Tp' dependent depth 0 index 0
| |     `-TemplateTypeParm 0xb5d790 '_Tp'
| |-ClassTemplateDecl 0xb5dd68 <line:1390:3, line:1392:29> line:1391:12 remove_volatile
| | |-TemplateTypeParmDecl 0xb5dc38 <line:1390:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0xb5dcd8 <line:1391:5, line:1392:29> line:1391:12 struct remove_volatile definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-CXXRecordDecl 0xb5dfc0 <col:5, col:12> col:12 implicit struct remove_volatile
| | | `-TypedefDecl 0xb5e060 <line:1392:7, col:23> col:23 type '_Tp'
| | |   `-TemplateTypeParmType 0xb5dc90 '_Tp' dependent depth 0 index 0
| | |     `-TemplateTypeParm 0xb5dc38 '_Tp'
| | |-ClassTemplateSpecializationDecl 0xad6b88 <line:1390:3, line:1392:29> line:1391:12 struct remove_volatile definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'wchar_t'
| | | |-CXXRecordDecl 0xad6dc8 prev 0xad6b88 <col:5, col:12> col:12 implicit struct remove_volatile
| | | `-TypedefDecl 0xad6e98 <line:1392:7, col:23> col:23 referenced type 'wchar_t':'wchar_t'
| | |   `-SubstTemplateTypeParmType 0xad6e60 'wchar_t' sugar
| | |     |-TemplateTypeParmType 0xb5dc90 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0xb5dc38 '_Tp'
| | |     `-BuiltinType 0x7db860 'wchar_t'
| | |-ClassTemplateSpecializationDecl 0xb9ad98 <line:1390:3, line:1392:29> line:1391:12 struct remove_volatile definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'unsigned int'
| | | |-CXXRecordDecl 0xb9afd8 prev 0xb9ad98 <col:5, col:12> col:12 implicit struct remove_volatile
| | | `-TypedefDecl 0xb9b0a8 <line:1392:7, col:23> col:23 referenced type 'unsigned int':'unsigned int'
| | |   `-SubstTemplateTypeParmType 0xb9b070 'unsigned int' sugar
| | |     |-TemplateTypeParmType 0xb5dc90 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0xb5dc38 '_Tp'
| | |     `-BuiltinType 0x7db420 'unsigned int'
| | |-ClassTemplateSpecializationDecl 0xb9e5c8 <line:1390:3, line:1392:29> line:1391:12 struct remove_volatile definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'char16_t'
| | | |-CXXRecordDecl 0xb9e890 prev 0xb9e5c8 <col:5, col:12> col:12 implicit struct remove_volatile
| | | `-TypedefDecl 0xb9e958 <line:1392:7, col:23> col:23 referenced type 'char16_t':'char16_t'
| | |   `-SubstTemplateTypeParmType 0xb9e920 'char16_t' sugar
| | |     |-TemplateTypeParmType 0xb5dc90 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0xb5dc38 '_Tp'
| | |     `-BuiltinType 0x7db8a0 'char16_t'
| | |-ClassTemplateSpecializationDecl 0xba0748 <line:1390:3, line:1392:29> line:1391:12 struct remove_volatile definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'unsigned short'
| | | |-CXXRecordDecl 0xba0988 prev 0xba0748 <col:5, col:12> col:12 implicit struct remove_volatile
| | | `-TypedefDecl 0xba0a58 <line:1392:7, col:23> col:23 referenced type 'unsigned short':'unsigned short'
| | |   `-SubstTemplateTypeParmType 0xba0a20 'unsigned short' sugar
| | |     |-TemplateTypeParmType 0xb5dc90 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0xb5dc38 '_Tp'
| | |     `-BuiltinType 0x7db400 'unsigned short'
| | |-ClassTemplateSpecializationDecl 0xba3f98 <line:1390:3, line:1392:29> line:1391:12 struct remove_volatile definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'char32_t'
| | | |-CXXRecordDecl 0xba41d8 prev 0xba3f98 <col:5, col:12> col:12 implicit struct remove_volatile
| | | `-TypedefDecl 0xba42a8 <line:1392:7, col:23> col:23 referenced type 'char32_t':'char32_t'
| | |   `-SubstTemplateTypeParmType 0xba4270 'char32_t' sugar
| | |     |-TemplateTypeParmType 0xb5dc90 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0xb5dc38 '_Tp'
| | |     `-BuiltinType 0x7db8c0 'char32_t'
| | |-ClassTemplateSpecializationDecl 0xbfd878 <line:1390:3, line:1392:29> line:1391:12 struct remove_volatile definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'void'
| | | |-CXXRecordDecl 0xbfdab8 prev 0xbfd878 <col:5, col:12> col:12 implicit struct remove_volatile
| | | `-TypedefDecl 0xbfdb88 <line:1392:7, col:23> col:23 referenced type 'void':'void'
| | |   `-SubstTemplateTypeParmType 0xbfdb50 'void' sugar
| | |     |-TemplateTypeParmType 0xb5dc90 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0xb5dc38 '_Tp'
| | |     `-BuiltinType 0x7db2e0 'void'
| | |-ClassTemplateSpecializationDecl 0xd37be8 <line:1390:3, line:1392:29> line:1391:12 struct remove_volatile definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'const long &'
| | | |-CXXRecordDecl 0xd37e28 prev 0xd37be8 <col:5, col:12> col:12 implicit struct remove_volatile
| | | `-TypedefDecl 0xd37ef8 <line:1392:7, col:23> col:23 referenced type 'const long &':'const long &'
| | |   `-SubstTemplateTypeParmType 0xd37ec0 'const long &' sugar
| | |     |-TemplateTypeParmType 0xb5dc90 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0xb5dc38 '_Tp'
| | |     `-LValueReferenceType 0xd33260 'const long &'
| | |       `-QualType 0x7db3a1 'const long' const
| | |         `-BuiltinType 0x7db3a0 'long'
| | |-ClassTemplateSpecializationDecl 0xd42b28 <line:1390:3, line:1392:29> line:1391:12 struct remove_volatile definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'long'
| | | |-CXXRecordDecl 0xd42d68 prev 0xd42b28 <col:5, col:12> col:12 implicit struct remove_volatile
| | | `-TypedefDecl 0xd42e38 <line:1392:7, col:23> col:23 referenced type 'long':'long'
| | |   `-SubstTemplateTypeParmType 0xd42e00 'long' sugar
| | |     |-TemplateTypeParmType 0xb5dc90 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0xb5dc38 '_Tp'
| | |     `-BuiltinType 0x7db3a0 'long'
| | |-ClassTemplateSpecializationDecl 0xd5d2a8 <line:1390:3, line:1392:29> line:1391:12 struct remove_volatile definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'const std::chrono::duration<long, std::ratio<1, 1000000000> > &'
| | | |-CXXRecordDecl 0xd5dd38 prev 0xd5d2a8 <col:5, col:12> col:12 implicit struct remove_volatile
| | | `-TypedefDecl 0xd5de08 <line:1392:7, col:23> col:23 referenced type 'const std::chrono::duration<long, std::ratio<1, 1000000000> > &':'const std::chrono::duration<long, std::ratio<1, 1000000000> > &'
| | |   `-SubstTemplateTypeParmType 0xd5ddd0 'const std::chrono::duration<long, std::ratio<1, 1000000000> > &' sugar
| | |     |-TemplateTypeParmType 0xb5dc90 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0xb5dc38 '_Tp'
| | |     `-LValueReferenceType 0xd2f910 'const std::chrono::duration<long, std::ratio<1, 1000000000> > &'
| | |       `-QualType 0xd1d101 'const std::chrono::duration<long, std::ratio<1, 1000000000> >' const
| | |         `-RecordType 0xd1d100 'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | |           `-ClassTemplateSpecialization 0xd1d000 'duration'
| | |-ClassTemplateSpecializationDecl 0xd994b8 <line:1390:3, line:1392:29> line:1391:12 struct remove_volatile definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'const std::chrono::duration<long, std::ratio<1, 1> > &'
| | | |-CXXRecordDecl 0xd996f8 prev 0xd994b8 <col:5, col:12> col:12 implicit struct remove_volatile
| | | `-TypedefDecl 0xd997c8 <line:1392:7, col:23> col:23 referenced type 'const std::chrono::duration<long, std::ratio<1, 1> > &':'const std::chrono::duration<long, std::ratio<1, 1> > &'
| | |   `-SubstTemplateTypeParmType 0xd99790 'const std::chrono::duration<long, std::ratio<1, 1> > &' sugar
| | |     |-TemplateTypeParmType 0xb5dc90 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0xb5dc38 '_Tp'
| | |     `-LValueReferenceType 0xb8f140 'const std::chrono::duration<long, std::ratio<1, 1> > &'
| | |       `-QualType 0xd1d8b1 'const std::chrono::duration<long, std::ratio<1, 1> >' const
| | |         `-RecordType 0xd1d8b0 'std::chrono::duration<long, std::ratio<1, 1> >'
| | |           `-ClassTemplateSpecialization 0xd1d7b0 'duration'
| | |-ClassTemplateSpecializationDecl 0xdb25f8 <line:1390:3, line:1392:29> line:1391:12 struct remove_volatile definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | | |-CXXRecordDecl 0xdb2838 prev 0xdb25f8 <col:5, col:12> col:12 implicit struct remove_volatile
| | | `-TypedefDecl 0xdb2908 <line:1392:7, col:23> col:23 referenced type 'std::chrono::duration<long, std::ratio<1, 1000000000> >':'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | |   `-SubstTemplateTypeParmType 0xdb28d0 'std::chrono::duration<long, std::ratio<1, 1000000000> >' sugar
| | |     |-TemplateTypeParmType 0xb5dc90 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0xb5dc38 '_Tp'
| | |     `-RecordType 0xd1d100 'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | |       `-ClassTemplateSpecialization 0xd1d000 'duration'
| | |-ClassTemplateSpecializationDecl 0xdc85d8 <line:1390:3, line:1392:29> line:1391:12 struct remove_volatile definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'const long double &'
| | | |-CXXRecordDecl 0xdc8818 prev 0xdc85d8 <col:5, col:12> col:12 implicit struct remove_volatile
| | | `-TypedefDecl 0xdc88e8 <line:1392:7, col:23> col:23 referenced type 'const long double &':'const long double &'
| | |   `-SubstTemplateTypeParmType 0xdc88b0 'const long double &' sugar
| | |     |-TemplateTypeParmType 0xb5dc90 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0xb5dc38 '_Tp'
| | |     `-LValueReferenceType 0xdc52d0 'const long double &'
| | |       `-QualType 0x7db4c1 'const long double' const
| | |         `-BuiltinType 0x7db4c0 'long double'
| | |-ClassTemplateSpecializationDecl 0xdcea58 <line:1390:3, line:1392:29> line:1391:12 struct remove_volatile definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'long double'
| | | |-CXXRecordDecl 0xdcec98 prev 0xdcea58 <col:5, col:12> col:12 implicit struct remove_volatile
| | | `-TypedefDecl 0xdced68 <line:1392:7, col:23> col:23 referenced type 'long double':'long double'
| | |   `-SubstTemplateTypeParmType 0xdced30 'long double' sugar
| | |     |-TemplateTypeParmType 0xb5dc90 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0xb5dc38 '_Tp'
| | |     `-BuiltinType 0x7db4c0 'long double'
| | |-ClassTemplateSpecializationDecl 0xe56048 <line:1390:3, line:1392:29> line:1391:12 struct remove_volatile definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'double'
| | | |-CXXRecordDecl 0xe56288 prev 0xe56048 <col:5, col:12> col:12 implicit struct remove_volatile
| | | `-TypedefDecl 0xe56358 <line:1392:7, col:23> col:23 referenced type 'double':'double'
| | |   `-SubstTemplateTypeParmType 0xe56320 'double' sugar
| | |     |-TemplateTypeParmType 0xb5dc90 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0xb5dc38 '_Tp'
| | |     `-BuiltinType 0x7db4a0 'double'
| | |-ClassTemplateSpecializationDecl 0xe62fe8 <line:1390:3, line:1392:29> line:1391:12 struct remove_volatile definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'const double &'
| | | |-CXXRecordDecl 0xe63228 prev 0xe62fe8 <col:5, col:12> col:12 implicit struct remove_volatile
| | | `-TypedefDecl 0xe632f8 <line:1392:7, col:23> col:23 referenced type 'const double &':'const double &'
| | |   `-SubstTemplateTypeParmType 0xe632c0 'const double &' sugar
| | |     |-TemplateTypeParmType 0xb5dc90 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0xb5dc38 '_Tp'
| | |     `-LValueReferenceType 0xe53500 'const double &'
| | |       `-QualType 0x7db4a1 'const double' const
| | |         `-BuiltinType 0x7db4a0 'double'
| | `-ClassTemplateSpecializationDecl 0xe6ea78 <line:1390:3, line:1392:29> line:1391:12 struct remove_volatile definition
| |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-TemplateArgument type 'const std::chrono::duration<double, std::ratio<1, 1> > &'
| |   |-CXXRecordDecl 0xe6ecb8 prev 0xe6ea78 <col:5, col:12> col:12 implicit struct remove_volatile
| |   `-TypedefDecl 0xe6ed88 <line:1392:7, col:23> col:23 referenced type 'const std::chrono::duration<double, std::ratio<1, 1> > &':'const std::chrono::duration<double, std::ratio<1, 1> > &'
| |     `-SubstTemplateTypeParmType 0xe6ed50 'const std::chrono::duration<double, std::ratio<1, 1> > &' sugar
| |       |-TemplateTypeParmType 0xb5dc90 '_Tp' dependent depth 0 index 0
| |       | `-TemplateTypeParm 0xb5dc38 '_Tp'
| |       `-LValueReferenceType 0xe501a0 'const std::chrono::duration<double, std::ratio<1, 1> > &'
| |         `-QualType 0xe444a1 'const std::chrono::duration<double, std::ratio<1, 1> >' const
| |           `-RecordType 0xe444a0 'std::chrono::duration<double, std::ratio<1, 1> >'
| |             `-ClassTemplateSpecialization 0xe443a0 'duration'
| |-ClassTemplatePartialSpecializationDecl 0xb5e240 <line:1394:3, line:1396:29> line:1395:12 struct remove_volatile definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'volatile type-parameter-0-0'
| | |-TemplateTypeParmDecl 0xb5e0d0 <line:1394:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0xb5e468 <line:1395:5, col:12> col:12 implicit struct remove_volatile
| | `-TypedefDecl 0xb5e508 <line:1396:7, col:23> col:23 type '_Tp'
| |   `-TemplateTypeParmType 0xb5e120 '_Tp' dependent depth 0 index 0
| |     `-TemplateTypeParm 0xb5e0d0 '_Tp'
| |-ClassTemplateDecl 0xb5e6a8 prev 0xade288 <line:1399:3, line:1404:5> line:1400:12 remove_cv
| | |-TemplateTypeParmDecl 0xb5e578 <line:1399:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0xb5e618 prev 0xade1f8 <line:1400:5, line:1404:5> line:1400:12 struct remove_cv definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-CXXRecordDecl 0xb5e768 <col:5, col:12> col:12 implicit struct remove_cv
| | | `-TypedefDecl 0xb5eaf0 <line:1402:7, line:1403:67> col:67 type 'typename remove_const<typename remove_volatile<_Tp>::type>::type'
| | |   `-DependentNameType 0xb5ea80 'typename remove_const<typename remove_volatile<_Tp>::type>::type' dependent
| | |-ClassTemplateSpecialization 0xad68b8 'remove_cv'
| | |-ClassTemplateSpecialization 0xb9aac8 'remove_cv'
| | |-ClassTemplateSpecialization 0xb9e2f8 'remove_cv'
| | |-ClassTemplateSpecialization 0xba0478 'remove_cv'
| | |-ClassTemplateSpecialization 0xba3cc8 'remove_cv'
| | |-ClassTemplateSpecialization 0xbfd5a8 'remove_cv'
| | |-ClassTemplateSpecialization 0xd37918 'remove_cv'
| | |-ClassTemplateSpecialization 0xd42858 'remove_cv'
| | |-ClassTemplateSpecialization 0xd5cfd8 'remove_cv'
| | |-ClassTemplateSpecialization 0xd991e8 'remove_cv'
| | |-ClassTemplateSpecialization 0xdb2328 'remove_cv'
| | |-ClassTemplateSpecialization 0xdc82f8 'remove_cv'
| | |-ClassTemplateSpecialization 0xdce788 'remove_cv'
| | |-ClassTemplateSpecialization 0xe55d78 'remove_cv'
| | |-ClassTemplateSpecialization 0xe62d18 'remove_cv'
| | `-ClassTemplateSpecialization 0xe6e7a8 'remove_cv'
| |-ClassTemplateDecl 0xb5ec88 <line:1407:3, line:1409:35> line:1408:12 add_const
| | |-TemplateTypeParmDecl 0xb5eb60 <line:1407:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb5ebf8 <line:1408:5, line:1409:35> line:1408:12 struct add_const definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-CXXRecordDecl 0xb5eee0 <col:5, col:12> col:12 implicit struct add_const
| |   `-TypedefDecl 0xb5ef80 <line:1409:7, col:29> col:29 type 'const _Tp'
| |     `-QualType 0xb5ebb1 'const _Tp' const
| |       `-TemplateTypeParmType 0xb5ebb0 '_Tp' dependent depth 0 index 0
| |         `-TemplateTypeParm 0xb5eb60 '_Tp'
| |-ClassTemplateDecl 0xb5f118 <line:1412:3, line:1414:38> line:1413:12 add_volatile
| | |-TemplateTypeParmDecl 0xb5eff0 <line:1412:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb5f088 <line:1413:5, line:1414:38> line:1413:12 struct add_volatile definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-CXXRecordDecl 0xb5f370 <col:5, col:12> col:12 implicit struct add_volatile
| |   `-TypedefDecl 0xb5f410 <line:1414:7, col:32> col:32 type 'volatile _Tp'
| |     `-QualType 0xb5f044 'volatile _Tp' volatile
| |       `-TemplateTypeParmType 0xb5f040 '_Tp' dependent depth 0 index 0
| |         `-TemplateTypeParm 0xb5eff0 '_Tp'
| |-ClassTemplateDecl 0xb5f5a8 <line:1417:3, line:1422:5> line:1418:12 add_cv
| | |-TemplateTypeParmDecl 0xb5f480 <line:1417:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb5f518 <line:1418:5, line:1422:5> line:1418:12 struct add_cv definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-CXXRecordDecl 0xb5f800 <col:5, col:12> col:12 implicit struct add_cv
| |   `-TypedefDecl 0xb5fb80 <line:1420:7, line:1421:61> col:61 type 'typename add_const<typename add_volatile<_Tp>::type>::type'
| |     `-DependentNameType 0xb5fb10 'typename add_const<typename add_volatile<_Tp>::type>::type' dependent
| |-TypeAliasTemplateDecl 0xb5fe50 <line:1429:3, line:1430:56> col:5 remove_const_t
| | |-TemplateTypeParmDecl 0xb5fbf0 <line:1429:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0xb5fdf0 <line:1430:5, col:56> col:11 remove_const_t 'typename remove_const<_Tp>::type'
| |   `-DependentNameType 0xb5fd80 'typename remove_const<_Tp>::type' dependent
| |-TypeAliasTemplateDecl 0xb600c0 <line:1433:3, line:1434:62> col:5 remove_volatile_t
| | |-TemplateTypeParmDecl 0xb5fea8 <line:1433:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0xb60060 <line:1434:5, col:62> col:11 remove_volatile_t 'typename remove_volatile<_Tp>::type'
| |   `-DependentNameType 0xb5fff0 'typename remove_volatile<_Tp>::type' dependent
| |-TypeAliasTemplateDecl 0xb60330 <line:1437:3, line:1438:50> col:5 remove_cv_t
| | |-TemplateTypeParmDecl 0xb60118 <line:1437:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0xb602d0 <line:1438:5, col:50> col:11 remove_cv_t 'typename remove_cv<_Tp>::type'
| |   `-DependentNameType 0xb60260 'typename remove_cv<_Tp>::type' dependent
| |-TypeAliasTemplateDecl 0xb605f0 <line:1441:3, line:1442:50> col:5 add_const_t
| | |-TemplateTypeParmDecl 0xb60388 <line:1441:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0xb60590 <line:1442:5, col:50> col:11 add_const_t 'typename add_const<_Tp>::type'
| |   `-DependentNameType 0xb60520 'typename add_const<_Tp>::type' dependent
| |-TypeAliasTemplateDecl 0xb63ae0 <line:1445:3, line:1446:56> col:5 add_volatile_t
| | |-TemplateTypeParmDecl 0xb60648 <line:1445:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0xb63a80 <line:1446:5, col:56> col:11 add_volatile_t 'typename add_volatile<_Tp>::type'
| |   `-DependentNameType 0xb63a10 'typename add_volatile<_Tp>::type' dependent
| |-TypeAliasTemplateDecl 0xb63da0 <line:1449:3, line:1450:44> col:5 add_cv_t
| | |-TemplateTypeParmDecl 0xb63b38 <line:1449:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0xb63d40 <line:1450:5, col:44> col:11 add_cv_t 'typename add_cv<_Tp>::type'
| |   `-DependentNameType 0xb63cd0 'typename add_cv<_Tp>::type' dependent
| |-ClassTemplateDecl 0xb63f28 <line:1456:3, line:1458:27> line:1457:12 remove_reference
| | |-TemplateTypeParmDecl 0xb63df8 <line:1456:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0xb63e98 <line:1457:5, line:1458:27> line:1457:12 struct remove_reference definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-CXXRecordDecl 0xb64180 <col:5, col:12> col:12 implicit struct remove_reference
| | | `-TypedefDecl 0xb64220 <line:1458:7, col:21> col:21 type '_Tp'
| | |   `-TemplateTypeParmType 0xb63e50 '_Tp' dependent depth 0 index 0
| | |     `-TemplateTypeParm 0xb63df8 '_Tp'
| | |-ClassTemplateSpecializationDecl 0xd570e8 <line:1464:3, line:1466:27> line:1465:12 struct remove_reference definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'long &&'
| | | |-CXXRecordDecl 0xd573e0 prev 0xd570e8 <col:5, col:12> col:12 implicit struct remove_reference
| | | `-TypedefDecl 0xd57480 <line:1466:7, col:21> col:21 referenced type 'long':'long'
| | |   `-SubstTemplateTypeParmType 0xd57300 'long' sugar
| | |     |-TemplateTypeParmType 0xb647c0 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0xb64768 '_Tp'
| | |     `-BuiltinType 0x7db3a0 'long'
| | `-ClassTemplateSpecializationDecl 0xe5c398 <line:1456:3, line:1458:27> line:1457:12 struct remove_reference definition
| |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-TemplateArgument type 'double'
| |   |-CXXRecordDecl 0xe5c600 prev 0xe5c398 <col:5, col:12> col:12 implicit struct remove_reference
| |   `-TypedefDecl 0xe5c6c8 <line:1458:7, col:21> col:21 referenced type 'double':'double'
| |     `-SubstTemplateTypeParmType 0xe5c690 'double' sugar
| |       |-TemplateTypeParmType 0xb63e50 '_Tp' dependent depth 0 index 0
| |       | `-TemplateTypeParm 0xb63df8 '_Tp'
| |       `-BuiltinType 0x7db4a0 'double'
| |-ClassTemplatePartialSpecializationDecl 0xb64430 <line:1460:3, line:1462:27> line:1461:12 struct remove_reference definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0 &'
| | |-TemplateTypeParmDecl 0xb64290 <line:1460:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0xb64658 <line:1461:5, col:12> col:12 implicit struct remove_reference
| | `-TypedefDecl 0xb646f8 <line:1462:7, col:21> col:21 type '_Tp'
| |   `-TemplateTypeParmType 0xb642e0 '_Tp' dependent depth 0 index 0
| |     `-TemplateTypeParm 0xb64290 '_Tp'
| |-ClassTemplatePartialSpecializationDecl 0xb64910 <line:1464:3, line:1466:27> line:1465:12 struct remove_reference definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0 &&'
| | |-TemplateTypeParmDecl 0xb64768 <line:1464:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0xb64b38 <line:1465:5, col:12> col:12 implicit struct remove_reference
| | `-TypedefDecl 0xb64bd8 <line:1466:7, col:21> col:21 type '_Tp'
| |   `-TemplateTypeParmType 0xb647c0 '_Tp' dependent depth 0 index 0
| |     `-TemplateTypeParm 0xb64768 '_Tp'
| |-ClassTemplateDecl 0xb64f08 <line:1468:3, line:1470:27> line:1469:12 __add_lvalue_reference_helper
| | |-TemplateTypeParmDecl 0xb64c48 <line:1468:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0xb64dd8 <col:26, col:58> col:31 'bool' depth 0 index 1
| | | `-TemplateArgument expr
| | |   `-ImplicitCastExpr 0xb64e38 <col:33, col:58> 'bool' <Dependent>
| | |     `-DependentScopeDeclRefExpr 0xb64d90 <col:33, col:58> '<dependent type>' lvalue
| | `-CXXRecordDecl 0xb64e78 <line:1469:5, line:1470:27> line:1469:12 struct __add_lvalue_reference_helper definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-CXXRecordDecl 0xb651c0 <col:5, col:12> col:12 implicit struct __add_lvalue_reference_helper
| |   `-TypedefDecl 0xb65260 <line:1470:7, col:21> col:21 type '_Tp'
| |     `-TemplateTypeParmType 0xb64ca0 '_Tp' dependent depth 0 index 0
| |       `-TemplateTypeParm 0xb64c48 '_Tp'
| |-ClassTemplatePartialSpecializationDecl 0xb654d8 <line:1472:3, line:1474:28> line:1473:12 struct __add_lvalue_reference_helper definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 1
| | |-TemplateTypeParmDecl 0xb652d0 <line:1472:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0xb65778 <line:1473:5, col:12> col:12 implicit struct __add_lvalue_reference_helper
| | `-TypedefDecl 0xb65848 <line:1474:7, col:22> col:22 type '_Tp &'
| |   `-LValueReferenceType 0xb65810 '_Tp &' dependent
| |     `-TemplateTypeParmType 0xb65320 '_Tp' dependent depth 0 index 0
| |       `-TemplateTypeParm 0xb652d0 '_Tp'
| |-ClassTemplateDecl 0xb659e8 <line:1477:3, line:1480:7> line:1478:12 add_lvalue_reference
| | |-TemplateTypeParmDecl 0xb658b8 <line:1477:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb65958 <line:1478:5, line:1480:7> line:1478:12 struct add_lvalue_reference definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__add_lvalue_reference_helper<_Tp>'
| |   `-CXXRecordDecl 0xb65e80 <col:5, col:12> col:12 implicit struct add_lvalue_reference
| |-ClassTemplateDecl 0xb661e8 <line:1482:3, line:1484:27> line:1483:12 __add_rvalue_reference_helper
| | |-TemplateTypeParmDecl 0xb65f28 <line:1482:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0xb660b8 <col:26, col:58> col:31 'bool' depth 0 index 1
| | | `-TemplateArgument expr
| | |   `-ImplicitCastExpr 0xb66118 <col:33, col:58> 'bool' <Dependent>
| | |     `-DependentScopeDeclRefExpr 0xb66070 <col:33, col:58> '<dependent type>' lvalue
| | `-CXXRecordDecl 0xb66158 <line:1483:5, line:1484:27> line:1483:12 struct __add_rvalue_reference_helper definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-CXXRecordDecl 0xb664a0 <col:5, col:12> col:12 implicit struct __add_rvalue_reference_helper
| |   `-TypedefDecl 0xb66540 <line:1484:7, col:21> col:21 type '_Tp'
| |     `-TemplateTypeParmType 0xb65f80 '_Tp' dependent depth 0 index 0
| |       `-TemplateTypeParm 0xb65f28 '_Tp'
| |-ClassTemplatePartialSpecializationDecl 0xb667b8 <line:1486:3, line:1488:29> line:1487:12 struct __add_rvalue_reference_helper definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 1
| | |-TemplateTypeParmDecl 0xb665b0 <line:1486:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0xb66a58 <line:1487:5, col:12> col:12 implicit struct __add_rvalue_reference_helper
| | `-TypedefDecl 0xb66b28 <line:1488:7, col:23> col:23 type '_Tp &&'
| |   `-RValueReferenceType 0xb66af0 '_Tp &&' dependent
| |     `-TemplateTypeParmType 0xb66600 '_Tp' dependent depth 0 index 0
| |       `-TemplateTypeParm 0xb665b0 '_Tp'
| |-ClassTemplateDecl 0xb66cc8 <line:1491:3, line:1494:7> line:1492:12 add_rvalue_reference
| | |-TemplateTypeParmDecl 0xb66b98 <line:1491:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xb66c38 <line:1492:5, line:1494:7> line:1492:12 struct add_rvalue_reference definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__add_rvalue_reference_helper<_Tp>'
| |   `-CXXRecordDecl 0xb67160 <col:5, col:12> col:12 implicit struct add_rvalue_reference
| |-TypeAliasTemplateDecl 0xb67470 <line:1498:3, line:1499:64> col:5 remove_reference_t
| | |-TemplateTypeParmDecl 0xb67208 <line:1498:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0xb67410 <line:1499:5, col:64> col:11 remove_reference_t 'typename remove_reference<_Tp>::type'
| |   `-DependentNameType 0xb673a0 'typename remove_reference<_Tp>::type' dependent
| |-TypeAliasTemplateDecl 0xb67730 <line:1502:3, line:1503:72> col:5 add_lvalue_reference_t
| | |-TemplateTypeParmDecl 0xb674c8 <line:1502:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0xb676d0 <line:1503:5, col:72> col:11 add_lvalue_reference_t 'typename add_lvalue_reference<_Tp>::type'
| |   `-DependentNameType 0xb67660 'typename add_lvalue_reference<_Tp>::type' dependent
| |-TypeAliasTemplateDecl 0xb69220 <line:1506:3, line:1507:72> col:5 add_rvalue_reference_t
| | |-TemplateTypeParmDecl 0xb67788 <line:1506:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0xb67990 <line:1507:5, col:72> col:11 add_rvalue_reference_t 'typename add_rvalue_reference<_Tp>::type'
| |   `-DependentNameType 0xb67920 'typename add_rvalue_reference<_Tp>::type' dependent
| |-ClassTemplateDecl 0xb69498 <line:1513:3, line:1514:12> col:12 __cv_selector
| | |-TemplateTypeParmDecl 0xb69278 <line:1513:12, col:21> col:21 typename depth 0 index 0 _Unqualified
| | |-NonTypeTemplateParmDecl 0xb69308 <col:35, col:40> col:40 'bool' depth 0 index 1 _IsConst
| | |-NonTypeTemplateParmDecl 0xb69378 <col:50, col:55> col:55 'bool' depth 0 index 2 _IsVol
| | |-CXXRecordDecl 0xb69408 <line:1514:5, col:12> col:12 struct __cv_selector
| | |-ClassTemplateSpecializationDecl 0xb7e588 <line:1516:3, line:1518:36> line:1517:12 struct __cv_selector definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'unsigned int'
| | | |-TemplateArgument integral 0
| | | |-TemplateArgument integral 0
| | | |-CXXRecordDecl 0xb7ea30 prev 0xb7e588 <col:5, col:12> col:12 implicit struct __cv_selector
| | | `-TypedefDecl 0xb7ead0 <line:1518:7, col:28> col:28 referenced __type 'unsigned int':'unsigned int'
| | |   `-SubstTemplateTypeParmType 0xb7e8b0 'unsigned int' sugar
| | |     |-TemplateTypeParmType 0xb69780 '_Unqualified' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0xb69728 '_Unqualified'
| | |     `-BuiltinType 0x7db420 'unsigned int'
| | |-ClassTemplateSpecializationDecl 0xb82c38 <line:1516:3, line:1518:36> line:1517:12 struct __cv_selector definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'unsigned short'
| | | |-TemplateArgument integral 0
| | | |-TemplateArgument integral 0
| | | |-CXXRecordDecl 0xb830e0 prev 0xb82c38 <col:5, col:12> col:12 implicit struct __cv_selector
| | | `-TypedefDecl 0xb83180 <line:1518:7, col:28> col:28 referenced __type 'unsigned short':'unsigned short'
| | |   `-SubstTemplateTypeParmType 0xb82f60 'unsigned short' sugar
| | |     |-TemplateTypeParmType 0xb69780 '_Unqualified' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0xb69728 '_Unqualified'
| | |     `-BuiltinType 0x7db400 'unsigned short'
| | |-ClassTemplateSpecializationDecl 0xb9cfa8 <line:1516:3, line:1518:36> line:1517:12 struct __cv_selector definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'int'
| | | |-TemplateArgument integral 0
| | | |-TemplateArgument integral 0
| | | |-CXXRecordDecl 0xb9d450 prev 0xb9cfa8 <col:5, col:12> col:12 implicit struct __cv_selector
| | | `-TypedefDecl 0xb9d4f0 <line:1518:7, col:28> col:28 referenced __type 'int':'int'
| | |   `-SubstTemplateTypeParmType 0xb9d2d0 'int' sugar
| | |     |-TemplateTypeParmType 0xb69780 '_Unqualified' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0xb69728 '_Unqualified'
| | |     `-BuiltinType 0x7db380 'int'
| | `-ClassTemplateSpecializationDecl 0xba2978 <line:1516:3, line:1518:36> line:1517:12 struct __cv_selector definition
| |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-TemplateArgument type 'short'
| |   |-TemplateArgument integral 0
| |   |-TemplateArgument integral 0
| |   |-CXXRecordDecl 0xba2e20 prev 0xba2978 <col:5, col:12> col:12 implicit struct __cv_selector
| |   `-TypedefDecl 0xba2ec0 <line:1518:7, col:28> col:28 referenced __type 'short':'short'
| |     `-SubstTemplateTypeParmType 0xba2ca0 'short' sugar
| |       |-TemplateTypeParmType 0xb69780 '_Unqualified' dependent depth 0 index 0
| |       | `-TemplateTypeParm 0xb69728 '_Unqualified'
| |       `-BuiltinType 0x7db360 'short'
| |-ClassTemplatePartialSpecializationDecl 0xb699c0 <line:1516:3, line:1518:36> line:1517:12 struct __cv_selector definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 0
| | |-TemplateArgument integral 0
| | |-TemplateTypeParmDecl 0xb69728 <line:1516:12, col:21> col:21 referenced typename depth 0 index 0 _Unqualified
| | |-CXXRecordDecl 0xb69cd8 <line:1517:5, col:12> col:12 implicit struct __cv_selector
| | `-TypedefDecl 0xb69d78 <line:1518:7, col:28> col:28 __type '_Unqualified'
| |   `-TemplateTypeParmType 0xb69780 '_Unqualified' dependent depth 0 index 0
| |     `-TemplateTypeParm 0xb69728 '_Unqualified'
| |-ClassTemplatePartialSpecializationDecl 0xb6a080 <line:1520:3, line:1522:45> line:1521:12 struct __cv_selector definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 0
| | |-TemplateArgument integral 1
| | |-TemplateTypeParmDecl 0xb69de8 <line:1520:12, col:21> col:21 referenced typename depth 0 index 0 _Unqualified
| | |-CXXRecordDecl 0xb6a398 <line:1521:5, col:12> col:12 implicit struct __cv_selector
| | `-TypedefDecl 0xb6a438 <line:1522:7, col:37> col:37 __type 'volatile _Unqualified'
| |   `-QualType 0xb69e44 'volatile _Unqualified' volatile
| |     `-TemplateTypeParmType 0xb69e40 '_Unqualified' dependent depth 0 index 0
| |       `-TemplateTypeParm 0xb69de8 '_Unqualified'
| |-ClassTemplatePartialSpecializationDecl 0xb6a740 <line:1524:3, line:1526:42> line:1525:12 struct __cv_selector definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 1
| | |-TemplateArgument integral 0
| | |-TemplateTypeParmDecl 0xb6a4a8 <line:1524:12, col:21> col:21 referenced typename depth 0 index 0 _Unqualified
| | |-CXXRecordDecl 0xb6aa58 <line:1525:5, col:12> col:12 implicit struct __cv_selector
| | `-TypedefDecl 0xb6aaf8 <line:1526:7, col:34> col:34 __type 'const _Unqualified'
| |   `-QualType 0xb6a501 'const _Unqualified' const
| |     `-TemplateTypeParmType 0xb6a500 '_Unqualified' dependent depth 0 index 0
| |       `-TemplateTypeParm 0xb6a4a8 '_Unqualified'
| |-ClassTemplatePartialSpecializationDecl 0xb6ae00 <line:1528:3, line:1530:51> line:1529:12 struct __cv_selector definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 1
| | |-TemplateArgument integral 1
| | |-TemplateTypeParmDecl 0xb6ab68 <line:1528:12, col:21> col:21 referenced typename depth 0 index 0 _Unqualified
| | |-CXXRecordDecl 0xb6b118 <line:1529:5, col:12> col:12 implicit struct __cv_selector
| | `-TypedefDecl 0xb6b1b8 <line:1530:7, col:43> col:43 __type 'const volatile _Unqualified'
| |   `-QualType 0xb6abc5 'const volatile _Unqualified' const volatile
| |     `-TemplateTypeParmType 0xb6abc0 '_Unqualified' dependent depth 0 index 0
| |       `-TemplateTypeParm 0xb6ab68 '_Unqualified'
| |-ClassTemplateDecl 0xb6b6f8 <line:1532:3, line:1541:5> line:1535:11 __match_cv_qualifiers
| | |-TemplateTypeParmDecl 0xb6b228 <line:1532:12, col:21> col:21 referenced typename depth 0 index 0 _Qualified
| | |-TemplateTypeParmDecl 0xb6b2a8 <col:33, col:42> col:42 referenced typename depth 0 index 1 _Unqualified
| | |-NonTypeTemplateParmDecl 0xb6b438 <line:1533:5, col:43> col:10 referenced 'bool' depth 0 index 2 _IsConst
| | | `-TemplateArgument expr
| | |   `-ImplicitCastExpr 0xb6b498 <col:21, col:43> 'bool' <Dependent>
| | |     `-DependentScopeDeclRefExpr 0xb6b3f0 <col:21, col:43> '<dependent type>' lvalue
| | |-NonTypeTemplateParmDecl 0xb6b5b8 <line:1534:5, col:44> col:10 referenced 'bool' depth 0 index 3 _IsVol
| | | `-TemplateArgument expr
| | |   `-ImplicitCastExpr 0xb6b618 <col:19, col:44> 'bool' <Dependent>
| | |     `-DependentScopeDeclRefExpr 0xb6b570 <col:19, col:44> '<dependent type>' lvalue
| | |-CXXRecordDecl 0xb6b668 <line:1535:5, line:1541:5> line:1535:11 class __match_cv_qualifiers definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-CXXRecordDecl 0xb6ba30 <col:5, col:11> col:11 implicit class __match_cv_qualifiers
| | | |-TypedefDecl 0xb6bcb0 <line:1537:7, col:61> col:61 referenced __match '__cv_selector<_Unqualified, _IsConst, _IsVol>'
| | | | `-TemplateSpecializationType 0xb6bb80 '__cv_selector<_Unqualified, _IsConst, _IsVol>' dependent __cv_selector
| | | |   |-TemplateArgument type '_Unqualified'
| | | |   |-TemplateArgument expr
| | | |   | `-DeclRefExpr 0xb6bad0 <col:43> 'bool' NonTypeTemplateParm 0xb6b438 '_IsConst' 'bool'
| | | |   `-TemplateArgument expr
| | | |     `-DeclRefExpr 0xb6baf0 <col:53> 'bool' NonTypeTemplateParm 0xb6b5b8 '_IsVol' 'bool'
| | | |-AccessSpecDecl 0xb6bd08 <line:1539:5, col:11> col:5 public
| | | `-TypedefDecl 0xb6be40 <line:1540:7, col:40> col:40 __type 'typename __match::__type'
| | |   `-DependentNameType 0xb6bdd0 'typename __match::__type' dependent
| | |-ClassTemplateSpecializationDecl 0xb7e1a8 <line:1532:3, line:1541:5> line:1535:11 class __match_cv_qualifiers definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'wchar_t'
| | | |-TemplateArgument type 'unsigned int'
| | | |-TemplateArgument integral 0
| | | |-TemplateArgument integral 0
| | | |-CXXRecordDecl 0xb7e420 prev 0xb7e1a8 <col:5, col:11> col:11 implicit class __match_cv_qualifiers
| | | |-TypedefDecl 0xb7e790 <line:1537:7, col:61> col:61 __match '__cv_selector<unsigned int, false, false>':'std::__cv_selector<unsigned int, false, false>'
| | | | `-TemplateSpecializationType 0xb7e6c0 '__cv_selector<unsigned int, false, false>' sugar __cv_selector
| | | |   |-TemplateArgument type 'unsigned int':'unsigned int'
| | | |   |-TemplateArgument expr
| | | |   | `-ConstantExpr 0xb7e548 <col:43> 'bool' Int: 0
| | | |   |   `-SubstNonTypeTemplateParmExpr 0xb7e4f8 <col:43> 'bool'
| | | |   |     `-CXXBoolLiteralExpr 0xb7e4e8 <col:43> 'bool' false
| | | |   |-TemplateArgument expr
| | | |   | `-ConstantExpr 0xb7e568 <col:53> 'bool' Int: 0
| | | |   |   `-SubstNonTypeTemplateParmExpr 0xb7e528 <col:53> 'bool'
| | | |   |     `-CXXBoolLiteralExpr 0xb7e518 <col:53> 'bool' false
| | | |   `-RecordType 0xb7e6a0 'std::__cv_selector<unsigned int, false, false>'
| | | |     `-ClassTemplateSpecialization 0xb7e588 '__cv_selector'
| | | |-AccessSpecDecl 0xb7e7e8 <line:1539:5, col:11> col:5 public
| | | `-TypedefDecl 0xb7ebb0 <line:1540:7, col:40> col:40 referenced __type 'typename __match::__type':'unsigned int'
| | |   `-ElaboratedType 0xb7eb60 'typename __match::__type' sugar
| | |     `-TypedefType 0xb7eb40 'std::__cv_selector<unsigned int, false, false>::__type' sugar
| | |       |-Typedef 0xb7ead0 '__type'
| | |       `-SubstTemplateTypeParmType 0xb7e8b0 'unsigned int' sugar
| | |         |-TemplateTypeParmType 0xb69780 '_Unqualified' dependent depth 0 index 0
| | |         | `-TemplateTypeParm 0xb69728 '_Unqualified'
| | |         `-BuiltinType 0x7db420 'unsigned int'
| | |-ClassTemplateSpecializationDecl 0xb82858 <line:1532:3, line:1541:5> line:1535:11 class __match_cv_qualifiers definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'char16_t'
| | | |-TemplateArgument type 'unsigned short'
| | | |-TemplateArgument integral 0
| | | |-TemplateArgument integral 0
| | | |-CXXRecordDecl 0xb82ad0 prev 0xb82858 <col:5, col:11> col:11 implicit class __match_cv_qualifiers
| | | |-TypedefDecl 0xb82e40 <line:1537:7, col:61> col:61 __match '__cv_selector<unsigned short, false, false>':'std::__cv_selector<unsigned short, false, false>'
| | | | `-TemplateSpecializationType 0xb82d70 '__cv_selector<unsigned short, false, false>' sugar __cv_selector
| | | |   |-TemplateArgument type 'unsigned short':'unsigned short'
| | | |   |-TemplateArgument expr
| | | |   | `-ConstantExpr 0xb82bf8 <col:43> 'bool' Int: 0
| | | |   |   `-SubstNonTypeTemplateParmExpr 0xb82ba8 <col:43> 'bool'
| | | |   |     `-CXXBoolLiteralExpr 0xb82b98 <col:43> 'bool' false
| | | |   |-TemplateArgument expr
| | | |   | `-ConstantExpr 0xb82c18 <col:53> 'bool' Int: 0
| | | |   |   `-SubstNonTypeTemplateParmExpr 0xb82bd8 <col:53> 'bool'
| | | |   |     `-CXXBoolLiteralExpr 0xb82bc8 <col:53> 'bool' false
| | | |   `-RecordType 0xb82d50 'std::__cv_selector<unsigned short, false, false>'
| | | |     `-ClassTemplateSpecialization 0xb82c38 '__cv_selector'
| | | |-AccessSpecDecl 0xb82e98 <line:1539:5, col:11> col:5 public
| | | `-TypedefDecl 0xb83260 <line:1540:7, col:40> col:40 referenced __type 'typename __match::__type':'unsigned short'
| | |   `-ElaboratedType 0xb83210 'typename __match::__type' sugar
| | |     `-TypedefType 0xb831f0 'std::__cv_selector<unsigned short, false, false>::__type' sugar
| | |       |-Typedef 0xb83180 '__type'
| | |       `-SubstTemplateTypeParmType 0xb82f60 'unsigned short' sugar
| | |         |-TemplateTypeParmType 0xb69780 '_Unqualified' dependent depth 0 index 0
| | |         | `-TemplateTypeParm 0xb69728 '_Unqualified'
| | |         `-BuiltinType 0x7db400 'unsigned short'
| | |-ClassTemplateSpecializationDecl 0xb85600 <line:1532:3, line:1541:5> line:1535:11 class __match_cv_qualifiers definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'char32_t'
| | | |-TemplateArgument type 'unsigned int'
| | | |-TemplateArgument integral 0
| | | |-TemplateArgument integral 0
| | | |-CXXRecordDecl 0xb85880 prev 0xb85600 <col:5, col:11> col:11 implicit class __match_cv_qualifiers
| | | |-TypedefDecl 0xb85a90 <line:1537:7, col:61> col:61 __match '__cv_selector<unsigned int, false, false>':'std::__cv_selector<unsigned int, false, false>'
| | | | `-TemplateSpecializationType 0xb859c0 '__cv_selector<unsigned int, false, false>' sugar __cv_selector
| | | |   |-TemplateArgument type 'unsigned int':'unsigned int'
| | | |   |-TemplateArgument expr
| | | |   | `-ConstantExpr 0xb85980 <col:43> 'bool' Int: 0
| | | |   |   `-SubstNonTypeTemplateParmExpr 0xb85930 <col:43> 'bool'
| | | |   |     `-CXXBoolLiteralExpr 0xb85920 <col:43> 'bool' false
| | | |   |-TemplateArgument expr
| | | |   | `-ConstantExpr 0xb859a0 <col:53> 'bool' Int: 0
| | | |   |   `-SubstNonTypeTemplateParmExpr 0xb85960 <col:53> 'bool'
| | | |   |     `-CXXBoolLiteralExpr 0xb85950 <col:53> 'bool' false
| | | |   `-RecordType 0xb7e6a0 'std::__cv_selector<unsigned int, false, false>'
| | | |     `-ClassTemplateSpecialization 0xb7e588 '__cv_selector'
| | | |-AccessSpecDecl 0xb85ae8 <line:1539:5, col:11> col:5 public
| | | `-TypedefDecl 0xb85bc0 <line:1540:7, col:40> col:40 referenced __type 'typename __match::__type':'unsigned int'
| | |   `-ElaboratedType 0xb85b70 'typename __match::__type' sugar
| | |     `-TypedefType 0xb7eb40 'std::__cv_selector<unsigned int, false, false>::__type' sugar
| | |       |-Typedef 0xb7ead0 '__type'
| | |       `-SubstTemplateTypeParmType 0xb7e8b0 'unsigned int' sugar
| | |         |-TemplateTypeParmType 0xb69780 '_Unqualified' dependent depth 0 index 0
| | |         | `-TemplateTypeParm 0xb69728 '_Unqualified'
| | |         `-BuiltinType 0x7db420 'unsigned int'
| | |-ClassTemplateSpecializationDecl 0xb9cbc8 <line:1532:3, line:1541:5> line:1535:11 class __match_cv_qualifiers definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'unsigned int'
| | | |-TemplateArgument type 'int'
| | | |-TemplateArgument integral 0
| | | |-TemplateArgument integral 0
| | | |-CXXRecordDecl 0xb9ce40 prev 0xb9cbc8 <col:5, col:11> col:11 implicit class __match_cv_qualifiers
| | | |-TypedefDecl 0xb9d1b0 <line:1537:7, col:61> col:61 __match '__cv_selector<int, false, false>':'std::__cv_selector<int, false, false>'
| | | | `-TemplateSpecializationType 0xb9d0e0 '__cv_selector<int, false, false>' sugar __cv_selector
| | | |   |-TemplateArgument type 'int':'int'
| | | |   |-TemplateArgument expr
| | | |   | `-ConstantExpr 0xb9cf68 <col:43> 'bool' Int: 0
| | | |   |   `-SubstNonTypeTemplateParmExpr 0xb9cf18 <col:43> 'bool'
| | | |   |     `-CXXBoolLiteralExpr 0xb9cf08 <col:43> 'bool' false
| | | |   |-TemplateArgument expr
| | | |   | `-ConstantExpr 0xb9cf88 <col:53> 'bool' Int: 0
| | | |   |   `-SubstNonTypeTemplateParmExpr 0xb9cf48 <col:53> 'bool'
| | | |   |     `-CXXBoolLiteralExpr 0xb9cf38 <col:53> 'bool' false
| | | |   `-RecordType 0xb9d0c0 'std::__cv_selector<int, false, false>'
| | | |     `-ClassTemplateSpecialization 0xb9cfa8 '__cv_selector'
| | | |-AccessSpecDecl 0xb9d208 <line:1539:5, col:11> col:5 public
| | | `-TypedefDecl 0xb9d5d0 <line:1540:7, col:40> col:40 referenced __type 'typename __match::__type':'int'
| | |   `-ElaboratedType 0xb9d580 'typename __match::__type' sugar
| | |     `-TypedefType 0xb9d560 'std::__cv_selector<int, false, false>::__type' sugar
| | |       |-Typedef 0xb9d4f0 '__type'
| | |       `-SubstTemplateTypeParmType 0xb9d2d0 'int' sugar
| | |         |-TemplateTypeParmType 0xb69780 '_Unqualified' dependent depth 0 index 0
| | |         | `-TemplateTypeParm 0xb69728 '_Unqualified'
| | |         `-BuiltinType 0x7db380 'int'
| | `-ClassTemplateSpecializationDecl 0xba2578 <line:1532:3, line:1541:5> line:1535:11 class __match_cv_qualifiers definition
| |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-TemplateArgument type 'unsigned short'
| |   |-TemplateArgument type 'short'
| |   |-TemplateArgument integral 0
| |   |-TemplateArgument integral 0
| |   |-CXXRecordDecl 0xba27f0 prev 0xba2578 <col:5, col:11> col:11 implicit class __match_cv_qualifiers
| |   |-TypedefDecl 0xba2b80 <line:1537:7, col:61> col:61 __match '__cv_selector<short, false, false>':'std::__cv_selector<short, false, false>'
| |   | `-TemplateSpecializationType 0xba2ab0 '__cv_selector<short, false, false>' sugar __cv_selector
| |   |   |-TemplateArgument type 'short':'short'
| |   |   |-TemplateArgument expr
| |   |   | `-ConstantExpr 0xba2938 <col:43> 'bool' Int: 0
| |   |   |   `-SubstNonTypeTemplateParmExpr 0xba28e8 <col:43> 'bool'
| |   |   |     `-CXXBoolLiteralExpr 0xba28d8 <col:43> 'bool' false
| |   |   |-TemplateArgument expr
| |   |   | `-ConstantExpr 0xba2958 <col:53> 'bool' Int: 0
| |   |   |   `-SubstNonTypeTemplateParmExpr 0xba2918 <col:53> 'bool'
| |   |   |     `-CXXBoolLiteralExpr 0xba2908 <col:53> 'bool' false
| |   |   `-RecordType 0xba2a90 'std::__cv_selector<short, false, false>'
| |   |     `-ClassTemplateSpecialization 0xba2978 '__cv_selector'
| |   |-AccessSpecDecl 0xba2bd8 <line:1539:5, col:11> col:5 public
| |   `-TypedefDecl 0xba2fa0 <line:1540:7, col:40> col:40 referenced __type 'typename __match::__type':'short'
| |     `-ElaboratedType 0xba2f50 'typename __match::__type' sugar
| |       `-TypedefType 0xba2f30 'std::__cv_selector<short, false, false>::__type' sugar
| |         |-Typedef 0xba2ec0 '__type'
| |         `-SubstTemplateTypeParmType 0xba2ca0 'short' sugar
| |           |-TemplateTypeParmType 0xb69780 '_Unqualified' dependent depth 0 index 0
| |           | `-TemplateTypeParm 0xb69728 '_Unqualified'
| |           `-BuiltinType 0x7db360 'short'
| |-ClassTemplateDecl 0xb6bfd8 <line:1544:3, line:1546:27> line:1545:12 __make_unsigned
| | |-TemplateTypeParmDecl 0xb6beb0 <line:1544:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0xb6bf48 <line:1545:5, line:1546:27> line:1545:12 struct __make_unsigned definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-CXXRecordDecl 0xb6c230 <col:5, col:12> col:12 implicit struct __make_unsigned
| | | `-TypedefDecl 0xb6c2d0 <line:1546:7, col:19> col:19 __type '_Tp'
| | |   `-TemplateTypeParmType 0xb6bf00 '_Tp' dependent depth 0 index 0
| | |     `-TemplateTypeParm 0xb6beb0 '_Tp'
| | |-ClassTemplateSpecialization 0xb6c368 '__make_unsigned'
| | |-ClassTemplateSpecialization 0xb6c6d0 '__make_unsigned'
| | |-ClassTemplateSpecialization 0xb6ca30 '__make_unsigned'
| | |-ClassTemplateSpecialization 0xb6cd90 '__make_unsigned'
| | |-ClassTemplateSpecialization 0xb6d0f0 '__make_unsigned'
| | |-ClassTemplateSpecialization 0xb6e480 '__make_unsigned'
| | |-ClassTemplateSpecialization 0xb6e7e0 '__make_unsigned'
| | |-ClassTemplateSpecialization 0xb77250 '__make_unsigned'
| | |-ClassTemplateSpecialization 0xb7ee40 '__make_unsigned'
| | `-ClassTemplateSpecialization 0xb834f0 '__make_unsigned'
| |-ClassTemplateSpecializationDecl 0xb6c368 <line:1548:3, line:1550:37> line:1549:12 struct __make_unsigned definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'char'
| | |-CXXRecordDecl 0xb6c588 <col:5, col:12> col:12 implicit struct __make_unsigned
| | `-TypedefDecl 0xb6c630 <line:1550:7, col:29> col:29 __type 'unsigned char'
| |   `-BuiltinType 0x7db3e0 'unsigned char'
| |-ClassTemplateSpecializationDecl 0xb6c6d0 <line:1552:3, line:1554:37> line:1553:12 struct __make_unsigned definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'signed char'
| | |-CXXRecordDecl 0xb6c8e8 <col:5, col:12> col:12 implicit struct __make_unsigned
| | `-TypedefDecl 0xb6c990 <line:1554:7, col:29> col:29 __type 'unsigned char'
| |   `-BuiltinType 0x7db3e0 'unsigned char'
| |-ClassTemplateSpecializationDecl 0xb6ca30 <line:1556:3, line:1558:38> line:1557:12 struct __make_unsigned definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'short'
| | |-CXXRecordDecl 0xb6cc48 <col:5, col:12> col:12 implicit struct __make_unsigned
| | `-TypedefDecl 0xb6ccf0 <line:1558:7, col:30> col:30 __type 'unsigned short'
| |   `-BuiltinType 0x7db400 'unsigned short'
| |-ClassTemplateSpecializationDecl 0xb6cd90 <line:1560:3, line:1562:36> line:1561:12 struct __make_unsigned definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'int'
| | |-CXXRecordDecl 0xb6cfa8 <col:5, col:12> col:12 implicit struct __make_unsigned
| | `-TypedefDecl 0xb6d050 <line:1562:7, col:28> col:28 __type 'unsigned int'
| |   `-BuiltinType 0x7db420 'unsigned int'
| |-ClassTemplateSpecializationDecl 0xb6d0f0 <line:1564:3, line:1566:37> line:1565:12 struct __make_unsigned definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'long'
| | |-CXXRecordDecl 0xb6e338 <col:5, col:12> col:12 implicit struct __make_unsigned
| | `-TypedefDecl 0xb6e3e0 <line:1566:7, col:29> col:29 __type 'unsigned long'
| |   `-BuiltinType 0x7db440 'unsigned long'
| |-ClassTemplateSpecializationDecl 0xb6e480 <line:1568:3, line:1570:42> line:1569:12 struct __make_unsigned definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'long long'
| | |-CXXRecordDecl 0xb6e698 <col:5, col:12> col:12 implicit struct __make_unsigned
| | `-TypedefDecl 0xb6e740 <line:1570:7, col:34> col:34 __type 'unsigned long long'
| |   `-BuiltinType 0x7db460 'unsigned long long'
| |-ClassTemplateSpecializationDecl 0xb6e7e0 <line:1573:3, line:1575:55> line:1574:12 struct __make_unsigned definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type '__int128'
| | |-CXXRecordDecl 0xb6e9f8 <col:5, col:12> col:12 implicit struct __make_unsigned
| | `-TypedefDecl 0xb6eaa0 <line:1575:7, col:47> col:47 __type 'unsigned __int128'
| |   `-BuiltinType 0x7db840 'unsigned __int128'
| |-ClassTemplateDecl 0xb6ef50 <line:1594:3, line:1597:11> col:11 __make_unsigned_selector
| | |-TemplateTypeParmDecl 0xb6eb10 <line:1594:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0xb6ec98 <line:1595:5, col:37> col:10 'bool' depth 0 index 1 _IsInt
| | | `-TemplateArgument expr
| | |   `-ImplicitCastExpr 0xb6ecf8 <col:19, col:37> 'bool' <Dependent>
| | |     `-DependentScopeDeclRefExpr 0xb6ec50 <col:19, col:37> '<dependent type>' lvalue
| | |-NonTypeTemplateParmDecl 0xb6ee18 <line:1596:5, col:34> col:10 'bool' depth 0 index 2 _IsEnum
| | | `-TemplateArgument expr
| | |   `-ImplicitCastExpr 0xb6ee78 <col:20, col:34> 'bool' <Dependent>
| | |     `-DependentScopeDeclRefExpr 0xb6edd0 <col:20, col:34> '<dependent type>' lvalue
| | |-CXXRecordDecl 0xb6eec0 <line:1597:5, col:11> col:11 class __make_unsigned_selector
| | |-ClassTemplateSpecializationDecl 0xb7b190 <line:1633:3, line:1646:5> line:1634:11 class __make_unsigned_selector definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-private 'std::__make_unsigned_selector_base'
| | | |-TemplateArgument type 'wchar_t'
| | | |-TemplateArgument integral 0
| | | |-TemplateArgument integral 1
| | | |-CXXRecordDecl 0xb7b540 prev 0xb7b190 <col:5, col:11> col:11 implicit class __make_unsigned_selector
| | | |-TypeAliasDecl 0xb7b5d0 <line:1638:7, line:1639:40> line:1638:13 _UInts '_List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>':'std::__make_unsigned_selector_base::_List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>'
| | | | `-TemplateSpecializationType 0xb74790 '_List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>' sugar _List
| | | |   |-TemplateArgument type 'unsigned char'
| | | |   |-TemplateArgument type 'unsigned short'
| | | |   |-TemplateArgument type 'unsigned int'
| | | |   |-TemplateArgument type 'unsigned long'
| | | |   |-TemplateArgument type 'unsigned long long'
| | | |   `-RecordType 0xb74770 'std::__make_unsigned_selector_base::_List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>'
| | | |     `-ClassTemplateSpecialization 0xb74688 '_List'
| | | |-TypeAliasDecl 0xb7d700 <line:1641:7, col:71> col:13 __unsigned_type 'typename __select<sizeof(wchar_t), _UInts>::__type':'unsigned int'
| | | | `-ElaboratedType 0xb7d6b0 'typename __select<sizeof(wchar_t), _UInts>::__type' sugar
| | | |   `-TypedefType 0xb7d690 'std::__make_unsigned_selector_base::__select<4, std::__make_unsigned_selector_base::_List<unsigned int, unsigned long, unsigned long long>, true>::__type' sugar
| | | |     |-TypeAlias 0xb7d468 '__type'
| | | |     `-SubstTemplateTypeParmType 0xb7d0d0 'unsigned int' sugar
| | | |       |-TemplateTypeParmType 0xb71570 '_Uint' dependent depth 0 index 1
| | | |       | `-TemplateTypeParm 0xb71518 '_Uint'
| | | |       `-BuiltinType 0x7db420 'unsigned int'
| | | |-AccessSpecDecl 0xb7d760 <line:1643:5, col:11> col:5 public
| | | `-TypeAliasDecl 0xb7ec90 <line:1644:7, line:1645:58> line:1644:13 referenced __type 'typename __match_cv_qualifiers<wchar_t, __unsigned_type>::__type':'unsigned int'
| | |   `-ElaboratedType 0xb7ec40 'typename __match_cv_qualifiers<wchar_t, __unsigned_type>::__type' sugar
| | |     `-TypedefType 0xb7ec20 'std::__match_cv_qualifiers<wchar_t, unsigned int, false, false>::__type' sugar
| | |       |-Typedef 0xb7ebb0 '__type'
| | |       `-ElaboratedType 0xb7eb60 'typename __match::__type' sugar
| | |         `-TypedefType 0xb7eb40 'std::__cv_selector<unsigned int, false, false>::__type' sugar
| | |           |-Typedef 0xb7ead0 '__type'
| | |           `-SubstTemplateTypeParmType 0xb7e8b0 'unsigned int' sugar
| | |             |-TemplateTypeParmType 0xb69780 '_Unqualified' dependent depth 0 index 0
| | |             | `-TemplateTypeParm 0xb69728 '_Unqualified'
| | |             `-BuiltinType 0x7db420 'unsigned int'
| | |-ClassTemplateSpecializationDecl 0xb805c0 <line:1633:3, line:1646:5> line:1634:11 class __make_unsigned_selector definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-private 'std::__make_unsigned_selector_base'
| | | |-TemplateArgument type 'char16_t'
| | | |-TemplateArgument integral 0
| | | |-TemplateArgument integral 1
| | | |-CXXRecordDecl 0xb80970 prev 0xb805c0 <col:5, col:11> col:11 implicit class __make_unsigned_selector
| | | |-TypeAliasDecl 0xb80a00 <line:1638:7, line:1639:40> line:1638:13 _UInts '_List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>':'std::__make_unsigned_selector_base::_List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>'
| | | | `-TemplateSpecializationType 0xb74790 '_List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>' sugar _List
| | | |   |-TemplateArgument type 'unsigned char'
| | | |   |-TemplateArgument type 'unsigned short'
| | | |   |-TemplateArgument type 'unsigned int'
| | | |   |-TemplateArgument type 'unsigned long'
| | | |   |-TemplateArgument type 'unsigned long long'
| | | |   `-RecordType 0xb74770 'std::__make_unsigned_selector_base::_List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>'
| | | |     `-ClassTemplateSpecialization 0xb74688 '_List'
| | | |-TypeAliasDecl 0xb81fe0 <line:1641:7, col:71> col:13 __unsigned_type 'typename __select<sizeof(char16_t), _UInts>::__type':'unsigned short'
| | | | `-ElaboratedType 0xb81f90 'typename __select<sizeof(char16_t), _UInts>::__type' sugar
| | | |   `-TypedefType 0xb81f70 'std::__make_unsigned_selector_base::__select<2, std::__make_unsigned_selector_base::_List<unsigned short, unsigned int, unsigned long, unsigned long long>, true>::__type' sugar
| | | |     |-TypeAlias 0xb81e20 '__type'
| | | |     `-SubstTemplateTypeParmType 0xb81a40 'unsigned short' sugar
| | | |       |-TemplateTypeParmType 0xb71570 '_Uint' dependent depth 0 index 1
| | | |       | `-TemplateTypeParm 0xb71518 '_Uint'
| | | |       `-BuiltinType 0x7db400 'unsigned short'
| | | |-AccessSpecDecl 0xb82040 <line:1643:5, col:11> col:5 public
| | | `-TypeAliasDecl 0xb83340 <line:1644:7, line:1645:58> line:1644:13 referenced __type 'typename __match_cv_qualifiers<char16_t, __unsigned_type>::__type':'unsigned short'
| | |   `-ElaboratedType 0xb832f0 'typename __match_cv_qualifiers<char16_t, __unsigned_type>::__type' sugar
| | |     `-TypedefType 0xb832d0 'std::__match_cv_qualifiers<char16_t, unsigned short, false, false>::__type' sugar
| | |       |-Typedef 0xb83260 '__type'
| | |       `-ElaboratedType 0xb83210 'typename __match::__type' sugar
| | |         `-TypedefType 0xb831f0 'std::__cv_selector<unsigned short, false, false>::__type' sugar
| | |           |-Typedef 0xb83180 '__type'
| | |           `-SubstTemplateTypeParmType 0xb82f60 'unsigned short' sugar
| | |             |-TemplateTypeParmType 0xb69780 '_Unqualified' dependent depth 0 index 0
| | |             | `-TemplateTypeParm 0xb69728 '_Unqualified'
| | |             `-BuiltinType 0x7db400 'unsigned short'
| | |-ClassTemplateSpecializationDecl 0xb83808 <line:1633:3, line:1646:5> line:1634:11 class __make_unsigned_selector definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-private 'std::__make_unsigned_selector_base'
| | | |-TemplateArgument type 'char32_t'
| | | |-TemplateArgument integral 0
| | | |-TemplateArgument integral 1
| | | |-CXXRecordDecl 0xb83bc0 prev 0xb83808 <col:5, col:11> col:11 implicit class __make_unsigned_selector
| | | |-TypeAliasDecl 0xb83c50 <line:1638:7, line:1639:40> line:1638:13 _UInts '_List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>':'std::__make_unsigned_selector_base::_List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>'
| | | | `-TemplateSpecializationType 0xb74790 '_List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>' sugar _List
| | | |   |-TemplateArgument type 'unsigned char'
| | | |   |-TemplateArgument type 'unsigned short'
| | | |   |-TemplateArgument type 'unsigned int'
| | | |   |-TemplateArgument type 'unsigned long'
| | | |   |-TemplateArgument type 'unsigned long long'
| | | |   `-RecordType 0xb74770 'std::__make_unsigned_selector_base::_List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>'
| | | |     `-ClassTemplateSpecialization 0xb74688 '_List'
| | | |-TypeAliasDecl 0xb83f60 <line:1641:7, col:71> col:13 __unsigned_type 'typename __select<sizeof(char32_t), _UInts>::__type':'unsigned int'
| | | | `-ElaboratedType 0xb83f10 'typename __select<sizeof(char32_t), _UInts>::__type' sugar
| | | |   `-TypedefType 0xb7d690 'std::__make_unsigned_selector_base::__select<4, std::__make_unsigned_selector_base::_List<unsigned int, unsigned long, unsigned long long>, true>::__type' sugar
| | | |     |-TypeAlias 0xb7d468 '__type'
| | | |     `-SubstTemplateTypeParmType 0xb7d0d0 'unsigned int' sugar
| | | |       |-TemplateTypeParmType 0xb71570 '_Uint' dependent depth 0 index 1
| | | |       | `-TemplateTypeParm 0xb71518 '_Uint'
| | | |       `-BuiltinType 0x7db420 'unsigned int'
| | | |-AccessSpecDecl 0xb83fc0 <line:1643:5, col:11> col:5 public
| | | `-TypeAliasDecl 0xb85ca0 <line:1644:7, line:1645:58> line:1644:13 referenced __type 'typename __match_cv_qualifiers<char32_t, __unsigned_type>::__type':'unsigned int'
| | |   `-ElaboratedType 0xb85c50 'typename __match_cv_qualifiers<char32_t, __unsigned_type>::__type' sugar
| | |     `-TypedefType 0xb85c30 'std::__match_cv_qualifiers<char32_t, unsigned int, false, false>::__type' sugar
| | |       |-Typedef 0xb85bc0 '__type'
| | |       `-ElaboratedType 0xb85b70 'typename __match::__type' sugar
| | |         `-TypedefType 0xb7eb40 'std::__cv_selector<unsigned int, false, false>::__type' sugar
| | |           |-Typedef 0xb7ead0 '__type'
| | |           `-SubstTemplateTypeParmType 0xb7e8b0 'unsigned int' sugar
| | |             |-TemplateTypeParmType 0xb69780 '_Unqualified' dependent depth 0 index 0
| | |             | `-TemplateTypeParm 0xb69728 '_Unqualified'
| | |             `-BuiltinType 0x7db420 'unsigned int'
| | |-ClassTemplateSpecializationDecl 0xad7da0 <line:1599:3, line:1608:5> line:1600:11 class __make_unsigned_selector definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'wchar_t'
| | | |-TemplateArgument integral 1
| | | |-TemplateArgument integral 0
| | | |-CXXRecordDecl 0xad80c0 prev 0xad7da0 <col:5, col:11> col:11 implicit class __make_unsigned_selector
| | | |-TypeAliasDecl 0xad8360 <line:1602:7, line:1603:61> line:1602:13 __unsigned_type 'typename __make_unsigned<typename remove_cv<wchar_t>::type>::__type':'unsigned int'
| | | | `-ElaboratedType 0xad8310 'typename __make_unsigned<typename remove_cv<wchar_t>::type>::__type' sugar
| | | |   `-TypedefType 0xad82f0 'std::__make_unsigned<wchar_t>::__type' sugar
| | | |     |-TypeAlias 0xb7eda0 '__type'
| | | |     `-ElaboratedType 0xb7ed30 'typename __make_unsigned_selector<wchar_t, false, true>::__type' sugar
| | | |       `-TypedefType 0xb7ed10 'std::__make_unsigned_selector<wchar_t, false, true>::__type' sugar
| | | |         |-TypeAlias 0xb7ec90 '__type'
| | | |         `-ElaboratedType 0xb7ec40 'typename __match_cv_qualifiers<wchar_t, __unsigned_type>::__type' sugar
| | | |           `-TypedefType 0xb7ec20 'std::__match_cv_qualifiers<wchar_t, unsigned int, false, false>::__type' sugar
| | | |             |-Typedef 0xb7ebb0 '__type'
| | | |             `-ElaboratedType 0xb7eb60 'typename __match::__type' sugar
| | | |               `-TypedefType 0xb7eb40 'std::__cv_selector<unsigned int, false, false>::__type' sugar
| | | |                 |-Typedef 0xb7ead0 '__type'
| | | |                 `-SubstTemplateTypeParmType 0xb7e8b0 'unsigned int' sugar
| | | |                   |-TemplateTypeParmType 0xb69780 '_Unqualified' dependent depth 0 index 0
| | | |                   | `-TemplateTypeParm 0xb69728 '_Unqualified'
| | | |                   `-BuiltinType 0x7db420 'unsigned int'
| | | |-AccessSpecDecl 0xad83c0 <line:1605:5, col:11> col:5 public
| | | `-TypeAliasDecl 0xad87d0 <line:1606:7, line:1607:58> line:1606:13 referenced __type 'typename __match_cv_qualifiers<wchar_t, __unsigned_type>::__type':'unsigned int'
| | |   `-ElaboratedType 0xad8780 'typename __match_cv_qualifiers<wchar_t, __unsigned_type>::__type' sugar
| | |     `-TypedefType 0xb7ec20 'std::__match_cv_qualifiers<wchar_t, unsigned int, false, false>::__type' sugar
| | |       |-Typedef 0xb7ebb0 '__type'
| | |       `-ElaboratedType 0xb7eb60 'typename __match::__type' sugar
| | |         `-TypedefType 0xb7eb40 'std::__cv_selector<unsigned int, false, false>::__type' sugar
| | |           |-Typedef 0xb7ead0 '__type'
| | |           `-SubstTemplateTypeParmType 0xb7e8b0 'unsigned int' sugar
| | |             |-TemplateTypeParmType 0xb69780 '_Unqualified' dependent depth 0 index 0
| | |             | `-TemplateTypeParm 0xb69728 '_Unqualified'
| | |             `-BuiltinType 0x7db420 'unsigned int'
| | |-ClassTemplateSpecializationDecl 0xb9f630 <line:1599:3, line:1608:5> line:1600:11 class __make_unsigned_selector definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'char16_t'
| | | |-TemplateArgument integral 1
| | | |-TemplateArgument integral 0
| | | |-CXXRecordDecl 0xb9f950 prev 0xb9f630 <col:5, col:11> col:11 implicit class __make_unsigned_selector
| | | |-TypeAliasDecl 0xb9fbf0 <line:1602:7, line:1603:61> line:1602:13 __unsigned_type 'typename __make_unsigned<typename remove_cv<char16_t>::type>::__type':'unsigned short'
| | | | `-ElaboratedType 0xb9fba0 'typename __make_unsigned<typename remove_cv<char16_t>::type>::__type' sugar
| | | |   `-TypedefType 0xb9fb80 'std::__make_unsigned<char16_t>::__type' sugar
| | | |     |-TypeAlias 0xb83450 '__type'
| | | |     `-ElaboratedType 0xb833e0 'typename __make_unsigned_selector<char16_t, false, true>::__type' sugar
| | | |       `-TypedefType 0xb833c0 'std::__make_unsigned_selector<char16_t, false, true>::__type' sugar
| | | |         |-TypeAlias 0xb83340 '__type'
| | | |         `-ElaboratedType 0xb832f0 'typename __match_cv_qualifiers<char16_t, __unsigned_type>::__type' sugar
| | | |           `-TypedefType 0xb832d0 'std::__match_cv_qualifiers<char16_t, unsigned short, false, false>::__type' sugar
| | | |             |-Typedef 0xb83260 '__type'
| | | |             `-ElaboratedType 0xb83210 'typename __match::__type' sugar
| | | |               `-TypedefType 0xb831f0 'std::__cv_selector<unsigned short, false, false>::__type' sugar
| | | |                 |-Typedef 0xb83180 '__type'
| | | |                 `-SubstTemplateTypeParmType 0xb82f60 'unsigned short' sugar
| | | |                   |-TemplateTypeParmType 0xb69780 '_Unqualified' dependent depth 0 index 0
| | | |                   | `-TemplateTypeParm 0xb69728 '_Unqualified'
| | | |                   `-BuiltinType 0x7db400 'unsigned short'
| | | |-AccessSpecDecl 0xb9fc50 <line:1605:5, col:11> col:5 public
| | | `-TypeAliasDecl 0xba0060 <line:1606:7, line:1607:58> line:1606:13 referenced __type 'typename __match_cv_qualifiers<char16_t, __unsigned_type>::__type':'unsigned short'
| | |   `-ElaboratedType 0xba0010 'typename __match_cv_qualifiers<char16_t, __unsigned_type>::__type' sugar
| | |     `-TypedefType 0xb832d0 'std::__match_cv_qualifiers<char16_t, unsigned short, false, false>::__type' sugar
| | |       |-Typedef 0xb83260 '__type'
| | |       `-ElaboratedType 0xb83210 'typename __match::__type' sugar
| | |         `-TypedefType 0xb831f0 'std::__cv_selector<unsigned short, false, false>::__type' sugar
| | |           |-Typedef 0xb83180 '__type'
| | |           `-SubstTemplateTypeParmType 0xb82f60 'unsigned short' sugar
| | |             |-TemplateTypeParmType 0xb69780 '_Unqualified' dependent depth 0 index 0
| | |             | `-TemplateTypeParm 0xb69728 '_Unqualified'
| | |             `-BuiltinType 0x7db400 'unsigned short'
| | `-ClassTemplateSpecializationDecl 0xba4f80 <line:1599:3, line:1608:5> line:1600:11 class __make_unsigned_selector definition
| |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-TemplateArgument type 'char32_t'
| |   |-TemplateArgument integral 1
| |   |-TemplateArgument integral 0
| |   |-CXXRecordDecl 0xba52a0 prev 0xba4f80 <col:5, col:11> col:11 implicit class __make_unsigned_selector
| |   |-TypeAliasDecl 0xba5540 <line:1602:7, line:1603:61> line:1602:13 __unsigned_type 'typename __make_unsigned<typename remove_cv<char32_t>::type>::__type':'unsigned int'
| |   | `-ElaboratedType 0xba54f0 'typename __make_unsigned<typename remove_cv<char32_t>::type>::__type' sugar
| |   |   `-TypedefType 0xba54d0 'std::__make_unsigned<char32_t>::__type' sugar
| |   |     |-TypeAlias 0xb85db0 '__type'
| |   |     `-ElaboratedType 0xb85d40 'typename __make_unsigned_selector<char32_t, false, true>::__type' sugar
| |   |       `-TypedefType 0xb85d20 'std::__make_unsigned_selector<char32_t, false, true>::__type' sugar
| |   |         |-TypeAlias 0xb85ca0 '__type'
| |   |         `-ElaboratedType 0xb85c50 'typename __match_cv_qualifiers<char32_t, __unsigned_type>::__type' sugar
| |   |           `-TypedefType 0xb85c30 'std::__match_cv_qualifiers<char32_t, unsigned int, false, false>::__type' sugar
| |   |             |-Typedef 0xb85bc0 '__type'
| |   |             `-ElaboratedType 0xb85b70 'typename __match::__type' sugar
| |   |               `-TypedefType 0xb7eb40 'std::__cv_selector<unsigned int, false, false>::__type' sugar
| |   |                 |-Typedef 0xb7ead0 '__type'
| |   |                 `-SubstTemplateTypeParmType 0xb7e8b0 'unsigned int' sugar
| |   |                   |-TemplateTypeParmType 0xb69780 '_Unqualified' dependent depth 0 index 0
| |   |                   | `-TemplateTypeParm 0xb69728 '_Unqualified'
| |   |                   `-BuiltinType 0x7db420 'unsigned int'
| |   |-AccessSpecDecl 0xba55a0 <line:1605:5, col:11> col:5 public
| |   `-TypeAliasDecl 0xba59b0 <line:1606:7, line:1607:58> line:1606:13 referenced __type 'typename __match_cv_qualifiers<char32_t, __unsigned_type>::__type':'unsigned int'
| |     `-ElaboratedType 0xba5960 'typename __match_cv_qualifiers<char32_t, __unsigned_type>::__type' sugar
| |       `-TypedefType 0xb85c30 'std::__match_cv_qualifiers<char32_t, unsigned int, false, false>::__type' sugar
| |         |-Typedef 0xb85bc0 '__type'
| |         `-ElaboratedType 0xb85b70 'typename __match::__type' sugar
| |           `-TypedefType 0xb7eb40 'std::__cv_selector<unsigned int, false, false>::__type' sugar
| |             |-Typedef 0xb7ead0 '__type'
| |             `-SubstTemplateTypeParmType 0xb7e8b0 'unsigned int' sugar
| |               |-TemplateTypeParmType 0xb69780 '_Unqualified' dependent depth 0 index 0
| |               | `-TemplateTypeParm 0xb69728 '_Unqualified'
| |               `-BuiltinType 0x7db420 'unsigned int'
| |-ClassTemplatePartialSpecializationDecl 0xb6f470 <line:1599:3, line:1608:5> line:1600:11 class __make_unsigned_selector definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 1
| | |-TemplateArgument integral 0
| | |-TemplateTypeParmDecl 0xb6f1d8 <line:1599:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0xb6f788 <line:1600:5, col:11> col:11 implicit class __make_unsigned_selector
| | |-TypeAliasDecl 0xb6fac0 <line:1602:7, line:1603:61> line:1602:13 referenced __unsigned_type 'typename __make_unsigned<typename remove_cv<_Tp>::type>::__type'
| | | `-DependentNameType 0xb6fa50 'typename __make_unsigned<typename remove_cv<_Tp>::type>::__type' dependent
| | |-AccessSpecDecl 0xb6fb20 <line:1605:5, col:11> col:5 public
| | `-TypeAliasDecl 0xb70000 <line:1606:7, line:1607:58> line:1606:13 __type 'typename __match_cv_qualifiers<_Tp, __unsigned_type>::__type'
| |   `-DependentNameType 0xb6ff90 'typename __match_cv_qualifiers<_Tp, __unsigned_type>::__type' dependent
| |-CXXRecordDecl 0xb70078 <line:1610:3, line:1630:3> line:1610:9 referenced class __make_unsigned_selector_base definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-CXXRecordDecl 0xb70198 <col:3, col:9> col:9 implicit class __make_unsigned_selector_base
| | |-AccessSpecDecl 0xb70228 <line:1612:3, col:12> col:3 protected
| | |-ClassTemplateDecl 0xb70378 <line:1613:5, col:42> col:34 _List
| | | |-TemplateTypeParmDecl 0xb70250 <col:14> col:25 typename depth 0 index 0 ...
| | | |-CXXRecordDecl 0xb702e8 <col:27, col:42> col:34 struct _List definition
| | | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | | `-Destructor simple irrelevant trivial needs_implicit
| | | | `-CXXRecordDecl 0xb70630 <col:27, col:34> col:34 implicit struct _List
| | | |-ClassTemplateSpecializationDecl 0xb74688 <line:1615:5, line:1617:55> line:1616:14 struct _List definition
| | | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | | `-Destructor simple irrelevant trivial needs_implicit
| | | | |-public '_List<unsigned short, unsigned int, unsigned long, unsigned long long>':'std::__make_unsigned_selector_base::_List<unsigned short, unsigned int, unsigned long, unsigned long long>'
| | | | |-TemplateArgument pack
| | | | | |-TemplateArgument type 'unsigned char'
| | | | | |-TemplateArgument type 'unsigned short'
| | | | | |-TemplateArgument type 'unsigned int'
| | | | | |-TemplateArgument type 'unsigned long'
| | | | | `-TemplateArgument type 'unsigned long long'
| | | | |-CXXRecordDecl 0xb76880 prev 0xb74688 <col:7, col:14> col:14 implicit struct _List
| | | | `-VarDecl 0xb76910 <line:1617:9, col:52> col:33 referenced __size 'const std::size_t':'const unsigned long' static constexpr cinit
| | | |   `-UnaryExprOrTypeTraitExpr 0xb76998 <col:42, col:52> 'unsigned long' sizeof 'unsigned char':'unsigned char'
| | | |-ClassTemplateSpecializationDecl 0xb74ef8 <line:1615:5, line:1617:55> line:1616:14 struct _List definition
| | | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | | `-Destructor simple irrelevant trivial needs_implicit
| | | | |-public '_List<unsigned int, unsigned long, unsigned long long>':'std::__make_unsigned_selector_base::_List<unsigned int, unsigned long, unsigned long long>'
| | | | |-TemplateArgument pack
| | | | | |-TemplateArgument type 'unsigned short'
| | | | | |-TemplateArgument type 'unsigned int'
| | | | | |-TemplateArgument type 'unsigned long'
| | | | | `-TemplateArgument type 'unsigned long long'
| | | | |-CXXRecordDecl 0xb766a8 prev 0xb74ef8 <col:7, col:14> col:14 implicit struct _List
| | | | `-VarDecl 0xb76738 <line:1617:9, col:52> col:33 referenced __size 'const std::size_t':'const unsigned long' static constexpr cinit
| | | |   `-UnaryExprOrTypeTraitExpr 0xb767c0 <col:42, col:52> 'unsigned long' sizeof 'unsigned short':'unsigned short'
| | | |-ClassTemplateSpecializationDecl 0xb75408 <line:1615:5, line:1617:55> line:1616:14 struct _List definition
| | | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | | `-Destructor simple irrelevant trivial needs_implicit
| | | | |-public '_List<unsigned long, unsigned long long>':'std::__make_unsigned_selector_base::_List<unsigned long, unsigned long long>'
| | | | |-TemplateArgument pack
| | | | | |-TemplateArgument type 'unsigned int'
| | | | | |-TemplateArgument type 'unsigned long'
| | | | | `-TemplateArgument type 'unsigned long long'
| | | | |-CXXRecordDecl 0xb764d0 prev 0xb75408 <col:7, col:14> col:14 implicit struct _List
| | | | `-VarDecl 0xb76560 <line:1617:9, col:52> col:33 referenced __size 'const std::size_t':'const unsigned long' static constexpr cinit
| | | |   `-UnaryExprOrTypeTraitExpr 0xb765e8 <col:42, col:52> 'unsigned long' sizeof 'unsigned int':'unsigned int'
| | | |-ClassTemplateSpecializationDecl 0xb75858 <line:1615:5, line:1617:55> line:1616:14 struct _List definition
| | | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | | `-Destructor simple irrelevant trivial needs_implicit
| | | | |-public '_List<unsigned long long>':'std::__make_unsigned_selector_base::_List<unsigned long long>'
| | | | |-TemplateArgument pack
| | | | | |-TemplateArgument type 'unsigned long'
| | | | | `-TemplateArgument type 'unsigned long long'
| | | | |-CXXRecordDecl 0xb762f8 prev 0xb75858 <col:7, col:14> col:14 implicit struct _List
| | | | `-VarDecl 0xb76388 <line:1617:9, col:52> col:33 __size 'const std::size_t':'const unsigned long' static constexpr cinit
| | | |   `-UnaryExprOrTypeTraitExpr 0xb76410 <col:42, col:52> 'unsigned long' sizeof 'unsigned long':'unsigned long'
| | | |-ClassTemplateSpecializationDecl 0xb75bd8 <line:1615:5, line:1617:55> line:1616:14 struct _List definition
| | | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | | `-Destructor simple irrelevant trivial needs_implicit
| | | | |-public '_List<>':'std::__make_unsigned_selector_base::_List<>'
| | | | |-TemplateArgument pack
| | | | | `-TemplateArgument type 'unsigned long long'
| | | | |-CXXRecordDecl 0xb76120 prev 0xb75bd8 <col:7, col:14> col:14 implicit struct _List
| | | | `-VarDecl 0xb761b0 <line:1617:9, col:52> col:33 __size 'const std::size_t':'const unsigned long' static constexpr cinit
| | | |   `-UnaryExprOrTypeTraitExpr 0xb76238 <col:42, col:52> 'unsigned long' sizeof 'unsigned long long':'unsigned long long'
| | | `-ClassTemplateSpecializationDecl 0xb75e98 <line:1613:5, col:42> col:34 struct _List definition
| | |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |   | |-MoveConstructor exists simple trivial needs_implicit
| | |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |   | |-MoveAssignment exists simple trivial needs_implicit
| | |   | `-Destructor simple irrelevant trivial needs_implicit
| | |   |-TemplateArgument pack
| | |   `-CXXRecordDecl 0xb76048 prev 0xb75e98 <col:27, col:34> col:34 implicit struct _List
| | |-ClassTemplatePartialSpecializationDecl 0xb709b0 <line:1615:5, line:1617:55> line:1616:14 struct _List definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '_List<_Up...>'
| | | |-TemplateArgument pack
| | | | |-TemplateArgument type 'type-parameter-0-0'
| | | | `-TemplateArgument type 'type-parameter-0-1...'
| | | |-TemplateTypeParmDecl 0xb706d8 <line:1615:14, col:23> col:23 referenced typename depth 0 index 0 _Tp
| | | |-TemplateTypeParmDecl 0xb70758 <col:28, col:40> col:40 referenced typename depth 0 index 1 ... _Up
| | | |-CXXRecordDecl 0xb70db0 <line:1616:7, col:14> col:14 implicit struct _List
| | | `-VarDecl 0xb70e50 <line:1617:9, col:52> col:33 __size 'const std::size_t':'const unsigned long' static constexpr cinit
| | |   `-UnaryExprOrTypeTraitExpr 0xb70ec8 <col:42, col:52> 'unsigned long' sizeof '_Tp'
| | |-ClassTemplateDecl 0xb71218 <line:1619:5, line:1620:14> col:14 __select
| | | |-NonTypeTemplateParmDecl 0xb70f10 <line:1619:14, col:21> col:21 referenced 'std::size_t':'unsigned long' depth 0 index 0 _Sz
| | | |-TemplateTypeParmDecl 0xb70f70 <col:26, col:35> col:35 typename depth 0 index 1 _Tp
| | | |-NonTypeTemplateParmDecl 0xb710e0 <col:40, col:66> col:45 'bool' depth 0 index 2
| | | | `-TemplateArgument expr
| | | |   `-ImplicitCastExpr 0xb71140 <col:47, col:66> 'bool' <Dependent>
| | | |     `-ParenExpr 0xb710b0 <col:47, col:66> '<dependent type>'
| | | |       `-BinaryOperator 0xb71090 <col:48, col:60> '<dependent type>' '<='
| | | |         |-DeclRefExpr 0xb70fe8 <col:48> 'std::size_t':'unsigned long' NonTypeTemplateParm 0xb70f10 '_Sz' 'std::size_t':'unsigned long'
| | | |         `-DependentScopeDeclRefExpr 0xb71058 <col:55, col:60> '<dependent type>' lvalue
| | | |-CXXRecordDecl 0xb71188 <line:1620:7, col:14> col:14 struct __select
| | | |-ClassTemplateSpecializationDecl 0xb7b7b8 <line:1626:5, line:1629:9> line:1627:14 struct __select definition
| | | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | | `-Destructor simple irrelevant trivial needs_implicit
| | | | |-public '__select<4UL, _List<unsigned short, unsigned int, unsigned long, unsigned long long> >':'std::__make_unsigned_selector_base::__select<4, std::__make_unsigned_selector_base::_List<unsigned short, unsigned int, unsigned long, unsigned long long>, false>'
| | | | |-TemplateArgument integral 4
| | | | |-TemplateArgument type 'std::__make_unsigned_selector_base::_List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>'
| | | | |-TemplateArgument integral 0
| | | | `-CXXRecordDecl 0xb7d5e8 prev 0xb7b7b8 <col:7, col:14> col:14 implicit struct __select
| | | |-ClassTemplateSpecializationDecl 0xb7c398 <line:1626:5, line:1629:9> line:1627:14 struct __select definition
| | | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | | `-Destructor simple irrelevant trivial needs_implicit
| | | | |-public '__select<4UL, _List<unsigned int, unsigned long, unsigned long long> >':'std::__make_unsigned_selector_base::__select<4, std::__make_unsigned_selector_base::_List<unsigned int, unsigned long, unsigned long long>, true>'
| | | | |-TemplateArgument integral 4
| | | | |-TemplateArgument type 'std::__make_unsigned_selector_base::_List<unsigned short, unsigned int, unsigned long, unsigned long long>'
| | | | |-TemplateArgument integral 0
| | | | `-CXXRecordDecl 0xb7d510 prev 0xb7c398 <col:7, col:14> col:14 implicit struct __select
| | | |-ClassTemplateSpecializationDecl 0xb7cd78 <line:1622:5, line:1624:31> line:1623:14 struct __select definition
| | | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | | `-Destructor simple irrelevant trivial needs_implicit
| | | | |-TemplateArgument integral 4
| | | | |-TemplateArgument type 'std::__make_unsigned_selector_base::_List<unsigned int, unsigned long, unsigned long long>'
| | | | |-TemplateArgument integral 1
| | | | |-CXXRecordDecl 0xb7d3c8 prev 0xb7cd78 <col:7, col:14> col:14 implicit struct __select
| | | | `-TypeAliasDecl 0xb7d468 <line:1624:9, col:24> col:15 referenced __type 'unsigned int':'unsigned int'
| | | |   `-SubstTemplateTypeParmType 0xb7d0d0 'unsigned int' sugar
| | | |     |-TemplateTypeParmType 0xb71570 '_Uint' dependent depth 0 index 1
| | | |     | `-TemplateTypeParm 0xb71518 '_Uint'
| | | |     `-BuiltinType 0x7db420 'unsigned int'
| | | |-ClassTemplateSpecializationDecl 0xb80be8 <line:1626:5, line:1629:9> line:1627:14 struct __select definition
| | | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | | `-Destructor simple irrelevant trivial needs_implicit
| | | | |-public '__select<2UL, _List<unsigned short, unsigned int, unsigned long, unsigned long long> >':'std::__make_unsigned_selector_base::__select<2, std::__make_unsigned_selector_base::_List<unsigned short, unsigned int, unsigned long, unsigned long long>, true>'
| | | | |-TemplateArgument integral 2
| | | | |-TemplateArgument type 'std::__make_unsigned_selector_base::_List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>'
| | | | |-TemplateArgument integral 0
| | | | `-CXXRecordDecl 0xb81ec8 prev 0xb80be8 <col:7, col:14> col:14 implicit struct __select
| | | `-ClassTemplateSpecializationDecl 0xb81698 <line:1622:5, line:1624:31> line:1623:14 struct __select definition
| | |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |   | |-MoveConstructor exists simple trivial needs_implicit
| | |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |   | |-MoveAssignment exists simple trivial needs_implicit
| | |   | `-Destructor simple irrelevant trivial needs_implicit
| | |   |-TemplateArgument integral 2
| | |   |-TemplateArgument type 'std::__make_unsigned_selector_base::_List<unsigned short, unsigned int, unsigned long, unsigned long long>'
| | |   |-TemplateArgument integral 1
| | |   |-CXXRecordDecl 0xb81d80 prev 0xb81698 <col:7, col:14> col:14 implicit struct __select
| | |   `-TypeAliasDecl 0xb81e20 <line:1624:9, col:24> col:15 referenced __type 'unsigned short':'unsigned short'
| | |     `-SubstTemplateTypeParmType 0xb81a40 'unsigned short' sugar
| | |       |-TemplateTypeParmType 0xb71570 '_Uint' dependent depth 0 index 1
| | |       | `-TemplateTypeParm 0xb71518 '_Uint'
| | |       `-BuiltinType 0x7db400 'unsigned short'
| | |-ClassTemplatePartialSpecializationDecl 0xb71a70 <line:1622:5, line:1624:31> line:1623:14 struct __select definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument expr
| | | | `-DeclRefExpr 0xb71678 <col:23> 'std::size_t':'unsigned long' NonTypeTemplateParm 0xb714b8 '_Sz' 'std::size_t':'unsigned long'
| | | |-TemplateArgument type '_List<type-parameter-0-1, type-parameter-0-2...>'
| | | |-TemplateArgument integral 1
| | | |-NonTypeTemplateParmDecl 0xb714b8 <line:1622:14, col:21> col:21 referenced 'std::size_t':'unsigned long' depth 0 index 0 _Sz
| | | |-TemplateTypeParmDecl 0xb71518 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Uint
| | | |-TemplateTypeParmDecl 0xb71598 <col:42, col:54> col:54 referenced typename depth 0 index 2 ... _UInts
| | | |-CXXRecordDecl 0xb71d78 <line:1623:7, col:14> col:14 implicit struct __select
| | | `-TypeAliasDecl 0xb71e18 <line:1624:9, col:24> col:15 __type '_Uint'
| | |   `-TemplateTypeParmType 0xb71570 '_Uint' dependent depth 0 index 1
| | |     `-TemplateTypeParm 0xb71518 '_Uint'
| | `-ClassTemplatePartialSpecializationDecl 0xb73790 <line:1626:5, line:1629:9> line:1627:14 struct __select definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__select<_Sz, _List<_UInts...> >'
| |   |-TemplateArgument expr
| |   | `-DeclRefExpr 0xb72028 <col:23> 'std::size_t':'unsigned long' NonTypeTemplateParm 0xb71ea0 '_Sz' 'std::size_t':'unsigned long'
| |   |-TemplateArgument type '_List<type-parameter-0-1, type-parameter-0-2...>'
| |   |-TemplateArgument integral 0
| |   |-NonTypeTemplateParmDecl 0xb71ea0 <line:1626:14, col:21> col:21 referenced 'std::size_t':'unsigned long' depth 0 index 0 _Sz
| |   |-TemplateTypeParmDecl 0xb71f00 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Uint
| |   |-TemplateTypeParmDecl 0xb71f78 <col:42, col:54> col:54 referenced typename depth 0 index 2 ... _UInts
| |   `-CXXRecordDecl 0xb73e60 <line:1627:7, col:14> col:14 implicit struct __select
| |-ClassTemplatePartialSpecializationDecl 0xb741b0 <line:1633:3, line:1646:5> line:1634:11 class __make_unsigned_selector definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-private 'std::__make_unsigned_selector_base'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 0
| | |-TemplateArgument integral 1
| | |-TemplateTypeParmDecl 0xb73f20 <line:1633:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0xb74508 <line:1634:5, col:11> col:11 implicit class __make_unsigned_selector
| | |-TypeAliasDecl 0xb74950 <line:1638:7, line:1639:40> line:1638:13 referenced _UInts '_List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>':'std::__make_unsigned_selector_base::_List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>'
| | | `-TemplateSpecializationType 0xb74790 '_List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>' sugar _List
| | |   |-TemplateArgument type 'unsigned char'
| | |   |-TemplateArgument type 'unsigned short'
| | |   |-TemplateArgument type 'unsigned int'
| | |   |-TemplateArgument type 'unsigned long'
| | |   |-TemplateArgument type 'unsigned long long'
| | |   `-RecordType 0xb74770 'std::__make_unsigned_selector_base::_List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>'
| | |     `-ClassTemplateSpecialization 0xb74688 '_List'
| | |-TypeAliasDecl 0xb76cd0 <line:1641:7, col:71> col:13 referenced __unsigned_type 'typename __select<sizeof(_Tp), _UInts>::__type'
| | | `-DependentNameType 0xb76c60 'typename __select<sizeof(_Tp), _UInts>::__type' dependent
| | |-AccessSpecDecl 0xb76d30 <line:1643:5, col:11> col:5 public
| | `-TypeAliasDecl 0xb771b0 <line:1644:7, line:1645:58> line:1644:13 __type 'typename __match_cv_qualifiers<_Tp, __unsigned_type>::__type'
| |   `-DependentNameType 0xb77140 'typename __match_cv_qualifiers<_Tp, __unsigned_type>::__type' dependent
| |-ClassTemplateSpecializationDecl 0xb77250 <line:1653:3, line:1658:5> line:1654:12 struct __make_unsigned definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'wchar_t'
| | |-CXXRecordDecl 0xb77468 <col:5, col:12> col:12 implicit struct __make_unsigned
| | `-TypeAliasDecl 0xb7eda0 <line:1656:7, line:1657:61> line:1656:13 referenced __type 'typename __make_unsigned_selector<wchar_t, false, true>::__type':'unsigned int'
| |   `-ElaboratedType 0xb7ed30 'typename __make_unsigned_selector<wchar_t, false, true>::__type' sugar
| |     `-TypedefType 0xb7ed10 'std::__make_unsigned_selector<wchar_t, false, true>::__type' sugar
| |       |-TypeAlias 0xb7ec90 '__type'
| |       `-ElaboratedType 0xb7ec40 'typename __match_cv_qualifiers<wchar_t, __unsigned_type>::__type' sugar
| |         `-TypedefType 0xb7ec20 'std::__match_cv_qualifiers<wchar_t, unsigned int, false, false>::__type' sugar
| |           |-Typedef 0xb7ebb0 '__type'
| |           `-ElaboratedType 0xb7eb60 'typename __match::__type' sugar
| |             `-TypedefType 0xb7eb40 'std::__cv_selector<unsigned int, false, false>::__type' sugar
| |               |-Typedef 0xb7ead0 '__type'
| |               `-SubstTemplateTypeParmType 0xb7e8b0 'unsigned int' sugar
| |                 |-TemplateTypeParmType 0xb69780 '_Unqualified' dependent depth 0 index 0
| |                 | `-TemplateTypeParm 0xb69728 '_Unqualified'
| |                 `-BuiltinType 0x7db420 'unsigned int'
| |-VarDecl 0xb7db88 parent 0xace450 prev 0xacf548 <line:72:5, col:48> col:48 used value 'const bool':'const bool' constexpr
| |-ClassTemplateSpecializationDecl 0xb7ee40 <line:1670:3, line:1675:5> line:1671:12 struct __make_unsigned definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'char16_t'
| | |-CXXRecordDecl 0xb7f058 <col:5, col:12> col:12 implicit struct __make_unsigned
| | `-TypeAliasDecl 0xb83450 <line:1673:7, line:1674:62> line:1673:13 referenced __type 'typename __make_unsigned_selector<char16_t, false, true>::__type':'unsigned short'
| |   `-ElaboratedType 0xb833e0 'typename __make_unsigned_selector<char16_t, false, true>::__type' sugar
| |     `-TypedefType 0xb833c0 'std::__make_unsigned_selector<char16_t, false, true>::__type' sugar
| |       |-TypeAlias 0xb83340 '__type'
| |       `-ElaboratedType 0xb832f0 'typename __match_cv_qualifiers<char16_t, __unsigned_type>::__type' sugar
| |         `-TypedefType 0xb832d0 'std::__match_cv_qualifiers<char16_t, unsigned short, false, false>::__type' sugar
| |           |-Typedef 0xb83260 '__type'
| |           `-ElaboratedType 0xb83210 'typename __match::__type' sugar
| |             `-TypedefType 0xb831f0 'std::__cv_selector<unsigned short, false, false>::__type' sugar
| |               |-Typedef 0xb83180 '__type'
| |               `-SubstTemplateTypeParmType 0xb82f60 'unsigned short' sugar
| |                 |-TemplateTypeParmType 0xb69780 '_Unqualified' dependent depth 0 index 0
| |                 | `-TemplateTypeParm 0xb69728 '_Unqualified'
| |                 `-BuiltinType 0x7db400 'unsigned short'
| |-ClassTemplateSpecializationDecl 0xb834f0 <line:1677:3, line:1682:5> line:1678:12 struct __make_unsigned definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'char32_t'
| | |-CXXRecordDecl 0xb83708 <col:5, col:12> col:12 implicit struct __make_unsigned
| | `-TypeAliasDecl 0xb85db0 <line:1680:7, line:1681:62> line:1680:13 referenced __type 'typename __make_unsigned_selector<char32_t, false, true>::__type':'unsigned int'
| |   `-ElaboratedType 0xb85d40 'typename __make_unsigned_selector<char32_t, false, true>::__type' sugar
| |     `-TypedefType 0xb85d20 'std::__make_unsigned_selector<char32_t, false, true>::__type' sugar
| |       |-TypeAlias 0xb85ca0 '__type'
| |       `-ElaboratedType 0xb85c50 'typename __match_cv_qualifiers<char32_t, __unsigned_type>::__type' sugar
| |         `-TypedefType 0xb85c30 'std::__match_cv_qualifiers<char32_t, unsigned int, false, false>::__type' sugar
| |           |-Typedef 0xb85bc0 '__type'
| |           `-ElaboratedType 0xb85b70 'typename __match::__type' sugar
| |             `-TypedefType 0xb7eb40 'std::__cv_selector<unsigned int, false, false>::__type' sugar
| |               |-Typedef 0xb7ead0 '__type'
| |               `-SubstTemplateTypeParmType 0xb7e8b0 'unsigned int' sugar
| |                 |-TemplateTypeParmType 0xb69780 '_Unqualified' dependent depth 0 index 0
| |                 | `-TemplateTypeParm 0xb69728 '_Unqualified'
| |                 `-BuiltinType 0x7db420 'unsigned int'
| |-ClassTemplateDecl 0xb85f58 <line:1688:3, line:1690:68> line:1689:12 make_unsigned
| | |-TemplateTypeParmDecl 0xb85e28 <line:1688:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0xb85ec8 <line:1689:5, line:1690:68> line:1689:12 struct make_unsigned definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-CXXRecordDecl 0xb861b0 <col:5, col:12> col:12 implicit struct make_unsigned
| | | `-TypedefDecl 0xb86670 <line:1690:7, col:62> col:62 type 'typename __make_unsigned_selector<_Tp>::__type'
| | |   `-DependentNameType 0xb86600 'typename __make_unsigned_selector<_Tp>::__type' dependent
| | `-ClassTemplateSpecialization 0xb86708 'make_unsigned'
| |-ClassTemplateSpecializationDecl 0xb86708 <line:1693:3, line:1694:30> col:12 struct make_unsigned
| | `-TemplateArgument type 'bool'
| |-ClassTemplateDecl 0xb869e8 <line:1698:3, line:1700:27> line:1699:12 __make_signed
| | |-TemplateTypeParmDecl 0xb868c0 <line:1698:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0xb86958 <line:1699:5, line:1700:27> line:1699:12 struct __make_signed definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-CXXRecordDecl 0xb86c40 <col:5, col:12> col:12 implicit struct __make_signed
| | | `-TypedefDecl 0xb86ce0 <line:1700:7, col:19> col:19 __type '_Tp'
| | |   `-TemplateTypeParmType 0xb86910 '_Tp' dependent depth 0 index 0
| | |     `-TemplateTypeParm 0xb868c0 '_Tp'
| | |-ClassTemplateSpecialization 0xb86d78 '__make_signed'
| | |-ClassTemplateSpecialization 0xb870e0 '__make_signed'
| | |-ClassTemplateSpecialization 0xb87440 '__make_signed'
| | |-ClassTemplateSpecialization 0xb877a0 '__make_signed'
| | |-ClassTemplateSpecialization 0xb87b00 '__make_signed'
| | |-ClassTemplateSpecialization 0xb87e60 '__make_signed'
| | |-ClassTemplateSpecialization 0xb881c0 '__make_signed'
| | |-ClassTemplateSpecialization 0xad5ef8 '__make_signed'
| | |-ClassTemplateSpecialization 0xb9d940 '__make_signed'
| | `-ClassTemplateSpecialization 0xba3310 '__make_signed'
| |-ClassTemplateSpecializationDecl 0xb86d78 <line:1702:3, line:1704:35> line:1703:12 struct __make_signed definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'char'
| | |-CXXRecordDecl 0xb86f98 <col:5, col:12> col:12 implicit struct __make_signed
| | `-TypedefDecl 0xb87040 <line:1704:7, col:27> col:27 __type 'signed char'
| |   `-BuiltinType 0x7db340 'signed char'
| |-ClassTemplateSpecializationDecl 0xb870e0 <line:1706:3, line:1708:35> line:1707:12 struct __make_signed definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'unsigned char'
| | |-CXXRecordDecl 0xb872f8 <col:5, col:12> col:12 implicit struct __make_signed
| | `-TypedefDecl 0xb873a0 <line:1708:7, col:27> col:27 __type 'signed char'
| |   `-BuiltinType 0x7db340 'signed char'
| |-ClassTemplateSpecializationDecl 0xb87440 <line:1710:3, line:1712:36> line:1711:12 struct __make_signed definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'unsigned short'
| | |-CXXRecordDecl 0xb87658 <col:5, col:12> col:12 implicit struct __make_signed
| | `-TypedefDecl 0xb87700 <line:1712:7, col:28> col:28 referenced __type 'short'
| |   `-BuiltinType 0x7db360 'short'
| |-ClassTemplateSpecializationDecl 0xb877a0 <line:1714:3, line:1716:34> line:1715:12 struct __make_signed definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'unsigned int'
| | |-CXXRecordDecl 0xb879b8 <col:5, col:12> col:12 implicit struct __make_signed
| | `-TypedefDecl 0xb87a60 <line:1716:7, col:26> col:26 referenced __type 'int'
| |   `-BuiltinType 0x7db380 'int'
| |-ClassTemplateSpecializationDecl 0xb87b00 <line:1718:3, line:1720:35> line:1719:12 struct __make_signed definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'unsigned long'
| | |-CXXRecordDecl 0xb87d18 <col:5, col:12> col:12 implicit struct __make_signed
| | `-TypedefDecl 0xb87dc0 <line:1720:7, col:27> col:27 __type 'long'
| |   `-BuiltinType 0x7db3a0 'long'
| |-ClassTemplateSpecializationDecl 0xb87e60 <line:1722:3, line:1724:40> line:1723:12 struct __make_signed definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'unsigned long long'
| | |-CXXRecordDecl 0xb88078 <col:5, col:12> col:12 implicit struct __make_signed
| | `-TypedefDecl 0xb88120 <line:1724:7, col:32> col:32 __type 'long long'
| |   `-BuiltinType 0x7db3c0 'long long'
| |-ClassTemplateSpecializationDecl 0xb881c0 <line:1727:3, line:1729:46> line:1728:12 struct __make_signed definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'unsigned __int128'
| | |-CXXRecordDecl 0xb883d8 <col:5, col:12> col:12 implicit struct __make_signed
| | `-TypedefDecl 0xb88480 <line:1729:7, col:38> col:38 __type '__int128'
| |   `-BuiltinType 0x7db820 '__int128'
| |-ClassTemplateDecl 0xb88930 <line:1748:3, line:1751:11> col:11 __make_signed_selector
| | |-TemplateTypeParmDecl 0xb884f0 <line:1748:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0xb88678 <line:1749:5, col:37> col:10 'bool' depth 0 index 1 _IsInt
| | | `-TemplateArgument expr
| | |   `-ImplicitCastExpr 0xb886d8 <col:19, col:37> 'bool' <Dependent>
| | |     `-DependentScopeDeclRefExpr 0xb88630 <col:19, col:37> '<dependent type>' lvalue
| | |-NonTypeTemplateParmDecl 0xb887f8 <line:1750:5, col:34> col:10 'bool' depth 0 index 2 _IsEnum
| | | `-TemplateArgument expr
| | |   `-ImplicitCastExpr 0xb88858 <col:20, col:34> 'bool' <Dependent>
| | |     `-DependentScopeDeclRefExpr 0xb887b0 <col:20, col:34> '<dependent type>' lvalue
| | |-CXXRecordDecl 0xb888a0 <line:1751:5, col:11> col:11 class __make_signed_selector
| | |-ClassTemplateSpecializationDecl 0xad6218 <line:1765:3, line:1772:5> line:1766:11 class __make_signed_selector definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'wchar_t'
| | | |-TemplateArgument integral 0
| | | |-TemplateArgument integral 1
| | | |-CXXRecordDecl 0xad65a0 prev 0xad6218 <col:5, col:11> col:11 implicit class __make_signed_selector
| | | |-TypedefDecl 0xad88c0 <line:1768:7, col:62> col:62 __unsigned_type 'typename __make_unsigned_selector<wchar_t>::__type':'unsigned int'
| | | | `-ElaboratedType 0xad8870 'typename __make_unsigned_selector<wchar_t>::__type' sugar
| | | |   `-TypedefType 0xad8850 'std::__make_unsigned_selector<wchar_t, true, false>::__type' sugar
| | | |     |-TypeAlias 0xad87d0 '__type'
| | | |     `-ElaboratedType 0xad8780 'typename __match_cv_qualifiers<wchar_t, __unsigned_type>::__type' sugar
| | | |       `-TypedefType 0xb7ec20 'std::__match_cv_qualifiers<wchar_t, unsigned int, false, false>::__type' sugar
| | | |         |-Typedef 0xb7ebb0 '__type'
| | | |         `-ElaboratedType 0xb7eb60 'typename __match::__type' sugar
| | | |           `-TypedefType 0xb7eb40 'std::__cv_selector<unsigned int, false, false>::__type' sugar
| | | |             |-Typedef 0xb7ead0 '__type'
| | | |             `-SubstTemplateTypeParmType 0xb7e8b0 'unsigned int' sugar
| | | |               |-TemplateTypeParmType 0xb69780 '_Unqualified' dependent depth 0 index 0
| | | |               | `-TemplateTypeParm 0xb69728 '_Unqualified'
| | | |               `-BuiltinType 0x7db420 'unsigned int'
| | | |-AccessSpecDecl 0xad8918 <line:1770:5, col:11> col:5 public
| | | `-TypedefDecl 0xb9d7a0 <line:1771:7, col:72> col:72 referenced __type 'typename __make_signed_selector<__unsigned_type>::__type':'int'
| | |   `-ElaboratedType 0xb9d750 'typename __make_signed_selector<__unsigned_type>::__type' sugar
| | |     `-TypedefType 0xb9d730 'std::__make_signed_selector<unsigned int, true, false>::__type' sugar
| | |       |-TypeAlias 0xb9d6b0 '__type'
| | |       `-ElaboratedType 0xb9d660 'typename __match_cv_qualifiers<unsigned int, __signed_type>::__type' sugar
| | |         `-TypedefType 0xb9d640 'std::__match_cv_qualifiers<unsigned int, int, false, false>::__type' sugar
| | |           |-Typedef 0xb9d5d0 '__type'
| | |           `-ElaboratedType 0xb9d580 'typename __match::__type' sugar
| | |             `-TypedefType 0xb9d560 'std::__cv_selector<int, false, false>::__type' sugar
| | |               |-Typedef 0xb9d4f0 '__type'
| | |               `-SubstTemplateTypeParmType 0xb9d2d0 'int' sugar
| | |                 |-TemplateTypeParmType 0xb69780 '_Unqualified' dependent depth 0 index 0
| | |                 | `-TemplateTypeParm 0xb69728 '_Unqualified'
| | |                 `-BuiltinType 0x7db380 'int'
| | |-ClassTemplateSpecializationDecl 0xb9bd80 <line:1753:3, line:1762:5> line:1754:11 class __make_signed_selector definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'unsigned int'
| | | |-TemplateArgument integral 1
| | | |-TemplateArgument integral 0
| | | |-CXXRecordDecl 0xb9c0b0 prev 0xb9bd80 <col:5, col:11> col:11 implicit class __make_signed_selector
| | | |-TypeAliasDecl 0xb9c350 <line:1756:7, line:1757:59> line:1756:13 __signed_type 'typename __make_signed<typename remove_cv<unsigned int>::type>::__type':'int'
| | | | `-ElaboratedType 0xb9c300 'typename __make_signed<typename remove_cv<unsigned int>::type>::__type' sugar
| | | |   `-TypedefType 0xb9c2e0 'std::__make_signed<unsigned int>::__type' sugar
| | | |     |-Typedef 0xb87a60 '__type'
| | | |     `-BuiltinType 0x7db380 'int'
| | | |-AccessSpecDecl 0xb9c3b0 <line:1759:5, col:11> col:5 public
| | | `-TypeAliasDecl 0xb9d6b0 <line:1760:7, line:1761:56> line:1760:13 referenced __type 'typename __match_cv_qualifiers<unsigned int, __signed_type>::__type':'int'
| | |   `-ElaboratedType 0xb9d660 'typename __match_cv_qualifiers<unsigned int, __signed_type>::__type' sugar
| | |     `-TypedefType 0xb9d640 'std::__match_cv_qualifiers<unsigned int, int, false, false>::__type' sugar
| | |       |-Typedef 0xb9d5d0 '__type'
| | |       `-ElaboratedType 0xb9d580 'typename __match::__type' sugar
| | |         `-TypedefType 0xb9d560 'std::__cv_selector<int, false, false>::__type' sugar
| | |           |-Typedef 0xb9d4f0 '__type'
| | |           `-SubstTemplateTypeParmType 0xb9d2d0 'int' sugar
| | |             |-TemplateTypeParmType 0xb69780 '_Unqualified' dependent depth 0 index 0
| | |             | `-TemplateTypeParm 0xb69728 '_Unqualified'
| | |             `-BuiltinType 0x7db380 'int'
| | |-ClassTemplateSpecializationDecl 0xb9dc58 <line:1765:3, line:1772:5> line:1766:11 class __make_signed_selector definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'char16_t'
| | | |-TemplateArgument integral 0
| | | |-TemplateArgument integral 1
| | | |-CXXRecordDecl 0xb9dfe0 prev 0xb9dc58 <col:5, col:11> col:11 implicit class __make_signed_selector
| | | |-TypedefDecl 0xba0150 <line:1768:7, col:62> col:62 __unsigned_type 'typename __make_unsigned_selector<char16_t>::__type':'unsigned short'
| | | | `-ElaboratedType 0xba0100 'typename __make_unsigned_selector<char16_t>::__type' sugar
| | | |   `-TypedefType 0xba00e0 'std::__make_unsigned_selector<char16_t, true, false>::__type' sugar
| | | |     |-TypeAlias 0xba0060 '__type'
| | | |     `-ElaboratedType 0xba0010 'typename __match_cv_qualifiers<char16_t, __unsigned_type>::__type' sugar
| | | |       `-TypedefType 0xb832d0 'std::__match_cv_qualifiers<char16_t, unsigned short, false, false>::__type' sugar
| | | |         |-Typedef 0xb83260 '__type'
| | | |         `-ElaboratedType 0xb83210 'typename __match::__type' sugar
| | | |           `-TypedefType 0xb831f0 'std::__cv_selector<unsigned short, false, false>::__type' sugar
| | | |             |-Typedef 0xb83180 '__type'
| | | |             `-SubstTemplateTypeParmType 0xb82f60 'unsigned short' sugar
| | | |               |-TemplateTypeParmType 0xb69780 '_Unqualified' dependent depth 0 index 0
| | | |               | `-TemplateTypeParm 0xb69728 '_Unqualified'
| | | |               `-BuiltinType 0x7db400 'unsigned short'
| | | |-AccessSpecDecl 0xba01a8 <line:1770:5, col:11> col:5 public
| | | `-TypedefDecl 0xba3170 <line:1771:7, col:72> col:72 referenced __type 'typename __make_signed_selector<__unsigned_type>::__type':'short'
| | |   `-ElaboratedType 0xba3120 'typename __make_signed_selector<__unsigned_type>::__type' sugar
| | |     `-TypedefType 0xba3100 'std::__make_signed_selector<unsigned short, true, false>::__type' sugar
| | |       |-TypeAlias 0xba3080 '__type'
| | |       `-ElaboratedType 0xba3030 'typename __match_cv_qualifiers<unsigned short, __signed_type>::__type' sugar
| | |         `-TypedefType 0xba3010 'std::__match_cv_qualifiers<unsigned short, short, false, false>::__type' sugar
| | |           |-Typedef 0xba2fa0 '__type'
| | |           `-ElaboratedType 0xba2f50 'typename __match::__type' sugar
| | |             `-TypedefType 0xba2f30 'std::__cv_selector<short, false, false>::__type' sugar
| | |               |-Typedef 0xba2ec0 '__type'
| | |               `-SubstTemplateTypeParmType 0xba2ca0 'short' sugar
| | |                 |-TemplateTypeParmType 0xb69780 '_Unqualified' dependent depth 0 index 0
| | |                 | `-TemplateTypeParm 0xb69728 '_Unqualified'
| | |                 `-BuiltinType 0x7db360 'short'
| | |-ClassTemplateSpecializationDecl 0xba1730 <line:1753:3, line:1762:5> line:1754:11 class __make_signed_selector definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'unsigned short'
| | | |-TemplateArgument integral 1
| | | |-TemplateArgument integral 0
| | | |-CXXRecordDecl 0xba1a60 prev 0xba1730 <col:5, col:11> col:11 implicit class __make_signed_selector
| | | |-TypeAliasDecl 0xba1d00 <line:1756:7, line:1757:59> line:1756:13 __signed_type 'typename __make_signed<typename remove_cv<unsigned short>::type>::__type':'short'
| | | | `-ElaboratedType 0xba1cb0 'typename __make_signed<typename remove_cv<unsigned short>::type>::__type' sugar
| | | |   `-TypedefType 0xba1c90 'std::__make_signed<unsigned short>::__type' sugar
| | | |     |-Typedef 0xb87700 '__type'
| | | |     `-BuiltinType 0x7db360 'short'
| | | |-AccessSpecDecl 0xba1d60 <line:1759:5, col:11> col:5 public
| | | `-TypeAliasDecl 0xba3080 <line:1760:7, line:1761:56> line:1760:13 referenced __type 'typename __match_cv_qualifiers<unsigned short, __signed_type>::__type':'short'
| | |   `-ElaboratedType 0xba3030 'typename __match_cv_qualifiers<unsigned short, __signed_type>::__type' sugar
| | |     `-TypedefType 0xba3010 'std::__match_cv_qualifiers<unsigned short, short, false, false>::__type' sugar
| | |       |-Typedef 0xba2fa0 '__type'
| | |       `-ElaboratedType 0xba2f50 'typename __match::__type' sugar
| | |         `-TypedefType 0xba2f30 'std::__cv_selector<short, false, false>::__type' sugar
| | |           |-Typedef 0xba2ec0 '__type'
| | |           `-SubstTemplateTypeParmType 0xba2ca0 'short' sugar
| | |             |-TemplateTypeParmType 0xb69780 '_Unqualified' dependent depth 0 index 0
| | |             | `-TemplateTypeParm 0xb69728 '_Unqualified'
| | |             `-BuiltinType 0x7db360 'short'
| | `-ClassTemplateSpecializationDecl 0xba3628 <line:1765:3, line:1772:5> line:1766:11 class __make_signed_selector definition
| |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-TemplateArgument type 'char32_t'
| |   |-TemplateArgument integral 0
| |   |-TemplateArgument integral 1
| |   |-CXXRecordDecl 0xba39b0 prev 0xba3628 <col:5, col:11> col:11 implicit class __make_signed_selector
| |   |-TypedefDecl 0xba5aa0 <line:1768:7, col:62> col:62 __unsigned_type 'typename __make_unsigned_selector<char32_t>::__type':'unsigned int'
| |   | `-ElaboratedType 0xba5a50 'typename __make_unsigned_selector<char32_t>::__type' sugar
| |   |   `-TypedefType 0xba5a30 'std::__make_unsigned_selector<char32_t, true, false>::__type' sugar
| |   |     |-TypeAlias 0xba59b0 '__type'
| |   |     `-ElaboratedType 0xba5960 'typename __match_cv_qualifiers<char32_t, __unsigned_type>::__type' sugar
| |   |       `-TypedefType 0xb85c30 'std::__match_cv_qualifiers<char32_t, unsigned int, false, false>::__type' sugar
| |   |         |-Typedef 0xb85bc0 '__type'
| |   |         `-ElaboratedType 0xb85b70 'typename __match::__type' sugar
| |   |           `-TypedefType 0xb7eb40 'std::__cv_selector<unsigned int, false, false>::__type' sugar
| |   |             |-Typedef 0xb7ead0 '__type'
| |   |             `-SubstTemplateTypeParmType 0xb7e8b0 'unsigned int' sugar
| |   |               |-TemplateTypeParmType 0xb69780 '_Unqualified' dependent depth 0 index 0
| |   |               | `-TemplateTypeParm 0xb69728 '_Unqualified'
| |   |               `-BuiltinType 0x7db420 'unsigned int'
| |   |-AccessSpecDecl 0xba5af8 <line:1770:5, col:11> col:5 public
| |   `-TypedefDecl 0xba5ec0 <line:1771:7, col:72> col:72 referenced __type 'typename __make_signed_selector<__unsigned_type>::__type':'int'
| |     `-ElaboratedType 0xba5e70 'typename __make_signed_selector<__unsigned_type>::__type' sugar
| |       `-TypedefType 0xb9d730 'std::__make_signed_selector<unsigned int, true, false>::__type' sugar
| |         |-TypeAlias 0xb9d6b0 '__type'
| |         `-ElaboratedType 0xb9d660 'typename __match_cv_qualifiers<unsigned int, __signed_type>::__type' sugar
| |           `-TypedefType 0xb9d640 'std::__match_cv_qualifiers<unsigned int, int, false, false>::__type' sugar
| |             |-Typedef 0xb9d5d0 '__type'
| |             `-ElaboratedType 0xb9d580 'typename __match::__type' sugar
| |               `-TypedefType 0xb9d560 'std::__cv_selector<int, false, false>::__type' sugar
| |                 |-Typedef 0xb9d4f0 '__type'
| |                 `-SubstTemplateTypeParmType 0xb9d2d0 'int' sugar
| |                   |-TemplateTypeParmType 0xb69780 '_Unqualified' dependent depth 0 index 0
| |                   | `-TemplateTypeParm 0xb69728 '_Unqualified'
| |                   `-BuiltinType 0x7db380 'int'
| |-ClassTemplatePartialSpecializationDecl 0xb88e50 <line:1753:3, line:1762:5> line:1754:11 class __make_signed_selector definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 1
| | |-TemplateArgument integral 0
| | |-TemplateTypeParmDecl 0xb88bb8 <line:1753:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0xb89168 <line:1754:5, col:11> col:11 implicit class __make_signed_selector
| | |-TypeAliasDecl 0xad4a60 <line:1756:7, line:1757:59> line:1756:13 referenced __signed_type 'typename __make_signed<typename remove_cv<_Tp>::type>::__type'
| | | `-DependentNameType 0xad49f0 'typename __make_signed<typename remove_cv<_Tp>::type>::__type' dependent
| | |-AccessSpecDecl 0xad4ac0 <line:1759:5, col:11> col:5 public
| | `-TypeAliasDecl 0xad4f40 <line:1760:7, line:1761:56> line:1760:13 __type 'typename __match_cv_qualifiers<_Tp, __signed_type>::__type'
| |   `-DependentNameType 0xad4ed0 'typename __match_cv_qualifiers<_Tp, __signed_type>::__type' dependent
| |-ClassTemplatePartialSpecializationDecl 0xad5250 <line:1765:3, line:1772:5> line:1766:11 class __make_signed_selector definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 0
| | |-TemplateArgument integral 1
| | |-TemplateTypeParmDecl 0xad4fb8 <line:1765:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0xad5568 <line:1766:5, col:11> col:11 implicit class __make_signed_selector
| | |-TypedefDecl 0xad5910 <line:1768:7, col:62> col:62 referenced __unsigned_type 'typename __make_unsigned_selector<_Tp>::__type'
| | | `-DependentNameType 0xad58a0 'typename __make_unsigned_selector<_Tp>::__type' dependent
| | |-AccessSpecDecl 0xad5968 <line:1770:5, col:11> col:5 public
| | `-TypedefDecl 0xad5e60 <line:1771:7, col:72> col:72 __type 'typename __make_signed_selector<__unsigned_type>::__type'
| |   `-DependentNameType 0xad5df0 'typename __make_signed_selector<__unsigned_type>::__type' dependent
| |-ClassTemplateSpecializationDecl 0xad5ef8 <line:1779:3, line:1784:5> line:1780:12 struct __make_signed definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'wchar_t'
| | |-CXXRecordDecl 0xad6118 <col:5, col:12> col:12 implicit struct __make_signed
| | `-TypeAliasDecl 0xb9d8a0 <line:1782:7, line:1783:59> line:1782:13 __type 'typename __make_signed_selector<wchar_t, false, true>::__type':'int'
| |   `-ElaboratedType 0xb9d830 'typename __make_signed_selector<wchar_t, false, true>::__type' sugar
| |     `-TypedefType 0xb9d810 'std::__make_signed_selector<wchar_t, false, true>::__type' sugar
| |       |-Typedef 0xb9d7a0 '__type'
| |       `-ElaboratedType 0xb9d750 'typename __make_signed_selector<__unsigned_type>::__type' sugar
| |         `-TypedefType 0xb9d730 'std::__make_signed_selector<unsigned int, true, false>::__type' sugar
| |           |-TypeAlias 0xb9d6b0 '__type'
| |           `-ElaboratedType 0xb9d660 'typename __match_cv_qualifiers<unsigned int, __signed_type>::__type' sugar
| |             `-TypedefType 0xb9d640 'std::__match_cv_qualifiers<unsigned int, int, false, false>::__type' sugar
| |               |-Typedef 0xb9d5d0 '__type'
| |               `-ElaboratedType 0xb9d580 'typename __match::__type' sugar
| |                 `-TypedefType 0xb9d560 'std::__cv_selector<int, false, false>::__type' sugar
| |                   |-Typedef 0xb9d4f0 '__type'
| |                   `-SubstTemplateTypeParmType 0xb9d2d0 'int' sugar
| |                     |-TemplateTypeParmType 0xb69780 '_Unqualified' dependent depth 0 index 0
| |                     | `-TemplateTypeParm 0xb69728 '_Unqualified'
| |                     `-BuiltinType 0x7db380 'int'
| |-VarDecl 0xad7678 parent 0xace198 prev 0xa0d598 <line:72:5, col:48> col:48 used value 'const bool':'const bool' constexpr
| |-ClassTemplateSpecializationDecl 0xb9d940 <line:1796:3, line:1801:5> line:1797:12 struct __make_signed definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'char16_t'
| | |-CXXRecordDecl 0xb9db58 <col:5, col:12> col:12 implicit struct __make_signed
| | `-TypeAliasDecl 0xba3270 <line:1799:7, line:1800:60> line:1799:13 __type 'typename __make_signed_selector<char16_t, false, true>::__type':'short'
| |   `-ElaboratedType 0xba3200 'typename __make_signed_selector<char16_t, false, true>::__type' sugar
| |     `-TypedefType 0xba31e0 'std::__make_signed_selector<char16_t, false, true>::__type' sugar
| |       |-Typedef 0xba3170 '__type'
| |       `-ElaboratedType 0xba3120 'typename __make_signed_selector<__unsigned_type>::__type' sugar
| |         `-TypedefType 0xba3100 'std::__make_signed_selector<unsigned short, true, false>::__type' sugar
| |           |-TypeAlias 0xba3080 '__type'
| |           `-ElaboratedType 0xba3030 'typename __match_cv_qualifiers<unsigned short, __signed_type>::__type' sugar
| |             `-TypedefType 0xba3010 'std::__match_cv_qualifiers<unsigned short, short, false, false>::__type' sugar
| |               |-Typedef 0xba2fa0 '__type'
| |               `-ElaboratedType 0xba2f50 'typename __match::__type' sugar
| |                 `-TypedefType 0xba2f30 'std::__cv_selector<short, false, false>::__type' sugar
| |                   |-Typedef 0xba2ec0 '__type'
| |                   `-SubstTemplateTypeParmType 0xba2ca0 'short' sugar
| |                     |-TemplateTypeParmType 0xb69780 '_Unqualified' dependent depth 0 index 0
| |                     | `-TemplateTypeParm 0xb69728 '_Unqualified'
| |                     `-BuiltinType 0x7db360 'short'
| |-ClassTemplateSpecializationDecl 0xba3310 <line:1803:3, line:1808:5> line:1804:12 struct __make_signed definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'char32_t'
| | |-CXXRecordDecl 0xba3528 <col:5, col:12> col:12 implicit struct __make_signed
| | `-TypeAliasDecl 0xba5fc0 <line:1806:7, line:1807:60> line:1806:13 __type 'typename __make_signed_selector<char32_t, false, true>::__type':'int'
| |   `-ElaboratedType 0xba5f50 'typename __make_signed_selector<char32_t, false, true>::__type' sugar
| |     `-TypedefType 0xba5f30 'std::__make_signed_selector<char32_t, false, true>::__type' sugar
| |       |-Typedef 0xba5ec0 '__type'
| |       `-ElaboratedType 0xba5e70 'typename __make_signed_selector<__unsigned_type>::__type' sugar
| |         `-TypedefType 0xb9d730 'std::__make_signed_selector<unsigned int, true, false>::__type' sugar
| |           |-TypeAlias 0xb9d6b0 '__type'
| |           `-ElaboratedType 0xb9d660 'typename __match_cv_qualifiers<unsigned int, __signed_type>::__type' sugar
| |             `-TypedefType 0xb9d640 'std::__match_cv_qualifiers<unsigned int, int, false, false>::__type' sugar
| |               |-Typedef 0xb9d5d0 '__type'
| |               `-ElaboratedType 0xb9d580 'typename __match::__type' sugar
| |                 `-TypedefType 0xb9d560 'std::__cv_selector<int, false, false>::__type' sugar
| |                   |-Typedef 0xb9d4f0 '__type'
| |                   `-SubstTemplateTypeParmType 0xb9d2d0 'int' sugar
| |                     |-TemplateTypeParmType 0xb69780 '_Unqualified' dependent depth 0 index 0
| |                     | `-TemplateTypeParm 0xb69728 '_Unqualified'
| |                     `-BuiltinType 0x7db380 'int'
| |-ClassTemplateDecl 0xba6168 <line:1814:3, line:1816:66> line:1815:12 make_signed
| | |-TemplateTypeParmDecl 0xba6038 <line:1814:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0xba60d8 <line:1815:5, line:1816:66> line:1815:12 struct make_signed definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-CXXRecordDecl 0xba63c0 <col:5, col:12> col:12 implicit struct make_signed
| | | `-TypedefDecl 0xba70e0 <line:1816:7, col:60> col:60 type 'typename __make_signed_selector<_Tp>::__type'
| | |   `-DependentNameType 0xba67e0 'typename __make_signed_selector<_Tp>::__type' dependent
| | `-ClassTemplateSpecialization 0xba7178 'make_signed'
| |-ClassTemplateSpecializationDecl 0xba7178 <line:1819:3, line:1820:28> col:12 struct make_signed
| | `-TemplateArgument type 'bool'
| |-TypeAliasTemplateDecl 0xba7590 <line:1824:3, line:1825:54> col:5 make_signed_t
| | |-TemplateTypeParmDecl 0xba7330 <line:1824:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0xba7530 <line:1825:5, col:54> col:11 make_signed_t 'typename make_signed<_Tp>::type'
| |   `-DependentNameType 0xba74c0 'typename make_signed<_Tp>::type' dependent
| |-TypeAliasTemplateDecl 0xba7850 <line:1828:3, line:1829:58> col:5 make_unsigned_t
| | |-TemplateTypeParmDecl 0xba75e8 <line:1828:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0xba77f0 <line:1829:5, col:58> col:11 make_unsigned_t 'typename make_unsigned<_Tp>::type'
| |   `-DependentNameType 0xba7780 'typename make_unsigned<_Tp>::type' dependent
| |-ClassTemplateDecl 0xba79d8 <line:1835:3, line:1837:29> line:1836:12 remove_extent
| | |-TemplateTypeParmDecl 0xba78a8 <line:1835:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xba7948 <line:1836:5, line:1837:29> line:1836:12 struct remove_extent definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-CXXRecordDecl 0xba7c30 <col:5, col:12> col:12 implicit struct remove_extent
| |   `-TypedefDecl 0xba7cd0 <line:1837:7, col:23> col:23 type '_Tp'
| |     `-TemplateTypeParmType 0xba7900 '_Tp' dependent depth 0 index 0
| |       `-TemplateTypeParm 0xba78a8 '_Tp'
| |-ClassTemplatePartialSpecializationDecl 0xba7fd0 <line:1839:3, line:1841:29> line:1840:12 struct remove_extent definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0 [_Size]'
| | |-TemplateTypeParmDecl 0xba7d40 <line:1839:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0xba7e08 <col:26, col:38> col:38 referenced 'std::size_t':'unsigned long' depth 0 index 1 _Size
| | |-CXXRecordDecl 0xba8208 <line:1840:5, col:12> col:12 implicit struct remove_extent
| | `-TypedefDecl 0xba82a8 <line:1841:7, col:23> col:23 type '_Tp'
| |   `-TemplateTypeParmType 0xba7d90 '_Tp' dependent depth 0 index 0
| |     `-TemplateTypeParm 0xba7d40 '_Tp'
| |-ClassTemplatePartialSpecializationDecl 0xba84d0 <line:1843:3, line:1845:29> line:1844:12 struct remove_extent definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0 []'
| | |-TemplateTypeParmDecl 0xba8318 <line:1843:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0xba8708 <line:1844:5, col:12> col:12 implicit struct remove_extent
| | `-TypedefDecl 0xba87a8 <line:1845:7, col:23> col:23 type '_Tp'
| |   `-TemplateTypeParmType 0xba8370 '_Tp' dependent depth 0 index 0
| |     `-TemplateTypeParm 0xba8318 '_Tp'
| |-ClassTemplateDecl 0xba8948 prev 0xb18408 <line:1848:3, line:1850:29> line:1849:12 remove_all_extents
| | |-TemplateTypeParmDecl 0xba8818 <line:1848:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xba88b8 prev 0xb18378 <line:1849:5, line:1850:29> line:1849:12 struct remove_all_extents definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-CXXRecordDecl 0xba8a08 <col:5, col:12> col:12 implicit struct remove_all_extents
| |   `-TypedefDecl 0xba8aa8 <line:1850:7, col:23> col:23 type '_Tp'
| |     `-TemplateTypeParmType 0xba8870 '_Tp' dependent depth 0 index 0
| |       `-TemplateTypeParm 0xba8818 '_Tp'
| |-ClassTemplatePartialSpecializationDecl 0xba8db0 <line:1852:3, line:1854:64> line:1853:12 struct remove_all_extents definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0 [_Size]'
| | |-TemplateTypeParmDecl 0xba8b18 <line:1852:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0xba8be8 <col:26, col:38> col:38 referenced 'std::size_t':'unsigned long' depth 0 index 1 _Size
| | |-CXXRecordDecl 0xba8fe8 <line:1853:5, col:12> col:12 implicit struct remove_all_extents
| | `-TypedefDecl 0xba9190 <line:1854:7, col:58> col:58 type 'typename remove_all_extents<_Tp>::type'
| |   `-DependentNameType 0xba9120 'typename remove_all_extents<_Tp>::type' dependent
| |-ClassTemplatePartialSpecializationDecl 0xba93b0 <line:1856:3, line:1858:64> line:1857:12 struct remove_all_extents definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0 []'
| | |-TemplateTypeParmDecl 0xba9200 <line:1856:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0xba95e8 <line:1857:5, col:12> col:12 implicit struct remove_all_extents
| | `-TypedefDecl 0xba9790 <line:1858:7, col:58> col:58 type 'typename remove_all_extents<_Tp>::type'
| |   `-DependentNameType 0xba9720 'typename remove_all_extents<_Tp>::type' dependent
| |-TypeAliasTemplateDecl 0xba9a60 <line:1862:3, line:1863:58> col:5 remove_extent_t
| | |-TemplateTypeParmDecl 0xba9800 <line:1862:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0xba9a00 <line:1863:5, col:58> col:11 remove_extent_t 'typename remove_extent<_Tp>::type'
| |   `-DependentNameType 0xba9990 'typename remove_extent<_Tp>::type' dependent
| |-TypeAliasTemplateDecl 0xba9cd0 <line:1866:3, line:1867:68> col:5 remove_all_extents_t
| | |-TemplateTypeParmDecl 0xba9ab8 <line:1866:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0xba9c70 <line:1867:5, col:68> col:11 remove_all_extents_t 'typename remove_all_extents<_Tp>::type'
| |   `-DependentNameType 0xba9c00 'typename remove_all_extents<_Tp>::type' dependent
| |-ClassTemplateDecl 0xba9ee0 <line:1872:3, line:1874:29> line:1873:12 __remove_pointer_helper
| | |-TemplateTypeParmDecl 0xba9d28 <line:1872:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0xba9da8 <col:26> col:34 typename depth 0 index 1
| | `-CXXRecordDecl 0xba9e50 <line:1873:5, line:1874:29> line:1873:12 struct __remove_pointer_helper definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-CXXRecordDecl 0xbaa170 <col:5, col:12> col:12 implicit struct __remove_pointer_helper
| |   `-TypedefDecl 0xbaa210 <line:1874:7, col:23> col:23 type '_Tp'
| |     `-TemplateTypeParmType 0xba9d80 '_Tp' dependent depth 0 index 0
| |       `-TemplateTypeParm 0xba9d28 '_Tp'
| |-ClassTemplatePartialSpecializationDecl 0xbaa548 <line:1876:3, line:1878:29> line:1877:12 struct __remove_pointer_helper definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument type 'type-parameter-0-1 *'
| | |-TemplateTypeParmDecl 0xbaa280 <line:1876:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0xbaa2f8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| | |-CXXRecordDecl 0xbaa7c8 <line:1877:5, col:12> col:12 implicit struct __remove_pointer_helper
| | `-TypedefDecl 0xbaa868 <line:1878:7, col:23> col:23 type '_Up'
| |   `-TemplateTypeParmType 0xbaa350 '_Up' dependent depth 0 index 1
| |     `-TemplateTypeParm 0xbaa2f8 '_Up'
| |-ClassTemplateDecl 0xbaaa08 <line:1881:3, line:1884:7> line:1882:12 remove_pointer
| | |-TemplateTypeParmDecl 0xbaa8d8 <line:1881:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xbaa978 <line:1882:5, line:1884:7> line:1882:12 struct remove_pointer definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__remove_pointer_helper<_Tp, typename remove_cv<_Tp>::type>'
| |   `-CXXRecordDecl 0xbaaeb0 <col:5, col:12> col:12 implicit struct remove_pointer
| |-ClassTemplateDecl 0xbac348 <line:1887:3, line:1890:29> line:1889:12 __add_pointer_helper
| | |-TemplateTypeParmDecl 0xbaaf58 <line:1887:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0xbac218 <col:26, line:1888:26> line:1887:31 'bool' depth 0 index 1
| | | `-TemplateArgument expr
| | |   `-ImplicitCastExpr 0xbac278 <col:33, line:1888:26> 'bool' <Dependent>
| | |     `-DependentScopeDeclRefExpr 0xbac1d0 <line:1887:33, line:1888:26> '<dependent type>' lvalue
| | `-CXXRecordDecl 0xbac2b8 <line:1889:5, line:1890:29> line:1889:12 struct __add_pointer_helper definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-CXXRecordDecl 0xbac600 <col:5, col:12> col:12 implicit struct __add_pointer_helper
| |   `-TypedefDecl 0xbac6a0 <line:1890:7, col:23> col:23 type '_Tp'
| |     `-TemplateTypeParmType 0xbaafb0 '_Tp' dependent depth 0 index 0
| |       `-TemplateTypeParm 0xbaaf58 '_Tp'
| |-ClassTemplatePartialSpecializationDecl 0xbac918 <line:1892:3, line:1894:63> line:1893:12 struct __add_pointer_helper definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 1
| | |-TemplateTypeParmDecl 0xbac710 <line:1892:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0xbacbb8 <line:1893:5, col:12> col:12 implicit struct __add_pointer_helper
| | `-TypedefDecl 0xbacdc0 <line:1894:7, col:57> col:57 type 'typename remove_reference<_Tp>::type *'
| |   `-PointerType 0xbacd70 'typename remove_reference<_Tp>::type *' dependent
| |     `-DependentNameType 0xbaccf0 'typename remove_reference<_Tp>::type' dependent
| |-ClassTemplateDecl 0xbacf58 <line:1896:3, line:1899:7> line:1897:12 add_pointer
| | |-TemplateTypeParmDecl 0xbace30 <line:1896:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xbacec8 <line:1897:5, line:1899:7> line:1897:12 struct add_pointer definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__add_pointer_helper<_Tp>'
| |   `-CXXRecordDecl 0xbad580 <col:5, col:12> col:12 implicit struct add_pointer
| |-TypeAliasTemplateDecl 0xbad890 <line:1903:3, line:1904:60> col:5 remove_pointer_t
| | |-TemplateTypeParmDecl 0xbad628 <line:1903:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0xbad830 <line:1904:5, col:60> col:11 remove_pointer_t 'typename remove_pointer<_Tp>::type'
| |   `-DependentNameType 0xbad7c0 'typename remove_pointer<_Tp>::type' dependent
| |-TypeAliasTemplateDecl 0xbadb50 <line:1907:3, line:1908:54> col:5 add_pointer_t
| | |-TemplateTypeParmDecl 0xbad8e8 <line:1907:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0xbadaf0 <line:1908:5, col:54> col:11 add_pointer_t 'typename add_pointer<_Tp>::type'
| |   `-DependentNameType 0xbada80 'typename add_pointer<_Tp>::type' dependent
| |-ClassTemplateDecl 0xbadd08 <line:1911:3, line:1919:5> line:1912:12 __aligned_storage_msa
| | |-NonTypeTemplateParmDecl 0xbadbf8 <line:1911:12, col:24> col:24 referenced 'std::size_t':'unsigned long' depth 0 index 0 _Len
| | `-CXXRecordDecl 0xbadc78 <line:1912:5, line:1919:5> line:1912:12 struct __aligned_storage_msa definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-CXXRecordDecl 0xbadf80 <col:5, col:12> col:12 implicit struct __aligned_storage_msa
| |   `-CXXRecordDecl 0xbae010 <line:1914:7, line:1918:7> line:1914:13 union __type definition
| |     |-DefinitionData aggregate standard_layout trivially_copyable pod trivial has_variant_members
| |     | |-DefaultConstructor exists trivial needs_implicit
| |     | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |     | |-MoveConstructor exists simple trivial needs_implicit
| |     | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |     | |-MoveAssignment exists simple trivial needs_implicit
| |     | `-Destructor simple irrelevant trivial needs_implicit
| |     |-CXXRecordDecl 0xbae128 <col:7, col:13> col:13 implicit union __type
| |     |-FieldDecl 0xbae248 <line:1916:2, col:27> col:16 __data 'unsigned char [_Len]'
| |     |-CXXRecordDecl 0xbae298 <line:1917:2, col:40> col:2 struct definition
| |     | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |     | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |     | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |     | | |-MoveConstructor exists simple trivial needs_implicit
| |     | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |     | | |-MoveAssignment exists simple trivial needs_implicit
| |     | | `-Destructor simple irrelevant trivial needs_implicit
| |     | `-AlignedAttr 0xbae3b8 <col:24> aligned
| |     |   `-<<<NULL>>>
| |     `-FieldDecl 0xbae488 <col:2, col:42> col:42 __align 'struct (anonymous struct at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/type_traits:1917:2)':'std::__aligned_storage_msa::__type::(anonymous struct at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/type_traits:1917:2)'
| |-ClassTemplateDecl 0xbae8c8 <line:1931:3, line:1940:5> line:1933:12 aligned_storage
| | |-NonTypeTemplateParmDecl 0xbae570 <line:1931:12, col:24> col:24 referenced 'std::size_t':'unsigned long' depth 0 index 0 _Len
| | |-NonTypeTemplateParmDecl 0xbae7b0 <col:30, line:1932:61> line:1931:42 referenced 'std::size_t':'unsigned long' depth 0 index 1 _Align
| | | `-TemplateArgument expr
| | |   `-UnaryExprOrTypeTraitExpr 0xbae770 <line:1932:5, col:61> 'unsigned long' __alignof 'typename __aligned_storage_msa<_Len>::__type'
| | `-CXXRecordDecl 0xbae838 <line:1933:5, line:1940:5> line:1933:12 struct aligned_storage definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-CXXRecordDecl 0xbaeba0 <col:5, col:12> col:12 implicit struct aligned_storage
| |   `-CXXRecordDecl 0xbaec30 <line:1935:7, line:1939:7> line:1935:13 union type definition
| |     |-DefinitionData aggregate standard_layout trivially_copyable pod trivial has_variant_members
| |     | |-DefaultConstructor exists trivial needs_implicit
| |     | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |     | |-MoveConstructor exists simple trivial needs_implicit
| |     | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |     | |-MoveAssignment exists simple trivial needs_implicit
| |     | `-Destructor simple irrelevant trivial needs_implicit
| |     |-CXXRecordDecl 0xbaed48 <col:7, col:13> col:13 implicit union type
| |     |-FieldDecl 0xbaee68 <line:1937:2, col:27> col:16 __data 'unsigned char [_Len]'
| |     |-CXXRecordDecl 0xbaeef8 <line:1938:2, col:50> col:2 struct definition
| |     | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |     | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |     | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |     | | |-MoveConstructor exists simple trivial needs_implicit
| |     | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |     | | |-MoveAssignment exists simple trivial needs_implicit
| |     | | `-Destructor simple irrelevant trivial needs_implicit
| |     | `-AlignedAttr 0xbaf018 <col:24, col:44> aligned
| |     |   `-ParenExpr 0xbaeed8 <col:36, col:43> 'std::size_t':'unsigned long'
| |     |     `-DeclRefExpr 0xbaeeb8 <col:37> 'std::size_t':'unsigned long' NonTypeTemplateParm 0xbae7b0 '_Align' 'std::size_t':'unsigned long'
| |     `-FieldDecl 0xbaf0e8 <col:2, col:52> col:52 __align 'struct (anonymous struct at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/type_traits:1938:2)':'std::aligned_storage::type::(anonymous struct at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/type_traits:1938:2)'
| |-ClassTemplateDecl 0xbaf2a8 <line:1942:3, line:1947:5> line:1943:12 __strictest_alignment
| | |-TemplateTypeParmDecl 0xbaf180 <line:1942:13, col:25> col:25 typename depth 0 index 0 ... _Types
| | `-CXXRecordDecl 0xbaf218 <line:1943:5, line:1947:5> line:1943:12 struct __strictest_alignment definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-CXXRecordDecl 0xbaf560 <col:5, col:12> col:12 implicit struct __strictest_alignment
| |   |-VarDecl 0xbaf600 <line:1945:7, col:42> col:27 _S_alignment 'const std::size_t':'const unsigned long' static cinit
| |   | `-ImplicitCastExpr 0xbaf688 <col:42> 'const std::size_t':'const unsigned long' <IntegralCast>
| |   |   `-IntegerLiteral 0xbaf668 <col:42> 'int' 0
| |   `-VarDecl 0xbaf708 <line:1946:7, col:37> col:27 _S_size 'const std::size_t':'const unsigned long' static cinit
| |     `-ImplicitCastExpr 0xbaf790 <col:37> 'const std::size_t':'const unsigned long' <IntegralCast>
| |       `-IntegerLiteral 0xbaf770 <col:37> 'int' 0
| |-ClassTemplatePartialSpecializationDecl 0xbafaf0 <line:1949:3, line:1958:5> line:1950:12 struct __strictest_alignment definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument pack
| | | |-TemplateArgument type 'type-parameter-0-0'
| | | `-TemplateArgument type 'type-parameter-0-1...'
| | |-TemplateTypeParmDecl 0xbaf818 <line:1949:13, col:22> col:22 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0xbaf898 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _Types
| | |-CXXRecordDecl 0xbafdb8 <line:1950:5, col:12> col:12 implicit struct __strictest_alignment
| | |-VarDecl 0xbafe58 <line:1952:7, line:1954:53> line:1952:27 _S_alignment 'const std::size_t':'const unsigned long' static cinit
| | | `-ConditionalOperator 0xbb2ee8 <line:1953:9, line:1954:53> '<dependent type>'
| | |   |-BinaryOperator 0xbb2d60 <line:1953:9, col:58> '<dependent type>' '>'
| | |   | |-UnaryExprOrTypeTraitExpr 0xbafed0 <col:9, col:20> 'unsigned long' alignof '_Tp'
| | |   | `-DependentScopeDeclRefExpr 0xbb2d28 <col:24, col:58> '<dependent type>' lvalue
| | |   |-UnaryExprOrTypeTraitExpr 0xbb2d90 <line:1954:4, col:15> 'unsigned long' alignof '_Tp'
| | |   `-DependentScopeDeclRefExpr 0xbb2eb0 <col:19, col:53> '<dependent type>' lvalue
| | `-VarDecl 0xbb2f28 <line:1955:7, line:1957:52> line:1955:27 _S_size 'const std::size_t':'const unsigned long' static cinit
| |   `-ConditionalOperator 0xbb3288 <line:1956:9, line:1957:52> '<dependent type>'
| |     |-BinaryOperator 0xbb30f8 <line:1956:9, col:57> '<dependent type>' '>'
| |     | |-UnaryExprOrTypeTraitExpr 0xbb2fa0 <col:9, col:19> 'unsigned long' sizeof '_Tp'
| |     | `-DependentScopeDeclRefExpr 0xbb30c0 <col:23, col:57> '<dependent type>' lvalue
| |     |-UnaryExprOrTypeTraitExpr 0xbb3128 <line:1957:4, col:14> 'unsigned long' sizeof '_Tp'
| |     `-DependentScopeDeclRefExpr 0xbb3250 <col:18, col:52> '<dependent type>' lvalue
| |-ClassTemplateDecl 0xbb3470 <line:1970:3, line:1984:5> line:1971:12 aligned_union
| | |-NonTypeTemplateParmDecl 0xbb32e0 <line:1970:13, col:20> col:20 referenced 'std::size_t':'unsigned long' depth 0 index 0 _Len
| | |-TemplateTypeParmDecl 0xbb3340 <col:26, col:38> col:38 referenced typename depth 0 index 1 ... _Types
| | `-CXXRecordDecl 0xbb33e0 <line:1971:5, line:1984:5> line:1971:12 struct aligned_union definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-CXXRecordDecl 0xbb3780 <col:5, col:12> col:12 implicit struct aligned_union
| |   |-AccessSpecDecl 0xbb3810 <line:1973:5, col:12> col:5 private
| |   |-StaticAssertDecl 0xbb3970 <line:1974:7, col:76> col:7
| |   | |-BinaryOperator 0xbb3898 <col:21, col:42> 'bool' '!='
| |   | | |-SizeOfPackExpr 0xbb3838 <col:21, col:37> 'unsigned long' 0xbb3340 _Types
| |   | | `-ImplicitCastExpr 0xbb3880 <col:42> 'unsigned long' <IntegralCast>
| |   | |   `-IntegerLiteral 0xbb3860 <col:42> 'int' 0
| |   | `-StringLiteral 0xbb3938 <col:45> 'const char [30]' lvalue "At least one type is required"
| |   |-TypeAliasDecl 0xbb3aa0 <line:1976:7, col:58> col:13 referenced __strictest '__strictest_alignment<_Types...>'
| |   | `-TemplateSpecializationType 0xbb3a00 '__strictest_alignment<_Types...>' dependent __strictest_alignment
| |   |   `-TemplateArgument type '_Types...'
| |   |-VarDecl 0xbb3b10 <line:1977:7, line:1978:24> line:1977:27 referenced _S_len 'const std::size_t':'const unsigned long' static cinit
| |   | `-ConditionalOperator 0xbb3cf8 <col:36, line:1978:24> '<dependent type>'
| |   |   |-BinaryOperator 0xbb3c48 <line:1977:36, col:56> '<dependent type>' '>'
| |   |   | |-DeclRefExpr 0xbb3b78 <col:36> 'std::size_t':'unsigned long' NonTypeTemplateParm 0xbb32e0 '_Len' 'std::size_t':'unsigned long'
| |   |   | `-DependentScopeDeclRefExpr 0xbb3c10 <col:43, col:56> '<dependent type>' lvalue
| |   |   |-DeclRefExpr 0xbb3c68 <line:1978:4> 'std::size_t':'unsigned long' NonTypeTemplateParm 0xbb32e0 '_Len' 'std::size_t':'unsigned long'
| |   |   `-DependentScopeDeclRefExpr 0xbb3cc0 <col:11, col:24> '<dependent type>' lvalue
| |   |-AccessSpecDecl 0xbb3d28 <line:1979:5, col:11> col:5 public
| |   |-VarDecl 0xbb3d60 <line:1981:7, col:58> col:27 referenced alignment_value 'const std::size_t':'const unsigned long' static cinit
| |   | `-DependentScopeDeclRefExpr 0xbb3e00 <col:45, col:58> '<dependent type>' lvalue
| |   `-TypedefDecl 0xbb4090 <line:1983:7, col:71> col:71 type 'typename aligned_storage<_S_len, alignment_value>::type'
| |     `-DependentNameType 0xbb4020 'typename aligned_storage<_S_len, alignment_value>::type' dependent
| |-VarDecl 0xbb44a8 parent 0xbb33e0 prev 0xbb3d60 <line:1986:3, line:1987:50> col:50 alignment_value 'const std::size_t':'const unsigned long'
| |-ClassTemplateDecl 0xbb49a0 <line:1991:3, line:1994:12> col:12 __decay_selector
| | |-TemplateTypeParmDecl 0xbb4558 <line:1991:12, col:21> col:21 referenced typename depth 0 index 0 _Up
| | |-NonTypeTemplateParmDecl 0xbb46e8 <line:1992:5, col:36> col:10 'bool' depth 0 index 1 _IsArray
| | | `-TemplateArgument expr
| | |   `-ImplicitCastExpr 0xbb4748 <col:21, col:36> 'bool' <Dependent>
| | |     `-DependentScopeDeclRefExpr 0xbb46a0 <col:21, col:36> '<dependent type>' lvalue
| | |-NonTypeTemplateParmDecl 0xbb4868 <line:1993:5, col:42> col:10 'bool' depth 0 index 2 _IsFunction
| | | `-TemplateArgument expr
| | |   `-ImplicitCastExpr 0xbb48c8 <col:24, col:42> 'bool' <Dependent>
| | |     `-DependentScopeDeclRefExpr 0xbb4820 <col:24, col:42> '<dependent type>' lvalue
| | |-CXXRecordDecl 0xbb4910 <line:1994:5, col:12> col:12 struct __decay_selector
| | |-ClassTemplateSpecializationDecl 0xd578c0 <line:1997:3, line:1999:53> line:1998:12 struct __decay_selector definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'long'
| | | |-TemplateArgument integral 0
| | | |-TemplateArgument integral 0
| | | |-CXXRecordDecl 0xd57c20 prev 0xd578c0 <col:5, col:12> col:12 implicit struct __decay_selector
| | | `-TypedefDecl 0xd57db0 <line:1999:7, col:45> col:45 referenced __type 'typename remove_cv<long>::type':'long'
| | |   `-ElaboratedType 0xd57d60 'typename remove_cv<long>::type' sugar
| | |     `-TypedefType 0xd43380 'std::remove_cv<long>::type' sugar
| | |       |-Typedef 0xd43310 'type'
| | |       `-ElaboratedType 0xd432c0 'typename remove_const<typename remove_volatile<long>::type>::type' sugar
| | |         `-TypedefType 0xd432a0 'std::remove_const<long>::type' sugar
| | |           |-Typedef 0xd43228 'type'
| | |           `-SubstTemplateTypeParmType 0xd431f0 'long' sugar
| | |             |-TemplateTypeParmType 0xb5d350 '_Tp' dependent depth 0 index 0
| | |             | `-TemplateTypeParm 0xb5d2f8 '_Tp'
| | |             `-BuiltinType 0x7db3a0 'long'
| | `-ClassTemplateSpecializationDecl 0xe5d470 <line:1997:3, line:1999:53> line:1998:12 struct __decay_selector definition
| |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-TemplateArgument type 'double'
| |   |-TemplateArgument integral 0
| |   |-TemplateArgument integral 0
| |   |-CXXRecordDecl 0xe5d7d0 prev 0xe5d470 <col:5, col:12> col:12 implicit struct __decay_selector
| |   `-TypedefDecl 0xe5d960 <line:1999:7, col:45> col:45 referenced __type 'typename remove_cv<double>::type':'double'
| |     `-ElaboratedType 0xe5d910 'typename remove_cv<double>::type' sugar
| |       `-TypedefType 0xe568a0 'std::remove_cv<double>::type' sugar
| |         |-Typedef 0xe56830 'type'
| |         `-ElaboratedType 0xe567e0 'typename remove_const<typename remove_volatile<double>::type>::type' sugar
| |           `-TypedefType 0xe567c0 'std::remove_const<double>::type' sugar
| |             |-Typedef 0xe56748 'type'
| |             `-SubstTemplateTypeParmType 0xe56710 'double' sugar
| |               |-TemplateTypeParmType 0xb5d350 '_Tp' dependent depth 0 index 0
| |               | `-TemplateTypeParm 0xb5d2f8 '_Tp'
| |               `-BuiltinType 0x7db4a0 'double'
| |-ClassTemplatePartialSpecializationDecl 0xbb4ec0 <line:1997:3, line:1999:53> line:1998:12 struct __decay_selector definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 0
| | |-TemplateArgument integral 0
| | |-TemplateTypeParmDecl 0xbb4c28 <line:1997:12, col:21> col:21 referenced typename depth 0 index 0 _Up
| | |-CXXRecordDecl 0xbb51d8 <line:1998:5, col:12> col:12 implicit struct __decay_selector
| | `-TypedefDecl 0xbb5380 <line:1999:7, col:45> col:45 __type 'typename remove_cv<_Up>::type'
| |   `-DependentNameType 0xbb5310 'typename remove_cv<_Up>::type' dependent
| |-ClassTemplatePartialSpecializationDecl 0xbb5680 <line:2001:3, line:2003:58> line:2002:12 struct __decay_selector definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 1
| | |-TemplateArgument integral 0
| | |-TemplateTypeParmDecl 0xbb53f0 <line:2001:12, col:21> col:21 referenced typename depth 0 index 0 _Up
| | |-CXXRecordDecl 0xbb5998 <line:2002:5, col:12> col:12 implicit struct __decay_selector
| | `-TypedefDecl 0xbb5ba0 <line:2003:7, col:50> col:50 __type 'typename remove_extent<_Up>::type *'
| |   `-PointerType 0xbb5b50 'typename remove_extent<_Up>::type *' dependent
| |     `-DependentNameType 0xbb5ad0 'typename remove_extent<_Up>::type' dependent
| |-ClassTemplatePartialSpecializationDecl 0xbb5ea0 <line:2005:3, line:2007:55> line:2006:12 struct __decay_selector definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 0
| | |-TemplateArgument integral 1
| | |-TemplateTypeParmDecl 0xbb5c10 <line:2005:12, col:21> col:21 referenced typename depth 0 index 0 _Up
| | |-CXXRecordDecl 0xbb61b8 <line:2006:5, col:12> col:12 implicit struct __decay_selector
| | `-TypedefDecl 0xbb6360 <line:2007:7, col:47> col:47 __type 'typename add_pointer<_Up>::type'
| |   `-DependentNameType 0xbb62f0 'typename add_pointer<_Up>::type' dependent
| |-ClassTemplateDecl 0xbb64f8 <line:2010:3, line:2017:5> line:2011:11 decay
| | |-TemplateTypeParmDecl 0xbb63d0 <line:2010:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0xbb6468 <line:2011:5, line:2017:5> line:2011:11 class decay definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-CXXRecordDecl 0xbb6750 <col:5, col:11> col:11 implicit class decay
| | | |-TypedefDecl 0xbb68f0 <line:2013:7, col:52> col:52 referenced __remove_type 'typename remove_reference<_Tp>::type'
| | | | `-DependentNameType 0xbb6880 'typename remove_reference<_Tp>::type' dependent
| | | |-AccessSpecDecl 0xbb6948 <line:2015:5, col:11> col:5 public
| | | `-TypedefDecl 0xbb9520 <line:2016:7, col:64> col:64 type 'typename __decay_selector<__remove_type>::__type'
| | |   `-DependentNameType 0xbb94b0 'typename __decay_selector<__remove_type>::__type' dependent
| | |-ClassTemplateSpecializationDecl 0xd56e18 <line:2010:3, line:2017:5> line:2011:11 class decay definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'long &&'
| | | |-CXXRecordDecl 0xd57020 prev 0xd56e18 <col:5, col:11> col:11 implicit class decay
| | | |-TypedefDecl 0xd57560 <line:2013:7, col:52> col:52 __remove_type 'typename remove_reference<long &&>::type':'long'
| | | | `-ElaboratedType 0xd57510 'typename remove_reference<long &&>::type' sugar
| | | |   `-TypedefType 0xd574f0 'std::remove_reference<long &&>::type' sugar
| | | |     |-Typedef 0xd57480 'type'
| | | |     `-SubstTemplateTypeParmType 0xd57300 'long' sugar
| | | |       |-TemplateTypeParmType 0xb647c0 '_Tp' dependent depth 0 index 0
| | | |       | `-TemplateTypeParm 0xb64768 '_Tp'
| | | |       `-BuiltinType 0x7db3a0 'long'
| | | |-AccessSpecDecl 0xd575b8 <line:2015:5, col:11> col:5 public
| | | `-TypedefDecl 0xd57e90 <line:2016:7, col:64> col:64 referenced type 'typename __decay_selector<__remove_type>::__type':'long'
| | |   `-ElaboratedType 0xd57e40 'typename __decay_selector<__remove_type>::__type' sugar
| | |     `-TypedefType 0xd57e20 'std::__decay_selector<long, false, false>::__type' sugar
| | |       |-Typedef 0xd57db0 '__type'
| | |       `-ElaboratedType 0xd57d60 'typename remove_cv<long>::type' sugar
| | |         `-TypedefType 0xd43380 'std::remove_cv<long>::type' sugar
| | |           |-Typedef 0xd43310 'type'
| | |           `-ElaboratedType 0xd432c0 'typename remove_const<typename remove_volatile<long>::type>::type' sugar
| | |             `-TypedefType 0xd432a0 'std::remove_const<long>::type' sugar
| | |               |-Typedef 0xd43228 'type'
| | |               `-SubstTemplateTypeParmType 0xd431f0 'long' sugar
| | |                 |-TemplateTypeParmType 0xb5d350 '_Tp' dependent depth 0 index 0
| | |                 | `-TemplateTypeParm 0xb5d2f8 '_Tp'
| | |                 `-BuiltinType 0x7db3a0 'long'
| | `-ClassTemplateSpecializationDecl 0xe5c0c8 <line:2010:3, line:2017:5> line:2011:11 class decay definition
| |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-TemplateArgument type 'double'
| |   |-CXXRecordDecl 0xe5c2d0 prev 0xe5c0c8 <col:5, col:11> col:11 implicit class decay
| |   |-TypedefDecl 0xe5c7b0 <line:2013:7, col:52> col:52 __remove_type 'typename remove_reference<double>::type':'double'
| |   | `-ElaboratedType 0xe5c760 'typename remove_reference<double>::type' sugar
| |   |   `-TypedefType 0xe5c740 'std::remove_reference<double>::type' sugar
| |   |     |-Typedef 0xe5c6c8 'type'
| |   |     `-SubstTemplateTypeParmType 0xe5c690 'double' sugar
| |   |       |-TemplateTypeParmType 0xb63e50 '_Tp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0xb63df8 '_Tp'
| |   |       `-BuiltinType 0x7db4a0 'double'
| |   |-AccessSpecDecl 0xe5c808 <line:2015:5, col:11> col:5 public
| |   `-TypedefDecl 0xe5da40 <line:2016:7, col:64> col:64 referenced type 'typename __decay_selector<__remove_type>::__type':'double'
| |     `-ElaboratedType 0xe5d9f0 'typename __decay_selector<__remove_type>::__type' sugar
| |       `-TypedefType 0xe5d9d0 'std::__decay_selector<double, false, false>::__type' sugar
| |         |-Typedef 0xe5d960 '__type'
| |         `-ElaboratedType 0xe5d910 'typename remove_cv<double>::type' sugar
| |           `-TypedefType 0xe568a0 'std::remove_cv<double>::type' sugar
| |             |-Typedef 0xe56830 'type'
| |             `-ElaboratedType 0xe567e0 'typename remove_const<typename remove_volatile<double>::type>::type' sugar
| |               `-TypedefType 0xe567c0 'std::remove_const<double>::type' sugar
| |                 |-Typedef 0xe56748 'type'
| |                 `-SubstTemplateTypeParmType 0xe56710 'double' sugar
| |                   |-TemplateTypeParmType 0xb5d350 '_Tp' dependent depth 0 index 0
| |                   | `-TemplateTypeParm 0xb5d2f8 '_Tp'
| |                   `-BuiltinType 0x7db4a0 'double'
| |-ClassTemplateDecl 0xbb96b8 <line:2019:3, line:2020:11> col:11 reference_wrapper
| | |-TemplateTypeParmDecl 0xbb9590 <line:2019:12, col:21> col:21 typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xbb9628 <line:2020:5, col:11> col:11 class reference_wrapper
| |   `-PointerAttr 0xbb98a8 <<invalid sloc>> Implicit
| |-ClassTemplateDecl 0xbb9a38 <line:2023:3, line:2027:5> line:2024:12 __strip_reference_wrapper
| | |-TemplateTypeParmDecl 0xbb9908 <line:2023:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xbb99a8 <line:2024:5, line:2027:5> line:2024:12 struct __strip_reference_wrapper definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-CXXRecordDecl 0xbb9c90 <col:5, col:12> col:12 implicit struct __strip_reference_wrapper
| |   `-TypedefDecl 0xbb9d30 <line:2026:7, col:19> col:19 __type '_Tp'
| |     `-TemplateTypeParmType 0xbb9960 '_Tp' dependent depth 0 index 0
| |       `-TemplateTypeParm 0xbb9908 '_Tp'
| |-ClassTemplatePartialSpecializationDecl 0xbb9fb0 <line:2029:3, line:2033:5> line:2030:12 struct __strip_reference_wrapper definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'reference_wrapper<type-parameter-0-0>'
| | |-TemplateTypeParmDecl 0xbb9da0 <line:2029:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0xbba208 <line:2030:5, col:12> col:12 implicit struct __strip_reference_wrapper
| | `-TypedefDecl 0xbba2d8 <line:2032:7, col:20> col:20 __type '_Tp &'
| |   `-LValueReferenceType 0xbba2a0 '_Tp &' dependent
| |     `-TemplateTypeParmType 0xbb9df0 '_Tp' dependent depth 0 index 0
| |       `-TemplateTypeParm 0xbb9da0 '_Tp'
| |-ClassTemplateDecl 0xbba478 <line:2035:3, line:2040:5> line:2036:12 __decay_and_strip
| | |-TemplateTypeParmDecl 0xbba348 <line:2035:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xbba3e8 <line:2036:5, line:2040:5> line:2036:12 struct __decay_and_strip definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-CXXRecordDecl 0xbba6d0 <col:5, col:12> col:12 implicit struct __decay_and_strip
| |   `-TypedefDecl 0xbbaa50 <line:2038:7, line:2039:37> col:37 __type 'typename __strip_reference_wrapper<typename decay<_Tp>::type>::__type'
| |     `-DependentNameType 0xbba9e0 'typename __strip_reference_wrapper<typename decay<_Tp>::type>::__type' dependent
| |-ClassTemplateDecl 0xbbac70 <line:2045:3, line:2047:7> line:2046:12 enable_if
| | |-NonTypeTemplateParmDecl 0xbbaad0 <line:2045:12> col:16 'bool' depth 0 index 0
| | |-TemplateTypeParmDecl 0xbbab40 <col:18, col:33> col:27 typename depth 0 index 1 _Tp
| | | `-TemplateArgument type 'void'
| | |-CXXRecordDecl 0xbbabe0 <line:2046:5, line:2047:7> line:2046:12 struct enable_if definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | `-CXXRecordDecl 0xbbaf20 <col:5, col:12> col:12 implicit struct enable_if
| | |-ClassTemplateSpecializationDecl 0xd44558 <line:2050:3, line:2052:25> line:2051:12 struct enable_if definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument integral 1
| | | |-TemplateArgument type 'void'
| | | |-CXXRecordDecl 0xd44810 prev 0xd44558 <col:5, col:12> col:12 implicit struct enable_if
| | | `-TypedefDecl 0xd448b0 <line:2052:7, col:19> col:19 referenced type 'void':'void'
| | |   `-SubstTemplateTypeParmType 0xd44740 'void' sugar
| | |     |-TemplateTypeParmType 0xbbb020 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0xbbafc8 '_Tp'
| | |     `-BuiltinType 0x7db2e0 'void'
| | |-ClassTemplateSpecializationDecl 0xd65100 <line:2045:3, line:2047:7> line:2046:12 struct enable_if definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument integral 0
| | | |-TemplateArgument type 'void'
| | | `-CXXRecordDecl 0xd65350 prev 0xd65100 <col:5, col:12> col:12 implicit struct enable_if
| | |-ClassTemplateSpecializationDecl 0xb8ccf8 <line:2050:3, line:2052:25> line:2051:12 struct enable_if definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument integral 1
| | | |-TemplateArgument type 'std::chrono::duration<long, std::ratio<1, 1> >'
| | | |-CXXRecordDecl 0xb8cfe0 prev 0xb8ccf8 <col:5, col:12> col:12 implicit struct enable_if
| | | `-TypedefDecl 0xb8d080 <line:2052:7, col:19> col:19 referenced type 'std::chrono::duration<long, std::ratio<1, 1> >':'std::chrono::duration<long, std::ratio<1, 1> >'
| | |   `-SubstTemplateTypeParmType 0xb8cf10 'std::chrono::duration<long, std::ratio<1, 1> >' sugar
| | |     |-TemplateTypeParmType 0xbbb020 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0xbbafc8 '_Tp'
| | |     `-RecordType 0xd1d8b0 'std::chrono::duration<long, std::ratio<1, 1> >'
| | |       `-ClassTemplateSpecialization 0xd1d7b0 'duration'
| | |-ClassTemplateSpecializationDecl 0xda2598 <line:2050:3, line:2052:25> line:2051:12 struct enable_if definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument integral 1
| | | |-TemplateArgument type 'std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >'
| | | |-CXXRecordDecl 0xda2880 prev 0xda2598 <col:5, col:12> col:12 implicit struct enable_if
| | | `-TypedefDecl 0xda2920 <line:2052:7, col:19> col:19 referenced type 'std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >':'std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >'
| | |   `-SubstTemplateTypeParmType 0xda27b0 'std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >' sugar
| | |     |-TemplateTypeParmType 0xbbb020 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0xbbafc8 '_Tp'
| | |     `-RecordType 0xd348b0 'std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >'
| | |       `-ClassTemplateSpecialization 0xd347b0 'time_point'
| | |-ClassTemplateSpecializationDecl 0xda6240 <line:2050:3, line:2052:25> line:2051:12 struct enable_if definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument integral 1
| | | |-TemplateArgument type 'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | | |-CXXRecordDecl 0xda6530 prev 0xda6240 <col:5, col:12> col:12 implicit struct enable_if
| | | `-TypedefDecl 0xda65d0 <line:2052:7, col:19> col:19 referenced type 'std::chrono::duration<long, std::ratio<1, 1000000000> >':'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | |   `-SubstTemplateTypeParmType 0xda6460 'std::chrono::duration<long, std::ratio<1, 1000000000> >' sugar
| | |     |-TemplateTypeParmType 0xbbb020 '_Tp' dependent depth 0 index 0
| | |     | `-TemplateTypeParm 0xbbafc8 '_Tp'
| | |     `-RecordType 0xd1d100 'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | |       `-ClassTemplateSpecialization 0xd1d000 'duration'
| | `-ClassTemplateSpecializationDecl 0xe57fc8 <line:2050:3, line:2052:25> line:2051:12 struct enable_if definition
| |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-TemplateArgument integral 1
| |   |-TemplateArgument type 'std::chrono::duration<double, std::ratio<1, 1> >'
| |   |-CXXRecordDecl 0xe582b0 prev 0xe57fc8 <col:5, col:12> col:12 implicit struct enable_if
| |   `-TypedefDecl 0xe58350 <line:2052:7, col:19> col:19 referenced type 'std::chrono::duration<double, std::ratio<1, 1> >':'std::chrono::duration<double, std::ratio<1, 1> >'
| |     `-SubstTemplateTypeParmType 0xe581e0 'std::chrono::duration<double, std::ratio<1, 1> >' sugar
| |       |-TemplateTypeParmType 0xbbb020 '_Tp' dependent depth 0 index 0
| |       | `-TemplateTypeParm 0xbbafc8 '_Tp'
| |       `-RecordType 0xe444a0 'std::chrono::duration<double, std::ratio<1, 1> >'
| |         `-ClassTemplateSpecialization 0xe443a0 'duration'
| |-ClassTemplatePartialSpecializationDecl 0xbbb1d8 <line:2050:3, line:2052:25> line:2051:12 struct enable_if definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument integral 1
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateTypeParmDecl 0xbbafc8 <line:2050:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0xbbb478 <line:2051:5, col:12> col:12 implicit struct enable_if
| | `-TypedefDecl 0xbbb518 <line:2052:7, col:19> col:19 type '_Tp'
| |   `-TemplateTypeParmType 0xbbb020 '_Tp' dependent depth 0 index 0
| |     `-TemplateTypeParm 0xbbafc8 '_Tp'
| |-TypeAliasTemplateDecl 0xbbb9f0 <line:2054:3, line:2055:67> col:5 _Require
| | |-TemplateTypeParmDecl 0xbbb588 <line:2054:12, col:24> col:24 referenced typename depth 0 index 0 ... _Cond
| | `-TypeAliasDecl 0xbbb990 <line:2055:5, col:67> col:11 _Require 'typename enable_if<__and_<_Cond...>::value>::type'
| |   `-DependentNameType 0xbbb920 'typename enable_if<__and_<_Cond...>::value>::type' dependent
| |-ClassTemplateDecl 0xbbbc78 prev 0xacebb8 <line:2059:3, line:2061:29> line:2060:12 conditional
| | |-NonTypeTemplateParmDecl 0xbbba58 <line:2059:12, col:17> col:17 'bool' depth 0 index 0 _Cond
| | |-TemplateTypeParmDecl 0xbbbab8 <col:24, col:33> col:33 referenced typename depth 0 index 1 _Iftrue
| | |-TemplateTypeParmDecl 0xbbbb38 <col:42, col:51> col:51 typename depth 0 index 2 _Iffalse
| | |-CXXRecordDecl 0xbbbbe8 prev 0xaceb28 <line:2060:5, line:2061:29> line:2060:12 struct conditional definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-CXXRecordDecl 0xbbbd38 <col:5, col:12> col:12 implicit struct conditional
| | | `-TypedefDecl 0xbbbdd8 <line:2061:7, col:23> col:23 type '_Iftrue'
| | |   `-TemplateTypeParmType 0xbbbb10 '_Iftrue' dependent depth 0 index 1
| | |     `-TemplateTypeParm 0xbbbab8 '_Iftrue'
| | |-ClassTemplateSpecialization 0xd38b88 'conditional'
| | |-ClassTemplateSpecialization 0xd399c0 'conditional'
| | |-ClassTemplateSpecialization 0xd3db40 'conditional'
| | |-ClassTemplateSpecialization 0xd43988 'conditional'
| | |-ClassTemplateSpecialization 0xd4d1b8 'conditional'
| | |-ClassTemplateSpecialization 0xd4da00 'conditional'
| | |-ClassTemplateSpecialization 0xd5e978 'conditional'
| | |-ClassTemplateSpecialization 0xd618a0 'conditional'
| | |-ClassTemplateSpecialization 0xd9a338 'conditional'
| | |-ClassTemplateSpecialization 0xd9d220 'conditional'
| | |-ClassTemplateSpecialization 0xdb3578 'conditional'
| | |-ClassTemplateSpecialization 0xdb43b0 'conditional'
| | |-ClassTemplateSpecialization 0xdc9558 'conditional'
| | |-ClassTemplateSpecialization 0xdca390 'conditional'
| | |-ClassTemplateSpecialization 0xdcddc0 'conditional'
| | |-ClassTemplateSpecialization 0xdcf678 'conditional'
| | |-ClassTemplateSpecialization 0xdd7f48 'conditional'
| | |-ClassTemplateSpecialization 0xe56ca0 'conditional'
| | |-ClassTemplateSpecialization 0xe63f68 'conditional'
| | |-ClassTemplateSpecialization 0xe647e0 'conditional'
| | |-ClassTemplateSpecialization 0xe68bb0 'conditional'
| | |-ClassTemplateSpecialization 0xe692f8 'conditional'
| | |-ClassTemplateSpecialization 0xe6b1c8 'conditional'
| | |-ClassTemplateSpecialization 0xe6f8f8 'conditional'
| | `-ClassTemplateSpecialization 0xe734d0 'conditional'
| |-ClassTemplatePartialSpecializationDecl 0xbbc140 <line:2064:3, line:2066:30> line:2065:12 struct conditional definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument integral 0
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument type 'type-parameter-0-1'
| | |-TemplateTypeParmDecl 0xbbbe48 <line:2064:12, col:21> col:21 referenced typename depth 0 index 0 _Iftrue
| | |-TemplateTypeParmDecl 0xbbbec8 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Iffalse
| | |-CXXRecordDecl 0xbbc438 <line:2065:5, col:12> col:12 implicit struct conditional
| | `-TypedefDecl 0xbbc4d8 <line:2066:7, col:24> col:24 type '_Iffalse'
| |   `-TemplateTypeParmType 0xbbbf20 '_Iffalse' dependent depth 0 index 1
| |     `-TemplateTypeParm 0xbbbec8 '_Iffalse'
| |-ClassTemplateDecl 0xbbc678 <line:2069:3, line:2070:12> col:12 common_type
| | |-TemplateTypeParmDecl 0xbbc548 <line:2069:12, col:24> col:24 typename depth 0 index 0 ... _Tp
| | |-CXXRecordDecl 0xbbc5e8 <line:2070:5, col:12> col:12 struct common_type
| | |-ClassTemplateSpecialization 0xbc38f0 'common_type'
| | |-ClassTemplateSpecializationDecl 0xd51580 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/chrono:87:3, line:92:7> line:88:12 struct common_type definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__duration_common_type_wrapper<typename __member_type_wrapper<common_type<long, long> >::type, ratio<1, 1000000000>, ratio<1, 1000000000> >::type':'std::__success_type<std::chrono::duration<long, std::ratio<1, 1000000000> > >'
| | | |-TemplateArgument pack
| | | | |-TemplateArgument type 'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | | | `-TemplateArgument type 'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | | `-CXXRecordDecl 0xd5b5f8 prev 0xd51580 <col:5, col:12> col:12 implicit struct common_type
| | |-ClassTemplateSpecializationDecl 0xd52640 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/type_traits:2127:3, line:2130:7> line:2128:12 struct common_type definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__common_type_impl<long, long>::type':'std::__success_type<long>'
| | | |-TemplateArgument pack
| | | | |-TemplateArgument type 'long'
| | | | `-TemplateArgument type 'long'
| | | `-CXXRecordDecl 0xd598e8 prev 0xd52640 <col:5, col:12> col:12 implicit struct common_type
| | |-ClassTemplateSpecializationDecl 0xb98828 <line:2132:3, line:2136:7> line:2133:12 struct common_type definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__expanded_common_type_wrapper<typename __member_type_wrapper<common_type<long, long> >::type, long>::type':'std::common_type<long, long>'
| | | |-TemplateArgument pack
| | | | |-TemplateArgument type 'long'
| | | | |-TemplateArgument type 'long'
| | | | `-TemplateArgument type 'long'
| | | `-CXXRecordDecl 0xd8dd50 prev 0xb98828 <col:5, col:12> col:12 implicit struct common_type
| | |-ClassTemplateSpecializationDecl 0xe59358 <line:2132:3, line:2136:7> line:2133:12 struct common_type definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__expanded_common_type_wrapper<typename __member_type_wrapper<common_type<double, long> >::type, long>::type':'std::common_type<double, long>'
| | | |-TemplateArgument pack
| | | | |-TemplateArgument type 'double'
| | | | |-TemplateArgument type 'long'
| | | | `-TemplateArgument type 'long'
| | | `-CXXRecordDecl 0xe5ff50 prev 0xe59358 <col:5, col:12> col:12 implicit struct common_type
| | `-ClassTemplateSpecializationDecl 0xe599e8 <line:2127:3, line:2130:7> line:2128:12 struct common_type definition
| |   |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__common_type_impl<double, long>::type':'std::__success_type<double>'
| |   |-TemplateArgument pack
| |   | |-TemplateArgument type 'double'
| |   | `-TemplateArgument type 'long'
| |   `-CXXRecordDecl 0xe5f178 prev 0xe599e8 <col:5, col:12> col:12 implicit struct common_type
| |-CXXRecordDecl 0xbbc8c8 <line:2074:3, line:2083:3> line:2074:10 referenced struct __do_common_type_impl definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-CXXRecordDecl 0xbbc9e8 <col:3, col:10> col:10 implicit struct __do_common_type_impl
| | |-FunctionTemplateDecl 0xbbd248 <line:2076:5, line:2079:51> col:40 _S_test
| | | |-TemplateTypeParmDecl 0xbbca78 <line:2076:14, col:23> col:23 referenced typename depth 0 index 0 _Tp
| | | |-TemplateTypeParmDecl 0xbbcaf8 <col:28, col:37> col:37 referenced typename depth 0 index 1 _Up
| | | |-CXXMethodDecl 0xbbd1a8 <line:2077:7, line:2079:51> col:40 _S_test '__success_type<typename decay<decltype(true ? std::declval<_Tp>() : std::declval<_Up>())>::type> (int)' static
| | | | `-ParmVarDecl 0xbbd068 <col:48> col:51 'int'
| | | |-CXXMethodDecl 0xd58ec8 <line:2077:7, line:2079:51> col:40 referenced _S_test '__success_type<typename decay<decltype(true ? std::declval<long>() : std::declval<long>())>::type> (int)' static
| | | | |-TemplateArgument type 'long'
| | | | |-TemplateArgument type 'long'
| | | | `-ParmVarDecl 0xd58db0 <col:48> col:51 'int'
| | | `-CXXMethodDecl 0xe5ea48 <line:2077:7, line:2079:51> col:40 referenced _S_test '__success_type<typename decay<decltype(true ? std::declval<double>() : std::declval<long>())>::type> (int)' static
| | |   |-TemplateArgument type 'double'
| | |   |-TemplateArgument type 'long'
| | |   `-ParmVarDecl 0xe5e930 <col:48> col:51 'int'
| | `-FunctionTemplateDecl 0xbc14e0 <line:2081:5, line:2082:40> col:29 _S_test
| |   |-TemplateTypeParmDecl 0xbbd2a8 <line:2081:14> col:22 typename depth 0 index 0
| |   |-TemplateTypeParmDecl 0xbc1350 <col:24> col:32 typename depth 0 index 1
| |   |-CXXMethodDecl 0xbc1440 <line:2082:7, col:40> col:29 _S_test 'std::__failure_type (...)' static
| |   |-CXXMethodDecl 0xd590e0 <col:7, col:40> col:29 _S_test 'std::__failure_type (...)' static
| |   | |-TemplateArgument type 'long'
| |   | `-TemplateArgument type 'long'
| |   `-CXXMethodDecl 0xe5ebe0 <col:7, col:40> col:29 _S_test 'std::__failure_type (...)' static
| |     |-TemplateArgument type 'double'
| |     `-TemplateArgument type 'long'
| |-ClassTemplateDecl 0xbc1700 <line:2085:3, line:2090:5> line:2086:12 __common_type_impl
| | |-TemplateTypeParmDecl 0xbc1550 <line:2085:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0xbc15c8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| | |-CXXRecordDecl 0xbc1670 <line:2086:5, line:2090:5> line:2086:12 struct __common_type_impl definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-private 'std::__do_common_type_impl'
| | | |-CXXRecordDecl 0xbc19d0 <col:5, col:12> col:12 implicit struct __common_type_impl
| | | `-TypedefDecl 0xbc1c18 <line:2089:7, col:46> col:46 type 'decltype(_S_test<_Tp, _Up>(0))'
| | |   `-DecltypeType 0xbc1be0 'decltype(_S_test<_Tp, _Up>(0))' dependent
| | |     `-CallExpr 0xbc1b78 <col:24, col:43> '<dependent type>'
| | |       |-UnresolvedLookupExpr 0xbc1a98 <col:24, col:40> '<dependent type>' lvalue (no ADL) = '_S_test' 0xbbd248 0xbc14e0
| | |       `-IntegerLiteral 0xbc1b58 <col:42> 'int' 0
| | |-ClassTemplateSpecializationDecl 0xd553c0 <line:2085:3, line:2090:5> line:2086:12 struct __common_type_impl definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-private 'std::__do_common_type_impl'
| | | |-TemplateArgument type 'long'
| | | |-TemplateArgument type 'long'
| | | |-CXXRecordDecl 0xd55640 prev 0xd553c0 <col:5, col:12> col:12 implicit struct __common_type_impl
| | | `-TypedefDecl 0xd59628 <line:2089:7, col:46> col:46 referenced type 'decltype(_S_test<long, long>(0))':'std::__success_type<long>'
| | |   `-DecltypeType 0xd595f0 'decltype(_S_test<long, long>(0))' sugar
| | |     |-CallExpr 0xd595a0 <col:24, col:43> '__success_type<typename decay<decltype(true ? std::declval<long>() : std::declval<long>())>::type>':'std::__success_type<long>'
| | |     | |-ImplicitCastExpr 0xd59588 <col:24, col:40> '__success_type<typename decay<decltype(true ? std::declval<long>() : std::declval<long>())>::type> (*)(int)' <FunctionToPointerDecay>
| | |     | | `-DeclRefExpr 0xd59490 <col:24, col:40> '__success_type<typename decay<decltype(true ? std::declval<long>() : std::declval<long>())>::type> (int)' lvalue CXXMethod 0xd58ec8 '_S_test' '__success_type<typename decay<decltype(true ? std::declval<long>() : std::declval<long>())>::type> (int)' (FunctionTemplate 0xbbd248 '_S_test') non_odr_use_unevaluated
| | |     | `-IntegerLiteral 0xbc1b58 <col:42> 'int' 0
| | |     `-TemplateSpecializationType 0xd58d70 '__success_type<typename decay<decltype(true ? std::declval<long>() : std::declval<long>())>::type>' sugar __success_type
| | |       |-TemplateArgument type 'typename decay<decltype(true ? std::declval<long>() : std::declval<long>())>::type':'long'
| | |       `-RecordType 0xd58050 'std::__success_type<long>'
| | |         `-ClassTemplateSpecialization 0xd57f70 '__success_type'
| | `-ClassTemplateSpecializationDecl 0xe5a658 <line:2085:3, line:2090:5> line:2086:12 struct __common_type_impl definition
| |   |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-private 'std::__do_common_type_impl'
| |   |-TemplateArgument type 'double'
| |   |-TemplateArgument type 'long'
| |   |-CXXRecordDecl 0xe5a8d0 prev 0xe5a658 <col:5, col:12> col:12 implicit struct __common_type_impl
| |   `-TypedefDecl 0xe5eeb8 <line:2089:7, col:46> col:46 referenced type 'decltype(_S_test<double, long>(0))':'std::__success_type<double>'
| |     `-DecltypeType 0xe5ee80 'decltype(_S_test<double, long>(0))' sugar
| |       |-CallExpr 0xe5ee30 <col:24, col:43> '__success_type<typename decay<decltype(true ? std::declval<double>() : std::declval<long>())>::type>':'std::__success_type<double>'
| |       | |-ImplicitCastExpr 0xe5ee18 <col:24, col:40> '__success_type<typename decay<decltype(true ? std::declval<double>() : std::declval<long>())>::type> (*)(int)' <FunctionToPointerDecay>
| |       | | `-DeclRefExpr 0xe5ed20 <col:24, col:40> '__success_type<typename decay<decltype(true ? std::declval<double>() : std::declval<long>())>::type> (int)' lvalue CXXMethod 0xe5ea48 '_S_test' '__success_type<typename decay<decltype(true ? std::declval<double>() : std::declval<long>())>::type> (int)' (FunctionTemplate 0xbbd248 '_S_test') non_odr_use_unevaluated
| |       | `-IntegerLiteral 0xbc1b58 <col:42> 'int' 0
| |       `-TemplateSpecializationType 0xe5e8f0 '__success_type<typename decay<decltype(true ? std::declval<double>() : std::declval<long>())>::type>' sugar __success_type
| |         |-TemplateArgument type 'typename decay<decltype(true ? std::declval<double>() : std::declval<long>())>::type':'double'
| |         `-RecordType 0xe5dc00 'std::__success_type<double>'
| |           `-ClassTemplateSpecialization 0xe5db20 '__success_type'
| |-CXXRecordDecl 0xbc1c88 <line:2092:3, line:2099:3> line:2092:10 referenced struct __do_member_type_wrapper definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-CXXRecordDecl 0xbc1da8 <col:3, col:10> col:10 implicit struct __do_member_type_wrapper
| | |-FunctionTemplateDecl 0xbc2258 <line:2094:5, line:2095:60> col:49 _S_test
| | | |-TemplateTypeParmDecl 0xbc1e38 <line:2094:14, col:23> col:23 typename depth 0 index 0 _Tp
| | | |-CXXMethodDecl 0xbc21b8 <line:2095:7, col:60> col:49 _S_test '__success_type<typename _Tp::type> (int)' static
| | | | `-ParmVarDecl 0xbc2078 <col:57> col:60 'int'
| | | |-CXXMethodDecl 0xd59ce8 <col:7, col:60> col:49 referenced _S_test '__success_type<typename common_type<long, long>::type> (int)' static
| | | | |-TemplateArgument type 'std::common_type<long, long>'
| | | | `-ParmVarDecl 0xd59c00 <col:57> col:60 'int'
| | | `-CXXMethodDecl 0xe5f4f8 <col:7, col:60> col:49 referenced _S_test '__success_type<typename common_type<double, long>::type> (int)' static
| | |   |-TemplateArgument type 'std::common_type<double, long>'
| | |   `-ParmVarDecl 0xe5f410 <col:57> col:60 'int'
| | `-FunctionTemplateDecl 0xbc2418 <line:2097:5, line:2098:40> col:29 _S_test
| |   |-TemplateTypeParmDecl 0xbc22b8 <line:2097:14> col:22 typename depth 0 index 0
| |   |-CXXMethodDecl 0xbc2378 <line:2098:7, col:40> col:29 _S_test 'std::__failure_type (...)' static
| |   |-CXXMethodDecl 0xd59eb8 <col:7, col:40> col:29 _S_test 'std::__failure_type (...)' static
| |   | `-TemplateArgument type 'std::common_type<long, long>'
| |   `-CXXMethodDecl 0xe5f648 <col:7, col:40> col:29 _S_test 'std::__failure_type (...)' static
| |     `-TemplateArgument type 'std::common_type<double, long>'
| |-ClassTemplateDecl 0xbc25b8 <line:2101:3, line:2106:5> line:2102:12 __member_type_wrapper
| | |-TemplateTypeParmDecl 0xbc2488 <line:2101:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0xbc2528 <line:2102:5, line:2106:5> line:2102:12 struct __member_type_wrapper definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-private 'std::__do_member_type_wrapper'
| | | |-CXXRecordDecl 0xbc2850 <col:5, col:12> col:12 implicit struct __member_type_wrapper
| | | `-TypedefDecl 0xbc2a58 <line:2105:7, col:41> col:41 type 'decltype(_S_test<_Tp>(0))'
| | |   `-DecltypeType 0xbc2a20 'decltype(_S_test<_Tp>(0))' dependent
| | |     `-CallExpr 0xbc29b8 <col:24, col:38> '<dependent type>'
| | |       |-UnresolvedLookupExpr 0xbc2908 <col:24, col:35> '<dependent type>' lvalue (no ADL) = '_S_test' 0xbc2258 0xbc2418
| | |       `-IntegerLiteral 0xbc2998 <col:37> 'int' 0
| | |-ClassTemplateSpecializationDecl 0xd527e0 <line:2101:3, line:2106:5> line:2102:12 struct __member_type_wrapper definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-private 'std::__do_member_type_wrapper'
| | | |-TemplateArgument type 'std::common_type<long, long>'
| | | |-CXXRecordDecl 0xd52a10 prev 0xd527e0 <col:5, col:12> col:12 implicit struct __member_type_wrapper
| | | `-TypedefDecl 0xd5a0e8 <line:2105:7, col:41> col:41 referenced type 'decltype(_S_test<std::common_type<long, long> >(0))':'std::__success_type<long>'
| | |   `-DecltypeType 0xd5a0b0 'decltype(_S_test<std::common_type<long, long> >(0))' sugar
| | |     |-CallExpr 0xd5a060 <col:24, col:38> '__success_type<typename common_type<long, long>::type>':'std::__success_type<long>'
| | |     | |-ImplicitCastExpr 0xd5a048 <col:24, col:35> '__success_type<typename common_type<long, long>::type> (*)(int)' <FunctionToPointerDecay>
| | |     | | `-DeclRefExpr 0xd59fb0 <col:24, col:35> '__success_type<typename common_type<long, long>::type> (int)' lvalue CXXMethod 0xd59ce8 '_S_test' '__success_type<typename common_type<long, long>::type> (int)' (FunctionTemplate 0xbc2258 '_S_test') non_odr_use_unevaluated
| | |     | `-IntegerLiteral 0xbc2998 <col:37> 'int' 0
| | |     `-TemplateSpecializationType 0xd59bc0 '__success_type<typename common_type<long, long>::type>' sugar __success_type
| | |       |-TemplateArgument type 'typename common_type<long, long>::type':'long'
| | |       `-RecordType 0xd58050 'std::__success_type<long>'
| | |         `-ClassTemplateSpecialization 0xd57f70 '__success_type'
| | `-ClassTemplateSpecializationDecl 0xe59b90 <line:2101:3, line:2106:5> line:2102:12 struct __member_type_wrapper definition
| |   |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-private 'std::__do_member_type_wrapper'
| |   |-TemplateArgument type 'std::common_type<double, long>'
| |   |-CXXRecordDecl 0xe59dc0 prev 0xe59b90 <col:5, col:12> col:12 implicit struct __member_type_wrapper
| |   `-TypedefDecl 0xe5f878 <line:2105:7, col:41> col:41 referenced type 'decltype(_S_test<std::common_type<double, long> >(0))':'std::__success_type<double>'
| |     `-DecltypeType 0xe5f840 'decltype(_S_test<std::common_type<double, long> >(0))' sugar
| |       |-CallExpr 0xe5f7f0 <col:24, col:38> '__success_type<typename common_type<double, long>::type>':'std::__success_type<double>'
| |       | |-ImplicitCastExpr 0xe5f7d8 <col:24, col:35> '__success_type<typename common_type<double, long>::type> (*)(int)' <FunctionToPointerDecay>
| |       | | `-DeclRefExpr 0xe5f740 <col:24, col:35> '__success_type<typename common_type<double, long>::type> (int)' lvalue CXXMethod 0xe5f4f8 '_S_test' '__success_type<typename common_type<double, long>::type> (int)' (FunctionTemplate 0xbc2258 '_S_test') non_odr_use_unevaluated
| |       | `-IntegerLiteral 0xbc2998 <col:37> 'int' 0
| |       `-TemplateSpecializationType 0xe5f3d0 '__success_type<typename common_type<double, long>::type>' sugar __success_type
| |         |-TemplateArgument type 'typename common_type<double, long>::type':'double'
| |         `-RecordType 0xe5dc00 'std::__success_type<double>'
| |           `-ClassTemplateSpecialization 0xe5db20 '__success_type'
| |-ClassTemplateDecl 0xbc2c80 <line:2108:3, line:2112:5> line:2109:12 __expanded_common_type_wrapper
| | |-TemplateTypeParmDecl 0xbc2ac8 <line:2108:12, col:21> col:21 typename depth 0 index 0 _CTp
| | |-TemplateTypeParmDecl 0xbc2b48 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _Args
| | |-CXXRecordDecl 0xbc2bf0 <line:2109:5, line:2112:5> line:2109:12 struct __expanded_common_type_wrapper definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-CXXRecordDecl 0xbc2f70 <col:5, col:12> col:12 implicit struct __expanded_common_type_wrapper
| | | `-TypedefDecl 0xbc3248 <line:2111:7, col:58> col:58 type 'common_type<typename _CTp::type, _Args...>'
| | |   `-TemplateSpecializationType 0xbc3160 'common_type<typename _CTp::type, _Args...>' dependent common_type
| | |     |-TemplateArgument type 'typename _CTp::type'
| | |     `-TemplateArgument type '_Args...'
| | |-ClassTemplateSpecializationDecl 0xd8d768 <line:2108:3, line:2112:5> line:2109:12 struct __expanded_common_type_wrapper definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'std::__success_type<long>'
| | | |-TemplateArgument pack
| | | | `-TemplateArgument type 'long'
| | | |-CXXRecordDecl 0xd8d9e0 prev 0xd8d768 <col:5, col:12> col:12 implicit struct __expanded_common_type_wrapper
| | | `-TypedefDecl 0xd8dc40 <line:2111:7, col:58> col:58 referenced type 'common_type<typename __success_type<long>::type, long>':'std::common_type<long, long>'
| | |   `-TemplateSpecializationType 0xd8dba0 'common_type<typename __success_type<long>::type, long>' sugar common_type
| | |     |-TemplateArgument type 'typename __success_type<long>::type':'long'
| | |     |-TemplateArgument type 'long':'long'
| | |     `-RecordType 0xd52720 'std::common_type<long, long>'
| | |       `-ClassTemplateSpecialization 0xd52640 'common_type'
| | `-ClassTemplateSpecializationDecl 0xe5f998 <line:2108:3, line:2112:5> line:2109:12 struct __expanded_common_type_wrapper definition
| |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-TemplateArgument type 'std::__success_type<double>'
| |   |-TemplateArgument pack
| |   | `-TemplateArgument type 'long'
| |   |-CXXRecordDecl 0xe5fc10 prev 0xe5f998 <col:5, col:12> col:12 implicit struct __expanded_common_type_wrapper
| |   `-TypedefDecl 0xe5fe40 <line:2111:7, col:58> col:58 referenced type 'common_type<typename __success_type<double>::type, long>':'std::common_type<double, long>'
| |     `-TemplateSpecializationType 0xe5fda0 'common_type<typename __success_type<double>::type, long>' sugar common_type
| |       |-TemplateArgument type 'typename __success_type<double>::type':'double'
| |       |-TemplateArgument type 'long':'long'
| |       `-RecordType 0xe59ad0 'std::common_type<double, long>'
| |         `-ClassTemplateSpecialization 0xe599e8 'common_type'
| |-ClassTemplatePartialSpecializationDecl 0xbc3518 <line:2114:3, line:2116:36> line:2115:12 struct __expanded_common_type_wrapper definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'std::__failure_type'
| | |-TemplateArgument pack
| | | `-TemplateArgument type 'type-parameter-0-0...'
| | |-TemplateTypeParmDecl 0xbc32b8 <line:2114:12, col:24> col:24 referenced typename depth 0 index 0 ... _Args
| | |-CXXRecordDecl 0xbc37c8 <line:2115:5, col:12> col:12 implicit struct __expanded_common_type_wrapper
| | `-TypedefDecl 0xbc3868 <line:2116:7, col:30> col:30 type 'std::__failure_type'
| |   `-RecordType 0xade030 'std::__failure_type'
| |     `-CXXRecord 0xaddfa0 '__failure_type'
| |-ClassTemplateSpecializationDecl 0xbc38f0 <line:2118:3, line:2120:7> line:2119:12 struct common_type definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument pack
| | `-CXXRecordDecl 0xbc3ad8 <col:5, col:12> col:12 implicit struct common_type
| |-ClassTemplatePartialSpecializationDecl 0xbc3d20 <line:2122:3, line:2125:7> line:2123:12 struct common_type definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'common_type<_Tp, _Tp>'
| | |-TemplateArgument pack
| | | `-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateTypeParmDecl 0xbc3b80 <line:2122:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xbc4110 <line:2123:5, col:12> col:12 implicit struct common_type
| |-ClassTemplatePartialSpecializationDecl 0xbc4450 <line:2127:3, line:2130:7> line:2128:12 struct common_type definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public '__common_type_impl<_Tp, _Up>::type'
| | |-TemplateArgument pack
| | | |-TemplateArgument type 'type-parameter-0-0'
| | | `-TemplateArgument type 'type-parameter-0-1'
| | |-TemplateTypeParmDecl 0xbc41b8 <line:2127:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0xbc4238 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| | `-CXXRecordDecl 0xbc48f0 <line:2128:5, col:12> col:12 implicit struct common_type
| |-ClassTemplatePartialSpecializationDecl 0xbc4d70 <line:2132:3, line:2136:7> line:2133:12 struct common_type definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public '__expanded_common_type_wrapper<typename __member_type_wrapper<common_type<_Tp, _Up> >::type, _Vp...>::type'
| | |-TemplateArgument pack
| | | |-TemplateArgument type 'type-parameter-0-0'
| | | |-TemplateArgument type 'type-parameter-0-1'
| | | `-TemplateArgument type 'type-parameter-0-2...'
| | |-TemplateTypeParmDecl 0xbc4998 <line:2132:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0xbc4a18 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| | |-TemplateTypeParmDecl 0xbc4a98 <col:40, col:52> col:52 referenced typename depth 0 index 2 ... _Vp
| | `-CXXRecordDecl 0xbc5dc0 <line:2133:5, col:12> col:12 implicit struct common_type
| |-ClassTemplateDecl 0xbc6128 <line:2138:3, line:2142:5> line:2139:12 __underlying_type_impl
| | |-TemplateTypeParmDecl 0xbc5e68 <line:2138:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0xbc5ff8 <col:26, col:47> col:31 'bool' depth 0 index 1
| | | `-TemplateArgument expr
| | |   `-ImplicitCastExpr 0xbc6058 <col:33, col:47> 'bool' <Dependent>
| | |     `-DependentScopeDeclRefExpr 0xbc5fb0 <col:33, col:47> '<dependent type>' lvalue
| | `-CXXRecordDecl 0xbc6098 <line:2139:5, line:2142:5> line:2139:12 struct __underlying_type_impl definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-CXXRecordDecl 0xbc63e0 <col:5, col:12> col:12 implicit struct __underlying_type_impl
| |   `-TypeAliasDecl 0xbc6510 <line:2141:7, col:41> col:13 type '__underlying_type(_Tp)'
| |     `-UnaryTransformType 0xbc64c0 '__underlying_type(_Tp)' dependent underlying_type
| |       `-TemplateTypeParmType 0xbc5ec0 '_Tp' dependent depth 0 index 0
| |         `-TemplateTypeParm 0xbc5e68 '_Tp'
| |-ClassTemplatePartialSpecializationDecl 0xbc6798 <line:2144:3, line:2146:7> line:2145:12 struct __underlying_type_impl definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 0
| | |-TemplateTypeParmDecl 0xbc6588 <line:2144:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xbc6a38 <line:2145:5, col:12> col:12 implicit struct __underlying_type_impl
| |-ClassTemplateDecl 0xbc6c08 <line:2149:3, line:2152:7> line:2150:12 underlying_type
| | |-TemplateTypeParmDecl 0xbc6ae0 <line:2149:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xbc6b78 <line:2150:5, line:2152:7> line:2150:12 struct underlying_type definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__underlying_type_impl<_Tp>'
| |   `-CXXRecordDecl 0xbc70a0 <col:5, col:12> col:12 implicit struct underlying_type
| |-ClassTemplateDecl 0xbc7278 <line:2154:3, line:2158:5> line:2155:12 __declval_protector
| | |-TemplateTypeParmDecl 0xbc7148 <line:2154:12, col:21> col:21 typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xbc71e8 <line:2155:5, line:2158:5> line:2155:12 struct __declval_protector definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-CXXRecordDecl 0xbc74d0 <col:5, col:12> col:12 implicit struct __declval_protector
| |   `-VarDecl 0xbc7570 <line:2157:7, col:34> col:25 __stop 'const bool' static cinit
| |     `-CXXBoolLiteralExpr 0xbc75d8 <col:34> 'bool' false
| |-FunctionTemplateDecl 0xbc7930 prev 0xb17e30 <line:2160:3, line:2166:5> line:2161:10 declval
| | |-TemplateTypeParmDecl 0xbc7658 <line:2160:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-FunctionDecl 0xbc7890 prev 0xb17d90 <line:2161:5, line:2166:5> line:2161:10 declval 'auto () noexcept -> decltype(__declval<_Tp>(0))'
| | | `-CompoundStmt 0xbc7ca8 <line:2162:5, line:2166:5>
| | |   |-DeclStmt 0xbc7b80 <line:2163:7, line:2164:37>
| | |   | `-StaticAssertDecl 0xbc7b40 <line:2163:7, line:2164:36> line:2163:7
| | |   |   |-DependentScopeDeclRefExpr 0xbc7a50 <col:21, col:47> '<dependent type>' lvalue
| | |   |   `-StringLiteral 0xbc7b08 <line:2164:7> 'const char [28]' lvalue "declval() must not be used!"
| | |   `-ReturnStmt 0xbc7c98 <line:2165:7, col:30>
| | |     `-CallExpr 0xbc7c70 <col:14, col:30> '<dependent type>'
| | |       |-UnresolvedLookupExpr 0xbc7bc0 <col:14, col:27> '<dependent type>' lvalue (ADL) = '__declval' 0xb17a58 0xb177b0
| | |       `-IntegerLiteral 0xbc7c50 <col:29> 'int' 0
| | |-Function 0xd3cef0 'declval' 'auto () noexcept -> decltype(__declval<const long &>(0))'
| | |-Function 0xd56680 'declval' 'auto () noexcept -> decltype(__declval<long>(0))'
| | |-Function 0xd61060 'declval' 'auto () noexcept -> decltype(__declval<const std::chrono::duration<long, std::ratio<1, 1000000000> > &>(0))'
| | |-Function 0xd9ca30 'declval' 'auto () noexcept -> decltype(__declval<const std::chrono::duration<long, std::ratio<1, 1> > &>(0))'
| | |-Function 0xdb6e00 'declval' 'auto () noexcept -> decltype(__declval<std::chrono::duration<long, std::ratio<1, 1000000000> > >(0))'
| | |-Function 0xdcd1a0 'declval' 'auto () noexcept -> decltype(__declval<const long double &>(0))'
| | |-Function 0xe5b910 'declval' 'auto () noexcept -> decltype(__declval<double>(0))'
| | |-Function 0xe67f90 'declval' 'auto () noexcept -> decltype(__declval<const double &>(0))'
| | `-Function 0xe72ce0 'declval' 'auto () noexcept -> decltype(__declval<const std::chrono::duration<double, std::ratio<1, 1> > &>(0))'
| |-TypeAliasTemplateDecl 0xbc8070 <line:2169:3, line:2171:66> line:2170:5 __remove_cvref_t
| | |-TemplateTypeParmDecl 0xbc7cc8 <line:2169:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0xbc8010 <line:2170:5, line:2171:66> line:2170:11 __remove_cvref_t 'typename remove_cv<typename remove_reference<_Tp>::type>::type'
| |   `-DependentNameType 0xbc7fa0 'typename remove_cv<typename remove_reference<_Tp>::type>::type' dependent
| |-ClassTemplateDecl 0xbc81f8 <line:2174:3, line:2175:11> col:11 result_of
| | |-TemplateTypeParmDecl 0xbc80c8 <line:2174:12, col:21> col:21 typename depth 0 index 0 _Signature
| | `-CXXRecordDecl 0xbc8168 <line:2175:5, col:11> col:11 class result_of
| |-CXXRecordDecl 0xbc83e8 <line:2181:3, col:32> col:10 referenced struct __invoke_memfun_ref definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | `-CXXRecordDecl 0xbc8508 <col:3, col:10> col:10 implicit struct __invoke_memfun_ref
| |-CXXRecordDecl 0xbc85b0 <line:2182:3, col:34> col:10 referenced struct __invoke_memfun_deref definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | `-CXXRecordDecl 0xbc86c8 <col:3, col:10> col:10 implicit struct __invoke_memfun_deref
| |-CXXRecordDecl 0xbc8770 <line:2183:3, col:32> col:10 referenced struct __invoke_memobj_ref definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | `-CXXRecordDecl 0xbc8888 <col:3, col:10> col:10 implicit struct __invoke_memobj_ref
| |-CXXRecordDecl 0xbc8930 <line:2184:3, col:34> col:10 referenced struct __invoke_memobj_deref definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | `-CXXRecordDecl 0xbc8a48 <col:3, col:10> col:10 implicit struct __invoke_memobj_deref
| |-CXXRecordDecl 0xbc8af0 <line:2185:3, col:27> col:10 referenced struct __invoke_other definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | `-CXXRecordDecl 0xbc8c08 <col:3, col:10> col:10 implicit struct __invoke_other
| |-ClassTemplateDecl 0xbc8e60 <line:2188:3, line:2190:35> line:2189:12 __result_of_success
| | |-TemplateTypeParmDecl 0xbc8cb0 <line:2188:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0xbc8d28 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Tag
| | `-CXXRecordDecl 0xbc8dd0 <line:2189:5, line:2190:35> line:2189:12 struct __result_of_success definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__success_type<_Tp>'
| |   |-CXXRecordDecl 0xbc91a0 <col:5, col:12> col:12 implicit struct __result_of_success
| |   `-TypeAliasDecl 0xbc9240 <line:2190:7, col:29> col:13 __invoke_type '_Tag'
| |     `-TemplateTypeParmType 0xbc8d80 '_Tag' dependent depth 0 index 1
| |       `-TemplateTypeParm 0xbc8d28 '_Tag'
| |-CXXRecordDecl 0xbc92b8 <line:2193:3, line:2202:3> line:2193:10 referenced struct __result_of_memfun_ref_impl definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-CXXRecordDecl 0xbc93d8 <col:3, col:10> col:10 implicit struct __result_of_memfun_ref_impl
| | |-FunctionTemplateDecl 0xbcb630 <line:2195:5, line:2198:42> col:31 _S_test
| | | |-TemplateTypeParmDecl 0xbc9468 <line:2195:14, col:23> col:23 referenced typename depth 0 index 0 _Fp
| | | |-TemplateTypeParmDecl 0xbc94e8 <col:28, col:37> col:37 referenced typename depth 0 index 1 _Tp1
| | | |-TemplateTypeParmDecl 0xbc9568 <col:43, col:55> col:55 referenced typename depth 0 index 2 ... _Args
| | | `-CXXMethodDecl 0xbcb590 <line:2196:7, line:2198:42> col:31 _S_test '__result_of_success<decltype((std::declval<_Tp1>() .* std::declval<_Fp>())(std::declval<_Args>()...)), std::__invoke_memfun_ref> (int)' static
| | |   `-ParmVarDecl 0xbcb438 <col:39> col:42 'int'
| | `-FunctionTemplateDecl 0xbcb7e8 <line:2200:5, line:2201:40> col:29 _S_test
| |   |-TemplateTypeParmDecl 0xbcb690 <line:2200:14> col:25 typename depth 0 index 0 ...
| |   `-CXXMethodDecl 0xbcb748 <line:2201:7, col:40> col:29 _S_test 'std::__failure_type (...)' static
| |-ClassTemplateDecl 0xbcba98 <line:2204:3, line:2209:5> line:2205:12 __result_of_memfun_ref
| | |-TemplateTypeParmDecl 0xbcb858 <line:2204:12, col:21> col:21 referenced typename depth 0 index 0 _MemPtr
| | |-TemplateTypeParmDecl 0xbcb8d8 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Arg
| | |-TemplateTypeParmDecl 0xbcb958 <col:45, col:57> col:57 referenced typename depth 0 index 2 ... _Args
| | `-CXXRecordDecl 0xbcba08 <line:2205:5, line:2209:5> line:2205:12 struct __result_of_memfun_ref definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-private 'std::__result_of_memfun_ref_impl'
| |   |-CXXRecordDecl 0xbcbdf0 <col:5, col:12> col:12 implicit struct __result_of_memfun_ref
| |   `-TypedefDecl 0xbcc088 <line:2208:7, col:61> col:61 type 'decltype(_S_test<_MemPtr, _Arg, _Args...>(0))'
| |     `-DecltypeType 0xbcc050 'decltype(_S_test<_MemPtr, _Arg, _Args...>(0))' dependent
| |       `-CallExpr 0xbcbfe8 <col:24, col:58> '<dependent type>'
| |         |-UnresolvedLookupExpr 0xbcbed8 <col:24, col:55> '<dependent type>' lvalue (no ADL) = '_S_test' 0xbcb630 0xbcb7e8
| |         `-IntegerLiteral 0xbcbfc8 <col:57> 'int' 0
| |-CXXRecordDecl 0xbcc0f8 <line:2212:3, line:2221:3> line:2212:10 referenced struct __result_of_memfun_deref_impl definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-CXXRecordDecl 0xbcc218 <col:3, col:10> col:10 implicit struct __result_of_memfun_deref_impl
| | |-FunctionTemplateDecl 0xbccb40 <line:2214:5, line:2217:44> col:33 _S_test
| | | |-TemplateTypeParmDecl 0xbcc2a8 <line:2214:14, col:23> col:23 referenced typename depth 0 index 0 _Fp
| | | |-TemplateTypeParmDecl 0xbcc328 <col:28, col:37> col:37 referenced typename depth 0 index 1 _Tp1
| | | |-TemplateTypeParmDecl 0xbcc3a8 <col:43, col:55> col:55 referenced typename depth 0 index 2 ... _Args
| | | `-CXXMethodDecl 0xbccaa0 <line:2215:7, line:2217:44> col:33 _S_test '__result_of_success<decltype(((*std::declval<_Tp1>()) .* std::declval<_Fp>())(std::declval<_Args>()...)), std::__invoke_memfun_deref> (int)' static
| | |   `-ParmVarDecl 0xbcc948 <col:41> col:44 'int'
| | `-FunctionTemplateDecl 0xbcccf8 <line:2219:5, line:2220:40> col:29 _S_test
| |   |-TemplateTypeParmDecl 0xbccba0 <line:2219:14> col:25 typename depth 0 index 0 ...
| |   `-CXXMethodDecl 0xbccc58 <line:2220:7, col:40> col:29 _S_test 'std::__failure_type (...)' static
| |-ClassTemplateDecl 0xbccfa8 <line:2223:3, line:2228:5> line:2224:12 __result_of_memfun_deref
| | |-TemplateTypeParmDecl 0xbccd68 <line:2223:12, col:21> col:21 referenced typename depth 0 index 0 _MemPtr
| | |-TemplateTypeParmDecl 0xbccde8 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Arg
| | |-TemplateTypeParmDecl 0xbcce68 <col:45, col:57> col:57 referenced typename depth 0 index 2 ... _Args
| | `-CXXRecordDecl 0xbccf18 <line:2224:5, line:2228:5> line:2224:12 struct __result_of_memfun_deref definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-private 'std::__result_of_memfun_deref_impl'
| |   |-CXXRecordDecl 0xbcd300 <col:5, col:12> col:12 implicit struct __result_of_memfun_deref
| |   `-TypedefDecl 0xbcd558 <line:2227:7, col:61> col:61 type 'decltype(_S_test<_MemPtr, _Arg, _Args...>(0))'
| |     `-DecltypeType 0xbcd520 'decltype(_S_test<_MemPtr, _Arg, _Args...>(0))' dependent
| |       `-CallExpr 0xbcd4f8 <col:24, col:58> '<dependent type>'
| |         |-UnresolvedLookupExpr 0xbcd3e8 <col:24, col:55> '<dependent type>' lvalue (no ADL) = '_S_test' 0xbccb40 0xbcccf8
| |         `-IntegerLiteral 0xbcd4d8 <col:57> 'int' 0
| |-CXXRecordDecl 0xbcd5c8 <line:2231:3, line:2240:3> line:2231:10 referenced struct __result_of_memobj_ref_impl definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-CXXRecordDecl 0xbcd6e8 <col:3, col:10> col:10 implicit struct __result_of_memobj_ref_impl
| | |-FunctionTemplateDecl 0xbcde10 <line:2233:5, line:2236:42> col:31 _S_test
| | | |-TemplateTypeParmDecl 0xbcd778 <line:2233:14, col:23> col:23 referenced typename depth 0 index 0 _Fp
| | | |-TemplateTypeParmDecl 0xbcd7f8 <col:28, col:37> col:37 referenced typename depth 0 index 1 _Tp1
| | | `-CXXMethodDecl 0xbcdd70 <line:2234:7, line:2236:42> col:31 _S_test '__result_of_success<decltype(std::declval<_Tp1>() .* std::declval<_Fp>()), std::__invoke_memobj_ref> (int)' static
| | |   `-ParmVarDecl 0xbcdc18 <col:39> col:42 'int'
| | `-FunctionTemplateDecl 0xbce050 <line:2238:5, line:2239:40> col:29 _S_test
| |   |-TemplateTypeParmDecl 0xbcde70 <line:2238:14> col:22 typename depth 0 index 0
| |   |-TemplateTypeParmDecl 0xbcdee8 <col:24> col:32 typename depth 0 index 1
| |   `-CXXMethodDecl 0xbcdfb0 <line:2239:7, col:40> col:29 _S_test 'std::__failure_type (...)' static
| |-ClassTemplateDecl 0xbce270 <line:2242:3, line:2247:5> line:2243:12 __result_of_memobj_ref
| | |-TemplateTypeParmDecl 0xbce0c0 <line:2242:12, col:21> col:21 referenced typename depth 0 index 0 _MemPtr
| | |-TemplateTypeParmDecl 0xbce138 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Arg
| | `-CXXRecordDecl 0xbce1e0 <line:2243:5, line:2247:5> line:2243:12 struct __result_of_memobj_ref definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-private 'std::__result_of_memobj_ref_impl'
| |   |-CXXRecordDecl 0xbce540 <col:5, col:12> col:12 implicit struct __result_of_memobj_ref
| |   `-TypedefDecl 0xbce748 <line:2246:7, col:51> col:51 type 'decltype(_S_test<_MemPtr, _Arg>(0))'
| |     `-DecltypeType 0xbce710 'decltype(_S_test<_MemPtr, _Arg>(0))' dependent
| |       `-CallExpr 0xbce6e8 <col:24, col:48> '<dependent type>'
| |         |-UnresolvedLookupExpr 0xbce608 <col:24, col:45> '<dependent type>' lvalue (no ADL) = '_S_test' 0xbcde10 0xbce050
| |         `-IntegerLiteral 0xbce6c8 <col:47> 'int' 0
| |-CXXRecordDecl 0xbce7b8 <line:2250:3, line:2259:3> line:2250:10 referenced struct __result_of_memobj_deref_impl definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-CXXRecordDecl 0xbce8d8 <col:3, col:10> col:10 implicit struct __result_of_memobj_deref_impl
| | |-FunctionTemplateDecl 0xbcf040 <line:2252:5, line:2255:44> col:33 _S_test
| | | |-TemplateTypeParmDecl 0xbce968 <line:2252:14, col:23> col:23 referenced typename depth 0 index 0 _Fp
| | | |-TemplateTypeParmDecl 0xbce9e8 <col:28, col:37> col:37 referenced typename depth 0 index 1 _Tp1
| | | `-CXXMethodDecl 0xbcefa0 <line:2253:7, line:2255:44> col:33 _S_test '__result_of_success<decltype((*std::declval<_Tp1>()) .* std::declval<_Fp>()), std::__invoke_memobj_deref> (int)' static
| | |   `-ParmVarDecl 0xbcee48 <col:41> col:44 'int'
| | `-FunctionTemplateDecl 0xbcf280 <line:2257:5, line:2258:40> col:29 _S_test
| |   |-TemplateTypeParmDecl 0xbcf0a0 <line:2257:14> col:22 typename depth 0 index 0
| |   |-TemplateTypeParmDecl 0xbcf118 <col:24> col:32 typename depth 0 index 1
| |   `-CXXMethodDecl 0xbcf1e0 <line:2258:7, col:40> col:29 _S_test 'std::__failure_type (...)' static
| |-ClassTemplateDecl 0xbd1330 <line:2261:3, line:2266:5> line:2262:12 __result_of_memobj_deref
| | |-TemplateTypeParmDecl 0xbcf2f0 <line:2261:12, col:21> col:21 referenced typename depth 0 index 0 _MemPtr
| | |-TemplateTypeParmDecl 0xbcf368 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Arg
| | `-CXXRecordDecl 0xbd12a0 <line:2262:5, line:2266:5> line:2262:12 struct __result_of_memobj_deref definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-private 'std::__result_of_memobj_deref_impl'
| |   |-CXXRecordDecl 0xbd1600 <col:5, col:12> col:12 implicit struct __result_of_memobj_deref
| |   `-TypedefDecl 0xbd1808 <line:2265:7, col:51> col:51 type 'decltype(_S_test<_MemPtr, _Arg>(0))'
| |     `-DecltypeType 0xbd17d0 'decltype(_S_test<_MemPtr, _Arg>(0))' dependent
| |       `-CallExpr 0xbd17a8 <col:24, col:48> '<dependent type>'
| |         |-UnresolvedLookupExpr 0xbd16c8 <col:24, col:45> '<dependent type>' lvalue (no ADL) = '_S_test' 0xbcf040 0xbcf280
| |         `-IntegerLiteral 0xbd1788 <col:47> 'int' 0
| |-ClassTemplateDecl 0xbd1a30 <line:2268:3, line:2269:12> col:12 __result_of_memobj
| | |-TemplateTypeParmDecl 0xbd1878 <line:2268:12, col:21> col:21 typename depth 0 index 0 _MemPtr
| | |-TemplateTypeParmDecl 0xbd18f8 <col:30, col:39> col:39 typename depth 0 index 1 _Arg
| | `-CXXRecordDecl 0xbd19a0 <line:2269:5, col:12> col:12 struct __result_of_memobj
| |-ClassTemplatePartialSpecializationDecl 0xbd1fd8 <line:2271:3, line:2281:5> line:2272:12 struct __result_of_memobj definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
| | |-TemplateArgument type 'type-parameter-0-2'
| | |-TemplateTypeParmDecl 0xbd1c58 <line:2271:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| | |-TemplateTypeParmDecl 0xbd1cd8 <col:27, col:36> col:36 referenced typename depth 0 index 1 _Class
| | |-TemplateTypeParmDecl 0xbd1d58 <col:44, col:53> col:53 referenced typename depth 0 index 2 _Arg
| | |-CXXRecordDecl 0xbd2268 <line:2272:5, col:12> col:12 implicit struct __result_of_memobj
| | |-TypedefDecl 0xbd27a8 <line:2274:7, col:38> col:38 referenced _Argval '__remove_cvref_t<_Arg>':'typename remove_cv<typename remove_reference<type-parameter-0-2>::type>::type'
| | | `-TemplateSpecializationType 0xbd2700 '__remove_cvref_t<_Arg>' sugar dependent alias __remove_cvref_t
| | |   |-TemplateArgument type '_Arg'
| | |   |-DependentNameType 0xbd26b0 'typename remove_cv<typename remove_reference<type-parameter-0-2>::type>::type' dependent
| | |   `-DependentNameType 0xbd26b0 'typename remove_cv<typename remove_reference<type-parameter-0-2>::type>::type' dependent
| | |-TypedefDecl 0xbd2848 <line:2275:7, col:30> col:30 referenced _MemPtr '_Res _Class::*'
| | | `-MemberPointerType 0xbd1e30 '_Res _Class::*' dependent
| | |   |-TemplateTypeParmType 0xbd1d30 '_Class' dependent depth 0 index 1
| | |   | `-TemplateTypeParm 0xbd1cd8 '_Class'
| | |   `-TemplateTypeParmType 0xbd1cb0 '_Res' dependent depth 0 index 0
| | |     `-TemplateTypeParm 0xbd1c58 '_Res'
| | `-TypedefDecl 0xbd32f0 <line:2276:7, line:2280:21> col:21 type 'typename conditional<__or_<is_same<_Argval, _Class>, is_base_of<_Class, _Argval> >::value, __result_of_memobj_ref<_MemPtr, _Arg>, __result_of_memobj_deref<_MemPtr, _Arg> >::type::type'
| |   `-DependentNameType 0xbd3280 'typename conditional<__or_<is_same<_Argval, _Class>, is_base_of<_Class, _Argval> >::value, __result_of_memobj_ref<_MemPtr, _Arg>, __result_of_memobj_deref<_MemPtr, _Arg> >::type::type' dependent
| |-ClassTemplateDecl 0xbd3598 <line:2283:3, line:2284:12> col:12 __result_of_memfun
| | |-TemplateTypeParmDecl 0xbd3360 <line:2283:12, col:21> col:21 typename depth 0 index 0 _MemPtr
| | |-TemplateTypeParmDecl 0xbd33d8 <col:30, col:39> col:39 typename depth 0 index 1 _Arg
| | |-TemplateTypeParmDecl 0xbd3458 <col:45, col:57> col:57 typename depth 0 index 2 ... _Args
| | `-CXXRecordDecl 0xbd3508 <line:2284:5, col:12> col:12 struct __result_of_memfun
| |-ClassTemplatePartialSpecializationDecl 0xbd3d20 <line:2286:3, line:2295:5> line:2287:12 struct __result_of_memfun definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
| | |-TemplateArgument type 'type-parameter-0-2'
| | |-TemplateArgument pack
| | | `-TemplateArgument type 'type-parameter-0-3...'
| | |-TemplateTypeParmDecl 0xbd3848 <line:2286:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| | |-TemplateTypeParmDecl 0xbd38c8 <col:27, col:36> col:36 referenced typename depth 0 index 1 _Class
| | |-TemplateTypeParmDecl 0xbd3948 <col:44, col:53> col:53 referenced typename depth 0 index 2 _Arg
| | |-TemplateTypeParmDecl 0xbd39c8 <col:59, col:71> col:71 referenced typename depth 0 index 3 ... _Args
| | |-CXXRecordDecl 0xbd4038 <line:2287:5, col:12> col:12 implicit struct __result_of_memfun
| | |-TypedefDecl 0xbd41e0 <line:2289:7, col:53> col:53 referenced _Argval 'typename remove_reference<_Arg>::type'
| | | `-DependentNameType 0xbd4170 'typename remove_reference<_Arg>::type' dependent
| | |-TypedefDecl 0xbd4280 <line:2290:7, col:30> col:30 referenced _MemPtr '_Res _Class::*'
| | | `-MemberPointerType 0xbd3aa0 '_Res _Class::*' dependent
| | |   |-TemplateTypeParmType 0xbd3920 '_Class' dependent depth 0 index 1
| | |   | `-TemplateTypeParm 0xbd38c8 '_Class'
| | |   `-TemplateTypeParmType 0xbd38a0 '_Res' dependent depth 0 index 0
| | |     `-TemplateTypeParm 0xbd3848 '_Res'
| | `-TypedefDecl 0xbd4b70 <line:2291:7, line:2294:21> col:21 type 'typename conditional<is_base_of<_Class, _Argval>::value, __result_of_memfun_ref<_MemPtr, _Arg, _Args...>, __result_of_memfun_deref<_MemPtr, _Arg, _Args...> >::type::type'
| |   `-DependentNameType 0xbd4b00 'typename conditional<is_base_of<_Class, _Argval>::value, __result_of_memfun_ref<_MemPtr, _Arg, _Args...>, __result_of_memfun_deref<_MemPtr, _Arg, _Args...> >::type::type' dependent
| |-ClassTemplateDecl 0xbd5140 <line:2302:3, line:2306:5> line:2303:12 __inv_unwrap
| | |-TemplateTypeParmDecl 0xbd4be0 <line:2302:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0xbd5008 <col:26, <scratch space>:101:1> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/type_traits:2302:35 typename depth 0 index 1 _Up
| | | `-TemplateArgument type '__remove_cvref_t<_Tp>':'typename remove_cv<typename remove_reference<type-parameter-0-0>::type>::type'
| | `-CXXRecordDecl 0xbd50b0 <line:2303:5, line:2306:5> line:2303:12 struct __inv_unwrap definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-CXXRecordDecl 0xbd7520 <col:5, col:12> col:12 implicit struct __inv_unwrap
| |   `-TypeAliasDecl 0xbd75c0 <line:2305:7, col:20> col:13 type '_Tp'
| |     `-TemplateTypeParmType 0xbd4c30 '_Tp' dependent depth 0 index 0
| |       `-TemplateTypeParm 0xbd4be0 '_Tp'
| |-ClassTemplatePartialSpecializationDecl 0xbd7988 <line:2308:3, line:2312:5> line:2309:12 struct __inv_unwrap definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument type 'reference_wrapper<type-parameter-0-1>'
| | |-TemplateTypeParmDecl 0xbd7638 <line:2308:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0xbd76b8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| | |-CXXRecordDecl 0xbd7c38 <line:2309:5, col:12> col:12 implicit struct __inv_unwrap
| | `-TypeAliasDecl 0xbd7d38 <line:2311:7, col:23> col:13 type '_Up &'
| |   `-LValueReferenceType 0xbd7d00 '_Up &' dependent
| |     `-TemplateTypeParmType 0xbd7710 '_Up' dependent depth 0 index 1
| |       `-TemplateTypeParm 0xbd76b8 '_Up'
| |-ClassTemplateDecl 0xbd8050 <line:2314:3, line:2318:5> line:2315:12 __result_of_impl
| | |-NonTypeTemplateParmDecl 0xbd7dc0 <line:2314:12> col:16 'bool' depth 0 index 0
| | |-NonTypeTemplateParmDecl 0xbd7e30 <col:18> col:22 'bool' depth 0 index 1
| | |-TemplateTypeParmDecl 0xbd7e90 <col:24, col:33> col:33 typename depth 0 index 2 _Functor
| | |-TemplateTypeParmDecl 0xbd7f08 <col:43, col:55> col:55 typename depth 0 index 3 ... _ArgTypes
| | `-CXXRecordDecl 0xbd7fc0 <line:2315:5, line:2318:5> line:2315:12 struct __result_of_impl definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-CXXRecordDecl 0xbd83e0 <col:5, col:12> col:12 implicit struct __result_of_impl
| |   `-TypedefDecl 0xbd8480 <line:2317:7, col:30> col:30 type 'std::__failure_type'
| |     `-RecordType 0xade030 'std::__failure_type'
| |       `-CXXRecord 0xaddfa0 '__failure_type'
| |-ClassTemplatePartialSpecializationDecl 0xbd88a8 <line:2320:3, line:2324:7> line:2321:12 struct __result_of_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public '__result_of_memobj<typename decay<_MemPtr>::type, typename __inv_unwrap<_Arg>::type>'
| | |-TemplateArgument integral 1
| | |-TemplateArgument integral 0
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument pack
| | | `-TemplateArgument type 'type-parameter-0-1'
| | |-TemplateTypeParmDecl 0xbd84f0 <line:2320:12, col:21> col:21 referenced typename depth 0 index 0 _MemPtr
| | |-TemplateTypeParmDecl 0xbd8568 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Arg
| | `-CXXRecordDecl 0xbd9500 <line:2321:5, col:12> col:12 implicit struct __result_of_impl
| |-ClassTemplatePartialSpecializationDecl 0xbd9aa8 <line:2326:3, line:2330:7> line:2327:12 struct __result_of_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public '__result_of_memfun<typename decay<_MemPtr>::type, typename __inv_unwrap<_Arg>::type, _Args...>'
| | |-TemplateArgument integral 0
| | |-TemplateArgument integral 1
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument pack
| | | |-TemplateArgument type 'type-parameter-0-1'
| | | `-TemplateArgument type 'type-parameter-0-2...'
| | |-TemplateTypeParmDecl 0xbd95a8 <line:2326:12, col:21> col:21 referenced typename depth 0 index 0 _MemPtr
| | |-TemplateTypeParmDecl 0xbd9628 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Arg
| | |-TemplateTypeParmDecl 0xbd96a8 <col:45, col:57> col:57 referenced typename depth 0 index 2 ... _Args
| | `-CXXRecordDecl 0xbda5f0 <line:2327:5, col:12> col:12 implicit struct __result_of_impl
| |-CXXRecordDecl 0xbda698 <line:2333:3, line:2342:3> line:2333:10 referenced struct __result_of_other_impl definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-CXXRecordDecl 0xbda7b8 <col:3, col:10> col:10 implicit struct __result_of_other_impl
| | |-FunctionTemplateDecl 0xbdaf10 <line:2335:5, line:2338:37> col:26 _S_test
| | | |-TemplateTypeParmDecl 0xbda848 <line:2335:14, col:23> col:23 referenced typename depth 0 index 0 _Fn
| | | |-TemplateTypeParmDecl 0xbda8c8 <col:28, col:40> col:40 referenced typename depth 0 index 1 ... _Args
| | | `-CXXMethodDecl 0xbdae70 <line:2336:7, line:2338:37> col:26 _S_test '__result_of_success<decltype(std::declval<_Fn>()(std::declval<_Args>()...)), std::__invoke_other> (int)' static
| | |   `-ParmVarDecl 0xbdad18 <col:34> col:37 'int'
| | `-FunctionTemplateDecl 0xbdb0c8 <line:2340:5, line:2341:40> col:29 _S_test
| |   |-TemplateTypeParmDecl 0xbdaf70 <line:2340:14> col:25 typename depth 0 index 0 ...
| |   `-CXXMethodDecl 0xbdb028 <line:2341:7, col:40> col:29 _S_test 'std::__failure_type (...)' static
| |-ClassTemplatePartialSpecializationDecl 0xbdbc28 <line:2344:3, line:2349:5> line:2345:12 struct __result_of_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-private 'std::__result_of_other_impl'
| | |-TemplateArgument integral 0
| | |-TemplateArgument integral 0
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument pack
| | | `-TemplateArgument type 'type-parameter-0-1...'
| | |-TemplateTypeParmDecl 0xbdb138 <line:2344:12, col:21> col:21 referenced typename depth 0 index 0 _Functor
| | |-TemplateTypeParmDecl 0xbdb1b8 <col:31, col:43> col:43 referenced typename depth 0 index 1 ... _ArgTypes
| | |-CXXRecordDecl 0xbdc008 <line:2345:5, col:12> col:12 implicit struct __result_of_impl
| | `-TypedefDecl 0xbdc268 <line:2348:7, col:60> col:60 type 'decltype(_S_test<_Functor, _ArgTypes...>(0))'
| |   `-DecltypeType 0xbdc230 'decltype(_S_test<_Functor, _ArgTypes...>(0))' dependent
| |     `-CallExpr 0xbdc1c0 <col:24, col:57> '<dependent type>'
| |       |-UnresolvedLookupExpr 0xbdc0e0 <col:24, col:54> '<dependent type>' lvalue (no ADL) = '_S_test' 0xbdaf10 0xbdb0c8
| |       `-IntegerLiteral 0xbdc1a0 <col:56> 'int' 0
| |-ClassTemplateDecl 0xbdc490 <line:2352:3, line:2363:7> line:2353:12 __invoke_result
| | |-TemplateTypeParmDecl 0xbdc2d8 <line:2352:12, col:21> col:21 referenced typename depth 0 index 0 _Functor
| | |-TemplateTypeParmDecl 0xbdc358 <col:31, col:43> col:43 referenced typename depth 0 index 1 ... _ArgTypes
| | `-CXXRecordDecl 0xbdc400 <line:2353:5, line:2363:7> line:2353:12 struct __invoke_result definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__result_of_impl<is_member_object_pointer<typename remove_reference<_Functor>::type>::value, is_member_function_pointer<typename remove_reference<_Functor>::type>::value, _Functor, _ArgTypes...>::type'
| |   `-CXXRecordDecl 0xbdcf80 <col:5, col:12> col:12 implicit struct __invoke_result
| |-ClassTemplatePartialSpecializationDecl 0xbdd310 <line:2365:3, line:2368:7> line:2366:12 struct result_of definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public '__invoke_result<_Functor, _ArgTypes...>'
| | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1...)'
| | |-TemplateTypeParmDecl 0xbdd028 <line:2365:12, col:21> col:21 referenced typename depth 0 index 0 _Functor
| | |-TemplateTypeParmDecl 0xbdd0a8 <col:31, col:43> col:43 referenced typename depth 0 index 1 ... _ArgTypes
| | `-CXXRecordDecl 0xbdd680 <line:2366:5, col:12> col:12 implicit struct result_of
| |-TypeAliasTemplateDecl 0xbddba0 <line:2372:3, line:2374:71> col:5 aligned_storage_t
| | |-NonTypeTemplateParmDecl 0xbdd738 <line:2372:12, col:19> col:19 referenced 'std::size_t':'unsigned long' depth 0 index 0 _Len
| | |-NonTypeTemplateParmDecl 0xbdd8f0 <col:25, line:2373:62> line:2372:32 referenced 'std::size_t':'unsigned long' depth 0 index 1 _Align
| | | `-TemplateArgument expr
| | |   `-UnaryExprOrTypeTraitExpr 0xbdd8c0 <line:2373:6, col:62> 'unsigned long' __alignof 'typename __aligned_storage_msa<_Len>::__type'
| | `-TypeAliasDecl 0xbddb40 <line:2374:5, col:71> col:11 aligned_storage_t 'typename aligned_storage<_Len, _Align>::type'
| |   `-DependentNameType 0xbddad0 'typename aligned_storage<_Len, _Align>::type' dependent
| |-TypeAliasTemplateDecl 0xbddf90 <line:2376:3, line:2377:70> col:5 aligned_union_t
| | |-NonTypeTemplateParmDecl 0xbddc08 <line:2376:13, col:20> col:20 referenced 'std::size_t':'unsigned long' depth 0 index 0 _Len
| | |-TemplateTypeParmDecl 0xbddc68 <col:26, col:38> col:38 referenced typename depth 0 index 1 ... _Types
| | `-TypeAliasDecl 0xbddf30 <line:2377:5, col:70> col:11 aligned_union_t 'typename aligned_union<_Len, _Types...>::type'
| |   `-DependentNameType 0xbddec0 'typename aligned_union<_Len, _Types...>::type' dependent
| |-TypeAliasTemplateDecl 0xbde200 <line:2380:3, line:2381:42> col:5 decay_t
| | |-TemplateTypeParmDecl 0xbddfe8 <line:2380:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0xbde1a0 <line:2381:5, col:42> col:11 decay_t 'typename decay<_Tp>::type'
| |   `-DependentNameType 0xbde130 'typename decay<_Tp>::type' dependent
| |-TypeAliasTemplateDecl 0xbde590 <line:2384:3, line:2385:57> col:5 enable_if_t
| | |-NonTypeTemplateParmDecl 0xbde268 <line:2384:12, col:17> col:17 referenced 'bool' depth 0 index 0 _Cond
| | |-TemplateTypeParmDecl 0xbde2d8 <col:24, col:39> col:33 referenced typename depth 0 index 1 _Tp
| | | `-TemplateArgument type 'void'
| | `-TypeAliasDecl 0xbde530 <line:2385:5, col:57> col:11 enable_if_t 'typename enable_if<_Cond, _Tp>::type'
| |   `-DependentNameType 0xbde4c0 'typename enable_if<_Cond, _Tp>::type' dependent
| |-TypeAliasTemplateDecl 0xbde9e0 <line:2388:3, line:2389:75> col:5 conditional_t
| | |-NonTypeTemplateParmDecl 0xbde5f8 <line:2388:12, col:17> col:17 referenced 'bool' depth 0 index 0 _Cond
| | |-TemplateTypeParmDecl 0xbde658 <col:24, col:33> col:33 referenced typename depth 0 index 1 _Iftrue
| | |-TemplateTypeParmDecl 0xbde6d8 <col:42, col:51> col:51 referenced typename depth 0 index 2 _Iffalse
| | `-TypeAliasDecl 0xbde980 <line:2389:5, col:75> col:11 conditional_t 'typename conditional<_Cond, _Iftrue, _Iffalse>::type'
| |   `-DependentNameType 0xbde910 'typename conditional<_Cond, _Iftrue, _Iffalse>::type' dependent
| |-TypeAliasTemplateDecl 0xbded10 <line:2392:3, line:2393:57> col:5 common_type_t
| | |-TemplateTypeParmDecl 0xbdea38 <line:2392:12, col:24> col:24 referenced typename depth 0 index 0 ... _Tp
| | `-TypeAliasDecl 0xbdecb0 <line:2393:5, col:57> col:11 common_type_t 'typename common_type<_Tp...>::type'
| |   `-DependentNameType 0xbdec40 'typename common_type<_Tp...>::type' dependent
| |-TypeAliasTemplateDecl 0xbdefd0 <line:2396:3, line:2397:62> col:5 underlying_type_t
| | |-TemplateTypeParmDecl 0xbded68 <line:2396:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0xbdef70 <line:2397:5, col:62> col:11 underlying_type_t 'typename underlying_type<_Tp>::type'
| |   `-DependentNameType 0xbdef00 'typename underlying_type<_Tp>::type' dependent
| |-TypeAliasTemplateDecl 0xbdf290 <line:2400:3, line:2401:50> col:5 result_of_t
| | |-TemplateTypeParmDecl 0xbdf028 <line:2400:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0xbdf230 <line:2401:5, col:50> col:11 result_of_t 'typename result_of<_Tp>::type'
| |   `-DependentNameType 0xbdf1c0 'typename result_of<_Tp>::type' dependent
| |-TypeAliasTemplateDecl 0xbdf5d0 <line:2405:3, line:2406:59> col:5 __enable_if_t
| | |-NonTypeTemplateParmDecl 0xbdf2f8 <line:2405:12, col:17> col:17 referenced 'bool' depth 0 index 0 _Cond
| | |-TemplateTypeParmDecl 0xbdf368 <col:24, col:39> col:33 referenced typename depth 0 index 1 _Tp
| | | `-TemplateArgument type 'void'
| | `-TypeAliasDecl 0xbdf570 <line:2406:5, col:59> col:11 __enable_if_t 'typename enable_if<_Cond, _Tp>::type'
| |   `-DependentNameType 0xbdf500 'typename enable_if<_Cond, _Tp>::type' dependent
| |-TypeAliasTemplateDecl 0xbdf738 <line:2409:3, col:42> col:25 __void_t
| | |-TemplateTypeParmDecl 0xbdf628 <col:12> col:23 typename depth 0 index 0 ...
| | `-TypeAliasDecl 0xbdf6d8 <col:25, col:42> col:31 __void_t 'void'
| |   `-BuiltinType 0x7db2e0 'void'
| |-TypeAliasTemplateDecl 0xbdf898 <line:2414:3, col:40> col:25 void_t
| | |-TemplateTypeParmDecl 0xbdf790 <col:12> col:23 typename depth 0 index 0 ...
| | `-TypeAliasDecl 0xbdf838 <col:25, col:40> col:31 void_t 'void'
| |   `-BuiltinType 0x7db2e0 'void'
| |-ClassTemplateDecl 0xbe11b0 <line:2418:3, line:2424:5> line:2420:12 __detector
| | |-TemplateTypeParmDecl 0xbdf8f0 <line:2418:12, col:21> col:21 referenced typename depth 0 index 0 _Default
| | |-TemplateTypeParmDecl 0xbdf968 <col:31, col:40> col:40 typename depth 0 index 1 _AlwaysVoid
| | |-TemplateTemplateParmDecl 0xbe1018 <line:2419:5, col:33> col:33 depth 0 index 2 _Op
| | | `-TemplateTypeParmDecl 0xbdf9e8 <col:14> col:25 typename depth 1 index 0 ...
| | |-TemplateTypeParmDecl 0xbe1070 <col:38, col:50> col:50 typename depth 0 index 3 ... _Args
| | `-CXXRecordDecl 0xbe1120 <line:2420:5, line:2424:5> line:2420:12 struct __detector definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-CXXRecordDecl 0xbe1600 <col:5, col:12> col:12 implicit struct __detector
| |   |-TypeAliasDecl 0xbe16a0 <line:2422:7, col:23> col:13 value_t 'std::false_type':'std::integral_constant<bool, false>'
| |   | `-TypedefType 0xacf410 'std::false_type' sugar
| |   |   |-Typedef 0xace658 'false_type'
| |   |   `-TemplateSpecializationType 0xace570 'integral_constant<bool, false>' sugar integral_constant
| |   |     |-TemplateArgument type 'bool'
| |   |     |-TemplateArgument expr
| |   |     | `-ConstantExpr 0xace430 <line:78:35> 'bool' Int: 0
| |   |     |   `-CXXBoolLiteralExpr 0xace400 <col:35> 'bool' false
| |   |     `-RecordType 0xace550 'std::integral_constant<bool, false>'
| |   |       `-ClassTemplateSpecialization 0xace450 'integral_constant'
| |   `-TypeAliasDecl 0xbe1710 <line:2423:7, col:20> col:13 type '_Default'
| |     `-TemplateTypeParmType 0xbdf940 '_Default' dependent depth 0 index 0
| |       `-TemplateTypeParm 0xbdf8f0 '_Default'
| |-ClassTemplatePartialSpecializationDecl 0xbe1fc8 <line:2427:3, line:2433:5> line:2429:12 struct __detector definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument type 'void'
| | |-TemplateArgument template _Op
| | |-TemplateArgument pack
| | | `-TemplateArgument type 'type-parameter-0-2...'
| | |-TemplateTypeParmDecl 0xbe1788 <line:2427:12, col:21> col:21 referenced typename depth 0 index 0 _Default
| | |-TemplateTemplateParmDecl 0xbe18a8 <col:31, col:59> col:59 depth 0 index 1 _Op
| | | `-TemplateTypeParmDecl 0xbe1808 <col:40> col:51 typename depth 1 index 0 ...
| | |-TemplateTypeParmDecl 0xbe1900 <line:2428:6, col:18> col:18 referenced typename depth 0 index 2 ... _Args
| | |-CXXRecordDecl 0xbe23a8 <line:2429:5, col:12> col:12 implicit struct __detector
| | |-TypeAliasDecl 0xbe2448 <line:2431:7, col:23> col:13 value_t 'std::true_type':'std::integral_constant<bool, true>'
| | | `-TypedefType 0xa0d460 'std::true_type' sugar
| | |   |-Typedef 0xace398 'true_type'
| | |   `-TemplateSpecializationType 0xace2b0 'integral_constant<bool, true>' sugar integral_constant
| | |     |-TemplateArgument type 'bool'
| | |     |-TemplateArgument expr
| | |     | `-ConstantExpr 0xace178 <line:75:35> 'bool' Int: 1
| | |     |   `-CXXBoolLiteralExpr 0xace118 <col:35> 'bool' true
| | |     `-RecordType 0xace290 'std::integral_constant<bool, true>'
| | |       `-ClassTemplateSpecialization 0xace198 'integral_constant'
| | `-TypeAliasDecl 0xbe25a0 <line:2432:7, col:32> col:13 type '_Op<_Args...>'
| |   `-TemplateSpecializationType 0xbe2500 '_Op<_Args...>' dependent _Op
| |     `-TemplateArgument type '_Args...'
| |-TypeAliasTemplateDecl 0xbe2b58 <line:2436:3, line:2438:67> col:5 __detected_or
| | |-TemplateTypeParmDecl 0xbe2618 <line:2436:12, col:21> col:21 referenced typename depth 0 index 0 _Default
| | |-TemplateTemplateParmDecl 0xbe2738 <col:31, col:59> col:59 depth 0 index 1 _Op
| | | `-TemplateTypeParmDecl 0xbe2698 <col:40> col:51 typename depth 1 index 0 ...
| | |-TemplateTypeParmDecl 0xbe2790 <line:2437:5, col:17> col:17 referenced typename depth 0 index 2 ... _Args
| | `-TypeAliasDecl 0xbe2af8 <line:2438:5, col:67> col:11 __detected_or '__detector<_Default, void, _Op, _Args...>'
| |   `-TemplateSpecializationType 0xbe2980 '__detector<_Default, void, _Op, _Args...>' dependent __detector
| |     |-TemplateArgument type '_Default'
| |     |-TemplateArgument type 'void'
| |     |-TemplateArgument template _Op
| |     `-TemplateArgument type '_Args...'
| |-TypeAliasTemplateDecl 0xbe3460 <line:2441:3, line:2444:58> line:2443:5 __detected_or_t
| | |-TemplateTypeParmDecl 0xbe2bb0 <line:2441:12, col:21> col:21 referenced typename depth 0 index 0 _Default
| | |-TemplateTemplateParmDecl 0xbe2cc8 <col:31, col:59> col:59 depth 0 index 1 _Op
| | | `-TemplateTypeParmDecl 0xbe2c28 <col:40> col:51 typename depth 1 index 0 ...
| | |-TemplateTypeParmDecl 0xbe2d20 <line:2442:5, col:17> col:17 referenced typename depth 0 index 2 ... _Args
| | `-TypeAliasDecl 0xbe3400 <line:2443:5, line:2444:58> line:2443:11 __detected_or_t 'typename __detected_or<_Default, _Op, _Args...>::type'
| |   `-DependentNameType 0xbe3390 'typename __detected_or<_Default, _Op, _Args...>::type' dependent
| |-ClassTemplateDecl 0xbe35e8 <line:2462:3, line:2463:12> col:12 __is_swappable
| | |-TemplateTypeParmDecl 0xbe34b8 <line:2462:13, col:22> col:22 typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xbe3558 <line:2463:5, col:12> col:12 struct __is_swappable
| |-ClassTemplateDecl 0xbe3908 <line:2465:3, line:2466:12> col:12 __is_nothrow_swappable
| | |-TemplateTypeParmDecl 0xbe37d8 <line:2465:13, col:22> col:22 typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xbe3878 <line:2466:5, col:12> col:12 struct __is_nothrow_swappable
| |-ClassTemplateDecl 0xbe3c28 <line:2468:3, line:2469:11> col:11 tuple
| | |-TemplateTypeParmDecl 0xbe3af8 <line:2468:12, col:24> col:24 typename depth 0 index 0 ... _Elements
| | `-CXXRecordDecl 0xbe3b98 <line:2469:5, col:11> col:11 class tuple
| |-ClassTemplateDecl 0xbe3fa8 <line:2471:3, line:2473:7> line:2472:12 __is_tuple_like_impl
| | |-TemplateTypeParmDecl 0xbe3e78 <line:2471:12> col:20 typename depth 0 index 0
| | `-CXXRecordDecl 0xbe3f18 <line:2472:5, line:2473:7> line:2472:12 struct __is_tuple_like_impl definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'std::false_type':'std::integral_constant<bool, false>'
| |   `-CXXRecordDecl 0xbe4240 <col:5, col:12> col:12 implicit struct __is_tuple_like_impl
| |-ClassTemplatePartialSpecializationDecl 0xbe4570 <line:2475:3, line:2477:7> line:2476:12 struct __is_tuple_like_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'tuple<type-parameter-0-0...>'
| | |-TemplateTypeParmDecl 0xbe42e8 <line:2475:12, col:24> col:24 referenced typename depth 0 index 0 ... _Tps
| | `-CXXRecordDecl 0xbe47f8 <line:2476:5, col:12> col:12 implicit struct __is_tuple_like_impl
| |-ClassTemplateDecl 0xbe49c8 <line:2480:3, line:2483:7> line:2481:12 __is_tuple_like
| | |-TemplateTypeParmDecl 0xbe48a0 <line:2480:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xbe4938 <line:2481:5, line:2483:7> line:2481:12 struct __is_tuple_like definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__is_tuple_like_impl<__remove_cvref_t<_Tp> >::type'
| |   `-CXXRecordDecl 0xbe93b0 <col:5, col:12> col:12 implicit struct __is_tuple_like
| |-FunctionTemplateDecl 0xbea198 <line:2485:3, line:2492:53> line:2490:5 swap
| | |-TemplateTypeParmDecl 0xbe9458 <line:2485:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-FunctionDecl 0xbea0f8 <line:2486:5, line:2492:53> line:2490:5 swap 'typename enable_if<__and_<__not_<__is_tuple_like<_Tp> >, is_move_constructible<_Tp>, is_move_assignable<_Tp> >::value>::type (_Tp &, _Tp &) noexcept(__and_<is_nothrow_move_constructible<_Tp>, is_nothrow_move_assignable<_Tp> >::value)' inline
| |   |-ParmVarDecl 0xbe9c18 <col:10, col:13> col:14 '_Tp &'
| |   `-ParmVarDecl 0xbe9c90 <col:16, col:19> col:20 '_Tp &'
| |-FunctionTemplateDecl 0xbeab28 <line:2494:3, line:2498:48> line:2497:5 swap
| | |-TemplateTypeParmDecl 0xbea200 <line:2494:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0xbea288 <col:26, col:33> col:33 referenced 'std::size_t':'unsigned long' depth 0 index 1 _Nm
| | `-FunctionDecl 0xbeaa88 <line:2495:5, line:2498:48> line:2497:5 swap 'typename enable_if<__is_swappable<_Tp>::value>::type (_Tp (&)[_Nm], _Tp (&)[_Nm]) noexcept(__is_nothrow_swappable<_Tp>::value)' inline
| |   |-ParmVarDecl 0xbea6f8 <col:10, col:24> col:16 __a '_Tp (&)[_Nm]'
| |   `-ParmVarDecl 0xbea848 <col:27, col:41> col:33 __b '_Tp (&)[_Nm]'
| |-NamespaceDecl 0xbeab90 <line:2500:3, line:2524:3> line:2500:13 __swappable_details
| | |-UsingDecl 0xbeac08 <line:2501:5, col:16> col:16 std::swap
| | |-UsingShadowDecl 0xbeac60 <col:16> col:16 implicit FunctionTemplate 0xbea198 'swap'
| | |-UsingShadowDecl 0xbeacb0 <col:16> col:16 implicit FunctionTemplate 0xbeab28 'swap'
| | |-CXXRecordDecl 0xbead00 <line:2503:5, line:2511:5> line:2503:12 referenced struct __do_is_swappable_impl definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-CXXRecordDecl 0xbeae18 <col:5, col:12> col:12 implicit struct __do_is_swappable_impl
| | | |-FunctionTemplateDecl 0xbeb420 <line:2505:7, line:2507:36> col:26 __test
| | | | |-TemplateTypeParmDecl 0xbeaea8 <line:2505:16, col:25> col:25 referenced typename depth 0 index 0 _Tp
| | | | |-TemplateTypeParmDecl 0xbeb208 <col:30, line:2506:18> col:16 typename depth 0 index 1
| | | | | `-TemplateArgument type 'decltype(swap(std::declval<_Tp &>(), std::declval<_Tp &>()))'
| | | | `-CXXMethodDecl 0xbeb380 <line:2507:9, col:36> col:26 __test 'std::true_type (int)' static
| | | |   `-ParmVarDecl 0xbeb2c8 <col:33> col:36 'int'
| | | `-FunctionTemplateDecl 0xbeb5d8 <line:2509:7, line:2510:37> col:27 __test
| | |   |-TemplateTypeParmDecl 0xbeb480 <line:2509:16> col:24 typename depth 0 index 0
| | |   `-CXXMethodDecl 0xbeb538 <line:2510:9, col:37> col:27 __test 'std::false_type (...)' static
| | `-CXXRecordDecl 0xbeb648 <line:2513:5, line:2522:5> line:2513:12 referenced struct __do_is_nothrow_swappable_impl definition
| |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-CXXRecordDecl 0xbeb768 <col:5, col:12> col:12 implicit struct __do_is_nothrow_swappable_impl
| |   |-FunctionTemplateDecl 0xbebf28 <line:2515:7, line:2518:21> col:11 __test
| |   | |-TemplateTypeParmDecl 0xbeb7f8 <line:2515:16, col:25> col:25 referenced typename depth 0 index 0 _Tp
| |   | `-CXXMethodDecl 0xbebe88 <line:2516:9, line:2518:21> col:11 __test '__bool_constant<noexcept(swap(std::declval<_Tp &>(), std::declval<_Tp &>()))> (int)' static
| |   |   `-ParmVarDecl 0xbebd40 <col:18> col:21 'int'
| |   `-FunctionTemplateDecl 0xbec0e8 <line:2520:7, line:2521:37> col:27 __test
| |     |-TemplateTypeParmDecl 0xbebf88 <line:2520:16> col:24 typename depth 0 index 0
| |     `-CXXMethodDecl 0xbec048 <line:2521:9, col:37> col:27 __test 'std::false_type (...)' static
| |-ClassTemplateDecl 0xbec288 <line:2526:3, line:2531:5> line:2527:12 __is_swappable_impl
| | |-TemplateTypeParmDecl 0xbec158 <line:2526:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xbec1f8 <line:2527:5, line:2531:5> line:2527:12 struct __is_swappable_impl definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__swappable_details::__do_is_swappable_impl':'std::__swappable_details::__do_is_swappable_impl'
| |   |-CXXRecordDecl 0xbec5a8 <col:5, col:12> col:12 implicit struct __is_swappable_impl
| |   `-TypedefDecl 0xbec778 <line:2530:7, col:40> col:40 type 'decltype(__test<_Tp>(0))'
| |     `-DecltypeType 0xbec740 'decltype(__test<_Tp>(0))' dependent
| |       `-CallExpr 0xbec710 <col:24, col:37> '<dependent type>'
| |         |-UnresolvedLookupExpr 0xbec660 <col:24, col:34> '<dependent type>' lvalue (no ADL) = '__test' 0xbeb420 0xbeb5d8
| |         `-IntegerLiteral 0xbec6f0 <col:36> 'int' 0
| |-ClassTemplateDecl 0xbec918 <line:2533:3, line:2538:5> line:2534:12 __is_nothrow_swappable_impl
| | |-TemplateTypeParmDecl 0xbec7e8 <line:2533:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xbec888 <line:2534:5, line:2538:5> line:2534:12 struct __is_nothrow_swappable_impl definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__swappable_details::__do_is_nothrow_swappable_impl':'std::__swappable_details::__do_is_nothrow_swappable_impl'
| |   |-CXXRecordDecl 0xbecc18 <col:5, col:12> col:12 implicit struct __is_nothrow_swappable_impl
| |   `-TypedefDecl 0xbecde8 <line:2537:7, col:40> col:40 type 'decltype(__test<_Tp>(0))'
| |     `-DecltypeType 0xbecdb0 'decltype(__test<_Tp>(0))' dependent
| |       `-CallExpr 0xbecd80 <col:24, col:37> '<dependent type>'
| |         |-UnresolvedLookupExpr 0xbeccd0 <col:24, col:34> '<dependent type>' lvalue (no ADL) = '__test' 0xbebf28 0xbec0e8
| |         `-IntegerLiteral 0xbecd60 <col:36> 'int' 0
| |-ClassTemplateDecl 0xbecf88 prev 0xbe35e8 <line:2540:3, line:2543:7> line:2541:12 __is_swappable
| | |-TemplateTypeParmDecl 0xbece58 <line:2540:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xbecef8 prev 0xbe3558 <line:2541:5, line:2543:7> line:2541:12 struct __is_swappable definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__is_swappable_impl<_Tp>::type'
| |   `-CXXRecordDecl 0xbf29c0 <col:5, col:12> col:12 implicit struct __is_swappable
| |-ClassTemplateDecl 0xbf2b98 prev 0xbe3908 <line:2545:3, line:2548:7> line:2546:12 __is_nothrow_swappable
| | |-TemplateTypeParmDecl 0xbf2a68 <line:2545:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xbf2b08 prev 0xbe3878 <line:2546:5, line:2548:7> line:2546:12 struct __is_nothrow_swappable definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__is_nothrow_swappable_impl<_Tp>::type'
| |   `-CXXRecordDecl 0xbf2df0 <col:5, col:12> col:12 implicit struct __is_nothrow_swappable
| |-ClassTemplateDecl 0xbf2fc8 <line:2555:3, line:2558:7> line:2556:12 is_swappable
| | |-TemplateTypeParmDecl 0xbf2e98 <line:2555:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xbf2f38 <line:2556:5, line:2558:7> line:2556:12 struct is_swappable definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__is_swappable_impl<_Tp>::type'
| |   `-CXXRecordDecl 0xbf3360 <col:5, col:12> col:12 implicit struct is_swappable
| |-ClassTemplateDecl 0xbf3538 <line:2561:3, line:2564:7> line:2562:12 is_nothrow_swappable
| | |-TemplateTypeParmDecl 0xbf3408 <line:2561:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xbf34a8 <line:2562:5, line:2564:7> line:2562:12 struct is_nothrow_swappable definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__is_nothrow_swappable_impl<_Tp>::type'
| |   `-CXXRecordDecl 0xbf38d0 <col:5, col:12> col:12 implicit struct is_nothrow_swappable
| |-VarTemplateDecl 0xbf3a90 <line:2568:3, line:2570:26> line:2569:38 is_swappable_v
| | |-TemplateTypeParmDecl 0xbf3978 <line:2568:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-VarDecl 0xbf3a28 <line:2569:23, line:2570:26> line:2569:38 is_swappable_v 'const bool' constexpr cinit
| |   `-DependentScopeDeclRefExpr 0xbf3bb0 <line:2570:7, col:26> '<dependent type>' lvalue
| |-VarTemplateDecl 0xbf3d00 <line:2573:3, line:2575:34> line:2574:38 is_nothrow_swappable_v
| | |-TemplateTypeParmDecl 0xbf3be8 <line:2573:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-VarDecl 0xbf3c98 <line:2574:23, line:2575:34> line:2574:38 is_nothrow_swappable_v 'const bool' constexpr cinit
| |   `-DependentScopeDeclRefExpr 0xbf3e20 <line:2575:7, col:34> '<dependent type>' lvalue
| |-NamespaceDecl 0xbf3e58 <line:2578:3, line:2606:3> line:2578:13 __swappable_with_details
| | |-UsingDecl 0xbf3ed0 <line:2579:5, col:16> col:16 std::swap
| | |-UsingShadowDecl 0xbf3f28 <col:16> col:16 implicit FunctionTemplate 0xbea198 'swap'
| | |-UsingShadowDecl 0xbf3f78 <col:16> col:16 implicit FunctionTemplate 0xbeab28 'swap'
| | |-CXXRecordDecl 0xbf3fc8 <line:2581:5, line:2591:5> line:2581:12 referenced struct __do_is_swappable_with_impl definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-CXXRecordDecl 0xbf40e8 <col:5, col:12> col:12 implicit struct __do_is_swappable_with_impl
| | | |-FunctionTemplateDecl 0xbf4a80 <line:2583:7, line:2587:36> col:26 __test
| | | | |-TemplateTypeParmDecl 0xbf4178 <line:2583:16, col:25> col:25 referenced typename depth 0 index 0 _Tp
| | | | |-TemplateTypeParmDecl 0xbf41f8 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Up
| | | | |-TemplateTypeParmDecl 0xbf4528 <col:44, line:2584:18> col:16 typename depth 0 index 2
| | | | | `-TemplateArgument type 'decltype(swap(std::declval<_Tp>(), std::declval<_Up>()))'
| | | | |-TemplateTypeParmDecl 0xbf4858 <line:2585:16, line:2586:18> col:16 typename depth 0 index 3
| | | | | `-TemplateArgument type 'decltype(swap(std::declval<_Up>(), std::declval<_Tp>()))'
| | | | `-CXXMethodDecl 0xbf49e0 <line:2587:9, col:36> col:26 __test 'std::true_type (int)' static
| | | |   `-ParmVarDecl 0xbf4928 <col:33> col:36 'int'
| | | `-FunctionTemplateDecl 0xbf4cc0 <line:2589:7, line:2590:37> col:27 __test
| | |   |-TemplateTypeParmDecl 0xbf4ae0 <line:2589:16> col:24 typename depth 0 index 0
| | |   |-TemplateTypeParmDecl 0xbf4b58 <col:26> col:34 typename depth 0 index 1
| | |   `-CXXMethodDecl 0xbf4c20 <line:2590:9, col:37> col:27 __test 'std::false_type (...)' static
| | `-CXXRecordDecl 0xbf4d30 <line:2593:5, line:2604:5> line:2593:12 referenced struct __do_is_nothrow_swappable_with_impl definition
| |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-CXXRecordDecl 0xbf4e48 <col:5, col:12> col:12 implicit struct __do_is_nothrow_swappable_with_impl
| |   |-FunctionTemplateDecl 0xbf58d8 <line:2595:7, line:2600:21> col:11 __test
| |   | |-TemplateTypeParmDecl 0xbf4ed8 <line:2595:16, col:25> col:25 referenced typename depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0xbf4f58 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Up
| |   | `-CXXMethodDecl 0xbf5838 <line:2596:9, line:2600:21> col:11 __test '__bool_constant<noexcept(swap(std::declval<_Tp>(), std::declval<_Up>())) && noexcept(swap(std::declval<_Up>(), std::declval<_Tp>()))> (int)' static
| |   |   `-ParmVarDecl 0xbf56f0 <col:18> col:21 'int'
| |   `-FunctionTemplateDecl 0xbf5b20 <line:2602:7, line:2603:37> col:27 __test
| |     |-TemplateTypeParmDecl 0xbf5938 <line:2602:16> col:24 typename depth 0 index 0
| |     |-TemplateTypeParmDecl 0xbf59b8 <col:26> col:34 typename depth 0 index 1
| |     `-CXXMethodDecl 0xbf5a80 <line:2603:9, col:37> col:27 __test 'std::false_type (...)' static
| |-ClassTemplateDecl 0xbf5d40 <line:2608:3, line:2613:5> line:2609:12 __is_swappable_with_impl
| | |-TemplateTypeParmDecl 0xbf5b90 <line:2608:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0xbf5c08 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| | `-CXXRecordDecl 0xbf5cb0 <line:2609:5, line:2613:5> line:2609:12 struct __is_swappable_with_impl definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__swappable_with_details::__do_is_swappable_with_impl':'std::__swappable_with_details::__do_is_swappable_with_impl'
| |   |-CXXRecordDecl 0xbf6098 <col:5, col:12> col:12 implicit struct __is_swappable_with_impl
| |   `-TypedefDecl 0xbf62a8 <line:2612:7, col:45> col:45 type 'decltype(__test<_Tp, _Up>(0))'
| |     `-DecltypeType 0xbf6270 'decltype(__test<_Tp, _Up>(0))' dependent
| |       `-CallExpr 0xbf6240 <col:24, col:42> '<dependent type>'
| |         |-UnresolvedLookupExpr 0xbf6160 <col:24, col:39> '<dependent type>' lvalue (no ADL) = '__test' 0xbf4a80 0xbf4cc0
| |         `-IntegerLiteral 0xbf6220 <col:41> 'int' 0
| |-ClassTemplatePartialSpecializationDecl 0xbf6538 <line:2616:3, line:2621:5> line:2617:12 struct __is_swappable_with_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public '__swappable_details::__do_is_swappable_impl':'std::__swappable_details::__do_is_swappable_impl'
| | |-TemplateArgument type 'type-parameter-0-0 &'
| | |-TemplateArgument type 'type-parameter-0-0 &'
| | |-TemplateTypeParmDecl 0xbf6318 <line:2616:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0xbf6830 <line:2617:5, col:12> col:12 implicit struct __is_swappable_with_impl
| | `-TypedefDecl 0xbf6a48 <line:2620:7, col:41> col:41 type 'decltype(__test<_Tp &>(0))'
| |   `-DecltypeType 0xbf6a10 'decltype(__test<_Tp &>(0))' dependent
| |     `-CallExpr 0xbf6998 <col:24, col:38> '<dependent type>'
| |       |-UnresolvedLookupExpr 0xbf68e8 <col:24, col:35> '<dependent type>' lvalue (no ADL) = '__test' 0xbeb420 0xbeb5d8
| |       `-IntegerLiteral 0xbf6978 <col:37> 'int' 0
| |-ClassTemplateDecl 0xbf6c70 <line:2623:3, line:2628:5> line:2624:12 __is_nothrow_swappable_with_impl
| | |-TemplateTypeParmDecl 0xbf6ab8 <line:2623:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0xbf6b38 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| | `-CXXRecordDecl 0xbf6be0 <line:2624:5, line:2628:5> line:2624:12 struct __is_nothrow_swappable_with_impl definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__swappable_with_details::__do_is_nothrow_swappable_with_impl':'std::__swappable_with_details::__do_is_nothrow_swappable_with_impl'
| |   |-CXXRecordDecl 0xbf6fa8 <col:5, col:12> col:12 implicit struct __is_nothrow_swappable_with_impl
| |   `-TypedefDecl 0xbf71b8 <line:2627:7, col:45> col:45 type 'decltype(__test<_Tp, _Up>(0))'
| |     `-DecltypeType 0xbf7180 'decltype(__test<_Tp, _Up>(0))' dependent
| |       `-CallExpr 0xbf7150 <col:24, col:42> '<dependent type>'
| |         |-UnresolvedLookupExpr 0xbf7070 <col:24, col:39> '<dependent type>' lvalue (no ADL) = '__test' 0xbf58d8 0xbf5b20
| |         `-IntegerLiteral 0xbf7130 <col:41> 'int' 0
| |-ClassTemplatePartialSpecializationDecl 0xbf7448 <line:2631:3, line:2636:5> line:2632:12 struct __is_nothrow_swappable_with_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public '__swappable_details::__do_is_nothrow_swappable_impl':'std::__swappable_details::__do_is_nothrow_swappable_impl'
| | |-TemplateArgument type 'type-parameter-0-0 &'
| | |-TemplateArgument type 'type-parameter-0-0 &'
| | |-TemplateTypeParmDecl 0xbf7228 <line:2631:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0xbf7740 <line:2632:5, col:12> col:12 implicit struct __is_nothrow_swappable_with_impl
| | `-TypedefDecl 0xbf7908 <line:2635:7, col:41> col:41 type 'decltype(__test<_Tp &>(0))'
| |   `-DecltypeType 0xbf78d0 'decltype(__test<_Tp &>(0))' dependent
| |     `-CallExpr 0xbf78a8 <col:24, col:38> '<dependent type>'
| |       |-UnresolvedLookupExpr 0xbf77f8 <col:24, col:35> '<dependent type>' lvalue (no ADL) = '__test' 0xbebf28 0xbec0e8
| |       `-IntegerLiteral 0xbf7888 <col:37> 'int' 0
| |-ClassTemplateDecl 0xbf7b30 <line:2639:3, line:2642:7> line:2640:12 is_swappable_with
| | |-TemplateTypeParmDecl 0xbf7978 <line:2639:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0xbf79f8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| | `-CXXRecordDecl 0xbf7aa0 <line:2640:5, line:2642:7> line:2640:12 struct is_swappable_with definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__is_swappable_with_impl<_Tp, _Up>::type'
| |   `-CXXRecordDecl 0xbf7f90 <col:5, col:12> col:12 implicit struct is_swappable_with
| |-ClassTemplateDecl 0xbf81f0 <line:2645:3, line:2648:7> line:2646:12 is_nothrow_swappable_with
| | |-TemplateTypeParmDecl 0xbf8038 <line:2645:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0xbf80b8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| | `-CXXRecordDecl 0xbf8160 <line:2646:5, line:2648:7> line:2646:12 struct is_nothrow_swappable_with definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__is_nothrow_swappable_with_impl<_Tp, _Up>::type'
| |   `-CXXRecordDecl 0xbf8650 <col:5, col:12> col:12 implicit struct is_nothrow_swappable_with
| |-VarTemplateDecl 0xbf8898 <line:2652:3, line:2654:36> line:2653:38 is_swappable_with_v
| | |-TemplateTypeParmDecl 0xbf86f8 <line:2652:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0xbf8778 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| | `-VarDecl 0xbf8830 <line:2653:23, line:2654:36> line:2653:38 is_swappable_with_v 'const bool' constexpr cinit
| |   `-DependentScopeDeclRefExpr 0xbf89f0 <line:2654:7, col:36> '<dependent type>' lvalue
| |-VarTemplateDecl 0xbf8bc8 <line:2657:3, line:2659:44> line:2658:38 is_nothrow_swappable_with_v
| | |-TemplateTypeParmDecl 0xbf8a28 <line:2657:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0xbf8aa8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| | `-VarDecl 0xbf8b60 <line:2658:23, line:2659:44> line:2658:38 is_nothrow_swappable_with_v 'const bool' constexpr cinit
| |   `-DependentScopeDeclRefExpr 0xbf8d20 <line:2659:7, col:44> '<dependent type>' lvalue
| |-ClassTemplateDecl 0xbf9130 <line:2667:3, line:2669:47> col:12 __is_invocable_impl
| | |-TemplateTypeParmDecl 0xbf8d58 <line:2667:12, col:21> col:21 typename depth 0 index 0 _Result
| | |-TemplateTypeParmDecl 0xbf8dd8 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Ret
| | |-NonTypeTemplateParmDecl 0xbf8f68 <line:2668:5, col:27> col:10 'bool' depth 0 index 2
| | | `-TemplateArgument expr
| | |   `-ImplicitCastExpr 0xbf8fc8 <col:12, col:27> 'bool' <Dependent>
| | |     `-DependentScopeDeclRefExpr 0xbf8f20 <col:12, col:27> '<dependent type>' lvalue
| | |-TemplateTypeParmDecl 0xbf8ff0 <col:34, col:45> col:43 typename depth 0 index 3
| | | `-TemplateArgument type 'void'
| | `-CXXRecordDecl 0xbf90a0 <line:2669:5, col:47> col:12 struct __is_invocable_impl definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'std::false_type':'std::integral_constant<bool, false>'
| |   `-CXXRecordDecl 0xbf9480 <col:5, col:12> col:12 implicit struct __is_invocable_impl
| |-ClassTemplatePartialSpecializationDecl 0xbf99f8 <line:2672:3, line:2677:7> line:2673:12 struct __is_invocable_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument type 'type-parameter-0-1'
| | |-TemplateArgument integral 1
| | |-TemplateArgument type 'void'
| | |-TemplateTypeParmDecl 0xbf9528 <line:2672:12, col:21> col:21 referenced typename depth 0 index 0 _Result
| | |-TemplateTypeParmDecl 0xbf95a8 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Ret
| | `-CXXRecordDecl 0xbf9d88 <line:2673:5, col:12> col:12 implicit struct __is_invocable_impl
| |-ClassTemplatePartialSpecializationDecl 0xbfa2f8 <line:2682:3, line:2706:5> line:2683:12 struct __is_invocable_impl definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument type 'type-parameter-0-1'
| | |-TemplateArgument integral 0
| | |-TemplateArgument type 'void'
| | |-TemplateTypeParmDecl 0xbf9e30 <line:2682:12, col:21> col:21 referenced typename depth 0 index 0 _Result
| | |-TemplateTypeParmDecl 0xbf9ea8 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Ret
| | |-CXXRecordDecl 0xbfa648 <line:2683:5, col:12> col:12 implicit struct __is_invocable_impl
| | |-AccessSpecDecl 0xbfa6d8 <line:2687:5, col:12> col:5 private
| | |-CXXMethodDecl 0xbfa7f8 <line:2690:7, col:44> col:37 referenced _S_get 'typename _Result::type ()' static
| | |-FunctionTemplateDecl 0xbfc4a8 <line:2692:7, line:2693:25> col:14 _S_conv
| | | |-TemplateTypeParmDecl 0xbfa898 <line:2692:16, col:25> col:25 referenced typename depth 1 index 0 _Tp
| | | `-CXXMethodDecl 0xbfc408 <line:2693:2, col:25> col:14 _S_conv 'void (_Tp)' static
| | |   `-ParmVarDecl 0xbfa948 <col:22> col:25 '_Tp'
| | |-FunctionTemplateDecl 0xbfc8f8 <line:2696:7, line:2698:13> col:2 _S_test
| | | |-TemplateTypeParmDecl 0xbfc508 <line:2696:16, col:25> col:25 referenced typename depth 1 index 0 _Tp
| | | |-TemplateTypeParmDecl 0xbfc708 <col:30, col:41> col:39 typename depth 1 index 1
| | | | `-TemplateArgument type 'decltype(_S_conv<_Tp>(_S_get()))'
| | | `-CXXMethodDecl 0xbfc858 <line:2697:2, line:2698:13> col:2 _S_test 'std::true_type (int)' static
| | |   `-ParmVarDecl 0xbfc7c8 <col:10> col:13 'int'
| | |-FunctionTemplateDecl 0xbfcab8 <line:2700:7, line:2702:13> col:2 _S_test
| | | |-TemplateTypeParmDecl 0xbfc958 <line:2700:16, col:25> col:25 typename depth 1 index 0 _Tp
| | | `-CXXMethodDecl 0xbfca18 <line:2701:2, line:2702:13> col:2 _S_test 'std::false_type (...)' static
| | |-AccessSpecDecl 0xbfcb10 <line:2704:5, col:11> col:5 public
| | `-TypeAliasDecl 0xbfccb8 <line:2705:7, col:20> col:13 type 'decltype(_S_test<_Ret>(1))'
| |   `-DecltypeType 0xbfcc80 'decltype(_S_test<_Ret>(1))' dependent
| |     `-CallExpr 0xbfcc10 <col:29, col:44> '<dependent type>'
| |       |-UnresolvedLookupExpr 0xbfcb60 <col:29, col:41> '<dependent type>' lvalue (no ADL) = '_S_test' 0xbfcab8 0xbfc8f8
| |       `-IntegerLiteral 0xbfcbf0 <col:43> 'int' 1
| |-ClassTemplateDecl 0xbfcee0 <line:2709:3, line:2712:7> line:2710:12 __is_invocable
| | |-TemplateTypeParmDecl 0xbfcd30 <line:2709:12, col:21> col:21 referenced typename depth 0 index 0 _Fn
| | |-TemplateTypeParmDecl 0xbfcda8 <col:26, col:38> col:38 referenced typename depth 0 index 1 ... _ArgTypes
| | `-CXXRecordDecl 0xbfce50 <line:2710:5, line:2712:7> line:2710:12 struct __is_invocable definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__is_invocable_impl<__invoke_result<_Fn, _ArgTypes...>, void>::type'
| |   `-CXXRecordDecl 0xbfe5e0 <col:5, col:12> col:12 implicit struct __is_invocable
| |-FunctionTemplateDecl 0xbfe9a8 <line:2714:3, line:2720:5> line:2715:20 __call_is_nt
| | |-TemplateTypeParmDecl 0xbfe688 <line:2714:12, col:21> col:21 referenced typename depth 0 index 0 _Fn
| | |-TemplateTypeParmDecl 0xbfe708 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Tp
| | |-TemplateTypeParmDecl 0xbfe788 <col:40, col:52> col:52 referenced typename depth 0 index 2 ... _Args
| | `-FunctionDecl 0xbfe908 <line:2715:5, line:2720:5> line:2715:20 constexpr __call_is_nt 'bool (std::__invoke_memfun_ref)'
| |   |-ParmVarDecl 0xbfe848 <col:33> col:52 'std::__invoke_memfun_ref'
| |   `-CompoundStmt 0xbff260 <line:2716:5, line:2720:5>
| |     |-DeclStmt 0xbfeed0 <line:2717:7, col:51>
| |     | `-TypeAliasDecl 0xbfee70 <col:7, col:47> col:13 referenced _Up 'typename __inv_unwrap<_Tp>::type'
| |     |   `-DependentNameType 0xbfee00 'typename __inv_unwrap<_Tp>::type' dependent
| |     `-ReturnStmt 0xbff250 <line:2718:7, line:2719:31>
| |       `-CXXNoexceptExpr 0xbff230 <line:2718:14, line:2719:31> 'bool'
| |         `-CallExpr 0xbff208 <line:2718:23, line:2719:30> '<dependent type>'
| |           |-ParenExpr 0xbff0f0 <line:2718:23, col:64> '<dependent type>'
| |           | `-BinaryOperator 0xbff0d0 <col:24, col:63> '<dependent type>' '.*'
| |           |   |-CallExpr 0xbfefd8 <col:24, col:42> '<dependent type>'
| |           |   | `-UnresolvedLookupExpr 0xbfef50 <col:24, col:40> '<dependent type>' lvalue (no ADL) = 'declval' 0xbc7930
| |           |   `-CallExpr 0xbff0b0 <col:45, col:63> '<dependent type>'
| |           |     `-UnresolvedLookupExpr 0xbff028 <col:45, col:61> '<dependent type>' lvalue (no ADL) = 'declval' 0xbc7930
| |           `-PackExpansionExpr 0xbff1e8 <line:2719:6, col:27> '<dependent type>'
| |             `-CallExpr 0xbff1c8 <col:6, col:26> '<dependent type>'
| |               `-UnresolvedLookupExpr 0xbff140 <col:6, col:24> '<dependent type>' lvalue (no ADL) = 'declval' 0xbc7930
| |-FunctionTemplateDecl 0xbff598 <line:2722:3, line:2727:5> line:2723:20 __call_is_nt
| | |-TemplateTypeParmDecl 0xbff280 <line:2722:12, col:21> col:21 referenced typename depth 0 index 0 _Fn
| | |-TemplateTypeParmDecl 0xbff2f8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Tp
| | |-TemplateTypeParmDecl 0xbff378 <col:40, col:52> col:52 referenced typename depth 0 index 2 ... _Args
| | `-FunctionDecl 0xbff4f8 <line:2723:5, line:2727:5> line:2723:20 constexpr __call_is_nt 'bool (std::__invoke_memfun_deref)'
| |   |-ParmVarDecl 0xbff438 <col:33> col:54 'std::__invoke_memfun_deref'
| |   `-CompoundStmt 0xbff970 <line:2724:5, line:2727:5>
| |     `-ReturnStmt 0xbff960 <line:2725:7, line:2726:31>
| |       `-CXXNoexceptExpr 0xbff940 <line:2725:14, line:2726:31> 'bool'
| |         `-CallExpr 0xbff918 <line:2725:23, line:2726:30> '<dependent type>'
| |           |-ParenExpr 0xbff800 <line:2725:23, col:67> '<dependent type>'
| |           | `-BinaryOperator 0xbff7e0 <col:24, col:66> '<dependent type>' '.*'
| |           |   |-ParenExpr 0xbff6e8 <col:24, col:45> '<dependent type>'
| |           |   | `-UnaryOperator 0xbff6d0 <col:25, col:44> '<dependent type>' prefix '*' cannot overflow
| |           |   |   `-CallExpr 0xbff6b0 <col:26, col:44> '<dependent type>'
| |           |   |     `-UnresolvedLookupExpr 0xbff628 <col:26, col:42> '<dependent type>' lvalue (no ADL) = 'declval' 0xbc7930
| |           |   `-CallExpr 0xbff7c0 <col:48, col:66> '<dependent type>'
| |           |     `-UnresolvedLookupExpr 0xbff738 <col:48, col:64> '<dependent type>' lvalue (no ADL) = 'declval' 0xbc7930
| |           `-PackExpansionExpr 0xbff8f8 <line:2726:6, col:27> '<dependent type>'
| |             `-CallExpr 0xbff8d8 <col:6, col:26> '<dependent type>'
| |               `-UnresolvedLookupExpr 0xbff850 <col:6, col:24> '<dependent type>' lvalue (no ADL) = 'declval' 0xbc7930
| |-FunctionTemplateDecl 0xbffc28 <line:2729:3, line:2734:5> line:2730:20 __call_is_nt
| | |-TemplateTypeParmDecl 0xbff988 <line:2729:12, col:21> col:21 referenced typename depth 0 index 0 _Fn
| | |-TemplateTypeParmDecl 0xbffa08 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Tp
| | `-FunctionDecl 0xbffb88 <line:2730:5, line:2734:5> line:2730:20 constexpr __call_is_nt 'bool (std::__invoke_memobj_ref)'
| |   |-ParmVarDecl 0xbffac0 <col:33> col:52 'std::__invoke_memobj_ref'
| |   `-CompoundStmt 0xc00390 <line:2731:5, line:2734:5>
| |     |-DeclStmt 0xc00150 <line:2732:7, col:51>
| |     | `-TypeAliasDecl 0xc000f0 <col:7, col:47> col:13 referenced _Up 'typename __inv_unwrap<_Tp>::type'
| |     |   `-DependentNameType 0xc00080 'typename __inv_unwrap<_Tp>::type' dependent
| |     `-ReturnStmt 0xc00380 <line:2733:7, col:63>
| |       `-CXXNoexceptExpr 0xc00360 <col:14, col:63> 'bool'
| |         `-BinaryOperator 0xc00340 <col:23, col:62> '<dependent type>' '.*'
| |           |-CallExpr 0xc00248 <col:23, col:41> '<dependent type>'
| |           | `-UnresolvedLookupExpr 0xc001c0 <col:23, col:39> '<dependent type>' lvalue (no ADL) = 'declval' 0xbc7930
| |           `-CallExpr 0xc00320 <col:44, col:62> '<dependent type>'
| |             `-UnresolvedLookupExpr 0xc00298 <col:44, col:60> '<dependent type>' lvalue (no ADL) = 'declval' 0xbc7930
| |-FunctionTemplateDecl 0xc012f8 <line:2736:3, line:2740:5> line:2737:20 __call_is_nt
| | |-TemplateTypeParmDecl 0xc01060 <line:2736:12, col:21> col:21 referenced typename depth 0 index 0 _Fn
| | |-TemplateTypeParmDecl 0xc010d8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Tp
| | `-FunctionDecl 0xc01258 <line:2737:5, line:2740:5> line:2737:20 constexpr __call_is_nt 'bool (std::__invoke_memobj_deref)'
| |   |-ParmVarDecl 0xc01190 <col:33> col:54 'std::__invoke_memobj_deref'
| |   `-CompoundStmt 0xc01590 <line:2738:5, line:2740:5>
| |     `-ReturnStmt 0xc01580 <line:2739:7, col:66>
| |       `-CXXNoexceptExpr 0xc01560 <col:14, col:66> 'bool'
| |         `-BinaryOperator 0xc01540 <col:23, col:65> '<dependent type>' '.*'
| |           |-ParenExpr 0xc01448 <col:23, col:44> '<dependent type>'
| |           | `-UnaryOperator 0xc01430 <col:24, col:43> '<dependent type>' prefix '*' cannot overflow
| |           |   `-CallExpr 0xc01410 <col:25, col:43> '<dependent type>'
| |           |     `-UnresolvedLookupExpr 0xc01388 <col:25, col:41> '<dependent type>' lvalue (no ADL) = 'declval' 0xbc7930
| |           `-CallExpr 0xc01520 <col:47, col:65> '<dependent type>'
| |             `-UnresolvedLookupExpr 0xc01498 <col:47, col:63> '<dependent type>' lvalue (no ADL) = 'declval' 0xbc7930
| |-FunctionTemplateDecl 0xc01848 <line:2742:3, line:2746:5> line:2743:20 __call_is_nt
| | |-TemplateTypeParmDecl 0xc015a8 <line:2742:12, col:21> col:21 referenced typename depth 0 index 0 _Fn
| | |-TemplateTypeParmDecl 0xc01628 <col:26, col:38> col:38 referenced typename depth 0 index 1 ... _Args
| | `-FunctionDecl 0xc017a8 <line:2743:5, line:2746:5> line:2743:20 constexpr __call_is_nt 'bool (std::__invoke_other)'
| |   |-ParmVarDecl 0xc016e0 <col:33> col:47 'std::__invoke_other'
| |   `-CompoundStmt 0xc01ad0 <line:2744:5, line:2746:5>
| |     `-ReturnStmt 0xc01ac0 <line:2745:7, col:68>
| |       `-CXXNoexceptExpr 0xc01aa0 <col:14, col:68> 'bool'
| |         `-CallExpr 0xc01a78 <col:23, col:67> '<dependent type>'
| |           |-CallExpr 0xc01960 <col:23, col:41> '<dependent type>'
| |           | `-UnresolvedLookupExpr 0xc018d8 <col:23, col:39> '<dependent type>' lvalue (no ADL) = 'declval' 0xbc7930
| |           `-PackExpansionExpr 0xc01a58 <col:43, col:64> '<dependent type>'
| |             `-CallExpr 0xc01a38 <col:43, col:63> '<dependent type>'
| |               `-UnresolvedLookupExpr 0xc019b0 <col:43, col:61> '<dependent type>' lvalue (no ADL) = 'declval' 0xbc7930
| |-ClassTemplateDecl 0xc01d28 <line:2748:3, line:2753:7> line:2749:12 __call_is_nothrow
| | |-TemplateTypeParmDecl 0xc01ae8 <line:2748:12, col:21> col:21 typename depth 0 index 0 _Result
| | |-TemplateTypeParmDecl 0xc01b68 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Fn
| | |-TemplateTypeParmDecl 0xc01be8 <col:44, col:56> col:56 referenced typename depth 0 index 2 ... _Args
| | `-CXXRecordDecl 0xc01c98 <line:2749:5, line:2753:7> line:2749:12 struct __call_is_nothrow definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__bool_constant<std::__call_is_nt<_Fn, _Args...>(typename _Result::__invoke_type({}))>':'integral_constant<bool, std::__call_is_nt<_Fn, _Args...>(typename _Result::__invoke_type({}))>'
| |   `-CXXRecordDecl 0xc02568 <col:5, col:12> col:12 implicit struct __call_is_nothrow
| |-TypeAliasTemplateDecl 0xc02b10 <line:2755:3, line:2757:72> line:2756:5 __call_is_nothrow_
| | |-TemplateTypeParmDecl 0xc02610 <line:2755:12, col:21> col:21 referenced typename depth 0 index 0 _Fn
| | |-TemplateTypeParmDecl 0xc02688 <col:26, col:38> col:38 referenced typename depth 0 index 1 ... _Args
| | `-TypeAliasDecl 0xc02ab0 <line:2756:5, line:2757:72> line:2756:11 __call_is_nothrow_ '__call_is_nothrow<__invoke_result<_Fn, _Args...>, _Fn, _Args...>'
| |   `-TemplateSpecializationType 0xc02980 '__call_is_nothrow<__invoke_result<_Fn, _Args...>, _Fn, _Args...>' dependent __call_is_nothrow
| |     |-TemplateArgument type '__invoke_result<_Fn, _Args...>'
| |     |-TemplateArgument type '_Fn'
| |     `-TemplateArgument type '_Args...'
| |-ClassTemplateDecl 0xc02d20 <line:2760:3, line:2764:7> line:2761:12 __is_nothrow_invocable
| | |-TemplateTypeParmDecl 0xc02b68 <line:2760:12, col:21> col:21 referenced typename depth 0 index 0 _Fn
| | |-TemplateTypeParmDecl 0xc02be8 <col:26, col:38> col:38 referenced typename depth 0 index 1 ... _Args
| | `-CXXRecordDecl 0xc02c90 <line:2761:5, line:2764:7> line:2761:12 struct __is_nothrow_invocable definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__and_<__is_invocable<_Fn, _Args...>, __call_is_nothrow_<_Fn, _Args...> >::type'
| |   `-CXXRecordDecl 0xc038b0 <col:5, col:12> col:12 implicit struct __is_nothrow_invocable
| |-CXXRecordDecl 0xc03958 <line:2766:3, line:2771:3> line:2766:10 struct __nonesuch definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_user_declared_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial defaulted_is_constexpr
| | | |-CopyConstructor trivial user_declared has_const_param implicit_has_const_param
| | | |-MoveConstructor
| | | |-CopyAssignment trivial has_const_param user_declared implicit_has_const_param
| | | |-MoveAssignment
| | | `-Destructor trivial user_declared
| | |-CXXRecordDecl 0xc03a78 <col:3, col:10> col:10 implicit referenced struct __nonesuch
| | |-CXXConstructorDecl 0xc03b70 <line:2767:5, col:25> col:5 __nonesuch 'void ()' delete trivial
| | |-CXXDestructorDecl 0xc03c60 <line:2768:5, col:26> col:5 ~__nonesuch 'void ()' delete trivial noexcept-unevaluated 0xc03c60
| | |-CXXConstructorDecl 0xc03e38 <line:2769:5, col:42> col:5 __nonesuch 'void (const std::__nonesuch &)' delete trivial
| | | `-ParmVarDecl 0xc03d78 <col:16, col:32> col:33 'const std::__nonesuch &'
| | `-CXXMethodDecl 0xc03f88 <line:2770:5, col:46> col:10 operator= 'void (const std::__nonesuch &)' delete trivial
| |   `-ParmVarDecl 0xc03ef8 <col:20, col:36> col:37 'const std::__nonesuch &'
| |-VarDecl 0xd2bfd8 parent 0xd2b650 prev 0xd2b918 <line:72:5, col:48> col:48 referenced value 'const long':'const long' constexpr
| |-VarDecl 0xd2eba8 parent 0xd2e290 prev 0xd2e558 <col:5, col:48> col:48 referenced value 'const long':'const long' constexpr
| |-VarDecl 0xdd3af8 parent 0xdd31e0 prev 0xdd34a8 <col:5, col:48> col:48 referenced value 'const long':'const long' constexpr
| |-VarDecl 0xdec068 parent 0xdeb750 prev 0xdeba18 <col:5, col:48> col:48 referenced value 'const long':'const long' constexpr
| |-VarDecl 0xe06510 parent 0xe05ba0 prev 0xe05e68 <col:5, col:48> col:48 referenced value 'const long':'const long' constexpr
| `-VarDecl 0xe1dd88 parent 0xe1cc30 prev 0xe1cef8 <col:5, col:48> col:48 referenced value 'const long':'const long' constexpr
|-TypedefDecl 0xc04040 </usr/include/x86_64-linux-gnu/bits/stdint-uintn.h:24:1, col:19> col:19 uint8_t '__uint8_t':'unsigned char'
| `-TypedefType 0x8d0560 '__uint8_t' sugar
|   |-Typedef 0x8ca160 '__uint8_t'
|   `-BuiltinType 0x7db3e0 'unsigned char'
|-TypedefDecl 0xc040a8 <line:25:1, col:20> col:20 uint16_t '__uint16_t':'unsigned short'
| `-TypedefType 0x8d0680 '__uint16_t' sugar
|   |-Typedef 0x8ca240 '__uint16_t'
|   `-BuiltinType 0x7db400 'unsigned short'
|-TypedefDecl 0xc04110 <line:26:1, col:20> col:20 uint32_t '__uint32_t':'unsigned int'
| `-TypedefType 0x8d07a0 '__uint32_t' sugar
|   |-Typedef 0x8ca320 '__uint32_t'
|   `-BuiltinType 0x7db420 'unsigned int'
|-TypedefDecl 0xc04178 <line:27:1, col:20> col:20 uint64_t '__uint64_t':'unsigned long'
| `-TypedefType 0x8d08c0 '__uint64_t' sugar
|   |-Typedef 0x8ca400 '__uint64_t'
|   `-BuiltinType 0x7db440 'unsigned long'
|-TypedefDecl 0xc04200 </usr/include/stdint.h:43:1, col:24> col:24 int_least8_t '__int_least8_t':'signed char'
| `-TypedefType 0xc041d0 '__int_least8_t' sugar
|   |-Typedef 0x8d0500 '__int_least8_t'
|   `-TypedefType 0x8ca460 '__int8_t' sugar
|     |-Typedef 0x8ca0f0 '__int8_t'
|     `-BuiltinType 0x7db340 'signed char'
|-TypedefDecl 0xc04290 <line:44:1, col:25> col:25 int_least16_t '__int_least16_t':'short'
| `-TypedefType 0xc04260 '__int_least16_t' sugar
|   |-Typedef 0x8d0620 '__int_least16_t'
|   `-TypedefType 0x8d05f0 '__int16_t' sugar
|     |-Typedef 0x8ca1d0 '__int16_t'
|     `-BuiltinType 0x7db360 'short'
|-TypedefDecl 0xc04320 <line:45:1, col:25> col:25 int_least32_t '__int_least32_t':'int'
| `-TypedefType 0xc042f0 '__int_least32_t' sugar
|   |-Typedef 0x8d0740 '__int_least32_t'
|   `-TypedefType 0x8d0710 '__int32_t' sugar
|     |-Typedef 0x8ca2b0 '__int32_t'
|     `-BuiltinType 0x7db380 'int'
|-TypedefDecl 0xc043b0 <line:46:1, col:25> col:25 int_least64_t '__int_least64_t':'long'
| `-TypedefType 0xc04380 '__int_least64_t' sugar
|   |-Typedef 0x8d0860 '__int_least64_t'
|   `-TypedefType 0x8d0830 '__int64_t' sugar
|     |-Typedef 0x8ca390 '__int64_t'
|     `-BuiltinType 0x7db3a0 'long'
|-TypedefDecl 0xc04440 <line:49:1, col:25> col:25 uint_least8_t '__uint_least8_t':'unsigned char'
| `-TypedefType 0xc04410 '__uint_least8_t' sugar
|   |-Typedef 0x8d0590 '__uint_least8_t'
|   `-TypedefType 0x8d0560 '__uint8_t' sugar
|     |-Typedef 0x8ca160 '__uint8_t'
|     `-BuiltinType 0x7db3e0 'unsigned char'
|-TypedefDecl 0xc044d0 <line:50:1, col:26> col:26 uint_least16_t '__uint_least16_t':'unsigned short'
| `-TypedefType 0xc044a0 '__uint_least16_t' sugar
|   |-Typedef 0x8d06b0 '__uint_least16_t'
|   `-TypedefType 0x8d0680 '__uint16_t' sugar
|     |-Typedef 0x8ca240 '__uint16_t'
|     `-BuiltinType 0x7db400 'unsigned short'
|-TypedefDecl 0xc04560 <line:51:1, col:26> col:26 uint_least32_t '__uint_least32_t':'unsigned int'
| `-TypedefType 0xc04530 '__uint_least32_t' sugar
|   |-Typedef 0x8d07d0 '__uint_least32_t'
|   `-TypedefType 0x8d07a0 '__uint32_t' sugar
|     |-Typedef 0x8ca320 '__uint32_t'
|     `-BuiltinType 0x7db420 'unsigned int'
|-TypedefDecl 0xc045f0 <line:52:1, col:26> col:26 uint_least64_t '__uint_least64_t':'unsigned long'
| `-TypedefType 0xc045c0 '__uint_least64_t' sugar
|   |-Typedef 0x8d08f0 '__uint_least64_t'
|   `-TypedefType 0x8d08c0 '__uint64_t' sugar
|     |-Typedef 0x8ca400 '__uint64_t'
|     `-BuiltinType 0x7db440 'unsigned long'
|-TypedefDecl 0xc04660 <line:58:1, col:22> col:22 int_fast8_t 'signed char'
| `-BuiltinType 0x7db340 'signed char'
|-TypedefDecl 0xc046d0 <line:60:1, col:19> col:19 int_fast16_t 'long'
| `-BuiltinType 0x7db3a0 'long'
|-TypedefDecl 0xc04740 <line:61:1, col:19> col:19 int_fast32_t 'long'
| `-BuiltinType 0x7db3a0 'long'
|-TypedefDecl 0xc047b0 <line:62:1, col:19> col:19 int_fast64_t 'long'
| `-BuiltinType 0x7db3a0 'long'
|-TypedefDecl 0xc04820 <line:71:1, col:24> col:24 uint_fast8_t 'unsigned char'
| `-BuiltinType 0x7db3e0 'unsigned char'
|-TypedefDecl 0xc04890 <line:73:1, col:27> col:27 uint_fast16_t 'unsigned long'
| `-BuiltinType 0x7db440 'unsigned long'
|-TypedefDecl 0xc04900 <line:74:1, col:27> col:27 uint_fast32_t 'unsigned long'
| `-BuiltinType 0x7db440 'unsigned long'
|-TypedefDecl 0xc04970 <line:75:1, col:27> col:27 uint_fast64_t 'unsigned long'
| `-BuiltinType 0x7db440 'unsigned long'
|-TypedefDecl 0xc049e0 <line:87:1, col:19> col:19 intptr_t 'long'
| `-BuiltinType 0x7db3a0 'long'
|-TypedefDecl 0xc04a50 <line:90:1, col:27> col:27 uintptr_t 'unsigned long'
| `-BuiltinType 0x7db440 'unsigned long'
|-TypedefDecl 0xc04ab8 <line:101:1, col:21> col:21 referenced intmax_t '__intmax_t':'long'
| `-TypedefType 0x9000a0 '__intmax_t' sugar
|   |-Typedef 0x8d0a40 '__intmax_t'
|   `-BuiltinType 0x7db3a0 'long'
|-TypedefDecl 0xc04b20 <line:102:1, col:22> col:22 referenced uintmax_t '__uintmax_t':'unsigned long'
| `-TypedefType 0x900d00 '__uintmax_t' sugar
|   |-Typedef 0x8d0ab0 '__uintmax_t'
|   `-BuiltinType 0x7db440 'unsigned long'
|-NamespaceDecl 0xc04b78 prev 0xac6cd8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/cstdint:44:1, line:87:1> line:44:11 std
| |-original Namespace 0x81a0b0 'std'
| |-UsingDecl 0xc04bf0 <line:47:3, col:11> col:11 ::int8_t
| |-UsingShadowDecl 0xc04c48 <col:11> col:11 implicit Typedef 0x93d348 'int8_t'
| | `-<<<NULL>>>
| |-UsingDecl 0xc04ca0 <line:48:3, col:11> col:11 ::int16_t
| |-UsingShadowDecl 0xc04cf8 <col:11> col:11 implicit Typedef 0x93d3b0 'int16_t'
| | `-<<<NULL>>>
| |-UsingDecl 0xc04d50 <line:49:3, col:11> col:11 ::int32_t
| |-UsingShadowDecl 0xc04da8 <col:11> col:11 implicit Typedef 0x93d418 'int32_t'
| | `-TypedefType 0xa066f0 'int32_t' sugar
| |   |-Typedef 0x93d418 'int32_t'
| |   `-TypedefType 0x8d0710 '__int32_t' sugar
| |     |-Typedef 0x8ca2b0 '__int32_t'
| |     `-BuiltinType 0x7db380 'int'
| |-UsingDecl 0xc04e00 <line:50:3, col:11> col:11 ::int64_t
| |-UsingShadowDecl 0xc04e58 <col:11> col:11 implicit Typedef 0x93d480 'int64_t'
| | `-TypedefType 0xd1cfa0 'int64_t' sugar
| |   |-Typedef 0x93d480 'int64_t'
| |   `-TypedefType 0x8d0830 '__int64_t' sugar
| |     |-Typedef 0x8ca390 '__int64_t'
| |     `-BuiltinType 0x7db3a0 'long'
| |-UsingDecl 0xc04eb0 <line:52:3, col:11> col:11 ::int_fast8_t
| |-UsingShadowDecl 0xc04f08 <col:11> col:11 implicit Typedef 0xc04660 'int_fast8_t'
| | `-<<<NULL>>>
| |-UsingDecl 0xc04f60 <line:53:3, col:11> col:11 ::int_fast16_t
| |-UsingShadowDecl 0xc04fb8 <col:11> col:11 implicit Typedef 0xc046d0 'int_fast16_t'
| | `-<<<NULL>>>
| |-UsingDecl 0xc161b0 <line:54:3, col:11> col:11 ::int_fast32_t
| |-UsingShadowDecl 0xc16208 <col:11> col:11 implicit Typedef 0xc04740 'int_fast32_t'
| | `-<<<NULL>>>
| |-UsingDecl 0xc16260 <line:55:3, col:11> col:11 ::int_fast64_t
| |-UsingShadowDecl 0xc162b8 <col:11> col:11 implicit Typedef 0xc047b0 'int_fast64_t'
| | `-<<<NULL>>>
| |-UsingDecl 0xc16310 <line:57:3, col:11> col:11 ::int_least8_t
| |-UsingShadowDecl 0xc16368 <col:11> col:11 implicit Typedef 0xc04200 'int_least8_t'
| | `-<<<NULL>>>
| |-UsingDecl 0xc163c0 <line:58:3, col:11> col:11 ::int_least16_t
| |-UsingShadowDecl 0xc16418 <col:11> col:11 implicit Typedef 0xc04290 'int_least16_t'
| | `-<<<NULL>>>
| |-UsingDecl 0xc16470 <line:59:3, col:11> col:11 ::int_least32_t
| |-UsingShadowDecl 0xc164c8 <col:11> col:11 implicit Typedef 0xc04320 'int_least32_t'
| | `-<<<NULL>>>
| |-UsingDecl 0xc16520 <line:60:3, col:11> col:11 ::int_least64_t
| |-UsingShadowDecl 0xc16578 <col:11> col:11 implicit Typedef 0xc043b0 'int_least64_t'
| | `-<<<NULL>>>
| |-UsingDecl 0xc165d0 <line:62:3, col:11> col:11 ::intmax_t
| |-UsingShadowDecl 0xc16628 <col:11> col:11 implicit Typedef 0xc04ab8 'intmax_t'
| | `-TypedefType 0xc171b0 'intmax_t' sugar
| |   |-Typedef 0xc04ab8 'intmax_t'
| |   `-TypedefType 0x9000a0 '__intmax_t' sugar
| |     |-Typedef 0x8d0a40 '__intmax_t'
| |     `-BuiltinType 0x7db3a0 'long'
| |-UsingDecl 0xc16680 <line:63:3, col:11> col:11 ::intptr_t
| |-UsingShadowDecl 0xc166d8 <col:11> col:11 implicit Typedef 0xc049e0 'intptr_t'
| | `-<<<NULL>>>
| |-UsingDecl 0xc16730 <line:65:3, col:11> col:11 ::uint8_t
| |-UsingShadowDecl 0xc16788 <col:11> col:11 implicit Typedef 0xc04040 'uint8_t'
| | `-<<<NULL>>>
| |-UsingDecl 0xc167e0 <line:66:3, col:11> col:11 ::uint16_t
| |-UsingShadowDecl 0xc16838 <col:11> col:11 implicit Typedef 0xc040a8 'uint16_t'
| | `-<<<NULL>>>
| |-UsingDecl 0xc16890 <line:67:3, col:11> col:11 ::uint32_t
| |-UsingShadowDecl 0xc168e8 <col:11> col:11 implicit Typedef 0xc04110 'uint32_t'
| | `-<<<NULL>>>
| |-UsingDecl 0xc16940 <line:68:3, col:11> col:11 ::uint64_t
| |-UsingShadowDecl 0xc16998 <col:11> col:11 implicit Typedef 0xc04178 'uint64_t'
| | `-<<<NULL>>>
| |-UsingDecl 0xc169f0 <line:70:3, col:11> col:11 ::uint_fast8_t
| |-UsingShadowDecl 0xc16a48 <col:11> col:11 implicit Typedef 0xc04820 'uint_fast8_t'
| | `-<<<NULL>>>
| |-UsingDecl 0xc16aa0 <line:71:3, col:11> col:11 ::uint_fast16_t
| |-UsingShadowDecl 0xc16af8 <col:11> col:11 implicit Typedef 0xc04890 'uint_fast16_t'
| | `-<<<NULL>>>
| |-UsingDecl 0xc16b50 <line:72:3, col:11> col:11 ::uint_fast32_t
| |-UsingShadowDecl 0xc16ba8 <col:11> col:11 implicit Typedef 0xc04900 'uint_fast32_t'
| | `-<<<NULL>>>
| |-UsingDecl 0xc16c00 <line:73:3, col:11> col:11 ::uint_fast64_t
| |-UsingShadowDecl 0xc16c58 <col:11> col:11 implicit Typedef 0xc04970 'uint_fast64_t'
| | `-<<<NULL>>>
| |-UsingDecl 0xc16cb0 <line:75:3, col:11> col:11 ::uint_least8_t
| |-UsingShadowDecl 0xc16d08 <col:11> col:11 implicit Typedef 0xc04440 'uint_least8_t'
| | `-<<<NULL>>>
| |-UsingDecl 0xc16d60 <line:76:3, col:11> col:11 ::uint_least16_t
| |-UsingShadowDecl 0xc16db8 <col:11> col:11 implicit Typedef 0xc044d0 'uint_least16_t'
| | `-<<<NULL>>>
| |-UsingDecl 0xc16e10 <line:77:3, col:11> col:11 ::uint_least32_t
| |-UsingShadowDecl 0xc16e68 <col:11> col:11 implicit Typedef 0xc04560 'uint_least32_t'
| | `-<<<NULL>>>
| |-UsingDecl 0xc16ec0 <line:78:3, col:11> col:11 ::uint_least64_t
| |-UsingShadowDecl 0xc16f18 <col:11> col:11 implicit Typedef 0xc045f0 'uint_least64_t'
| | `-<<<NULL>>>
| |-UsingDecl 0xc16f70 <line:80:3, col:11> col:11 ::uintmax_t
| |-UsingShadowDecl 0xc16fc8 <col:11> col:11 implicit Typedef 0xc04b20 'uintmax_t'
| | `-TypedefType 0xc19be0 'uintmax_t' sugar
| |   |-Typedef 0xc04b20 'uintmax_t'
| |   `-TypedefType 0x900d00 '__uintmax_t' sugar
| |     |-Typedef 0x8d0ab0 '__uintmax_t'
| |     `-BuiltinType 0x7db440 'unsigned long'
| |-UsingDecl 0xc17020 <line:81:3, col:11> col:11 ::uintptr_t
| `-UsingShadowDecl 0xc17078 <col:11> col:11 implicit Typedef 0xc04a50 'uintptr_t'
|   `-<<<NULL>>>
|-NamespaceDecl 0xc170e8 prev 0xc04b78 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:41:1, line:547:1> line:41:11 std
| |-original Namespace 0x81a0b0 'std'
| |-VisibilityAttr 0xc17158 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:70:49, col:67> Default
| |-ClassTemplateDecl 0xc172f0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:53:3, line:56:7> line:54:12 __static_sign
| | |-NonTypeTemplateParmDecl 0xc171e0 <line:53:12, col:21> col:21 referenced 'intmax_t':'long' depth 0 index 0 _Pn
| | |-CXXRecordDecl 0xc17260 <line:54:5, line:56:7> line:54:12 struct __static_sign definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'integral_constant<intmax_t, (_Pn < 0) ? -1 : 1>'
| | | `-CXXRecordDecl 0xc17820 <col:5, col:12> col:12 implicit struct __static_sign
| | |-ClassTemplateSpecializationDecl 0xd2b328 <line:53:3, line:56:7> line:54:12 struct __static_sign definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'integral_constant<intmax_t, (1000000000L < 0) ? -1 : 1>':'std::integral_constant<long, 1>'
| | | |-TemplateArgument integral 1000000000
| | | `-CXXRecordDecl 0xd2bec8 prev 0xd2b328 <col:5, col:12> col:12 implicit struct __static_sign
| | |-ClassTemplateSpecializationDecl 0xd2d1f0 <line:53:3, line:56:7> line:54:12 struct __static_sign definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'integral_constant<intmax_t, (1L < 0) ? -1 : 1>':'std::integral_constant<long, 1>'
| | | |-TemplateArgument integral 1
| | | `-CXXRecordDecl 0xd2d5e0 prev 0xd2d1f0 <col:5, col:12> col:12 implicit struct __static_sign
| | |-ClassTemplateSpecializationDecl 0xdd20a8 <line:53:3, line:56:7> line:54:12 struct __static_sign definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'integral_constant<intmax_t, (3600L < 0) ? -1 : 1>':'std::integral_constant<long, 1>'
| | | |-TemplateArgument integral 3600
| | | `-CXXRecordDecl 0xdd24a0 prev 0xdd20a8 <col:5, col:12> col:12 implicit struct __static_sign
| | |-ClassTemplateSpecializationDecl 0xdea618 <line:53:3, line:56:7> line:54:12 struct __static_sign definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'integral_constant<intmax_t, (60L < 0) ? -1 : 1>':'std::integral_constant<long, 1>'
| | | |-TemplateArgument integral 60
| | | `-CXXRecordDecl 0xdeaa10 prev 0xdea618 <col:5, col:12> col:12 implicit struct __static_sign
| | |-ClassTemplateSpecializationDecl 0xe045b8 <line:53:3, line:56:7> line:54:12 struct __static_sign definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'integral_constant<intmax_t, (1000L < 0) ? -1 : 1>':'std::integral_constant<long, 1>'
| | | |-TemplateArgument integral 1000
| | | `-CXXRecordDecl 0xe049b0 prev 0xe045b8 <col:5, col:12> col:12 implicit struct __static_sign
| | `-ClassTemplateSpecializationDecl 0xe1b648 <line:53:3, line:56:7> line:54:12 struct __static_sign definition
| |   |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'integral_constant<intmax_t, (1000000L < 0) ? -1 : 1>':'std::integral_constant<long, 1>'
| |   |-TemplateArgument integral 1000000
| |   `-CXXRecordDecl 0xe1ba40 prev 0xe1b648 <col:5, col:12> col:12 implicit struct __static_sign
| |-ClassTemplateDecl 0xc179e8 <line:58:3, line:61:7> line:59:12 __static_abs
| | |-NonTypeTemplateParmDecl 0xc178d8 <line:58:12, col:21> col:21 referenced 'intmax_t':'long' depth 0 index 0 _Pn
| | |-CXXRecordDecl 0xc17958 <line:59:5, line:61:7> line:59:12 struct __static_abs definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'integral_constant<intmax_t, _Pn * __static_sign<_Pn>::value>'
| | | `-CXXRecordDecl 0xc17f40 <col:5, col:12> col:12 implicit struct __static_abs
| | |-ClassTemplateSpecializationDecl 0xd2cf48 <line:58:3, line:61:7> line:59:12 struct __static_abs definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'integral_constant<intmax_t, 1L * __static_sign<1L>::value>':'std::integral_constant<long, 1>'
| | | |-TemplateArgument integral 1
| | | `-CXXRecordDecl 0xd2d830 prev 0xd2cf48 <col:5, col:12> col:12 implicit struct __static_abs
| | |-ClassTemplateSpecializationDecl 0xd2de80 <line:58:3, line:61:7> line:59:12 struct __static_abs definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'integral_constant<intmax_t, 1000000000L * __static_sign<1000000000L>::value>':'std::integral_constant<long, 1000000000>'
| | | |-TemplateArgument integral 1000000000
| | | `-CXXRecordDecl 0xd2eac0 prev 0xd2de80 <col:5, col:12> col:12 implicit struct __static_abs
| | |-ClassTemplateSpecializationDecl 0xdd2dd0 <line:58:3, line:61:7> line:59:12 struct __static_abs definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'integral_constant<intmax_t, 3600L * __static_sign<3600L>::value>':'std::integral_constant<long, 3600>'
| | | |-TemplateArgument integral 3600
| | | `-CXXRecordDecl 0xdd3a10 prev 0xdd2dd0 <col:5, col:12> col:12 implicit struct __static_abs
| | |-ClassTemplateSpecializationDecl 0xdeb340 <line:58:3, line:61:7> line:59:12 struct __static_abs definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'integral_constant<intmax_t, 60L * __static_sign<60L>::value>':'std::integral_constant<long, 60>'
| | | |-TemplateArgument integral 60
| | | `-CXXRecordDecl 0xdebf80 prev 0xdeb340 <col:5, col:12> col:12 implicit struct __static_abs
| | |-ClassTemplateSpecializationDecl 0xe05788 <line:58:3, line:61:7> line:59:12 struct __static_abs definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'integral_constant<intmax_t, 1000L * __static_sign<1000L>::value>':'std::integral_constant<long, 1000>'
| | | |-TemplateArgument integral 1000
| | | `-CXXRecordDecl 0xe06428 prev 0xe05788 <col:5, col:12> col:12 implicit struct __static_abs
| | `-ClassTemplateSpecializationDecl 0xe1c818 <line:58:3, line:61:7> line:59:12 struct __static_abs definition
| |   |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'integral_constant<intmax_t, 1000000L * __static_sign<1000000L>::value>':'std::integral_constant<long, 1000000>'
| |   |-TemplateArgument integral 1000000
| |   `-CXXRecordDecl 0xe1dca0 prev 0xe1c818 <col:5, col:12> col:12 implicit struct __static_abs
| |-ClassTemplateDecl 0xc18180 <line:63:3, line:66:7> line:64:12 __static_gcd
| | |-NonTypeTemplateParmDecl 0xc17ff8 <line:63:12, col:21> col:21 referenced 'intmax_t':'long' depth 0 index 0 _Pn
| | |-NonTypeTemplateParmDecl 0xc18068 <col:26, col:35> col:35 referenced 'intmax_t':'long' depth 0 index 1 _Qn
| | |-CXXRecordDecl 0xc180f0 <line:64:5, line:66:7> line:64:12 struct __static_gcd definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__static_gcd<_Qn, (_Pn % _Qn)>'
| | | `-CXXRecordDecl 0xc18620 <col:5, col:12> col:12 implicit struct __static_gcd
| | |-ClassTemplateSpecializationDecl 0xd2c310 <line:63:3, line:66:7> line:64:12 struct __static_gcd definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__static_gcd<1000000000L, (1L % 1000000000L)>':'std::__static_gcd<1000000000, 1>'
| | | |-TemplateArgument integral 1
| | | |-TemplateArgument integral 1000000000
| | | `-CXXRecordDecl 0xd2dc10 prev 0xd2c310 <col:5, col:12> col:12 implicit struct __static_gcd
| | |-ClassTemplateSpecializationDecl 0xd2c700 <line:63:3, line:66:7> line:64:12 struct __static_gcd definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__static_gcd<1L, (1000000000L % 1L)>':'std::__static_gcd<1, 0>'
| | | |-TemplateArgument integral 1000000000
| | | |-TemplateArgument integral 1
| | | `-CXXRecordDecl 0xd2db38 prev 0xd2c700 <col:5, col:12> col:12 implicit struct __static_gcd
| | |-ClassTemplateSpecializationDecl 0xd2cb80 <line:68:3, line:71:7> line:69:12 struct __static_gcd definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'integral_constant<intmax_t, __static_abs<1L>::value>':'std::integral_constant<long, 1>'
| | | |-TemplateArgument integral 1
| | | |-TemplateArgument integral 0
| | | `-CXXRecordDecl 0xd2da60 prev 0xd2cb80 <col:5, col:12> col:12 implicit struct __static_gcd
| | |-ClassTemplateSpecializationDecl 0xd46f70 <line:63:3, line:66:7> line:64:12 struct __static_gcd definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__static_gcd<1L, (1L % 1L)>':'std::__static_gcd<1, 0>'
| | | |-TemplateArgument integral 1
| | | |-TemplateArgument integral 1
| | | `-CXXRecordDecl 0xd47430 prev 0xd46f70 <col:5, col:12> col:12 implicit struct __static_gcd
| | |-ClassTemplateSpecializationDecl 0xd47790 <line:63:3, line:66:7> line:64:12 struct __static_gcd definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__static_gcd<1000000000L, (1000000000L % 1000000000L)>':'std::__static_gcd<1000000000, 0>'
| | | |-TemplateArgument integral 1000000000
| | | |-TemplateArgument integral 1000000000
| | | `-CXXRecordDecl 0xd48248 prev 0xd47790 <col:5, col:12> col:12 implicit struct __static_gcd
| | |-ClassTemplateSpecializationDecl 0xd47b80 <line:68:3, line:71:7> line:69:12 struct __static_gcd definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'integral_constant<intmax_t, __static_abs<1000000000L>::value>':'std::integral_constant<long, 1000000000>'
| | | |-TemplateArgument integral 1000000000
| | | |-TemplateArgument integral 0
| | | `-CXXRecordDecl 0xd48170 prev 0xd47b80 <col:5, col:12> col:12 implicit struct __static_gcd
| | |-ClassTemplateSpecializationDecl 0xdc0a80 <line:63:3, line:66:7> line:64:12 struct __static_gcd definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__static_gcd<1L, (3600L % 1L)>':'std::__static_gcd<1, 0>'
| | | |-TemplateArgument integral 3600
| | | |-TemplateArgument integral 1
| | | `-CXXRecordDecl 0xdc0f40 prev 0xdc0a80 <col:5, col:12> col:12 implicit struct __static_gcd
| | |-ClassTemplateSpecializationDecl 0xdd26a0 <line:63:3, line:66:7> line:64:12 struct __static_gcd definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__static_gcd<3600L, (1L % 3600L)>':'std::__static_gcd<3600, 1>'
| | | |-TemplateArgument integral 1
| | | |-TemplateArgument integral 3600
| | | `-CXXRecordDecl 0xdd2b60 prev 0xdd26a0 <col:5, col:12> col:12 implicit struct __static_gcd
| | |-ClassTemplateSpecializationDecl 0xdd4730 <line:63:3, line:66:7> line:64:12 struct __static_gcd definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__static_gcd<3600L, (3600L % 3600L)>':'std::__static_gcd<3600, 0>'
| | | |-TemplateArgument integral 3600
| | | |-TemplateArgument integral 3600
| | | `-CXXRecordDecl 0xdd51e8 prev 0xdd4730 <col:5, col:12> col:12 implicit struct __static_gcd
| | |-ClassTemplateSpecializationDecl 0xdd4b20 <line:68:3, line:71:7> line:69:12 struct __static_gcd definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'integral_constant<intmax_t, __static_abs<3600L>::value>':'std::integral_constant<long, 3600>'
| | | |-TemplateArgument integral 3600
| | | |-TemplateArgument integral 0
| | | `-CXXRecordDecl 0xdd5110 prev 0xdd4b20 <col:5, col:12> col:12 implicit struct __static_gcd
| | |-ClassTemplateSpecializationDecl 0xde1420 <line:63:3, line:66:7> line:64:12 struct __static_gcd definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__static_gcd<1L, (60L % 1L)>':'std::__static_gcd<1, 0>'
| | | |-TemplateArgument integral 60
| | | |-TemplateArgument integral 1
| | | `-CXXRecordDecl 0xde18e0 prev 0xde1420 <col:5, col:12> col:12 implicit struct __static_gcd
| | |-ClassTemplateSpecializationDecl 0xdeac10 <line:63:3, line:66:7> line:64:12 struct __static_gcd definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__static_gcd<60L, (1L % 60L)>':'std::__static_gcd<60, 1>'
| | | |-TemplateArgument integral 1
| | | |-TemplateArgument integral 60
| | | `-CXXRecordDecl 0xdeb0d0 prev 0xdeac10 <col:5, col:12> col:12 implicit struct __static_gcd
| | |-ClassTemplateSpecializationDecl 0xdef5c0 <line:63:3, line:66:7> line:64:12 struct __static_gcd definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__static_gcd<60L, (60L % 60L)>':'std::__static_gcd<60, 0>'
| | | |-TemplateArgument integral 60
| | | |-TemplateArgument integral 60
| | | `-CXXRecordDecl 0xdf0078 prev 0xdef5c0 <col:5, col:12> col:12 implicit struct __static_gcd
| | |-ClassTemplateSpecializationDecl 0xdef9b0 <line:68:3, line:71:7> line:69:12 struct __static_gcd definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'integral_constant<intmax_t, __static_abs<60L>::value>':'std::integral_constant<long, 60>'
| | | |-TemplateArgument integral 60
| | | |-TemplateArgument integral 0
| | | `-CXXRecordDecl 0xdeffa0 prev 0xdef9b0 <col:5, col:12> col:12 implicit struct __static_gcd
| | |-ClassTemplateSpecializationDecl 0xe04bb0 <line:63:3, line:66:7> line:64:12 struct __static_gcd definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__static_gcd<1000L, (1L % 1000L)>':'std::__static_gcd<1000, 1>'
| | | |-TemplateArgument integral 1
| | | |-TemplateArgument integral 1000
| | | `-CXXRecordDecl 0xe05518 prev 0xe04bb0 <col:5, col:12> col:12 implicit struct __static_gcd
| | |-ClassTemplateSpecializationDecl 0xe04fa0 <line:63:3, line:66:7> line:64:12 struct __static_gcd definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__static_gcd<1L, (1000L % 1L)>':'std::__static_gcd<1, 0>'
| | | |-TemplateArgument integral 1000
| | | |-TemplateArgument integral 1
| | | `-CXXRecordDecl 0xe05440 prev 0xe04fa0 <col:5, col:12> col:12 implicit struct __static_gcd
| | |-ClassTemplateSpecializationDecl 0xe0fff0 <line:63:3, line:66:7> line:64:12 struct __static_gcd definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__static_gcd<1000L, (1000L % 1000L)>':'std::__static_gcd<1000, 0>'
| | | |-TemplateArgument integral 1000
| | | |-TemplateArgument integral 1000
| | | `-CXXRecordDecl 0xe10aa8 prev 0xe0fff0 <col:5, col:12> col:12 implicit struct __static_gcd
| | |-ClassTemplateSpecializationDecl 0xe103e0 <line:68:3, line:71:7> line:69:12 struct __static_gcd definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'integral_constant<intmax_t, __static_abs<1000L>::value>':'std::integral_constant<long, 1000>'
| | | |-TemplateArgument integral 1000
| | | |-TemplateArgument integral 0
| | | `-CXXRecordDecl 0xe109d0 prev 0xe103e0 <col:5, col:12> col:12 implicit struct __static_gcd
| | |-ClassTemplateSpecializationDecl 0xe1bc40 <line:63:3, line:66:7> line:64:12 struct __static_gcd definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__static_gcd<1000000L, (1L % 1000000L)>':'std::__static_gcd<1000000, 1>'
| | | |-TemplateArgument integral 1
| | | |-TemplateArgument integral 1000000
| | | `-CXXRecordDecl 0xe1c5a8 prev 0xe1bc40 <col:5, col:12> col:12 implicit struct __static_gcd
| | |-ClassTemplateSpecializationDecl 0xe1c030 <line:63:3, line:66:7> line:64:12 struct __static_gcd definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__static_gcd<1L, (1000000L % 1L)>':'std::__static_gcd<1, 0>'
| | | |-TemplateArgument integral 1000000
| | | |-TemplateArgument integral 1
| | | `-CXXRecordDecl 0xe1c4d0 prev 0xe1c030 <col:5, col:12> col:12 implicit struct __static_gcd
| | |-ClassTemplateSpecializationDecl 0xe27be0 <line:63:3, line:66:7> line:64:12 struct __static_gcd definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__static_gcd<1000000L, (1000000L % 1000000L)>':'std::__static_gcd<1000000, 0>'
| | | |-TemplateArgument integral 1000000
| | | |-TemplateArgument integral 1000000
| | | `-CXXRecordDecl 0xe28698 prev 0xe27be0 <col:5, col:12> col:12 implicit struct __static_gcd
| | `-ClassTemplateSpecializationDecl 0xe27fd0 <line:68:3, line:71:7> line:69:12 struct __static_gcd definition
| |   |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'integral_constant<intmax_t, __static_abs<1000000L>::value>':'std::integral_constant<long, 1000000>'
| |   |-TemplateArgument integral 1000000
| |   |-TemplateArgument integral 0
| |   `-CXXRecordDecl 0xe285c0 prev 0xe27fd0 <col:5, col:12> col:12 implicit struct __static_gcd
| |-ClassTemplatePartialSpecializationDecl 0xc188f8 <line:68:3, line:71:7> line:69:12 struct __static_gcd definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'integral_constant<intmax_t, __static_abs<_Pn>::value>'
| | |-TemplateArgument expr
| | | `-DeclRefExpr 0xc18758 <col:25> 'intmax_t':'long' NonTypeTemplateParm 0xc186d8 '_Pn' 'intmax_t':'long'
| | |-TemplateArgument integral 0
| | |-NonTypeTemplateParmDecl 0xc186d8 <line:68:12, col:21> col:21 referenced 'intmax_t':'long' depth 0 index 0 _Pn
| | `-CXXRecordDecl 0xc18e50 <line:69:5, col:12> col:12 implicit struct __static_gcd
| |-ClassTemplatePartialSpecializationDecl 0xc19128 <line:73:3, line:76:7> line:74:12 struct __static_gcd definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'integral_constant<intmax_t, __static_abs<_Qn>::value>'
| | |-TemplateArgument integral 0
| | |-TemplateArgument expr
| | | `-DeclRefExpr 0xc18fa8 <col:28> 'intmax_t':'long' NonTypeTemplateParm 0xc18f08 '_Qn' 'intmax_t':'long'
| | |-NonTypeTemplateParmDecl 0xc18f08 <line:73:12, col:21> col:21 referenced 'intmax_t':'long' depth 0 index 0 _Qn
| | `-CXXRecordDecl 0xc19610 <line:74:5, col:12> col:12 implicit struct __static_gcd
| |-ClassTemplateDecl 0xc19850 <line:84:3, line:107:5> line:85:12 __safe_multiply
| | |-NonTypeTemplateParmDecl 0xc196c8 <line:84:12, col:21> col:21 referenced 'intmax_t':'long' depth 0 index 0 _Pn
| | |-NonTypeTemplateParmDecl 0xc19738 <col:26, col:35> col:35 referenced 'intmax_t':'long' depth 0 index 1 _Qn
| | |-CXXRecordDecl 0xc197c0 <line:85:5, line:107:5> line:85:12 struct __safe_multiply definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-CXXRecordDecl 0xc19b20 <col:5, col:12> col:12 implicit struct __safe_multiply
| | | |-AccessSpecDecl 0xc19bb0 <line:87:5, col:12> col:5 private
| | | |-VarDecl 0xc19c10 <line:88:7, col:73> col:30 referenced __c 'const uintmax_t':'const unsigned long' static cinit
| | | | `-BinaryOperator 0xc19d90 <col:36, col:73> 'uintmax_t':'unsigned long' '<<'
| | | |   |-CXXFunctionalCastExpr 0xc19cc0 <col:36, col:47> 'uintmax_t':'unsigned long' functional cast to uintmax_t <NoOp>
| | | |   | `-ImplicitCastExpr 0xc19ca8 <col:46> 'uintmax_t':'unsigned long' <IntegralCast> part_of_explicit_cast
| | | |   |   `-IntegerLiteral 0xc19c88 <col:46> 'int' 1
| | | |   `-ParenExpr 0xc19d70 <col:52, col:73> 'unsigned long'
| | | |     `-BinaryOperator 0xc19d50 <col:53, col:72> 'unsigned long' '*'
| | | |       |-UnaryExprOrTypeTraitExpr 0xc19cf8 <col:53, col:68> 'unsigned long' sizeof 'intmax_t':'long'
| | | |       `-ImplicitCastExpr 0xc19d38 <col:72> 'unsigned long' <IntegralCast>
| | | |         `-IntegerLiteral 0xc19d18 <col:72> 'int' 4
| | | |-VarDecl 0xc19e18 <line:90:7, col:64> col:30 referenced __a0 'const uintmax_t':'const unsigned long' static cinit
| | | | `-BinaryOperator 0xc19fa8 <col:37, col:64> '<dependent type>' '%'
| | | |   |-DependentScopeDeclRefExpr 0xc19f50 <col:37, col:56> '<dependent type>' lvalue
| | | |   `-DeclRefExpr 0xc19f88 <col:64> 'const uintmax_t':'const unsigned long' lvalue Var 0xc19c10 '__c' 'const uintmax_t':'const unsigned long'
| | | |-VarDecl 0xc19fd8 <line:91:7, col:64> col:30 referenced __a1 'const uintmax_t':'const unsigned long' static cinit
| | | | `-BinaryOperator 0xc1a168 <col:37, col:64> '<dependent type>' '/'
| | | |   |-DependentScopeDeclRefExpr 0xc1a110 <col:37, col:56> '<dependent type>' lvalue
| | | |   `-DeclRefExpr 0xc1a148 <col:64> 'const uintmax_t':'const unsigned long' lvalue Var 0xc19c10 '__c' 'const uintmax_t':'const unsigned long'
| | | |-VarDecl 0xc1b220 <line:92:7, col:64> col:30 referenced __b0 'const uintmax_t':'const unsigned long' static cinit
| | | | `-BinaryOperator 0xc1b3f8 <col:37, col:64> '<dependent type>' '%'
| | | |   |-DependentScopeDeclRefExpr 0xc1b3a0 <col:37, col:56> '<dependent type>' lvalue
| | | |   `-DeclRefExpr 0xc1b3d8 <col:64> 'const uintmax_t':'const unsigned long' lvalue Var 0xc19c10 '__c' 'const uintmax_t':'const unsigned long'
| | | |-VarDecl 0xc1b428 <line:93:7, col:64> col:30 referenced __b1 'const uintmax_t':'const unsigned long' static cinit
| | | | `-BinaryOperator 0xc1b5b8 <col:37, col:64> '<dependent type>' '/'
| | | |   |-DependentScopeDeclRefExpr 0xc1b560 <col:37, col:56> '<dependent type>' lvalue
| | | |   `-DeclRefExpr 0xc1b598 <col:64> 'const uintmax_t':'const unsigned long' lvalue Var 0xc19c10 '__c' 'const uintmax_t':'const unsigned long'
| | | |-StaticAssertDecl 0xc1b7d0 <line:95:7, line:96:35> line:95:7
| | | | |-BinaryOperator 0xc1b6f8 <col:21, col:42> 'bool' '||'
| | | | | |-BinaryOperator 0xc1b648 <col:21, col:29> 'bool' '=='
| | | | | | |-ImplicitCastExpr 0xc1b618 <col:21> 'uintmax_t':'unsigned long' <LValueToRValue>
| | | | | | | `-DeclRefExpr 0xc1b5d8 <col:21> 'const uintmax_t':'const unsigned long' lvalue Var 0xc19fd8 '__a1' 'const uintmax_t':'const unsigned long'
| | | | | | `-ImplicitCastExpr 0xc1b630 <col:29> 'unsigned long' <IntegralCast>
| | | | | |   `-IntegerLiteral 0xc1b5f8 <col:29> 'int' 0
| | | | | `-BinaryOperator 0xc1b6d8 <col:34, col:42> 'bool' '=='
| | | | |   |-ImplicitCastExpr 0xc1b6a8 <col:34> 'uintmax_t':'unsigned long' <LValueToRValue>
| | | | |   | `-DeclRefExpr 0xc1b668 <col:34> 'const uintmax_t':'const unsigned long' lvalue Var 0xc1b428 '__b1' 'const uintmax_t':'const unsigned long'
| | | | |   `-ImplicitCastExpr 0xc1b6c0 <col:42> 'unsigned long' <IntegralCast>
| | | | |     `-IntegerLiteral 0xc1b688 <col:42> 'int' 0
| | | | `-StringLiteral 0xc1b798 <line:96:7> 'const char [27]' lvalue "overflow in multiplication"
| | | |-StaticAssertDecl 0xc1ba60 <line:97:7, line:98:35> line:97:7
| | | | |-BinaryOperator 0xc1ba08 <col:21, col:58> 'bool' '<'
| | | | | |-BinaryOperator 0xc1b930 <col:21, col:42> 'unsigned long' '+'
| | | | | | |-BinaryOperator 0xc1b880 <col:21, col:28> 'unsigned long' '*'
| | | | | | | |-ImplicitCastExpr 0xc1b850 <col:21> 'uintmax_t':'unsigned long' <LValueToRValue>
| | | | | | | | `-DeclRefExpr 0xc1b810 <col:21> 'const uintmax_t':'const unsigned long' lvalue Var 0xc19e18 '__a0' 'const uintmax_t':'const unsigned long'
| | | | | | | `-ImplicitCastExpr 0xc1b868 <col:28> 'uintmax_t':'unsigned long' <LValueToRValue>
| | | | | | |   `-DeclRefExpr 0xc1b830 <col:28> 'const uintmax_t':'const unsigned long' lvalue Var 0xc1b428 '__b1' 'const uintmax_t':'const unsigned long'
| | | | | | `-BinaryOperator 0xc1b910 <col:35, col:42> 'unsigned long' '*'
| | | | | |   |-ImplicitCastExpr 0xc1b8e0 <col:35> 'uintmax_t':'unsigned long' <LValueToRValue>
| | | | | |   | `-DeclRefExpr 0xc1b8a0 <col:35> 'const uintmax_t':'const unsigned long' lvalue Var 0xc1b220 '__b0' 'const uintmax_t':'const unsigned long'
| | | | | |   `-ImplicitCastExpr 0xc1b8f8 <col:42> 'uintmax_t':'unsigned long' <LValueToRValue>
| | | | | |     `-DeclRefExpr 0xc1b8c0 <col:42> 'const uintmax_t':'const unsigned long' lvalue Var 0xc19fd8 '__a1' 'const uintmax_t':'const unsigned long'
| | | | | `-ParenExpr 0xc1b9e8 <col:49, col:58> 'uintmax_t':'unsigned long'
| | | | |   `-BinaryOperator 0xc1b9c8 <col:50, col:57> 'uintmax_t':'unsigned long' '>>'
| | | | |     |-ImplicitCastExpr 0xc1b9b0 <col:50> 'uintmax_t':'unsigned long' <LValueToRValue>
| | | | |     | `-DeclRefExpr 0xc1b990 <col:50> 'const uintmax_t':'const unsigned long' lvalue Var 0xc19c10 '__c' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| | | | |     `-IntegerLiteral 0xc1b970 <col:57> 'int' 1
| | | | `-StringLiteral 0xc1ba28 <line:98:7> 'const char [27]' lvalue "overflow in multiplication"
| | | |-StaticAssertDecl 0xc1bbc0 <line:99:7, line:100:35> line:99:7
| | | | |-BinaryOperator 0xc1bb68 <col:21, <built-in>:79:24> 'bool' '<='
| | | | | |-BinaryOperator 0xc1bb10 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:99:21, col:28> 'unsigned long' '*'
| | | | | | |-ImplicitCastExpr 0xc1bae0 <col:21> 'uintmax_t':'unsigned long' <LValueToRValue>
| | | | | | | `-DeclRefExpr 0xc1baa0 <col:21> 'const uintmax_t':'const unsigned long' lvalue Var 0xc1b220 '__b0' 'const uintmax_t':'const unsigned long'
| | | | | | `-ImplicitCastExpr 0xc1baf8 <col:28> 'uintmax_t':'unsigned long' <LValueToRValue>
| | | | | |   `-DeclRefExpr 0xc1bac0 <col:28> 'const uintmax_t':'const unsigned long' lvalue Var 0xc19e18 '__a0' 'const uintmax_t':'const unsigned long'
| | | | | `-ImplicitCastExpr 0xc1bb50 <<built-in>:79:24> 'unsigned long' <IntegralCast>
| | | | |   `-IntegerLiteral 0xc1bb30 <col:24> 'long' 9223372036854775807
| | | | `-StringLiteral 0xc1bb88 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:100:7> 'const char [27]' lvalue "overflow in multiplication"
| | | |-StaticAssertDecl 0xc1bf18 <line:101:7, line:103:35> line:101:7
| | | | |-BinaryOperator 0xc1bec0 <col:21, line:102:35> 'bool' '<='
| | | | | |-BinaryOperator 0xc1bdb8 <line:101:21, col:51> 'unsigned long' '*'
| | | | | | |-ParenExpr 0xc1bd40 <col:21, col:47> 'unsigned long'
| | | | | | | `-BinaryOperator 0xc1bd20 <col:22, col:43> 'unsigned long' '+'
| | | | | | |   |-BinaryOperator 0xc1bc70 <col:22, col:29> 'unsigned long' '*'
| | | | | | |   | |-ImplicitCastExpr 0xc1bc40 <col:22> 'uintmax_t':'unsigned long' <LValueToRValue>
| | | | | | |   | | `-DeclRefExpr 0xc1bc00 <col:22> 'const uintmax_t':'const unsigned long' lvalue Var 0xc19e18 '__a0' 'const uintmax_t':'const unsigned long'
| | | | | | |   | `-ImplicitCastExpr 0xc1bc58 <col:29> 'uintmax_t':'unsigned long' <LValueToRValue>
| | | | | | |   |   `-DeclRefExpr 0xc1bc20 <col:29> 'const uintmax_t':'const unsigned long' lvalue Var 0xc1b428 '__b1' 'const uintmax_t':'const unsigned long'
| | | | | | |   `-BinaryOperator 0xc1bd00 <col:36, col:43> 'unsigned long' '*'
| | | | | | |     |-ImplicitCastExpr 0xc1bcd0 <col:36> 'uintmax_t':'unsigned long' <LValueToRValue>
| | | | | | |     | `-DeclRefExpr 0xc1bc90 <col:36> 'const uintmax_t':'const unsigned long' lvalue Var 0xc1b220 '__b0' 'const uintmax_t':'const unsigned long'
| | | | | | |     `-ImplicitCastExpr 0xc1bce8 <col:43> 'uintmax_t':'unsigned long' <LValueToRValue>
| | | | | | |       `-DeclRefExpr 0xc1bcb0 <col:43> 'const uintmax_t':'const unsigned long' lvalue Var 0xc19fd8 '__a1' 'const uintmax_t':'const unsigned long'
| | | | | | `-ImplicitCastExpr 0xc1bda0 <col:51> 'uintmax_t':'unsigned long' <LValueToRValue>
| | | | | |   `-DeclRefExpr 0xc1bd80 <col:51> 'const uintmax_t':'const unsigned long' lvalue Var 0xc19c10 '__c' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| | | | | `-BinaryOperator 0xc1bea0 <<built-in>:79:24, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:102:35> 'unsigned long' '-'
| | | | |   |-ImplicitCastExpr 0xc1be88 <<built-in>:79:24> 'unsigned long' <IntegralCast>
| | | | |   | `-IntegerLiteral 0xc1bdd8 <col:24> 'long' 9223372036854775807
| | | | |   `-BinaryOperator 0xc1be68 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:102:28, col:35> 'unsigned long' '*'
| | | | |     |-ImplicitCastExpr 0xc1be38 <col:28> 'uintmax_t':'unsigned long' <LValueToRValue>
| | | | |     | `-DeclRefExpr 0xc1bdf8 <col:28> 'const uintmax_t':'const unsigned long' lvalue Var 0xc1b220 '__b0' 'const uintmax_t':'const unsigned long'
| | | | |     `-ImplicitCastExpr 0xc1be50 <col:35> 'uintmax_t':'unsigned long' <LValueToRValue>
| | | | |       `-DeclRefExpr 0xc1be18 <col:35> 'const uintmax_t':'const unsigned long' lvalue Var 0xc19e18 '__a0' 'const uintmax_t':'const unsigned long'
| | | | `-StringLiteral 0xc1bee0 <line:103:7> 'const char [27]' lvalue "overflow in multiplication"
| | | |-AccessSpecDecl 0xc1bf58 <line:105:5, col:11> col:5 public
| | | `-VarDecl 0xc1bf90 <line:106:7, col:43> col:29 value 'const intmax_t':'const long' static cinit
| | |   `-BinaryOperator 0xc1c038 <col:37, col:43> 'long' '*'
| | |     |-DeclRefExpr 0xc1bff8 <col:37> 'intmax_t':'long' NonTypeTemplateParm 0xc196c8 '_Pn' 'intmax_t':'long'
| | |     `-DeclRefExpr 0xc1c018 <col:43> 'intmax_t':'long' NonTypeTemplateParm 0xc19738 '_Qn' 'intmax_t':'long'
| | |-ClassTemplateSpecializationDecl 0xd48688 <line:84:3, line:107:5> line:85:12 struct __safe_multiply definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument integral 1
| | | |-TemplateArgument integral 1
| | | |-CXXRecordDecl 0xd488d0 prev 0xd48688 <col:5, col:12> col:12 implicit struct __safe_multiply
| | | |-AccessSpecDecl 0xd48960 <line:87:5, col:12> col:5 private
| | | |-VarDecl 0xd48988 <line:88:7, col:73> col:30 referenced __c 'const uintmax_t':'const unsigned long' static cinit
| | | | `-BinaryOperator 0xd48a98 <col:36, col:73> 'uintmax_t':'unsigned long' '<<'
| | | |   |-CXXFunctionalCastExpr 0xd48a18 <col:36, col:47> 'uintmax_t':'unsigned long' functional cast to uintmax_t <NoOp>
| | | |   | `-ImplicitCastExpr 0xd48a00 <col:46> 'uintmax_t':'unsigned long' <IntegralCast> part_of_explicit_cast
| | | |   |   `-IntegerLiteral 0xc19c88 <col:46> 'int' 1
| | | |   `-ParenExpr 0xd48a78 <col:52, col:73> 'unsigned long'
| | | |     `-BinaryOperator 0xd48a58 <col:53, col:72> 'unsigned long' '*'
| | | |       |-UnaryExprOrTypeTraitExpr 0xc19cf8 <col:53, col:68> 'unsigned long' sizeof 'intmax_t':'long'
| | | |       `-ImplicitCastExpr 0xd48a40 <col:72> 'unsigned long' <IntegralCast>
| | | |         `-IntegerLiteral 0xc19d18 <col:72> 'int' 4
| | | |-VarDecl 0xd48b10 <line:90:7, col:64> col:30 referenced __a0 'const uintmax_t':'const unsigned long' static cinit
| | | | `-BinaryOperator 0xd48d70 <col:37, col:64> 'unsigned long' '%'
| | | |   |-ImplicitCastExpr 0xd48d58 <col:37, col:56> 'unsigned long' <IntegralCast>
| | | |   | `-ImplicitCastExpr 0xd48d08 <col:37, col:56> 'long':'long' <LValueToRValue>
| | | |   |   `-DeclRefExpr 0xd48cd8 <col:37, col:56> 'const long':'const long' lvalue Var 0xd2bfd8 'value' 'const long':'const long' non_odr_use_constant
| | | |   `-ImplicitCastExpr 0xd48d40 <col:64> 'uintmax_t':'unsigned long' <LValueToRValue>
| | | |     `-DeclRefExpr 0xd48d20 <col:64> 'const uintmax_t':'const unsigned long' lvalue Var 0xd48988 '__c' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| | | |-VarDecl 0xd48de8 <line:91:7, col:64> col:30 referenced __a1 'const uintmax_t':'const unsigned long' static cinit
| | | | `-BinaryOperator 0xd49040 <col:37, col:64> 'unsigned long' '/'
| | | |   |-ImplicitCastExpr 0xd49028 <col:37, col:56> 'unsigned long' <IntegralCast>
| | | |   | `-ImplicitCastExpr 0xd48fd8 <col:37, col:56> 'long':'long' <LValueToRValue>
| | | |   |   `-DeclRefExpr 0xd48fa8 <col:37, col:56> 'const long':'const long' lvalue Var 0xd2bfd8 'value' 'const long':'const long' non_odr_use_constant
| | | |   `-ImplicitCastExpr 0xd49010 <col:64> 'uintmax_t':'unsigned long' <LValueToRValue>
| | | |     `-DeclRefExpr 0xd48ff0 <col:64> 'const uintmax_t':'const unsigned long' lvalue Var 0xd48988 '__c' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| | | |-VarDecl 0xd490b8 <line:92:7, col:64> col:30 referenced __b0 'const uintmax_t':'const unsigned long' static cinit
| | | | `-BinaryOperator 0xd49310 <col:37, col:64> 'unsigned long' '%'
| | | |   |-ImplicitCastExpr 0xd492f8 <col:37, col:56> 'unsigned long' <IntegralCast>
| | | |   | `-ImplicitCastExpr 0xd492a8 <col:37, col:56> 'long':'long' <LValueToRValue>
| | | |   |   `-DeclRefExpr 0xd49278 <col:37, col:56> 'const long':'const long' lvalue Var 0xd2bfd8 'value' 'const long':'const long' non_odr_use_constant
| | | |   `-ImplicitCastExpr 0xd492e0 <col:64> 'uintmax_t':'unsigned long' <LValueToRValue>
| | | |     `-DeclRefExpr 0xd492c0 <col:64> 'const uintmax_t':'const unsigned long' lvalue Var 0xd48988 '__c' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| | | |-VarDecl 0xd49388 <line:93:7, col:64> col:30 referenced __b1 'const uintmax_t':'const unsigned long' static cinit
| | | | `-BinaryOperator 0xd495e0 <col:37, col:64> 'unsigned long' '/'
| | | |   |-ImplicitCastExpr 0xd495c8 <col:37, col:56> 'unsigned long' <IntegralCast>
| | | |   | `-ImplicitCastExpr 0xd49578 <col:37, col:56> 'long':'long' <LValueToRValue>
| | | |   |   `-DeclRefExpr 0xd49548 <col:37, col:56> 'const long':'const long' lvalue Var 0xd2bfd8 'value' 'const long':'const long' non_odr_use_constant
| | | |   `-ImplicitCastExpr 0xd495b0 <col:64> 'uintmax_t':'unsigned long' <LValueToRValue>
| | | |     `-DeclRefExpr 0xd49590 <col:64> 'const uintmax_t':'const unsigned long' lvalue Var 0xd48988 '__c' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| | | |-StaticAssertDecl 0xd497b8 <line:95:7, line:96:35> line:95:7
| | | | |-BinaryOperator 0xd49778 <col:21, col:42> 'bool' '||'
| | | | | |-BinaryOperator 0xd496c8 <col:21, col:29> 'bool' '=='
| | | | | | |-ImplicitCastExpr 0xd49698 <col:21> 'uintmax_t':'unsigned long' <LValueToRValue>
| | | | | | | `-DeclRefExpr 0xd49678 <col:21> 'const uintmax_t':'const unsigned long' lvalue Var 0xd48de8 '__a1' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| | | | | | `-ImplicitCastExpr 0xd496b0 <col:29> 'unsigned long' <IntegralCast>
| | | | | |   `-IntegerLiteral 0xc1b5f8 <col:29> 'int' 0
| | | | | `-BinaryOperator 0xd49758 <col:34, col:42> 'bool' '=='
| | | | |   |-ImplicitCastExpr 0xd49728 <col:34> 'uintmax_t':'unsigned long' <LValueToRValue>
| | | | |   | `-DeclRefExpr 0xd49708 <col:34> 'const uintmax_t':'const unsigned long' lvalue Var 0xd49388 '__b1' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| | | | |   `-ImplicitCastExpr 0xd49740 <col:42> 'unsigned long' <IntegralCast>
| | | | |     `-IntegerLiteral 0xc1b688 <col:42> 'int' 0
| | | | `-StringLiteral 0xc1b798 <line:96:7> 'const char [27]' lvalue "overflow in multiplication"
| | | |-StaticAssertDecl 0xd49a90 <line:97:7, line:98:35> line:97:7
| | | | |-BinaryOperator 0xd49a50 <col:21, col:58> 'bool' '<'
| | | | | |-BinaryOperator 0xd49998 <col:21, col:42> 'unsigned long' '+'
| | | | | | |-BinaryOperator 0xd498a8 <col:21, col:28> 'unsigned long' '*'
| | | | | | | |-ImplicitCastExpr 0xd49858 <col:21> 'uintmax_t':'unsigned long' <LValueToRValue>
| | | | | | | | `-DeclRefExpr 0xd49838 <col:21> 'const uintmax_t':'const unsigned long' lvalue Var 0xd48b10 '__a0' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| | | | | | | `-ImplicitCastExpr 0xd49890 <col:28> 'uintmax_t':'unsigned long' <LValueToRValue>
| | | | | | |   `-DeclRefExpr 0xd49870 <col:28> 'const uintmax_t':'const unsigned long' lvalue Var 0xd49388 '__b1' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| | | | | | `-BinaryOperator 0xd49978 <col:35, col:42> 'unsigned long' '*'
| | | | | |   |-ImplicitCastExpr 0xd49928 <col:35> 'uintmax_t':'unsigned long' <LValueToRValue>
| | | | | |   | `-DeclRefExpr 0xd49908 <col:35> 'const uintmax_t':'const unsigned long' lvalue Var 0xd490b8 '__b0' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| | | | | |   `-ImplicitCastExpr 0xd49960 <col:42> 'uintmax_t':'unsigned long' <LValueToRValue>
| | | | | |     `-DeclRefExpr 0xd49940 <col:42> 'const uintmax_t':'const unsigned long' lvalue Var 0xd48de8 '__a1' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| | | | | `-ParenExpr 0xd49a30 <col:49, col:58> 'uintmax_t':'unsigned long'
| | | | |   `-BinaryOperator 0xd49a10 <col:50, col:57> 'uintmax_t':'unsigned long' '>>'
| | | | |     |-ImplicitCastExpr 0xd499f8 <col:50> 'uintmax_t':'unsigned long' <LValueToRValue>
| | | | |     | `-DeclRefExpr 0xd499d8 <col:50> 'const uintmax_t':'const unsigned long' lvalue Var 0xd48988 '__c' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| | | | |     `-IntegerLiteral 0xc1b970 <col:57> 'int' 1
| | | | `-StringLiteral 0xc1ba28 <line:98:7> 'const char [27]' lvalue "overflow in multiplication"
| | | |-StaticAssertDecl 0xd49bf8 <line:99:7, line:100:35> line:99:7
| | | | |-BinaryOperator 0xd49bb8 <col:21, <built-in>:79:24> 'bool' '<='
| | | | | |-BinaryOperator 0xd49b80 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:99:21, col:28> 'unsigned long' '*'
| | | | | | |-ImplicitCastExpr 0xd49b30 <col:21> 'uintmax_t':'unsigned long' <LValueToRValue>
| | | | | | | `-DeclRefExpr 0xd49b10 <col:21> 'const uintmax_t':'const unsigned long' lvalue Var 0xd490b8 '__b0' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| | | | | | `-ImplicitCastExpr 0xd49b68 <col:28> 'uintmax_t':'unsigned long' <LValueToRValue>
| | | | | |   `-DeclRefExpr 0xd49b48 <col:28> 'const uintmax_t':'const unsigned long' lvalue Var 0xd48b10 '__a0' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| | | | | `-ImplicitCastExpr 0xd49ba0 <<built-in>:79:24> 'unsigned long' <IntegralCast>
| | | | |   `-IntegerLiteral 0xc1bb30 <col:24> 'long' 9223372036854775807
| | | | `-StringLiteral 0xc1bb88 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:100:7> 'const char [27]' lvalue "overflow in multiplication"
| | | |-StaticAssertDecl 0xd49fd8 <line:101:7, line:103:35> line:101:7
| | | | |-BinaryOperator 0xd49f98 <col:21, line:102:35> 'bool' '<='
| | | | | |-BinaryOperator 0xd49e70 <line:101:21, col:51> 'unsigned long' '*'
| | | | | | |-ParenExpr 0xd49df8 <col:21, col:47> 'unsigned long'
| | | | | | | `-BinaryOperator 0xd49dd8 <col:22, col:43> 'unsigned long' '+'
| | | | | | |   |-BinaryOperator 0xd49ce8 <col:22, col:29> 'unsigned long' '*'
| | | | | | |   | |-ImplicitCastExpr 0xd49c98 <col:22> 'uintmax_t':'unsigned long' <LValueToRValue>
| | | | | | |   | | `-DeclRefExpr 0xd49c78 <col:22> 'const uintmax_t':'const unsigned long' lvalue Var 0xd48b10 '__a0' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| | | | | | |   | `-ImplicitCastExpr 0xd49cd0 <col:29> 'uintmax_t':'unsigned long' <LValueToRValue>
| | | | | | |   |   `-DeclRefExpr 0xd49cb0 <col:29> 'const uintmax_t':'const unsigned long' lvalue Var 0xd49388 '__b1' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| | | | | | |   `-BinaryOperator 0xd49db8 <col:36, col:43> 'unsigned long' '*'
| | | | | | |     |-ImplicitCastExpr 0xd49d68 <col:36> 'uintmax_t':'unsigned long' <LValueToRValue>
| | | | | | |     | `-DeclRefExpr 0xd49d48 <col:36> 'const uintmax_t':'const unsigned long' lvalue Var 0xd490b8 '__b0' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| | | | | | |     `-ImplicitCastExpr 0xd49da0 <col:43> 'uintmax_t':'unsigned long' <LValueToRValue>
| | | | | | |       `-DeclRefExpr 0xd49d80 <col:43> 'const uintmax_t':'const unsigned long' lvalue Var 0xd48de8 '__a1' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| | | | | | `-ImplicitCastExpr 0xd49e58 <col:51> 'uintmax_t':'unsigned long' <LValueToRValue>
| | | | | |   `-DeclRefExpr 0xd49e38 <col:51> 'const uintmax_t':'const unsigned long' lvalue Var 0xd48988 '__c' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| | | | | `-BinaryOperator 0xd49f78 <<built-in>:79:24, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:102:35> 'unsigned long' '-'
| | | | |   |-ImplicitCastExpr 0xd49f60 <<built-in>:79:24> 'unsigned long' <IntegralCast>
| | | | |   | `-IntegerLiteral 0xc1bdd8 <col:24> 'long' 9223372036854775807
| | | | |   `-BinaryOperator 0xd49f40 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:102:28, col:35> 'unsigned long' '*'
| | | | |     |-ImplicitCastExpr 0xd49ef0 <col:28> 'uintmax_t':'unsigned long' <LValueToRValue>
| | | | |     | `-DeclRefExpr 0xd49ed0 <col:28> 'const uintmax_t':'const unsigned long' lvalue Var 0xd490b8 '__b0' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| | | | |     `-ImplicitCastExpr 0xd49f28 <col:35> 'uintmax_t':'unsigned long' <LValueToRValue>
| | | | |       `-DeclRefExpr 0xd49f08 <col:35> 'const uintmax_t':'const unsigned long' lvalue Var 0xd48b10 '__a0' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| | | | `-StringLiteral 0xc1bee0 <line:103:7> 'const char [27]' lvalue "overflow in multiplication"
| | | |-AccessSpecDecl 0xd4a018 <line:105:5, col:11> col:5 public
| | | `-VarDecl 0xd4a040 <line:106:7, col:43> col:29 referenced value 'const intmax_t':'const long' static cinit
| | |   `-BinaryOperator 0xd4a138 <col:37, col:43> 'long' '*'
| | |     |-SubstNonTypeTemplateParmExpr 0xd4a0d8 <col:37> 'long'
| | |     | `-IntegerLiteral 0xd4a0b8 <col:37> 'long' 1
| | |     `-SubstNonTypeTemplateParmExpr 0xd4a118 <col:43> 'long'
| | |       `-IntegerLiteral 0xd4a0f8 <col:43> 'long' 1
| | |-ClassTemplateSpecializationDecl 0xb96228 <line:84:3, line:107:5> line:85:12 struct __safe_multiply definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument integral 1000000000
| | | |-TemplateArgument integral 1
| | | |-CXXRecordDecl 0xb96470 prev 0xb96228 <col:5, col:12> col:12 implicit struct __safe_multiply
| | | |-AccessSpecDecl 0xb96500 <line:87:5, col:12> col:5 private
| | | |-VarDecl 0xb96528 <line:88:7, col:73> col:30 referenced __c 'const uintmax_t':'const unsigned long' static cinit
| | | | `-BinaryOperator 0xb96638 <col:36, col:73> 'uintmax_t':'unsigned long' '<<'
| | | |   |-CXXFunctionalCastExpr 0xb965b8 <col:36, col:47> 'uintmax_t':'unsigned long' functional cast to uintmax_t <NoOp>
| | | |   | `-ImplicitCastExpr 0xb965a0 <col:46> 'uintmax_t':'unsigned long' <IntegralCast> part_of_explicit_cast
| | | |   |   `-IntegerLiteral 0xc19c88 <col:46> 'int' 1
| | | |   `-ParenExpr 0xb96618 <col:52, col:73> 'unsigned long'
| | | |     `-BinaryOperator 0xb965f8 <col:53, col:72> 'unsigned long' '*'
| | | |       |-UnaryExprOrTypeTraitExpr 0xc19cf8 <col:53, col:68> 'unsigned long' sizeof 'intmax_t':'long'
| | | |       `-ImplicitCastExpr 0xb965e0 <col:72> 'unsigned long' <IntegralCast>
| | | |         `-IntegerLiteral 0xc19d18 <col:72> 'int' 4
| | | |-VarDecl 0xb966b0 <line:90:7, col:64> col:30 referenced __a0 'const uintmax_t':'const unsigned long' static cinit
| | | | `-BinaryOperator 0xb96910 <col:37, col:64> 'unsigned long' '%'
| | | |   |-ImplicitCastExpr 0xb968f8 <col:37, col:56> 'unsigned long' <IntegralCast>
| | | |   | `-ImplicitCastExpr 0xb968a8 <col:37, col:56> 'long':'long' <LValueToRValue>
| | | |   |   `-DeclRefExpr 0xb96878 <col:37, col:56> 'const long':'const long' lvalue Var 0xd2eba8 'value' 'const long':'const long' non_odr_use_constant
| | | |   `-ImplicitCastExpr 0xb968e0 <col:64> 'uintmax_t':'unsigned long' <LValueToRValue>
| | | |     `-DeclRefExpr 0xb968c0 <col:64> 'const uintmax_t':'const unsigned long' lvalue Var 0xb96528 '__c' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| | | |-VarDecl 0xb96988 <line:91:7, col:64> col:30 referenced __a1 'const uintmax_t':'const unsigned long' static cinit
| | | | `-BinaryOperator 0xb96be0 <col:37, col:64> 'unsigned long' '/'
| | | |   |-ImplicitCastExpr 0xb96bc8 <col:37, col:56> 'unsigned long' <IntegralCast>
| | | |   | `-ImplicitCastExpr 0xb96b78 <col:37, col:56> 'long':'long' <LValueToRValue>
| | | |   |   `-DeclRefExpr 0xb96b48 <col:37, col:56> 'const long':'const long' lvalue Var 0xd2eba8 'value' 'const long':'const long' non_odr_use_constant
| | | |   `-ImplicitCastExpr 0xb96bb0 <col:64> 'uintmax_t':'unsigned long' <LValueToRValue>
| | | |     `-DeclRefExpr 0xb96b90 <col:64> 'const uintmax_t':'const unsigned long' lvalue Var 0xb96528 '__c' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| | | |-VarDecl 0xb96c58 <line:92:7, col:64> col:30 referenced __b0 'const uintmax_t':'const unsigned long' static cinit
| | | | `-BinaryOperator 0xb96eb0 <col:37, col:64> 'unsigned long' '%'
| | | |   |-ImplicitCastExpr 0xb96e98 <col:37, col:56> 'unsigned long' <IntegralCast>
| | | |   | `-ImplicitCastExpr 0xb96e48 <col:37, col:56> 'long':'long' <LValueToRValue>
| | | |   |   `-DeclRefExpr 0xb96e18 <col:37, col:56> 'const long':'const long' lvalue Var 0xd2bfd8 'value' 'const long':'const long' non_odr_use_constant
| | | |   `-ImplicitCastExpr 0xb96e80 <col:64> 'uintmax_t':'unsigned long' <LValueToRValue>
| | | |     `-DeclRefExpr 0xb96e60 <col:64> 'const uintmax_t':'const unsigned long' lvalue Var 0xb96528 '__c' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| | | |-VarDecl 0xb96f28 <line:93:7, col:64> col:30 referenced __b1 'const uintmax_t':'const unsigned long' static cinit
| | | | `-BinaryOperator 0xb97180 <col:37, col:64> 'unsigned long' '/'
| | | |   |-ImplicitCastExpr 0xb97168 <col:37, col:56> 'unsigned long' <IntegralCast>
| | | |   | `-ImplicitCastExpr 0xb97118 <col:37, col:56> 'long':'long' <LValueToRValue>
| | | |   |   `-DeclRefExpr 0xb970e8 <col:37, col:56> 'const long':'const long' lvalue Var 0xd2bfd8 'value' 'const long':'const long' non_odr_use_constant
| | | |   `-ImplicitCastExpr 0xb97150 <col:64> 'uintmax_t':'unsigned long' <LValueToRValue>
| | | |     `-DeclRefExpr 0xb97130 <col:64> 'const uintmax_t':'const unsigned long' lvalue Var 0xb96528 '__c' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| | | |-StaticAssertDecl 0xb97358 <line:95:7, line:96:35> line:95:7
| | | | |-BinaryOperator 0xb97318 <col:21, col:42> 'bool' '||'
| | | | | |-BinaryOperator 0xb97268 <col:21, col:29> 'bool' '=='
| | | | | | |-ImplicitCastExpr 0xb97238 <col:21> 'uintmax_t':'unsigned long' <LValueToRValue>
| | | | | | | `-DeclRefExpr 0xb97218 <col:21> 'const uintmax_t':'const unsigned long' lvalue Var 0xb96988 '__a1' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| | | | | | `-ImplicitCastExpr 0xb97250 <col:29> 'unsigned long' <IntegralCast>
| | | | | |   `-IntegerLiteral 0xc1b5f8 <col:29> 'int' 0
| | | | | `-BinaryOperator 0xb972f8 <col:34, col:42> 'bool' '=='
| | | | |   |-ImplicitCastExpr 0xb972c8 <col:34> 'uintmax_t':'unsigned long' <LValueToRValue>
| | | | |   | `-DeclRefExpr 0xb972a8 <col:34> 'const uintmax_t':'const unsigned long' lvalue Var 0xb96f28 '__b1' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| | | | |   `-ImplicitCastExpr 0xb972e0 <col:42> 'unsigned long' <IntegralCast>
| | | | |     `-IntegerLiteral 0xc1b688 <col:42> 'int' 0
| | | | `-StringLiteral 0xc1b798 <line:96:7> 'const char [27]' lvalue "overflow in multiplication"
| | | |-StaticAssertDecl 0xb97630 <line:97:7, line:98:35> line:97:7
| | | | |-BinaryOperator 0xb975f0 <col:21, col:58> 'bool' '<'
| | | | | |-BinaryOperator 0xb97538 <col:21, col:42> 'unsigned long' '+'
| | | | | | |-BinaryOperator 0xb97448 <col:21, col:28> 'unsigned long' '*'
| | | | | | | |-ImplicitCastExpr 0xb973f8 <col:21> 'uintmax_t':'unsigned long' <LValueToRValue>
| | | | | | | | `-DeclRefExpr 0xb973d8 <col:21> 'const uintmax_t':'const unsigned long' lvalue Var 0xb966b0 '__a0' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| | | | | | | `-ImplicitCastExpr 0xb97430 <col:28> 'uintmax_t':'unsigned long' <LValueToRValue>
| | | | | | |   `-DeclRefExpr 0xb97410 <col:28> 'const uintmax_t':'const unsigned long' lvalue Var 0xb96f28 '__b1' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| | | | | | `-BinaryOperator 0xb97518 <col:35, col:42> 'unsigned long' '*'
| | | | | |   |-ImplicitCastExpr 0xb974c8 <col:35> 'uintmax_t':'unsigned long' <LValueToRValue>
| | | | | |   | `-DeclRefExpr 0xb974a8 <col:35> 'const uintmax_t':'const unsigned long' lvalue Var 0xb96c58 '__b0' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| | | | | |   `-ImplicitCastExpr 0xb97500 <col:42> 'uintmax_t':'unsigned long' <LValueToRValue>
| | | | | |     `-DeclRefExpr 0xb974e0 <col:42> 'const uintmax_t':'const unsigned long' lvalue Var 0xb96988 '__a1' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| | | | | `-ParenExpr 0xb975d0 <col:49, col:58> 'uintmax_t':'unsigned long'
| | | | |   `-BinaryOperator 0xb975b0 <col:50, col:57> 'uintmax_t':'unsigned long' '>>'
| | | | |     |-ImplicitCastExpr 0xb97598 <col:50> 'uintmax_t':'unsigned long' <LValueToRValue>
| | | | |     | `-DeclRefExpr 0xb97578 <col:50> 'const uintmax_t':'const unsigned long' lvalue Var 0xb96528 '__c' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| | | | |     `-IntegerLiteral 0xc1b970 <col:57> 'int' 1
| | | | `-StringLiteral 0xc1ba28 <line:98:7> 'const char [27]' lvalue "overflow in multiplication"
| | | |-StaticAssertDecl 0xb97798 <line:99:7, line:100:35> line:99:7
| | | | |-BinaryOperator 0xb97758 <col:21, <built-in>:79:24> 'bool' '<='
| | | | | |-BinaryOperator 0xb97720 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:99:21, col:28> 'unsigned long' '*'
| | | | | | |-ImplicitCastExpr 0xb976d0 <col:21> 'uintmax_t':'unsigned long' <LValueToRValue>
| | | | | | | `-DeclRefExpr 0xb976b0 <col:21> 'const uintmax_t':'const unsigned long' lvalue Var 0xb96c58 '__b0' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| | | | | | `-ImplicitCastExpr 0xb97708 <col:28> 'uintmax_t':'unsigned long' <LValueToRValue>
| | | | | |   `-DeclRefExpr 0xb976e8 <col:28> 'const uintmax_t':'const unsigned long' lvalue Var 0xb966b0 '__a0' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| | | | | `-ImplicitCastExpr 0xb97740 <<built-in>:79:24> 'unsigned long' <IntegralCast>
| | | | |   `-IntegerLiteral 0xc1bb30 <col:24> 'long' 9223372036854775807
| | | | `-StringLiteral 0xc1bb88 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:100:7> 'const char [27]' lvalue "overflow in multiplication"
| | | |-StaticAssertDecl 0xb97b78 <line:101:7, line:103:35> line:101:7
| | | | |-BinaryOperator 0xb97b38 <col:21, line:102:35> 'bool' '<='
| | | | | |-BinaryOperator 0xb97a10 <line:101:21, col:51> 'unsigned long' '*'
| | | | | | |-ParenExpr 0xb97998 <col:21, col:47> 'unsigned long'
| | | | | | | `-BinaryOperator 0xb97978 <col:22, col:43> 'unsigned long' '+'
| | | | | | |   |-BinaryOperator 0xb97888 <col:22, col:29> 'unsigned long' '*'
| | | | | | |   | |-ImplicitCastExpr 0xb97838 <col:22> 'uintmax_t':'unsigned long' <LValueToRValue>
| | | | | | |   | | `-DeclRefExpr 0xb97818 <col:22> 'const uintmax_t':'const unsigned long' lvalue Var 0xb966b0 '__a0' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| | | | | | |   | `-ImplicitCastExpr 0xb97870 <col:29> 'uintmax_t':'unsigned long' <LValueToRValue>
| | | | | | |   |   `-DeclRefExpr 0xb97850 <col:29> 'const uintmax_t':'const unsigned long' lvalue Var 0xb96f28 '__b1' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| | | | | | |   `-BinaryOperator 0xb97958 <col:36, col:43> 'unsigned long' '*'
| | | | | | |     |-ImplicitCastExpr 0xb97908 <col:36> 'uintmax_t':'unsigned long' <LValueToRValue>
| | | | | | |     | `-DeclRefExpr 0xb978e8 <col:36> 'const uintmax_t':'const unsigned long' lvalue Var 0xb96c58 '__b0' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| | | | | | |     `-ImplicitCastExpr 0xb97940 <col:43> 'uintmax_t':'unsigned long' <LValueToRValue>
| | | | | | |       `-DeclRefExpr 0xb97920 <col:43> 'const uintmax_t':'const unsigned long' lvalue Var 0xb96988 '__a1' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| | | | | | `-ImplicitCastExpr 0xb979f8 <col:51> 'uintmax_t':'unsigned long' <LValueToRValue>
| | | | | |   `-DeclRefExpr 0xb979d8 <col:51> 'const uintmax_t':'const unsigned long' lvalue Var 0xb96528 '__c' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| | | | | `-BinaryOperator 0xb97b18 <<built-in>:79:24, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:102:35> 'unsigned long' '-'
| | | | |   |-ImplicitCastExpr 0xb97b00 <<built-in>:79:24> 'unsigned long' <IntegralCast>
| | | | |   | `-IntegerLiteral 0xc1bdd8 <col:24> 'long' 9223372036854775807
| | | | |   `-BinaryOperator 0xb97ae0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:102:28, col:35> 'unsigned long' '*'
| | | | |     |-ImplicitCastExpr 0xb97a90 <col:28> 'uintmax_t':'unsigned long' <LValueToRValue>
| | | | |     | `-DeclRefExpr 0xb97a70 <col:28> 'const uintmax_t':'const unsigned long' lvalue Var 0xb96c58 '__b0' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| | | | |     `-ImplicitCastExpr 0xb97ac8 <col:35> 'uintmax_t':'unsigned long' <LValueToRValue>
| | | | |       `-DeclRefExpr 0xb97aa8 <col:35> 'const uintmax_t':'const unsigned long' lvalue Var 0xb966b0 '__a0' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| | | | `-StringLiteral 0xc1bee0 <line:103:7> 'const char [27]' lvalue "overflow in multiplication"
| | | |-AccessSpecDecl 0xb97bb8 <line:105:5, col:11> col:5 public
| | | `-VarDecl 0xb97be0 <line:106:7, col:43> col:29 referenced value 'const intmax_t':'const long' static cinit
| | |   `-BinaryOperator 0xb97cd8 <col:37, col:43> 'long' '*'
| | |     |-SubstNonTypeTemplateParmExpr 0xb97c78 <col:37> 'long'
| | |     | `-IntegerLiteral 0xb97c58 <col:37> 'long' 1000000000
| | |     `-SubstNonTypeTemplateParmExpr 0xb97cb8 <col:43> 'long'
| | |       `-IntegerLiteral 0xb97c98 <col:43> 'long' 1
| | `-ClassTemplateSpecializationDecl 0xda8610 <line:84:3, line:107:5> line:85:12 struct __safe_multiply definition
| |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-TemplateArgument integral 1
| |   |-TemplateArgument integral 1000000000
| |   |-CXXRecordDecl 0xda8860 prev 0xda8610 <col:5, col:12> col:12 implicit struct __safe_multiply
| |   |-AccessSpecDecl 0xda88f0 <line:87:5, col:12> col:5 private
| |   |-VarDecl 0xda8918 <line:88:7, col:73> col:30 referenced __c 'const uintmax_t':'const unsigned long' static cinit
| |   | `-BinaryOperator 0xda8a28 <col:36, col:73> 'uintmax_t':'unsigned long' '<<'
| |   |   |-CXXFunctionalCastExpr 0xda89a8 <col:36, col:47> 'uintmax_t':'unsigned long' functional cast to uintmax_t <NoOp>
| |   |   | `-ImplicitCastExpr 0xda8990 <col:46> 'uintmax_t':'unsigned long' <IntegralCast> part_of_explicit_cast
| |   |   |   `-IntegerLiteral 0xc19c88 <col:46> 'int' 1
| |   |   `-ParenExpr 0xda8a08 <col:52, col:73> 'unsigned long'
| |   |     `-BinaryOperator 0xda89e8 <col:53, col:72> 'unsigned long' '*'
| |   |       |-UnaryExprOrTypeTraitExpr 0xc19cf8 <col:53, col:68> 'unsigned long' sizeof 'intmax_t':'long'
| |   |       `-ImplicitCastExpr 0xda89d0 <col:72> 'unsigned long' <IntegralCast>
| |   |         `-IntegerLiteral 0xc19d18 <col:72> 'int' 4
| |   |-VarDecl 0xda8aa0 <line:90:7, col:64> col:30 referenced __a0 'const uintmax_t':'const unsigned long' static cinit
| |   | `-BinaryOperator 0xda8d10 <col:37, col:64> 'unsigned long' '%'
| |   |   |-ImplicitCastExpr 0xda8cf8 <col:37, col:56> 'unsigned long' <IntegralCast>
| |   |   | `-ImplicitCastExpr 0xda8ca8 <col:37, col:56> 'long':'long' <LValueToRValue>
| |   |   |   `-DeclRefExpr 0xda8c78 <col:37, col:56> 'const long':'const long' lvalue Var 0xd2bfd8 'value' 'const long':'const long' non_odr_use_constant
| |   |   `-ImplicitCastExpr 0xda8ce0 <col:64> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |     `-DeclRefExpr 0xda8cc0 <col:64> 'const uintmax_t':'const unsigned long' lvalue Var 0xda8918 '__c' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| |   |-VarDecl 0xda8d88 <line:91:7, col:64> col:30 referenced __a1 'const uintmax_t':'const unsigned long' static cinit
| |   | `-BinaryOperator 0xda8fe0 <col:37, col:64> 'unsigned long' '/'
| |   |   |-ImplicitCastExpr 0xda8fc8 <col:37, col:56> 'unsigned long' <IntegralCast>
| |   |   | `-ImplicitCastExpr 0xda8f78 <col:37, col:56> 'long':'long' <LValueToRValue>
| |   |   |   `-DeclRefExpr 0xda8f48 <col:37, col:56> 'const long':'const long' lvalue Var 0xd2bfd8 'value' 'const long':'const long' non_odr_use_constant
| |   |   `-ImplicitCastExpr 0xda8fb0 <col:64> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |     `-DeclRefExpr 0xda8f90 <col:64> 'const uintmax_t':'const unsigned long' lvalue Var 0xda8918 '__c' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| |   |-VarDecl 0xda9058 <line:92:7, col:64> col:30 referenced __b0 'const uintmax_t':'const unsigned long' static cinit
| |   | `-BinaryOperator 0xda92b0 <col:37, col:64> 'unsigned long' '%'
| |   |   |-ImplicitCastExpr 0xda9298 <col:37, col:56> 'unsigned long' <IntegralCast>
| |   |   | `-ImplicitCastExpr 0xda9248 <col:37, col:56> 'long':'long' <LValueToRValue>
| |   |   |   `-DeclRefExpr 0xda9218 <col:37, col:56> 'const long':'const long' lvalue Var 0xd2eba8 'value' 'const long':'const long' non_odr_use_constant
| |   |   `-ImplicitCastExpr 0xda9280 <col:64> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |     `-DeclRefExpr 0xda9260 <col:64> 'const uintmax_t':'const unsigned long' lvalue Var 0xda8918 '__c' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| |   |-VarDecl 0xda9328 <line:93:7, col:64> col:30 referenced __b1 'const uintmax_t':'const unsigned long' static cinit
| |   | `-BinaryOperator 0xda9580 <col:37, col:64> 'unsigned long' '/'
| |   |   |-ImplicitCastExpr 0xda9568 <col:37, col:56> 'unsigned long' <IntegralCast>
| |   |   | `-ImplicitCastExpr 0xda9518 <col:37, col:56> 'long':'long' <LValueToRValue>
| |   |   |   `-DeclRefExpr 0xda94e8 <col:37, col:56> 'const long':'const long' lvalue Var 0xd2eba8 'value' 'const long':'const long' non_odr_use_constant
| |   |   `-ImplicitCastExpr 0xda9550 <col:64> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |     `-DeclRefExpr 0xda9530 <col:64> 'const uintmax_t':'const unsigned long' lvalue Var 0xda8918 '__c' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| |   |-StaticAssertDecl 0xda9758 <line:95:7, line:96:35> line:95:7
| |   | |-BinaryOperator 0xda9718 <col:21, col:42> 'bool' '||'
| |   | | |-BinaryOperator 0xda9668 <col:21, col:29> 'bool' '=='
| |   | | | |-ImplicitCastExpr 0xda9638 <col:21> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   | | | | `-DeclRefExpr 0xda9618 <col:21> 'const uintmax_t':'const unsigned long' lvalue Var 0xda8d88 '__a1' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| |   | | | `-ImplicitCastExpr 0xda9650 <col:29> 'unsigned long' <IntegralCast>
| |   | | |   `-IntegerLiteral 0xc1b5f8 <col:29> 'int' 0
| |   | | `-BinaryOperator 0xda96f8 <col:34, col:42> 'bool' '=='
| |   | |   |-ImplicitCastExpr 0xda96c8 <col:34> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   | |   | `-DeclRefExpr 0xda96a8 <col:34> 'const uintmax_t':'const unsigned long' lvalue Var 0xda9328 '__b1' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| |   | |   `-ImplicitCastExpr 0xda96e0 <col:42> 'unsigned long' <IntegralCast>
| |   | |     `-IntegerLiteral 0xc1b688 <col:42> 'int' 0
| |   | `-StringLiteral 0xc1b798 <line:96:7> 'const char [27]' lvalue "overflow in multiplication"
| |   |-StaticAssertDecl 0xda9a30 <line:97:7, line:98:35> line:97:7
| |   | |-BinaryOperator 0xda99f0 <col:21, col:58> 'bool' '<'
| |   | | |-BinaryOperator 0xda9938 <col:21, col:42> 'unsigned long' '+'
| |   | | | |-BinaryOperator 0xda9848 <col:21, col:28> 'unsigned long' '*'
| |   | | | | |-ImplicitCastExpr 0xda97f8 <col:21> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   | | | | | `-DeclRefExpr 0xda97d8 <col:21> 'const uintmax_t':'const unsigned long' lvalue Var 0xda8aa0 '__a0' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| |   | | | | `-ImplicitCastExpr 0xda9830 <col:28> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   | | | |   `-DeclRefExpr 0xda9810 <col:28> 'const uintmax_t':'const unsigned long' lvalue Var 0xda9328 '__b1' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| |   | | | `-BinaryOperator 0xda9918 <col:35, col:42> 'unsigned long' '*'
| |   | | |   |-ImplicitCastExpr 0xda98c8 <col:35> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   | | |   | `-DeclRefExpr 0xda98a8 <col:35> 'const uintmax_t':'const unsigned long' lvalue Var 0xda9058 '__b0' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| |   | | |   `-ImplicitCastExpr 0xda9900 <col:42> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   | | |     `-DeclRefExpr 0xda98e0 <col:42> 'const uintmax_t':'const unsigned long' lvalue Var 0xda8d88 '__a1' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| |   | | `-ParenExpr 0xda99d0 <col:49, col:58> 'uintmax_t':'unsigned long'
| |   | |   `-BinaryOperator 0xda99b0 <col:50, col:57> 'uintmax_t':'unsigned long' '>>'
| |   | |     |-ImplicitCastExpr 0xda9998 <col:50> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   | |     | `-DeclRefExpr 0xda9978 <col:50> 'const uintmax_t':'const unsigned long' lvalue Var 0xda8918 '__c' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| |   | |     `-IntegerLiteral 0xc1b970 <col:57> 'int' 1
| |   | `-StringLiteral 0xc1ba28 <line:98:7> 'const char [27]' lvalue "overflow in multiplication"
| |   |-StaticAssertDecl 0xda9b98 <line:99:7, line:100:35> line:99:7
| |   | |-BinaryOperator 0xda9b58 <col:21, <built-in>:79:24> 'bool' '<='
| |   | | |-BinaryOperator 0xda9b20 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:99:21, col:28> 'unsigned long' '*'
| |   | | | |-ImplicitCastExpr 0xda9ad0 <col:21> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   | | | | `-DeclRefExpr 0xda9ab0 <col:21> 'const uintmax_t':'const unsigned long' lvalue Var 0xda9058 '__b0' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| |   | | | `-ImplicitCastExpr 0xda9b08 <col:28> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   | | |   `-DeclRefExpr 0xda9ae8 <col:28> 'const uintmax_t':'const unsigned long' lvalue Var 0xda8aa0 '__a0' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| |   | | `-ImplicitCastExpr 0xda9b40 <<built-in>:79:24> 'unsigned long' <IntegralCast>
| |   | |   `-IntegerLiteral 0xc1bb30 <col:24> 'long' 9223372036854775807
| |   | `-StringLiteral 0xc1bb88 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:100:7> 'const char [27]' lvalue "overflow in multiplication"
| |   |-StaticAssertDecl 0xda9f78 <line:101:7, line:103:35> line:101:7
| |   | |-BinaryOperator 0xda9f38 <col:21, line:102:35> 'bool' '<='
| |   | | |-BinaryOperator 0xda9e10 <line:101:21, col:51> 'unsigned long' '*'
| |   | | | |-ParenExpr 0xda9d98 <col:21, col:47> 'unsigned long'
| |   | | | | `-BinaryOperator 0xda9d78 <col:22, col:43> 'unsigned long' '+'
| |   | | | |   |-BinaryOperator 0xda9c88 <col:22, col:29> 'unsigned long' '*'
| |   | | | |   | |-ImplicitCastExpr 0xda9c38 <col:22> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   | | | |   | | `-DeclRefExpr 0xda9c18 <col:22> 'const uintmax_t':'const unsigned long' lvalue Var 0xda8aa0 '__a0' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| |   | | | |   | `-ImplicitCastExpr 0xda9c70 <col:29> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   | | | |   |   `-DeclRefExpr 0xda9c50 <col:29> 'const uintmax_t':'const unsigned long' lvalue Var 0xda9328 '__b1' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| |   | | | |   `-BinaryOperator 0xda9d58 <col:36, col:43> 'unsigned long' '*'
| |   | | | |     |-ImplicitCastExpr 0xda9d08 <col:36> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   | | | |     | `-DeclRefExpr 0xda9ce8 <col:36> 'const uintmax_t':'const unsigned long' lvalue Var 0xda9058 '__b0' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| |   | | | |     `-ImplicitCastExpr 0xda9d40 <col:43> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   | | | |       `-DeclRefExpr 0xda9d20 <col:43> 'const uintmax_t':'const unsigned long' lvalue Var 0xda8d88 '__a1' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| |   | | | `-ImplicitCastExpr 0xda9df8 <col:51> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   | | |   `-DeclRefExpr 0xda9dd8 <col:51> 'const uintmax_t':'const unsigned long' lvalue Var 0xda8918 '__c' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| |   | | `-BinaryOperator 0xda9f18 <<built-in>:79:24, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:102:35> 'unsigned long' '-'
| |   | |   |-ImplicitCastExpr 0xda9f00 <<built-in>:79:24> 'unsigned long' <IntegralCast>
| |   | |   | `-IntegerLiteral 0xc1bdd8 <col:24> 'long' 9223372036854775807
| |   | |   `-BinaryOperator 0xda9ee0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:102:28, col:35> 'unsigned long' '*'
| |   | |     |-ImplicitCastExpr 0xda9e90 <col:28> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   | |     | `-DeclRefExpr 0xda9e70 <col:28> 'const uintmax_t':'const unsigned long' lvalue Var 0xda9058 '__b0' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| |   | |     `-ImplicitCastExpr 0xda9ec8 <col:35> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   | |       `-DeclRefExpr 0xda9ea8 <col:35> 'const uintmax_t':'const unsigned long' lvalue Var 0xda8aa0 '__a0' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| |   | `-StringLiteral 0xc1bee0 <line:103:7> 'const char [27]' lvalue "overflow in multiplication"
| |   |-AccessSpecDecl 0xda9fb8 <line:105:5, col:11> col:5 public
| |   `-VarDecl 0xda9fe0 <line:106:7, col:43> col:29 referenced value 'const intmax_t':'const long' static cinit
| |     `-BinaryOperator 0xdaa0d8 <col:37, col:43> 'long' '*'
| |       |-SubstNonTypeTemplateParmExpr 0xdaa078 <col:37> 'long'
| |       | `-IntegerLiteral 0xdaa058 <col:37> 'long' 1
| |       `-SubstNonTypeTemplateParmExpr 0xdaa0b8 <col:43> 'long'
| |         `-IntegerLiteral 0xdaa098 <col:43> 'long' 1000000000
| |-ClassTemplateDecl 0xc1c2f8 <line:111:3, line:115:7> line:112:12 __big_less
| | |-NonTypeTemplateParmDecl 0xc1c080 <line:111:12, col:22> col:22 referenced 'uintmax_t':'unsigned long' depth 0 index 0 __hi1
| | |-NonTypeTemplateParmDecl 0xc1c0f0 <col:29, col:39> col:39 referenced 'uintmax_t':'unsigned long' depth 0 index 1 __lo1
| | |-NonTypeTemplateParmDecl 0xc1c160 <col:46, col:56> col:56 referenced 'uintmax_t':'unsigned long' depth 0 index 2 __hi2
| | |-NonTypeTemplateParmDecl 0xc1c1d0 <col:63, col:73> col:73 referenced 'uintmax_t':'unsigned long' depth 0 index 3 __lo2
| | `-CXXRecordDecl 0xc1c268 <line:112:5, line:115:7> line:112:12 struct __big_less definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'integral_constant<bool, (__hi1 < __hi2 || (__hi1 == __hi2 && __lo1 < __lo2))>'
| |   `-CXXRecordDecl 0xc1c970 <col:5, col:12> col:12 implicit struct __big_less
| |-ClassTemplateDecl 0xc1cca0 <line:117:3, line:123:5> line:118:12 __big_add
| | |-NonTypeTemplateParmDecl 0xc1ca28 <line:117:12, col:22> col:22 referenced 'uintmax_t':'unsigned long' depth 0 index 0 __hi1
| | |-NonTypeTemplateParmDecl 0xc1ca98 <col:29, col:39> col:39 referenced 'uintmax_t':'unsigned long' depth 0 index 1 __lo1
| | |-NonTypeTemplateParmDecl 0xc1cb08 <col:46, col:56> col:56 referenced 'uintmax_t':'unsigned long' depth 0 index 2 __hi2
| | |-NonTypeTemplateParmDecl 0xc1cb78 <col:63, col:73> col:73 referenced 'uintmax_t':'unsigned long' depth 0 index 3 __lo2
| | `-CXXRecordDecl 0xc1cc10 <line:118:5, line:123:5> line:118:12 struct __big_add definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-CXXRecordDecl 0xc1d010 <col:5, col:12> col:12 implicit struct __big_add
| |   |-VarDecl 0xc1d0b0 <line:120:7, col:49> col:34 __lo 'const uintmax_t':'const unsigned long' static constexpr cinit
| |   | `-BinaryOperator 0xc1d158 <col:41, col:49> 'unsigned long' '+'
| |   |   |-DeclRefExpr 0xc1d118 <col:41> 'uintmax_t':'unsigned long' NonTypeTemplateParm 0xc1ca98 '__lo1' 'uintmax_t':'unsigned long'
| |   |   `-DeclRefExpr 0xc1d138 <col:49> 'uintmax_t':'unsigned long' NonTypeTemplateParm 0xc1cb78 '__lo2' 'uintmax_t':'unsigned long'
| |   `-VarDecl 0xc1d188 <line:121:7, line:122:30> line:121:34 __hi 'const uintmax_t':'const unsigned long' static constexpr cinit
| |     `-ParenExpr 0xc1d348 <col:41, line:122:30> 'unsigned long'
| |       `-BinaryOperator 0xc1d328 <line:121:42, line:122:29> 'unsigned long' '+'
| |         |-BinaryOperator 0xc1d230 <line:121:42, col:50> 'unsigned long' '+'
| |         | |-DeclRefExpr 0xc1d1f0 <col:42> 'uintmax_t':'unsigned long' NonTypeTemplateParm 0xc1ca28 '__hi1' 'uintmax_t':'unsigned long'
| |         | `-DeclRefExpr 0xc1d210 <col:50> 'uintmax_t':'unsigned long' NonTypeTemplateParm 0xc1cb08 '__hi2' 'uintmax_t':'unsigned long'
| |         `-ImplicitCastExpr 0xc1d310 <line:122:7, col:29> 'unsigned long' <IntegralCast>
| |           `-ParenExpr 0xc1d2f0 <col:7, col:29> 'bool'
| |             `-BinaryOperator 0xc1d2d0 <col:8, col:24> 'bool' '<'
| |               |-BinaryOperator 0xc1d2b0 <col:8, col:16> 'unsigned long' '+'
| |               | |-DeclRefExpr 0xc1d250 <col:8> 'uintmax_t':'unsigned long' NonTypeTemplateParm 0xc1ca98 '__lo1' 'uintmax_t':'unsigned long'
| |               | `-DeclRefExpr 0xc1d270 <col:16> 'uintmax_t':'unsigned long' NonTypeTemplateParm 0xc1cb78 '__lo2' 'uintmax_t':'unsigned long'
| |               `-DeclRefExpr 0xc1d290 <col:24> 'uintmax_t':'unsigned long' NonTypeTemplateParm 0xc1ca98 '__lo1' 'uintmax_t':'unsigned long'
| |-ClassTemplateDecl 0xc1d608 <line:126:3, line:134:5> line:127:12 __big_sub
| | |-NonTypeTemplateParmDecl 0xc1d390 <line:126:12, col:22> col:22 referenced 'uintmax_t':'unsigned long' depth 0 index 0 __hi1
| | |-NonTypeTemplateParmDecl 0xc1d400 <col:29, col:39> col:39 referenced 'uintmax_t':'unsigned long' depth 0 index 1 __lo1
| | |-NonTypeTemplateParmDecl 0xc1d470 <col:46, col:56> col:56 referenced 'uintmax_t':'unsigned long' depth 0 index 2 __hi2
| | |-NonTypeTemplateParmDecl 0xc1d4e0 <col:63, col:73> col:73 referenced 'uintmax_t':'unsigned long' depth 0 index 3 __lo2
| | `-CXXRecordDecl 0xc1d578 <line:127:5, line:134:5> line:127:12 struct __big_sub definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-CXXRecordDecl 0xc1d980 <col:5, col:12> col:12 implicit struct __big_sub
| |   |-StaticAssertDecl 0xc1dcc8 <line:129:7, line:130:31> line:129:7
| |   | |-UnaryOperator 0xc1dc08 <col:21, col:62> '<dependent type>' prefix '!' cannot overflow
| |   | | `-DependentScopeDeclRefExpr 0xc1dbd0 <col:22, col:62> '<dependent type>' lvalue
| |   | `-StringLiteral 0xc1dc98 <line:130:7> 'const char [23]' lvalue "Internal library error"
| |   |-VarDecl 0xc1dd18 <line:131:7, col:49> col:34 __lo 'const uintmax_t':'const unsigned long' static constexpr cinit
| |   | `-BinaryOperator 0xc1ddc0 <col:41, col:49> 'unsigned long' '-'
| |   |   |-DeclRefExpr 0xc1dd80 <col:41> 'uintmax_t':'unsigned long' NonTypeTemplateParm 0xc1d400 '__lo1' 'uintmax_t':'unsigned long'
| |   |   `-DeclRefExpr 0xc1dda0 <col:49> 'uintmax_t':'unsigned long' NonTypeTemplateParm 0xc1d4e0 '__lo2' 'uintmax_t':'unsigned long'
| |   `-VarDecl 0xc1ddf0 <line:132:7, line:133:22> line:132:34 __hi 'const uintmax_t':'const unsigned long' static constexpr cinit
| |     `-ParenExpr 0xc1df70 <col:41, line:133:22> 'unsigned long'
| |       `-BinaryOperator 0xc1df50 <line:132:42, line:133:21> 'unsigned long' '-'
| |         |-BinaryOperator 0xc1de98 <line:132:42, col:50> 'unsigned long' '-'
| |         | |-DeclRefExpr 0xc1de58 <col:42> 'uintmax_t':'unsigned long' NonTypeTemplateParm 0xc1d390 '__hi1' 'uintmax_t':'unsigned long'
| |         | `-DeclRefExpr 0xc1de78 <col:50> 'uintmax_t':'unsigned long' NonTypeTemplateParm 0xc1d470 '__hi2' 'uintmax_t':'unsigned long'
| |         `-ImplicitCastExpr 0xc1df38 <line:133:7, col:21> 'unsigned long' <IntegralCast>
| |           `-ParenExpr 0xc1df18 <col:7, col:21> 'bool'
| |             `-BinaryOperator 0xc1def8 <col:8, col:16> 'bool' '<'
| |               |-DeclRefExpr 0xc1deb8 <col:8> 'uintmax_t':'unsigned long' NonTypeTemplateParm 0xc1d400 '__lo1' 'uintmax_t':'unsigned long'
| |               `-DeclRefExpr 0xc1ded8 <col:16> 'uintmax_t':'unsigned long' NonTypeTemplateParm 0xc1d4e0 '__lo2' 'uintmax_t':'unsigned long'
| |-ClassTemplateDecl 0xc1e140 <line:137:3, line:158:5> line:138:12 __big_mul
| | |-NonTypeTemplateParmDecl 0xc1dfb8 <line:137:12, col:22> col:22 referenced 'uintmax_t':'unsigned long' depth 0 index 0 __x
| | |-NonTypeTemplateParmDecl 0xc1e028 <col:27, col:37> col:37 referenced 'uintmax_t':'unsigned long' depth 0 index 1 __y
| | `-CXXRecordDecl 0xc1e0b0 <line:138:5, line:158:5> line:138:12 struct __big_mul definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-CXXRecordDecl 0xc1e410 <col:5, col:12> col:12 implicit struct __big_mul
| |   |-AccessSpecDecl 0xc1e4a0 <line:140:5, col:12> col:5 private
| |   |-VarDecl 0xc1e4d8 <line:141:7, col:77> col:34 referenced __c 'const uintmax_t':'const unsigned long' static constexpr cinit
| |   | `-BinaryOperator 0xc1e658 <col:40, col:77> 'uintmax_t':'unsigned long' '<<'
| |   |   |-CXXFunctionalCastExpr 0xc1e588 <col:40, col:51> 'uintmax_t':'unsigned long' functional cast to uintmax_t <NoOp>
| |   |   | `-ImplicitCastExpr 0xc1e570 <col:50> 'uintmax_t':'unsigned long' <IntegralCast> part_of_explicit_cast
| |   |   |   `-IntegerLiteral 0xc1e550 <col:50> 'int' 1
| |   |   `-ParenExpr 0xc1e638 <col:56, col:77> 'unsigned long'
| |   |     `-BinaryOperator 0xc1e618 <col:57, col:76> 'unsigned long' '*'
| |   |       |-UnaryExprOrTypeTraitExpr 0xc1e5c0 <col:57, col:72> 'unsigned long' sizeof 'intmax_t':'long'
| |   |       `-ImplicitCastExpr 0xc1e600 <col:76> 'unsigned long' <IntegralCast>
| |   |         `-IntegerLiteral 0xc1e5e0 <col:76> 'int' 4
| |   |-VarDecl 0xc1e6e0 <line:142:7, col:47> col:34 referenced __x0 'const uintmax_t':'const unsigned long' static constexpr cinit
| |   | `-BinaryOperator 0xc1e7c0 <col:41, col:47> 'unsigned long' '%'
| |   |   |-DeclRefExpr 0xc1e748 <col:41> 'uintmax_t':'unsigned long' NonTypeTemplateParm 0xc1dfb8 '__x' 'uintmax_t':'unsigned long'
| |   |   `-ImplicitCastExpr 0xc1e7a8 <col:47> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |     `-DeclRefExpr 0xc1e788 <col:47> 'const uintmax_t':'const unsigned long' lvalue Var 0xc1e4d8 '__c' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| |   |-VarDecl 0xc1e7f0 <line:143:7, col:47> col:34 referenced __x1 'const uintmax_t':'const unsigned long' static constexpr cinit
| |   | `-BinaryOperator 0xc1e8d0 <col:41, col:47> 'unsigned long' '/'
| |   |   |-DeclRefExpr 0xc1e858 <col:41> 'uintmax_t':'unsigned long' NonTypeTemplateParm 0xc1dfb8 '__x' 'uintmax_t':'unsigned long'
| |   |   `-ImplicitCastExpr 0xc1e8b8 <col:47> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |     `-DeclRefExpr 0xc1e898 <col:47> 'const uintmax_t':'const unsigned long' lvalue Var 0xc1e4d8 '__c' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| |   |-VarDecl 0xc1e900 <line:144:7, col:47> col:34 referenced __y0 'const uintmax_t':'const unsigned long' static constexpr cinit
| |   | `-BinaryOperator 0xc1e9e0 <col:41, col:47> 'unsigned long' '%'
| |   |   |-DeclRefExpr 0xc1e968 <col:41> 'uintmax_t':'unsigned long' NonTypeTemplateParm 0xc1e028 '__y' 'uintmax_t':'unsigned long'
| |   |   `-ImplicitCastExpr 0xc1e9c8 <col:47> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |     `-DeclRefExpr 0xc1e9a8 <col:47> 'const uintmax_t':'const unsigned long' lvalue Var 0xc1e4d8 '__c' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| |   |-VarDecl 0xc1ea10 <line:145:7, col:47> col:34 referenced __y1 'const uintmax_t':'const unsigned long' static constexpr cinit
| |   | `-BinaryOperator 0xc1eaf0 <col:41, col:47> 'unsigned long' '/'
| |   |   |-DeclRefExpr 0xc1ea78 <col:41> 'uintmax_t':'unsigned long' NonTypeTemplateParm 0xc1e028 '__y' 'uintmax_t':'unsigned long'
| |   |   `-ImplicitCastExpr 0xc1ead8 <col:47> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |     `-DeclRefExpr 0xc1eab8 <col:47> 'const uintmax_t':'const unsigned long' lvalue Var 0xc1e4d8 '__c' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| |   |-VarDecl 0xc1eb20 <line:146:7, col:50> col:34 referenced __x0y0 'const uintmax_t':'const unsigned long' static constexpr cinit
| |   | `-BinaryOperator 0xc1ebf8 <col:43, col:50> 'unsigned long' '*'
| |   |   |-ImplicitCastExpr 0xc1ebc8 <col:43> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |   | `-DeclRefExpr 0xc1eb88 <col:43> 'const uintmax_t':'const unsigned long' lvalue Var 0xc1e6e0 '__x0' 'const uintmax_t':'const unsigned long'
| |   |   `-ImplicitCastExpr 0xc1ebe0 <col:50> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |     `-DeclRefExpr 0xc1eba8 <col:50> 'const uintmax_t':'const unsigned long' lvalue Var 0xc1e900 '__y0' 'const uintmax_t':'const unsigned long'
| |   |-VarDecl 0xc1ec28 <line:147:7, col:50> col:34 referenced __x0y1 'const uintmax_t':'const unsigned long' static constexpr cinit
| |   | `-BinaryOperator 0xc1ed00 <col:43, col:50> 'unsigned long' '*'
| |   |   |-ImplicitCastExpr 0xc1ecd0 <col:43> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |   | `-DeclRefExpr 0xc1ec90 <col:43> 'const uintmax_t':'const unsigned long' lvalue Var 0xc1e6e0 '__x0' 'const uintmax_t':'const unsigned long'
| |   |   `-ImplicitCastExpr 0xc1ece8 <col:50> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |     `-DeclRefExpr 0xc1ecb0 <col:50> 'const uintmax_t':'const unsigned long' lvalue Var 0xc1ea10 '__y1' 'const uintmax_t':'const unsigned long'
| |   |-VarDecl 0xc1ed30 <line:148:7, col:50> col:34 referenced __x1y0 'const uintmax_t':'const unsigned long' static constexpr cinit
| |   | `-BinaryOperator 0xc1ee08 <col:43, col:50> 'unsigned long' '*'
| |   |   |-ImplicitCastExpr 0xc1edd8 <col:43> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |   | `-DeclRefExpr 0xc1ed98 <col:43> 'const uintmax_t':'const unsigned long' lvalue Var 0xc1e7f0 '__x1' 'const uintmax_t':'const unsigned long'
| |   |   `-ImplicitCastExpr 0xc1edf0 <col:50> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |     `-DeclRefExpr 0xc1edb8 <col:50> 'const uintmax_t':'const unsigned long' lvalue Var 0xc1e900 '__y0' 'const uintmax_t':'const unsigned long'
| |   |-VarDecl 0xc1ee38 <line:149:7, col:50> col:34 referenced __x1y1 'const uintmax_t':'const unsigned long' static constexpr cinit
| |   | `-BinaryOperator 0xc1ef10 <col:43, col:50> 'unsigned long' '*'
| |   |   |-ImplicitCastExpr 0xc1eee0 <col:43> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |   | `-DeclRefExpr 0xc1eea0 <col:43> 'const uintmax_t':'const unsigned long' lvalue Var 0xc1e7f0 '__x1' 'const uintmax_t':'const unsigned long'
| |   |   `-ImplicitCastExpr 0xc1eef8 <col:50> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |     `-DeclRefExpr 0xc1eec0 <col:50> 'const uintmax_t':'const unsigned long' lvalue Var 0xc1ea10 '__y1' 'const uintmax_t':'const unsigned long'
| |   |-VarDecl 0xc1ef40 <line:150:7, col:51> col:34 referenced __mix 'const uintmax_t':'const unsigned long' static constexpr cinit
| |   | `-BinaryOperator 0xc1f018 <col:42, col:51> 'unsigned long' '+'
| |   |   |-ImplicitCastExpr 0xc1efe8 <col:42> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |   | `-DeclRefExpr 0xc1efa8 <col:42> 'const uintmax_t':'const unsigned long' lvalue Var 0xc1ec28 '__x0y1' 'const uintmax_t':'const unsigned long'
| |   |   `-ImplicitCastExpr 0xc1f000 <col:51> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |     `-DeclRefExpr 0xc1efc8 <col:51> 'const uintmax_t':'const unsigned long' lvalue Var 0xc1ed30 '__x1y0' 'const uintmax_t':'const unsigned long'
| |   |-VarDecl 0xc1f048 <line:151:7, col:53> col:34 referenced __mix_lo 'const uintmax_t':'const unsigned long' static constexpr cinit
| |   | `-BinaryOperator 0xc1f140 <col:45, col:53> 'unsigned long' '*'
| |   |   |-ImplicitCastExpr 0xc1f0f0 <col:45> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |   | `-DeclRefExpr 0xc1f0b0 <col:45> 'const uintmax_t':'const unsigned long' lvalue Var 0xc1ef40 '__mix' 'const uintmax_t':'const unsigned long'
| |   |   `-ImplicitCastExpr 0xc1f128 <col:53> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |     `-DeclRefExpr 0xc1f108 <col:53> 'const uintmax_t':'const unsigned long' lvalue Var 0xc1e4d8 '__c' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| |   |-VarDecl 0xc1f170 <line:152:7, line:153:50> line:152:34 referenced __mix_hi 'const uintmax_t':'const unsigned long' static constexpr cinit
| |   | `-BinaryOperator 0xc21370 <line:153:9, col:50> 'unsigned long' '+'
| |   |   |-BinaryOperator 0xc211c0 <col:9, col:17> 'unsigned long' '/'
| |   |   | |-ImplicitCastExpr 0xc21170 <col:9> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |   | | `-DeclRefExpr 0xc1f1d8 <col:9> 'const uintmax_t':'const unsigned long' lvalue Var 0xc1ef40 '__mix' 'const uintmax_t':'const unsigned long'
| |   |   | `-ImplicitCastExpr 0xc211a8 <col:17> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |   |   `-DeclRefExpr 0xc21188 <col:17> 'const uintmax_t':'const unsigned long' lvalue Var 0xc1e4d8 '__c' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| |   |   `-ParenExpr 0xc21350 <col:23, col:50> 'unsigned long'
| |   |     `-ConditionalOperator 0xc21320 <col:24, col:49> 'unsigned long'
| |   |       |-ParenExpr 0xc21270 <col:24, col:39> 'bool'
| |   |       | `-BinaryOperator 0xc21250 <col:25, col:33> 'bool' '<'
| |   |       |   |-ImplicitCastExpr 0xc21220 <col:25> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |       |   | `-DeclRefExpr 0xc211e0 <col:25> 'const uintmax_t':'const unsigned long' lvalue Var 0xc1ef40 '__mix' 'const uintmax_t':'const unsigned long'
| |   |       |   `-ImplicitCastExpr 0xc21238 <col:33> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |       |     `-DeclRefExpr 0xc21200 <col:33> 'const uintmax_t':'const unsigned long' lvalue Var 0xc1ec28 '__x0y1' 'const uintmax_t':'const unsigned long'
| |   |       |-ImplicitCastExpr 0xc212f0 <col:43> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |       | `-DeclRefExpr 0xc212d0 <col:43> 'const uintmax_t':'const unsigned long' lvalue Var 0xc1e4d8 '__c' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| |   |       `-ImplicitCastExpr 0xc21308 <col:49> 'unsigned long' <IntegralCast>
| |   |         `-IntegerLiteral 0xc212b0 <col:49> 'int' 0
| |   |-TypedefDecl 0xc21678 <line:154:7, col:61> col:61 referenced _Res '__big_add<__mix_hi, __mix_lo, __x1y1, __x0y0>'
| |   | `-TemplateSpecializationType 0xc21500 '__big_add<__mix_hi, __mix_lo, __x1y1, __x0y0>' dependent __big_add
| |   |   |-TemplateArgument expr
| |   |   | `-ImplicitCastExpr 0xc21410 <col:25> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |   |   `-DeclRefExpr 0xc21390 <col:25> 'const uintmax_t':'const unsigned long' lvalue Var 0xc1f170 '__mix_hi' 'const uintmax_t':'const unsigned long'
| |   |   |-TemplateArgument expr
| |   |   | `-ImplicitCastExpr 0xc21428 <col:35> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |   |   `-DeclRefExpr 0xc213b0 <col:35> 'const uintmax_t':'const unsigned long' lvalue Var 0xc1f048 '__mix_lo' 'const uintmax_t':'const unsigned long'
| |   |   |-TemplateArgument expr
| |   |   | `-ImplicitCastExpr 0xc21440 <col:45> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |   |   `-DeclRefExpr 0xc213d0 <col:45> 'const uintmax_t':'const unsigned long' lvalue Var 0xc1ee38 '__x1y1' 'const uintmax_t':'const unsigned long'
| |   |   `-TemplateArgument expr
| |   |     `-ImplicitCastExpr 0xc21458 <col:53> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |       `-DeclRefExpr 0xc213f0 <col:53> 'const uintmax_t':'const unsigned long' lvalue Var 0xc1eb20 '__x0y0' 'const uintmax_t':'const unsigned long'
| |   |-AccessSpecDecl 0xc216d0 <line:155:5, col:11> col:5 public
| |   |-VarDecl 0xc21708 <line:156:7, col:47> col:34 __hi 'const uintmax_t':'const unsigned long' static constexpr cinit
| |   | `-DependentScopeDeclRefExpr 0xc217e0 <col:41, col:47> '<dependent type>' lvalue
| |   `-VarDecl 0xc21828 <line:157:7, col:47> col:34 __lo 'const uintmax_t':'const unsigned long' static constexpr cinit
| |     `-DependentScopeDeclRefExpr 0xc218c8 <col:41, col:47> '<dependent type>' lvalue
| |-ClassTemplateDecl 0xc21b28 <line:162:3, line:205:3> line:163:12 __big_div_impl
| | |-NonTypeTemplateParmDecl 0xc21928 <line:162:12, col:22> col:22 referenced 'uintmax_t':'unsigned long' depth 0 index 0 __n1
| | |-NonTypeTemplateParmDecl 0xc21998 <col:28, col:38> col:38 referenced 'uintmax_t':'unsigned long' depth 0 index 1 __n0
| | |-NonTypeTemplateParmDecl 0xc21a08 <col:44, col:54> col:54 referenced 'uintmax_t':'unsigned long' depth 0 index 2 __d
| | `-CXXRecordDecl 0xc21a98 <line:163:5, line:205:3> line:163:12 struct __big_div_impl definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-CXXRecordDecl 0xc21e40 <col:5, col:12> col:12 implicit struct __big_div_impl
| |   |-AccessSpecDecl 0xc21ed0 <line:165:5, col:12> col:5 private
| |   |-StaticAssertDecl 0xc22118 <line:166:7, line:167:31> line:166:7
| |   | |-BinaryOperator 0xc220c8 <col:21, col:71> 'bool' '>='
| |   | | |-DeclRefExpr 0xc21ef8 <col:21> 'uintmax_t':'unsigned long' NonTypeTemplateParm 0xc21a08 '__d' 'uintmax_t':'unsigned long'
| |   | | `-ParenExpr 0xc220a8 <col:28, col:71> 'uintmax_t':'unsigned long'
| |   | |   `-BinaryOperator 0xc22088 <col:29, col:70> 'uintmax_t':'unsigned long' '<<'
| |   | |     |-CXXFunctionalCastExpr 0xc21f60 <col:29, col:40> 'uintmax_t':'unsigned long' functional cast to uintmax_t <NoOp>
| |   | |     | `-ImplicitCastExpr 0xc21f48 <col:39> 'uintmax_t':'unsigned long' <IntegralCast> part_of_explicit_cast
| |   | |     |   `-IntegerLiteral 0xc21f28 <col:39> 'int' 1
| |   | |     `-ParenExpr 0xc22068 <col:45, col:70> 'unsigned long'
| |   | |       `-BinaryOperator 0xc22048 <col:46, col:69> 'unsigned long' '-'
| |   | |         |-BinaryOperator 0xc21ff0 <col:46, col:65> 'unsigned long' '*'
| |   | |         | |-UnaryExprOrTypeTraitExpr 0xc21f98 <col:46, col:61> 'unsigned long' sizeof 'intmax_t':'long'
| |   | |         | `-ImplicitCastExpr 0xc21fd8 <col:65> 'unsigned long' <IntegralCast>
| |   | |         |   `-IntegerLiteral 0xc21fb8 <col:65> 'int' 8
| |   | |         `-ImplicitCastExpr 0xc22030 <col:69> 'unsigned long' <IntegralCast>
| |   | |           `-IntegerLiteral 0xc22010 <col:69> 'int' 1
| |   | `-StringLiteral 0xc220e8 <line:167:7> 'const char [23]' lvalue "Internal library error"
| |   |-StaticAssertDecl 0xc221e8 <line:168:7, col:57> col:7
| |   | |-BinaryOperator 0xc22198 <col:21, col:28> 'bool' '<'
| |   | | |-DeclRefExpr 0xc22158 <col:21> 'uintmax_t':'unsigned long' NonTypeTemplateParm 0xc21928 '__n1' 'uintmax_t':'unsigned long'
| |   | | `-DeclRefExpr 0xc22178 <col:28> 'uintmax_t':'unsigned long' NonTypeTemplateParm 0xc21a08 '__d' 'uintmax_t':'unsigned long'
| |   | `-StringLiteral 0xc221b8 <col:33> 'const char [23]' lvalue "Internal library error"
| |   |-VarDecl 0xc22238 <line:169:7, col:77> col:34 referenced __c 'const uintmax_t':'const unsigned long' static constexpr cinit
| |   | `-BinaryOperator 0xc223b8 <col:40, col:77> 'uintmax_t':'unsigned long' '<<'
| |   |   |-CXXFunctionalCastExpr 0xc222e8 <col:40, col:51> 'uintmax_t':'unsigned long' functional cast to uintmax_t <NoOp>
| |   |   | `-ImplicitCastExpr 0xc222d0 <col:50> 'uintmax_t':'unsigned long' <IntegralCast> part_of_explicit_cast
| |   |   |   `-IntegerLiteral 0xc222b0 <col:50> 'int' 1
| |   |   `-ParenExpr 0xc22398 <col:56, col:77> 'unsigned long'
| |   |     `-BinaryOperator 0xc22378 <col:57, col:76> 'unsigned long' '*'
| |   |       |-UnaryExprOrTypeTraitExpr 0xc22320 <col:57, col:72> 'unsigned long' sizeof 'intmax_t':'long'
| |   |       `-ImplicitCastExpr 0xc22360 <col:76> 'unsigned long' <IntegralCast>
| |   |         `-IntegerLiteral 0xc22340 <col:76> 'int' 4
| |   |-VarDecl 0xc22440 <line:170:7, col:47> col:34 referenced __d1 'const uintmax_t':'const unsigned long' static constexpr cinit
| |   | `-BinaryOperator 0xc22520 <col:41, col:47> 'unsigned long' '/'
| |   |   |-DeclRefExpr 0xc224a8 <col:41> 'uintmax_t':'unsigned long' NonTypeTemplateParm 0xc21a08 '__d' 'uintmax_t':'unsigned long'
| |   |   `-ImplicitCastExpr 0xc22508 <col:47> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |     `-DeclRefExpr 0xc224e8 <col:47> 'const uintmax_t':'const unsigned long' lvalue Var 0xc22238 '__c' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| |   |-VarDecl 0xc22550 <line:171:7, col:47> col:34 referenced __d0 'const uintmax_t':'const unsigned long' static constexpr cinit
| |   | `-BinaryOperator 0xc22630 <col:41, col:47> 'unsigned long' '%'
| |   |   |-DeclRefExpr 0xc225b8 <col:41> 'uintmax_t':'unsigned long' NonTypeTemplateParm 0xc21a08 '__d' 'uintmax_t':'unsigned long'
| |   |   `-ImplicitCastExpr 0xc22618 <col:47> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |     `-DeclRefExpr 0xc225f8 <col:47> 'const uintmax_t':'const unsigned long' lvalue Var 0xc22238 '__c' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| |   |-VarDecl 0xc22660 <line:173:7, col:49> col:34 referenced __q1x 'const uintmax_t':'const unsigned long' static constexpr cinit
| |   | `-BinaryOperator 0xc22720 <col:42, col:49> 'unsigned long' '/'
| |   |   |-DeclRefExpr 0xc226c8 <col:42> 'uintmax_t':'unsigned long' NonTypeTemplateParm 0xc21928 '__n1' 'uintmax_t':'unsigned long'
| |   |   `-ImplicitCastExpr 0xc22708 <col:49> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |     `-DeclRefExpr 0xc226e8 <col:49> 'const uintmax_t':'const unsigned long' lvalue Var 0xc22440 '__d1' 'const uintmax_t':'const unsigned long'
| |   |-VarDecl 0xc22750 <line:174:7, col:49> col:34 referenced __r1x 'const uintmax_t':'const unsigned long' static constexpr cinit
| |   | `-BinaryOperator 0xc22810 <col:42, col:49> 'unsigned long' '%'
| |   |   |-DeclRefExpr 0xc227b8 <col:42> 'uintmax_t':'unsigned long' NonTypeTemplateParm 0xc21928 '__n1' 'uintmax_t':'unsigned long'
| |   |   `-ImplicitCastExpr 0xc227f8 <col:49> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |     `-DeclRefExpr 0xc227d8 <col:49> 'const uintmax_t':'const unsigned long' lvalue Var 0xc22440 '__d1' 'const uintmax_t':'const unsigned long'
| |   |-VarDecl 0xc22840 <line:175:7, col:48> col:34 referenced __m 'const uintmax_t':'const unsigned long' static constexpr cinit
| |   | `-BinaryOperator 0xc22918 <col:40, col:48> 'unsigned long' '*'
| |   |   |-ImplicitCastExpr 0xc228e8 <col:40> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |   | `-DeclRefExpr 0xc228a8 <col:40> 'const uintmax_t':'const unsigned long' lvalue Var 0xc22660 '__q1x' 'const uintmax_t':'const unsigned long'
| |   |   `-ImplicitCastExpr 0xc22900 <col:48> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |     `-DeclRefExpr 0xc228c8 <col:48> 'const uintmax_t':'const unsigned long' lvalue Var 0xc22550 '__d0' 'const uintmax_t':'const unsigned long'
| |   |-VarDecl 0xc22948 <line:176:7, col:63> col:34 referenced __r1y 'const uintmax_t':'const unsigned long' static constexpr cinit
| |   | `-BinaryOperator 0xc22af8 <col:42, col:63> 'unsigned long' '+'
| |   |   |-BinaryOperator 0xc22a40 <col:42, col:50> 'unsigned long' '*'
| |   |   | |-ImplicitCastExpr 0xc229f0 <col:42> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |   | | `-DeclRefExpr 0xc229b0 <col:42> 'const uintmax_t':'const unsigned long' lvalue Var 0xc22750 '__r1x' 'const uintmax_t':'const unsigned long'
| |   |   | `-ImplicitCastExpr 0xc22a28 <col:50> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |   |   `-DeclRefExpr 0xc22a08 <col:50> 'const uintmax_t':'const unsigned long' lvalue Var 0xc22238 '__c' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| |   |   `-BinaryOperator 0xc22ad8 <col:56, col:63> 'unsigned long' '/'
| |   |     |-DeclRefExpr 0xc22a60 <col:56> 'uintmax_t':'unsigned long' NonTypeTemplateParm 0xc21998 '__n0' 'uintmax_t':'unsigned long'
| |   |     `-ImplicitCastExpr 0xc22ac0 <col:63> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |       `-DeclRefExpr 0xc22aa0 <col:63> 'const uintmax_t':'const unsigned long' lvalue Var 0xc22238 '__c' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| |   |-VarDecl 0xc22b28 <line:177:7, col:50> col:34 referenced __r1z 'const uintmax_t':'const unsigned long' static constexpr cinit
| |   | `-BinaryOperator 0xc22be8 <col:42, col:50> 'unsigned long' '+'
| |   |   |-ImplicitCastExpr 0xc22bd0 <col:42> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |   | `-DeclRefExpr 0xc22b90 <col:42> 'const uintmax_t':'const unsigned long' lvalue Var 0xc22948 '__r1y' 'const uintmax_t':'const unsigned long'
| |   |   `-DeclRefExpr 0xc22bb0 <col:50> 'uintmax_t':'unsigned long' NonTypeTemplateParm 0xc21a08 '__d' 'uintmax_t':'unsigned long'
| |   |-VarDecl 0xc22c18 <line:178:7, line:180:38> line:178:34 referenced __r1 'const uintmax_t':'const unsigned long' static constexpr cinit
| |   | `-BinaryOperator 0xc23078 <line:179:9, line:180:38> 'unsigned long' '-'
| |   |   |-ParenExpr 0xc23020 <line:179:9, line:180:34> 'unsigned long'
| |   |   | `-ConditionalOperator 0xc22ff0 <line:179:10, line:180:29> 'unsigned long'
| |   |   |   |-ParenExpr 0xc22d10 <line:179:10, col:22> 'bool'
| |   |   |   | `-BinaryOperator 0xc22cf0 <col:11, col:19> 'bool' '<'
| |   |   |   |   |-ImplicitCastExpr 0xc22cc0 <col:11> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |   |   |   | `-DeclRefExpr 0xc22c80 <col:11> 'const uintmax_t':'const unsigned long' lvalue Var 0xc22948 '__r1y' 'const uintmax_t':'const unsigned long'
| |   |   |   |   `-ImplicitCastExpr 0xc22cd8 <col:19> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |   |   |     `-DeclRefExpr 0xc22ca0 <col:19> 'const uintmax_t':'const unsigned long' lvalue Var 0xc22840 '__m' 'const uintmax_t':'const unsigned long'
| |   |   |   |-ConditionalOperator 0xc22f88 <col:26, line:180:21> 'unsigned long'
| |   |   |   | |-ParenExpr 0xc22e98 <line:179:26, col:58> 'bool'
| |   |   |   | | `-BinaryOperator 0xc22e78 <col:27, col:57> 'bool' '&&'
| |   |   |   | |   |-ParenExpr 0xc22da8 <col:27, col:40> 'bool'
| |   |   |   | |   | `-BinaryOperator 0xc22d88 <col:28, col:37> 'bool' '>='
| |   |   |   | |   |   |-ImplicitCastExpr 0xc22d70 <col:28> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |   |   | |   |   | `-DeclRefExpr 0xc22d30 <col:28> 'const uintmax_t':'const unsigned long' lvalue Var 0xc22b28 '__r1z' 'const uintmax_t':'const unsigned long'
| |   |   |   | |   |   `-DeclRefExpr 0xc22d50 <col:37> 'uintmax_t':'unsigned long' NonTypeTemplateParm 0xc21a08 '__d' 'uintmax_t':'unsigned long'
| |   |   |   | |   `-ParenExpr 0xc22e58 <col:45, col:57> 'bool'
| |   |   |   | |     `-BinaryOperator 0xc22e38 <col:46, col:54> 'bool' '<'
| |   |   |   | |       |-ImplicitCastExpr 0xc22e08 <col:46> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |   |   | |       | `-DeclRefExpr 0xc22dc8 <col:46> 'const uintmax_t':'const unsigned long' lvalue Var 0xc22b28 '__r1z' 'const uintmax_t':'const unsigned long'
| |   |   |   | |       `-ImplicitCastExpr 0xc22e20 <col:54> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |   |   | |         `-DeclRefExpr 0xc22de8 <col:54> 'const uintmax_t':'const unsigned long' lvalue Var 0xc22840 '__m' 'const uintmax_t':'const unsigned long'
| |   |   |   | |-ParenExpr 0xc22f30 <line:180:5, col:17> 'unsigned long'
| |   |   |   | | `-BinaryOperator 0xc22f10 <col:6, col:14> 'unsigned long' '+'
| |   |   |   | |   |-ImplicitCastExpr 0xc22ef8 <col:6> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |   |   | |   | `-DeclRefExpr 0xc22eb8 <col:6> 'const uintmax_t':'const unsigned long' lvalue Var 0xc22b28 '__r1z' 'const uintmax_t':'const unsigned long'
| |   |   |   | |   `-DeclRefExpr 0xc22ed8 <col:14> 'uintmax_t':'unsigned long' NonTypeTemplateParm 0xc21a08 '__d' 'uintmax_t':'unsigned long'
| |   |   |   | `-ImplicitCastExpr 0xc22f70 <col:21> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |   |   |   `-DeclRefExpr 0xc22f50 <col:21> 'const uintmax_t':'const unsigned long' lvalue Var 0xc22b28 '__r1z' 'const uintmax_t':'const unsigned long'
| |   |   |   `-ImplicitCastExpr 0xc22fd8 <col:29> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |   |     `-DeclRefExpr 0xc22fb8 <col:29> 'const uintmax_t':'const unsigned long' lvalue Var 0xc22948 '__r1y' 'const uintmax_t':'const unsigned long'
| |   |   `-ImplicitCastExpr 0xc23060 <col:38> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |     `-DeclRefExpr 0xc23040 <col:38> 'const uintmax_t':'const unsigned long' lvalue Var 0xc22840 '__m' 'const uintmax_t':'const unsigned long'
| |   |-VarDecl 0xc230a8 <line:181:7, line:183:51> line:181:34 referenced __q1 'const uintmax_t':'const unsigned long' static constexpr cinit
| |   | `-BinaryOperator 0xc23478 <line:182:9, line:183:51> 'unsigned long' '-'
| |   |   |-ImplicitCastExpr 0xc23448 <line:182:9> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |   | `-DeclRefExpr 0xc23110 <col:9> 'const uintmax_t':'const unsigned long' lvalue Var 0xc22660 '__q1x' 'const uintmax_t':'const unsigned long'
| |   |   `-ImplicitCastExpr 0xc23460 <col:17, line:183:51> 'unsigned long' <IntegralCast>
| |   |     `-ParenExpr 0xc23428 <line:182:17, line:183:51> 'int'
| |   |       `-ConditionalOperator 0xc233f8 <line:182:18, line:183:50> 'int'
| |   |         |-ParenExpr 0xc231c0 <line:182:18, col:30> 'bool'
| |   |         | `-BinaryOperator 0xc231a0 <col:19, col:27> 'bool' '<'
| |   |         |   |-ImplicitCastExpr 0xc23170 <col:19> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |         |   | `-DeclRefExpr 0xc23130 <col:19> 'const uintmax_t':'const unsigned long' lvalue Var 0xc22948 '__r1y' 'const uintmax_t':'const unsigned long'
| |   |         |   `-ImplicitCastExpr 0xc23188 <col:27> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |         |     `-DeclRefExpr 0xc23150 <col:27> 'const uintmax_t':'const unsigned long' lvalue Var 0xc22840 '__m' 'const uintmax_t':'const unsigned long'
| |   |         |-ConditionalOperator 0xc233a8 <line:183:6, col:46> 'int'
| |   |         | |-ParenExpr 0xc23348 <col:6, col:38> 'bool'
| |   |         | | `-BinaryOperator 0xc23328 <col:7, col:37> 'bool' '&&'
| |   |         | |   |-ParenExpr 0xc23258 <col:7, col:20> 'bool'
| |   |         | |   | `-BinaryOperator 0xc23238 <col:8, col:17> 'bool' '>='
| |   |         | |   |   |-ImplicitCastExpr 0xc23220 <col:8> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |         | |   |   | `-DeclRefExpr 0xc231e0 <col:8> 'const uintmax_t':'const unsigned long' lvalue Var 0xc22b28 '__r1z' 'const uintmax_t':'const unsigned long'
| |   |         | |   |   `-DeclRefExpr 0xc23200 <col:17> 'uintmax_t':'unsigned long' NonTypeTemplateParm 0xc21a08 '__d' 'uintmax_t':'unsigned long'
| |   |         | |   `-ParenExpr 0xc23308 <col:25, col:37> 'bool'
| |   |         | |     `-BinaryOperator 0xc232e8 <col:26, col:34> 'bool' '<'
| |   |         | |       |-ImplicitCastExpr 0xc232b8 <col:26> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |         | |       | `-DeclRefExpr 0xc23278 <col:26> 'const uintmax_t':'const unsigned long' lvalue Var 0xc22b28 '__r1z' 'const uintmax_t':'const unsigned long'
| |   |         | |       `-ImplicitCastExpr 0xc232d0 <col:34> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |         | |         `-DeclRefExpr 0xc23298 <col:34> 'const uintmax_t':'const unsigned long' lvalue Var 0xc22840 '__m' 'const uintmax_t':'const unsigned long'
| |   |         | |-IntegerLiteral 0xc23368 <col:42> 'int' 2
| |   |         | `-IntegerLiteral 0xc23388 <col:46> 'int' 1
| |   |         `-IntegerLiteral 0xc233d8 <col:50> 'int' 0
| |   |-VarDecl 0xc234a8 <line:184:7, col:49> col:34 referenced __q0x 'const uintmax_t':'const unsigned long' static constexpr cinit
| |   | `-BinaryOperator 0xc23580 <col:42, col:49> 'unsigned long' '/'
| |   |   |-ImplicitCastExpr 0xc23550 <col:42> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |   | `-DeclRefExpr 0xc23510 <col:42> 'const uintmax_t':'const unsigned long' lvalue Var 0xc22c18 '__r1' 'const uintmax_t':'const unsigned long'
| |   |   `-ImplicitCastExpr 0xc23568 <col:49> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |     `-DeclRefExpr 0xc23530 <col:49> 'const uintmax_t':'const unsigned long' lvalue Var 0xc22440 '__d1' 'const uintmax_t':'const unsigned long'
| |   |-VarDecl 0xc235b0 <line:185:7, col:49> col:34 referenced __r0x 'const uintmax_t':'const unsigned long' static constexpr cinit
| |   | `-BinaryOperator 0xc23688 <col:42, col:49> 'unsigned long' '%'
| |   |   |-ImplicitCastExpr 0xc23658 <col:42> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |   | `-DeclRefExpr 0xc23618 <col:42> 'const uintmax_t':'const unsigned long' lvalue Var 0xc22c18 '__r1' 'const uintmax_t':'const unsigned long'
| |   |   `-ImplicitCastExpr 0xc23670 <col:49> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |     `-DeclRefExpr 0xc23638 <col:49> 'const uintmax_t':'const unsigned long' lvalue Var 0xc22440 '__d1' 'const uintmax_t':'const unsigned long'
| |   |-VarDecl 0xc236b8 <line:186:7, col:48> col:34 referenced __n 'const uintmax_t':'const unsigned long' static constexpr cinit
| |   | `-BinaryOperator 0xc23790 <col:40, col:48> 'unsigned long' '*'
| |   |   |-ImplicitCastExpr 0xc23760 <col:40> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |   | `-DeclRefExpr 0xc23720 <col:40> 'const uintmax_t':'const unsigned long' lvalue Var 0xc234a8 '__q0x' 'const uintmax_t':'const unsigned long'
| |   |   `-ImplicitCastExpr 0xc23778 <col:48> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |     `-DeclRefExpr 0xc23740 <col:48> 'const uintmax_t':'const unsigned long' lvalue Var 0xc22550 '__d0' 'const uintmax_t':'const unsigned long'
| |   |-VarDecl 0xc237c0 <line:187:7, col:63> col:34 referenced __r0y 'const uintmax_t':'const unsigned long' static constexpr cinit
| |   | `-BinaryOperator 0xc23970 <col:42, col:63> 'unsigned long' '+'
| |   |   |-BinaryOperator 0xc238b8 <col:42, col:50> 'unsigned long' '*'
| |   |   | |-ImplicitCastExpr 0xc23868 <col:42> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |   | | `-DeclRefExpr 0xc23828 <col:42> 'const uintmax_t':'const unsigned long' lvalue Var 0xc235b0 '__r0x' 'const uintmax_t':'const unsigned long'
| |   |   | `-ImplicitCastExpr 0xc238a0 <col:50> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |   |   `-DeclRefExpr 0xc23880 <col:50> 'const uintmax_t':'const unsigned long' lvalue Var 0xc22238 '__c' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| |   |   `-BinaryOperator 0xc23950 <col:56, col:63> 'unsigned long' '%'
| |   |     |-DeclRefExpr 0xc238d8 <col:56> 'uintmax_t':'unsigned long' NonTypeTemplateParm 0xc21998 '__n0' 'uintmax_t':'unsigned long'
| |   |     `-ImplicitCastExpr 0xc23938 <col:63> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |       `-DeclRefExpr 0xc23918 <col:63> 'const uintmax_t':'const unsigned long' lvalue Var 0xc22238 '__c' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| |   |-VarDecl 0xc239a0 <line:188:7, col:50> col:34 referenced __r0z 'const uintmax_t':'const unsigned long' static constexpr cinit
| |   | `-BinaryOperator 0xc23a60 <col:42, col:50> 'unsigned long' '+'
| |   |   |-ImplicitCastExpr 0xc23a48 <col:42> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |   | `-DeclRefExpr 0xc23a08 <col:42> 'const uintmax_t':'const unsigned long' lvalue Var 0xc237c0 '__r0y' 'const uintmax_t':'const unsigned long'
| |   |   `-DeclRefExpr 0xc23a28 <col:50> 'uintmax_t':'unsigned long' NonTypeTemplateParm 0xc21a08 '__d' 'uintmax_t':'unsigned long'
| |   |-VarDecl 0xc23a90 <line:189:7, line:191:38> line:189:34 referenced __r0 'const uintmax_t':'const unsigned long' static constexpr cinit
| |   | `-BinaryOperator 0xc23ef0 <line:190:9, line:191:38> 'unsigned long' '-'
| |   |   |-ParenExpr 0xc23e98 <line:190:9, line:191:34> 'unsigned long'
| |   |   | `-ConditionalOperator 0xc23e68 <line:190:10, line:191:29> 'unsigned long'
| |   |   |   |-ParenExpr 0xc23b88 <line:190:10, col:22> 'bool'
| |   |   |   | `-BinaryOperator 0xc23b68 <col:11, col:19> 'bool' '<'
| |   |   |   |   |-ImplicitCastExpr 0xc23b38 <col:11> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |   |   |   | `-DeclRefExpr 0xc23af8 <col:11> 'const uintmax_t':'const unsigned long' lvalue Var 0xc237c0 '__r0y' 'const uintmax_t':'const unsigned long'
| |   |   |   |   `-ImplicitCastExpr 0xc23b50 <col:19> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |   |   |     `-DeclRefExpr 0xc23b18 <col:19> 'const uintmax_t':'const unsigned long' lvalue Var 0xc236b8 '__n' 'const uintmax_t':'const unsigned long'
| |   |   |   |-ConditionalOperator 0xc23e00 <col:26, line:191:21> 'unsigned long'
| |   |   |   | |-ParenExpr 0xc23d10 <line:190:26, col:58> 'bool'
| |   |   |   | | `-BinaryOperator 0xc23cf0 <col:27, col:57> 'bool' '&&'
| |   |   |   | |   |-ParenExpr 0xc23c20 <col:27, col:40> 'bool'
| |   |   |   | |   | `-BinaryOperator 0xc23c00 <col:28, col:37> 'bool' '>='
| |   |   |   | |   |   |-ImplicitCastExpr 0xc23be8 <col:28> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |   |   | |   |   | `-DeclRefExpr 0xc23ba8 <col:28> 'const uintmax_t':'const unsigned long' lvalue Var 0xc239a0 '__r0z' 'const uintmax_t':'const unsigned long'
| |   |   |   | |   |   `-DeclRefExpr 0xc23bc8 <col:37> 'uintmax_t':'unsigned long' NonTypeTemplateParm 0xc21a08 '__d' 'uintmax_t':'unsigned long'
| |   |   |   | |   `-ParenExpr 0xc23cd0 <col:45, col:57> 'bool'
| |   |   |   | |     `-BinaryOperator 0xc23cb0 <col:46, col:54> 'bool' '<'
| |   |   |   | |       |-ImplicitCastExpr 0xc23c80 <col:46> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |   |   | |       | `-DeclRefExpr 0xc23c40 <col:46> 'const uintmax_t':'const unsigned long' lvalue Var 0xc239a0 '__r0z' 'const uintmax_t':'const unsigned long'
| |   |   |   | |       `-ImplicitCastExpr 0xc23c98 <col:54> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |   |   | |         `-DeclRefExpr 0xc23c60 <col:54> 'const uintmax_t':'const unsigned long' lvalue Var 0xc236b8 '__n' 'const uintmax_t':'const unsigned long'
| |   |   |   | |-ParenExpr 0xc23da8 <line:191:5, col:17> 'unsigned long'
| |   |   |   | | `-BinaryOperator 0xc23d88 <col:6, col:14> 'unsigned long' '+'
| |   |   |   | |   |-ImplicitCastExpr 0xc23d70 <col:6> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |   |   | |   | `-DeclRefExpr 0xc23d30 <col:6> 'const uintmax_t':'const unsigned long' lvalue Var 0xc239a0 '__r0z' 'const uintmax_t':'const unsigned long'
| |   |   |   | |   `-DeclRefExpr 0xc23d50 <col:14> 'uintmax_t':'unsigned long' NonTypeTemplateParm 0xc21a08 '__d' 'uintmax_t':'unsigned long'
| |   |   |   | `-ImplicitCastExpr 0xc23de8 <col:21> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |   |   |   `-DeclRefExpr 0xc23dc8 <col:21> 'const uintmax_t':'const unsigned long' lvalue Var 0xc239a0 '__r0z' 'const uintmax_t':'const unsigned long'
| |   |   |   `-ImplicitCastExpr 0xc23e50 <col:29> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |   |     `-DeclRefExpr 0xc23e30 <col:29> 'const uintmax_t':'const unsigned long' lvalue Var 0xc237c0 '__r0y' 'const uintmax_t':'const unsigned long'
| |   |   `-ImplicitCastExpr 0xc23ed8 <col:38> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |     `-DeclRefExpr 0xc23eb8 <col:38> 'const uintmax_t':'const unsigned long' lvalue Var 0xc236b8 '__n' 'const uintmax_t':'const unsigned long'
| |   |-VarDecl 0xc23f20 <line:192:7, line:194:36> line:192:34 referenced __q0 'const uintmax_t':'const unsigned long' static constexpr cinit
| |   | `-BinaryOperator 0xc242f0 <line:193:9, line:194:36> 'unsigned long' '-'
| |   |   |-ImplicitCastExpr 0xc242c0 <line:193:9> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |   | `-DeclRefExpr 0xc23f88 <col:9> 'const uintmax_t':'const unsigned long' lvalue Var 0xc234a8 '__q0x' 'const uintmax_t':'const unsigned long'
| |   |   `-ImplicitCastExpr 0xc242d8 <col:17, line:194:36> 'unsigned long' <IntegralCast>
| |   |     `-ParenExpr 0xc242a0 <line:193:17, line:194:36> 'int'
| |   |       `-ConditionalOperator 0xc24270 <line:193:18, line:194:35> 'int'
| |   |         |-ParenExpr 0xc24038 <line:193:18, col:30> 'bool'
| |   |         | `-BinaryOperator 0xc24018 <col:19, col:27> 'bool' '<'
| |   |         |   |-ImplicitCastExpr 0xc23fe8 <col:19> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |         |   | `-DeclRefExpr 0xc23fa8 <col:19> 'const uintmax_t':'const unsigned long' lvalue Var 0xc237c0 '__r0y' 'const uintmax_t':'const unsigned long'
| |   |         |   `-ImplicitCastExpr 0xc24000 <col:27> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |         |     `-DeclRefExpr 0xc23fc8 <col:27> 'const uintmax_t':'const unsigned long' lvalue Var 0xc236b8 '__n' 'const uintmax_t':'const unsigned long'
| |   |         |-ConditionalOperator 0xc24220 <col:34, line:194:31> 'int'
| |   |         | |-ParenExpr 0xc241c0 <line:193:34, line:194:23> 'bool'
| |   |         | | `-BinaryOperator 0xc241a0 <line:193:35, line:194:22> 'bool' '&&'
| |   |         | |   |-ParenExpr 0xc240d0 <line:193:35, col:48> 'bool'
| |   |         | |   | `-BinaryOperator 0xc240b0 <col:36, col:45> 'bool' '>='
| |   |         | |   |   |-ImplicitCastExpr 0xc24098 <col:36> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |         | |   |   | `-DeclRefExpr 0xc24058 <col:36> 'const uintmax_t':'const unsigned long' lvalue Var 0xc239a0 '__r0z' 'const uintmax_t':'const unsigned long'
| |   |         | |   |   `-DeclRefExpr 0xc24078 <col:45> 'uintmax_t':'unsigned long' NonTypeTemplateParm 0xc21a08 '__d' 'uintmax_t':'unsigned long'
| |   |         | |   `-ParenExpr 0xc24180 <line:194:10, col:22> 'bool'
| |   |         | |     `-BinaryOperator 0xc24160 <col:11, col:19> 'bool' '<'
| |   |         | |       |-ImplicitCastExpr 0xc24130 <col:11> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |         | |       | `-DeclRefExpr 0xc240f0 <col:11> 'const uintmax_t':'const unsigned long' lvalue Var 0xc239a0 '__r0z' 'const uintmax_t':'const unsigned long'
| |   |         | |       `-ImplicitCastExpr 0xc24148 <col:19> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |         | |         `-DeclRefExpr 0xc24110 <col:19> 'const uintmax_t':'const unsigned long' lvalue Var 0xc236b8 '__n' 'const uintmax_t':'const unsigned long'
| |   |         | |-IntegerLiteral 0xc241e0 <col:27> 'int' 2
| |   |         | `-IntegerLiteral 0xc24200 <col:31> 'int' 1
| |   |         `-IntegerLiteral 0xc24250 <col:35> 'int' 0
| |   |-AccessSpecDecl 0xc24310 <line:196:5, col:11> col:5 public
| |   |-VarDecl 0xc24348 <line:197:7, col:56> col:34 referenced __quot 'const uintmax_t':'const unsigned long' static constexpr cinit
| |   | `-BinaryOperator 0xc24498 <col:43, col:56> 'unsigned long' '+'
| |   |   |-BinaryOperator 0xc24440 <col:43, col:50> 'unsigned long' '*'
| |   |   | |-ImplicitCastExpr 0xc243f0 <col:43> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |   | | `-DeclRefExpr 0xc243b0 <col:43> 'const uintmax_t':'const unsigned long' lvalue Var 0xc230a8 '__q1' 'const uintmax_t':'const unsigned long'
| |   |   | `-ImplicitCastExpr 0xc24428 <col:50> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |   |   `-DeclRefExpr 0xc24408 <col:50> 'const uintmax_t':'const unsigned long' lvalue Var 0xc22238 '__c' 'const uintmax_t':'const unsigned long' non_odr_use_constant
| |   |   `-ImplicitCastExpr 0xc24480 <col:56> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |     `-DeclRefExpr 0xc24460 <col:56> 'const uintmax_t':'const unsigned long' lvalue Var 0xc23f20 '__q0' 'const uintmax_t':'const unsigned long'
| |   |-VarDecl 0xc244c8 <line:198:7, col:42> col:34 referenced __rem 'const uintmax_t':'const unsigned long' static constexpr cinit
| |   | `-ImplicitCastExpr 0xc24550 <col:42> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |   `-DeclRefExpr 0xc24530 <col:42> 'const uintmax_t':'const unsigned long' lvalue Var 0xc23a90 '__r0' 'const uintmax_t':'const unsigned long'
| |   |-AccessSpecDecl 0xc24568 <line:200:5, col:12> col:5 private
| |   |-TypedefDecl 0xc24738 <line:201:7, col:38> col:38 referenced _Prod '__big_mul<__quot, __d>'
| |   | `-TemplateSpecializationType 0xc24650 '__big_mul<__quot, __d>' dependent __big_mul
| |   |   |-TemplateArgument expr
| |   |   | `-ImplicitCastExpr 0xc245d0 <col:25> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |   |   `-DeclRefExpr 0xc24590 <col:25> 'const uintmax_t':'const unsigned long' lvalue Var 0xc24348 '__quot' 'const uintmax_t':'const unsigned long'
| |   |   `-TemplateArgument expr
| |   |     `-DeclRefExpr 0xc245b0 <col:33> 'uintmax_t':'unsigned long' NonTypeTemplateParm 0xc21a08 '__d' 'uintmax_t':'unsigned long'
| |   |-TypedefDecl 0xc24bb8 <line:202:7, col:61> col:61 referenced _Sum '__big_add<_Prod::__hi, _Prod::__lo, 0, __rem>'
| |   | `-TemplateSpecializationType 0xc24a40 '__big_add<_Prod::__hi, _Prod::__lo, 0, __rem>' dependent __big_add
| |   |   |-TemplateArgument expr
| |   |   | `-ImplicitCastExpr 0xc24918 <col:25, col:32> 'uintmax_t':'unsigned long' <Dependent>
| |   |   |   `-DependentScopeDeclRefExpr 0xc24818 <col:25, col:32> '<dependent type>' lvalue
| |   |   |-TemplateArgument expr
| |   |   | `-ImplicitCastExpr 0xc24930 <col:38, col:45> 'uintmax_t':'unsigned long' <Dependent>
| |   |   |   `-DependentScopeDeclRefExpr 0xc248a0 <col:38, col:45> '<dependent type>' lvalue
| |   |   |-TemplateArgument expr
| |   |   | `-ConstantExpr 0xc24960 <col:51> 'uintmax_t':'unsigned long' Int: 0
| |   |   |   `-ImplicitCastExpr 0xc24948 <col:51> 'uintmax_t':'unsigned long' <IntegralCast>
| |   |   |     `-IntegerLiteral 0xc248d8 <col:51> 'int' 0
| |   |   `-TemplateArgument expr
| |   |     `-ImplicitCastExpr 0xc24980 <col:54> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |       `-DeclRefExpr 0xc248f8 <col:54> 'const uintmax_t':'const unsigned long' lvalue Var 0xc244c8 '__rem' 'const uintmax_t':'const unsigned long'
| |   `-StaticAssertDecl 0xc24df8 <line:203:7, line:204:31> line:203:7
| |     |-BinaryOperator 0xc24da8 <col:21, col:57> '<dependent type>' '&&'
| |     | |-BinaryOperator 0xc24cd8 <col:21, col:35> '<dependent type>' '=='
| |     | | |-DependentScopeDeclRefExpr 0xc24c80 <col:21, col:27> '<dependent type>' lvalue
| |     | | `-DeclRefExpr 0xc24cb8 <col:35> 'uintmax_t':'unsigned long' NonTypeTemplateParm 0xc21928 '__n1' 'uintmax_t':'unsigned long'
| |     | `-BinaryOperator 0xc24d88 <col:43, col:57> '<dependent type>' '=='
| |     |   |-DependentScopeDeclRefExpr 0xc24d30 <col:43, col:49> '<dependent type>' lvalue
| |     |   `-DeclRefExpr 0xc24d68 <col:57> 'uintmax_t':'unsigned long' NonTypeTemplateParm 0xc21998 '__n0' 'uintmax_t':'unsigned long'
| |     `-StringLiteral 0xc24dc8 <line:204:7> 'const char [23]' lvalue "Internal library error"
| |-ClassTemplateDecl 0xc25060 <line:207:3, line:244:5> line:208:12 __big_div
| | |-NonTypeTemplateParmDecl 0xc24e60 <line:207:12, col:22> col:22 referenced 'uintmax_t':'unsigned long' depth 0 index 0 __n1
| | |-NonTypeTemplateParmDecl 0xc24ed0 <col:28, col:38> col:38 referenced 'uintmax_t':'unsigned long' depth 0 index 1 __n0
| | |-NonTypeTemplateParmDecl 0xc24f40 <col:44, col:54> col:54 referenced 'uintmax_t':'unsigned long' depth 0 index 2 __d
| | `-CXXRecordDecl 0xc24fd0 <line:208:5, line:244:5> line:208:12 struct __big_div definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-CXXRecordDecl 0xc26fc0 <col:5, col:12> col:12 implicit struct __big_div
| |   |-AccessSpecDecl 0xc27050 <line:210:5, col:12> col:5 private
| |   |-StaticAssertDecl 0xc27120 <line:211:7, col:55> col:7
| |   | |-BinaryOperator 0xc270d0 <col:21, col:28> 'bool' '!='
| |   | | |-DeclRefExpr 0xc27078 <col:21> 'uintmax_t':'unsigned long' NonTypeTemplateParm 0xc24f40 '__d' 'uintmax_t':'unsigned long'
| |   | | `-ImplicitCastExpr 0xc270b8 <col:28> 'unsigned long' <IntegralCast>
| |   | |   `-IntegerLiteral 0xc27098 <col:28> 'int' 0
| |   | `-StringLiteral 0xc270f0 <col:31> 'const char [23]' lvalue "Internal library error"
| |   |-StaticAssertDecl 0xc27330 <line:212:7, line:215:37> line:212:7
| |   | |-BinaryOperator 0xc271c8 <col:21, col:69> 'bool' '=='
| |   | | |-UnaryExprOrTypeTraitExpr 0xc27170 <col:21, col:38> 'unsigned long' sizeof 'uintmax_t':'unsigned long'
| |   | | `-UnaryExprOrTypeTraitExpr 0xc271a8 <col:43, col:69> 'unsigned long' sizeof 'unsigned long long'
| |   | `-StringLiteral 0xc27268 <line:213:7, line:215:7> 'const char [131]' lvalue "This library calls __builtin_clzll on uintmax_t, which is unsafe on your platform. Please complain to http://gcc.gnu.org/bugzilla/"
| |   |-VarDecl 0xc27388 <line:216:7, col:57> col:28 referenced __shift 'const int' static constexpr cinit
| |   | `-CallExpr 0xc276e0 <col:38, col:57> 'int'
| |   |   |-ImplicitCastExpr 0xc276c8 <col:38> 'int (*)(unsigned long long) noexcept' <BuiltinFnToFnPtr>
| |   |   | `-DeclRefExpr 0xc27630 <col:38> '<builtin fn type>' Function 0xc274a0 '__builtin_clzll' 'int (unsigned long long) noexcept'
| |   |   `-ImplicitCastExpr 0xc27708 <col:54> 'unsigned long long' <IntegralCast>
| |   |     `-DeclRefExpr 0xc27650 <col:54> 'uintmax_t':'unsigned long' NonTypeTemplateParm 0xc24f40 '__d' 'uintmax_t':'unsigned long'
| |   |-VarDecl 0xc27738 <line:217:7, col:65> col:28 referenced __coshift_ 'const int' static constexpr cinit
| |   | `-ImplicitCastExpr 0xc27898 <col:41, col:65> 'const int' <IntegralCast>
| |   |   `-BinaryOperator 0xc27878 <col:41, col:65> 'unsigned long' '-'
| |   |     |-BinaryOperator 0xc27808 <col:41, col:61> 'unsigned long' '*'
| |   |     | |-UnaryExprOrTypeTraitExpr 0xc277b0 <col:41, col:57> 'unsigned long' sizeof 'uintmax_t':'unsigned long'
| |   |     | `-ImplicitCastExpr 0xc277f0 <col:61> 'unsigned long' <IntegralCast>
| |   |     |   `-IntegerLiteral 0xc277d0 <col:61> 'int' 8
| |   |     `-ImplicitCastExpr 0xc27860 <col:65> 'unsigned long' <IntegralCast>
| |   |       `-ImplicitCastExpr 0xc27848 <col:65> 'int' <LValueToRValue>
| |   |         `-DeclRefExpr 0xc27828 <col:65> 'const int' lvalue Var 0xc27388 '__shift' 'const int'
| |   |-VarDecl 0xc278c8 <line:218:7, col:70> col:28 referenced __coshift 'const int' static constexpr cinit
| |   | `-ConditionalOperator 0xc27a20 <col:40, col:70> 'int'
| |   |   |-ParenExpr 0xc279a8 <col:40, col:53> 'bool'
| |   |   | `-BinaryOperator 0xc27988 <col:41, col:52> 'bool' '!='
| |   |   |   |-ImplicitCastExpr 0xc27970 <col:41> 'int' <LValueToRValue>
| |   |   |   | `-DeclRefExpr 0xc27930 <col:41> 'const int' lvalue Var 0xc27388 '__shift' 'const int'
| |   |   |   `-IntegerLiteral 0xc27950 <col:52> 'int' 0
| |   |   |-ImplicitCastExpr 0xc27a08 <col:57> 'int' <LValueToRValue>
| |   |   | `-DeclRefExpr 0xc279c8 <col:57> 'const int' lvalue Var 0xc27738 '__coshift_' 'const int'
| |   |   `-IntegerLiteral 0xc279e8 <col:70> 'int' 0
| |   |-VarDecl 0xc27a60 <line:219:7, col:57> col:34 referenced __c1 'const uintmax_t':'const unsigned long' static constexpr cinit
| |   | `-BinaryOperator 0xc27b70 <col:41, col:57> 'uintmax_t':'unsigned long' '<<'
| |   |   |-CXXFunctionalCastExpr 0xc27b10 <col:41, col:52> 'uintmax_t':'unsigned long' functional cast to uintmax_t <NoOp>
| |   |   | `-ImplicitCastExpr 0xc27af8 <col:51> 'uintmax_t':'unsigned long' <IntegralCast> part_of_explicit_cast
| |   |   |   `-IntegerLiteral 0xc27ad8 <col:51> 'int' 1
| |   |   `-ImplicitCastExpr 0xc27b58 <col:57> 'int' <LValueToRValue>
| |   |     `-DeclRefExpr 0xc27b38 <col:57> 'const int' lvalue Var 0xc27388 '__shift' 'const int'
| |   |-VarDecl 0xc27ba0 <line:220:7, col:57> col:34 referenced __c2 'const uintmax_t':'const unsigned long' static constexpr cinit
| |   | `-BinaryOperator 0xc27cb0 <col:41, col:57> 'uintmax_t':'unsigned long' '<<'
| |   |   |-CXXFunctionalCastExpr 0xc27c50 <col:41, col:52> 'uintmax_t':'unsigned long' functional cast to uintmax_t <NoOp>
| |   |   | `-ImplicitCastExpr 0xc27c38 <col:51> 'uintmax_t':'unsigned long' <IntegralCast> part_of_explicit_cast
| |   |   |   `-IntegerLiteral 0xc27c18 <col:51> 'int' 1
| |   |   `-ImplicitCastExpr 0xc27c98 <col:57> 'int' <LValueToRValue>
| |   |     `-DeclRefExpr 0xc27c78 <col:57> 'const int' lvalue Var 0xc278c8 '__coshift' 'const int'
| |   |-VarDecl 0xc27ce0 <line:221:7, col:50> col:34 referenced __new_d 'const uintmax_t':'const unsigned long' static constexpr cinit
| |   | `-BinaryOperator 0xc27da0 <col:44, col:50> 'unsigned long' '*'
| |   |   |-DeclRefExpr 0xc27d48 <col:44> 'uintmax_t':'unsigned long' NonTypeTemplateParm 0xc24f40 '__d' 'uintmax_t':'unsigned long'
| |   |   `-ImplicitCastExpr 0xc27d88 <col:50> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |     `-DeclRefExpr 0xc27d68 <col:50> 'const uintmax_t':'const unsigned long' lvalue Var 0xc27a60 '__c1' 'const uintmax_t':'const unsigned long'
| |   |-VarDecl 0xc27dd0 <line:222:7, col:52> col:34 referenced __new_n0 'const uintmax_t':'const unsigned long' static constexpr cinit
| |   | `-BinaryOperator 0xc27e90 <col:45, col:52> 'unsigned long' '*'
| |   |   |-DeclRefExpr 0xc27e38 <col:45> 'uintmax_t':'unsigned long' NonTypeTemplateParm 0xc24ed0 '__n0' 'uintmax_t':'unsigned long'
| |   |   `-ImplicitCastExpr 0xc27e78 <col:52> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |     `-DeclRefExpr 0xc27e58 <col:52> 'const uintmax_t':'const unsigned long' lvalue Var 0xc27a60 '__c1' 'const uintmax_t':'const unsigned long'
| |   |-VarDecl 0xc27ec0 <line:223:7, col:64> col:34 referenced __n1_shifted 'const uintmax_t':'const unsigned long' static constexpr cinit
| |   | `-BinaryOperator 0xc27fe0 <col:49, col:64> 'unsigned long' '*'
| |   |   |-ParenExpr 0xc27f88 <col:49, col:60> 'unsigned long'
| |   |   | `-BinaryOperator 0xc27f68 <col:50, col:57> 'unsigned long' '%'
| |   |   |   |-DeclRefExpr 0xc27f28 <col:50> 'uintmax_t':'unsigned long' NonTypeTemplateParm 0xc24e60 '__n1' 'uintmax_t':'unsigned long'
| |   |   |   `-DeclRefExpr 0xc27f48 <col:57> 'uintmax_t':'unsigned long' NonTypeTemplateParm 0xc24f40 '__d' 'uintmax_t':'unsigned long'
| |   |   `-ImplicitCastExpr 0xc27fc8 <col:64> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |     `-DeclRefExpr 0xc27fa8 <col:64> 'const uintmax_t':'const unsigned long' lvalue Var 0xc27a60 '__c1' 'const uintmax_t':'const unsigned long'
| |   |-VarDecl 0xc28010 <line:224:7, col:78> col:34 referenced __n0_top 'const uintmax_t':'const unsigned long' static constexpr cinit
| |   | `-ConditionalOperator 0xc281e0 <col:45, col:78> 'unsigned long'
| |   |   |-ParenExpr 0xc280f0 <col:45, col:58> 'bool'
| |   |   | `-BinaryOperator 0xc280d0 <col:46, col:57> 'bool' '!='
| |   |   |   |-ImplicitCastExpr 0xc280b8 <col:46> 'int' <LValueToRValue>
| |   |   |   | `-DeclRefExpr 0xc28078 <col:46> 'const int' lvalue Var 0xc27388 '__shift' 'const int'
| |   |   |   `-IntegerLiteral 0xc28098 <col:57> 'int' 0
| |   |   |-ParenExpr 0xc28188 <col:62, col:74> 'unsigned long'
| |   |   | `-BinaryOperator 0xc28168 <col:63, col:70> 'unsigned long' '/'
| |   |   |   |-DeclRefExpr 0xc28110 <col:63> 'uintmax_t':'unsigned long' NonTypeTemplateParm 0xc24ed0 '__n0' 'uintmax_t':'unsigned long'
| |   |   |   `-ImplicitCastExpr 0xc28150 <col:70> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |   |     `-DeclRefExpr 0xc28130 <col:70> 'const uintmax_t':'const unsigned long' lvalue Var 0xc27ba0 '__c2' 'const uintmax_t':'const unsigned long'
| |   |   `-ImplicitCastExpr 0xc281c8 <col:78> 'unsigned long' <IntegralCast>
| |   |     `-IntegerLiteral 0xc281a8 <col:78> 'int' 0
| |   |-VarDecl 0xc28220 <line:225:7, col:60> col:34 referenced __new_n1 'const uintmax_t':'const unsigned long' static constexpr cinit
| |   | `-BinaryOperator 0xc282f8 <col:45, col:60> 'unsigned long' '+'
| |   |   |-ImplicitCastExpr 0xc282c8 <col:45> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |   | `-DeclRefExpr 0xc28288 <col:45> 'const uintmax_t':'const unsigned long' lvalue Var 0xc27ec0 '__n1_shifted' 'const uintmax_t':'const unsigned long'
| |   |   `-ImplicitCastExpr 0xc282e0 <col:60> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |     `-DeclRefExpr 0xc282a8 <col:60> 'const uintmax_t':'const unsigned long' lvalue Var 0xc28010 '__n0_top' 'const uintmax_t':'const unsigned long'
| |   |-TypedefDecl 0xc28560 <line:226:7, col:59> col:59 referenced _Res '__big_div_impl<__new_n1, __new_n0, __new_d>'
| |   | `-TemplateSpecializationType 0xc28430 '__big_div_impl<__new_n1, __new_n0, __new_d>' dependent __big_div_impl
| |   |   |-TemplateArgument expr
| |   |   | `-ImplicitCastExpr 0xc28378 <col:30> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |   |   `-DeclRefExpr 0xc28318 <col:30> 'const uintmax_t':'const unsigned long' lvalue Var 0xc28220 '__new_n1' 'const uintmax_t':'const unsigned long'
| |   |   |-TemplateArgument expr
| |   |   | `-ImplicitCastExpr 0xc28390 <col:40> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |   |   `-DeclRefExpr 0xc28338 <col:40> 'const uintmax_t':'const unsigned long' lvalue Var 0xc27dd0 '__new_n0' 'const uintmax_t':'const unsigned long'
| |   |   `-TemplateArgument expr
| |   |     `-ImplicitCastExpr 0xc283a8 <col:50> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |       `-DeclRefExpr 0xc28358 <col:50> 'const uintmax_t':'const unsigned long' lvalue Var 0xc27ce0 '__new_d' 'const uintmax_t':'const unsigned long'
| |   |-AccessSpecDecl 0xc285b8 <line:228:5, col:11> col:5 public
| |   |-VarDecl 0xc285f0 <line:229:7, col:53> col:34 referenced __quot_hi 'const uintmax_t':'const unsigned long' static constexpr cinit
| |   | `-BinaryOperator 0xc28698 <col:46, col:53> 'unsigned long' '/'
| |   |   |-DeclRefExpr 0xc28658 <col:46> 'uintmax_t':'unsigned long' NonTypeTemplateParm 0xc24e60 '__n1' 'uintmax_t':'unsigned long'
| |   |   `-DeclRefExpr 0xc28678 <col:53> 'uintmax_t':'unsigned long' NonTypeTemplateParm 0xc24f40 '__d' 'uintmax_t':'unsigned long'
| |   |-VarDecl 0xc286c8 <line:230:7, col:52> col:34 referenced __quot_lo 'const uintmax_t':'const unsigned long' static constexpr cinit
| |   | `-DependentScopeDeclRefExpr 0xc287a0 <col:46, col:52> '<dependent type>' lvalue
| |   |-VarDecl 0xc287e8 <line:231:7, col:56> col:34 referenced __rem 'const uintmax_t':'const unsigned long' static constexpr cinit
| |   | `-BinaryOperator 0xc288e0 <col:42, col:56> '<dependent type>' '/'
| |   |   |-DependentScopeDeclRefExpr 0xc28888 <col:42, col:48> '<dependent type>' lvalue
| |   |   `-DeclRefExpr 0xc288c0 <col:56> 'const uintmax_t':'const unsigned long' lvalue Var 0xc27a60 '__c1' 'const uintmax_t':'const unsigned long'
| |   |-AccessSpecDecl 0xc28900 <line:233:5, col:12> col:5 private
| |   |-TypedefDecl 0xc28ac8 <line:234:7, col:41> col:41 referenced _P0 '__big_mul<__quot_lo, __d>'
| |   | `-TemplateSpecializationType 0xc289e0 '__big_mul<__quot_lo, __d>' dependent __big_mul
| |   |   |-TemplateArgument expr
| |   |   | `-ImplicitCastExpr 0xc28968 <col:25> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |   |   `-DeclRefExpr 0xc28928 <col:25> 'const uintmax_t':'const unsigned long' lvalue Var 0xc286c8 '__quot_lo' 'const uintmax_t':'const unsigned long'
| |   |   `-TemplateArgument expr
| |   |     `-DeclRefExpr 0xc28948 <col:36> 'uintmax_t':'unsigned long' NonTypeTemplateParm 0xc24f40 '__d' 'uintmax_t':'unsigned long'
| |   |-TypedefDecl 0xc28cc8 <line:235:7, col:41> col:41 referenced _P1 '__big_mul<__quot_hi, __d>'
| |   | `-TemplateSpecializationType 0xc28be0 '__big_mul<__quot_hi, __d>' dependent __big_mul
| |   |   |-TemplateArgument expr
| |   |   | `-ImplicitCastExpr 0xc28b60 <col:25> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |   |   `-DeclRefExpr 0xc28b20 <col:25> 'const uintmax_t':'const unsigned long' lvalue Var 0xc285f0 '__quot_hi' 'const uintmax_t':'const unsigned long'
| |   |   `-TemplateArgument expr
| |   |     `-DeclRefExpr 0xc28b40 <col:36> 'uintmax_t':'unsigned long' NonTypeTemplateParm 0xc24f40 '__d' 'uintmax_t':'unsigned long'
| |   |-TypedefDecl 0xc291e8 <line:236:7, col:65> col:65 referenced _Sum '__big_add<_P0::__hi, _P0::__lo, _P1::__lo, __rem>'
| |   | `-TemplateSpecializationType 0xc29070 '__big_add<_P0::__hi, _P0::__lo, _P1::__lo, __rem>' dependent __big_add
| |   |   |-TemplateArgument expr
| |   |   | `-ImplicitCastExpr 0xc28f50 <col:25, col:30> 'uintmax_t':'unsigned long' <Dependent>
| |   |   |   `-DependentScopeDeclRefExpr 0xc28da8 <col:25, col:30> '<dependent type>' lvalue
| |   |   |-TemplateArgument expr
| |   |   | `-ImplicitCastExpr 0xc28f68 <col:36, col:41> 'uintmax_t':'unsigned long' <Dependent>
| |   |   |   `-DependentScopeDeclRefExpr 0xc28e30 <col:36, col:41> '<dependent type>' lvalue
| |   |   |-TemplateArgument expr
| |   |   | `-ImplicitCastExpr 0xc28f80 <col:47, col:52> 'uintmax_t':'unsigned long' <Dependent>
| |   |   |   `-DependentScopeDeclRefExpr 0xc28ef8 <col:47, col:52> '<dependent type>' lvalue
| |   |   `-TemplateArgument expr
| |   |     `-ImplicitCastExpr 0xc28f98 <col:58> 'uintmax_t':'unsigned long' <LValueToRValue>
| |   |       `-DeclRefExpr 0xc28f30 <col:58> 'const uintmax_t':'const unsigned long' lvalue Var 0xc287e8 '__rem' 'const uintmax_t':'const unsigned long'
| |   |-StaticAssertDecl 0xc29320 <line:238:7, col:61> col:7
| |   | |-BinaryOperator 0xc292d0 <col:21, col:34> '<dependent type>' '=='
| |   | | |-DependentScopeDeclRefExpr 0xc29278 <col:21, col:26> '<dependent type>' lvalue
| |   | | `-IntegerLiteral 0xc292b0 <col:34> 'int' 0
| |   | `-StringLiteral 0xc292f0 <col:37> 'const char [23]' lvalue "Internal library error"
| |   |-StaticAssertDecl 0xc294c8 <line:239:7, col:70> col:7
| |   | |-BinaryOperator 0xc29478 <col:21, col:40> '<dependent type>' '>='
| |   | | |-DependentScopeDeclRefExpr 0xc293d0 <col:21, col:27> '<dependent type>' lvalue
| |   | | `-DependentScopeDeclRefExpr 0xc29440 <col:35, col:40> '<dependent type>' lvalue
| |   | `-StringLiteral 0xc29498 <col:46> 'const char [23]' lvalue "Internal library error"
| |   |-StaticAssertDecl 0xc296b8 <line:241:7, line:242:31> line:241:7
| |   | |-BinaryOperator 0xc29668 <col:21, col:57> '<dependent type>' '&&'
| |   | | |-BinaryOperator 0xc29598 <col:21, col:35> '<dependent type>' '=='
| |   | | | |-DependentScopeDeclRefExpr 0xc29540 <col:21, col:27> '<dependent type>' lvalue
| |   | | | `-DeclRefExpr 0xc29578 <col:35> 'uintmax_t':'unsigned long' NonTypeTemplateParm 0xc24e60 '__n1' 'uintmax_t':'unsigned long'
| |   | | `-BinaryOperator 0xc29648 <col:43, col:57> '<dependent type>' '=='
| |   | |   |-DependentScopeDeclRefExpr 0xc295f0 <col:43, col:49> '<dependent type>' lvalue
| |   | |   `-DeclRefExpr 0xc29628 <col:57> 'uintmax_t':'unsigned long' NonTypeTemplateParm 0xc24ed0 '__n0' 'uintmax_t':'unsigned long'
| |   | `-StringLiteral 0xc29688 <line:242:7> 'const char [23]' lvalue "Internal library error"
| |   `-StaticAssertDecl 0xc297a0 <line:243:7, col:58> col:7
| |     |-BinaryOperator 0xc29750 <col:21, col:29> 'bool' '<'
| |     | |-ImplicitCastExpr 0xc29738 <col:21> 'uintmax_t':'unsigned long' <LValueToRValue>
| |     | | `-DeclRefExpr 0xc296f8 <col:21> 'const uintmax_t':'const unsigned long' lvalue Var 0xc287e8 '__rem' 'const uintmax_t':'const unsigned long'
| |     | `-DeclRefExpr 0xc29718 <col:29> 'uintmax_t':'unsigned long' NonTypeTemplateParm 0xc24f40 '__d' 'uintmax_t':'unsigned long'
| |     `-StringLiteral 0xc29770 <col:34> 'const char [23]' lvalue "Internal library error"
| |-ClassTemplateDecl 0xc299e8 <line:260:3, line:275:5> line:261:12 ratio
| | |-NonTypeTemplateParmDecl 0xc29808 <line:260:12, col:21> col:21 referenced 'intmax_t':'long' depth 0 index 0 _Num
| | |-NonTypeTemplateParmDecl 0xc29898 <col:27, col:43> col:36 referenced 'intmax_t':'long' depth 0 index 1 _Den
| | | `-TemplateArgument expr
| | |   `-ConstantExpr 0xc29910 <col:43> 'intmax_t':'long' Int: 1
| | |     `-ImplicitCastExpr 0xc298f8 <col:43> 'intmax_t':'long' <IntegralCast>
| | |       `-IntegerLiteral 0xc29868 <col:43> 'int' 1
| | |-CXXRecordDecl 0xc29958 <line:261:5, line:275:5> line:261:12 struct ratio definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-CXXRecordDecl 0xc29cc0 <col:5, col:12> col:12 implicit struct ratio
| | | |-StaticAssertDecl 0xc29e00 <line:263:7, col:60> col:7
| | | | |-BinaryOperator 0xc29da8 <col:21, col:29> 'bool' '!='
| | | | | |-DeclRefExpr 0xc29d50 <col:21> 'intmax_t':'long' NonTypeTemplateParm 0xc29898 '_Den' 'intmax_t':'long'
| | | | | `-ImplicitCastExpr 0xc29d90 <col:29> 'long' <IntegralCast>
| | | | |   `-IntegerLiteral 0xc29d70 <col:29> 'int' 0
| | | | `-StringLiteral 0xc29dc8 <col:32> 'const char [27]' lvalue "denominator cannot be zero"
| | | |-StaticAssertDecl 0xc29ff0 <line:264:7, line:265:21> line:264:7
| | | | |-BinaryOperator 0xc29f30 <col:21, <built-in>:79:24> 'bool' '&&'
| | | | | |-BinaryOperator 0xc29e98 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:264:21, <built-in>:79:24> 'bool' '>='
| | | | | | |-DeclRefExpr 0xc29e40 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:264:21> 'intmax_t':'long' NonTypeTemplateParm 0xc29808 '_Num' 'intmax_t':'long'
| | | | | | `-UnaryOperator 0xc29e80 <col:29, <built-in>:79:24> 'long' prefix '-'
| | | | | |   `-IntegerLiteral 0xc29e60 <col:24> 'long' 9223372036854775807
| | | | | `-BinaryOperator 0xc29f10 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:264:48, <built-in>:79:24> 'bool' '>='
| | | | |   |-DeclRefExpr 0xc29eb8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:264:48> 'intmax_t':'long' NonTypeTemplateParm 0xc29898 '_Den' 'intmax_t':'long'
| | | | |   `-UnaryOperator 0xc29ef8 <col:56, <built-in>:79:24> 'long' prefix '-'
| | | | |     `-IntegerLiteral 0xc29ed8 <col:24> 'long' 9223372036854775807
| | | | `-StringLiteral 0xc29fc8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:265:7> 'const char [13]' lvalue "out of range"
| | | |-VarDecl 0xc2a040 <line:268:7, line:269:71> line:268:33 referenced num 'const intmax_t':'const long' static constexpr cinit
| | | | `-BinaryOperator 0xc2a398 <line:269:9, col:71> '<dependent type>' '/'
| | | |   |-BinaryOperator 0xc2a218 <col:9, col:37> '<dependent type>' '*'
| | | |   | |-DeclRefExpr 0xc2a0a8 <col:9> 'intmax_t':'long' NonTypeTemplateParm 0xc29808 '_Num' 'intmax_t':'long'
| | | |   | `-DependentScopeDeclRefExpr 0xc2a1e0 <col:16, col:37> '<dependent type>' lvalue
| | | |   `-DependentScopeDeclRefExpr 0xc2a360 <col:45, col:71> '<dependent type>' lvalue
| | | |-VarDecl 0xc2a3c8 <line:271:7, line:272:63> line:271:33 referenced den 'const intmax_t':'const long' static constexpr cinit
| | | | `-BinaryOperator 0xc2a698 <line:272:9, col:63> '<dependent type>' '/'
| | | |   |-DependentScopeDeclRefExpr 0xc2a500 <col:9, col:29> '<dependent type>' lvalue
| | | |   `-DependentScopeDeclRefExpr 0xc2a660 <col:37, col:63> '<dependent type>' lvalue
| | | `-TypedefDecl 0xc2a878 <line:274:7, col:31> col:31 type 'ratio<num, den>'
| | |   `-TemplateSpecializationType 0xc2a790 'ratio<num, den>' dependent ratio
| | |     |-TemplateArgument expr
| | |     | `-ImplicitCastExpr 0xc2a6f8 <col:21> 'intmax_t':'long' <LValueToRValue>
| | |     |   `-DeclRefExpr 0xc2a6b8 <col:21> 'const intmax_t':'const long' lvalue Var 0xc2a040 'num' 'const intmax_t':'const long'
| | |     `-TemplateArgument expr
| | |       `-ImplicitCastExpr 0xc2a710 <col:26> 'intmax_t':'long' <LValueToRValue>
| | |         `-DeclRefExpr 0xc2a6d8 <col:26> 'const intmax_t':'const long' lvalue Var 0xc2a3c8 'den' 'const intmax_t':'const long'
| | |-ClassTemplateSpecializationDecl 0xc4b7e0 <line:260:3, line:275:5> line:261:12 struct ratio
| | | |-TemplateArgument integral 1
| | | `-TemplateArgument integral 1000000000000000000
| | |-ClassTemplateSpecializationDecl 0xc4bad8 <line:260:3, line:275:5> line:261:12 struct ratio
| | | |-TemplateArgument integral 1
| | | `-TemplateArgument integral 1000000000000000
| | |-ClassTemplateSpecializationDecl 0xc4bdc8 <line:260:3, line:275:5> line:261:12 struct ratio
| | | |-TemplateArgument integral 1
| | | `-TemplateArgument integral 1000000000000
| | |-ClassTemplateSpecializationDecl 0xc4c0d0 <line:260:3, line:275:5> line:261:12 struct ratio definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument integral 1
| | | |-TemplateArgument integral 1000000000
| | | |-CXXRecordDecl 0xd2af68 prev 0xc4c0d0 <col:5, col:12> col:12 implicit struct ratio
| | | |-StaticAssertDecl 0xd2b090 <line:263:7, col:60> col:7
| | | | |-BinaryOperator 0xd2b050 <col:21, col:29> 'bool' '!='
| | | | | |-SubstNonTypeTemplateParmExpr 0xd2b018 <col:21> 'long'
| | | | | | `-IntegerLiteral 0xd2aff8 <col:21> 'long' 1000000000
| | | | | `-ImplicitCastExpr 0xd2b038 <col:29> 'long' <IntegralCast>
| | | | |   `-IntegerLiteral 0xc29d70 <col:29> 'int' 0
| | | | `-StringLiteral 0xc29dc8 <col:32> 'const char [27]' lvalue "denominator cannot be zero"
| | | |-StaticAssertDecl 0xd2b1d0 <line:264:7, line:265:21> line:264:7
| | | | |-BinaryOperator 0xd2b190 <col:21, <built-in>:79:24> 'bool' '&&'
| | | | | |-BinaryOperator 0xd2b110 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:264:21, <built-in>:79:24> 'bool' '>='
| | | | | | |-SubstNonTypeTemplateParmExpr 0xd2b0f0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:264:21> 'long'
| | | | | | | `-IntegerLiteral 0xd2b0d0 <col:21> 'long' 1
| | | | | | `-UnaryOperator 0xc29e80 <col:29, <built-in>:79:24> 'long' prefix '-'
| | | | | |   `-IntegerLiteral 0xc29e60 <col:24> 'long' 9223372036854775807
| | | | | `-BinaryOperator 0xd2b170 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:264:48, <built-in>:79:24> 'bool' '>='
| | | | |   |-SubstNonTypeTemplateParmExpr 0xd2b150 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:264:48> 'long'
| | | | |   | `-IntegerLiteral 0xd2b130 <col:48> 'long' 1000000000
| | | | |   `-UnaryOperator 0xc29ef8 <col:56, <built-in>:79:24> 'long' prefix '-'
| | | | |     `-IntegerLiteral 0xc29ed8 <col:24> 'long' 9223372036854775807
| | | | `-StringLiteral 0xc29fc8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:265:7> 'const char [13]' lvalue "out of range"
| | | |-VarDecl 0xd2b210 <line:268:7, line:269:71> line:268:33 referenced num 'const intmax_t':'const long' static constexpr cinit
| | | | `-BinaryOperator 0xd2dd30 <line:269:9, col:71> 'long' '/'
| | | |   |-BinaryOperator 0xd2c230 <col:9, col:37> 'long' '*'
| | | |   | |-SubstNonTypeTemplateParmExpr 0xd2b2a8 <col:9> 'long'
| | | |   | | `-IntegerLiteral 0xd2b288 <col:9> 'long' 1
| | | |   | `-ImplicitCastExpr 0xd2c218 <col:16, col:37> 'long':'long' <LValueToRValue>
| | | |   |   `-DeclRefExpr 0xd2c1e8 <col:16, col:37> 'const long':'const long' lvalue Var 0xd2b918 'value' 'const long':'const long' non_odr_use_constant
| | | |   `-ImplicitCastExpr 0xd2dd18 <col:45, col:71> 'long':'long' <LValueToRValue>
| | | |     `-DeclRefExpr 0xd2dce8 <col:45, col:71> 'const long':'const long' lvalue Var 0xd2bfd8 'value' 'const long':'const long' non_odr_use_constant
| | | |-VarDecl 0xd2dda8 <line:271:7, line:272:63> line:271:33 referenced den 'const intmax_t':'const long' static constexpr cinit
| | | | `-BinaryOperator 0xd2f008 <line:272:9, col:63> 'long' '/'
| | | |   |-ImplicitCastExpr 0xd2efa8 <col:9, col:29> 'long':'long' <LValueToRValue>
| | | |   | `-DeclRefExpr 0xd2ef78 <col:9, col:29> 'const long':'const long' lvalue Var 0xd2e558 'value' 'const long':'const long' non_odr_use_constant
| | | |   `-ImplicitCastExpr 0xd2eff0 <col:37, col:63> 'long':'long' <LValueToRValue>
| | | |     `-DeclRefExpr 0xd2efc0 <col:37, col:63> 'const long':'const long' lvalue Var 0xd2bfd8 'value' 'const long':'const long' non_odr_use_constant
| | | `-TypedefDecl 0xd2f6a0 <line:274:7, col:31> col:31 type 'ratio<num, den>':'std::ratio<1, 1000000000>'
| | |   `-TemplateSpecializationType 0xd2f600 'ratio<num, den>' sugar ratio
| | |     |-TemplateArgument expr
| | |     | `-ConstantExpr 0xd2f5a0 <col:21> 'intmax_t':'long' Int: 1
| | |     |   `-ImplicitCastExpr 0xd2f588 <col:21> 'intmax_t':'long' <LValueToRValue>
| | |     |     `-DeclRefExpr 0xd2f2e8 <col:21> 'const intmax_t':'const long' lvalue Var 0xd2b210 'num' 'const intmax_t':'const long' non_odr_use_constant
| | |     |-TemplateArgument expr
| | |     | `-ConstantExpr 0xd2f5d8 <col:26> 'intmax_t':'long' Int: 1000000000
| | |     |   `-ImplicitCastExpr 0xd2f5c0 <col:26> 'intmax_t':'long' <LValueToRValue>
| | |     |     `-DeclRefExpr 0xd2f568 <col:26> 'const intmax_t':'const long' lvalue Var 0xd2dda8 'den' 'const intmax_t':'const long' non_odr_use_constant
| | |     `-RecordType 0xc4c1d0 'std::ratio<1, 1000000000>'
| | |       `-ClassTemplateSpecialization 0xc4c0d0 'ratio'
| | |-ClassTemplateSpecializationDecl 0xc4c3e0 <line:260:3, line:275:5> line:261:12 struct ratio definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument integral 1
| | | |-TemplateArgument integral 1000000
| | | |-CXXRecordDecl 0xe1b288 prev 0xc4c3e0 <col:5, col:12> col:12 implicit struct ratio
| | | |-StaticAssertDecl 0xe1b3b0 <line:263:7, col:60> col:7
| | | | |-BinaryOperator 0xe1b370 <col:21, col:29> 'bool' '!='
| | | | | |-SubstNonTypeTemplateParmExpr 0xe1b338 <col:21> 'long'
| | | | | | `-IntegerLiteral 0xe1b318 <col:21> 'long' 1000000
| | | | | `-ImplicitCastExpr 0xe1b358 <col:29> 'long' <IntegralCast>
| | | | |   `-IntegerLiteral 0xc29d70 <col:29> 'int' 0
| | | | `-StringLiteral 0xc29dc8 <col:32> 'const char [27]' lvalue "denominator cannot be zero"
| | | |-StaticAssertDecl 0xe1b4f0 <line:264:7, line:265:21> line:264:7
| | | | |-BinaryOperator 0xe1b4b0 <col:21, <built-in>:79:24> 'bool' '&&'
| | | | | |-BinaryOperator 0xe1b430 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:264:21, <built-in>:79:24> 'bool' '>='
| | | | | | |-SubstNonTypeTemplateParmExpr 0xe1b410 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:264:21> 'long'
| | | | | | | `-IntegerLiteral 0xe1b3f0 <col:21> 'long' 1
| | | | | | `-UnaryOperator 0xc29e80 <col:29, <built-in>:79:24> 'long' prefix '-'
| | | | | |   `-IntegerLiteral 0xc29e60 <col:24> 'long' 9223372036854775807
| | | | | `-BinaryOperator 0xe1b490 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:264:48, <built-in>:79:24> 'bool' '>='
| | | | |   |-SubstNonTypeTemplateParmExpr 0xe1b470 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:264:48> 'long'
| | | | |   | `-IntegerLiteral 0xe1b450 <col:48> 'long' 1000000
| | | | |   `-UnaryOperator 0xc29ef8 <col:56, <built-in>:79:24> 'long' prefix '-'
| | | | |     `-IntegerLiteral 0xc29ed8 <col:24> 'long' 9223372036854775807
| | | | `-StringLiteral 0xc29fc8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:265:7> 'const char [13]' lvalue "out of range"
| | | |-VarDecl 0xe1b530 <line:268:7, line:269:71> line:268:33 referenced num 'const intmax_t':'const long' static constexpr cinit
| | | | `-BinaryOperator 0xe1c6c8 <line:269:9, col:71> 'long' '/'
| | | |   |-BinaryOperator 0xe1bb60 <col:9, col:37> 'long' '*'
| | | |   | |-SubstNonTypeTemplateParmExpr 0xe1b5c8 <col:9> 'long'
| | | |   | | `-IntegerLiteral 0xe1b5a8 <col:9> 'long' 1
| | | |   | `-ImplicitCastExpr 0xe1bb48 <col:16, col:37> 'long':'long' <LValueToRValue>
| | | |   |   `-DeclRefExpr 0xe1bb18 <col:16, col:37> 'const long':'const long' lvalue Var 0xd2bfd8 'value' 'const long':'const long' non_odr_use_constant
| | | |   `-ImplicitCastExpr 0xe1c6b0 <col:45, col:71> 'long':'long' <LValueToRValue>
| | | |     `-DeclRefExpr 0xe1c680 <col:45, col:71> 'const long':'const long' lvalue Var 0xd2bfd8 'value' 'const long':'const long' non_odr_use_constant
| | | |-VarDecl 0xe1c740 <line:271:7, line:272:63> line:271:33 referenced den 'const intmax_t':'const long' static constexpr cinit
| | | | `-BinaryOperator 0xe1e1e8 <line:272:9, col:63> 'long' '/'
| | | |   |-ImplicitCastExpr 0xe1e188 <col:9, col:29> 'long':'long' <LValueToRValue>
| | | |   | `-DeclRefExpr 0xe1e158 <col:9, col:29> 'const long':'const long' lvalue Var 0xe1cef8 'value' 'const long':'const long' non_odr_use_constant
| | | |   `-ImplicitCastExpr 0xe1e1d0 <col:37, col:63> 'long':'long' <LValueToRValue>
| | | |     `-DeclRefExpr 0xe1e1a0 <col:37, col:63> 'const long':'const long' lvalue Var 0xd2bfd8 'value' 'const long':'const long' non_odr_use_constant
| | | `-TypedefDecl 0xe1e880 <line:274:7, col:31> col:31 type 'ratio<num, den>':'std::ratio<1, 1000000>'
| | |   `-TemplateSpecializationType 0xe1e7e0 'ratio<num, den>' sugar ratio
| | |     |-TemplateArgument expr
| | |     | `-ConstantExpr 0xe1e780 <col:21> 'intmax_t':'long' Int: 1
| | |     |   `-ImplicitCastExpr 0xe1e768 <col:21> 'intmax_t':'long' <LValueToRValue>
| | |     |     `-DeclRefExpr 0xe1e4c8 <col:21> 'const intmax_t':'const long' lvalue Var 0xe1b530 'num' 'const intmax_t':'const long' non_odr_use_constant
| | |     |-TemplateArgument expr
| | |     | `-ConstantExpr 0xe1e7b8 <col:26> 'intmax_t':'long' Int: 1000000
| | |     |   `-ImplicitCastExpr 0xe1e7a0 <col:26> 'intmax_t':'long' <LValueToRValue>
| | |     |     `-DeclRefExpr 0xe1e748 <col:26> 'const intmax_t':'const long' lvalue Var 0xe1c740 'den' 'const intmax_t':'const long' non_odr_use_constant
| | |     `-RecordType 0xc4c4e0 'std::ratio<1, 1000000>'
| | |       `-ClassTemplateSpecialization 0xc4c3e0 'ratio'
| | |-ClassTemplateSpecializationDecl 0xc4c6f0 <line:260:3, line:275:5> line:261:12 struct ratio definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument integral 1
| | | |-TemplateArgument integral 1000
| | | |-CXXRecordDecl 0xe041f8 prev 0xc4c6f0 <col:5, col:12> col:12 implicit struct ratio
| | | |-StaticAssertDecl 0xe04320 <line:263:7, col:60> col:7
| | | | |-BinaryOperator 0xe042e0 <col:21, col:29> 'bool' '!='
| | | | | |-SubstNonTypeTemplateParmExpr 0xe042a8 <col:21> 'long'
| | | | | | `-IntegerLiteral 0xe04288 <col:21> 'long' 1000
| | | | | `-ImplicitCastExpr 0xe042c8 <col:29> 'long' <IntegralCast>
| | | | |   `-IntegerLiteral 0xc29d70 <col:29> 'int' 0
| | | | `-StringLiteral 0xc29dc8 <col:32> 'const char [27]' lvalue "denominator cannot be zero"
| | | |-StaticAssertDecl 0xe04460 <line:264:7, line:265:21> line:264:7
| | | | |-BinaryOperator 0xe04420 <col:21, <built-in>:79:24> 'bool' '&&'
| | | | | |-BinaryOperator 0xe043a0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:264:21, <built-in>:79:24> 'bool' '>='
| | | | | | |-SubstNonTypeTemplateParmExpr 0xe04380 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:264:21> 'long'
| | | | | | | `-IntegerLiteral 0xe04360 <col:21> 'long' 1
| | | | | | `-UnaryOperator 0xc29e80 <col:29, <built-in>:79:24> 'long' prefix '-'
| | | | | |   `-IntegerLiteral 0xc29e60 <col:24> 'long' 9223372036854775807
| | | | | `-BinaryOperator 0xe04400 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:264:48, <built-in>:79:24> 'bool' '>='
| | | | |   |-SubstNonTypeTemplateParmExpr 0xe043e0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:264:48> 'long'
| | | | |   | `-IntegerLiteral 0xe043c0 <col:48> 'long' 1000
| | | | |   `-UnaryOperator 0xc29ef8 <col:56, <built-in>:79:24> 'long' prefix '-'
| | | | |     `-IntegerLiteral 0xc29ed8 <col:24> 'long' 9223372036854775807
| | | | `-StringLiteral 0xc29fc8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:265:7> 'const char [13]' lvalue "out of range"
| | | |-VarDecl 0xe044a0 <line:268:7, line:269:71> line:268:33 referenced num 'const intmax_t':'const long' static constexpr cinit
| | | | `-BinaryOperator 0xe05638 <line:269:9, col:71> 'long' '/'
| | | |   |-BinaryOperator 0xe04ad0 <col:9, col:37> 'long' '*'
| | | |   | |-SubstNonTypeTemplateParmExpr 0xe04538 <col:9> 'long'
| | | |   | | `-IntegerLiteral 0xe04518 <col:9> 'long' 1
| | | |   | `-ImplicitCastExpr 0xe04ab8 <col:16, col:37> 'long':'long' <LValueToRValue>
| | | |   |   `-DeclRefExpr 0xe04a88 <col:16, col:37> 'const long':'const long' lvalue Var 0xd2bfd8 'value' 'const long':'const long' non_odr_use_constant
| | | |   `-ImplicitCastExpr 0xe05620 <col:45, col:71> 'long':'long' <LValueToRValue>
| | | |     `-DeclRefExpr 0xe055f0 <col:45, col:71> 'const long':'const long' lvalue Var 0xd2bfd8 'value' 'const long':'const long' non_odr_use_constant
| | | |-VarDecl 0xe056b0 <line:271:7, line:272:63> line:271:33 referenced den 'const intmax_t':'const long' static constexpr cinit
| | | | `-BinaryOperator 0xe06978 <line:272:9, col:63> 'long' '/'
| | | |   |-ImplicitCastExpr 0xe06918 <col:9, col:29> 'long':'long' <LValueToRValue>
| | | |   | `-DeclRefExpr 0xe068e8 <col:9, col:29> 'const long':'const long' lvalue Var 0xe05e68 'value' 'const long':'const long' non_odr_use_constant
| | | |   `-ImplicitCastExpr 0xe06960 <col:37, col:63> 'long':'long' <LValueToRValue>
| | | |     `-DeclRefExpr 0xe06930 <col:37, col:63> 'const long':'const long' lvalue Var 0xd2bfd8 'value' 'const long':'const long' non_odr_use_constant
| | | `-TypedefDecl 0xe07010 <line:274:7, col:31> col:31 type 'ratio<num, den>':'std::ratio<1, 1000>'
| | |   `-TemplateSpecializationType 0xe06f70 'ratio<num, den>' sugar ratio
| | |     |-TemplateArgument expr
| | |     | `-ConstantExpr 0xe06f10 <col:21> 'intmax_t':'long' Int: 1
| | |     |   `-ImplicitCastExpr 0xe06ef8 <col:21> 'intmax_t':'long' <LValueToRValue>
| | |     |     `-DeclRefExpr 0xe06c58 <col:21> 'const intmax_t':'const long' lvalue Var 0xe044a0 'num' 'const intmax_t':'const long' non_odr_use_constant
| | |     |-TemplateArgument expr
| | |     | `-ConstantExpr 0xe06f48 <col:26> 'intmax_t':'long' Int: 1000
| | |     |   `-ImplicitCastExpr 0xe06f30 <col:26> 'intmax_t':'long' <LValueToRValue>
| | |     |     `-DeclRefExpr 0xe06ed8 <col:26> 'const intmax_t':'const long' lvalue Var 0xe056b0 'den' 'const intmax_t':'const long' non_odr_use_constant
| | |     `-RecordType 0xc4c7f0 'std::ratio<1, 1000>'
| | |       `-ClassTemplateSpecialization 0xc4c6f0 'ratio'
| | |-ClassTemplateSpecializationDecl 0xc4ca00 <line:260:3, line:275:5> line:261:12 struct ratio
| | | |-TemplateArgument integral 1
| | | `-TemplateArgument integral 100
| | |-ClassTemplateSpecializationDecl 0xc4cd10 <line:260:3, line:275:5> line:261:12 struct ratio
| | | |-TemplateArgument integral 1
| | | `-TemplateArgument integral 10
| | |-ClassTemplateSpecializationDecl 0xc4d020 <line:260:3, line:275:5> line:261:12 struct ratio
| | | |-TemplateArgument integral 10
| | | `-TemplateArgument integral 1
| | |-ClassTemplateSpecializationDecl 0xc4d330 <line:260:3, line:275:5> line:261:12 struct ratio
| | | |-TemplateArgument integral 100
| | | `-TemplateArgument integral 1
| | |-ClassTemplateSpecializationDecl 0xc4d640 <line:260:3, line:275:5> line:261:12 struct ratio definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument integral 1000
| | | |-TemplateArgument integral 1
| | | |-CXXRecordDecl 0xe0dba8 prev 0xc4d640 <col:5, col:12> col:12 implicit struct ratio
| | | |-StaticAssertDecl 0xe0dcd0 <line:263:7, col:60> col:7
| | | | |-BinaryOperator 0xe0dc90 <col:21, col:29> 'bool' '!='
| | | | | |-SubstNonTypeTemplateParmExpr 0xe0dc58 <col:21> 'long'
| | | | | | `-IntegerLiteral 0xe0dc38 <col:21> 'long' 1
| | | | | `-ImplicitCastExpr 0xe0dc78 <col:29> 'long' <IntegralCast>
| | | | |   `-IntegerLiteral 0xc29d70 <col:29> 'int' 0
| | | | `-StringLiteral 0xc29dc8 <col:32> 'const char [27]' lvalue "denominator cannot be zero"
| | | |-StaticAssertDecl 0xe0de10 <line:264:7, line:265:21> line:264:7
| | | | |-BinaryOperator 0xe0ddd0 <col:21, <built-in>:79:24> 'bool' '&&'
| | | | | |-BinaryOperator 0xe0dd50 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:264:21, <built-in>:79:24> 'bool' '>='
| | | | | | |-SubstNonTypeTemplateParmExpr 0xe0dd30 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:264:21> 'long'
| | | | | | | `-IntegerLiteral 0xe0dd10 <col:21> 'long' 1000
| | | | | | `-UnaryOperator 0xc29e80 <col:29, <built-in>:79:24> 'long' prefix '-'
| | | | | |   `-IntegerLiteral 0xc29e60 <col:24> 'long' 9223372036854775807
| | | | | `-BinaryOperator 0xe0ddb0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:264:48, <built-in>:79:24> 'bool' '>='
| | | | |   |-SubstNonTypeTemplateParmExpr 0xe0dd90 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:264:48> 'long'
| | | | |   | `-IntegerLiteral 0xe0dd70 <col:48> 'long' 1
| | | | |   `-UnaryOperator 0xc29ef8 <col:56, <built-in>:79:24> 'long' prefix '-'
| | | | |     `-IntegerLiteral 0xc29ed8 <col:24> 'long' 9223372036854775807
| | | | `-StringLiteral 0xc29fc8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:265:7> 'const char [13]' lvalue "out of range"
| | | |-VarDecl 0xe0de50 <line:268:7, line:269:71> line:268:33 referenced num 'const intmax_t':'const long' static constexpr cinit
| | | | `-BinaryOperator 0xe0e2a0 <line:269:9, col:71> 'long' '/'
| | | |   |-BinaryOperator 0xe0e080 <col:9, col:37> 'long' '*'
| | | |   | |-SubstNonTypeTemplateParmExpr 0xe0dee8 <col:9> 'long'
| | | |   | | `-IntegerLiteral 0xe0dec8 <col:9> 'long' 1000
| | | |   | `-ImplicitCastExpr 0xe0e068 <col:16, col:37> 'long':'long' <LValueToRValue>
| | | |   |   `-DeclRefExpr 0xe0e038 <col:16, col:37> 'const long':'const long' lvalue Var 0xd2bfd8 'value' 'const long':'const long' non_odr_use_constant
| | | |   `-ImplicitCastExpr 0xe0e288 <col:45, col:71> 'long':'long' <LValueToRValue>
| | | |     `-DeclRefExpr 0xe0e258 <col:45, col:71> 'const long':'const long' lvalue Var 0xd2bfd8 'value' 'const long':'const long' non_odr_use_constant
| | | |-VarDecl 0xe0e318 <line:271:7, line:272:63> line:271:33 referenced den 'const intmax_t':'const long' static constexpr cinit
| | | | `-BinaryOperator 0xe0e708 <line:272:9, col:63> 'long' '/'
| | | |   |-ImplicitCastExpr 0xe0e6a8 <col:9, col:29> 'long':'long' <LValueToRValue>
| | | |   | `-DeclRefExpr 0xe0e678 <col:9, col:29> 'const long':'const long' lvalue Var 0xd2bfd8 'value' 'const long':'const long' non_odr_use_constant
| | | |   `-ImplicitCastExpr 0xe0e6f0 <col:37, col:63> 'long':'long' <LValueToRValue>
| | | |     `-DeclRefExpr 0xe0e6c0 <col:37, col:63> 'const long':'const long' lvalue Var 0xd2bfd8 'value' 'const long':'const long' non_odr_use_constant
| | | `-TypedefDecl 0xe0fb28 <line:274:7, col:31> col:31 type 'ratio<num, den>':'std::ratio<1000, 1>'
| | |   `-TemplateSpecializationType 0xe0ed00 'ratio<num, den>' sugar ratio
| | |     |-TemplateArgument expr
| | |     | `-ConstantExpr 0xe0eca0 <col:21> 'intmax_t':'long' Int: 1000
| | |     |   `-ImplicitCastExpr 0xe0ec88 <col:21> 'intmax_t':'long' <LValueToRValue>
| | |     |     `-DeclRefExpr 0xe0e9e8 <col:21> 'const intmax_t':'const long' lvalue Var 0xe0de50 'num' 'const intmax_t':'const long' non_odr_use_constant
| | |     |-TemplateArgument expr
| | |     | `-ConstantExpr 0xe0ecd8 <col:26> 'intmax_t':'long' Int: 1
| | |     |   `-ImplicitCastExpr 0xe0ecc0 <col:26> 'intmax_t':'long' <LValueToRValue>
| | |     |     `-DeclRefExpr 0xe0ec68 <col:26> 'const intmax_t':'const long' lvalue Var 0xe0e318 'den' 'const intmax_t':'const long' non_odr_use_constant
| | |     `-RecordType 0xc4d740 'std::ratio<1000, 1>'
| | |       `-ClassTemplateSpecialization 0xc4d640 'ratio'
| | |-ClassTemplateSpecializationDecl 0xc4d950 <line:260:3, line:275:5> line:261:12 struct ratio definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument integral 1000000
| | | |-TemplateArgument integral 1
| | | |-CXXRecordDecl 0xe249d8 prev 0xc4d950 <col:5, col:12> col:12 implicit struct ratio
| | | |-StaticAssertDecl 0xe24b00 <line:263:7, col:60> col:7
| | | | |-BinaryOperator 0xe24ac0 <col:21, col:29> 'bool' '!='
| | | | | |-SubstNonTypeTemplateParmExpr 0xe24a88 <col:21> 'long'
| | | | | | `-IntegerLiteral 0xe24a68 <col:21> 'long' 1
| | | | | `-ImplicitCastExpr 0xe24aa8 <col:29> 'long' <IntegralCast>
| | | | |   `-IntegerLiteral 0xc29d70 <col:29> 'int' 0
| | | | `-StringLiteral 0xc29dc8 <col:32> 'const char [27]' lvalue "denominator cannot be zero"
| | | |-StaticAssertDecl 0xe24c40 <line:264:7, line:265:21> line:264:7
| | | | |-BinaryOperator 0xe24c00 <col:21, <built-in>:79:24> 'bool' '&&'
| | | | | |-BinaryOperator 0xe24b80 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:264:21, <built-in>:79:24> 'bool' '>='
| | | | | | |-SubstNonTypeTemplateParmExpr 0xe24b60 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:264:21> 'long'
| | | | | | | `-IntegerLiteral 0xe24b40 <col:21> 'long' 1000000
| | | | | | `-UnaryOperator 0xc29e80 <col:29, <built-in>:79:24> 'long' prefix '-'
| | | | | |   `-IntegerLiteral 0xc29e60 <col:24> 'long' 9223372036854775807
| | | | | `-BinaryOperator 0xe24be0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:264:48, <built-in>:79:24> 'bool' '>='
| | | | |   |-SubstNonTypeTemplateParmExpr 0xe24bc0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:264:48> 'long'
| | | | |   | `-IntegerLiteral 0xe24ba0 <col:48> 'long' 1
| | | | |   `-UnaryOperator 0xc29ef8 <col:56, <built-in>:79:24> 'long' prefix '-'
| | | | |     `-IntegerLiteral 0xc29ed8 <col:24> 'long' 9223372036854775807
| | | | `-StringLiteral 0xc29fc8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:265:7> 'const char [13]' lvalue "out of range"
| | | |-VarDecl 0xe24c80 <line:268:7, line:269:71> line:268:33 referenced num 'const intmax_t':'const long' static constexpr cinit
| | | | `-BinaryOperator 0xe250d0 <line:269:9, col:71> 'long' '/'
| | | |   |-BinaryOperator 0xe24eb0 <col:9, col:37> 'long' '*'
| | | |   | |-SubstNonTypeTemplateParmExpr 0xe24d18 <col:9> 'long'
| | | |   | | `-IntegerLiteral 0xe24cf8 <col:9> 'long' 1000000
| | | |   | `-ImplicitCastExpr 0xe24e98 <col:16, col:37> 'long':'long' <LValueToRValue>
| | | |   |   `-DeclRefExpr 0xe24e68 <col:16, col:37> 'const long':'const long' lvalue Var 0xd2bfd8 'value' 'const long':'const long' non_odr_use_constant
| | | |   `-ImplicitCastExpr 0xe250b8 <col:45, col:71> 'long':'long' <LValueToRValue>
| | | |     `-DeclRefExpr 0xe25088 <col:45, col:71> 'const long':'const long' lvalue Var 0xd2bfd8 'value' 'const long':'const long' non_odr_use_constant
| | | |-VarDecl 0xe25148 <line:271:7, line:272:63> line:271:33 referenced den 'const intmax_t':'const long' static constexpr cinit
| | | | `-BinaryOperator 0xe25538 <line:272:9, col:63> 'long' '/'
| | | |   |-ImplicitCastExpr 0xe254d8 <col:9, col:29> 'long':'long' <LValueToRValue>
| | | |   | `-DeclRefExpr 0xe254a8 <col:9, col:29> 'const long':'const long' lvalue Var 0xd2bfd8 'value' 'const long':'const long' non_odr_use_constant
| | | |   `-ImplicitCastExpr 0xe25520 <col:37, col:63> 'long':'long' <LValueToRValue>
| | | |     `-DeclRefExpr 0xe254f0 <col:37, col:63> 'const long':'const long' lvalue Var 0xd2bfd8 'value' 'const long':'const long' non_odr_use_constant
| | | `-TypedefDecl 0xe27720 <line:274:7, col:31> col:31 type 'ratio<num, den>':'std::ratio<1000000, 1>'
| | |   `-TemplateSpecializationType 0xe27680 'ratio<num, den>' sugar ratio
| | |     |-TemplateArgument expr
| | |     | `-ConstantExpr 0xe27628 <col:21> 'intmax_t':'long' Int: 1000000
| | |     |   `-ImplicitCastExpr 0xe27610 <col:21> 'intmax_t':'long' <LValueToRValue>
| | |     |     `-DeclRefExpr 0xe25818 <col:21> 'const intmax_t':'const long' lvalue Var 0xe24c80 'num' 'const intmax_t':'const long' non_odr_use_constant
| | |     |-TemplateArgument expr
| | |     | `-ConstantExpr 0xe27660 <col:26> 'intmax_t':'long' Int: 1
| | |     |   `-ImplicitCastExpr 0xe27648 <col:26> 'intmax_t':'long' <LValueToRValue>
| | |     |     `-DeclRefExpr 0xe275f0 <col:26> 'const intmax_t':'const long' lvalue Var 0xe25148 'den' 'const intmax_t':'const long' non_odr_use_constant
| | |     `-RecordType 0xc4da50 'std::ratio<1000000, 1>'
| | |       `-ClassTemplateSpecialization 0xc4d950 'ratio'
| | |-ClassTemplateSpecializationDecl 0xc4dc60 <line:260:3, line:275:5> line:261:12 struct ratio definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument integral 1000000000
| | | |-TemplateArgument integral 1
| | | |-CXXRecordDecl 0xd45c08 prev 0xc4dc60 <col:5, col:12> col:12 implicit struct ratio
| | | |-StaticAssertDecl 0xd45d30 <line:263:7, col:60> col:7
| | | | |-BinaryOperator 0xd45cf0 <col:21, col:29> 'bool' '!='
| | | | | |-SubstNonTypeTemplateParmExpr 0xd45cb8 <col:21> 'long'
| | | | | | `-IntegerLiteral 0xd45c98 <col:21> 'long' 1
| | | | | `-ImplicitCastExpr 0xd45cd8 <col:29> 'long' <IntegralCast>
| | | | |   `-IntegerLiteral 0xc29d70 <col:29> 'int' 0
| | | | `-StringLiteral 0xc29dc8 <col:32> 'const char [27]' lvalue "denominator cannot be zero"
| | | |-StaticAssertDecl 0xd45e70 <line:264:7, line:265:21> line:264:7
| | | | |-BinaryOperator 0xd45e30 <col:21, <built-in>:79:24> 'bool' '&&'
| | | | | |-BinaryOperator 0xd45db0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:264:21, <built-in>:79:24> 'bool' '>='
| | | | | | |-SubstNonTypeTemplateParmExpr 0xd45d90 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:264:21> 'long'
| | | | | | | `-IntegerLiteral 0xd45d70 <col:21> 'long' 1000000000
| | | | | | `-UnaryOperator 0xc29e80 <col:29, <built-in>:79:24> 'long' prefix '-'
| | | | | |   `-IntegerLiteral 0xc29e60 <col:24> 'long' 9223372036854775807
| | | | | `-BinaryOperator 0xd45e10 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:264:48, <built-in>:79:24> 'bool' '>='
| | | | |   |-SubstNonTypeTemplateParmExpr 0xd45df0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:264:48> 'long'
| | | | |   | `-IntegerLiteral 0xd45dd0 <col:48> 'long' 1
| | | | |   `-UnaryOperator 0xc29ef8 <col:56, <built-in>:79:24> 'long' prefix '-'
| | | | |     `-IntegerLiteral 0xc29ed8 <col:24> 'long' 9223372036854775807
| | | | `-StringLiteral 0xc29fc8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:265:7> 'const char [13]' lvalue "out of range"
| | | |-VarDecl 0xd45eb0 <line:268:7, line:269:71> line:268:33 referenced num 'const intmax_t':'const long' static constexpr cinit
| | | | `-BinaryOperator 0xd46300 <line:269:9, col:71> 'long' '/'
| | | |   |-BinaryOperator 0xd460e0 <col:9, col:37> 'long' '*'
| | | |   | |-SubstNonTypeTemplateParmExpr 0xd45f48 <col:9> 'long'
| | | |   | | `-IntegerLiteral 0xd45f28 <col:9> 'long' 1000000000
| | | |   | `-ImplicitCastExpr 0xd460c8 <col:16, col:37> 'long':'long' <LValueToRValue>
| | | |   |   `-DeclRefExpr 0xd46098 <col:16, col:37> 'const long':'const long' lvalue Var 0xd2bfd8 'value' 'const long':'const long' non_odr_use_constant
| | | |   `-ImplicitCastExpr 0xd462e8 <col:45, col:71> 'long':'long' <LValueToRValue>
| | | |     `-DeclRefExpr 0xd462b8 <col:45, col:71> 'const long':'const long' lvalue Var 0xd2bfd8 'value' 'const long':'const long' non_odr_use_constant
| | | |-VarDecl 0xd46378 <line:271:7, line:272:63> line:271:33 referenced den 'const intmax_t':'const long' static constexpr cinit
| | | | `-BinaryOperator 0xd46768 <line:272:9, col:63> 'long' '/'
| | | |   |-ImplicitCastExpr 0xd46708 <col:9, col:29> 'long':'long' <LValueToRValue>
| | | |   | `-DeclRefExpr 0xd466d8 <col:9, col:29> 'const long':'const long' lvalue Var 0xd2bfd8 'value' 'const long':'const long' non_odr_use_constant
| | | |   `-ImplicitCastExpr 0xd46750 <col:37, col:63> 'long':'long' <LValueToRValue>
| | | |     `-DeclRefExpr 0xd46720 <col:37, col:63> 'const long':'const long' lvalue Var 0xd2bfd8 'value' 'const long':'const long' non_odr_use_constant
| | | `-TypedefDecl 0xd46e30 <line:274:7, col:31> col:31 type 'ratio<num, den>':'std::ratio<1000000000, 1>'
| | |   `-TemplateSpecializationType 0xd46d90 'ratio<num, den>' sugar ratio
| | |     |-TemplateArgument expr
| | |     | `-ConstantExpr 0xd46d30 <col:21> 'intmax_t':'long' Int: 1000000000
| | |     |   `-ImplicitCastExpr 0xd46d18 <col:21> 'intmax_t':'long' <LValueToRValue>
| | |     |     `-DeclRefExpr 0xd46a78 <col:21> 'const intmax_t':'const long' lvalue Var 0xd45eb0 'num' 'const intmax_t':'const long' non_odr_use_constant
| | |     |-TemplateArgument expr
| | |     | `-ConstantExpr 0xd46d68 <col:26> 'intmax_t':'long' Int: 1
| | |     |   `-ImplicitCastExpr 0xd46d50 <col:26> 'intmax_t':'long' <LValueToRValue>
| | |     |     `-DeclRefExpr 0xd46cf8 <col:26> 'const intmax_t':'const long' lvalue Var 0xd46378 'den' 'const intmax_t':'const long' non_odr_use_constant
| | |     `-RecordType 0xc4dd60 'std::ratio<1000000000, 1>'
| | |       `-ClassTemplateSpecialization 0xc4dc60 'ratio'
| | |-ClassTemplateSpecializationDecl 0xc4df58 <line:260:3, line:275:5> line:261:12 struct ratio
| | | |-TemplateArgument integral 1000000000000
| | | `-TemplateArgument integral 1
| | |-ClassTemplateSpecializationDecl 0xc4e248 <line:260:3, line:275:5> line:261:12 struct ratio
| | | |-TemplateArgument integral 1000000000000000
| | | `-TemplateArgument integral 1
| | |-ClassTemplateSpecializationDecl 0xc4e538 <line:260:3, line:275:5> line:261:12 struct ratio
| | | |-TemplateArgument integral 1000000000000000000
| | | `-TemplateArgument integral 1
| | |-ClassTemplateSpecializationDecl 0xcedb38 <line:260:3, line:275:5> line:261:12 struct ratio definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument integral 1
| | | |-TemplateArgument integral 1
| | | |-CXXRecordDecl 0xd4a8b8 prev 0xcedb38 <col:5, col:12> col:12 implicit struct ratio
| | | |-StaticAssertDecl 0xd4a9e0 <line:263:7, col:60> col:7
| | | | |-BinaryOperator 0xd4a9a0 <col:21, col:29> 'bool' '!='
| | | | | |-SubstNonTypeTemplateParmExpr 0xd4a968 <col:21> 'long'
| | | | | | `-IntegerLiteral 0xd4a948 <col:21> 'long' 1
| | | | | `-ImplicitCastExpr 0xd4a988 <col:29> 'long' <IntegralCast>
| | | | |   `-IntegerLiteral 0xc29d70 <col:29> 'int' 0
| | | | `-StringLiteral 0xc29dc8 <col:32> 'const char [27]' lvalue "denominator cannot be zero"
| | | |-StaticAssertDecl 0xd4ab20 <line:264:7, line:265:21> line:264:7
| | | | |-BinaryOperator 0xd4aae0 <col:21, <built-in>:79:24> 'bool' '&&'
| | | | | |-BinaryOperator 0xd4aa60 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:264:21, <built-in>:79:24> 'bool' '>='
| | | | | | |-SubstNonTypeTemplateParmExpr 0xd4aa40 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:264:21> 'long'
| | | | | | | `-IntegerLiteral 0xd4aa20 <col:21> 'long' 1
| | | | | | `-UnaryOperator 0xc29e80 <col:29, <built-in>:79:24> 'long' prefix '-'
| | | | | |   `-IntegerLiteral 0xc29e60 <col:24> 'long' 9223372036854775807
| | | | | `-BinaryOperator 0xd4aac0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:264:48, <built-in>:79:24> 'bool' '>='
| | | | |   |-SubstNonTypeTemplateParmExpr 0xd4aaa0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:264:48> 'long'
| | | | |   | `-IntegerLiteral 0xd4aa80 <col:48> 'long' 1
| | | | |   `-UnaryOperator 0xc29ef8 <col:56, <built-in>:79:24> 'long' prefix '-'
| | | | |     `-IntegerLiteral 0xc29ed8 <col:24> 'long' 9223372036854775807
| | | | `-StringLiteral 0xc29fc8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:265:7> 'const char [13]' lvalue "out of range"
| | | |-VarDecl 0xd4ab60 <line:268:7, line:269:71> line:268:33 referenced num 'const intmax_t':'const long' static constexpr cinit
| | | | `-BinaryOperator 0xd4afb0 <line:269:9, col:71> 'long' '/'
| | | |   |-BinaryOperator 0xd4ad90 <col:9, col:37> 'long' '*'
| | | |   | |-SubstNonTypeTemplateParmExpr 0xd4abf8 <col:9> 'long'
| | | |   | | `-IntegerLiteral 0xd4abd8 <col:9> 'long' 1
| | | |   | `-ImplicitCastExpr 0xd4ad78 <col:16, col:37> 'long':'long' <LValueToRValue>
| | | |   |   `-DeclRefExpr 0xd4ad48 <col:16, col:37> 'const long':'const long' lvalue Var 0xd2bfd8 'value' 'const long':'const long' non_odr_use_constant
| | | |   `-ImplicitCastExpr 0xd4af98 <col:45, col:71> 'long':'long' <LValueToRValue>
| | | |     `-DeclRefExpr 0xd4af68 <col:45, col:71> 'const long':'const long' lvalue Var 0xd2bfd8 'value' 'const long':'const long' non_odr_use_constant
| | | |-VarDecl 0xd4b028 <line:271:7, line:272:63> line:271:33 referenced den 'const intmax_t':'const long' static constexpr cinit
| | | | `-BinaryOperator 0xd4b418 <line:272:9, col:63> 'long' '/'
| | | |   |-ImplicitCastExpr 0xd4b3b8 <col:9, col:29> 'long':'long' <LValueToRValue>
| | | |   | `-DeclRefExpr 0xd4b388 <col:9, col:29> 'const long':'const long' lvalue Var 0xd2bfd8 'value' 'const long':'const long' non_odr_use_constant
| | | |   `-ImplicitCastExpr 0xd4b400 <col:37, col:63> 'long':'long' <LValueToRValue>
| | | |     `-DeclRefExpr 0xd4b3d0 <col:37, col:63> 'const long':'const long' lvalue Var 0xd2bfd8 'value' 'const long':'const long' non_odr_use_constant
| | | `-TypedefDecl 0xd4bab0 <line:274:7, col:31> col:31 type 'ratio<num, den>':'std::ratio<1, 1>'
| | |   `-TemplateSpecializationType 0xd4ba10 'ratio<num, den>' sugar ratio
| | |     |-TemplateArgument expr
| | |     | `-ConstantExpr 0xd4b9b0 <col:21> 'intmax_t':'long' Int: 1
| | |     |   `-ImplicitCastExpr 0xd4b998 <col:21> 'intmax_t':'long' <LValueToRValue>
| | |     |     `-DeclRefExpr 0xd4b6f8 <col:21> 'const intmax_t':'const long' lvalue Var 0xd4ab60 'num' 'const intmax_t':'const long' non_odr_use_constant
| | |     |-TemplateArgument expr
| | |     | `-ConstantExpr 0xd4b9e8 <col:26> 'intmax_t':'long' Int: 1
| | |     |   `-ImplicitCastExpr 0xd4b9d0 <col:26> 'intmax_t':'long' <LValueToRValue>
| | |     |     `-DeclRefExpr 0xd4b978 <col:26> 'const intmax_t':'const long' lvalue Var 0xd4b028 'den' 'const intmax_t':'const long' non_odr_use_constant
| | |     `-RecordType 0xcedc30 'std::ratio<1, 1>'
| | |       `-ClassTemplateSpecialization 0xcedb38 'ratio'
| | |-ClassTemplateSpecializationDecl 0xd1da68 <line:260:3, line:275:5> line:261:12 struct ratio definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument integral 60
| | | |-TemplateArgument integral 1
| | | |-CXXRecordDecl 0xde0e68 prev 0xd1da68 <col:5, col:12> col:12 implicit struct ratio
| | | |-StaticAssertDecl 0xde0f90 <line:263:7, col:60> col:7
| | | | |-BinaryOperator 0xde0f50 <col:21, col:29> 'bool' '!='
| | | | | |-SubstNonTypeTemplateParmExpr 0xde0f18 <col:21> 'long'
| | | | | | `-IntegerLiteral 0xde0ef8 <col:21> 'long' 1
| | | | | `-ImplicitCastExpr 0xde0f38 <col:29> 'long' <IntegralCast>
| | | | |   `-IntegerLiteral 0xc29d70 <col:29> 'int' 0
| | | | `-StringLiteral 0xc29dc8 <col:32> 'const char [27]' lvalue "denominator cannot be zero"
| | | |-StaticAssertDecl 0xde10d0 <line:264:7, line:265:21> line:264:7
| | | | |-BinaryOperator 0xde1090 <col:21, <built-in>:79:24> 'bool' '&&'
| | | | | |-BinaryOperator 0xde1010 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:264:21, <built-in>:79:24> 'bool' '>='
| | | | | | |-SubstNonTypeTemplateParmExpr 0xde0ff0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:264:21> 'long'
| | | | | | | `-IntegerLiteral 0xde0fd0 <col:21> 'long' 60
| | | | | | `-UnaryOperator 0xc29e80 <col:29, <built-in>:79:24> 'long' prefix '-'
| | | | | |   `-IntegerLiteral 0xc29e60 <col:24> 'long' 9223372036854775807
| | | | | `-BinaryOperator 0xde1070 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:264:48, <built-in>:79:24> 'bool' '>='
| | | | |   |-SubstNonTypeTemplateParmExpr 0xde1050 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:264:48> 'long'
| | | | |   | `-IntegerLiteral 0xde1030 <col:48> 'long' 1
| | | | |   `-UnaryOperator 0xc29ef8 <col:56, <built-in>:79:24> 'long' prefix '-'
| | | | |     `-IntegerLiteral 0xc29ed8 <col:24> 'long' 9223372036854775807
| | | | `-StringLiteral 0xc29fc8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:265:7> 'const char [13]' lvalue "out of range"
| | | |-VarDecl 0xde1110 <line:268:7, line:269:71> line:268:33 referenced num 'const intmax_t':'const long' static constexpr cinit
| | | | `-BinaryOperator 0xde1a00 <line:269:9, col:71> 'long' '/'
| | | |   |-BinaryOperator 0xde1340 <col:9, col:37> 'long' '*'
| | | |   | |-SubstNonTypeTemplateParmExpr 0xde11a8 <col:9> 'long'
| | | |   | | `-IntegerLiteral 0xde1188 <col:9> 'long' 60
| | | |   | `-ImplicitCastExpr 0xde1328 <col:16, col:37> 'long':'long' <LValueToRValue>
| | | |   |   `-DeclRefExpr 0xde12f8 <col:16, col:37> 'const long':'const long' lvalue Var 0xd2bfd8 'value' 'const long':'const long' non_odr_use_constant
| | | |   `-ImplicitCastExpr 0xde19e8 <col:45, col:71> 'long':'long' <LValueToRValue>
| | | |     `-DeclRefExpr 0xde19b8 <col:45, col:71> 'const long':'const long' lvalue Var 0xd2bfd8 'value' 'const long':'const long' non_odr_use_constant
| | | |-VarDecl 0xde1a78 <line:271:7, line:272:63> line:271:33 referenced den 'const intmax_t':'const long' static constexpr cinit
| | | | `-BinaryOperator 0xde1e68 <line:272:9, col:63> 'long' '/'
| | | |   |-ImplicitCastExpr 0xde1e08 <col:9, col:29> 'long':'long' <LValueToRValue>
| | | |   | `-DeclRefExpr 0xde1dd8 <col:9, col:29> 'const long':'const long' lvalue Var 0xd2bfd8 'value' 'const long':'const long' non_odr_use_constant
| | | |   `-ImplicitCastExpr 0xde1e50 <col:37, col:63> 'long':'long' <LValueToRValue>
| | | |     `-DeclRefExpr 0xde1e20 <col:37, col:63> 'const long':'const long' lvalue Var 0xd2bfd8 'value' 'const long':'const long' non_odr_use_constant
| | | `-TypedefDecl 0xde2500 <line:274:7, col:31> col:31 type 'ratio<num, den>':'std::ratio<60, 1>'
| | |   `-TemplateSpecializationType 0xde2460 'ratio<num, den>' sugar ratio
| | |     |-TemplateArgument expr
| | |     | `-ConstantExpr 0xde2400 <col:21> 'intmax_t':'long' Int: 60
| | |     |   `-ImplicitCastExpr 0xde23e8 <col:21> 'intmax_t':'long' <LValueToRValue>
| | |     |     `-DeclRefExpr 0xde2148 <col:21> 'const intmax_t':'const long' lvalue Var 0xde1110 'num' 'const intmax_t':'const long' non_odr_use_constant
| | |     |-TemplateArgument expr
| | |     | `-ConstantExpr 0xde2438 <col:26> 'intmax_t':'long' Int: 1
| | |     |   `-ImplicitCastExpr 0xde2420 <col:26> 'intmax_t':'long' <LValueToRValue>
| | |     |     `-DeclRefExpr 0xde23c8 <col:26> 'const intmax_t':'const long' lvalue Var 0xde1a78 'den' 'const intmax_t':'const long' non_odr_use_constant
| | |     `-RecordType 0xd1db60 'std::ratio<60, 1>'
| | |       `-ClassTemplateSpecialization 0xd1da68 'ratio'
| | |-ClassTemplateSpecializationDecl 0xd1df20 <line:260:3, line:275:5> line:261:12 struct ratio definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument integral 3600
| | | |-TemplateArgument integral 1
| | | |-CXXRecordDecl 0xdc04d0 prev 0xd1df20 <col:5, col:12> col:12 implicit struct ratio
| | | |-StaticAssertDecl 0xdc05f8 <line:263:7, col:60> col:7
| | | | |-BinaryOperator 0xdc05b8 <col:21, col:29> 'bool' '!='
| | | | | |-SubstNonTypeTemplateParmExpr 0xdc0580 <col:21> 'long'
| | | | | | `-IntegerLiteral 0xdc0560 <col:21> 'long' 1
| | | | | `-ImplicitCastExpr 0xdc05a0 <col:29> 'long' <IntegralCast>
| | | | |   `-IntegerLiteral 0xc29d70 <col:29> 'int' 0
| | | | `-StringLiteral 0xc29dc8 <col:32> 'const char [27]' lvalue "denominator cannot be zero"
| | | |-StaticAssertDecl 0xdc0738 <line:264:7, line:265:21> line:264:7
| | | | |-BinaryOperator 0xdc06f8 <col:21, <built-in>:79:24> 'bool' '&&'
| | | | | |-BinaryOperator 0xdc0678 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:264:21, <built-in>:79:24> 'bool' '>='
| | | | | | |-SubstNonTypeTemplateParmExpr 0xdc0658 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:264:21> 'long'
| | | | | | | `-IntegerLiteral 0xdc0638 <col:21> 'long' 3600
| | | | | | `-UnaryOperator 0xc29e80 <col:29, <built-in>:79:24> 'long' prefix '-'
| | | | | |   `-IntegerLiteral 0xc29e60 <col:24> 'long' 9223372036854775807
| | | | | `-BinaryOperator 0xdc06d8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:264:48, <built-in>:79:24> 'bool' '>='
| | | | |   |-SubstNonTypeTemplateParmExpr 0xdc06b8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:264:48> 'long'
| | | | |   | `-IntegerLiteral 0xdc0698 <col:48> 'long' 1
| | | | |   `-UnaryOperator 0xc29ef8 <col:56, <built-in>:79:24> 'long' prefix '-'
| | | | |     `-IntegerLiteral 0xc29ed8 <col:24> 'long' 9223372036854775807
| | | | `-StringLiteral 0xc29fc8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:265:7> 'const char [13]' lvalue "out of range"
| | | |-VarDecl 0xdc0778 <line:268:7, line:269:71> line:268:33 referenced num 'const intmax_t':'const long' static constexpr cinit
| | | | `-BinaryOperator 0xdc1060 <line:269:9, col:71> 'long' '/'
| | | |   |-BinaryOperator 0xdc09a0 <col:9, col:37> 'long' '*'
| | | |   | |-SubstNonTypeTemplateParmExpr 0xdc0810 <col:9> 'long'
| | | |   | | `-IntegerLiteral 0xdc07f0 <col:9> 'long' 3600
| | | |   | `-ImplicitCastExpr 0xdc0988 <col:16, col:37> 'long':'long' <LValueToRValue>
| | | |   |   `-DeclRefExpr 0xdc0958 <col:16, col:37> 'const long':'const long' lvalue Var 0xd2bfd8 'value' 'const long':'const long' non_odr_use_constant
| | | |   `-ImplicitCastExpr 0xdc1048 <col:45, col:71> 'long':'long' <LValueToRValue>
| | | |     `-DeclRefExpr 0xdc1018 <col:45, col:71> 'const long':'const long' lvalue Var 0xd2bfd8 'value' 'const long':'const long' non_odr_use_constant
| | | |-VarDecl 0xdc10d8 <line:271:7, line:272:63> line:271:33 referenced den 'const intmax_t':'const long' static constexpr cinit
| | | | `-BinaryOperator 0xdc14c8 <line:272:9, col:63> 'long' '/'
| | | |   |-ImplicitCastExpr 0xdc1468 <col:9, col:29> 'long':'long' <LValueToRValue>
| | | |   | `-DeclRefExpr 0xdc1438 <col:9, col:29> 'const long':'const long' lvalue Var 0xd2bfd8 'value' 'const long':'const long' non_odr_use_constant
| | | |   `-ImplicitCastExpr 0xdc14b0 <col:37, col:63> 'long':'long' <LValueToRValue>
| | | |     `-DeclRefExpr 0xdc1480 <col:37, col:63> 'const long':'const long' lvalue Var 0xd2bfd8 'value' 'const long':'const long' non_odr_use_constant
| | | `-TypedefDecl 0xdc1b60 <line:274:7, col:31> col:31 type 'ratio<num, den>':'std::ratio<3600, 1>'
| | |   `-TemplateSpecializationType 0xdc1ac0 'ratio<num, den>' sugar ratio
| | |     |-TemplateArgument expr
| | |     | `-ConstantExpr 0xdc1a60 <col:21> 'intmax_t':'long' Int: 3600
| | |     |   `-ImplicitCastExpr 0xdc1a48 <col:21> 'intmax_t':'long' <LValueToRValue>
| | |     |     `-DeclRefExpr 0xdc17a8 <col:21> 'const intmax_t':'const long' lvalue Var 0xdc0778 'num' 'const intmax_t':'const long' non_odr_use_constant
| | |     |-TemplateArgument expr
| | |     | `-ConstantExpr 0xdc1a98 <col:26> 'intmax_t':'long' Int: 1
| | |     |   `-ImplicitCastExpr 0xdc1a80 <col:26> 'intmax_t':'long' <LValueToRValue>
| | |     |     `-DeclRefExpr 0xdc1a28 <col:26> 'const intmax_t':'const long' lvalue Var 0xdc10d8 'den' 'const intmax_t':'const long' non_odr_use_constant
| | |     `-RecordType 0xd1e020 'std::ratio<3600, 1>'
| | |       `-ClassTemplateSpecialization 0xd1df20 'ratio'
| | |-ClassTemplateSpecializationDecl 0xdd1628 <line:260:3, line:275:5> line:261:12 struct ratio definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument integral 1
| | | |-TemplateArgument integral 3600
| | | |-CXXRecordDecl 0xdd1ce8 prev 0xdd1628 <col:5, col:12> col:12 implicit struct ratio
| | | |-StaticAssertDecl 0xdd1e10 <line:263:7, col:60> col:7
| | | | |-BinaryOperator 0xdd1dd0 <col:21, col:29> 'bool' '!='
| | | | | |-SubstNonTypeTemplateParmExpr 0xdd1d98 <col:21> 'long'
| | | | | | `-IntegerLiteral 0xdd1d78 <col:21> 'long' 3600
| | | | | `-ImplicitCastExpr 0xdd1db8 <col:29> 'long' <IntegralCast>
| | | | |   `-IntegerLiteral 0xc29d70 <col:29> 'int' 0
| | | | `-StringLiteral 0xc29dc8 <col:32> 'const char [27]' lvalue "denominator cannot be zero"
| | | |-StaticAssertDecl 0xdd1f50 <line:264:7, line:265:21> line:264:7
| | | | |-BinaryOperator 0xdd1f10 <col:21, <built-in>:79:24> 'bool' '&&'
| | | | | |-BinaryOperator 0xdd1e90 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:264:21, <built-in>:79:24> 'bool' '>='
| | | | | | |-SubstNonTypeTemplateParmExpr 0xdd1e70 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:264:21> 'long'
| | | | | | | `-IntegerLiteral 0xdd1e50 <col:21> 'long' 1
| | | | | | `-UnaryOperator 0xc29e80 <col:29, <built-in>:79:24> 'long' prefix '-'
| | | | | |   `-IntegerLiteral 0xc29e60 <col:24> 'long' 9223372036854775807
| | | | | `-BinaryOperator 0xdd1ef0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:264:48, <built-in>:79:24> 'bool' '>='
| | | | |   |-SubstNonTypeTemplateParmExpr 0xdd1ed0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:264:48> 'long'
| | | | |   | `-IntegerLiteral 0xdd1eb0 <col:48> 'long' 3600
| | | | |   `-UnaryOperator 0xc29ef8 <col:56, <built-in>:79:24> 'long' prefix '-'
| | | | |     `-IntegerLiteral 0xc29ed8 <col:24> 'long' 9223372036854775807
| | | | `-StringLiteral 0xc29fc8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:265:7> 'const char [13]' lvalue "out of range"
| | | |-VarDecl 0xdd1f90 <line:268:7, line:269:71> line:268:33 referenced num 'const intmax_t':'const long' static constexpr cinit
| | | | `-BinaryOperator 0xdd2c80 <line:269:9, col:71> 'long' '/'
| | | |   |-BinaryOperator 0xdd25c0 <col:9, col:37> 'long' '*'
| | | |   | |-SubstNonTypeTemplateParmExpr 0xdd2028 <col:9> 'long'
| | | |   | | `-IntegerLiteral 0xdd2008 <col:9> 'long' 1
| | | |   | `-ImplicitCastExpr 0xdd25a8 <col:16, col:37> 'long':'long' <LValueToRValue>
| | | |   |   `-DeclRefExpr 0xdd2578 <col:16, col:37> 'const long':'const long' lvalue Var 0xd2bfd8 'value' 'const long':'const long' non_odr_use_constant
| | | |   `-ImplicitCastExpr 0xdd2c68 <col:45, col:71> 'long':'long' <LValueToRValue>
| | | |     `-DeclRefExpr 0xdd2c38 <col:45, col:71> 'const long':'const long' lvalue Var 0xd2bfd8 'value' 'const long':'const long' non_odr_use_constant
| | | |-VarDecl 0xdd2cf8 <line:271:7, line:272:63> line:271:33 referenced den 'const intmax_t':'const long' static constexpr cinit
| | | | `-BinaryOperator 0xdd3f58 <line:272:9, col:63> 'long' '/'
| | | |   |-ImplicitCastExpr 0xdd3ef8 <col:9, col:29> 'long':'long' <LValueToRValue>
| | | |   | `-DeclRefExpr 0xdd3ec8 <col:9, col:29> 'const long':'const long' lvalue Var 0xdd34a8 'value' 'const long':'const long' non_odr_use_constant
| | | |   `-ImplicitCastExpr 0xdd3f40 <col:37, col:63> 'long':'long' <LValueToRValue>
| | | |     `-DeclRefExpr 0xdd3f10 <col:37, col:63> 'const long':'const long' lvalue Var 0xd2bfd8 'value' 'const long':'const long' non_odr_use_constant
| | | `-TypedefDecl 0xdd45f0 <line:274:7, col:31> col:31 type 'ratio<num, den>':'std::ratio<1, 3600>'
| | |   `-TemplateSpecializationType 0xdd4550 'ratio<num, den>' sugar ratio
| | |     |-TemplateArgument expr
| | |     | `-ConstantExpr 0xdd44f0 <col:21> 'intmax_t':'long' Int: 1
| | |     |   `-ImplicitCastExpr 0xdd44d8 <col:21> 'intmax_t':'long' <LValueToRValue>
| | |     |     `-DeclRefExpr 0xdd4238 <col:21> 'const intmax_t':'const long' lvalue Var 0xdd1f90 'num' 'const intmax_t':'const long' non_odr_use_constant
| | |     |-TemplateArgument expr
| | |     | `-ConstantExpr 0xdd4528 <col:26> 'intmax_t':'long' Int: 3600
| | |     |   `-ImplicitCastExpr 0xdd4510 <col:26> 'intmax_t':'long' <LValueToRValue>
| | |     |     `-DeclRefExpr 0xdd44b8 <col:26> 'const intmax_t':'const long' lvalue Var 0xdd2cf8 'den' 'const intmax_t':'const long' non_odr_use_constant
| | |     `-RecordType 0xdd1720 'std::ratio<1, 3600>'
| | |       `-ClassTemplateSpecialization 0xdd1628 'ratio'
| | `-ClassTemplateSpecializationDecl 0xde9b98 <line:260:3, line:275:5> line:261:12 struct ratio definition
| |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-TemplateArgument integral 1
| |   |-TemplateArgument integral 60
| |   |-CXXRecordDecl 0xdea258 prev 0xde9b98 <col:5, col:12> col:12 implicit struct ratio
| |   |-StaticAssertDecl 0xdea380 <line:263:7, col:60> col:7
| |   | |-BinaryOperator 0xdea340 <col:21, col:29> 'bool' '!='
| |   | | |-SubstNonTypeTemplateParmExpr 0xdea308 <col:21> 'long'
| |   | | | `-IntegerLiteral 0xdea2e8 <col:21> 'long' 60
| |   | | `-ImplicitCastExpr 0xdea328 <col:29> 'long' <IntegralCast>
| |   | |   `-IntegerLiteral 0xc29d70 <col:29> 'int' 0
| |   | `-StringLiteral 0xc29dc8 <col:32> 'const char [27]' lvalue "denominator cannot be zero"
| |   |-StaticAssertDecl 0xdea4c0 <line:264:7, line:265:21> line:264:7
| |   | |-BinaryOperator 0xdea480 <col:21, <built-in>:79:24> 'bool' '&&'
| |   | | |-BinaryOperator 0xdea400 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:264:21, <built-in>:79:24> 'bool' '>='
| |   | | | |-SubstNonTypeTemplateParmExpr 0xdea3e0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:264:21> 'long'
| |   | | | | `-IntegerLiteral 0xdea3c0 <col:21> 'long' 1
| |   | | | `-UnaryOperator 0xc29e80 <col:29, <built-in>:79:24> 'long' prefix '-'
| |   | | |   `-IntegerLiteral 0xc29e60 <col:24> 'long' 9223372036854775807
| |   | | `-BinaryOperator 0xdea460 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:264:48, <built-in>:79:24> 'bool' '>='
| |   | |   |-SubstNonTypeTemplateParmExpr 0xdea440 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:264:48> 'long'
| |   | |   | `-IntegerLiteral 0xdea420 <col:48> 'long' 60
| |   | |   `-UnaryOperator 0xc29ef8 <col:56, <built-in>:79:24> 'long' prefix '-'
| |   | |     `-IntegerLiteral 0xc29ed8 <col:24> 'long' 9223372036854775807
| |   | `-StringLiteral 0xc29fc8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:265:7> 'const char [13]' lvalue "out of range"
| |   |-VarDecl 0xdea500 <line:268:7, line:269:71> line:268:33 referenced num 'const intmax_t':'const long' static constexpr cinit
| |   | `-BinaryOperator 0xdeb1f0 <line:269:9, col:71> 'long' '/'
| |   |   |-BinaryOperator 0xdeab30 <col:9, col:37> 'long' '*'
| |   |   | |-SubstNonTypeTemplateParmExpr 0xdea598 <col:9> 'long'
| |   |   | | `-IntegerLiteral 0xdea578 <col:9> 'long' 1
| |   |   | `-ImplicitCastExpr 0xdeab18 <col:16, col:37> 'long':'long' <LValueToRValue>
| |   |   |   `-DeclRefExpr 0xdeaae8 <col:16, col:37> 'const long':'const long' lvalue Var 0xd2bfd8 'value' 'const long':'const long' non_odr_use_constant
| |   |   `-ImplicitCastExpr 0xdeb1d8 <col:45, col:71> 'long':'long' <LValueToRValue>
| |   |     `-DeclRefExpr 0xdeb1a8 <col:45, col:71> 'const long':'const long' lvalue Var 0xd2bfd8 'value' 'const long':'const long' non_odr_use_constant
| |   |-VarDecl 0xdeb268 <line:271:7, line:272:63> line:271:33 referenced den 'const intmax_t':'const long' static constexpr cinit
| |   | `-BinaryOperator 0xdec4c8 <line:272:9, col:63> 'long' '/'
| |   |   |-ImplicitCastExpr 0xdec468 <col:9, col:29> 'long':'long' <LValueToRValue>
| |   |   | `-DeclRefExpr 0xdec438 <col:9, col:29> 'const long':'const long' lvalue Var 0xdeba18 'value' 'const long':'const long' non_odr_use_constant
| |   |   `-ImplicitCastExpr 0xdec4b0 <col:37, col:63> 'long':'long' <LValueToRValue>
| |   |     `-DeclRefExpr 0xdec480 <col:37, col:63> 'const long':'const long' lvalue Var 0xd2bfd8 'value' 'const long':'const long' non_odr_use_constant
| |   `-TypedefDecl 0xdef480 <line:274:7, col:31> col:31 type 'ratio<num, den>':'std::ratio<1, 60>'
| |     `-TemplateSpecializationType 0xdef3e0 'ratio<num, den>' sugar ratio
| |       |-TemplateArgument expr
| |       | `-ConstantExpr 0xdef380 <col:21> 'intmax_t':'long' Int: 1
| |       |   `-ImplicitCastExpr 0xdef368 <col:21> 'intmax_t':'long' <LValueToRValue>
| |       |     `-DeclRefExpr 0xdef0c8 <col:21> 'const intmax_t':'const long' lvalue Var 0xdea500 'num' 'const intmax_t':'const long' non_odr_use_constant
| |       |-TemplateArgument expr
| |       | `-ConstantExpr 0xdef3b8 <col:26> 'intmax_t':'long' Int: 60
| |       |   `-ImplicitCastExpr 0xdef3a0 <col:26> 'intmax_t':'long' <LValueToRValue>
| |       |     `-DeclRefExpr 0xdef348 <col:26> 'const intmax_t':'const long' lvalue Var 0xdeb268 'den' 'const intmax_t':'const long' non_odr_use_constant
| |       `-RecordType 0xde9c90 'std::ratio<1, 60>'
| |         `-ClassTemplateSpecialization 0xde9b98 'ratio'
| |-VarDecl 0xc2abc8 parent 0xc29958 prev 0xc2a040 <line:277:3, line:278:43> col:43 num 'const intmax_t':'const long' constexpr
| |-VarDecl 0xc2c098 parent 0xc29958 prev 0xc2a3c8 <line:280:3, line:281:43> col:43 den 'const intmax_t':'const long' constexpr
| |-ClassTemplateDecl 0xc2c300 <line:283:3, line:301:5> line:284:12 __ratio_multiply
| | |-TemplateTypeParmDecl 0xc2c148 <line:283:12, col:21> col:21 typename depth 0 index 0 _R1
| | |-TemplateTypeParmDecl 0xc2c1c8 <col:26, col:35> col:35 typename depth 0 index 1 _R2
| | |-CXXRecordDecl 0xc2c270 <line:284:5, line:301:5> line:284:12 struct __ratio_multiply definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-CXXRecordDecl 0xc2c590 <col:5, col:12> col:12 implicit struct __ratio_multiply
| | | |-AccessSpecDecl 0xc2c620 <line:286:5, col:12> col:5 private
| | | |-VarDecl 0xc2c658 <line:287:7, line:288:43> line:287:29 referenced __gcd1 'const intmax_t':'const long' static cinit
| | | | `-DependentScopeDeclRefExpr 0xc2c990 <line:288:9, col:43> '<dependent type>' lvalue
| | | |-VarDecl 0xc2c9d8 <line:289:7, line:290:43> line:289:29 referenced __gcd2 'const intmax_t':'const long' static cinit
| | | | `-DependentScopeDeclRefExpr 0xc2ccc0 <line:290:9, col:43> '<dependent type>' lvalue
| | | |-AccessSpecDecl 0xc2ccf8 <line:292:5, col:11> col:5 public
| | | |-TypedefDecl 0xc2d5e8 <line:293:7, line:297:54> col:54 referenced type 'ratio<__safe_multiply<(_R1::num / __gcd1), (_R2::num / __gcd2)>::value, __safe_multiply<(_R1::den / __gcd2), (_R2::den / __gcd1)>::value>'
| | | | `-TemplateSpecializationType 0xc2d500 'ratio<__safe_multiply<(_R1::num / __gcd1), (_R2::num / __gcd2)>::value, __safe_multiply<(_R1::den / __gcd2), (_R2::den / __gcd1)>::value>' dependent ratio
| | | |   |-TemplateArgument expr
| | | |   | `-ImplicitCastExpr 0xc2d440 <line:294:9, line:295:47> 'intmax_t':'long' <Dependent>
| | | |   |   `-DependentScopeDeclRefExpr 0xc2d078 <line:294:9, line:295:47> '<dependent type>' lvalue
| | | |   `-TemplateArgument expr
| | | |     `-ImplicitCastExpr 0xc2d458 <line:296:9, line:297:47> 'intmax_t':'long' <Dependent>
| | | |       `-DependentScopeDeclRefExpr 0xc2d408 <line:296:9, line:297:47> '<dependent type>' lvalue
| | | |-VarDecl 0xc2d650 <line:299:7, col:45> col:33 num 'const intmax_t':'const long' static constexpr cinit
| | | | `-DependentScopeDeclRefExpr 0xc2d730 <col:39, col:45> '<dependent type>' lvalue
| | | `-VarDecl 0xc2d778 <line:300:7, col:45> col:33 den 'const intmax_t':'const long' static constexpr cinit
| | |   `-DependentScopeDeclRefExpr 0xc2d818 <col:39, col:45> '<dependent type>' lvalue
| | |-ClassTemplateSpecializationDecl 0xd45700 <line:283:3, line:301:5> line:284:12 struct __ratio_multiply definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'std::ratio<1, 1000000000>'
| | | |-TemplateArgument type 'std::ratio<1000000000, 1>'
| | | |-CXXRecordDecl 0xd45950 prev 0xd45700 <col:5, col:12> col:12 implicit struct __ratio_multiply
| | | |-AccessSpecDecl 0xd459e0 <line:286:5, col:12> col:5 private
| | | |-VarDecl 0xd45a08 <line:287:7, line:288:43> line:287:29 referenced __gcd1 'const intmax_t':'const long' static cinit
| | | | `-ImplicitCastExpr 0xd47538 <line:288:9, col:43> 'long':'long' <LValueToRValue>
| | | |   `-DeclRefExpr 0xd47508 <col:9, col:43> 'const long':'const long' lvalue Var 0xd2bfd8 'value' 'const long':'const long' non_odr_use_constant
| | | |-VarDecl 0xd475a8 <line:289:7, line:290:43> line:289:29 referenced __gcd2 'const intmax_t':'const long' static cinit
| | | | `-ImplicitCastExpr 0xd48350 <line:290:9, col:43> 'long':'long' <LValueToRValue>
| | | |   `-DeclRefExpr 0xd48320 <col:9, col:43> 'const long':'const long' lvalue Var 0xd2eba8 'value' 'const long':'const long' non_odr_use_constant
| | | |-AccessSpecDecl 0xd483c0 <line:292:5, col:11> col:5 public
| | | |-TypedefDecl 0xd4a710 <line:293:7, line:297:54> col:54 referenced type 'ratio<__safe_multiply<(ratio<1, 1000000000>::num / __gcd1), (ratio<1000000000, 1>::num / __gcd2)>::value, __safe_multiply<(ratio<1, 1000000000>::den / __gcd2), (ratio<1000000000, 1>::den / __gcd1)>::value>':'std::ratio<1, 1>'
| | | | `-TemplateSpecializationType 0xd4a670 'ratio<__safe_multiply<(ratio<1, 1000000000>::num / __gcd1), (ratio<1000000000, 1>::num / __gcd2)>::value, __safe_multiply<(ratio<1, 1000000000>::den / __gcd2), (ratio<1000000000, 1>::den / __gcd1)>::value>' sugar ratio
| | | |   |-TemplateArgument expr
| | | |   | `-ConstantExpr 0xd4a610 <line:294:9, line:295:47> 'intmax_t':'long' Int: 1
| | | |   |   `-ImplicitCastExpr 0xd4a5f8 <line:294:9, line:295:47> 'intmax_t':'long' <LValueToRValue>
| | | |   |     `-DeclRefExpr 0xd4a1f8 <line:294:9, line:295:47> 'const intmax_t':'const long' lvalue Var 0xd4a040 'value' 'const intmax_t':'const long' non_odr_use_constant
| | | |   |-TemplateArgument expr
| | | |   | `-ConstantExpr 0xd4a648 <line:296:9, line:297:47> 'intmax_t':'long' Int: 1
| | | |   |   `-ImplicitCastExpr 0xd4a630 <line:296:9, line:297:47> 'intmax_t':'long' <LValueToRValue>
| | | |   |     `-DeclRefExpr 0xd4a5c8 <line:296:9, line:297:47> 'const intmax_t':'const long' lvalue Var 0xd4a040 'value' 'const intmax_t':'const long' non_odr_use_constant
| | | |   `-RecordType 0xcedc30 'std::ratio<1, 1>'
| | | |     `-ClassTemplateSpecialization 0xcedb38 'ratio'
| | | |-VarDecl 0xd4a768 <line:299:7, col:45> col:33 num 'const intmax_t':'const long' static constexpr cinit
| | | | `-ImplicitCastExpr 0xd4bb80 <col:39, col:45> 'intmax_t':'long' <LValueToRValue>
| | | |   `-DeclRefExpr 0xd4bb50 <col:39, col:45> 'const intmax_t':'const long' lvalue Var 0xd4b4b0 'num' 'const intmax_t':'const long' non_odr_use_constant
| | | `-VarDecl 0xd4bbf0 <line:300:7, col:45> col:33 den 'const intmax_t':'const long' static constexpr cinit
| | |   `-ImplicitCastExpr 0xd4bce8 <col:39, col:45> 'intmax_t':'long' <LValueToRValue>
| | |     `-DeclRefExpr 0xd4bcb8 <col:39, col:45> 'const intmax_t':'const long' lvalue Var 0xd4b738 'den' 'const intmax_t':'const long' non_odr_use_constant
| | |-ClassTemplateSpecializationDecl 0xb95150 <line:283:3, line:301:5> line:284:12 struct __ratio_multiply definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'std::ratio<1, 1000000000>'
| | | |-TemplateArgument type 'std::ratio<1, 1>'
| | | |-CXXRecordDecl 0xb953a0 prev 0xb95150 <col:5, col:12> col:12 implicit struct __ratio_multiply
| | | |-AccessSpecDecl 0xb95430 <line:286:5, col:12> col:5 private
| | | |-VarDecl 0xb95458 <line:287:7, line:288:43> line:287:29 referenced __gcd1 'const intmax_t':'const long' static cinit
| | | | `-ImplicitCastExpr 0xb957a8 <line:288:9, col:43> 'long':'long' <LValueToRValue>
| | | |   `-DeclRefExpr 0xb95778 <col:9, col:43> 'const long':'const long' lvalue Var 0xd2bfd8 'value' 'const long':'const long' non_odr_use_constant
| | | |-VarDecl 0xb95818 <line:289:7, line:290:43> line:289:29 referenced __gcd2 'const intmax_t':'const long' static cinit
| | | | `-ImplicitCastExpr 0xb95b28 <line:290:9, col:43> 'long':'long' <LValueToRValue>
| | | |   `-DeclRefExpr 0xb95af8 <col:9, col:43> 'const long':'const long' lvalue Var 0xd2bfd8 'value' 'const long':'const long' non_odr_use_constant
| | | |-AccessSpecDecl 0xb95b98 <line:292:5, col:11> col:5 public
| | | |-TypedefDecl 0xb97ee0 <line:293:7, line:297:54> col:54 referenced type 'ratio<__safe_multiply<(ratio<1, 1000000000>::num / __gcd1), (ratio<1, 1>::num / __gcd2)>::value, __safe_multiply<(ratio<1, 1000000000>::den / __gcd2), (ratio<1, 1>::den / __gcd1)>::value>':'std::ratio<1, 1000000000>'
| | | | `-TemplateSpecializationType 0xb97e40 'ratio<__safe_multiply<(ratio<1, 1000000000>::num / __gcd1), (ratio<1, 1>::num / __gcd2)>::value, __safe_multiply<(ratio<1, 1000000000>::den / __gcd2), (ratio<1, 1>::den / __gcd1)>::value>' sugar ratio
| | | |   |-TemplateArgument expr
| | | |   | `-ConstantExpr 0xb97de0 <line:294:9, line:295:47> 'intmax_t':'long' Int: 1
| | | |   |   `-ImplicitCastExpr 0xb97dc8 <line:294:9, line:295:47> 'intmax_t':'long' <LValueToRValue>
| | | |   |     `-DeclRefExpr 0xb95f58 <line:294:9, line:295:47> 'const intmax_t':'const long' lvalue Var 0xd4a040 'value' 'const intmax_t':'const long' non_odr_use_constant
| | | |   |-TemplateArgument expr
| | | |   | `-ConstantExpr 0xb97e18 <line:296:9, line:297:47> 'intmax_t':'long' Int: 1000000000
| | | |   |   `-ImplicitCastExpr 0xb97e00 <line:296:9, line:297:47> 'intmax_t':'long' <LValueToRValue>
| | | |   |     `-DeclRefExpr 0xb97d98 <line:296:9, line:297:47> 'const intmax_t':'const long' lvalue Var 0xb97be0 'value' 'const intmax_t':'const long' non_odr_use_constant
| | | |   `-RecordType 0xc4c1d0 'std::ratio<1, 1000000000>'
| | | |     `-ClassTemplateSpecialization 0xc4c0d0 'ratio'
| | | |-VarDecl 0xb97f38 <line:299:7, col:45> col:33 num 'const intmax_t':'const long' static constexpr cinit
| | | | `-ImplicitCastExpr 0xb98068 <col:39, col:45> 'intmax_t':'long' <LValueToRValue>
| | | |   `-DeclRefExpr 0xb98038 <col:39, col:45> 'const intmax_t':'const long' lvalue Var 0xd2f0a0 'num' 'const intmax_t':'const long' non_odr_use_constant
| | | `-VarDecl 0xb980d8 <line:300:7, col:45> col:33 den 'const intmax_t':'const long' static constexpr cinit
| | |   `-ImplicitCastExpr 0xb981d0 <col:39, col:45> 'intmax_t':'long' <LValueToRValue>
| | |     `-DeclRefExpr 0xb981a0 <col:39, col:45> 'const intmax_t':'const long' lvalue Var 0xd2f328 'den' 'const intmax_t':'const long' non_odr_use_constant
| | |-ClassTemplateSpecializationDecl 0xd90780 <line:283:3, line:301:5> line:284:12 struct __ratio_multiply definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'std::ratio<1, 1>'
| | | |-TemplateArgument type 'std::ratio<1, 1>'
| | | |-CXXRecordDecl 0xd909d0 prev 0xd90780 <col:5, col:12> col:12 implicit struct __ratio_multiply
| | | |-AccessSpecDecl 0xd90a60 <line:286:5, col:12> col:5 private
| | | |-VarDecl 0xd90a88 <line:287:7, line:288:43> line:287:29 referenced __gcd1 'const intmax_t':'const long' static cinit
| | | | `-ImplicitCastExpr 0xd90dd8 <line:288:9, col:43> 'long':'long' <LValueToRValue>
| | | |   `-DeclRefExpr 0xd90da8 <col:9, col:43> 'const long':'const long' lvalue Var 0xd2bfd8 'value' 'const long':'const long' non_odr_use_constant
| | | |-VarDecl 0xd90e48 <line:289:7, line:290:43> line:289:29 referenced __gcd2 'const intmax_t':'const long' static cinit
| | | | `-ImplicitCastExpr 0xd91158 <line:290:9, col:43> 'long':'long' <LValueToRValue>
| | | |   `-DeclRefExpr 0xd91128 <col:9, col:43> 'const long':'const long' lvalue Var 0xd2bfd8 'value' 'const long':'const long' non_odr_use_constant
| | | |-AccessSpecDecl 0xd911c8 <line:292:5, col:11> col:5 public
| | | |-TypedefDecl 0xd92c80 <line:293:7, line:297:54> col:54 referenced type 'ratio<__safe_multiply<(ratio<1, 1>::num / __gcd1), (ratio<1, 1>::num / __gcd2)>::value, __safe_multiply<(ratio<1, 1>::den / __gcd2), (ratio<1, 1>::den / __gcd1)>::value>':'std::ratio<1, 1>'
| | | | `-TemplateSpecializationType 0xd92be0 'ratio<__safe_multiply<(ratio<1, 1>::num / __gcd1), (ratio<1, 1>::num / __gcd2)>::value, __safe_multiply<(ratio<1, 1>::den / __gcd2), (ratio<1, 1>::den / __gcd1)>::value>' sugar ratio
| | | |   |-TemplateArgument expr
| | | |   | `-ConstantExpr 0xd92b80 <line:294:9, line:295:47> 'intmax_t':'long' Int: 1
| | | |   |   `-ImplicitCastExpr 0xd92b68 <line:294:9, line:295:47> 'intmax_t':'long' <LValueToRValue>
| | | |   |     `-DeclRefExpr 0xd91588 <line:294:9, line:295:47> 'const intmax_t':'const long' lvalue Var 0xd4a040 'value' 'const intmax_t':'const long' non_odr_use_constant
| | | |   |-TemplateArgument expr
| | | |   | `-ConstantExpr 0xd92bb8 <line:296:9, line:297:47> 'intmax_t':'long' Int: 1
| | | |   |   `-ImplicitCastExpr 0xd92ba0 <line:296:9, line:297:47> 'intmax_t':'long' <LValueToRValue>
| | | |   |     `-DeclRefExpr 0xd92b38 <line:296:9, line:297:47> 'const intmax_t':'const long' lvalue Var 0xd4a040 'value' 'const intmax_t':'const long' non_odr_use_constant
| | | |   `-RecordType 0xcedc30 'std::ratio<1, 1>'
| | | |     `-ClassTemplateSpecialization 0xcedb38 'ratio'
| | | |-VarDecl 0xd92cd8 <line:299:7, col:45> col:33 num 'const intmax_t':'const long' static constexpr cinit
| | | | `-ImplicitCastExpr 0xd92e08 <col:39, col:45> 'intmax_t':'long' <LValueToRValue>
| | | |   `-DeclRefExpr 0xd92dd8 <col:39, col:45> 'const intmax_t':'const long' lvalue Var 0xd4b4b0 'num' 'const intmax_t':'const long' non_odr_use_constant
| | | `-VarDecl 0xd92e78 <line:300:7, col:45> col:33 den 'const intmax_t':'const long' static constexpr cinit
| | |   `-ImplicitCastExpr 0xd92f70 <col:39, col:45> 'intmax_t':'long' <LValueToRValue>
| | |     `-DeclRefExpr 0xd92f40 <col:39, col:45> 'const intmax_t':'const long' lvalue Var 0xd4b738 'den' 'const intmax_t':'const long' non_odr_use_constant
| | |-ClassTemplateSpecializationDecl 0xda7940 <line:283:3, line:301:5> line:284:12 struct __ratio_multiply definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'std::ratio<1, 1>'
| | | |-TemplateArgument type 'std::ratio<1000000000, 1>'
| | | |-CXXRecordDecl 0xda7b90 prev 0xda7940 <col:5, col:12> col:12 implicit struct __ratio_multiply
| | | |-AccessSpecDecl 0xda7c20 <line:286:5, col:12> col:5 private
| | | |-VarDecl 0xda7c48 <line:287:7, line:288:43> line:287:29 referenced __gcd1 'const intmax_t':'const long' static cinit
| | | | `-ImplicitCastExpr 0xda7f58 <line:288:9, col:43> 'long':'long' <LValueToRValue>
| | | |   `-DeclRefExpr 0xda7f28 <col:9, col:43> 'const long':'const long' lvalue Var 0xd2bfd8 'value' 'const long':'const long' non_odr_use_constant
| | | |-VarDecl 0xda7fc8 <line:289:7, line:290:43> line:289:29 referenced __gcd2 'const intmax_t':'const long' static cinit
| | | | `-ImplicitCastExpr 0xda82d8 <line:290:9, col:43> 'long':'long' <LValueToRValue>
| | | |   `-DeclRefExpr 0xda82a8 <col:9, col:43> 'const long':'const long' lvalue Var 0xd2bfd8 'value' 'const long':'const long' non_odr_use_constant
| | | |-AccessSpecDecl 0xda8348 <line:292:5, col:11> col:5 public
| | | |-TypedefDecl 0xdaa6b0 <line:293:7, line:297:54> col:54 referenced type 'ratio<__safe_multiply<(ratio<1, 1>::num / __gcd1), (ratio<1000000000, 1>::num / __gcd2)>::value, __safe_multiply<(ratio<1, 1>::den / __gcd2), (ratio<1000000000, 1>::den / __gcd1)>::value>':'std::ratio<1000000000, 1>'
| | | | `-TemplateSpecializationType 0xdaa610 'ratio<__safe_multiply<(ratio<1, 1>::num / __gcd1), (ratio<1000000000, 1>::num / __gcd2)>::value, __safe_multiply<(ratio<1, 1>::den / __gcd2), (ratio<1000000000, 1>::den / __gcd1)>::value>' sugar ratio
| | | |   |-TemplateArgument expr
| | | |   | `-ConstantExpr 0xdaa5b0 <line:294:9, line:295:47> 'intmax_t':'long' Int: 1000000000
| | | |   |   `-ImplicitCastExpr 0xdaa598 <line:294:9, line:295:47> 'intmax_t':'long' <LValueToRValue>
| | | |   |     `-DeclRefExpr 0xdaa198 <line:294:9, line:295:47> 'const intmax_t':'const long' lvalue Var 0xda9fe0 'value' 'const intmax_t':'const long' non_odr_use_constant
| | | |   |-TemplateArgument expr
| | | |   | `-ConstantExpr 0xdaa5e8 <line:296:9, line:297:47> 'intmax_t':'long' Int: 1
| | | |   |   `-ImplicitCastExpr 0xdaa5d0 <line:296:9, line:297:47> 'intmax_t':'long' <LValueToRValue>
| | | |   |     `-DeclRefExpr 0xdaa568 <line:296:9, line:297:47> 'const intmax_t':'const long' lvalue Var 0xd4a040 'value' 'const intmax_t':'const long' non_odr_use_constant
| | | |   `-RecordType 0xc4dd60 'std::ratio<1000000000, 1>'
| | | |     `-ClassTemplateSpecialization 0xc4dc60 'ratio'
| | | |-VarDecl 0xdaa708 <line:299:7, col:45> col:33 num 'const intmax_t':'const long' static constexpr cinit
| | | | `-ImplicitCastExpr 0xdaa838 <col:39, col:45> 'intmax_t':'long' <LValueToRValue>
| | | |   `-DeclRefExpr 0xdaa808 <col:39, col:45> 'const intmax_t':'const long' lvalue Var 0xd46830 'num' 'const intmax_t':'const long' non_odr_use_constant
| | | `-VarDecl 0xdaa8a8 <line:300:7, col:45> col:33 den 'const intmax_t':'const long' static constexpr cinit
| | |   `-ImplicitCastExpr 0xdaa9a0 <col:39, col:45> 'intmax_t':'long' <LValueToRValue>
| | |     `-DeclRefExpr 0xdaa970 <col:39, col:45> 'const intmax_t':'const long' lvalue Var 0xd46ab8 'den' 'const intmax_t':'const long' non_odr_use_constant
| | |-ClassTemplateSpecializationDecl 0xdd17e0 <line:283:3, line:301:5> line:284:12 struct __ratio_multiply definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'std::ratio<3600, 1>'
| | | |-TemplateArgument type 'std::ratio<1, 3600>'
| | | |-CXXRecordDecl 0xdd1a30 prev 0xdd17e0 <col:5, col:12> col:12 implicit struct __ratio_multiply
| | | |-AccessSpecDecl 0xdd1ac0 <line:286:5, col:12> col:5 private
| | | |-VarDecl 0xdd1ae8 <line:287:7, line:288:43> line:287:29 referenced __gcd1 'const intmax_t':'const long' static cinit
| | | | `-ImplicitCastExpr 0xdd52f0 <line:288:9, col:43> 'long':'long' <LValueToRValue>
| | | |   `-DeclRefExpr 0xdd52c0 <col:9, col:43> 'const long':'const long' lvalue Var 0xdd3af8 'value' 'const long':'const long' non_odr_use_constant
| | | |-VarDecl 0xdd5360 <line:289:7, line:290:43> line:289:29 referenced __gcd2 'const intmax_t':'const long' static cinit
| | | | `-ImplicitCastExpr 0xdd5e38 <line:290:9, col:43> 'long':'long' <LValueToRValue>
| | | |   `-DeclRefExpr 0xdd5e08 <col:9, col:43> 'const long':'const long' lvalue Var 0xd2bfd8 'value' 'const long':'const long' non_odr_use_constant
| | | |-AccessSpecDecl 0xdd5ea8 <line:292:5, col:11> col:5 public
| | | |-TypedefDecl 0xdd6780 <line:293:7, line:297:54> col:54 referenced type 'ratio<__safe_multiply<(ratio<3600, 1>::num / __gcd1), (ratio<1, 3600>::num / __gcd2)>::value, __safe_multiply<(ratio<3600, 1>::den / __gcd2), (ratio<1, 3600>::den / __gcd1)>::value>':'std::ratio<1, 1>'
| | | | `-TemplateSpecializationType 0xdd66e0 'ratio<__safe_multiply<(ratio<3600, 1>::num / __gcd1), (ratio<1, 3600>::num / __gcd2)>::value, __safe_multiply<(ratio<3600, 1>::den / __gcd2), (ratio<1, 3600>::den / __gcd1)>::value>' sugar ratio
| | | |   |-TemplateArgument expr
| | | |   | `-ConstantExpr 0xdd6680 <line:294:9, line:295:47> 'intmax_t':'long' Int: 1
| | | |   |   `-ImplicitCastExpr 0xdd6668 <line:294:9, line:295:47> 'intmax_t':'long' <LValueToRValue>
| | | |   |     `-DeclRefExpr 0xdd6268 <line:294:9, line:295:47> 'const intmax_t':'const long' lvalue Var 0xd4a040 'value' 'const intmax_t':'const long' non_odr_use_constant
| | | |   |-TemplateArgument expr
| | | |   | `-ConstantExpr 0xdd66b8 <line:296:9, line:297:47> 'intmax_t':'long' Int: 1
| | | |   |   `-ImplicitCastExpr 0xdd66a0 <line:296:9, line:297:47> 'intmax_t':'long' <LValueToRValue>
| | | |   |     `-DeclRefExpr 0xdd6638 <line:296:9, line:297:47> 'const intmax_t':'const long' lvalue Var 0xd4a040 'value' 'const intmax_t':'const long' non_odr_use_constant
| | | |   `-RecordType 0xcedc30 'std::ratio<1, 1>'
| | | |     `-ClassTemplateSpecialization 0xcedb38 'ratio'
| | | |-VarDecl 0xdd67d8 <line:299:7, col:45> col:33 num 'const intmax_t':'const long' static constexpr cinit
| | | | `-ImplicitCastExpr 0xdd6908 <col:39, col:45> 'intmax_t':'long' <LValueToRValue>
| | | |   `-DeclRefExpr 0xdd68d8 <col:39, col:45> 'const intmax_t':'const long' lvalue Var 0xd4b4b0 'num' 'const intmax_t':'const long' non_odr_use_constant
| | | `-VarDecl 0xdd6978 <line:300:7, col:45> col:33 den 'const intmax_t':'const long' static constexpr cinit
| | |   `-ImplicitCastExpr 0xdd6a70 <col:39, col:45> 'intmax_t':'long' <LValueToRValue>
| | |     `-DeclRefExpr 0xdd6a40 <col:39, col:45> 'const intmax_t':'const long' lvalue Var 0xd4b738 'den' 'const intmax_t':'const long' non_odr_use_constant
| | |-ClassTemplateSpecializationDecl 0xde9d50 <line:283:3, line:301:5> line:284:12 struct __ratio_multiply definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'std::ratio<60, 1>'
| | | |-TemplateArgument type 'std::ratio<1, 60>'
| | | |-CXXRecordDecl 0xde9fa0 prev 0xde9d50 <col:5, col:12> col:12 implicit struct __ratio_multiply
| | | |-AccessSpecDecl 0xdea030 <line:286:5, col:12> col:5 private
| | | |-VarDecl 0xdea058 <line:287:7, line:288:43> line:287:29 referenced __gcd1 'const intmax_t':'const long' static cinit
| | | | `-ImplicitCastExpr 0xdf0180 <line:288:9, col:43> 'long':'long' <LValueToRValue>
| | | |   `-DeclRefExpr 0xdf0150 <col:9, col:43> 'const long':'const long' lvalue Var 0xdec068 'value' 'const long':'const long' non_odr_use_constant
| | | |-VarDecl 0xdf01f0 <line:289:7, line:290:43> line:289:29 referenced __gcd2 'const intmax_t':'const long' static cinit
| | | | `-ImplicitCastExpr 0xdf0508 <line:290:9, col:43> 'long':'long' <LValueToRValue>
| | | |   `-DeclRefExpr 0xdf04d8 <col:9, col:43> 'const long':'const long' lvalue Var 0xd2bfd8 'value' 'const long':'const long' non_odr_use_constant
| | | |-AccessSpecDecl 0xdf0578 <line:292:5, col:11> col:5 public
| | | |-TypedefDecl 0xdf0e50 <line:293:7, line:297:54> col:54 referenced type 'ratio<__safe_multiply<(ratio<60, 1>::num / __gcd1), (ratio<1, 60>::num / __gcd2)>::value, __safe_multiply<(ratio<60, 1>::den / __gcd2), (ratio<1, 60>::den / __gcd1)>::value>':'std::ratio<1, 1>'
| | | | `-TemplateSpecializationType 0xdf0db0 'ratio<__safe_multiply<(ratio<60, 1>::num / __gcd1), (ratio<1, 60>::num / __gcd2)>::value, __safe_multiply<(ratio<60, 1>::den / __gcd2), (ratio<1, 60>::den / __gcd1)>::value>' sugar ratio
| | | |   |-TemplateArgument expr
| | | |   | `-ConstantExpr 0xdf0d50 <line:294:9, line:295:47> 'intmax_t':'long' Int: 1
| | | |   |   `-ImplicitCastExpr 0xdf0d38 <line:294:9, line:295:47> 'intmax_t':'long' <LValueToRValue>
| | | |   |     `-DeclRefExpr 0xdf0938 <line:294:9, line:295:47> 'const intmax_t':'const long' lvalue Var 0xd4a040 'value' 'const intmax_t':'const long' non_odr_use_constant
| | | |   |-TemplateArgument expr
| | | |   | `-ConstantExpr 0xdf0d88 <line:296:9, line:297:47> 'intmax_t':'long' Int: 1
| | | |   |   `-ImplicitCastExpr 0xdf0d70 <line:296:9, line:297:47> 'intmax_t':'long' <LValueToRValue>
| | | |   |     `-DeclRefExpr 0xdf0d08 <line:296:9, line:297:47> 'const intmax_t':'const long' lvalue Var 0xd4a040 'value' 'const intmax_t':'const long' non_odr_use_constant
| | | |   `-RecordType 0xcedc30 'std::ratio<1, 1>'
| | | |     `-ClassTemplateSpecialization 0xcedb38 'ratio'
| | | |-VarDecl 0xdf0ea8 <line:299:7, col:45> col:33 num 'const intmax_t':'const long' static constexpr cinit
| | | | `-ImplicitCastExpr 0xdf0fd8 <col:39, col:45> 'intmax_t':'long' <LValueToRValue>
| | | |   `-DeclRefExpr 0xdf0fa8 <col:39, col:45> 'const intmax_t':'const long' lvalue Var 0xd4b4b0 'num' 'const intmax_t':'const long' non_odr_use_constant
| | | `-VarDecl 0xdf1048 <line:300:7, col:45> col:33 den 'const intmax_t':'const long' static constexpr cinit
| | |   `-ImplicitCastExpr 0xdf1140 <col:39, col:45> 'intmax_t':'long' <LValueToRValue>
| | |     `-DeclRefExpr 0xdf1110 <col:39, col:45> 'const intmax_t':'const long' lvalue Var 0xd4b738 'den' 'const intmax_t':'const long' non_odr_use_constant
| | |-ClassTemplateSpecializationDecl 0xe0d6a0 <line:283:3, line:301:5> line:284:12 struct __ratio_multiply definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'std::ratio<1, 1000>'
| | | |-TemplateArgument type 'std::ratio<1000, 1>'
| | | |-CXXRecordDecl 0xe0d8f0 prev 0xe0d6a0 <col:5, col:12> col:12 implicit struct __ratio_multiply
| | | |-AccessSpecDecl 0xe0d980 <line:286:5, col:12> col:5 private
| | | |-VarDecl 0xe0d9a8 <line:287:7, line:288:43> line:287:29 referenced __gcd1 'const intmax_t':'const long' static cinit
| | | | `-ImplicitCastExpr 0xe0fd98 <line:288:9, col:43> 'long':'long' <LValueToRValue>
| | | |   `-DeclRefExpr 0xe0fd68 <col:9, col:43> 'const long':'const long' lvalue Var 0xd2bfd8 'value' 'const long':'const long' non_odr_use_constant
| | | |-VarDecl 0xe0fe08 <line:289:7, line:290:43> line:289:29 referenced __gcd2 'const intmax_t':'const long' static cinit
| | | | `-ImplicitCastExpr 0xe10bb0 <line:290:9, col:43> 'long':'long' <LValueToRValue>
| | | |   `-DeclRefExpr 0xe10b80 <col:9, col:43> 'const long':'const long' lvalue Var 0xe06510 'value' 'const long':'const long' non_odr_use_constant
| | | |-AccessSpecDecl 0xe10c20 <line:292:5, col:11> col:5 public
| | | |-TypedefDecl 0xe11500 <line:293:7, line:297:54> col:54 referenced type 'ratio<__safe_multiply<(ratio<1, 1000>::num / __gcd1), (ratio<1000, 1>::num / __gcd2)>::value, __safe_multiply<(ratio<1, 1000>::den / __gcd2), (ratio<1000, 1>::den / __gcd1)>::value>':'std::ratio<1, 1>'
| | | | `-TemplateSpecializationType 0xe11460 'ratio<__safe_multiply<(ratio<1, 1000>::num / __gcd1), (ratio<1000, 1>::num / __gcd2)>::value, __safe_multiply<(ratio<1, 1000>::den / __gcd2), (ratio<1000, 1>::den / __gcd1)>::value>' sugar ratio
| | | |   |-TemplateArgument expr
| | | |   | `-ConstantExpr 0xe11400 <line:294:9, line:295:47> 'intmax_t':'long' Int: 1
| | | |   |   `-ImplicitCastExpr 0xe113e8 <line:294:9, line:295:47> 'intmax_t':'long' <LValueToRValue>
| | | |   |     `-DeclRefExpr 0xe10fe8 <line:294:9, line:295:47> 'const intmax_t':'const long' lvalue Var 0xd4a040 'value' 'const intmax_t':'const long' non_odr_use_constant
| | | |   |-TemplateArgument expr
| | | |   | `-ConstantExpr 0xe11438 <line:296:9, line:297:47> 'intmax_t':'long' Int: 1
| | | |   |   `-ImplicitCastExpr 0xe11420 <line:296:9, line:297:47> 'intmax_t':'long' <LValueToRValue>
| | | |   |     `-DeclRefExpr 0xe113b8 <line:296:9, line:297:47> 'const intmax_t':'const long' lvalue Var 0xd4a040 'value' 'const intmax_t':'const long' non_odr_use_constant
| | | |   `-RecordType 0xcedc30 'std::ratio<1, 1>'
| | | |     `-ClassTemplateSpecialization 0xcedb38 'ratio'
| | | |-VarDecl 0xe11558 <line:299:7, col:45> col:33 num 'const intmax_t':'const long' static constexpr cinit
| | | | `-ImplicitCastExpr 0xe11688 <col:39, col:45> 'intmax_t':'long' <LValueToRValue>
| | | |   `-DeclRefExpr 0xe11658 <col:39, col:45> 'const intmax_t':'const long' lvalue Var 0xd4b4b0 'num' 'const intmax_t':'const long' non_odr_use_constant
| | | `-VarDecl 0xe116f8 <line:300:7, col:45> col:33 den 'const intmax_t':'const long' static constexpr cinit
| | |   `-ImplicitCastExpr 0xe117f0 <col:39, col:45> 'intmax_t':'long' <LValueToRValue>
| | |     `-DeclRefExpr 0xe117c0 <col:39, col:45> 'const intmax_t':'const long' lvalue Var 0xd4b738 'den' 'const intmax_t':'const long' non_odr_use_constant
| | `-ClassTemplateSpecializationDecl 0xe244d0 <line:283:3, line:301:5> line:284:12 struct __ratio_multiply definition
| |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-TemplateArgument type 'std::ratio<1, 1000000>'
| |   |-TemplateArgument type 'std::ratio<1000000, 1>'
| |   |-CXXRecordDecl 0xe24720 prev 0xe244d0 <col:5, col:12> col:12 implicit struct __ratio_multiply
| |   |-AccessSpecDecl 0xe247b0 <line:286:5, col:12> col:5 private
| |   |-VarDecl 0xe247d8 <line:287:7, line:288:43> line:287:29 referenced __gcd1 'const intmax_t':'const long' static cinit
| |   | `-ImplicitCastExpr 0xe27988 <line:288:9, col:43> 'long':'long' <LValueToRValue>
| |   |   `-DeclRefExpr 0xe27958 <col:9, col:43> 'const long':'const long' lvalue Var 0xd2bfd8 'value' 'const long':'const long' non_odr_use_constant
| |   |-VarDecl 0xe279f8 <line:289:7, line:290:43> line:289:29 referenced __gcd2 'const intmax_t':'const long' static cinit
| |   | `-ImplicitCastExpr 0xe287a0 <line:290:9, col:43> 'long':'long' <LValueToRValue>
| |   |   `-DeclRefExpr 0xe28770 <col:9, col:43> 'const long':'const long' lvalue Var 0xe1dd88 'value' 'const long':'const long' non_odr_use_constant
| |   |-AccessSpecDecl 0xe28810 <line:292:5, col:11> col:5 public
| |   |-TypedefDecl 0xe290f0 <line:293:7, line:297:54> col:54 referenced type 'ratio<__safe_multiply<(ratio<1, 1000000>::num / __gcd1), (ratio<1000000, 1>::num / __gcd2)>::value, __safe_multiply<(ratio<1, 1000000>::den / __gcd2), (ratio<1000000, 1>::den / __gcd1)>::value>':'std::ratio<1, 1>'
| |   | `-TemplateSpecializationType 0xe29050 'ratio<__safe_multiply<(ratio<1, 1000000>::num / __gcd1), (ratio<1000000, 1>::num / __gcd2)>::value, __safe_multiply<(ratio<1, 1000000>::den / __gcd2), (ratio<1000000, 1>::den / __gcd1)>::value>' sugar ratio
| |   |   |-TemplateArgument expr
| |   |   | `-ConstantExpr 0xe28ff0 <line:294:9, line:295:47> 'intmax_t':'long' Int: 1
| |   |   |   `-ImplicitCastExpr 0xe28fd8 <line:294:9, line:295:47> 'intmax_t':'long' <LValueToRValue>
| |   |   |     `-DeclRefExpr 0xe28bd8 <line:294:9, line:295:47> 'const intmax_t':'const long' lvalue Var 0xd4a040 'value' 'const intmax_t':'const long' non_odr_use_constant
| |   |   |-TemplateArgument expr
| |   |   | `-ConstantExpr 0xe29028 <line:296:9, line:297:47> 'intmax_t':'long' Int: 1
| |   |   |   `-ImplicitCastExpr 0xe29010 <line:296:9, line:297:47> 'intmax_t':'long' <LValueToRValue>
| |   |   |     `-DeclRefExpr 0xe28fa8 <line:296:9, line:297:47> 'const intmax_t':'const long' lvalue Var 0xd4a040 'value' 'const intmax_t':'const long' non_odr_use_constant
| |   |   `-RecordType 0xcedc30 'std::ratio<1, 1>'
| |   |     `-ClassTemplateSpecialization 0xcedb38 'ratio'
| |   |-VarDecl 0xe29148 <line:299:7, col:45> col:33 num 'const intmax_t':'const long' static constexpr cinit
| |   | `-ImplicitCastExpr 0xe29278 <col:39, col:45> 'intmax_t':'long' <LValueToRValue>
| |   |   `-DeclRefExpr 0xe29248 <col:39, col:45> 'const intmax_t':'const long' lvalue Var 0xd4b4b0 'num' 'const intmax_t':'const long' non_odr_use_constant
| |   `-VarDecl 0xe292e8 <line:300:7, col:45> col:33 den 'const intmax_t':'const long' static constexpr cinit
| |     `-ImplicitCastExpr 0xe293e0 <col:39, col:45> 'intmax_t':'long' <LValueToRValue>
| |       `-DeclRefExpr 0xe293b0 <col:39, col:45> 'const intmax_t':'const long' lvalue Var 0xd4b738 'den' 'const intmax_t':'const long' non_odr_use_constant
| |-VarDecl 0xc2db68 parent 0xc2c270 prev 0xc2d650 <line:303:3, line:304:52> col:52 num 'const intmax_t':'const long' constexpr
| |-VarDecl 0xc2df18 parent 0xc2c270 prev 0xc2d778 <line:306:3, line:307:52> col:52 den 'const intmax_t':'const long' constexpr
| |-TypeAliasTemplateDecl 0xc2e2f0 <line:310:3, line:311:65> col:5 ratio_multiply
| | |-TemplateTypeParmDecl 0xc2dfc8 <line:310:12, col:21> col:21 referenced typename depth 0 index 0 _R1
| | |-TemplateTypeParmDecl 0xc2e048 <col:26, col:35> col:35 referenced typename depth 0 index 1 _R2
| | `-TypeAliasDecl 0xc2e290 <line:311:5, col:65> col:11 ratio_multiply 'typename __ratio_multiply<_R1, _R2>::type'
| |   `-DependentNameType 0xc2e220 'typename __ratio_multiply<_R1, _R2>::type' dependent
| |-ClassTemplateDecl 0xc2e500 <line:313:3, line:324:5> line:314:12 __ratio_divide
| | |-TemplateTypeParmDecl 0xc2e348 <line:313:12, col:21> col:21 referenced typename depth 0 index 0 _R1
| | |-TemplateTypeParmDecl 0xc2e3c8 <col:26, col:35> col:35 typename depth 0 index 1 _R2
| | |-CXXRecordDecl 0xc2e470 <line:314:5, line:324:5> line:314:12 struct __ratio_divide definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-CXXRecordDecl 0xc2e790 <col:5, col:12> col:12 implicit struct __ratio_divide
| | | |-StaticAssertDecl 0xc2e910 <line:316:7, col:51> col:7
| | | | |-BinaryOperator 0xc2e8c8 <col:21, col:33> '<dependent type>' '!='
| | | | | |-DependentScopeDeclRefExpr 0xc2e870 <col:21, col:26> '<dependent type>' lvalue
| | | | | `-IntegerLiteral 0xc2e8a8 <col:33> 'int' 0
| | | | `-StringLiteral 0xc2e8e8 <col:36> 'const char [14]' lvalue "division by 0"
| | | |-TypedefDecl 0xc2edd0 <line:318:7, line:320:42> col:42 referenced type 'typename __ratio_multiply<_R1, ratio<_R2::den, _R2::num> >::type'
| | | | `-DependentNameType 0xc2ed60 'typename __ratio_multiply<_R1, ratio<_R2::den, _R2::num> >::type' dependent
| | | |-VarDecl 0xc2ee38 <line:322:7, col:45> col:33 num 'const intmax_t':'const long' static constexpr cinit
| | | | `-DependentScopeDeclRefExpr 0xc2ef10 <col:39, col:45> '<dependent type>' lvalue
| | | `-VarDecl 0xc2ef58 <line:323:7, col:45> col:33 den 'const intmax_t':'const long' static constexpr cinit
| | |   `-DependentScopeDeclRefExpr 0xc2eff8 <col:39, col:45> '<dependent type>' lvalue
| | |-ClassTemplateSpecializationDecl 0xd45068 <line:313:3, line:324:5> line:314:12 struct __ratio_divide definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'std::ratio<1, 1000000000>'
| | | |-TemplateArgument type 'std::ratio<1, 1000000000>'
| | | |-CXXRecordDecl 0xd452b0 prev 0xd45068 <col:5, col:12> col:12 implicit struct __ratio_divide
| | | |-StaticAssertDecl 0xd45470 <line:316:7, col:51> col:7
| | | | |-BinaryOperator 0xd45430 <col:21, col:33> 'bool' '!='
| | | | | |-ImplicitCastExpr 0xd45400 <col:21, col:26> 'intmax_t':'long' <LValueToRValue>
| | | | | | `-DeclRefExpr 0xd453d0 <col:21, col:26> 'const intmax_t':'const long' lvalue Var 0xd2f0a0 'num' 'const intmax_t':'const long' non_odr_use_constant
| | | | | `-ImplicitCastExpr 0xd45418 <col:33> 'long' <IntegralCast>
| | | | |   `-IntegerLiteral 0xc2e8a8 <col:33> 'int' 0
| | | | `-StringLiteral 0xc2e8e8 <col:36> 'const char [14]' lvalue "division by 0"
| | | |-TypedefDecl 0xd4bdc0 <line:318:7, line:320:42> col:42 referenced type 'typename __ratio_multiply<ratio<1, 1000000000>, ratio<ratio<1, 1000000000>::den, ratio<1, 1000000000>::num> >::type':'std::ratio<1, 1>'
| | | | `-ElaboratedType 0xd4bd70 'typename __ratio_multiply<ratio<1, 1000000000>, ratio<ratio<1, 1000000000>::den, ratio<1, 1000000000>::num> >::type' sugar
| | | |   `-TypedefType 0xd4a7e0 'std::__ratio_multiply<std::ratio<1, 1000000000>, std::ratio<1000000000, 1> >::type' sugar
| | | |     |-Typedef 0xd4a710 'type'
| | | |     `-TemplateSpecializationType 0xd4a670 'ratio<__safe_multiply<(ratio<1, 1000000000>::num / __gcd1), (ratio<1000000000, 1>::num / __gcd2)>::value, __safe_multiply<(ratio<1, 1000000000>::den / __gcd2), (ratio<1000000000, 1>::den / __gcd1)>::value>' sugar ratio
| | | |       |-TemplateArgument expr
| | | |       | `-ConstantExpr 0xd4a610 <line:294:9, line:295:47> 'intmax_t':'long' Int: 1
| | | |       |   `-ImplicitCastExpr 0xd4a5f8 <line:294:9, line:295:47> 'intmax_t':'long' <LValueToRValue>
| | | |       |     `-DeclRefExpr 0xd4a1f8 <line:294:9, line:295:47> 'const intmax_t':'const long' lvalue Var 0xd4a040 'value' 'const intmax_t':'const long' non_odr_use_constant
| | | |       |-TemplateArgument expr
| | | |       | `-ConstantExpr 0xd4a648 <line:296:9, line:297:47> 'intmax_t':'long' Int: 1
| | | |       |   `-ImplicitCastExpr 0xd4a630 <line:296:9, line:297:47> 'intmax_t':'long' <LValueToRValue>
| | | |       |     `-DeclRefExpr 0xd4a5c8 <line:296:9, line:297:47> 'const intmax_t':'const long' lvalue Var 0xd4a040 'value' 'const intmax_t':'const long' non_odr_use_constant
| | | |       `-RecordType 0xcedc30 'std::ratio<1, 1>'
| | | |         `-ClassTemplateSpecialization 0xcedb38 'ratio'
| | | |-VarDecl 0xd4be18 <line:322:7, col:45> col:33 num 'const intmax_t':'const long' static constexpr cinit
| | | | `-ImplicitCastExpr 0xd4bf48 <col:39, col:45> 'intmax_t':'long' <LValueToRValue>
| | | |   `-DeclRefExpr 0xd4bf18 <col:39, col:45> 'const intmax_t':'const long' lvalue Var 0xd4b4b0 'num' 'const intmax_t':'const long' non_odr_use_constant
| | | `-VarDecl 0xd4bfb8 <line:323:7, col:45> col:33 den 'const intmax_t':'const long' static constexpr cinit
| | |   `-ImplicitCastExpr 0xd4c0b0 <col:39, col:45> 'intmax_t':'long' <LValueToRValue>
| | |     `-DeclRefExpr 0xd4c080 <col:39, col:45> 'const intmax_t':'const long' lvalue Var 0xd4b738 'den' 'const intmax_t':'const long' non_odr_use_constant
| | |-ClassTemplateSpecializationDecl 0xb93da8 <line:313:3, line:324:5> line:314:12 struct __ratio_divide definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'std::ratio<1, 1000000000>'
| | | |-TemplateArgument type 'std::ratio<1, 1>'
| | | |-CXXRecordDecl 0xb93ff0 prev 0xb93da8 <col:5, col:12> col:12 implicit struct __ratio_divide
| | | |-StaticAssertDecl 0xb941b0 <line:316:7, col:51> col:7
| | | | |-BinaryOperator 0xb94170 <col:21, col:33> 'bool' '!='
| | | | | |-ImplicitCastExpr 0xb94140 <col:21, col:26> 'intmax_t':'long' <LValueToRValue>
| | | | | | `-DeclRefExpr 0xb94110 <col:21, col:26> 'const intmax_t':'const long' lvalue Var 0xd4b4b0 'num' 'const intmax_t':'const long' non_odr_use_constant
| | | | | `-ImplicitCastExpr 0xb94158 <col:33> 'long' <IntegralCast>
| | | | |   `-IntegerLiteral 0xc2e8a8 <col:33> 'int' 0
| | | | `-StringLiteral 0xc2e8e8 <col:36> 'const char [14]' lvalue "division by 0"
| | | |-TypedefDecl 0xb982b0 <line:318:7, line:320:42> col:42 referenced type 'typename __ratio_multiply<ratio<1, 1000000000>, ratio<ratio<1, 1>::den, ratio<1, 1>::num> >::type':'std::ratio<1, 1000000000>'
| | | | `-ElaboratedType 0xb98260 'typename __ratio_multiply<ratio<1, 1000000000>, ratio<ratio<1, 1>::den, ratio<1, 1>::num> >::type' sugar
| | | |   `-TypedefType 0xb97fb0 'std::__ratio_multiply<std::ratio<1, 1000000000>, std::ratio<1, 1> >::type' sugar
| | | |     |-Typedef 0xb97ee0 'type'
| | | |     `-TemplateSpecializationType 0xb97e40 'ratio<__safe_multiply<(ratio<1, 1000000000>::num / __gcd1), (ratio<1, 1>::num / __gcd2)>::value, __safe_multiply<(ratio<1, 1000000000>::den / __gcd2), (ratio<1, 1>::den / __gcd1)>::value>' sugar ratio
| | | |       |-TemplateArgument expr
| | | |       | `-ConstantExpr 0xb97de0 <line:294:9, line:295:47> 'intmax_t':'long' Int: 1
| | | |       |   `-ImplicitCastExpr 0xb97dc8 <line:294:9, line:295:47> 'intmax_t':'long' <LValueToRValue>
| | | |       |     `-DeclRefExpr 0xb95f58 <line:294:9, line:295:47> 'const intmax_t':'const long' lvalue Var 0xd4a040 'value' 'const intmax_t':'const long' non_odr_use_constant
| | | |       |-TemplateArgument expr
| | | |       | `-ConstantExpr 0xb97e18 <line:296:9, line:297:47> 'intmax_t':'long' Int: 1000000000
| | | |       |   `-ImplicitCastExpr 0xb97e00 <line:296:9, line:297:47> 'intmax_t':'long' <LValueToRValue>
| | | |       |     `-DeclRefExpr 0xb97d98 <line:296:9, line:297:47> 'const intmax_t':'const long' lvalue Var 0xb97be0 'value' 'const intmax_t':'const long' non_odr_use_constant
| | | |       `-RecordType 0xc4c1d0 'std::ratio<1, 1000000000>'
| | | |         `-ClassTemplateSpecialization 0xc4c0d0 'ratio'
| | | |-VarDecl 0xb98308 <line:322:7, col:45> col:33 num 'const intmax_t':'const long' static constexpr cinit
| | | | `-ImplicitCastExpr 0xb98438 <col:39, col:45> 'intmax_t':'long' <LValueToRValue>
| | | |   `-DeclRefExpr 0xb98408 <col:39, col:45> 'const intmax_t':'const long' lvalue Var 0xd2f0a0 'num' 'const intmax_t':'const long' non_odr_use_constant
| | | `-VarDecl 0xb984a8 <line:323:7, col:45> col:33 den 'const intmax_t':'const long' static constexpr cinit
| | |   `-ImplicitCastExpr 0xb985a0 <col:39, col:45> 'intmax_t':'long' <LValueToRValue>
| | |     `-DeclRefExpr 0xb98570 <col:39, col:45> 'const intmax_t':'const long' lvalue Var 0xd2f328 'den' 'const intmax_t':'const long' non_odr_use_constant
| | |-ClassTemplateSpecializationDecl 0xd90128 <line:313:3, line:324:5> line:314:12 struct __ratio_divide definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'std::ratio<1, 1>'
| | | |-TemplateArgument type 'std::ratio<1, 1>'
| | | |-CXXRecordDecl 0xd90370 prev 0xd90128 <col:5, col:12> col:12 implicit struct __ratio_divide
| | | |-StaticAssertDecl 0xd904f0 <line:316:7, col:51> col:7
| | | | |-BinaryOperator 0xd904b0 <col:21, col:33> 'bool' '!='
| | | | | |-ImplicitCastExpr 0xd90480 <col:21, col:26> 'intmax_t':'long' <LValueToRValue>
| | | | | | `-DeclRefExpr 0xd90450 <col:21, col:26> 'const intmax_t':'const long' lvalue Var 0xd4b4b0 'num' 'const intmax_t':'const long' non_odr_use_constant
| | | | | `-ImplicitCastExpr 0xd90498 <col:33> 'long' <IntegralCast>
| | | | |   `-IntegerLiteral 0xc2e8a8 <col:33> 'int' 0
| | | | `-StringLiteral 0xc2e8e8 <col:36> 'const char [14]' lvalue "division by 0"
| | | |-TypedefDecl 0xd93050 <line:318:7, line:320:42> col:42 referenced type 'typename __ratio_multiply<ratio<1, 1>, ratio<ratio<1, 1>::den, ratio<1, 1>::num> >::type':'std::ratio<1, 1>'
| | | | `-ElaboratedType 0xd93000 'typename __ratio_multiply<ratio<1, 1>, ratio<ratio<1, 1>::den, ratio<1, 1>::num> >::type' sugar
| | | |   `-TypedefType 0xd92d50 'std::__ratio_multiply<std::ratio<1, 1>, std::ratio<1, 1> >::type' sugar
| | | |     |-Typedef 0xd92c80 'type'
| | | |     `-TemplateSpecializationType 0xd92be0 'ratio<__safe_multiply<(ratio<1, 1>::num / __gcd1), (ratio<1, 1>::num / __gcd2)>::value, __safe_multiply<(ratio<1, 1>::den / __gcd2), (ratio<1, 1>::den / __gcd1)>::value>' sugar ratio
| | | |       |-TemplateArgument expr
| | | |       | `-ConstantExpr 0xd92b80 <line:294:9, line:295:47> 'intmax_t':'long' Int: 1
| | | |       |   `-ImplicitCastExpr 0xd92b68 <line:294:9, line:295:47> 'intmax_t':'long' <LValueToRValue>
| | | |       |     `-DeclRefExpr 0xd91588 <line:294:9, line:295:47> 'const intmax_t':'const long' lvalue Var 0xd4a040 'value' 'const intmax_t':'const long' non_odr_use_constant
| | | |       |-TemplateArgument expr
| | | |       | `-ConstantExpr 0xd92bb8 <line:296:9, line:297:47> 'intmax_t':'long' Int: 1
| | | |       |   `-ImplicitCastExpr 0xd92ba0 <line:296:9, line:297:47> 'intmax_t':'long' <LValueToRValue>
| | | |       |     `-DeclRefExpr 0xd92b38 <line:296:9, line:297:47> 'const intmax_t':'const long' lvalue Var 0xd4a040 'value' 'const intmax_t':'const long' non_odr_use_constant
| | | |       `-RecordType 0xcedc30 'std::ratio<1, 1>'
| | | |         `-ClassTemplateSpecialization 0xcedb38 'ratio'
| | | |-VarDecl 0xd930a8 <line:322:7, col:45> col:33 num 'const intmax_t':'const long' static constexpr cinit
| | | | `-ImplicitCastExpr 0xd931d8 <col:39, col:45> 'intmax_t':'long' <LValueToRValue>
| | | |   `-DeclRefExpr 0xd931a8 <col:39, col:45> 'const intmax_t':'const long' lvalue Var 0xd4b4b0 'num' 'const intmax_t':'const long' non_odr_use_constant
| | | `-VarDecl 0xd93248 <line:323:7, col:45> col:33 den 'const intmax_t':'const long' static constexpr cinit
| | |   `-ImplicitCastExpr 0xd93340 <col:39, col:45> 'intmax_t':'long' <LValueToRValue>
| | |     `-DeclRefExpr 0xd93310 <col:39, col:45> 'const intmax_t':'const long' lvalue Var 0xd4b738 'den' 'const intmax_t':'const long' non_odr_use_constant
| | |-ClassTemplateSpecializationDecl 0xda7318 <line:313:3, line:324:5> line:314:12 struct __ratio_divide definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'std::ratio<1, 1>'
| | | |-TemplateArgument type 'std::ratio<1, 1000000000>'
| | | |-CXXRecordDecl 0xda7560 prev 0xda7318 <col:5, col:12> col:12 implicit struct __ratio_divide
| | | |-StaticAssertDecl 0xda76e0 <line:316:7, col:51> col:7
| | | | |-BinaryOperator 0xda76a0 <col:21, col:33> 'bool' '!='
| | | | | |-ImplicitCastExpr 0xda7670 <col:21, col:26> 'intmax_t':'long' <LValueToRValue>
| | | | | | `-DeclRefExpr 0xda7640 <col:21, col:26> 'const intmax_t':'const long' lvalue Var 0xd2f0a0 'num' 'const intmax_t':'const long' non_odr_use_constant
| | | | | `-ImplicitCastExpr 0xda7688 <col:33> 'long' <IntegralCast>
| | | | |   `-IntegerLiteral 0xc2e8a8 <col:33> 'int' 0
| | | | `-StringLiteral 0xc2e8e8 <col:36> 'const char [14]' lvalue "division by 0"
| | | |-TypedefDecl 0xdaaa80 <line:318:7, line:320:42> col:42 referenced type 'typename __ratio_multiply<ratio<1, 1>, ratio<ratio<1, 1000000000>::den, ratio<1, 1000000000>::num> >::type':'std::ratio<1000000000, 1>'
| | | | `-ElaboratedType 0xdaaa30 'typename __ratio_multiply<ratio<1, 1>, ratio<ratio<1, 1000000000>::den, ratio<1, 1000000000>::num> >::type' sugar
| | | |   `-TypedefType 0xdaa780 'std::__ratio_multiply<std::ratio<1, 1>, std::ratio<1000000000, 1> >::type' sugar
| | | |     |-Typedef 0xdaa6b0 'type'
| | | |     `-TemplateSpecializationType 0xdaa610 'ratio<__safe_multiply<(ratio<1, 1>::num / __gcd1), (ratio<1000000000, 1>::num / __gcd2)>::value, __safe_multiply<(ratio<1, 1>::den / __gcd2), (ratio<1000000000, 1>::den / __gcd1)>::value>' sugar ratio
| | | |       |-TemplateArgument expr
| | | |       | `-ConstantExpr 0xdaa5b0 <line:294:9, line:295:47> 'intmax_t':'long' Int: 1000000000
| | | |       |   `-ImplicitCastExpr 0xdaa598 <line:294:9, line:295:47> 'intmax_t':'long' <LValueToRValue>
| | | |       |     `-DeclRefExpr 0xdaa198 <line:294:9, line:295:47> 'const intmax_t':'const long' lvalue Var 0xda9fe0 'value' 'const intmax_t':'const long' non_odr_use_constant
| | | |       |-TemplateArgument expr
| | | |       | `-ConstantExpr 0xdaa5e8 <line:296:9, line:297:47> 'intmax_t':'long' Int: 1
| | | |       |   `-ImplicitCastExpr 0xdaa5d0 <line:296:9, line:297:47> 'intmax_t':'long' <LValueToRValue>
| | | |       |     `-DeclRefExpr 0xdaa568 <line:296:9, line:297:47> 'const intmax_t':'const long' lvalue Var 0xd4a040 'value' 'const intmax_t':'const long' non_odr_use_constant
| | | |       `-RecordType 0xc4dd60 'std::ratio<1000000000, 1>'
| | | |         `-ClassTemplateSpecialization 0xc4dc60 'ratio'
| | | |-VarDecl 0xdaaad8 <line:322:7, col:45> col:33 num 'const intmax_t':'const long' static constexpr cinit
| | | | `-ImplicitCastExpr 0xdaac08 <col:39, col:45> 'intmax_t':'long' <LValueToRValue>
| | | |   `-DeclRefExpr 0xdaabd8 <col:39, col:45> 'const intmax_t':'const long' lvalue Var 0xd46830 'num' 'const intmax_t':'const long' non_odr_use_constant
| | | `-VarDecl 0xdaac78 <line:323:7, col:45> col:33 den 'const intmax_t':'const long' static constexpr cinit
| | |   `-ImplicitCastExpr 0xdaad70 <col:39, col:45> 'intmax_t':'long' <LValueToRValue>
| | |     `-DeclRefExpr 0xdaad40 <col:39, col:45> 'const intmax_t':'const long' lvalue Var 0xd46ab8 'den' 'const intmax_t':'const long' non_odr_use_constant
| | |-ClassTemplateSpecializationDecl 0xdd0438 <line:313:3, line:324:5> line:314:12 struct __ratio_divide definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'std::ratio<3600, 1>'
| | | |-TemplateArgument type 'std::ratio<3600, 1>'
| | | |-CXXRecordDecl 0xdd0680 prev 0xdd0438 <col:5, col:12> col:12 implicit struct __ratio_divide
| | | |-StaticAssertDecl 0xdd1440 <line:316:7, col:51> col:7
| | | | |-BinaryOperator 0xdd0800 <col:21, col:33> 'bool' '!='
| | | | | |-ImplicitCastExpr 0xdd07d0 <col:21, col:26> 'intmax_t':'long' <LValueToRValue>
| | | | | | `-DeclRefExpr 0xdd07a0 <col:21, col:26> 'const intmax_t':'const long' lvalue Var 0xdc1560 'num' 'const intmax_t':'const long' non_odr_use_constant
| | | | | `-ImplicitCastExpr 0xdd07e8 <col:33> 'long' <IntegralCast>
| | | | |   `-IntegerLiteral 0xc2e8a8 <col:33> 'int' 0
| | | | `-StringLiteral 0xc2e8e8 <col:36> 'const char [14]' lvalue "division by 0"
| | | |-TypedefDecl 0xdd6b50 <line:318:7, line:320:42> col:42 referenced type 'typename __ratio_multiply<ratio<3600, 1>, ratio<ratio<3600, 1>::den, ratio<3600, 1>::num> >::type':'std::ratio<1, 1>'
| | | | `-ElaboratedType 0xdd6b00 'typename __ratio_multiply<ratio<3600, 1>, ratio<ratio<3600, 1>::den, ratio<3600, 1>::num> >::type' sugar
| | | |   `-TypedefType 0xdd6850 'std::__ratio_multiply<std::ratio<3600, 1>, std::ratio<1, 3600> >::type' sugar
| | | |     |-Typedef 0xdd6780 'type'
| | | |     `-TemplateSpecializationType 0xdd66e0 'ratio<__safe_multiply<(ratio<3600, 1>::num / __gcd1), (ratio<1, 3600>::num / __gcd2)>::value, __safe_multiply<(ratio<3600, 1>::den / __gcd2), (ratio<1, 3600>::den / __gcd1)>::value>' sugar ratio
| | | |       |-TemplateArgument expr
| | | |       | `-ConstantExpr 0xdd6680 <line:294:9, line:295:47> 'intmax_t':'long' Int: 1
| | | |       |   `-ImplicitCastExpr 0xdd6668 <line:294:9, line:295:47> 'intmax_t':'long' <LValueToRValue>
| | | |       |     `-DeclRefExpr 0xdd6268 <line:294:9, line:295:47> 'const intmax_t':'const long' lvalue Var 0xd4a040 'value' 'const intmax_t':'const long' non_odr_use_constant
| | | |       |-TemplateArgument expr
| | | |       | `-ConstantExpr 0xdd66b8 <line:296:9, line:297:47> 'intmax_t':'long' Int: 1
| | | |       |   `-ImplicitCastExpr 0xdd66a0 <line:296:9, line:297:47> 'intmax_t':'long' <LValueToRValue>
| | | |       |     `-DeclRefExpr 0xdd6638 <line:296:9, line:297:47> 'const intmax_t':'const long' lvalue Var 0xd4a040 'value' 'const intmax_t':'const long' non_odr_use_constant
| | | |       `-RecordType 0xcedc30 'std::ratio<1, 1>'
| | | |         `-ClassTemplateSpecialization 0xcedb38 'ratio'
| | | |-VarDecl 0xdd6ba8 <line:322:7, col:45> col:33 num 'const intmax_t':'const long' static constexpr cinit
| | | | `-ImplicitCastExpr 0xdd6cd8 <col:39, col:45> 'intmax_t':'long' <LValueToRValue>
| | | |   `-DeclRefExpr 0xdd6ca8 <col:39, col:45> 'const intmax_t':'const long' lvalue Var 0xd4b4b0 'num' 'const intmax_t':'const long' non_odr_use_constant
| | | `-VarDecl 0xdd6d48 <line:323:7, col:45> col:33 den 'const intmax_t':'const long' static constexpr cinit
| | |   `-ImplicitCastExpr 0xdd6e40 <col:39, col:45> 'intmax_t':'long' <LValueToRValue>
| | |     `-DeclRefExpr 0xdd6e10 <col:39, col:45> 'const intmax_t':'const long' lvalue Var 0xd4b738 'den' 'const intmax_t':'const long' non_odr_use_constant
| | |-ClassTemplateSpecializationDecl 0xde95a8 <line:313:3, line:324:5> line:314:12 struct __ratio_divide definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'std::ratio<60, 1>'
| | | |-TemplateArgument type 'std::ratio<60, 1>'
| | | |-CXXRecordDecl 0xde97f0 prev 0xde95a8 <col:5, col:12> col:12 implicit struct __ratio_divide
| | | |-StaticAssertDecl 0xde99b0 <line:316:7, col:51> col:7
| | | | |-BinaryOperator 0xde9970 <col:21, col:33> 'bool' '!='
| | | | | |-ImplicitCastExpr 0xde9940 <col:21, col:26> 'intmax_t':'long' <LValueToRValue>
| | | | | | `-DeclRefExpr 0xde9910 <col:21, col:26> 'const intmax_t':'const long' lvalue Var 0xde1f00 'num' 'const intmax_t':'const long' non_odr_use_constant
| | | | | `-ImplicitCastExpr 0xde9958 <col:33> 'long' <IntegralCast>
| | | | |   `-IntegerLiteral 0xc2e8a8 <col:33> 'int' 0
| | | | `-StringLiteral 0xc2e8e8 <col:36> 'const char [14]' lvalue "division by 0"
| | | |-TypedefDecl 0xdf1220 <line:318:7, line:320:42> col:42 referenced type 'typename __ratio_multiply<ratio<60, 1>, ratio<ratio<60, 1>::den, ratio<60, 1>::num> >::type':'std::ratio<1, 1>'
| | | | `-ElaboratedType 0xdf11d0 'typename __ratio_multiply<ratio<60, 1>, ratio<ratio<60, 1>::den, ratio<60, 1>::num> >::type' sugar
| | | |   `-TypedefType 0xdf0f20 'std::__ratio_multiply<std::ratio<60, 1>, std::ratio<1, 60> >::type' sugar
| | | |     |-Typedef 0xdf0e50 'type'
| | | |     `-TemplateSpecializationType 0xdf0db0 'ratio<__safe_multiply<(ratio<60, 1>::num / __gcd1), (ratio<1, 60>::num / __gcd2)>::value, __safe_multiply<(ratio<60, 1>::den / __gcd2), (ratio<1, 60>::den / __gcd1)>::value>' sugar ratio
| | | |       |-TemplateArgument expr
| | | |       | `-ConstantExpr 0xdf0d50 <line:294:9, line:295:47> 'intmax_t':'long' Int: 1
| | | |       |   `-ImplicitCastExpr 0xdf0d38 <line:294:9, line:295:47> 'intmax_t':'long' <LValueToRValue>
| | | |       |     `-DeclRefExpr 0xdf0938 <line:294:9, line:295:47> 'const intmax_t':'const long' lvalue Var 0xd4a040 'value' 'const intmax_t':'const long' non_odr_use_constant
| | | |       |-TemplateArgument expr
| | | |       | `-ConstantExpr 0xdf0d88 <line:296:9, line:297:47> 'intmax_t':'long' Int: 1
| | | |       |   `-ImplicitCastExpr 0xdf0d70 <line:296:9, line:297:47> 'intmax_t':'long' <LValueToRValue>
| | | |       |     `-DeclRefExpr 0xdf0d08 <line:296:9, line:297:47> 'const intmax_t':'const long' lvalue Var 0xd4a040 'value' 'const intmax_t':'const long' non_odr_use_constant
| | | |       `-RecordType 0xcedc30 'std::ratio<1, 1>'
| | | |         `-ClassTemplateSpecialization 0xcedb38 'ratio'
| | | |-VarDecl 0xdf1278 <line:322:7, col:45> col:33 num 'const intmax_t':'const long' static constexpr cinit
| | | | `-ImplicitCastExpr 0xdf13a8 <col:39, col:45> 'intmax_t':'long' <LValueToRValue>
| | | |   `-DeclRefExpr 0xdf1378 <col:39, col:45> 'const intmax_t':'const long' lvalue Var 0xd4b4b0 'num' 'const intmax_t':'const long' non_odr_use_constant
| | | `-VarDecl 0xdf1418 <line:323:7, col:45> col:33 den 'const intmax_t':'const long' static constexpr cinit
| | |   `-ImplicitCastExpr 0xdf1510 <col:39, col:45> 'intmax_t':'long' <LValueToRValue>
| | |     `-DeclRefExpr 0xdf14e0 <col:39, col:45> 'const intmax_t':'const long' lvalue Var 0xd4b738 'den' 'const intmax_t':'const long' non_odr_use_constant
| | |-ClassTemplateSpecializationDecl 0xe0d008 <line:313:3, line:324:5> line:314:12 struct __ratio_divide definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'std::ratio<1, 1000>'
| | | |-TemplateArgument type 'std::ratio<1, 1000>'
| | | |-CXXRecordDecl 0xe0d250 prev 0xe0d008 <col:5, col:12> col:12 implicit struct __ratio_divide
| | | |-StaticAssertDecl 0xe0d410 <line:316:7, col:51> col:7
| | | | |-BinaryOperator 0xe0d3d0 <col:21, col:33> 'bool' '!='
| | | | | |-ImplicitCastExpr 0xe0d3a0 <col:21, col:26> 'intmax_t':'long' <LValueToRValue>
| | | | | | `-DeclRefExpr 0xe0d370 <col:21, col:26> 'const intmax_t':'const long' lvalue Var 0xe06a10 'num' 'const intmax_t':'const long' non_odr_use_constant
| | | | | `-ImplicitCastExpr 0xe0d3b8 <col:33> 'long' <IntegralCast>
| | | | |   `-IntegerLiteral 0xc2e8a8 <col:33> 'int' 0
| | | | `-StringLiteral 0xc2e8e8 <col:36> 'const char [14]' lvalue "division by 0"
| | | |-TypedefDecl 0xe118d0 <line:318:7, line:320:42> col:42 referenced type 'typename __ratio_multiply<ratio<1, 1000>, ratio<ratio<1, 1000>::den, ratio<1, 1000>::num> >::type':'std::ratio<1, 1>'
| | | | `-ElaboratedType 0xe11880 'typename __ratio_multiply<ratio<1, 1000>, ratio<ratio<1, 1000>::den, ratio<1, 1000>::num> >::type' sugar
| | | |   `-TypedefType 0xe115d0 'std::__ratio_multiply<std::ratio<1, 1000>, std::ratio<1000, 1> >::type' sugar
| | | |     |-Typedef 0xe11500 'type'
| | | |     `-TemplateSpecializationType 0xe11460 'ratio<__safe_multiply<(ratio<1, 1000>::num / __gcd1), (ratio<1000, 1>::num / __gcd2)>::value, __safe_multiply<(ratio<1, 1000>::den / __gcd2), (ratio<1000, 1>::den / __gcd1)>::value>' sugar ratio
| | | |       |-TemplateArgument expr
| | | |       | `-ConstantExpr 0xe11400 <line:294:9, line:295:47> 'intmax_t':'long' Int: 1
| | | |       |   `-ImplicitCastExpr 0xe113e8 <line:294:9, line:295:47> 'intmax_t':'long' <LValueToRValue>
| | | |       |     `-DeclRefExpr 0xe10fe8 <line:294:9, line:295:47> 'const intmax_t':'const long' lvalue Var 0xd4a040 'value' 'const intmax_t':'const long' non_odr_use_constant
| | | |       |-TemplateArgument expr
| | | |       | `-ConstantExpr 0xe11438 <line:296:9, line:297:47> 'intmax_t':'long' Int: 1
| | | |       |   `-ImplicitCastExpr 0xe11420 <line:296:9, line:297:47> 'intmax_t':'long' <LValueToRValue>
| | | |       |     `-DeclRefExpr 0xe113b8 <line:296:9, line:297:47> 'const intmax_t':'const long' lvalue Var 0xd4a040 'value' 'const intmax_t':'const long' non_odr_use_constant
| | | |       `-RecordType 0xcedc30 'std::ratio<1, 1>'
| | | |         `-ClassTemplateSpecialization 0xcedb38 'ratio'
| | | |-VarDecl 0xe11928 <line:322:7, col:45> col:33 num 'const intmax_t':'const long' static constexpr cinit
| | | | `-ImplicitCastExpr 0xe11a58 <col:39, col:45> 'intmax_t':'long' <LValueToRValue>
| | | |   `-DeclRefExpr 0xe11a28 <col:39, col:45> 'const intmax_t':'const long' lvalue Var 0xd4b4b0 'num' 'const intmax_t':'const long' non_odr_use_constant
| | | `-VarDecl 0xe11ac8 <line:323:7, col:45> col:33 den 'const intmax_t':'const long' static constexpr cinit
| | |   `-ImplicitCastExpr 0xe11bc0 <col:39, col:45> 'intmax_t':'long' <LValueToRValue>
| | |     `-DeclRefExpr 0xe11b90 <col:39, col:45> 'const intmax_t':'const long' lvalue Var 0xd4b738 'den' 'const intmax_t':'const long' non_odr_use_constant
| | `-ClassTemplateSpecializationDecl 0xe23e38 <line:313:3, line:324:5> line:314:12 struct __ratio_divide definition
| |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-TemplateArgument type 'std::ratio<1, 1000000>'
| |   |-TemplateArgument type 'std::ratio<1, 1000000>'
| |   |-CXXRecordDecl 0xe24080 prev 0xe23e38 <col:5, col:12> col:12 implicit struct __ratio_divide
| |   |-StaticAssertDecl 0xe24240 <line:316:7, col:51> col:7
| |   | |-BinaryOperator 0xe24200 <col:21, col:33> 'bool' '!='
| |   | | |-ImplicitCastExpr 0xe241d0 <col:21, col:26> 'intmax_t':'long' <LValueToRValue>
| |   | | | `-DeclRefExpr 0xe241a0 <col:21, col:26> 'const intmax_t':'const long' lvalue Var 0xe1e280 'num' 'const intmax_t':'const long' non_odr_use_constant
| |   | | `-ImplicitCastExpr 0xe241e8 <col:33> 'long' <IntegralCast>
| |   | |   `-IntegerLiteral 0xc2e8a8 <col:33> 'int' 0
| |   | `-StringLiteral 0xc2e8e8 <col:36> 'const char [14]' lvalue "division by 0"
| |   |-TypedefDecl 0xe294c0 <line:318:7, line:320:42> col:42 referenced type 'typename __ratio_multiply<ratio<1, 1000000>, ratio<ratio<1, 1000000>::den, ratio<1, 1000000>::num> >::type':'std::ratio<1, 1>'
| |   | `-ElaboratedType 0xe29470 'typename __ratio_multiply<ratio<1, 1000000>, ratio<ratio<1, 1000000>::den, ratio<1, 1000000>::num> >::type' sugar
| |   |   `-TypedefType 0xe291c0 'std::__ratio_multiply<std::ratio<1, 1000000>, std::ratio<1000000, 1> >::type' sugar
| |   |     |-Typedef 0xe290f0 'type'
| |   |     `-TemplateSpecializationType 0xe29050 'ratio<__safe_multiply<(ratio<1, 1000000>::num / __gcd1), (ratio<1000000, 1>::num / __gcd2)>::value, __safe_multiply<(ratio<1, 1000000>::den / __gcd2), (ratio<1000000, 1>::den / __gcd1)>::value>' sugar ratio
| |   |       |-TemplateArgument expr
| |   |       | `-ConstantExpr 0xe28ff0 <line:294:9, line:295:47> 'intmax_t':'long' Int: 1
| |   |       |   `-ImplicitCastExpr 0xe28fd8 <line:294:9, line:295:47> 'intmax_t':'long' <LValueToRValue>
| |   |       |     `-DeclRefExpr 0xe28bd8 <line:294:9, line:295:47> 'const intmax_t':'const long' lvalue Var 0xd4a040 'value' 'const intmax_t':'const long' non_odr_use_constant
| |   |       |-TemplateArgument expr
| |   |       | `-ConstantExpr 0xe29028 <line:296:9, line:297:47> 'intmax_t':'long' Int: 1
| |   |       |   `-ImplicitCastExpr 0xe29010 <line:296:9, line:297:47> 'intmax_t':'long' <LValueToRValue>
| |   |       |     `-DeclRefExpr 0xe28fa8 <line:296:9, line:297:47> 'const intmax_t':'const long' lvalue Var 0xd4a040 'value' 'const intmax_t':'const long' non_odr_use_constant
| |   |       `-RecordType 0xcedc30 'std::ratio<1, 1>'
| |   |         `-ClassTemplateSpecialization 0xcedb38 'ratio'
| |   |-VarDecl 0xe29518 <line:322:7, col:45> col:33 num 'const intmax_t':'const long' static constexpr cinit
| |   | `-ImplicitCastExpr 0xe29648 <col:39, col:45> 'intmax_t':'long' <LValueToRValue>
| |   |   `-DeclRefExpr 0xe29618 <col:39, col:45> 'const intmax_t':'const long' lvalue Var 0xd4b4b0 'num' 'const intmax_t':'const long' non_odr_use_constant
| |   `-VarDecl 0xe296b8 <line:323:7, col:45> col:33 den 'const intmax_t':'const long' static constexpr cinit
| |     `-ImplicitCastExpr 0xe297b0 <col:39, col:45> 'intmax_t':'long' <LValueToRValue>
| |       `-DeclRefExpr 0xe29780 <col:39, col:45> 'const intmax_t':'const long' lvalue Var 0xd4b738 'den' 'const intmax_t':'const long' non_odr_use_constant
| |-VarDecl 0xc2f348 parent 0xc2e470 prev 0xc2ee38 <line:326:3, line:327:50> col:50 num 'const intmax_t':'const long' constexpr
| |-VarDecl 0xc2f6f8 parent 0xc2e470 prev 0xc2ef58 <line:329:3, line:330:50> col:50 den 'const intmax_t':'const long' constexpr
| |-TypeAliasTemplateDecl 0xc2fad0 <line:333:3, line:334:61> col:5 ratio_divide
| | |-TemplateTypeParmDecl 0xc2f7a8 <line:333:12, col:21> col:21 referenced typename depth 0 index 0 _R1
| | |-TemplateTypeParmDecl 0xc2f828 <col:26, col:35> col:35 referenced typename depth 0 index 1 _R2
| | `-TypeAliasDecl 0xc2fa70 <line:334:5, col:61> col:11 ratio_divide 'typename __ratio_divide<_R1, _R2>::type'
| |   `-DependentNameType 0xc2fa00 'typename __ratio_divide<_R1, _R2>::type' dependent
| |-ClassTemplateDecl 0xc2fce0 <line:337:3, line:340:7> line:338:12 ratio_equal
| | |-TemplateTypeParmDecl 0xc2fb28 <line:337:12, col:21> col:21 typename depth 0 index 0 _R1
| | |-TemplateTypeParmDecl 0xc2fba8 <col:26, col:35> col:35 typename depth 0 index 1 _R2
| | `-CXXRecordDecl 0xc2fc50 <line:338:5, line:340:7> line:338:12 struct ratio_equal definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'integral_constant<bool, _R1::num == _R2::num && _R1::den == _R2::den>'
| |   `-CXXRecordDecl 0xc328c0 <col:5, col:12> col:12 implicit struct ratio_equal
| |-ClassTemplateDecl 0xc32b20 <line:343:3, line:346:7> line:344:12 ratio_not_equal
| | |-TemplateTypeParmDecl 0xc32968 <line:343:12, col:21> col:21 referenced typename depth 0 index 0 _R1
| | |-TemplateTypeParmDecl 0xc329e8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _R2
| | `-CXXRecordDecl 0xc32a90 <line:344:5, line:346:7> line:344:12 struct ratio_not_equal definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'integral_constant<bool, !ratio_equal<_R1, _R2>::value>'
| |   `-CXXRecordDecl 0xc33090 <col:5, col:12> col:12 implicit struct ratio_not_equal
| |-ClassTemplateDecl 0xc33950 <line:349:3, line:355:7> line:352:12 __ratio_less_impl_1
| | |-TemplateTypeParmDecl 0xc33138 <line:349:12, col:21> col:21 typename depth 0 index 0 _R1
| | |-TemplateTypeParmDecl 0xc331b8 <col:26, col:35> col:35 typename depth 0 index 1 _R2
| | |-TemplateTypeParmDecl 0xc334f8 <line:350:12, col:56> col:21 typename depth 0 index 2 _Left
| | | `-TemplateArgument type '__big_mul<_R1::num, _R2::den>'
| | |-TemplateTypeParmDecl 0xc33808 <line:351:12, col:57> col:21 typename depth 0 index 3 _Right
| | | `-TemplateArgument type '__big_mul<_R2::num, _R1::den>'
| | `-CXXRecordDecl 0xc338c0 <line:352:5, line:355:7> line:352:12 struct __ratio_less_impl_1 definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'integral_constant<bool, __big_less<_Left::__hi, _Left::__lo, _Right::__hi, _Right::__lo>::value>'
| |   `-CXXRecordDecl 0xc342d0 <col:5, col:12> col:12 implicit struct __ratio_less_impl_1
| |-ClassTemplateDecl 0xc35060 <line:357:3, line:365:7> line:363:12 __ratio_less_impl
| | |-TemplateTypeParmDecl 0xc34378 <line:357:12, col:21> col:21 referenced typename depth 0 index 0 _R1
| | |-TemplateTypeParmDecl 0xc343f8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _R2
| | |-NonTypeTemplateParmDecl 0xc34a78 <line:358:5, line:360:44> line:358:10 'bool' depth 0 index 2
| | | `-TemplateArgument expr
| | |   `-ImplicitCastExpr 0xc34ad8 <col:12, line:360:44> 'bool' <Dependent>
| | |     `-ParenExpr 0xc34a48 <line:358:12, line:360:44> '<dependent type>'
| | |       `-BinaryOperator 0xc34a28 <line:358:13, line:360:43> '<dependent type>' '||'
| | |         |-BinaryOperator 0xc34620 <line:358:13, col:42> '<dependent type>' '||'
| | |         | |-BinaryOperator 0xc34538 <col:13, col:25> '<dependent type>' '=='
| | |         | | |-DependentScopeDeclRefExpr 0xc344e0 <col:13, col:18> '<dependent type>' lvalue
| | |         | | `-IntegerLiteral 0xc34518 <col:25> 'int' 0
| | |         | `-BinaryOperator 0xc34600 <col:30, col:42> '<dependent type>' '=='
| | |         |   |-DependentScopeDeclRefExpr 0xc345a8 <col:30, col:35> '<dependent type>' lvalue
| | |         |   `-IntegerLiteral 0xc345e0 <col:42> 'int' 0
| | |         `-ParenExpr 0xc34a08 <line:359:9, line:360:43> '<dependent type>'
| | |           `-BinaryOperator 0xc349e8 <line:359:10, line:360:38> '<dependent type>' '!='
| | |             |-DependentScopeDeclRefExpr 0xc347e8 <line:359:10, col:35> '<dependent type>' lvalue
| | |             `-DependentScopeDeclRefExpr 0xc349b0 <line:360:13, col:38> '<dependent type>' lvalue
| | |-NonTypeTemplateParmDecl 0xc34f20 <line:361:5, line:362:45> line:361:10 'bool' depth 0 index 3
| | | `-TemplateArgument expr
| | |   `-ImplicitCastExpr 0xc34f80 <col:12, line:362:45> 'bool' <Dependent>
| | |     `-ParenExpr 0xc34ef0 <line:361:12, line:362:45> '<dependent type>'
| | |       `-BinaryOperator 0xc34ed0 <line:361:13, line:362:44> '<dependent type>' '&&'
| | |         |-BinaryOperator 0xc34cc8 <line:361:13, col:48> '<dependent type>' '=='
| | |         | |-DependentScopeDeclRefExpr 0xc34c58 <col:13, col:38> '<dependent type>' lvalue
| | |         | `-UnaryOperator 0xc34cb0 <col:47, col:48> 'int' prefix '-'
| | |         |   `-IntegerLiteral 0xc34c90 <col:48> 'int' 1
| | |         `-BinaryOperator 0xc34eb0 <line:362:9, col:44> '<dependent type>' '=='
| | |           |-DependentScopeDeclRefExpr 0xc34e40 <col:9, col:34> '<dependent type>' lvalue
| | |           `-UnaryOperator 0xc34e98 <col:43, col:44> 'int' prefix '-'
| | |             `-IntegerLiteral 0xc34e78 <col:44> 'int' 1
| | `-CXXRecordDecl 0xc34fd0 <line:363:5, line:365:7> line:363:12 struct __ratio_less_impl definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__ratio_less_impl_1<_R1, _R2>::type'
| |   `-CXXRecordDecl 0xc35980 <col:5, col:12> col:12 implicit struct __ratio_less_impl
| |-ClassTemplatePartialSpecializationDecl 0xc35db8 <line:367:3, line:370:7> line:368:12 struct __ratio_less_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'integral_constant<bool, _R1::num < _R2::num>'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument type 'type-parameter-0-1'
| | |-TemplateArgument integral 1
| | |-TemplateArgument integral 0
| | |-TemplateTypeParmDecl 0xc35a28 <line:367:12, col:21> col:21 referenced typename depth 0 index 0 _R1
| | |-TemplateTypeParmDecl 0xc35aa8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _R2
| | `-CXXRecordDecl 0xc37250 <line:368:5, col:12> col:12 implicit struct __ratio_less_impl
| |-ClassTemplatePartialSpecializationDecl 0xc37688 <line:372:3, line:376:7> line:373:12 struct __ratio_less_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public '__ratio_less_impl_1<ratio<-_R2::num, _R2::den>, ratio<-_R1::num, _R1::den> >::type'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument type 'type-parameter-0-1'
| | |-TemplateArgument integral 0
| | |-TemplateArgument integral 1
| | |-TemplateTypeParmDecl 0xc372f8 <line:372:12, col:21> col:21 referenced typename depth 0 index 0 _R1
| | |-TemplateTypeParmDecl 0xc37378 <col:26, col:35> col:35 referenced typename depth 0 index 1 _R2
| | `-CXXRecordDecl 0xc38600 <line:373:5, col:12> col:12 implicit struct __ratio_less_impl
| |-ClassTemplateDecl 0xc38860 <line:379:3, line:382:7> line:380:12 ratio_less
| | |-TemplateTypeParmDecl 0xc386a8 <line:379:12, col:21> col:21 referenced typename depth 0 index 0 _R1
| | |-TemplateTypeParmDecl 0xc38728 <col:26, col:35> col:35 referenced typename depth 0 index 1 _R2
| | `-CXXRecordDecl 0xc387d0 <line:380:5, line:382:7> line:380:12 struct ratio_less definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public '__ratio_less_impl<_R1, _R2>::type'
| |   `-CXXRecordDecl 0xc39560 <col:5, col:12> col:12 implicit struct ratio_less
| |-ClassTemplateDecl 0xc397c0 <line:385:3, line:388:7> line:386:12 ratio_less_equal
| | |-TemplateTypeParmDecl 0xc39608 <line:385:12, col:21> col:21 referenced typename depth 0 index 0 _R1
| | |-TemplateTypeParmDecl 0xc39688 <col:26, col:35> col:35 referenced typename depth 0 index 1 _R2
| | `-CXXRecordDecl 0xc39730 <line:386:5, line:388:7> line:386:12 struct ratio_less_equal definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'integral_constant<bool, !ratio_less<_R2, _R1>::value>'
| |   `-CXXRecordDecl 0xc39d90 <col:5, col:12> col:12 implicit struct ratio_less_equal
| |-ClassTemplateDecl 0xc39ff0 <line:391:3, line:394:7> line:392:12 ratio_greater
| | |-TemplateTypeParmDecl 0xc39e38 <line:391:12, col:21> col:21 referenced typename depth 0 index 0 _R1
| | |-TemplateTypeParmDecl 0xc39eb8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _R2
| | `-CXXRecordDecl 0xc39f60 <line:392:5, line:394:7> line:392:12 struct ratio_greater definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'integral_constant<bool, ratio_less<_R2, _R1>::value>'
| |   `-CXXRecordDecl 0xc3a550 <col:5, col:12> col:12 implicit struct ratio_greater
| |-ClassTemplateDecl 0xc3a7b0 <line:397:3, line:400:7> line:398:12 ratio_greater_equal
| | |-TemplateTypeParmDecl 0xc3a5f8 <line:397:12, col:21> col:21 referenced typename depth 0 index 0 _R1
| | |-TemplateTypeParmDecl 0xc3a678 <col:26, col:35> col:35 referenced typename depth 0 index 1 _R2
| | `-CXXRecordDecl 0xc3a720 <line:398:5, line:400:7> line:398:12 struct ratio_greater_equal definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-public 'integral_constant<bool, !ratio_less<_R1, _R2>::value>'
| |   `-CXXRecordDecl 0xc3ad20 <col:5, col:12> col:12 implicit struct ratio_greater_equal
| |-ClassTemplateDecl 0xc3d1c0 <line:419:3, line:432:5> line:424:12 __ratio_add_impl
| | |-TemplateTypeParmDecl 0xc3adc8 <line:419:12, col:21> col:21 typename depth 0 index 0 _R1
| | |-TemplateTypeParmDecl 0xc3ae48 <col:26, col:35> col:35 typename depth 0 index 1 _R2
| | |-NonTypeTemplateParmDecl 0xc3afd8 <line:420:7, col:28> col:12 'bool' depth 0 index 2
| | | `-TemplateArgument expr
| | |   `-ImplicitCastExpr 0xc3b038 <col:14, col:28> 'bool' <Dependent>
| | |     `-ParenExpr 0xc3afa8 <col:14, col:28> '<dependent type>'
| | |       `-BinaryOperator 0xc3af88 <col:15, col:27> '<dependent type>' '>='
| | |         |-DependentScopeDeclRefExpr 0xc3af30 <col:15, col:20> '<dependent type>' lvalue
| | |         `-IntegerLiteral 0xc3af68 <col:27> 'int' 0
| | |-NonTypeTemplateParmDecl 0xc3c670 <line:421:7, col:28> col:12 'bool' depth 0 index 3
| | | `-TemplateArgument expr
| | |   `-ImplicitCastExpr 0xc3c6d0 <col:14, col:28> 'bool' <Dependent>
| | |     `-ParenExpr 0xc3b130 <col:14, col:28> '<dependent type>'
| | |       `-BinaryOperator 0xc3b110 <col:15, col:27> '<dependent type>' '>='
| | |         |-DependentScopeDeclRefExpr 0xc3b0b8 <col:15, col:20> '<dependent type>' lvalue
| | |         `-IntegerLiteral 0xc3b0f0 <col:27> 'int' 0
| | |-NonTypeTemplateParmDecl 0xc3d078 <line:422:7, line:423:59> line:422:12 'bool' depth 0 index 4
| | | `-TemplateArgument expr
| | |   `-ImplicitCastExpr 0xc3d0d8 <col:14, line:423:59> 'bool' <Dependent>
| | |     `-DependentScopeDeclRefExpr 0xc3d030 <line:422:14, line:423:59> '<dependent type>' lvalue
| | `-CXXRecordDecl 0xc3d130 <line:424:5, line:432:5> line:424:12 struct __ratio_add_impl definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-CXXRecordDecl 0xc3d530 <col:5, col:12> col:12 implicit struct __ratio_add_impl
| |   |-AccessSpecDecl 0xc3d5c0 <line:426:5, col:12> col:5 private
| |   |-TypedefDecl 0xc3e620 <line:427:7, line:429:44> col:44 referenced __t 'typename __ratio_add_impl<ratio<-_R1::num, _R1::den>, ratio<-_R2::num, _R2::den> >::type'
| |   | `-DependentNameType 0xc3e5b0 'typename __ratio_add_impl<ratio<-_R1::num, _R1::den>, ratio<-_R2::num, _R2::den> >::type' dependent
| |   |-AccessSpecDecl 0xc3e678 <line:430:5, col:11> col:5 public
| |   `-TypedefDecl 0xc3e978 <line:431:7, col:42> col:42 type 'ratio<-__t::num, __t::den>'
| |     `-TemplateSpecializationType 0xc3e890 'ratio<-__t::num, __t::den>' dependent ratio
| |       |-TemplateArgument expr
| |       | `-ImplicitCastExpr 0xc3e7e8 <col:21, col:27> 'intmax_t':'long' <Dependent>
| |       |   `-UnaryOperator 0xc3e748 <col:21, col:27> '<dependent type>' prefix '-' cannot overflow
| |       |     `-DependentScopeDeclRefExpr 0xc3e710 <col:22, col:27> '<dependent type>' lvalue
| |       `-TemplateArgument expr
| |         `-ImplicitCastExpr 0xc3e800 <col:32, col:37> 'intmax_t':'long' <Dependent>
| |           `-DependentScopeDeclRefExpr 0xc3e7b0 <col:32, col:37> '<dependent type>' lvalue
| |-ClassTemplatePartialSpecializationDecl 0xc3ee70 <line:435:3, line:457:5> line:436:12 struct __ratio_add_impl definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument type 'type-parameter-0-1'
| | |-TemplateArgument integral 1
| | |-TemplateArgument integral 1
| | |-TemplateArgument expr
| | | `-DeclRefExpr 0xc3ebc8 <col:51> 'bool' NonTypeTemplateParm 0xc3eaf8 '__b' 'bool'
| | |-TemplateTypeParmDecl 0xc3e9e8 <line:435:12, col:21> col:21 referenced typename depth 0 index 0 _R1
| | |-TemplateTypeParmDecl 0xc3ea68 <col:26, col:35> col:35 referenced typename depth 0 index 1 _R2
| | |-NonTypeTemplateParmDecl 0xc3eaf8 <col:40, col:45> col:45 referenced 'bool' depth 0 index 2 __b
| | |-CXXRecordDecl 0xc3f228 <line:436:5, col:12> col:12 implicit struct __ratio_add_impl
| | |-AccessSpecDecl 0xc3f2b8 <line:438:5, col:12> col:5 private
| | |-VarDecl 0xc3f2f0 <line:439:7, col:74> col:34 referenced __g 'const uintmax_t':'const unsigned long' static constexpr cinit
| | | `-DependentScopeDeclRefExpr 0xc3f610 <col:40, col:74> '<dependent type>' lvalue
| | |-VarDecl 0xc3f658 <line:440:7, col:52> col:34 referenced __d2 'const uintmax_t':'const unsigned long' static constexpr cinit
| | | `-BinaryOperator 0xc3f750 <col:41, col:52> '<dependent type>' '/'
| | |   |-DependentScopeDeclRefExpr 0xc3f6f8 <col:41, col:46> '<dependent type>' lvalue
| | |   `-DeclRefExpr 0xc3f730 <col:52> 'const uintmax_t':'const unsigned long' lvalue Var 0xc3f2f0 '__g' 'const uintmax_t':'const unsigned long'
| | |-TypedefDecl 0xc3f998 <line:441:7, col:41> col:41 __d '__big_mul<_R1::den, __d2>'
| | | `-TemplateSpecializationType 0xc3f8b0 '__big_mul<_R1::den, __d2>' dependent __big_mul
| | |   |-TemplateArgument expr
| | |   | `-ImplicitCastExpr 0xc3f818 <col:25, col:30> 'uintmax_t':'unsigned long' <Dependent>
| | |   |   `-DependentScopeDeclRefExpr 0xc3f7c0 <col:25, col:30> '<dependent type>' lvalue
| | |   `-TemplateArgument expr
| | |     `-ImplicitCastExpr 0xc3f830 <col:35> 'uintmax_t':'unsigned long' <LValueToRValue>
| | |       `-DeclRefExpr 0xc3f7f8 <col:35> 'const uintmax_t':'const unsigned long' lvalue Var 0xc3f658 '__d2' 'const uintmax_t':'const unsigned long'
| | |-TypedefDecl 0xc3fcb8 <line:442:7, col:51> col:51 referenced __x '__big_mul<_R1::num, _R2::den / __g>'
| | | `-TemplateSpecializationType 0xc3fbd0 '__big_mul<_R1::num, _R2::den / __g>' dependent __big_mul
| | |   |-TemplateArgument expr
| | |   | `-ImplicitCastExpr 0xc3fb40 <col:25, col:30> 'uintmax_t':'unsigned long' <Dependent>
| | |   |   `-DependentScopeDeclRefExpr 0xc3fa40 <col:25, col:30> '<dependent type>' lvalue
| | |   `-TemplateArgument expr
| | |     `-ImplicitCastExpr 0xc3fb58 <col:35, col:46> 'uintmax_t':'unsigned long' <Dependent>
| | |       `-BinaryOperator 0xc3fb20 <col:35, col:46> '<dependent type>' '/'
| | |         |-DependentScopeDeclRefExpr 0xc3fac8 <col:35, col:40> '<dependent type>' lvalue
| | |         `-DeclRefExpr 0xc3fb00 <col:46> 'const uintmax_t':'const unsigned long' lvalue Var 0xc3f2f0 '__g' 'const uintmax_t':'const unsigned long'
| | |-TypedefDecl 0xc3ffd8 <line:443:7, col:51> col:51 referenced __y '__big_mul<_R2::num, _R1::den / __g>'
| | | `-TemplateSpecializationType 0xc3fef0 '__big_mul<_R2::num, _R1::den / __g>' dependent __big_mul
| | |   |-TemplateArgument expr
| | |   | `-ImplicitCastExpr 0xc3fe60 <col:25, col:30> 'uintmax_t':'unsigned long' <Dependent>
| | |   |   `-DependentScopeDeclRefExpr 0xc3fd60 <col:25, col:30> '<dependent type>' lvalue
| | |   `-TemplateArgument expr
| | |     `-ImplicitCastExpr 0xc3fe78 <col:35, col:46> 'uintmax_t':'unsigned long' <Dependent>
| | |       `-BinaryOperator 0xc3fe40 <col:35, col:46> '<dependent type>' '/'
| | |         |-DependentScopeDeclRefExpr 0xc3fde8 <col:35, col:40> '<dependent type>' lvalue
| | |         `-DeclRefExpr 0xc3fe20 <col:46> 'const uintmax_t':'const unsigned long' lvalue Var 0xc3f2f0 '__g' 'const uintmax_t':'const unsigned long'
| | |-TypedefDecl 0xc40568 <line:444:7, col:69> col:69 referenced __n '__big_add<__x::__hi, __x::__lo, __y::__hi, __y::__lo>'
| | | `-TemplateSpecializationType 0xc403f0 '__big_add<__x::__hi, __x::__lo, __y::__hi, __y::__lo>' dependent __big_add
| | |   |-TemplateArgument expr
| | |   | `-ImplicitCastExpr 0xc402c8 <col:25, col:30> 'uintmax_t':'unsigned long' <Dependent>
| | |   |   `-DependentScopeDeclRefExpr 0xc400b8 <col:25, col:30> '<dependent type>' lvalue
| | |   |-TemplateArgument expr
| | |   | `-ImplicitCastExpr 0xc402e0 <col:36, col:41> 'uintmax_t':'unsigned long' <Dependent>
| | |   |   `-DependentScopeDeclRefExpr 0xc40140 <col:36, col:41> '<dependent type>' lvalue
| | |   |-TemplateArgument expr
| | |   | `-ImplicitCastExpr 0xc402f8 <col:47, col:52> 'uintmax_t':'unsigned long' <Dependent>
| | |   |   `-DependentScopeDeclRefExpr 0xc40208 <col:47, col:52> '<dependent type>' lvalue
| | |   `-TemplateArgument expr
| | |     `-ImplicitCastExpr 0xc40310 <col:58, col:63> 'uintmax_t':'unsigned long' <Dependent>
| | |       `-DependentScopeDeclRefExpr 0xc40290 <col:58, col:63> '<dependent type>' lvalue
| | |-StaticAssertDecl 0xc41618 <line:445:7, col:69> col:7
| | | |-BinaryOperator 0xc415c8 <col:21, col:39> '<dependent type>' '>='
| | | | |-DependentScopeDeclRefExpr 0xc40630 <col:21, col:26> '<dependent type>' lvalue
| | | | `-DependentScopeDeclRefExpr 0xc41590 <col:34, col:39> '<dependent type>' lvalue
| | | `-StringLiteral 0xc415e8 <col:45> 'const char [23]' lvalue "Internal library error"
| | |-TypedefDecl 0xc41990 <line:446:7, col:52> col:52 referenced __ng '__big_div<__n::__hi, __n::__lo, __g>'
| | | `-TemplateSpecializationType 0xc41860 '__big_div<__n::__hi, __n::__lo, __g>' dependent __big_div
| | |   |-TemplateArgument expr
| | |   | `-ImplicitCastExpr 0xc41788 <col:25, col:30> 'uintmax_t':'unsigned long' <Dependent>
| | |   |   `-DependentScopeDeclRefExpr 0xc416a8 <col:25, col:30> '<dependent type>' lvalue
| | |   |-TemplateArgument expr
| | |   | `-ImplicitCastExpr 0xc417a0 <col:36, col:41> 'uintmax_t':'unsigned long' <Dependent>
| | |   |   `-DependentScopeDeclRefExpr 0xc41730 <col:36, col:41> '<dependent type>' lvalue
| | |   `-TemplateArgument expr
| | |     `-ImplicitCastExpr 0xc417b8 <col:47> 'uintmax_t':'unsigned long' <LValueToRValue>
| | |       `-DeclRefExpr 0xc41768 <col:47> 'const uintmax_t':'const unsigned long' lvalue Var 0xc3f2f0 '__g' 'const uintmax_t':'const unsigned long'
| | |-VarDecl 0xc419f8 <line:447:7, col:73> col:34 referenced __g2 'const uintmax_t':'const unsigned long' static constexpr cinit
| | | `-DependentScopeDeclRefExpr 0xc41ce0 <col:41, col:73> '<dependent type>' lvalue
| | |-TypedefDecl 0xc42030 <line:448:7, col:53> col:53 referenced __n_final '__big_div<__n::__hi, __n::__lo, __g2>'
| | | `-TemplateSpecializationType 0xc41f00 '__big_div<__n::__hi, __n::__lo, __g2>' dependent __big_div
| | |   |-TemplateArgument expr
| | |   | `-ImplicitCastExpr 0xc41e48 <col:25, col:30> 'uintmax_t':'unsigned long' <Dependent>
| | |   |   `-DependentScopeDeclRefExpr 0xc41d68 <col:25, col:30> '<dependent type>' lvalue
| | |   |-TemplateArgument expr
| | |   | `-ImplicitCastExpr 0xc41e60 <col:36, col:41> 'uintmax_t':'unsigned long' <Dependent>
| | |   |   `-DependentScopeDeclRefExpr 0xc41df0 <col:36, col:41> '<dependent type>' lvalue
| | |   `-TemplateArgument expr
| | |     `-ImplicitCastExpr 0xc41e78 <col:47> 'uintmax_t':'unsigned long' <LValueToRValue>
| | |       `-DeclRefExpr 0xc41e28 <col:47> 'const uintmax_t':'const unsigned long' lvalue Var 0xc419f8 '__g2' 'const uintmax_t':'const unsigned long'
| | |-StaticAssertDecl 0xc421a8 <line:449:7, col:68> col:7
| | | |-BinaryOperator 0xc42158 <col:21, col:41> '<dependent type>' '=='
| | | | |-DependentScopeDeclRefExpr 0xc42100 <col:21, col:32> '<dependent type>' lvalue
| | | | `-IntegerLiteral 0xc42138 <col:41> 'int' 0
| | | `-StringLiteral 0xc42178 <col:44> 'const char [23]' lvalue "Internal library error"
| | |-StaticAssertDecl 0xc42418 <line:450:7, line:451:71> line:450:7
| | | |-BinaryOperator 0xc42348 <col:21, <built-in>:79:24> '<dependent type>' '&&'
| | | | |-BinaryOperator 0xc42278 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:450:21, col:45> '<dependent type>' '=='
| | | | | |-DependentScopeDeclRefExpr 0xc42220 <col:21, col:32> '<dependent type>' lvalue
| | | | | `-IntegerLiteral 0xc42258 <col:45> 'int' 0
| | | | `-BinaryOperator 0xc42328 <line:451:9, <built-in>:79:24> '<dependent type>' '<='
| | | |   |-DependentScopeDeclRefExpr 0xc422d0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:451:9, col:20> '<dependent type>' lvalue
| | | |   `-IntegerLiteral 0xc42308 <<built-in>:79:24> 'long' 9223372036854775807
| | | `-StringLiteral 0xc423e8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:451:49> 'const char [21]' lvalue "overflow in addition"
| | |-TypedefDecl 0xc426b8 <line:452:7, col:48> col:48 referenced __d_final '__big_mul<_R1::den / __g2, __d2>'
| | | `-TemplateSpecializationType 0xc425d0 '__big_mul<_R1::den / __g2, __d2>' dependent __big_mul
| | |   |-TemplateArgument expr
| | |   | `-ImplicitCastExpr 0xc42540 <col:25, col:36> 'uintmax_t':'unsigned long' <Dependent>
| | |   |   `-BinaryOperator 0xc42500 <col:25, col:36> '<dependent type>' '/'
| | |   |     |-DependentScopeDeclRefExpr 0xc424a8 <col:25, col:30> '<dependent type>' lvalue
| | |   |     `-DeclRefExpr 0xc424e0 <col:36> 'const uintmax_t':'const unsigned long' lvalue Var 0xc419f8 '__g2' 'const uintmax_t':'const unsigned long'
| | |   `-TemplateArgument expr
| | |     `-ImplicitCastExpr 0xc42558 <col:42> 'uintmax_t':'unsigned long' <LValueToRValue>
| | |       `-DeclRefExpr 0xc42520 <col:42> 'const uintmax_t':'const unsigned long' lvalue Var 0xc3f658 '__d2' 'const uintmax_t':'const unsigned long'
| | |-StaticAssertDecl 0xc428f8 <line:453:7, line:454:66> line:453:7
| | | |-BinaryOperator 0xc428a8 <col:21, <built-in>:79:24> '<dependent type>' '&&'
| | | | |-BinaryOperator 0xc427d8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:453:21, col:40> '<dependent type>' '=='
| | | | | |-DependentScopeDeclRefExpr 0xc42780 <col:21, col:32> '<dependent type>' lvalue
| | | | | `-IntegerLiteral 0xc427b8 <col:40> 'int' 0
| | | | `-BinaryOperator 0xc42888 <line:454:9, <built-in>:79:24> '<dependent type>' '<='
| | | |   |-DependentScopeDeclRefExpr 0xc42830 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:454:9, col:20> '<dependent type>' lvalue
| | | |   `-IntegerLiteral 0xc42868 <<built-in>:79:24> 'long' 9223372036854775807
| | | `-StringLiteral 0xc428c8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:454:44> 'const char [21]' lvalue "overflow in addition"
| | |-AccessSpecDecl 0xc42938 <line:455:5, col:11> col:5 public
| | `-TypedefDecl 0xc42c18 <line:456:7, col:60> col:60 type 'ratio<__n_final::__quot_lo, __d_final::__lo>'
| |   `-TemplateSpecializationType 0xc42b30 'ratio<__n_final::__quot_lo, __d_final::__lo>' dependent ratio
| |     |-TemplateArgument expr
| |     | `-ImplicitCastExpr 0xc42a70 <col:21, col:32> 'intmax_t':'long' <Dependent>
| |     |   `-DependentScopeDeclRefExpr 0xc429b0 <col:21, col:32> '<dependent type>' lvalue
| |     `-TemplateArgument expr
| |       `-ImplicitCastExpr 0xc42a88 <col:43, col:54> 'intmax_t':'long' <Dependent>
| |         `-DependentScopeDeclRefExpr 0xc42a38 <col:43, col:54> '<dependent type>' lvalue
| |-ClassTemplatePartialSpecializationDecl 0xc430a0 <line:459:3, line:462:7> line:460:12 struct __ratio_add_impl definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public '__ratio_add_impl<_R2, _R1>'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument type 'type-parameter-0-1'
| | |-TemplateArgument integral 0
| | |-TemplateArgument integral 1
| | |-TemplateArgument integral 1
| | |-TemplateTypeParmDecl 0xc42c88 <line:459:12, col:21> col:21 referenced typename depth 0 index 0 _R1
| | |-TemplateTypeParmDecl 0xc42d08 <col:26, col:35> col:35 referenced typename depth 0 index 1 _R2
| | `-CXXRecordDecl 0xc43e70 <line:460:5, col:12> col:12 implicit struct __ratio_add_impl
| |-ClassTemplatePartialSpecializationDecl 0xc44330 <line:465:3, line:486:5> line:466:12 struct __ratio_add_impl definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument type 'type-parameter-0-1'
| | |-TemplateArgument integral 1
| | |-TemplateArgument integral 0
| | |-TemplateArgument integral 0
| | |-TemplateTypeParmDecl 0xc43f18 <line:465:12, col:21> col:21 referenced typename depth 0 index 0 _R1
| | |-TemplateTypeParmDecl 0xc43f98 <col:26, col:35> col:35 referenced typename depth 0 index 1 _R2
| | |-CXXRecordDecl 0xc44718 <line:466:5, col:12> col:12 implicit struct __ratio_add_impl
| | |-AccessSpecDecl 0xc447a8 <line:468:5, col:12> col:5 private
| | |-VarDecl 0xc447e0 <line:469:7, col:74> col:34 referenced __g 'const uintmax_t':'const unsigned long' static constexpr cinit
| | | `-DependentScopeDeclRefExpr 0xc44aa0 <col:40, col:74> '<dependent type>' lvalue
| | |-VarDecl 0xc44ae8 <line:470:7, col:52> col:34 referenced __d2 'const uintmax_t':'const unsigned long' static constexpr cinit
| | | `-BinaryOperator 0xc44be0 <col:41, col:52> '<dependent type>' '/'
| | |   |-DependentScopeDeclRefExpr 0xc44b88 <col:41, col:46> '<dependent type>' lvalue
| | |   `-DeclRefExpr 0xc44bc0 <col:52> 'const uintmax_t':'const unsigned long' lvalue Var 0xc447e0 '__g' 'const uintmax_t':'const unsigned long'
| | |-TypedefDecl 0xc44e28 <line:471:7, col:41> col:41 __d '__big_mul<_R1::den, __d2>'
| | | `-TemplateSpecializationType 0xc44d40 '__big_mul<_R1::den, __d2>' dependent __big_mul
| | |   |-TemplateArgument expr
| | |   | `-ImplicitCastExpr 0xc44ca8 <col:25, col:30> 'uintmax_t':'unsigned long' <Dependent>
| | |   |   `-DependentScopeDeclRefExpr 0xc44c50 <col:25, col:30> '<dependent type>' lvalue
| | |   `-TemplateArgument expr
| | |     `-ImplicitCastExpr 0xc44cc0 <col:35> 'uintmax_t':'unsigned long' <LValueToRValue>
| | |       `-DeclRefExpr 0xc44c88 <col:35> 'const uintmax_t':'const unsigned long' lvalue Var 0xc44ae8 '__d2' 'const uintmax_t':'const unsigned long'
| | |-TypedefDecl 0xc45148 <line:472:7, col:51> col:51 referenced __x '__big_mul<_R1::num, _R2::den / __g>'
| | | `-TemplateSpecializationType 0xc45060 '__big_mul<_R1::num, _R2::den / __g>' dependent __big_mul
| | |   |-TemplateArgument expr
| | |   | `-ImplicitCastExpr 0xc44fd0 <col:25, col:30> 'uintmax_t':'unsigned long' <Dependent>
| | |   |   `-DependentScopeDeclRefExpr 0xc44ed0 <col:25, col:30> '<dependent type>' lvalue
| | |   `-TemplateArgument expr
| | |     `-ImplicitCastExpr 0xc44fe8 <col:35, col:46> 'uintmax_t':'unsigned long' <Dependent>
| | |       `-BinaryOperator 0xc44fb0 <col:35, col:46> '<dependent type>' '/'
| | |         |-DependentScopeDeclRefExpr 0xc44f58 <col:35, col:40> '<dependent type>' lvalue
| | |         `-DeclRefExpr 0xc44f90 <col:46> 'const uintmax_t':'const unsigned long' lvalue Var 0xc447e0 '__g' 'const uintmax_t':'const unsigned long'
| | |-TypedefDecl 0xc45468 <line:473:7, col:52> col:52 referenced __y '__big_mul<-_R2::num, _R1::den / __g>'
| | | `-TemplateSpecializationType 0xc45380 '__big_mul<-_R2::num, _R1::den / __g>' dependent __big_mul
| | |   |-TemplateArgument expr
| | |   | `-ImplicitCastExpr 0xc452f0 <col:25, col:31> 'uintmax_t':'unsigned long' <Dependent>
| | |   |   `-UnaryOperator 0xc45210 <col:25, col:31> '<dependent type>' prefix '-' cannot overflow
| | |   |     `-DependentScopeDeclRefExpr 0xc451d8 <col:26, col:31> '<dependent type>' lvalue
| | |   `-TemplateArgument expr
| | |     `-ImplicitCastExpr 0xc45308 <col:36, col:47> 'uintmax_t':'unsigned long' <Dependent>
| | |       `-BinaryOperator 0xc452d0 <col:36, col:47> '<dependent type>' '/'
| | |         |-DependentScopeDeclRefExpr 0xc45278 <col:36, col:41> '<dependent type>' lvalue
| | |         `-DeclRefExpr 0xc452b0 <col:47> 'const uintmax_t':'const unsigned long' lvalue Var 0xc447e0 '__g' 'const uintmax_t':'const unsigned long'
| | |-TypedefDecl 0xc46108 <line:474:7, col:69> col:69 referenced __n '__big_sub<__x::__hi, __x::__lo, __y::__hi, __y::__lo>'
| | | `-TemplateSpecializationType 0xc45f90 '__big_sub<__x::__hi, __x::__lo, __y::__hi, __y::__lo>' dependent __big_sub
| | |   |-TemplateArgument expr
| | |   | `-ImplicitCastExpr 0xc45e68 <col:25, col:30> 'uintmax_t':'unsigned long' <Dependent>
| | |   |   `-DependentScopeDeclRefExpr 0xc45c60 <col:25, col:30> '<dependent type>' lvalue
| | |   |-TemplateArgument expr
| | |   | `-ImplicitCastExpr 0xc45e80 <col:36, col:41> 'uintmax_t':'unsigned long' <Dependent>
| | |   |   `-DependentScopeDeclRefExpr 0xc45ce8 <col:36, col:41> '<dependent type>' lvalue
| | |   |-TemplateArgument expr
| | |   | `-ImplicitCastExpr 0xc45e98 <col:47, col:52> 'uintmax_t':'unsigned long' <Dependent>
| | |   |   `-DependentScopeDeclRefExpr 0xc45da8 <col:47, col:52> '<dependent type>' lvalue
| | |   `-TemplateArgument expr
| | |     `-ImplicitCastExpr 0xc45eb0 <col:58, col:63> 'uintmax_t':'unsigned long' <Dependent>
| | |       `-DependentScopeDeclRefExpr 0xc45e30 <col:58, col:63> '<dependent type>' lvalue
| | |-TypedefDecl 0xc464d0 <line:475:7, col:52> col:52 referenced __ng '__big_div<__n::__hi, __n::__lo, __g>'
| | | `-TemplateSpecializationType 0xc463a0 '__big_div<__n::__hi, __n::__lo, __g>' dependent __big_div
| | |   |-TemplateArgument expr
| | |   | `-ImplicitCastExpr 0xc462c8 <col:25, col:30> 'uintmax_t':'unsigned long' <Dependent>
| | |   |   `-DependentScopeDeclRefExpr 0xc461e8 <col:25, col:30> '<dependent type>' lvalue
| | |   |-TemplateArgument expr
| | |   | `-ImplicitCastExpr 0xc462e0 <col:36, col:41> 'uintmax_t':'unsigned long' <Dependent>
| | |   |   `-DependentScopeDeclRefExpr 0xc46270 <col:36, col:41> '<dependent type>' lvalue
| | |   `-TemplateArgument expr
| | |     `-ImplicitCastExpr 0xc462f8 <col:47> 'uintmax_t':'unsigned long' <LValueToRValue>
| | |       `-DeclRefExpr 0xc462a8 <col:47> 'const uintmax_t':'const unsigned long' lvalue Var 0xc447e0 '__g' 'const uintmax_t':'const unsigned long'
| | |-VarDecl 0xc46538 <line:476:7, col:73> col:34 referenced __g2 'const uintmax_t':'const unsigned long' static constexpr cinit
| | | `-DependentScopeDeclRefExpr 0xc46820 <col:41, col:73> '<dependent type>' lvalue
| | |-TypedefDecl 0xc46b70 <line:477:7, col:53> col:53 referenced __n_final '__big_div<__n::__hi, __n::__lo, __g2>'
| | | `-TemplateSpecializationType 0xc46a40 '__big_div<__n::__hi, __n::__lo, __g2>' dependent __big_div
| | |   |-TemplateArgument expr
| | |   | `-ImplicitCastExpr 0xc46988 <col:25, col:30> 'uintmax_t':'unsigned long' <Dependent>
| | |   |   `-DependentScopeDeclRefExpr 0xc468a8 <col:25, col:30> '<dependent type>' lvalue
| | |   |-TemplateArgument expr
| | |   | `-ImplicitCastExpr 0xc469a0 <col:36, col:41> 'uintmax_t':'unsigned long' <Dependent>
| | |   |   `-DependentScopeDeclRefExpr 0xc46930 <col:36, col:41> '<dependent type>' lvalue
| | |   `-TemplateArgument expr
| | |     `-ImplicitCastExpr 0xc469b8 <col:47> 'uintmax_t':'unsigned long' <LValueToRValue>
| | |       `-DeclRefExpr 0xc46968 <col:47> 'const uintmax_t':'const unsigned long' lvalue Var 0xc46538 '__g2' 'const uintmax_t':'const unsigned long'
| | |-StaticAssertDecl 0xc46ce8 <line:478:7, col:68> col:7
| | | |-BinaryOperator 0xc46c98 <col:21, col:41> '<dependent type>' '=='
| | | | |-DependentScopeDeclRefExpr 0xc46c40 <col:21, col:32> '<dependent type>' lvalue
| | | | `-IntegerLiteral 0xc46c78 <col:41> 'int' 0
| | | `-StringLiteral 0xc46cb8 <col:44> 'const char [23]' lvalue "Internal library error"
| | |-StaticAssertDecl 0xc46ed8 <line:479:7, line:480:71> line:479:7
| | | |-BinaryOperator 0xc46e88 <col:21, <built-in>:79:24> '<dependent type>' '&&'
| | | | |-BinaryOperator 0xc46db8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:479:21, col:45> '<dependent type>' '=='
| | | | | |-DependentScopeDeclRefExpr 0xc46d60 <col:21, col:32> '<dependent type>' lvalue
| | | | | `-IntegerLiteral 0xc46d98 <col:45> 'int' 0
| | | | `-BinaryOperator 0xc46e68 <line:480:9, <built-in>:79:24> '<dependent type>' '<='
| | | |   |-DependentScopeDeclRefExpr 0xc46e10 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:480:9, col:20> '<dependent type>' lvalue
| | | |   `-IntegerLiteral 0xc46e48 <<built-in>:79:24> 'long' 9223372036854775807
| | | `-StringLiteral 0xc46ea8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:480:49> 'const char [21]' lvalue "overflow in addition"
| | |-TypedefDecl 0xc47178 <line:481:7, col:48> col:48 referenced __d_final '__big_mul<_R1::den / __g2, __d2>'
| | | `-TemplateSpecializationType 0xc47090 '__big_mul<_R1::den / __g2, __d2>' dependent __big_mul
| | |   |-TemplateArgument expr
| | |   | `-ImplicitCastExpr 0xc47000 <col:25, col:36> 'uintmax_t':'unsigned long' <Dependent>
| | |   |   `-BinaryOperator 0xc46fc0 <col:25, col:36> '<dependent type>' '/'
| | |   |     |-DependentScopeDeclRefExpr 0xc46f68 <col:25, col:30> '<dependent type>' lvalue
| | |   |     `-DeclRefExpr 0xc46fa0 <col:36> 'const uintmax_t':'const unsigned long' lvalue Var 0xc46538 '__g2' 'const uintmax_t':'const unsigned long'
| | |   `-TemplateArgument expr
| | |     `-ImplicitCastExpr 0xc47018 <col:42> 'uintmax_t':'unsigned long' <LValueToRValue>
| | |       `-DeclRefExpr 0xc46fe0 <col:42> 'const uintmax_t':'const unsigned long' lvalue Var 0xc44ae8 '__d2' 'const uintmax_t':'const unsigned long'
| | |-StaticAssertDecl 0xc473b8 <line:482:7, line:483:66> line:482:7
| | | |-BinaryOperator 0xc47368 <col:21, <built-in>:79:24> '<dependent type>' '&&'
| | | | |-BinaryOperator 0xc47298 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:482:21, col:40> '<dependent type>' '=='
| | | | | |-DependentScopeDeclRefExpr 0xc47240 <col:21, col:32> '<dependent type>' lvalue
| | | | | `-IntegerLiteral 0xc47278 <col:40> 'int' 0
| | | | `-BinaryOperator 0xc47348 <line:483:9, <built-in>:79:24> '<dependent type>' '<='
| | | |   |-DependentScopeDeclRefExpr 0xc472f0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:483:9, col:20> '<dependent type>' lvalue
| | | |   `-IntegerLiteral 0xc47328 <<built-in>:79:24> 'long' 9223372036854775807
| | | `-StringLiteral 0xc47388 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:483:44> 'const char [21]' lvalue "overflow in addition"
| | |-AccessSpecDecl 0xc473f8 <line:484:5, col:11> col:5 public
| | `-TypedefDecl 0xc476d8 <line:485:7, col:60> col:60 type 'ratio<__n_final::__quot_lo, __d_final::__lo>'
| |   `-TemplateSpecializationType 0xc475f0 'ratio<__n_final::__quot_lo, __d_final::__lo>' dependent ratio
| |     |-TemplateArgument expr
| |     | `-ImplicitCastExpr 0xc47530 <col:21, col:32> 'intmax_t':'long' <Dependent>
| |     |   `-DependentScopeDeclRefExpr 0xc47470 <col:21, col:32> '<dependent type>' lvalue
| |     `-TemplateArgument expr
| |       `-ImplicitCastExpr 0xc47548 <col:43, col:54> 'intmax_t':'long' <Dependent>
| |         `-DependentScopeDeclRefExpr 0xc474f8 <col:43, col:54> '<dependent type>' lvalue
| |-ClassTemplateDecl 0xc47900 <line:488:3, line:494:5> line:489:12 __ratio_add
| | |-TemplateTypeParmDecl 0xc47748 <line:488:12, col:21> col:21 referenced typename depth 0 index 0 _R1
| | |-TemplateTypeParmDecl 0xc477c8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _R2
| | `-CXXRecordDecl 0xc47870 <line:489:5, line:494:5> line:489:12 struct __ratio_add definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-CXXRecordDecl 0xc47b90 <col:5, col:12> col:12 implicit struct __ratio_add
| |   |-TypedefDecl 0xc48650 <line:491:7, col:57> col:57 referenced type 'typename __ratio_add_impl<_R1, _R2>::type'
| |   | `-DependentNameType 0xc485e0 'typename __ratio_add_impl<_R1, _R2>::type' dependent
| |   |-VarDecl 0xc486b8 <line:492:7, col:45> col:33 num 'const intmax_t':'const long' static constexpr cinit
| |   | `-DependentScopeDeclRefExpr 0xc48790 <col:39, col:45> '<dependent type>' lvalue
| |   `-VarDecl 0xc487d8 <line:493:7, col:45> col:33 den 'const intmax_t':'const long' static constexpr cinit
| |     `-DependentScopeDeclRefExpr 0xc48878 <col:39, col:45> '<dependent type>' lvalue
| |-VarDecl 0xc48bc8 parent 0xc47870 prev 0xc486b8 <line:496:3, line:497:47> col:47 num 'const intmax_t':'const long' constexpr
| |-VarDecl 0xc48f78 parent 0xc47870 prev 0xc487d8 <line:499:3, line:500:47> col:47 den 'const intmax_t':'const long' constexpr
| |-TypeAliasTemplateDecl 0xc49350 <line:503:3, line:504:55> col:5 ratio_add
| | |-TemplateTypeParmDecl 0xc49028 <line:503:12, col:21> col:21 referenced typename depth 0 index 0 _R1
| | |-TemplateTypeParmDecl 0xc490a8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _R2
| | `-TypeAliasDecl 0xc492f0 <line:504:5, col:55> col:11 ratio_add 'typename __ratio_add<_R1, _R2>::type'
| |   `-DependentNameType 0xc49280 'typename __ratio_add<_R1, _R2>::type' dependent
| |-ClassTemplateDecl 0xc49560 <line:506:3, line:515:5> line:507:12 __ratio_subtract
| | |-TemplateTypeParmDecl 0xc493a8 <line:506:12, col:21> col:21 referenced typename depth 0 index 0 _R1
| | |-TemplateTypeParmDecl 0xc49428 <col:26, col:35> col:35 typename depth 0 index 1 _R2
| | `-CXXRecordDecl 0xc494d0 <line:507:5, line:515:5> line:507:12 struct __ratio_subtract definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-CXXRecordDecl 0xc497f0 <col:5, col:12> col:12 implicit struct __ratio_subtract
| |   |-TypedefDecl 0xc4a9f0 <line:509:7, line:511:43> col:43 referenced type 'typename __ratio_add<_R1, ratio<-_R2::num, _R2::den> >::type'
| |   | `-DependentNameType 0xc4a980 'typename __ratio_add<_R1, ratio<-_R2::num, _R2::den> >::type' dependent
| |   |-VarDecl 0xc4aa58 <line:513:7, col:45> col:33 num 'const intmax_t':'const long' static constexpr cinit
| |   | `-DependentScopeDeclRefExpr 0xc4ab30 <col:39, col:45> '<dependent type>' lvalue
| |   `-VarDecl 0xc4ab78 <line:514:7, col:45> col:33 den 'const intmax_t':'const long' static constexpr cinit
| |     `-DependentScopeDeclRefExpr 0xc4ac18 <col:39, col:45> '<dependent type>' lvalue
| |-VarDecl 0xc4af68 parent 0xc494d0 prev 0xc4aa58 <line:517:3, line:518:52> col:52 num 'const intmax_t':'const long' constexpr
| |-VarDecl 0xc4b318 parent 0xc494d0 prev 0xc4ab78 <line:520:3, line:521:52> col:52 den 'const intmax_t':'const long' constexpr
| |-TypeAliasTemplateDecl 0xc4b6f0 <line:524:3, line:525:65> col:5 ratio_subtract
| | |-TemplateTypeParmDecl 0xc4b3c8 <line:524:12, col:21> col:21 referenced typename depth 0 index 0 _R1
| | |-TemplateTypeParmDecl 0xc4b448 <col:26, col:35> col:35 referenced typename depth 0 index 1 _R2
| | `-TypeAliasDecl 0xc4b690 <line:525:5, col:65> col:11 ratio_subtract 'typename __ratio_subtract<_R1, _R2>::type'
| |   `-DependentNameType 0xc4b620 'typename __ratio_subtract<_R1, _R2>::type' dependent
| |-TypedefDecl 0xc4b9e8 <line:528:3, col:47> col:47 atto 'ratio<1, 1000000000000000000L>':'std::ratio<1, 1000000000000000000>'
| | `-TemplateSpecializationType 0xc4b900 'ratio<1, 1000000000000000000L>' sugar ratio
| |   |-TemplateArgument expr
| |   | `-ConstantExpr 0xc4b7a0 <col:17> 'intmax_t':'long' Int: 1
| |   |   `-ImplicitCastExpr 0xc4b788 <col:17> 'intmax_t':'long' <IntegralCast>
| |   |     `-IntegerLiteral 0xc4b748 <col:17> 'int' 1
| |   |-TemplateArgument expr
| |   | `-ConstantExpr 0xc4b7c0 <col:26> 'long' Int: 1000000000000000000
| |   |   `-IntegerLiteral 0xc4b768 <col:26> 'long' 1000000000000000000
| |   `-RecordType 0xc4b8e0 'std::ratio<1, 1000000000000000000>'
| |     `-ClassTemplateSpecialization 0xc4b7e0 'ratio'
| |-TypedefDecl 0xc4bcd8 <line:529:3, col:47> col:47 femto 'ratio<1, 1000000000000000L>':'std::ratio<1, 1000000000000000>'
| | `-TemplateSpecializationType 0xc4bbf0 'ratio<1, 1000000000000000L>' sugar ratio
| |   |-TemplateArgument expr
| |   | `-ConstantExpr 0xc4ba98 <col:17> 'intmax_t':'long' Int: 1
| |   |   `-ImplicitCastExpr 0xc4ba80 <col:17> 'intmax_t':'long' <IntegralCast>
| |   |     `-IntegerLiteral 0xc4ba40 <col:17> 'int' 1
| |   |-TemplateArgument expr
| |   | `-ConstantExpr 0xc4bab8 <col:29> 'long' Int: 1000000000000000
| |   |   `-IntegerLiteral 0xc4ba60 <col:29> 'long' 1000000000000000
| |   `-RecordType 0xc4bbd0 'std::ratio<1, 1000000000000000>'
| |     `-ClassTemplateSpecialization 0xc4bad8 'ratio'
| |-TypedefDecl 0xc4bfc8 <line:530:3, col:47> col:47 pico 'ratio<1, 1000000000000L>':'std::ratio<1, 1000000000000>'
| | `-TemplateSpecializationType 0xc4bee0 'ratio<1, 1000000000000L>' sugar ratio
| |   |-TemplateArgument expr
| |   | `-ConstantExpr 0xc4bd88 <col:17> 'intmax_t':'long' Int: 1
| |   |   `-ImplicitCastExpr 0xc4bd70 <col:17> 'intmax_t':'long' <IntegralCast>
| |   |     `-IntegerLiteral 0xc4bd30 <col:17> 'int' 1
| |   |-TemplateArgument expr
| |   | `-ConstantExpr 0xc4bda8 <col:32> 'long' Int: 1000000000000
| |   |   `-IntegerLiteral 0xc4bd50 <col:32> 'long' 1000000000000
| |   `-RecordType 0xc4bec0 'std::ratio<1, 1000000000000>'
| |     `-ClassTemplateSpecialization 0xc4bdc8 'ratio'
| |-TypedefDecl 0xc4c2d8 <line:531:3, col:47> col:47 referenced nano 'ratio<1, 1000000000>':'std::ratio<1, 1000000000>'
| | `-TemplateSpecializationType 0xc4c1f0 'ratio<1, 1000000000>' sugar ratio
| |   |-TemplateArgument expr
| |   | `-ConstantExpr 0xc4c078 <col:17> 'intmax_t':'long' Int: 1
| |   |   `-ImplicitCastExpr 0xc4c060 <col:17> 'intmax_t':'long' <IntegralCast>
| |   |     `-IntegerLiteral 0xc4c020 <col:17> 'int' 1
| |   |-TemplateArgument expr
| |   | `-ConstantExpr 0xc4c0b0 <col:35> 'intmax_t':'long' Int: 1000000000
| |   |   `-ImplicitCastExpr 0xc4c098 <col:35> 'intmax_t':'long' <IntegralCast>
| |   |     `-IntegerLiteral 0xc4c040 <col:35> 'int' 1000000000
| |   `-RecordType 0xc4c1d0 'std::ratio<1, 1000000000>'
| |     `-ClassTemplateSpecialization 0xc4c0d0 'ratio'
| |-TypedefDecl 0xc4c5e8 <line:532:3, col:47> col:47 referenced micro 'ratio<1, 1000000>':'std::ratio<1, 1000000>'
| | `-TemplateSpecializationType 0xc4c500 'ratio<1, 1000000>' sugar ratio
| |   |-TemplateArgument expr
| |   | `-ConstantExpr 0xc4c388 <col:17> 'intmax_t':'long' Int: 1
| |   |   `-ImplicitCastExpr 0xc4c370 <col:17> 'intmax_t':'long' <IntegralCast>
| |   |     `-IntegerLiteral 0xc4c330 <col:17> 'int' 1
| |   |-TemplateArgument expr
| |   | `-ConstantExpr 0xc4c3c0 <col:38> 'intmax_t':'long' Int: 1000000
| |   |   `-ImplicitCastExpr 0xc4c3a8 <col:38> 'intmax_t':'long' <IntegralCast>
| |   |     `-IntegerLiteral 0xc4c350 <col:38> 'int' 1000000
| |   `-RecordType 0xc4c4e0 'std::ratio<1, 1000000>'
| |     `-ClassTemplateSpecialization 0xc4c3e0 'ratio'
| |-TypedefDecl 0xc4c8f8 <line:533:3, col:47> col:47 referenced milli 'ratio<1, 1000>':'std::ratio<1, 1000>'
| | `-TemplateSpecializationType 0xc4c810 'ratio<1, 1000>' sugar ratio
| |   |-TemplateArgument expr
| |   | `-ConstantExpr 0xc4c698 <col:17> 'intmax_t':'long' Int: 1
| |   |   `-ImplicitCastExpr 0xc4c680 <col:17> 'intmax_t':'long' <IntegralCast>
| |   |     `-IntegerLiteral 0xc4c640 <col:17> 'int' 1
| |   |-TemplateArgument expr
| |   | `-ConstantExpr 0xc4c6d0 <col:41> 'intmax_t':'long' Int: 1000
| |   |   `-ImplicitCastExpr 0xc4c6b8 <col:41> 'intmax_t':'long' <IntegralCast>
| |   |     `-IntegerLiteral 0xc4c660 <col:41> 'int' 1000
| |   `-RecordType 0xc4c7f0 'std::ratio<1, 1000>'
| |     `-ClassTemplateSpecialization 0xc4c6f0 'ratio'
| |-TypedefDecl 0xc4cc08 <line:534:3, col:47> col:47 centi 'ratio<1, 100>':'std::ratio<1, 100>'
| | `-TemplateSpecializationType 0xc4cb20 'ratio<1, 100>' sugar ratio
| |   |-TemplateArgument expr
| |   | `-ConstantExpr 0xc4c9a8 <col:17> 'intmax_t':'long' Int: 1
| |   |   `-ImplicitCastExpr 0xc4c990 <col:17> 'intmax_t':'long' <IntegralCast>
| |   |     `-IntegerLiteral 0xc4c950 <col:17> 'int' 1
| |   |-TemplateArgument expr
| |   | `-ConstantExpr 0xc4c9e0 <col:42> 'intmax_t':'long' Int: 100
| |   |   `-ImplicitCastExpr 0xc4c9c8 <col:42> 'intmax_t':'long' <IntegralCast>
| |   |     `-IntegerLiteral 0xc4c970 <col:42> 'int' 100
| |   `-RecordType 0xc4cb00 'std::ratio<1, 100>'
| |     `-ClassTemplateSpecialization 0xc4ca00 'ratio'
| |-TypedefDecl 0xc4cf18 <line:535:3, col:47> col:47 deci 'ratio<1, 10>':'std::ratio<1, 10>'
| | `-TemplateSpecializationType 0xc4ce30 'ratio<1, 10>' sugar ratio
| |   |-TemplateArgument expr
| |   | `-ConstantExpr 0xc4ccb8 <col:17> 'intmax_t':'long' Int: 1
| |   |   `-ImplicitCastExpr 0xc4cca0 <col:17> 'intmax_t':'long' <IntegralCast>
| |   |     `-IntegerLiteral 0xc4cc60 <col:17> 'int' 1
| |   |-TemplateArgument expr
| |   | `-ConstantExpr 0xc4ccf0 <col:43> 'intmax_t':'long' Int: 10
| |   |   `-ImplicitCastExpr 0xc4ccd8 <col:43> 'intmax_t':'long' <IntegralCast>
| |   |     `-IntegerLiteral 0xc4cc80 <col:43> 'int' 10
| |   `-RecordType 0xc4ce10 'std::ratio<1, 10>'
| |     `-ClassTemplateSpecialization 0xc4cd10 'ratio'
| |-TypedefDecl 0xc4d228 <line:536:3, col:47> col:47 deca 'ratio<10, 1>':'std::ratio<10, 1>'
| | `-TemplateSpecializationType 0xc4d140 'ratio<10, 1>' sugar ratio
| |   |-TemplateArgument expr
| |   | `-ConstantExpr 0xc4cfc8 <col:40> 'intmax_t':'long' Int: 10
| |   |   `-ImplicitCastExpr 0xc4cfb0 <col:40> 'intmax_t':'long' <IntegralCast>
| |   |     `-IntegerLiteral 0xc4cf70 <col:40> 'int' 10
| |   |-TemplateArgument expr
| |   | `-ConstantExpr 0xc4d000 <col:44> 'intmax_t':'long' Int: 1
| |   |   `-ImplicitCastExpr 0xc4cfe8 <col:44> 'intmax_t':'long' <IntegralCast>
| |   |     `-IntegerLiteral 0xc4cf90 <col:44> 'int' 1
| |   `-RecordType 0xc4d120 'std::ratio<10, 1>'
| |     `-ClassTemplateSpecialization 0xc4d020 'ratio'
| |-TypedefDecl 0xc4d538 <line:537:3, col:47> col:47 hecto 'ratio<100, 1>':'std::ratio<100, 1>'
| | `-TemplateSpecializationType 0xc4d450 'ratio<100, 1>' sugar ratio
| |   |-TemplateArgument expr
| |   | `-ConstantExpr 0xc4d2d8 <col:39> 'intmax_t':'long' Int: 100
| |   |   `-ImplicitCastExpr 0xc4d2c0 <col:39> 'intmax_t':'long' <IntegralCast>
| |   |     `-IntegerLiteral 0xc4d280 <col:39> 'int' 100
| |   |-TemplateArgument expr
| |   | `-ConstantExpr 0xc4d310 <col:44> 'intmax_t':'long' Int: 1
| |   |   `-ImplicitCastExpr 0xc4d2f8 <col:44> 'intmax_t':'long' <IntegralCast>
| |   |     `-IntegerLiteral 0xc4d2a0 <col:44> 'int' 1
| |   `-RecordType 0xc4d430 'std::ratio<100, 1>'
| |     `-ClassTemplateSpecialization 0xc4d330 'ratio'
| |-TypedefDecl 0xc4d848 <line:538:3, col:47> col:47 kilo 'ratio<1000, 1>':'std::ratio<1000, 1>'
| | `-TemplateSpecializationType 0xc4d760 'ratio<1000, 1>' sugar ratio
| |   |-TemplateArgument expr
| |   | `-ConstantExpr 0xc4d5e8 <col:38> 'intmax_t':'long' Int: 1000
| |   |   `-ImplicitCastExpr 0xc4d5d0 <col:38> 'intmax_t':'long' <IntegralCast>
| |   |     `-IntegerLiteral 0xc4d590 <col:38> 'int' 1000
| |   |-TemplateArgument expr
| |   | `-ConstantExpr 0xc4d620 <col:44> 'intmax_t':'long' Int: 1
| |   |   `-ImplicitCastExpr 0xc4d608 <col:44> 'intmax_t':'long' <IntegralCast>
| |   |     `-IntegerLiteral 0xc4d5b0 <col:44> 'int' 1
| |   `-RecordType 0xc4d740 'std::ratio<1000, 1>'
| |     `-ClassTemplateSpecialization 0xc4d640 'ratio'
| |-TypedefDecl 0xc4db58 <line:539:3, col:47> col:47 mega 'ratio<1000000, 1>':'std::ratio<1000000, 1>'
| | `-TemplateSpecializationType 0xc4da70 'ratio<1000000, 1>' sugar ratio
| |   |-TemplateArgument expr
| |   | `-ConstantExpr 0xc4d8f8 <col:35> 'intmax_t':'long' Int: 1000000
| |   |   `-ImplicitCastExpr 0xc4d8e0 <col:35> 'intmax_t':'long' <IntegralCast>
| |   |     `-IntegerLiteral 0xc4d8a0 <col:35> 'int' 1000000
| |   |-TemplateArgument expr
| |   | `-ConstantExpr 0xc4d930 <col:44> 'intmax_t':'long' Int: 1
| |   |   `-ImplicitCastExpr 0xc4d918 <col:44> 'intmax_t':'long' <IntegralCast>
| |   |     `-IntegerLiteral 0xc4d8c0 <col:44> 'int' 1
| |   `-RecordType 0xc4da50 'std::ratio<1000000, 1>'
| |     `-ClassTemplateSpecialization 0xc4d950 'ratio'
| |-TypedefDecl 0xc4de68 <line:540:3, col:47> col:47 giga 'ratio<1000000000, 1>':'std::ratio<1000000000, 1>'
| | `-TemplateSpecializationType 0xc4dd80 'ratio<1000000000, 1>' sugar ratio
| |   |-TemplateArgument expr
| |   | `-ConstantExpr 0xc4dc08 <col:32> 'intmax_t':'long' Int: 1000000000
| |   |   `-ImplicitCastExpr 0xc4dbf0 <col:32> 'intmax_t':'long' <IntegralCast>
| |   |     `-IntegerLiteral 0xc4dbb0 <col:32> 'int' 1000000000
| |   |-TemplateArgument expr
| |   | `-ConstantExpr 0xc4dc40 <col:44> 'intmax_t':'long' Int: 1
| |   |   `-ImplicitCastExpr 0xc4dc28 <col:44> 'intmax_t':'long' <IntegralCast>
| |   |     `-IntegerLiteral 0xc4dbd0 <col:44> 'int' 1
| |   `-RecordType 0xc4dd60 'std::ratio<1000000000, 1>'
| |     `-ClassTemplateSpecialization 0xc4dc60 'ratio'
| |-TypedefDecl 0xc4e158 <line:541:3, col:47> col:47 tera 'ratio<1000000000000L, 1>':'std::ratio<1000000000000, 1>'
| | `-TemplateSpecializationType 0xc4e070 'ratio<1000000000000L, 1>' sugar ratio
| |   |-TemplateArgument expr
| |   | `-ConstantExpr 0xc4df00 <col:29> 'long' Int: 1000000000000
| |   |   `-IntegerLiteral 0xc4dec0 <col:29> 'long' 1000000000000
| |   |-TemplateArgument expr
| |   | `-ConstantExpr 0xc4df38 <col:44> 'intmax_t':'long' Int: 1
| |   |   `-ImplicitCastExpr 0xc4df20 <col:44> 'intmax_t':'long' <IntegralCast>
| |   |     `-IntegerLiteral 0xc4dee0 <col:44> 'int' 1
| |   `-RecordType 0xc4e050 'std::ratio<1000000000000, 1>'
| |     `-ClassTemplateSpecialization 0xc4df58 'ratio'
| |-TypedefDecl 0xc4e448 <line:542:3, col:47> col:47 peta 'ratio<1000000000000000L, 1>':'std::ratio<1000000000000000, 1>'
| | `-TemplateSpecializationType 0xc4e360 'ratio<1000000000000000L, 1>' sugar ratio
| |   |-TemplateArgument expr
| |   | `-ConstantExpr 0xc4e1f0 <col:26> 'long' Int: 1000000000000000
| |   |   `-IntegerLiteral 0xc4e1b0 <col:26> 'long' 1000000000000000
| |   |-TemplateArgument expr
| |   | `-ConstantExpr 0xc4e228 <col:44> 'intmax_t':'long' Int: 1
| |   |   `-ImplicitCastExpr 0xc4e210 <col:44> 'intmax_t':'long' <IntegralCast>
| |   |     `-IntegerLiteral 0xc4e1d0 <col:44> 'int' 1
| |   `-RecordType 0xc4e340 'std::ratio<1000000000000000, 1>'
| |     `-ClassTemplateSpecialization 0xc4e248 'ratio'
| |-TypedefDecl 0xc4e738 <line:543:3, col:47> col:47 exa 'ratio<1000000000000000000L, 1>':'std::ratio<1000000000000000000, 1>'
| | `-TemplateSpecializationType 0xc4e650 'ratio<1000000000000000000L, 1>' sugar ratio
| |   |-TemplateArgument expr
| |   | `-ConstantExpr 0xc4e4e0 <col:23> 'long' Int: 1000000000000000000
| |   |   `-IntegerLiteral 0xc4e4a0 <col:23> 'long' 1000000000000000000
| |   |-TemplateArgument expr
| |   | `-ConstantExpr 0xc4e518 <col:44> 'intmax_t':'long' Int: 1
| |   |   `-ImplicitCastExpr 0xc4e500 <col:44> 'intmax_t':'long' <IntegralCast>
| |   |     `-IntegerLiteral 0xc4e4c0 <col:44> 'int' 1
| |   `-RecordType 0xc4e630 'std::ratio<1000000000000000000, 1>'
| |     `-ClassTemplateSpecialization 0xc4e538 'ratio'
| |-VarDecl 0xd2f0a0 parent 0xc4c0d0 prev 0xd2b210 <line:278:5, col:43> col:43 referenced num 'const intmax_t':'const long' constexpr
| |-VarDecl 0xd2f328 parent 0xc4c0d0 prev 0xd2dda8 <line:281:5, col:43> col:43 referenced den 'const intmax_t':'const long' constexpr
| |-VarDecl 0xd46830 parent 0xc4dc60 prev 0xd45eb0 <line:278:5, col:43> col:43 referenced num 'const intmax_t':'const long' constexpr
| |-VarDecl 0xd46ab8 parent 0xc4dc60 prev 0xd46378 <line:281:5, col:43> col:43 referenced den 'const intmax_t':'const long' constexpr
| |-VarDecl 0xd4b4b0 parent 0xcedb38 prev 0xd4ab60 <line:278:5, col:43> col:43 referenced num 'const intmax_t':'const long' constexpr
| |-VarDecl 0xd4b738 parent 0xcedb38 prev 0xd4b028 <line:281:5, col:43> col:43 referenced den 'const intmax_t':'const long' constexpr
| |-VarDecl 0xdc1560 parent 0xd1df20 prev 0xdc0778 <line:278:5, col:43> col:43 referenced num 'const intmax_t':'const long' constexpr
| |-VarDecl 0xdc17e8 parent 0xd1df20 prev 0xdc10d8 <line:281:5, col:43> col:43 referenced den 'const intmax_t':'const long' constexpr
| |-VarDecl 0xdd3ff0 parent 0xdd1628 prev 0xdd1f90 <line:278:5, col:43> col:43 referenced num 'const intmax_t':'const long' constexpr
| |-VarDecl 0xdd4278 parent 0xdd1628 prev 0xdd2cf8 <line:281:5, col:43> col:43 referenced den 'const intmax_t':'const long' constexpr
| |-VarDecl 0xde1f00 parent 0xd1da68 prev 0xde1110 <line:278:5, col:43> col:43 referenced num 'const intmax_t':'const long' constexpr
| |-VarDecl 0xde2188 parent 0xd1da68 prev 0xde1a78 <line:281:5, col:43> col:43 referenced den 'const intmax_t':'const long' constexpr
| |-VarDecl 0xdec560 parent 0xde9b98 prev 0xdea500 <line:278:5, col:43> col:43 referenced num 'const intmax_t':'const long' constexpr
| |-VarDecl 0xdef108 parent 0xde9b98 prev 0xdeb268 <line:281:5, col:43> col:43 referenced den 'const intmax_t':'const long' constexpr
| |-VarDecl 0xe06a10 parent 0xc4c6f0 prev 0xe044a0 <line:278:5, col:43> col:43 referenced num 'const intmax_t':'const long' constexpr
| |-VarDecl 0xe06c98 parent 0xc4c6f0 prev 0xe056b0 <line:281:5, col:43> col:43 referenced den 'const intmax_t':'const long' constexpr
| |-VarDecl 0xe0e7a0 parent 0xc4d640 prev 0xe0de50 <line:278:5, col:43> col:43 referenced num 'const intmax_t':'const long' constexpr
| |-VarDecl 0xe0ea28 parent 0xc4d640 prev 0xe0e318 <line:281:5, col:43> col:43 referenced den 'const intmax_t':'const long' constexpr
| |-VarDecl 0xe1e280 parent 0xc4c3e0 prev 0xe1b530 <line:278:5, col:43> col:43 referenced num 'const intmax_t':'const long' constexpr
| |-VarDecl 0xe1e508 parent 0xc4c3e0 prev 0xe1c740 <line:281:5, col:43> col:43 referenced den 'const intmax_t':'const long' constexpr
| |-VarDecl 0xe255d0 parent 0xc4d950 prev 0xe24c80 <line:278:5, col:43> col:43 referenced num 'const intmax_t':'const long' constexpr
| `-VarDecl 0xe25858 parent 0xc4d950 prev 0xe25148 <line:281:5, col:43> col:43 referenced den 'const intmax_t':'const long' constexpr
|-LinkageSpecDecl 0xc27450 <line:216:38> col:38 implicit C
| `-FunctionDecl 0xc274a0 <col:38> col:38 implicit referenced __builtin_clzll 'int (unsigned long long) noexcept' extern
|   |-ParmVarDecl 0xc27540 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|   |-NoThrowAttr 0xc275b0 <col:38> Implicit
|   `-ConstAttr 0xc27608 <col:38> Implicit
|-NamespaceDecl 0xc4e7b0 prev 0xc170e8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:158:1, line:1884:1> line:158:11 std
| |-original Namespace 0x81a0b0 'std'
| |-VisibilityAttr 0xc4e820 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:70:49, col:67> Default
| |-EnumDecl 0xc4e878 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:167:3, line:174:3> line:167:8 referenced float_round_style
| | |-EnumConstantDecl 0xc544d0 <line:169:5, col:34> col:5 round_indeterminate 'std::float_round_style'
| | | `-ConstantExpr 0xc544b0 <col:33, col:34> 'int' Int: -1
| | |   `-UnaryOperator 0xc4e960 <col:33, col:34> 'int' prefix '-'
| | |     `-IntegerLiteral 0xc4e940 <col:34> 'int' 1
| | |-EnumConstantDecl 0xc54560 <line:170:5, col:33> col:5 referenced round_toward_zero 'std::float_round_style'
| | | `-ConstantExpr 0xc54540 <col:33> 'int' Int: 0
| | |   `-IntegerLiteral 0xc54520 <col:33> 'int' 0
| | |-EnumConstantDecl 0xc545f0 <line:171:5, col:33> col:5 referenced round_to_nearest 'std::float_round_style'
| | | `-ConstantExpr 0xc545d0 <col:33> 'int' Int: 1
| | |   `-IntegerLiteral 0xc545b0 <col:33> 'int' 1
| | |-EnumConstantDecl 0xc54680 <line:172:5, col:33> col:5 round_toward_infinity 'std::float_round_style'
| | | `-ConstantExpr 0xc54660 <col:33> 'int' Int: 2
| | |   `-IntegerLiteral 0xc54640 <col:33> 'int' 2
| | `-EnumConstantDecl 0xc54710 <line:173:5, col:33> col:5 round_toward_neg_infinity 'std::float_round_style'
| |   `-ConstantExpr 0xc546f0 <col:33> 'int' Int: 3
| |     `-IntegerLiteral 0xc546d0 <col:33> 'int' 3
| |-EnumDecl 0xc54760 <line:182:3, line:190:3> line:182:8 referenced float_denorm_style
| | |-EnumConstantDecl 0xc54878 <line:185:5, col:29> col:5 denorm_indeterminate 'std::float_denorm_style'
| | | `-ConstantExpr 0xc54858 <col:28, col:29> 'int' Int: -1
| | |   `-UnaryOperator 0xc54840 <col:28, col:29> 'int' prefix '-'
| | |     `-IntegerLiteral 0xc54820 <col:29> 'int' 1
| | |-EnumConstantDecl 0xc54908 <line:187:5, col:28> col:5 referenced denorm_absent 'std::float_denorm_style'
| | | `-ConstantExpr 0xc548e8 <col:28> 'int' Int: 0
| | |   `-IntegerLiteral 0xc548c8 <col:28> 'int' 0
| | `-EnumConstantDecl 0xc54998 <line:189:5, col:28> col:5 referenced denorm_present 'std::float_denorm_style'
| |   `-ConstantExpr 0xc54978 <col:28> 'int' Int: 1
| |     `-IntegerLiteral 0xc54958 <col:28> 'int' 1
| |-CXXRecordDecl 0xc549e8 <line:202:3, line:301:3> line:202:10 referenced struct __numeric_limits_base definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-CXXRecordDecl 0xc54b08 <col:3, col:10> col:10 implicit struct __numeric_limits_base
| | |-VarDecl 0xc54ba8 <line:206:5, col:57> col:40 is_specialized 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc54c10 <col:57> 'bool' false
| | |-VarDecl 0xc54c90 <line:211:5, col:48> col:39 digits 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc54cf8 <col:48> 'int' 0
| | |-VarDecl 0xc54d88 <line:214:5, col:50> col:39 digits10 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc54df0 <col:50> 'int' 0
| | |-VarDecl 0xc54e80 <line:219:5, col:41> col:26 max_digits10 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc54ee8 <col:41> 'int' 0
| | |-VarDecl 0xc54f70 <line:223:5, col:52> col:40 is_signed 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc54fd8 <col:52> 'bool' false
| | |-VarDecl 0xc55050 <line:226:5, col:53> col:40 is_integer 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc550b8 <col:53> 'bool' false
| | |-VarDecl 0xc55130 <line:231:5, col:51> col:40 is_exact 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc55198 <col:51> 'bool' false
| | |-VarDecl 0xc55218 <line:235:5, col:47> col:39 radix 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc55280 <col:47> 'int' 0
| | |-VarDecl 0xc55310 <line:239:5, col:54> col:39 min_exponent 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc55378 <col:54> 'int' 0
| | |-VarDecl 0xc55408 <line:243:5, col:56> col:39 min_exponent10 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc55470 <col:56> 'int' 0
| | |-VarDecl 0xc55500 <line:248:5, col:54> col:39 max_exponent 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc55568 <col:54> 'int' 0
| | |-VarDecl 0xc555f8 <line:252:5, col:56> col:39 max_exponent10 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc55660 <col:56> 'int' 0
| | |-VarDecl 0xc556e8 <line:255:5, col:55> col:40 has_infinity 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc55750 <col:55> 'bool' false
| | |-VarDecl 0xc557c8 <line:259:5, col:56> col:40 has_quiet_NaN 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc55830 <col:56> 'bool' false
| | |-VarDecl 0xc558a8 <line:263:5, col:60> col:40 has_signaling_NaN 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc55910 <col:60> 'bool' false
| | |-VarDecl 0xc55988 <line:266:5, col:67> col:54 has_denorm 'const std::float_denorm_style' static constexpr cinit
| | | `-DeclRefExpr 0xc559f0 <col:67> 'std::float_denorm_style' EnumConstant 0xc54908 'denorm_absent' 'std::float_denorm_style'
| | |-VarDecl 0xc55a78 <line:270:5, col:58> col:40 has_denorm_loss 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc55ae0 <col:58> 'bool' false
| | |-VarDecl 0xc55b58 <line:274:5, col:52> col:40 is_iec559 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc55bc0 <col:52> 'bool' false
| | |-VarDecl 0xc55c38 <line:279:5, col:53> col:40 is_bounded 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc55ca0 <col:53> 'bool' false
| | |-VarDecl 0xc55d18 <line:288:5, col:52> col:40 is_modulo 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc55d80 <col:52> 'bool' false
| | |-VarDecl 0xc55df8 <line:291:5, col:48> col:40 traps 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc55e60 <col:48> 'bool' false
| | |-VarDecl 0xc55ed8 <line:294:5, col:58> col:40 tinyness_before 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc55f40 <col:58> 'bool' false
| | `-VarDecl 0xc55fb8 <line:299:5, line:300:11> line:299:53 round_style 'const std::float_round_style' static constexpr cinit
| |   `-DeclRefExpr 0xc56020 <line:300:11> 'std::float_round_style' EnumConstant 0xc54560 'round_toward_zero' 'std::float_round_style'
| |-ClassTemplateDecl 0xc561d8 <line:311:3, line:358:5> line:312:12 numeric_limits
| | |-TemplateTypeParmDecl 0xc560b0 <line:311:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0xc56148 <line:312:5, line:358:5> line:312:12 struct numeric_limits definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'std::__numeric_limits_base'
| | | |-CXXRecordDecl 0xc56470 <col:5, col:12> col:12 implicit struct numeric_limits
| | | |-CXXMethodDecl 0xc565b0 <line:316:7, line:317:51> col:7 constexpr min '_Tp () noexcept' static
| | | | `-CompoundStmt 0xc56ce8 <col:35, col:51>
| | | |   `-ReturnStmt 0xc56cd8 <col:37, col:48>
| | | |     `-CXXUnresolvedConstructExpr 0xc56cb8 <col:44, col:48> '_Tp' '_Tp'
| | | |-CXXMethodDecl 0xc56678 <line:320:7, line:321:51> col:7 constexpr max '_Tp () noexcept' static
| | | | `-CompoundStmt 0xc56d40 <col:35, col:51>
| | | |   `-ReturnStmt 0xc56d30 <col:37, col:48>
| | | |     `-CXXUnresolvedConstructExpr 0xc56d10 <col:44, col:48> '_Tp' '_Tp'
| | | |-CXXMethodDecl 0xc56740 <line:326:7, line:327:41> col:7 constexpr lowest '_Tp () noexcept' static
| | | | `-CompoundStmt 0xc56d98 <col:25, col:41>
| | | |   `-ReturnStmt 0xc56d88 <col:27, col:38>
| | | |     `-CXXUnresolvedConstructExpr 0xc56d68 <col:34, col:38> '_Tp' '_Tp'
| | | |-CXXMethodDecl 0xc56808 <line:332:7, line:333:55> col:7 constexpr epsilon '_Tp () noexcept' static
| | | | `-CompoundStmt 0xc56df0 <col:39, col:55>
| | | |   `-ReturnStmt 0xc56de0 <col:41, col:52>
| | | |     `-CXXUnresolvedConstructExpr 0xc56dc0 <col:48, col:52> '_Tp' '_Tp'
| | | |-CXXMethodDecl 0xc568d0 <line:336:7, line:337:59> col:7 constexpr round_error '_Tp () noexcept' static
| | | | `-CompoundStmt 0xc56e48 <col:43, col:59>
| | | |   `-ReturnStmt 0xc56e38 <col:45, col:56>
| | | |     `-CXXUnresolvedConstructExpr 0xc56e18 <col:52, col:56> '_Tp' '_Tp'
| | | |-CXXMethodDecl 0xc56998 <line:340:7, line:341:56> col:7 constexpr infinity '_Tp () noexcept' static
| | | | `-CompoundStmt 0xc56ea0 <col:40, col:56>
| | | |   `-ReturnStmt 0xc56e90 <col:42, col:53>
| | | |     `-CXXUnresolvedConstructExpr 0xc56e70 <col:49, col:53> '_Tp' '_Tp'
| | | |-CXXMethodDecl 0xc56a60 <line:345:7, line:346:57> col:7 constexpr quiet_NaN '_Tp () noexcept' static
| | | | `-CompoundStmt 0xc56ef8 <col:41, col:57>
| | | |   `-ReturnStmt 0xc56ee8 <col:43, col:54>
| | | |     `-CXXUnresolvedConstructExpr 0xc56ec8 <col:50, col:54> '_Tp' '_Tp'
| | | |-CXXMethodDecl 0xc56b28 <line:350:7, line:351:61> col:7 constexpr signaling_NaN '_Tp () noexcept' static
| | | | `-CompoundStmt 0xc56f50 <col:45, col:61>
| | | |   `-ReturnStmt 0xc56f40 <col:47, col:58>
| | | |     `-CXXUnresolvedConstructExpr 0xc56f20 <col:54, col:58> '_Tp' '_Tp'
| | | `-CXXMethodDecl 0xc56bf0 <line:356:7, line:357:58> col:7 constexpr denorm_min '_Tp () noexcept' static
| | |   `-CompoundStmt 0xc56fa8 <col:42, col:58>
| | |     `-ReturnStmt 0xc56f98 <col:44, col:55>
| | |       `-CXXUnresolvedConstructExpr 0xc56f78 <col:51, col:55> '_Tp' '_Tp'
| | |-ClassTemplateSpecialization 0xc57ee0 'numeric_limits'
| | |-ClassTemplateSpecialization 0xc5ca40 'numeric_limits'
| | |-ClassTemplateSpecialization 0xc627c8 'numeric_limits'
| | |-ClassTemplateSpecialization 0xc65238 'numeric_limits'
| | |-ClassTemplateSpecialization 0xc67cd0 'numeric_limits'
| | |-ClassTemplateSpecialization 0xc6ccd0 'numeric_limits'
| | |-ClassTemplateSpecialization 0xc70de0 'numeric_limits'
| | |-ClassTemplateSpecialization 0xc750a8 'numeric_limits'
| | |-ClassTemplateSpecialization 0xc779c8 'numeric_limits'
| | |-ClassTemplateSpecialization 0xc7a468 'numeric_limits'
| | |-ClassTemplateSpecialization 0xc7ddd8 'numeric_limits'
| | |-ClassTemplateSpecialization 0xc80c28 'numeric_limits'
| | |-ClassTemplateSpecialization 0xc83628 'numeric_limits'
| | |-ClassTemplateSpecialization 0xc868c8 'numeric_limits'
| | |-ClassTemplateSpecialization 0xc892f8 'numeric_limits'
| | |-ClassTemplateSpecialization 0xc8c1b8 'numeric_limits'
| | |-ClassTemplateSpecialization 0xc9b408 'numeric_limits'
| | |-ClassTemplateSpecialization 0xca7ba8 'numeric_limits'
| | |-ClassTemplateSpecialization 0xcaaa60 'numeric_limits'
| | `-ClassTemplateSpecialization 0xcad910 'numeric_limits'
| |-ClassTemplatePartialSpecializationDecl 0xc57130 <line:363:3, line:365:36> line:364:12 struct numeric_limits definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'numeric_limits<_Tp>'
| | |-TemplateArgument type 'const type-parameter-0-0'
| | |-TemplateTypeParmDecl 0xc56fc0 <line:363:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xc57410 <line:364:5, col:12> col:12 implicit struct numeric_limits
| |-ClassTemplatePartialSpecializationDecl 0xc57630 <line:367:3, line:369:36> line:368:12 struct numeric_limits definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'numeric_limits<_Tp>'
| | |-TemplateArgument type 'volatile type-parameter-0-0'
| | |-TemplateTypeParmDecl 0xc574b8 <line:367:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xc57910 <line:368:5, col:12> col:12 implicit struct numeric_limits
| |-ClassTemplatePartialSpecializationDecl 0xc57b30 <line:371:3, line:373:36> line:372:12 struct numeric_limits definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'numeric_limits<_Tp>'
| | |-TemplateArgument type 'const volatile type-parameter-0-0'
| | |-TemplateTypeParmDecl 0xc579b8 <line:371:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0xc57e10 <line:372:5, col:12> col:12 implicit struct numeric_limits
| |-ClassTemplateSpecializationDecl 0xc57ee0 <line:383:3, line:449:5> line:384:12 struct numeric_limits definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'bool'
| | |-CXXRecordDecl 0xc580f8 <col:5, col:12> col:12 implicit struct numeric_limits
| | |-VarDecl 0xc58198 <line:386:7, col:59> col:42 is_specialized 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc58200 <col:59> 'bool' true
| | |-CXXMethodDecl 0xc58320 <line:388:7, line:389:51> col:7 used constexpr min 'bool () noexcept' static
| | | `-CompoundStmt 0xc5c798 <col:35, col:51>
| | |   `-ReturnStmt 0xc5c788 <col:37, col:44>
| | |     `-CXXBoolLiteralExpr 0xc5c778 <col:44> 'bool' false
| | |-CXXMethodDecl 0xc583e8 <line:391:7, line:392:50> col:7 constexpr max 'bool () noexcept' static
| | | `-CompoundStmt 0xc5c7d0 <col:35, col:50>
| | |   `-ReturnStmt 0xc5c7c0 <col:37, col:44>
| | |     `-CXXBoolLiteralExpr 0xc5c7b0 <col:44> 'bool' true
| | |-CXXMethodDecl 0xc5adf0 <line:395:7, line:396:41> col:7 constexpr lowest 'bool () noexcept' static
| | | `-CompoundStmt 0xc5c8b0 <col:25, col:41>
| | |   `-ReturnStmt 0xc5c8a0 <col:27, col:38>
| | |     `-CallExpr 0xc5c880 <col:34, col:38> 'bool'
| | |       `-ImplicitCastExpr 0xc5c868 <col:34> 'bool (*)() noexcept' <FunctionToPointerDecay>
| | |         `-DeclRefExpr 0xc5c7e8 <col:34> 'bool () noexcept' lvalue CXXMethod 0xc58320 'min' 'bool () noexcept'
| | |-VarDecl 0xc5aea8 <line:398:7, col:50> col:41 digits 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc5af10 <col:50> 'int' 1
| | |-VarDecl 0xc5afa0 <line:399:7, col:52> col:41 digits10 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc5b008 <col:52> 'int' 0
| | |-VarDecl 0xc5b098 <line:401:7, col:43> col:28 max_digits10 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc5b100 <col:43> 'int' 0
| | |-VarDecl 0xc5b188 <line:403:7, col:54> col:42 is_signed 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc5b1f0 <col:54> 'bool' false
| | |-VarDecl 0xc5b268 <line:404:7, col:55> col:42 is_integer 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc5b2d0 <col:55> 'bool' true
| | |-VarDecl 0xc5b348 <line:405:7, col:53> col:42 is_exact 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc5b3b0 <col:53> 'bool' true
| | |-VarDecl 0xc5b430 <line:406:7, col:49> col:41 radix 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc5b498 <col:49> 'int' 2
| | |-CXXMethodDecl 0xc5b538 <line:408:7, line:409:55> col:7 constexpr epsilon 'bool () noexcept' static
| | | `-CompoundStmt 0xc5c8e8 <col:39, col:55>
| | |   `-ReturnStmt 0xc5c8d8 <col:41, col:48>
| | |     `-CXXBoolLiteralExpr 0xc5c8c8 <col:48> 'bool' false
| | |-CXXMethodDecl 0xc5b600 <line:411:7, line:412:59> col:7 constexpr round_error 'bool () noexcept' static
| | | `-CompoundStmt 0xc5c920 <col:43, col:59>
| | |   `-ReturnStmt 0xc5c910 <col:45, col:52>
| | |     `-CXXBoolLiteralExpr 0xc5c900 <col:52> 'bool' false
| | |-VarDecl 0xc5b6b8 <line:414:7, col:56> col:41 min_exponent 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc5b720 <col:56> 'int' 0
| | |-VarDecl 0xc5b7b0 <line:415:7, col:58> col:41 min_exponent10 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc5b818 <col:58> 'int' 0
| | |-VarDecl 0xc5b8a8 <line:416:7, col:56> col:41 max_exponent 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc5b910 <col:56> 'int' 0
| | |-VarDecl 0xc5b9a0 <line:417:7, col:58> col:41 max_exponent10 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc5ba08 <col:58> 'int' 0
| | |-VarDecl 0xc5ba90 <line:419:7, col:57> col:42 has_infinity 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc5baf8 <col:57> 'bool' false
| | |-VarDecl 0xc5bb70 <line:420:7, col:58> col:42 has_quiet_NaN 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc5bbd8 <col:58> 'bool' false
| | |-VarDecl 0xc5bc50 <line:421:7, col:62> col:42 has_signaling_NaN 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc5bcb8 <col:62> 'bool' false
| | |-VarDecl 0xc5bd30 <line:422:7, line:423:10> line:422:56 has_denorm 'const std::float_denorm_style' static constexpr cinit
| | | `-DeclRefExpr 0xc5bd98 <line:423:10> 'std::float_denorm_style' EnumConstant 0xc54908 'denorm_absent' 'std::float_denorm_style'
| | |-VarDecl 0xc5be20 <line:424:7, col:60> col:42 has_denorm_loss 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc5be88 <col:60> 'bool' false
| | |-CXXMethodDecl 0xc5bf18 <line:426:7, line:427:56> col:7 constexpr infinity 'bool () noexcept' static
| | | `-CompoundStmt 0xc5c958 <col:40, col:56>
| | |   `-ReturnStmt 0xc5c948 <col:42, col:49>
| | |     `-CXXBoolLiteralExpr 0xc5c938 <col:49> 'bool' false
| | |-CXXMethodDecl 0xc5bfe0 <line:429:7, line:430:57> col:7 constexpr quiet_NaN 'bool () noexcept' static
| | | `-CompoundStmt 0xc5c990 <col:41, col:57>
| | |   `-ReturnStmt 0xc5c980 <col:43, col:50>
| | |     `-CXXBoolLiteralExpr 0xc5c970 <col:50> 'bool' false
| | |-CXXMethodDecl 0xc5c0a8 <line:432:7, line:433:61> col:7 constexpr signaling_NaN 'bool () noexcept' static
| | | `-CompoundStmt 0xc5c9c8 <col:45, col:61>
| | |   `-ReturnStmt 0xc5c9b8 <col:47, col:54>
| | |     `-CXXBoolLiteralExpr 0xc5c9a8 <col:54> 'bool' false
| | |-CXXMethodDecl 0xc5c170 <line:435:7, line:436:58> col:7 constexpr denorm_min 'bool () noexcept' static
| | | `-CompoundStmt 0xc5ca00 <col:42, col:58>
| | |   `-ReturnStmt 0xc5c9f0 <col:44, col:51>
| | |     `-CXXBoolLiteralExpr 0xc5c9e0 <col:51> 'bool' false
| | |-VarDecl 0xc5c220 <line:438:7, col:54> col:42 is_iec559 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc5c288 <col:54> 'bool' false
| | |-VarDecl 0xc5c300 <line:439:7, col:55> col:42 is_bounded 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc5c368 <col:55> 'bool' true
| | |-VarDecl 0xc5c3e0 <line:440:7, col:54> col:42 is_modulo 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc5c448 <col:54> 'bool' false
| | |-VarDecl 0xc5c4c0 <line:445:7, line:80:35> line:445:42 traps 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc5c528 <line:80:35> 'bool' true
| | |-VarDecl 0xc5c5a0 <line:446:7, col:60> col:42 tinyness_before 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc5c608 <col:60> 'bool' false
| | `-VarDecl 0xc5c680 <line:447:7, line:448:10> line:447:55 round_style 'const std::float_round_style' static constexpr cinit
| |   `-DeclRefExpr 0xc5c6e8 <line:448:10> 'std::float_round_style' EnumConstant 0xc54560 'round_toward_zero' 'std::float_round_style'
| |-ClassTemplateSpecializationDecl 0xc5ca40 <line:452:3, line:516:5> line:453:12 struct numeric_limits definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'char'
| | |-CXXRecordDecl 0xc5cc58 <col:5, col:12> col:12 implicit struct numeric_limits
| | |-VarDecl 0xc5ccf8 <line:455:7, col:59> col:42 is_specialized 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc5cd60 <col:59> 'bool' true
| | |-CXXMethodDecl 0xc5ce80 <line:457:7, line:458:65> col:7 used constexpr min 'char () noexcept' static
| | | `-CompoundStmt 0xc61d68 <col:35, col:65>
| | |   `-ReturnStmt 0xc61d58 <col:37, line:131:64>
| | |     `-ImplicitCastExpr 0xc61d40 <col:3, col:64> 'char' <IntegralCast>
| | |       `-ParenExpr 0xc61d20 <col:3, col:64> 'int'
| | |         `-ConditionalOperator 0xc61cf0 <line:128:33, line:131:63> 'int'
| | |           |-ParenExpr 0xc61540 <line:128:33, col:45> 'bool'
| | |           | `-BinaryOperator 0xc61520 <col:34, col:44> 'bool' '<'
| | |           |   |-ImplicitCastExpr 0xc61508 <col:34, col:40> 'int' <IntegralCast>
| | |           |   | `-CStyleCastExpr 0xc614c0 <col:34, col:40> 'char' <NoOp>
| | |           |   |   `-ImplicitCastExpr 0xc614a8 <col:37, col:40> 'char' <IntegralCast> part_of_explicit_cast
| | |           |   |     `-ParenExpr 0xc61488 <col:37, col:40> 'int'
| | |           |   |       `-UnaryOperator 0xc61440 <col:38, col:39> 'int' prefix '-'
| | |           |   |         `-IntegerLiteral 0xc61420 <col:39> 'int' 1
| | |           |   `-IntegerLiteral 0xc614e8 <col:44> 'int' 0
| | |           |-BinaryOperator 0xc61c48 <line:131:31, col:56> 'int' '-'
| | |           | |-UnaryOperator 0xc61c10 <col:31, line:135:71> 'int' prefix '-'
| | |           | | `-ParenExpr 0xc61bf0 <line:134:3, line:135:71> 'int'
| | |           | |   `-ConditionalOperator 0xc61bc0 <line:128:33, line:135:70> 'int'
| | |           | |     |-ParenExpr 0xc61680 <line:128:33, col:45> 'bool'
| | |           | |     | `-BinaryOperator 0xc61660 <col:34, col:44> 'bool' '<'
| | |           | |     |   |-ImplicitCastExpr 0xc61648 <col:34, col:40> 'int' <IntegralCast>
| | |           | |     |   | `-CStyleCastExpr 0xc61600 <col:34, col:40> 'char' <NoOp>
| | |           | |     |   |   `-ImplicitCastExpr 0xc615e8 <col:37, col:40> 'char' <IntegralCast> part_of_explicit_cast
| | |           | |     |   |     `-ParenExpr 0xc615c8 <col:37, col:40> 'int'
| | |           | |     |   |       `-UnaryOperator 0xc61580 <col:38, col:39> 'int' prefix '-'
| | |           | |     |   |         `-IntegerLiteral 0xc61560 <col:39> 'int' 1
| | |           | |     |   `-IntegerLiteral 0xc61628 <col:44> 'int' 0
| | |           | |     |-ParenExpr 0xc61b00 <line:135:4, col:62> 'int'
| | |           | |     | `-BinaryOperator 0xc61ae0 <col:5, col:61> 'int' '+'
| | |           | |     |   |-ParenExpr 0xc61aa0 <col:5, col:57> 'int'
| | |           | |     |   | `-BinaryOperator 0xc61a80 <col:6, col:56> 'int' '<<'
| | |           | |     |   |   |-ParenExpr 0xc61a40 <col:6, col:51> 'int'
| | |           | |     |   |   | `-BinaryOperator 0xc61a20 <col:7, col:50> 'int' '-'
| | |           | |     |   |   |   |-ParenExpr 0xc619e0 <col:7, col:46> 'int'
| | |           | |     |   |   |   | `-BinaryOperator 0xc619c0 <col:8, col:45> 'int' '<<'
| | |           | |     |   |   |   |   |-ImplicitCastExpr 0xc619a8 <col:8, col:11> 'int' <IntegralCast>
| | |           | |     |   |   |   |   | `-CStyleCastExpr 0xc616e8 <col:8, col:11> 'char' <NoOp>
| | |           | |     |   |   |   |   |   `-ImplicitCastExpr 0xc616d0 <col:11> 'char' <IntegralCast> part_of_explicit_cast
| | |           | |     |   |   |   |   |     `-IntegerLiteral 0xc616a0 <col:11> 'int' 1
| | |           | |     |   |   |   |   `-ParenExpr 0xc61988 <col:16, col:45> 'unsigned long'
| | |           | |     |   |   |   |     `-BinaryOperator 0xc61968 <line:138:3, line:135:44> 'unsigned long' '-'
| | |           | |     |   |   |   |       |-ParenExpr 0xc61910 <line:138:3, col:32> 'unsigned long'
| | |           | |     |   |   |   |       | `-BinaryOperator 0xc618f0 <line:147:23, line:128:45> 'unsigned long' '-'
| | |           | |     |   |   |   |       |   |-BinaryOperator 0xc61778 <line:147:23, <built-in>:71:22> 'unsigned long' '*'
| | |           | |     |   |   |   |       |   | |-UnaryExprOrTypeTraitExpr 0xc61720 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:147:23, col:31> 'unsigned long' sizeof 'char'
| | |           | |     |   |   |   |       |   | `-ImplicitCastExpr 0xc61760 <<built-in>:71:22> 'unsigned long' <IntegralCast>
| | |           | |     |   |   |   |       |   |   `-IntegerLiteral 0xc61740 <col:22> 'int' 8
| | |           | |     |   |   |   |       |   `-ImplicitCastExpr 0xc618d8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:128:33, col:45> 'unsigned long' <IntegralCast>
| | |           | |     |   |   |   |       |     `-ParenExpr 0xc618b8 <col:33, col:45> 'bool'
| | |           | |     |   |   |   |       |       `-BinaryOperator 0xc61898 <col:34, col:44> 'bool' '<'
| | |           | |     |   |   |   |       |         |-ImplicitCastExpr 0xc61880 <col:34, col:40> 'int' <IntegralCast>
| | |           | |     |   |   |   |       |         | `-CStyleCastExpr 0xc61838 <col:34, col:40> 'char' <NoOp>
| | |           | |     |   |   |   |       |         |   `-ImplicitCastExpr 0xc61820 <col:37, col:40> 'char' <IntegralCast> part_of_explicit_cast
| | |           | |     |   |   |   |       |         |     `-ParenExpr 0xc61800 <col:37, col:40> 'int'
| | |           | |     |   |   |   |       |         |       `-UnaryOperator 0xc617b8 <col:38, col:39> 'int' prefix '-'
| | |           | |     |   |   |   |       |         |         `-IntegerLiteral 0xc61798 <col:39> 'int' 1
| | |           | |     |   |   |   |       |         `-IntegerLiteral 0xc61860 <col:44> 'int' 0
| | |           | |     |   |   |   |       `-ImplicitCastExpr 0xc61950 <line:135:44> 'unsigned long' <IntegralCast>
| | |           | |     |   |   |   |         `-IntegerLiteral 0xc61930 <col:44> 'int' 1
| | |           | |     |   |   |   `-IntegerLiteral 0xc61a00 <col:50> 'int' 1
| | |           | |     |   |   `-IntegerLiteral 0xc61a60 <col:56> 'int' 1
| | |           | |     |   `-IntegerLiteral 0xc61ac0 <col:61> 'int' 1
| | |           | |     `-UnaryOperator 0xc61ba8 <col:66, col:70> 'int' prefix '~' cannot overflow
| | |           | |       `-ImplicitCastExpr 0xc61b90 <col:67, col:70> 'int' <IntegralCast>
| | |           | |         `-CStyleCastExpr 0xc61b68 <col:67, col:70> 'char' <NoOp>
| | |           | |           `-ImplicitCastExpr 0xc61b50 <col:70> 'char' <IntegralCast> part_of_explicit_cast
| | |           | |             `-IntegerLiteral 0xc61b20 <col:70> 'int' 0
| | |           | `-IntegerLiteral 0xc61c28 <line:131:56> 'int' 1
| | |           `-ImplicitCastExpr 0xc61cd8 <col:60, col:63> 'int' <IntegralCast>
| | |             `-CStyleCastExpr 0xc61cb0 <col:60, col:63> 'char' <NoOp>
| | |               `-ImplicitCastExpr 0xc61c98 <col:63> 'char' <IntegralCast> part_of_explicit_cast
| | |                 `-IntegerLiteral 0xc61c68 <col:63> 'int' 0
| | |-CXXMethodDecl 0xc5cf48 <line:460:7, line:461:65> col:7 constexpr max 'char () noexcept' static
| | | `-CompoundStmt 0xc62458 <col:35, col:65>
| | |   `-ReturnStmt 0xc62448 <col:37, line:135:71>
| | |     `-ImplicitCastExpr 0xc62430 <line:134:3, line:135:71> 'char' <IntegralCast>
| | |       `-ParenExpr 0xc62410 <line:134:3, line:135:71> 'int'
| | |         `-ConditionalOperator 0xc623e0 <line:128:33, line:135:70> 'int'
| | |           |-ParenExpr 0xc61ea0 <line:128:33, col:45> 'bool'
| | |           | `-BinaryOperator 0xc61e80 <col:34, col:44> 'bool' '<'
| | |           |   |-ImplicitCastExpr 0xc61e68 <col:34, col:40> 'int' <IntegralCast>
| | |           |   | `-CStyleCastExpr 0xc61e20 <col:34, col:40> 'char' <NoOp>
| | |           |   |   `-ImplicitCastExpr 0xc61e08 <col:37, col:40> 'char' <IntegralCast> part_of_explicit_cast
| | |           |   |     `-ParenExpr 0xc61de8 <col:37, col:40> 'int'
| | |           |   |       `-UnaryOperator 0xc61da0 <col:38, col:39> 'int' prefix '-'
| | |           |   |         `-IntegerLiteral 0xc61d80 <col:39> 'int' 1
| | |           |   `-IntegerLiteral 0xc61e48 <col:44> 'int' 0
| | |           |-ParenExpr 0xc62320 <line:135:4, col:62> 'int'
| | |           | `-BinaryOperator 0xc62300 <col:5, col:61> 'int' '+'
| | |           |   |-ParenExpr 0xc622c0 <col:5, col:57> 'int'
| | |           |   | `-BinaryOperator 0xc622a0 <col:6, col:56> 'int' '<<'
| | |           |   |   |-ParenExpr 0xc62260 <col:6, col:51> 'int'
| | |           |   |   | `-BinaryOperator 0xc62240 <col:7, col:50> 'int' '-'
| | |           |   |   |   |-ParenExpr 0xc62200 <col:7, col:46> 'int'
| | |           |   |   |   | `-BinaryOperator 0xc621e0 <col:8, col:45> 'int' '<<'
| | |           |   |   |   |   |-ImplicitCastExpr 0xc621c8 <col:8, col:11> 'int' <IntegralCast>
| | |           |   |   |   |   | `-CStyleCastExpr 0xc61f08 <col:8, col:11> 'char' <NoOp>
| | |           |   |   |   |   |   `-ImplicitCastExpr 0xc61ef0 <col:11> 'char' <IntegralCast> part_of_explicit_cast
| | |           |   |   |   |   |     `-IntegerLiteral 0xc61ec0 <col:11> 'int' 1
| | |           |   |   |   |   `-ParenExpr 0xc621a8 <col:16, col:45> 'unsigned long'
| | |           |   |   |   |     `-BinaryOperator 0xc62188 <line:138:3, line:135:44> 'unsigned long' '-'
| | |           |   |   |   |       |-ParenExpr 0xc62130 <line:138:3, col:32> 'unsigned long'
| | |           |   |   |   |       | `-BinaryOperator 0xc62110 <line:149:23, line:128:45> 'unsigned long' '-'
| | |           |   |   |   |       |   |-BinaryOperator 0xc61f98 <line:149:23, <built-in>:71:22> 'unsigned long' '*'
| | |           |   |   |   |       |   | |-UnaryExprOrTypeTraitExpr 0xc61f40 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:149:23, col:31> 'unsigned long' sizeof 'char'
| | |           |   |   |   |       |   | `-ImplicitCastExpr 0xc61f80 <<built-in>:71:22> 'unsigned long' <IntegralCast>
| | |           |   |   |   |       |   |   `-IntegerLiteral 0xc61f60 <col:22> 'int' 8
| | |           |   |   |   |       |   `-ImplicitCastExpr 0xc620f8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:128:33, col:45> 'unsigned long' <IntegralCast>
| | |           |   |   |   |       |     `-ParenExpr 0xc620d8 <col:33, col:45> 'bool'
| | |           |   |   |   |       |       `-BinaryOperator 0xc620b8 <col:34, col:44> 'bool' '<'
| | |           |   |   |   |       |         |-ImplicitCastExpr 0xc620a0 <col:34, col:40> 'int' <IntegralCast>
| | |           |   |   |   |       |         | `-CStyleCastExpr 0xc62058 <col:34, col:40> 'char' <NoOp>
| | |           |   |   |   |       |         |   `-ImplicitCastExpr 0xc62040 <col:37, col:40> 'char' <IntegralCast> part_of_explicit_cast
| | |           |   |   |   |       |         |     `-ParenExpr 0xc62020 <col:37, col:40> 'int'
| | |           |   |   |   |       |         |       `-UnaryOperator 0xc61fd8 <col:38, col:39> 'int' prefix '-'
| | |           |   |   |   |       |         |         `-IntegerLiteral 0xc61fb8 <col:39> 'int' 1
| | |           |   |   |   |       |         `-IntegerLiteral 0xc62080 <col:44> 'int' 0
| | |           |   |   |   |       `-ImplicitCastExpr 0xc62170 <line:135:44> 'unsigned long' <IntegralCast>
| | |           |   |   |   |         `-IntegerLiteral 0xc62150 <col:44> 'int' 1
| | |           |   |   |   `-IntegerLiteral 0xc62220 <col:50> 'int' 1
| | |           |   |   `-IntegerLiteral 0xc62280 <col:56> 'int' 1
| | |           |   `-IntegerLiteral 0xc622e0 <col:61> 'int' 1
| | |           `-UnaryOperator 0xc623c8 <col:66, col:70> 'int' prefix '~' cannot overflow
| | |             `-ImplicitCastExpr 0xc623b0 <col:67, col:70> 'int' <IntegralCast>
| | |               `-CStyleCastExpr 0xc62388 <col:67, col:70> 'char' <NoOp>
| | |                 `-ImplicitCastExpr 0xc62370 <col:70> 'char' <IntegralCast> part_of_explicit_cast
| | |                   `-IntegerLiteral 0xc62340 <col:70> 'int' 0
| | |-CXXMethodDecl 0xc5d010 <line:464:7, line:465:41> col:7 constexpr lowest 'char () noexcept' static
| | | `-CompoundStmt 0xc62530 <col:25, col:41>
| | |   `-ReturnStmt 0xc62520 <col:27, col:38>
| | |     `-CallExpr 0xc62500 <col:34, col:38> 'char'
| | |       `-ImplicitCastExpr 0xc624e8 <col:34> 'char (*)() noexcept' <FunctionToPointerDecay>
| | |         `-DeclRefExpr 0xc62470 <col:34> 'char () noexcept' lvalue CXXMethod 0xc5ce80 'min' 'char () noexcept'
| | |-VarDecl 0xc5d0c8 <line:468:7, line:138:32> line:468:41 digits 'const int' static constexpr cinit
| | | `-ImplicitCastExpr 0xc5d350 <line:138:3, col:32> 'const int' <IntegralCast>
| | |   `-ParenExpr 0xc5d330 <col:3, col:32> 'unsigned long'
| | |     `-BinaryOperator 0xc5d310 <line:151:26, line:128:45> 'unsigned long' '-'
| | |       |-BinaryOperator 0xc5d198 <line:151:26, <built-in>:71:22> 'unsigned long' '*'
| | |       | |-UnaryExprOrTypeTraitExpr 0xc5d140 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:151:26, col:34> 'unsigned long' sizeof 'char'
| | |       | `-ImplicitCastExpr 0xc5d180 <<built-in>:71:22> 'unsigned long' <IntegralCast>
| | |       |   `-IntegerLiteral 0xc5d160 <col:22> 'int' 8
| | |       `-ImplicitCastExpr 0xc5d2f8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:128:33, col:45> 'unsigned long' <IntegralCast>
| | |         `-ParenExpr 0xc5d2d8 <col:33, col:45> 'bool'
| | |           `-BinaryOperator 0xc5d2b8 <col:34, col:44> 'bool' '<'
| | |             |-ImplicitCastExpr 0xc5d2a0 <col:34, col:40> 'int' <IntegralCast>
| | |             | `-CStyleCastExpr 0xc5d258 <col:34, col:40> 'char' <NoOp>
| | |             |   `-ImplicitCastExpr 0xc5d240 <col:37, col:40> 'char' <IntegralCast> part_of_explicit_cast
| | |             |     `-ParenExpr 0xc5d220 <col:37, col:40> 'int'
| | |             |       `-UnaryOperator 0xc5d1d8 <col:38, col:39> 'int' prefix '-'
| | |             |         `-IntegerLiteral 0xc5d1b8 <col:39> 'int' 1
| | |             `-IntegerLiteral 0xc5d280 <col:44> 'int' 0
| | |-VarDecl 0xc5d3d8 <line:469:7, line:142:42> line:469:41 digits10 'const int' static constexpr cinit
| | | `-ImplicitCastExpr 0xc5d730 <line:142:3, col:42> 'const int' <IntegralCast>
| | |   `-ParenExpr 0xc5d710 <col:3, col:42> 'unsigned long'
| | |     `-BinaryOperator 0xc5d6f0 <line:138:3, line:142:38> 'unsigned long' '/'
| | |       |-BinaryOperator 0xc5d698 <line:138:3, line:142:31> 'unsigned long' '*'
| | |       | |-ParenExpr 0xc5d640 <line:138:3, col:32> 'unsigned long'
| | |       | | `-BinaryOperator 0xc5d620 <line:153:28, line:128:45> 'unsigned long' '-'
| | |       | |   |-BinaryOperator 0xc5d4a8 <line:153:28, <built-in>:71:22> 'unsigned long' '*'
| | |       | |   | |-UnaryExprOrTypeTraitExpr 0xc5d450 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:153:28, col:36> 'unsigned long' sizeof 'char'
| | |       | |   | `-ImplicitCastExpr 0xc5d490 <<built-in>:71:22> 'unsigned long' <IntegralCast>
| | |       | |   |   `-IntegerLiteral 0xc5d470 <col:22> 'int' 8
| | |       | |   `-ImplicitCastExpr 0xc5d608 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:128:33, col:45> 'unsigned long' <IntegralCast>
| | |       | |     `-ParenExpr 0xc5d5e8 <col:33, col:45> 'bool'
| | |       | |       `-BinaryOperator 0xc5d5c8 <col:34, col:44> 'bool' '<'
| | |       | |         |-ImplicitCastExpr 0xc5d5b0 <col:34, col:40> 'int' <IntegralCast>
| | |       | |         | `-CStyleCastExpr 0xc5d568 <col:34, col:40> 'char' <NoOp>
| | |       | |         |   `-ImplicitCastExpr 0xc5d550 <col:37, col:40> 'char' <IntegralCast> part_of_explicit_cast
| | |       | |         |     `-ParenExpr 0xc5d530 <col:37, col:40> 'int'
| | |       | |         |       `-UnaryOperator 0xc5d4e8 <col:38, col:39> 'int' prefix '-'
| | |       | |         |         `-IntegerLiteral 0xc5d4c8 <col:39> 'int' 1
| | |       | |         `-IntegerLiteral 0xc5d590 <col:44> 'int' 0
| | |       | `-ImplicitCastExpr 0xc5d680 <line:142:31> 'unsigned long' <IntegralCast>
| | |       |   `-IntegerLiteral 0xc5d660 <col:31> 'long' 643
| | |       `-ImplicitCastExpr 0xc5d6d8 <col:38> 'unsigned long' <IntegralCast>
| | |         `-IntegerLiteral 0xc5d6b8 <col:38> 'int' 2136
| | |-VarDecl 0xc5d7b8 <line:471:7, col:43> col:28 max_digits10 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc5d820 <col:43> 'int' 0
| | |-VarDecl 0xc5d8a8 <line:473:7, line:128:45> line:473:42 referenced is_signed 'const bool' static constexpr cinit
| | | `-ParenExpr 0xc5da30 <line:128:33, col:45> 'bool'
| | |   `-BinaryOperator 0xc5da10 <col:34, col:44> 'bool' '<'
| | |     |-ImplicitCastExpr 0xc5d9f8 <col:34, col:40> 'int' <IntegralCast>
| | |     | `-CStyleCastExpr 0xc5d9b0 <col:34, col:40> 'char' <NoOp>
| | |     |   `-ImplicitCastExpr 0xc5d998 <col:37, col:40> 'char' <IntegralCast> part_of_explicit_cast
| | |     |     `-ParenExpr 0xc5d978 <col:37, col:40> 'int'
| | |     |       `-UnaryOperator 0xc5d930 <col:38, col:39> 'int' prefix '-'
| | |     |         `-IntegerLiteral 0xc5d910 <col:39> 'int' 1
| | |     `-IntegerLiteral 0xc5d9d8 <col:44> 'int' 0
| | |-VarDecl 0xc5dab8 <line:474:7, col:55> col:42 is_integer 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc5db20 <col:55> 'bool' true
| | |-VarDecl 0xc5db98 <line:475:7, col:53> col:42 is_exact 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc5dc00 <col:53> 'bool' true
| | |-VarDecl 0xc5dc80 <line:476:7, col:49> col:41 radix 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc5dce8 <col:49> 'int' 2
| | |-CXXMethodDecl 0xc5dd88 <line:478:7, line:479:51> col:7 constexpr epsilon 'char () noexcept' static
| | | `-CompoundStmt 0xc62590 <col:39, col:51>
| | |   `-ReturnStmt 0xc62580 <col:41, col:48>
| | |     `-ImplicitCastExpr 0xc62568 <col:48> 'char' <IntegralCast>
| | |       `-IntegerLiteral 0xc62548 <col:48> 'int' 0
| | |-CXXMethodDecl 0xc5de50 <line:481:7, line:482:55> col:7 constexpr round_error 'char () noexcept' static
| | | `-CompoundStmt 0xc625f0 <col:43, col:55>
| | |   `-ReturnStmt 0xc625e0 <col:45, col:52>
| | |     `-ImplicitCastExpr 0xc625c8 <col:52> 'char' <IntegralCast>
| | |       `-IntegerLiteral 0xc625a8 <col:52> 'int' 0
| | |-VarDecl 0xc5df08 <line:484:7, col:56> col:41 min_exponent 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc5df70 <col:56> 'int' 0
| | |-VarDecl 0xc5e000 <line:485:7, col:58> col:41 min_exponent10 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc5e068 <col:58> 'int' 0
| | |-VarDecl 0xc5e0f8 <line:486:7, col:56> col:41 max_exponent 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc5e160 <col:56> 'int' 0
| | |-VarDecl 0xc5e1f0 <line:487:7, col:58> col:41 max_exponent10 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc5e258 <col:58> 'int' 0
| | |-VarDecl 0xc5e2e0 <line:489:7, col:57> col:42 has_infinity 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc5e348 <col:57> 'bool' false
| | |-VarDecl 0xc5e3c0 <line:490:7, col:58> col:42 has_quiet_NaN 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc5e428 <col:58> 'bool' false
| | |-VarDecl 0xc5e4a0 <line:491:7, col:62> col:42 has_signaling_NaN 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc5e508 <col:62> 'bool' false
| | |-VarDecl 0xc5e580 <line:492:7, line:493:10> line:492:56 has_denorm 'const std::float_denorm_style' static constexpr cinit
| | | `-DeclRefExpr 0xc5e5e8 <line:493:10> 'std::float_denorm_style' EnumConstant 0xc54908 'denorm_absent' 'std::float_denorm_style'
| | |-VarDecl 0xc5e670 <line:494:7, col:60> col:42 has_denorm_loss 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc5e6d8 <col:60> 'bool' false
| | |-CXXMethodDecl 0xc5e768 <line:496:7, line:497:62> col:12 constexpr infinity 'char () noexcept' static
| | | `-CompoundStmt 0xc62640 <col:45, col:62>
| | |   `-ReturnStmt 0xc62630 <col:47, col:59>
| | |     `-CXXScalarValueInitExpr 0xc62618 <col:54, col:59> 'char'
| | |-CXXMethodDecl 0xc5e830 <line:499:7, line:500:58> col:7 constexpr quiet_NaN 'char () noexcept' static
| | | `-CompoundStmt 0xc62690 <col:41, col:58>
| | |   `-ReturnStmt 0xc62680 <col:43, col:55>
| | |     `-CXXScalarValueInitExpr 0xc62668 <col:50, col:55> 'char'
| | |-CXXMethodDecl 0xc5e8f8 <line:502:7, line:503:62> col:7 constexpr signaling_NaN 'char () noexcept' static
| | | `-CompoundStmt 0xc626e0 <col:45, col:62>
| | |   `-ReturnStmt 0xc626d0 <col:47, col:59>
| | |     `-CXXScalarValueInitExpr 0xc626b8 <col:54, col:59> 'char'
| | |-CXXMethodDecl 0xc5e9c0 <line:505:7, line:506:73> col:7 constexpr denorm_min 'char () noexcept' static
| | | `-CompoundStmt 0xc62780 <col:42, col:73>
| | |   `-ReturnStmt 0xc62770 <col:44, col:70>
| | |     `-CXXStaticCastExpr 0xc62740 <col:51, col:70> 'char' static_cast<char> <NoOp>
| | |       `-ImplicitCastExpr 0xc62728 <col:69> 'char' <IntegralCast> part_of_explicit_cast
| | |         `-IntegerLiteral 0xc626f8 <col:69> 'int' 0
| | |-VarDecl 0xc5ea70 <line:508:7, col:54> col:42 is_iec559 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc5ead8 <col:54> 'bool' false
| | |-VarDecl 0xc5eb50 <line:509:7, col:55> col:42 is_bounded 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc5ebb8 <col:55> 'bool' true
| | |-VarDecl 0xc5ec30 <line:510:7, col:55> col:42 is_modulo 'const bool' static constexpr cinit
| | | `-UnaryOperator 0xc5ecf0 <col:54, col:55> 'bool' prefix '!' cannot overflow
| | |   `-ImplicitCastExpr 0xc5ecd8 <col:55> 'bool' <LValueToRValue>
| | |     `-DeclRefExpr 0xc5ecb8 <col:55> 'const bool' lvalue Var 0xc5d8a8 'is_signed' 'const bool' non_odr_use_constant
| | |-VarDecl 0xc5ed70 <line:512:7, line:80:35> line:512:42 traps 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc5edd8 <line:80:35> 'bool' true
| | |-VarDecl 0xc61248 <line:513:7, col:60> col:42 tinyness_before 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc612b0 <col:60> 'bool' false
| | `-VarDecl 0xc61328 <line:514:7, line:515:10> line:514:55 round_style 'const std::float_round_style' static constexpr cinit
| |   `-DeclRefExpr 0xc61390 <line:515:10> 'std::float_round_style' EnumConstant 0xc54560 'round_toward_zero' 'std::float_round_style'
| |-ClassTemplateSpecializationDecl 0xc627c8 <line:519:3, line:586:5> line:520:12 struct numeric_limits definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'signed char'
| | |-CXXRecordDecl 0xc629e8 <col:5, col:12> col:12 implicit struct numeric_limits
| | |-VarDecl 0xc62a88 <line:522:7, col:59> col:42 is_specialized 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc62af0 <col:59> 'bool' true
| | |-CXXMethodDecl 0xc62c18 <line:524:7, line:525:64> col:7 used constexpr min 'signed char () noexcept' static
| | | `-CompoundStmt 0xc64d30 <col:35, col:64>
| | |   `-ReturnStmt 0xc64d20 <col:37, col:61>
| | |     `-ImplicitCastExpr 0xc64d08 <col:44, col:61> 'signed char' <IntegralCast>
| | |       `-BinaryOperator 0xc64ce8 <col:44, col:61> 'int' '-'
| | |         |-UnaryOperator 0xc64cb0 <col:44, <built-in>:72:23> 'int' prefix '-'
| | |         | `-IntegerLiteral 0xc64c90 <col:23> 'int' 127
| | |         `-IntegerLiteral 0xc64cc8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:525:61> 'int' 1
| | |-CXXMethodDecl 0xc62ce8 <line:527:7, line:528:59> col:7 constexpr max 'signed char () noexcept' static
| | | `-CompoundStmt 0xc64d90 <col:35, col:59>
| | |   `-ReturnStmt 0xc64d80 <col:37, <built-in>:72:23>
| | |     `-ImplicitCastExpr 0xc64d68 <col:23> 'signed char' <IntegralCast>
| | |       `-IntegerLiteral 0xc64d48 <col:23> 'int' 127
| | |-CXXMethodDecl 0xc62db8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:531:7, line:532:41> col:7 constexpr lowest 'signed char () noexcept' static
| | | `-CompoundStmt 0xc64e70 <col:25, col:41>
| | |   `-ReturnStmt 0xc64e60 <col:27, col:38>
| | |     `-CallExpr 0xc64e40 <col:34, col:38> 'signed char'
| | |       `-ImplicitCastExpr 0xc64e28 <col:34> 'signed char (*)() noexcept' <FunctionToPointerDecay>
| | |         `-DeclRefExpr 0xc64da8 <col:34> 'signed char () noexcept' lvalue CXXMethod 0xc62c18 'min' 'signed char () noexcept'
| | |-VarDecl 0xc62e70 <line:535:7, line:138:32> line:535:41 digits 'const int' static constexpr cinit
| | | `-ImplicitCastExpr 0xc63108 <line:138:3, col:32> 'const int' <IntegralCast>
| | |   `-ParenExpr 0xc630e8 <col:3, col:32> 'unsigned long'
| | |     `-BinaryOperator 0xc630c8 <line:151:26, line:128:45> 'unsigned long' '-'
| | |       |-BinaryOperator 0xc62f48 <line:151:26, <built-in>:71:22> 'unsigned long' '*'
| | |       | |-UnaryExprOrTypeTraitExpr 0xc62ef0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:151:26, col:34> 'unsigned long' sizeof 'signed char'
| | |       | `-ImplicitCastExpr 0xc62f30 <<built-in>:71:22> 'unsigned long' <IntegralCast>
| | |       |   `-IntegerLiteral 0xc62f10 <col:22> 'int' 8
| | |       `-ImplicitCastExpr 0xc630b0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:128:33, col:45> 'unsigned long' <IntegralCast>
| | |         `-ParenExpr 0xc63090 <col:33, col:45> 'bool'
| | |           `-BinaryOperator 0xc63070 <col:34, col:44> 'bool' '<'
| | |             |-ImplicitCastExpr 0xc63058 <col:34, col:40> 'int' <IntegralCast>
| | |             | `-CStyleCastExpr 0xc63010 <col:34, col:40> 'signed char' <NoOp>
| | |             |   `-ImplicitCastExpr 0xc62ff8 <col:37, col:40> 'signed char' <IntegralCast> part_of_explicit_cast
| | |             |     `-ParenExpr 0xc62fd8 <col:37, col:40> 'int'
| | |             |       `-UnaryOperator 0xc62f88 <col:38, col:39> 'int' prefix '-'
| | |             |         `-IntegerLiteral 0xc62f68 <col:39> 'int' 1
| | |             `-IntegerLiteral 0xc63038 <col:44> 'int' 0
| | |-VarDecl 0xc63190 <line:536:7, line:142:42> line:536:41 digits10 'const int' static constexpr cinit
| | | `-ImplicitCastExpr 0xc634f8 <line:142:3, col:42> 'const int' <IntegralCast>
| | |   `-ParenExpr 0xc634d8 <col:3, col:42> 'unsigned long'
| | |     `-BinaryOperator 0xc634b8 <line:138:3, line:142:38> 'unsigned long' '/'
| | |       |-BinaryOperator 0xc63460 <line:138:3, line:142:31> 'unsigned long' '*'
| | |       | |-ParenExpr 0xc63408 <line:138:3, col:32> 'unsigned long'
| | |       | | `-BinaryOperator 0xc633e8 <line:153:28, line:128:45> 'unsigned long' '-'
| | |       | |   |-BinaryOperator 0xc63268 <line:153:28, <built-in>:71:22> 'unsigned long' '*'
| | |       | |   | |-UnaryExprOrTypeTraitExpr 0xc63210 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:153:28, col:36> 'unsigned long' sizeof 'signed char'
| | |       | |   | `-ImplicitCastExpr 0xc63250 <<built-in>:71:22> 'unsigned long' <IntegralCast>
| | |       | |   |   `-IntegerLiteral 0xc63230 <col:22> 'int' 8
| | |       | |   `-ImplicitCastExpr 0xc633d0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:128:33, col:45> 'unsigned long' <IntegralCast>
| | |       | |     `-ParenExpr 0xc633b0 <col:33, col:45> 'bool'
| | |       | |       `-BinaryOperator 0xc63390 <col:34, col:44> 'bool' '<'
| | |       | |         |-ImplicitCastExpr 0xc63378 <col:34, col:40> 'int' <IntegralCast>
| | |       | |         | `-CStyleCastExpr 0xc63330 <col:34, col:40> 'signed char' <NoOp>
| | |       | |         |   `-ImplicitCastExpr 0xc63318 <col:37, col:40> 'signed char' <IntegralCast> part_of_explicit_cast
| | |       | |         |     `-ParenExpr 0xc632f8 <col:37, col:40> 'int'
| | |       | |         |       `-UnaryOperator 0xc632a8 <col:38, col:39> 'int' prefix '-'
| | |       | |         |         `-IntegerLiteral 0xc63288 <col:39> 'int' 1
| | |       | |         `-IntegerLiteral 0xc63358 <col:44> 'int' 0
| | |       | `-ImplicitCastExpr 0xc63448 <line:142:31> 'unsigned long' <IntegralCast>
| | |       |   `-IntegerLiteral 0xc63428 <col:31> 'long' 643
| | |       `-ImplicitCastExpr 0xc634a0 <col:38> 'unsigned long' <IntegralCast>
| | |         `-IntegerLiteral 0xc63480 <col:38> 'int' 2136
| | |-VarDecl 0xc63580 <line:539:7, col:43> col:28 max_digits10 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc635e8 <col:43> 'int' 0
| | |-VarDecl 0xc63670 <line:541:7, col:54> col:42 is_signed 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc636d8 <col:54> 'bool' true
| | |-VarDecl 0xc63750 <line:542:7, col:55> col:42 is_integer 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc637b8 <col:55> 'bool' true
| | |-VarDecl 0xc63830 <line:543:7, col:53> col:42 is_exact 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc63898 <col:53> 'bool' true
| | |-VarDecl 0xc63918 <line:544:7, col:49> col:41 radix 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc63980 <col:49> 'int' 2
| | |-CXXMethodDecl 0xc63a28 <line:546:7, line:547:51> col:7 constexpr epsilon 'signed char () noexcept' static
| | | `-CompoundStmt 0xc64ed0 <col:39, col:51>
| | |   `-ReturnStmt 0xc64ec0 <col:41, col:48>
| | |     `-ImplicitCastExpr 0xc64ea8 <col:48> 'signed char' <IntegralCast>
| | |       `-IntegerLiteral 0xc64e88 <col:48> 'int' 0
| | |-CXXMethodDecl 0xc63af8 <line:549:7, line:550:55> col:7 constexpr round_error 'signed char () noexcept' static
| | | `-CompoundStmt 0xc64f30 <col:43, col:55>
| | |   `-ReturnStmt 0xc64f20 <col:45, col:52>
| | |     `-ImplicitCastExpr 0xc64f08 <col:52> 'signed char' <IntegralCast>
| | |       `-IntegerLiteral 0xc64ee8 <col:52> 'int' 0
| | |-VarDecl 0xc63bb0 <line:552:7, col:56> col:41 min_exponent 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc63c18 <col:56> 'int' 0
| | |-VarDecl 0xc63ca8 <line:553:7, col:58> col:41 min_exponent10 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc63d10 <col:58> 'int' 0
| | |-VarDecl 0xc63da0 <line:554:7, col:56> col:41 max_exponent 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc63e08 <col:56> 'int' 0
| | |-VarDecl 0xc63e98 <line:555:7, col:58> col:41 max_exponent10 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc63f00 <col:58> 'int' 0
| | |-VarDecl 0xc63f88 <line:557:7, col:57> col:42 has_infinity 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc63ff0 <col:57> 'bool' false
| | |-VarDecl 0xc64068 <line:558:7, col:58> col:42 has_quiet_NaN 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc640d0 <col:58> 'bool' false
| | |-VarDecl 0xc64148 <line:559:7, col:62> col:42 has_signaling_NaN 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc641b0 <col:62> 'bool' false
| | |-VarDecl 0xc64228 <line:560:7, line:561:10> line:560:56 has_denorm 'const std::float_denorm_style' static constexpr cinit
| | | `-DeclRefExpr 0xc64290 <line:561:10> 'std::float_denorm_style' EnumConstant 0xc54908 'denorm_absent' 'std::float_denorm_style'
| | |-VarDecl 0xc64318 <line:562:7, col:60> col:42 has_denorm_loss 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc64380 <col:60> 'bool' false
| | |-CXXMethodDecl 0xc64418 <line:564:7, line:565:78> col:7 constexpr infinity 'signed char () noexcept' static
| | | `-CompoundStmt 0xc64fd8 <col:40, col:78>
| | |   `-ReturnStmt 0xc64fc8 <col:42, col:75>
| | |     `-CXXStaticCastExpr 0xc64f98 <col:49, col:75> 'signed char' static_cast<signed char> <NoOp>
| | |       `-ImplicitCastExpr 0xc64f80 <col:74> 'signed char' <IntegralCast> part_of_explicit_cast
| | |         `-IntegerLiteral 0xc64f48 <col:74> 'int' 0
| | |-CXXMethodDecl 0xc644e8 <line:567:7, line:568:79> col:7 constexpr quiet_NaN 'signed char () noexcept' static
| | | `-CompoundStmt 0xc65080 <col:41, col:79>
| | |   `-ReturnStmt 0xc65070 <col:43, col:76>
| | |     `-CXXStaticCastExpr 0xc65040 <col:50, col:76> 'signed char' static_cast<signed char> <NoOp>
| | |       `-ImplicitCastExpr 0xc65028 <col:75> 'signed char' <IntegralCast> part_of_explicit_cast
| | |         `-IntegerLiteral 0xc64ff0 <col:75> 'int' 0
| | |-CXXMethodDecl 0xc645b8 <line:570:7, line:572:45> line:571:7 constexpr signaling_NaN 'signed char () noexcept' static
| | | `-CompoundStmt 0xc65128 <line:572:7, col:45>
| | |   `-ReturnStmt 0xc65118 <col:9, col:42>
| | |     `-CXXStaticCastExpr 0xc650e8 <col:16, col:42> 'signed char' static_cast<signed char> <NoOp>
| | |       `-ImplicitCastExpr 0xc650d0 <col:41> 'signed char' <IntegralCast> part_of_explicit_cast
| | |         `-IntegerLiteral 0xc65098 <col:41> 'int' 0
| | |-CXXMethodDecl 0xc64688 <line:574:7, line:576:45> line:575:7 constexpr denorm_min 'signed char () noexcept' static
| | | `-CompoundStmt 0xc651f0 <line:576:7, col:45>
| | |   `-ReturnStmt 0xc651c0 <col:9, col:42>
| | |     `-CXXStaticCastExpr 0xc65190 <col:16, col:42> 'signed char' static_cast<signed char> <NoOp>
| | |       `-ImplicitCastExpr 0xc65178 <col:41> 'signed char' <IntegralCast> part_of_explicit_cast
| | |         `-IntegerLiteral 0xc65140 <col:41> 'int' 0
| | |-VarDecl 0xc64738 <line:578:7, col:54> col:42 is_iec559 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc647a0 <col:54> 'bool' false
| | |-VarDecl 0xc64818 <line:579:7, col:55> col:42 is_bounded 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc64880 <col:55> 'bool' true
| | |-VarDecl 0xc648f8 <line:580:7, col:54> col:42 is_modulo 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc64960 <col:54> 'bool' false
| | |-VarDecl 0xc649d8 <line:582:7, line:80:35> line:582:42 traps 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc64a40 <line:80:35> 'bool' true
| | |-VarDecl 0xc64ab8 <line:583:7, col:60> col:42 tinyness_before 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc64b20 <col:60> 'bool' false
| | `-VarDecl 0xc64b98 <line:584:7, line:585:10> line:584:55 round_style 'const std::float_round_style' static constexpr cinit
| |   `-DeclRefExpr 0xc64c00 <line:585:10> 'std::float_round_style' EnumConstant 0xc54560 'round_toward_zero' 'std::float_round_style'
| |-ClassTemplateSpecializationDecl 0xc65238 <line:589:3, line:659:5> line:590:12 struct numeric_limits definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'unsigned char'
| | |-CXXRecordDecl 0xc65458 <col:5, col:12> col:12 implicit struct numeric_limits
| | |-VarDecl 0xc654f8 <line:592:7, col:59> col:42 is_specialized 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc65560 <col:59> 'bool' true
| | |-CXXMethodDecl 0xc65688 <line:594:7, line:595:47> col:7 used constexpr min 'unsigned char () noexcept' static
| | | `-CompoundStmt 0xc67748 <col:35, col:47>
| | |   `-ReturnStmt 0xc67738 <col:37, col:44>
| | |     `-ImplicitCastExpr 0xc67720 <col:44> 'unsigned char' <IntegralCast>
| | |       `-IntegerLiteral 0xc67700 <col:44> 'int' 0
| | |-CXXMethodDecl 0xc65758 <line:597:7, line:598:68> col:7 constexpr max 'unsigned char () noexcept' static
| | | `-CompoundStmt 0xc67858 <col:35, col:68>
| | |   `-ReturnStmt 0xc67848 <col:37, col:65>
| | |     `-ImplicitCastExpr 0xc67830 <<built-in>:72:23, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:598:65> 'unsigned char' <IntegralCast>
| | |       `-BinaryOperator 0xc67810 <<built-in>:72:23, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:598:65> 'unsigned int' '+'
| | |         |-BinaryOperator 0xc677b8 <<built-in>:72:23, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:598:60> 'unsigned int' '*'
| | |         | |-ImplicitCastExpr 0xc677a0 <<built-in>:72:23> 'unsigned int' <IntegralCast>
| | |         | | `-IntegerLiteral 0xc67760 <col:23> 'int' 127
| | |         | `-IntegerLiteral 0xc67780 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:598:60> 'unsigned int' 2
| | |         `-ImplicitCastExpr 0xc677f8 <col:65> 'unsigned int' <IntegralCast>
| | |           `-IntegerLiteral 0xc677d8 <col:65> 'int' 1
| | |-CXXMethodDecl 0xc65828 <line:601:7, line:602:41> col:7 constexpr lowest 'unsigned char () noexcept' static
| | | `-CompoundStmt 0xc67930 <col:25, col:41>
| | |   `-ReturnStmt 0xc67920 <col:27, col:38>
| | |     `-CallExpr 0xc67900 <col:34, col:38> 'unsigned char'
| | |       `-ImplicitCastExpr 0xc678e8 <col:34> 'unsigned char (*)() noexcept' <FunctionToPointerDecay>
| | |         `-DeclRefExpr 0xc67870 <col:34> 'unsigned char () noexcept' lvalue CXXMethod 0xc65688 'min' 'unsigned char () noexcept'
| | |-VarDecl 0xc658e0 <line:605:7, line:138:32> line:605:41 digits 'const int' static constexpr cinit
| | | `-ImplicitCastExpr 0xc65b78 <line:138:3, col:32> 'const int' <IntegralCast>
| | |   `-ParenExpr 0xc65b58 <col:3, col:32> 'unsigned long'
| | |     `-BinaryOperator 0xc65b38 <line:151:26, line:128:45> 'unsigned long' '-'
| | |       |-BinaryOperator 0xc659b8 <line:151:26, <built-in>:71:22> 'unsigned long' '*'
| | |       | |-UnaryExprOrTypeTraitExpr 0xc65960 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:151:26, col:34> 'unsigned long' sizeof 'unsigned char'
| | |       | `-ImplicitCastExpr 0xc659a0 <<built-in>:71:22> 'unsigned long' <IntegralCast>
| | |       |   `-IntegerLiteral 0xc65980 <col:22> 'int' 8
| | |       `-ImplicitCastExpr 0xc65b20 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:128:33, col:45> 'unsigned long' <IntegralCast>
| | |         `-ParenExpr 0xc65b00 <col:33, col:45> 'bool'
| | |           `-BinaryOperator 0xc65ae0 <col:34, col:44> 'bool' '<'
| | |             |-ImplicitCastExpr 0xc65ac8 <col:34, col:40> 'int' <IntegralCast>
| | |             | `-CStyleCastExpr 0xc65a80 <col:34, col:40> 'unsigned char' <NoOp>
| | |             |   `-ImplicitCastExpr 0xc65a68 <col:37, col:40> 'unsigned char' <IntegralCast> part_of_explicit_cast
| | |             |     `-ParenExpr 0xc65a48 <col:37, col:40> 'int'
| | |             |       `-UnaryOperator 0xc659f8 <col:38, col:39> 'int' prefix '-'
| | |             |         `-IntegerLiteral 0xc659d8 <col:39> 'int' 1
| | |             `-IntegerLiteral 0xc65aa8 <col:44> 'int' 0
| | |-VarDecl 0xc65c00 <line:607:7, line:142:42> line:607:41 digits10 'const int' static constexpr cinit
| | | `-ImplicitCastExpr 0xc65f68 <line:142:3, col:42> 'const int' <IntegralCast>
| | |   `-ParenExpr 0xc65f48 <col:3, col:42> 'unsigned long'
| | |     `-BinaryOperator 0xc65f28 <line:138:3, line:142:38> 'unsigned long' '/'
| | |       |-BinaryOperator 0xc65ed0 <line:138:3, line:142:31> 'unsigned long' '*'
| | |       | |-ParenExpr 0xc65e78 <line:138:3, col:32> 'unsigned long'
| | |       | | `-BinaryOperator 0xc65e58 <line:153:28, line:128:45> 'unsigned long' '-'
| | |       | |   |-BinaryOperator 0xc65cd8 <line:153:28, <built-in>:71:22> 'unsigned long' '*'
| | |       | |   | |-UnaryExprOrTypeTraitExpr 0xc65c80 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:153:28, col:36> 'unsigned long' sizeof 'unsigned char'
| | |       | |   | `-ImplicitCastExpr 0xc65cc0 <<built-in>:71:22> 'unsigned long' <IntegralCast>
| | |       | |   |   `-IntegerLiteral 0xc65ca0 <col:22> 'int' 8
| | |       | |   `-ImplicitCastExpr 0xc65e40 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:128:33, col:45> 'unsigned long' <IntegralCast>
| | |       | |     `-ParenExpr 0xc65e20 <col:33, col:45> 'bool'
| | |       | |       `-BinaryOperator 0xc65e00 <col:34, col:44> 'bool' '<'
| | |       | |         |-ImplicitCastExpr 0xc65de8 <col:34, col:40> 'int' <IntegralCast>
| | |       | |         | `-CStyleCastExpr 0xc65da0 <col:34, col:40> 'unsigned char' <NoOp>
| | |       | |         |   `-ImplicitCastExpr 0xc65d88 <col:37, col:40> 'unsigned char' <IntegralCast> part_of_explicit_cast
| | |       | |         |     `-ParenExpr 0xc65d68 <col:37, col:40> 'int'
| | |       | |         |       `-UnaryOperator 0xc65d18 <col:38, col:39> 'int' prefix '-'
| | |       | |         |         `-IntegerLiteral 0xc65cf8 <col:39> 'int' 1
| | |       | |         `-IntegerLiteral 0xc65dc8 <col:44> 'int' 0
| | |       | `-ImplicitCastExpr 0xc65eb8 <line:142:31> 'unsigned long' <IntegralCast>
| | |       |   `-IntegerLiteral 0xc65e98 <col:31> 'long' 643
| | |       `-ImplicitCastExpr 0xc65f10 <col:38> 'unsigned long' <IntegralCast>
| | |         `-IntegerLiteral 0xc65ef0 <col:38> 'int' 2136
| | |-VarDecl 0xc65ff0 <line:610:7, col:43> col:28 max_digits10 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc66058 <col:43> 'int' 0
| | |-VarDecl 0xc660e0 <line:612:7, col:54> col:42 is_signed 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc66148 <col:54> 'bool' false
| | |-VarDecl 0xc661c0 <line:613:7, col:55> col:42 is_integer 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc66228 <col:55> 'bool' true
| | |-VarDecl 0xc662a0 <line:614:7, col:53> col:42 is_exact 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc66308 <col:53> 'bool' true
| | |-VarDecl 0xc66388 <line:615:7, col:49> col:41 radix 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc663f0 <col:49> 'int' 2
| | |-CXXMethodDecl 0xc66498 <line:617:7, line:618:51> col:7 constexpr epsilon 'unsigned char () noexcept' static
| | | `-CompoundStmt 0xc67990 <col:39, col:51>
| | |   `-ReturnStmt 0xc67980 <col:41, col:48>
| | |     `-ImplicitCastExpr 0xc67968 <col:48> 'unsigned char' <IntegralCast>
| | |       `-IntegerLiteral 0xc67948 <col:48> 'int' 0
| | |-CXXMethodDecl 0xc66568 <line:620:7, line:621:55> col:7 constexpr round_error 'unsigned char () noexcept' static
| | | `-CompoundStmt 0xc679f0 <col:43, col:55>
| | |   `-ReturnStmt 0xc679e0 <col:45, col:52>
| | |     `-ImplicitCastExpr 0xc679c8 <col:52> 'unsigned char' <IntegralCast>
| | |       `-IntegerLiteral 0xc679a8 <col:52> 'int' 0
| | |-VarDecl 0xc66620 <line:623:7, col:56> col:41 min_exponent 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc66688 <col:56> 'int' 0
| | |-VarDecl 0xc66718 <line:624:7, col:58> col:41 min_exponent10 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc66780 <col:58> 'int' 0
| | |-VarDecl 0xc66810 <line:625:7, col:56> col:41 max_exponent 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc66878 <col:56> 'int' 0
| | |-VarDecl 0xc66908 <line:626:7, col:58> col:41 max_exponent10 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc66970 <col:58> 'int' 0
| | |-VarDecl 0xc669f8 <line:628:7, col:57> col:42 has_infinity 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc66a60 <col:57> 'bool' false
| | |-VarDecl 0xc66ad8 <line:629:7, col:58> col:42 has_quiet_NaN 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc66b40 <col:58> 'bool' false
| | |-VarDecl 0xc66bb8 <line:630:7, col:62> col:42 has_signaling_NaN 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc66c20 <col:62> 'bool' false
| | |-VarDecl 0xc66c98 <line:631:7, line:632:10> line:631:56 has_denorm 'const std::float_denorm_style' static constexpr cinit
| | | `-DeclRefExpr 0xc66d00 <line:632:10> 'std::float_denorm_style' EnumConstant 0xc54908 'denorm_absent' 'std::float_denorm_style'
| | |-VarDecl 0xc66d88 <line:633:7, col:60> col:42 has_denorm_loss 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc66df0 <col:60> 'bool' false
| | |-CXXMethodDecl 0xc66e88 <line:635:7, line:637:47> line:636:7 constexpr infinity 'unsigned char () noexcept' static
| | | `-CompoundStmt 0xc67a98 <line:637:7, col:47>
| | |   `-ReturnStmt 0xc67a88 <col:9, col:44>
| | |     `-CXXStaticCastExpr 0xc67a58 <col:16, col:44> 'unsigned char' static_cast<unsigned char> <NoOp>
| | |       `-ImplicitCastExpr 0xc67a40 <col:43> 'unsigned char' <IntegralCast> part_of_explicit_cast
| | |         `-IntegerLiteral 0xc67a08 <col:43> 'int' 0
| | |-CXXMethodDecl 0xc66f58 <line:639:7, line:641:47> line:640:7 constexpr quiet_NaN 'unsigned char () noexcept' static
| | | `-CompoundStmt 0xc67b40 <line:641:7, col:47>
| | |   `-ReturnStmt 0xc67b30 <col:9, col:44>
| | |     `-CXXStaticCastExpr 0xc67b00 <col:16, col:44> 'unsigned char' static_cast<unsigned char> <NoOp>
| | |       `-ImplicitCastExpr 0xc67ae8 <col:43> 'unsigned char' <IntegralCast> part_of_explicit_cast
| | |         `-IntegerLiteral 0xc67ab0 <col:43> 'int' 0
| | |-CXXMethodDecl 0xc67028 <line:643:7, line:645:47> line:644:7 constexpr signaling_NaN 'unsigned char () noexcept' static
| | | `-CompoundStmt 0xc67be8 <line:645:7, col:47>
| | |   `-ReturnStmt 0xc67bd8 <col:9, col:44>
| | |     `-CXXStaticCastExpr 0xc67ba8 <col:16, col:44> 'unsigned char' static_cast<unsigned char> <NoOp>
| | |       `-ImplicitCastExpr 0xc67b90 <col:43> 'unsigned char' <IntegralCast> part_of_explicit_cast
| | |         `-IntegerLiteral 0xc67b58 <col:43> 'int' 0
| | |-CXXMethodDecl 0xc670f8 <line:647:7, line:649:47> line:648:7 constexpr denorm_min 'unsigned char () noexcept' static
| | | `-CompoundStmt 0xc67c90 <line:649:7, col:47>
| | |   `-ReturnStmt 0xc67c80 <col:9, col:44>
| | |     `-CXXStaticCastExpr 0xc67c50 <col:16, col:44> 'unsigned char' static_cast<unsigned char> <NoOp>
| | |       `-ImplicitCastExpr 0xc67c38 <col:43> 'unsigned char' <IntegralCast> part_of_explicit_cast
| | |         `-IntegerLiteral 0xc67c00 <col:43> 'int' 0
| | |-VarDecl 0xc671a8 <line:651:7, col:54> col:42 is_iec559 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc67210 <col:54> 'bool' false
| | |-VarDecl 0xc67288 <line:652:7, col:55> col:42 is_bounded 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc672f0 <col:55> 'bool' true
| | |-VarDecl 0xc67368 <line:653:7, col:54> col:42 is_modulo 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc673d0 <col:54> 'bool' true
| | |-VarDecl 0xc67448 <line:655:7, line:80:35> line:655:42 traps 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc674b0 <line:80:35> 'bool' true
| | |-VarDecl 0xc67528 <line:656:7, col:60> col:42 tinyness_before 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc67590 <col:60> 'bool' false
| | `-VarDecl 0xc67608 <line:657:7, line:658:10> line:657:55 round_style 'const std::float_round_style' static constexpr cinit
| |   `-DeclRefExpr 0xc67670 <line:658:10> 'std::float_round_style' EnumConstant 0xc54560 'round_toward_zero' 'std::float_round_style'
| |-ClassTemplateSpecializationDecl 0xc67cd0 <line:662:3, line:727:5> line:663:12 struct numeric_limits definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'wchar_t'
| | |-CXXRecordDecl 0xc67ee8 <col:5, col:12> col:12 implicit struct numeric_limits
| | |-VarDecl 0xc67f88 <line:665:7, col:59> col:42 is_specialized 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc67ff0 <col:59> 'bool' true
| | |-CXXMethodDecl 0xc68110 <line:667:7, line:668:69> col:7 used constexpr min 'wchar_t () noexcept' static
| | | `-CompoundStmt 0xc6c2c8 <col:35, col:69>
| | |   `-ReturnStmt 0xc6c2b8 <col:37, line:131:64>
| | |     `-ImplicitCastExpr 0xc6c2a0 <col:3, col:64> 'wchar_t' <IntegralCast>
| | |       `-ParenExpr 0xc6c280 <col:3, col:64> 'int'
| | |         `-ConditionalOperator 0xc6c250 <line:128:33, line:131:63> 'int'
| | |           |-ParenExpr 0xc6baa0 <line:128:33, col:45> 'bool'
| | |           | `-BinaryOperator 0xc6ba80 <col:34, col:44> 'bool' '<'
| | |           |   |-ImplicitCastExpr 0xc6ba68 <col:34, col:40> 'int' <IntegralCast>
| | |           |   | `-CStyleCastExpr 0xc6ba20 <col:34, col:40> 'wchar_t' <NoOp>
| | |           |   |   `-ImplicitCastExpr 0xc6ba08 <col:37, col:40> 'wchar_t' <IntegralCast> part_of_explicit_cast
| | |           |   |     `-ParenExpr 0xc6b9e8 <col:37, col:40> 'int'
| | |           |   |       `-UnaryOperator 0xc6b9a0 <col:38, col:39> 'int' prefix '-'
| | |           |   |         `-IntegerLiteral 0xc6b980 <col:39> 'int' 1
| | |           |   `-IntegerLiteral 0xc6ba48 <col:44> 'int' 0
| | |           |-BinaryOperator 0xc6c1a8 <line:131:31, col:56> 'int' '-'
| | |           | |-UnaryOperator 0xc6c170 <col:31, line:135:71> 'int' prefix '-'
| | |           | | `-ParenExpr 0xc6c150 <line:134:3, line:135:71> 'int'
| | |           | |   `-ConditionalOperator 0xc6c120 <line:128:33, line:135:70> 'int'
| | |           | |     |-ParenExpr 0xc6bbe0 <line:128:33, col:45> 'bool'
| | |           | |     | `-BinaryOperator 0xc6bbc0 <col:34, col:44> 'bool' '<'
| | |           | |     |   |-ImplicitCastExpr 0xc6bba8 <col:34, col:40> 'int' <IntegralCast>
| | |           | |     |   | `-CStyleCastExpr 0xc6bb60 <col:34, col:40> 'wchar_t' <NoOp>
| | |           | |     |   |   `-ImplicitCastExpr 0xc6bb48 <col:37, col:40> 'wchar_t' <IntegralCast> part_of_explicit_cast
| | |           | |     |   |     `-ParenExpr 0xc6bb28 <col:37, col:40> 'int'
| | |           | |     |   |       `-UnaryOperator 0xc6bae0 <col:38, col:39> 'int' prefix '-'
| | |           | |     |   |         `-IntegerLiteral 0xc6bac0 <col:39> 'int' 1
| | |           | |     |   `-IntegerLiteral 0xc6bb88 <col:44> 'int' 0
| | |           | |     |-ParenExpr 0xc6c060 <line:135:4, col:62> 'int'
| | |           | |     | `-BinaryOperator 0xc6c040 <col:5, col:61> 'int' '+'
| | |           | |     |   |-ParenExpr 0xc6c000 <col:5, col:57> 'int'
| | |           | |     |   | `-BinaryOperator 0xc6bfe0 <col:6, col:56> 'int' '<<'
| | |           | |     |   |   |-ParenExpr 0xc6bfa0 <col:6, col:51> 'int'
| | |           | |     |   |   | `-BinaryOperator 0xc6bf80 <col:7, col:50> 'int' '-'
| | |           | |     |   |   |   |-ParenExpr 0xc6bf40 <col:7, col:46> 'int'
| | |           | |     |   |   |   | `-BinaryOperator 0xc6bf20 <col:8, col:45> 'int' '<<'
| | |           | |     |   |   |   |   |-ImplicitCastExpr 0xc6bf08 <col:8, col:11> 'int' <IntegralCast>
| | |           | |     |   |   |   |   | `-CStyleCastExpr 0xc6bc48 <col:8, col:11> 'wchar_t' <NoOp>
| | |           | |     |   |   |   |   |   `-ImplicitCastExpr 0xc6bc30 <col:11> 'wchar_t' <IntegralCast> part_of_explicit_cast
| | |           | |     |   |   |   |   |     `-IntegerLiteral 0xc6bc00 <col:11> 'int' 1
| | |           | |     |   |   |   |   `-ParenExpr 0xc6bee8 <col:16, col:45> 'unsigned long'
| | |           | |     |   |   |   |     `-BinaryOperator 0xc6bec8 <line:138:3, line:135:44> 'unsigned long' '-'
| | |           | |     |   |   |   |       |-ParenExpr 0xc6be70 <line:138:3, col:32> 'unsigned long'
| | |           | |     |   |   |   |       | `-BinaryOperator 0xc6be50 <line:147:23, line:128:45> 'unsigned long' '-'
| | |           | |     |   |   |   |       |   |-BinaryOperator 0xc6bcd8 <line:147:23, <built-in>:71:22> 'unsigned long' '*'
| | |           | |     |   |   |   |       |   | |-UnaryExprOrTypeTraitExpr 0xc6bc80 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:147:23, col:31> 'unsigned long' sizeof 'wchar_t'
| | |           | |     |   |   |   |       |   | `-ImplicitCastExpr 0xc6bcc0 <<built-in>:71:22> 'unsigned long' <IntegralCast>
| | |           | |     |   |   |   |       |   |   `-IntegerLiteral 0xc6bca0 <col:22> 'int' 8
| | |           | |     |   |   |   |       |   `-ImplicitCastExpr 0xc6be38 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:128:33, col:45> 'unsigned long' <IntegralCast>
| | |           | |     |   |   |   |       |     `-ParenExpr 0xc6be18 <col:33, col:45> 'bool'
| | |           | |     |   |   |   |       |       `-BinaryOperator 0xc6bdf8 <col:34, col:44> 'bool' '<'
| | |           | |     |   |   |   |       |         |-ImplicitCastExpr 0xc6bde0 <col:34, col:40> 'int' <IntegralCast>
| | |           | |     |   |   |   |       |         | `-CStyleCastExpr 0xc6bd98 <col:34, col:40> 'wchar_t' <NoOp>
| | |           | |     |   |   |   |       |         |   `-ImplicitCastExpr 0xc6bd80 <col:37, col:40> 'wchar_t' <IntegralCast> part_of_explicit_cast
| | |           | |     |   |   |   |       |         |     `-ParenExpr 0xc6bd60 <col:37, col:40> 'int'
| | |           | |     |   |   |   |       |         |       `-UnaryOperator 0xc6bd18 <col:38, col:39> 'int' prefix '-'
| | |           | |     |   |   |   |       |         |         `-IntegerLiteral 0xc6bcf8 <col:39> 'int' 1
| | |           | |     |   |   |   |       |         `-IntegerLiteral 0xc6bdc0 <col:44> 'int' 0
| | |           | |     |   |   |   |       `-ImplicitCastExpr 0xc6beb0 <line:135:44> 'unsigned long' <IntegralCast>
| | |           | |     |   |   |   |         `-IntegerLiteral 0xc6be90 <col:44> 'int' 1
| | |           | |     |   |   |   `-IntegerLiteral 0xc6bf60 <col:50> 'int' 1
| | |           | |     |   |   `-IntegerLiteral 0xc6bfc0 <col:56> 'int' 1
| | |           | |     |   `-IntegerLiteral 0xc6c020 <col:61> 'int' 1
| | |           | |     `-UnaryOperator 0xc6c108 <col:66, col:70> 'int' prefix '~' cannot overflow
| | |           | |       `-ImplicitCastExpr 0xc6c0f0 <col:67, col:70> 'int' <IntegralCast>
| | |           | |         `-CStyleCastExpr 0xc6c0c8 <col:67, col:70> 'wchar_t' <NoOp>
| | |           | |           `-ImplicitCastExpr 0xc6c0b0 <col:70> 'wchar_t' <IntegralCast> part_of_explicit_cast
| | |           | |             `-IntegerLiteral 0xc6c080 <col:70> 'int' 0
| | |           | `-IntegerLiteral 0xc6c188 <line:131:56> 'int' 1
| | |           `-ImplicitCastExpr 0xc6c238 <col:60, col:63> 'int' <IntegralCast>
| | |             `-CStyleCastExpr 0xc6c210 <col:60, col:63> 'wchar_t' <NoOp>
| | |               `-ImplicitCastExpr 0xc6c1f8 <col:63> 'wchar_t' <IntegralCast> part_of_explicit_cast
| | |                 `-IntegerLiteral 0xc6c1c8 <col:63> 'int' 0
| | |-CXXMethodDecl 0xc681d8 <line:670:7, line:671:69> col:7 constexpr max 'wchar_t () noexcept' static
| | | `-CompoundStmt 0xc6c9b8 <col:35, col:69>
| | |   `-ReturnStmt 0xc6c9a8 <col:37, line:135:71>
| | |     `-ImplicitCastExpr 0xc6c990 <line:134:3, line:135:71> 'wchar_t' <IntegralCast>
| | |       `-ParenExpr 0xc6c970 <line:134:3, line:135:71> 'int'
| | |         `-ConditionalOperator 0xc6c940 <line:128:33, line:135:70> 'int'
| | |           |-ParenExpr 0xc6c400 <line:128:33, col:45> 'bool'
| | |           | `-BinaryOperator 0xc6c3e0 <col:34, col:44> 'bool' '<'
| | |           |   |-ImplicitCastExpr 0xc6c3c8 <col:34, col:40> 'int' <IntegralCast>
| | |           |   | `-CStyleCastExpr 0xc6c380 <col:34, col:40> 'wchar_t' <NoOp>
| | |           |   |   `-ImplicitCastExpr 0xc6c368 <col:37, col:40> 'wchar_t' <IntegralCast> part_of_explicit_cast
| | |           |   |     `-ParenExpr 0xc6c348 <col:37, col:40> 'int'
| | |           |   |       `-UnaryOperator 0xc6c300 <col:38, col:39> 'int' prefix '-'
| | |           |   |         `-IntegerLiteral 0xc6c2e0 <col:39> 'int' 1
| | |           |   `-IntegerLiteral 0xc6c3a8 <col:44> 'int' 0
| | |           |-ParenExpr 0xc6c880 <line:135:4, col:62> 'int'
| | |           | `-BinaryOperator 0xc6c860 <col:5, col:61> 'int' '+'
| | |           |   |-ParenExpr 0xc6c820 <col:5, col:57> 'int'
| | |           |   | `-BinaryOperator 0xc6c800 <col:6, col:56> 'int' '<<'
| | |           |   |   |-ParenExpr 0xc6c7c0 <col:6, col:51> 'int'
| | |           |   |   | `-BinaryOperator 0xc6c7a0 <col:7, col:50> 'int' '-'
| | |           |   |   |   |-ParenExpr 0xc6c760 <col:7, col:46> 'int'
| | |           |   |   |   | `-BinaryOperator 0xc6c740 <col:8, col:45> 'int' '<<'
| | |           |   |   |   |   |-ImplicitCastExpr 0xc6c728 <col:8, col:11> 'int' <IntegralCast>
| | |           |   |   |   |   | `-CStyleCastExpr 0xc6c468 <col:8, col:11> 'wchar_t' <NoOp>
| | |           |   |   |   |   |   `-ImplicitCastExpr 0xc6c450 <col:11> 'wchar_t' <IntegralCast> part_of_explicit_cast
| | |           |   |   |   |   |     `-IntegerLiteral 0xc6c420 <col:11> 'int' 1
| | |           |   |   |   |   `-ParenExpr 0xc6c708 <col:16, col:45> 'unsigned long'
| | |           |   |   |   |     `-BinaryOperator 0xc6c6e8 <line:138:3, line:135:44> 'unsigned long' '-'
| | |           |   |   |   |       |-ParenExpr 0xc6c690 <line:138:3, col:32> 'unsigned long'
| | |           |   |   |   |       | `-BinaryOperator 0xc6c670 <line:149:23, line:128:45> 'unsigned long' '-'
| | |           |   |   |   |       |   |-BinaryOperator 0xc6c4f8 <line:149:23, <built-in>:71:22> 'unsigned long' '*'
| | |           |   |   |   |       |   | |-UnaryExprOrTypeTraitExpr 0xc6c4a0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:149:23, col:31> 'unsigned long' sizeof 'wchar_t'
| | |           |   |   |   |       |   | `-ImplicitCastExpr 0xc6c4e0 <<built-in>:71:22> 'unsigned long' <IntegralCast>
| | |           |   |   |   |       |   |   `-IntegerLiteral 0xc6c4c0 <col:22> 'int' 8
| | |           |   |   |   |       |   `-ImplicitCastExpr 0xc6c658 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:128:33, col:45> 'unsigned long' <IntegralCast>
| | |           |   |   |   |       |     `-ParenExpr 0xc6c638 <col:33, col:45> 'bool'
| | |           |   |   |   |       |       `-BinaryOperator 0xc6c618 <col:34, col:44> 'bool' '<'
| | |           |   |   |   |       |         |-ImplicitCastExpr 0xc6c600 <col:34, col:40> 'int' <IntegralCast>
| | |           |   |   |   |       |         | `-CStyleCastExpr 0xc6c5b8 <col:34, col:40> 'wchar_t' <NoOp>
| | |           |   |   |   |       |         |   `-ImplicitCastExpr 0xc6c5a0 <col:37, col:40> 'wchar_t' <IntegralCast> part_of_explicit_cast
| | |           |   |   |   |       |         |     `-ParenExpr 0xc6c580 <col:37, col:40> 'int'
| | |           |   |   |   |       |         |       `-UnaryOperator 0xc6c538 <col:38, col:39> 'int' prefix '-'
| | |           |   |   |   |       |         |         `-IntegerLiteral 0xc6c518 <col:39> 'int' 1
| | |           |   |   |   |       |         `-IntegerLiteral 0xc6c5e0 <col:44> 'int' 0
| | |           |   |   |   |       `-ImplicitCastExpr 0xc6c6d0 <line:135:44> 'unsigned long' <IntegralCast>
| | |           |   |   |   |         `-IntegerLiteral 0xc6c6b0 <col:44> 'int' 1
| | |           |   |   |   `-IntegerLiteral 0xc6c780 <col:50> 'int' 1
| | |           |   |   `-IntegerLiteral 0xc6c7e0 <col:56> 'int' 1
| | |           |   `-IntegerLiteral 0xc6c840 <col:61> 'int' 1
| | |           `-UnaryOperator 0xc6c928 <col:66, col:70> 'int' prefix '~' cannot overflow
| | |             `-ImplicitCastExpr 0xc6c910 <col:67, col:70> 'int' <IntegralCast>
| | |               `-CStyleCastExpr 0xc6c8e8 <col:67, col:70> 'wchar_t' <NoOp>
| | |                 `-ImplicitCastExpr 0xc6c8d0 <col:70> 'wchar_t' <IntegralCast> part_of_explicit_cast
| | |                   `-IntegerLiteral 0xc6c8a0 <col:70> 'int' 0
| | |-CXXMethodDecl 0xc682a0 <line:674:7, line:675:41> col:7 constexpr lowest 'wchar_t () noexcept' static
| | | `-CompoundStmt 0xc6ca90 <col:25, col:41>
| | |   `-ReturnStmt 0xc6ca80 <col:27, col:38>
| | |     `-CallExpr 0xc6ca60 <col:34, col:38> 'wchar_t'
| | |       `-ImplicitCastExpr 0xc6ca48 <col:34> 'wchar_t (*)() noexcept' <FunctionToPointerDecay>
| | |         `-DeclRefExpr 0xc6c9d0 <col:34> 'wchar_t () noexcept' lvalue CXXMethod 0xc68110 'min' 'wchar_t () noexcept'
| | |-VarDecl 0xc68358 <line:678:7, line:138:32> line:678:41 digits 'const int' static constexpr cinit
| | | `-ImplicitCastExpr 0xc685e0 <line:138:3, col:32> 'const int' <IntegralCast>
| | |   `-ParenExpr 0xc685c0 <col:3, col:32> 'unsigned long'
| | |     `-BinaryOperator 0xc685a0 <line:151:26, line:128:45> 'unsigned long' '-'
| | |       |-BinaryOperator 0xc68428 <line:151:26, <built-in>:71:22> 'unsigned long' '*'
| | |       | |-UnaryExprOrTypeTraitExpr 0xc683d0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:151:26, col:34> 'unsigned long' sizeof 'wchar_t'
| | |       | `-ImplicitCastExpr 0xc68410 <<built-in>:71:22> 'unsigned long' <IntegralCast>
| | |       |   `-IntegerLiteral 0xc683f0 <col:22> 'int' 8
| | |       `-ImplicitCastExpr 0xc68588 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:128:33, col:45> 'unsigned long' <IntegralCast>
| | |         `-ParenExpr 0xc68568 <col:33, col:45> 'bool'
| | |           `-BinaryOperator 0xc68548 <col:34, col:44> 'bool' '<'
| | |             |-ImplicitCastExpr 0xc68530 <col:34, col:40> 'int' <IntegralCast>
| | |             | `-CStyleCastExpr 0xc684e8 <col:34, col:40> 'wchar_t' <NoOp>
| | |             |   `-ImplicitCastExpr 0xc684d0 <col:37, col:40> 'wchar_t' <IntegralCast> part_of_explicit_cast
| | |             |     `-ParenExpr 0xc684b0 <col:37, col:40> 'int'
| | |             |       `-UnaryOperator 0xc68468 <col:38, col:39> 'int' prefix '-'
| | |             |         `-IntegerLiteral 0xc68448 <col:39> 'int' 1
| | |             `-IntegerLiteral 0xc68510 <col:44> 'int' 0
| | |-VarDecl 0xc68668 <line:679:7, line:142:42> line:679:41 digits10 'const int' static constexpr cinit
| | | `-ImplicitCastExpr 0xc689c0 <line:142:3, col:42> 'const int' <IntegralCast>
| | |   `-ParenExpr 0xc689a0 <col:3, col:42> 'unsigned long'
| | |     `-BinaryOperator 0xc68980 <line:138:3, line:142:38> 'unsigned long' '/'
| | |       |-BinaryOperator 0xc68928 <line:138:3, line:142:31> 'unsigned long' '*'
| | |       | |-ParenExpr 0xc688d0 <line:138:3, col:32> 'unsigned long'
| | |       | | `-BinaryOperator 0xc688b0 <line:153:28, line:128:45> 'unsigned long' '-'
| | |       | |   |-BinaryOperator 0xc68738 <line:153:28, <built-in>:71:22> 'unsigned long' '*'
| | |       | |   | |-UnaryExprOrTypeTraitExpr 0xc686e0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:153:28, col:36> 'unsigned long' sizeof 'wchar_t'
| | |       | |   | `-ImplicitCastExpr 0xc68720 <<built-in>:71:22> 'unsigned long' <IntegralCast>
| | |       | |   |   `-IntegerLiteral 0xc68700 <col:22> 'int' 8
| | |       | |   `-ImplicitCastExpr 0xc68898 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:128:33, col:45> 'unsigned long' <IntegralCast>
| | |       | |     `-ParenExpr 0xc68878 <col:33, col:45> 'bool'
| | |       | |       `-BinaryOperator 0xc68858 <col:34, col:44> 'bool' '<'
| | |       | |         |-ImplicitCastExpr 0xc68840 <col:34, col:40> 'int' <IntegralCast>
| | |       | |         | `-CStyleCastExpr 0xc687f8 <col:34, col:40> 'wchar_t' <NoOp>
| | |       | |         |   `-ImplicitCastExpr 0xc687e0 <col:37, col:40> 'wchar_t' <IntegralCast> part_of_explicit_cast
| | |       | |         |     `-ParenExpr 0xc687c0 <col:37, col:40> 'int'
| | |       | |         |       `-UnaryOperator 0xc68778 <col:38, col:39> 'int' prefix '-'
| | |       | |         |         `-IntegerLiteral 0xc68758 <col:39> 'int' 1
| | |       | |         `-IntegerLiteral 0xc68820 <col:44> 'int' 0
| | |       | `-ImplicitCastExpr 0xc68910 <line:142:31> 'unsigned long' <IntegralCast>
| | |       |   `-IntegerLiteral 0xc688f0 <col:31> 'long' 643
| | |       `-ImplicitCastExpr 0xc68968 <col:38> 'unsigned long' <IntegralCast>
| | |         `-IntegerLiteral 0xc68948 <col:38> 'int' 2136
| | |-VarDecl 0xc68a48 <line:682:7, col:43> col:28 max_digits10 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc68ab0 <col:43> 'int' 0
| | |-VarDecl 0xc68b38 <line:684:7, line:128:45> line:684:42 referenced is_signed 'const bool' static constexpr cinit
| | | `-ParenExpr 0xc68cc0 <line:128:33, col:45> 'bool'
| | |   `-BinaryOperator 0xc68ca0 <col:34, col:44> 'bool' '<'
| | |     |-ImplicitCastExpr 0xc68c88 <col:34, col:40> 'int' <IntegralCast>
| | |     | `-CStyleCastExpr 0xc68c40 <col:34, col:40> 'wchar_t' <NoOp>
| | |     |   `-ImplicitCastExpr 0xc68c28 <col:37, col:40> 'wchar_t' <IntegralCast> part_of_explicit_cast
| | |     |     `-ParenExpr 0xc68c08 <col:37, col:40> 'int'
| | |     |       `-UnaryOperator 0xc68bc0 <col:38, col:39> 'int' prefix '-'
| | |     |         `-IntegerLiteral 0xc68ba0 <col:39> 'int' 1
| | |     `-IntegerLiteral 0xc68c68 <col:44> 'int' 0
| | |-VarDecl 0xc68d48 <line:685:7, col:55> col:42 is_integer 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc68db0 <col:55> 'bool' true
| | |-VarDecl 0xc68e28 <line:686:7, col:53> col:42 is_exact 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc68e90 <col:53> 'bool' true
| | |-VarDecl 0xc68f10 <line:687:7, col:49> col:41 radix 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc68f78 <col:49> 'int' 2
| | |-CXXMethodDecl 0xc69018 <line:689:7, line:690:51> col:7 constexpr epsilon 'wchar_t () noexcept' static
| | | `-CompoundStmt 0xc6caf0 <col:39, col:51>
| | |   `-ReturnStmt 0xc6cae0 <col:41, col:48>
| | |     `-ImplicitCastExpr 0xc6cac8 <col:48> 'wchar_t' <IntegralCast>
| | |       `-IntegerLiteral 0xc6caa8 <col:48> 'int' 0
| | |-CXXMethodDecl 0xc690e0 <line:692:7, line:693:55> col:7 constexpr round_error 'wchar_t () noexcept' static
| | | `-CompoundStmt 0xc6cb50 <col:43, col:55>
| | |   `-ReturnStmt 0xc6cb40 <col:45, col:52>
| | |     `-ImplicitCastExpr 0xc6cb28 <col:52> 'wchar_t' <IntegralCast>
| | |       `-IntegerLiteral 0xc6cb08 <col:52> 'int' 0
| | |-VarDecl 0xc6a860 <line:695:7, col:56> col:41 min_exponent 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc6a8c8 <col:56> 'int' 0
| | |-VarDecl 0xc6a958 <line:696:7, col:58> col:41 min_exponent10 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc6a9c0 <col:58> 'int' 0
| | |-VarDecl 0xc6aa50 <line:697:7, col:56> col:41 max_exponent 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc6aab8 <col:56> 'int' 0
| | |-VarDecl 0xc6ab48 <line:698:7, col:58> col:41 max_exponent10 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc6abb0 <col:58> 'int' 0
| | |-VarDecl 0xc6ac38 <line:700:7, col:57> col:42 has_infinity 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc6aca0 <col:57> 'bool' false
| | |-VarDecl 0xc6ad18 <line:701:7, col:58> col:42 has_quiet_NaN 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc6ad80 <col:58> 'bool' false
| | |-VarDecl 0xc6adf8 <line:702:7, col:62> col:42 has_signaling_NaN 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc6ae60 <col:62> 'bool' false
| | |-VarDecl 0xc6aed8 <line:703:7, line:704:10> line:703:56 has_denorm 'const std::float_denorm_style' static constexpr cinit
| | | `-DeclRefExpr 0xc6af40 <line:704:10> 'std::float_denorm_style' EnumConstant 0xc54908 'denorm_absent' 'std::float_denorm_style'
| | |-VarDecl 0xc6afc8 <line:705:7, col:60> col:42 has_denorm_loss 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc6b030 <col:60> 'bool' false
| | |-CXXMethodDecl 0xc6b0c0 <line:707:7, line:708:60> col:7 constexpr infinity 'wchar_t () noexcept' static
| | | `-CompoundStmt 0xc6cba0 <col:40, col:60>
| | |   `-ReturnStmt 0xc6cb90 <col:42, col:57>
| | |     `-CXXScalarValueInitExpr 0xc6cb78 <col:49, col:57> 'wchar_t'
| | |-CXXMethodDecl 0xc6b188 <line:710:7, line:711:61> col:7 constexpr quiet_NaN 'wchar_t () noexcept' static
| | | `-CompoundStmt 0xc6cbf0 <col:41, col:61>
| | |   `-ReturnStmt 0xc6cbe0 <col:43, col:58>
| | |     `-CXXScalarValueInitExpr 0xc6cbc8 <col:50, col:58> 'wchar_t'
| | |-CXXMethodDecl 0xc6b250 <line:713:7, line:714:65> col:7 constexpr signaling_NaN 'wchar_t () noexcept' static
| | | `-CompoundStmt 0xc6cc40 <col:45, col:65>
| | |   `-ReturnStmt 0xc6cc30 <col:47, col:62>
| | |     `-CXXScalarValueInitExpr 0xc6cc18 <col:54, col:62> 'wchar_t'
| | |-CXXMethodDecl 0xc6b318 <line:716:7, line:717:62> col:7 constexpr denorm_min 'wchar_t () noexcept' static
| | | `-CompoundStmt 0xc6cc90 <col:42, col:62>
| | |   `-ReturnStmt 0xc6cc80 <col:44, col:59>
| | |     `-CXXScalarValueInitExpr 0xc6cc68 <col:51, col:59> 'wchar_t'
| | |-VarDecl 0xc6b3c8 <line:719:7, col:54> col:42 is_iec559 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc6b430 <col:54> 'bool' false
| | |-VarDecl 0xc6b4a8 <line:720:7, col:55> col:42 is_bounded 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc6b510 <col:55> 'bool' true
| | |-VarDecl 0xc6b588 <line:721:7, col:55> col:42 is_modulo 'const bool' static constexpr cinit
| | | `-UnaryOperator 0xc6b648 <col:54, col:55> 'bool' prefix '!' cannot overflow
| | |   `-ImplicitCastExpr 0xc6b630 <col:55> 'bool' <LValueToRValue>
| | |     `-DeclRefExpr 0xc6b610 <col:55> 'const bool' lvalue Var 0xc68b38 'is_signed' 'const bool' non_odr_use_constant
| | |-VarDecl 0xc6b6c8 <line:723:7, line:80:35> line:723:42 traps 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc6b730 <line:80:35> 'bool' true
| | |-VarDecl 0xc6b7a8 <line:724:7, col:60> col:42 tinyness_before 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc6b810 <col:60> 'bool' false
| | `-VarDecl 0xc6b888 <line:725:7, line:726:10> line:725:55 round_style 'const std::float_round_style' static constexpr cinit
| |   `-DeclRefExpr 0xc6b8f0 <line:726:10> 'std::float_round_style' EnumConstant 0xc54560 'round_toward_zero' 'std::float_round_style'
| |-ClassTemplateSpecializationDecl 0xc6ccd0 <line:796:3, line:854:5> line:797:12 struct numeric_limits definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'char16_t'
| | |-CXXRecordDecl 0xc6cee8 <col:5, col:12> col:12 implicit struct numeric_limits
| | |-VarDecl 0xc6cf88 <line:799:7, col:46> col:29 is_specialized 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc6cff0 <col:46> 'bool' true
| | |-CXXMethodDecl 0xc6d110 <line:801:7, line:802:57> col:7 used constexpr min 'char16_t () noexcept' static
| | | `-CompoundStmt 0xc703d0 <col:22, col:57>
| | |   `-ReturnStmt 0xc703c0 <col:24, line:131:64>
| | |     `-ImplicitCastExpr 0xc703a8 <col:3, col:64> 'char16_t' <IntegralCast>
| | |       `-ParenExpr 0xc70388 <col:3, col:64> 'int'
| | |         `-ConditionalOperator 0xc70358 <line:128:33, line:131:63> 'int'
| | |           |-ParenExpr 0xc6fba8 <line:128:33, col:45> 'bool'
| | |           | `-BinaryOperator 0xc6fb88 <col:34, col:44> 'bool' '<'
| | |           |   |-ImplicitCastExpr 0xc6fb70 <col:34, col:40> 'int' <IntegralCast>
| | |           |   | `-CStyleCastExpr 0xc6fb28 <col:34, col:40> 'char16_t' <NoOp>
| | |           |   |   `-ImplicitCastExpr 0xc6fb10 <col:37, col:40> 'char16_t' <IntegralCast> part_of_explicit_cast
| | |           |   |     `-ParenExpr 0xc6faf0 <col:37, col:40> 'int'
| | |           |   |       `-UnaryOperator 0xc6faa8 <col:38, col:39> 'int' prefix '-'
| | |           |   |         `-IntegerLiteral 0xc6fa88 <col:39> 'int' 1
| | |           |   `-IntegerLiteral 0xc6fb50 <col:44> 'int' 0
| | |           |-BinaryOperator 0xc702b0 <line:131:31, col:56> 'int' '-'
| | |           | |-UnaryOperator 0xc70278 <col:31, line:135:71> 'int' prefix '-'
| | |           | | `-ParenExpr 0xc70258 <line:134:3, line:135:71> 'int'
| | |           | |   `-ConditionalOperator 0xc70228 <line:128:33, line:135:70> 'int'
| | |           | |     |-ParenExpr 0xc6fce8 <line:128:33, col:45> 'bool'
| | |           | |     | `-BinaryOperator 0xc6fcc8 <col:34, col:44> 'bool' '<'
| | |           | |     |   |-ImplicitCastExpr 0xc6fcb0 <col:34, col:40> 'int' <IntegralCast>
| | |           | |     |   | `-CStyleCastExpr 0xc6fc68 <col:34, col:40> 'char16_t' <NoOp>
| | |           | |     |   |   `-ImplicitCastExpr 0xc6fc50 <col:37, col:40> 'char16_t' <IntegralCast> part_of_explicit_cast
| | |           | |     |   |     `-ParenExpr 0xc6fc30 <col:37, col:40> 'int'
| | |           | |     |   |       `-UnaryOperator 0xc6fbe8 <col:38, col:39> 'int' prefix '-'
| | |           | |     |   |         `-IntegerLiteral 0xc6fbc8 <col:39> 'int' 1
| | |           | |     |   `-IntegerLiteral 0xc6fc90 <col:44> 'int' 0
| | |           | |     |-ParenExpr 0xc70168 <line:135:4, col:62> 'int'
| | |           | |     | `-BinaryOperator 0xc70148 <col:5, col:61> 'int' '+'
| | |           | |     |   |-ParenExpr 0xc70108 <col:5, col:57> 'int'
| | |           | |     |   | `-BinaryOperator 0xc700e8 <col:6, col:56> 'int' '<<'
| | |           | |     |   |   |-ParenExpr 0xc700a8 <col:6, col:51> 'int'
| | |           | |     |   |   | `-BinaryOperator 0xc70088 <col:7, col:50> 'int' '-'
| | |           | |     |   |   |   |-ParenExpr 0xc70048 <col:7, col:46> 'int'
| | |           | |     |   |   |   | `-BinaryOperator 0xc70028 <col:8, col:45> 'int' '<<'
| | |           | |     |   |   |   |   |-ImplicitCastExpr 0xc70010 <col:8, col:11> 'int' <IntegralCast>
| | |           | |     |   |   |   |   | `-CStyleCastExpr 0xc6fd50 <col:8, col:11> 'char16_t' <NoOp>
| | |           | |     |   |   |   |   |   `-ImplicitCastExpr 0xc6fd38 <col:11> 'char16_t' <IntegralCast> part_of_explicit_cast
| | |           | |     |   |   |   |   |     `-IntegerLiteral 0xc6fd08 <col:11> 'int' 1
| | |           | |     |   |   |   |   `-ParenExpr 0xc6fff0 <col:16, col:45> 'unsigned long'
| | |           | |     |   |   |   |     `-BinaryOperator 0xc6ffd0 <line:138:3, line:135:44> 'unsigned long' '-'
| | |           | |     |   |   |   |       |-ParenExpr 0xc6ff78 <line:138:3, col:32> 'unsigned long'
| | |           | |     |   |   |   |       | `-BinaryOperator 0xc6ff58 <line:147:23, line:128:45> 'unsigned long' '-'
| | |           | |     |   |   |   |       |   |-BinaryOperator 0xc6fde0 <line:147:23, <built-in>:71:22> 'unsigned long' '*'
| | |           | |     |   |   |   |       |   | |-UnaryExprOrTypeTraitExpr 0xc6fd88 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:147:23, col:31> 'unsigned long' sizeof 'char16_t'
| | |           | |     |   |   |   |       |   | `-ImplicitCastExpr 0xc6fdc8 <<built-in>:71:22> 'unsigned long' <IntegralCast>
| | |           | |     |   |   |   |       |   |   `-IntegerLiteral 0xc6fda8 <col:22> 'int' 8
| | |           | |     |   |   |   |       |   `-ImplicitCastExpr 0xc6ff40 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:128:33, col:45> 'unsigned long' <IntegralCast>
| | |           | |     |   |   |   |       |     `-ParenExpr 0xc6ff20 <col:33, col:45> 'bool'
| | |           | |     |   |   |   |       |       `-BinaryOperator 0xc6ff00 <col:34, col:44> 'bool' '<'
| | |           | |     |   |   |   |       |         |-ImplicitCastExpr 0xc6fee8 <col:34, col:40> 'int' <IntegralCast>
| | |           | |     |   |   |   |       |         | `-CStyleCastExpr 0xc6fea0 <col:34, col:40> 'char16_t' <NoOp>
| | |           | |     |   |   |   |       |         |   `-ImplicitCastExpr 0xc6fe88 <col:37, col:40> 'char16_t' <IntegralCast> part_of_explicit_cast
| | |           | |     |   |   |   |       |         |     `-ParenExpr 0xc6fe68 <col:37, col:40> 'int'
| | |           | |     |   |   |   |       |         |       `-UnaryOperator 0xc6fe20 <col:38, col:39> 'int' prefix '-'
| | |           | |     |   |   |   |       |         |         `-IntegerLiteral 0xc6fe00 <col:39> 'int' 1
| | |           | |     |   |   |   |       |         `-IntegerLiteral 0xc6fec8 <col:44> 'int' 0
| | |           | |     |   |   |   |       `-ImplicitCastExpr 0xc6ffb8 <line:135:44> 'unsigned long' <IntegralCast>
| | |           | |     |   |   |   |         `-IntegerLiteral 0xc6ff98 <col:44> 'int' 1
| | |           | |     |   |   |   `-IntegerLiteral 0xc70068 <col:50> 'int' 1
| | |           | |     |   |   `-IntegerLiteral 0xc700c8 <col:56> 'int' 1
| | |           | |     |   `-IntegerLiteral 0xc70128 <col:61> 'int' 1
| | |           | |     `-UnaryOperator 0xc70210 <col:66, col:70> 'int' prefix '~' cannot overflow
| | |           | |       `-ImplicitCastExpr 0xc701f8 <col:67, col:70> 'int' <IntegralCast>
| | |           | |         `-CStyleCastExpr 0xc701d0 <col:67, col:70> 'char16_t' <NoOp>
| | |           | |           `-ImplicitCastExpr 0xc701b8 <col:70> 'char16_t' <IntegralCast> part_of_explicit_cast
| | |           | |             `-IntegerLiteral 0xc70188 <col:70> 'int' 0
| | |           | `-IntegerLiteral 0xc70290 <line:131:56> 'int' 1
| | |           `-ImplicitCastExpr 0xc70340 <col:60, col:63> 'int' <IntegralCast>
| | |             `-CStyleCastExpr 0xc70318 <col:60, col:63> 'char16_t' <NoOp>
| | |               `-ImplicitCastExpr 0xc70300 <col:63> 'char16_t' <IntegralCast> part_of_explicit_cast
| | |                 `-IntegerLiteral 0xc702d0 <col:63> 'int' 0
| | |-CXXMethodDecl 0xc6d1d8 <line:804:7, line:805:57> col:7 constexpr max 'char16_t () noexcept' static
| | | `-CompoundStmt 0xc70ac0 <col:22, col:57>
| | |   `-ReturnStmt 0xc70ab0 <col:24, line:135:71>
| | |     `-ImplicitCastExpr 0xc70a98 <line:134:3, line:135:71> 'char16_t' <IntegralCast>
| | |       `-ParenExpr 0xc70a78 <line:134:3, line:135:71> 'int'
| | |         `-ConditionalOperator 0xc70a48 <line:128:33, line:135:70> 'int'
| | |           |-ParenExpr 0xc70508 <line:128:33, col:45> 'bool'
| | |           | `-BinaryOperator 0xc704e8 <col:34, col:44> 'bool' '<'
| | |           |   |-ImplicitCastExpr 0xc704d0 <col:34, col:40> 'int' <IntegralCast>
| | |           |   | `-CStyleCastExpr 0xc70488 <col:34, col:40> 'char16_t' <NoOp>
| | |           |   |   `-ImplicitCastExpr 0xc70470 <col:37, col:40> 'char16_t' <IntegralCast> part_of_explicit_cast
| | |           |   |     `-ParenExpr 0xc70450 <col:37, col:40> 'int'
| | |           |   |       `-UnaryOperator 0xc70408 <col:38, col:39> 'int' prefix '-'
| | |           |   |         `-IntegerLiteral 0xc703e8 <col:39> 'int' 1
| | |           |   `-IntegerLiteral 0xc704b0 <col:44> 'int' 0
| | |           |-ParenExpr 0xc70988 <line:135:4, col:62> 'int'
| | |           | `-BinaryOperator 0xc70968 <col:5, col:61> 'int' '+'
| | |           |   |-ParenExpr 0xc70928 <col:5, col:57> 'int'
| | |           |   | `-BinaryOperator 0xc70908 <col:6, col:56> 'int' '<<'
| | |           |   |   |-ParenExpr 0xc708c8 <col:6, col:51> 'int'
| | |           |   |   | `-BinaryOperator 0xc708a8 <col:7, col:50> 'int' '-'
| | |           |   |   |   |-ParenExpr 0xc70868 <col:7, col:46> 'int'
| | |           |   |   |   | `-BinaryOperator 0xc70848 <col:8, col:45> 'int' '<<'
| | |           |   |   |   |   |-ImplicitCastExpr 0xc70830 <col:8, col:11> 'int' <IntegralCast>
| | |           |   |   |   |   | `-CStyleCastExpr 0xc70570 <col:8, col:11> 'char16_t' <NoOp>
| | |           |   |   |   |   |   `-ImplicitCastExpr 0xc70558 <col:11> 'char16_t' <IntegralCast> part_of_explicit_cast
| | |           |   |   |   |   |     `-IntegerLiteral 0xc70528 <col:11> 'int' 1
| | |           |   |   |   |   `-ParenExpr 0xc70810 <col:16, col:45> 'unsigned long'
| | |           |   |   |   |     `-BinaryOperator 0xc707f0 <line:138:3, line:135:44> 'unsigned long' '-'
| | |           |   |   |   |       |-ParenExpr 0xc70798 <line:138:3, col:32> 'unsigned long'
| | |           |   |   |   |       | `-BinaryOperator 0xc70778 <line:149:23, line:128:45> 'unsigned long' '-'
| | |           |   |   |   |       |   |-BinaryOperator 0xc70600 <line:149:23, <built-in>:71:22> 'unsigned long' '*'
| | |           |   |   |   |       |   | |-UnaryExprOrTypeTraitExpr 0xc705a8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:149:23, col:31> 'unsigned long' sizeof 'char16_t'
| | |           |   |   |   |       |   | `-ImplicitCastExpr 0xc705e8 <<built-in>:71:22> 'unsigned long' <IntegralCast>
| | |           |   |   |   |       |   |   `-IntegerLiteral 0xc705c8 <col:22> 'int' 8
| | |           |   |   |   |       |   `-ImplicitCastExpr 0xc70760 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:128:33, col:45> 'unsigned long' <IntegralCast>
| | |           |   |   |   |       |     `-ParenExpr 0xc70740 <col:33, col:45> 'bool'
| | |           |   |   |   |       |       `-BinaryOperator 0xc70720 <col:34, col:44> 'bool' '<'
| | |           |   |   |   |       |         |-ImplicitCastExpr 0xc70708 <col:34, col:40> 'int' <IntegralCast>
| | |           |   |   |   |       |         | `-CStyleCastExpr 0xc706c0 <col:34, col:40> 'char16_t' <NoOp>
| | |           |   |   |   |       |         |   `-ImplicitCastExpr 0xc706a8 <col:37, col:40> 'char16_t' <IntegralCast> part_of_explicit_cast
| | |           |   |   |   |       |         |     `-ParenExpr 0xc70688 <col:37, col:40> 'int'
| | |           |   |   |   |       |         |       `-UnaryOperator 0xc70640 <col:38, col:39> 'int' prefix '-'
| | |           |   |   |   |       |         |         `-IntegerLiteral 0xc70620 <col:39> 'int' 1
| | |           |   |   |   |       |         `-IntegerLiteral 0xc706e8 <col:44> 'int' 0
| | |           |   |   |   |       `-ImplicitCastExpr 0xc707d8 <line:135:44> 'unsigned long' <IntegralCast>
| | |           |   |   |   |         `-IntegerLiteral 0xc707b8 <col:44> 'int' 1
| | |           |   |   |   `-IntegerLiteral 0xc70888 <col:50> 'int' 1
| | |           |   |   `-IntegerLiteral 0xc708e8 <col:56> 'int' 1
| | |           |   `-IntegerLiteral 0xc70948 <col:61> 'int' 1
| | |           `-UnaryOperator 0xc70a30 <col:66, col:70> 'int' prefix '~' cannot overflow
| | |             `-ImplicitCastExpr 0xc70a18 <col:67, col:70> 'int' <IntegralCast>
| | |               `-CStyleCastExpr 0xc709f0 <col:67, col:70> 'char16_t' <NoOp>
| | |                 `-ImplicitCastExpr 0xc709d8 <col:70> 'char16_t' <IntegralCast> part_of_explicit_cast
| | |                   `-IntegerLiteral 0xc709a8 <col:70> 'int' 0
| | |-CXXMethodDecl 0xc6d2a0 <line:807:7, line:808:41> col:7 constexpr lowest 'char16_t () noexcept' static
| | | `-CompoundStmt 0xc70ba0 <col:25, col:41>
| | |   `-ReturnStmt 0xc70b90 <col:27, col:38>
| | |     `-CallExpr 0xc70b70 <col:34, col:38> 'char16_t'
| | |       `-ImplicitCastExpr 0xc70b58 <col:34> 'char16_t (*)() noexcept' <FunctionToPointerDecay>
| | |         `-DeclRefExpr 0xc70ad8 <col:34> 'char16_t () noexcept' lvalue CXXMethod 0xc6d110 'min' 'char16_t () noexcept'
| | |-VarDecl 0xc6d358 <line:810:7, line:138:32> line:810:28 digits 'const int' static constexpr cinit
| | | `-ImplicitCastExpr 0xc6d5e0 <line:138:3, col:32> 'const int' <IntegralCast>
| | |   `-ParenExpr 0xc6d5c0 <col:3, col:32> 'unsigned long'
| | |     `-BinaryOperator 0xc6d5a0 <line:151:26, line:128:45> 'unsigned long' '-'
| | |       |-BinaryOperator 0xc6d428 <line:151:26, <built-in>:71:22> 'unsigned long' '*'
| | |       | |-UnaryExprOrTypeTraitExpr 0xc6d3d0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:151:26, col:34> 'unsigned long' sizeof 'char16_t'
| | |       | `-ImplicitCastExpr 0xc6d410 <<built-in>:71:22> 'unsigned long' <IntegralCast>
| | |       |   `-IntegerLiteral 0xc6d3f0 <col:22> 'int' 8
| | |       `-ImplicitCastExpr 0xc6d588 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:128:33, col:45> 'unsigned long' <IntegralCast>
| | |         `-ParenExpr 0xc6d568 <col:33, col:45> 'bool'
| | |           `-BinaryOperator 0xc6d548 <col:34, col:44> 'bool' '<'
| | |             |-ImplicitCastExpr 0xc6d530 <col:34, col:40> 'int' <IntegralCast>
| | |             | `-CStyleCastExpr 0xc6d4e8 <col:34, col:40> 'char16_t' <NoOp>
| | |             |   `-ImplicitCastExpr 0xc6d4d0 <col:37, col:40> 'char16_t' <IntegralCast> part_of_explicit_cast
| | |             |     `-ParenExpr 0xc6d4b0 <col:37, col:40> 'int'
| | |             |       `-UnaryOperator 0xc6d468 <col:38, col:39> 'int' prefix '-'
| | |             |         `-IntegerLiteral 0xc6d448 <col:39> 'int' 1
| | |             `-IntegerLiteral 0xc6d510 <col:44> 'int' 0
| | |-VarDecl 0xc6d668 <line:811:7, line:142:42> line:811:28 digits10 'const int' static constexpr cinit
| | | `-ImplicitCastExpr 0xc6d9c0 <line:142:3, col:42> 'const int' <IntegralCast>
| | |   `-ParenExpr 0xc6d9a0 <col:3, col:42> 'unsigned long'
| | |     `-BinaryOperator 0xc6d980 <line:138:3, line:142:38> 'unsigned long' '/'
| | |       |-BinaryOperator 0xc6d928 <line:138:3, line:142:31> 'unsigned long' '*'
| | |       | |-ParenExpr 0xc6d8d0 <line:138:3, col:32> 'unsigned long'
| | |       | | `-BinaryOperator 0xc6d8b0 <line:153:28, line:128:45> 'unsigned long' '-'
| | |       | |   |-BinaryOperator 0xc6d738 <line:153:28, <built-in>:71:22> 'unsigned long' '*'
| | |       | |   | |-UnaryExprOrTypeTraitExpr 0xc6d6e0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:153:28, col:36> 'unsigned long' sizeof 'char16_t'
| | |       | |   | `-ImplicitCastExpr 0xc6d720 <<built-in>:71:22> 'unsigned long' <IntegralCast>
| | |       | |   |   `-IntegerLiteral 0xc6d700 <col:22> 'int' 8
| | |       | |   `-ImplicitCastExpr 0xc6d898 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:128:33, col:45> 'unsigned long' <IntegralCast>
| | |       | |     `-ParenExpr 0xc6d878 <col:33, col:45> 'bool'
| | |       | |       `-BinaryOperator 0xc6d858 <col:34, col:44> 'bool' '<'
| | |       | |         |-ImplicitCastExpr 0xc6d840 <col:34, col:40> 'int' <IntegralCast>
| | |       | |         | `-CStyleCastExpr 0xc6d7f8 <col:34, col:40> 'char16_t' <NoOp>
| | |       | |         |   `-ImplicitCastExpr 0xc6d7e0 <col:37, col:40> 'char16_t' <IntegralCast> part_of_explicit_cast
| | |       | |         |     `-ParenExpr 0xc6d7c0 <col:37, col:40> 'int'
| | |       | |         |       `-UnaryOperator 0xc6d778 <col:38, col:39> 'int' prefix '-'
| | |       | |         |         `-IntegerLiteral 0xc6d758 <col:39> 'int' 1
| | |       | |         `-IntegerLiteral 0xc6d820 <col:44> 'int' 0
| | |       | `-ImplicitCastExpr 0xc6d910 <line:142:31> 'unsigned long' <IntegralCast>
| | |       |   `-IntegerLiteral 0xc6d8f0 <col:31> 'long' 643
| | |       `-ImplicitCastExpr 0xc6d968 <col:38> 'unsigned long' <IntegralCast>
| | |         `-IntegerLiteral 0xc6d948 <col:38> 'int' 2136
| | |-VarDecl 0xc6da48 <line:812:7, col:43> col:28 max_digits10 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc6dab0 <col:43> 'int' 0
| | |-VarDecl 0xc6db38 <line:813:7, line:128:45> line:813:29 referenced is_signed 'const bool' static constexpr cinit
| | | `-ParenExpr 0xc6dcc0 <line:128:33, col:45> 'bool'
| | |   `-BinaryOperator 0xc6dca0 <col:34, col:44> 'bool' '<'
| | |     |-ImplicitCastExpr 0xc6dc88 <col:34, col:40> 'int' <IntegralCast>
| | |     | `-CStyleCastExpr 0xc6dc40 <col:34, col:40> 'char16_t' <NoOp>
| | |     |   `-ImplicitCastExpr 0xc6dc28 <col:37, col:40> 'char16_t' <IntegralCast> part_of_explicit_cast
| | |     |     `-ParenExpr 0xc6dc08 <col:37, col:40> 'int'
| | |     |       `-UnaryOperator 0xc6dbc0 <col:38, col:39> 'int' prefix '-'
| | |     |         `-IntegerLiteral 0xc6dba0 <col:39> 'int' 1
| | |     `-IntegerLiteral 0xc6dc68 <col:44> 'int' 0
| | |-VarDecl 0xc6dd48 <line:814:7, col:42> col:29 is_integer 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc6ddb0 <col:42> 'bool' true
| | |-VarDecl 0xc6de28 <line:815:7, col:40> col:29 is_exact 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc6de90 <col:40> 'bool' true
| | |-VarDecl 0xc6df10 <line:816:7, col:36> col:28 radix 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc6df78 <col:36> 'int' 2
| | |-CXXMethodDecl 0xc6e018 <line:818:7, line:819:38> col:7 constexpr epsilon 'char16_t () noexcept' static
| | | `-CompoundStmt 0xc70c00 <col:26, col:38>
| | |   `-ReturnStmt 0xc70bf0 <col:28, col:35>
| | |     `-ImplicitCastExpr 0xc70bd8 <col:35> 'char16_t' <IntegralCast>
| | |       `-IntegerLiteral 0xc70bb8 <col:35> 'int' 0
| | |-CXXMethodDecl 0xc6e0e0 <line:821:7, line:822:42> col:7 constexpr round_error 'char16_t () noexcept' static
| | | `-CompoundStmt 0xc70c60 <col:30, col:42>
| | |   `-ReturnStmt 0xc70c50 <col:32, col:39>
| | |     `-ImplicitCastExpr 0xc70c38 <col:39> 'char16_t' <IntegralCast>
| | |       `-IntegerLiteral 0xc70c18 <col:39> 'int' 0
| | |-VarDecl 0xc6e198 <line:824:7, col:43> col:28 min_exponent 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc6e200 <col:43> 'int' 0
| | |-VarDecl 0xc6e290 <line:825:7, col:45> col:28 min_exponent10 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc6e2f8 <col:45> 'int' 0
| | |-VarDecl 0xc6e388 <line:826:7, col:43> col:28 max_exponent 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc6e3f0 <col:43> 'int' 0
| | |-VarDecl 0xc6e480 <line:827:7, col:45> col:28 max_exponent10 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc6e4e8 <col:45> 'int' 0
| | |-VarDecl 0xc6e570 <line:829:7, col:44> col:29 has_infinity 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc6e5d8 <col:44> 'bool' false
| | |-VarDecl 0xc6e650 <line:830:7, col:45> col:29 has_quiet_NaN 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc6e6b8 <col:45> 'bool' false
| | |-VarDecl 0xc6e730 <line:831:7, col:49> col:29 has_signaling_NaN 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc6e798 <col:49> 'bool' false
| | |-VarDecl 0xc6efe0 <line:832:7, col:56> col:43 has_denorm 'const std::float_denorm_style' static constexpr cinit
| | | `-DeclRefExpr 0xc6f048 <col:56> 'std::float_denorm_style' EnumConstant 0xc54908 'denorm_absent' 'std::float_denorm_style'
| | |-VarDecl 0xc6f0d0 <line:833:7, col:47> col:29 has_denorm_loss 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc6f138 <col:47> 'bool' false
| | |-CXXMethodDecl 0xc6f1c8 <line:835:7, line:836:48> col:7 constexpr infinity 'char16_t () noexcept' static
| | | `-CompoundStmt 0xc70cb0 <col:27, col:48>
| | |   `-ReturnStmt 0xc70ca0 <col:29, col:45>
| | |     `-CXXScalarValueInitExpr 0xc70c88 <col:36, col:45> 'char16_t'
| | |-CXXMethodDecl 0xc6f290 <line:838:7, line:839:49> col:7 constexpr quiet_NaN 'char16_t () noexcept' static
| | | `-CompoundStmt 0xc70d00 <col:28, col:49>
| | |   `-ReturnStmt 0xc70cf0 <col:30, col:46>
| | |     `-CXXScalarValueInitExpr 0xc70cd8 <col:37, col:46> 'char16_t'
| | |-CXXMethodDecl 0xc6f358 <line:841:7, line:842:53> col:7 constexpr signaling_NaN 'char16_t () noexcept' static
| | | `-CompoundStmt 0xc70d50 <col:32, col:53>
| | |   `-ReturnStmt 0xc70d40 <col:34, col:50>
| | |     `-CXXScalarValueInitExpr 0xc70d28 <col:41, col:50> 'char16_t'
| | |-CXXMethodDecl 0xc6f420 <line:844:7, line:845:50> col:7 constexpr denorm_min 'char16_t () noexcept' static
| | | `-CompoundStmt 0xc70da0 <col:29, col:50>
| | |   `-ReturnStmt 0xc70d90 <col:31, col:47>
| | |     `-CXXScalarValueInitExpr 0xc70d78 <col:38, col:47> 'char16_t'
| | |-VarDecl 0xc6f4d0 <line:847:7, col:41> col:29 is_iec559 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc6f538 <col:41> 'bool' false
| | |-VarDecl 0xc6f5b0 <line:848:7, col:42> col:29 is_bounded 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc6f618 <col:42> 'bool' true
| | |-VarDecl 0xc6f690 <line:849:7, col:42> col:29 is_modulo 'const bool' static constexpr cinit
| | | `-UnaryOperator 0xc6f750 <col:41, col:42> 'bool' prefix '!' cannot overflow
| | |   `-ImplicitCastExpr 0xc6f738 <col:42> 'bool' <LValueToRValue>
| | |     `-DeclRefExpr 0xc6f718 <col:42> 'const bool' lvalue Var 0xc6db38 'is_signed' 'const bool' non_odr_use_constant
| | |-VarDecl 0xc6f7d0 <line:851:7, line:80:35> line:851:29 traps 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc6f838 <line:80:35> 'bool' true
| | |-VarDecl 0xc6f8b0 <line:852:7, col:47> col:29 tinyness_before 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc6f918 <col:47> 'bool' false
| | `-VarDecl 0xc6f990 <line:853:7, col:56> col:42 round_style 'const std::float_round_style' static constexpr cinit
| |   `-DeclRefExpr 0xc6f9f8 <col:56> 'std::float_round_style' EnumConstant 0xc54560 'round_toward_zero' 'std::float_round_style'
| |-ClassTemplateSpecializationDecl 0xc70de0 <line:857:3, line:915:5> line:858:12 struct numeric_limits definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'char32_t'
| | |-CXXRecordDecl 0xc70ff8 <col:5, col:12> col:12 implicit struct numeric_limits
| | |-VarDecl 0xc71098 <line:860:7, col:46> col:29 is_specialized 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc71100 <col:46> 'bool' true
| | |-CXXMethodDecl 0xc71220 <line:862:7, line:863:57> col:7 used constexpr min 'char32_t () noexcept' static
| | | `-CompoundStmt 0xc74638 <col:22, col:57>
| | |   `-ReturnStmt 0xc74628 <col:24, line:131:64>
| | |     `-ImplicitCastExpr 0xc74610 <col:3, col:64> 'char32_t' <IntegralCast>
| | |       `-ParenExpr 0xc745f0 <col:3, col:64> 'unsigned int'
| | |         `-ConditionalOperator 0xc745c0 <line:128:33, line:131:63> 'unsigned int'
| | |           |-ParenExpr 0xc73d98 <line:128:33, col:45> 'bool'
| | |           | `-BinaryOperator 0xc73d78 <col:34, col:44> 'bool' '<'
| | |           |   |-ImplicitCastExpr 0xc73d48 <col:34, col:40> 'unsigned int' <IntegralCast>
| | |           |   | `-CStyleCastExpr 0xc73d00 <col:34, col:40> 'char32_t' <NoOp>
| | |           |   |   `-ImplicitCastExpr 0xc73ce8 <col:37, col:40> 'char32_t' <IntegralCast> part_of_explicit_cast
| | |           |   |     `-ParenExpr 0xc73cc8 <col:37, col:40> 'int'
| | |           |   |       `-UnaryOperator 0xc73c80 <col:38, col:39> 'int' prefix '-'
| | |           |   |         `-IntegerLiteral 0xc73c60 <col:39> 'int' 1
| | |           |   `-ImplicitCastExpr 0xc73d60 <col:44> 'unsigned int' <IntegralCast>
| | |           |     `-IntegerLiteral 0xc73d28 <col:44> 'int' 0
| | |           |-BinaryOperator 0xc74518 <line:131:31, col:56> 'unsigned int' '-'
| | |           | |-UnaryOperator 0xc744c8 <col:31, line:135:71> 'unsigned int' prefix '-'
| | |           | | `-ParenExpr 0xc744a8 <line:134:3, line:135:71> 'unsigned int'
| | |           | |   `-ConditionalOperator 0xc74478 <line:128:33, line:135:70> 'unsigned int'
| | |           | |     |-ParenExpr 0xc73ef0 <line:128:33, col:45> 'bool'
| | |           | |     | `-BinaryOperator 0xc73ed0 <col:34, col:44> 'bool' '<'
| | |           | |     |   |-ImplicitCastExpr 0xc73ea0 <col:34, col:40> 'unsigned int' <IntegralCast>
| | |           | |     |   | `-CStyleCastExpr 0xc73e58 <col:34, col:40> 'char32_t' <NoOp>
| | |           | |     |   |   `-ImplicitCastExpr 0xc73e40 <col:37, col:40> 'char32_t' <IntegralCast> part_of_explicit_cast
| | |           | |     |   |     `-ParenExpr 0xc73e20 <col:37, col:40> 'int'
| | |           | |     |   |       `-UnaryOperator 0xc73dd8 <col:38, col:39> 'int' prefix '-'
| | |           | |     |   |         `-IntegerLiteral 0xc73db8 <col:39> 'int' 1
| | |           | |     |   `-ImplicitCastExpr 0xc73eb8 <col:44> 'unsigned int' <IntegralCast>
| | |           | |     |     `-IntegerLiteral 0xc73e80 <col:44> 'int' 0
| | |           | |     |-ParenExpr 0xc743b8 <line:135:4, col:62> 'unsigned int'
| | |           | |     | `-BinaryOperator 0xc74398 <col:5, col:61> 'unsigned int' '+'
| | |           | |     |   |-ParenExpr 0xc74340 <col:5, col:57> 'unsigned int'
| | |           | |     |   | `-BinaryOperator 0xc74320 <col:6, col:56> 'unsigned int' '<<'
| | |           | |     |   |   |-ParenExpr 0xc742e0 <col:6, col:51> 'unsigned int'
| | |           | |     |   |   | `-BinaryOperator 0xc742c0 <col:7, col:50> 'unsigned int' '-'
| | |           | |     |   |   |   |-ParenExpr 0xc74268 <col:7, col:46> 'unsigned int'
| | |           | |     |   |   |   | `-BinaryOperator 0xc74248 <col:8, col:45> 'unsigned int' '<<'
| | |           | |     |   |   |   |   |-ImplicitCastExpr 0xc74230 <col:8, col:11> 'unsigned int' <IntegralCast>
| | |           | |     |   |   |   |   | `-CStyleCastExpr 0xc73f58 <col:8, col:11> 'char32_t' <NoOp>
| | |           | |     |   |   |   |   |   `-ImplicitCastExpr 0xc73f40 <col:11> 'char32_t' <IntegralCast> part_of_explicit_cast
| | |           | |     |   |   |   |   |     `-IntegerLiteral 0xc73f10 <col:11> 'int' 1
| | |           | |     |   |   |   |   `-ParenExpr 0xc74210 <col:16, col:45> 'unsigned long'
| | |           | |     |   |   |   |     `-BinaryOperator 0xc741f0 <line:138:3, line:135:44> 'unsigned long' '-'
| | |           | |     |   |   |   |       |-ParenExpr 0xc74198 <line:138:3, col:32> 'unsigned long'
| | |           | |     |   |   |   |       | `-BinaryOperator 0xc74178 <line:147:23, line:128:45> 'unsigned long' '-'
| | |           | |     |   |   |   |       |   |-BinaryOperator 0xc73fe8 <line:147:23, <built-in>:71:22> 'unsigned long' '*'
| | |           | |     |   |   |   |       |   | |-UnaryExprOrTypeTraitExpr 0xc73f90 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:147:23, col:31> 'unsigned long' sizeof 'char32_t'
| | |           | |     |   |   |   |       |   | `-ImplicitCastExpr 0xc73fd0 <<built-in>:71:22> 'unsigned long' <IntegralCast>
| | |           | |     |   |   |   |       |   |   `-IntegerLiteral 0xc73fb0 <col:22> 'int' 8
| | |           | |     |   |   |   |       |   `-ImplicitCastExpr 0xc74160 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:128:33, col:45> 'unsigned long' <IntegralCast>
| | |           | |     |   |   |   |       |     `-ParenExpr 0xc74140 <col:33, col:45> 'bool'
| | |           | |     |   |   |   |       |       `-BinaryOperator 0xc74120 <col:34, col:44> 'bool' '<'
| | |           | |     |   |   |   |       |         |-ImplicitCastExpr 0xc740f0 <col:34, col:40> 'unsigned int' <IntegralCast>
| | |           | |     |   |   |   |       |         | `-CStyleCastExpr 0xc740a8 <col:34, col:40> 'char32_t' <NoOp>
| | |           | |     |   |   |   |       |         |   `-ImplicitCastExpr 0xc74090 <col:37, col:40> 'char32_t' <IntegralCast> part_of_explicit_cast
| | |           | |     |   |   |   |       |         |     `-ParenExpr 0xc74070 <col:37, col:40> 'int'
| | |           | |     |   |   |   |       |         |       `-UnaryOperator 0xc74028 <col:38, col:39> 'int' prefix '-'
| | |           | |     |   |   |   |       |         |         `-IntegerLiteral 0xc74008 <col:39> 'int' 1
| | |           | |     |   |   |   |       |         `-ImplicitCastExpr 0xc74108 <col:44> 'unsigned int' <IntegralCast>
| | |           | |     |   |   |   |       |           `-IntegerLiteral 0xc740d0 <col:44> 'int' 0
| | |           | |     |   |   |   |       `-ImplicitCastExpr 0xc741d8 <line:135:44> 'unsigned long' <IntegralCast>
| | |           | |     |   |   |   |         `-IntegerLiteral 0xc741b8 <col:44> 'int' 1
| | |           | |     |   |   |   `-ImplicitCastExpr 0xc742a8 <col:50> 'unsigned int' <IntegralCast>
| | |           | |     |   |   |     `-IntegerLiteral 0xc74288 <col:50> 'int' 1
| | |           | |     |   |   `-IntegerLiteral 0xc74300 <col:56> 'int' 1
| | |           | |     |   `-ImplicitCastExpr 0xc74380 <col:61> 'unsigned int' <IntegralCast>
| | |           | |     |     `-IntegerLiteral 0xc74360 <col:61> 'int' 1
| | |           | |     `-UnaryOperator 0xc74460 <col:66, col:70> 'unsigned int' prefix '~' cannot overflow
| | |           | |       `-ImplicitCastExpr 0xc74448 <col:67, col:70> 'unsigned int' <IntegralCast>
| | |           | |         `-CStyleCastExpr 0xc74420 <col:67, col:70> 'char32_t' <NoOp>
| | |           | |           `-ImplicitCastExpr 0xc74408 <col:70> 'char32_t' <IntegralCast> part_of_explicit_cast
| | |           | |             `-IntegerLiteral 0xc743d8 <col:70> 'int' 0
| | |           | `-ImplicitCastExpr 0xc74500 <line:131:56> 'unsigned int' <IntegralCast>
| | |           |   `-IntegerLiteral 0xc744e0 <col:56> 'int' 1
| | |           `-ImplicitCastExpr 0xc745a8 <col:60, col:63> 'unsigned int' <IntegralCast>
| | |             `-CStyleCastExpr 0xc74580 <col:60, col:63> 'char32_t' <NoOp>
| | |               `-ImplicitCastExpr 0xc74568 <col:63> 'char32_t' <IntegralCast> part_of_explicit_cast
| | |                 `-IntegerLiteral 0xc74538 <col:63> 'int' 0
| | |-CXXMethodDecl 0xc712e8 <line:865:7, line:866:57> col:7 constexpr max 'char32_t () noexcept' static
| | | `-CompoundStmt 0xc74d88 <col:22, col:57>
| | |   `-ReturnStmt 0xc74d78 <col:24, line:135:71>
| | |     `-ImplicitCastExpr 0xc74d60 <line:134:3, line:135:71> 'char32_t' <IntegralCast>
| | |       `-ParenExpr 0xc74d40 <line:134:3, line:135:71> 'unsigned int'
| | |         `-ConditionalOperator 0xc74d10 <line:128:33, line:135:70> 'unsigned int'
| | |           |-ParenExpr 0xc74788 <line:128:33, col:45> 'bool'
| | |           | `-BinaryOperator 0xc74768 <col:34, col:44> 'bool' '<'
| | |           |   |-ImplicitCastExpr 0xc74738 <col:34, col:40> 'unsigned int' <IntegralCast>
| | |           |   | `-CStyleCastExpr 0xc746f0 <col:34, col:40> 'char32_t' <NoOp>
| | |           |   |   `-ImplicitCastExpr 0xc746d8 <col:37, col:40> 'char32_t' <IntegralCast> part_of_explicit_cast
| | |           |   |     `-ParenExpr 0xc746b8 <col:37, col:40> 'int'
| | |           |   |       `-UnaryOperator 0xc74670 <col:38, col:39> 'int' prefix '-'
| | |           |   |         `-IntegerLiteral 0xc74650 <col:39> 'int' 1
| | |           |   `-ImplicitCastExpr 0xc74750 <col:44> 'unsigned int' <IntegralCast>
| | |           |     `-IntegerLiteral 0xc74718 <col:44> 'int' 0
| | |           |-ParenExpr 0xc74c50 <line:135:4, col:62> 'unsigned int'
| | |           | `-BinaryOperator 0xc74c30 <col:5, col:61> 'unsigned int' '+'
| | |           |   |-ParenExpr 0xc74bd8 <col:5, col:57> 'unsigned int'
| | |           |   | `-BinaryOperator 0xc74bb8 <col:6, col:56> 'unsigned int' '<<'
| | |           |   |   |-ParenExpr 0xc74b78 <col:6, col:51> 'unsigned int'
| | |           |   |   | `-BinaryOperator 0xc74b58 <col:7, col:50> 'unsigned int' '-'
| | |           |   |   |   |-ParenExpr 0xc74b00 <col:7, col:46> 'unsigned int'
| | |           |   |   |   | `-BinaryOperator 0xc74ae0 <col:8, col:45> 'unsigned int' '<<'
| | |           |   |   |   |   |-ImplicitCastExpr 0xc74ac8 <col:8, col:11> 'unsigned int' <IntegralCast>
| | |           |   |   |   |   | `-CStyleCastExpr 0xc747f0 <col:8, col:11> 'char32_t' <NoOp>
| | |           |   |   |   |   |   `-ImplicitCastExpr 0xc747d8 <col:11> 'char32_t' <IntegralCast> part_of_explicit_cast
| | |           |   |   |   |   |     `-IntegerLiteral 0xc747a8 <col:11> 'int' 1
| | |           |   |   |   |   `-ParenExpr 0xc74aa8 <col:16, col:45> 'unsigned long'
| | |           |   |   |   |     `-BinaryOperator 0xc74a88 <line:138:3, line:135:44> 'unsigned long' '-'
| | |           |   |   |   |       |-ParenExpr 0xc74a30 <line:138:3, col:32> 'unsigned long'
| | |           |   |   |   |       | `-BinaryOperator 0xc74a10 <line:149:23, line:128:45> 'unsigned long' '-'
| | |           |   |   |   |       |   |-BinaryOperator 0xc74880 <line:149:23, <built-in>:71:22> 'unsigned long' '*'
| | |           |   |   |   |       |   | |-UnaryExprOrTypeTraitExpr 0xc74828 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:149:23, col:31> 'unsigned long' sizeof 'char32_t'
| | |           |   |   |   |       |   | `-ImplicitCastExpr 0xc74868 <<built-in>:71:22> 'unsigned long' <IntegralCast>
| | |           |   |   |   |       |   |   `-IntegerLiteral 0xc74848 <col:22> 'int' 8
| | |           |   |   |   |       |   `-ImplicitCastExpr 0xc749f8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:128:33, col:45> 'unsigned long' <IntegralCast>
| | |           |   |   |   |       |     `-ParenExpr 0xc749d8 <col:33, col:45> 'bool'
| | |           |   |   |   |       |       `-BinaryOperator 0xc749b8 <col:34, col:44> 'bool' '<'
| | |           |   |   |   |       |         |-ImplicitCastExpr 0xc74988 <col:34, col:40> 'unsigned int' <IntegralCast>
| | |           |   |   |   |       |         | `-CStyleCastExpr 0xc74940 <col:34, col:40> 'char32_t' <NoOp>
| | |           |   |   |   |       |         |   `-ImplicitCastExpr 0xc74928 <col:37, col:40> 'char32_t' <IntegralCast> part_of_explicit_cast
| | |           |   |   |   |       |         |     `-ParenExpr 0xc74908 <col:37, col:40> 'int'
| | |           |   |   |   |       |         |       `-UnaryOperator 0xc748c0 <col:38, col:39> 'int' prefix '-'
| | |           |   |   |   |       |         |         `-IntegerLiteral 0xc748a0 <col:39> 'int' 1
| | |           |   |   |   |       |         `-ImplicitCastExpr 0xc749a0 <col:44> 'unsigned int' <IntegralCast>
| | |           |   |   |   |       |           `-IntegerLiteral 0xc74968 <col:44> 'int' 0
| | |           |   |   |   |       `-ImplicitCastExpr 0xc74a70 <line:135:44> 'unsigned long' <IntegralCast>
| | |           |   |   |   |         `-IntegerLiteral 0xc74a50 <col:44> 'int' 1
| | |           |   |   |   `-ImplicitCastExpr 0xc74b40 <col:50> 'unsigned int' <IntegralCast>
| | |           |   |   |     `-IntegerLiteral 0xc74b20 <col:50> 'int' 1
| | |           |   |   `-IntegerLiteral 0xc74b98 <col:56> 'int' 1
| | |           |   `-ImplicitCastExpr 0xc74c18 <col:61> 'unsigned int' <IntegralCast>
| | |           |     `-IntegerLiteral 0xc74bf8 <col:61> 'int' 1
| | |           `-UnaryOperator 0xc74cf8 <col:66, col:70> 'unsigned int' prefix '~' cannot overflow
| | |             `-ImplicitCastExpr 0xc74ce0 <col:67, col:70> 'unsigned int' <IntegralCast>
| | |               `-CStyleCastExpr 0xc74cb8 <col:67, col:70> 'char32_t' <NoOp>
| | |                 `-ImplicitCastExpr 0xc74ca0 <col:70> 'char32_t' <IntegralCast> part_of_explicit_cast
| | |                   `-IntegerLiteral 0xc74c70 <col:70> 'int' 0
| | |-CXXMethodDecl 0xc713b0 <line:868:7, line:869:41> col:7 constexpr lowest 'char32_t () noexcept' static
| | | `-CompoundStmt 0xc74e60 <col:25, col:41>
| | |   `-ReturnStmt 0xc74e50 <col:27, col:38>
| | |     `-CallExpr 0xc74e30 <col:34, col:38> 'char32_t'
| | |       `-ImplicitCastExpr 0xc74e18 <col:34> 'char32_t (*)() noexcept' <FunctionToPointerDecay>
| | |         `-DeclRefExpr 0xc74da0 <col:34> 'char32_t () noexcept' lvalue CXXMethod 0xc71220 'min' 'char32_t () noexcept'
| | |-VarDecl 0xc71468 <line:871:7, line:138:32> line:871:28 digits 'const int' static constexpr cinit
| | | `-ImplicitCastExpr 0xc71708 <line:138:3, col:32> 'const int' <IntegralCast>
| | |   `-ParenExpr 0xc716e8 <col:3, col:32> 'unsigned long'
| | |     `-BinaryOperator 0xc716c8 <line:151:26, line:128:45> 'unsigned long' '-'
| | |       |-BinaryOperator 0xc71538 <line:151:26, <built-in>:71:22> 'unsigned long' '*'
| | |       | |-UnaryExprOrTypeTraitExpr 0xc714e0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:151:26, col:34> 'unsigned long' sizeof 'char32_t'
| | |       | `-ImplicitCastExpr 0xc71520 <<built-in>:71:22> 'unsigned long' <IntegralCast>
| | |       |   `-IntegerLiteral 0xc71500 <col:22> 'int' 8
| | |       `-ImplicitCastExpr 0xc716b0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:128:33, col:45> 'unsigned long' <IntegralCast>
| | |         `-ParenExpr 0xc71690 <col:33, col:45> 'bool'
| | |           `-BinaryOperator 0xc71670 <col:34, col:44> 'bool' '<'
| | |             |-ImplicitCastExpr 0xc71640 <col:34, col:40> 'unsigned int' <IntegralCast>
| | |             | `-CStyleCastExpr 0xc715f8 <col:34, col:40> 'char32_t' <NoOp>
| | |             |   `-ImplicitCastExpr 0xc715e0 <col:37, col:40> 'char32_t' <IntegralCast> part_of_explicit_cast
| | |             |     `-ParenExpr 0xc715c0 <col:37, col:40> 'int'
| | |             |       `-UnaryOperator 0xc71578 <col:38, col:39> 'int' prefix '-'
| | |             |         `-IntegerLiteral 0xc71558 <col:39> 'int' 1
| | |             `-ImplicitCastExpr 0xc71658 <col:44> 'unsigned int' <IntegralCast>
| | |               `-IntegerLiteral 0xc71620 <col:44> 'int' 0
| | |-VarDecl 0xc71790 <line:872:7, line:142:42> line:872:28 digits10 'const int' static constexpr cinit
| | | `-ImplicitCastExpr 0xc71b00 <line:142:3, col:42> 'const int' <IntegralCast>
| | |   `-ParenExpr 0xc71ae0 <col:3, col:42> 'unsigned long'
| | |     `-BinaryOperator 0xc71ac0 <line:138:3, line:142:38> 'unsigned long' '/'
| | |       |-BinaryOperator 0xc71a68 <line:138:3, line:142:31> 'unsigned long' '*'
| | |       | |-ParenExpr 0xc71a10 <line:138:3, col:32> 'unsigned long'
| | |       | | `-BinaryOperator 0xc719f0 <line:153:28, line:128:45> 'unsigned long' '-'
| | |       | |   |-BinaryOperator 0xc71860 <line:153:28, <built-in>:71:22> 'unsigned long' '*'
| | |       | |   | |-UnaryExprOrTypeTraitExpr 0xc71808 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:153:28, col:36> 'unsigned long' sizeof 'char32_t'
| | |       | |   | `-ImplicitCastExpr 0xc71848 <<built-in>:71:22> 'unsigned long' <IntegralCast>
| | |       | |   |   `-IntegerLiteral 0xc71828 <col:22> 'int' 8
| | |       | |   `-ImplicitCastExpr 0xc719d8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:128:33, col:45> 'unsigned long' <IntegralCast>
| | |       | |     `-ParenExpr 0xc719b8 <col:33, col:45> 'bool'
| | |       | |       `-BinaryOperator 0xc71998 <col:34, col:44> 'bool' '<'
| | |       | |         |-ImplicitCastExpr 0xc71968 <col:34, col:40> 'unsigned int' <IntegralCast>
| | |       | |         | `-CStyleCastExpr 0xc71920 <col:34, col:40> 'char32_t' <NoOp>
| | |       | |         |   `-ImplicitCastExpr 0xc71908 <col:37, col:40> 'char32_t' <IntegralCast> part_of_explicit_cast
| | |       | |         |     `-ParenExpr 0xc718e8 <col:37, col:40> 'int'
| | |       | |         |       `-UnaryOperator 0xc718a0 <col:38, col:39> 'int' prefix '-'
| | |       | |         |         `-IntegerLiteral 0xc71880 <col:39> 'int' 1
| | |       | |         `-ImplicitCastExpr 0xc71980 <col:44> 'unsigned int' <IntegralCast>
| | |       | |           `-IntegerLiteral 0xc71948 <col:44> 'int' 0
| | |       | `-ImplicitCastExpr 0xc71a50 <line:142:31> 'unsigned long' <IntegralCast>
| | |       |   `-IntegerLiteral 0xc71a30 <col:31> 'long' 643
| | |       `-ImplicitCastExpr 0xc71aa8 <col:38> 'unsigned long' <IntegralCast>
| | |         `-IntegerLiteral 0xc71a88 <col:38> 'int' 2136
| | |-VarDecl 0xc71b88 <line:873:7, col:43> col:28 max_digits10 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc71bf0 <col:43> 'int' 0
| | |-VarDecl 0xc71c78 <line:874:7, line:128:45> line:874:29 referenced is_signed 'const bool' static constexpr cinit
| | | `-ParenExpr 0xc71e18 <line:128:33, col:45> 'bool'
| | |   `-BinaryOperator 0xc71df8 <col:34, col:44> 'bool' '<'
| | |     |-ImplicitCastExpr 0xc71dc8 <col:34, col:40> 'unsigned int' <IntegralCast>
| | |     | `-CStyleCastExpr 0xc71d80 <col:34, col:40> 'char32_t' <NoOp>
| | |     |   `-ImplicitCastExpr 0xc71d68 <col:37, col:40> 'char32_t' <IntegralCast> part_of_explicit_cast
| | |     |     `-ParenExpr 0xc71d48 <col:37, col:40> 'int'
| | |     |       `-UnaryOperator 0xc71d00 <col:38, col:39> 'int' prefix '-'
| | |     |         `-IntegerLiteral 0xc71ce0 <col:39> 'int' 1
| | |     `-ImplicitCastExpr 0xc71de0 <col:44> 'unsigned int' <IntegralCast>
| | |       `-IntegerLiteral 0xc71da8 <col:44> 'int' 0
| | |-VarDecl 0xc71ea0 <line:875:7, col:42> col:29 is_integer 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc71f08 <col:42> 'bool' true
| | |-VarDecl 0xc71f80 <line:876:7, col:40> col:29 is_exact 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc71fe8 <col:40> 'bool' true
| | |-VarDecl 0xc72068 <line:877:7, col:36> col:28 radix 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc720d0 <col:36> 'int' 2
| | |-CXXMethodDecl 0xc72170 <line:879:7, line:880:38> col:7 constexpr epsilon 'char32_t () noexcept' static
| | | `-CompoundStmt 0xc74ec0 <col:26, col:38>
| | |   `-ReturnStmt 0xc74eb0 <col:28, col:35>
| | |     `-ImplicitCastExpr 0xc74e98 <col:35> 'char32_t' <IntegralCast>
| | |       `-IntegerLiteral 0xc74e78 <col:35> 'int' 0
| | |-CXXMethodDecl 0xc72238 <line:882:7, line:883:42> col:7 constexpr round_error 'char32_t () noexcept' static
| | | `-CompoundStmt 0xc74f20 <col:30, col:42>
| | |   `-ReturnStmt 0xc74f10 <col:32, col:39>
| | |     `-ImplicitCastExpr 0xc74ef8 <col:39> 'char32_t' <IntegralCast>
| | |       `-IntegerLiteral 0xc74ed8 <col:39> 'int' 0
| | |-VarDecl 0xc722f0 <line:885:7, col:43> col:28 min_exponent 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc72358 <col:43> 'int' 0
| | |-VarDecl 0xc723e8 <line:886:7, col:45> col:28 min_exponent10 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc72450 <col:45> 'int' 0
| | |-VarDecl 0xc724e0 <line:887:7, col:43> col:28 max_exponent 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc72548 <col:43> 'int' 0
| | |-VarDecl 0xc725d8 <line:888:7, col:45> col:28 max_exponent10 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc72640 <col:45> 'int' 0
| | |-VarDecl 0xc726c8 <line:890:7, col:44> col:29 has_infinity 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc72730 <col:44> 'bool' false
| | |-VarDecl 0xc727a8 <line:891:7, col:45> col:29 has_quiet_NaN 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc72810 <col:45> 'bool' false
| | |-VarDecl 0xc72888 <line:892:7, col:49> col:29 has_signaling_NaN 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc728f0 <col:49> 'bool' false
| | |-VarDecl 0xc72968 <line:893:7, col:56> col:43 has_denorm 'const std::float_denorm_style' static constexpr cinit
| | | `-DeclRefExpr 0xc729d0 <col:56> 'std::float_denorm_style' EnumConstant 0xc54908 'denorm_absent' 'std::float_denorm_style'
| | |-VarDecl 0xc72a58 <line:894:7, col:47> col:29 has_denorm_loss 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc72ac0 <col:47> 'bool' false
| | |-CXXMethodDecl 0xc72b50 <line:896:7, line:897:48> col:7 constexpr infinity 'char32_t () noexcept' static
| | | `-CompoundStmt 0xc74f70 <col:27, col:48>
| | |   `-ReturnStmt 0xc74f60 <col:29, col:45>
| | |     `-CXXScalarValueInitExpr 0xc74f48 <col:36, col:45> 'char32_t'
| | |-CXXMethodDecl 0xc72c18 <line:899:7, line:900:49> col:7 constexpr quiet_NaN 'char32_t () noexcept' static
| | | `-CompoundStmt 0xc74fc0 <col:28, col:49>
| | |   `-ReturnStmt 0xc74fb0 <col:30, col:46>
| | |     `-CXXScalarValueInitExpr 0xc74f98 <col:37, col:46> 'char32_t'
| | |-CXXMethodDecl 0xc72ce0 <line:902:7, line:903:53> col:7 constexpr signaling_NaN 'char32_t () noexcept' static
| | | `-CompoundStmt 0xc75010 <col:32, col:53>
| | |   `-ReturnStmt 0xc75000 <col:34, col:50>
| | |     `-CXXScalarValueInitExpr 0xc74fe8 <col:41, col:50> 'char32_t'
| | |-CXXMethodDecl 0xc72da8 <line:905:7, line:906:50> col:7 constexpr denorm_min 'char32_t () noexcept' static
| | | `-CompoundStmt 0xc75060 <col:29, col:50>
| | |   `-ReturnStmt 0xc75050 <col:31, col:47>
| | |     `-CXXScalarValueInitExpr 0xc75038 <col:38, col:47> 'char32_t'
| | |-VarDecl 0xc72e58 <line:908:7, col:41> col:29 is_iec559 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc72ec0 <col:41> 'bool' false
| | |-VarDecl 0xc72f38 <line:909:7, col:42> col:29 is_bounded 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc72fa0 <col:42> 'bool' true
| | |-VarDecl 0xc73868 <line:910:7, col:42> col:29 is_modulo 'const bool' static constexpr cinit
| | | `-UnaryOperator 0xc73928 <col:41, col:42> 'bool' prefix '!' cannot overflow
| | |   `-ImplicitCastExpr 0xc73910 <col:42> 'bool' <LValueToRValue>
| | |     `-DeclRefExpr 0xc738f0 <col:42> 'const bool' lvalue Var 0xc71c78 'is_signed' 'const bool' non_odr_use_constant
| | |-VarDecl 0xc739a8 <line:912:7, line:80:35> line:912:29 traps 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc73a10 <line:80:35> 'bool' true
| | |-VarDecl 0xc73a88 <line:913:7, col:47> col:29 tinyness_before 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc73af0 <col:47> 'bool' false
| | `-VarDecl 0xc73b68 <line:914:7, col:56> col:42 round_style 'const std::float_round_style' static constexpr cinit
| |   `-DeclRefExpr 0xc73bd0 <col:56> 'std::float_round_style' EnumConstant 0xc54560 'round_toward_zero' 'std::float_round_style'
| |-ClassTemplateSpecializationDecl 0xc750a8 <line:919:3, line:983:5> line:920:12 struct numeric_limits definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'short'
| | |-CXXRecordDecl 0xc752c8 <col:5, col:12> col:12 implicit struct numeric_limits
| | |-VarDecl 0xc75368 <line:922:7, col:59> col:42 is_specialized 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc753d0 <col:59> 'bool' true
| | |-CXXMethodDecl 0xc754f8 <line:924:7, line:925:63> col:7 used constexpr min 'short () noexcept' static
| | | `-CompoundStmt 0xc77610 <col:35, col:63>
| | |   `-ReturnStmt 0xc77600 <col:37, col:60>
| | |     `-ImplicitCastExpr 0xc775e8 <col:44, col:60> 'short' <IntegralCast>
| | |       `-BinaryOperator 0xc775c8 <col:44, col:60> 'int' '-'
| | |         |-UnaryOperator 0xc77590 <col:44, <built-in>:73:22> 'int' prefix '-'
| | |         | `-IntegerLiteral 0xc77570 <col:22> 'int' 32767
| | |         `-IntegerLiteral 0xc775a8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:925:60> 'int' 1
| | |-CXXMethodDecl 0xc755c8 <line:927:7, line:928:58> col:7 constexpr max 'short () noexcept' static
| | | `-CompoundStmt 0xc77670 <col:35, col:58>
| | |   `-ReturnStmt 0xc77660 <col:37, <built-in>:73:22>
| | |     `-ImplicitCastExpr 0xc77648 <col:22> 'short' <IntegralCast>
| | |       `-IntegerLiteral 0xc77628 <col:22> 'int' 32767
| | |-CXXMethodDecl 0xc75698 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:931:7, line:932:41> col:7 constexpr lowest 'short () noexcept' static
| | | `-CompoundStmt 0xc77750 <col:25, col:41>
| | |   `-ReturnStmt 0xc77740 <col:27, col:38>
| | |     `-CallExpr 0xc77720 <col:34, col:38> 'short'
| | |       `-ImplicitCastExpr 0xc77708 <col:34> 'short (*)() noexcept' <FunctionToPointerDecay>
| | |         `-DeclRefExpr 0xc77688 <col:34> 'short () noexcept' lvalue CXXMethod 0xc754f8 'min' 'short () noexcept'
| | |-VarDecl 0xc75750 <line:935:7, line:138:32> line:935:41 digits 'const int' static constexpr cinit
| | | `-ImplicitCastExpr 0xc759e8 <line:138:3, col:32> 'const int' <IntegralCast>
| | |   `-ParenExpr 0xc759c8 <col:3, col:32> 'unsigned long'
| | |     `-BinaryOperator 0xc759a8 <line:151:26, line:128:45> 'unsigned long' '-'
| | |       |-BinaryOperator 0xc75828 <line:151:26, <built-in>:71:22> 'unsigned long' '*'
| | |       | |-UnaryExprOrTypeTraitExpr 0xc757d0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:151:26, col:34> 'unsigned long' sizeof 'short'
| | |       | `-ImplicitCastExpr 0xc75810 <<built-in>:71:22> 'unsigned long' <IntegralCast>
| | |       |   `-IntegerLiteral 0xc757f0 <col:22> 'int' 8
| | |       `-ImplicitCastExpr 0xc75990 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:128:33, col:45> 'unsigned long' <IntegralCast>
| | |         `-ParenExpr 0xc75970 <col:33, col:45> 'bool'
| | |           `-BinaryOperator 0xc75950 <col:34, col:44> 'bool' '<'
| | |             |-ImplicitCastExpr 0xc75938 <col:34, col:40> 'int' <IntegralCast>
| | |             | `-CStyleCastExpr 0xc758f0 <col:34, col:40> 'short' <NoOp>
| | |             |   `-ImplicitCastExpr 0xc758d8 <col:37, col:40> 'short' <IntegralCast> part_of_explicit_cast
| | |             |     `-ParenExpr 0xc758b8 <col:37, col:40> 'int'
| | |             |       `-UnaryOperator 0xc75868 <col:38, col:39> 'int' prefix '-'
| | |             |         `-IntegerLiteral 0xc75848 <col:39> 'int' 1
| | |             `-IntegerLiteral 0xc75918 <col:44> 'int' 0
| | |-VarDecl 0xc75a70 <line:936:7, line:142:42> line:936:41 digits10 'const int' static constexpr cinit
| | | `-ImplicitCastExpr 0xc75dd8 <line:142:3, col:42> 'const int' <IntegralCast>
| | |   `-ParenExpr 0xc75db8 <col:3, col:42> 'unsigned long'
| | |     `-BinaryOperator 0xc75d98 <line:138:3, line:142:38> 'unsigned long' '/'
| | |       |-BinaryOperator 0xc75d40 <line:138:3, line:142:31> 'unsigned long' '*'
| | |       | |-ParenExpr 0xc75ce8 <line:138:3, col:32> 'unsigned long'
| | |       | | `-BinaryOperator 0xc75cc8 <line:153:28, line:128:45> 'unsigned long' '-'
| | |       | |   |-BinaryOperator 0xc75b48 <line:153:28, <built-in>:71:22> 'unsigned long' '*'
| | |       | |   | |-UnaryExprOrTypeTraitExpr 0xc75af0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:153:28, col:36> 'unsigned long' sizeof 'short'
| | |       | |   | `-ImplicitCastExpr 0xc75b30 <<built-in>:71:22> 'unsigned long' <IntegralCast>
| | |       | |   |   `-IntegerLiteral 0xc75b10 <col:22> 'int' 8
| | |       | |   `-ImplicitCastExpr 0xc75cb0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:128:33, col:45> 'unsigned long' <IntegralCast>
| | |       | |     `-ParenExpr 0xc75c90 <col:33, col:45> 'bool'
| | |       | |       `-BinaryOperator 0xc75c70 <col:34, col:44> 'bool' '<'
| | |       | |         |-ImplicitCastExpr 0xc75c58 <col:34, col:40> 'int' <IntegralCast>
| | |       | |         | `-CStyleCastExpr 0xc75c10 <col:34, col:40> 'short' <NoOp>
| | |       | |         |   `-ImplicitCastExpr 0xc75bf8 <col:37, col:40> 'short' <IntegralCast> part_of_explicit_cast
| | |       | |         |     `-ParenExpr 0xc75bd8 <col:37, col:40> 'int'
| | |       | |         |       `-UnaryOperator 0xc75b88 <col:38, col:39> 'int' prefix '-'
| | |       | |         |         `-IntegerLiteral 0xc75b68 <col:39> 'int' 1
| | |       | |         `-IntegerLiteral 0xc75c38 <col:44> 'int' 0
| | |       | `-ImplicitCastExpr 0xc75d28 <line:142:31> 'unsigned long' <IntegralCast>
| | |       |   `-IntegerLiteral 0xc75d08 <col:31> 'long' 643
| | |       `-ImplicitCastExpr 0xc75d80 <col:38> 'unsigned long' <IntegralCast>
| | |         `-IntegerLiteral 0xc75d60 <col:38> 'int' 2136
| | |-VarDecl 0xc75e60 <line:938:7, col:43> col:28 max_digits10 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc75ec8 <col:43> 'int' 0
| | |-VarDecl 0xc75f50 <line:940:7, col:54> col:42 is_signed 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc75fb8 <col:54> 'bool' true
| | |-VarDecl 0xc76030 <line:941:7, col:55> col:42 is_integer 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc76098 <col:55> 'bool' true
| | |-VarDecl 0xc76110 <line:942:7, col:53> col:42 is_exact 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc76178 <col:53> 'bool' true
| | |-VarDecl 0xc761f8 <line:943:7, col:49> col:41 radix 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc76260 <col:49> 'int' 2
| | |-CXXMethodDecl 0xc76308 <line:945:7, line:946:51> col:7 constexpr epsilon 'short () noexcept' static
| | | `-CompoundStmt 0xc777b0 <col:39, col:51>
| | |   `-ReturnStmt 0xc777a0 <col:41, col:48>
| | |     `-ImplicitCastExpr 0xc77788 <col:48> 'short' <IntegralCast>
| | |       `-IntegerLiteral 0xc77768 <col:48> 'int' 0
| | |-CXXMethodDecl 0xc763d8 <line:948:7, line:949:55> col:7 constexpr round_error 'short () noexcept' static
| | | `-CompoundStmt 0xc77820 <col:43, col:55>
| | |   `-ReturnStmt 0xc77810 <col:45, col:52>
| | |     `-ImplicitCastExpr 0xc777e8 <col:52> 'short' <IntegralCast>
| | |       `-IntegerLiteral 0xc777c8 <col:52> 'int' 0
| | |-VarDecl 0xc76490 <line:951:7, col:56> col:41 min_exponent 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc764f8 <col:56> 'int' 0
| | |-VarDecl 0xc76588 <line:952:7, col:58> col:41 min_exponent10 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc765f0 <col:58> 'int' 0
| | |-VarDecl 0xc76680 <line:953:7, col:56> col:41 max_exponent 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc766e8 <col:56> 'int' 0
| | |-VarDecl 0xc76778 <line:954:7, col:58> col:41 max_exponent10 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc767e0 <col:58> 'int' 0
| | |-VarDecl 0xc76868 <line:956:7, col:57> col:42 has_infinity 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc768d0 <col:57> 'bool' false
| | |-VarDecl 0xc76948 <line:957:7, col:58> col:42 has_quiet_NaN 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc769b0 <col:58> 'bool' false
| | |-VarDecl 0xc76a28 <line:958:7, col:62> col:42 has_signaling_NaN 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc76a90 <col:62> 'bool' false
| | |-VarDecl 0xc76b08 <line:959:7, line:960:10> line:959:56 has_denorm 'const std::float_denorm_style' static constexpr cinit
| | | `-DeclRefExpr 0xc76b70 <line:960:10> 'std::float_denorm_style' EnumConstant 0xc54908 'denorm_absent' 'std::float_denorm_style'
| | |-VarDecl 0xc76bf8 <line:961:7, col:60> col:42 has_denorm_loss 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc76c60 <col:60> 'bool' false
| | |-CXXMethodDecl 0xc76cf8 <line:963:7, line:964:58> col:7 constexpr infinity 'short () noexcept' static
| | | `-CompoundStmt 0xc77878 <col:40, col:58>
| | |   `-ReturnStmt 0xc77868 <col:42, col:55>
| | |     `-CXXScalarValueInitExpr 0xc77850 <col:49, col:55> 'short'
| | |-CXXMethodDecl 0xc76dc8 <line:966:7, line:967:59> col:7 constexpr quiet_NaN 'short () noexcept' static
| | | `-CompoundStmt 0xc778d0 <col:41, col:59>
| | |   `-ReturnStmt 0xc778c0 <col:43, col:56>
| | |     `-CXXScalarValueInitExpr 0xc778a8 <col:50, col:56> 'short'
| | |-CXXMethodDecl 0xc76e98 <line:969:7, line:970:63> col:7 constexpr signaling_NaN 'short () noexcept' static
| | | `-CompoundStmt 0xc77928 <col:45, col:63>
| | |   `-ReturnStmt 0xc77918 <col:47, col:60>
| | |     `-CXXScalarValueInitExpr 0xc77900 <col:54, col:60> 'short'
| | |-CXXMethodDecl 0xc76f68 <line:972:7, line:973:60> col:7 constexpr denorm_min 'short () noexcept' static
| | | `-CompoundStmt 0xc77980 <col:42, col:60>
| | |   `-ReturnStmt 0xc77970 <col:44, col:57>
| | |     `-CXXScalarValueInitExpr 0xc77958 <col:51, col:57> 'short'
| | |-VarDecl 0xc77018 <line:975:7, col:54> col:42 is_iec559 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc77080 <col:54> 'bool' false
| | |-VarDecl 0xc770f8 <line:976:7, col:55> col:42 is_bounded 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc77160 <col:55> 'bool' true
| | |-VarDecl 0xc771d8 <line:977:7, col:54> col:42 is_modulo 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc77240 <col:54> 'bool' false
| | |-VarDecl 0xc772b8 <line:979:7, line:80:35> line:979:42 traps 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc77320 <line:80:35> 'bool' true
| | |-VarDecl 0xc77398 <line:980:7, col:60> col:42 tinyness_before 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc77400 <col:60> 'bool' false
| | `-VarDecl 0xc77478 <line:981:7, line:982:10> line:981:55 round_style 'const std::float_round_style' static constexpr cinit
| |   `-DeclRefExpr 0xc774e0 <line:982:10> 'std::float_round_style' EnumConstant 0xc54560 'round_toward_zero' 'std::float_round_style'
| |-ClassTemplateSpecializationDecl 0xc779c8 <line:986:3, line:1056:5> line:987:12 struct numeric_limits definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'unsigned short'
| | |-CXXRecordDecl 0xc77be8 <col:5, col:12> col:12 implicit struct numeric_limits
| | |-VarDecl 0xc77c88 <line:989:7, col:59> col:42 is_specialized 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc77cf0 <col:59> 'bool' true
| | |-CXXMethodDecl 0xc77e18 <line:991:7, line:992:47> col:7 used constexpr min 'unsigned short () noexcept' static
| | | `-CompoundStmt 0xc79ed8 <col:35, col:47>
| | |   `-ReturnStmt 0xc79ec8 <col:37, col:44>
| | |     `-ImplicitCastExpr 0xc79eb0 <col:44> 'unsigned short' <IntegralCast>
| | |       `-IntegerLiteral 0xc79e90 <col:44> 'int' 0
| | |-CXXMethodDecl 0xc77ee8 <line:994:7, line:995:67> col:7 constexpr max 'unsigned short () noexcept' static
| | | `-CompoundStmt 0xc79fe8 <col:35, col:67>
| | |   `-ReturnStmt 0xc79fd8 <col:37, col:64>
| | |     `-ImplicitCastExpr 0xc79fc0 <<built-in>:73:22, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:995:64> 'unsigned short' <IntegralCast>
| | |       `-BinaryOperator 0xc79fa0 <<built-in>:73:22, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:995:64> 'unsigned int' '+'
| | |         |-BinaryOperator 0xc79f48 <<built-in>:73:22, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:995:59> 'unsigned int' '*'
| | |         | |-ImplicitCastExpr 0xc79f30 <<built-in>:73:22> 'unsigned int' <IntegralCast>
| | |         | | `-IntegerLiteral 0xc79ef0 <col:22> 'int' 32767
| | |         | `-IntegerLiteral 0xc79f10 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:995:59> 'unsigned int' 2
| | |         `-ImplicitCastExpr 0xc79f88 <col:64> 'unsigned int' <IntegralCast>
| | |           `-IntegerLiteral 0xc79f68 <col:64> 'int' 1
| | |-CXXMethodDecl 0xc77fb8 <line:998:7, line:999:41> col:7 constexpr lowest 'unsigned short () noexcept' static
| | | `-CompoundStmt 0xc7a0c0 <col:25, col:41>
| | |   `-ReturnStmt 0xc7a0b0 <col:27, col:38>
| | |     `-CallExpr 0xc7a090 <col:34, col:38> 'unsigned short'
| | |       `-ImplicitCastExpr 0xc7a078 <col:34> 'unsigned short (*)() noexcept' <FunctionToPointerDecay>
| | |         `-DeclRefExpr 0xc7a000 <col:34> 'unsigned short () noexcept' lvalue CXXMethod 0xc77e18 'min' 'unsigned short () noexcept'
| | |-VarDecl 0xc78070 <line:1002:7, line:138:32> line:1002:41 digits 'const int' static constexpr cinit
| | | `-ImplicitCastExpr 0xc78308 <line:138:3, col:32> 'const int' <IntegralCast>
| | |   `-ParenExpr 0xc782e8 <col:3, col:32> 'unsigned long'
| | |     `-BinaryOperator 0xc782c8 <line:151:26, line:128:45> 'unsigned long' '-'
| | |       |-BinaryOperator 0xc78148 <line:151:26, <built-in>:71:22> 'unsigned long' '*'
| | |       | |-UnaryExprOrTypeTraitExpr 0xc780f0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:151:26, col:34> 'unsigned long' sizeof 'unsigned short'
| | |       | `-ImplicitCastExpr 0xc78130 <<built-in>:71:22> 'unsigned long' <IntegralCast>
| | |       |   `-IntegerLiteral 0xc78110 <col:22> 'int' 8
| | |       `-ImplicitCastExpr 0xc782b0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:128:33, col:45> 'unsigned long' <IntegralCast>
| | |         `-ParenExpr 0xc78290 <col:33, col:45> 'bool'
| | |           `-BinaryOperator 0xc78270 <col:34, col:44> 'bool' '<'
| | |             |-ImplicitCastExpr 0xc78258 <col:34, col:40> 'int' <IntegralCast>
| | |             | `-CStyleCastExpr 0xc78210 <col:34, col:40> 'unsigned short' <NoOp>
| | |             |   `-ImplicitCastExpr 0xc781f8 <col:37, col:40> 'unsigned short' <IntegralCast> part_of_explicit_cast
| | |             |     `-ParenExpr 0xc781d8 <col:37, col:40> 'int'
| | |             |       `-UnaryOperator 0xc78188 <col:38, col:39> 'int' prefix '-'
| | |             |         `-IntegerLiteral 0xc78168 <col:39> 'int' 1
| | |             `-IntegerLiteral 0xc78238 <col:44> 'int' 0
| | |-VarDecl 0xc78390 <line:1004:7, line:142:42> line:1004:41 digits10 'const int' static constexpr cinit
| | | `-ImplicitCastExpr 0xc786f8 <line:142:3, col:42> 'const int' <IntegralCast>
| | |   `-ParenExpr 0xc786d8 <col:3, col:42> 'unsigned long'
| | |     `-BinaryOperator 0xc786b8 <line:138:3, line:142:38> 'unsigned long' '/'
| | |       |-BinaryOperator 0xc78660 <line:138:3, line:142:31> 'unsigned long' '*'
| | |       | |-ParenExpr 0xc78608 <line:138:3, col:32> 'unsigned long'
| | |       | | `-BinaryOperator 0xc785e8 <line:153:28, line:128:45> 'unsigned long' '-'
| | |       | |   |-BinaryOperator 0xc78468 <line:153:28, <built-in>:71:22> 'unsigned long' '*'
| | |       | |   | |-UnaryExprOrTypeTraitExpr 0xc78410 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:153:28, col:36> 'unsigned long' sizeof 'unsigned short'
| | |       | |   | `-ImplicitCastExpr 0xc78450 <<built-in>:71:22> 'unsigned long' <IntegralCast>
| | |       | |   |   `-IntegerLiteral 0xc78430 <col:22> 'int' 8
| | |       | |   `-ImplicitCastExpr 0xc785d0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:128:33, col:45> 'unsigned long' <IntegralCast>
| | |       | |     `-ParenExpr 0xc785b0 <col:33, col:45> 'bool'
| | |       | |       `-BinaryOperator 0xc78590 <col:34, col:44> 'bool' '<'
| | |       | |         |-ImplicitCastExpr 0xc78578 <col:34, col:40> 'int' <IntegralCast>
| | |       | |         | `-CStyleCastExpr 0xc78530 <col:34, col:40> 'unsigned short' <NoOp>
| | |       | |         |   `-ImplicitCastExpr 0xc78518 <col:37, col:40> 'unsigned short' <IntegralCast> part_of_explicit_cast
| | |       | |         |     `-ParenExpr 0xc784f8 <col:37, col:40> 'int'
| | |       | |         |       `-UnaryOperator 0xc784a8 <col:38, col:39> 'int' prefix '-'
| | |       | |         |         `-IntegerLiteral 0xc78488 <col:39> 'int' 1
| | |       | |         `-IntegerLiteral 0xc78558 <col:44> 'int' 0
| | |       | `-ImplicitCastExpr 0xc78648 <line:142:31> 'unsigned long' <IntegralCast>
| | |       |   `-IntegerLiteral 0xc78628 <col:31> 'long' 643
| | |       `-ImplicitCastExpr 0xc786a0 <col:38> 'unsigned long' <IntegralCast>
| | |         `-IntegerLiteral 0xc78680 <col:38> 'int' 2136
| | |-VarDecl 0xc78780 <line:1007:7, col:43> col:28 max_digits10 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc787e8 <col:43> 'int' 0
| | |-VarDecl 0xc78870 <line:1009:7, col:54> col:42 is_signed 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc788d8 <col:54> 'bool' false
| | |-VarDecl 0xc78950 <line:1010:7, col:55> col:42 is_integer 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc789b8 <col:55> 'bool' true
| | |-VarDecl 0xc78a30 <line:1011:7, col:53> col:42 is_exact 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc78a98 <col:53> 'bool' true
| | |-VarDecl 0xc78b18 <line:1012:7, col:49> col:41 radix 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc78b80 <col:49> 'int' 2
| | |-CXXMethodDecl 0xc78c28 <line:1014:7, line:1015:51> col:7 constexpr epsilon 'unsigned short () noexcept' static
| | | `-CompoundStmt 0xc7a120 <col:39, col:51>
| | |   `-ReturnStmt 0xc7a110 <col:41, col:48>
| | |     `-ImplicitCastExpr 0xc7a0f8 <col:48> 'unsigned short' <IntegralCast>
| | |       `-IntegerLiteral 0xc7a0d8 <col:48> 'int' 0
| | |-CXXMethodDecl 0xc78cf8 <line:1017:7, line:1018:55> col:7 constexpr round_error 'unsigned short () noexcept' static
| | | `-CompoundStmt 0xc7a180 <col:43, col:55>
| | |   `-ReturnStmt 0xc7a170 <col:45, col:52>
| | |     `-ImplicitCastExpr 0xc7a158 <col:52> 'unsigned short' <IntegralCast>
| | |       `-IntegerLiteral 0xc7a138 <col:52> 'int' 0
| | |-VarDecl 0xc78db0 <line:1020:7, col:56> col:41 min_exponent 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc78e18 <col:56> 'int' 0
| | |-VarDecl 0xc78ea8 <line:1021:7, col:58> col:41 min_exponent10 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc78f10 <col:58> 'int' 0
| | |-VarDecl 0xc78fa0 <line:1022:7, col:56> col:41 max_exponent 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc79008 <col:56> 'int' 0
| | |-VarDecl 0xc79098 <line:1023:7, col:58> col:41 max_exponent10 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc79100 <col:58> 'int' 0
| | |-VarDecl 0xc79188 <line:1025:7, col:57> col:42 has_infinity 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc791f0 <col:57> 'bool' false
| | |-VarDecl 0xc79268 <line:1026:7, col:58> col:42 has_quiet_NaN 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc792d0 <col:58> 'bool' false
| | |-VarDecl 0xc79348 <line:1027:7, col:62> col:42 has_signaling_NaN 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc793b0 <col:62> 'bool' false
| | |-VarDecl 0xc79428 <line:1028:7, line:1029:10> line:1028:56 has_denorm 'const std::float_denorm_style' static constexpr cinit
| | | `-DeclRefExpr 0xc79490 <line:1029:10> 'std::float_denorm_style' EnumConstant 0xc54908 'denorm_absent' 'std::float_denorm_style'
| | |-VarDecl 0xc79518 <line:1030:7, col:60> col:42 has_denorm_loss 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc79580 <col:60> 'bool' false
| | |-CXXMethodDecl 0xc79618 <line:1032:7, line:1034:48> line:1033:7 constexpr infinity 'unsigned short () noexcept' static
| | | `-CompoundStmt 0xc7a228 <line:1034:7, col:48>
| | |   `-ReturnStmt 0xc7a218 <col:9, col:45>
| | |     `-CXXStaticCastExpr 0xc7a1e8 <col:16, col:45> 'unsigned short' static_cast<unsigned short> <NoOp>
| | |       `-ImplicitCastExpr 0xc7a1d0 <col:44> 'unsigned short' <IntegralCast> part_of_explicit_cast
| | |         `-IntegerLiteral 0xc7a198 <col:44> 'int' 0
| | |-CXXMethodDecl 0xc796e8 <line:1036:7, line:1038:48> line:1037:7 constexpr quiet_NaN 'unsigned short () noexcept' static
| | | `-CompoundStmt 0xc7a2d0 <line:1038:7, col:48>
| | |   `-ReturnStmt 0xc7a2c0 <col:9, col:45>
| | |     `-CXXStaticCastExpr 0xc7a290 <col:16, col:45> 'unsigned short' static_cast<unsigned short> <NoOp>
| | |       `-ImplicitCastExpr 0xc7a278 <col:44> 'unsigned short' <IntegralCast> part_of_explicit_cast
| | |         `-IntegerLiteral 0xc7a240 <col:44> 'int' 0
| | |-CXXMethodDecl 0xc797b8 <line:1040:7, line:1042:48> line:1041:7 constexpr signaling_NaN 'unsigned short () noexcept' static
| | | `-CompoundStmt 0xc7a378 <line:1042:7, col:48>
| | |   `-ReturnStmt 0xc7a368 <col:9, col:45>
| | |     `-CXXStaticCastExpr 0xc7a338 <col:16, col:45> 'unsigned short' static_cast<unsigned short> <NoOp>
| | |       `-ImplicitCastExpr 0xc7a320 <col:44> 'unsigned short' <IntegralCast> part_of_explicit_cast
| | |         `-IntegerLiteral 0xc7a2e8 <col:44> 'int' 0
| | |-CXXMethodDecl 0xc79888 <line:1044:7, line:1046:48> line:1045:7 constexpr denorm_min 'unsigned short () noexcept' static
| | | `-CompoundStmt 0xc7a420 <line:1046:7, col:48>
| | |   `-ReturnStmt 0xc7a410 <col:9, col:45>
| | |     `-CXXStaticCastExpr 0xc7a3e0 <col:16, col:45> 'unsigned short' static_cast<unsigned short> <NoOp>
| | |       `-ImplicitCastExpr 0xc7a3c8 <col:44> 'unsigned short' <IntegralCast> part_of_explicit_cast
| | |         `-IntegerLiteral 0xc7a390 <col:44> 'int' 0
| | |-VarDecl 0xc79938 <line:1048:7, col:54> col:42 is_iec559 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc799a0 <col:54> 'bool' false
| | |-VarDecl 0xc79a18 <line:1049:7, col:55> col:42 is_bounded 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc79a80 <col:55> 'bool' true
| | |-VarDecl 0xc79af8 <line:1050:7, col:54> col:42 is_modulo 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc79b60 <col:54> 'bool' true
| | |-VarDecl 0xc79bd8 <line:1052:7, line:80:35> line:1052:42 traps 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc79c40 <line:80:35> 'bool' true
| | |-VarDecl 0xc79cb8 <line:1053:7, col:60> col:42 tinyness_before 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc79d20 <col:60> 'bool' false
| | `-VarDecl 0xc79d98 <line:1054:7, line:1055:10> line:1054:55 round_style 'const std::float_round_style' static constexpr cinit
| |   `-DeclRefExpr 0xc79e00 <line:1055:10> 'std::float_round_style' EnumConstant 0xc54560 'round_toward_zero' 'std::float_round_style'
| |-ClassTemplateSpecializationDecl 0xc7a468 <line:1059:3, line:1123:5> line:1060:12 struct numeric_limits definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'int'
| | |-CXXRecordDecl 0xc7a688 <col:5, col:12> col:12 implicit struct numeric_limits
| | |-VarDecl 0xc7a728 <line:1062:7, col:59> col:42 is_specialized 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc7a790 <col:59> 'bool' true
| | |-CXXMethodDecl 0xc7a888 <line:1064:7, line:1065:62> col:7 used constexpr min 'int () noexcept' static
| | | `-CompoundStmt 0xc7d998 <col:35, col:62>
| | |   `-ReturnStmt 0xc7d988 <col:37, col:59>
| | |     `-BinaryOperator 0xc7d968 <col:44, col:59> 'int' '-'
| | |       |-UnaryOperator 0xc7d930 <col:44, <built-in>:74:21> 'int' prefix '-'
| | |       | `-IntegerLiteral 0xc7d910 <col:21> 'int' 2147483647
| | |       `-IntegerLiteral 0xc7d948 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1065:59> 'int' 1
| | |-CXXMethodDecl 0xc7a958 <line:1067:7, line:1068:57> col:7 constexpr max 'int () noexcept' static
| | | `-CompoundStmt 0xc7d9e0 <col:35, col:57>
| | |   `-ReturnStmt 0xc7d9d0 <col:37, <built-in>:74:21>
| | |     `-IntegerLiteral 0xc7d9b0 <col:21> 'int' 2147483647
| | |-CXXMethodDecl 0xc7aa28 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1071:7, line:1072:41> col:7 constexpr lowest 'int () noexcept' static
| | | `-CompoundStmt 0xc7dac0 <col:25, col:41>
| | |   `-ReturnStmt 0xc7dab0 <col:27, col:38>
| | |     `-CallExpr 0xc7da90 <col:34, col:38> 'int'
| | |       `-ImplicitCastExpr 0xc7da78 <col:34> 'int (*)() noexcept' <FunctionToPointerDecay>
| | |         `-DeclRefExpr 0xc7d9f8 <col:34> 'int () noexcept' lvalue CXXMethod 0xc7a888 'min' 'int () noexcept'
| | |-VarDecl 0xc7aae0 <line:1075:7, line:138:32> line:1075:41 digits 'const int' static constexpr cinit
| | | `-ImplicitCastExpr 0xc7ad48 <line:138:3, col:32> 'const int' <IntegralCast>
| | |   `-ParenExpr 0xc7ad28 <col:3, col:32> 'unsigned long'
| | |     `-BinaryOperator 0xc7ad08 <line:151:26, line:128:45> 'unsigned long' '-'
| | |       |-BinaryOperator 0xc7abb8 <line:151:26, <built-in>:71:22> 'unsigned long' '*'
| | |       | |-UnaryExprOrTypeTraitExpr 0xc7ab60 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:151:26, col:34> 'unsigned long' sizeof 'int'
| | |       | `-ImplicitCastExpr 0xc7aba0 <<built-in>:71:22> 'unsigned long' <IntegralCast>
| | |       |   `-IntegerLiteral 0xc7ab80 <col:22> 'int' 8
| | |       `-ImplicitCastExpr 0xc7acf0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:128:33, col:45> 'unsigned long' <IntegralCast>
| | |         `-ParenExpr 0xc7acd0 <col:33, col:45> 'bool'
| | |           `-BinaryOperator 0xc7acb0 <col:34, col:44> 'bool' '<'
| | |             |-CStyleCastExpr 0xc7ac68 <col:34, col:40> 'int' <NoOp>
| | |             | `-ParenExpr 0xc7ac48 <col:37, col:40> 'int'
| | |             |   `-UnaryOperator 0xc7abf8 <col:38, col:39> 'int' prefix '-'
| | |             |     `-IntegerLiteral 0xc7abd8 <col:39> 'int' 1
| | |             `-IntegerLiteral 0xc7ac90 <col:44> 'int' 0
| | |-VarDecl 0xc7add0 <line:1076:7, line:142:42> line:1076:41 digits10 'const int' static constexpr cinit
| | | `-ImplicitCastExpr 0xc7b108 <line:142:3, col:42> 'const int' <IntegralCast>
| | |   `-ParenExpr 0xc7b0e8 <col:3, col:42> 'unsigned long'
| | |     `-BinaryOperator 0xc7b0c8 <line:138:3, line:142:38> 'unsigned long' '/'
| | |       |-BinaryOperator 0xc7b070 <line:138:3, line:142:31> 'unsigned long' '*'
| | |       | |-ParenExpr 0xc7b018 <line:138:3, col:32> 'unsigned long'
| | |       | | `-BinaryOperator 0xc7aff8 <line:153:28, line:128:45> 'unsigned long' '-'
| | |       | |   |-BinaryOperator 0xc7aea8 <line:153:28, <built-in>:71:22> 'unsigned long' '*'
| | |       | |   | |-UnaryExprOrTypeTraitExpr 0xc7ae50 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:153:28, col:36> 'unsigned long' sizeof 'int'
| | |       | |   | `-ImplicitCastExpr 0xc7ae90 <<built-in>:71:22> 'unsigned long' <IntegralCast>
| | |       | |   |   `-IntegerLiteral 0xc7ae70 <col:22> 'int' 8
| | |       | |   `-ImplicitCastExpr 0xc7afe0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:128:33, col:45> 'unsigned long' <IntegralCast>
| | |       | |     `-ParenExpr 0xc7afc0 <col:33, col:45> 'bool'
| | |       | |       `-BinaryOperator 0xc7afa0 <col:34, col:44> 'bool' '<'
| | |       | |         |-CStyleCastExpr 0xc7af58 <col:34, col:40> 'int' <NoOp>
| | |       | |         | `-ParenExpr 0xc7af38 <col:37, col:40> 'int'
| | |       | |         |   `-UnaryOperator 0xc7aee8 <col:38, col:39> 'int' prefix '-'
| | |       | |         |     `-IntegerLiteral 0xc7aec8 <col:39> 'int' 1
| | |       | |         `-IntegerLiteral 0xc7af80 <col:44> 'int' 0
| | |       | `-ImplicitCastExpr 0xc7b058 <line:142:31> 'unsigned long' <IntegralCast>
| | |       |   `-IntegerLiteral 0xc7b038 <col:31> 'long' 643
| | |       `-ImplicitCastExpr 0xc7b0b0 <col:38> 'unsigned long' <IntegralCast>
| | |         `-IntegerLiteral 0xc7b090 <col:38> 'int' 2136
| | |-VarDecl 0xc7b190 <line:1078:7, col:43> col:28 max_digits10 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc7b1f8 <col:43> 'int' 0
| | |-VarDecl 0xc7b280 <line:1080:7, col:54> col:42 is_signed 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc7b2e8 <col:54> 'bool' true
| | |-VarDecl 0xc7b360 <line:1081:7, col:55> col:42 is_integer 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc7b3c8 <col:55> 'bool' true
| | |-VarDecl 0xc7b440 <line:1082:7, col:53> col:42 is_exact 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc7b4a8 <col:53> 'bool' true
| | |-VarDecl 0xc7b528 <line:1083:7, col:49> col:41 radix 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc7b590 <col:49> 'int' 2
| | |-CXXMethodDecl 0xc7b638 <line:1085:7, line:1086:51> col:7 constexpr epsilon 'int () noexcept' static
| | | `-CompoundStmt 0xc7db08 <col:39, col:51>
| | |   `-ReturnStmt 0xc7daf8 <col:41, col:48>
| | |     `-IntegerLiteral 0xc7dad8 <col:48> 'int' 0
| | |-CXXMethodDecl 0xc7b708 <line:1088:7, line:1089:55> col:7 constexpr round_error 'int () noexcept' static
| | | `-CompoundStmt 0xc7db50 <col:43, col:55>
| | |   `-ReturnStmt 0xc7db40 <col:45, col:52>
| | |     `-IntegerLiteral 0xc7db20 <col:52> 'int' 0
| | |-VarDecl 0xc7c830 <line:1091:7, col:56> col:41 min_exponent 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc7c898 <col:56> 'int' 0
| | |-VarDecl 0xc7c928 <line:1092:7, col:58> col:41 min_exponent10 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc7c990 <col:58> 'int' 0
| | |-VarDecl 0xc7ca20 <line:1093:7, col:56> col:41 max_exponent 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc7ca88 <col:56> 'int' 0
| | |-VarDecl 0xc7cb18 <line:1094:7, col:58> col:41 max_exponent10 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc7cb80 <col:58> 'int' 0
| | |-VarDecl 0xc7cc08 <line:1096:7, col:57> col:42 has_infinity 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc7cc70 <col:57> 'bool' false
| | |-VarDecl 0xc7cce8 <line:1097:7, col:58> col:42 has_quiet_NaN 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc7cd50 <col:58> 'bool' false
| | |-VarDecl 0xc7cdc8 <line:1098:7, col:62> col:42 has_signaling_NaN 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc7ce30 <col:62> 'bool' false
| | |-VarDecl 0xc7cea8 <line:1099:7, line:1100:10> line:1099:56 has_denorm 'const std::float_denorm_style' static constexpr cinit
| | | `-DeclRefExpr 0xc7cf10 <line:1100:10> 'std::float_denorm_style' EnumConstant 0xc54908 'denorm_absent' 'std::float_denorm_style'
| | |-VarDecl 0xc7cf98 <line:1101:7, col:60> col:42 has_denorm_loss 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc7d000 <col:60> 'bool' false
| | |-CXXMethodDecl 0xc7d098 <line:1103:7, line:1104:70> col:7 constexpr infinity 'int () noexcept' static
| | | `-CompoundStmt 0xc7dbe0 <col:40, col:70>
| | |   `-ReturnStmt 0xc7dbd0 <col:42, col:67>
| | |     `-CXXStaticCastExpr 0xc7dba0 <col:49, col:67> 'int' static_cast<int> <NoOp>
| | |       `-IntegerLiteral 0xc7db68 <col:66> 'int' 0
| | |-CXXMethodDecl 0xc7d168 <line:1106:7, line:1107:71> col:7 constexpr quiet_NaN 'int () noexcept' static
| | | `-CompoundStmt 0xc7dc70 <col:41, col:71>
| | |   `-ReturnStmt 0xc7dc60 <col:43, col:68>
| | |     `-CXXStaticCastExpr 0xc7dc30 <col:50, col:68> 'int' static_cast<int> <NoOp>
| | |       `-IntegerLiteral 0xc7dbf8 <col:67> 'int' 0
| | |-CXXMethodDecl 0xc7d238 <line:1109:7, line:1110:75> col:7 constexpr signaling_NaN 'int () noexcept' static
| | | `-CompoundStmt 0xc7dd00 <col:45, col:75>
| | |   `-ReturnStmt 0xc7dcf0 <col:47, col:72>
| | |     `-CXXStaticCastExpr 0xc7dcc0 <col:54, col:72> 'int' static_cast<int> <NoOp>
| | |       `-IntegerLiteral 0xc7dc88 <col:71> 'int' 0
| | |-CXXMethodDecl 0xc7d308 <line:1112:7, line:1113:72> col:7 constexpr denorm_min 'int () noexcept' static
| | | `-CompoundStmt 0xc7dd90 <col:42, col:72>
| | |   `-ReturnStmt 0xc7dd80 <col:44, col:69>
| | |     `-CXXStaticCastExpr 0xc7dd50 <col:51, col:69> 'int' static_cast<int> <NoOp>
| | |       `-IntegerLiteral 0xc7dd18 <col:68> 'int' 0
| | |-VarDecl 0xc7d3b8 <line:1115:7, col:54> col:42 is_iec559 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc7d420 <col:54> 'bool' false
| | |-VarDecl 0xc7d498 <line:1116:7, col:55> col:42 is_bounded 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc7d500 <col:55> 'bool' true
| | |-VarDecl 0xc7d578 <line:1117:7, col:54> col:42 is_modulo 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc7d5e0 <col:54> 'bool' false
| | |-VarDecl 0xc7d658 <line:1119:7, line:80:35> line:1119:42 traps 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc7d6c0 <line:80:35> 'bool' true
| | |-VarDecl 0xc7d738 <line:1120:7, col:60> col:42 tinyness_before 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc7d7a0 <col:60> 'bool' false
| | `-VarDecl 0xc7d818 <line:1121:7, line:1122:10> line:1121:55 round_style 'const std::float_round_style' static constexpr cinit
| |   `-DeclRefExpr 0xc7d880 <line:1122:10> 'std::float_round_style' EnumConstant 0xc54560 'round_toward_zero' 'std::float_round_style'
| |-ClassTemplateSpecializationDecl 0xc7ddd8 <line:1126:3, line:1195:5> line:1127:12 struct numeric_limits definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'unsigned int'
| | |-CXXRecordDecl 0xc7dff8 <col:5, col:12> col:12 implicit struct numeric_limits
| | |-VarDecl 0xc7e098 <line:1129:7, col:59> col:42 is_specialized 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc7e100 <col:59> 'bool' true
| | |-CXXMethodDecl 0xc7e228 <line:1131:7, line:1132:47> col:7 used constexpr min 'unsigned int () noexcept' static
| | | `-CompoundStmt 0xc802e8 <col:35, col:47>
| | |   `-ReturnStmt 0xc802d8 <col:37, col:44>
| | |     `-ImplicitCastExpr 0xc802c0 <col:44> 'unsigned int' <IntegralCast>
| | |       `-IntegerLiteral 0xc802a0 <col:44> 'int' 0
| | |-CXXMethodDecl 0xc7e2f8 <line:1134:7, line:1135:66> col:7 constexpr max 'unsigned int () noexcept' static
| | | `-CompoundStmt 0xc803e0 <col:35, col:66>
| | |   `-ReturnStmt 0xc803d0 <col:37, col:63>
| | |     `-BinaryOperator 0xc803b0 <<built-in>:74:21, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1135:63> 'unsigned int' '+'
| | |       |-BinaryOperator 0xc80358 <<built-in>:74:21, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1135:58> 'unsigned int' '*'
| | |       | |-ImplicitCastExpr 0xc80340 <<built-in>:74:21> 'unsigned int' <IntegralCast>
| | |       | | `-IntegerLiteral 0xc80300 <col:21> 'int' 2147483647
| | |       | `-IntegerLiteral 0xc80320 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1135:58> 'unsigned int' 2
| | |       `-ImplicitCastExpr 0xc80398 <col:63> 'unsigned int' <IntegralCast>
| | |         `-IntegerLiteral 0xc80378 <col:63> 'int' 1
| | |-CXXMethodDecl 0xc7e3c8 <line:1138:7, line:1139:41> col:7 constexpr lowest 'unsigned int () noexcept' static
| | | `-CompoundStmt 0xc804c0 <col:25, col:41>
| | |   `-ReturnStmt 0xc804b0 <col:27, col:38>
| | |     `-CallExpr 0xc80490 <col:34, col:38> 'unsigned int'
| | |       `-ImplicitCastExpr 0xc80478 <col:34> 'unsigned int (*)() noexcept' <FunctionToPointerDecay>
| | |         `-DeclRefExpr 0xc803f8 <col:34> 'unsigned int () noexcept' lvalue CXXMethod 0xc7e228 'min' 'unsigned int () noexcept'
| | |-VarDecl 0xc7e480 <line:1142:7, line:138:32> line:1142:41 digits 'const int' static constexpr cinit
| | | `-ImplicitCastExpr 0xc7e718 <line:138:3, col:32> 'const int' <IntegralCast>
| | |   `-ParenExpr 0xc7e6f8 <col:3, col:32> 'unsigned long'
| | |     `-BinaryOperator 0xc7e6d8 <line:151:26, line:128:45> 'unsigned long' '-'
| | |       |-BinaryOperator 0xc7e558 <line:151:26, <built-in>:71:22> 'unsigned long' '*'
| | |       | |-UnaryExprOrTypeTraitExpr 0xc7e500 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:151:26, col:34> 'unsigned long' sizeof 'unsigned int'
| | |       | `-ImplicitCastExpr 0xc7e540 <<built-in>:71:22> 'unsigned long' <IntegralCast>
| | |       |   `-IntegerLiteral 0xc7e520 <col:22> 'int' 8
| | |       `-ImplicitCastExpr 0xc7e6c0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:128:33, col:45> 'unsigned long' <IntegralCast>
| | |         `-ParenExpr 0xc7e6a0 <col:33, col:45> 'bool'
| | |           `-BinaryOperator 0xc7e680 <col:34, col:44> 'bool' '<'
| | |             |-CStyleCastExpr 0xc7e620 <col:34, col:40> 'unsigned int' <NoOp>
| | |             | `-ImplicitCastExpr 0xc7e608 <col:37, col:40> 'unsigned int' <IntegralCast> part_of_explicit_cast
| | |             |   `-ParenExpr 0xc7e5e8 <col:37, col:40> 'int'
| | |             |     `-UnaryOperator 0xc7e598 <col:38, col:39> 'int' prefix '-'
| | |             |       `-IntegerLiteral 0xc7e578 <col:39> 'int' 1
| | |             `-ImplicitCastExpr 0xc7e668 <col:44> 'unsigned int' <IntegralCast>
| | |               `-IntegerLiteral 0xc7e648 <col:44> 'int' 0
| | |-VarDecl 0xc7e7a0 <line:1144:7, line:142:42> line:1144:41 digits10 'const int' static constexpr cinit
| | | `-ImplicitCastExpr 0xc7eb08 <line:142:3, col:42> 'const int' <IntegralCast>
| | |   `-ParenExpr 0xc7eae8 <col:3, col:42> 'unsigned long'
| | |     `-BinaryOperator 0xc7eac8 <line:138:3, line:142:38> 'unsigned long' '/'
| | |       |-BinaryOperator 0xc7ea70 <line:138:3, line:142:31> 'unsigned long' '*'
| | |       | |-ParenExpr 0xc7ea18 <line:138:3, col:32> 'unsigned long'
| | |       | | `-BinaryOperator 0xc7e9f8 <line:153:28, line:128:45> 'unsigned long' '-'
| | |       | |   |-BinaryOperator 0xc7e878 <line:153:28, <built-in>:71:22> 'unsigned long' '*'
| | |       | |   | |-UnaryExprOrTypeTraitExpr 0xc7e820 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:153:28, col:36> 'unsigned long' sizeof 'unsigned int'
| | |       | |   | `-ImplicitCastExpr 0xc7e860 <<built-in>:71:22> 'unsigned long' <IntegralCast>
| | |       | |   |   `-IntegerLiteral 0xc7e840 <col:22> 'int' 8
| | |       | |   `-ImplicitCastExpr 0xc7e9e0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:128:33, col:45> 'unsigned long' <IntegralCast>
| | |       | |     `-ParenExpr 0xc7e9c0 <col:33, col:45> 'bool'
| | |       | |       `-BinaryOperator 0xc7e9a0 <col:34, col:44> 'bool' '<'
| | |       | |         |-CStyleCastExpr 0xc7e940 <col:34, col:40> 'unsigned int' <NoOp>
| | |       | |         | `-ImplicitCastExpr 0xc7e928 <col:37, col:40> 'unsigned int' <IntegralCast> part_of_explicit_cast
| | |       | |         |   `-ParenExpr 0xc7e908 <col:37, col:40> 'int'
| | |       | |         |     `-UnaryOperator 0xc7e8b8 <col:38, col:39> 'int' prefix '-'
| | |       | |         |       `-IntegerLiteral 0xc7e898 <col:39> 'int' 1
| | |       | |         `-ImplicitCastExpr 0xc7e988 <col:44> 'unsigned int' <IntegralCast>
| | |       | |           `-IntegerLiteral 0xc7e968 <col:44> 'int' 0
| | |       | `-ImplicitCastExpr 0xc7ea58 <line:142:31> 'unsigned long' <IntegralCast>
| | |       |   `-IntegerLiteral 0xc7ea38 <col:31> 'long' 643
| | |       `-ImplicitCastExpr 0xc7eab0 <col:38> 'unsigned long' <IntegralCast>
| | |         `-IntegerLiteral 0xc7ea90 <col:38> 'int' 2136
| | |-VarDecl 0xc7eb90 <line:1147:7, col:43> col:28 max_digits10 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc7ebf8 <col:43> 'int' 0
| | |-VarDecl 0xc7ec80 <line:1149:7, col:54> col:42 is_signed 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc7ece8 <col:54> 'bool' false
| | |-VarDecl 0xc7ed60 <line:1150:7, col:55> col:42 is_integer 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc7edc8 <col:55> 'bool' true
| | |-VarDecl 0xc7ee40 <line:1151:7, col:53> col:42 is_exact 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc7eea8 <col:53> 'bool' true
| | |-VarDecl 0xc7ef28 <line:1152:7, col:49> col:41 radix 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc7ef90 <col:49> 'int' 2
| | |-CXXMethodDecl 0xc7f038 <line:1154:7, line:1155:51> col:7 constexpr epsilon 'unsigned int () noexcept' static
| | | `-CompoundStmt 0xc80520 <col:39, col:51>
| | |   `-ReturnStmt 0xc80510 <col:41, col:48>
| | |     `-ImplicitCastExpr 0xc804f8 <col:48> 'unsigned int' <IntegralCast>
| | |       `-IntegerLiteral 0xc804d8 <col:48> 'int' 0
| | |-CXXMethodDecl 0xc7f108 <line:1157:7, line:1158:55> col:7 constexpr round_error 'unsigned int () noexcept' static
| | | `-CompoundStmt 0xc80580 <col:43, col:55>
| | |   `-ReturnStmt 0xc80570 <col:45, col:52>
| | |     `-ImplicitCastExpr 0xc80558 <col:52> 'unsigned int' <IntegralCast>
| | |       `-IntegerLiteral 0xc80538 <col:52> 'int' 0
| | |-VarDecl 0xc7f1c0 <line:1160:7, col:56> col:41 min_exponent 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc7f228 <col:56> 'int' 0
| | |-VarDecl 0xc7f2b8 <line:1161:7, col:58> col:41 min_exponent10 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc7f320 <col:58> 'int' 0
| | |-VarDecl 0xc7f3b0 <line:1162:7, col:56> col:41 max_exponent 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc7f418 <col:56> 'int' 0
| | |-VarDecl 0xc7f4a8 <line:1163:7, col:58> col:41 max_exponent10 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc7f510 <col:58> 'int' 0
| | |-VarDecl 0xc7f598 <line:1165:7, col:57> col:42 has_infinity 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc7f600 <col:57> 'bool' false
| | |-VarDecl 0xc7f678 <line:1166:7, col:58> col:42 has_quiet_NaN 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc7f6e0 <col:58> 'bool' false
| | |-VarDecl 0xc7f758 <line:1167:7, col:62> col:42 has_signaling_NaN 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc7f7c0 <col:62> 'bool' false
| | |-VarDecl 0xc7f838 <line:1168:7, line:1169:10> line:1168:56 has_denorm 'const std::float_denorm_style' static constexpr cinit
| | | `-DeclRefExpr 0xc7f8a0 <line:1169:10> 'std::float_denorm_style' EnumConstant 0xc54908 'denorm_absent' 'std::float_denorm_style'
| | |-VarDecl 0xc7f928 <line:1170:7, col:60> col:42 has_denorm_loss 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc7f990 <col:60> 'bool' false
| | |-CXXMethodDecl 0xc7fa28 <line:1172:7, line:1173:79> col:7 constexpr infinity 'unsigned int () noexcept' static
| | | `-CompoundStmt 0xc80628 <col:40, col:79>
| | |   `-ReturnStmt 0xc80618 <col:42, col:76>
| | |     `-CXXStaticCastExpr 0xc805e8 <col:49, col:76> 'unsigned int' static_cast<unsigned int> <NoOp>
| | |       `-ImplicitCastExpr 0xc805d0 <col:75> 'unsigned int' <IntegralCast> part_of_explicit_cast
| | |         `-IntegerLiteral 0xc80598 <col:75> 'int' 0
| | |-CXXMethodDecl 0xc7faf8 <line:1175:7, line:1177:46> line:1176:7 constexpr quiet_NaN 'unsigned int () noexcept' static
| | | `-CompoundStmt 0xc806d0 <line:1177:7, col:46>
| | |   `-ReturnStmt 0xc806c0 <col:9, col:43>
| | |     `-CXXStaticCastExpr 0xc80690 <col:16, col:43> 'unsigned int' static_cast<unsigned int> <NoOp>
| | |       `-ImplicitCastExpr 0xc80678 <col:42> 'unsigned int' <IntegralCast> part_of_explicit_cast
| | |         `-IntegerLiteral 0xc80640 <col:42> 'int' 0
| | |-CXXMethodDecl 0xc7fbc8 <line:1179:7, line:1181:46> line:1180:7 constexpr signaling_NaN 'unsigned int () noexcept' static
| | | `-CompoundStmt 0xc80778 <line:1181:7, col:46>
| | |   `-ReturnStmt 0xc80768 <col:9, col:43>
| | |     `-CXXStaticCastExpr 0xc80738 <col:16, col:43> 'unsigned int' static_cast<unsigned int> <NoOp>
| | |       `-ImplicitCastExpr 0xc80720 <col:42> 'unsigned int' <IntegralCast> part_of_explicit_cast
| | |         `-IntegerLiteral 0xc806e8 <col:42> 'int' 0
| | |-CXXMethodDecl 0xc7fc98 <line:1183:7, line:1185:46> line:1184:7 constexpr denorm_min 'unsigned int () noexcept' static
| | | `-CompoundStmt 0xc80be0 <line:1185:7, col:46>
| | |   `-ReturnStmt 0xc80810 <col:9, col:43>
| | |     `-CXXStaticCastExpr 0xc807e0 <col:16, col:43> 'unsigned int' static_cast<unsigned int> <NoOp>
| | |       `-ImplicitCastExpr 0xc807c8 <col:42> 'unsigned int' <IntegralCast> part_of_explicit_cast
| | |         `-IntegerLiteral 0xc80790 <col:42> 'int' 0
| | |-VarDecl 0xc7fd48 <line:1187:7, col:54> col:42 is_iec559 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc7fdb0 <col:54> 'bool' false
| | |-VarDecl 0xc7fe28 <line:1188:7, col:55> col:42 is_bounded 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc7fe90 <col:55> 'bool' true
| | |-VarDecl 0xc7ff08 <line:1189:7, col:54> col:42 is_modulo 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc7ff70 <col:54> 'bool' true
| | |-VarDecl 0xc7ffe8 <line:1191:7, line:80:35> line:1191:42 traps 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc80050 <line:80:35> 'bool' true
| | |-VarDecl 0xc800c8 <line:1192:7, col:60> col:42 tinyness_before 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc80130 <col:60> 'bool' false
| | `-VarDecl 0xc801a8 <line:1193:7, line:1194:10> line:1193:55 round_style 'const std::float_round_style' static constexpr cinit
| |   `-DeclRefExpr 0xc80210 <line:1194:10> 'std::float_round_style' EnumConstant 0xc54560 'round_toward_zero' 'std::float_round_style'
| |-ClassTemplateSpecializationDecl 0xc80c28 <line:1198:3, line:1262:5> line:1199:12 struct numeric_limits definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'long'
| | |-CXXRecordDecl 0xc80e48 <col:5, col:12> col:12 implicit struct numeric_limits
| | |-VarDecl 0xc80ee8 <line:1201:7, col:59> col:42 is_specialized 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc80f50 <col:59> 'bool' true
| | |-CXXMethodDecl 0xc81048 <line:1203:7, line:1204:63> col:7 used constexpr min 'long () noexcept' static
| | | `-CompoundStmt 0xc83160 <col:35, col:63>
| | |   `-ReturnStmt 0xc83150 <col:37, col:60>
| | |     `-BinaryOperator 0xc83130 <col:44, col:60> 'long' '-'
| | |       |-UnaryOperator 0xc830e0 <col:44, <built-in>:75:22> 'long' prefix '-'
| | |       | `-IntegerLiteral 0xc830c0 <col:22> 'long' 9223372036854775807
| | |       `-ImplicitCastExpr 0xc83118 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1204:60> 'long' <IntegralCast>
| | |         `-IntegerLiteral 0xc830f8 <col:60> 'int' 1
| | |-CXXMethodDecl 0xc81118 <line:1206:7, line:1207:58> col:7 constexpr max 'long () noexcept' static
| | | `-CompoundStmt 0xc831a8 <col:35, col:58>
| | |   `-ReturnStmt 0xc83198 <col:37, <built-in>:75:22>
| | |     `-IntegerLiteral 0xc83178 <col:22> 'long' 9223372036854775807
| | |-CXXMethodDecl 0xc811e8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1210:7, line:1211:41> col:7 used constexpr lowest 'long () noexcept' static
| | | `-CompoundStmt 0xc83280 <col:25, col:41>
| | |   `-ReturnStmt 0xc83270 <col:27, col:38>
| | |     `-CallExpr 0xc83250 <col:34, col:38> 'long'
| | |       `-ImplicitCastExpr 0xc83238 <col:34> 'long (*)() noexcept' <FunctionToPointerDecay>
| | |         `-DeclRefExpr 0xc831c0 <col:34> 'long () noexcept' lvalue CXXMethod 0xc81048 'min' 'long () noexcept'
| | |-VarDecl 0xc812a0 <line:1214:7, line:138:32> line:1214:41 digits 'const int' static constexpr cinit
| | | `-ImplicitCastExpr 0xc81538 <line:138:3, col:32> 'const int' <IntegralCast>
| | |   `-ParenExpr 0xc81518 <col:3, col:32> 'unsigned long'
| | |     `-BinaryOperator 0xc814f8 <line:151:26, line:128:45> 'unsigned long' '-'
| | |       |-BinaryOperator 0xc81378 <line:151:26, <built-in>:71:22> 'unsigned long' '*'
| | |       | |-UnaryExprOrTypeTraitExpr 0xc81320 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:151:26, col:34> 'unsigned long' sizeof 'long'
| | |       | `-ImplicitCastExpr 0xc81360 <<built-in>:71:22> 'unsigned long' <IntegralCast>
| | |       |   `-IntegerLiteral 0xc81340 <col:22> 'int' 8
| | |       `-ImplicitCastExpr 0xc814e0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:128:33, col:45> 'unsigned long' <IntegralCast>
| | |         `-ParenExpr 0xc814c0 <col:33, col:45> 'bool'
| | |           `-BinaryOperator 0xc814a0 <col:34, col:44> 'bool' '<'
| | |             |-CStyleCastExpr 0xc81440 <col:34, col:40> 'long' <NoOp>
| | |             | `-ImplicitCastExpr 0xc81428 <col:37, col:40> 'long' <IntegralCast> part_of_explicit_cast
| | |             |   `-ParenExpr 0xc81408 <col:37, col:40> 'int'
| | |             |     `-UnaryOperator 0xc813b8 <col:38, col:39> 'int' prefix '-'
| | |             |       `-IntegerLiteral 0xc81398 <col:39> 'int' 1
| | |             `-ImplicitCastExpr 0xc81488 <col:44> 'long' <IntegralCast>
| | |               `-IntegerLiteral 0xc81468 <col:44> 'int' 0
| | |-VarDecl 0xc815c0 <line:1215:7, line:142:42> line:1215:41 digits10 'const int' static constexpr cinit
| | | `-ImplicitCastExpr 0xc81928 <line:142:3, col:42> 'const int' <IntegralCast>
| | |   `-ParenExpr 0xc81908 <col:3, col:42> 'unsigned long'
| | |     `-BinaryOperator 0xc818e8 <line:138:3, line:142:38> 'unsigned long' '/'
| | |       |-BinaryOperator 0xc81890 <line:138:3, line:142:31> 'unsigned long' '*'
| | |       | |-ParenExpr 0xc81838 <line:138:3, col:32> 'unsigned long'
| | |       | | `-BinaryOperator 0xc81818 <line:153:28, line:128:45> 'unsigned long' '-'
| | |       | |   |-BinaryOperator 0xc81698 <line:153:28, <built-in>:71:22> 'unsigned long' '*'
| | |       | |   | |-UnaryExprOrTypeTraitExpr 0xc81640 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:153:28, col:36> 'unsigned long' sizeof 'long'
| | |       | |   | `-ImplicitCastExpr 0xc81680 <<built-in>:71:22> 'unsigned long' <IntegralCast>
| | |       | |   |   `-IntegerLiteral 0xc81660 <col:22> 'int' 8
| | |       | |   `-ImplicitCastExpr 0xc81800 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:128:33, col:45> 'unsigned long' <IntegralCast>
| | |       | |     `-ParenExpr 0xc817e0 <col:33, col:45> 'bool'
| | |       | |       `-BinaryOperator 0xc817c0 <col:34, col:44> 'bool' '<'
| | |       | |         |-CStyleCastExpr 0xc81760 <col:34, col:40> 'long' <NoOp>
| | |       | |         | `-ImplicitCastExpr 0xc81748 <col:37, col:40> 'long' <IntegralCast> part_of_explicit_cast
| | |       | |         |   `-ParenExpr 0xc81728 <col:37, col:40> 'int'
| | |       | |         |     `-UnaryOperator 0xc816d8 <col:38, col:39> 'int' prefix '-'
| | |       | |         |       `-IntegerLiteral 0xc816b8 <col:39> 'int' 1
| | |       | |         `-ImplicitCastExpr 0xc817a8 <col:44> 'long' <IntegralCast>
| | |       | |           `-IntegerLiteral 0xc81788 <col:44> 'int' 0
| | |       | `-ImplicitCastExpr 0xc81878 <line:142:31> 'unsigned long' <IntegralCast>
| | |       |   `-IntegerLiteral 0xc81858 <col:31> 'long' 643
| | |       `-ImplicitCastExpr 0xc818d0 <col:38> 'unsigned long' <IntegralCast>
| | |         `-IntegerLiteral 0xc818b0 <col:38> 'int' 2136
| | |-VarDecl 0xc819b0 <line:1217:7, col:43> col:28 max_digits10 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc81a18 <col:43> 'int' 0
| | |-VarDecl 0xc81aa0 <line:1219:7, col:54> col:42 is_signed 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc81b08 <col:54> 'bool' true
| | |-VarDecl 0xc81b80 <line:1220:7, col:55> col:42 is_integer 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc81be8 <col:55> 'bool' true
| | |-VarDecl 0xc81c60 <line:1221:7, col:53> col:42 is_exact 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc81cc8 <col:53> 'bool' true
| | |-VarDecl 0xc81d48 <line:1222:7, col:49> col:41 radix 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc81db0 <col:49> 'int' 2
| | |-CXXMethodDecl 0xc81e58 <line:1224:7, line:1225:51> col:7 constexpr epsilon 'long () noexcept' static
| | | `-CompoundStmt 0xc832e0 <col:39, col:51>
| | |   `-ReturnStmt 0xc832d0 <col:41, col:48>
| | |     `-ImplicitCastExpr 0xc832b8 <col:48> 'long' <IntegralCast>
| | |       `-IntegerLiteral 0xc83298 <col:48> 'int' 0
| | |-CXXMethodDecl 0xc81f28 <line:1227:7, line:1228:55> col:7 constexpr round_error 'long () noexcept' static
| | | `-CompoundStmt 0xc83340 <col:43, col:55>
| | |   `-ReturnStmt 0xc83330 <col:45, col:52>
| | |     `-ImplicitCastExpr 0xc83318 <col:52> 'long' <IntegralCast>
| | |       `-IntegerLiteral 0xc832f8 <col:52> 'int' 0
| | |-VarDecl 0xc81fe0 <line:1230:7, col:56> col:41 min_exponent 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc82048 <col:56> 'int' 0
| | |-VarDecl 0xc820d8 <line:1231:7, col:58> col:41 min_exponent10 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc82140 <col:58> 'int' 0
| | |-VarDecl 0xc821d0 <line:1232:7, col:56> col:41 max_exponent 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc82238 <col:56> 'int' 0
| | |-VarDecl 0xc822c8 <line:1233:7, col:58> col:41 max_exponent10 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc82330 <col:58> 'int' 0
| | |-VarDecl 0xc823b8 <line:1235:7, col:57> col:42 has_infinity 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc82420 <col:57> 'bool' false
| | |-VarDecl 0xc82498 <line:1236:7, col:58> col:42 has_quiet_NaN 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc82500 <col:58> 'bool' false
| | |-VarDecl 0xc82578 <line:1237:7, col:62> col:42 has_signaling_NaN 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc825e0 <col:62> 'bool' false
| | |-VarDecl 0xc82658 <line:1238:7, line:1239:10> line:1238:56 has_denorm 'const std::float_denorm_style' static constexpr cinit
| | | `-DeclRefExpr 0xc826c0 <line:1239:10> 'std::float_denorm_style' EnumConstant 0xc54908 'denorm_absent' 'std::float_denorm_style'
| | |-VarDecl 0xc82748 <line:1240:7, col:60> col:42 has_denorm_loss 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc827b0 <col:60> 'bool' false
| | |-CXXMethodDecl 0xc82848 <line:1242:7, line:1243:71> col:7 constexpr infinity 'long () noexcept' static
| | | `-CompoundStmt 0xc833e8 <col:40, col:71>
| | |   `-ReturnStmt 0xc833d8 <col:42, col:68>
| | |     `-CXXStaticCastExpr 0xc833a8 <col:49, col:68> 'long' static_cast<long> <NoOp>
| | |       `-ImplicitCastExpr 0xc83390 <col:67> 'long' <IntegralCast> part_of_explicit_cast
| | |         `-IntegerLiteral 0xc83358 <col:67> 'int' 0
| | |-CXXMethodDecl 0xc82918 <line:1245:7, line:1246:72> col:7 constexpr quiet_NaN 'long () noexcept' static
| | | `-CompoundStmt 0xc83490 <col:41, col:72>
| | |   `-ReturnStmt 0xc83480 <col:43, col:69>
| | |     `-CXXStaticCastExpr 0xc83450 <col:50, col:69> 'long' static_cast<long> <NoOp>
| | |       `-ImplicitCastExpr 0xc83438 <col:68> 'long' <IntegralCast> part_of_explicit_cast
| | |         `-IntegerLiteral 0xc83400 <col:68> 'int' 0
| | |-CXXMethodDecl 0xc829e8 <line:1248:7, line:1249:76> col:7 constexpr signaling_NaN 'long () noexcept' static
| | | `-CompoundStmt 0xc83538 <col:45, col:76>
| | |   `-ReturnStmt 0xc83528 <col:47, col:73>
| | |     `-CXXStaticCastExpr 0xc834f8 <col:54, col:73> 'long' static_cast<long> <NoOp>
| | |       `-ImplicitCastExpr 0xc834e0 <col:72> 'long' <IntegralCast> part_of_explicit_cast
| | |         `-IntegerLiteral 0xc834a8 <col:72> 'int' 0
| | |-CXXMethodDecl 0xc82ab8 <line:1251:7, line:1252:73> col:7 constexpr denorm_min 'long () noexcept' static
| | | `-CompoundStmt 0xc835e0 <col:42, col:73>
| | |   `-ReturnStmt 0xc835d0 <col:44, col:70>
| | |     `-CXXStaticCastExpr 0xc835a0 <col:51, col:70> 'long' static_cast<long> <NoOp>
| | |       `-ImplicitCastExpr 0xc83588 <col:69> 'long' <IntegralCast> part_of_explicit_cast
| | |         `-IntegerLiteral 0xc83550 <col:69> 'int' 0
| | |-VarDecl 0xc82b68 <line:1254:7, col:54> col:42 is_iec559 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc82bd0 <col:54> 'bool' false
| | |-VarDecl 0xc82c48 <line:1255:7, col:55> col:42 is_bounded 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc82cb0 <col:55> 'bool' true
| | |-VarDecl 0xc82d28 <line:1256:7, col:54> col:42 is_modulo 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc82d90 <col:54> 'bool' false
| | |-VarDecl 0xc82e08 <line:1258:7, line:80:35> line:1258:42 traps 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc82e70 <line:80:35> 'bool' true
| | |-VarDecl 0xc82ee8 <line:1259:7, col:60> col:42 tinyness_before 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc82f50 <col:60> 'bool' false
| | `-VarDecl 0xc82fc8 <line:1260:7, line:1261:10> line:1260:55 round_style 'const std::float_round_style' static constexpr cinit
| |   `-DeclRefExpr 0xc83030 <line:1261:10> 'std::float_round_style' EnumConstant 0xc54560 'round_toward_zero' 'std::float_round_style'
| |-ClassTemplateSpecializationDecl 0xc83628 <line:1265:3, line:1335:5> line:1266:12 struct numeric_limits definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'unsigned long'
| | |-CXXRecordDecl 0xc83848 <col:5, col:12> col:12 implicit struct numeric_limits
| | |-VarDecl 0xc838e8 <line:1268:7, col:59> col:42 is_specialized 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc83950 <col:59> 'bool' true
| | |-CXXMethodDecl 0xc83a48 <line:1270:7, line:1271:47> col:7 used constexpr min 'unsigned long () noexcept' static
| | | `-CompoundStmt 0xc86348 <col:35, col:47>
| | |   `-ReturnStmt 0xc86338 <col:37, col:44>
| | |     `-ImplicitCastExpr 0xc86320 <col:44> 'unsigned long' <IntegralCast>
| | |       `-IntegerLiteral 0xc86300 <col:44> 'int' 0
| | |-CXXMethodDecl 0xc83b18 <line:1273:7, line:1274:68> col:7 constexpr max 'unsigned long () noexcept' static
| | | `-CompoundStmt 0xc86440 <col:35, col:68>
| | |   `-ReturnStmt 0xc86430 <col:37, col:65>
| | |     `-BinaryOperator 0xc86410 <<built-in>:75:22, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1274:65> 'unsigned long' '+'
| | |       |-BinaryOperator 0xc863b8 <<built-in>:75:22, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1274:59> 'unsigned long' '*'
| | |       | |-ImplicitCastExpr 0xc863a0 <<built-in>:75:22> 'unsigned long' <IntegralCast>
| | |       | | `-IntegerLiteral 0xc86360 <col:22> 'long' 9223372036854775807
| | |       | `-IntegerLiteral 0xc86380 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1274:59> 'unsigned long' 2
| | |       `-ImplicitCastExpr 0xc863f8 <col:65> 'unsigned long' <IntegralCast>
| | |         `-IntegerLiteral 0xc863d8 <col:65> 'int' 1
| | |-CXXMethodDecl 0xc83be8 <line:1277:7, line:1278:41> col:7 constexpr lowest 'unsigned long () noexcept' static
| | | `-CompoundStmt 0xc86520 <col:25, col:41>
| | |   `-ReturnStmt 0xc86510 <col:27, col:38>
| | |     `-CallExpr 0xc864f0 <col:34, col:38> 'unsigned long'
| | |       `-ImplicitCastExpr 0xc864d8 <col:34> 'unsigned long (*)() noexcept' <FunctionToPointerDecay>
| | |         `-DeclRefExpr 0xc86458 <col:34> 'unsigned long () noexcept' lvalue CXXMethod 0xc83a48 'min' 'unsigned long () noexcept'
| | |-VarDecl 0xc83ca0 <line:1281:7, line:138:32> line:1281:41 digits 'const int' static constexpr cinit
| | | `-ImplicitCastExpr 0xc83f38 <line:138:3, col:32> 'const int' <IntegralCast>
| | |   `-ParenExpr 0xc83f18 <col:3, col:32> 'unsigned long'
| | |     `-BinaryOperator 0xc83ef8 <line:151:26, line:128:45> 'unsigned long' '-'
| | |       |-BinaryOperator 0xc83d78 <line:151:26, <built-in>:71:22> 'unsigned long' '*'
| | |       | |-UnaryExprOrTypeTraitExpr 0xc83d20 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:151:26, col:34> 'unsigned long' sizeof 'unsigned long'
| | |       | `-ImplicitCastExpr 0xc83d60 <<built-in>:71:22> 'unsigned long' <IntegralCast>
| | |       |   `-IntegerLiteral 0xc83d40 <col:22> 'int' 8
| | |       `-ImplicitCastExpr 0xc83ee0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:128:33, col:45> 'unsigned long' <IntegralCast>
| | |         `-ParenExpr 0xc83ec0 <col:33, col:45> 'bool'
| | |           `-BinaryOperator 0xc83ea0 <col:34, col:44> 'bool' '<'
| | |             |-CStyleCastExpr 0xc83e40 <col:34, col:40> 'unsigned long' <NoOp>
| | |             | `-ImplicitCastExpr 0xc83e28 <col:37, col:40> 'unsigned long' <IntegralCast> part_of_explicit_cast
| | |             |   `-ParenExpr 0xc83e08 <col:37, col:40> 'int'
| | |             |     `-UnaryOperator 0xc83db8 <col:38, col:39> 'int' prefix '-'
| | |             |       `-IntegerLiteral 0xc83d98 <col:39> 'int' 1
| | |             `-ImplicitCastExpr 0xc83e88 <col:44> 'unsigned long' <IntegralCast>
| | |               `-IntegerLiteral 0xc83e68 <col:44> 'int' 0
| | |-VarDecl 0xc83fc0 <line:1283:7, line:142:42> line:1283:41 digits10 'const int' static constexpr cinit
| | | `-ImplicitCastExpr 0xc84328 <line:142:3, col:42> 'const int' <IntegralCast>
| | |   `-ParenExpr 0xc84308 <col:3, col:42> 'unsigned long'
| | |     `-BinaryOperator 0xc842e8 <line:138:3, line:142:38> 'unsigned long' '/'
| | |       |-BinaryOperator 0xc84290 <line:138:3, line:142:31> 'unsigned long' '*'
| | |       | |-ParenExpr 0xc84238 <line:138:3, col:32> 'unsigned long'
| | |       | | `-BinaryOperator 0xc84218 <line:153:28, line:128:45> 'unsigned long' '-'
| | |       | |   |-BinaryOperator 0xc84098 <line:153:28, <built-in>:71:22> 'unsigned long' '*'
| | |       | |   | |-UnaryExprOrTypeTraitExpr 0xc84040 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:153:28, col:36> 'unsigned long' sizeof 'unsigned long'
| | |       | |   | `-ImplicitCastExpr 0xc84080 <<built-in>:71:22> 'unsigned long' <IntegralCast>
| | |       | |   |   `-IntegerLiteral 0xc84060 <col:22> 'int' 8
| | |       | |   `-ImplicitCastExpr 0xc84200 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:128:33, col:45> 'unsigned long' <IntegralCast>
| | |       | |     `-ParenExpr 0xc841e0 <col:33, col:45> 'bool'
| | |       | |       `-BinaryOperator 0xc841c0 <col:34, col:44> 'bool' '<'
| | |       | |         |-CStyleCastExpr 0xc84160 <col:34, col:40> 'unsigned long' <NoOp>
| | |       | |         | `-ImplicitCastExpr 0xc84148 <col:37, col:40> 'unsigned long' <IntegralCast> part_of_explicit_cast
| | |       | |         |   `-ParenExpr 0xc84128 <col:37, col:40> 'int'
| | |       | |         |     `-UnaryOperator 0xc840d8 <col:38, col:39> 'int' prefix '-'
| | |       | |         |       `-IntegerLiteral 0xc840b8 <col:39> 'int' 1
| | |       | |         `-ImplicitCastExpr 0xc841a8 <col:44> 'unsigned long' <IntegralCast>
| | |       | |           `-IntegerLiteral 0xc84188 <col:44> 'int' 0
| | |       | `-ImplicitCastExpr 0xc84278 <line:142:31> 'unsigned long' <IntegralCast>
| | |       |   `-IntegerLiteral 0xc84258 <col:31> 'long' 643
| | |       `-ImplicitCastExpr 0xc842d0 <col:38> 'unsigned long' <IntegralCast>
| | |         `-IntegerLiteral 0xc842b0 <col:38> 'int' 2136
| | |-VarDecl 0xc843b0 <line:1286:7, col:43> col:28 max_digits10 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc84418 <col:43> 'int' 0
| | |-VarDecl 0xc844a0 <line:1288:7, col:54> col:42 is_signed 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc84508 <col:54> 'bool' false
| | |-VarDecl 0xc84580 <line:1289:7, col:55> col:42 is_integer 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc845e8 <col:55> 'bool' true
| | |-VarDecl 0xc84660 <line:1290:7, col:53> col:42 is_exact 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc846c8 <col:53> 'bool' true
| | |-VarDecl 0xc84748 <line:1291:7, col:49> col:41 radix 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc847b0 <col:49> 'int' 2
| | |-CXXMethodDecl 0xc84858 <line:1293:7, line:1294:51> col:7 constexpr epsilon 'unsigned long () noexcept' static
| | | `-CompoundStmt 0xc86580 <col:39, col:51>
| | |   `-ReturnStmt 0xc86570 <col:41, col:48>
| | |     `-ImplicitCastExpr 0xc86558 <col:48> 'unsigned long' <IntegralCast>
| | |       `-IntegerLiteral 0xc86538 <col:48> 'int' 0
| | |-CXXMethodDecl 0xc84928 <line:1296:7, line:1297:55> col:7 constexpr round_error 'unsigned long () noexcept' static
| | | `-CompoundStmt 0xc865e0 <col:43, col:55>
| | |   `-ReturnStmt 0xc865d0 <col:45, col:52>
| | |     `-ImplicitCastExpr 0xc865b8 <col:52> 'unsigned long' <IntegralCast>
| | |       `-IntegerLiteral 0xc86598 <col:52> 'int' 0
| | |-VarDecl 0xc849e0 <line:1299:7, col:56> col:41 min_exponent 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc84a48 <col:56> 'int' 0
| | |-VarDecl 0xc84ad8 <line:1300:7, col:58> col:41 min_exponent10 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc84b40 <col:58> 'int' 0
| | |-VarDecl 0xc85410 <line:1301:7, col:56> col:41 max_exponent 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc85478 <col:56> 'int' 0
| | |-VarDecl 0xc85508 <line:1302:7, col:58> col:41 max_exponent10 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc85570 <col:58> 'int' 0
| | |-VarDecl 0xc855f8 <line:1304:7, col:57> col:42 has_infinity 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc85660 <col:57> 'bool' false
| | |-VarDecl 0xc856d8 <line:1305:7, col:58> col:42 has_quiet_NaN 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc85740 <col:58> 'bool' false
| | |-VarDecl 0xc857b8 <line:1306:7, col:62> col:42 has_signaling_NaN 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc85820 <col:62> 'bool' false
| | |-VarDecl 0xc85898 <line:1307:7, line:1308:10> line:1307:56 has_denorm 'const std::float_denorm_style' static constexpr cinit
| | | `-DeclRefExpr 0xc85900 <line:1308:10> 'std::float_denorm_style' EnumConstant 0xc54908 'denorm_absent' 'std::float_denorm_style'
| | |-VarDecl 0xc85988 <line:1309:7, col:60> col:42 has_denorm_loss 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc859f0 <col:60> 'bool' false
| | |-CXXMethodDecl 0xc85a88 <line:1311:7, line:1313:47> line:1312:7 constexpr infinity 'unsigned long () noexcept' static
| | | `-CompoundStmt 0xc86688 <line:1313:7, col:47>
| | |   `-ReturnStmt 0xc86678 <col:9, col:44>
| | |     `-CXXStaticCastExpr 0xc86648 <col:16, col:44> 'unsigned long' static_cast<unsigned long> <NoOp>
| | |       `-ImplicitCastExpr 0xc86630 <col:43> 'unsigned long' <IntegralCast> part_of_explicit_cast
| | |         `-IntegerLiteral 0xc865f8 <col:43> 'int' 0
| | |-CXXMethodDecl 0xc85b58 <line:1315:7, line:1317:47> line:1316:7 constexpr quiet_NaN 'unsigned long () noexcept' static
| | | `-CompoundStmt 0xc86730 <line:1317:7, col:47>
| | |   `-ReturnStmt 0xc86720 <col:9, col:44>
| | |     `-CXXStaticCastExpr 0xc866f0 <col:16, col:44> 'unsigned long' static_cast<unsigned long> <NoOp>
| | |       `-ImplicitCastExpr 0xc866d8 <col:43> 'unsigned long' <IntegralCast> part_of_explicit_cast
| | |         `-IntegerLiteral 0xc866a0 <col:43> 'int' 0
| | |-CXXMethodDecl 0xc85c28 <line:1319:7, line:1321:47> line:1320:7 constexpr signaling_NaN 'unsigned long () noexcept' static
| | | `-CompoundStmt 0xc867d8 <line:1321:7, col:47>
| | |   `-ReturnStmt 0xc867c8 <col:9, col:44>
| | |     `-CXXStaticCastExpr 0xc86798 <col:16, col:44> 'unsigned long' static_cast<unsigned long> <NoOp>
| | |       `-ImplicitCastExpr 0xc86780 <col:43> 'unsigned long' <IntegralCast> part_of_explicit_cast
| | |         `-IntegerLiteral 0xc86748 <col:43> 'int' 0
| | |-CXXMethodDecl 0xc85cf8 <line:1323:7, line:1325:47> line:1324:7 constexpr denorm_min 'unsigned long () noexcept' static
| | | `-CompoundStmt 0xc86880 <line:1325:7, col:47>
| | |   `-ReturnStmt 0xc86870 <col:9, col:44>
| | |     `-CXXStaticCastExpr 0xc86840 <col:16, col:44> 'unsigned long' static_cast<unsigned long> <NoOp>
| | |       `-ImplicitCastExpr 0xc86828 <col:43> 'unsigned long' <IntegralCast> part_of_explicit_cast
| | |         `-IntegerLiteral 0xc867f0 <col:43> 'int' 0
| | |-VarDecl 0xc85da8 <line:1327:7, col:54> col:42 is_iec559 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc85e10 <col:54> 'bool' false
| | |-VarDecl 0xc85e88 <line:1328:7, col:55> col:42 is_bounded 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc85ef0 <col:55> 'bool' true
| | |-VarDecl 0xc85f68 <line:1329:7, col:54> col:42 is_modulo 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc85fd0 <col:54> 'bool' true
| | |-VarDecl 0xc86048 <line:1331:7, line:80:35> line:1331:42 traps 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc860b0 <line:80:35> 'bool' true
| | |-VarDecl 0xc86128 <line:1332:7, col:60> col:42 tinyness_before 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc86190 <col:60> 'bool' false
| | `-VarDecl 0xc86208 <line:1333:7, line:1334:10> line:1333:55 round_style 'const std::float_round_style' static constexpr cinit
| |   `-DeclRefExpr 0xc86270 <line:1334:10> 'std::float_round_style' EnumConstant 0xc54560 'round_toward_zero' 'std::float_round_style'
| |-ClassTemplateSpecializationDecl 0xc868c8 <line:1338:3, line:1405:5> line:1339:12 struct numeric_limits definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'long long'
| | |-CXXRecordDecl 0xc86ae8 <col:5, col:12> col:12 implicit struct numeric_limits
| | |-VarDecl 0xc86b88 <line:1341:7, col:59> col:42 is_specialized 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc86bf0 <col:59> 'bool' true
| | |-CXXMethodDecl 0xc86d18 <line:1343:7, line:1344:68> col:7 used constexpr min 'long long () noexcept' static
| | | `-CompoundStmt 0xc88e30 <col:35, col:68>
| | |   `-ReturnStmt 0xc88e20 <col:37, col:65>
| | |     `-BinaryOperator 0xc88e00 <col:44, col:65> 'long long' '-'
| | |       |-UnaryOperator 0xc88db0 <col:44, <built-in>:76:27> 'long long' prefix '-'
| | |       | `-IntegerLiteral 0xc88d90 <col:27> 'long long' 9223372036854775807
| | |       `-ImplicitCastExpr 0xc88de8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1344:65> 'long long' <IntegralCast>
| | |         `-IntegerLiteral 0xc88dc8 <col:65> 'int' 1
| | |-CXXMethodDecl 0xc86de8 <line:1346:7, line:1347:63> col:7 constexpr max 'long long () noexcept' static
| | | `-CompoundStmt 0xc88e78 <col:35, col:63>
| | |   `-ReturnStmt 0xc88e68 <col:37, <built-in>:76:27>
| | |     `-IntegerLiteral 0xc88e48 <col:27> 'long long' 9223372036854775807
| | |-CXXMethodDecl 0xc86eb8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1350:7, line:1351:41> col:7 constexpr lowest 'long long () noexcept' static
| | | `-CompoundStmt 0xc88f50 <col:25, col:41>
| | |   `-ReturnStmt 0xc88f40 <col:27, col:38>
| | |     `-CallExpr 0xc88f20 <col:34, col:38> 'long long'
| | |       `-ImplicitCastExpr 0xc88f08 <col:34> 'long long (*)() noexcept' <FunctionToPointerDecay>
| | |         `-DeclRefExpr 0xc88e90 <col:34> 'long long () noexcept' lvalue CXXMethod 0xc86d18 'min' 'long long () noexcept'
| | |-VarDecl 0xc86f70 <line:1354:7, line:138:32> line:1354:41 digits 'const int' static constexpr cinit
| | | `-ImplicitCastExpr 0xc87208 <line:138:3, col:32> 'const int' <IntegralCast>
| | |   `-ParenExpr 0xc871e8 <col:3, col:32> 'unsigned long'
| | |     `-BinaryOperator 0xc871c8 <line:151:26, line:128:45> 'unsigned long' '-'
| | |       |-BinaryOperator 0xc87048 <line:151:26, <built-in>:71:22> 'unsigned long' '*'
| | |       | |-UnaryExprOrTypeTraitExpr 0xc86ff0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:151:26, col:34> 'unsigned long' sizeof 'long long'
| | |       | `-ImplicitCastExpr 0xc87030 <<built-in>:71:22> 'unsigned long' <IntegralCast>
| | |       |   `-IntegerLiteral 0xc87010 <col:22> 'int' 8
| | |       `-ImplicitCastExpr 0xc871b0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:128:33, col:45> 'unsigned long' <IntegralCast>
| | |         `-ParenExpr 0xc87190 <col:33, col:45> 'bool'
| | |           `-BinaryOperator 0xc87170 <col:34, col:44> 'bool' '<'
| | |             |-CStyleCastExpr 0xc87110 <col:34, col:40> 'long long' <NoOp>
| | |             | `-ImplicitCastExpr 0xc870f8 <col:37, col:40> 'long long' <IntegralCast> part_of_explicit_cast
| | |             |   `-ParenExpr 0xc870d8 <col:37, col:40> 'int'
| | |             |     `-UnaryOperator 0xc87088 <col:38, col:39> 'int' prefix '-'
| | |             |       `-IntegerLiteral 0xc87068 <col:39> 'int' 1
| | |             `-ImplicitCastExpr 0xc87158 <col:44> 'long long' <IntegralCast>
| | |               `-IntegerLiteral 0xc87138 <col:44> 'int' 0
| | |-VarDecl 0xc87290 <line:1356:7, line:142:42> line:1356:41 digits10 'const int' static constexpr cinit
| | | `-ImplicitCastExpr 0xc875f8 <line:142:3, col:42> 'const int' <IntegralCast>
| | |   `-ParenExpr 0xc875d8 <col:3, col:42> 'unsigned long'
| | |     `-BinaryOperator 0xc875b8 <line:138:3, line:142:38> 'unsigned long' '/'
| | |       |-BinaryOperator 0xc87560 <line:138:3, line:142:31> 'unsigned long' '*'
| | |       | |-ParenExpr 0xc87508 <line:138:3, col:32> 'unsigned long'
| | |       | | `-BinaryOperator 0xc874e8 <line:153:28, line:128:45> 'unsigned long' '-'
| | |       | |   |-BinaryOperator 0xc87368 <line:153:28, <built-in>:71:22> 'unsigned long' '*'
| | |       | |   | |-UnaryExprOrTypeTraitExpr 0xc87310 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:153:28, col:36> 'unsigned long' sizeof 'long long'
| | |       | |   | `-ImplicitCastExpr 0xc87350 <<built-in>:71:22> 'unsigned long' <IntegralCast>
| | |       | |   |   `-IntegerLiteral 0xc87330 <col:22> 'int' 8
| | |       | |   `-ImplicitCastExpr 0xc874d0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:128:33, col:45> 'unsigned long' <IntegralCast>
| | |       | |     `-ParenExpr 0xc874b0 <col:33, col:45> 'bool'
| | |       | |       `-BinaryOperator 0xc87490 <col:34, col:44> 'bool' '<'
| | |       | |         |-CStyleCastExpr 0xc87430 <col:34, col:40> 'long long' <NoOp>
| | |       | |         | `-ImplicitCastExpr 0xc87418 <col:37, col:40> 'long long' <IntegralCast> part_of_explicit_cast
| | |       | |         |   `-ParenExpr 0xc873f8 <col:37, col:40> 'int'
| | |       | |         |     `-UnaryOperator 0xc873a8 <col:38, col:39> 'int' prefix '-'
| | |       | |         |       `-IntegerLiteral 0xc87388 <col:39> 'int' 1
| | |       | |         `-ImplicitCastExpr 0xc87478 <col:44> 'long long' <IntegralCast>
| | |       | |           `-IntegerLiteral 0xc87458 <col:44> 'int' 0
| | |       | `-ImplicitCastExpr 0xc87548 <line:142:31> 'unsigned long' <IntegralCast>
| | |       |   `-IntegerLiteral 0xc87528 <col:31> 'long' 643
| | |       `-ImplicitCastExpr 0xc875a0 <col:38> 'unsigned long' <IntegralCast>
| | |         `-IntegerLiteral 0xc87580 <col:38> 'int' 2136
| | |-VarDecl 0xc87680 <line:1359:7, col:43> col:28 max_digits10 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc876e8 <col:43> 'int' 0
| | |-VarDecl 0xc87770 <line:1361:7, col:54> col:42 is_signed 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc877d8 <col:54> 'bool' true
| | |-VarDecl 0xc87850 <line:1362:7, col:55> col:42 is_integer 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc878b8 <col:55> 'bool' true
| | |-VarDecl 0xc87930 <line:1363:7, col:53> col:42 is_exact 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc87998 <col:53> 'bool' true
| | |-VarDecl 0xc87a18 <line:1364:7, col:49> col:41 radix 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc87a80 <col:49> 'int' 2
| | |-CXXMethodDecl 0xc87b28 <line:1366:7, line:1367:51> col:7 constexpr epsilon 'long long () noexcept' static
| | | `-CompoundStmt 0xc88fb0 <col:39, col:51>
| | |   `-ReturnStmt 0xc88fa0 <col:41, col:48>
| | |     `-ImplicitCastExpr 0xc88f88 <col:48> 'long long' <IntegralCast>
| | |       `-IntegerLiteral 0xc88f68 <col:48> 'int' 0
| | |-CXXMethodDecl 0xc87bf8 <line:1369:7, line:1370:55> col:7 constexpr round_error 'long long () noexcept' static
| | | `-CompoundStmt 0xc89010 <col:43, col:55>
| | |   `-ReturnStmt 0xc89000 <col:45, col:52>
| | |     `-ImplicitCastExpr 0xc88fe8 <col:52> 'long long' <IntegralCast>
| | |       `-IntegerLiteral 0xc88fc8 <col:52> 'int' 0
| | |-VarDecl 0xc87cb0 <line:1372:7, col:56> col:41 min_exponent 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc87d18 <col:56> 'int' 0
| | |-VarDecl 0xc87da8 <line:1373:7, col:58> col:41 min_exponent10 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc87e10 <col:58> 'int' 0
| | |-VarDecl 0xc87ea0 <line:1374:7, col:56> col:41 max_exponent 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc87f08 <col:56> 'int' 0
| | |-VarDecl 0xc87f98 <line:1375:7, col:58> col:41 max_exponent10 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc88000 <col:58> 'int' 0
| | |-VarDecl 0xc88088 <line:1377:7, col:57> col:42 has_infinity 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc880f0 <col:57> 'bool' false
| | |-VarDecl 0xc88168 <line:1378:7, col:58> col:42 has_quiet_NaN 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc881d0 <col:58> 'bool' false
| | |-VarDecl 0xc88248 <line:1379:7, col:62> col:42 has_signaling_NaN 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc882b0 <col:62> 'bool' false
| | |-VarDecl 0xc88328 <line:1380:7, line:1381:10> line:1380:56 has_denorm 'const std::float_denorm_style' static constexpr cinit
| | | `-DeclRefExpr 0xc88390 <line:1381:10> 'std::float_denorm_style' EnumConstant 0xc54908 'denorm_absent' 'std::float_denorm_style'
| | |-VarDecl 0xc88418 <line:1382:7, col:60> col:42 has_denorm_loss 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc88480 <col:60> 'bool' false
| | |-CXXMethodDecl 0xc88518 <line:1384:7, line:1385:76> col:7 constexpr infinity 'long long () noexcept' static
| | | `-CompoundStmt 0xc890b8 <col:40, col:76>
| | |   `-ReturnStmt 0xc890a8 <col:42, col:73>
| | |     `-CXXStaticCastExpr 0xc89078 <col:49, col:73> 'long long' static_cast<long long> <NoOp>
| | |       `-ImplicitCastExpr 0xc89060 <col:72> 'long long' <IntegralCast> part_of_explicit_cast
| | |         `-IntegerLiteral 0xc89028 <col:72> 'int' 0
| | |-CXXMethodDecl 0xc885e8 <line:1387:7, line:1388:77> col:7 constexpr quiet_NaN 'long long () noexcept' static
| | | `-CompoundStmt 0xc89160 <col:41, col:77>
| | |   `-ReturnStmt 0xc89150 <col:43, col:74>
| | |     `-CXXStaticCastExpr 0xc89120 <col:50, col:74> 'long long' static_cast<long long> <NoOp>
| | |       `-ImplicitCastExpr 0xc89108 <col:73> 'long long' <IntegralCast> part_of_explicit_cast
| | |         `-IntegerLiteral 0xc890d0 <col:73> 'int' 0
| | |-CXXMethodDecl 0xc886b8 <line:1390:7, line:1392:43> line:1391:7 constexpr signaling_NaN 'long long () noexcept' static
| | | `-CompoundStmt 0xc89208 <line:1392:7, col:43>
| | |   `-ReturnStmt 0xc891f8 <col:9, col:40>
| | |     `-CXXStaticCastExpr 0xc891c8 <col:16, col:40> 'long long' static_cast<long long> <NoOp>
| | |       `-ImplicitCastExpr 0xc891b0 <col:39> 'long long' <IntegralCast> part_of_explicit_cast
| | |         `-IntegerLiteral 0xc89178 <col:39> 'int' 0
| | |-CXXMethodDecl 0xc88788 <line:1394:7, line:1395:78> col:7 constexpr denorm_min 'long long () noexcept' static
| | | `-CompoundStmt 0xc892b0 <col:42, col:78>
| | |   `-ReturnStmt 0xc892a0 <col:44, col:75>
| | |     `-CXXStaticCastExpr 0xc89270 <col:51, col:75> 'long long' static_cast<long long> <NoOp>
| | |       `-ImplicitCastExpr 0xc89258 <col:74> 'long long' <IntegralCast> part_of_explicit_cast
| | |         `-IntegerLiteral 0xc89220 <col:74> 'int' 0
| | |-VarDecl 0xc88838 <line:1397:7, col:54> col:42 is_iec559 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc888a0 <col:54> 'bool' false
| | |-VarDecl 0xc88918 <line:1398:7, col:55> col:42 is_bounded 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc88980 <col:55> 'bool' true
| | |-VarDecl 0xc889f8 <line:1399:7, col:54> col:42 is_modulo 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc88a60 <col:54> 'bool' false
| | |-VarDecl 0xc88ad8 <line:1401:7, line:80:35> line:1401:42 traps 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc88b40 <line:80:35> 'bool' true
| | |-VarDecl 0xc88bb8 <line:1402:7, col:60> col:42 tinyness_before 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc88c20 <col:60> 'bool' false
| | `-VarDecl 0xc88c98 <line:1403:7, line:1404:10> line:1403:55 round_style 'const std::float_round_style' static constexpr cinit
| |   `-DeclRefExpr 0xc88d00 <line:1404:10> 'std::float_round_style' EnumConstant 0xc54560 'round_toward_zero' 'std::float_round_style'
| |-ClassTemplateSpecializationDecl 0xc892f8 <line:1408:3, line:1478:5> line:1409:12 struct numeric_limits definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'unsigned long long'
| | |-CXXRecordDecl 0xc89948 <col:5, col:12> col:12 implicit struct numeric_limits
| | |-VarDecl 0xc899e8 <line:1411:7, col:59> col:42 is_specialized 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc89a50 <col:59> 'bool' true
| | |-CXXMethodDecl 0xc89b78 <line:1413:7, line:1414:47> col:7 used constexpr min 'unsigned long long () noexcept' static
| | | `-CompoundStmt 0xc8bc38 <col:35, col:47>
| | |   `-ReturnStmt 0xc8bc28 <col:37, col:44>
| | |     `-ImplicitCastExpr 0xc8bc10 <col:44> 'unsigned long long' <IntegralCast>
| | |       `-IntegerLiteral 0xc8bbf0 <col:44> 'int' 0
| | |-CXXMethodDecl 0xc89c48 <line:1416:7, line:1417:74> col:7 constexpr max 'unsigned long long () noexcept' static
| | | `-CompoundStmt 0xc8bd30 <col:35, col:74>
| | |   `-ReturnStmt 0xc8bd20 <col:37, col:71>
| | |     `-BinaryOperator 0xc8bd00 <<built-in>:76:27, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1417:71> 'unsigned long long' '+'
| | |       |-BinaryOperator 0xc8bca8 <<built-in>:76:27, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1417:64> 'unsigned long long' '*'
| | |       | |-ImplicitCastExpr 0xc8bc90 <<built-in>:76:27> 'unsigned long long' <IntegralCast>
| | |       | | `-IntegerLiteral 0xc8bc50 <col:27> 'long long' 9223372036854775807
| | |       | `-IntegerLiteral 0xc8bc70 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1417:64> 'unsigned long long' 2
| | |       `-ImplicitCastExpr 0xc8bce8 <col:71> 'unsigned long long' <IntegralCast>
| | |         `-IntegerLiteral 0xc8bcc8 <col:71> 'int' 1
| | |-CXXMethodDecl 0xc89d18 <line:1420:7, line:1421:41> col:7 constexpr lowest 'unsigned long long () noexcept' static
| | | `-CompoundStmt 0xc8be10 <col:25, col:41>
| | |   `-ReturnStmt 0xc8be00 <col:27, col:38>
| | |     `-CallExpr 0xc8bde0 <col:34, col:38> 'unsigned long long'
| | |       `-ImplicitCastExpr 0xc8bdc8 <col:34> 'unsigned long long (*)() noexcept' <FunctionToPointerDecay>
| | |         `-DeclRefExpr 0xc8bd48 <col:34> 'unsigned long long () noexcept' lvalue CXXMethod 0xc89b78 'min' 'unsigned long long () noexcept'
| | |-VarDecl 0xc89dd0 <line:1424:7, line:138:32> line:1424:41 digits 'const int' static constexpr cinit
| | | `-ImplicitCastExpr 0xc8a068 <line:138:3, col:32> 'const int' <IntegralCast>
| | |   `-ParenExpr 0xc8a048 <col:3, col:32> 'unsigned long'
| | |     `-BinaryOperator 0xc8a028 <line:151:26, line:128:45> 'unsigned long' '-'
| | |       |-BinaryOperator 0xc89ea8 <line:151:26, <built-in>:71:22> 'unsigned long' '*'
| | |       | |-UnaryExprOrTypeTraitExpr 0xc89e50 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:151:26, col:34> 'unsigned long' sizeof 'unsigned long long'
| | |       | `-ImplicitCastExpr 0xc89e90 <<built-in>:71:22> 'unsigned long' <IntegralCast>
| | |       |   `-IntegerLiteral 0xc89e70 <col:22> 'int' 8
| | |       `-ImplicitCastExpr 0xc8a010 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:128:33, col:45> 'unsigned long' <IntegralCast>
| | |         `-ParenExpr 0xc89ff0 <col:33, col:45> 'bool'
| | |           `-BinaryOperator 0xc89fd0 <col:34, col:44> 'bool' '<'
| | |             |-CStyleCastExpr 0xc89f70 <col:34, col:40> 'unsigned long long' <NoOp>
| | |             | `-ImplicitCastExpr 0xc89f58 <col:37, col:40> 'unsigned long long' <IntegralCast> part_of_explicit_cast
| | |             |   `-ParenExpr 0xc89f38 <col:37, col:40> 'int'
| | |             |     `-UnaryOperator 0xc89ee8 <col:38, col:39> 'int' prefix '-'
| | |             |       `-IntegerLiteral 0xc89ec8 <col:39> 'int' 1
| | |             `-ImplicitCastExpr 0xc89fb8 <col:44> 'unsigned long long' <IntegralCast>
| | |               `-IntegerLiteral 0xc89f98 <col:44> 'int' 0
| | |-VarDecl 0xc8a0f0 <line:1426:7, line:142:42> line:1426:41 digits10 'const int' static constexpr cinit
| | | `-ImplicitCastExpr 0xc8a458 <line:142:3, col:42> 'const int' <IntegralCast>
| | |   `-ParenExpr 0xc8a438 <col:3, col:42> 'unsigned long'
| | |     `-BinaryOperator 0xc8a418 <line:138:3, line:142:38> 'unsigned long' '/'
| | |       |-BinaryOperator 0xc8a3c0 <line:138:3, line:142:31> 'unsigned long' '*'
| | |       | |-ParenExpr 0xc8a368 <line:138:3, col:32> 'unsigned long'
| | |       | | `-BinaryOperator 0xc8a348 <line:153:28, line:128:45> 'unsigned long' '-'
| | |       | |   |-BinaryOperator 0xc8a1c8 <line:153:28, <built-in>:71:22> 'unsigned long' '*'
| | |       | |   | |-UnaryExprOrTypeTraitExpr 0xc8a170 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:153:28, col:36> 'unsigned long' sizeof 'unsigned long long'
| | |       | |   | `-ImplicitCastExpr 0xc8a1b0 <<built-in>:71:22> 'unsigned long' <IntegralCast>
| | |       | |   |   `-IntegerLiteral 0xc8a190 <col:22> 'int' 8
| | |       | |   `-ImplicitCastExpr 0xc8a330 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:128:33, col:45> 'unsigned long' <IntegralCast>
| | |       | |     `-ParenExpr 0xc8a310 <col:33, col:45> 'bool'
| | |       | |       `-BinaryOperator 0xc8a2f0 <col:34, col:44> 'bool' '<'
| | |       | |         |-CStyleCastExpr 0xc8a290 <col:34, col:40> 'unsigned long long' <NoOp>
| | |       | |         | `-ImplicitCastExpr 0xc8a278 <col:37, col:40> 'unsigned long long' <IntegralCast> part_of_explicit_cast
| | |       | |         |   `-ParenExpr 0xc8a258 <col:37, col:40> 'int'
| | |       | |         |     `-UnaryOperator 0xc8a208 <col:38, col:39> 'int' prefix '-'
| | |       | |         |       `-IntegerLiteral 0xc8a1e8 <col:39> 'int' 1
| | |       | |         `-ImplicitCastExpr 0xc8a2d8 <col:44> 'unsigned long long' <IntegralCast>
| | |       | |           `-IntegerLiteral 0xc8a2b8 <col:44> 'int' 0
| | |       | `-ImplicitCastExpr 0xc8a3a8 <line:142:31> 'unsigned long' <IntegralCast>
| | |       |   `-IntegerLiteral 0xc8a388 <col:31> 'long' 643
| | |       `-ImplicitCastExpr 0xc8a400 <col:38> 'unsigned long' <IntegralCast>
| | |         `-IntegerLiteral 0xc8a3e0 <col:38> 'int' 2136
| | |-VarDecl 0xc8a4e0 <line:1429:7, col:43> col:28 max_digits10 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc8a548 <col:43> 'int' 0
| | |-VarDecl 0xc8a5d0 <line:1431:7, col:54> col:42 is_signed 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc8a638 <col:54> 'bool' false
| | |-VarDecl 0xc8a6b0 <line:1432:7, col:55> col:42 is_integer 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc8a718 <col:55> 'bool' true
| | |-VarDecl 0xc8a790 <line:1433:7, col:53> col:42 is_exact 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc8a7f8 <col:53> 'bool' true
| | |-VarDecl 0xc8a878 <line:1434:7, col:49> col:41 radix 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc8a8e0 <col:49> 'int' 2
| | |-CXXMethodDecl 0xc8a988 <line:1436:7, line:1437:51> col:7 constexpr epsilon 'unsigned long long () noexcept' static
| | | `-CompoundStmt 0xc8be70 <col:39, col:51>
| | |   `-ReturnStmt 0xc8be60 <col:41, col:48>
| | |     `-ImplicitCastExpr 0xc8be48 <col:48> 'unsigned long long' <IntegralCast>
| | |       `-IntegerLiteral 0xc8be28 <col:48> 'int' 0
| | |-CXXMethodDecl 0xc8aa58 <line:1439:7, line:1440:55> col:7 constexpr round_error 'unsigned long long () noexcept' static
| | | `-CompoundStmt 0xc8bed0 <col:43, col:55>
| | |   `-ReturnStmt 0xc8bec0 <col:45, col:52>
| | |     `-ImplicitCastExpr 0xc8bea8 <col:52> 'unsigned long long' <IntegralCast>
| | |       `-IntegerLiteral 0xc8be88 <col:52> 'int' 0
| | |-VarDecl 0xc8ab10 <line:1442:7, col:56> col:41 min_exponent 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc8ab78 <col:56> 'int' 0
| | |-VarDecl 0xc8ac08 <line:1443:7, col:58> col:41 min_exponent10 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc8ac70 <col:58> 'int' 0
| | |-VarDecl 0xc8ad00 <line:1444:7, col:56> col:41 max_exponent 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc8ad68 <col:56> 'int' 0
| | |-VarDecl 0xc8adf8 <line:1445:7, col:58> col:41 max_exponent10 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc8ae60 <col:58> 'int' 0
| | |-VarDecl 0xc8aee8 <line:1447:7, col:57> col:42 has_infinity 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc8af50 <col:57> 'bool' false
| | |-VarDecl 0xc8afc8 <line:1448:7, col:58> col:42 has_quiet_NaN 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc8b030 <col:58> 'bool' false
| | |-VarDecl 0xc8b0a8 <line:1449:7, col:62> col:42 has_signaling_NaN 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc8b110 <col:62> 'bool' false
| | |-VarDecl 0xc8b188 <line:1450:7, line:1451:10> line:1450:56 has_denorm 'const std::float_denorm_style' static constexpr cinit
| | | `-DeclRefExpr 0xc8b1f0 <line:1451:10> 'std::float_denorm_style' EnumConstant 0xc54908 'denorm_absent' 'std::float_denorm_style'
| | |-VarDecl 0xc8b278 <line:1452:7, col:60> col:42 has_denorm_loss 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc8b2e0 <col:60> 'bool' false
| | |-CXXMethodDecl 0xc8b378 <line:1454:7, line:1456:52> line:1455:7 constexpr infinity 'unsigned long long () noexcept' static
| | | `-CompoundStmt 0xc8bf78 <line:1456:7, col:52>
| | |   `-ReturnStmt 0xc8bf68 <col:9, col:49>
| | |     `-CXXStaticCastExpr 0xc8bf38 <col:16, col:49> 'unsigned long long' static_cast<unsigned long long> <NoOp>
| | |       `-ImplicitCastExpr 0xc8bf20 <col:48> 'unsigned long long' <IntegralCast> part_of_explicit_cast
| | |         `-IntegerLiteral 0xc8bee8 <col:48> 'int' 0
| | |-CXXMethodDecl 0xc8b448 <line:1458:7, line:1460:52> line:1459:7 constexpr quiet_NaN 'unsigned long long () noexcept' static
| | | `-CompoundStmt 0xc8c020 <line:1460:7, col:52>
| | |   `-ReturnStmt 0xc8c010 <col:9, col:49>
| | |     `-CXXStaticCastExpr 0xc8bfe0 <col:16, col:49> 'unsigned long long' static_cast<unsigned long long> <NoOp>
| | |       `-ImplicitCastExpr 0xc8bfc8 <col:48> 'unsigned long long' <IntegralCast> part_of_explicit_cast
| | |         `-IntegerLiteral 0xc8bf90 <col:48> 'int' 0
| | |-CXXMethodDecl 0xc8b518 <line:1462:7, line:1464:52> line:1463:7 constexpr signaling_NaN 'unsigned long long () noexcept' static
| | | `-CompoundStmt 0xc8c0c8 <line:1464:7, col:52>
| | |   `-ReturnStmt 0xc8c0b8 <col:9, col:49>
| | |     `-CXXStaticCastExpr 0xc8c088 <col:16, col:49> 'unsigned long long' static_cast<unsigned long long> <NoOp>
| | |       `-ImplicitCastExpr 0xc8c070 <col:48> 'unsigned long long' <IntegralCast> part_of_explicit_cast
| | |         `-IntegerLiteral 0xc8c038 <col:48> 'int' 0
| | |-CXXMethodDecl 0xc8b5e8 <line:1466:7, line:1468:52> line:1467:7 constexpr denorm_min 'unsigned long long () noexcept' static
| | | `-CompoundStmt 0xc8c170 <line:1468:7, col:52>
| | |   `-ReturnStmt 0xc8c160 <col:9, col:49>
| | |     `-CXXStaticCastExpr 0xc8c130 <col:16, col:49> 'unsigned long long' static_cast<unsigned long long> <NoOp>
| | |       `-ImplicitCastExpr 0xc8c118 <col:48> 'unsigned long long' <IntegralCast> part_of_explicit_cast
| | |         `-IntegerLiteral 0xc8c0e0 <col:48> 'int' 0
| | |-VarDecl 0xc8b698 <line:1470:7, col:54> col:42 is_iec559 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc8b700 <col:54> 'bool' false
| | |-VarDecl 0xc8b778 <line:1471:7, col:55> col:42 is_bounded 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc8b7e0 <col:55> 'bool' true
| | |-VarDecl 0xc8b858 <line:1472:7, col:54> col:42 is_modulo 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc8b8c0 <col:54> 'bool' true
| | |-VarDecl 0xc8b938 <line:1474:7, line:80:35> line:1474:42 traps 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc8b9a0 <line:80:35> 'bool' true
| | |-VarDecl 0xc8ba18 <line:1475:7, col:60> col:42 tinyness_before 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc8ba80 <col:60> 'bool' false
| | `-VarDecl 0xc8baf8 <line:1476:7, line:1477:10> line:1476:55 round_style 'const std::float_round_style' static constexpr cinit
| |   `-DeclRefExpr 0xc8bb60 <line:1477:10> 'std::float_round_style' EnumConstant 0xc54560 'round_toward_zero' 'std::float_round_style'
| |-ClassTemplateSpecializationDecl 0xc8c1b8 <line:1483:3, line:1549:5> line:1484:12 struct numeric_limits definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type '__int128'
| | |-CXXRecordDecl 0xc8c3d8 <col:5, col:12> col:12 implicit struct numeric_limits
| | |-VarDecl 0xc8c478 <line:1486:7, col:59> col:42 is_specialized 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc8c4e0 <col:59> 'bool' true
| | |-CXXMethodDecl 0xc8c608 <line:1488:7, line:1489:72> col:2 used constexpr min '__int128 () noexcept' static
| | | `-CompoundStmt 0xc9a910 <col:30, col:72>
| | |   `-ReturnStmt 0xc9a900 <col:32, line:131:64>
| | |     `-ParenExpr 0xc9a8e0 <col:3, col:64> '__int128'
| | |       `-ConditionalOperator 0xc9a8b0 <line:128:33, line:131:63> '__int128'
| | |         |-ParenExpr 0xc9a158 <line:128:33, col:45> 'bool'
| | |         | `-BinaryOperator 0xc9a138 <col:34, col:44> 'bool' '<'
| | |         |   |-CStyleCastExpr 0xc9a0d8 <col:34, col:40> '__int128' <NoOp>
| | |         |   | `-ImplicitCastExpr 0xc9a0c0 <col:37, col:40> '__int128' <IntegralCast> part_of_explicit_cast
| | |         |   |   `-ParenExpr 0xc9a0a0 <col:37, col:40> 'int'
| | |         |   |     `-UnaryOperator 0xc9a050 <col:38, col:39> 'int' prefix '-'
| | |         |   |       `-IntegerLiteral 0xc9a030 <col:39> 'int' 1
| | |         |   `-ImplicitCastExpr 0xc9a120 <col:44> '__int128' <IntegralCast>
| | |         |     `-IntegerLiteral 0xc9a100 <col:44> 'int' 0
| | |         |-BinaryOperator 0xc9a818 <line:131:31, col:56> '__int128' '-'
| | |         | |-UnaryOperator 0xc9a7c8 <col:31, line:135:71> '__int128' prefix '-'
| | |         | | `-ParenExpr 0xc9a7a8 <line:134:3, line:135:71> '__int128'
| | |         | |   `-ConditionalOperator 0xc9a778 <line:128:33, line:135:70> '__int128'
| | |         | |     |-ParenExpr 0xc9a2a0 <line:128:33, col:45> 'bool'
| | |         | |     | `-BinaryOperator 0xc9a280 <col:34, col:44> 'bool' '<'
| | |         | |     |   |-CStyleCastExpr 0xc9a220 <col:34, col:40> '__int128' <NoOp>
| | |         | |     |   | `-ImplicitCastExpr 0xc9a208 <col:37, col:40> '__int128' <IntegralCast> part_of_explicit_cast
| | |         | |     |   |   `-ParenExpr 0xc9a1e8 <col:37, col:40> 'int'
| | |         | |     |   |     `-UnaryOperator 0xc9a198 <col:38, col:39> 'int' prefix '-'
| | |         | |     |   |       `-IntegerLiteral 0xc9a178 <col:39> 'int' 1
| | |         | |     |   `-ImplicitCastExpr 0xc9a268 <col:44> '__int128' <IntegralCast>
| | |         | |     |     `-IntegerLiteral 0xc9a248 <col:44> 'int' 0
| | |         | |     |-ParenExpr 0xc9a6c8 <line:135:4, col:62> '__int128'
| | |         | |     | `-BinaryOperator 0xc9a6a8 <col:5, col:61> '__int128' '+'
| | |         | |     |   |-ParenExpr 0xc9a650 <col:5, col:57> '__int128'
| | |         | |     |   | `-BinaryOperator 0xc9a630 <col:6, col:56> '__int128' '<<'
| | |         | |     |   |   |-ParenExpr 0xc9a5f0 <col:6, col:51> '__int128'
| | |         | |     |   |   | `-BinaryOperator 0xc9a5d0 <col:7, col:50> '__int128' '-'
| | |         | |     |   |   |   |-ParenExpr 0xc9a578 <col:7, col:46> '__int128'
| | |         | |     |   |   |   | `-BinaryOperator 0xc9a558 <col:8, col:45> '__int128' '<<'
| | |         | |     |   |   |   |   |-CStyleCastExpr 0xc9a310 <col:8, col:11> '__int128' <NoOp>
| | |         | |     |   |   |   |   | `-ImplicitCastExpr 0xc9a2f8 <col:11> '__int128' <IntegralCast> part_of_explicit_cast
| | |         | |     |   |   |   |   |   `-IntegerLiteral 0xc9a2c0 <col:11> 'int' 1
| | |         | |     |   |   |   |   `-ParenExpr 0xc9a538 <col:16, col:45> 'int'
| | |         | |     |   |   |   |     `-BinaryOperator 0xc9a518 <line:138:3, line:135:44> 'int' '-'
| | |         | |     |   |   |   |       |-ParenExpr 0xc9a4d8 <line:138:3, col:32> 'int'
| | |         | |     |   |   |   |       | `-BinaryOperator 0xc9a4b8 <<built-in>:340:35, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:128:45> 'int' '-'
| | |         | |     |   |   |   |       |   |-IntegerLiteral 0xc9a338 <<built-in>:340:35> 'int' 128
| | |         | |     |   |   |   |       |   `-ImplicitCastExpr 0xc9a4a0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:128:33, col:45> 'int' <IntegralCast>
| | |         | |     |   |   |   |       |     `-ParenExpr 0xc9a480 <col:33, col:45> 'bool'
| | |         | |     |   |   |   |       |       `-BinaryOperator 0xc9a460 <col:34, col:44> 'bool' '<'
| | |         | |     |   |   |   |       |         |-CStyleCastExpr 0xc9a400 <col:34, col:40> '__int128' <NoOp>
| | |         | |     |   |   |   |       |         | `-ImplicitCastExpr 0xc9a3e8 <col:37, col:40> '__int128' <IntegralCast> part_of_explicit_cast
| | |         | |     |   |   |   |       |         |   `-ParenExpr 0xc9a3c8 <col:37, col:40> 'int'
| | |         | |     |   |   |   |       |         |     `-UnaryOperator 0xc9a378 <col:38, col:39> 'int' prefix '-'
| | |         | |     |   |   |   |       |         |       `-IntegerLiteral 0xc9a358 <col:39> 'int' 1
| | |         | |     |   |   |   |       |         `-ImplicitCastExpr 0xc9a448 <col:44> '__int128' <IntegralCast>
| | |         | |     |   |   |   |       |           `-IntegerLiteral 0xc9a428 <col:44> 'int' 0
| | |         | |     |   |   |   |       `-IntegerLiteral 0xc9a4f8 <line:135:44> 'int' 1
| | |         | |     |   |   |   `-ImplicitCastExpr 0xc9a5b8 <col:50> '__int128' <IntegralCast>
| | |         | |     |   |   |     `-IntegerLiteral 0xc9a598 <col:50> 'int' 1
| | |         | |     |   |   `-IntegerLiteral 0xc9a610 <col:56> 'int' 1
| | |         | |     |   `-ImplicitCastExpr 0xc9a690 <col:61> '__int128' <IntegralCast>
| | |         | |     |     `-IntegerLiteral 0xc9a670 <col:61> 'int' 1
| | |         | |     `-UnaryOperator 0xc9a760 <col:66, col:70> '__int128' prefix '~' cannot overflow
| | |         | |       `-CStyleCastExpr 0xc9a738 <col:67, col:70> '__int128' <NoOp>
| | |         | |         `-ImplicitCastExpr 0xc9a720 <col:70> '__int128' <IntegralCast> part_of_explicit_cast
| | |         | |           `-IntegerLiteral 0xc9a6e8 <col:70> 'int' 0
| | |         | `-ImplicitCastExpr 0xc9a800 <line:131:56> '__int128' <IntegralCast>
| | |         |   `-IntegerLiteral 0xc9a7e0 <col:56> 'int' 1
| | |         `-CStyleCastExpr 0xc9a888 <col:60, col:63> '__int128' <NoOp>
| | |           `-ImplicitCastExpr 0xc9a870 <col:63> '__int128' <IntegralCast> part_of_explicit_cast
| | |             `-IntegerLiteral 0xc9a838 <col:63> 'int' 0
| | |-CXXMethodDecl 0xc8c6d8 <line:1491:7, line:1492:77> col:7 constexpr max '__int128 () noexcept' static
| | | `-CompoundStmt 0xc9af88 <col:35, col:77>
| | |   `-ReturnStmt 0xc9af78 <col:37, line:135:71>
| | |     `-ParenExpr 0xc9af58 <line:134:3, line:135:71> '__int128'
| | |       `-ConditionalOperator 0xc9af28 <line:128:33, line:135:70> '__int128'
| | |         |-ParenExpr 0xc9aa50 <line:128:33, col:45> 'bool'
| | |         | `-BinaryOperator 0xc9aa30 <col:34, col:44> 'bool' '<'
| | |         |   |-CStyleCastExpr 0xc9a9d0 <col:34, col:40> '__int128' <NoOp>
| | |         |   | `-ImplicitCastExpr 0xc9a9b8 <col:37, col:40> '__int128' <IntegralCast> part_of_explicit_cast
| | |         |   |   `-ParenExpr 0xc9a998 <col:37, col:40> 'int'
| | |         |   |     `-UnaryOperator 0xc9a948 <col:38, col:39> 'int' prefix '-'
| | |         |   |       `-IntegerLiteral 0xc9a928 <col:39> 'int' 1
| | |         |   `-ImplicitCastExpr 0xc9aa18 <col:44> '__int128' <IntegralCast>
| | |         |     `-IntegerLiteral 0xc9a9f8 <col:44> 'int' 0
| | |         |-ParenExpr 0xc9ae78 <line:135:4, col:62> '__int128'
| | |         | `-BinaryOperator 0xc9ae58 <col:5, col:61> '__int128' '+'
| | |         |   |-ParenExpr 0xc9ae00 <col:5, col:57> '__int128'
| | |         |   | `-BinaryOperator 0xc9ade0 <col:6, col:56> '__int128' '<<'
| | |         |   |   |-ParenExpr 0xc9ada0 <col:6, col:51> '__int128'
| | |         |   |   | `-BinaryOperator 0xc9ad80 <col:7, col:50> '__int128' '-'
| | |         |   |   |   |-ParenExpr 0xc9ad28 <col:7, col:46> '__int128'
| | |         |   |   |   | `-BinaryOperator 0xc9ad08 <col:8, col:45> '__int128' '<<'
| | |         |   |   |   |   |-CStyleCastExpr 0xc9aac0 <col:8, col:11> '__int128' <NoOp>
| | |         |   |   |   |   | `-ImplicitCastExpr 0xc9aaa8 <col:11> '__int128' <IntegralCast> part_of_explicit_cast
| | |         |   |   |   |   |   `-IntegerLiteral 0xc9aa70 <col:11> 'int' 1
| | |         |   |   |   |   `-ParenExpr 0xc9ace8 <col:16, col:45> 'int'
| | |         |   |   |   |     `-BinaryOperator 0xc9acc8 <line:138:3, line:135:44> 'int' '-'
| | |         |   |   |   |       |-ParenExpr 0xc9ac88 <line:138:3, col:32> 'int'
| | |         |   |   |   |       | `-BinaryOperator 0xc9ac68 <<built-in>:340:35, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:128:45> 'int' '-'
| | |         |   |   |   |       |   |-IntegerLiteral 0xc9aae8 <<built-in>:340:35> 'int' 128
| | |         |   |   |   |       |   `-ImplicitCastExpr 0xc9ac50 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:128:33, col:45> 'int' <IntegralCast>
| | |         |   |   |   |       |     `-ParenExpr 0xc9ac30 <col:33, col:45> 'bool'
| | |         |   |   |   |       |       `-BinaryOperator 0xc9ac10 <col:34, col:44> 'bool' '<'
| | |         |   |   |   |       |         |-CStyleCastExpr 0xc9abb0 <col:34, col:40> '__int128' <NoOp>
| | |         |   |   |   |       |         | `-ImplicitCastExpr 0xc9ab98 <col:37, col:40> '__int128' <IntegralCast> part_of_explicit_cast
| | |         |   |   |   |       |         |   `-ParenExpr 0xc9ab78 <col:37, col:40> 'int'
| | |         |   |   |   |       |         |     `-UnaryOperator 0xc9ab28 <col:38, col:39> 'int' prefix '-'
| | |         |   |   |   |       |         |       `-IntegerLiteral 0xc9ab08 <col:39> 'int' 1
| | |         |   |   |   |       |         `-ImplicitCastExpr 0xc9abf8 <col:44> '__int128' <IntegralCast>
| | |         |   |   |   |       |           `-IntegerLiteral 0xc9abd8 <col:44> 'int' 0
| | |         |   |   |   |       `-IntegerLiteral 0xc9aca8 <line:135:44> 'int' 1
| | |         |   |   |   `-ImplicitCastExpr 0xc9ad68 <col:50> '__int128' <IntegralCast>
| | |         |   |   |     `-IntegerLiteral 0xc9ad48 <col:50> 'int' 1
| | |         |   |   `-IntegerLiteral 0xc9adc0 <col:56> 'int' 1
| | |         |   `-ImplicitCastExpr 0xc9ae40 <col:61> '__int128' <IntegralCast>
| | |         |     `-IntegerLiteral 0xc9ae20 <col:61> 'int' 1
| | |         `-UnaryOperator 0xc9af10 <col:66, col:70> '__int128' prefix '~' cannot overflow
| | |           `-CStyleCastExpr 0xc9aee8 <col:67, col:70> '__int128' <NoOp>
| | |             `-ImplicitCastExpr 0xc9aed0 <col:70> '__int128' <IntegralCast> part_of_explicit_cast
| | |               `-IntegerLiteral 0xc9ae98 <col:70> 'int' 0
| | |-VarDecl 0xc8c790 <line:1494:7, line:1495:20> line:1494:41 digits 'const int' static constexpr cinit
| | | `-BinaryOperator 0xc8c838 <<built-in>:340:35, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1495:20> 'int' '-'
| | |   |-IntegerLiteral 0xc8c7f8 <<built-in>:340:35> 'int' 128
| | |   `-IntegerLiteral 0xc8c818 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1495:20> 'int' 1
| | |-VarDecl 0xc8c8c8 <line:1496:7, line:1497:33> line:1496:41 digits10 'const int' static constexpr cinit
| | | `-ImplicitCastExpr 0xc8ca60 <line:1497:10, col:33> 'const int' <IntegralCast>
| | |   `-BinaryOperator 0xc8ca40 <col:10, col:33> 'long' '/'
| | |     |-BinaryOperator 0xc8c9e8 <col:10, col:26> 'long' '*'
| | |     | |-ImplicitCastExpr 0xc8c9d0 <col:10, col:22> 'long' <IntegralCast>
| | |     | | `-ParenExpr 0xc8c990 <col:10, col:22> 'int'
| | |     | |   `-BinaryOperator 0xc8c970 <<built-in>:340:35, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1497:21> 'int' '-'
| | |     | |     |-IntegerLiteral 0xc8c930 <<built-in>:340:35> 'int' 128
| | |     | |     `-IntegerLiteral 0xc8c950 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1497:21> 'int' 1
| | |     | `-IntegerLiteral 0xc8c9b0 <col:26> 'long' 643
| | |     `-ImplicitCastExpr 0xc8ca28 <col:33> 'long' <IntegralCast>
| | |       `-IntegerLiteral 0xc8ca08 <col:33> 'int' 2136
| | |-VarDecl 0xc8cae0 <line:1499:7, col:54> col:42 is_signed 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc8cb48 <col:54> 'bool' true
| | |-VarDecl 0xc8cbc0 <line:1500:7, col:55> col:42 is_integer 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc8cc28 <col:55> 'bool' true
| | |-VarDecl 0xc8cca0 <line:1501:7, col:53> col:42 is_exact 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc8cd08 <col:53> 'bool' true
| | |-VarDecl 0xc8cd88 <line:1502:7, col:49> col:41 radix 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc8cdf0 <col:49> 'int' 2
| | |-CXXMethodDecl 0xc8ce98 <line:1504:7, line:1505:51> col:7 constexpr epsilon '__int128 () noexcept' static
| | | `-CompoundStmt 0xc9afe8 <col:39, col:51>
| | |   `-ReturnStmt 0xc9afd8 <col:41, col:48>
| | |     `-ImplicitCastExpr 0xc9afc0 <col:48> '__int128' <IntegralCast>
| | |       `-IntegerLiteral 0xc9afa0 <col:48> 'int' 0
| | |-CXXMethodDecl 0xc8cf68 <line:1507:7, line:1508:55> col:7 constexpr round_error '__int128 () noexcept' static
| | | `-CompoundStmt 0xc9b048 <col:43, col:55>
| | |   `-ReturnStmt 0xc9b038 <col:45, col:52>
| | |     `-ImplicitCastExpr 0xc9b020 <col:52> '__int128' <IntegralCast>
| | |       `-IntegerLiteral 0xc9b000 <col:52> 'int' 0
| | |-CXXMethodDecl 0xc8d038 <line:1621:7, line:1622:41> col:7 constexpr lowest '__int128 () noexcept' static
| | | `-CompoundStmt 0xc9b120 <col:25, col:41>
| | |   `-ReturnStmt 0xc9b110 <col:27, col:38>
| | |     `-CallExpr 0xc9b0f0 <col:34, col:38> '__int128'
| | |       `-ImplicitCastExpr 0xc9b0d8 <col:34> '__int128 (*)() noexcept' <FunctionToPointerDecay>
| | |         `-DeclRefExpr 0xc9b060 <col:34> '__int128 () noexcept' lvalue CXXMethod 0xc8c608 'min' '__int128 () noexcept'
| | |-VarDecl 0xc8d0f0 <line:1623:7, col:43> col:28 max_digits10 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc8d158 <col:43> 'int' 0
| | |-VarDecl 0xc8d1e8 <line:1512:7, col:56> col:41 min_exponent 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc8d250 <col:56> 'int' 0
| | |-VarDecl 0xc8d2e0 <line:1513:7, col:58> col:41 min_exponent10 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc8d348 <col:58> 'int' 0
| | |-VarDecl 0xc8d3d8 <line:1514:7, col:56> col:41 max_exponent 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc8d440 <col:56> 'int' 0
| | |-VarDecl 0xc8d4d0 <line:1515:7, col:58> col:41 max_exponent10 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc8d538 <col:58> 'int' 0
| | |-VarDecl 0xc8d5c0 <line:1517:7, col:57> col:42 has_infinity 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc8d628 <col:57> 'bool' false
| | |-VarDecl 0xc8d6a0 <line:1518:7, col:58> col:42 has_quiet_NaN 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc8d708 <col:58> 'bool' false
| | |-VarDecl 0xc8d780 <line:1519:7, col:62> col:42 has_signaling_NaN 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc8d7e8 <col:62> 'bool' false
| | |-VarDecl 0xc995c8 <line:1520:7, line:1521:10> line:1520:56 has_denorm 'const std::float_denorm_style' static constexpr cinit
| | | `-DeclRefExpr 0xc99630 <line:1521:10> 'std::float_denorm_style' EnumConstant 0xc54908 'denorm_absent' 'std::float_denorm_style'
| | |-VarDecl 0xc996b8 <line:1522:7, col:60> col:42 has_denorm_loss 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc99720 <col:60> 'bool' false
| | |-CXXMethodDecl 0xc997b8 <line:1524:7, line:1526:38> line:1525:7 constexpr infinity '__int128 () noexcept' static
| | | `-CompoundStmt 0xc9b1c8 <line:1526:7, col:38>
| | |   `-ReturnStmt 0xc9b1b8 <col:9, col:35>
| | |     `-CXXStaticCastExpr 0xc9b188 <col:16, col:35> '__int128' static_cast<__int128> <NoOp>
| | |       `-ImplicitCastExpr 0xc9b170 <col:34> '__int128' <IntegralCast> part_of_explicit_cast
| | |         `-IntegerLiteral 0xc9b138 <col:34> 'int' 0
| | |-CXXMethodDecl 0xc99888 <line:1528:7, line:1530:38> line:1529:7 constexpr quiet_NaN '__int128 () noexcept' static
| | | `-CompoundStmt 0xc9b270 <line:1530:7, col:38>
| | |   `-ReturnStmt 0xc9b260 <col:9, col:35>
| | |     `-CXXStaticCastExpr 0xc9b230 <col:16, col:35> '__int128' static_cast<__int128> <NoOp>
| | |       `-ImplicitCastExpr 0xc9b218 <col:34> '__int128' <IntegralCast> part_of_explicit_cast
| | |         `-IntegerLiteral 0xc9b1e0 <col:34> 'int' 0
| | |-CXXMethodDecl 0xc99958 <line:1532:7, line:1534:38> line:1533:7 constexpr signaling_NaN '__int128 () noexcept' static
| | | `-CompoundStmt 0xc9b318 <line:1534:7, col:38>
| | |   `-ReturnStmt 0xc9b308 <col:9, col:35>
| | |     `-CXXStaticCastExpr 0xc9b2d8 <col:16, col:35> '__int128' static_cast<__int128> <NoOp>
| | |       `-ImplicitCastExpr 0xc9b2c0 <col:34> '__int128' <IntegralCast> part_of_explicit_cast
| | |         `-IntegerLiteral 0xc9b288 <col:34> 'int' 0
| | |-CXXMethodDecl 0xc99a28 <line:1536:7, line:1538:38> line:1537:7 constexpr denorm_min '__int128 () noexcept' static
| | | `-CompoundStmt 0xc9b3c0 <line:1538:7, col:38>
| | |   `-ReturnStmt 0xc9b3b0 <col:9, col:35>
| | |     `-CXXStaticCastExpr 0xc9b380 <col:16, col:35> '__int128' static_cast<__int128> <NoOp>
| | |       `-ImplicitCastExpr 0xc9b368 <col:34> '__int128' <IntegralCast> part_of_explicit_cast
| | |         `-IntegerLiteral 0xc9b330 <col:34> 'int' 0
| | |-VarDecl 0xc99ad8 <line:1540:7, col:54> col:42 is_iec559 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc99b40 <col:54> 'bool' false
| | |-VarDecl 0xc99bb8 <line:1541:7, col:55> col:42 is_bounded 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc99c20 <col:55> 'bool' true
| | |-VarDecl 0xc99c98 <line:1542:7, col:54> col:42 is_modulo 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc99d00 <col:54> 'bool' false
| | |-VarDecl 0xc99d78 <line:1544:7, line:80:35> line:1544:42 traps 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc99de0 <line:80:35> 'bool' true
| | |-VarDecl 0xc99e58 <line:1546:7, col:60> col:42 tinyness_before 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc99ec0 <col:60> 'bool' false
| | `-VarDecl 0xc99f38 <line:1547:7, line:1548:10> line:1547:55 round_style 'const std::float_round_style' static constexpr cinit
| |   `-DeclRefExpr 0xc99fa0 <line:1548:10> 'std::float_round_style' EnumConstant 0xc54560 'round_toward_zero' 'std::float_round_style'
| |-ClassTemplateSpecializationDecl 0xc9b408 <line:1551:3, line:1616:5> line:1552:12 struct numeric_limits definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'unsigned __int128'
| | |-CXXRecordDecl 0xc9b628 <col:5, col:12> col:12 implicit struct numeric_limits
| | |-VarDecl 0xc9b6c8 <line:1554:7, col:59> col:42 is_specialized 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc9b730 <col:59> 'bool' true
| | |-CXXMethodDecl 0xc9b858 <line:1556:7, line:1557:47> col:7 used constexpr min 'unsigned __int128 () noexcept' static
| | | `-CompoundStmt 0xc9d4c0 <col:35, col:47>
| | |   `-ReturnStmt 0xc9d4b0 <col:37, col:44>
| | |     `-ImplicitCastExpr 0xc9d498 <col:44> 'unsigned __int128' <IntegralCast>
| | |       `-IntegerLiteral 0xc9d478 <col:44> 'int' 0
| | |-CXXMethodDecl 0xc9b928 <line:1559:7, line:1561:59> line:1560:7 constexpr max 'unsigned __int128 () noexcept' static
| | | `-CompoundStmt 0xca7720 <line:1561:7, col:59>
| | |   `-ReturnStmt 0xca7710 <col:9, line:135:71>
| | |     `-ParenExpr 0xca76f0 <line:134:3, line:135:71> 'unsigned __int128'
| | |       `-ConditionalOperator 0xca76c0 <line:128:33, line:135:70> 'unsigned __int128'
| | |         |-ParenExpr 0xca71e8 <line:128:33, col:45> 'bool'
| | |         | `-BinaryOperator 0xca71c8 <col:34, col:44> 'bool' '<'
| | |         |   |-CStyleCastExpr 0xca7168 <col:34, col:40> 'unsigned __int128' <NoOp>
| | |         |   | `-ImplicitCastExpr 0xca7150 <col:37, col:40> 'unsigned __int128' <IntegralCast> part_of_explicit_cast
| | |         |   |   `-ParenExpr 0xca7130 <col:37, col:40> 'int'
| | |         |   |     `-UnaryOperator 0xc9d4f8 <col:38, col:39> 'int' prefix '-'
| | |         |   |       `-IntegerLiteral 0xc9d4d8 <col:39> 'int' 1
| | |         |   `-ImplicitCastExpr 0xca71b0 <col:44> 'unsigned __int128' <IntegralCast>
| | |         |     `-IntegerLiteral 0xca7190 <col:44> 'int' 0
| | |         |-ParenExpr 0xca7610 <line:135:4, col:62> 'unsigned __int128'
| | |         | `-BinaryOperator 0xca75f0 <col:5, col:61> 'unsigned __int128' '+'
| | |         |   |-ParenExpr 0xca7598 <col:5, col:57> 'unsigned __int128'
| | |         |   | `-BinaryOperator 0xca7578 <col:6, col:56> 'unsigned __int128' '<<'
| | |         |   |   |-ParenExpr 0xca7538 <col:6, col:51> 'unsigned __int128'
| | |         |   |   | `-BinaryOperator 0xca7518 <col:7, col:50> 'unsigned __int128' '-'
| | |         |   |   |   |-ParenExpr 0xca74c0 <col:7, col:46> 'unsigned __int128'
| | |         |   |   |   | `-BinaryOperator 0xca74a0 <col:8, col:45> 'unsigned __int128' '<<'
| | |         |   |   |   |   |-CStyleCastExpr 0xca7258 <col:8, col:11> 'unsigned __int128' <NoOp>
| | |         |   |   |   |   | `-ImplicitCastExpr 0xca7240 <col:11> 'unsigned __int128' <IntegralCast> part_of_explicit_cast
| | |         |   |   |   |   |   `-IntegerLiteral 0xca7208 <col:11> 'int' 1
| | |         |   |   |   |   `-ParenExpr 0xca7480 <col:16, col:45> 'int'
| | |         |   |   |   |     `-BinaryOperator 0xca7460 <line:138:3, line:135:44> 'int' '-'
| | |         |   |   |   |       |-ParenExpr 0xca7420 <line:138:3, col:32> 'int'
| | |         |   |   |   |       | `-BinaryOperator 0xca7400 <<built-in>:340:35, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:128:45> 'int' '-'
| | |         |   |   |   |       |   |-IntegerLiteral 0xca7280 <<built-in>:340:35> 'int' 128
| | |         |   |   |   |       |   `-ImplicitCastExpr 0xca73e8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:128:33, col:45> 'int' <IntegralCast>
| | |         |   |   |   |       |     `-ParenExpr 0xca73c8 <col:33, col:45> 'bool'
| | |         |   |   |   |       |       `-BinaryOperator 0xca73a8 <col:34, col:44> 'bool' '<'
| | |         |   |   |   |       |         |-CStyleCastExpr 0xca7348 <col:34, col:40> 'unsigned __int128' <NoOp>
| | |         |   |   |   |       |         | `-ImplicitCastExpr 0xca7330 <col:37, col:40> 'unsigned __int128' <IntegralCast> part_of_explicit_cast
| | |         |   |   |   |       |         |   `-ParenExpr 0xca7310 <col:37, col:40> 'int'
| | |         |   |   |   |       |         |     `-UnaryOperator 0xca72c0 <col:38, col:39> 'int' prefix '-'
| | |         |   |   |   |       |         |       `-IntegerLiteral 0xca72a0 <col:39> 'int' 1
| | |         |   |   |   |       |         `-ImplicitCastExpr 0xca7390 <col:44> 'unsigned __int128' <IntegralCast>
| | |         |   |   |   |       |           `-IntegerLiteral 0xca7370 <col:44> 'int' 0
| | |         |   |   |   |       `-IntegerLiteral 0xca7440 <line:135:44> 'int' 1
| | |         |   |   |   `-ImplicitCastExpr 0xca7500 <col:50> 'unsigned __int128' <IntegralCast>
| | |         |   |   |     `-IntegerLiteral 0xca74e0 <col:50> 'int' 1
| | |         |   |   `-IntegerLiteral 0xca7558 <col:56> 'int' 1
| | |         |   `-ImplicitCastExpr 0xca75d8 <col:61> 'unsigned __int128' <IntegralCast>
| | |         |     `-IntegerLiteral 0xca75b8 <col:61> 'int' 1
| | |         `-UnaryOperator 0xca76a8 <col:66, col:70> 'unsigned __int128' prefix '~' cannot overflow
| | |           `-CStyleCastExpr 0xca7680 <col:67, col:70> 'unsigned __int128' <NoOp>
| | |             `-ImplicitCastExpr 0xca7668 <col:70> 'unsigned __int128' <IntegralCast> part_of_explicit_cast
| | |               `-IntegerLiteral 0xca7630 <col:70> 'int' 0
| | |-CXXMethodDecl 0xc9b9f8 <line:1626:7, line:1627:41> col:7 constexpr lowest 'unsigned __int128 () noexcept' static
| | | `-CompoundStmt 0xca7800 <col:25, col:41>
| | |   `-ReturnStmt 0xca77f0 <col:27, col:38>
| | |     `-CallExpr 0xca77d0 <col:34, col:38> 'unsigned __int128'
| | |       `-ImplicitCastExpr 0xca77b8 <col:34> 'unsigned __int128 (*)() noexcept' <FunctionToPointerDecay>
| | |         `-DeclRefExpr 0xca7738 <col:34> 'unsigned __int128 () noexcept' lvalue CXXMethod 0xc9b858 'min' 'unsigned __int128 () noexcept'
| | |-VarDecl 0xc9bab0 <line:1628:7, col:43> col:28 max_digits10 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc9bb18 <col:43> 'int' 0
| | |-VarDecl 0xc9bba8 <line:1565:7, <built-in>:340:35> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1565:41 digits 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc9bc10 <<built-in>:340:35> 'int' 128
| | |-VarDecl 0xc9bca0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1567:7, line:1568:27> line:1567:41 digits10 'const int' static constexpr cinit
| | | `-ImplicitCastExpr 0xc9bdd8 <<built-in>:340:35, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1568:27> 'const int' <IntegralCast>
| | |   `-BinaryOperator 0xc9bdb8 <<built-in>:340:35, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1568:27> 'long' '/'
| | |     |-BinaryOperator 0xc9bd60 <<built-in>:340:35, /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1568:20> 'long' '*'
| | |     | |-ImplicitCastExpr 0xc9bd48 <<built-in>:340:35> 'long' <IntegralCast>
| | |     | | `-IntegerLiteral 0xc9bd08 <col:35> 'int' 128
| | |     | `-IntegerLiteral 0xc9bd28 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1568:20> 'long' 643
| | |     `-ImplicitCastExpr 0xc9bda0 <col:27> 'long' <IntegralCast>
| | |       `-IntegerLiteral 0xc9bd80 <col:27> 'int' 2136
| | |-VarDecl 0xc9be58 <line:1569:7, col:54> col:42 is_signed 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc9bec0 <col:54> 'bool' false
| | |-VarDecl 0xc9bf38 <line:1570:7, col:55> col:42 is_integer 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc9bfa0 <col:55> 'bool' true
| | |-VarDecl 0xc9c018 <line:1571:7, col:53> col:42 is_exact 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc9c080 <col:53> 'bool' true
| | |-VarDecl 0xc9c100 <line:1572:7, col:49> col:41 radix 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc9c168 <col:49> 'int' 2
| | |-CXXMethodDecl 0xc9c210 <line:1574:7, line:1575:51> col:7 constexpr epsilon 'unsigned __int128 () noexcept' static
| | | `-CompoundStmt 0xca7860 <col:39, col:51>
| | |   `-ReturnStmt 0xca7850 <col:41, col:48>
| | |     `-ImplicitCastExpr 0xca7838 <col:48> 'unsigned __int128' <IntegralCast>
| | |       `-IntegerLiteral 0xca7818 <col:48> 'int' 0
| | |-CXXMethodDecl 0xc9c2e0 <line:1577:7, line:1578:55> col:7 constexpr round_error 'unsigned __int128 () noexcept' static
| | | `-CompoundStmt 0xca78c0 <col:43, col:55>
| | |   `-ReturnStmt 0xca78b0 <col:45, col:52>
| | |     `-ImplicitCastExpr 0xca7898 <col:52> 'unsigned __int128' <IntegralCast>
| | |       `-IntegerLiteral 0xca7878 <col:52> 'int' 0
| | |-VarDecl 0xc9c398 <line:1580:7, col:56> col:41 min_exponent 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc9c400 <col:56> 'int' 0
| | |-VarDecl 0xc9c490 <line:1581:7, col:58> col:41 min_exponent10 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc9c4f8 <col:58> 'int' 0
| | |-VarDecl 0xc9c588 <line:1582:7, col:56> col:41 max_exponent 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc9c5f0 <col:56> 'int' 0
| | |-VarDecl 0xc9c680 <line:1583:7, col:58> col:41 max_exponent10 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xc9c6e8 <col:58> 'int' 0
| | |-VarDecl 0xc9c770 <line:1585:7, col:57> col:42 has_infinity 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc9c7d8 <col:57> 'bool' false
| | |-VarDecl 0xc9c850 <line:1586:7, col:58> col:42 has_quiet_NaN 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc9c8b8 <col:58> 'bool' false
| | |-VarDecl 0xc9c930 <line:1587:7, col:62> col:42 has_signaling_NaN 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc9c998 <col:62> 'bool' false
| | |-VarDecl 0xc9ca10 <line:1588:7, line:1589:10> line:1588:56 has_denorm 'const std::float_denorm_style' static constexpr cinit
| | | `-DeclRefExpr 0xc9ca78 <line:1589:10> 'std::float_denorm_style' EnumConstant 0xc54908 'denorm_absent' 'std::float_denorm_style'
| | |-VarDecl 0xc9cb00 <line:1590:7, col:60> col:42 has_denorm_loss 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc9cb68 <col:60> 'bool' false
| | |-CXXMethodDecl 0xc9cc00 <line:1592:7, line:1594:47> line:1593:7 constexpr infinity 'unsigned __int128 () noexcept' static
| | | `-CompoundStmt 0xca7968 <line:1594:7, col:47>
| | |   `-ReturnStmt 0xca7958 <col:9, col:44>
| | |     `-CXXStaticCastExpr 0xca7928 <col:16, col:44> 'unsigned __int128' static_cast<unsigned __int128> <NoOp>
| | |       `-ImplicitCastExpr 0xca7910 <col:43> 'unsigned __int128' <IntegralCast> part_of_explicit_cast
| | |         `-IntegerLiteral 0xca78d8 <col:43> 'int' 0
| | |-CXXMethodDecl 0xc9ccd0 <line:1596:7, line:1598:47> line:1597:7 constexpr quiet_NaN 'unsigned __int128 () noexcept' static
| | | `-CompoundStmt 0xca7a10 <line:1598:7, col:47>
| | |   `-ReturnStmt 0xca7a00 <col:9, col:44>
| | |     `-CXXStaticCastExpr 0xca79d0 <col:16, col:44> 'unsigned __int128' static_cast<unsigned __int128> <NoOp>
| | |       `-ImplicitCastExpr 0xca79b8 <col:43> 'unsigned __int128' <IntegralCast> part_of_explicit_cast
| | |         `-IntegerLiteral 0xca7980 <col:43> 'int' 0
| | |-CXXMethodDecl 0xc9cda0 <line:1600:7, line:1602:47> line:1601:7 constexpr signaling_NaN 'unsigned __int128 () noexcept' static
| | | `-CompoundStmt 0xca7ab8 <line:1602:7, col:47>
| | |   `-ReturnStmt 0xca7aa8 <col:9, col:44>
| | |     `-CXXStaticCastExpr 0xca7a78 <col:16, col:44> 'unsigned __int128' static_cast<unsigned __int128> <NoOp>
| | |       `-ImplicitCastExpr 0xca7a60 <col:43> 'unsigned __int128' <IntegralCast> part_of_explicit_cast
| | |         `-IntegerLiteral 0xca7a28 <col:43> 'int' 0
| | |-CXXMethodDecl 0xc9ce70 <line:1604:7, line:1606:47> line:1605:7 constexpr denorm_min 'unsigned __int128 () noexcept' static
| | | `-CompoundStmt 0xca7b60 <line:1606:7, col:47>
| | |   `-ReturnStmt 0xca7b50 <col:9, col:44>
| | |     `-CXXStaticCastExpr 0xca7b20 <col:16, col:44> 'unsigned __int128' static_cast<unsigned __int128> <NoOp>
| | |       `-ImplicitCastExpr 0xca7b08 <col:43> 'unsigned __int128' <IntegralCast> part_of_explicit_cast
| | |         `-IntegerLiteral 0xca7ad0 <col:43> 'int' 0
| | |-VarDecl 0xc9cf20 <line:1608:7, col:54> col:42 is_iec559 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc9cf88 <col:54> 'bool' false
| | |-VarDecl 0xc9d000 <line:1609:7, col:55> col:42 is_bounded 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc9d068 <col:55> 'bool' true
| | |-VarDecl 0xc9d0e0 <line:1610:7, col:54> col:42 is_modulo 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc9d148 <col:54> 'bool' true
| | |-VarDecl 0xc9d1c0 <line:1612:7, line:80:35> line:1612:42 traps 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc9d228 <line:80:35> 'bool' true
| | |-VarDecl 0xc9d2a0 <line:1613:7, col:60> col:42 tinyness_before 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xc9d308 <col:60> 'bool' false
| | `-VarDecl 0xc9d380 <line:1614:7, line:1615:10> line:1614:55 round_style 'const std::float_round_style' static constexpr cinit
| |   `-DeclRefExpr 0xc9d3e8 <line:1615:10> 'std::float_round_style' EnumConstant 0xc54560 'round_toward_zero' 'std::float_round_style'
| |-ClassTemplateSpecializationDecl 0xca7ba8 <line:1659:3, line:1727:5> line:1660:12 struct numeric_limits definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'float'
| | |-CXXRecordDecl 0xca7dc8 <col:5, col:12> col:12 implicit struct numeric_limits
| | |-VarDecl 0xca7e68 <line:1662:7, col:59> col:42 is_specialized 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xca7ed0 <col:59> 'bool' true
| | |-CXXMethodDecl 0xca7ff8 <line:1664:7, line:1665:57> col:7 constexpr min 'float () noexcept' static
| | | `-CompoundStmt 0xcaa050 <col:35, col:57>
| | |   `-ReturnStmt 0xcaa040 <col:37, <built-in>:151:21>
| | |     `-FloatingLiteral 0xcaa020 <col:21> 'float' 1.175494e-38
| | |-CXXMethodDecl 0xca80c8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1667:7, line:1668:57> col:7 constexpr max 'float () noexcept' static
| | | `-CompoundStmt 0xcaa098 <col:35, col:57>
| | |   `-ReturnStmt 0xcaa088 <col:37, <built-in>:148:21>
| | |     `-FloatingLiteral 0xcaa068 <col:21> 'float' 3.402823e+38
| | |-CXXMethodDecl 0xca8198 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1671:7, line:1672:48> col:7 constexpr lowest 'float () noexcept' static
| | | `-CompoundStmt 0xcaa0f8 <col:25, col:48>
| | |   `-ReturnStmt 0xcaa0e8 <col:27, <built-in>:148:21>
| | |     `-UnaryOperator 0xcaa0d0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1672:34, <built-in>:148:21> 'float' prefix '-'
| | |       `-FloatingLiteral 0xcaa0b0 <col:21> 'float' 3.402823e+38
| | |-VarDecl 0xca8250 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1675:7, <built-in>:145:26> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1675:41 digits 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xca82b8 <<built-in>:145:26> 'int' 24
| | |-VarDecl 0xca8348 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1676:7, <built-in>:140:21> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1676:41 digits10 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xca83b0 <<built-in>:140:21> 'int' 6
| | |-VarDecl 0xca8440 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1678:7, line:156:25> line:1678:28 max_digits10 'const int' static constexpr cinit
| | | `-ImplicitCastExpr 0xca8610 <line:156:3, col:25> 'const int' <IntegralCast>
| | |   `-ParenExpr 0xca85f0 <col:3, col:25> 'long'
| | |     `-BinaryOperator 0xca85d0 <col:4, col:21> 'long' '+'
| | |       |-ImplicitCastExpr 0xca85b8 <col:4> 'long' <IntegralCast>
| | |       | `-IntegerLiteral 0xca84a8 <col:4> 'int' 2
| | |       `-BinaryOperator 0xca8598 <col:8, col:21> 'long' '/'
| | |         |-BinaryOperator 0xca8540 <col:8, col:14> 'long' '*'
| | |         | |-ImplicitCastExpr 0xca8528 <col:8, col:10> 'long' <IntegralCast>
| | |         | | `-ParenExpr 0xca84e8 <col:8, col:10> 'int'
| | |         | |   `-IntegerLiteral 0xca84c8 <<built-in>:145:26> 'int' 24
| | |         | `-IntegerLiteral 0xca8508 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:156:14> 'long' 643
| | |         `-ImplicitCastExpr 0xca8580 <col:21> 'long' <IntegralCast>
| | |           `-IntegerLiteral 0xca8560 <col:21> 'int' 2136
| | |-VarDecl 0xca8690 <line:1681:7, col:54> col:42 is_signed 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xca86f8 <col:54> 'bool' true
| | |-VarDecl 0xca8770 <line:1682:7, col:55> col:42 is_integer 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xca87d8 <col:55> 'bool' false
| | |-VarDecl 0xca8850 <line:1683:7, col:53> col:42 is_exact 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xca88b8 <col:53> 'bool' false
| | |-VarDecl 0xca8938 <line:1684:7, <built-in>:337:23> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1684:41 radix 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xca89a0 <<built-in>:337:23> 'int' 2
| | |-CXXMethodDecl 0xca8a48 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1686:7, line:1687:65> col:7 constexpr epsilon 'float () noexcept' static
| | | `-CompoundStmt 0xcaa140 <col:39, col:65>
| | |   `-ReturnStmt 0xcaa130 <col:41, <built-in>:142:25>
| | |     `-FloatingLiteral 0xcaa110 <col:25> 'float' 1.192093e-07
| | |-CXXMethodDecl 0xca8b18 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1689:7, line:1690:58> col:7 constexpr round_error 'float () noexcept' static
| | | `-CompoundStmt 0xcaa188 <col:43, col:58>
| | |   `-ReturnStmt 0xcaa178 <col:45, col:52>
| | |     `-FloatingLiteral 0xcaa158 <col:52> 'float' 5.000000e-01
| | |-VarDecl 0xca8bd0 <line:1692:7, <built-in>:150:30> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1692:41 min_exponent 'const int' static constexpr cinit
| | | `-ParenExpr 0xca8c70 <<built-in>:150:25, col:30> 'int'
| | |   `-UnaryOperator 0xca8c58 <col:26, col:27> 'int' prefix '-'
| | |     `-IntegerLiteral 0xca8c38 <col:27> 'int' 125
| | |-VarDecl 0xca8d00 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1693:7, <built-in>:149:32> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1693:41 min_exponent10 'const int' static constexpr cinit
| | | `-ParenExpr 0xca8da0 <<built-in>:149:28, col:32> 'int'
| | |   `-UnaryOperator 0xca8d88 <col:29, col:30> 'int' prefix '-'
| | |     `-IntegerLiteral 0xca8d68 <col:30> 'int' 37
| | |-VarDecl 0xca8e30 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1694:7, <built-in>:147:25> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1694:41 max_exponent 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xca8e98 <<built-in>:147:25> 'int' 128
| | |-VarDecl 0xca8f28 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1695:7, <built-in>:146:28> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1695:41 max_exponent10 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xca8f90 <<built-in>:146:28> 'int' 38
| | |-VarDecl 0xca9018 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1697:7, <built-in>:143:30> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1697:42 referenced has_infinity 'const bool' static constexpr cinit
| | | `-ImplicitCastExpr 0xca90a0 <<built-in>:143:30> 'bool' <IntegralToBoolean>
| | |   `-IntegerLiteral 0xca9080 <col:30> 'int' 1
| | |-VarDecl 0xca9120 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1698:7, <built-in>:144:31> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1698:42 referenced has_quiet_NaN 'const bool' static constexpr cinit
| | | `-ImplicitCastExpr 0xca91a8 <<built-in>:144:31> 'bool' <IntegralToBoolean>
| | |   `-IntegerLiteral 0xca9188 <col:31> 'int' 1
| | |-VarDecl 0xca9228 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1699:7, col:62> col:42 has_signaling_NaN 'const bool' static constexpr cinit
| | | `-ImplicitCastExpr 0xca92d0 <col:62> 'bool' <LValueToRValue>
| | |   `-DeclRefExpr 0xca92b0 <col:62> 'const bool' lvalue Var 0xca9120 'has_quiet_NaN' 'const bool' non_odr_use_constant
| | |-VarDecl 0xca9350 <line:1700:7, line:1701:48> line:1700:56 referenced has_denorm 'const std::float_denorm_style' static constexpr cinit
| | | `-ConditionalOperator 0xca9468 <line:1701:4, col:48> 'std::float_denorm_style'
| | |   |-CXXFunctionalCastExpr 0xca9400 <col:4, col:27> 'bool' functional cast to _Bool <NoOp>
| | |   | `-ImplicitCastExpr 0xca93e8 <<built-in>:139:28> 'bool' <IntegralToBoolean> part_of_explicit_cast
| | |   |   `-IntegerLiteral 0xca93c8 <col:28> 'int' 1
| | |   |-DeclRefExpr 0xca9428 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1701:31> 'std::float_denorm_style' EnumConstant 0xc54998 'denorm_present' 'std::float_denorm_style'
| | |   `-DeclRefExpr 0xca9448 <col:48> 'std::float_denorm_style' EnumConstant 0xc54908 'denorm_absent' 'std::float_denorm_style'
| | |-VarDecl 0xca9500 <line:1702:7, line:89:43> line:1702:42 has_denorm_loss 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xca9568 <line:89:43> 'bool' false
| | |-CXXMethodDecl 0xca9600 <line:1705:7, line:1706:72> col:7 constexpr infinity 'float () noexcept' static
| | | `-CompoundStmt 0xcaa3d0 <col:40, col:72>
| | |   `-ReturnStmt 0xcaa3c0 <col:42, col:69>
| | |     `-CallExpr 0xcaa3a0 <col:49, col:69> 'float'
| | |       `-ImplicitCastExpr 0xcaa388 <col:49> 'float (*)() noexcept' <BuiltinFnToFnPtr>
| | |         `-DeclRefExpr 0xcaa310 <col:49> '<builtin fn type>' Function 0xcaa1f0 '__builtin_huge_valf' 'float () noexcept'
| | |-CXXMethodDecl 0xca96d0 <line:1708:7, line:1709:70> col:7 constexpr quiet_NaN 'float () noexcept' static
| | | `-CompoundStmt 0xcaa720 <col:41, col:70>
| | |   `-ReturnStmt 0xcaa710 <col:43, col:67>
| | |     `-CallExpr 0xcaa6d0 <col:50, col:67> 'float'
| | |       |-ImplicitCastExpr 0xcaa6b8 <col:50> 'float (*)(const char *) noexcept' <BuiltinFnToFnPtr>
| | |       | `-DeclRefExpr 0xcaa5c8 <col:50> '<builtin fn type>' Function 0xcaa438 '__builtin_nanf' 'float (const char *) noexcept'
| | |       `-ImplicitCastExpr 0xcaa6f8 <col:65> 'const char *' <ArrayToPointerDecay>
| | |         `-StringLiteral 0xcaa628 <col:65> 'const char [1]' lvalue ""
| | |-CXXMethodDecl 0xca97a0 <line:1711:7, line:1712:75> col:7 constexpr signaling_NaN 'float () noexcept' static
| | | `-CompoundStmt 0xcaa9d0 <col:45, col:75>
| | |   `-ReturnStmt 0xcaa9c0 <col:47, col:72>
| | |     `-CallExpr 0xcaa980 <col:54, col:72> 'float'
| | |       |-ImplicitCastExpr 0xcaa968 <col:54> 'float (*)(const char *) noexcept' <BuiltinFnToFnPtr>
| | |       | `-DeclRefExpr 0xcaa918 <col:54> '<builtin fn type>' Function 0xcaa788 '__builtin_nansf' 'float (const char *) noexcept'
| | |       `-ImplicitCastExpr 0xcaa9a8 <col:70> 'const char *' <ArrayToPointerDecay>
| | |         `-StringLiteral 0xcaa938 <col:70> 'const char [1]' lvalue ""
| | |-CXXMethodDecl 0xca9870 <line:1714:7, line:1715:71> col:7 constexpr denorm_min 'float () noexcept' static
| | | `-CompoundStmt 0xcaaa18 <col:42, col:71>
| | |   `-ReturnStmt 0xcaaa08 <col:44, <built-in>:138:28>
| | |     `-FloatingLiteral 0xcaa9e8 <col:28> 'float' 1.401298e-45
| | |-VarDecl 0xca9920 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1717:7, line:1718:51> line:1717:42 is_iec559 'const bool' static constexpr cinit
| | | `-BinaryOperator 0xca9b20 <line:1718:4, col:51> 'bool' '&&'
| | |   |-BinaryOperator 0xca9a38 <col:4, col:20> 'bool' '&&'
| | |   | |-ImplicitCastExpr 0xca99e8 <col:4> 'bool' <LValueToRValue>
| | |   | | `-DeclRefExpr 0xca99c8 <col:4> 'const bool' lvalue Var 0xca9018 'has_infinity' 'const bool' non_odr_use_constant
| | |   | `-ImplicitCastExpr 0xca9a20 <col:20> 'bool' <LValueToRValue>
| | |   |   `-DeclRefExpr 0xca9a00 <col:20> 'const bool' lvalue Var 0xca9120 'has_quiet_NaN' 'const bool' non_odr_use_constant
| | |   `-BinaryOperator 0xca9b00 <col:37, col:51> 'bool' '=='
| | |     |-ImplicitCastExpr 0xca9ad0 <col:37> 'int' <IntegralCast>
| | |     | `-ImplicitCastExpr 0xca9ab8 <col:37> 'std::float_denorm_style' <LValueToRValue>
| | |     |   `-DeclRefExpr 0xca9a98 <col:37> 'const std::float_denorm_style' lvalue Var 0xca9350 'has_denorm' 'const std::float_denorm_style' non_odr_use_constant
| | |     `-ImplicitCastExpr 0xca9ae8 <col:51> 'int' <IntegralCast>
| | |       `-DeclRefExpr 0xca9a78 <col:51> 'std::float_denorm_style' EnumConstant 0xc54998 'denorm_present' 'std::float_denorm_style'
| | |-VarDecl 0xca9ba8 <line:1719:7, col:55> col:42 is_bounded 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xca9c10 <col:55> 'bool' true
| | |-VarDecl 0xca9c88 <line:1720:7, col:54> col:42 is_modulo 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xca9cf0 <col:54> 'bool' false
| | |-VarDecl 0xca9d68 <line:1722:7, line:92:33> line:1722:42 traps 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xca9dd0 <line:92:33> 'bool' false
| | |-VarDecl 0xca9e48 <line:1723:7, line:95:43> line:1723:42 tinyness_before 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xca9eb0 <line:95:43> 'bool' false
| | `-VarDecl 0xca9f28 <line:1725:7, line:1726:10> line:1725:55 round_style 'const std::float_round_style' static constexpr cinit
| |   `-DeclRefExpr 0xca9f90 <line:1726:10> 'std::float_round_style' EnumConstant 0xc545f0 'round_to_nearest' 'std::float_round_style'
| |-ClassTemplateSpecializationDecl 0xcaaa60 <line:1734:3, line:1802:5> line:1735:12 struct numeric_limits definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'double'
| | |-CXXRecordDecl 0xcaac78 <col:5, col:12> col:12 implicit struct numeric_limits
| | |-VarDecl 0xcaad18 <line:1737:7, col:59> col:42 is_specialized 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xcaad80 <col:59> 'bool' true
| | |-CXXMethodDecl 0xcaae78 <line:1739:7, line:1740:57> col:7 constexpr min 'double () noexcept' static
| | | `-CompoundStmt 0xcacf40 <col:35, col:57>
| | |   `-ReturnStmt 0xcacf30 <col:37, <built-in>:165:21>
| | |     `-FloatingLiteral 0xcacf10 <col:21> 'double' 2.225074e-308
| | |-CXXMethodDecl 0xcaaf48 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1742:7, line:1743:57> col:7 constexpr max 'double () noexcept' static
| | | `-CompoundStmt 0xcacf88 <col:35, col:57>
| | |   `-ReturnStmt 0xcacf78 <col:37, <built-in>:162:21>
| | |     `-FloatingLiteral 0xcacf58 <col:21> 'double' 1.797693e+308
| | |-CXXMethodDecl 0xcab018 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1746:7, line:1747:48> col:7 constexpr lowest 'double () noexcept' static
| | | `-CompoundStmt 0xcacfe8 <col:25, col:48>
| | |   `-ReturnStmt 0xcacfd8 <col:27, <built-in>:162:21>
| | |     `-UnaryOperator 0xcacfc0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1747:34, <built-in>:162:21> 'double' prefix '-'
| | |       `-FloatingLiteral 0xcacfa0 <col:21> 'double' 1.797693e+308
| | |-VarDecl 0xcab140 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1750:7, <built-in>:159:26> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1750:41 digits 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xcab1a8 <<built-in>:159:26> 'int' 53
| | |-VarDecl 0xcab238 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1751:7, <built-in>:154:21> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1751:41 digits10 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xcab2a0 <<built-in>:154:21> 'int' 15
| | |-VarDecl 0xcab330 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1753:7, line:156:25> line:1753:28 max_digits10 'const int' static constexpr cinit
| | | `-ImplicitCastExpr 0xcab500 <line:156:3, col:25> 'const int' <IntegralCast>
| | |   `-ParenExpr 0xcab4e0 <col:3, col:25> 'long'
| | |     `-BinaryOperator 0xcab4c0 <col:4, col:21> 'long' '+'
| | |       |-ImplicitCastExpr 0xcab4a8 <col:4> 'long' <IntegralCast>
| | |       | `-IntegerLiteral 0xcab398 <col:4> 'int' 2
| | |       `-BinaryOperator 0xcab488 <col:8, col:21> 'long' '/'
| | |         |-BinaryOperator 0xcab430 <col:8, col:14> 'long' '*'
| | |         | |-ImplicitCastExpr 0xcab418 <col:8, col:10> 'long' <IntegralCast>
| | |         | | `-ParenExpr 0xcab3d8 <col:8, col:10> 'int'
| | |         | |   `-IntegerLiteral 0xcab3b8 <<built-in>:159:26> 'int' 53
| | |         | `-IntegerLiteral 0xcab3f8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:156:14> 'long' 643
| | |         `-ImplicitCastExpr 0xcab470 <col:21> 'long' <IntegralCast>
| | |           `-IntegerLiteral 0xcab450 <col:21> 'int' 2136
| | |-VarDecl 0xcab580 <line:1756:7, col:54> col:42 is_signed 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xcab5e8 <col:54> 'bool' true
| | |-VarDecl 0xcab660 <line:1757:7, col:55> col:42 is_integer 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xcab6c8 <col:55> 'bool' false
| | |-VarDecl 0xcab740 <line:1758:7, col:53> col:42 is_exact 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xcab7a8 <col:53> 'bool' false
| | |-VarDecl 0xcab828 <line:1759:7, <built-in>:337:23> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1759:41 radix 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xcab890 <<built-in>:337:23> 'int' 2
| | |-CXXMethodDecl 0xcab938 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1761:7, line:1762:65> col:7 constexpr epsilon 'double () noexcept' static
| | | `-CompoundStmt 0xcad030 <col:39, col:65>
| | |   `-ReturnStmt 0xcad020 <col:41, <built-in>:156:25>
| | |     `-FloatingLiteral 0xcad000 <col:25> 'double' 2.220446e-16
| | |-CXXMethodDecl 0xcaba08 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1764:7, line:1765:57> col:7 constexpr round_error 'double () noexcept' static
| | | `-CompoundStmt 0xcad078 <col:43, col:57>
| | |   `-ReturnStmt 0xcad068 <col:45, col:52>
| | |     `-FloatingLiteral 0xcad048 <col:52> 'double' 5.000000e-01
| | |-VarDecl 0xcabac0 <line:1767:7, <built-in>:164:31> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1767:41 min_exponent 'const int' static constexpr cinit
| | | `-ParenExpr 0xcabb60 <<built-in>:164:25, col:31> 'int'
| | |   `-UnaryOperator 0xcabb48 <col:26, col:27> 'int' prefix '-'
| | |     `-IntegerLiteral 0xcabb28 <col:27> 'int' 1021
| | |-VarDecl 0xcabbf0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1768:7, <built-in>:163:33> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1768:41 min_exponent10 'const int' static constexpr cinit
| | | `-ParenExpr 0xcabc90 <<built-in>:163:28, col:33> 'int'
| | |   `-UnaryOperator 0xcabc78 <col:29, col:30> 'int' prefix '-'
| | |     `-IntegerLiteral 0xcabc58 <col:30> 'int' 307
| | |-VarDecl 0xcabd20 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1769:7, <built-in>:161:25> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1769:41 max_exponent 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xcabd88 <<built-in>:161:25> 'int' 1024
| | |-VarDecl 0xcabe18 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1770:7, <built-in>:160:28> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1770:41 max_exponent10 'const int' static constexpr cinit
| | | `-IntegerLiteral 0xcabe80 <<built-in>:160:28> 'int' 308
| | |-VarDecl 0xcabf08 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1772:7, <built-in>:157:30> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1772:42 referenced has_infinity 'const bool' static constexpr cinit
| | | `-ImplicitCastExpr 0xcabf90 <<built-in>:157:30> 'bool' <IntegralToBoolean>
| | |   `-IntegerLiteral 0xcabf70 <col:30> 'int' 1
| | |-VarDecl 0xcac010 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1773:7, <built-in>:158:31> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1773:42 referenced has_quiet_NaN 'const bool' static constexpr cinit
| | | `-ImplicitCastExpr 0xcac098 <<built-in>:158:31> 'bool' <IntegralToBoolean>
| | |   `-IntegerLiteral 0xcac078 <col:31> 'int' 1
| | |-VarDecl 0xcac118 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1774:7, col:62> col:42 has_signaling_NaN 'const bool' static constexpr cinit
| | | `-ImplicitCastExpr 0xcac1c0 <col:62> 'bool' <LValueToRValue>
| | |   `-DeclRefExpr 0xcac1a0 <col:62> 'const bool' lvalue Var 0xcac010 'has_quiet_NaN' 'const bool' non_odr_use_constant
| | |-VarDecl 0xcac240 <line:1775:7, line:1776:48> line:1775:56 referenced has_denorm 'const std::float_denorm_style' static constexpr cinit
| | | `-ConditionalOperator 0xcac358 <line:1776:4, col:48> 'std::float_denorm_style'
| | |   |-CXXFunctionalCastExpr 0xcac2f0 <col:4, col:27> 'bool' functional cast to _Bool <NoOp>
| | |   | `-ImplicitCastExpr 0xcac2d8 <<built-in>:153:28> 'bool' <IntegralToBoolean> part_of_explicit_cast
| | |   |   `-IntegerLiteral 0xcac2b8 <col:28> 'int' 1
| | |   |-DeclRefExpr 0xcac318 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1776:31> 'std::float_denorm_style' EnumConstant 0xc54998 'denorm_present' 'std::float_denorm_style'
| | |   `-DeclRefExpr 0xcac338 <col:48> 'std::float_denorm_style' EnumConstant 0xc54908 'denorm_absent' 'std::float_denorm_style'
| | |-VarDecl 0xcac3f0 <line:1777:7, line:103:44> line:1777:42 has_denorm_loss 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xcac458 <line:103:44> 'bool' false
| | |-CXXMethodDecl 0xcac4f0 <line:1780:7, line:1781:71> col:7 constexpr infinity 'double () noexcept' static
| | | `-CompoundStmt 0xcad2c0 <col:40, col:71>
| | |   `-ReturnStmt 0xcad2b0 <col:42, col:68>
| | |     `-CallExpr 0xcad290 <col:49, col:68> 'double'
| | |       `-ImplicitCastExpr 0xcad278 <col:49> 'double (*)() noexcept' <BuiltinFnToFnPtr>
| | |         `-DeclRefExpr 0xcad200 <col:49> '<builtin fn type>' Function 0xcad0e0 '__builtin_huge_val' 'double () noexcept'
| | |-CXXMethodDecl 0xcac5c0 <line:1783:7, line:1784:69> col:7 constexpr quiet_NaN 'double () noexcept' static
| | | `-CompoundStmt 0xcad5d0 <col:41, col:69>
| | |   `-ReturnStmt 0xcad5c0 <col:43, col:66>
| | |     `-CallExpr 0xcad580 <col:50, col:66> 'double'
| | |       |-ImplicitCastExpr 0xcad568 <col:50> 'double (*)(const char *) noexcept' <BuiltinFnToFnPtr>
| | |       | `-DeclRefExpr 0xcad4b8 <col:50> '<builtin fn type>' Function 0xcad328 '__builtin_nan' 'double (const char *) noexcept'
| | |       `-ImplicitCastExpr 0xcad5a8 <col:64> 'const char *' <ArrayToPointerDecay>
| | |         `-StringLiteral 0xcad4d8 <col:64> 'const char [1]' lvalue ""
| | |-CXXMethodDecl 0xcac690 <line:1786:7, line:1787:74> col:7 constexpr signaling_NaN 'double () noexcept' static
| | | `-CompoundStmt 0xcad880 <col:45, col:74>
| | |   `-ReturnStmt 0xcad870 <col:47, col:71>
| | |     `-CallExpr 0xcad830 <col:54, col:71> 'double'
| | |       |-ImplicitCastExpr 0xcad818 <col:54> 'double (*)(const char *) noexcept' <BuiltinFnToFnPtr>
| | |       | `-DeclRefExpr 0xcad7c8 <col:54> '<builtin fn type>' Function 0xcad638 '__builtin_nans' 'double (const char *) noexcept'
| | |       `-ImplicitCastExpr 0xcad858 <col:69> 'const char *' <ArrayToPointerDecay>
| | |         `-StringLiteral 0xcad7e8 <col:69> 'const char [1]' lvalue ""
| | |-CXXMethodDecl 0xcac760 <line:1789:7, line:1790:71> col:7 constexpr denorm_min 'double () noexcept' static
| | | `-CompoundStmt 0xcad8c8 <col:42, col:71>
| | |   `-ReturnStmt 0xcad8b8 <col:44, <built-in>:152:28>
| | |     `-FloatingLiteral 0xcad898 <col:28> 'double' 4.940656e-324
| | |-VarDecl 0xcac810 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1792:7, line:1793:51> line:1792:42 is_iec559 'const bool' static constexpr cinit
| | | `-BinaryOperator 0xcaca10 <line:1793:4, col:51> 'bool' '&&'
| | |   |-BinaryOperator 0xcac928 <col:4, col:20> 'bool' '&&'
| | |   | |-ImplicitCastExpr 0xcac8d8 <col:4> 'bool' <LValueToRValue>
| | |   | | `-DeclRefExpr 0xcac8b8 <col:4> 'const bool' lvalue Var 0xcabf08 'has_infinity' 'const bool' non_odr_use_constant
| | |   | `-ImplicitCastExpr 0xcac910 <col:20> 'bool' <LValueToRValue>
| | |   |   `-DeclRefExpr 0xcac8f0 <col:20> 'const bool' lvalue Var 0xcac010 'has_quiet_NaN' 'const bool' non_odr_use_constant
| | |   `-BinaryOperator 0xcac9f0 <col:37, col:51> 'bool' '=='
| | |     |-ImplicitCastExpr 0xcac9c0 <col:37> 'int' <IntegralCast>
| | |     | `-ImplicitCastExpr 0xcac9a8 <col:37> 'std::float_denorm_style' <LValueToRValue>
| | |     |   `-DeclRefExpr 0xcac988 <col:37> 'const std::float_denorm_style' lvalue Var 0xcac240 'has_denorm' 'const std::float_denorm_style' non_odr_use_constant
| | |     `-ImplicitCastExpr 0xcac9d8 <col:51> 'int' <IntegralCast>
| | |       `-DeclRefExpr 0xcac968 <col:51> 'std::float_denorm_style' EnumConstant 0xc54998 'denorm_present' 'std::float_denorm_style'
| | |-VarDecl 0xcaca98 <line:1794:7, col:55> col:42 is_bounded 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xcacb00 <col:55> 'bool' true
| | |-VarDecl 0xcacb78 <line:1795:7, col:54> col:42 is_modulo 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xcacbe0 <col:54> 'bool' false
| | |-VarDecl 0xcacc58 <line:1797:7, line:106:34> line:1797:42 traps 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xcaccc0 <line:106:34> 'bool' false
| | |-VarDecl 0xcacd38 <line:1798:7, line:109:44> line:1798:42 tinyness_before 'const bool' static constexpr cinit
| | | `-CXXBoolLiteralExpr 0xcacda0 <line:109:44> 'bool' false
| | `-VarDecl 0xcace18 <line:1800:7, line:1801:10> line:1800:55 round_style 'const std::float_round_style' static constexpr cinit
| |   `-DeclRefExpr 0xcace80 <line:1801:10> 'std::float_round_style' EnumConstant 0xc545f0 'round_to_nearest' 'std::float_round_style'
| `-ClassTemplateSpecializationDecl 0xcad910 <line:1809:3, line:1877:5> line:1810:12 struct numeric_limits definition
|   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-TemplateArgument type 'long double'
|   |-CXXRecordDecl 0xcadb28 <col:5, col:12> col:12 implicit struct numeric_limits
|   |-VarDecl 0xcadbc8 <line:1812:7, col:59> col:42 is_specialized 'const bool' static constexpr cinit
|   | `-CXXBoolLiteralExpr 0xcadc30 <col:59> 'bool' true
|   |-CXXMethodDecl 0xcadd58 <line:1814:7, line:1815:58> col:7 constexpr min 'long double () noexcept' static
|   | `-CompoundStmt 0xcafde8 <col:35, col:58>
|   |   `-ReturnStmt 0xcafdd8 <col:37, <built-in>:179:22>
|   |     `-FloatingLiteral 0xcafda8 <col:22> 'long double' 0.000000e+00
|   |-CXXMethodDecl 0xcade28 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1817:7, line:1818:58> col:7 constexpr max 'long double () noexcept' static
|   | `-CompoundStmt 0xcafe40 <col:35, col:58>
|   |   `-ReturnStmt 0xcafe30 <col:37, <built-in>:176:22>
|   |     `-FloatingLiteral 0xcafe00 <col:22> 'long double' INF
|   |-CXXMethodDecl 0xcadef8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1821:7, line:1822:49> col:7 constexpr lowest 'long double () noexcept' static
|   | `-CompoundStmt 0xcafeb0 <col:25, col:49>
|   |   `-ReturnStmt 0xcafea0 <col:27, <built-in>:176:22>
|   |     `-UnaryOperator 0xcafe88 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1822:34, <built-in>:176:22> 'long double' prefix '-'
|   |       `-FloatingLiteral 0xcafe58 <col:22> 'long double' INF
|   |-VarDecl 0xcadfb0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1825:7, <built-in>:173:27> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1825:41 digits 'const int' static constexpr cinit
|   | `-IntegerLiteral 0xcae018 <<built-in>:173:27> 'int' 64
|   |-VarDecl 0xcae0a8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1826:7, <built-in>:168:22> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1826:41 digits10 'const int' static constexpr cinit
|   | `-IntegerLiteral 0xcae110 <<built-in>:168:22> 'int' 18
|   |-VarDecl 0xcae1a0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1828:7, line:156:25> line:1828:41 max_digits10 'const int' static constexpr cinit
|   | `-ImplicitCastExpr 0xcae370 <line:156:3, col:25> 'const int' <IntegralCast>
|   |   `-ParenExpr 0xcae350 <col:3, col:25> 'long'
|   |     `-BinaryOperator 0xcae330 <col:4, col:21> 'long' '+'
|   |       |-ImplicitCastExpr 0xcae318 <col:4> 'long' <IntegralCast>
|   |       | `-IntegerLiteral 0xcae208 <col:4> 'int' 2
|   |       `-BinaryOperator 0xcae2f8 <col:8, col:21> 'long' '/'
|   |         |-BinaryOperator 0xcae2a0 <col:8, col:14> 'long' '*'
|   |         | |-ImplicitCastExpr 0xcae288 <col:8, col:10> 'long' <IntegralCast>
|   |         | | `-ParenExpr 0xcae248 <col:8, col:10> 'int'
|   |         | |   `-IntegerLiteral 0xcae228 <<built-in>:173:27> 'int' 64
|   |         | `-IntegerLiteral 0xcae268 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:156:14> 'long' 643
|   |         `-ImplicitCastExpr 0xcae2e0 <col:21> 'long' <IntegralCast>
|   |           `-IntegerLiteral 0xcae2c0 <col:21> 'int' 2136
|   |-VarDecl 0xcae3f0 <line:1831:7, col:54> col:42 is_signed 'const bool' static constexpr cinit
|   | `-CXXBoolLiteralExpr 0xcae458 <col:54> 'bool' true
|   |-VarDecl 0xcae4d0 <line:1832:7, col:55> col:42 is_integer 'const bool' static constexpr cinit
|   | `-CXXBoolLiteralExpr 0xcae538 <col:55> 'bool' false
|   |-VarDecl 0xcae5b0 <line:1833:7, col:53> col:42 is_exact 'const bool' static constexpr cinit
|   | `-CXXBoolLiteralExpr 0xcae618 <col:53> 'bool' false
|   |-VarDecl 0xcae698 <line:1834:7, <built-in>:337:23> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1834:41 radix 'const int' static constexpr cinit
|   | `-IntegerLiteral 0xcae700 <<built-in>:337:23> 'int' 2
|   |-CXXMethodDecl 0xcae7a8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1836:7, line:1837:66> col:7 constexpr epsilon 'long double () noexcept' static
|   | `-CompoundStmt 0xcaff08 <col:39, col:66>
|   |   `-ReturnStmt 0xcafef8 <col:41, <built-in>:170:26>
|   |     `-FloatingLiteral 0xcafec8 <col:26> 'long double' 1.084202e-19
|   |-CXXMethodDecl 0xcae878 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1839:7, line:1840:58> col:7 constexpr round_error 'long double () noexcept' static
|   | `-CompoundStmt 0xcaff60 <col:43, col:58>
|   |   `-ReturnStmt 0xcaff50 <col:45, col:52>
|   |     `-FloatingLiteral 0xcaff20 <col:52> 'long double' 5.000000e-01
|   |-VarDecl 0xcae930 <line:1842:7, <built-in>:178:33> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1842:41 min_exponent 'const int' static constexpr cinit
|   | `-ParenExpr 0xcae9d0 <<built-in>:178:26, col:33> 'int'
|   |   `-UnaryOperator 0xcae9b8 <col:27, col:28> 'int' prefix '-'
|   |     `-IntegerLiteral 0xcae998 <col:28> 'int' 16381
|   |-VarDecl 0xcaea60 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1843:7, <built-in>:177:35> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1843:41 min_exponent10 'const int' static constexpr cinit
|   | `-ParenExpr 0xcaeb00 <<built-in>:177:29, col:35> 'int'
|   |   `-UnaryOperator 0xcaeae8 <col:30, col:31> 'int' prefix '-'
|   |     `-IntegerLiteral 0xcaeac8 <col:31> 'int' 4931
|   |-VarDecl 0xcaeb90 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1844:7, <built-in>:175:26> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1844:41 max_exponent 'const int' static constexpr cinit
|   | `-IntegerLiteral 0xcaebf8 <<built-in>:175:26> 'int' 16384
|   |-VarDecl 0xcaec88 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1845:7, <built-in>:174:29> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1845:41 max_exponent10 'const int' static constexpr cinit
|   | `-IntegerLiteral 0xcaecf0 <<built-in>:174:29> 'int' 4932
|   |-VarDecl 0xcaed78 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1847:7, <built-in>:171:31> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1847:42 referenced has_infinity 'const bool' static constexpr cinit
|   | `-ImplicitCastExpr 0xcaee00 <<built-in>:171:31> 'bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0xcaede0 <col:31> 'int' 1
|   |-VarDecl 0xcaee80 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1848:7, <built-in>:172:32> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1848:42 referenced has_quiet_NaN 'const bool' static constexpr cinit
|   | `-ImplicitCastExpr 0xcaef08 <<built-in>:172:32> 'bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0xcaeee8 <col:32> 'int' 1
|   |-VarDecl 0xcaef88 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1849:7, col:62> col:42 has_signaling_NaN 'const bool' static constexpr cinit
|   | `-ImplicitCastExpr 0xcaf030 <col:62> 'bool' <LValueToRValue>
|   |   `-DeclRefExpr 0xcaf010 <col:62> 'const bool' lvalue Var 0xcaee80 'has_quiet_NaN' 'const bool' non_odr_use_constant
|   |-VarDecl 0xcaf0b0 <line:1850:7, line:1851:49> line:1850:56 referenced has_denorm 'const std::float_denorm_style' static constexpr cinit
|   | `-ConditionalOperator 0xcaf1f0 <line:1851:4, col:49> 'std::float_denorm_style'
|   |   |-CXXFunctionalCastExpr 0xcaf188 <col:4, col:28> 'bool' functional cast to _Bool <NoOp>
|   |   | `-ImplicitCastExpr 0xcaf170 <<built-in>:167:29> 'bool' <IntegralToBoolean> part_of_explicit_cast
|   |   |   `-IntegerLiteral 0xcaf150 <col:29> 'int' 1
|   |   |-DeclRefExpr 0xcaf1b0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1851:32> 'std::float_denorm_style' EnumConstant 0xc54998 'denorm_present' 'std::float_denorm_style'
|   |   `-DeclRefExpr 0xcaf1d0 <col:49> 'std::float_denorm_style' EnumConstant 0xc54908 'denorm_absent' 'std::float_denorm_style'
|   |-VarDecl 0xcaf288 <line:1852:7, line:117:49> line:1852:42 has_denorm_loss 'const bool' static constexpr cinit
|   | `-CXXBoolLiteralExpr 0xcaf2f0 <line:117:49> 'bool' false
|   |-CXXMethodDecl 0xcaf388 <line:1855:7, line:1856:72> col:7 constexpr infinity 'long double () noexcept' static
|   | `-CompoundStmt 0xcb01b0 <col:40, col:72>
|   |   `-ReturnStmt 0xcb01a0 <col:42, col:69>
|   |     `-CallExpr 0xcb0180 <col:49, col:69> 'long double'
|   |       `-ImplicitCastExpr 0xcb0168 <col:49> 'long double (*)() noexcept' <BuiltinFnToFnPtr>
|   |         `-DeclRefExpr 0xcb00e8 <col:49> '<builtin fn type>' Function 0xcaffc8 '__builtin_huge_vall' 'long double () noexcept'
|   |-CXXMethodDecl 0xcaf458 <line:1858:7, line:1859:70> col:7 constexpr quiet_NaN 'long double () noexcept' static
|   | `-CompoundStmt 0xcb04c0 <col:41, col:70>
|   |   `-ReturnStmt 0xcb04b0 <col:43, col:67>
|   |     `-CallExpr 0xcb0470 <col:50, col:67> 'long double'
|   |       |-ImplicitCastExpr 0xcb0458 <col:50> 'long double (*)(const char *) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xcb03a8 <col:50> '<builtin fn type>' Function 0xcb0218 '__builtin_nanl' 'long double (const char *) noexcept'
|   |       `-ImplicitCastExpr 0xcb0498 <col:65> 'const char *' <ArrayToPointerDecay>
|   |         `-StringLiteral 0xcb03c8 <col:65> 'const char [1]' lvalue ""
|   |-CXXMethodDecl 0xcaf528 <line:1861:7, line:1862:75> col:7 constexpr signaling_NaN 'long double () noexcept' static
|   | `-CompoundStmt 0xcb0770 <col:45, col:75>
|   |   `-ReturnStmt 0xcb0760 <col:47, col:72>
|   |     `-CallExpr 0xcb0720 <col:54, col:72> 'long double'
|   |       |-ImplicitCastExpr 0xcb0708 <col:54> 'long double (*)(const char *) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0xcb06b8 <col:54> '<builtin fn type>' Function 0xcb0528 '__builtin_nansl' 'long double (const char *) noexcept'
|   |       `-ImplicitCastExpr 0xcb0748 <col:70> 'const char *' <ArrayToPointerDecay>
|   |         `-StringLiteral 0xcb06d8 <col:70> 'const char [1]' lvalue ""
|   |-CXXMethodDecl 0xcaf5f8 <line:1864:7, line:1865:72> col:7 constexpr denorm_min 'long double () noexcept' static
|   | `-CompoundStmt 0xcb07c8 <col:42, col:72>
|   |   `-ReturnStmt 0xcb07b8 <col:44, <built-in>:166:29>
|   |     `-FloatingLiteral 0xcb0788 <col:29> 'long double' 0.000000e+00
|   |-VarDecl 0xcaf6a8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/limits:1867:7, line:1868:51> line:1867:42 is_iec559 'const bool' static constexpr cinit
|   | `-BinaryOperator 0xcaf8a8 <line:1868:4, col:51> 'bool' '&&'
|   |   |-BinaryOperator 0xcaf7c0 <col:4, col:20> 'bool' '&&'
|   |   | |-ImplicitCastExpr 0xcaf770 <col:4> 'bool' <LValueToRValue>
|   |   | | `-DeclRefExpr 0xcaf750 <col:4> 'const bool' lvalue Var 0xcaed78 'has_infinity' 'const bool' non_odr_use_constant
|   |   | `-ImplicitCastExpr 0xcaf7a8 <col:20> 'bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0xcaf788 <col:20> 'const bool' lvalue Var 0xcaee80 'has_quiet_NaN' 'const bool' non_odr_use_constant
|   |   `-BinaryOperator 0xcaf888 <col:37, col:51> 'bool' '=='
|   |     |-ImplicitCastExpr 0xcaf858 <col:37> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0xcaf840 <col:37> 'std::float_denorm_style' <LValueToRValue>
|   |     |   `-DeclRefExpr 0xcaf820 <col:37> 'const std::float_denorm_style' lvalue Var 0xcaf0b0 'has_denorm' 'const std::float_denorm_style' non_odr_use_constant
|   |     `-ImplicitCastExpr 0xcaf870 <col:51> 'int' <IntegralCast>
|   |       `-DeclRefExpr 0xcaf800 <col:51> 'std::float_denorm_style' EnumConstant 0xc54998 'denorm_present' 'std::float_denorm_style'
|   |-VarDecl 0xcaf930 <line:1869:7, col:55> col:42 is_bounded 'const bool' static constexpr cinit
|   | `-CXXBoolLiteralExpr 0xcaf998 <col:55> 'bool' true
|   |-VarDecl 0xcafa10 <line:1870:7, col:54> col:42 is_modulo 'const bool' static constexpr cinit
|   | `-CXXBoolLiteralExpr 0xcafa78 <col:54> 'bool' false
|   |-VarDecl 0xcafaf0 <line:1872:7, line:120:39> line:1872:42 traps 'const bool' static constexpr cinit
|   | `-CXXBoolLiteralExpr 0xcafb58 <line:120:39> 'bool' false
|   |-VarDecl 0xcafbd0 <line:1873:7, line:123:49> line:1873:42 tinyness_before 'const bool' static constexpr cinit
|   | `-CXXBoolLiteralExpr 0xcafc38 <line:123:49> 'bool' false
|   `-VarDecl 0xcafcb0 <line:1875:7, line:1876:13> line:1875:55 round_style 'const std::float_round_style' static constexpr cinit
|     `-DeclRefExpr 0xcafd18 <line:1876:13> 'std::float_round_style' EnumConstant 0xc545f0 'round_to_nearest' 'std::float_round_style'
|-LinkageSpecDecl 0xcaa1a0 <line:1706:49> col:49 implicit C
| `-FunctionDecl 0xcaa1f0 <col:49> col:49 implicit used __builtin_huge_valf 'float () noexcept' extern
|   |-NoThrowAttr 0xcaa290 <col:49> Implicit
|   `-ConstAttr 0xcaa2e8 <col:49> Implicit
|-LinkageSpecDecl 0xcaa3e8 <line:1709:50> col:50 implicit C
| `-FunctionDecl 0xcaa438 <col:50> col:50 implicit used __builtin_nanf 'float (const char *) noexcept' extern
|   |-ParmVarDecl 0xcaa4d8 <<invalid sloc>> <invalid sloc> 'const char *'
|   |-NoThrowAttr 0xcaa548 <col:50> Implicit
|   `-PureAttr 0xcaa5a0 <col:50> Implicit
|-LinkageSpecDecl 0xcaa738 <line:1712:54> col:54 implicit C
| `-FunctionDecl 0xcaa788 <col:54> col:54 implicit used __builtin_nansf 'float (const char *) noexcept' extern
|   |-ParmVarDecl 0xcaa828 <<invalid sloc>> <invalid sloc> 'const char *'
|   |-NoThrowAttr 0xcaa898 <col:54> Implicit
|   `-PureAttr 0xcaa8f0 <col:54> Implicit
|-LinkageSpecDecl 0xcad090 <line:1781:49> col:49 implicit C
| `-FunctionDecl 0xcad0e0 <col:49> col:49 implicit used __builtin_huge_val 'double () noexcept' extern
|   |-NoThrowAttr 0xcad180 <col:49> Implicit
|   `-ConstAttr 0xcad1d8 <col:49> Implicit
|-LinkageSpecDecl 0xcad2d8 <line:1784:50> col:50 implicit C
| `-FunctionDecl 0xcad328 <col:50> col:50 implicit used __builtin_nan 'double (const char *) noexcept' extern
|   |-ParmVarDecl 0xcad3c8 <<invalid sloc>> <invalid sloc> 'const char *'
|   |-NoThrowAttr 0xcad438 <col:50> Implicit
|   `-PureAttr 0xcad490 <col:50> Implicit
|-LinkageSpecDecl 0xcad5e8 <line:1787:54> col:54 implicit C
| `-FunctionDecl 0xcad638 <col:54> col:54 implicit used __builtin_nans 'double (const char *) noexcept' extern
|   |-ParmVarDecl 0xcad6d8 <<invalid sloc>> <invalid sloc> 'const char *'
|   |-NoThrowAttr 0xcad748 <col:54> Implicit
|   `-PureAttr 0xcad7a0 <col:54> Implicit
|-LinkageSpecDecl 0xcaff78 <line:1856:49> col:49 implicit C
| `-FunctionDecl 0xcaffc8 <col:49> col:49 implicit used __builtin_huge_vall 'long double () noexcept' extern
|   |-NoThrowAttr 0xcb0068 <col:49> Implicit
|   `-ConstAttr 0xcb00c0 <col:49> Implicit
|-LinkageSpecDecl 0xcb01c8 <line:1859:50> col:50 implicit C
| `-FunctionDecl 0xcb0218 <col:50> col:50 implicit used __builtin_nanl 'long double (const char *) noexcept' extern
|   |-ParmVarDecl 0xcb02b8 <<invalid sloc>> <invalid sloc> 'const char *'
|   |-NoThrowAttr 0xcb0328 <col:50> Implicit
|   `-PureAttr 0xcb0380 <col:50> Implicit
|-LinkageSpecDecl 0xcb04d8 <line:1862:54> col:54 implicit C
| `-FunctionDecl 0xcb0528 <col:54> col:54 implicit used __builtin_nansl 'long double (const char *) noexcept' extern
|   |-ParmVarDecl 0xcb05c8 <<invalid sloc>> <invalid sloc> 'const char *'
|   |-NoThrowAttr 0xcb0638 <col:54> Implicit
|   `-PureAttr 0xcb0690 <col:54> Implicit
|-CXXRecordDecl 0xcb07e0 </usr/include/x86_64-linux-gnu/bits/timex.h:26:1, line:54:1> line:26:8 struct timex definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0xcb08f8 <col:1, col:8> col:8 implicit struct timex
| |-FieldDecl 0xcb09a0 <line:28:3, col:16> col:16 modes 'unsigned int'
| |-FieldDecl 0xcb0a00 <line:29:3, col:21> col:21 offset '__syscall_slong_t':'long'
| |-FieldDecl 0xcb0a60 <line:30:3, col:21> col:21 freq '__syscall_slong_t':'long'
| |-FieldDecl 0xcb0ac0 <line:31:3, col:21> col:21 maxerror '__syscall_slong_t':'long'
| |-FieldDecl 0xcb0b20 <line:32:3, col:21> col:21 esterror '__syscall_slong_t':'long'
| |-FieldDecl 0xcb0b88 <line:33:3, col:7> col:7 status 'int'
| |-FieldDecl 0xcb0be8 <line:34:3, col:21> col:21 constant '__syscall_slong_t':'long'
| |-FieldDecl 0xcb0c48 <line:35:3, col:21> col:21 precision '__syscall_slong_t':'long'
| |-FieldDecl 0xcb0ca8 <line:36:3, col:21> col:21 tolerance '__syscall_slong_t':'long'
| |-FieldDecl 0xcb0d18 <line:37:3, col:18> col:18 time 'struct timeval':'timeval'
| |-FieldDecl 0xcb0d78 <line:38:3, col:21> col:21 tick '__syscall_slong_t':'long'
| |-FieldDecl 0xcb0dd8 <line:39:3, col:21> col:21 ppsfreq '__syscall_slong_t':'long'
| |-FieldDecl 0xcb0e38 <line:40:3, col:21> col:21 jitter '__syscall_slong_t':'long'
| |-FieldDecl 0xcb0ea0 <line:41:3, col:7> col:7 shift 'int'
| |-FieldDecl 0xcb0f00 <line:42:3, col:21> col:21 stabil '__syscall_slong_t':'long'
| |-FieldDecl 0xcb0f60 <line:43:3, col:21> col:21 jitcnt '__syscall_slong_t':'long'
| |-FieldDecl 0xcb0fc0 <line:44:3, col:21> col:21 calcnt '__syscall_slong_t':'long'
| |-FieldDecl 0xcb1020 <line:45:3, col:21> col:21 errcnt '__syscall_slong_t':'long'
| |-FieldDecl 0xcb1080 <line:46:3, col:21> col:21 stbcnt '__syscall_slong_t':'long'
| |-FieldDecl 0xcb10e8 <line:48:3, col:7> col:7 tai 'int'
| |-FieldDecl 0xcb1190 <line:51:3, col:9> col:8 'int'
| | `-ConstantExpr 0xcb1170 <col:9> 'int' Int: 32
| |   `-IntegerLiteral 0xcb1138 <col:9> 'int' 32
| |-FieldDecl 0xcb1238 <col:13, col:19> col:18 'int'
| | `-ConstantExpr 0xcb1218 <col:19> 'int' Int: 32
| |   `-IntegerLiteral 0xcb11e0 <col:19> 'int' 32
| |-FieldDecl 0xcb12e0 <col:23, col:29> col:28 'int'
| | `-ConstantExpr 0xcb12c0 <col:29> 'int' Int: 32
| |   `-IntegerLiteral 0xcb1288 <col:29> 'int' 32
| |-FieldDecl 0xcb1388 <col:33, col:39> col:38 'int'
| | `-ConstantExpr 0xcb1368 <col:39> 'int' Int: 32
| |   `-IntegerLiteral 0xcb1330 <col:39> 'int' 32
| |-FieldDecl 0xcb1430 <line:52:3, col:9> col:8 'int'
| | `-ConstantExpr 0xcb1410 <col:9> 'int' Int: 32
| |   `-IntegerLiteral 0xcb13d8 <col:9> 'int' 32
| |-FieldDecl 0xcb14d8 <col:13, col:19> col:18 'int'
| | `-ConstantExpr 0xcb14b8 <col:19> 'int' Int: 32
| |   `-IntegerLiteral 0xcb1480 <col:19> 'int' 32
| |-FieldDecl 0xcb1580 <col:23, col:29> col:28 'int'
| | `-ConstantExpr 0xcb1560 <col:29> 'int' Int: 32
| |   `-IntegerLiteral 0xcb1528 <col:29> 'int' 32
| |-FieldDecl 0xcb1628 <col:33, col:39> col:38 'int'
| | `-ConstantExpr 0xcb1608 <col:39> 'int' Int: 32
| |   `-IntegerLiteral 0xcb15d0 <col:39> 'int' 32
| |-FieldDecl 0xcb16d0 <line:53:3, col:9> col:8 'int'
| | `-ConstantExpr 0xcb16b0 <col:9> 'int' Int: 32
| |   `-IntegerLiteral 0xcb1678 <col:9> 'int' 32
| |-FieldDecl 0xcb1778 <col:13, col:19> col:18 'int'
| | `-ConstantExpr 0xcb1758 <col:19> 'int' Int: 32
| |   `-IntegerLiteral 0xcb1720 <col:19> 'int' 32
| `-FieldDecl 0xcb1820 <col:23, col:29> col:28 'int'
|   `-ConstantExpr 0xcb1800 <col:29> 'int' Int: 32
|     `-IntegerLiteral 0xcb17c8 <col:29> 'int' 32
|-LinkageSpecDecl 0xcb18a8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:114:24, line:115:22> line:114:31 C
| `-FunctionDecl 0xcb1b48 </usr/include/x86_64-linux-gnu/bits/time.h:78:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/x86_64-linux-gnu/bits/time.h:78:12 clock_adjtime 'int (__clockid_t, struct timex *) throw()' extern
|   |-ParmVarDecl 0xcb1908 <col:27, col:39> col:39 __clock_id '__clockid_t':'int'
|   `-ParmVarDecl 0xcb1a20 <col:51, col:65> col:65 __utx 'struct timex *'
|-CXXRecordDecl 0xcb1bf8 </usr/include/x86_64-linux-gnu/bits/types/struct_tm.h:7:1, line:26:1> line:7:8 struct tm definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0xcb1d18 <col:1, col:8> col:8 implicit struct tm
| |-FieldDecl 0xcb1dc0 <line:9:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0xcb1e28 <line:10:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0xcb1e90 <line:11:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0xcb1ef8 <line:12:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0xcb1f60 <line:13:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0xcb1fc8 <line:14:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0xcb2030 <line:15:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0xcb2098 <line:16:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0xcb2100 <line:17:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0xcb2168 <line:20:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0xcb21d0 <line:21:3, col:15> col:15 tm_zone 'const char *'
|-CXXRecordDecl 0xcb2238 </usr/include/x86_64-linux-gnu/bits/types/struct_itimerspec.h:8:1, line:12:3> line:8:8 struct itimerspec definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0xcb2358 <col:1, col:8> col:8 implicit struct itimerspec
| |-FieldDecl 0xcb2408 <line:10:5, col:21> col:21 it_interval 'struct timespec':'timespec'
| `-FieldDecl 0xcb2478 <line:11:5, col:21> col:21 it_value 'struct timespec':'timespec'
|-CXXRecordDecl 0xcb24e0 </usr/include/time.h:49:1, col:8> col:8 struct sigevent
|-LinkageSpecDecl 0xcb25b0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:114:24, line:115:22> line:114:31 C
| |-FunctionDecl 0xcb26f0 </usr/include/time.h:72:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/time.h:72:16 clock 'clock_t () throw()' extern
| |-FunctionDecl 0xcb28e0 <line:75:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/time.h:75:15 time 'time_t (time_t *) throw()' extern
| | `-ParmVarDecl 0xcb27e8 <col:21, col:29> col:29 __timer 'time_t *'
| |-FunctionDecl 0xcb2b38 <line:78:1, line:79:40> line:78:15 difftime 'double (time_t, time_t) throw()' extern
| | |-ParmVarDecl 0xcb2998 <col:25, col:32> col:32 __time1 'time_t':'long'
| | |-ParmVarDecl 0xcb2a10 <col:41, col:48> col:48 __time0 'time_t':'long'
| | `-ConstAttr 0xcb2be8 <line:79:30>
| |-FunctionDecl 0xcb2df0 <line:82:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/time.h:82:15 mktime 'time_t (struct tm *) throw()' extern
| | `-ParmVarDecl 0xcb2cf0 <col:23, col:34> col:34 __tp 'struct tm *'
| |-FunctionDecl 0xcc7a80 <line:88:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/time.h:88:15 strftime 'size_t (char *__restrict, size_t, const char *__restrict, const struct tm *__restrict) throw()' extern
| | |-ParmVarDecl 0xcb2eb0 <col:25, col:42> col:42 __s 'char *__restrict'
| | |-ParmVarDecl 0xcb2f28 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| | |-ParmVarDecl 0xcb2fa8 <line:89:4, col:27> col:27 __format 'const char *__restrict'
| | `-ParmVarDecl 0xcb3090 <line:90:4, col:32> col:32 __tp 'const struct tm *__restrict'
| |-FunctionDecl 0xcc7d98 <line:95:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/time.h:95:14 strptime 'char *(const char *__restrict, const char *__restrict, struct tm *) throw()' extern
| | |-ParmVarDecl 0xcc7b58 <col:24, col:47> col:47 __s 'const char *__restrict'
| | |-ParmVarDecl 0xcc7bd8 <line:96:10, col:33> col:33 __fmt 'const char *__restrict'
| | `-ParmVarDecl 0xcc7c68 <col:40, col:51> col:51 __tp 'struct tm *'
| |-FunctionDecl 0xcc81c0 <line:104:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/time.h:104:15 strftime_l 'size_t (char *__restrict, size_t, const char *__restrict, const struct tm *__restrict, locale_t) throw()' extern
| | |-ParmVarDecl 0xcc7e68 <col:27, col:44> col:44 __s 'char *__restrict'
| | |-ParmVarDecl 0xcc7ee0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| | |-ParmVarDecl 0xcc7f60 <line:105:6, col:29> col:29 __format 'const char *__restrict'
| | |-ParmVarDecl 0xcc7ff0 <line:106:6, col:34> col:34 __tp 'const struct tm *__restrict'
| | `-ParmVarDecl 0xcc8068 <line:107:6, col:15> col:15 __loc 'locale_t':'struct __locale_struct *'
| |-FunctionDecl 0xcc8578 <line:111:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/time.h:111:14 strptime_l 'char *(const char *__restrict, const char *__restrict, struct tm *, locale_t) throw()' extern
| | |-ParmVarDecl 0xcc82a0 <col:26, col:49> col:49 __s 'const char *__restrict'
| | |-ParmVarDecl 0xcc8320 <line:112:5, col:28> col:28 __fmt 'const char *__restrict'
| | |-ParmVarDecl 0xcc83b0 <col:35, col:46> col:46 __tp 'struct tm *'
| | `-ParmVarDecl 0xcc8428 <line:113:5, col:14> col:14 __loc 'locale_t':'struct __locale_struct *'
| |-FunctionDecl 0xcc87b8 <line:119:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/time.h:119:19 gmtime 'struct tm *(const time_t *) throw()' extern
| | `-ParmVarDecl 0xcc86a8 <col:27, col:41> col:41 __timer 'const time_t *'
| |-FunctionDecl 0xcc8920 <line:123:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/time.h:123:19 localtime 'struct tm *(const time_t *) throw()' extern
| | `-ParmVarDecl 0xcc8870 <col:30, col:44> col:44 __timer 'const time_t *'
| |-FunctionDecl 0xcc8b98 <line:128:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/time.h:128:19 gmtime_r 'struct tm *(const time_t *__restrict, struct tm *__restrict) throw()' extern
| | |-ParmVarDecl 0xcc89d8 <col:29, col:54> col:54 __timer 'const time_t *__restrict'
| | `-ParmVarDecl 0xcc8a68 <line:129:8, col:30> col:30 __tp 'struct tm *__restrict'
| |-FunctionDecl 0xcc8da0 <line:133:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/time.h:133:19 localtime_r 'struct tm *(const time_t *__restrict, struct tm *__restrict) throw()' extern
| | |-ParmVarDecl 0xcc8c58 <col:32, col:57> col:57 __timer 'const time_t *__restrict'
| | `-ParmVarDecl 0xcc8ce8 <line:134:11, col:33> col:33 __tp 'struct tm *__restrict'
| |-FunctionDecl 0xcc8f78 <line:139:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/time.h:139:14 asctime 'char *(const struct tm *) throw()' extern
| | `-ParmVarDecl 0xcc8e78 <col:23, col:40> col:40 __tp 'const struct tm *'
| |-FunctionDecl 0xcc9138 <line:142:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/time.h:142:14 ctime 'char *(const time_t *) throw()' extern
| | `-ParmVarDecl 0xcc9030 <col:21, col:35> col:35 __timer 'const time_t *'
| |-FunctionDecl 0xcc93a8 <line:149:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/time.h:149:14 asctime_r 'char *(const struct tm *__restrict, char *__restrict) throw()' extern
| | |-ParmVarDecl 0xcc9208 <col:25, col:53> col:53 __tp 'const struct tm *__restrict'
| | `-ParmVarDecl 0xcc9288 <line:150:4, col:21> col:21 __buf 'char *__restrict'
| |-FunctionDecl 0xcc9608 <line:153:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/time.h:153:14 ctime_r 'char *(const time_t *__restrict, char *__restrict) throw()' extern
| | |-ParmVarDecl 0xcc9468 <col:23, col:48> col:48 __timer 'const time_t *__restrict'
| | `-ParmVarDecl 0xcc94e8 <line:154:9, col:26> col:26 __buf 'char *__restrict'
| |-VarDecl 0xcc9760 <line:159:1, col:24> col:14 __tzname 'char *[2]' extern
| |-VarDecl 0xcc97e0 <line:160:1, col:12> col:12 __daylight 'int' extern
| |-VarDecl 0xcc9860 <line:161:1, col:17> col:17 __timezone 'long' extern
| |-VarDecl 0xcc9930 <line:166:1, col:22> col:14 tzname 'char *[2]' extern
| |-FunctionDecl 0xcc9a38 <line:170:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/time.h:170:13 tzset 'void () throw()' extern
| |-VarDecl 0xcc9af0 <line:174:1, col:12> col:12 daylight 'int' extern
| |-VarDecl 0xcc9b70 <line:175:1, col:17> col:17 timezone 'long' extern
| |-FunctionDecl 0xcc9c98 <line:190:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/time.h:190:15 timegm 'time_t (struct tm *) throw()' extern
| | `-ParmVarDecl 0xcc9c00 <col:23, col:34> col:34 __tp 'struct tm *'
| |-FunctionDecl 0xcc9e00 <line:193:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/time.h:193:15 timelocal 'time_t (struct tm *) throw()' extern
| | `-ParmVarDecl 0xcc9d68 <col:26, col:37> col:37 __tp 'struct tm *'
| |-FunctionDecl 0xcc9f60 <line:196:1, col:67> col:12 dysize 'int (int) throw()' extern
| | |-ParmVarDecl 0xcc9ec0 <col:20, col:24> col:24 __year 'int'
| | `-ConstAttr 0xcca008 <col:57>
| |-FunctionDecl 0xcca290 <line:205:1, line:206:37> line:205:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| | |-ParmVarDecl 0xcca088 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| | `-ParmVarDecl 0xcca170 <line:206:9, col:26> col:26 __remaining 'struct timespec *'
| |-FunctionDecl 0xcca528 <line:210:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/time.h:210:12 clock_getres 'int (clockid_t, struct timespec *) throw()' extern
| | |-ParmVarDecl 0xcca370 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| | `-ParmVarDecl 0xcca400 <col:48, col:65> col:65 __res 'struct timespec *'
| |-FunctionDecl 0xcca720 <line:213:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/time.h:213:12 clock_gettime 'int (clockid_t, struct timespec *) throw()' extern
| | |-ParmVarDecl 0xcca5e8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| | `-ParmVarDecl 0xcca678 <col:49, col:66> col:66 __tp 'struct timespec *'
| |-FunctionDecl 0xcca998 <line:216:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/time.h:216:12 clock_settime 'int (clockid_t, const struct timespec *) throw()' extern
| | |-ParmVarDecl 0xcca7e0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| | `-ParmVarDecl 0xcca870 <col:49, col:72> col:72 __tp 'const struct timespec *'
| |-FunctionDecl 0xccad40 <line:224:1, line:226:30> line:224:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| | |-ParmVarDecl 0xccaa58 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| | |-ParmVarDecl 0xccaad8 <col:51, col:55> col:55 __flags 'int'
| | |-ParmVarDecl 0xccab68 <line:225:8, col:31> col:31 __req 'const struct timespec *'
| | `-ParmVarDecl 0xccabf8 <line:226:8, col:25> col:25 __rem 'struct timespec *'
| |-FunctionDecl 0xccaff8 <line:229:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/time.h:229:12 clock_getcpuclockid 'int (pid_t, clockid_t *) throw()' extern
| | |-ParmVarDecl 0xccae30 <col:33, col:39> col:39 __pid 'pid_t':'int'
| | `-ParmVarDecl 0xccaed8 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| |-FunctionDecl 0xccb3c8 <line:234:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/time.h:234:12 timer_create 'int (clockid_t, struct sigevent *__restrict, timer_t *__restrict) throw()' extern
| | |-ParmVarDecl 0xccb0b8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| | |-ParmVarDecl 0xccb1d0 <line:235:5, col:33> col:33 __evp 'struct sigevent *__restrict'
| | `-ParmVarDecl 0xccb298 <line:236:5, col:25> col:25 __timerid 'timer_t *__restrict'
| |-FunctionDecl 0xccb568 <line:239:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/time.h:239:12 timer_delete 'int (timer_t) throw()' extern
| | `-ParmVarDecl 0xccb490 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| |-FunctionDecl 0xccba50 <line:242:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/time.h:242:12 timer_settime 'int (timer_t, int, const struct itimerspec *__restrict, struct itimerspec *__restrict) throw()' extern
| | |-ParmVarDecl 0xccb620 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| | |-ParmVarDecl 0xccb6a0 <col:46, col:50> col:50 __flags 'int'
| | |-ParmVarDecl 0xccb7c0 <line:243:6, col:42> col:42 __value 'const struct itimerspec *__restrict'
| | `-ParmVarDecl 0xccb8b0 <line:244:6, col:36> col:36 __ovalue 'struct itimerspec *__restrict'
| |-FunctionDecl 0xccbcd8 <line:247:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/time.h:247:12 timer_gettime 'int (timer_t, struct itimerspec *) throw()' extern
| | |-ParmVarDecl 0xccbb20 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| | `-ParmVarDecl 0xccbbb0 <col:46, col:65> col:65 __value 'struct itimerspec *'
| |-FunctionDecl 0xccbe38 <line:251:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27> /usr/include/time.h:251:12 timer_getoverrun 'int (timer_t) throw()' extern
| | `-ParmVarDecl 0xccbd98 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| |-FunctionDecl 0xccc0c8 <line:257:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/time.h:257:12 timespec_get 'int (struct timespec *, int) throw()' extern
| | |-ParmVarDecl 0xccbf08 <col:26, col:43> col:43 __ts 'struct timespec *'
| | |-ParmVarDecl 0xccbf88 <col:49, col:53> col:53 __base 'int'
| | `-NonNullAttr 0xccc178 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/time.h:258:27> 1
| |-VarDecl 0xccc200 <line:274:1, col:12> col:12 getdate_err 'int' extern
| |-FunctionDecl 0xccc390 <line:283:1, col:48> col:19 getdate 'struct tm *(const char *)' extern
| | `-ParmVarDecl 0xccc280 <col:28, col:40> col:40 __string 'const char *'
| `-FunctionDecl 0xccc600 <line:297:1, line:298:40> line:297:12 getdate_r 'int (const char *__restrict, struct tm *__restrict)' extern
|   |-ParmVarDecl 0xccc450 <col:23, col:46> col:46 __string 'const char *__restrict'
|   `-ParmVarDecl 0xccc4e0 <line:298:9, col:31> col:31 __resbufp 'struct tm *__restrict'
|-NamespaceDecl 0xccc6b0 prev 0xc4e7b0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ctime:58:1, line:73:1> line:58:11 std
| |-original Namespace 0x81a0b0 'std'
| |-UsingDecl 0xccc728 <line:60:3, col:11> col:11 ::clock_t
| |-UsingShadowDecl 0xccc780 <col:11> col:11 implicit Typedef 0x93cec0 'clock_t'
| | `-TypedefType 0xcb2600 'clock_t' sugar
| |   |-Typedef 0x93cec0 'clock_t'
| |   `-TypedefType 0x93ce90 '__clock_t' sugar
| |     |-Typedef 0x8d1280 '__clock_t'
| |     `-BuiltinType 0x7db3a0 'long'
| |-UsingDecl 0xccc7d8 <line:61:3, col:11> col:11 ::time_t
| |-UsingShadowDecl 0xccc830 <col:11> col:11 implicit Typedef 0x93cfe0 'time_t'
| | `-TypedefType 0xcb2790 'time_t' sugar
| |   |-Typedef 0x93cfe0 'time_t'
| |   `-TypedefType 0x93cfb0 '__time_t' sugar
| |     |-Typedef 0x8d1440 '__time_t'
| |     `-BuiltinType 0x7db3a0 'long'
| |-UsingDecl 0xccc888 <line:62:3, col:11> col:11 ::tm
| |-UsingShadowDecl 0xccc8e0 <col:11> col:11 implicit CXXRecord 0xcb1bf8 'tm'
| | `-RecordType 0xcb1c90 'tm'
| |   `-CXXRecord 0xcb1bf8 'tm'
| |-UsingDecl 0xccc938 <line:64:3, col:11> col:11 ::clock
| |-UsingShadowDecl 0xccc990 <col:11> col:11 implicit Function 0xcb26f0 'clock' 'clock_t () throw()'
| |-UsingDecl 0xccc9e8 <line:65:3, col:11> col:11 ::difftime
| |-UsingShadowDecl 0xccca40 <col:11> col:11 implicit Function 0xcb2b38 'difftime' 'double (time_t, time_t) throw()'
| |-UsingDecl 0xccca98 <line:66:3, col:11> col:11 ::mktime
| |-UsingShadowDecl 0xcccaf0 <col:11> col:11 implicit Function 0xcb2df0 'mktime' 'time_t (struct tm *) throw()'
| |-UsingDecl 0xcccb48 <line:67:3, col:11> col:11 ::time
| |-UsingShadowDecl 0xcccba0 <col:11> col:11 implicit Function 0xcb28e0 'time' 'time_t (time_t *) throw()'
| |-UsingDecl 0xcccbf8 <line:68:3, col:11> col:11 ::asctime
| |-UsingShadowDecl 0xcccc50 <col:11> col:11 implicit Function 0xcc8f78 'asctime' 'char *(const struct tm *) throw()'
| |-UsingDecl 0xcccca8 <line:69:3, col:11> col:11 ::ctime
| |-UsingShadowDecl 0xcccd00 <col:11> col:11 implicit Function 0xcc9138 'ctime' 'char *(const time_t *) throw()'
| |-UsingDecl 0xcccd58 <line:70:3, col:11> col:11 ::gmtime
| |-UsingShadowDecl 0xcccdb0 <col:11> col:11 implicit Function 0xcc87b8 'gmtime' 'struct tm *(const time_t *) throw()'
| |-UsingDecl 0xccce08 <line:71:3, col:11> col:11 ::localtime
| |-UsingShadowDecl 0xccce60 <col:11> col:11 implicit Function 0xcc8920 'localtime' 'struct tm *(const time_t *) throw()'
| |-UsingDecl 0xccceb8 <line:72:3, col:11> col:11 ::strftime
| `-UsingShadowDecl 0xcccf10 <col:11> col:11 implicit Function 0xcc7a80 'strftime' 'size_t (char *__restrict, size_t, const char *__restrict, const struct tm *__restrict) throw()'
|-NamespaceDecl 0xcccf80 prev 0xccc6b0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/parse_numbers.h:41:1, line:290:1> line:41:11 std
| |-original Namespace 0x81a0b0 'std'
| |-VisibilityAttr 0xcccff0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:70:49, col:67> Default
| |-NamespaceDecl 0xccd048 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/parse_numbers.h:45:1, line:258:1> line:45:11 __parse_int
| | |-ClassTemplateDecl 0xccd258 <line:47:3, line:48:12> col:12 _Digit
| | | |-NonTypeTemplateParmDecl 0xccd0d0 <line:47:12, col:21> col:21 'unsigned int' depth 0 index 0 _Base
| | | |-NonTypeTemplateParmDecl 0xccd140 <col:28, col:33> col:33 'char' depth 0 index 1 _Dig
| | | `-CXXRecordDecl 0xccd1c8 <line:48:5, col:12> col:12 struct _Digit
| | |-ClassTemplatePartialSpecializationDecl 0xccd6e8 <line:50:3, line:54:5> line:51:12 struct _Digit definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'integral_constant<unsigned int, 0>':'std::integral_constant<unsigned int, 0>'
| | | |-TemplateArgument expr
| | | | `-DeclRefExpr 0xccd560 <col:19> 'unsigned int' NonTypeTemplateParm 0xccd4e0 '_Base' 'unsigned int'
| | | |-TemplateArgument integral 48
| | | |-NonTypeTemplateParmDecl 0xccd4e0 <line:50:12, col:21> col:21 referenced 'unsigned int' depth 0 index 0 _Base
| | | |-CXXRecordDecl 0xcce2a8 <line:51:5, col:12> col:12 implicit struct _Digit
| | | `-TypeAliasDecl 0xcce348 <line:53:7, col:23> col:13 __valid 'std::true_type':'std::integral_constant<bool, true>'
| | |   `-TypedefType 0xa0d460 'std::true_type' sugar
| | |     |-Typedef 0xace398 'true_type'
| | |     `-TemplateSpecializationType 0xace2b0 'integral_constant<bool, true>' sugar integral_constant
| | |       |-TemplateArgument type 'bool'
| | |       |-TemplateArgument expr
| | |       | `-ConstantExpr 0xace178 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/type_traits:75:35> 'bool' Int: 1
| | |       |   `-CXXBoolLiteralExpr 0xace118 <col:35> 'bool' true
| | |       `-RecordType 0xace290 'std::integral_constant<bool, true>'
| | |         `-ClassTemplateSpecialization 0xace198 'integral_constant'
| | |-ClassTemplatePartialSpecializationDecl 0xcce5d8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/parse_numbers.h:56:3, line:60:5> line:57:12 struct _Digit definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'integral_constant<unsigned int, 1>':'std::integral_constant<unsigned int, 1>'
| | | |-TemplateArgument expr
| | | | `-DeclRefExpr 0xcce458 <col:19> 'unsigned int' NonTypeTemplateParm 0xcce3d8 '_Base' 'unsigned int'
| | | |-TemplateArgument integral 49
| | | |-NonTypeTemplateParmDecl 0xcce3d8 <line:56:12, col:21> col:21 referenced 'unsigned int' depth 0 index 0 _Base
| | | |-CXXRecordDecl 0xccf120 <line:57:5, col:12> col:12 implicit struct _Digit
| | | `-TypeAliasDecl 0xccf1c0 <line:59:7, col:23> col:13 __valid 'std::true_type':'std::integral_constant<bool, true>'
| | |   `-TypedefType 0xa0d460 'std::true_type' sugar
| | |     |-Typedef 0xace398 'true_type'
| | |     `-TemplateSpecializationType 0xace2b0 'integral_constant<bool, true>' sugar integral_constant
| | |       |-TemplateArgument type 'bool'
| | |       |-TemplateArgument expr
| | |       | `-ConstantExpr 0xace178 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/type_traits:75:35> 'bool' Int: 1
| | |       |   `-CXXBoolLiteralExpr 0xace118 <col:35> 'bool' true
| | |       `-RecordType 0xace290 'std::integral_constant<bool, true>'
| | |         `-ClassTemplateSpecialization 0xace198 'integral_constant'
| | |-ClassTemplateDecl 0xccf3e0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/parse_numbers.h:62:3, line:67:5> line:63:12 _Digit_impl
| | | |-NonTypeTemplateParmDecl 0xccf250 <line:62:12, col:21> col:21 referenced 'unsigned int' depth 0 index 0 _Base
| | | |-NonTypeTemplateParmDecl 0xccf2c8 <col:28, col:37> col:37 referenced 'unsigned int' depth 0 index 1 _Val
| | | `-CXXRecordDecl 0xccf350 <line:63:5, line:67:5> line:63:12 struct _Digit_impl definition
| | |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |   | |-MoveConstructor exists simple trivial needs_implicit
| | |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |   | |-MoveAssignment exists simple trivial needs_implicit
| | |   | `-Destructor simple irrelevant trivial needs_implicit
| | |   |-public 'integral_constant<unsigned int, _Val>'
| | |   |-CXXRecordDecl 0xccf840 <col:5, col:12> col:12 implicit struct _Digit_impl
| | |   |-StaticAssertDecl 0xccf958 <line:65:7, col:50> col:7
| | |   | |-BinaryOperator 0xccf910 <col:21, col:29> 'bool' '>'
| | |   | | |-DeclRefExpr 0xccf8d0 <col:21> 'unsigned int' NonTypeTemplateParm 0xccf250 '_Base' 'unsigned int'
| | |   | | `-DeclRefExpr 0xccf8f0 <col:29> 'unsigned int' NonTypeTemplateParm 0xccf2c8 '_Val' 'unsigned int'
| | |   | `-StringLiteral 0xccf930 <col:35> 'const char [14]' lvalue "invalid digit"
| | |   `-TypeAliasDecl 0xcd29b0 <line:66:7, col:23> col:13 __valid 'std::true_type':'std::integral_constant<bool, true>'
| | |     `-TypedefType 0xa0d460 'std::true_type' sugar
| | |       |-Typedef 0xace398 'true_type'
| | |       `-TemplateSpecializationType 0xace2b0 'integral_constant<bool, true>' sugar integral_constant
| | |         |-TemplateArgument type 'bool'
| | |         |-TemplateArgument expr
| | |         | `-ConstantExpr 0xace178 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/type_traits:75:35> 'bool' Int: 1
| | |         |   `-CXXBoolLiteralExpr 0xace118 <col:35> 'bool' true
| | |         `-RecordType 0xace290 'std::integral_constant<bool, true>'
| | |           `-ClassTemplateSpecialization 0xace198 'integral_constant'
| | |-ClassTemplatePartialSpecializationDecl 0xcd2c48 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/parse_numbers.h:69:3, line:71:7> line:70:12 struct _Digit definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '_Digit_impl<_Base, 2>'
| | | |-TemplateArgument expr
| | | | `-DeclRefExpr 0xcd2ac0 <col:19> 'unsigned int' NonTypeTemplateParm 0xcd2a40 '_Base' 'unsigned int'
| | | |-TemplateArgument integral 50
| | | |-NonTypeTemplateParmDecl 0xcd2a40 <line:69:12, col:21> col:21 referenced 'unsigned int' depth 0 index 0 _Base
| | | `-CXXRecordDecl 0xcd3080 <line:70:5, col:12> col:12 implicit struct _Digit
| | |-ClassTemplatePartialSpecializationDecl 0xcd3348 <line:73:3, line:75:7> line:74:12 struct _Digit definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '_Digit_impl<_Base, 3>'
| | | |-TemplateArgument expr
| | | | `-DeclRefExpr 0xcd31c0 <col:19> 'unsigned int' NonTypeTemplateParm 0xcd3140 '_Base' 'unsigned int'
| | | |-TemplateArgument integral 51
| | | |-NonTypeTemplateParmDecl 0xcd3140 <line:73:12, col:21> col:21 referenced 'unsigned int' depth 0 index 0 _Base
| | | `-CXXRecordDecl 0xcd3780 <line:74:5, col:12> col:12 implicit struct _Digit
| | |-ClassTemplatePartialSpecializationDecl 0xcd3a48 <line:77:3, line:79:7> line:78:12 struct _Digit definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '_Digit_impl<_Base, 4>'
| | | |-TemplateArgument expr
| | | | `-DeclRefExpr 0xcd38c0 <col:19> 'unsigned int' NonTypeTemplateParm 0xcd3840 '_Base' 'unsigned int'
| | | |-TemplateArgument integral 52
| | | |-NonTypeTemplateParmDecl 0xcd3840 <line:77:12, col:21> col:21 referenced 'unsigned int' depth 0 index 0 _Base
| | | `-CXXRecordDecl 0xcd3e80 <line:78:5, col:12> col:12 implicit struct _Digit
| | |-ClassTemplatePartialSpecializationDecl 0xcd4148 <line:81:3, line:83:7> line:82:12 struct _Digit definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '_Digit_impl<_Base, 5>'
| | | |-TemplateArgument expr
| | | | `-DeclRefExpr 0xcd3fc0 <col:19> 'unsigned int' NonTypeTemplateParm 0xcd3f40 '_Base' 'unsigned int'
| | | |-TemplateArgument integral 53
| | | |-NonTypeTemplateParmDecl 0xcd3f40 <line:81:12, col:21> col:21 referenced 'unsigned int' depth 0 index 0 _Base
| | | `-CXXRecordDecl 0xcd4580 <line:82:5, col:12> col:12 implicit struct _Digit
| | |-ClassTemplatePartialSpecializationDecl 0xcd4848 <line:85:3, line:87:7> line:86:12 struct _Digit definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '_Digit_impl<_Base, 6>'
| | | |-TemplateArgument expr
| | | | `-DeclRefExpr 0xcd46c0 <col:19> 'unsigned int' NonTypeTemplateParm 0xcd4640 '_Base' 'unsigned int'
| | | |-TemplateArgument integral 54
| | | |-NonTypeTemplateParmDecl 0xcd4640 <line:85:12, col:21> col:21 referenced 'unsigned int' depth 0 index 0 _Base
| | | `-CXXRecordDecl 0xcd4c80 <line:86:5, col:12> col:12 implicit struct _Digit
| | |-ClassTemplatePartialSpecializationDecl 0xcd4f48 <line:89:3, line:91:7> line:90:12 struct _Digit definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '_Digit_impl<_Base, 7>'
| | | |-TemplateArgument expr
| | | | `-DeclRefExpr 0xcd4dc0 <col:19> 'unsigned int' NonTypeTemplateParm 0xcd4d40 '_Base' 'unsigned int'
| | | |-TemplateArgument integral 55
| | | |-NonTypeTemplateParmDecl 0xcd4d40 <line:89:12, col:21> col:21 referenced 'unsigned int' depth 0 index 0 _Base
| | | `-CXXRecordDecl 0xcd5380 <line:90:5, col:12> col:12 implicit struct _Digit
| | |-ClassTemplatePartialSpecializationDecl 0xcd5648 <line:93:3, line:95:7> line:94:12 struct _Digit definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '_Digit_impl<_Base, 8>'
| | | |-TemplateArgument expr
| | | | `-DeclRefExpr 0xcd54c0 <col:19> 'unsigned int' NonTypeTemplateParm 0xcd5440 '_Base' 'unsigned int'
| | | |-TemplateArgument integral 56
| | | |-NonTypeTemplateParmDecl 0xcd5440 <line:93:12, col:21> col:21 referenced 'unsigned int' depth 0 index 0 _Base
| | | `-CXXRecordDecl 0xcd5a80 <line:94:5, col:12> col:12 implicit struct _Digit
| | |-ClassTemplatePartialSpecializationDecl 0xcd5d48 <line:97:3, line:99:7> line:98:12 struct _Digit definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '_Digit_impl<_Base, 9>'
| | | |-TemplateArgument expr
| | | | `-DeclRefExpr 0xcd5bc0 <col:19> 'unsigned int' NonTypeTemplateParm 0xcd5b40 '_Base' 'unsigned int'
| | | |-TemplateArgument integral 57
| | | |-NonTypeTemplateParmDecl 0xcd5b40 <line:97:12, col:21> col:21 referenced 'unsigned int' depth 0 index 0 _Base
| | | `-CXXRecordDecl 0xcd6180 <line:98:5, col:12> col:12 implicit struct _Digit
| | |-ClassTemplatePartialSpecializationDecl 0xcd6448 <line:101:3, line:103:7> line:102:12 struct _Digit definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '_Digit_impl<_Base, 10>'
| | | |-TemplateArgument expr
| | | | `-DeclRefExpr 0xcd62c0 <col:19> 'unsigned int' NonTypeTemplateParm 0xcd6240 '_Base' 'unsigned int'
| | | |-TemplateArgument integral 97
| | | |-NonTypeTemplateParmDecl 0xcd6240 <line:101:12, col:21> col:21 referenced 'unsigned int' depth 0 index 0 _Base
| | | `-CXXRecordDecl 0xcd6880 <line:102:5, col:12> col:12 implicit struct _Digit
| | |-ClassTemplatePartialSpecializationDecl 0xcd7f68 <line:105:3, line:107:7> line:106:12 struct _Digit definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '_Digit_impl<_Base, 10>'
| | | |-TemplateArgument expr
| | | | `-DeclRefExpr 0xcd7de0 <col:19> 'unsigned int' NonTypeTemplateParm 0xcd6940 '_Base' 'unsigned int'
| | | |-TemplateArgument integral 65
| | | |-NonTypeTemplateParmDecl 0xcd6940 <line:105:12, col:21> col:21 referenced 'unsigned int' depth 0 index 0 _Base
| | | `-CXXRecordDecl 0xcd8340 <line:106:5, col:12> col:12 implicit struct _Digit
| | |-ClassTemplatePartialSpecializationDecl 0xcd8608 <line:109:3, line:111:7> line:110:12 struct _Digit definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '_Digit_impl<_Base, 11>'
| | | |-TemplateArgument expr
| | | | `-DeclRefExpr 0xcd8480 <col:19> 'unsigned int' NonTypeTemplateParm 0xcd8400 '_Base' 'unsigned int'
| | | |-TemplateArgument integral 98
| | | |-NonTypeTemplateParmDecl 0xcd8400 <line:109:12, col:21> col:21 referenced 'unsigned int' depth 0 index 0 _Base
| | | `-CXXRecordDecl 0xcd8a40 <line:110:5, col:12> col:12 implicit struct _Digit
| | |-ClassTemplatePartialSpecializationDecl 0xcd8d08 <line:113:3, line:115:7> line:114:12 struct _Digit definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '_Digit_impl<_Base, 11>'
| | | |-TemplateArgument expr
| | | | `-DeclRefExpr 0xcd8b80 <col:19> 'unsigned int' NonTypeTemplateParm 0xcd8b00 '_Base' 'unsigned int'
| | | |-TemplateArgument integral 66
| | | |-NonTypeTemplateParmDecl 0xcd8b00 <line:113:12, col:21> col:21 referenced 'unsigned int' depth 0 index 0 _Base
| | | `-CXXRecordDecl 0xcd90e0 <line:114:5, col:12> col:12 implicit struct _Digit
| | |-ClassTemplatePartialSpecializationDecl 0xcd93a8 <line:117:3, line:119:7> line:118:12 struct _Digit definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '_Digit_impl<_Base, 12>'
| | | |-TemplateArgument expr
| | | | `-DeclRefExpr 0xcd9220 <col:19> 'unsigned int' NonTypeTemplateParm 0xcd91a0 '_Base' 'unsigned int'
| | | |-TemplateArgument integral 99
| | | |-NonTypeTemplateParmDecl 0xcd91a0 <line:117:12, col:21> col:21 referenced 'unsigned int' depth 0 index 0 _Base
| | | `-CXXRecordDecl 0xcd97e0 <line:118:5, col:12> col:12 implicit struct _Digit
| | |-ClassTemplatePartialSpecializationDecl 0xcd9aa8 <line:121:3, line:123:7> line:122:12 struct _Digit definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '_Digit_impl<_Base, 12>'
| | | |-TemplateArgument expr
| | | | `-DeclRefExpr 0xcd9920 <col:19> 'unsigned int' NonTypeTemplateParm 0xcd98a0 '_Base' 'unsigned int'
| | | |-TemplateArgument integral 67
| | | |-NonTypeTemplateParmDecl 0xcd98a0 <line:121:12, col:21> col:21 referenced 'unsigned int' depth 0 index 0 _Base
| | | `-CXXRecordDecl 0xcd9e80 <line:122:5, col:12> col:12 implicit struct _Digit
| | |-ClassTemplatePartialSpecializationDecl 0xcda148 <line:125:3, line:127:7> line:126:12 struct _Digit definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '_Digit_impl<_Base, 13>'
| | | |-TemplateArgument expr
| | | | `-DeclRefExpr 0xcd9fc0 <col:19> 'unsigned int' NonTypeTemplateParm 0xcd9f40 '_Base' 'unsigned int'
| | | |-TemplateArgument integral 100
| | | |-NonTypeTemplateParmDecl 0xcd9f40 <line:125:12, col:21> col:21 referenced 'unsigned int' depth 0 index 0 _Base
| | | `-CXXRecordDecl 0xcda580 <line:126:5, col:12> col:12 implicit struct _Digit
| | |-ClassTemplatePartialSpecializationDecl 0xcda848 <line:129:3, line:131:7> line:130:12 struct _Digit definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '_Digit_impl<_Base, 13>'
| | | |-TemplateArgument expr
| | | | `-DeclRefExpr 0xcda6c0 <col:19> 'unsigned int' NonTypeTemplateParm 0xcda640 '_Base' 'unsigned int'
| | | |-TemplateArgument integral 68
| | | |-NonTypeTemplateParmDecl 0xcda640 <line:129:12, col:21> col:21 referenced 'unsigned int' depth 0 index 0 _Base
| | | `-CXXRecordDecl 0xcdac20 <line:130:5, col:12> col:12 implicit struct _Digit
| | |-ClassTemplatePartialSpecializationDecl 0xcdaee8 <line:133:3, line:135:7> line:134:12 struct _Digit definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '_Digit_impl<_Base, 14>'
| | | |-TemplateArgument expr
| | | | `-DeclRefExpr 0xcdad60 <col:19> 'unsigned int' NonTypeTemplateParm 0xcdace0 '_Base' 'unsigned int'
| | | |-TemplateArgument integral 101
| | | |-NonTypeTemplateParmDecl 0xcdace0 <line:133:12, col:21> col:21 referenced 'unsigned int' depth 0 index 0 _Base
| | | `-CXXRecordDecl 0xcdb320 <line:134:5, col:12> col:12 implicit struct _Digit
| | |-ClassTemplatePartialSpecializationDecl 0xcdb5e8 <line:137:3, line:139:7> line:138:12 struct _Digit definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '_Digit_impl<_Base, 14>'
| | | |-TemplateArgument expr
| | | | `-DeclRefExpr 0xcdb460 <col:19> 'unsigned int' NonTypeTemplateParm 0xcdb3e0 '_Base' 'unsigned int'
| | | |-TemplateArgument integral 69
| | | |-NonTypeTemplateParmDecl 0xcdb3e0 <line:137:12, col:21> col:21 referenced 'unsigned int' depth 0 index 0 _Base
| | | `-CXXRecordDecl 0xcdb9c0 <line:138:5, col:12> col:12 implicit struct _Digit
| | |-ClassTemplatePartialSpecializationDecl 0xcdbc88 <line:141:3, line:143:7> line:142:12 struct _Digit definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '_Digit_impl<_Base, 15>'
| | | |-TemplateArgument expr
| | | | `-DeclRefExpr 0xcdbb00 <col:19> 'unsigned int' NonTypeTemplateParm 0xcdba80 '_Base' 'unsigned int'
| | | |-TemplateArgument integral 102
| | | |-NonTypeTemplateParmDecl 0xcdba80 <line:141:12, col:21> col:21 referenced 'unsigned int' depth 0 index 0 _Base
| | | `-CXXRecordDecl 0xcdc0f0 <line:142:5, col:12> col:12 implicit struct _Digit
| | |-ClassTemplatePartialSpecializationDecl 0xcdc3b8 <line:145:3, line:147:7> line:146:12 struct _Digit definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '_Digit_impl<_Base, 15>'
| | | |-TemplateArgument expr
| | | | `-DeclRefExpr 0xcdc230 <col:19> 'unsigned int' NonTypeTemplateParm 0xcdc1b0 '_Base' 'unsigned int'
| | | |-TemplateArgument integral 70
| | | |-NonTypeTemplateParmDecl 0xcdc1b0 <line:145:12, col:21> col:21 referenced 'unsigned int' depth 0 index 0 _Base
| | | `-CXXRecordDecl 0xcdc790 <line:146:5, col:12> col:12 implicit struct _Digit
| | |-ClassTemplatePartialSpecializationDecl 0xcdca58 <line:150:3, line:154:5> line:151:12 struct _Digit definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'integral_constant<unsigned int, 0>':'std::integral_constant<unsigned int, 0>'
| | | |-TemplateArgument expr
| | | | `-DeclRefExpr 0xcdc8d0 <col:19> 'unsigned int' NonTypeTemplateParm 0xcdc850 '_Base' 'unsigned int'
| | | |-TemplateArgument integral 39
| | | |-NonTypeTemplateParmDecl 0xcdc850 <line:150:12, col:21> col:21 referenced 'unsigned int' depth 0 index 0 _Base
| | | |-CXXRecordDecl 0xcdce50 <line:151:5, col:12> col:12 implicit struct _Digit
| | | `-TypeAliasDecl 0xcdcef0 <line:153:7, col:23> col:13 __valid 'std::false_type':'std::integral_constant<bool, false>'
| | |   `-TypedefType 0xacf410 'std::false_type' sugar
| | |     |-Typedef 0xace658 'false_type'
| | |     `-TemplateSpecializationType 0xace570 'integral_constant<bool, false>' sugar integral_constant
| | |       |-TemplateArgument type 'bool'
| | |       |-TemplateArgument expr
| | |       | `-ConstantExpr 0xace430 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/type_traits:78:35> 'bool' Int: 0
| | |       |   `-CXXBoolLiteralExpr 0xace400 <col:35> 'bool' false
| | |       `-RecordType 0xace550 'std::integral_constant<bool, false>'
| | |         `-ClassTemplateSpecialization 0xace450 'integral_constant'
| | |-TypeAliasTemplateDecl 0xcdd238 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/parse_numbers.h:158:3, line:159:70> col:5 __ull_constant
| | | |-NonTypeTemplateParmDecl 0xcdcf80 <line:158:12, col:31> col:31 referenced 'unsigned long long' depth 0 index 0 _Val
| | | `-TypeAliasDecl 0xcdd1d8 <line:159:5, col:70> col:11 __ull_constant 'integral_constant<unsigned long long, _Val>'
| | |   `-TemplateSpecializationType 0xcdd0f0 'integral_constant<unsigned long long, _Val>' dependent integral_constant
| | |     |-TemplateArgument type 'unsigned long long'
| | |     `-TemplateArgument expr
| | |       `-DeclRefExpr 0xcdd018 <col:66> 'unsigned long long' NonTypeTemplateParm 0xcdcf80 '_Val' 'unsigned long long'
| | |-ClassTemplateDecl 0xcdd4a8 <line:161:3, line:168:5> line:162:12 _Power_help
| | | |-NonTypeTemplateParmDecl 0xcdd2a8 <line:161:12, col:21> col:21 referenced 'unsigned int' depth 0 index 0 _Base
| | | |-NonTypeTemplateParmDecl 0xcdd318 <col:28, col:33> col:33 referenced 'char' depth 0 index 1 _Dig
| | | |-NonTypeTemplateParmDecl 0xcdd388 <col:39, col:47> col:47 referenced 'char' depth 0 index 2 ... _Digs
| | | `-CXXRecordDecl 0xcdd418 <line:162:5, line:168:5> line:162:12 struct _Power_help definition
| | |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |   | |-MoveConstructor exists simple trivial needs_implicit
| | |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |   | |-MoveAssignment exists simple trivial needs_implicit
| | |   | `-Destructor simple irrelevant trivial needs_implicit
| | |   |-CXXRecordDecl 0xcdd810 <col:5, col:12> col:12 implicit struct _Power_help
| | |   |-TypeAliasDecl 0xcddb00 <line:164:7, col:61> col:13 referenced __next 'typename _Power_help<_Base, _Digs...>::type'
| | |   | `-DependentNameType 0xcdda90 'typename _Power_help<_Base, _Digs...>::type' dependent
| | |   |-TypeAliasDecl 0xcddd20 <line:165:7, col:59> col:13 referenced __valid_digit 'typename _Digit<_Base, _Dig>::__valid'
| | |   | `-DependentNameType 0xcddcb0 'typename _Digit<_Base, _Dig>::__valid' dependent
| | |   `-TypeAliasDecl 0xcde208 <line:166:7, line:167:67> line:166:13 type '__ull_constant<__next::value * (std::__parse_int::_Power_help::__valid_digit({}) ? _Base : 1ULL)>':'integral_constant<unsigned long long, __next::value * (std::__parse_int::_Power_help::__valid_digit({}) ? _Base : 1ULL)>'
| | |     `-TemplateSpecializationType 0xcde160 '__ull_constant<__next::value * (std::__parse_int::_Power_help::__valid_digit({}) ? _Base : 1ULL)>' sugar dependent alias __ull_constant
| | |       |-TemplateArgument expr
| | |       | `-ImplicitCastExpr 0xcddf88 <line:167:19, col:66> 'unsigned long long' <Dependent>
| | |       |   `-BinaryOperator 0xcddf68 <col:19, col:66> '<dependent type>' '*'
| | |       |     |-DependentScopeDeclRefExpr 0xcdde08 <col:19, col:27> '<dependent type>' lvalue
| | |       |     `-ParenExpr 0xcddf48 <col:35, col:66> '<dependent type>'
| | |       |       `-ConditionalOperator 0xcddf18 <col:36, col:62> '<dependent type>'
| | |       |         |-CXXUnresolvedConstructExpr 0xcddeb0 <col:36, col:50> 'std::__parse_int::_Power_help::__valid_digit':'typename _Digit<_Base, _Dig>::__valid' 'std::__parse_int::_Power_help::__valid_digit':'typename _Digit<_Base, _Dig>::__valid' list
| | |       |         | `-InitListExpr 0xcdde70 <col:49, col:50> 'void'
| | |       |         |-DeclRefExpr 0xcdded8 <col:54> 'unsigned int' NonTypeTemplateParm 0xcdd2a8 '_Base' 'unsigned int'
| | |       |         `-IntegerLiteral 0xcddef8 <col:62> 'unsigned long long' 1
| | |       |-TemplateSpecializationType 0xcde0c0 'integral_constant<unsigned long long, __next::value * (std::__parse_int::_Power_help::__valid_digit({}) ? _Base : 1ULL)>' dependent integral_constant
| | |       | |-TemplateArgument type 'unsigned long long'
| | |       | `-TemplateArgument expr
| | |       |   `-SubstNonTypeTemplateParmExpr 0xcde000 <line:159:66> 'unsigned long long'
| | |       |     `-ImplicitCastExpr 0xcddf88 <line:167:19, col:66> 'unsigned long long' <Dependent>
| | |       |       `-BinaryOperator 0xcddf68 <col:19, col:66> '<dependent type>' '*'
| | |       |         |-DependentScopeDeclRefExpr 0xcdde08 <col:19, col:27> '<dependent type>' lvalue
| | |       |         `-ParenExpr 0xcddf48 <col:35, col:66> '<dependent type>'
| | |       |           `-ConditionalOperator 0xcddf18 <col:36, col:62> '<dependent type>'
| | |       |             |-CXXUnresolvedConstructExpr 0xcddeb0 <col:36, col:50> 'std::__parse_int::_Power_help::__valid_digit':'typename _Digit<_Base, _Dig>::__valid' 'std::__parse_int::_Power_help::__valid_digit':'typename _Digit<_Base, _Dig>::__valid' list
| | |       |             | `-InitListExpr 0xcdde70 <col:49, col:50> 'void'
| | |       |             |-DeclRefExpr 0xcdded8 <col:54> 'unsigned int' NonTypeTemplateParm 0xcdd2a8 '_Base' 'unsigned int'
| | |       |             `-IntegerLiteral 0xcddef8 <col:62> 'unsigned long long' 1
| | |       `-TemplateSpecializationType 0xcde0c0 'integral_constant<unsigned long long, __next::value * (std::__parse_int::_Power_help::__valid_digit({}) ? _Base : 1ULL)>' dependent integral_constant
| | |         |-TemplateArgument type 'unsigned long long'
| | |         `-TemplateArgument expr
| | |           `-SubstNonTypeTemplateParmExpr 0xcde000 <line:159:66> 'unsigned long long'
| | |             `-ImplicitCastExpr 0xcddf88 <line:167:19, col:66> 'unsigned long long' <Dependent>
| | |               `-BinaryOperator 0xcddf68 <col:19, col:66> '<dependent type>' '*'
| | |                 |-DependentScopeDeclRefExpr 0xcdde08 <col:19, col:27> '<dependent type>' lvalue
| | |                 `-ParenExpr 0xcddf48 <col:35, col:66> '<dependent type>'
| | |                   `-ConditionalOperator 0xcddf18 <col:36, col:62> '<dependent type>'
| | |                     |-CXXUnresolvedConstructExpr 0xcddeb0 <col:36, col:50> 'std::__parse_int::_Power_help::__valid_digit':'typename _Digit<_Base, _Dig>::__valid' 'std::__parse_int::_Power_help::__valid_digit':'typename _Digit<_Base, _Dig>::__valid' list
| | |                     | `-InitListExpr 0xcdde70 <col:49, col:50> 'void'
| | |                     |-DeclRefExpr 0xcdded8 <col:54> 'unsigned int' NonTypeTemplateParm 0xcdd2a8 '_Base' 'unsigned int'
| | |                     `-IntegerLiteral 0xcddef8 <col:62> 'unsigned long long' 1
| | |-ClassTemplatePartialSpecializationDecl 0xcde520 <line:170:3, line:175:5> line:171:12 struct _Power_help definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument expr
| | | | `-DeclRefExpr 0xcde390 <col:24> 'unsigned int' NonTypeTemplateParm 0xcde298 '_Base' 'unsigned int'
| | | |-TemplateArgument expr
| | | | `-DeclRefExpr 0xcde3b0 <col:31> 'char' NonTypeTemplateParm 0xcde308 '_Dig' 'char'
| | | |-TemplateArgument pack
| | | |-NonTypeTemplateParmDecl 0xcde298 <line:170:12, col:21> col:21 referenced 'unsigned int' depth 0 index 0 _Base
| | | |-NonTypeTemplateParmDecl 0xcde308 <col:28, col:33> col:33 referenced 'char' depth 0 index 1 _Dig
| | | |-CXXRecordDecl 0xcde818 <line:171:5, col:12> col:12 implicit struct _Power_help
| | | |-TypeAliasDecl 0xcdea20 <line:173:7, col:59> col:13 referenced __valid_digit 'typename _Digit<_Base, _Dig>::__valid'
| | | | `-DependentNameType 0xcde9b0 'typename _Digit<_Base, _Dig>::__valid' dependent
| | | `-TypeAliasDecl 0xcdedb8 <line:174:7, col:55> col:13 type '__ull_constant<__valid_digit::value>':'integral_constant<unsigned long long, __valid_digit::value>'
| | |   `-TemplateSpecializationType 0xcded10 '__ull_constant<__valid_digit::value>' sugar dependent alias __ull_constant
| | |     |-TemplateArgument expr
| | |     | `-ImplicitCastExpr 0xcdeb40 <col:35, col:50> 'unsigned long long' <Dependent>
| | |     |   `-DependentScopeDeclRefExpr 0xcdeb08 <col:35, col:50> '<dependent type>' lvalue
| | |     |-TemplateSpecializationType 0xcdec70 'integral_constant<unsigned long long, __valid_digit::value>' dependent integral_constant
| | |     | |-TemplateArgument type 'unsigned long long'
| | |     | `-TemplateArgument expr
| | |     |   `-SubstNonTypeTemplateParmExpr 0xcdebb8 <line:159:66> 'unsigned long long'
| | |     |     `-ImplicitCastExpr 0xcdeb40 <line:174:35, col:50> 'unsigned long long' <Dependent>
| | |     |       `-DependentScopeDeclRefExpr 0xcdeb08 <col:35, col:50> '<dependent type>' lvalue
| | |     `-TemplateSpecializationType 0xcdec70 'integral_constant<unsigned long long, __valid_digit::value>' dependent integral_constant
| | |       |-TemplateArgument type 'unsigned long long'
| | |       `-TemplateArgument expr
| | |         `-SubstNonTypeTemplateParmExpr 0xcdebb8 <line:159:66> 'unsigned long long'
| | |           `-ImplicitCastExpr 0xcdeb40 <line:174:35, col:50> 'unsigned long long' <Dependent>
| | |             `-DependentScopeDeclRefExpr 0xcdeb08 <col:35, col:50> '<dependent type>' lvalue
| | |-ClassTemplateDecl 0xcdefd0 <line:177:3, line:179:7> line:178:12 _Power
| | | |-NonTypeTemplateParmDecl 0xcdee48 <line:177:12, col:21> col:21 referenced 'unsigned int' depth 0 index 0 _Base
| | | |-NonTypeTemplateParmDecl 0xcdeeb8 <col:28, col:36> col:36 referenced 'char' depth 0 index 1 ... _Digs
| | | `-CXXRecordDecl 0xcdef40 <line:178:5, line:179:7> line:178:12 struct _Power definition
| | |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |   | |-MoveConstructor exists simple trivial needs_implicit
| | |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |   | |-MoveAssignment exists simple trivial needs_implicit
| | |   | `-Destructor simple irrelevant trivial needs_implicit
| | |   |-public '_Power_help<_Base, _Digs...>::type'
| | |   `-CXXRecordDecl 0xcdf580 <col:5, col:12> col:12 implicit struct _Power
| | |-ClassTemplatePartialSpecializationDecl 0xcdf7d8 <line:181:3, line:183:7> line:182:12 struct _Power definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__ull_constant<0>':'std::integral_constant<unsigned long long, 0>'
| | | |-TemplateArgument expr
| | | | `-DeclRefExpr 0xcdf6c0 <col:19> 'unsigned int' NonTypeTemplateParm 0xcdf640 '_Base' 'unsigned int'
| | | |-TemplateArgument pack
| | | |-NonTypeTemplateParmDecl 0xcdf640 <line:181:12, col:21> col:21 referenced 'unsigned int' depth 0 index 0 _Base
| | | `-CXXRecordDecl 0xce0498 <line:182:5, col:12> col:12 implicit struct _Power
| | |-ClassTemplateDecl 0xce07d8 <line:187:3, line:198:5> line:188:12 _Number_help
| | | |-NonTypeTemplateParmDecl 0xce0558 <line:187:12, col:21> col:21 referenced 'unsigned int' depth 0 index 0 _Base
| | | |-NonTypeTemplateParmDecl 0xce05d0 <col:28, col:47> col:47 referenced 'unsigned long long' depth 0 index 1 _Pow
| | | |-NonTypeTemplateParmDecl 0xce0640 <col:53, col:58> col:58 referenced 'char' depth 0 index 2 _Dig
| | | |-NonTypeTemplateParmDecl 0xce06b0 <col:64, col:72> col:72 referenced 'char' depth 0 index 3 ... _Digs
| | | `-CXXRecordDecl 0xce0748 <line:188:5, line:198:5> line:188:12 struct _Number_help definition
| | |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |   | |-MoveConstructor exists simple trivial needs_implicit
| | |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |   | |-MoveAssignment exists simple trivial needs_implicit
| | |   | `-Destructor simple irrelevant trivial needs_implicit
| | |   |-CXXRecordDecl 0xce0ba0 <col:5, col:12> col:12 implicit struct _Number_help
| | |   |-TypeAliasDecl 0xce0db8 <line:190:7, col:41> col:13 referenced __digit '_Digit<_Base, _Dig>'
| | |   | `-TemplateSpecializationType 0xce0cd0 '_Digit<_Base, _Dig>' dependent _Digit
| | |   |   |-TemplateArgument expr
| | |   |   | `-DeclRefExpr 0xce0c30 <col:30> 'unsigned int' NonTypeTemplateParm 0xce0558 '_Base' 'unsigned int'
| | |   |   `-TemplateArgument expr
| | |   |     `-DeclRefExpr 0xce0c50 <col:37> 'char' NonTypeTemplateParm 0xce0640 '_Dig' 'char'
| | |   |-TypeAliasDecl 0xce0f30 <line:191:7, col:47> col:13 referenced __valid_digit 'typename __digit::__valid'
| | |   | `-DependentNameType 0xce0ec0 'typename __digit::__valid' dependent
| | |   |-TypeAliasDecl 0xce1370 <line:192:7, line:194:15> line:192:13 referenced __next '_Number_help<_Base, __valid_digit::value ? _Pow / _Base : _Pow, _Digs...>'
| | |   | `-TemplateSpecializationType 0xce1240 '_Number_help<_Base, __valid_digit::value ? _Pow / _Base : _Pow, _Digs...>' dependent _Number_help
| | |   |   |-TemplateArgument expr
| | |   |   | `-DeclRefExpr 0xce0f90 <col:35> 'unsigned int' NonTypeTemplateParm 0xce0558 '_Base' 'unsigned int'
| | |   |   |-TemplateArgument expr
| | |   |   | `-ConditionalOperator 0xce1108 <line:193:7, col:45> '<dependent type>'
| | |   |   |   |-DependentScopeDeclRefExpr 0xce1038 <col:7, col:22> '<dependent type>' lvalue
| | |   |   |   |-BinaryOperator 0xce10c8 <col:30, col:37> 'unsigned long long' '/'
| | |   |   |   | |-DeclRefExpr 0xce1070 <col:30> 'unsigned long long' NonTypeTemplateParm 0xce05d0 '_Pow' 'unsigned long long'
| | |   |   |   | `-ImplicitCastExpr 0xce10b0 <col:37> 'unsigned long long' <IntegralCast>
| | |   |   |   |   `-DeclRefExpr 0xce1090 <col:37> 'unsigned int' NonTypeTemplateParm 0xce0558 '_Base' 'unsigned int'
| | |   |   |   `-DeclRefExpr 0xce10e8 <col:45> 'unsigned long long' NonTypeTemplateParm 0xce05d0 '_Pow' 'unsigned long long'
| | |   |   `-TemplateArgument expr
| | |   |     `-PackExpansionExpr 0xce1158 <line:194:7, col:12> '<dependent type>'
| | |   |       `-DeclRefExpr 0xce1138 <col:7> 'char' NonTypeTemplateParm 0xce06b0 '_Digs' 'char'
| | |   |-TypeAliasDecl 0xce1808 <line:195:7, col:78> col:13 referenced type '__ull_constant<_Pow * __digit::value + __next::type::value>':'integral_constant<unsigned long long, _Pow * __digit::value + __next::type::value>'
| | |   | `-TemplateSpecializationType 0xce1760 '__ull_constant<_Pow * __digit::value + __next::type::value>' sugar dependent alias __ull_constant
| | |   |   |-TemplateArgument expr
| | |   |   | `-ImplicitCastExpr 0xce1570 <col:35, col:73> 'unsigned long long' <Dependent>
| | |   |   |   `-BinaryOperator 0xce1550 <col:35, col:73> '<dependent type>' '+'
| | |   |   |     |-BinaryOperator 0xce1460 <col:35, col:51> '<dependent type>' '*'
| | |   |   |     | |-DeclRefExpr 0xce13d0 <col:35> 'unsigned long long' NonTypeTemplateParm 0xce05d0 '_Pow' 'unsigned long long'
| | |   |   |     | `-DependentScopeDeclRefExpr 0xce1428 <col:42, col:51> '<dependent type>' lvalue
| | |   |   |     `-DependentScopeDeclRefExpr 0xce1518 <col:59, col:73> '<dependent type>' lvalue
| | |   |   |-TemplateSpecializationType 0xce16c0 'integral_constant<unsigned long long, _Pow * __digit::value + __next::type::value>' dependent integral_constant
| | |   |   | |-TemplateArgument type 'unsigned long long'
| | |   |   | `-TemplateArgument expr
| | |   |   |   `-SubstNonTypeTemplateParmExpr 0xce15e8 <line:159:66> 'unsigned long long'
| | |   |   |     `-ImplicitCastExpr 0xce1570 <line:195:35, col:73> 'unsigned long long' <Dependent>
| | |   |   |       `-BinaryOperator 0xce1550 <col:35, col:73> '<dependent type>' '+'
| | |   |   |         |-BinaryOperator 0xce1460 <col:35, col:51> '<dependent type>' '*'
| | |   |   |         | |-DeclRefExpr 0xce13d0 <col:35> 'unsigned long long' NonTypeTemplateParm 0xce05d0 '_Pow' 'unsigned long long'
| | |   |   |         | `-DependentScopeDeclRefExpr 0xce1428 <col:42, col:51> '<dependent type>' lvalue
| | |   |   |         `-DependentScopeDeclRefExpr 0xce1518 <col:59, col:73> '<dependent type>' lvalue
| | |   |   `-TemplateSpecializationType 0xce16c0 'integral_constant<unsigned long long, _Pow * __digit::value + __next::type::value>' dependent integral_constant
| | |   |     |-TemplateArgument type 'unsigned long long'
| | |   |     `-TemplateArgument expr
| | |   |       `-SubstNonTypeTemplateParmExpr 0xce15e8 <line:159:66> 'unsigned long long'
| | |   |         `-ImplicitCastExpr 0xce1570 <line:195:35, col:73> 'unsigned long long' <Dependent>
| | |   |           `-BinaryOperator 0xce1550 <col:35, col:73> '<dependent type>' '+'
| | |   |             |-BinaryOperator 0xce1460 <col:35, col:51> '<dependent type>' '*'
| | |   |             | |-DeclRefExpr 0xce13d0 <col:35> 'unsigned long long' NonTypeTemplateParm 0xce05d0 '_Pow' 'unsigned long long'
| | |   |             | `-DependentScopeDeclRefExpr 0xce1428 <col:42, col:51> '<dependent type>' lvalue
| | |   |             `-DependentScopeDeclRefExpr 0xce1518 <col:59, col:73> '<dependent type>' lvalue
| | |   `-StaticAssertDecl 0xce1ae8 <line:196:7, line:197:59> line:196:7
| | |     |-BinaryOperator 0xce1a00 <col:21, col:54> '<dependent type>' '=='
| | |     | |-ParenExpr 0xce1970 <col:21, col:40> '<dependent type>'
| | |     | | `-BinaryOperator 0xce1950 <col:22, col:36> '<dependent type>' '/'
| | |     | |   |-DependentScopeDeclRefExpr 0xce18f8 <col:22, col:28> '<dependent type>' lvalue
| | |     | |   `-DeclRefExpr 0xce1930 <col:36> 'unsigned long long' NonTypeTemplateParm 0xce05d0 '_Pow' 'unsigned long long'
| | |     | `-DependentScopeDeclRefExpr 0xce19c8 <col:45, col:54> '<dependent type>' lvalue
| | |     `-StringLiteral 0xce1a98 <line:197:7> 'const char [51]' lvalue "integer literal does not fit in unsigned long long"
| | |-ClassTemplatePartialSpecializationDecl 0xce20b8 <line:201:3, line:204:7> line:202:12 struct _Number_help definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '_Number_help<_Base, _Pow, _Dig, _Digs...>'
| | | |-TemplateArgument expr
| | | | `-DeclRefExpr 0xce1d48 <col:25> 'unsigned int' NonTypeTemplateParm 0xce1b58 '_Base' 'unsigned int'
| | | |-TemplateArgument expr
| | | | `-DeclRefExpr 0xce1d68 <col:32> 'unsigned long long' NonTypeTemplateParm 0xce1bd0 '_Pow' 'unsigned long long'
| | | |-TemplateArgument integral 39
| | | |-TemplateArgument pack
| | | | |-TemplateArgument expr
| | | | | `-DeclRefExpr 0xce1da0 <col:44> 'char' NonTypeTemplateParm 0xce1c40 '_Dig' 'char'
| | | | `-TemplateArgument expr
| | | |   `-PackExpansionExpr 0xce1e20 <col:50, col:55> 'char'
| | | |     `-DeclRefExpr 0xce1dc0 <col:50> 'char' NonTypeTemplateParm 0xce1cb0 '_Digs' 'char'
| | | |-NonTypeTemplateParmDecl 0xce1b58 <line:201:12, col:21> col:21 referenced 'unsigned int' depth 0 index 0 _Base
| | | |-NonTypeTemplateParmDecl 0xce1bd0 <col:28, col:47> col:47 referenced 'unsigned long long' depth 0 index 1 _Pow
| | | |-NonTypeTemplateParmDecl 0xce1c40 <col:53, col:58> col:58 referenced 'char' depth 0 index 2 _Dig
| | | |-NonTypeTemplateParmDecl 0xce1cb0 <col:64, col:71> col:71 referenced 'char' depth 0 index 3 ... _Digs
| | | `-CXXRecordDecl 0xce2690 <line:202:5, col:12> col:12 implicit struct _Number_help
| | |-ClassTemplatePartialSpecializationDecl 0xce2a88 <line:207:3, line:211:5> line:208:12 struct _Number_help definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument expr
| | | | `-DeclRefExpr 0xce2848 <col:25> 'unsigned int' NonTypeTemplateParm 0xce2750 '_Base' 'unsigned int'
| | | |-TemplateArgument integral 1
| | | |-TemplateArgument expr
| | | | `-DeclRefExpr 0xce2888 <col:38> 'char' NonTypeTemplateParm 0xce27c0 '_Dig' 'char'
| | | |-TemplateArgument pack
| | | |-NonTypeTemplateParmDecl 0xce2750 <line:207:12, col:21> col:21 referenced 'unsigned int' depth 0 index 0 _Base
| | | |-NonTypeTemplateParmDecl 0xce27c0 <col:28, col:33> col:33 referenced 'char' depth 0 index 1 _Dig
| | | |-CXXRecordDecl 0xce2d88 <line:208:5, col:12> col:12 implicit struct _Number_help
| | | `-TypeAliasDecl 0xce31f8 <line:210:7, col:61> col:13 type '__ull_constant<_Digit<_Base, _Dig>::value>':'integral_constant<unsigned long long, _Digit<_Base, _Dig>::value>'
| | |   `-TemplateSpecializationType 0xce3150 '__ull_constant<_Digit<_Base, _Dig>::value>' sugar dependent alias __ull_constant
| | |     |-TemplateArgument expr
| | |     | `-ImplicitCastExpr 0xce2f90 <col:35, col:56> 'unsigned long long' <Dependent>
| | |     |   `-DependentScopeDeclRefExpr 0xce2f58 <col:35, col:56> '<dependent type>' lvalue
| | |     |-TemplateSpecializationType 0xce30b0 'integral_constant<unsigned long long, _Digit<_Base, _Dig>::value>' dependent integral_constant
| | |     | |-TemplateArgument type 'unsigned long long'
| | |     | `-TemplateArgument expr
| | |     |   `-SubstNonTypeTemplateParmExpr 0xce3008 <line:159:66> 'unsigned long long'
| | |     |     `-ImplicitCastExpr 0xce2f90 <line:210:35, col:56> 'unsigned long long' <Dependent>
| | |     |       `-DependentScopeDeclRefExpr 0xce2f58 <col:35, col:56> '<dependent type>' lvalue
| | |     `-TemplateSpecializationType 0xce30b0 'integral_constant<unsigned long long, _Digit<_Base, _Dig>::value>' dependent integral_constant
| | |       |-TemplateArgument type 'unsigned long long'
| | |       `-TemplateArgument expr
| | |         `-SubstNonTypeTemplateParmExpr 0xce3008 <line:159:66> 'unsigned long long'
| | |           `-ImplicitCastExpr 0xce2f90 <line:210:35, col:56> 'unsigned long long' <Dependent>
| | |             `-DependentScopeDeclRefExpr 0xce2f58 <col:35, col:56> '<dependent type>' lvalue
| | |-ClassTemplateDecl 0xce3410 <line:213:3, line:216:7> line:214:12 _Number
| | | |-NonTypeTemplateParmDecl 0xce3288 <line:213:12, col:21> col:21 referenced 'unsigned int' depth 0 index 0 _Base
| | | |-NonTypeTemplateParmDecl 0xce32f8 <col:28, col:36> col:36 referenced 'char' depth 0 index 1 ... _Digs
| | | `-CXXRecordDecl 0xce3380 <line:214:5, line:216:7> line:214:12 struct _Number definition
| | |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |   | |-MoveConstructor exists simple trivial needs_implicit
| | |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |   | |-MoveAssignment exists simple trivial needs_implicit
| | |   | `-Destructor simple irrelevant trivial needs_implicit
| | |   |-public '_Number_help<_Base, _Power<_Base, _Digs...>::value, _Digs...>::type'
| | |   `-CXXRecordDecl 0xce3c10 <col:5, col:12> col:12 implicit struct _Number
| | |-ClassTemplatePartialSpecializationDecl 0xce50b8 <line:218:3, line:221:7> line:219:12 struct _Number definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '__ull_constant<0>':'std::integral_constant<unsigned long long, 0>'
| | | |-TemplateArgument expr
| | | | `-DeclRefExpr 0xce3d50 <col:20> 'unsigned int' NonTypeTemplateParm 0xce3cd0 '_Base' 'unsigned int'
| | | |-TemplateArgument pack
| | | |-NonTypeTemplateParmDecl 0xce3cd0 <line:218:12, col:21> col:21 referenced 'unsigned int' depth 0 index 0 _Base
| | | `-CXXRecordDecl 0xce55a8 <line:219:5, col:12> col:12 implicit struct _Number
| | |-ClassTemplateDecl 0xce5770 <line:225:3, line:226:12> col:12 _Parse_int
| | | |-NonTypeTemplateParmDecl 0xce5660 <line:225:12, col:20> col:20 'char' depth 0 index 0 ... _Digs
| | | `-CXXRecordDecl 0xce56e0 <line:226:5, col:12> col:12 struct _Parse_int
| | |-ClassTemplatePartialSpecializationDecl 0xce5ce0 <line:228:3, line:231:7> line:229:12 struct _Parse_int definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '_Number<2U, _Digs...>::type'
| | | |-TemplateArgument pack
| | | | |-TemplateArgument integral 48
| | | | |-TemplateArgument integral 98
| | | | `-TemplateArgument expr
| | | |   `-PackExpansionExpr 0xce5b08 <col:33, col:38> 'char'
| | | |     `-DeclRefExpr 0xce5a88 <col:33> 'char' NonTypeTemplateParm 0xce59d8 '_Digs' 'char'
| | | |-NonTypeTemplateParmDecl 0xce59d8 <line:228:12, col:20> col:20 referenced 'char' depth 0 index 0 ... _Digs
| | | `-CXXRecordDecl 0xce6340 <line:229:5, col:12> col:12 implicit struct _Parse_int
| | |-ClassTemplatePartialSpecializationDecl 0xce6700 <line:233:3, line:236:7> line:234:12 struct _Parse_int definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '_Number<2U, _Digs...>::type'
| | | |-TemplateArgument pack
| | | | |-TemplateArgument integral 48
| | | | |-TemplateArgument integral 66
| | | | `-TemplateArgument expr
| | | |   `-PackExpansionExpr 0xce6528 <col:33, col:38> 'char'
| | | |     `-DeclRefExpr 0xce64a8 <col:33> 'char' NonTypeTemplateParm 0xce63f8 '_Digs' 'char'
| | | |-NonTypeTemplateParmDecl 0xce63f8 <line:233:12, col:20> col:20 referenced 'char' depth 0 index 0 ... _Digs
| | | `-CXXRecordDecl 0xce6cb0 <line:234:5, col:12> col:12 implicit struct _Parse_int
| | |-ClassTemplatePartialSpecializationDecl 0xce7070 <line:238:3, line:241:7> line:239:12 struct _Parse_int definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '_Number<16U, _Digs...>::type'
| | | |-TemplateArgument pack
| | | | |-TemplateArgument integral 48
| | | | |-TemplateArgument integral 120
| | | | `-TemplateArgument expr
| | | |   `-PackExpansionExpr 0xce6e98 <col:33, col:38> 'char'
| | | |     `-DeclRefExpr 0xce6e18 <col:33> 'char' NonTypeTemplateParm 0xce6d68 '_Digs' 'char'
| | | |-NonTypeTemplateParmDecl 0xce6d68 <line:238:12, col:20> col:20 referenced 'char' depth 0 index 0 ... _Digs
| | | `-CXXRecordDecl 0xce76d0 <line:239:5, col:12> col:12 implicit struct _Parse_int
| | |-ClassTemplatePartialSpecializationDecl 0xce7a90 <line:243:3, line:246:7> line:244:12 struct _Parse_int definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '_Number<16U, _Digs...>::type'
| | | |-TemplateArgument pack
| | | | |-TemplateArgument integral 48
| | | | |-TemplateArgument integral 88
| | | | `-TemplateArgument expr
| | | |   `-PackExpansionExpr 0xce78b8 <col:33, col:38> 'char'
| | | |     `-DeclRefExpr 0xce7838 <col:33> 'char' NonTypeTemplateParm 0xce7788 '_Digs' 'char'
| | | |-NonTypeTemplateParmDecl 0xce7788 <line:243:12, col:20> col:20 referenced 'char' depth 0 index 0 ... _Digs
| | | `-CXXRecordDecl 0xce8040 <line:244:5, col:12> col:12 implicit struct _Parse_int
| | |-ClassTemplatePartialSpecializationDecl 0xce8360 <line:248:3, line:251:7> line:249:12 struct _Parse_int definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public '_Number<8U, _Digs...>::type'
| | | |-TemplateArgument pack
| | | | |-TemplateArgument integral 48
| | | | `-TemplateArgument expr
| | | |   `-PackExpansionExpr 0xce81f0 <col:28, col:33> 'char'
| | | |     `-DeclRefExpr 0xce8190 <col:28> 'char' NonTypeTemplateParm 0xce80f8 '_Digs' 'char'
| | | |-NonTypeTemplateParmDecl 0xce80f8 <line:248:12, col:20> col:20 referenced 'char' depth 0 index 0 ... _Digs
| | | `-CXXRecordDecl 0xce8920 <line:249:5, col:12> col:12 implicit struct _Parse_int
| | `-ClassTemplateDecl 0xce8ae8 prev 0xce5770 <line:253:3, line:256:7> line:254:12 _Parse_int
| |   |-NonTypeTemplateParmDecl 0xce89d8 <line:253:12, col:20> col:20 referenced 'char' depth 0 index 0 ... _Digs
| |   `-CXXRecordDecl 0xce8a58 prev 0xce56e0 <line:254:5, line:256:7> line:254:12 struct _Parse_int definition
| |     |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |     | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |     | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |     | |-MoveConstructor exists simple trivial needs_implicit
| |     | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |     | |-MoveAssignment exists simple trivial needs_implicit
| |     | `-Destructor simple irrelevant trivial needs_implicit
| |     |-public '_Number<10U, _Digs...>::type'
| |     `-CXXRecordDecl 0xce8e90 <col:5, col:12> col:12 implicit struct _Parse_int
| `-NamespaceDecl 0xce8f38 <line:261:1, line:287:1> line:261:11 __select_int
|   |-ClassTemplateDecl 0xceb850 <line:263:3, line:264:12> col:12 _Select_int_base
|   | |-NonTypeTemplateParmDecl 0xce8fc0 <line:263:12, col:31> col:31 'unsigned long long' depth 0 index 0 _Val
|   | |-TemplateTypeParmDecl 0xceb720 <col:37, col:49> col:49 typename depth 0 index 1 ... _Ints
|   | `-CXXRecordDecl 0xceb7c0 <line:264:5, col:12> col:12 struct _Select_int_base
|   |-ClassTemplatePartialSpecializationDecl 0xcebed8 <line:266:3, line:271:7> line:267:12 struct _Select_int_base definition
|   | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-public 'conditional_t<(_Val <= std::numeric_limits<_IntType>::max()), integral_constant<_IntType, _Val>, _Select_int_base<_Val, _Ints...> >':'typename conditional<(_Val <= std::numeric_limits<_IntType>::max()), integral_constant<type-parameter-0-1, _Val>, _Select_int_base<_Val, type-parameter-0-2...> >::type'
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 0xcebc98 <col:29> 'unsigned long long' NonTypeTemplateParm 0xcebb10 '_Val' 'unsigned long long'
|   | |-TemplateArgument pack
|   | | |-TemplateArgument type 'type-parameter-0-1'
|   | | `-TemplateArgument type 'type-parameter-0-2...'
|   | |-NonTypeTemplateParmDecl 0xcebb10 <line:266:12, col:31> col:31 referenced 'unsigned long long' depth 0 index 0 _Val
|   | |-TemplateTypeParmDecl 0xcebb70 <col:37, col:46> col:46 referenced typename depth 0 index 1 _IntType
|   | |-TemplateTypeParmDecl 0xcebbe8 <col:56, col:68> col:68 referenced typename depth 0 index 2 ... _Ints
|   | `-CXXRecordDecl 0xcecc08 <line:267:5, col:12> col:12 implicit struct _Select_int_base
|   |-ClassTemplatePartialSpecializationDecl 0xcece68 <line:273:3, line:275:7> line:274:12 struct _Select_int_base definition
|   | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument expr
|   | | `-DeclRefExpr 0xcecd48 <col:29> 'unsigned long long' NonTypeTemplateParm 0xceccc8 '_Val' 'unsigned long long'
|   | |-TemplateArgument pack
|   | |-NonTypeTemplateParmDecl 0xceccc8 <line:273:12, col:31> col:31 referenced 'unsigned long long' depth 0 index 0 _Val
|   | `-CXXRecordDecl 0xced0d8 <line:274:5, col:12> col:12 implicit struct _Select_int_base
|   `-TypeAliasTemplateDecl 0xced880 <line:277:3, line:285:10> line:278:5 _Select_int
|     |-NonTypeTemplateParmDecl 0xced190 <line:277:12, col:20> col:20 referenced 'char' depth 0 index 0 ... _Digs
|     `-TypeAliasDecl 0xced820 <line:278:5, line:285:10> line:278:11 _Select_int 'typename _Select_int_base<__parse_int::_Parse_int<_Digs...>::value, unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>::type'
|       `-DependentNameType 0xced7b0 'typename _Select_int_base<__parse_int::_Parse_int<_Digs...>::value, unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>::type' dependent
|-NamespaceDecl 0xced8f8 prev 0xcccf80 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/chrono:44:1, line:981:1> line:44:11 std
| |-original Namespace 0x81a0b0 'std'
| |-VisibilityAttr 0xced968 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9/bits/c++config.h:70:49, col:67> Default
| |-NamespaceDecl 0xced9c0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/chrono:59:3, line:66:3> line:59:13 chrono
| | |-ClassTemplateDecl 0xcede20 <line:61:5, line:62:14> col:14 duration
| | | |-TemplateTypeParmDecl 0xceda30 <line:61:14, col:23> col:23 typename depth 0 index 0 _Rep
| | | |-TemplateTypeParmDecl 0xcedcf0 <col:29, <scratch space>:128:1> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/chrono:61:38 typename depth 0 index 1 _Period
| | | | `-TemplateArgument type 'ratio<1>':'std::ratio<1, 1>'
| | | |-CXXRecordDecl 0xcedd90 <line:62:7, col:14> col:14 struct duration
| | | |-ClassTemplateSpecializationDecl 0xd1d000 <line:299:5, line:444:7> line:300:14 struct duration definition
| | | | |-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal has_user_declared_ctor has_constexpr_non_copy_move_ctor
| | | | | |-DefaultConstructor exists trivial constexpr
| | | | | |-CopyConstructor trivial user_declared has_const_param implicit_has_const_param
| | | | | |-MoveConstructor
| | | | | |-CopyAssignment trivial has_const_param user_declared implicit_has_const_param
| | | | | |-MoveAssignment
| | | | | `-Destructor irrelevant trivial user_declared
| | | | |-TemplateArgument type 'long'
| | | | |-TemplateArgument type 'std::ratio<1, 1000000000>'
| | | | |-CXXRecordDecl 0xd298f0 prev 0xd1d000 <col:7, col:14> col:14 implicit struct duration
| | | | |-AccessSpecDecl 0xd29980 <line:302:7, col:14> col:7 private
| | | | |-TypeAliasTemplateDecl 0xd29b30 <line:303:2, line:304:52> col:4 __is_float
| | | | | |-TemplateTypeParmDecl 0xd299a8 <line:303:11, col:20> col:20 typename depth 0 index 0 _Rep2
| | | | | `-TypeAliasDecl 0xd29ad0 <line:304:4, col:52> col:10 __is_float 'treat_as_floating_point<_Rep2>'
| | | | |   `-TemplateSpecializationType 0xd29a60 'treat_as_floating_point<_Rep2>' dependent treat_as_floating_point
| | | | |     `-TemplateArgument type '_Rep2'
| | | | |-TypeAliasTemplateDecl 0xd2a328 <line:307:2, line:309:65> line:308:4 __is_harmonic
| | | | | |-TemplateTypeParmDecl 0xd29b98 <line:307:11, col:20> col:20 typename depth 0 index 0 _Period2
| | | | | `-TypeAliasDecl 0xd2a2c8 <line:308:4, line:309:65> line:308:10 __is_harmonic '__bool_constant<ratio_divide<_Period2, ratio<1, 1000000000> >::den == 1>':'integral_constant<bool, ratio_divide<_Period2, ratio<1, 1000000000> >::den == 1>'
| | | | |   `-TemplateSpecializationType 0xd2a250 '__bool_constant<ratio_divide<_Period2, ratio<1, 1000000000> >::den == 1>' sugar dependent alias __bool_constant
| | | | |     |-TemplateArgument expr
| | | | |     | `-ImplicitCastExpr 0xd2a088 <line:309:24, col:64> 'bool' <Dependent>
| | | | |     |   `-BinaryOperator 0xd2a068 <col:24, col:64> '<dependent type>' '=='
| | | | |     |     |-DependentScopeDeclRefExpr 0xd2a030 <col:24, col:57> '<dependent type>' lvalue
| | | | |     |     `-IntegerLiteral 0xd01ba8 <col:64> 'int' 1
| | | | |     |-TemplateSpecializationType 0xd2a1b0 'integral_constant<bool, ratio_divide<_Period2, ratio<1, 1000000000> >::den == 1>' dependent integral_constant
| | | | |     | |-TemplateArgument type 'bool'
| | | | |     | `-TemplateArgument expr
| | | | |     |   `-SubstNonTypeTemplateParmExpr 0xd2a0f8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/type_traits:81:53> 'bool'
| | | | |     |     `-ImplicitCastExpr 0xd2a088 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/chrono:309:24, col:64> 'bool' <Dependent>
| | | | |     |       `-BinaryOperator 0xd2a068 <col:24, col:64> '<dependent type>' '=='
| | | | |     |         |-DependentScopeDeclRefExpr 0xd2a030 <col:24, col:57> '<dependent type>' lvalue
| | | | |     |         `-IntegerLiteral 0xd01ba8 <col:64> 'int' 1
| | | | |     `-TemplateSpecializationType 0xd2a1b0 'integral_constant<bool, ratio_divide<_Period2, ratio<1, 1000000000> >::den == 1>' dependent integral_constant
| | | | |       |-TemplateArgument type 'bool'
| | | | |       `-TemplateArgument expr
| | | | |         `-SubstNonTypeTemplateParmExpr 0xd2a0f8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/type_traits:81:53> 'bool'
| | | | |           `-ImplicitCastExpr 0xd2a088 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/chrono:309:24, col:64> 'bool' <Dependent>
| | | | |             `-BinaryOperator 0xd2a068 <col:24, col:64> '<dependent type>' '=='
| | | | |               |-DependentScopeDeclRefExpr 0xd2a030 <col:24, col:57> '<dependent type>' lvalue
| | | | |               `-IntegerLiteral 0xd01ba8 <col:64> 'int' 1
| | | | |-AccessSpecDecl 0xd2a390 <line:311:7, col:13> col:7 public
| | | | |-TypedefDecl 0xd2a3f8 <line:313:2, col:20> col:20 referenced rep 'long':'long'
| | | | | `-SubstTemplateTypeParmType 0xd2a3c0 'long' sugar
| | | | |   |-TemplateTypeParmType 0xd011b0 '_Rep' dependent depth 0 index 0
| | | | |   | `-TemplateTypeParm 0xd01158 '_Rep'
| | | | |   `-BuiltinType 0x7db3a0 'long'
| | | | |-TypedefDecl 0xd2a460 <line:314:2, col:23> col:23 referenced period 'std::ratio<1, 1000000000>':'std::ratio<1, 1000000000>'
| | | | | `-SubstTemplateTypeParmType 0xd29c50 'std::ratio<1, 1000000000>' sugar
| | | | |   |-TemplateTypeParmType 0xd01230 '_Period' dependent depth 0 index 1
| | | | |   | `-TemplateTypeParm 0xd011d8 '_Period'
| | | | |   `-RecordType 0xc4c1d0 'std::ratio<1, 1000000000>'
| | | | |     `-ClassTemplateSpecialization 0xc4c0d0 'ratio'
| | | | |-StaticAssertDecl 0xd2a888 <line:316:2, col:71> col:2
| | | | | |-UnaryOperator 0xd2a850 <col:16, col:38> 'bool' prefix '!' cannot overflow
| | | | | | `-ImplicitCastExpr 0xd2a838 <col:17, col:38> 'bool':'bool' <LValueToRValue>
| | | | | |   `-DeclRefExpr 0xd2a808 <col:17, col:38> 'const bool':'const bool' lvalue Var 0xb7db88 'value' 'const bool':'const bool' non_odr_use_constant
| | | | | `-StringLiteral 0xd02198 <col:45> 'const char [25]' lvalue "rep cannot be a duration"
| | | | |-StaticAssertDecl 0xd2ae88 <line:317:2, line:318:51> line:317:2
| | | | | |-ImplicitCastExpr 0xd2ae50 <col:16, col:37> 'bool':'bool' <LValueToRValue>
| | | | | | `-DeclRefExpr 0xd2ae20 <col:16, col:37> 'const bool':'const bool' lvalue Var 0xad7678 'value' 'const bool':'const bool' non_odr_use_constant
| | | | | `-StringLiteral 0xd023c8 <line:318:9> 'const char [41]' lvalue "period must be a specialization of ratio"
| | | | |-StaticAssertDecl 0xd2f7e0 <line:319:2, col:59> col:2
| | | | | |-BinaryOperator 0xd2f7a0 <col:16, col:31> 'bool' '>'
| | | | | | |-ImplicitCastExpr 0xd2f770 <col:16, col:25> 'intmax_t':'long' <LValueToRValue>
| | | | | | | `-DeclRefExpr 0xd2f740 <col:16, col:25> 'const intmax_t':'const long' lvalue Var 0xd2f0a0 'num' 'const intmax_t':'const long' non_odr_use_constant
| | | | | | `-ImplicitCastExpr 0xd2f788 <col:31> 'long' <IntegralCast>
| | | | | |   `-IntegerLiteral 0xd024d0 <col:31> 'int' 0
| | | | | `-StringLiteral 0xd02588 <col:34> 'const char [24]' lvalue "period must be positive"
| | | | |-CXXConstructorDecl 0xd2f858 <line:322:2, col:31> col:12 duration 'void ()' default trivial noexcept-unevaluated 0xd2f858
| | | | |-CXXConstructorDecl 0xd2fa28 <line:324:2, col:36> col:2 used constexpr duration 'void (const std::chrono::duration<long, std::ratio<1, 1000000000> > &) noexcept' default trivial
| | | | | |-ParmVarDecl 0xd2f948 <col:11, col:25> col:26 used 'const std::chrono::duration<long, std::ratio<1, 1000000000> > &'
| | | | | |-CXXCtorInitializer Field 0xd34488 '__r' 'std::chrono::duration<long, std::ratio<1, 1000000000> >::rep':'long'
| | | | | | `-ImplicitCastExpr 0xd4e708 <col:2> 'std::chrono::duration<long, std::ratio<1, 1000000000> >::rep':'long' <LValueToRValue>
| | | | | |   `-MemberExpr 0xd4e6c0 <col:2> 'const std::chrono::duration<long, std::ratio<1, 1000000000> >::rep':'const long' lvalue .__r 0xd34488
| | | | | |     `-DeclRefExpr 0xd4e6a0 <col:2> 'const std::chrono::duration<long, std::ratio<1, 1000000000> >' lvalue ParmVar 0xd2f948 '' 'const std::chrono::duration<long, std::ratio<1, 1000000000> > &'
| | | | | `-CompoundStmt 0xd4e750 <col:36>
| | | | |-FunctionTemplateDecl 0xd30a40 <line:328:2, line:332:37> line:331:23 duration
| | | | | |-TemplateTypeParmDecl 0xd2fae8 <line:328:11, col:20> col:20 typename depth 0 index 0 _Rep2
| | | | | |-TemplateTypeParmDecl 0xd2fb68 <col:27, <scratch space>:140:1> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/chrono:328:36 typename depth 0 index 1
| | | | | | `-TemplateArgument type '_Require<is_convertible<const _Rep2 &, std::chrono::duration<long, std::ratio<1, 1000000000> >::rep>, __or_<__is_float<std::chrono::duration<long, std::ratio<1, 1000000000> >::rep>, __not_<__is_float<_Rep2> > > >':'typename enable_if<__and_<is_convertible<const type-parameter-0-0 &, long>, __or_<treat_as_floating_point<long>, __not_<treat_as_floating_point<type-parameter-0-0> > > >::value>::type'
| | | | | |-CXXConstructorDecl 0xd30998 <line:331:4, line:332:37> line:331:23 constexpr duration 'void (const _Rep2 &)'
| | | | | | `-ParmVarDecl 0xd308b0 <col:32, col:45> col:45 __rep 'const _Rep2 &'
| | | | | `-CXXConstructorDecl 0xd44b78 <col:4, line:332:37> line:331:23 used constexpr duration 'void (const long &)'
| | | | |   |-TemplateArgument type 'long'
| | | | |   |-TemplateArgument type 'void'
| | | | |   |-ParmVarDecl 0xd44a88 <col:32, col:45> col:45 used __rep 'const long &'
| | | | |   |-CXXCtorInitializer Field 0xd34488 '__r' 'std::chrono::duration<long, std::ratio<1, 1000000000> >::rep':'long'
| | | | |   | `-CXXStaticCastExpr 0xd44da8 <line:332:10, col:32> 'std::chrono::duration<long, std::ratio<1, 1000000000> >::rep':'long' static_cast<std::chrono::duration<long, struct std::ratio<1, 1000000000> >::rep> <NoOp>
| | | | |   |   `-ImplicitCastExpr 0xd44d90 <col:27> 'long':'long' <LValueToRValue> part_of_explicit_cast
| | | | |   |     `-DeclRefExpr 0xd44d70 <col:27> 'const long':'const long' lvalue ParmVar 0xd44a88 '__rep' 'const long &'
| | | | |   `-CompoundStmt 0xd076b8 <col:35, col:37>
| | | | |-FunctionTemplateDecl 0xd324a0 <line:334:2, line:339:50> line:338:14 duration
| | | | | |-TemplateTypeParmDecl 0xd30b20 <line:334:11, col:20> col:20 typename depth 0 index 0 _Rep2
| | | | | |-TemplateTypeParmDecl 0xd30fc8 <col:27, col:36> col:36 typename depth 0 index 1 _Period2
| | | | | |-TemplateTypeParmDecl 0xd31048 <col:46, <scratch space>:145:1> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/chrono:334:55 typename depth 0 index 2
| | | | | | `-TemplateArgument type '_Require<__or_<__is_float<std::chrono::duration<long, std::ratio<1, 1000000000> >::rep>, __and_<__is_harmonic<_Period2>, __not_<__is_float<_Rep2> > > > >':'typename enable_if<__and_<__or_<treat_as_floating_point<long>, __and_<integral_constant<bool, ratio_divide<type-parameter-0-1, ratio<1, 1000000000> >::den == 1>, __not_<treat_as_floating_point<type-parameter-0-0> > > > >::value>::type'
| | | | | |-CXXConstructorDecl 0xd323f8 <line:338:4, line:339:50> line:338:14 constexpr duration 'void (const duration<_Rep2, _Period2> &)'
| | | | | | `-ParmVarDecl 0xd322e8 <col:23, col:56> col:56 __d 'const duration<_Rep2, _Period2> &'
| | | | | `-CXXConstructorDecl 0xd4e508 <col:4, line:339:50> line:338:14 constexpr duration 'void (const duration<long, std::ratio<1, 1000000000> > &)'
| | | | |   |-TemplateArgument type 'long'
| | | | |   |-TemplateArgument type 'std::ratio<1, 1000000000>'
| | | | |   |-TemplateArgument type 'void'
| | | | |   `-ParmVarDecl 0xd4e448 <col:23, col:56> col:56 __d 'const duration<long, std::ratio<1, 1000000000> > &'
| | | | |-CXXDestructorDecl 0xd325a8 <line:341:2, col:22> col:2 referenced ~duration 'void () noexcept' default trivial
| | | | |-CXXMethodDecl 0xd32798 <line:342:2, col:47> col:12 used constexpr operator= 'std::chrono::duration<long, std::ratio<1, 1000000000> > &(const std::chrono::duration<long, std::ratio<1, 1000000000> > &) noexcept' default trivial
| | | | | |-ParmVarDecl 0xd326d8 <col:22, col:36> col:37 used 'const std::chrono::duration<long, std::ratio<1, 1000000000> > &'
| | | | | `-CompoundStmt 0xe757f0 <col:47>
| | | | |   |-BinaryOperator 0xe75798 <col:47> 'std::chrono::duration<long, std::ratio<1, 1000000000> >::rep':'long' lvalue '='
| | | | |   | |-MemberExpr 0xe75700 <col:47> 'std::chrono::duration<long, std::ratio<1, 1000000000> >::rep':'long' lvalue ->__r 0xd34488
| | | | |   | | `-CXXThisExpr 0xe756f0 <col:47> 'std::chrono::duration<long, std::ratio<1, 1000000000> > *' this
| | | | |   | `-ImplicitCastExpr 0xe75780 <col:47> 'std::chrono::duration<long, std::ratio<1, 1000000000> >::rep':'long' <LValueToRValue>
| | | | |   |   `-MemberExpr 0xe75750 <col:47> 'const std::chrono::duration<long, std::ratio<1, 1000000000> >::rep':'const long' lvalue .__r 0xd34488
| | | | |   |     `-DeclRefExpr 0xe75730 <col:47> 'const std::chrono::duration<long, std::ratio<1, 1000000000> >' lvalue ParmVar 0xd326d8 '' 'const std::chrono::duration<long, std::ratio<1, 1000000000> > &'
| | | | |   `-ReturnStmt 0xe757e0 <col:47>
| | | | |     `-UnaryOperator 0xe757c8 <col:47> 'std::chrono::duration<long, std::ratio<1, 1000000000> >' lvalue prefix '*' cannot overflow
| | | | |       `-CXXThisExpr 0xe757b8 <col:47> 'std::chrono::duration<long, std::ratio<1, 1000000000> > *' this
| | | | |-CXXMethodDecl 0xd32898 <line:345:2, line:347:16> line:346:2 used constexpr count 'std::chrono::duration<long, std::ratio<1, 1000000000> >::rep () const'
| | | | | `-CompoundStmt 0xd662e0 <line:347:2, col:16>
| | | | |   `-ReturnStmt 0xd662d0 <col:4, col:11>
| | | | |     `-ImplicitCastExpr 0xd662b8 <col:11> 'std::chrono::duration<long, std::ratio<1, 1000000000> >::rep':'long' <LValueToRValue>
| | | | |       `-MemberExpr 0xd66288 <col:11> 'const std::chrono::duration<long, std::ratio<1, 1000000000> >::rep':'const long' lvalue ->__r 0xd34488
| | | | |         `-CXXThisExpr 0xd66248 <col:11> 'const std::chrono::duration<long, std::ratio<1, 1000000000> > *' implicit this
| | | | |-CXXMethodDecl 0xd32998 <line:350:2, line:352:18> line:351:2 constexpr operator+ 'std::chrono::duration<long, std::ratio<1, 1000000000> > () const'
| | | | |-CXXMethodDecl 0xd32a68 <line:354:2, line:356:27> line:355:2 constexpr operator- 'std::chrono::duration<long, std::ratio<1, 1000000000> > () const'
| | | | |-CXXMethodDecl 0xd32b68 <line:358:23, line:363:2> line:359:2 operator++ 'std::chrono::duration<long, std::ratio<1, 1000000000> > &()'
| | | | |-CXXMethodDecl 0xd32cd8 <line:365:23, line:367:28> line:366:2 operator++ 'std::chrono::duration<long, std::ratio<1, 1000000000> > (int)'
| | | | | `-ParmVarDecl 0xd32c18 <col:13> col:16 'int'
| | | | |-CXXMethodDecl 0xd32db0 <line:369:23, line:374:2> line:370:2 operator-- 'std::chrono::duration<long, std::ratio<1, 1000000000> > &()'
| | | | |-CXXMethodDecl 0xd32ef0 <line:376:23, line:378:28> line:377:2 operator-- 'std::chrono::duration<long, std::ratio<1, 1000000000> > (int)'
| | | | | `-ParmVarDecl 0xd32e60 <col:13> col:16 'int'
| | | | |-CXXMethodDecl 0xd33048 <line:380:23, line:385:2> line:381:2 operator+= 'std::chrono::duration<long, std::ratio<1, 1000000000> > &(const std::chrono::duration<long, std::ratio<1, 1000000000> > &)'
| | | | | `-ParmVarDecl 0xd32fb8 <col:13, col:29> col:29 __d 'const std::chrono::duration<long, std::ratio<1, 1000000000> > &'
| | | | |-CXXMethodDecl 0xd331a0 <line:387:23, line:392:2> line:388:2 operator-= 'std::chrono::duration<long, std::ratio<1, 1000000000> > &(const std::chrono::duration<long, std::ratio<1, 1000000000> > &)'
| | | | | `-ParmVarDecl 0xd33110 <col:13, col:29> col:29 __d 'const std::chrono::duration<long, std::ratio<1, 1000000000> > &'
| | | | |-CXXMethodDecl 0xd333b8 <line:394:23, line:399:2> line:395:2 operator*= 'std::chrono::duration<long, std::ratio<1, 1000000000> > &(const std::chrono::duration<long, std::ratio<1, 1000000000> >::rep &)'
| | | | | `-ParmVarDecl 0xd332c8 <col:13, col:24> col:24 __rhs 'const std::chrono::duration<long, std::ratio<1, 1000000000> >::rep &'
| | | | |-CXXMethodDecl 0xd33510 <line:401:23, line:406:2> line:402:2 operator/= 'std::chrono::duration<long, std::ratio<1, 1000000000> > &(const std::chrono::duration<long, std::ratio<1, 1000000000> >::rep &)'
| | | | | `-ParmVarDecl 0xd33480 <col:13, col:24> col:24 __rhs 'const std::chrono::duration<long, std::ratio<1, 1000000000> >::rep &'
| | | | |-FunctionTemplateDecl 0xd33b18 <line:409:2, line:417:4> line:413:4 operator%=
| | | | | |-TemplateTypeParmDecl 0xd335c8 <line:409:11, col:28> col:20 typename depth 0 index 0 _Rep2
| | | | | | `-TemplateArgument type 'std::chrono::duration<long, std::ratio<1, 1000000000> >::rep':'long'
| | | | | `-CXXMethodDecl 0xd33a78 <line:411:4, line:417:4> line:413:4 operator%= 'typename enable_if<!treat_as_floating_point<_Rep2>::value, duration<long, ratio<1, 1000000000> > &>::type (const std::chrono::duration<long, std::ratio<1, 1000000000> >::rep &)'
| | | | |   `-ParmVarDecl 0xd33970 <col:15, col:26> col:26 __rhs 'const std::chrono::duration<long, std::ratio<1, 1000000000> >::rep &'
| | | | |-FunctionTemplateDecl 0xd34088 <line:419:2, line:427:4> line:423:4 operator%=
| | | | | |-TemplateTypeParmDecl 0xd33bf8 <line:419:11, col:28> col:20 typename depth 0 index 0 _Rep2
| | | | | | `-TemplateArgument type 'std::chrono::duration<long, std::ratio<1, 1000000000> >::rep':'long'
| | | | | `-CXXMethodDecl 0xd33fe8 <line:421:4, line:427:4> line:423:4 operator%= 'typename enable_if<!treat_as_floating_point<_Rep2>::value, duration<long, ratio<1, 1000000000> > &>::type (const std::chrono::duration<long, std::ratio<1, 1000000000> > &)'
| | | | |   `-ParmVarDecl 0xd33ee0 <col:15, col:31> col:31 __d 'const std::chrono::duration<long, std::ratio<1, 1000000000> > &'
| | | | |-CXXMethodDecl 0xd341f0 <line:430:2, line:432:51> line:431:2 used constexpr zero 'std::chrono::duration<long, std::ratio<1, 1000000000> > () noexcept' static
| | | | | `-CompoundStmt 0xd50ac8 <line:432:2, col:51>
| | | | |   `-ReturnStmt 0xd50ab8 <col:4, col:48>
| | | | |     `-ExprWithCleanups 0xd50aa0 <col:11, col:48> 'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | | | |       `-CXXConstructExpr 0xd50a70 <col:11, col:48> 'std::chrono::duration<long, std::ratio<1, 1000000000> >' 'void (const std::chrono::duration<long, std::ratio<1, 1000000000> > &) noexcept' elidable
| | | | |         `-MaterializeTemporaryExpr 0xd50a58 <col:11, col:48> 'const std::chrono::duration<long, std::ratio<1, 1000000000> >' lvalue
| | | | |           `-ImplicitCastExpr 0xd50a40 <col:11, col:48> 'const std::chrono::duration<long, std::ratio<1, 1000000000> >' <NoOp>
| | | | |             `-CXXFunctionalCastExpr 0xd4fcb0 <col:11, col:48> 'std::chrono::duration<long, std::ratio<1, 1000000000> >' functional cast to struct std::chrono::duration<long, struct std::ratio<1, 1000000000> > <ConstructorConversion>
| | | | |               `-CXXConstructExpr 0xd4fc80 <col:11, col:48> 'std::chrono::duration<long, std::ratio<1, 1000000000> >' 'void (const long &)'
| | | | |                 `-MaterializeTemporaryExpr 0xd4fc68 <col:20, col:47> 'const long':'const long' lvalue
| | | | |                   `-CallExpr 0xd4f468 <col:20, col:47> 'long':'long'
| | | | |                     `-ImplicitCastExpr 0xd4f450 <col:20, col:42> 'long (*)() noexcept' <FunctionToPointerDecay>
| | | | |                       `-DeclRefExpr 0xd4f3a8 <col:20, col:42> 'long () noexcept' lvalue CXXMethod 0xd34e50 'zero' 'long () noexcept'
| | | | |-CXXMethodDecl 0xd342c8 <line:434:2, line:436:50> line:435:2 used constexpr min 'std::chrono::duration<long, std::ratio<1, 1000000000> > () noexcept' static
| | | | | `-CompoundStmt 0xd4e7b8 <line:436:2, col:50>
| | | | |   `-ReturnStmt 0xd4e7a8 <col:4, col:47>
| | | | |     `-ExprWithCleanups 0xd4e790 <col:11, col:47> 'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | | | |       `-CXXConstructExpr 0xd4e760 <col:11, col:47> 'std::chrono::duration<long, std::ratio<1, 1000000000> >' 'void (const std::chrono::duration<long, std::ratio<1, 1000000000> > &) noexcept' elidable
| | | | |         `-MaterializeTemporaryExpr 0xd4e658 <col:11, col:47> 'const std::chrono::duration<long, std::ratio<1, 1000000000> >' lvalue
| | | | |           `-ImplicitCastExpr 0xd4e640 <col:11, col:47> 'const std::chrono::duration<long, std::ratio<1, 1000000000> >' <NoOp>
| | | | |             `-CXXFunctionalCastExpr 0xd44e88 <col:11, col:47> 'std::chrono::duration<long, std::ratio<1, 1000000000> >' functional cast to struct std::chrono::duration<long, struct std::ratio<1, 1000000000> > <ConstructorConversion>
| | | | |               `-CXXConstructExpr 0xd44e28 <col:11, col:47> 'std::chrono::duration<long, std::ratio<1, 1000000000> >' 'void (const long &)'
| | | | |                 `-MaterializeTemporaryExpr 0xd44cc8 <col:20, col:46> 'const long':'const long' lvalue
| | | | |                   `-CallExpr 0xd35f40 <col:20, col:46> 'long':'long'
| | | | |                     `-ImplicitCastExpr 0xd35f28 <col:20, col:42> 'long (*)() noexcept' <FunctionToPointerDecay>
| | | | |                       `-DeclRefExpr 0xd35d90 <col:20, col:42> 'long () noexcept' lvalue CXXMethod 0xd35cc8 'min' 'long () noexcept'
| | | | |-CXXMethodDecl 0xd343a0 <line:438:2, line:440:50> line:439:2 constexpr max 'std::chrono::duration<long, std::ratio<1, 1000000000> > () noexcept' static
| | | | |-AccessSpecDecl 0xd34450 <line:442:7, col:14> col:7 private
| | | | `-FieldDecl 0xd34488 <line:443:2, col:6> col:6 referenced __r 'std::chrono::duration<long, std::ratio<1, 1000000000> >::rep':'long'
| | | |-ClassTemplateSpecializationDecl 0xd1d2a0 <line:299:5, line:444:7> line:300:14 struct duration definition
| | | | |-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal has_user_declared_ctor has_constexpr_non_copy_move_ctor
| | | | | |-DefaultConstructor exists trivial constexpr
| | | | | |-CopyConstructor trivial user_declared has_const_param implicit_has_const_param
| | | | | |-MoveConstructor
| | | | | |-CopyAssignment trivial has_const_param user_declared implicit_has_const_param
| | | | | |-MoveAssignment
| | | | | `-Destructor irrelevant trivial user_declared
| | | | |-TemplateArgument type 'long'
| | | | |-TemplateArgument type 'std::ratio<1, 1000000>'
| | | | |-CXXRecordDecl 0xe2ab48 prev 0xd1d2a0 <col:7, col:14> col:14 implicit struct duration
| | | | |-AccessSpecDecl 0xe2abd8 <line:302:7, col:14> col:7 private
| | | | |-TypeAliasTemplateDecl 0xe2ad80 <line:303:2, line:304:52> col:4 __is_float
| | | | | |-TemplateTypeParmDecl 0xe2ac00 <line:303:11, col:20> col:20 typename depth 0 index 0 _Rep2
| | | | | `-TypeAliasDecl 0xe2ad20 <line:304:4, col:52> col:10 __is_float 'treat_as_floating_point<_Rep2>'
| | | | |   `-TemplateSpecializationType 0xe2acb0 'treat_as_floating_point<_Rep2>' dependent treat_as_floating_point
| | | | |     `-TemplateArgument type '_Rep2'
| | | | |-TypeAliasTemplateDecl 0xe2b3d8 <line:307:2, line:309:65> line:308:4 __is_harmonic
| | | | | |-TemplateTypeParmDecl 0xe2ade8 <line:307:11, col:20> col:20 typename depth 0 index 0 _Period2
| | | | | `-TypeAliasDecl 0xe2b378 <line:308:4, line:309:65> line:308:10 __is_harmonic '__bool_constant<ratio_divide<_Period2, ratio<1, 1000000> >::den == 1>':'integral_constant<bool, ratio_divide<_Period2, ratio<1, 1000000> >::den == 1>'
| | | | |   `-TemplateSpecializationType 0xe2b300 '__bool_constant<ratio_divide<_Period2, ratio<1, 1000000> >::den == 1>' sugar dependent alias __bool_constant
| | | | |     |-TemplateArgument expr
| | | | |     | `-ImplicitCastExpr 0xe2b1a8 <line:309:24, col:64> 'bool' <Dependent>
| | | | |     |   `-BinaryOperator 0xe2b188 <col:24, col:64> '<dependent type>' '=='
| | | | |     |     |-DependentScopeDeclRefExpr 0xe2b150 <col:24, col:57> '<dependent type>' lvalue
| | | | |     |     `-IntegerLiteral 0xd01ba8 <col:64> 'int' 1
| | | | |     |-TemplateSpecializationType 0xe2b260 'integral_constant<bool, ratio_divide<_Period2, ratio<1, 1000000> >::den == 1>' dependent integral_constant
| | | | |     | |-TemplateArgument type 'bool'
| | | | |     | `-TemplateArgument expr
| | | | |     |   `-SubstNonTypeTemplateParmExpr 0xe2b218 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/type_traits:81:53> 'bool'
| | | | |     |     `-ImplicitCastExpr 0xe2b1a8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/chrono:309:24, col:64> 'bool' <Dependent>
| | | | |     |       `-BinaryOperator 0xe2b188 <col:24, col:64> '<dependent type>' '=='
| | | | |     |         |-DependentScopeDeclRefExpr 0xe2b150 <col:24, col:57> '<dependent type>' lvalue
| | | | |     |         `-IntegerLiteral 0xd01ba8 <col:64> 'int' 1
| | | | |     `-TemplateSpecializationType 0xe2b260 'integral_constant<bool, ratio_divide<_Period2, ratio<1, 1000000> >::den == 1>' dependent integral_constant
| | | | |       |-TemplateArgument type 'bool'
| | | | |       `-TemplateArgument expr
| | | | |         `-SubstNonTypeTemplateParmExpr 0xe2b218 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/type_traits:81:53> 'bool'
| | | | |           `-ImplicitCastExpr 0xe2b1a8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/chrono:309:24, col:64> 'bool' <Dependent>
| | | | |             `-BinaryOperator 0xe2b188 <col:24, col:64> '<dependent type>' '=='
| | | | |               |-DependentScopeDeclRefExpr 0xe2b150 <col:24, col:57> '<dependent type>' lvalue
| | | | |               `-IntegerLiteral 0xd01ba8 <col:64> 'int' 1
| | | | |-AccessSpecDecl 0xe2b440 <line:311:7, col:13> col:7 public
| | | | |-TypedefDecl 0xe2b478 <line:313:2, col:20> col:20 rep 'long':'long'
| | | | | `-SubstTemplateTypeParmType 0xd2a3c0 'long' sugar
| | | | |   |-TemplateTypeParmType 0xd011b0 '_Rep' dependent depth 0 index 0
| | | | |   | `-TemplateTypeParm 0xd01158 '_Rep'
| | | | |   `-BuiltinType 0x7db3a0 'long'
| | | | |-TypedefDecl 0xe2b4e0 <line:314:2, col:23> col:23 period 'std::ratio<1, 1000000>':'std::ratio<1, 1000000>'
| | | | | `-SubstTemplateTypeParmType 0xe1a240 'std::ratio<1, 1000000>' sugar
| | | | |   |-TemplateTypeParmType 0xd01230 '_Period' dependent depth 0 index 1
| | | | |   | `-TemplateTypeParm 0xd011d8 '_Period'
| | | | |   `-RecordType 0xc4c4e0 'std::ratio<1, 1000000>'
| | | | |     `-ClassTemplateSpecialization 0xc4c3e0 'ratio'
| | | | |-StaticAssertDecl 0xe2b698 <line:316:2, col:71> col:2
| | | | | |-UnaryOperator 0xe2b660 <col:16, col:38> 'bool' prefix '!' cannot overflow
| | | | | | `-ImplicitCastExpr 0xe2b648 <col:17, col:38> 'bool':'bool' <LValueToRValue>
| | | | | |   `-DeclRefExpr 0xe2b618 <col:17, col:38> 'const bool':'const bool' lvalue Var 0xb7db88 'value' 'const bool':'const bool' non_odr_use_constant
| | | | | `-StringLiteral 0xd02198 <col:45> 'const char [25]' lvalue "rep cannot be a duration"
| | | | |-StaticAssertDecl 0xe2b820 <line:317:2, line:318:51> line:317:2
| | | | | |-ImplicitCastExpr 0xe2b7e8 <col:16, col:37> 'bool':'bool' <LValueToRValue>
| | | | | | `-DeclRefExpr 0xe2b7b8 <col:16, col:37> 'const bool':'const bool' lvalue Var 0xad7678 'value' 'const bool':'const bool' non_odr_use_constant
| | | | | `-StringLiteral 0xd023c8 <line:318:9> 'const char [41]' lvalue "period must be a specialization of ratio"
| | | | |-StaticAssertDecl 0xe2b950 <line:319:2, col:59> col:2
| | | | | |-BinaryOperator 0xe2b910 <col:16, col:31> 'bool' '>'
| | | | | | |-ImplicitCastExpr 0xe2b8e0 <col:16, col:25> 'intmax_t':'long' <LValueToRValue>
| | | | | | | `-DeclRefExpr 0xe2b8b0 <col:16, col:25> 'const intmax_t':'const long' lvalue Var 0xe1e280 'num' 'const intmax_t':'const long' non_odr_use_constant
| | | | | | `-ImplicitCastExpr 0xe2b8f8 <col:31> 'long' <IntegralCast>
| | | | | |   `-IntegerLiteral 0xd024d0 <col:31> 'int' 0
| | | | | `-StringLiteral 0xd02588 <col:34> 'const char [24]' lvalue "period must be positive"
| | | | |-CXXConstructorDecl 0xe2b9c8 <line:322:2, col:31> col:12 duration 'void ()' default trivial noexcept-unevaluated 0xe2b9c8
| | | | |-CXXConstructorDecl 0xe2bb98 <line:324:2, col:36> col:2 constexpr duration 'void (const std::chrono::duration<long, std::ratio<1, 1000000> > &)' default trivial noexcept-unevaluated 0xe2bb98
| | | | | `-ParmVarDecl 0xe2bab8 <col:11, col:25> col:26 'const std::chrono::duration<long, std::ratio<1, 1000000> > &'
| | | | |-FunctionTemplateDecl 0xe2c880 <line:328:2, line:332:37> line:331:23 duration
| | | | | |-TemplateTypeParmDecl 0xe2bc58 <line:328:11, col:20> col:20 typename depth 0 index 0 _Rep2
| | | | | |-TemplateTypeParmDecl 0xe2bcd8 <col:27, <scratch space>:140:1> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/chrono:328:36 typename depth 0 index 1
| | | | | | `-TemplateArgument type '_Require<is_convertible<const _Rep2 &, std::chrono::duration<long, std::ratio<1, 1000000> >::rep>, __or_<__is_float<std::chrono::duration<long, std::ratio<1, 1000000> >::rep>, __not_<__is_float<_Rep2> > > >':'typename enable_if<__and_<is_convertible<const type-parameter-0-0 &, long>, __or_<treat_as_floating_point<long>, __not_<treat_as_floating_point<type-parameter-0-0> > > >::value>::type'
| | | | | `-CXXConstructorDecl 0xe2c7d8 <line:331:4, line:332:37> line:331:23 constexpr duration 'void (const _Rep2 &)'
| | | | |   `-ParmVarDecl 0xe2c6f0 <col:32, col:45> col:45 __rep 'const _Rep2 &'
| | | | |-FunctionTemplateDecl 0xe2dd00 <line:334:2, line:339:50> line:338:14 duration
| | | | | |-TemplateTypeParmDecl 0xe2c960 <line:334:11, col:20> col:20 typename depth 0 index 0 _Rep2
| | | | | |-TemplateTypeParmDecl 0xe2c9d8 <col:27, col:36> col:36 typename depth 0 index 1 _Period2
| | | | | |-TemplateTypeParmDecl 0xe2ca58 <col:46, <scratch space>:145:1> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/chrono:334:55 typename depth 0 index 2
| | | | | | `-TemplateArgument type '_Require<__or_<__is_float<std::chrono::duration<long, std::ratio<1, 1000000> >::rep>, __and_<__is_harmonic<_Period2>, __not_<__is_float<_Rep2> > > > >':'typename enable_if<__and_<__or_<treat_as_floating_point<long>, __and_<integral_constant<bool, ratio_divide<type-parameter-0-1, ratio<1, 1000000> >::den == 1>, __not_<treat_as_floating_point<type-parameter-0-0> > > > >::value>::type'
| | | | | `-CXXConstructorDecl 0xe2dc58 <line:338:4, line:339:50> line:338:14 constexpr duration 'void (const duration<_Rep2, _Period2> &)'
| | | | |   `-ParmVarDecl 0xe2db78 <col:23, col:56> col:56 __d 'const duration<_Rep2, _Period2> &'
| | | | |-CXXDestructorDecl 0xe2de08 <line:341:2, col:22> col:2 ~duration 'void ()' default trivial noexcept-unevaluated 0xe2de08
| | | | |-CXXMethodDecl 0xe2dff8 <line:342:2, col:47> col:12 constexpr operator= 'std::chrono::duration<long, std::ratio<1, 1000000> > &(const std::chrono::duration<long, std::ratio<1, 1000000> > &)' default trivial noexcept-unevaluated 0xe2dff8
| | | | | `-ParmVarDecl 0xe2df38 <col:22, col:36> col:37 'const std::chrono::duration<long, std::ratio<1, 1000000> > &'
| | | | |-CXXMethodDecl 0xe2e0f8 <line:345:2, line:347:16> line:346:2 constexpr count 'std::chrono::duration<long, std::ratio<1, 1000000> >::rep () const'
| | | | |-CXXMethodDecl 0xe2e1f8 <line:350:2, line:352:18> line:351:2 constexpr operator+ 'std::chrono::duration<long, std::ratio<1, 1000000> > () const'
| | | | |-CXXMethodDecl 0xe2e2c8 <line:354:2, line:356:27> line:355:2 constexpr operator- 'std::chrono::duration<long, std::ratio<1, 1000000> > () const'
| | | | |-CXXMethodDecl 0xe2e3c8 <line:358:23, line:363:2> line:359:2 operator++ 'std::chrono::duration<long, std::ratio<1, 1000000> > &()'
| | | | |-CXXMethodDecl 0xe2e538 <line:365:23, line:367:28> line:366:2 operator++ 'std::chrono::duration<long, std::ratio<1, 1000000> > (int)'
| | | | | `-ParmVarDecl 0xe2e478 <col:13> col:16 'int'
| | | | |-CXXMethodDecl 0xe2e610 <line:369:23, line:374:2> line:370:2 operator-- 'std::chrono::duration<long, std::ratio<1, 1000000> > &()'
| | | | |-CXXMethodDecl 0xe2e750 <line:376:23, line:378:28> line:377:2 operator-- 'std::chrono::duration<long, std::ratio<1, 1000000> > (int)'
| | | | | `-ParmVarDecl 0xe2e6c0 <col:13> col:16 'int'
| | | | |-CXXMethodDecl 0xe2e8a8 <line:380:23, line:385:2> line:381:2 operator+= 'std::chrono::duration<long, std::ratio<1, 1000000> > &(const std::chrono::duration<long, std::ratio<1, 1000000> > &)'
| | | | | `-ParmVarDecl 0xe2e818 <col:13, col:29> col:29 __d 'const std::chrono::duration<long, std::ratio<1, 1000000> > &'
| | | | |-CXXMethodDecl 0xe2ea00 <line:387:23, line:392:2> line:388:2 operator-= 'std::chrono::duration<long, std::ratio<1, 1000000> > &(const std::chrono::duration<long, std::ratio<1, 1000000> > &)'
| | | | | `-ParmVarDecl 0xe2e970 <col:13, col:29> col:29 __d 'const std::chrono::duration<long, std::ratio<1, 1000000> > &'
| | | | |-CXXMethodDecl 0xe2ebe8 <line:394:23, line:399:2> line:395:2 operator*= 'std::chrono::duration<long, std::ratio<1, 1000000> > &(const std::chrono::duration<long, std::ratio<1, 1000000> >::rep &)'
| | | | | `-ParmVarDecl 0xe2eaf8 <col:13, col:24> col:24 __rhs 'const std::chrono::duration<long, std::ratio<1, 1000000> >::rep &'
| | | | |-CXXMethodDecl 0xe2ed40 <line:401:23, line:406:2> line:402:2 operator/= 'std::chrono::duration<long, std::ratio<1, 1000000> > &(const std::chrono::duration<long, std::ratio<1, 1000000> >::rep &)'
| | | | | `-ParmVarDecl 0xe2ecb0 <col:13, col:24> col:24 __rhs 'const std::chrono::duration<long, std::ratio<1, 1000000> >::rep &'
| | | | |-FunctionTemplateDecl 0xe2f328 <line:409:2, line:417:4> line:413:4 operator%=
| | | | | |-TemplateTypeParmDecl 0xe2edf8 <line:409:11, col:28> col:20 typename depth 0 index 0 _Rep2
| | | | | | `-TemplateArgument type 'std::chrono::duration<long, std::ratio<1, 1000000> >::rep':'long'
| | | | | `-CXXMethodDecl 0xe2f288 <line:411:4, line:417:4> line:413:4 operator%= 'typename enable_if<!treat_as_floating_point<_Rep2>::value, duration<long, ratio<1, 1000000> > &>::type (const std::chrono::duration<long, std::ratio<1, 1000000> >::rep &)'
| | | | |   `-ParmVarDecl 0xe2f180 <col:15, col:26> col:26 __rhs 'const std::chrono::duration<long, std::ratio<1, 1000000> >::rep &'
| | | | |-FunctionTemplateDecl 0xe31a88 <line:419:2, line:427:4> line:423:4 operator%=
| | | | | |-TemplateTypeParmDecl 0xe2f408 <line:419:11, col:28> col:20 typename depth 0 index 0 _Rep2
| | | | | | `-TemplateArgument type 'std::chrono::duration<long, std::ratio<1, 1000000> >::rep':'long'
| | | | | `-CXXMethodDecl 0xe319e8 <line:421:4, line:427:4> line:423:4 operator%= 'typename enable_if<!treat_as_floating_point<_Rep2>::value, duration<long, ratio<1, 1000000> > &>::type (const std::chrono::duration<long, std::ratio<1, 1000000> > &)'
| | | | |   `-ParmVarDecl 0xe318e0 <col:15, col:31> col:31 __d 'const std::chrono::duration<long, std::ratio<1, 1000000> > &'
| | | | |-CXXMethodDecl 0xe31bc0 <line:430:2, line:432:51> line:431:2 constexpr zero 'std::chrono::duration<long, std::ratio<1, 1000000> > () noexcept' static
| | | | |-CXXMethodDecl 0xe31c98 <line:434:2, line:436:50> line:435:2 constexpr min 'std::chrono::duration<long, std::ratio<1, 1000000> > () noexcept' static
| | | | |-CXXMethodDecl 0xe31d70 <line:438:2, line:440:50> line:439:2 constexpr max 'std::chrono::duration<long, std::ratio<1, 1000000> > () noexcept' static
| | | | |-AccessSpecDecl 0xe31e20 <line:442:7, col:14> col:7 private
| | | | `-FieldDecl 0xe31e58 <line:443:2, col:6> col:6 __r 'std::chrono::duration<long, std::ratio<1, 1000000> >::rep':'long'
| | | |-ClassTemplateSpecializationDecl 0xd1d540 <line:299:5, line:444:7> line:300:14 struct duration definition
| | | | |-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal has_user_declared_ctor has_constexpr_non_copy_move_ctor
| | | | | |-DefaultConstructor exists trivial constexpr
| | | | | |-CopyConstructor trivial user_declared has_const_param implicit_has_const_param
| | | | | |-MoveConstructor
| | | | | |-CopyAssignment trivial has_const_param user_declared implicit_has_const_param
| | | | | |-MoveAssignment
| | | | | `-Destructor irrelevant trivial user_declared
| | | | |-TemplateArgument type 'long'
| | | | |-TemplateArgument type 'std::ratio<1, 1000>'
| | | | |-CXXRecordDecl 0xe12f58 prev 0xd1d540 <col:7, col:14> col:14 implicit struct duration
| | | | |-AccessSpecDecl 0xe12fe8 <line:302:7, col:14> col:7 private
| | | | |-TypeAliasTemplateDecl 0xe13190 <line:303:2, line:304:52> col:4 __is_float
| | | | | |-TemplateTypeParmDecl 0xe13010 <line:303:11, col:20> col:20 typename depth 0 index 0 _Rep2
| | | | | `-TypeAliasDecl 0xe13130 <line:304:4, col:52> col:10 __is_float 'treat_as_floating_point<_Rep2>'
| | | | |   `-TemplateSpecializationType 0xe130c0 'treat_as_floating_point<_Rep2>' dependent treat_as_floating_point
| | | | |     `-TemplateArgument type '_Rep2'
| | | | |-TypeAliasTemplateDecl 0xe137e8 <line:307:2, line:309:65> line:308:4 __is_harmonic
| | | | | |-TemplateTypeParmDecl 0xe131f8 <line:307:11, col:20> col:20 typename depth 0 index 0 _Period2
| | | | | `-TypeAliasDecl 0xe13788 <line:308:4, line:309:65> line:308:10 __is_harmonic '__bool_constant<ratio_divide<_Period2, ratio<1, 1000> >::den == 1>':'integral_constant<bool, ratio_divide<_Period2, ratio<1, 1000> >::den == 1>'
| | | | |   `-TemplateSpecializationType 0xe13710 '__bool_constant<ratio_divide<_Period2, ratio<1, 1000> >::den == 1>' sugar dependent alias __bool_constant
| | | | |     |-TemplateArgument expr
| | | | |     | `-ImplicitCastExpr 0xe135b8 <line:309:24, col:64> 'bool' <Dependent>
| | | | |     |   `-BinaryOperator 0xe13598 <col:24, col:64> '<dependent type>' '=='
| | | | |     |     |-DependentScopeDeclRefExpr 0xe13560 <col:24, col:57> '<dependent type>' lvalue
| | | | |     |     `-IntegerLiteral 0xd01ba8 <col:64> 'int' 1
| | | | |     |-TemplateSpecializationType 0xe13670 'integral_constant<bool, ratio_divide<_Period2, ratio<1, 1000> >::den == 1>' dependent integral_constant
| | | | |     | |-TemplateArgument type 'bool'
| | | | |     | `-TemplateArgument expr
| | | | |     |   `-SubstNonTypeTemplateParmExpr 0xe13628 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/type_traits:81:53> 'bool'
| | | | |     |     `-ImplicitCastExpr 0xe135b8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/chrono:309:24, col:64> 'bool' <Dependent>
| | | | |     |       `-BinaryOperator 0xe13598 <col:24, col:64> '<dependent type>' '=='
| | | | |     |         |-DependentScopeDeclRefExpr 0xe13560 <col:24, col:57> '<dependent type>' lvalue
| | | | |     |         `-IntegerLiteral 0xd01ba8 <col:64> 'int' 1
| | | | |     `-TemplateSpecializationType 0xe13670 'integral_constant<bool, ratio_divide<_Period2, ratio<1, 1000> >::den == 1>' dependent integral_constant
| | | | |       |-TemplateArgument type 'bool'
| | | | |       `-TemplateArgument expr
| | | | |         `-SubstNonTypeTemplateParmExpr 0xe13628 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/type_traits:81:53> 'bool'
| | | | |           `-ImplicitCastExpr 0xe135b8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/chrono:309:24, col:64> 'bool' <Dependent>
| | | | |             `-BinaryOperator 0xe13598 <col:24, col:64> '<dependent type>' '=='
| | | | |               |-DependentScopeDeclRefExpr 0xe13560 <col:24, col:57> '<dependent type>' lvalue
| | | | |               `-IntegerLiteral 0xd01ba8 <col:64> 'int' 1
| | | | |-AccessSpecDecl 0xe13850 <line:311:7, col:13> col:7 public
| | | | |-TypedefDecl 0xe13888 <line:313:2, col:20> col:20 rep 'long':'long'
| | | | | `-SubstTemplateTypeParmType 0xd2a3c0 'long' sugar
| | | | |   |-TemplateTypeParmType 0xd011b0 '_Rep' dependent depth 0 index 0
| | | | |   | `-TemplateTypeParm 0xd01158 '_Rep'
| | | | |   `-BuiltinType 0x7db3a0 'long'
| | | | |-TypedefDecl 0xe138f0 <line:314:2, col:23> col:23 period 'std::ratio<1, 1000>':'std::ratio<1, 1000>'
| | | | | `-SubstTemplateTypeParmType 0xe031b0 'std::ratio<1, 1000>' sugar
| | | | |   |-TemplateTypeParmType 0xd01230 '_Period' dependent depth 0 index 1
| | | | |   | `-TemplateTypeParm 0xd011d8 '_Period'
| | | | |   `-RecordType 0xc4c7f0 'std::ratio<1, 1000>'
| | | | |     `-ClassTemplateSpecialization 0xc4c6f0 'ratio'
| | | | |-StaticAssertDecl 0xe14580 <line:316:2, col:71> col:2
| | | | | |-UnaryOperator 0xe13a70 <col:16, col:38> 'bool' prefix '!' cannot overflow
| | | | | | `-ImplicitCastExpr 0xe13a58 <col:17, col:38> 'bool':'bool' <LValueToRValue>
| | | | | |   `-DeclRefExpr 0xe13a28 <col:17, col:38> 'const bool':'const bool' lvalue Var 0xb7db88 'value' 'const bool':'const bool' non_odr_use_constant
| | | | | `-StringLiteral 0xd02198 <col:45> 'const char [25]' lvalue "rep cannot be a duration"
| | | | |-StaticAssertDecl 0xe14700 <line:317:2, line:318:51> line:317:2
| | | | | |-ImplicitCastExpr 0xe146c8 <col:16, col:37> 'bool':'bool' <LValueToRValue>
| | | | | | `-DeclRefExpr 0xe14698 <col:16, col:37> 'const bool':'const bool' lvalue Var 0xad7678 'value' 'const bool':'const bool' non_odr_use_constant
| | | | | `-StringLiteral 0xd023c8 <line:318:9> 'const char [41]' lvalue "period must be a specialization of ratio"
| | | | |-StaticAssertDecl 0xe14830 <line:319:2, col:59> col:2
| | | | | |-BinaryOperator 0xe147f0 <col:16, col:31> 'bool' '>'
| | | | | | |-ImplicitCastExpr 0xe147c0 <col:16, col:25> 'intmax_t':'long' <LValueToRValue>
| | | | | | | `-DeclRefExpr 0xe14790 <col:16, col:25> 'const intmax_t':'const long' lvalue Var 0xe06a10 'num' 'const intmax_t':'const long' non_odr_use_constant
| | | | | | `-ImplicitCastExpr 0xe147d8 <col:31> 'long' <IntegralCast>
| | | | | |   `-IntegerLiteral 0xd024d0 <col:31> 'int' 0
| | | | | `-StringLiteral 0xd02588 <col:34> 'const char [24]' lvalue "period must be positive"
| | | | |-CXXConstructorDecl 0xe148a8 <line:322:2, col:31> col:12 duration 'void ()' default trivial noexcept-unevaluated 0xe148a8
| | | | |-CXXConstructorDecl 0xe14a78 <line:324:2, col:36> col:2 constexpr duration 'void (const std::chrono::duration<long, std::ratio<1, 1000> > &)' default trivial noexcept-unevaluated 0xe14a78
| | | | | `-ParmVarDecl 0xe14998 <col:11, col:25> col:26 'const std::chrono::duration<long, std::ratio<1, 1000> > &'
| | | | |-FunctionTemplateDecl 0xe15760 <line:328:2, line:332:37> line:331:23 duration
| | | | | |-TemplateTypeParmDecl 0xe14b38 <line:328:11, col:20> col:20 typename depth 0 index 0 _Rep2
| | | | | |-TemplateTypeParmDecl 0xe14bb8 <col:27, <scratch space>:140:1> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/chrono:328:36 typename depth 0 index 1
| | | | | | `-TemplateArgument type '_Require<is_convertible<const _Rep2 &, std::chrono::duration<long, std::ratio<1, 1000> >::rep>, __or_<__is_float<std::chrono::duration<long, std::ratio<1, 1000> >::rep>, __not_<__is_float<_Rep2> > > >':'typename enable_if<__and_<is_convertible<const type-parameter-0-0 &, long>, __or_<treat_as_floating_point<long>, __not_<treat_as_floating_point<type-parameter-0-0> > > >::value>::type'
| | | | | `-CXXConstructorDecl 0xe156b8 <line:331:4, line:332:37> line:331:23 constexpr duration 'void (const _Rep2 &)'
| | | | |   `-ParmVarDecl 0xe155d0 <col:32, col:45> col:45 __rep 'const _Rep2 &'
| | | | |-FunctionTemplateDecl 0xe16be0 <line:334:2, line:339:50> line:338:14 duration
| | | | | |-TemplateTypeParmDecl 0xe15840 <line:334:11, col:20> col:20 typename depth 0 index 0 _Rep2
| | | | | |-TemplateTypeParmDecl 0xe158b8 <col:27, col:36> col:36 typename depth 0 index 1 _Period2
| | | | | |-TemplateTypeParmDecl 0xe15938 <col:46, <scratch space>:145:1> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/chrono:334:55 typename depth 0 index 2
| | | | | | `-TemplateArgument type '_Require<__or_<__is_float<std::chrono::duration<long, std::ratio<1, 1000> >::rep>, __and_<__is_harmonic<_Period2>, __not_<__is_float<_Rep2> > > > >':'typename enable_if<__and_<__or_<treat_as_floating_point<long>, __and_<integral_constant<bool, ratio_divide<type-parameter-0-1, ratio<1, 1000> >::den == 1>, __not_<treat_as_floating_point<type-parameter-0-0> > > > >::value>::type'
| | | | | `-CXXConstructorDecl 0xe16b38 <line:338:4, line:339:50> line:338:14 constexpr duration 'void (const duration<_Rep2, _Period2> &)'
| | | | |   `-ParmVarDecl 0xe16a58 <col:23, col:56> col:56 __d 'const duration<_Rep2, _Period2> &'
| | | | |-CXXDestructorDecl 0xe16ce8 <line:341:2, col:22> col:2 ~duration 'void ()' default trivial noexcept-unevaluated 0xe16ce8
| | | | |-CXXMethodDecl 0xe16ed8 <line:342:2, col:47> col:12 constexpr operator= 'std::chrono::duration<long, std::ratio<1, 1000> > &(const std::chrono::duration<long, std::ratio<1, 1000> > &)' default trivial noexcept-unevaluated 0xe16ed8
| | | | | `-ParmVarDecl 0xe16e18 <col:22, col:36> col:37 'const std::chrono::duration<long, std::ratio<1, 1000> > &'
| | | | |-CXXMethodDecl 0xe16fd8 <line:345:2, line:347:16> line:346:2 constexpr count 'std::chrono::duration<long, std::ratio<1, 1000> >::rep () const'
| | | | |-CXXMethodDecl 0xe170d8 <line:350:2, line:352:18> line:351:2 constexpr operator+ 'std::chrono::duration<long, std::ratio<1, 1000> > () const'
| | | | |-CXXMethodDecl 0xe171a8 <line:354:2, line:356:27> line:355:2 constexpr operator- 'std::chrono::duration<long, std::ratio<1, 1000> > () const'
| | | | |-CXXMethodDecl 0xe172a8 <line:358:23, line:363:2> line:359:2 operator++ 'std::chrono::duration<long, std::ratio<1, 1000> > &()'
| | | | |-CXXMethodDecl 0xe17418 <line:365:23, line:367:28> line:366:2 operator++ 'std::chrono::duration<long, std::ratio<1, 1000> > (int)'
| | | | | `-ParmVarDecl 0xe17358 <col:13> col:16 'int'
| | | | |-CXXMethodDecl 0xe174f0 <line:369:23, line:374:2> line:370:2 operator-- 'std::chrono::duration<long, std::ratio<1, 1000> > &()'
| | | | |-CXXMethodDecl 0xe17630 <line:376:23, line:378:28> line:377:2 operator-- 'std::chrono::duration<long, std::ratio<1, 1000> > (int)'
| | | | | `-ParmVarDecl 0xe175a0 <col:13> col:16 'int'
| | | | |-CXXMethodDecl 0xe17788 <line:380:23, line:385:2> line:381:2 operator+= 'std::chrono::duration<long, std::ratio<1, 1000> > &(const std::chrono::duration<long, std::ratio<1, 1000> > &)'
| | | | | `-ParmVarDecl 0xe176f8 <col:13, col:29> col:29 __d 'const std::chrono::duration<long, std::ratio<1, 1000> > &'
| | | | |-CXXMethodDecl 0xe178e0 <line:387:23, line:392:2> line:388:2 operator-= 'std::chrono::duration<long, std::ratio<1, 1000> > &(const std::chrono::duration<long, std::ratio<1, 1000> > &)'
| | | | | `-ParmVarDecl 0xe17850 <col:13, col:29> col:29 __d 'const std::chrono::duration<long, std::ratio<1, 1000> > &'
| | | | |-CXXMethodDecl 0xe17ac8 <line:394:23, line:399:2> line:395:2 operator*= 'std::chrono::duration<long, std::ratio<1, 1000> > &(const std::chrono::duration<long, std::ratio<1, 1000> >::rep &)'
| | | | | `-ParmVarDecl 0xe179d8 <col:13, col:24> col:24 __rhs 'const std::chrono::duration<long, std::ratio<1, 1000> >::rep &'
| | | | |-CXXMethodDecl 0xe17c20 <line:401:23, line:406:2> line:402:2 operator/= 'std::chrono::duration<long, std::ratio<1, 1000> > &(const std::chrono::duration<long, std::ratio<1, 1000> >::rep &)'
| | | | | `-ParmVarDecl 0xe17b90 <col:13, col:24> col:24 __rhs 'const std::chrono::duration<long, std::ratio<1, 1000> >::rep &'
| | | | |-FunctionTemplateDecl 0xe18208 <line:409:2, line:417:4> line:413:4 operator%=
| | | | | |-TemplateTypeParmDecl 0xe17cd8 <line:409:11, col:28> col:20 typename depth 0 index 0 _Rep2
| | | | | | `-TemplateArgument type 'std::chrono::duration<long, std::ratio<1, 1000> >::rep':'long'
| | | | | `-CXXMethodDecl 0xe18168 <line:411:4, line:417:4> line:413:4 operator%= 'typename enable_if<!treat_as_floating_point<_Rep2>::value, duration<long, ratio<1, 1000> > &>::type (const std::chrono::duration<long, std::ratio<1, 1000> >::rep &)'
| | | | |   `-ParmVarDecl 0xe18060 <col:15, col:26> col:26 __rhs 'const std::chrono::duration<long, std::ratio<1, 1000> >::rep &'
| | | | |-FunctionTemplateDecl 0xe193c8 <line:419:2, line:427:4> line:423:4 operator%=
| | | | | |-TemplateTypeParmDecl 0xe182e8 <line:419:11, col:28> col:20 typename depth 0 index 0 _Rep2
| | | | | | `-TemplateArgument type 'std::chrono::duration<long, std::ratio<1, 1000> >::rep':'long'
| | | | | `-CXXMethodDecl 0xe19328 <line:421:4, line:427:4> line:423:4 operator%= 'typename enable_if<!treat_as_floating_point<_Rep2>::value, duration<long, ratio<1, 1000> > &>::type (const std::chrono::duration<long, std::ratio<1, 1000> > &)'
| | | | |   `-ParmVarDecl 0xe19220 <col:15, col:31> col:31 __d 'const std::chrono::duration<long, std::ratio<1, 1000> > &'
| | | | |-CXXMethodDecl 0xe19500 <line:430:2, line:432:51> line:431:2 constexpr zero 'std::chrono::duration<long, std::ratio<1, 1000> > () noexcept' static
| | | | |-CXXMethodDecl 0xe195d8 <line:434:2, line:436:50> line:435:2 constexpr min 'std::chrono::duration<long, std::ratio<1, 1000> > () noexcept' static
| | | | |-CXXMethodDecl 0xe196b0 <line:438:2, line:440:50> line:439:2 constexpr max 'std::chrono::duration<long, std::ratio<1, 1000> > () noexcept' static
| | | | |-AccessSpecDecl 0xe19760 <line:442:7, col:14> col:7 private
| | | | `-FieldDecl 0xe19798 <line:443:2, col:6> col:6 __r 'std::chrono::duration<long, std::ratio<1, 1000> >::rep':'long'
| | | |-ClassTemplateSpecializationDecl 0xd1d7b0 <line:299:5, line:444:7> line:300:14 struct duration definition
| | | | |-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal has_user_declared_ctor has_constexpr_non_copy_move_ctor
| | | | | |-DefaultConstructor exists trivial constexpr
| | | | | |-CopyConstructor trivial user_declared has_const_param implicit_has_const_param
| | | | | |-MoveConstructor
| | | | | |-CopyAssignment trivial has_const_param user_declared implicit_has_const_param
| | | | | |-MoveAssignment
| | | | | `-Destructor irrelevant trivial user_declared
| | | | |-TemplateArgument type 'long'
| | | | |-TemplateArgument type 'std::ratio<1, 1>'
| | | | |-CXXRecordDecl 0xb8dc08 prev 0xd1d7b0 <col:7, col:14> col:14 implicit struct duration
| | | | |-AccessSpecDecl 0xb8dc98 <line:302:7, col:14> col:7 private
| | | | |-TypeAliasTemplateDecl 0xb8de40 <line:303:2, line:304:52> col:4 __is_float
| | | | | |-TemplateTypeParmDecl 0xb8dcc0 <line:303:11, col:20> col:20 typename depth 0 index 0 _Rep2
| | | | | `-TypeAliasDecl 0xb8dde0 <line:304:4, col:52> col:10 __is_float 'treat_as_floating_point<_Rep2>'
| | | | |   `-TemplateSpecializationType 0xb8dd70 'treat_as_floating_point<_Rep2>' dependent treat_as_floating_point
| | | | |     `-TemplateArgument type '_Rep2'
| | | | |-TypeAliasTemplateDecl 0xb8e608 <line:307:2, line:309:65> line:308:4 __is_harmonic
| | | | | |-TemplateTypeParmDecl 0xb8dea8 <line:307:11, col:20> col:20 typename depth 0 index 0 _Period2
| | | | | `-TypeAliasDecl 0xb8e5a8 <line:308:4, line:309:65> line:308:10 __is_harmonic '__bool_constant<ratio_divide<_Period2, ratio<1, 1> >::den == 1>':'integral_constant<bool, ratio_divide<_Period2, ratio<1, 1> >::den == 1>'
| | | | |   `-TemplateSpecializationType 0xb8e530 '__bool_constant<ratio_divide<_Period2, ratio<1, 1> >::den == 1>' sugar dependent alias __bool_constant
| | | | |     |-TemplateArgument expr
| | | | |     | `-ImplicitCastExpr 0xb8e368 <line:309:24, col:64> 'bool' <Dependent>
| | | | |     |   `-BinaryOperator 0xb8e348 <col:24, col:64> '<dependent type>' '=='
| | | | |     |     |-DependentScopeDeclRefExpr 0xb8e310 <col:24, col:57> '<dependent type>' lvalue
| | | | |     |     `-IntegerLiteral 0xd01ba8 <col:64> 'int' 1
| | | | |     |-TemplateSpecializationType 0xb8e490 'integral_constant<bool, ratio_divide<_Period2, ratio<1, 1> >::den == 1>' dependent integral_constant
| | | | |     | |-TemplateArgument type 'bool'
| | | | |     | `-TemplateArgument expr
| | | | |     |   `-SubstNonTypeTemplateParmExpr 0xb8e3d8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/type_traits:81:53> 'bool'
| | | | |     |     `-ImplicitCastExpr 0xb8e368 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/chrono:309:24, col:64> 'bool' <Dependent>
| | | | |     |       `-BinaryOperator 0xb8e348 <col:24, col:64> '<dependent type>' '=='
| | | | |     |         |-DependentScopeDeclRefExpr 0xb8e310 <col:24, col:57> '<dependent type>' lvalue
| | | | |     |         `-IntegerLiteral 0xd01ba8 <col:64> 'int' 1
| | | | |     `-TemplateSpecializationType 0xb8e490 'integral_constant<bool, ratio_divide<_Period2, ratio<1, 1> >::den == 1>' dependent integral_constant
| | | | |       |-TemplateArgument type 'bool'
| | | | |       `-TemplateArgument expr
| | | | |         `-SubstNonTypeTemplateParmExpr 0xb8e3d8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/type_traits:81:53> 'bool'
| | | | |           `-ImplicitCastExpr 0xb8e368 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/chrono:309:24, col:64> 'bool' <Dependent>
| | | | |             `-BinaryOperator 0xb8e348 <col:24, col:64> '<dependent type>' '=='
| | | | |               |-DependentScopeDeclRefExpr 0xb8e310 <col:24, col:57> '<dependent type>' lvalue
| | | | |               `-IntegerLiteral 0xd01ba8 <col:64> 'int' 1
| | | | |-AccessSpecDecl 0xb8e670 <line:311:7, col:13> col:7 public
| | | | |-TypedefDecl 0xb8e6a8 <line:313:2, col:20> col:20 referenced rep 'long':'long'
| | | | | `-SubstTemplateTypeParmType 0xd2a3c0 'long' sugar
| | | | |   |-TemplateTypeParmType 0xd011b0 '_Rep' dependent depth 0 index 0
| | | | |   | `-TemplateTypeParm 0xd01158 '_Rep'
| | | | |   `-BuiltinType 0x7db3a0 'long'
| | | | |-TypedefDecl 0xb8e710 <line:314:2, col:23> col:23 referenced period 'std::ratio<1, 1>':'std::ratio<1, 1>'
| | | | | `-SubstTemplateTypeParmType 0xb8df60 'std::ratio<1, 1>' sugar
| | | | |   |-TemplateTypeParmType 0xd01230 '_Period' dependent depth 0 index 1
| | | | |   | `-TemplateTypeParm 0xd011d8 '_Period'
| | | | |   `-RecordType 0xcedc30 'std::ratio<1, 1>'
| | | | |     `-ClassTemplateSpecialization 0xcedb38 'ratio'
| | | | |-StaticAssertDecl 0xb8e8c8 <line:316:2, col:71> col:2
| | | | | |-UnaryOperator 0xb8e890 <col:16, col:38> 'bool' prefix '!' cannot overflow
| | | | | | `-ImplicitCastExpr 0xb8e878 <col:17, col:38> 'bool':'bool' <LValueToRValue>
| | | | | |   `-DeclRefExpr 0xb8e848 <col:17, col:38> 'const bool':'const bool' lvalue Var 0xb7db88 'value' 'const bool':'const bool' non_odr_use_constant
| | | | | `-StringLiteral 0xd02198 <col:45> 'const char [25]' lvalue "rep cannot be a duration"
| | | | |-StaticAssertDecl 0xb8eec8 <line:317:2, line:318:51> line:317:2
| | | | | |-ImplicitCastExpr 0xb8ee90 <col:16, col:37> 'bool':'bool' <LValueToRValue>
| | | | | | `-DeclRefExpr 0xb8ee60 <col:16, col:37> 'const bool':'const bool' lvalue Var 0xad7678 'value' 'const bool':'const bool' non_odr_use_constant
| | | | | `-StringLiteral 0xd023c8 <line:318:9> 'const char [41]' lvalue "period must be a specialization of ratio"
| | | | |-StaticAssertDecl 0xb8f010 <line:319:2, col:59> col:2
| | | | | |-BinaryOperator 0xb8efd0 <col:16, col:31> 'bool' '>'
| | | | | | |-ImplicitCastExpr 0xb8efa0 <col:16, col:25> 'intmax_t':'long' <LValueToRValue>
| | | | | | | `-DeclRefExpr 0xb8ef70 <col:16, col:25> 'const intmax_t':'const long' lvalue Var 0xd4b4b0 'num' 'const intmax_t':'const long' non_odr_use_constant
| | | | | | `-ImplicitCastExpr 0xb8efb8 <col:31> 'long' <IntegralCast>
| | | | | |   `-IntegerLiteral 0xd024d0 <col:31> 'int' 0
| | | | | `-StringLiteral 0xd02588 <col:34> 'const char [24]' lvalue "period must be positive"
| | | | |-CXXConstructorDecl 0xb8f088 <line:322:2, col:31> col:12 duration 'void ()' default trivial noexcept-unevaluated 0xb8f088
| | | | |-CXXConstructorDecl 0xb8f258 <line:324:2, col:36> col:2 used constexpr duration 'void (const std::chrono::duration<long, std::ratio<1, 1> > &) noexcept' default trivial
| | | | | |-ParmVarDecl 0xb8f178 <col:11, col:25> col:26 used 'const std::chrono::duration<long, std::ratio<1, 1> > &'
| | | | | |-CXXCtorInitializer Field 0xb939b8 '__r' 'std::chrono::duration<long, std::ratio<1, 1> >::rep':'long'
| | | | | | `-ImplicitCastExpr 0xd94318 <col:2> 'std::chrono::duration<long, std::ratio<1, 1> >::rep':'long' <LValueToRValue>
| | | | | |   `-MemberExpr 0xd942d0 <col:2> 'const std::chrono::duration<long, std::ratio<1, 1> >::rep':'const long' lvalue .__r 0xb939b8
| | | | | |     `-DeclRefExpr 0xd942b0 <col:2> 'const std::chrono::duration<long, std::ratio<1, 1> >' lvalue ParmVar 0xb8f178 '' 'const std::chrono::duration<long, std::ratio<1, 1> > &'
| | | | | `-CompoundStmt 0xd94360 <col:36>
| | | | |-FunctionTemplateDecl 0xb90450 <line:328:2, line:332:37> line:331:23 duration
| | | | | |-TemplateTypeParmDecl 0xb8f318 <line:328:11, col:20> col:20 typename depth 0 index 0 _Rep2
| | | | | |-TemplateTypeParmDecl 0xb8f398 <col:27, <scratch space>:140:1> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/chrono:328:36 typename depth 0 index 1
| | | | | | `-TemplateArgument type '_Require<is_convertible<const _Rep2 &, std::chrono::duration<long, std::ratio<1, 1> >::rep>, __or_<__is_float<std::chrono::duration<long, std::ratio<1, 1> >::rep>, __not_<__is_float<_Rep2> > > >':'typename enable_if<__and_<is_convertible<const type-parameter-0-0 &, long>, __or_<treat_as_floating_point<long>, __not_<treat_as_floating_point<type-parameter-0-0> > > >::value>::type'
| | | | | |-CXXConstructorDecl 0xb903a8 <line:331:4, line:332:37> line:331:23 constexpr duration 'void (const _Rep2 &)'
| | | | | | `-ParmVarDecl 0xb902c0 <col:32, col:45> col:45 __rep 'const _Rep2 &'
| | | | | `-CXXConstructorDecl 0xd8fce8 <col:4, line:332:37> line:331:23 used constexpr duration 'void (const long &)'
| | | | |   |-TemplateArgument type 'long'
| | | | |   |-TemplateArgument type 'void'
| | | | |   |-ParmVarDecl 0xd8fc28 <col:32, col:45> col:45 used __rep 'const long &'
| | | | |   |-CXXCtorInitializer Field 0xb939b8 '__r' 'std::chrono::duration<long, std::ratio<1, 1> >::rep':'long'
| | | | |   | `-CXXStaticCastExpr 0xd8fe98 <line:332:10, col:32> 'std::chrono::duration<long, std::ratio<1, 1> >::rep':'long' static_cast<std::chrono::duration<long, struct std::ratio<1, 1> >::rep> <NoOp>
| | | | |   |   `-ImplicitCastExpr 0xd8fe80 <col:27> 'long':'long' <LValueToRValue> part_of_explicit_cast
| | | | |   |     `-DeclRefExpr 0xd8fe60 <col:27> 'const long':'const long' lvalue ParmVar 0xd8fc28 '__rep' 'const long &'
| | | | |   `-CompoundStmt 0xd076b8 <col:35, col:37>
| | | | |-FunctionTemplateDecl 0xb91a20 <line:334:2, line:339:50> line:338:14 duration
| | | | | |-TemplateTypeParmDecl 0xb90530 <line:334:11, col:20> col:20 typename depth 0 index 0 _Rep2
| | | | | |-TemplateTypeParmDecl 0xb905a8 <col:27, col:36> col:36 typename depth 0 index 1 _Period2
| | | | | |-TemplateTypeParmDecl 0xb90628 <col:46, <scratch space>:145:1> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/chrono:334:55 typename depth 0 index 2
| | | | | | `-TemplateArgument type '_Require<__or_<__is_float<std::chrono::duration<long, std::ratio<1, 1> >::rep>, __and_<__is_harmonic<_Period2>, __not_<__is_float<_Rep2> > > > >':'typename enable_if<__and_<__or_<treat_as_floating_point<long>, __and_<integral_constant<bool, ratio_divide<type-parameter-0-1, ratio<1, 1> >::den == 1>, __not_<treat_as_floating_point<type-parameter-0-0> > > > >::value>::type'
| | | | | |-CXXConstructorDecl 0xb91978 <line:338:4, line:339:50> line:338:14 constexpr duration 'void (const duration<_Rep2, _Period2> &)'
| | | | | | `-ParmVarDecl 0xb91898 <col:23, col:56> col:56 __d 'const duration<_Rep2, _Period2> &'
| | | | | `-CXXConstructorDecl 0xd94118 <col:4, line:339:50> line:338:14 constexpr duration 'void (const duration<long, std::ratio<1, 1> > &)'
| | | | |   |-TemplateArgument type 'long'
| | | | |   |-TemplateArgument type 'std::ratio<1, 1>'
| | | | |   |-TemplateArgument type 'void'
| | | | |   `-ParmVarDecl 0xd94058 <col:23, col:56> col:56 __d 'const duration<long, std::ratio<1, 1> > &'
| | | | |-CXXDestructorDecl 0xb91b28 <line:341:2, col:22> col:2 referenced ~duration 'void () noexcept' default trivial
| | | | |-CXXMethodDecl 0xb91d18 <line:342:2, col:47> col:12 constexpr operator= 'std::chrono::duration<long, std::ratio<1, 1> > &(const std::chrono::duration<long, std::ratio<1, 1> > &)' default trivial noexcept-unevaluated 0xb91d18
| | | | | `-ParmVarDecl 0xb91c58 <col:22, col:36> col:37 'const std::chrono::duration<long, std::ratio<1, 1> > &'
| | | | |-CXXMethodDecl 0xb91e18 <line:345:2, line:347:16> line:346:2 used constexpr count 'std::chrono::duration<long, std::ratio<1, 1> >::rep () const'
| | | | | `-CompoundStmt 0xd95460 <line:347:2, col:16>
| | | | |   `-ReturnStmt 0xd95450 <col:4, col:11>
| | | | |     `-ImplicitCastExpr 0xd95438 <col:11> 'std::chrono::duration<long, std::ratio<1, 1> >::rep':'long' <LValueToRValue>
| | | | |       `-MemberExpr 0xd95408 <col:11> 'const std::chrono::duration<long, std::ratio<1, 1> >::rep':'const long' lvalue ->__r 0xb939b8
| | | | |         `-CXXThisExpr 0xd953c8 <col:11> 'const std::chrono::duration<long, std::ratio<1, 1> > *' implicit this
| | | | |-CXXMethodDecl 0xb91f18 <line:350:2, line:352:18> line:351:2 constexpr operator+ 'std::chrono::duration<long, std::ratio<1, 1> > () const'
| | | | |-CXXMethodDecl 0xb91fe8 <line:354:2, line:356:27> line:355:2 constexpr operator- 'std::chrono::duration<long, std::ratio<1, 1> > () const'
| | | | |-CXXMethodDecl 0xb920e8 <line:358:23, line:363:2> line:359:2 operator++ 'std::chrono::duration<long, std::ratio<1, 1> > &()'
| | | | |-CXXMethodDecl 0xb92258 <line:365:23, line:367:28> line:366:2 operator++ 'std::chrono::duration<long, std::ratio<1, 1> > (int)'
| | | | | `-ParmVarDecl 0xb92198 <col:13> col:16 'int'
| | | | |-CXXMethodDecl 0xb92330 <line:369:23, line:374:2> line:370:2 operator-- 'std::chrono::duration<long, std::ratio<1, 1> > &()'
| | | | |-CXXMethodDecl 0xb92470 <line:376:23, line:378:28> line:377:2 operator-- 'std::chrono::duration<long, std::ratio<1, 1> > (int)'
| | | | | `-ParmVarDecl 0xb923e0 <col:13> col:16 'int'
| | | | |-CXXMethodDecl 0xb925c8 <line:380:23, line:385:2> line:381:2 operator+= 'std::chrono::duration<long, std::ratio<1, 1> > &(const std::chrono::duration<long, std::ratio<1, 1> > &)'
| | | | | `-ParmVarDecl 0xb92538 <col:13, col:29> col:29 __d 'const std::chrono::duration<long, std::ratio<1, 1> > &'
| | | | |-CXXMethodDecl 0xb92720 <line:387:23, line:392:2> line:388:2 operator-= 'std::chrono::duration<long, std::ratio<1, 1> > &(const std::chrono::duration<long, std::ratio<1, 1> > &)'
| | | | | `-ParmVarDecl 0xb92690 <col:13, col:29> col:29 __d 'const std::chrono::duration<long, std::ratio<1, 1> > &'
| | | | |-CXXMethodDecl 0xb92908 <line:394:23, line:399:2> line:395:2 operator*= 'std::chrono::duration<long, std::ratio<1, 1> > &(const std::chrono::duration<long, std::ratio<1, 1> >::rep &)'
| | | | | `-ParmVarDecl 0xb92818 <col:13, col:24> col:24 __rhs 'const std::chrono::duration<long, std::ratio<1, 1> >::rep &'
| | | | |-CXXMethodDecl 0xb92a60 <line:401:23, line:406:2> line:402:2 operator/= 'std::chrono::duration<long, std::ratio<1, 1> > &(const std::chrono::duration<long, std::ratio<1, 1> >::rep &)'
| | | | | `-ParmVarDecl 0xb929d0 <col:13, col:24> col:24 __rhs 'const std::chrono::duration<long, std::ratio<1, 1> >::rep &'
| | | | |-FunctionTemplateDecl 0xb93048 <line:409:2, line:417:4> line:413:4 operator%=
| | | | | |-TemplateTypeParmDecl 0xb92b18 <line:409:11, col:28> col:20 typename depth 0 index 0 _Rep2
| | | | | | `-TemplateArgument type 'std::chrono::duration<long, std::ratio<1, 1> >::rep':'long'
| | | | | `-CXXMethodDecl 0xb92fa8 <line:411:4, line:417:4> line:413:4 operator%= 'typename enable_if<!treat_as_floating_point<_Rep2>::value, duration<long, ratio<1, 1> > &>::type (const std::chrono::duration<long, std::ratio<1, 1> >::rep &)'
| | | | |   `-ParmVarDecl 0xb92ea0 <col:15, col:26> col:26 __rhs 'const std::chrono::duration<long, std::ratio<1, 1> >::rep &'
| | | | |-FunctionTemplateDecl 0xb935b8 <line:419:2, line:427:4> line:423:4 operator%=
| | | | | |-TemplateTypeParmDecl 0xb93128 <line:419:11, col:28> col:20 typename depth 0 index 0 _Rep2
| | | | | | `-TemplateArgument type 'std::chrono::duration<long, std::ratio<1, 1> >::rep':'long'
| | | | | `-CXXMethodDecl 0xb93518 <line:421:4, line:427:4> line:423:4 operator%= 'typename enable_if<!treat_as_floating_point<_Rep2>::value, duration<long, ratio<1, 1> > &>::type (const std::chrono::duration<long, std::ratio<1, 1> > &)'
| | | | |   `-ParmVarDecl 0xb93410 <col:15, col:31> col:31 __d 'const std::chrono::duration<long, std::ratio<1, 1> > &'
| | | | |-CXXMethodDecl 0xb93720 <line:430:2, line:432:51> line:431:2 constexpr zero 'std::chrono::duration<long, std::ratio<1, 1> > () noexcept' static
| | | | |-CXXMethodDecl 0xb937f8 <line:434:2, line:436:50> line:435:2 constexpr min 'std::chrono::duration<long, std::ratio<1, 1> > () noexcept' static
| | | | |-CXXMethodDecl 0xb938d0 <line:438:2, line:440:50> line:439:2 constexpr max 'std::chrono::duration<long, std::ratio<1, 1> > () noexcept' static
| | | | |-AccessSpecDecl 0xb93980 <line:442:7, col:14> col:7 private
| | | | `-FieldDecl 0xb939b8 <line:443:2, col:6> col:6 referenced __r 'std::chrono::duration<long, std::ratio<1, 1> >::rep':'long'
| | | |-ClassTemplateSpecializationDecl 0xd1dc20 <line:299:5, line:444:7> line:300:14 struct duration definition
| | | | |-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal has_user_declared_ctor has_constexpr_non_copy_move_ctor
| | | | | |-DefaultConstructor exists trivial constexpr
| | | | | |-CopyConstructor trivial user_declared has_const_param implicit_has_const_param
| | | | | |-MoveConstructor
| | | | | |-CopyAssignment trivial has_const_param user_declared implicit_has_const_param
| | | | | |-MoveAssignment
| | | | | `-Destructor irrelevant trivial user_declared
| | | | |-TemplateArgument type 'long'
| | | | |-TemplateArgument type 'std::ratio<60, 1>'
| | | | |-CXXRecordDecl 0xdf28a8 prev 0xd1dc20 <col:7, col:14> col:14 implicit struct duration
| | | | |-AccessSpecDecl 0xdf2938 <line:302:7, col:14> col:7 private
| | | | |-TypeAliasTemplateDecl 0xdf2ae0 <line:303:2, line:304:52> col:4 __is_float
| | | | | |-TemplateTypeParmDecl 0xdf2960 <line:303:11, col:20> col:20 typename depth 0 index 0 _Rep2
| | | | | `-TypeAliasDecl 0xdf2a80 <line:304:4, col:52> col:10 __is_float 'treat_as_floating_point<_Rep2>'
| | | | |   `-TemplateSpecializationType 0xdf2a10 'treat_as_floating_point<_Rep2>' dependent treat_as_floating_point
| | | | |     `-TemplateArgument type '_Rep2'
| | | | |-TypeAliasTemplateDecl 0xdf3148 <line:307:2, line:309:65> line:308:4 __is_harmonic
| | | | | |-TemplateTypeParmDecl 0xdf2b48 <line:307:11, col:20> col:20 typename depth 0 index 0 _Period2
| | | | | `-TypeAliasDecl 0xdf30e8 <line:308:4, line:309:65> line:308:10 __is_harmonic '__bool_constant<ratio_divide<_Period2, ratio<60, 1> >::den == 1>':'integral_constant<bool, ratio_divide<_Period2, ratio<60, 1> >::den == 1>'
| | | | |   `-TemplateSpecializationType 0xdf3070 '__bool_constant<ratio_divide<_Period2, ratio<60, 1> >::den == 1>' sugar dependent alias __bool_constant
| | | | |     |-TemplateArgument expr
| | | | |     | `-ImplicitCastExpr 0xdf2f08 <line:309:24, col:64> 'bool' <Dependent>
| | | | |     |   `-BinaryOperator 0xdf2ee8 <col:24, col:64> '<dependent type>' '=='
| | | | |     |     |-DependentScopeDeclRefExpr 0xdf2eb0 <col:24, col:57> '<dependent type>' lvalue
| | | | |     |     `-IntegerLiteral 0xd01ba8 <col:64> 'int' 1
| | | | |     |-TemplateSpecializationType 0xdf2fd0 'integral_constant<bool, ratio_divide<_Period2, ratio<60, 1> >::den == 1>' dependent integral_constant
| | | | |     | |-TemplateArgument type 'bool'
| | | | |     | `-TemplateArgument expr
| | | | |     |   `-SubstNonTypeTemplateParmExpr 0xdf2f78 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/type_traits:81:53> 'bool'
| | | | |     |     `-ImplicitCastExpr 0xdf2f08 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/chrono:309:24, col:64> 'bool' <Dependent>
| | | | |     |       `-BinaryOperator 0xdf2ee8 <col:24, col:64> '<dependent type>' '=='
| | | | |     |         |-DependentScopeDeclRefExpr 0xdf2eb0 <col:24, col:57> '<dependent type>' lvalue
| | | | |     |         `-IntegerLiteral 0xd01ba8 <col:64> 'int' 1
| | | | |     `-TemplateSpecializationType 0xdf2fd0 'integral_constant<bool, ratio_divide<_Period2, ratio<60, 1> >::den == 1>' dependent integral_constant
| | | | |       |-TemplateArgument type 'bool'
| | | | |       `-TemplateArgument expr
| | | | |         `-SubstNonTypeTemplateParmExpr 0xdf2f78 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/type_traits:81:53> 'bool'
| | | | |           `-ImplicitCastExpr 0xdf2f08 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/chrono:309:24, col:64> 'bool' <Dependent>
| | | | |             `-BinaryOperator 0xdf2ee8 <col:24, col:64> '<dependent type>' '=='
| | | | |               |-DependentScopeDeclRefExpr 0xdf2eb0 <col:24, col:57> '<dependent type>' lvalue
| | | | |               `-IntegerLiteral 0xd01ba8 <col:64> 'int' 1
| | | | |-AccessSpecDecl 0xdf31b0 <line:311:7, col:13> col:7 public
| | | | |-TypedefDecl 0xdf31e8 <line:313:2, col:20> col:20 rep 'long':'long'
| | | | | `-SubstTemplateTypeParmType 0xd2a3c0 'long' sugar
| | | | |   |-TemplateTypeParmType 0xd011b0 '_Rep' dependent depth 0 index 0
| | | | |   | `-TemplateTypeParm 0xd01158 '_Rep'
| | | | |   `-BuiltinType 0x7db3a0 'long'
| | | | |-TypedefDecl 0xdf3250 <line:314:2, col:23> col:23 period 'std::ratio<60, 1>':'std::ratio<60, 1>'
| | | | | `-SubstTemplateTypeParmType 0xddfe20 'std::ratio<60, 1>' sugar
| | | | |   |-TemplateTypeParmType 0xd01230 '_Period' dependent depth 0 index 1
| | | | |   | `-TemplateTypeParm 0xd011d8 '_Period'
| | | | |   `-RecordType 0xd1db60 'std::ratio<60, 1>'
| | | | |     `-ClassTemplateSpecialization 0xd1da68 'ratio'
| | | | |-StaticAssertDecl 0xdf3408 <line:316:2, col:71> col:2
| | | | | |-UnaryOperator 0xdf33d0 <col:16, col:38> 'bool' prefix '!' cannot overflow
| | | | | | `-ImplicitCastExpr 0xdf33b8 <col:17, col:38> 'bool':'bool' <LValueToRValue>
| | | | | |   `-DeclRefExpr 0xdf3388 <col:17, col:38> 'const bool':'const bool' lvalue Var 0xb7db88 'value' 'const bool':'const bool' non_odr_use_constant
| | | | | `-StringLiteral 0xd02198 <col:45> 'const char [25]' lvalue "rep cannot be a duration"
| | | | |-StaticAssertDecl 0xdf3590 <line:317:2, line:318:51> line:317:2
| | | | | |-ImplicitCastExpr 0xdf3558 <col:16, col:37> 'bool':'bool' <LValueToRValue>
| | | | | | `-DeclRefExpr 0xdf3528 <col:16, col:37> 'const bool':'const bool' lvalue Var 0xad7678 'value' 'const bool':'const bool' non_odr_use_constant
| | | | | `-StringLiteral 0xd023c8 <line:318:9> 'const char [41]' lvalue "period must be a specialization of ratio"
| | | | |-StaticAssertDecl 0xdf36c0 <line:319:2, col:59> col:2
| | | | | |-BinaryOperator 0xdf3680 <col:16, col:31> 'bool' '>'
| | | | | | |-ImplicitCastExpr 0xdf3650 <col:16, col:25> 'intmax_t':'long' <LValueToRValue>
| | | | | | | `-DeclRefExpr 0xdf3620 <col:16, col:25> 'const intmax_t':'const long' lvalue Var 0xde1f00 'num' 'const intmax_t':'const long' non_odr_use_constant
| | | | | | `-ImplicitCastExpr 0xdf3668 <col:31> 'long' <IntegralCast>
| | | | | |   `-IntegerLiteral 0xd024d0 <col:31> 'int' 0
| | | | | `-StringLiteral 0xd02588 <col:34> 'const char [24]' lvalue "period must be positive"
| | | | |-CXXConstructorDecl 0xdf3738 <line:322:2, col:31> col:12 duration 'void ()' default trivial noexcept-unevaluated 0xdf3738
| | | | |-CXXConstructorDecl 0xdf3908 <line:324:2, col:36> col:2 constexpr duration 'void (const std::chrono::duration<long, std::ratio<60, 1> > &)' default trivial noexcept-unevaluated 0xdf3908
| | | | | `-ParmVarDecl 0xdf3828 <col:11, col:25> col:26 'const std::chrono::duration<long, std::ratio<60, 1> > &'
| | | | |-FunctionTemplateDecl 0xdf45f0 <line:328:2, line:332:37> line:331:23 duration
| | | | | |-TemplateTypeParmDecl 0xdf39c8 <line:328:11, col:20> col:20 typename depth 0 index 0 _Rep2
| | | | | |-TemplateTypeParmDecl 0xdf3a48 <col:27, <scratch space>:140:1> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/chrono:328:36 typename depth 0 index 1
| | | | | | `-TemplateArgument type '_Require<is_convertible<const _Rep2 &, std::chrono::duration<long, std::ratio<60, 1> >::rep>, __or_<__is_float<std::chrono::duration<long, std::ratio<60, 1> >::rep>, __not_<__is_float<_Rep2> > > >':'typename enable_if<__and_<is_convertible<const type-parameter-0-0 &, long>, __or_<treat_as_floating_point<long>, __not_<treat_as_floating_point<type-parameter-0-0> > > >::value>::type'
| | | | | `-CXXConstructorDecl 0xdf4548 <line:331:4, line:332:37> line:331:23 constexpr duration 'void (const _Rep2 &)'
| | | | |   `-ParmVarDecl 0xdf4460 <col:32, col:45> col:45 __rep 'const _Rep2 &'
| | | | |-FunctionTemplateDecl 0xdf5a70 <line:334:2, line:339:50> line:338:14 duration
| | | | | |-TemplateTypeParmDecl 0xdf46d0 <line:334:11, col:20> col:20 typename depth 0 index 0 _Rep2
| | | | | |-TemplateTypeParmDecl 0xdf4748 <col:27, col:36> col:36 typename depth 0 index 1 _Period2
| | | | | |-TemplateTypeParmDecl 0xdf47c8 <col:46, <scratch space>:145:1> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/chrono:334:55 typename depth 0 index 2
| | | | | | `-TemplateArgument type '_Require<__or_<__is_float<std::chrono::duration<long, std::ratio<60, 1> >::rep>, __and_<__is_harmonic<_Period2>, __not_<__is_float<_Rep2> > > > >':'typename enable_if<__and_<__or_<treat_as_floating_point<long>, __and_<integral_constant<bool, ratio_divide<type-parameter-0-1, ratio<60, 1> >::den == 1>, __not_<treat_as_floating_point<type-parameter-0-0> > > > >::value>::type'
| | | | | `-CXXConstructorDecl 0xdf59c8 <line:338:4, line:339:50> line:338:14 constexpr duration 'void (const duration<_Rep2, _Period2> &)'
| | | | |   `-ParmVarDecl 0xdf58e8 <col:23, col:56> col:56 __d 'const duration<_Rep2, _Period2> &'
| | | | |-CXXDestructorDecl 0xdf5b78 <line:341:2, col:22> col:2 ~duration 'void ()' default trivial noexcept-unevaluated 0xdf5b78
| | | | |-CXXMethodDecl 0xdf5d68 <line:342:2, col:47> col:12 constexpr operator= 'std::chrono::duration<long, std::ratio<60, 1> > &(const std::chrono::duration<long, std::ratio<60, 1> > &)' default trivial noexcept-unevaluated 0xdf5d68
| | | | | `-ParmVarDecl 0xdf5ca8 <col:22, col:36> col:37 'const std::chrono::duration<long, std::ratio<60, 1> > &'
| | | | |-CXXMethodDecl 0xdf5e68 <line:345:2, line:347:16> line:346:2 constexpr count 'std::chrono::duration<long, std::ratio<60, 1> >::rep () const'
| | | | |-CXXMethodDecl 0xdf5f68 <line:350:2, line:352:18> line:351:2 constexpr operator+ 'std::chrono::duration<long, std::ratio<60, 1> > () const'
| | | | |-CXXMethodDecl 0xdf6038 <line:354:2, line:356:27> line:355:2 constexpr operator- 'std::chrono::duration<long, std::ratio<60, 1> > () const'
| | | | |-CXXMethodDecl 0xdf6138 <line:358:23, line:363:2> line:359:2 operator++ 'std::chrono::duration<long, std::ratio<60, 1> > &()'
| | | | |-CXXMethodDecl 0xdf62a8 <line:365:23, line:367:28> line:366:2 operator++ 'std::chrono::duration<long, std::ratio<60, 1> > (int)'
| | | | | `-ParmVarDecl 0xdf61e8 <col:13> col:16 'int'
| | | | |-CXXMethodDecl 0xdf6380 <line:369:23, line:374:2> line:370:2 operator-- 'std::chrono::duration<long, std::ratio<60, 1> > &()'
| | | | |-CXXMethodDecl 0xdf64c0 <line:376:23, line:378:28> line:377:2 operator-- 'std::chrono::duration<long, std::ratio<60, 1> > (int)'
| | | | | `-ParmVarDecl 0xdf6430 <col:13> col:16 'int'
| | | | |-CXXMethodDecl 0xdf6618 <line:380:23, line:385:2> line:381:2 operator+= 'std::chrono::duration<long, std::ratio<60, 1> > &(const std::chrono::duration<long, std::ratio<60, 1> > &)'
| | | | | `-ParmVarDecl 0xdf6588 <col:13, col:29> col:29 __d 'const std::chrono::duration<long, std::ratio<60, 1> > &'
| | | | |-CXXMethodDecl 0xdf6770 <line:387:23, line:392:2> line:388:2 operator-= 'std::chrono::duration<long, std::ratio<60, 1> > &(const std::chrono::duration<long, std::ratio<60, 1> > &)'
| | | | | `-ParmVarDecl 0xdf66e0 <col:13, col:29> col:29 __d 'const std::chrono::duration<long, std::ratio<60, 1> > &'
| | | | |-CXXMethodDecl 0xdf6958 <line:394:23, line:399:2> line:395:2 operator*= 'std::chrono::duration<long, std::ratio<60, 1> > &(const std::chrono::duration<long, std::ratio<60, 1> >::rep &)'
| | | | | `-ParmVarDecl 0xdf6868 <col:13, col:24> col:24 __rhs 'const std::chrono::duration<long, std::ratio<60, 1> >::rep &'
| | | | |-CXXMethodDecl 0xdf6ab0 <line:401:23, line:406:2> line:402:2 operator/= 'std::chrono::duration<long, std::ratio<60, 1> > &(const std::chrono::duration<long, std::ratio<60, 1> >::rep &)'
| | | | | `-ParmVarDecl 0xdf6a20 <col:13, col:24> col:24 __rhs 'const std::chrono::duration<long, std::ratio<60, 1> >::rep &'
| | | | |-FunctionTemplateDecl 0xdf76c8 <line:409:2, line:417:4> line:413:4 operator%=
| | | | | |-TemplateTypeParmDecl 0xdf6b68 <line:409:11, col:28> col:20 typename depth 0 index 0 _Rep2
| | | | | | `-TemplateArgument type 'std::chrono::duration<long, std::ratio<60, 1> >::rep':'long'
| | | | | `-CXXMethodDecl 0xdf7628 <line:411:4, line:417:4> line:413:4 operator%= 'typename enable_if<!treat_as_floating_point<_Rep2>::value, duration<long, ratio<60, 1> > &>::type (const std::chrono::duration<long, std::ratio<60, 1> >::rep &)'
| | | | |   `-ParmVarDecl 0xdf6ef0 <col:15, col:26> col:26 __rhs 'const std::chrono::duration<long, std::ratio<60, 1> >::rep &'
| | | | |-FunctionTemplateDecl 0xdf7c38 <line:419:2, line:427:4> line:423:4 operator%=
| | | | | |-TemplateTypeParmDecl 0xdf77a8 <line:419:11, col:28> col:20 typename depth 0 index 0 _Rep2
| | | | | | `-TemplateArgument type 'std::chrono::duration<long, std::ratio<60, 1> >::rep':'long'
| | | | | `-CXXMethodDecl 0xdf7b98 <line:421:4, line:427:4> line:423:4 operator%= 'typename enable_if<!treat_as_floating_point<_Rep2>::value, duration<long, ratio<60, 1> > &>::type (const std::chrono::duration<long, std::ratio<60, 1> > &)'
| | | | |   `-ParmVarDecl 0xdf7a90 <col:15, col:31> col:31 __d 'const std::chrono::duration<long, std::ratio<60, 1> > &'
| | | | |-CXXMethodDecl 0xdf7d70 <line:430:2, line:432:51> line:431:2 constexpr zero 'std::chrono::duration<long, std::ratio<60, 1> > () noexcept' static
| | | | |-CXXMethodDecl 0xdf7e48 <line:434:2, line:436:50> line:435:2 constexpr min 'std::chrono::duration<long, std::ratio<60, 1> > () noexcept' static
| | | | |-CXXMethodDecl 0xdf7f20 <line:438:2, line:440:50> line:439:2 constexpr max 'std::chrono::duration<long, std::ratio<60, 1> > () noexcept' static
| | | | |-AccessSpecDecl 0xdf7fd0 <line:442:7, col:14> col:7 private
| | | | `-FieldDecl 0xdf8008 <line:443:2, col:6> col:6 __r 'std::chrono::duration<long, std::ratio<60, 1> >::rep':'long'
| | | |-ClassTemplateSpecializationDecl 0xd1e0e0 <line:299:5, line:444:7> line:300:14 struct duration definition
| | | | |-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal has_user_declared_ctor has_constexpr_non_copy_move_ctor
| | | | | |-DefaultConstructor exists trivial constexpr
| | | | | |-CopyConstructor trivial user_declared has_const_param implicit_has_const_param
| | | | | |-MoveConstructor
| | | | | |-CopyAssignment trivial has_const_param user_declared implicit_has_const_param
| | | | | |-MoveAssignment
| | | | | `-Destructor irrelevant trivial user_declared
| | | | |-TemplateArgument type 'long'
| | | | |-TemplateArgument type 'std::ratio<3600, 1>'
| | | | |-CXXRecordDecl 0xdd8f18 prev 0xd1e0e0 <col:7, col:14> col:14 implicit struct duration
| | | | |-AccessSpecDecl 0xdd8fa8 <line:302:7, col:14> col:7 private
| | | | |-TypeAliasTemplateDecl 0xdd9150 <line:303:2, line:304:52> col:4 __is_float
| | | | | |-TemplateTypeParmDecl 0xdd8fd0 <line:303:11, col:20> col:20 typename depth 0 index 0 _Rep2
| | | | | `-TypeAliasDecl 0xdd90f0 <line:304:4, col:52> col:10 __is_float 'treat_as_floating_point<_Rep2>'
| | | | |   `-TemplateSpecializationType 0xdd9080 'treat_as_floating_point<_Rep2>' dependent treat_as_floating_point
| | | | |     `-TemplateArgument type '_Rep2'
| | | | |-TypeAliasTemplateDecl 0xdd97a8 <line:307:2, line:309:65> line:308:4 __is_harmonic
| | | | | |-TemplateTypeParmDecl 0xdd91b8 <line:307:11, col:20> col:20 typename depth 0 index 0 _Period2
| | | | | `-TypeAliasDecl 0xdd9748 <line:308:4, line:309:65> line:308:10 __is_harmonic '__bool_constant<ratio_divide<_Period2, ratio<3600, 1> >::den == 1>':'integral_constant<bool, ratio_divide<_Period2, ratio<3600, 1> >::den == 1>'
| | | | |   `-TemplateSpecializationType 0xdd96d0 '__bool_constant<ratio_divide<_Period2, ratio<3600, 1> >::den == 1>' sugar dependent alias __bool_constant
| | | | |     |-TemplateArgument expr
| | | | |     | `-ImplicitCastExpr 0xdd9578 <line:309:24, col:64> 'bool' <Dependent>
| | | | |     |   `-BinaryOperator 0xdd9558 <col:24, col:64> '<dependent type>' '=='
| | | | |     |     |-DependentScopeDeclRefExpr 0xdd9520 <col:24, col:57> '<dependent type>' lvalue
| | | | |     |     `-IntegerLiteral 0xd01ba8 <col:64> 'int' 1
| | | | |     |-TemplateSpecializationType 0xdd9630 'integral_constant<bool, ratio_divide<_Period2, ratio<3600, 1> >::den == 1>' dependent integral_constant
| | | | |     | |-TemplateArgument type 'bool'
| | | | |     | `-TemplateArgument expr
| | | | |     |   `-SubstNonTypeTemplateParmExpr 0xdd95e8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/type_traits:81:53> 'bool'
| | | | |     |     `-ImplicitCastExpr 0xdd9578 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/chrono:309:24, col:64> 'bool' <Dependent>
| | | | |     |       `-BinaryOperator 0xdd9558 <col:24, col:64> '<dependent type>' '=='
| | | | |     |         |-DependentScopeDeclRefExpr 0xdd9520 <col:24, col:57> '<dependent type>' lvalue
| | | | |     |         `-IntegerLiteral 0xd01ba8 <col:64> 'int' 1
| | | | |     `-TemplateSpecializationType 0xdd9630 'integral_constant<bool, ratio_divide<_Period2, ratio<3600, 1> >::den == 1>' dependent integral_constant
| | | | |       |-TemplateArgument type 'bool'
| | | | |       `-TemplateArgument expr
| | | | |         `-SubstNonTypeTemplateParmExpr 0xdd95e8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/type_traits:81:53> 'bool'
| | | | |           `-ImplicitCastExpr 0xdd9578 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/chrono:309:24, col:64> 'bool' <Dependent>
| | | | |             `-BinaryOperator 0xdd9558 <col:24, col:64> '<dependent type>' '=='
| | | | |               |-DependentScopeDeclRefExpr 0xdd9520 <col:24, col:57> '<dependent type>' lvalue
| | | | |               `-IntegerLiteral 0xd01ba8 <col:64> 'int' 1
| | | | |-AccessSpecDecl 0xdd9810 <line:311:7, col:13> col:7 public
| | | | |-TypedefDecl 0xdd9848 <line:313:2, col:20> col:20 rep 'long':'long'
| | | | | `-SubstTemplateTypeParmType 0xd2a3c0 'long' sugar
| | | | |   |-TemplateTypeParmType 0xd011b0 '_Rep' dependent depth 0 index 0
| | | | |   | `-TemplateTypeParm 0xd01158 '_Rep'
| | | | |   `-BuiltinType 0x7db3a0 'long'
| | | | |-TypedefDecl 0xdd98b0 <line:314:2, col:23> col:23 period 'std::ratio<3600, 1>':'std::ratio<3600, 1>'
| | | | | `-SubstTemplateTypeParmType 0xdbf1d0 'std::ratio<3600, 1>' sugar
| | | | |   |-TemplateTypeParmType 0xd01230 '_Period' dependent depth 0 index 1
| | | | |   | `-TemplateTypeParm 0xd011d8 '_Period'
| | | | |   `-RecordType 0xd1e020 'std::ratio<3600, 1>'
| | | | |     `-ClassTemplateSpecialization 0xd1df20 'ratio'
| | | | |-StaticAssertDecl 0xdd9a68 <line:316:2, col:71> col:2
| | | | | |-UnaryOperator 0xdd9a30 <col:16, col:38> 'bool' prefix '!' cannot overflow
| | | | | | `-ImplicitCastExpr 0xdd9a18 <col:17, col:38> 'bool':'bool' <LValueToRValue>
| | | | | |   `-DeclRefExpr 0xdd99e8 <col:17, col:38> 'const bool':'const bool' lvalue Var 0xb7db88 'value' 'const bool':'const bool' non_odr_use_constant
| | | | | `-StringLiteral 0xd02198 <col:45> 'const char [25]' lvalue "rep cannot be a duration"
| | | | |-StaticAssertDecl 0xdda2b0 <line:317:2, line:318:51> line:317:2
| | | | | |-ImplicitCastExpr 0xdd9bb8 <col:16, col:37> 'bool':'bool' <LValueToRValue>
| | | | | | `-DeclRefExpr 0xdd9b88 <col:16, col:37> 'const bool':'const bool' lvalue Var 0xad7678 'value' 'const bool':'const bool' non_odr_use_constant
| | | | | `-StringLiteral 0xd023c8 <line:318:9> 'const char [41]' lvalue "period must be a specialization of ratio"
| | | | |-StaticAssertDecl 0xdda3e0 <line:319:2, col:59> col:2
| | | | | |-BinaryOperator 0xdda3a0 <col:16, col:31> 'bool' '>'
| | | | | | |-ImplicitCastExpr 0xdda370 <col:16, col:25> 'intmax_t':'long' <LValueToRValue>
| | | | | | | `-DeclRefExpr 0xdda340 <col:16, col:25> 'const intmax_t':'const long' lvalue Var 0xdc1560 'num' 'const intmax_t':'const long' non_odr_use_constant
| | | | | | `-ImplicitCastExpr 0xdda388 <col:31> 'long' <IntegralCast>
| | | | | |   `-IntegerLiteral 0xd024d0 <col:31> 'int' 0
| | | | | `-StringLiteral 0xd02588 <col:34> 'const char [24]' lvalue "period must be positive"
| | | | |-CXXConstructorDecl 0xdda458 <line:322:2, col:31> col:12 duration 'void ()' default trivial noexcept-unevaluated 0xdda458
| | | | |-CXXConstructorDecl 0xdda628 <line:324:2, col:36> col:2 constexpr duration 'void (const std::chrono::duration<long, std::ratio<3600, 1> > &)' default trivial noexcept-unevaluated 0xdda628
| | | | | `-ParmVarDecl 0xdda548 <col:11, col:25> col:26 'const std::chrono::duration<long, std::ratio<3600, 1> > &'
| | | | |-FunctionTemplateDecl 0xddb310 <line:328:2, line:332:37> line:331:23 duration
| | | | | |-TemplateTypeParmDecl 0xdda6e8 <line:328:11, col:20> col:20 typename depth 0 index 0 _Rep2
| | | | | |-TemplateTypeParmDecl 0xdda768 <col:27, <scratch space>:140:1> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/chrono:328:36 typename depth 0 index 1
| | | | | | `-TemplateArgument type '_Require<is_convertible<const _Rep2 &, std::chrono::duration<long, std::ratio<3600, 1> >::rep>, __or_<__is_float<std::chrono::duration<long, std::ratio<3600, 1> >::rep>, __not_<__is_float<_Rep2> > > >':'typename enable_if<__and_<is_convertible<const type-parameter-0-0 &, long>, __or_<treat_as_floating_point<long>, __not_<treat_as_floating_point<type-parameter-0-0> > > >::value>::type'
| | | | | `-CXXConstructorDecl 0xddb268 <line:331:4, line:332:37> line:331:23 constexpr duration 'void (const _Rep2 &)'
| | | | |   `-ParmVarDecl 0xddb180 <col:32, col:45> col:45 __rep 'const _Rep2 &'
| | | | |-FunctionTemplateDecl 0xddc790 <line:334:2, line:339:50> line:338:14 duration
| | | | | |-TemplateTypeParmDecl 0xddb3f0 <line:334:11, col:20> col:20 typename depth 0 index 0 _Rep2
| | | | | |-TemplateTypeParmDecl 0xddb468 <col:27, col:36> col:36 typename depth 0 index 1 _Period2
| | | | | |-TemplateTypeParmDecl 0xddb4e8 <col:46, <scratch space>:145:1> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/chrono:334:55 typename depth 0 index 2
| | | | | | `-TemplateArgument type '_Require<__or_<__is_float<std::chrono::duration<long, std::ratio<3600, 1> >::rep>, __and_<__is_harmonic<_Period2>, __not_<__is_float<_Rep2> > > > >':'typename enable_if<__and_<__or_<treat_as_floating_point<long>, __and_<integral_constant<bool, ratio_divide<type-parameter-0-1, ratio<3600, 1> >::den == 1>, __not_<treat_as_floating_point<type-parameter-0-0> > > > >::value>::type'
| | | | | `-CXXConstructorDecl 0xddc6e8 <line:338:4, line:339:50> line:338:14 constexpr duration 'void (const duration<_Rep2, _Period2> &)'
| | | | |   `-ParmVarDecl 0xddc608 <col:23, col:56> col:56 __d 'const duration<_Rep2, _Period2> &'
| | | | |-CXXDestructorDecl 0xddc898 <line:341:2, col:22> col:2 ~duration 'void ()' default trivial noexcept-unevaluated 0xddc898
| | | | |-CXXMethodDecl 0xddca88 <line:342:2, col:47> col:12 constexpr operator= 'std::chrono::duration<long, std::ratio<3600, 1> > &(const std::chrono::duration<long, std::ratio<3600, 1> > &)' default trivial noexcept-unevaluated 0xddca88
| | | | | `-ParmVarDecl 0xddc9c8 <col:22, col:36> col:37 'const std::chrono::duration<long, std::ratio<3600, 1> > &'
| | | | |-CXXMethodDecl 0xddcb88 <line:345:2, line:347:16> line:346:2 constexpr count 'std::chrono::duration<long, std::ratio<3600, 1> >::rep () const'
| | | | |-CXXMethodDecl 0xddcc88 <line:350:2, line:352:18> line:351:2 constexpr operator+ 'std::chrono::duration<long, std::ratio<3600, 1> > () const'
| | | | |-CXXMethodDecl 0xddcd58 <line:354:2, line:356:27> line:355:2 constexpr operator- 'std::chrono::duration<long, std::ratio<3600, 1> > () const'
| | | | |-CXXMethodDecl 0xddce58 <line:358:23, line:363:2> line:359:2 operator++ 'std::chrono::duration<long, std::ratio<3600, 1> > &()'
| | | | |-CXXMethodDecl 0xddcfc8 <line:365:23, line:367:28> line:366:2 operator++ 'std::chrono::duration<long, std::ratio<3600, 1> > (int)'
| | | | | `-ParmVarDecl 0xddcf08 <col:13> col:16 'int'
| | | | |-CXXMethodDecl 0xddd0a0 <line:369:23, line:374:2> line:370:2 operator-- 'std::chrono::duration<long, std::ratio<3600, 1> > &()'
| | | | |-CXXMethodDecl 0xddd1e0 <line:376:23, line:378:28> line:377:2 operator-- 'std::chrono::duration<long, std::ratio<3600, 1> > (int)'
| | | | | `-ParmVarDecl 0xddd150 <col:13> col:16 'int'
| | | | |-CXXMethodDecl 0xddd338 <line:380:23, line:385:2> line:381:2 operator+= 'std::chrono::duration<long, std::ratio<3600, 1> > &(const std::chrono::duration<long, std::ratio<3600, 1> > &)'
| | | | | `-ParmVarDecl 0xddd2a8 <col:13, col:29> col:29 __d 'const std::chrono::duration<long, std::ratio<3600, 1> > &'
| | | | |-CXXMethodDecl 0xddd490 <line:387:23, line:392:2> line:388:2 operator-= 'std::chrono::duration<long, std::ratio<3600, 1> > &(const std::chrono::duration<long, std::ratio<3600, 1> > &)'
| | | | | `-ParmVarDecl 0xddd400 <col:13, col:29> col:29 __d 'const std::chrono::duration<long, std::ratio<3600, 1> > &'
| | | | |-CXXMethodDecl 0xddd678 <line:394:23, line:399:2> line:395:2 operator*= 'std::chrono::duration<long, std::ratio<3600, 1> > &(const std::chrono::duration<long, std::ratio<3600, 1> >::rep &)'
| | | | | `-ParmVarDecl 0xddd588 <col:13, col:24> col:24 __rhs 'const std::chrono::duration<long, std::ratio<3600, 1> >::rep &'
| | | | |-CXXMethodDecl 0xddd7d0 <line:401:23, line:406:2> line:402:2 operator/= 'std::chrono::duration<long, std::ratio<3600, 1> > &(const std::chrono::duration<long, std::ratio<3600, 1> >::rep &)'
| | | | | `-ParmVarDecl 0xddd740 <col:13, col:24> col:24 __rhs 'const std::chrono::duration<long, std::ratio<3600, 1> >::rep &'
| | | | |-FunctionTemplateDecl 0xddddb8 <line:409:2, line:417:4> line:413:4 operator%=
| | | | | |-TemplateTypeParmDecl 0xddd888 <line:409:11, col:28> col:20 typename depth 0 index 0 _Rep2
| | | | | | `-TemplateArgument type 'std::chrono::duration<long, std::ratio<3600, 1> >::rep':'long'
| | | | | `-CXXMethodDecl 0xdddd18 <line:411:4, line:417:4> line:413:4 operator%= 'typename enable_if<!treat_as_floating_point<_Rep2>::value, duration<long, ratio<3600, 1> > &>::type (const std::chrono::duration<long, std::ratio<3600, 1> >::rep &)'
| | | | |   `-ParmVarDecl 0xdddc10 <col:15, col:26> col:26 __rhs 'const std::chrono::duration<long, std::ratio<3600, 1> >::rep &'
| | | | |-FunctionTemplateDecl 0xddee20 <line:419:2, line:427:4> line:423:4 operator%=
| | | | | |-TemplateTypeParmDecl 0xddde98 <line:419:11, col:28> col:20 typename depth 0 index 0 _Rep2
| | | | | | `-TemplateArgument type 'std::chrono::duration<long, std::ratio<3600, 1> >::rep':'long'
| | | | | `-CXXMethodDecl 0xdded80 <line:421:4, line:427:4> line:423:4 operator%= 'typename enable_if<!treat_as_floating_point<_Rep2>::value, duration<long, ratio<3600, 1> > &>::type (const std::chrono::duration<long, std::ratio<3600, 1> > &)'
| | | | |   `-ParmVarDecl 0xdde180 <col:15, col:31> col:31 __d 'const std::chrono::duration<long, std::ratio<3600, 1> > &'
| | | | |-CXXMethodDecl 0xddef50 <line:430:2, line:432:51> line:431:2 constexpr zero 'std::chrono::duration<long, std::ratio<3600, 1> > () noexcept' static
| | | | |-CXXMethodDecl 0xddf028 <line:434:2, line:436:50> line:435:2 constexpr min 'std::chrono::duration<long, std::ratio<3600, 1> > () noexcept' static
| | | | |-CXXMethodDecl 0xddf100 <line:438:2, line:440:50> line:439:2 constexpr max 'std::chrono::duration<long, std::ratio<3600, 1> > () noexcept' static
| | | | |-AccessSpecDecl 0xddf1b0 <line:442:7, col:14> col:7 private
| | | | `-FieldDecl 0xddf1e8 <line:443:2, col:6> col:6 __r 'std::chrono::duration<long, std::ratio<3600, 1> >::rep':'long'
| | | |-ClassTemplateSpecializationDecl 0xdbe9e8 <line:299:5, line:444:7> line:300:14 struct duration definition
| | | | |-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal has_user_declared_ctor has_constexpr_non_copy_move_ctor
| | | | | |-DefaultConstructor exists trivial constexpr
| | | | | |-CopyConstructor trivial user_declared has_const_param implicit_has_const_param
| | | | | |-MoveConstructor
| | | | | |-CopyAssignment trivial has_const_param user_declared implicit_has_const_param
| | | | | |-MoveAssignment
| | | | | `-Destructor irrelevant trivial user_declared
| | | | |-TemplateArgument type 'long double'
| | | | |-TemplateArgument type 'std::ratio<3600, 1>'
| | | | |-CXXRecordDecl 0xdbee70 prev 0xdbe9e8 <col:7, col:14> col:14 implicit struct duration
| | | | |-AccessSpecDecl 0xdbef00 <line:302:7, col:14> col:7 private
| | | | |-TypeAliasTemplateDecl 0xdbf0b0 <line:303:2, line:304:52> col:4 __is_float
| | | | | |-TemplateTypeParmDecl 0xdbef28 <line:303:11, col:20> col:20 typename depth 0 index 0 _Rep2
| | | | | `-TypeAliasDecl 0xdbf050 <line:304:4, col:52> col:10 __is_float 'treat_as_floating_point<_Rep2>'
| | | | |   `-TemplateSpecializationType 0xdbefe0 'treat_as_floating_point<_Rep2>' dependent treat_as_floating_point
| | | | |     `-TemplateArgument type '_Rep2'
| | | | |-TypeAliasTemplateDecl 0xdbf878 <line:307:2, line:309:65> line:308:4 __is_harmonic
| | | | | |-TemplateTypeParmDecl 0xdbf118 <line:307:11, col:20> col:20 typename depth 0 index 0 _Period2
| | | | | `-TypeAliasDecl 0xdbf818 <line:308:4, line:309:65> line:308:10 __is_harmonic '__bool_constant<ratio_divide<_Period2, ratio<3600, 1> >::den == 1>':'integral_constant<bool, ratio_divide<_Period2, ratio<3600, 1> >::den == 1>'
| | | | |   `-TemplateSpecializationType 0xdbf7a0 '__bool_constant<ratio_divide<_Period2, ratio<3600, 1> >::den == 1>' sugar dependent alias __bool_constant
| | | | |     |-TemplateArgument expr
| | | | |     | `-ImplicitCastExpr 0xdbf5d8 <line:309:24, col:64> 'bool' <Dependent>
| | | | |     |   `-BinaryOperator 0xdbf5b8 <col:24, col:64> '<dependent type>' '=='
| | | | |     |     |-DependentScopeDeclRefExpr 0xdbf580 <col:24, col:57> '<dependent type>' lvalue
| | | | |     |     `-IntegerLiteral 0xd01ba8 <col:64> 'int' 1
| | | | |     |-TemplateSpecializationType 0xdbf700 'integral_constant<bool, ratio_divide<_Period2, ratio<3600, 1> >::den == 1>' dependent integral_constant
| | | | |     | |-TemplateArgument type 'bool'
| | | | |     | `-TemplateArgument expr
| | | | |     |   `-SubstNonTypeTemplateParmExpr 0xdbf648 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/type_traits:81:53> 'bool'
| | | | |     |     `-ImplicitCastExpr 0xdbf5d8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/chrono:309:24, col:64> 'bool' <Dependent>
| | | | |     |       `-BinaryOperator 0xdbf5b8 <col:24, col:64> '<dependent type>' '=='
| | | | |     |         |-DependentScopeDeclRefExpr 0xdbf580 <col:24, col:57> '<dependent type>' lvalue
| | | | |     |         `-IntegerLiteral 0xd01ba8 <col:64> 'int' 1
| | | | |     `-TemplateSpecializationType 0xdbf700 'integral_constant<bool, ratio_divide<_Period2, ratio<3600, 1> >::den == 1>' dependent integral_constant
| | | | |       |-TemplateArgument type 'bool'
| | | | |       `-TemplateArgument expr
| | | | |         `-SubstNonTypeTemplateParmExpr 0xdbf648 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/type_traits:81:53> 'bool'
| | | | |           `-ImplicitCastExpr 0xdbf5d8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/chrono:309:24, col:64> 'bool' <Dependent>
| | | | |             `-BinaryOperator 0xdbf5b8 <col:24, col:64> '<dependent type>' '=='
| | | | |               |-DependentScopeDeclRefExpr 0xdbf580 <col:24, col:57> '<dependent type>' lvalue
| | | | |               `-IntegerLiteral 0xd01ba8 <col:64> 'int' 1
| | | | |-AccessSpecDecl 0xdbf8e0 <line:311:7, col:13> col:7 public
| | | | |-TypedefDecl 0xdbf948 <line:313:2, col:20> col:20 rep 'long double':'long double'
| | | | | `-SubstTemplateTypeParmType 0xdbf910 'long double' sugar
| | | | |   |-TemplateTypeParmType 0xd011b0 '_Rep' dependent depth 0 index 0
| | | | |   | `-TemplateTypeParm 0xd01158 '_Rep'
| | | | |   `-BuiltinType 0x7db4c0 'long double'
| | | | |-TypedefDecl 0xdbf9b0 <line:314:2, col:23> col:23 period 'std::ratio<3600, 1>':'std::ratio<3600, 1>'
| | | | | `-SubstTemplateTypeParmType 0xdbf1d0 'std::ratio<3600, 1>' sugar
| | | | |   |-TemplateTypeParmType 0xd01230 '_Period' dependent depth 0 index 1
| | | | |   | `-TemplateTypeParm 0xd011d8 '_Period'
| | | | |   `-RecordType 0xd1e020 'std::ratio<3600, 1>'
| | | | |     `-ClassTemplateSpecialization 0xd1df20 'ratio'
| | | | |-StaticAssertDecl 0xdbfdd8 <line:316:2, col:71> col:2
| | | | | |-UnaryOperator 0xdbfda0 <col:16, col:38> 'bool' prefix '!' cannot overflow
| | | | | | `-ImplicitCastExpr 0xdbfd88 <col:17, col:38> 'bool':'bool' <LValueToRValue>
| | | | | |   `-DeclRefExpr 0xdbfd58 <col:17, col:38> 'const bool':'const bool' lvalue Var 0xb7db88 'value' 'const bool':'const bool' non_odr_use_constant
| | | | | `-StringLiteral 0xd02198 <col:45> 'const char [25]' lvalue "rep cannot be a duration"
| | | | |-StaticAssertDecl 0xdc03d8 <line:317:2, line:318:51> line:317:2
| | | | | |-ImplicitCastExpr 0xdc03a0 <col:16, col:37> 'bool':'bool' <LValueToRValue>
| | | | | | `-DeclRefExpr 0xdc0370 <col:16, col:37> 'const bool':'const bool' lvalue Var 0xad7678 'value' 'const bool':'const bool' non_odr_use_constant
| | | | | `-StringLiteral 0xd023c8 <line:318:9> 'const char [41]' lvalue "period must be a specialization of ratio"
| | | | |-StaticAssertDecl 0xdc1ca0 <line:319:2, col:59> col:2
| | | | | |-BinaryOperator 0xdc1c60 <col:16, col:31> 'bool' '>'
| | | | | | |-ImplicitCastExpr 0xdc1c30 <col:16, col:25> 'intmax_t':'long' <LValueToRValue>
| | | | | | | `-DeclRefExpr 0xdc1c00 <col:16, col:25> 'const intmax_t':'const long' lvalue Var 0xdc1560 'num' 'const intmax_t':'const long' non_odr_use_constant
| | | | | | `-ImplicitCastExpr 0xdc1c48 <col:31> 'long' <IntegralCast>
| | | | | |   `-IntegerLiteral 0xd024d0 <col:31> 'int' 0
| | | | | `-StringLiteral 0xd02588 <col:34> 'const char [24]' lvalue "period must be positive"
| | | | |-CXXConstructorDecl 0xdc1d18 <line:322:2, col:31> col:12 duration 'void ()' default trivial noexcept-unevaluated 0xdc1d18
| | | | |-CXXConstructorDecl 0xdc1ee8 <line:324:2, col:36> col:2 used constexpr duration 'void (const std::chrono::duration<long double, std::ratio<3600, 1> > &) noexcept' default trivial
| | | | | |-ParmVarDecl 0xdc1e08 <col:11, col:25> col:26 used 'const std::chrono::duration<long double, std::ratio<3600, 1> > &'
| | | | | |-CXXCtorInitializer Field 0xdc64d8 '__r' 'std::chrono::duration<long double, std::ratio<3600, 1> >::rep':'long double'
| | | | | | `-ImplicitCastExpr 0xdd8b58 <col:2> 'std::chrono::duration<long double, std::ratio<3600, 1> >::rep':'long double' <LValueToRValue>
| | | | | |   `-MemberExpr 0xdd8b10 <col:2> 'const std::chrono::duration<long double, std::ratio<3600, 1> >::rep':'const long double' lvalue .__r 0xdc64d8
| | | | | |     `-DeclRefExpr 0xdd8af0 <col:2> 'const std::chrono::duration<long double, std::ratio<3600, 1> >' lvalue ParmVar 0xdc1e08 '' 'const std::chrono::duration<long double, std::ratio<3600, 1> > &'
| | | | | `-CompoundStmt 0xdd8ba0 <col:36>
| | | | |-FunctionTemplateDecl 0xdc2ec0 <line:328:2, line:332:37> line:331:23 duration
| | | | | |-TemplateTypeParmDecl 0xdc1fa8 <line:328:11, col:20> col:20 typename depth 0 index 0 _Rep2
| | | | | |-TemplateTypeParmDecl 0xdc2028 <col:27, <scratch space>:140:1> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/chrono:328:36 typename depth 0 index 1
| | | | | | `-TemplateArgument type '_Require<is_convertible<const _Rep2 &, std::chrono::duration<long double, std::ratio<3600, 1> >::rep>, __or_<__is_float<std::chrono::duration<long double, std::ratio<3600, 1> >::rep>, __not_<__is_float<_Rep2> > > >':'typename enable_if<__and_<is_convertible<const type-parameter-0-0 &, long double>, __or_<treat_as_floating_point<long double>, __not_<treat_as_floating_point<type-parameter-0-0> > > >::value>::type'
| | | | | |-CXXConstructorDecl 0xdc2e18 <line:331:4, line:332:37> line:331:23 constexpr duration 'void (const _Rep2 &)'
| | | | | | `-ParmVarDecl 0xdc2d30 <col:32, col:45> col:45 __rep 'const _Rep2 &'
| | | | | `-CXXConstructorDecl 0xdd0018 <col:4, line:332:37> line:331:23 used constexpr duration 'void (const long double &)'
| | | | |   |-TemplateArgument type 'long double'
| | | | |   |-TemplateArgument type 'void'
| | | | |   |-ParmVarDecl 0xdcff28 <col:32, col:45> col:45 used __rep 'const long double &'
| | | | |   |-CXXCtorInitializer Field 0xdc64d8 '__r' 'std::chrono::duration<long double, std::ratio<3600, 1> >::rep':'long double'
| | | | |   | `-CXXStaticCastExpr 0xdd01c8 <line:332:10, col:32> 'std::chrono::duration<long double, std::ratio<3600, 1> >::rep':'long double' static_cast<std::chrono::duration<long double, struct std::ratio<3600, 1> >::rep> <NoOp>
| | | | |   |   `-ImplicitCastExpr 0xdd01b0 <col:27> 'long double':'long double' <LValueToRValue> part_of_explicit_cast
| | | | |   |     `-DeclRefExpr 0xdd0190 <col:27> 'const long double':'const long double' lvalue ParmVar 0xdcff28 '__rep' 'const long double &'
| | | | |   `-CompoundStmt 0xd076b8 <col:35, col:37>
| | | | |-FunctionTemplateDecl 0xdc44e8 <line:334:2, line:339:50> line:338:14 duration
| | | | | |-TemplateTypeParmDecl 0xdc2fa0 <line:334:11, col:20> col:20 typename depth 0 index 0 _Rep2
| | | | | |-TemplateTypeParmDecl 0xdc3018 <col:27, col:36> col:36 typename depth 0 index 1 _Period2
| | | | | |-TemplateTypeParmDecl 0xdc3098 <col:46, <scratch space>:145:1> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/chrono:334:55 typename depth 0 index 2
| | | | | | `-TemplateArgument type '_Require<__or_<__is_float<std::chrono::duration<long double, std::ratio<3600, 1> >::rep>, __and_<__is_harmonic<_Period2>, __not_<__is_float<_Rep2> > > > >':'typename enable_if<__and_<__or_<treat_as_floating_point<long double>, __and_<integral_constant<bool, ratio_divide<type-parameter-0-1, ratio<3600, 1> >::den == 1>, __not_<treat_as_floating_point<type-parameter-0-0> > > > >::value>::type'
| | | | | |-CXXConstructorDecl 0xdc4440 <line:338:4, line:339:50> line:338:14 constexpr duration 'void (const duration<_Rep2, _Period2> &)'
| | | | | | `-ParmVarDecl 0xdc4308 <col:23, col:56> col:56 __d 'const duration<_Rep2, _Period2> &'
| | | | | `-CXXConstructorDecl 0xdd8958 <col:4, line:339:50> line:338:14 constexpr duration 'void (const duration<long double, std::ratio<3600, 1> > &)'
| | | | |   |-TemplateArgument type 'long double'
| | | | |   |-TemplateArgument type 'std::ratio<3600, 1>'
| | | | |   |-TemplateArgument type 'void'
| | | | |   `-ParmVarDecl 0xdd8898 <col:23, col:56> col:56 __d 'const duration<long double, std::ratio<3600, 1> > &'
| | | | |-CXXDestructorDecl 0xdc45f0 <line:341:2, col:22> col:2 referenced ~duration 'void () noexcept' default trivial
| | | | |-CXXMethodDecl 0xdc47d8 <line:342:2, col:47> col:12 constexpr operator= 'std::chrono::duration<long double, std::ratio<3600, 1> > &(const std::chrono::duration<long double, std::ratio<3600, 1> > &)' default trivial noexcept-unevaluated 0xdc47d8
| | | | | `-ParmVarDecl 0xdc4718 <col:22, col:36> col:37 'const std::chrono::duration<long double, std::ratio<3600, 1> > &'
| | | | |-CXXMethodDecl 0xdc4908 <line:345:2, line:347:16> line:346:2 constexpr count 'std::chrono::duration<long double, std::ratio<3600, 1> >::rep () const'
| | | | |-CXXMethodDecl 0xdc4a08 <line:350:2, line:352:18> line:351:2 constexpr operator+ 'std::chrono::duration<long double, std::ratio<3600, 1> > () const'
| | | | |-CXXMethodDecl 0xdc4ad8 <line:354:2, line:356:27> line:355:2 constexpr operator- 'std::chrono::duration<long double, std::ratio<3600, 1> > () const'
| | | | |-CXXMethodDecl 0xdc4bd8 <line:358:23, line:363:2> line:359:2 operator++ 'std::chrono::duration<long double, std::ratio<3600, 1> > &()'
| | | | |-CXXMethodDecl 0xdc4d48 <line:365:23, line:367:28> line:366:2 operator++ 'std::chrono::duration<long double, std::ratio<3600, 1> > (int)'
| | | | | `-ParmVarDecl 0xdc4c88 <col:13> col:16 'int'
| | | | |-CXXMethodDecl 0xdc4e20 <line:369:23, line:374:2> line:370:2 operator-- 'std::chrono::duration<long double, std::ratio<3600, 1> > &()'
| | | | |-CXXMethodDecl 0xdc4f60 <line:376:23, line:378:28> line:377:2 operator-- 'std::chrono::duration<long double, std::ratio<3600, 1> > (int)'
| | | | | `-ParmVarDecl 0xdc4ed0 <col:13> col:16 'int'
| | | | |-CXXMethodDecl 0xdc50b8 <line:380:23, line:385:2> line:381:2 operator+= 'std::chrono::duration<long double, std::ratio<3600, 1> > &(const std::chrono::duration<long double, std::ratio<3600, 1> > &)'
| | | | | `-ParmVarDecl 0xdc5028 <col:13, col:29> col:29 __d 'const std::chrono::duration<long double, std::ratio<3600, 1> > &'
| | | | |-CXXMethodDecl 0xdc5210 <line:387:23, line:392:2> line:388:2 operator-= 'std::chrono::duration<long double, std::ratio<3600, 1> > &(const std::chrono::duration<long double, std::ratio<3600, 1> > &)'
| | | | | `-ParmVarDecl 0xdc5180 <col:13, col:29> col:29 __d 'const std::chrono::duration<long double, std::ratio<3600, 1> > &'
| | | | |-CXXMethodDecl 0xdc5428 <line:394:23, line:399:2> line:395:2 operator*= 'std::chrono::duration<long double, std::ratio<3600, 1> > &(const std::chrono::duration<long double, std::ratio<3600, 1> >::rep &)'
| | | | | `-ParmVarDecl 0xdc5338 <col:13, col:24> col:24 __rhs 'const std::chrono::duration<long double, std::ratio<3600, 1> >::rep &'
| | | | |-CXXMethodDecl 0xdc5580 <line:401:23, line:406:2> line:402:2 operator/= 'std::chrono::duration<long double, std::ratio<3600, 1> > &(const std::chrono::duration<long double, std::ratio<3600, 1> >::rep &)'
| | | | | `-ParmVarDecl 0xdc54f0 <col:13, col:24> col:24 __rhs 'const std::chrono::duration<long double, std::ratio<3600, 1> >::rep &'
| | | | |-FunctionTemplateDecl 0xdc5b68 <line:409:2, line:417:4> line:413:4 operator%=
| | | | | |-TemplateTypeParmDecl 0xdc5638 <line:409:11, col:28> col:20 typename depth 0 index 0 _Rep2
| | | | | | `-TemplateArgument type 'std::chrono::duration<long double, std::ratio<3600, 1> >::rep':'long double'
| | | | | `-CXXMethodDecl 0xdc5ac8 <line:411:4, line:417:4> line:413:4 operator%= 'typename enable_if<!treat_as_floating_point<_Rep2>::value, duration<long double, ratio<3600, 1> > &>::type (const std::chrono::duration<long double, std::ratio<3600, 1> >::rep &)'
| | | | |   `-ParmVarDecl 0xdc59c0 <col:15, col:26> col:26 __rhs 'const std::chrono::duration<long double, std::ratio<3600, 1> >::rep &'
| | | | |-FunctionTemplateDecl 0xdc60d8 <line:419:2, line:427:4> line:423:4 operator%=
| | | | | |-TemplateTypeParmDecl 0xdc5c48 <line:419:11, col:28> col:20 typename depth 0 index 0 _Rep2
| | | | | | `-TemplateArgument type 'std::chrono::duration<long double, std::ratio<3600, 1> >::rep':'long double'
| | | | | `-CXXMethodDecl 0xdc6038 <line:421:4, line:427:4> line:423:4 operator%= 'typename enable_if<!treat_as_floating_point<_Rep2>::value, duration<long double, ratio<3600, 1> > &>::type (const std::chrono::duration<long double, std::ratio<3600, 1> > &)'
| | | | |   `-ParmVarDecl 0xdc5f30 <col:15, col:31> col:31 __d 'const std::chrono::duration<long double, std::ratio<3600, 1> > &'
| | | | |-CXXMethodDecl 0xdc6240 <line:430:2, line:432:51> line:431:2 constexpr zero 'std::chrono::duration<long double, std::ratio<3600, 1> > () noexcept' static
| | | | |-CXXMethodDecl 0xdc6318 <line:434:2, line:436:50> line:435:2 constexpr min 'std::chrono::duration<long double, std::ratio<3600, 1> > () noexcept' static
| | | | |-CXXMethodDecl 0xdc63f0 <line:438:2, line:440:50> line:439:2 constexpr max 'std::chrono::duration<long double, std::ratio<3600, 1> > () noexcept' static
| | | | |-AccessSpecDecl 0xdc64a0 <line:442:7, col:14> col:7 private
| | | | `-FieldDecl 0xdc64d8 <line:443:2, col:6> col:6 referenced __r 'std::chrono::duration<long double, std::ratio<3600, 1> >::rep':'long double'
| | | |-ClassTemplateSpecializationDecl 0xddf638 <line:299:5, line:444:7> line:300:14 struct duration definition
| | | | |-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal has_user_declared_ctor has_constexpr_non_copy_move_ctor
| | | | | |-DefaultConstructor exists trivial constexpr
| | | | | |-CopyConstructor trivial user_declared has_const_param implicit_has_const_param
| | | | | |-MoveConstructor
| | | | | |-CopyAssignment trivial has_const_param user_declared implicit_has_const_param
| | | | | |-MoveAssignment
| | | | | `-Destructor irrelevant trivial user_declared
| | | | |-TemplateArgument type 'long double'
| | | | |-TemplateArgument type 'std::ratio<60, 1>'
| | | | |-CXXRecordDecl 0xddfac0 prev 0xddf638 <col:7, col:14> col:14 implicit struct duration
| | | | |-AccessSpecDecl 0xddfb50 <line:302:7, col:14> col:7 private
| | | | |-TypeAliasTemplateDecl 0xddfd00 <line:303:2, line:304:52> col:4 __is_float
| | | | | |-TemplateTypeParmDecl 0xddfb78 <line:303:11, col:20> col:20 typename depth 0 index 0 _Rep2
| | | | | `-TypeAliasDecl 0xddfca0 <line:304:4, col:52> col:10 __is_float 'treat_as_floating_point<_Rep2>'
| | | | |   `-TemplateSpecializationType 0xddfc30 'treat_as_floating_point<_Rep2>' dependent treat_as_floating_point
| | | | |     `-TemplateArgument type '_Rep2'
| | | | |-TypeAliasTemplateDecl 0xde04c8 <line:307:2, line:309:65> line:308:4 __is_harmonic
| | | | | |-TemplateTypeParmDecl 0xddfd68 <line:307:11, col:20> col:20 typename depth 0 index 0 _Period2
| | | | | `-TypeAliasDecl 0xde0468 <line:308:4, line:309:65> line:308:10 __is_harmonic '__bool_constant<ratio_divide<_Period2, ratio<60, 1> >::den == 1>':'integral_constant<bool, ratio_divide<_Period2, ratio<60, 1> >::den == 1>'
| | | | |   `-TemplateSpecializationType 0xde03f0 '__bool_constant<ratio_divide<_Period2, ratio<60, 1> >::den == 1>' sugar dependent alias __bool_constant
| | | | |     |-TemplateArgument expr
| | | | |     | `-ImplicitCastExpr 0xde0228 <line:309:24, col:64> 'bool' <Dependent>
| | | | |     |   `-BinaryOperator 0xde0208 <col:24, col:64> '<dependent type>' '=='
| | | | |     |     |-DependentScopeDeclRefExpr 0xde01d0 <col:24, col:57> '<dependent type>' lvalue
| | | | |     |     `-IntegerLiteral 0xd01ba8 <col:64> 'int' 1
| | | | |     |-TemplateSpecializationType 0xde0350 'integral_constant<bool, ratio_divide<_Period2, ratio<60, 1> >::den == 1>' dependent integral_constant
| | | | |     | |-TemplateArgument type 'bool'
| | | | |     | `-TemplateArgument expr
| | | | |     |   `-SubstNonTypeTemplateParmExpr 0xde0298 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/type_traits:81:53> 'bool'
| | | | |     |     `-ImplicitCastExpr 0xde0228 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/chrono:309:24, col:64> 'bool' <Dependent>
| | | | |     |       `-BinaryOperator 0xde0208 <col:24, col:64> '<dependent type>' '=='
| | | | |     |         |-DependentScopeDeclRefExpr 0xde01d0 <col:24, col:57> '<dependent type>' lvalue
| | | | |     |         `-IntegerLiteral 0xd01ba8 <col:64> 'int' 1
| | | | |     `-TemplateSpecializationType 0xde0350 'integral_constant<bool, ratio_divide<_Period2, ratio<60, 1> >::den == 1>' dependent integral_constant
| | | | |       |-TemplateArgument type 'bool'
| | | | |       `-TemplateArgument expr
| | | | |         `-SubstNonTypeTemplateParmExpr 0xde0298 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/type_traits:81:53> 'bool'
| | | | |           `-ImplicitCastExpr 0xde0228 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/chrono:309:24, col:64> 'bool' <Dependent>
| | | | |             `-BinaryOperator 0xde0208 <col:24, col:64> '<dependent type>' '=='
| | | | |               |-DependentScopeDeclRefExpr 0xde01d0 <col:24, col:57> '<dependent type>' lvalue
| | | | |               `-IntegerLiteral 0xd01ba8 <col:64> 'int' 1
| | | | |-AccessSpecDecl 0xde0530 <line:311:7, col:13> col:7 public
| | | | |-TypedefDecl 0xde0568 <line:313:2, col:20> col:20 rep 'long double':'long double'
| | | | | `-SubstTemplateTypeParmType 0xdbf910 'long double' sugar
| | | | |   |-TemplateTypeParmType 0xd011b0 '_Rep' dependent depth 0 index 0
| | | | |   | `-TemplateTypeParm 0xd01158 '_Rep'
| | | | |   `-BuiltinType 0x7db4c0 'long double'
| | | | |-TypedefDecl 0xde05d0 <line:314:2, col:23> col:23 period 'std::ratio<60, 1>':'std::ratio<60, 1>'
| | | | | `-SubstTemplateTypeParmType 0xddfe20 'std::ratio<60, 1>' sugar
| | | | |   |-TemplateTypeParmType 0xd01230 '_Period' dependent depth 0 index 1
| | | | |   | `-TemplateTypeParm 0xd011d8 '_Period'
| | | | |   `-RecordType 0xd1db60 'std::ratio<60, 1>'
| | | | |     `-ClassTemplateSpecialization 0xd1da68 'ratio'
| | | | |-StaticAssertDecl 0xde0788 <line:316:2, col:71> col:2
| | | | | |-UnaryOperator 0xde0750 <col:16, col:38> 'bool' prefix '!' cannot overflow
| | | | | | `-ImplicitCastExpr 0xde0738 <col:17, col:38> 'bool':'bool' <LValueToRValue>
| | | | | |   `-DeclRefExpr 0xde0708 <col:17, col:38> 'const bool':'const bool' lvalue Var 0xb7db88 'value' 'const bool':'const bool' non_odr_use_constant
| | | | | `-StringLiteral 0xd02198 <col:45> 'const char [25]' lvalue "rep cannot be a duration"
| | | | |-StaticAssertDecl 0xde0d88 <line:317:2, line:318:51> line:317:2
| | | | | |-ImplicitCastExpr 0xde0d50 <col:16, col:37> 'bool':'bool' <LValueToRValue>
| | | | | | `-DeclRefExpr 0xde0d20 <col:16, col:37> 'const bool':'const bool' lvalue Var 0xad7678 'value' 'const bool':'const bool' non_odr_use_constant
| | | | | `-StringLiteral 0xd023c8 <line:318:9> 'const char [41]' lvalue "period must be a specialization of ratio"
| | | | |-StaticAssertDecl 0xde2640 <line:319:2, col:59> col:2
| | | | | |-BinaryOperator 0xde2600 <col:16, col:31> 'bool' '>'
| | | | | | |-ImplicitCastExpr 0xde25d0 <col:16, col:25> 'intmax_t':'long' <LValueToRValue>
| | | | | | | `-DeclRefExpr 0xde25a0 <col:16, col:25> 'const intmax_t':'const long' lvalue Var 0xde1f00 'num' 'const intmax_t':'const long' non_odr_use_constant
| | | | | | `-ImplicitCastExpr 0xde25e8 <col:31> 'long' <IntegralCast>
| | | | | |   `-IntegerLiteral 0xd024d0 <col:31> 'int' 0
| | | | | `-StringLiteral 0xd02588 <col:34> 'const char [24]' lvalue "period must be positive"
| | | | |-CXXConstructorDecl 0xde26b8 <line:322:2, col:31> col:12 duration 'void ()' default trivial noexcept-unevaluated 0xde26b8
| | | | |-CXXConstructorDecl 0xde2888 <line:324:2, col:36> col:2 used constexpr duration 'void (const std::chrono::duration<long double, std::ratio<60, 1> > &) noexcept' default trivial
| | | | | |-ParmVarDecl 0xde27a8 <col:11, col:25> col:26 used 'const std::chrono::duration<long double, std::ratio<60, 1> > &'
| | | | | |-CXXCtorInitializer Field 0xde7af8 '__r' 'std::chrono::duration<long double, std::ratio<60, 1> >::rep':'long double'
| | | | | | `-ImplicitCastExpr 0xdf24e8 <col:2> 'std::chrono::duration<long double, std::ratio<60, 1> >::rep':'long double' <LValueToRValue>
| | | | | |   `-MemberExpr 0xdf24a0 <col:2> 'const std::chrono::duration<long double, std::ratio<60, 1> >::rep':'const long double' lvalue .__r 0xde7af8
| | | | | |     `-DeclRefExpr 0xdf2480 <col:2> 'const std::chrono::duration<long double, std::ratio<60, 1> >' lvalue ParmVar 0xde27a8 '' 'const std::chrono::duration<long double, std::ratio<60, 1> > &'
| | | | | `-CompoundStmt 0xdf2530 <col:36>
| | | | |-FunctionTemplateDecl 0xde4590 <line:328:2, line:332:37> line:331:23 duration
| | | | | |-TemplateTypeParmDecl 0xde2948 <line:328:11, col:20> col:20 typename depth 0 index 0 _Rep2
| | | | | |-TemplateTypeParmDecl 0xde29c8 <col:27, <scratch space>:140:1> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/chrono:328:36 typename depth 0 index 1
| | | | | | `-TemplateArgument type '_Require<is_convertible<const _Rep2 &, std::chrono::duration<long double, std::ratio<60, 1> >::rep>, __or_<__is_float<std::chrono::duration<long double, std::ratio<60, 1> >::rep>, __not_<__is_float<_Rep2> > > >':'typename enable_if<__and_<is_convertible<const type-parameter-0-0 &, long double>, __or_<treat_as_floating_point<long double>, __not_<treat_as_floating_point<type-parameter-0-0> > > >::value>::type'
| | | | | |-CXXConstructorDecl 0xde44e8 <line:331:4, line:332:37> line:331:23 constexpr duration 'void (const _Rep2 &)'
| | | | | | `-ParmVarDecl 0xde4400 <col:32, col:45> col:45 __rep 'const _Rep2 &'
| | | | | `-CXXConstructorDecl 0xde9188 <col:4, line:332:37> line:331:23 used constexpr duration 'void (const long double &)'
| | | | |   |-TemplateArgument type 'long double'
| | | | |   |-TemplateArgument type 'void'
| | | | |   |-ParmVarDecl 0xde90c8 <col:32, col:45> col:45 used __rep 'const long double &'
| | | | |   |-CXXCtorInitializer Field 0xde7af8 '__r' 'std::chrono::duration<long double, std::ratio<60, 1> >::rep':'long double'
| | | | |   | `-CXXStaticCastExpr 0xde9338 <line:332:10, col:32> 'std::chrono::duration<long double, std::ratio<60, 1> >::rep':'long double' static_cast<std::chrono::duration<long double, struct std::ratio<60, 1> >::rep> <NoOp>
| | | | |   |   `-ImplicitCastExpr 0xde9320 <col:27> 'long double':'long double' <LValueToRValue> part_of_explicit_cast
| | | | |   |     `-DeclRefExpr 0xde9300 <col:27> 'const long double':'const long double' lvalue ParmVar 0xde90c8 '__rep' 'const long double &'
| | | | |   `-CompoundStmt 0xd076b8 <col:35, col:37>
| | | | |-FunctionTemplateDecl 0xde5b60 <line:334:2, line:339:50> line:338:14 duration
| | | | | |-TemplateTypeParmDecl 0xde4670 <line:334:11, col:20> col:20 typename depth 0 index 0 _Rep2
| | | | | |-TemplateTypeParmDecl 0xde46e8 <col:27, col:36> col:36 typename depth 0 index 1 _Period2
| | | | | |-TemplateTypeParmDecl 0xde4768 <col:46, <scratch space>:145:1> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/chrono:334:55 typename depth 0 index 2
| | | | | | `-TemplateArgument type '_Require<__or_<__is_float<std::chrono::duration<long double, std::ratio<60, 1> >::rep>, __and_<__is_harmonic<_Period2>, __not_<__is_float<_Rep2> > > > >':'typename enable_if<__and_<__or_<treat_as_floating_point<long double>, __and_<integral_constant<bool, ratio_divide<type-parameter-0-1, ratio<60, 1> >::den == 1>, __not_<treat_as_floating_point<type-parameter-0-0> > > > >::value>::type'
| | | | | |-CXXConstructorDecl 0xde5ab8 <line:338:4, line:339:50> line:338:14 constexpr duration 'void (const duration<_Rep2, _Period2> &)'
| | | | | | `-ParmVarDecl 0xde59d8 <col:23, col:56> col:56 __d 'const duration<_Rep2, _Period2> &'
| | | | | `-CXXConstructorDecl 0xdf22e8 <col:4, line:339:50> line:338:14 constexpr duration 'void (const duration<long double, std::ratio<60, 1> > &)'
| | | | |   |-TemplateArgument type 'long double'
| | | | |   |-TemplateArgument type 'std::ratio<60, 1>'
| | | | |   |-TemplateArgument type 'void'
| | | | |   `-ParmVarDecl 0xdf2228 <col:23, col:56> col:56 __d 'const duration<long double, std::ratio<60, 1> > &'
| | | | |-CXXDestructorDecl 0xde5c68 <line:341:2, col:22> col:2 referenced ~duration 'void () noexcept' default trivial
| | | | |-CXXMethodDecl 0xde5e58 <line:342:2, col:47> col:12 constexpr operator= 'std::chrono::duration<long double, std::ratio<60, 1> > &(const std::chrono::duration<long double, std::ratio<60, 1> > &)' default trivial noexcept-unevaluated 0xde5e58
| | | | | `-ParmVarDecl 0xde5d98 <col:22, col:36> col:37 'const std::chrono::duration<long double, std::ratio<60, 1> > &'
| | | | |-CXXMethodDecl 0xde5f58 <line:345:2, line:347:16> line:346:2 constexpr count 'std::chrono::duration<long double, std::ratio<60, 1> >::rep () const'
| | | | |-CXXMethodDecl 0xde6058 <line:350:2, line:352:18> line:351:2 constexpr operator+ 'std::chrono::duration<long double, std::ratio<60, 1> > () const'
| | | | |-CXXMethodDecl 0xde6128 <line:354:2, line:356:27> line:355:2 constexpr operator- 'std::chrono::duration<long double, std::ratio<60, 1> > () const'
| | | | |-CXXMethodDecl 0xde6228 <line:358:23, line:363:2> line:359:2 operator++ 'std::chrono::duration<long double, std::ratio<60, 1> > &()'
| | | | |-CXXMethodDecl 0xde6398 <line:365:23, line:367:28> line:366:2 operator++ 'std::chrono::duration<long double, std::ratio<60, 1> > (int)'
| | | | | `-ParmVarDecl 0xde62d8 <col:13> col:16 'int'
| | | | |-CXXMethodDecl 0xde6470 <line:369:23, line:374:2> line:370:2 operator-- 'std::chrono::duration<long double, std::ratio<60, 1> > &()'
| | | | |-CXXMethodDecl 0xde65b0 <line:376:23, line:378:28> line:377:2 operator-- 'std::chrono::duration<long double, std::ratio<60, 1> > (int)'
| | | | | `-ParmVarDecl 0xde6520 <col:13> col:16 'int'
| | | | |-CXXMethodDecl 0xde6708 <line:380:23, line:385:2> line:381:2 operator+= 'std::chrono::duration<long double, std::ratio<60, 1> > &(const std::chrono::duration<long double, std::ratio<60, 1> > &)'
| | | | | `-ParmVarDecl 0xde6678 <col:13, col:29> col:29 __d 'const std::chrono::duration<long double, std::ratio<60, 1> > &'
| | | | |-CXXMethodDecl 0xde6860 <line:387:23, line:392:2> line:388:2 operator-= 'std::chrono::duration<long double, std::ratio<60, 1> > &(const std::chrono::duration<long double, std::ratio<60, 1> > &)'
| | | | | `-ParmVarDecl 0xde67d0 <col:13, col:29> col:29 __d 'const std::chrono::duration<long double, std::ratio<60, 1> > &'
| | | | |-CXXMethodDecl 0xde6a48 <line:394:23, line:399:2> line:395:2 operator*= 'std::chrono::duration<long double, std::ratio<60, 1> > &(const std::chrono::duration<long double, std::ratio<60, 1> >::rep &)'
| | | | | `-ParmVarDecl 0xde6958 <col:13, col:24> col:24 __rhs 'const std::chrono::duration<long double, std::ratio<60, 1> >::rep &'
| | | | |-CXXMethodDecl 0xde6ba0 <line:401:23, line:406:2> line:402:2 operator/= 'std::chrono::duration<long double, std::ratio<60, 1> > &(const std::chrono::duration<long double, std::ratio<60, 1> >::rep &)'
| | | | | `-ParmVarDecl 0xde6b10 <col:13, col:24> col:24 __rhs 'const std::chrono::duration<long double, std::ratio<60, 1> >::rep &'
| | | | |-FunctionTemplateDecl 0xde7188 <line:409:2, line:417:4> line:413:4 operator%=
| | | | | |-TemplateTypeParmDecl 0xde6c58 <line:409:11, col:28> col:20 typename depth 0 index 0 _Rep2
| | | | | | `-TemplateArgument type 'std::chrono::duration<long double, std::ratio<60, 1> >::rep':'long double'
| | | | | `-CXXMethodDecl 0xde70e8 <line:411:4, line:417:4> line:413:4 operator%= 'typename enable_if<!treat_as_floating_point<_Rep2>::value, duration<long double, ratio<60, 1> > &>::type (const std::chrono::duration<long double, std::ratio<60, 1> >::rep &)'
| | | | |   `-ParmVarDecl 0xde6fe0 <col:15, col:26> col:26 __rhs 'const std::chrono::duration<long double, std::ratio<60, 1> >::rep &'
| | | | |-FunctionTemplateDecl 0xde76f8 <line:419:2, line:427:4> line:423:4 operator%=
| | | | | |-TemplateTypeParmDecl 0xde7268 <line:419:11, col:28> col:20 typename depth 0 index 0 _Rep2
| | | | | | `-TemplateArgument type 'std::chrono::duration<long double, std::ratio<60, 1> >::rep':'long double'
| | | | | `-CXXMethodDecl 0xde7658 <line:421:4, line:427:4> line:423:4 operator%= 'typename enable_if<!treat_as_floating_point<_Rep2>::value, duration<long double, ratio<60, 1> > &>::type (const std::chrono::duration<long double, std::ratio<60, 1> > &)'
| | | | |   `-ParmVarDecl 0xde7550 <col:15, col:31> col:31 __d 'const std::chrono::duration<long double, std::ratio<60, 1> > &'
| | | | |-CXXMethodDecl 0xde7860 <line:430:2, line:432:51> line:431:2 constexpr zero 'std::chrono::duration<long double, std::ratio<60, 1> > () noexcept' static
| | | | |-CXXMethodDecl 0xde7938 <line:434:2, line:436:50> line:435:2 constexpr min 'std::chrono::duration<long double, std::ratio<60, 1> > () noexcept' static
| | | | |-CXXMethodDecl 0xde7a10 <line:438:2, line:440:50> line:439:2 constexpr max 'std::chrono::duration<long double, std::ratio<60, 1> > () noexcept' static
| | | | |-AccessSpecDecl 0xde7ac0 <line:442:7, col:14> col:7 private
| | | | `-FieldDecl 0xde7af8 <line:443:2, col:6> col:6 referenced __r 'std::chrono::duration<long double, std::ratio<60, 1> >::rep':'long double'
| | | |-ClassTemplateSpecializationDecl 0xdf82b8 <line:299:5, line:444:7> line:300:14 struct duration definition
| | | | |-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal has_user_declared_ctor has_constexpr_non_copy_move_ctor
| | | | | |-DefaultConstructor exists trivial constexpr
| | | | | |-CopyConstructor trivial user_declared has_const_param implicit_has_const_param
| | | | | |-MoveConstructor
| | | | | |-CopyAssignment trivial has_const_param user_declared implicit_has_const_param
| | | | | |-MoveAssignment
| | | | | `-Destructor irrelevant trivial user_declared
| | | | |-TemplateArgument type 'long double'
| | | | |-TemplateArgument type 'std::ratio<1, 1>'
| | | | |-CXXRecordDecl 0xdf86e8 prev 0xdf82b8 <col:7, col:14> col:14 implicit struct duration
| | | | |-AccessSpecDecl 0xdf8778 <line:302:7, col:14> col:7 private
| | | | |-TypeAliasTemplateDecl 0xdf8920 <line:303:2, line:304:52> col:4 __is_float
| | | | | |-TemplateTypeParmDecl 0xdf87a0 <line:303:11, col:20> col:20 typename depth 0 index 0 _Rep2
| | | | | `-TypeAliasDecl 0xdf88c0 <line:304:4, col:52> col:10 __is_float 'treat_as_floating_point<_Rep2>'
| | | | |   `-TemplateSpecializationType 0xdf8850 'treat_as_floating_point<_Rep2>' dependent treat_as_floating_point
| | | | |     `-TemplateArgument type '_Rep2'
| | | | |-TypeAliasTemplateDecl 0xdf8f78 <line:307:2, line:309:65> line:308:4 __is_harmonic
| | | | | |-TemplateTypeParmDecl 0xdf8988 <line:307:11, col:20> col:20 typename depth 0 index 0 _Period2
| | | | | `-TypeAliasDecl 0xdf8f18 <line:308:4, line:309:65> line:308:10 __is_harmonic '__bool_constant<ratio_divide<_Period2, ratio<1, 1> >::den == 1>':'integral_constant<bool, ratio_divide<_Period2, ratio<1, 1> >::den == 1>'
| | | | |   `-TemplateSpecializationType 0xdf8ea0 '__bool_constant<ratio_divide<_Period2, ratio<1, 1> >::den == 1>' sugar dependent alias __bool_constant
| | | | |     |-TemplateArgument expr
| | | | |     | `-ImplicitCastExpr 0xdf8d48 <line:309:24, col:64> 'bool' <Dependent>
| | | | |     |   `-BinaryOperator 0xdf8d28 <col:24, col:64> '<dependent type>' '=='
| | | | |     |     |-DependentScopeDeclRefExpr 0xdf8cf0 <col:24, col:57> '<dependent type>' lvalue
| | | | |     |     `-IntegerLiteral 0xd01ba8 <col:64> 'int' 1
| | | | |     |-TemplateSpecializationType 0xdf8e00 'integral_constant<bool, ratio_divide<_Period2, ratio<1, 1> >::den == 1>' dependent integral_constant
| | | | |     | |-TemplateArgument type 'bool'
| | | | |     | `-TemplateArgument expr
| | | | |     |   `-SubstNonTypeTemplateParmExpr 0xdf8db8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/type_traits:81:53> 'bool'
| | | | |     |     `-ImplicitCastExpr 0xdf8d48 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/chrono:309:24, col:64> 'bool' <Dependent>
| | | | |     |       `-BinaryOperator 0xdf8d28 <col:24, col:64> '<dependent type>' '=='
| | | | |     |         |-DependentScopeDeclRefExpr 0xdf8cf0 <col:24, col:57> '<dependent type>' lvalue
| | | | |     |         `-IntegerLiteral 0xd01ba8 <col:64> 'int' 1
| | | | |     `-TemplateSpecializationType 0xdf8e00 'integral_constant<bool, ratio_divide<_Period2, ratio<1, 1> >::den == 1>' dependent integral_constant
| | | | |       |-TemplateArgument type 'bool'
| | | | |       `-TemplateArgument expr
| | | | |         `-SubstNonTypeTemplateParmExpr 0xdf8db8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/type_traits:81:53> 'bool'
| | | | |           `-ImplicitCastExpr 0xdf8d48 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/chrono:309:24, col:64> 'bool' <Dependent>
| | | | |             `-BinaryOperator 0xdf8d28 <col:24, col:64> '<dependent type>' '=='
| | | | |               |-DependentScopeDeclRefExpr 0xdf8cf0 <col:24, col:57> '<dependent type>' lvalue
| | | | |               `-IntegerLiteral 0xd01ba8 <col:64> 'int' 1
| | | | |-AccessSpecDecl 0xdf8fe0 <line:311:7, col:13> col:7 public
| | | | |-TypedefDecl 0xdf9018 <line:313:2, col:20> col:20 rep 'long double':'long double'
| | | | | `-SubstTemplateTypeParmType 0xdbf910 'long double' sugar
| | | | |   |-TemplateTypeParmType 0xd011b0 '_Rep' dependent depth 0 index 0
| | | | |   | `-TemplateTypeParm 0xd01158 '_Rep'
| | | | |   `-BuiltinType 0x7db4c0 'long double'
| | | | |-TypedefDecl 0xdf9080 <line:314:2, col:23> col:23 period 'std::ratio<1, 1>':'std::ratio<1, 1>'
| | | | | `-SubstTemplateTypeParmType 0xb8df60 'std::ratio<1, 1>' sugar
| | | | |   |-TemplateTypeParmType 0xd01230 '_Period' dependent depth 0 index 1
| | | | |   | `-TemplateTypeParm 0xd011d8 '_Period'
| | | | |   `-RecordType 0xcedc30 'std::ratio<1, 1>'
| | | | |     `-ClassTemplateSpecialization 0xcedb38 'ratio'
| | | | |-StaticAssertDecl 0xdf9238 <line:316:2, col:71> col:2
| | | | | |-UnaryOperator 0xdf9200 <col:16, col:38> 'bool' prefix '!' cannot overflow
| | | | | | `-ImplicitCastExpr 0xdf91e8 <col:17, col:38> 'bool':'bool' <LValueToRValue>
| | | | | |   `-DeclRefExpr 0xdf91b8 <col:17, col:38> 'const bool':'const bool' lvalue Var 0xb7db88 'value' 'const bool':'const bool' non_odr_use_constant
| | | | | `-StringLiteral 0xd02198 <col:45> 'const char [25]' lvalue "rep cannot be a duration"
| | | | |-StaticAssertDecl 0xdf93c0 <line:317:2, line:318:51> line:317:2
| | | | | |-ImplicitCastExpr 0xdf9388 <col:16, col:37> 'bool':'bool' <LValueToRValue>
| | | | | | `-DeclRefExpr 0xdf9358 <col:16, col:37> 'const bool':'const bool' lvalue Var 0xad7678 'value' 'const bool':'const bool' non_odr_use_constant
| | | | | `-StringLiteral 0xd023c8 <line:318:9> 'const char [41]' lvalue "period must be a specialization of ratio"
| | | | |-StaticAssertDecl 0xdf94f0 <line:319:2, col:59> col:2
| | | | | |-BinaryOperator 0xdf94b0 <col:16, col:31> 'bool' '>'
| | | | | | |-ImplicitCastExpr 0xdf9480 <col:16, col:25> 'intmax_t':'long' <LValueToRValue>
| | | | | | | `-DeclRefExpr 0xdf9450 <col:16, col:25> 'const intmax_t':'const long' lvalue Var 0xd4b4b0 'num' 'const intmax_t':'const long' non_odr_use_constant
| | | | | | `-ImplicitCastExpr 0xdf9498 <col:31> 'long' <IntegralCast>
| | | | | |   `-IntegerLiteral 0xd024d0 <col:31> 'int' 0
| | | | | `-StringLiteral 0xd02588 <col:34> 'const char [24]' lvalue "period must be positive"
| | | | |-CXXConstructorDecl 0xdf9568 <line:322:2, col:31> col:12 duration 'void ()' default trivial noexcept-unevaluated 0xdf9568
| | | | |-CXXConstructorDecl 0xdf9738 <line:324:2, col:36> col:2 used constexpr duration 'void (const std::chrono::duration<long double, std::ratio<1, 1> > &) noexcept' default trivial
| | | | | |-ParmVarDecl 0xdf9658 <col:11, col:25> col:26 used 'const std::chrono::duration<long double, std::ratio<1, 1> > &'
| | | | | |-CXXCtorInitializer Field 0xdffc78 '__r' 'std::chrono::duration<long double, std::ratio<1, 1> >::rep':'long double'
| | | | | | `-ImplicitCastExpr 0xe02528 <col:2> 'std::chrono::duration<long double, std::ratio<1, 1> >::rep':'long double' <LValueToRValue>
| | | | | |   `-MemberExpr 0xe024e0 <col:2> 'const std::chrono::duration<long double, std::ratio<1, 1> >::rep':'const long double' lvalue .__r 0xdffc78
| | | | | |     `-DeclRefExpr 0xe024c0 <col:2> 'const std::chrono::duration<long double, std::ratio<1, 1> >' lvalue ParmVar 0xdf9658 '' 'const std::chrono::duration<long double, std::ratio<1, 1> > &'
| | | | | `-CompoundStmt 0xe02570 <col:36>
| | | | |-FunctionTemplateDecl 0xdfa420 <line:328:2, line:332:37> line:331:23 duration
| | | | | |-TemplateTypeParmDecl 0xdf97f8 <line:328:11, col:20> col:20 typename depth 0 index 0 _Rep2
| | | | | |-TemplateTypeParmDecl 0xdf9878 <col:27, <scratch space>:140:1> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/chrono:328:36 typename depth 0 index 1
| | | | | | `-TemplateArgument type '_Require<is_convertible<const _Rep2 &, std::chrono::duration<long double, std::ratio<1, 1> >::rep>, __or_<__is_float<std::chrono::duration<long double, std::ratio<1, 1> >::rep>, __not_<__is_float<_Rep2> > > >':'typename enable_if<__and_<is_convertible<const type-parameter-0-0 &, long double>, __or_<treat_as_floating_point<long double>, __not_<treat_as_floating_point<type-parameter-0-0> > > >::value>::type'
| | | | | |-CXXConstructorDecl 0xdfa378 <line:331:4, line:332:37> line:331:23 constexpr duration 'void (const _Rep2 &)'
| | | | | | `-ParmVarDecl 0xdfa290 <col:32, col:45> col:45 __rep 'const _Rep2 &'
| | | | | `-CXXConstructorDecl 0xe007d8 <col:4, line:332:37> line:331:23 used constexpr duration 'void (const long double &)'
| | | | |   |-TemplateArgument type 'long double'
| | | | |   |-TemplateArgument type 'void'
| | | | |   |-ParmVarDecl 0xe00718 <col:32, col:45> col:45 used __rep 'const long double &'
| | | | |   |-CXXCtorInitializer Field 0xdffc78 '__r' 'std::chrono::duration<long double, std::ratio<1, 1> >::rep':'long double'
| | | | |   | `-CXXStaticCastExpr 0xe00988 <line:332:10, col:32> 'std::chrono::duration<long double, std::ratio<1, 1> >::rep':'long double' static_cast<std::chrono::duration<long double, struct std::ratio<1, 1> >::rep> <NoOp>
| | | | |   |   `-ImplicitCastExpr 0xe00970 <col:27> 'long double':'long double' <LValueToRValue> part_of_explicit_cast
| | | | |   |     `-DeclRefExpr 0xe00950 <col:27> 'const long double':'const long double' lvalue ParmVar 0xe00718 '__rep' 'const long double &'
| | | | |   `-CompoundStmt 0xd076b8 <col:35, col:37>
| | | | |-FunctionTemplateDecl 0xdfdce0 <line:334:2, line:339:50> line:338:14 duration
| | | | | |-TemplateTypeParmDecl 0xdfa500 <line:334:11, col:20> col:20 typename depth 0 index 0 _Rep2
| | | | | |-TemplateTypeParmDecl 0xdfa578 <col:27, col:36> col:36 typename depth 0 index 1 _Period2
| | | | | |-TemplateTypeParmDecl 0xdfa5f8 <col:46, <scratch space>:145:1> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/chrono:334:55 typename depth 0 index 2
| | | | | | `-TemplateArgument type '_Require<__or_<__is_float<std::chrono::duration<long double, std::ratio<1, 1> >::rep>, __and_<__is_harmonic<_Period2>, __not_<__is_float<_Rep2> > > > >':'typename enable_if<__and_<__or_<treat_as_floating_point<long double>, __and_<integral_constant<bool, ratio_divide<type-parameter-0-1, ratio<1, 1> >::den == 1>, __not_<treat_as_floating_point<type-parameter-0-0> > > > >::value>::type'
| | | | | |-CXXConstructorDecl 0xdfdc38 <line:338:4, line:339:50> line:338:14 constexpr duration 'void (const duration<_Rep2, _Period2> &)'
| | | | | | `-ParmVarDecl 0xdfdb58 <col:23, col:56> col:56 __d 'const duration<_Rep2, _Period2> &'
| | | | | `-CXXConstructorDecl 0xe02320 <col:4, line:339:50> line:338:14 constexpr duration 'void (const duration<long double, std::ratio<1, 1> > &)'
| | | | |   |-TemplateArgument type 'long double'
| | | | |   |-TemplateArgument type 'std::ratio<1, 1>'
| | | | |   |-TemplateArgument type 'void'
| | | | |   `-ParmVarDecl 0xe01928 <col:23, col:56> col:56 __d 'const duration<long double, std::ratio<1, 1> > &'
| | | | |-CXXDestructorDecl 0xdfdde8 <line:341:2, col:22> col:2 referenced ~duration 'void () noexcept' default trivial
| | | | |-CXXMethodDecl 0xdfdfd8 <line:342:2, col:47> col:12 constexpr operator= 'std::chrono::duration<long double, std::ratio<1, 1> > &(const std::chrono::duration<long double, std::ratio<1, 1> > &)' default trivial noexcept-unevaluated 0xdfdfd8
| | | | | `-ParmVarDecl 0xdfdf18 <col:22, col:36> col:37 'const std::chrono::duration<long double, std::ratio<1, 1> > &'
| | | | |-CXXMethodDecl 0xdfe0d8 <line:345:2, line:347:16> line:346:2 constexpr count 'std::chrono::duration<long double, std::ratio<1, 1> >::rep () const'
| | | | |-CXXMethodDecl 0xdfe1d8 <line:350:2, line:352:18> line:351:2 constexpr operator+ 'std::chrono::duration<long double, std::ratio<1, 1> > () const'
| | | | |-CXXMethodDecl 0xdfe2a8 <line:354:2, line:356:27> line:355:2 constexpr operator- 'std::chrono::duration<long double, std::ratio<1, 1> > () const'
| | | | |-CXXMethodDecl 0xdfe3a8 <line:358:23, line:363:2> line:359:2 operator++ 'std::chrono::duration<long double, std::ratio<1, 1> > &()'
| | | | |-CXXMethodDecl 0xdfe518 <line:365:23, line:367:28> line:366:2 operator++ 'std::chrono::duration<long double, std::ratio<1, 1> > (int)'
| | | | | `-ParmVarDecl 0xdfe458 <col:13> col:16 'int'
| | | | |-CXXMethodDecl 0xdfe5f0 <line:369:23, line:374:2> line:370:2 operator-- 'std::chrono::duration<long double, std::ratio<1, 1> > &()'
| | | | |-CXXMethodDecl 0xdfe730 <line:376:23, line:378:28> line:377:2 operator-- 'std::chrono::duration<long double, std::ratio<1, 1> > (int)'
| | | | | `-ParmVarDecl 0xdfe6a0 <col:13> col:16 'int'
| | | | |-CXXMethodDecl 0xdfe888 <line:380:23, line:385:2> line:381:2 operator+= 'std::chrono::duration<long double, std::ratio<1, 1> > &(const std::chrono::duration<long double, std::ratio<1, 1> > &)'
| | | | | `-ParmVarDecl 0xdfe7f8 <col:13, col:29> col:29 __d 'const std::chrono::duration<long double, std::ratio<1, 1> > &'
| | | | |-CXXMethodDecl 0xdfe9e0 <line:387:23, line:392:2> line:388:2 operator-= 'std::chrono::duration<long double, std::ratio<1, 1> > &(const std::chrono::duration<long double, std::ratio<1, 1> > &)'
| | | | | `-ParmVarDecl 0xdfe950 <col:13, col:29> col:29 __d 'const std::chrono::duration<long double, std::ratio<1, 1> > &'
| | | | |-CXXMethodDecl 0xdfebc8 <line:394:23, line:399:2> line:395:2 operator*= 'std::chrono::duration<long double, std::ratio<1, 1> > &(const std::chrono::duration<long double, std::ratio<1, 1> >::rep &)'
| | | | | `-ParmVarDecl 0xdfead8 <col:13, col:24> col:24 __rhs 'const std::chrono::duration<long double, std::ratio<1, 1> >::rep &'
| | | | |-CXXMethodDecl 0xdfed20 <line:401:23, line:406:2> line:402:2 operator/= 'std::chrono::duration<long double, std::ratio<1, 1> > &(const std::chrono::duration<long double, std::ratio<1, 1> >::rep &)'
| | | | | `-ParmVarDecl 0xdfec90 <col:13, col:24> col:24 __rhs 'const std::chrono::duration<long double, std::ratio<1, 1> >::rep &'
| | | | |-FunctionTemplateDecl 0xdff308 <line:409:2, line:417:4> line:413:4 operator%=
| | | | | |-TemplateTypeParmDecl 0xdfedd8 <line:409:11, col:28> col:20 typename depth 0 index 0 _Rep2
| | | | | | `-TemplateArgument type 'std::chrono::duration<long double, std::ratio<1, 1> >::rep':'long double'
| | | | | `-CXXMethodDecl 0xdff268 <line:411:4, line:417:4> line:413:4 operator%= 'typename enable_if<!treat_as_floating_point<_Rep2>::value, duration<long double, ratio<1, 1> > &>::type (const std::chrono::duration<long double, std::ratio<1, 1> >::rep &)'
| | | | |   `-ParmVarDecl 0xdff160 <col:15, col:26> col:26 __rhs 'const std::chrono::duration<long double, std::ratio<1, 1> >::rep &'
| | | | |-FunctionTemplateDecl 0xdff878 <line:419:2, line:427:4> line:423:4 operator%=
| | | | | |-TemplateTypeParmDecl 0xdff3e8 <line:419:11, col:28> col:20 typename depth 0 index 0 _Rep2
| | | | | | `-TemplateArgument type 'std::chrono::duration<long double, std::ratio<1, 1> >::rep':'long double'
| | | | | `-CXXMethodDecl 0xdff7d8 <line:421:4, line:427:4> line:423:4 operator%= 'typename enable_if<!treat_as_floating_point<_Rep2>::value, duration<long double, ratio<1, 1> > &>::type (const std::chrono::duration<long double, std::ratio<1, 1> > &)'
| | | | |   `-ParmVarDecl 0xdff6d0 <col:15, col:31> col:31 __d 'const std::chrono::duration<long double, std::ratio<1, 1> > &'
| | | | |-CXXMethodDecl 0xdff9e0 <line:430:2, line:432:51> line:431:2 constexpr zero 'std::chrono::duration<long double, std::ratio<1, 1> > () noexcept' static
| | | | |-CXXMethodDecl 0xdffab8 <line:434:2, line:436:50> line:435:2 constexpr min 'std::chrono::duration<long double, std::ratio<1, 1> > () noexcept' static
| | | | |-CXXMethodDecl 0xdffb90 <line:438:2, line:440:50> line:439:2 constexpr max 'std::chrono::duration<long double, std::ratio<1, 1> > () noexcept' static
| | | | |-AccessSpecDecl 0xdffc40 <line:442:7, col:14> col:7 private
| | | | `-FieldDecl 0xdffc78 <line:443:2, col:6> col:6 referenced __r 'std::chrono::duration<long double, std::ratio<1, 1> >::rep':'long double'
| | | |-ClassTemplateSpecializationDecl 0xe029c0 <line:299:5, line:444:7> line:300:14 struct duration definition
| | | | |-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal has_user_declared_ctor has_constexpr_non_copy_move_ctor
| | | | | |-DefaultConstructor exists trivial constexpr
| | | | | |-CopyConstructor trivial user_declared has_const_param implicit_has_const_param
| | | | | |-MoveConstructor
| | | | | |-CopyAssignment trivial has_const_param user_declared implicit_has_const_param
| | | | | |-MoveAssignment
| | | | | `-Destructor irrelevant trivial user_declared
| | | | |-TemplateArgument type 'long double'
| | | | |-TemplateArgument type 'std::ratio<1, 1000>'
| | | | |-CXXRecordDecl 0xe02e50 prev 0xe029c0 <col:7, col:14> col:14 implicit struct duration
| | | | |-AccessSpecDecl 0xe02ee0 <line:302:7, col:14> col:7 private
| | | | |-TypeAliasTemplateDecl 0xe03090 <line:303:2, line:304:52> col:4 __is_float
| | | | | |-TemplateTypeParmDecl 0xe02f08 <line:303:11, col:20> col:20 typename depth 0 index 0 _Rep2
| | | | | `-TypeAliasDecl 0xe03030 <line:304:4, col:52> col:10 __is_float 'treat_as_floating_point<_Rep2>'
| | | | |   `-TemplateSpecializationType 0xe02fc0 'treat_as_floating_point<_Rep2>' dependent treat_as_floating_point
| | | | |     `-TemplateArgument type '_Rep2'
| | | | |-TypeAliasTemplateDecl 0xe03858 <line:307:2, line:309:65> line:308:4 __is_harmonic
| | | | | |-TemplateTypeParmDecl 0xe030f8 <line:307:11, col:20> col:20 typename depth 0 index 0 _Period2
| | | | | `-TypeAliasDecl 0xe037f8 <line:308:4, line:309:65> line:308:10 __is_harmonic '__bool_constant<ratio_divide<_Period2, ratio<1, 1000> >::den == 1>':'integral_constant<bool, ratio_divide<_Period2, ratio<1, 1000> >::den == 1>'
| | | | |   `-TemplateSpecializationType 0xe03780 '__bool_constant<ratio_divide<_Period2, ratio<1, 1000> >::den == 1>' sugar dependent alias __bool_constant
| | | | |     |-TemplateArgument expr
| | | | |     | `-ImplicitCastExpr 0xe035b8 <line:309:24, col:64> 'bool' <Dependent>
| | | | |     |   `-BinaryOperator 0xe03598 <col:24, col:64> '<dependent type>' '=='
| | | | |     |     |-DependentScopeDeclRefExpr 0xe03560 <col:24, col:57> '<dependent type>' lvalue
| | | | |     |     `-IntegerLiteral 0xd01ba8 <col:64> 'int' 1
| | | | |     |-TemplateSpecializationType 0xe036e0 'integral_constant<bool, ratio_divide<_Period2, ratio<1, 1000> >::den == 1>' dependent integral_constant
| | | | |     | |-TemplateArgument type 'bool'
| | | | |     | `-TemplateArgument expr
| | | | |     |   `-SubstNonTypeTemplateParmExpr 0xe03628 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/type_traits:81:53> 'bool'
| | | | |     |     `-ImplicitCastExpr 0xe035b8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/chrono:309:24, col:64> 'bool' <Dependent>
| | | | |     |       `-BinaryOperator 0xe03598 <col:24, col:64> '<dependent type>' '=='
| | | | |     |         |-DependentScopeDeclRefExpr 0xe03560 <col:24, col:57> '<dependent type>' lvalue
| | | | |     |         `-IntegerLiteral 0xd01ba8 <col:64> 'int' 1
| | | | |     `-TemplateSpecializationType 0xe036e0 'integral_constant<bool, ratio_divide<_Period2, ratio<1, 1000> >::den == 1>' dependent integral_constant
| | | | |       |-TemplateArgument type 'bool'
| | | | |       `-TemplateArgument expr
| | | | |         `-SubstNonTypeTemplateParmExpr 0xe03628 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/type_traits:81:53> 'bool'
| | | | |           `-ImplicitCastExpr 0xe035b8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/chrono:309:24, col:64> 'bool' <Dependent>
| | | | |             `-BinaryOperator 0xe03598 <col:24, col:64> '<dependent type>' '=='
| | | | |               |-DependentScopeDeclRefExpr 0xe03560 <col:24, col:57> '<dependent type>' lvalue
| | | | |               `-IntegerLiteral 0xd01ba8 <col:64> 'int' 1
| | | | |-AccessSpecDecl 0xe038c0 <line:311:7, col:13> col:7 public
| | | | |-TypedefDecl 0xe038f8 <line:313:2, col:20> col:20 rep 'long double':'long double'
| | | | | `-SubstTemplateTypeParmType 0xdbf910 'long double' sugar
| | | | |   |-TemplateTypeParmType 0xd011b0 '_Rep' dependent depth 0 index 0
| | | | |   | `-TemplateTypeParm 0xd01158 '_Rep'
| | | | |   `-BuiltinType 0x7db4c0 'long double'
| | | | |-TypedefDecl 0xe03960 <line:314:2, col:23> col:23 period 'std::ratio<1, 1000>':'std::ratio<1, 1000>'
| | | | | `-SubstTemplateTypeParmType 0xe031b0 'std::ratio<1, 1000>' sugar
| | | | |   |-TemplateTypeParmType 0xd01230 '_Period' dependent depth 0 index 1
| | | | |   | `-TemplateTypeParm 0xd011d8 '_Period'
| | | | |   `-RecordType 0xc4c7f0 'std::ratio<1, 1000>'
| | | | |     `-ClassTemplateSpecialization 0xc4c6f0 'ratio'
| | | | |-StaticAssertDecl 0xe03b18 <line:316:2, col:71> col:2
| | | | | |-UnaryOperator 0xe03ae0 <col:16, col:38> 'bool' prefix '!' cannot overflow
| | | | | | `-ImplicitCastExpr 0xe03ac8 <col:17, col:38> 'bool':'bool' <LValueToRValue>
| | | | | |   `-DeclRefExpr 0xe03a98 <col:17, col:38> 'const bool':'const bool' lvalue Var 0xb7db88 'value' 'const bool':'const bool' non_odr_use_constant
| | | | | `-StringLiteral 0xd02198 <col:45> 'const char [25]' lvalue "rep cannot be a duration"
| | | | |-StaticAssertDecl 0xe04118 <line:317:2, line:318:51> line:317:2
| | | | | |-ImplicitCastExpr 0xe040e0 <col:16, col:37> 'bool':'bool' <LValueToRValue>
| | | | | | `-DeclRefExpr 0xe040b0 <col:16, col:37> 'const bool':'const bool' lvalue Var 0xad7678 'value' 'const bool':'const bool' non_odr_use_constant
| | | | | `-StringLiteral 0xd023c8 <line:318:9> 'const char [41]' lvalue "period must be a specialization of ratio"
| | | | |-StaticAssertDecl 0xe07150 <line:319:2, col:59> col:2
| | | | | |-BinaryOperator 0xe07110 <col:16, col:31> 'bool' '>'
| | | | | | |-ImplicitCastExpr 0xe070e0 <col:16, col:25> 'intmax_t':'long' <LValueToRValue>
| | | | | | | `-DeclRefExpr 0xe070b0 <col:16, col:25> 'const intmax_t':'const long' lvalue Var 0xe06a10 'num' 'const intmax_t':'const long' non_odr_use_constant
| | | | | | `-ImplicitCastExpr 0xe070f8 <col:31> 'long' <IntegralCast>
| | | | | |   `-IntegerLiteral 0xd024d0 <col:31> 'int' 0
| | | | | `-StringLiteral 0xd02588 <col:34> 'const char [24]' lvalue "period must be positive"
| | | | |-CXXConstructorDecl 0xe071c8 <line:322:2, col:31> col:12 duration 'void ()' default trivial noexcept-unevaluated 0xe071c8
| | | | |-CXXConstructorDecl 0xe07398 <line:324:2, col:36> col:2 used constexpr duration 'void (const std::chrono::duration<long double, std::ratio<1, 1000> > &) noexcept' default trivial
| | | | | |-ParmVarDecl 0xe072b8 <col:11, col:25> col:26 used 'const std::chrono::duration<long double, std::ratio<1, 1000> > &'
| | | | | |-CXXCtorInitializer Field 0xe0c028 '__r' 'std::chrono::duration<long double, std::ratio<1, 1000> >::rep':'long double'
| | | | | | `-ImplicitCastExpr 0xe12b98 <col:2> 'std::chrono::duration<long double, std::ratio<1, 1000> >::rep':'long double' <LValueToRValue>
| | | | | |   `-MemberExpr 0xe12b50 <col:2> 'const std::chrono::duration<long double, std::ratio<1, 1000> >::rep':'const long double' lvalue .__r 0xe0c028
| | | | | |     `-DeclRefExpr 0xe12b30 <col:2> 'const std::chrono::duration<long double, std::ratio<1, 1000> >' lvalue ParmVar 0xe072b8 '' 'const std::chrono::duration<long double, std::ratio<1, 1000> > &'
| | | | | `-CompoundStmt 0xe12be0 <col:36>
| | | | |-FunctionTemplateDecl 0xe08080 <line:328:2, line:332:37> line:331:23 duration
| | | | | |-TemplateTypeParmDecl 0xe07458 <line:328:11, col:20> col:20 typename depth 0 index 0 _Rep2
| | | | | |-TemplateTypeParmDecl 0xe074d8 <col:27, <scratch space>:140:1> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/chrono:328:36 typename depth 0 index 1
| | | | | | `-TemplateArgument type '_Require<is_convertible<const _Rep2 &, std::chrono::duration<long double, std::ratio<1, 1000> >::rep>, __or_<__is_float<std::chrono::duration<long double, std::ratio<1, 1000> >::rep>, __not_<__is_float<_Rep2> > > >':'typename enable_if<__and_<is_convertible<const type-parameter-0-0 &, long double>, __or_<treat_as_floating_point<long double>, __not_<treat_as_floating_point<type-parameter-0-0> > > >::value>::type'
| | | | | |-CXXConstructorDecl 0xe07fd8 <line:331:4, line:332:37> line:331:23 constexpr duration 'void (const _Rep2 &)'
| | | | | | `-ParmVarDecl 0xe07ef0 <col:32, col:45> col:45 __rep 'const _Rep2 &'
| | | | | `-CXXConstructorDecl 0xe0cbe8 <col:4, line:332:37> line:331:23 used constexpr duration 'void (const long double &)'
| | | | |   |-TemplateArgument type 'long double'
| | | | |   |-TemplateArgument type 'void'
| | | | |   |-ParmVarDecl 0xe0cb28 <col:32, col:45> col:45 used __rep 'const long double &'
| | | | |   |-CXXCtorInitializer Field 0xe0c028 '__r' 'std::chrono::duration<long double, std::ratio<1, 1000> >::rep':'long double'
| | | | |   | `-CXXStaticCastExpr 0xe0cd98 <line:332:10, col:32> 'std::chrono::duration<long double, std::ratio<1, 1000> >::rep':'long double' static_cast<std::chrono::duration<long double, struct std::ratio<1, 1000> >::rep> <NoOp>
| | | | |   |   `-ImplicitCastExpr 0xe0cd80 <col:27> 'long double':'long double' <LValueToRValue> part_of_explicit_cast
| | | | |   |     `-DeclRefExpr 0xe0cd60 <col:27> 'const long double':'const long double' lvalue ParmVar 0xe0cb28 '__rep' 'const long double &'
| | | | |   `-CompoundStmt 0xd076b8 <col:35, col:37>
| | | | |-FunctionTemplateDecl 0xe09650 <line:334:2, line:339:50> line:338:14 duration
| | | | | |-TemplateTypeParmDecl 0xe08160 <line:334:11, col:20> col:20 typename depth 0 index 0 _Rep2
| | | | | |-TemplateTypeParmDecl 0xe081d8 <col:27, col:36> col:36 typename depth 0 index 1 _Period2
| | | | | |-TemplateTypeParmDecl 0xe08258 <col:46, <scratch space>:145:1> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/chrono:334:55 typename depth 0 index 2
| | | | | | `-TemplateArgument type '_Require<__or_<__is_float<std::chrono::duration<long double, std::ratio<1, 1000> >::rep>, __and_<__is_harmonic<_Period2>, __not_<__is_float<_Rep2> > > > >':'typename enable_if<__and_<__or_<treat_as_floating_point<long double>, __and_<integral_constant<bool, ratio_divide<type-parameter-0-1, ratio<1, 1000> >::den == 1>, __not_<treat_as_floating_point<type-parameter-0-0> > > > >::value>::type'
| | | | | |-CXXConstructorDecl 0xe095a8 <line:338:4, line:339:50> line:338:14 constexpr duration 'void (const duration<_Rep2, _Period2> &)'
| | | | | | `-ParmVarDecl 0xe094c8 <col:23, col:56> col:56 __d 'const duration<_Rep2, _Period2> &'
| | | | | `-CXXConstructorDecl 0xe12998 <col:4, line:339:50> line:338:14 constexpr duration 'void (const duration<long double, std::ratio<1, 1000> > &)'
| | | | |   |-TemplateArgument type 'long double'
| | | | |   |-TemplateArgument type 'std::ratio<1, 1000>'
| | | | |   |-TemplateArgument type 'void'
| | | | |   `-ParmVarDecl 0xe128d8 <col:23, col:56> col:56 __d 'const duration<long double, std::ratio<1, 1000> > &'
| | | | |-CXXDestructorDecl 0xe09758 <line:341:2, col:22> col:2 referenced ~duration 'void () noexcept' default trivial
| | | | |-CXXMethodDecl 0xe09948 <line:342:2, col:47> col:12 constexpr operator= 'std::chrono::duration<long double, std::ratio<1, 1000> > &(const std::chrono::duration<long double, std::ratio<1, 1000> > &)' default trivial noexcept-unevaluated 0xe09948
| | | | | `-ParmVarDecl 0xe09888 <col:22, col:36> col:37 'const std::chrono::duration<long double, std::ratio<1, 1000> > &'
| | | | |-CXXMethodDecl 0xe09a48 <line:345:2, line:347:16> line:346:2 constexpr count 'std::chrono::duration<long double, std::ratio<1, 1000> >::rep () const'
| | | | |-CXXMethodDecl 0xe09b48 <line:350:2, line:352:18> line:351:2 constexpr operator+ 'std::chrono::duration<long double, std::ratio<1, 1000> > () const'
| | | | |-CXXMethodDecl 0xe09c18 <line:354:2, line:356:27> line:355:2 constexpr operator- 'std::chrono::duration<long double, std::ratio<1, 1000> > () const'
| | | | |-CXXMethodDecl 0xe09d18 <line:358:23, line:363:2> line:359:2 operator++ 'std::chrono::duration<long double, std::ratio<1, 1000> > &()'
| | | | |-CXXMethodDecl 0xe09e88 <line:365:23, line:367:28> line:366:2 operator++ 'std::chrono::duration<long double, std::ratio<1, 1000> > (int)'
| | | | | `-ParmVarDecl 0xe09dc8 <col:13> col:16 'int'
| | | | |-CXXMethodDecl 0xe09f60 <line:369:23, line:374:2> line:370:2 operator-- 'std::chrono::duration<long double, std::ratio<1, 1000> > &()'
| | | | |-CXXMethodDecl 0xe0a0a0 <line:376:23, line:378:28> line:377:2 operator-- 'std::chrono::duration<long double, std::ratio<1, 1000> > (int)'
| | | | | `-ParmVarDecl 0xe0a010 <col:13> col:16 'int'
| | | | |-CXXMethodDecl 0xe0a1f8 <line:380:23, line:385:2> line:381:2 operator+= 'std::chrono::duration<long double, std::ratio<1, 1000> > &(const std::chrono::duration<long double, std::ratio<1, 1000> > &)'
| | | | | `-ParmVarDecl 0xe0a168 <col:13, col:29> col:29 __d 'const std::chrono::duration<long double, std::ratio<1, 1000> > &'
| | | | |-CXXMethodDecl 0xe0ad98 <line:387:23, line:392:2> line:388:2 operator-= 'std::chrono::duration<long double, std::ratio<1, 1000> > &(const std::chrono::duration<long double, std::ratio<1, 1000> > &)'
| | | | | `-ParmVarDecl 0xe0a2c0 <col:13, col:29> col:29 __d 'const std::chrono::duration<long double, std::ratio<1, 1000> > &'
| | | | |-CXXMethodDecl 0xe0af78 <line:394:23, line:399:2> line:395:2 operator*= 'std::chrono::duration<long double, std::ratio<1, 1000> > &(const std::chrono::duration<long double, std::ratio<1, 1000> >::rep &)'
| | | | | `-ParmVarDecl 0xe0ae88 <col:13, col:24> col:24 __rhs 'const std::chrono::duration<long double, std::ratio<1, 1000> >::rep &'
| | | | |-CXXMethodDecl 0xe0b0d0 <line:401:23, line:406:2> line:402:2 operator/= 'std::chrono::duration<long double, std::ratio<1, 1000> > &(const std::chrono::duration<long double, std::ratio<1, 1000> >::rep &)'
| | | | | `-ParmVarDecl 0xe0b040 <col:13, col:24> col:24 __rhs 'const std::chrono::duration<long double, std::ratio<1, 1000> >::rep &'
| | | | |-FunctionTemplateDecl 0xe0b6b8 <line:409:2, line:417:4> line:413:4 operator%=
| | | | | |-TemplateTypeParmDecl 0xe0b188 <line:409:11, col:28> col:20 typename depth 0 index 0 _Rep2
| | | | | | `-TemplateArgument type 'std::chrono::duration<long double, std::ratio<1, 1000> >::rep':'long double'
| | | | | `-CXXMethodDecl 0xe0b618 <line:411:4, line:417:4> line:413:4 operator%= 'typename enable_if<!treat_as_floating_point<_Rep2>::value, duration<long double, ratio<1, 1000> > &>::type (const std::chrono::duration<long double, std::ratio<1, 1000> >::rep &)'
| | | | |   `-ParmVarDecl 0xe0b510 <col:15, col:26> col:26 __rhs 'const std::chrono::duration<long double, std::ratio<1, 1000> >::rep &'
| | | | |-FunctionTemplateDecl 0xe0bc28 <line:419:2, line:427:4> line:423:4 operator%=
| | | | | |-TemplateTypeParmDecl 0xe0b798 <line:419:11, col:28> col:20 typename depth 0 index 0 _Rep2
| | | | | | `-TemplateArgument type 'std::chrono::duration<long double, std::ratio<1, 1000> >::rep':'long double'
| | | | | `-CXXMethodDecl 0xe0bb88 <line:421:4, line:427:4> line:423:4 operator%= 'typename enable_if<!treat_as_floating_point<_Rep2>::value, duration<long double, ratio<1, 1000> > &>::type (const std::chrono::duration<long double, std::ratio<1, 1000> > &)'
| | | | |   `-ParmVarDecl 0xe0ba80 <col:15, col:31> col:31 __d 'const std::chrono::duration<long double, std::ratio<1, 1000> > &'
| | | | |-CXXMethodDecl 0xe0bd90 <line:430:2, line:432:51> line:431:2 constexpr zero 'std::chrono::duration<long double, std::ratio<1, 1000> > () noexcept' static
| | | | |-CXXMethodDecl 0xe0be68 <line:434:2, line:436:50> line:435:2 constexpr min 'std::chrono::duration<long double, std::ratio<1, 1000> > () noexcept' static
| | | | |-CXXMethodDecl 0xe0bf40 <line:438:2, line:440:50> line:439:2 constexpr max 'std::chrono::duration<long double, std::ratio<1, 1000> > () noexcept' static
| | | | |-AccessSpecDecl 0xe0bff0 <line:442:7, col:14> col:7 private
| | | | `-FieldDecl 0xe0c028 <line:443:2, col:6> col:6 referenced __r 'std::chrono::duration<long double, std::ratio<1, 1000> >::rep':'long double'
| | | |-ClassTemplateSpecializationDecl 0xe19a58 <line:299:5, line:444:7> line:300:14 struct duration definition
| | | | |-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal has_user_declared_ctor has_constexpr_non_copy_move_ctor
| | | | | |-DefaultConstructor exists trivial constexpr
| | | | | |-CopyConstructor trivial user_declared has_const_param implicit_has_const_param
| | | | | |-MoveConstructor
| | | | | |-CopyAssignment trivial has_const_param user_declared implicit_has_const_param
| | | | | |-MoveAssignment
| | | | | `-Destructor irrelevant trivial user_declared
| | | | |-TemplateArgument type 'long double'
| | | | |-TemplateArgument type 'std::ratio<1, 1000000>'
| | | | |-CXXRecordDecl 0xe19ee0 prev 0xe19a58 <col:7, col:14> col:14 implicit struct duration
| | | | |-AccessSpecDecl 0xe19f70 <line:302:7, col:14> col:7 private
| | | | |-TypeAliasTemplateDecl 0xe1a120 <line:303:2, line:304:52> col:4 __is_float
| | | | | |-TemplateTypeParmDecl 0xe19f98 <line:303:11, col:20> col:20 typename depth 0 index 0 _Rep2
| | | | | `-TypeAliasDecl 0xe1a0c0 <line:304:4, col:52> col:10 __is_float 'treat_as_floating_point<_Rep2>'
| | | | |   `-TemplateSpecializationType 0xe1a050 'treat_as_floating_point<_Rep2>' dependent treat_as_floating_point
| | | | |     `-TemplateArgument type '_Rep2'
| | | | |-TypeAliasTemplateDecl 0xe1a8e8 <line:307:2, line:309:65> line:308:4 __is_harmonic
| | | | | |-TemplateTypeParmDecl 0xe1a188 <line:307:11, col:20> col:20 typename depth 0 index 0 _Period2
| | | | | `-TypeAliasDecl 0xe1a888 <line:308:4, line:309:65> line:308:10 __is_harmonic '__bool_constant<ratio_divide<_Period2, ratio<1, 1000000> >::den == 1>':'integral_constant<bool, ratio_divide<_Period2, ratio<1, 1000000> >::den == 1>'
| | | | |   `-TemplateSpecializationType 0xe1a810 '__bool_constant<ratio_divide<_Period2, ratio<1, 1000000> >::den == 1>' sugar dependent alias __bool_constant
| | | | |     |-TemplateArgument expr
| | | | |     | `-ImplicitCastExpr 0xe1a648 <line:309:24, col:64> 'bool' <Dependent>
| | | | |     |   `-BinaryOperator 0xe1a628 <col:24, col:64> '<dependent type>' '=='
| | | | |     |     |-DependentScopeDeclRefExpr 0xe1a5f0 <col:24, col:57> '<dependent type>' lvalue
| | | | |     |     `-IntegerLiteral 0xd01ba8 <col:64> 'int' 1
| | | | |     |-TemplateSpecializationType 0xe1a770 'integral_constant<bool, ratio_divide<_Period2, ratio<1, 1000000> >::den == 1>' dependent integral_constant
| | | | |     | |-TemplateArgument type 'bool'
| | | | |     | `-TemplateArgument expr
| | | | |     |   `-SubstNonTypeTemplateParmExpr 0xe1a6b8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/type_traits:81:53> 'bool'
| | | | |     |     `-ImplicitCastExpr 0xe1a648 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/chrono:309:24, col:64> 'bool' <Dependent>
| | | | |     |       `-BinaryOperator 0xe1a628 <col:24, col:64> '<dependent type>' '=='
| | | | |     |         |-DependentScopeDeclRefExpr 0xe1a5f0 <col:24, col:57> '<dependent type>' lvalue
| | | | |     |         `-IntegerLiteral 0xd01ba8 <col:64> 'int' 1
| | | | |     `-TemplateSpecializationType 0xe1a770 'integral_constant<bool, ratio_divide<_Period2, ratio<1, 1000000> >::den == 1>' dependent integral_constant
| | | | |       |-TemplateArgument type 'bool'
| | | | |       `-TemplateArgument expr
| | | | |         `-SubstNonTypeTemplateParmExpr 0xe1a6b8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/type_traits:81:53> 'bool'
| | | | |           `-ImplicitCastExpr 0xe1a648 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/chrono:309:24, col:64> 'bool' <Dependent>
| | | | |             `-BinaryOperator 0xe1a628 <col:24, col:64> '<dependent type>' '=='
| | | | |               |-DependentScopeDeclRefExpr 0xe1a5f0 <col:24, col:57> '<dependent type>' lvalue
| | | | |               `-IntegerLiteral 0xd01ba8 <col:64> 'int' 1
| | | | |-AccessSpecDecl 0xe1a950 <line:311:7, col:13> col:7 public
| | | | |-TypedefDecl 0xe1a988 <line:313:2, col:20> col:20 rep 'long double':'long double'
| | | | | `-SubstTemplateTypeParmType 0xdbf910 'long double' sugar
| | | | |   |-TemplateTypeParmType 0xd011b0 '_Rep' dependent depth 0 index 0
| | | | |   | `-TemplateTypeParm 0xd01158 '_Rep'
| | | | |   `-BuiltinType 0x7db4c0 'long double'
| | | | |-TypedefDecl 0xe1a9f0 <line:314:2, col:23> col:23 period 'std::ratio<1, 1000000>':'std::ratio<1, 1000000>'
| | | | | `-SubstTemplateTypeParmType 0xe1a240 'std::ratio<1, 1000000>' sugar
| | | | |   |-TemplateTypeParmType 0xd01230 '_Period' dependent depth 0 index 1
| | | | |   | `-TemplateTypeParm 0xd011d8 '_Period'
| | | | |   `-RecordType 0xc4c4e0 'std::ratio<1, 1000000>'
| | | | |     `-ClassTemplateSpecialization 0xc4c3e0 'ratio'
| | | | |-StaticAssertDecl 0xe1aba8 <line:316:2, col:71> col:2
| | | | | |-UnaryOperator 0xe1ab70 <col:16, col:38> 'bool' prefix '!' cannot overflow
| | | | | | `-ImplicitCastExpr 0xe1ab58 <col:17, col:38> 'bool':'bool' <LValueToRValue>
| | | | | |   `-DeclRefExpr 0xe1ab28 <col:17, col:38> 'const bool':'const bool' lvalue Var 0xb7db88 'value' 'const bool':'const bool' non_odr_use_constant
| | | | | `-StringLiteral 0xd02198 <col:45> 'const char [25]' lvalue "rep cannot be a duration"
| | | | |-StaticAssertDecl 0xe1b1a8 <line:317:2, line:318:51> line:317:2
| | | | | |-ImplicitCastExpr 0xe1b170 <col:16, col:37> 'bool':'bool' <LValueToRValue>
| | | | | | `-DeclRefExpr 0xe1b140 <col:16, col:37> 'const bool':'const bool' lvalue Var 0xad7678 'value' 'const bool':'const bool' non_odr_use_constant
| | | | | `-StringLiteral 0xd023c8 <line:318:9> 'const char [41]' lvalue "period must be a specialization of ratio"
| | | | |-StaticAssertDecl 0xe1e9c0 <line:319:2, col:59> col:2
| | | | | |-BinaryOperator 0xe1e980 <col:16, col:31> 'bool' '>'
| | | | | | |-ImplicitCastExpr 0xe1e950 <col:16, col:25> 'intmax_t':'long' <LValueToRValue>
| | | | | | | `-DeclRefExpr 0xe1e920 <col:16, col:25> 'const intmax_t':'const long' lvalue Var 0xe1e280 'num' 'const intmax_t':'const long' non_odr_use_constant
| | | | | | `-ImplicitCastExpr 0xe1e968 <col:31> 'long' <IntegralCast>
| | | | | |   `-IntegerLiteral 0xd024d0 <col:31> 'int' 0
| | | | | `-StringLiteral 0xd02588 <col:34> 'const char [24]' lvalue "period must be positive"
| | | | |-CXXConstructorDecl 0xe1ea38 <line:322:2, col:31> col:12 duration 'void ()' default trivial noexcept-unevaluated 0xe1ea38
| | | | |-CXXConstructorDecl 0xe1ec08 <line:324:2, col:36> col:2 used constexpr duration 'void (const std::chrono::duration<long double, std::ratio<1, 1000000> > &) noexcept' default trivial
| | | | | |-ParmVarDecl 0xe1eb28 <col:11, col:25> col:26 used 'const std::chrono::duration<long double, std::ratio<1, 1000000> > &'
| | | | | |-CXXCtorInitializer Field 0xe22e58 '__r' 'std::chrono::duration<long double, std::ratio<1, 1000000> >::rep':'long double'
| | | | | | `-ImplicitCastExpr 0xe2a788 <col:2> 'std::chrono::duration<long double, std::ratio<1, 1000000> >::rep':'long double' <LValueToRValue>
| | | | | |   `-MemberExpr 0xe2a740 <col:2> 'const std::chrono::duration<long double, std::ratio<1, 1000000> >::rep':'const long double' lvalue .__r 0xe22e58
| | | | | |     `-DeclRefExpr 0xe2a720 <col:2> 'const std::chrono::duration<long double, std::ratio<1, 1000000> >' lvalue ParmVar 0xe1eb28 '' 'const std::chrono::duration<long double, std::ratio<1, 1000000> > &'
| | | | | `-CompoundStmt 0xe2a7d0 <col:36>
| | | | |-FunctionTemplateDecl 0xe1f8f0 <line:328:2, line:332:37> line:331:23 duration
| | | | | |-TemplateTypeParmDecl 0xe1ecc8 <line:328:11, col:20> col:20 typename depth 0 index 0 _Rep2
| | | | | |-TemplateTypeParmDecl 0xe1ed48 <col:27, <scratch space>:140:1> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/chrono:328:36 typename depth 0 index 1
| | | | | | `-TemplateArgument type '_Require<is_convertible<const _Rep2 &, std::chrono::duration<long double, std::ratio<1, 1000000> >::rep>, __or_<__is_float<std::chrono::duration<long double, std::ratio<1, 1000000> >::rep>, __not_<__is_float<_Rep2> > > >':'typename enable_if<__and_<is_convertible<const type-parameter-0-0 &, long double>, __or_<treat_as_floating_point<long double>, __not_<treat_as_floating_point<type-parameter-0-0> > > >::value>::type'
| | | | | |-CXXConstructorDecl 0xe1f848 <line:331:4, line:332:37> line:331:23 constexpr duration 'void (const _Rep2 &)'
| | | | | | `-ParmVarDecl 0xe1f760 <col:32, col:45> col:45 __rep 'const _Rep2 &'
| | | | | `-CXXConstructorDecl 0xe23a18 <col:4, line:332:37> line:331:23 used constexpr duration 'void (const long double &)'
| | | | |   |-TemplateArgument type 'long double'
| | | | |   |-TemplateArgument type 'void'
| | | | |   |-ParmVarDecl 0xe23958 <col:32, col:45> col:45 used __rep 'const long double &'
| | | | |   |-CXXCtorInitializer Field 0xe22e58 '__r' 'std::chrono::duration<long double, std::ratio<1, 1000000> >::rep':'long double'
| | | | |   | `-CXXStaticCastExpr 0xe23bc8 <line:332:10, col:32> 'std::chrono::duration<long double, std::ratio<1, 1000000> >::rep':'long double' static_cast<std::chrono::duration<long double, struct std::ratio<1, 1000000> >::rep> <NoOp>
| | | | |   |   `-ImplicitCastExpr 0xe23bb0 <col:27> 'long double':'long double' <LValueToRValue> part_of_explicit_cast
| | | | |   |     `-DeclRefExpr 0xe23b90 <col:27> 'const long double':'const long double' lvalue ParmVar 0xe23958 '__rep' 'const long double &'
| | | | |   `-CompoundStmt 0xd076b8 <col:35, col:37>
| | | | |-FunctionTemplateDecl 0xe20ec0 <line:334:2, line:339:50> line:338:14 duration
| | | | | |-TemplateTypeParmDecl 0xe1f9d0 <line:334:11, col:20> col:20 typename depth 0 index 0 _Rep2
| | | | | |-TemplateTypeParmDecl 0xe1fa48 <col:27, col:36> col:36 typename depth 0 index 1 _Period2
| | | | | |-TemplateTypeParmDecl 0xe1fac8 <col:46, <scratch space>:145:1> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/chrono:334:55 typename depth 0 index 2
| | | | | | `-TemplateArgument type '_Require<__or_<__is_float<std::chrono::duration<long double, std::ratio<1, 1000000> >::rep>, __and_<__is_harmonic<_Period2>, __not_<__is_float<_Rep2> > > > >':'typename enable_if<__and_<__or_<treat_as_floating_point<long double>, __and_<integral_constant<bool, ratio_divide<type-parameter-0-1, ratio<1, 1000000> >::den == 1>, __not_<treat_as_floating_point<type-parameter-0-0> > > > >::value>::type'
| | | | | |-CXXConstructorDecl 0xe20e18 <line:338:4, line:339:50> line:338:14 constexpr duration 'void (const duration<_Rep2, _Period2> &)'
| | | | | | `-ParmVarDecl 0xe20d38 <col:23, col:56> col:56 __d 'const duration<_Rep2, _Period2> &'
| | | | | `-CXXConstructorDecl 0xe2a588 <col:4, line:339:50> line:338:14 constexpr duration 'void (const duration<long double, std::ratio<1, 1000000> > &)'
| | | | |   |-TemplateArgument type 'long double'
| | | | |   |-TemplateArgument type 'std::ratio<1, 1000000>'
| | | | |   |-TemplateArgument type 'void'
| | | | |   `-ParmVarDecl 0xe2a4c8 <col:23, col:56> col:56 __d 'const duration<long double, std::ratio<1, 1000000> > &'
| | | | |-CXXDestructorDecl 0xe20fc8 <line:341:2, col:22> col:2 referenced ~duration 'void () noexcept' default trivial
| | | | |-CXXMethodDecl 0xe211b8 <line:342:2, col:47> col:12 constexpr operator= 'std::chrono::duration<long double, std::ratio<1, 1000000> > &(const std::chrono::duration<long double, std::ratio<1, 1000000> > &)' default trivial noexcept-unevaluated 0xe211b8
| | | | | `-ParmVarDecl 0xe210f8 <col:22, col:36> col:37 'const std::chrono::duration<long double, std::ratio<1, 1000000> > &'
| | | | |-CXXMethodDecl 0xe212b8 <line:345:2, line:347:16> line:346:2 constexpr count 'std::chrono::duration<long double, std::ratio<1, 1000000> >::rep () const'
| | | | |-CXXMethodDecl 0xe213b8 <line:350:2, line:352:18> line:351:2 constexpr operator+ 'std::chrono::duration<long double, std::ratio<1, 1000000> > () const'
| | | | |-CXXMethodDecl 0xe21488 <line:354:2, line:356:27> line:355:2 constexpr operator- 'std::chrono::duration<long double, std::ratio<1, 1000000> > () const'
| | | | |-CXXMethodDecl 0xe21588 <line:358:23, line:363:2> line:359:2 operator++ 'std::chrono::duration<long double, std::ratio<1, 1000000> > &()'
| | | | |-CXXMethodDecl 0xe216f8 <line:365:23, line:367:28> line:366:2 operator++ 'std::chrono::duration<long double, std::ratio<1, 1000000> > (int)'
| | | | | `-ParmVarDecl 0xe21638 <col:13> col:16 'int'
| | | | |-CXXMethodDecl 0xe217d0 <line:369:23, line:374:2> line:370:2 operator-- 'std::chrono::duration<long double, std::ratio<1, 1000000> > &()'
| | | | |-CXXMethodDecl 0xe21910 <line:376:23, line:378:28> line:377:2 operator-- 'std::chrono::duration<long double, std::ratio<1, 1000000> > (int)'
| | | | | `-ParmVarDecl 0xe21880 <col:13> col:16 'int'
| | | | |-CXXMethodDecl 0xe21a68 <line:380:23, line:385:2> line:381:2 operator+= 'std::chrono::duration<long double, std::ratio<1, 1000000> > &(const std::chrono::duration<long double, std::ratio<1, 1000000> > &)'
| | | | | `-ParmVarDecl 0xe219d8 <col:13, col:29> col:29 __d 'const std::chrono::duration<long double, std::ratio<1, 1000000> > &'
| | | | |-CXXMethodDecl 0xe21bc0 <line:387:23, line:392:2> line:388:2 operator-= 'std::chrono::duration<long double, std::ratio<1, 1000000> > &(const std::chrono::duration<long double, std::ratio<1, 1000000> > &)'
| | | | | `-ParmVarDecl 0xe21b30 <col:13, col:29> col:29 __d 'const std::chrono::duration<long double, std::ratio<1, 1000000> > &'
| | | | |-CXXMethodDecl 0xe21da8 <line:394:23, line:399:2> line:395:2 operator*= 'std::chrono::duration<long double, std::ratio<1, 1000000> > &(const std::chrono::duration<long double, std::ratio<1, 1000000> >::rep &)'
| | | | | `-ParmVarDecl 0xe21cb8 <col:13, col:24> col:24 __rhs 'const std::chrono::duration<long double, std::ratio<1, 1000000> >::rep &'
| | | | |-CXXMethodDecl 0xe21f00 <line:401:23, line:406:2> line:402:2 operator/= 'std::chrono::duration<long double, std::ratio<1, 1000000> > &(const std::chrono::duration<long double, std::ratio<1, 1000000> >::rep &)'
| | | | | `-ParmVarDecl 0xe21e70 <col:13, col:24> col:24 __rhs 'const std::chrono::duration<long double, std::ratio<1, 1000000> >::rep &'
| | | | |-FunctionTemplateDecl 0xe224e8 <line:409:2, line:417:4> line:413:4 operator%=
| | | | | |-TemplateTypeParmDecl 0xe21fb8 <line:409:11, col:28> col:20 typename depth 0 index 0 _Rep2
| | | | | | `-TemplateArgument type 'std::chrono::duration<long double, std::ratio<1, 1000000> >::rep':'long double'
| | | | | `-CXXMethodDecl 0xe22448 <line:411:4, line:417:4> line:413:4 operator%= 'typename enable_if<!treat_as_floating_point<_Rep2>::value, duration<long double, ratio<1, 1000000> > &>::type (const std::chrono::duration<long double, std::ratio<1, 1000000> >::rep &)'
| | | | |   `-ParmVarDecl 0xe22340 <col:15, col:26> col:26 __rhs 'const std::chrono::duration<long double, std::ratio<1, 1000000> >::rep &'
| | | | |-FunctionTemplateDecl 0xe22a58 <line:419:2, line:427:4> line:423:4 operator%=
| | | | | |-TemplateTypeParmDecl 0xe225c8 <line:419:11, col:28> col:20 typename depth 0 index 0 _Rep2
| | | | | | `-TemplateArgument type 'std::chrono::duration<long double, std::ratio<1, 1000000> >::rep':'long double'
| | | | | `-CXXMethodDecl 0xe229b8 <line:421:4, line:427:4> line:423:4 operator%= 'typename enable_if<!treat_as_floating_point<_Rep2>::value, duration<long double, ratio<1, 1000000> > &>::type (const std::chrono::duration<long double, std::ratio<1, 1000000> > &)'
| | | | |   `-ParmVarDecl 0xe228b0 <col:15, col:31> col:31 __d 'const std::chrono::duration<long double, std::ratio<1, 1000000> > &'
| | | | |-CXXMethodDecl 0xe22bc0 <line:430:2, line:432:51> line:431:2 constexpr zero 'std::chrono::duration<long double, std::ratio<1, 1000000> > () noexcept' static
| | | | |-CXXMethodDecl 0xe22c98 <line:434:2, line:436:50> line:435:2 constexpr min 'std::chrono::duration<long double, std::ratio<1, 1000000> > () noexcept' static
| | | | |-CXXMethodDecl 0xe22d70 <line:438:2, line:440:50> line:439:2 constexpr max 'std::chrono::duration<long double, std::ratio<1, 1000000> > () noexcept' static
| | | | |-AccessSpecDecl 0xe22e20 <line:442:7, col:14> col:7 private
| | | | `-FieldDecl 0xe22e58 <line:443:2, col:6> col:6 referenced __r 'std::chrono::duration<long double, std::ratio<1, 1000000> >::rep':'long double'
| | | |-ClassTemplateSpecializationDecl 0xe32118 <line:299:5, line:444:7> line:300:14 struct duration definition
| | | | |-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal has_user_declared_ctor has_constexpr_non_copy_move_ctor
| | | | | |-DefaultConstructor exists trivial constexpr
| | | | | |-CopyConstructor trivial user_declared has_const_param implicit_has_const_param
| | | | | |-MoveConstructor
| | | | | |-CopyAssignment trivial has_const_param user_declared implicit_has_const_param
| | | | | |-MoveAssignment
| | | | | `-Destructor irrelevant trivial user_declared
| | | | |-TemplateArgument type 'long double'
| | | | |-TemplateArgument type 'std::ratio<1, 1000000000>'
| | | | |-CXXRecordDecl 0xe325a0 prev 0xe32118 <col:7, col:14> col:14 implicit struct duration
| | | | |-AccessSpecDecl 0xe32630 <line:302:7, col:14> col:7 private
| | | | |-TypeAliasTemplateDecl 0xe327e0 <line:303:2, line:304:52> col:4 __is_float
| | | | | |-TemplateTypeParmDecl 0xe32658 <line:303:11, col:20> col:20 typename depth 0 index 0 _Rep2
| | | | | `-TypeAliasDecl 0xe32780 <line:304:4, col:52> col:10 __is_float 'treat_as_floating_point<_Rep2>'
| | | | |   `-TemplateSpecializationType 0xe32710 'treat_as_floating_point<_Rep2>' dependent treat_as_floating_point
| | | | |     `-TemplateArgument type '_Rep2'
| | | | |-TypeAliasTemplateDecl 0xe32e38 <line:307:2, line:309:65> line:308:4 __is_harmonic
| | | | | |-TemplateTypeParmDecl 0xe32848 <line:307:11, col:20> col:20 typename depth 0 index 0 _Period2
| | | | | `-TypeAliasDecl 0xe32dd8 <line:308:4, line:309:65> line:308:10 __is_harmonic '__bool_constant<ratio_divide<_Period2, ratio<1, 1000000000> >::den == 1>':'integral_constant<bool, ratio_divide<_Period2, ratio<1, 1000000000> >::den == 1>'
| | | | |   `-TemplateSpecializationType 0xe32d60 '__bool_constant<ratio_divide<_Period2, ratio<1, 1000000000> >::den == 1>' sugar dependent alias __bool_constant
| | | | |     |-TemplateArgument expr
| | | | |     | `-ImplicitCastExpr 0xe32c08 <line:309:24, col:64> 'bool' <Dependent>
| | | | |     |   `-BinaryOperator 0xe32be8 <col:24, col:64> '<dependent type>' '=='
| | | | |     |     |-DependentScopeDeclRefExpr 0xe32bb0 <col:24, col:57> '<dependent type>' lvalue
| | | | |     |     `-IntegerLiteral 0xd01ba8 <col:64> 'int' 1
| | | | |     |-TemplateSpecializationType 0xe32cc0 'integral_constant<bool, ratio_divide<_Period2, ratio<1, 1000000000> >::den == 1>' dependent integral_constant
| | | | |     | |-TemplateArgument type 'bool'
| | | | |     | `-TemplateArgument expr
| | | | |     |   `-SubstNonTypeTemplateParmExpr 0xe32c78 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/type_traits:81:53> 'bool'
| | | | |     |     `-ImplicitCastExpr 0xe32c08 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/chrono:309:24, col:64> 'bool' <Dependent>
| | | | |     |       `-BinaryOperator 0xe32be8 <col:24, col:64> '<dependent type>' '=='
| | | | |     |         |-DependentScopeDeclRefExpr 0xe32bb0 <col:24, col:57> '<dependent type>' lvalue
| | | | |     |         `-IntegerLiteral 0xd01ba8 <col:64> 'int' 1
| | | | |     `-TemplateSpecializationType 0xe32cc0 'integral_constant<bool, ratio_divide<_Period2, ratio<1, 1000000000> >::den == 1>' dependent integral_constant
| | | | |       |-TemplateArgument type 'bool'
| | | | |       `-TemplateArgument expr
| | | | |         `-SubstNonTypeTemplateParmExpr 0xe32c78 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/type_traits:81:53> 'bool'
| | | | |           `-ImplicitCastExpr 0xe32c08 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/chrono:309:24, col:64> 'bool' <Dependent>
| | | | |             `-BinaryOperator 0xe32be8 <col:24, col:64> '<dependent type>' '=='
| | | | |               |-DependentScopeDeclRefExpr 0xe32bb0 <col:24, col:57> '<dependent type>' lvalue
| | | | |               `-IntegerLiteral 0xd01ba8 <col:64> 'int' 1
| | | | |-AccessSpecDecl 0xe32ea0 <line:311:7, col:13> col:7 public
| | | | |-TypedefDecl 0xe32ed8 <line:313:2, col:20> col:20 rep 'long double':'long double'
| | | | | `-SubstTemplateTypeParmType 0xdbf910 'long double' sugar
| | | | |   |-TemplateTypeParmType 0xd011b0 '_Rep' dependent depth 0 index 0
| | | | |   | `-TemplateTypeParm 0xd01158 '_Rep'
| | | | |   `-BuiltinType 0x7db4c0 'long double'
| | | | |-TypedefDecl 0xe32f40 <line:314:2, col:23> col:23 period 'std::ratio<1, 1000000000>':'std::ratio<1, 1000000000>'
| | | | | `-SubstTemplateTypeParmType 0xd29c50 'std::ratio<1, 1000000000>' sugar
| | | | |   |-TemplateTypeParmType 0xd01230 '_Period' dependent depth 0 index 1
| | | | |   | `-TemplateTypeParm 0xd011d8 '_Period'
| | | | |   `-RecordType 0xc4c1d0 'std::ratio<1, 1000000000>'
| | | | |     `-ClassTemplateSpecialization 0xc4c0d0 'ratio'
| | | | |-StaticAssertDecl 0xe330f8 <line:316:2, col:71> col:2
| | | | | |-UnaryOperator 0xe330c0 <col:16, col:38> 'bool' prefix '!' cannot overflow
| | | | | | `-ImplicitCastExpr 0xe330a8 <col:17, col:38> 'bool':'bool' <LValueToRValue>
| | | | | |   `-DeclRefExpr 0xe33078 <col:17, col:38> 'const bool':'const bool' lvalue Var 0xb7db88 'value' 'const bool':'const bool' non_odr_use_constant
| | | | | `-StringLiteral 0xd02198 <col:45> 'const char [25]' lvalue "rep cannot be a duration"
| | | | |-StaticAssertDecl 0xe33280 <line:317:2, line:318:51> line:317:2
| | | | | |-ImplicitCastExpr 0xe33248 <col:16, col:37> 'bool':'bool' <LValueToRValue>
| | | | | | `-DeclRefExpr 0xe33218 <col:16, col:37> 'const bool':'const bool' lvalue Var 0xad7678 'value' 'const bool':'const bool' non_odr_use_constant
| | | | | `-StringLiteral 0xd023c8 <line:318:9> 'const char [41]' lvalue "period must be a specialization of ratio"
| | | | |-StaticAssertDecl 0xe333b0 <line:319:2, col:59> col:2
| | | | | |-BinaryOperator 0xe33370 <col:16, col:31> 'bool' '>'
| | | | | | |-ImplicitCastExpr 0xe33340 <col:16, col:25> 'intmax_t':'long' <LValueToRValue>
| | | | | | | `-DeclRefExpr 0xe33310 <col:16, col:25> 'const intmax_t':'const long' lvalue Var 0xd2f0a0 'num' 'const intmax_t':'const long' non_odr_use_constant
| | | | | | `-ImplicitCastExpr 0xe33358 <col:31> 'long' <IntegralCast>
| | | | | |   `-IntegerLiteral 0xd024d0 <col:31> 'int' 0
| | | | | `-StringLiteral 0xd02588 <col:34> 'const char [24]' lvalue "period must be positive"
| | | | |-CXXConstructorDecl 0xe33428 <line:322:2, col:31> col:12 duration 'void ()' default trivial noexcept-unevaluated 0xe33428
| | | | |-CXXConstructorDecl 0xe335f8 <line:324:2, col:36> col:2 used constexpr duration 'void (const std::chrono::duration<long double, std::ratio<1, 1000000000> > &) noexcept' default trivial
| | | | | |-ParmVarDecl 0xe33518 <col:11, col:25> col:26 used 'const std::chrono::duration<long double, std::ratio<1, 1000000000> > &'
| | | | | |-CXXCtorInitializer Field 0xe376f8 '__r' 'std::chrono::duration<long double, std::ratio<1, 1000000000> >::rep':'long double'
| | | | | | `-ImplicitCastExpr 0xe396c8 <col:2> 'std::chrono::duration<long double, std::ratio<1, 1000000000> >::rep':'long double' <LValueToRValue>
| | | | | |   `-MemberExpr 0xe39680 <col:2> 'const std::chrono::duration<long double, std::ratio<1, 1000000000> >::rep':'const long double' lvalue .__r 0xe376f8
| | | | | |     `-DeclRefExpr 0xe39660 <col:2> 'const std::chrono::duration<long double, std::ratio<1, 1000000000> >' lvalue ParmVar 0xe33518 '' 'const std::chrono::duration<long double, std::ratio<1, 1000000000> > &'
| | | | | `-CompoundStmt 0xe3b3d0 <col:36>
| | | | |-FunctionTemplateDecl 0xe342e0 <line:328:2, line:332:37> line:331:23 duration
| | | | | |-TemplateTypeParmDecl 0xe336b8 <line:328:11, col:20> col:20 typename depth 0 index 0 _Rep2
| | | | | |-TemplateTypeParmDecl 0xe33738 <col:27, <scratch space>:140:1> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/chrono:328:36 typename depth 0 index 1
| | | | | | `-TemplateArgument type '_Require<is_convertible<const _Rep2 &, std::chrono::duration<long double, std::ratio<1, 1000000000> >::rep>, __or_<__is_float<std::chrono::duration<long double, std::ratio<1, 1000000000> >::rep>, __not_<__is_float<_Rep2> > > >':'typename enable_if<__and_<is_convertible<const type-parameter-0-0 &, long double>, __or_<treat_as_floating_point<long double>, __not_<treat_as_floating_point<type-parameter-0-0> > > >::value>::type'
| | | | | |-CXXConstructorDecl 0xe34238 <line:331:4, line:332:37> line:331:23 constexpr duration 'void (const _Rep2 &)'
| | | | | | `-ParmVarDecl 0xe34150 <col:32, col:45> col:45 __rep 'const _Rep2 &'
| | | | | `-CXXConstructorDecl 0xe382b8 <col:4, line:332:37> line:331:23 used constexpr duration 'void (const long double &)'
| | | | |   |-TemplateArgument type 'long double'
| | | | |   |-TemplateArgument type 'void'
| | | | |   |-ParmVarDecl 0xe381f8 <col:32, col:45> col:45 used __rep 'const long double &'
| | | | |   |-CXXCtorInitializer Field 0xe376f8 '__r' 'std::chrono::duration<long double, std::ratio<1, 1000000000> >::rep':'long double'
| | | | |   | `-CXXStaticCastExpr 0xe38468 <line:332:10, col:32> 'std::chrono::duration<long double, std::ratio<1, 1000000000> >::rep':'long double' static_cast<std::chrono::duration<long double, struct std::ratio<1, 1000000000> >::rep> <NoOp>
| | | | |   |   `-ImplicitCastExpr 0xe38450 <col:27> 'long double':'long double' <LValueToRValue> part_of_explicit_cast
| | | | |   |     `-DeclRefExpr 0xe38430 <col:27> 'const long double':'const long double' lvalue ParmVar 0xe381f8 '__rep' 'const long double &'
| | | | |   `-CompoundStmt 0xd076b8 <col:35, col:37>
| | | | |-FunctionTemplateDecl 0xe35760 <line:334:2, line:339:50> line:338:14 duration
| | | | | |-TemplateTypeParmDecl 0xe343c0 <line:334:11, col:20> col:20 typename depth 0 index 0 _Rep2
| | | | | |-TemplateTypeParmDecl 0xe34438 <col:27, col:36> col:36 typename depth 0 index 1 _Period2
| | | | | |-TemplateTypeParmDecl 0xe344b8 <col:46, <scratch space>:145:1> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/chrono:334:55 typename depth 0 index 2
| | | | | | `-TemplateArgument type '_Require<__or_<__is_float<std::chrono::duration<long double, std::ratio<1, 1000000000> >::rep>, __and_<__is_harmonic<_Period2>, __not_<__is_float<_Rep2> > > > >':'typename enable_if<__and_<__or_<treat_as_floating_point<long double>, __and_<integral_constant<bool, ratio_divide<type-parameter-0-1, ratio<1, 1000000000> >::den == 1>, __not_<treat_as_floating_point<type-parameter-0-0> > > > >::value>::type'
| | | | | |-CXXConstructorDecl 0xe356b8 <line:338:4, line:339:50> line:338:14 constexpr duration 'void (const duration<_Rep2, _Period2> &)'
| | | | | | `-ParmVarDecl 0xe355d8 <col:23, col:56> col:56 __d 'const duration<_Rep2, _Period2> &'
| | | | | `-CXXConstructorDecl 0xe394c8 <col:4, line:339:50> line:338:14 constexpr duration 'void (const duration<long double, std::ratio<1, 1000000000> > &)'
| | | | |   |-TemplateArgument type 'long double'
| | | | |   |-TemplateArgument type 'std::ratio<1, 1000000000>'
| | | | |   |-TemplateArgument type 'void'
| | | | |   `-ParmVarDecl 0xe39408 <col:23, col:56> col:56 __d 'const duration<long double, std::ratio<1, 1000000000> > &'
| | | | |-CXXDestructorDecl 0xe35868 <line:341:2, col:22> col:2 referenced ~duration 'void () noexcept' default trivial
| | | | |-CXXMethodDecl 0xe35a58 <line:342:2, col:47> col:12 constexpr operator= 'std::chrono::duration<long double, std::ratio<1, 1000000000> > &(const std::chrono::duration<long double, std::ratio<1, 1000000000> > &)' default trivial noexcept-unevaluated 0xe35a58
| | | | | `-ParmVarDecl 0xe35998 <col:22, col:36> col:37 'const std::chrono::duration<long double, std::ratio<1, 1000000000> > &'
| | | | |-CXXMethodDecl 0xe35b58 <line:345:2, line:347:16> line:346:2 constexpr count 'std::chrono::duration<long double, std::ratio<1, 1000000000> >::rep () const'
| | | | |-CXXMethodDecl 0xe35c58 <line:350:2, line:352:18> line:351:2 constexpr operator+ 'std::chrono::duration<long double, std::ratio<1, 1000000000> > () const'
| | | | |-CXXMethodDecl 0xe35d28 <line:354:2, line:356:27> line:355:2 constexpr operator- 'std::chrono::duration<long double, std::ratio<1, 1000000000> > () const'
| | | | |-CXXMethodDecl 0xe35e28 <line:358:23, line:363:2> line:359:2 operator++ 'std::chrono::duration<long double, std::ratio<1, 1000000000> > &()'
| | | | |-CXXMethodDecl 0xe35f98 <line:365:23, line:367:28> line:366:2 operator++ 'std::chrono::duration<long double, std::ratio<1, 1000000000> > (int)'
| | | | | `-ParmVarDecl 0xe35ed8 <col:13> col:16 'int'
| | | | |-CXXMethodDecl 0xe36070 <line:369:23, line:374:2> line:370:2 operator-- 'std::chrono::duration<long double, std::ratio<1, 1000000000> > &()'
| | | | |-CXXMethodDecl 0xe361b0 <line:376:23, line:378:28> line:377:2 operator-- 'std::chrono::duration<long double, std::ratio<1, 1000000000> > (int)'
| | | | | `-ParmVarDecl 0xe36120 <col:13> col:16 'int'
| | | | |-CXXMethodDecl 0xe36308 <line:380:23, line:385:2> line:381:2 operator+= 'std::chrono::duration<long double, std::ratio<1, 1000000000> > &(const std::chrono::duration<long double, std::ratio<1, 1000000000> > &)'
| | | | | `-ParmVarDecl 0xe36278 <col:13, col:29> col:29 __d 'const std::chrono::duration<long double, std::ratio<1, 1000000000> > &'
| | | | |-CXXMethodDecl 0xe36460 <line:387:23, line:392:2> line:388:2 operator-= 'std::chrono::duration<long double, std::ratio<1, 1000000000> > &(const std::chrono::duration<long double, std::ratio<1, 1000000000> > &)'
| | | | | `-ParmVarDecl 0xe363d0 <col:13, col:29> col:29 __d 'const std::chrono::duration<long double, std::ratio<1, 1000000000> > &'
| | | | |-CXXMethodDecl 0xe36648 <line:394:23, line:399:2> line:395:2 operator*= 'std::chrono::duration<long double, std::ratio<1, 1000000000> > &(const std::chrono::duration<long double, std::ratio<1, 1000000000> >::rep &)'
| | | | | `-ParmVarDecl 0xe36558 <col:13, col:24> col:24 __rhs 'const std::chrono::duration<long double, std::ratio<1, 1000000000> >::rep &'
| | | | |-CXXMethodDecl 0xe367a0 <line:401:23, line:406:2> line:402:2 operator/= 'std::chrono::duration<long double, std::ratio<1, 1000000000> > &(const std::chrono::duration<long double, std::ratio<1, 1000000000> >::rep &)'
| | | | | `-ParmVarDecl 0xe36710 <col:13, col:24> col:24 __rhs 'const std::chrono::duration<long double, std::ratio<1, 1000000000> >::rep &'
| | | | |-FunctionTemplateDecl 0xe36d88 <line:409:2, line:417:4> line:413:4 operator%=
| | | | | |-TemplateTypeParmDecl 0xe36858 <line:409:11, col:28> col:20 typename depth 0 index 0 _Rep2
| | | | | | `-TemplateArgument type 'std::chrono::duration<long double, std::ratio<1, 1000000000> >::rep':'long double'
| | | | | `-CXXMethodDecl 0xe36ce8 <line:411:4, line:417:4> line:413:4 operator%= 'typename enable_if<!treat_as_floating_point<_Rep2>::value, duration<long double, ratio<1, 1000000000> > &>::type (const std::chrono::duration<long double, std::ratio<1, 1000000000> >::rep &)'
| | | | |   `-ParmVarDecl 0xe36be0 <col:15, col:26> col:26 __rhs 'const std::chrono::duration<long double, std::ratio<1, 1000000000> >::rep &'
| | | | |-FunctionTemplateDecl 0xe372f8 <line:419:2, line:427:4> line:423:4 operator%=
| | | | | |-TemplateTypeParmDecl 0xe36e68 <line:419:11, col:28> col:20 typename depth 0 index 0 _Rep2
| | | | | | `-TemplateArgument type 'std::chrono::duration<long double, std::ratio<1, 1000000000> >::rep':'long double'
| | | | | `-CXXMethodDecl 0xe37258 <line:421:4, line:427:4> line:423:4 operator%= 'typename enable_if<!treat_as_floating_point<_Rep2>::value, duration<long double, ratio<1, 1000000000> > &>::type (const std::chrono::duration<long double, std::ratio<1, 1000000000> > &)'
| | | | |   `-ParmVarDecl 0xe37150 <col:15, col:31> col:31 __d 'const std::chrono::duration<long double, std::ratio<1, 1000000000> > &'
| | | | |-CXXMethodDecl 0xe37460 <line:430:2, line:432:51> line:431:2 constexpr zero 'std::chrono::duration<long double, std::ratio<1, 1000000000> > () noexcept' static
| | | | |-CXXMethodDecl 0xe37538 <line:434:2, line:436:50> line:435:2 constexpr min 'std::chrono::duration<long double, std::ratio<1, 1000000000> > () noexcept' static
| | | | |-CXXMethodDecl 0xe37610 <line:438:2, line:440:50> line:439:2 constexpr max 'std::chrono::duration<long double, std::ratio<1, 1000000000> > () noexcept' static
| | | | |-AccessSpecDecl 0xe376c0 <line:442:7, col:14> col:7 private
| | | | `-FieldDecl 0xe376f8 <line:443:2, col:6> col:6 referenced __r 'std::chrono::duration<long double, std::ratio<1, 1000000000> >::rep':'long double'
| | | `-ClassTemplateSpecializationDecl 0xe443a0 <line:299:5, line:444:7> line:300:14 struct duration definition
| | |   |-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal has_user_declared_ctor has_constexpr_non_copy_move_ctor
| | |   | |-DefaultConstructor exists trivial constexpr
| | |   | |-CopyConstructor trivial user_declared has_const_param implicit_has_const_param
| | |   | |-MoveConstructor
| | |   | |-CopyAssignment trivial has_const_param user_declared implicit_has_const_param
| | |   | |-MoveAssignment
| | |   | `-Destructor irrelevant trivial user_declared
| | |   |-TemplateArgument type 'double'
| | |   |-TemplateArgument type 'std::ratio<1, 1>'
| | |   |-CXXRecordDecl 0xe4efc0 prev 0xe443a0 <col:7, col:14> col:14 implicit struct duration
| | |   |-AccessSpecDecl 0xe4f050 <line:302:7, col:14> col:7 private
| | |   |-TypeAliasTemplateDecl 0xe4f200 <line:303:2, line:304:52> col:4 __is_float
| | |   | |-TemplateTypeParmDecl 0xe4f078 <line:303:11, col:20> col:20 typename depth 0 index 0 _Rep2
| | |   | `-TypeAliasDecl 0xe4f1a0 <line:304:4, col:52> col:10 __is_float 'treat_as_floating_point<_Rep2>'
| | |   |   `-TemplateSpecializationType 0xe4f130 'treat_as_floating_point<_Rep2>' dependent treat_as_floating_point
| | |   |     `-TemplateArgument type '_Rep2'
| | |   |-TypeAliasTemplateDecl 0xe4f858 <line:307:2, line:309:65> line:308:4 __is_harmonic
| | |   | |-TemplateTypeParmDecl 0xe4f268 <line:307:11, col:20> col:20 typename depth 0 index 0 _Period2
| | |   | `-TypeAliasDecl 0xe4f7f8 <line:308:4, line:309:65> line:308:10 __is_harmonic '__bool_constant<ratio_divide<_Period2, ratio<1, 1> >::den == 1>':'integral_constant<bool, ratio_divide<_Period2, ratio<1, 1> >::den == 1>'
| | |   |   `-TemplateSpecializationType 0xe4f780 '__bool_constant<ratio_divide<_Period2, ratio<1, 1> >::den == 1>' sugar dependent alias __bool_constant
| | |   |     |-TemplateArgument expr
| | |   |     | `-ImplicitCastExpr 0xe4f628 <line:309:24, col:64> 'bool' <Dependent>
| | |   |     |   `-BinaryOperator 0xe4f608 <col:24, col:64> '<dependent type>' '=='
| | |   |     |     |-DependentScopeDeclRefExpr 0xe4f5d0 <col:24, col:57> '<dependent type>' lvalue
| | |   |     |     `-IntegerLiteral 0xd01ba8 <col:64> 'int' 1
| | |   |     |-TemplateSpecializationType 0xe4f6e0 'integral_constant<bool, ratio_divide<_Period2, ratio<1, 1> >::den == 1>' dependent integral_constant
| | |   |     | |-TemplateArgument type 'bool'
| | |   |     | `-TemplateArgument expr
| | |   |     |   `-SubstNonTypeTemplateParmExpr 0xe4f698 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/type_traits:81:53> 'bool'
| | |   |     |     `-ImplicitCastExpr 0xe4f628 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/chrono:309:24, col:64> 'bool' <Dependent>
| | |   |     |       `-BinaryOperator 0xe4f608 <col:24, col:64> '<dependent type>' '=='
| | |   |     |         |-DependentScopeDeclRefExpr 0xe4f5d0 <col:24, col:57> '<dependent type>' lvalue
| | |   |     |         `-IntegerLiteral 0xd01ba8 <col:64> 'int' 1
| | |   |     `-TemplateSpecializationType 0xe4f6e0 'integral_constant<bool, ratio_divide<_Period2, ratio<1, 1> >::den == 1>' dependent integral_constant
| | |   |       |-TemplateArgument type 'bool'
| | |   |       `-TemplateArgument expr
| | |   |         `-SubstNonTypeTemplateParmExpr 0xe4f698 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/type_traits:81:53> 'bool'
| | |   |           `-ImplicitCastExpr 0xe4f628 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/chrono:309:24, col:64> 'bool' <Dependent>
| | |   |             `-BinaryOperator 0xe4f608 <col:24, col:64> '<dependent type>' '=='
| | |   |               |-DependentScopeDeclRefExpr 0xe4f5d0 <col:24, col:57> '<dependent type>' lvalue
| | |   |               `-IntegerLiteral 0xd01ba8 <col:64> 'int' 1
| | |   |-AccessSpecDecl 0xe4f8c0 <line:311:7, col:13> col:7 public
| | |   |-TypedefDecl 0xe4f928 <line:313:2, col:20> col:20 referenced rep 'double':'double'
| | |   | `-SubstTemplateTypeParmType 0xe4f8f0 'double' sugar
| | |   |   |-TemplateTypeParmType 0xd011b0 '_Rep' dependent depth 0 index 0
| | |   |   | `-TemplateTypeParm 0xd01158 '_Rep'
| | |   |   `-BuiltinType 0x7db4a0 'double'
| | |   |-TypedefDecl 0xe4f990 <line:314:2, col:23> col:23 referenced period 'std::ratio<1, 1>':'std::ratio<1, 1>'
| | |   | `-SubstTemplateTypeParmType 0xb8df60 'std::ratio<1, 1>' sugar
| | |   |   |-TemplateTypeParmType 0xd01230 '_Period' dependent depth 0 index 1
| | |   |   | `-TemplateTypeParm 0xd011d8 '_Period'
| | |   |   `-RecordType 0xcedc30 'std::ratio<1, 1>'
| | |   |     `-ClassTemplateSpecialization 0xcedb38 'ratio'
| | |   |-StaticAssertDecl 0xe4fdb8 <line:316:2, col:71> col:2
| | |   | |-UnaryOperator 0xe4fd80 <col:16, col:38> 'bool' prefix '!' cannot overflow
| | |   | | `-ImplicitCastExpr 0xe4fd68 <col:17, col:38> 'bool':'bool' <LValueToRValue>
| | |   | |   `-DeclRefExpr 0xe4fd38 <col:17, col:38> 'const bool':'const bool' lvalue Var 0xb7db88 'value' 'const bool':'const bool' non_odr_use_constant
| | |   | `-StringLiteral 0xd02198 <col:45> 'const char [25]' lvalue "rep cannot be a duration"
| | |   |-StaticAssertDecl 0xe4ff40 <line:317:2, line:318:51> line:317:2
| | |   | |-ImplicitCastExpr 0xe4ff08 <col:16, col:37> 'bool':'bool' <LValueToRValue>
| | |   | | `-DeclRefExpr 0xe4fed8 <col:16, col:37> 'const bool':'const bool' lvalue Var 0xad7678 'value' 'const bool':'const bool' non_odr_use_constant
| | |   | `-StringLiteral 0xd023c8 <line:318:9> 'const char [41]' lvalue "period must be a specialization of ratio"
| | |   |-StaticAssertDecl 0xe50070 <line:319:2, col:59> col:2
| | |   | |-BinaryOperator 0xe50030 <col:16, col:31> 'bool' '>'
| | |   | | |-ImplicitCastExpr 0xe50000 <col:16, col:25> 'intmax_t':'long' <LValueToRValue>
| | |   | | | `-DeclRefExpr 0xe4ffd0 <col:16, col:25> 'const intmax_t':'const long' lvalue Var 0xd4b4b0 'num' 'const intmax_t':'const long' non_odr_use_constant
| | |   | | `-ImplicitCastExpr 0xe50018 <col:31> 'long' <IntegralCast>
| | |   | |   `-IntegerLiteral 0xd024d0 <col:31> 'int' 0
| | |   | `-StringLiteral 0xd02588 <col:34> 'const char [24]' lvalue "period must be positive"
| | |   |-CXXConstructorDecl 0xe500e8 <line:322:2, col:31> col:12 duration 'void ()' default trivial noexcept-unevaluated 0xe500e8
| | |   |-CXXConstructorDecl 0xe502b8 <line:324:2, col:36> col:2 used constexpr duration 'void (const std::chrono::duration<double, std::ratio<1, 1> > &) noexcept' default trivial
| | |   | |-ParmVarDecl 0xe501d8 <col:11, col:25> col:26 used 'const std::chrono::duration<double, std::ratio<1, 1> > &'
| | |   | |-CXXCtorInitializer Field 0xe54708 '__r' 'std::chrono::duration<double, std::ratio<1, 1> >::rep':'double'
| | |   | | `-ImplicitCastExpr 0xe6bdd8 <col:2> 'std::chrono::duration<double, std::ratio<1, 1> >::rep':'double' <LValueToRValue>
| | |   | |   `-MemberExpr 0xe6bd90 <col:2> 'const std::chrono::duration<double, std::ratio<1, 1> >::rep':'const double' lvalue .__r 0xe54708
| | |   | |     `-DeclRefExpr 0xe6bd70 <col:2> 'const std::chrono::duration<double, std::ratio<1, 1> >' lvalue ParmVar 0xe501d8 '' 'const std::chrono::duration<double, std::ratio<1, 1> > &'
| | |   | `-CompoundStmt 0xe6be20 <col:36>
| | |   |-FunctionTemplateDecl 0xe51290 <line:328:2, line:332:37> line:331:23 duration
| | |   | |-TemplateTypeParmDecl 0xe50378 <line:328:11, col:20> col:20 typename depth 0 index 0 _Rep2
| | |   | |-TemplateTypeParmDecl 0xe503f8 <col:27, <scratch space>:140:1> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/chrono:328:36 typename depth 0 index 1
| | |   | | `-TemplateArgument type '_Require<is_convertible<const _Rep2 &, std::chrono::duration<double, std::ratio<1, 1> >::rep>, __or_<__is_float<std::chrono::duration<double, std::ratio<1, 1> >::rep>, __not_<__is_float<_Rep2> > > >':'typename enable_if<__and_<is_convertible<const type-parameter-0-0 &, double>, __or_<treat_as_floating_point<double>, __not_<treat_as_floating_point<type-parameter-0-0> > > >::value>::type'
| | |   | |-CXXConstructorDecl 0xe511e8 <line:331:4, line:332:37> line:331:23 constexpr duration 'void (const _Rep2 &)'
| | |   | | `-ParmVarDecl 0xe51100 <col:32, col:45> col:45 __rep 'const _Rep2 &'
| | |   | `-CXXConstructorDecl 0xe69c68 <col:4, line:332:37> line:331:23 used constexpr duration 'void (const double &)'
| | |   |   |-TemplateArgument type 'double'
| | |   |   |-TemplateArgument type 'void'
| | |   |   |-ParmVarDecl 0xe69b78 <col:32, col:45> col:45 used __rep 'const double &'
| | |   |   |-CXXCtorInitializer Field 0xe54708 '__r' 'std::chrono::duration<double, std::ratio<1, 1> >::rep':'double'
| | |   |   | `-CXXStaticCastExpr 0xe69e18 <line:332:10, col:32> 'std::chrono::duration<double, std::ratio<1, 1> >::rep':'double' static_cast<std::chrono::duration<double, struct std::ratio<1, 1> >::rep> <NoOp>
| | |   |   |   `-ImplicitCastExpr 0xe69e00 <col:27> 'double':'double' <LValueToRValue> part_of_explicit_cast
| | |   |   |     `-DeclRefExpr 0xe69de0 <col:27> 'const double':'const double' lvalue ParmVar 0xe69b78 '__rep' 'const double &'
| | |   |   `-CompoundStmt 0xd076b8 <col:35, col:37>
| | |   |-FunctionTemplateDecl 0xe52710 <line:334:2, line:339:50> line:338:14 duration
| | |   | |-TemplateTypeParmDecl 0xe51370 <line:334:11, col:20> col:20 typename depth 0 index 0 _Rep2
| | |   | |-TemplateTypeParmDecl 0xe513e8 <col:27, col:36> col:36 typename depth 0 index 1 _Period2
| | |   | |-TemplateTypeParmDecl 0xe51468 <col:46, <scratch space>:145:1> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/chrono:334:55 typename depth 0 index 2
| | |   | | `-TemplateArgument type '_Require<__or_<__is_float<std::chrono::duration<double, std::ratio<1, 1> >::rep>, __and_<__is_harmonic<_Period2>, __not_<__is_float<_Rep2> > > > >':'typename enable_if<__and_<__or_<treat_as_floating_point<double>, __and_<integral_constant<bool, ratio_divide<type-parameter-0-1, ratio<1, 1> >::den == 1>, __not_<treat_as_floating_point<type-parameter-0-0> > > > >::value>::type'
| | |   | |-CXXConstructorDecl 0xe52668 <line:338:4, line:339:50> line:338:14 constexpr duration 'void (const duration<_Rep2, _Period2> &)'
| | |   | | `-ParmVarDecl 0xe52588 <col:23, col:56> col:56 __d 'const duration<_Rep2, _Period2> &'
| | |   | |-CXXConstructorDecl 0xe576d8 <col:4, line:339:50> line:338:14 used constexpr duration 'void (const duration<long, std::ratio<1, 1000000000> > &)'
| | |   | | |-TemplateArgument type 'long'
| | |   | | |-TemplateArgument type 'std::ratio<1, 1000000000>'
| | |   | | |-TemplateArgument type 'void'
| | |   | | |-ParmVarDecl 0xe57618 <col:23, col:56> col:56 used __d 'const duration<long, std::ratio<1, 1000000000> > &'
| | |   | | |-CXXCtorInitializer Field 0xe54708 '__r' 'std::chrono::duration<double, std::ratio<1, 1> >::rep':'double'
| | |   | | | `-ExprWithCleanups 0xe6cf60 <line:339:10, col:45> 'std::chrono::duration<double, std::ratio<1, 1> >::rep':'double'
| | |   | | |   `-CXXMemberCallExpr 0xe6cf08 <col:10, col:45> 'std::chrono::duration<double, std::ratio<1, 1> >::rep':'double'
| | |   | | |     `-MemberExpr 0xe6ce00 <col:10, col:39> '<bound member function type>' .count 0xe52b38
| | |   | | |       `-ImplicitCastExpr 0xe6cf28 <col:10, col:37> 'const std::chrono::duration<double, std::ratio<1, 1> >' xvalue <NoOp>
| | |   | | |         `-MaterializeTemporaryExpr 0xe6cde8 <col:10, col:37> '__enable_if_is_duration<std::chrono::duration<double, std::ratio<1, 1> > >':'std::chrono::duration<double, std::ratio<1, 1> >' xvalue
| | |   | | |           `-CallExpr 0xe6cdc0 <col:10, col:37> '__enable_if_is_duration<std::chrono::duration<double, std::ratio<1, 1> > >':'std::chrono::duration<double, std::ratio<1, 1> >'
| | |   | | |             |-ImplicitCastExpr 0xe6cda8 <col:10, col:32> '__enable_if_is_duration<std::chrono::duration<double, std::ratio<1, 1> > > (*)(const duration<long, std::ratio<1, 1000000000> > &)' <FunctionToPointerDecay>
| | |   | | |             | `-DeclRefExpr 0xe58d28 <col:10, col:32> '__enable_if_is_duration<std::chrono::duration<double, std::ratio<1, 1> > > (const duration<long, std::ratio<1, 1000000000> > &)' lvalue Function 0xe58bf8 'duration_cast' '__enable_if_is_duration<std::chrono::duration<double, std::ratio<1, 1> > > (const duration<long, std::ratio<1, 1000000000> > &)' (FunctionTemplate 0xcfc0b8 'duration_cast')
| | |   | | |             `-DeclRefExpr 0xe57958 <col:34> 'const duration<long, std::ratio<1, 1000000000> >':'const std::chrono::duration<long, std::ratio<1, 1000000000> >' lvalue ParmVar 0xe57618 '__d' 'const duration<long, std::ratio<1, 1000000000> > &'
| | |   | | `-CompoundStmt 0xd07860 <col:48, col:50>
| | |   | `-CXXConstructorDecl 0xe6bbd8 <line:338:4, line:339:50> line:338:14 constexpr duration 'void (const duration<double, std::ratio<1, 1> > &)'
| | |   |   |-TemplateArgument type 'double'
| | |   |   |-TemplateArgument type 'std::ratio<1, 1>'
| | |   |   |-TemplateArgument type 'void'
| | |   |   `-ParmVarDecl 0xe6bb18 <col:23, col:56> col:56 __d 'const duration<double, std::ratio<1, 1> > &'
| | |   |-CXXDestructorDecl 0xe52818 <line:341:2, col:22> col:2 referenced ~duration 'void () noexcept' default trivial
| | |   |-CXXMethodDecl 0xe52a08 <line:342:2, col:47> col:12 used constexpr operator= 'std::chrono::duration<double, std::ratio<1, 1> > &(const std::chrono::duration<double, std::ratio<1, 1> > &) noexcept' default trivial
| | |   | |-ParmVarDecl 0xe52948 <col:22, col:36> col:37 used 'const std::chrono::duration<double, std::ratio<1, 1> > &'
| | |   | `-CompoundStmt 0xe77e90 <col:47>
| | |   |   |-BinaryOperator 0xe77e38 <col:47> 'std::chrono::duration<double, std::ratio<1, 1> >::rep':'double' lvalue '='
| | |   |   | |-MemberExpr 0xe77da0 <col:47> 'std::chrono::duration<double, std::ratio<1, 1> >::rep':'double' lvalue ->__r 0xe54708
| | |   |   | | `-CXXThisExpr 0xe77d90 <col:47> 'std::chrono::duration<double, std::ratio<1, 1> > *' this
| | |   |   | `-ImplicitCastExpr 0xe77e20 <col:47> 'std::chrono::duration<double, std::ratio<1, 1> >::rep':'double' <LValueToRValue>
| | |   |   |   `-MemberExpr 0xe77df0 <col:47> 'const std::chrono::duration<double, std::ratio<1, 1> >::rep':'const double' lvalue .__r 0xe54708
| | |   |   |     `-DeclRefExpr 0xe77dd0 <col:47> 'const std::chrono::duration<double, std::ratio<1, 1> >' lvalue ParmVar 0xe52948 '' 'const std::chrono::duration<double, std::ratio<1, 1> > &'
| | |   |   `-ReturnStmt 0xe77e80 <col:47>
| | |   |     `-UnaryOperator 0xe77e68 <col:47> 'std::chrono::duration<double, std::ratio<1, 1> >' lvalue prefix '*' cannot overflow
| | |   |       `-CXXThisExpr 0xe77e58 <col:47> 'std::chrono::duration<double, std::ratio<1, 1> > *' this
| | |   |-CXXMethodDecl 0xe52b38 <line:345:2, line:347:16> line:346:2 used constexpr count 'std::chrono::duration<double, std::ratio<1, 1> >::rep () const'
| | |   | `-CompoundStmt 0xe6cef0 <line:347:2, col:16>
| | |   |   `-ReturnStmt 0xe6cee0 <col:4, col:11>
| | |   |     `-ImplicitCastExpr 0xe6cec8 <col:11> 'std::chrono::duration<double, std::ratio<1, 1> >::rep':'double' <LValueToRValue>
| | |   |       `-MemberExpr 0xe6ce98 <col:11> 'const std::chrono::duration<double, std::ratio<1, 1> >::rep':'const double' lvalue ->__r 0xe54708
| | |   |         `-CXXThisExpr 0xe6ce58 <col:11> 'const std::chrono::duration<double, std::ratio<1, 1> > *' implicit this
| | |   |-CXXMethodDecl 0xe52c38 <line:350:2, line:352:18> line:351:2 constexpr operator+ 'std::chrono::duration<double, std::ratio<1, 1> > () const'
| | |   |-CXXMethodDecl 0xe52d08 <line:354:2, line:356:27> line:355:2 constexpr operator- 'std::chrono::duration<double, std::ratio<1, 1> > () const'
| | |   |-CXXMethodDecl 0xe52e08 <line:358:23, line:363:2> line:359:2 operator++ 'std::chrono::duration<double, std::ratio<1, 1> > &()'
| | |   |-CXXMethodDecl 0xe52f78 <line:365:23, line:367:28> line:366:2 operator++ 'std::chrono::duration<double, std::ratio<1, 1> > (int)'
| | |   | `-ParmVarDecl 0xe52eb8 <col:13> col:16 'int'
| | |   |-CXXMethodDecl 0xe53050 <line:369:23, line:374:2> line:370:2 operator-- 'std::chrono::duration<double, std::ratio<1, 1> > &()'
| | |   |-CXXMethodDecl 0xe53190 <line:376:23, line:378:28> line:377:2 operator-- 'std::chrono::duration<double, std::ratio<1, 1> > (int)'
| | |   | `-ParmVarDecl 0xe53100 <col:13> col:16 'int'
| | |   |-CXXMethodDecl 0xe532e8 <line:380:23, line:385:2> line:381:2 operator+= 'std::chrono::duration<double, std::ratio<1, 1> > &(const std::chrono::duration<double, std::ratio<1, 1> > &)'
| | |   | `-ParmVarDecl 0xe53258 <col:13, col:29> col:29 __d 'const std::chrono::duration<double, std::ratio<1, 1> > &'
| | |   |-CXXMethodDecl 0xe53440 <line:387:23, line:392:2> line:388:2 operator-= 'std::chrono::duration<double, std::ratio<1, 1> > &(const std::chrono::duration<double, std::ratio<1, 1> > &)'
| | |   | `-ParmVarDecl 0xe533b0 <col:13, col:29> col:29 __d 'const std::chrono::duration<double, std::ratio<1, 1> > &'
| | |   |-CXXMethodDecl 0xe53658 <line:394:23, line:399:2> line:395:2 operator*= 'std::chrono::duration<double, std::ratio<1, 1> > &(const std::chrono::duration<double, std::ratio<1, 1> >::rep &)'
| | |   | `-ParmVarDecl 0xe53568 <col:13, col:24> col:24 __rhs 'const std::chrono::duration<double, std::ratio<1, 1> >::rep &'
| | |   |-CXXMethodDecl 0xe537b0 <line:401:23, line:406:2> line:402:2 operator/= 'std::chrono::duration<double, std::ratio<1, 1> > &(const std::chrono::duration<double, std::ratio<1, 1> >::rep &)'
| | |   | `-ParmVarDecl 0xe53720 <col:13, col:24> col:24 __rhs 'const std::chrono::duration<double, std::ratio<1, 1> >::rep &'
| | |   |-FunctionTemplateDecl 0xe53d98 <line:409:2, line:417:4> line:413:4 operator%=
| | |   | |-TemplateTypeParmDecl 0xe53868 <line:409:11, col:28> col:20 typename depth 0 index 0 _Rep2
| | |   | | `-TemplateArgument type 'std::chrono::duration<double, std::ratio<1, 1> >::rep':'double'
| | |   | `-CXXMethodDecl 0xe53cf8 <line:411:4, line:417:4> line:413:4 operator%= 'typename enable_if<!treat_as_floating_point<_Rep2>::value, duration<double, ratio<1, 1> > &>::type (const std::chrono::duration<double, std::ratio<1, 1> >::rep &)'
| | |   |   `-ParmVarDecl 0xe53bf0 <col:15, col:26> col:26 __rhs 'const std::chrono::duration<double, std::ratio<1, 1> >::rep &'
| | |   |-FunctionTemplateDecl 0xe54308 <line:419:2, line:427:4> line:423:4 operator%=
| | |   | |-TemplateTypeParmDecl 0xe53e78 <line:419:11, col:28> col:20 typename depth 0 index 0 _Rep2
| | |   | | `-TemplateArgument type 'std::chrono::duration<double, std::ratio<1, 1> >::rep':'double'
| | |   | `-CXXMethodDecl 0xe54268 <line:421:4, line:427:4> line:423:4 operator%= 'typename enable_if<!treat_as_floating_point<_Rep2>::value, duration<double, ratio<1, 1> > &>::type (const std::chrono::duration<double, std::ratio<1, 1> > &)'
| | |   |   `-ParmVarDecl 0xe54160 <col:15, col:31> col:31 __d 'const std::chrono::duration<double, std::ratio<1, 1> > &'
| | |   |-CXXMethodDecl 0xe54470 <line:430:2, line:432:51> line:431:2 constexpr zero 'std::chrono::duration<double, std::ratio<1, 1> > () noexcept' static
| | |   |-CXXMethodDecl 0xe54548 <line:434:2, line:436:50> line:435:2 constexpr min 'std::chrono::duration<double, std::ratio<1, 1> > () noexcept' static
| | |   |-CXXMethodDecl 0xe54620 <line:438:2, line:440:50> line:439:2 constexpr max 'std::chrono::duration<double, std::ratio<1, 1> > () noexcept' static
| | |   |-AccessSpecDecl 0xe546d0 <line:442:7, col:14> col:7 private
| | |   `-FieldDecl 0xe54708 <line:443:2, col:6> col:6 referenced __r 'std::chrono::duration<double, std::ratio<1, 1> >::rep':'double'
| | `-ClassTemplateDecl 0xcee2d0 <line:64:5, line:65:14> col:14 time_point
| |   |-TemplateTypeParmDecl 0xcee048 <line:64:14, col:23> col:23 typename depth 0 index 0 _Clock
| |   |-TemplateTypeParmDecl 0xcee1a0 <col:31, col:64> col:40 typename depth 0 index 1 _Dur
| |   | `-TemplateArgument type 'typename _Clock::duration'
| |   |-CXXRecordDecl 0xcee240 <line:65:7, col:14> col:14 struct time_point
| |   |-ClassTemplateSpecializationDecl 0xd347b0 <line:625:5, line:678:7> line:626:14 struct time_point definition
| |   | |-DefinitionData pass_in_registers standard_layout trivially_copyable literal has_user_declared_ctor has_constexpr_non_copy_move_ctor can_const_default_init
| |   | | |-DefaultConstructor exists non_trivial user_provided constexpr defaulted_is_constexpr
| |   | | |-CopyConstructor simple trivial has_const_param needs_overload_resolution implicit_has_const_param
| |   | | |-MoveConstructor exists simple trivial needs_overload_resolution
| |   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | | |-MoveAssignment exists simple trivial needs_overload_resolution
| |   | | `-Destructor simple irrelevant trivial needs_overload_resolution
| |   | |-TemplateArgument type 'std::chrono::_V2::system_clock'
| |   | |-TemplateArgument type 'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| |   | |-CXXRecordDecl 0xd683e8 prev 0xd347b0 <col:7, col:14> col:14 implicit struct time_point
| |   | |-TypedefDecl 0xd684b8 <line:628:2, col:24> col:24 clock 'std::chrono::_V2::system_clock':'std::chrono::_V2::system_clock'
| |   | | `-SubstTemplateTypeParmType 0xd68480 'std::chrono::_V2::system_clock' sugar
| |   | |   |-TemplateTypeParmType 0xd1e390 '_Clock' dependent depth 0 index 0
| |   | |   | `-TemplateTypeParm 0xd1e340 '_Clock'
| |   | |   `-RecordType 0xd29600 'std::chrono::_V2::system_clock'
| |   | |     `-CXXRecord 0xd29568 'system_clock'
| |   | |-TypedefDecl 0xd68548 <line:629:2, col:22> col:22 duration 'std::chrono::duration<long, std::ratio<1, 1000000000> >':'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| |   | | `-SubstTemplateTypeParmType 0xd68510 'std::chrono::duration<long, std::ratio<1, 1000000000> >' sugar
| |   | |   |-TemplateTypeParmType 0xd1e410 '_Dur' dependent depth 0 index 1
| |   | |   | `-TemplateTypeParm 0xd1e3b8 '_Dur'
| |   | |   `-RecordType 0xd1d100 'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| |   | |     `-ClassTemplateSpecialization 0xd1d000 'duration'
| |   | |-TypedefDecl 0xd68650 <line:630:2, col:38> col:38 rep 'typename duration::rep':'long'
| |   | | `-ElaboratedType 0xd68600 'typename duration::rep' sugar
| |   | |   `-TypedefType 0xd2fc30 'std::chrono::duration<long, std::ratio<1, 1000000000> >::rep' sugar
| |   | |     |-Typedef 0xd2a3f8 'rep'
| |   | |     `-SubstTemplateTypeParmType 0xd2a3c0 'long' sugar
| |   | |       |-TemplateTypeParmType 0xd011b0 '_Rep' dependent depth 0 index 0
| |   | |       | `-TemplateTypeParm 0xd01158 '_Rep'
| |   | |       `-BuiltinType 0x7db3a0 'long'
| |   | |-TypedefDecl 0xd68720 <line:631:2, col:38> col:38 period 'typename duration::period':'std::ratio<1, 1000000000>'
| |   | | `-ElaboratedType 0xd686d0 'typename duration::period' sugar
| |   | |   `-TypedefType 0xd34680 'std::chrono::duration<long, std::ratio<1, 1000000000> >::period' sugar
| |   | |     |-Typedef 0xd2a460 'period'
| |   | |     `-SubstTemplateTypeParmType 0xd29c50 'std::ratio<1, 1000000000>' sugar
| |   | |       |-TemplateTypeParmType 0xd01230 '_Period' dependent depth 0 index 1
| |   | |       | `-TemplateTypeParm 0xd011d8 '_Period'
| |   | |       `-RecordType 0xc4c1d0 'std::ratio<1, 1000000000>'
| |   | |         `-ClassTemplateSpecialization 0xc4c0d0 'ratio'
| |   | |-CXXConstructorDecl 0xd687b0 <line:633:2, line:634:4> line:633:12 constexpr time_point 'void ()'
| |   | |-CXXConstructorDecl 0xd68988 <line:636:2, line:638:4> line:636:21 used constexpr time_point 'void (const std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >::duration &)'
| |   | | |-ParmVarDecl 0xd688a8 <col:32, col:48> col:48 used __dur 'const std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >::duration &'
| |   | | |-CXXCtorInitializer Field 0xd69f40 '__d' 'std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >::duration':'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| |   | | | `-CXXConstructExpr 0xdb0af0 <line:637:4, col:13> 'std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >::duration':'std::chrono::duration<long, std::ratio<1, 1000000000> >' 'void (const std::chrono::duration<long, std::ratio<1, 1000000000> > &) noexcept'
| |   | | |   `-DeclRefExpr 0xdaf6e8 <col:8> 'const std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >::duration':'const std::chrono::duration<long, std::ratio<1, 1000000000> >' lvalue ParmVar 0xd688a8 '__dur' 'const std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >::duration &'
| |   | | `-CompoundStmt 0xd1ffe8 <line:638:2, col:4>
| |   | |-FunctionTemplateDecl 0xd69810 <line:641:2, line:645:6> line:643:14 time_point
| |   | | |-TemplateTypeParmDecl 0xd68a48 <line:641:11, col:20> col:20 typename depth 0 index 0 _Dur2
| |   | | |-TemplateTypeParmDecl 0xd68ac8 <line:642:4, <scratch space>:154:1> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/chrono:642:13 typename depth 0 index 1
| |   | | | `-TemplateArgument type '_Require<is_convertible<_Dur2, std::chrono::duration<long, std::ratio<1, 1000000000> > > >':'typename enable_if<__and_<is_convertible<type-parameter-0-0, duration<long, ratio<1, 1000000000> > > >::value>::type'
| |   | | |-CXXConstructorDecl 0xd69768 <line:643:4, line:645:6> line:643:14 constexpr time_point 'void (const time_point<std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >::clock, _Dur2> &)'
| |   | | | `-ParmVarDecl 0xd69658 <col:25, col:57> col:57 __t 'const time_point<std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >::clock, _Dur2> &'
| |   | | `-CXXConstructorDecl 0xdb8bf8 <col:4, line:645:6> line:643:14 constexpr time_point 'void (const time_point<std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >::clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &)'
| |   | |   |-TemplateArgument type 'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| |   | |   |-TemplateArgument type 'void'
| |   | |   `-ParmVarDecl 0xdb8b38 <col:25, col:57> col:57 __t 'const time_point<std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >::clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &'
| |   | |-CXXMethodDecl 0xd69938 <line:648:2, line:650:16> line:649:2 used constexpr time_since_epoch 'std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >::duration () const'
| |   | | `-CompoundStmt 0xb8c640 <line:650:2, col:16>
| |   | |   `-ReturnStmt 0xb8c630 <col:4, col:11>
| |   | |     `-CXXConstructExpr 0xb8c600 <col:11> 'std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >::duration':'std::chrono::duration<long, std::ratio<1, 1000000000> >' 'void (const std::chrono::duration<long, std::ratio<1, 1000000000> > &) noexcept'
| |   | |       `-MemberExpr 0xd6cd68 <col:11> 'const std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >::duration':'const std::chrono::duration<long, std::ratio<1, 1000000000> >' lvalue ->__d 0xd69f40
| |   | |         `-CXXThisExpr 0xd6cd28 <col:11> 'const std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > *' implicit this
| |   | |-CXXMethodDecl 0xd69b18 <line:653:23, line:658:2> line:654:2 operator+= 'std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &(const std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >::duration &)'
| |   | | `-ParmVarDecl 0xd69a28 <col:13, col:29> col:29 __dur 'const std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >::duration &'
| |   | |-CXXMethodDecl 0xd69c70 <line:660:23, line:665:2> line:661:2 operator-= 'std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &(const std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >::duration &)'
| |   | | `-ParmVarDecl 0xd69be0 <col:13, col:29> col:29 __dur 'const std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >::duration &'
| |   | |-CXXMethodDecl 0xd69d80 <line:668:2, line:670:40> line:669:2 constexpr min 'std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > () noexcept' static
| |   | |-CXXMethodDecl 0xd69e58 <line:672:2, line:674:40> line:673:2 constexpr max 'std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > () noexcept' static
| |   | |-AccessSpecDecl 0xd69f08 <line:676:7, col:14> col:7 private
| |   | |-FieldDecl 0xd69f40 <line:677:2, col:11> col:11 referenced __d 'std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >::duration':'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| |   | |-CXXConstructorDecl 0xd6b350 <line:626:14> col:14 implicit constexpr time_point 'void (const std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &)' inline default trivial noexcept-unevaluated 0xd6b350
| |   | | `-ParmVarDecl 0xd6b468 <col:14> col:14 'const std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &'
| |   | |-CXXConstructorDecl 0xd6c8d0 <col:14> col:14 implicit used constexpr time_point 'void (std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &&) noexcept' inline default trivial
| |   | | |-ParmVarDecl 0xd6c9e8 <col:14> col:14 used 'std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &&'
| |   | | |-CXXCtorInitializer Field 0xd69f40 '__d' 'std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >::duration':'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| |   | | | `-CXXConstructExpr 0xdbcd08 <col:14> 'std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >::duration':'std::chrono::duration<long, std::ratio<1, 1000000000> >' 'void (const std::chrono::duration<long, std::ratio<1, 1000000000> > &) noexcept'
| |   | | |   `-ImplicitCastExpr 0xdbccf0 <col:14> 'const std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >::duration':'const std::chrono::duration<long, std::ratio<1, 1000000000> >' xvalue <NoOp>
| |   | | |     `-MemberExpr 0xdb8dc0 <col:14> 'std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >::duration':'std::chrono::duration<long, std::ratio<1, 1000000000> >' xvalue .__d 0xd69f40
| |   | | |       `-CXXStaticCastExpr 0xdb8d90 <col:14> 'std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >' xvalue static_cast<struct std::chrono::time_point<struct std::chrono::_V2::system_clock, struct std::chrono::duration<long, struct std::ratio<1, 1000000000> > > &&> <NoOp>
| |   | | |         `-DeclRefExpr 0xdb8d60 <col:14> 'std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >' lvalue ParmVar 0xd6c9e8 '' 'std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &&'
| |   | | `-CompoundStmt 0xdbcd68 <col:14>
| |   | |-CXXMethodDecl 0xd6ca58 <col:14> col:14 implicit constexpr operator= 'std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &(std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &&)' inline default trivial noexcept-unevaluated 0xd6ca58
| |   | | `-ParmVarDecl 0xd6cb68 <col:14> col:14 'std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &&'
| |   | `-CXXDestructorDecl 0xd6cbf0 <col:14> col:14 implicit referenced ~time_point 'void () noexcept' inline default trivial
| |   |-ClassTemplateSpecializationDecl 0xd95548 <line:625:5, line:678:7> line:626:14 struct time_point definition
| |   | |-DefinitionData pass_in_registers standard_layout trivially_copyable literal has_user_declared_ctor has_constexpr_non_copy_move_ctor can_const_default_init
| |   | | |-DefaultConstructor exists non_trivial user_provided constexpr defaulted_is_constexpr
| |   | | |-CopyConstructor simple trivial has_const_param needs_overload_resolution implicit_has_const_param
| |   | | |-MoveConstructor exists simple trivial needs_overload_resolution
| |   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | | |-MoveAssignment exists simple trivial needs_overload_resolution
| |   | | `-Destructor simple irrelevant trivial needs_overload_resolution
| |   | |-TemplateArgument type 'std::chrono::_V2::system_clock'
| |   | |-TemplateArgument type 'std::chrono::duration<long, std::ratio<1, 1> >'
| |   | |-CXXRecordDecl 0xd96280 prev 0xd95548 <col:7, col:14> col:14 implicit struct time_point
| |   | |-TypedefDecl 0xd96320 <line:628:2, col:24> col:24 clock 'std::chrono::_V2::system_clock':'std::chrono::_V2::system_clock'
| |   | | `-SubstTemplateTypeParmType 0xd68480 'std::chrono::_V2::system_clock' sugar
| |   | |   |-TemplateTypeParmType 0xd1e390 '_Clock' dependent depth 0 index 0
| |   | |   | `-TemplateTypeParm 0xd1e340 '_Clock'
| |   | |   `-RecordType 0xd29600 'std::chrono::_V2::system_clock'
| |   | |     `-CXXRecord 0xd29568 'system_clock'
| |   | |-TypedefDecl 0xd963b8 <line:629:2, col:22> col:22 duration 'std::chrono::duration<long, std::ratio<1, 1> >':'std::chrono::duration<long, std::ratio<1, 1> >'
| |   | | `-SubstTemplateTypeParmType 0xd96380 'std::chrono::duration<long, std::ratio<1, 1> >' sugar
| |   | |   |-TemplateTypeParmType 0xd1e410 '_Dur' dependent depth 0 index 1
| |   | |   | `-TemplateTypeParm 0xd1e3b8 '_Dur'
| |   | |   `-RecordType 0xd1d8b0 'std::chrono::duration<long, std::ratio<1, 1> >'
| |   | |     `-ClassTemplateSpecialization 0xd1d7b0 'duration'
| |   | |-TypedefDecl 0xd964c0 <line:630:2, col:38> col:38 rep 'typename duration::rep':'long'
| |   | | `-ElaboratedType 0xd96470 'typename duration::rep' sugar
| |   | |   `-TypedefType 0xb8f460 'std::chrono::duration<long, std::ratio<1, 1> >::rep' sugar
| |   | |     |-Typedef 0xb8e6a8 'rep'
| |   | |     `-SubstTemplateTypeParmType 0xd2a3c0 'long' sugar
| |   | |       |-TemplateTypeParmType 0xd011b0 '_Rep' dependent depth 0 index 0
| |   | |       | `-TemplateTypeParm 0xd01158 '_Rep'
| |   | |       `-BuiltinType 0x7db3a0 'long'
| |   | |-TypedefDecl 0xd96590 <line:631:2, col:38> col:38 period 'typename duration::period':'std::ratio<1, 1>'
| |   | | `-ElaboratedType 0xd96540 'typename duration::period' sugar
| |   | |   `-TypedefType 0xb93af0 'std::chrono::duration<long, std::ratio<1, 1> >::period' sugar
| |   | |     |-Typedef 0xb8e710 'period'
| |   | |     `-SubstTemplateTypeParmType 0xb8df60 'std::ratio<1, 1>' sugar
| |   | |       |-TemplateTypeParmType 0xd01230 '_Period' dependent depth 0 index 1
| |   | |       | `-TemplateTypeParm 0xd011d8 '_Period'
| |   | |       `-RecordType 0xcedc30 'std::ratio<1, 1>'
| |   | |         `-ClassTemplateSpecialization 0xcedb38 'ratio'
| |   | |-CXXConstructorDecl 0xd96620 <line:633:2, line:634:4> line:633:12 constexpr time_point 'void ()'
| |   | |-CXXConstructorDecl 0xd96860 <line:636:2, line:638:4> line:636:21 used constexpr time_point 'void (const std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1> > >::duration &)'
| |   | | |-ParmVarDecl 0xd96718 <col:32, col:48> col:48 used __dur 'const std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1> > >::duration &'
| |   | | |-CXXCtorInitializer Field 0xd979b0 '__d' 'std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1> > >::duration':'std::chrono::duration<long, std::ratio<1, 1> >'
| |   | | | `-CXXConstructExpr 0xda1740 <line:637:4, col:13> 'std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1> > >::duration':'std::chrono::duration<long, std::ratio<1, 1> >' 'void (const std::chrono::duration<long, std::ratio<1, 1> > &) noexcept'
| |   | | |   `-DeclRefExpr 0xda0340 <col:8> 'const std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1> > >::duration':'const std::chrono::duration<long, std::ratio<1, 1> >' lvalue ParmVar 0xd96718 '__dur' 'const std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1> > >::duration &'
| |   | | `-CompoundStmt 0xd1ffe8 <line:638:2, col:4>
| |   | |-FunctionTemplateDecl 0xd97250 <line:641:2, line:645:6> line:643:14 time_point
| |   | | |-TemplateTypeParmDecl 0xd96920 <line:641:11, col:20> col:20 typename depth 0 index 0 _Dur2
| |   | | |-TemplateTypeParmDecl 0xd96998 <line:642:4, <scratch space>:154:1> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/chrono:642:13 typename depth 0 index 1
| |   | | | `-TemplateArgument type '_Require<is_convertible<_Dur2, std::chrono::duration<long, std::ratio<1, 1> > > >':'typename enable_if<__and_<is_convertible<type-parameter-0-0, duration<long, ratio<1, 1> > > >::value>::type'
| |   | | `-CXXConstructorDecl 0xd971a8 <line:643:4, line:645:6> line:643:14 constexpr time_point 'void (const time_point<std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1> > >::clock, _Dur2> &)'
| |   | |   `-ParmVarDecl 0xd970c8 <col:25, col:57> col:57 __t 'const time_point<std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1> > >::clock, _Dur2> &'
| |   | |-CXXMethodDecl 0xd97378 <line:648:2, line:650:16> line:649:2 used constexpr time_since_epoch 'std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1> > >::duration () const'
| |   | | `-CompoundStmt 0xda5f60 <line:650:2, col:16>
| |   | |   `-ReturnStmt 0xda5f50 <col:4, col:11>
| |   | |     `-CXXConstructExpr 0xda5f20 <col:11> 'std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1> > >::duration':'std::chrono::duration<long, std::ratio<1, 1> >' 'void (const std::chrono::duration<long, std::ratio<1, 1> > &) noexcept'
| |   | |       `-MemberExpr 0xda5188 <col:11> 'const std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1> > >::duration':'const std::chrono::duration<long, std::ratio<1, 1> >' lvalue ->__d 0xd979b0
| |   | |         `-CXXThisExpr 0xda5148 <col:11> 'const std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1> > > *' implicit this
| |   | |-CXXMethodDecl 0xd97558 <line:653:23, line:658:2> line:654:2 operator+= 'std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1> > > &(const std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1> > >::duration &)'
| |   | | `-ParmVarDecl 0xd97468 <col:13, col:29> col:29 __dur 'const std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1> > >::duration &'
| |   | |-CXXMethodDecl 0xd976b0 <line:660:23, line:665:2> line:661:2 operator-= 'std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1> > > &(const std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1> > >::duration &)'
| |   | | `-ParmVarDecl 0xd97620 <col:13, col:29> col:29 __dur 'const std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1> > >::duration &'
| |   | |-CXXMethodDecl 0xd977f0 <line:668:2, line:670:40> line:669:2 constexpr min 'std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1> > > () noexcept' static
| |   | |-CXXMethodDecl 0xd978c8 <line:672:2, line:674:40> line:673:2 constexpr max 'std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1> > > () noexcept' static
| |   | |-AccessSpecDecl 0xd97978 <line:676:7, col:14> col:7 private
| |   | |-FieldDecl 0xd979b0 <line:677:2, col:11> col:11 referenced __d 'std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1> > >::duration':'std::chrono::duration<long, std::ratio<1, 1> >'
| |   | |-CXXConstructorDecl 0xd9e6d0 <line:626:14> col:14 implicit constexpr time_point 'void (const std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1> > > &)' inline default trivial noexcept-unevaluated 0xd9e6d0
| |   | | `-ParmVarDecl 0xd9e7e8 <col:14> col:14 'const std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1> > > &'
| |   | |-CXXConstructorDecl 0xd9fe80 <col:14> col:14 implicit constexpr time_point 'void (std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1> > > &&)' inline default trivial noexcept-unevaluated 0xd9fe80
| |   | | `-ParmVarDecl 0xd9ff98 <col:14> col:14 'std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1> > > &&'
| |   | |-CXXMethodDecl 0xda0008 <col:14> col:14 implicit constexpr operator= 'std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1> > > &(std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1> > > &&)' inline default trivial noexcept-unevaluated 0xda0008
| |   | | `-ParmVarDecl 0xda0118 <col:14> col:14 'std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1> > > &&'
| |   | `-CXXDestructorDecl 0xda01a0 <col:14> col:14 implicit referenced ~time_point 'void () noexcept' inline default trivial
| |   `-ClassTemplateSpecializationDecl 0xdbd838 <line:625:5, line:678:7> line:626:14 struct time_point definition
| |     |-DefinitionData pass_in_registers standard_layout trivially_copyable literal has_user_declared_ctor has_constexpr_non_copy_move_ctor can_const_default_init
| |     | |-DefaultConstructor exists non_trivial user_provided constexpr defaulted_is_constexpr
| |     | |-CopyConstructor simple trivial has_const_param needs_overload_resolution implicit_has_const_param
| |     | |-MoveConstructor exists simple trivial needs_overload_resolution
| |     | |-CopyAssignment trivial has_const_param implicit_has_const_param
| |     | |-MoveAssignment exists simple trivial needs_overload_resolution
| |     | `-Destructor simple irrelevant trivial needs_overload_resolution
| |     |-TemplateArgument type 'std::chrono::_V2::steady_clock'
| |     |-TemplateArgument type 'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| |     |-CXXRecordDecl 0xe3f798 prev 0xdbd838 <col:7, col:14> col:14 implicit struct time_point
| |     |-TypedefDecl 0xe3f868 <line:628:2, col:24> col:24 clock 'std::chrono::_V2::steady_clock':'std::chrono::_V2::steady_clock'
| |     | `-SubstTemplateTypeParmType 0xe3f830 'std::chrono::_V2::steady_clock' sugar
| |     |   |-TemplateTypeParmType 0xd1e390 '_Clock' dependent depth 0 index 0
| |     |   | `-TemplateTypeParm 0xd1e340 '_Clock'
| |     |   `-RecordType 0xdbd430 'std::chrono::_V2::steady_clock'
| |     |     `-CXXRecord 0xdbd398 'steady_clock'
| |     |-TypedefDecl 0xe3f8d0 <line:629:2, col:22> col:22 duration 'std::chrono::duration<long, std::ratio<1, 1000000000> >':'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| |     | `-SubstTemplateTypeParmType 0xd68510 'std::chrono::duration<long, std::ratio<1, 1000000000> >' sugar
| |     |   |-TemplateTypeParmType 0xd1e410 '_Dur' dependent depth 0 index 1
| |     |   | `-TemplateTypeParm 0xd1e3b8 '_Dur'
| |     |   `-RecordType 0xd1d100 'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| |     |     `-ClassTemplateSpecialization 0xd1d000 'duration'
| |     |-TypedefDecl 0xe3f9e0 <line:630:2, col:38> col:38 rep 'typename duration::rep':'long'
| |     | `-ElaboratedType 0xe3f990 'typename duration::rep' sugar
| |     |   `-TypedefType 0xd2fc30 'std::chrono::duration<long, std::ratio<1, 1000000000> >::rep' sugar
| |     |     |-Typedef 0xd2a3f8 'rep'
| |     |     `-SubstTemplateTypeParmType 0xd2a3c0 'long' sugar
| |     |       |-TemplateTypeParmType 0xd011b0 '_Rep' dependent depth 0 index 0
| |     |       | `-TemplateTypeParm 0xd01158 '_Rep'
| |     |       `-BuiltinType 0x7db3a0 'long'
| |     |-TypedefDecl 0xe3fab0 <line:631:2, col:38> col:38 period 'typename duration::period':'std::ratio<1, 1000000000>'
| |     | `-ElaboratedType 0xe3fa60 'typename duration::period' sugar
| |     |   `-TypedefType 0xd34680 'std::chrono::duration<long, std::ratio<1, 1000000000> >::period' sugar
| |     |     |-Typedef 0xd2a460 'period'
| |     |     `-SubstTemplateTypeParmType 0xd29c50 'std::ratio<1, 1000000000>' sugar
| |     |       |-TemplateTypeParmType 0xd01230 '_Period' dependent depth 0 index 1
| |     |       | `-TemplateTypeParm 0xd011d8 '_Period'
| |     |       `-RecordType 0xc4c1d0 'std::ratio<1, 1000000000>'
| |     |         `-ClassTemplateSpecialization 0xc4c0d0 'ratio'
| |     |-CXXConstructorDecl 0xe3fb40 <line:633:2, line:634:4> line:633:12 constexpr time_point 'void ()'
| |     |-CXXConstructorDecl 0xe3fd18 <line:636:2, line:638:4> line:636:21 constexpr time_point 'void (const std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >::duration &)'
| |     | `-ParmVarDecl 0xe3fc38 <col:32, col:48> col:48 __dur 'const std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >::duration &'
| |     |-FunctionTemplateDecl 0xe40650 <line:641:2, line:645:6> line:643:14 time_point
| |     | |-TemplateTypeParmDecl 0xe3fdd8 <line:641:11, col:20> col:20 typename depth 0 index 0 _Dur2
| |     | |-TemplateTypeParmDecl 0xe3fe58 <line:642:4, <scratch space>:154:1> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/chrono:642:13 typename depth 0 index 1
| |     | | `-TemplateArgument type '_Require<is_convertible<_Dur2, std::chrono::duration<long, std::ratio<1, 1000000000> > > >':'typename enable_if<__and_<is_convertible<type-parameter-0-0, duration<long, ratio<1, 1000000000> > > >::value>::type'
| |     | |-CXXConstructorDecl 0xe405a8 <line:643:4, line:645:6> line:643:14 constexpr time_point 'void (const time_point<std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >::clock, _Dur2> &)'
| |     | | `-ParmVarDecl 0xe40498 <col:25, col:57> col:57 __t 'const time_point<std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >::clock, _Dur2> &'
| |     | `-CXXConstructorDecl 0xe41a88 <col:4, line:645:6> line:643:14 constexpr time_point 'void (const time_point<std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >::clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &)'
| |     |   |-TemplateArgument type 'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| |     |   |-TemplateArgument type 'void'
| |     |   `-ParmVarDecl 0xe419c8 <col:25, col:57> col:57 __t 'const time_point<std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >::clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &'
| |     |-CXXMethodDecl 0xe40778 <line:648:2, line:650:16> line:649:2 used constexpr time_since_epoch 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >::duration () const'
| |     | `-CompoundStmt 0xe45da0 <line:650:2, col:16>
| |     |   `-ReturnStmt 0xe45d90 <col:4, col:11>
| |     |     `-CXXConstructExpr 0xe45d60 <col:11> 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >::duration':'std::chrono::duration<long, std::ratio<1, 1000000000> >' 'void (const std::chrono::duration<long, std::ratio<1, 1000000000> > &) noexcept'
| |     |       `-MemberExpr 0xe44fc8 <col:11> 'const std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >::duration':'const std::chrono::duration<long, std::ratio<1, 1000000000> >' lvalue ->__d 0xe40d80
| |     |         `-CXXThisExpr 0xe44f88 <col:11> 'const std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > *' implicit this
| |     |-CXXMethodDecl 0xe40958 <line:653:23, line:658:2> line:654:2 operator+= 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &(const std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >::duration &)'
| |     | `-ParmVarDecl 0xe40868 <col:13, col:29> col:29 __dur 'const std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >::duration &'
| |     |-CXXMethodDecl 0xe40ab0 <line:660:23, line:665:2> line:661:2 operator-= 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &(const std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >::duration &)'
| |     | `-ParmVarDecl 0xe40a20 <col:13, col:29> col:29 __dur 'const std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >::duration &'
| |     |-CXXMethodDecl 0xe40bc0 <line:668:2, line:670:40> line:669:2 constexpr min 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > () noexcept' static
| |     |-CXXMethodDecl 0xe40c98 <line:672:2, line:674:40> line:673:2 constexpr max 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > () noexcept' static
| |     |-AccessSpecDecl 0xe40d48 <line:676:7, col:14> col:7 private
| |     |-FieldDecl 0xe40d80 <line:677:2, col:11> col:11 referenced __d 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >::duration':'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| |     |-CXXConstructorDecl 0xe40df8 <line:626:14> col:14 implicit constexpr time_point 'void (const std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &)' inline default trivial noexcept-unevaluated 0xe40df8
| |     | `-ParmVarDecl 0xe40f08 <col:14> col:14 'const std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &'
| |     |-CXXConstructorDecl 0xe40fa8 <col:14> col:14 implicit used constexpr time_point 'void (std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &&) noexcept' inline default trivial
| |     | |-ParmVarDecl 0xe410b8 <col:14> col:14 used 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &&'
| |     | |-CXXCtorInitializer Field 0xe40d80 '__d' 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >::duration':'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| |     | | `-CXXConstructExpr 0xe43078 <col:14> 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >::duration':'std::chrono::duration<long, std::ratio<1, 1000000000> >' 'void (const std::chrono::duration<long, std::ratio<1, 1000000000> > &) noexcept'
| |     | |   `-ImplicitCastExpr 0xe43060 <col:14> 'const std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >::duration':'const std::chrono::duration<long, std::ratio<1, 1000000000> >' xvalue <NoOp>
| |     | |     `-MemberExpr 0xe41c50 <col:14> 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >::duration':'std::chrono::duration<long, std::ratio<1, 1000000000> >' xvalue .__d 0xe40d80
| |     | |       `-CXXStaticCastExpr 0xe41c20 <col:14> 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >' xvalue static_cast<struct std::chrono::time_point<struct std::chrono::_V2::steady_clock, struct std::chrono::duration<long, struct std::ratio<1, 1000000000> > > &&> <NoOp>
| |     | |         `-DeclRefExpr 0xe41bf0 <col:14> 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >' lvalue ParmVar 0xe410b8 '' 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &&'
| |     | `-CompoundStmt 0xe430d8 <col:14>
| |     |-CXXMethodDecl 0xe41128 <col:14> col:14 implicit used constexpr operator= 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &(std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &&) noexcept' inline default trivial
| |     | |-ParmVarDecl 0xe41238 <col:14> col:14 used 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &&'
| |     | `-CompoundStmt 0xe75918 <col:14>
| |     |   |-CXXMemberCallExpr 0xe758a0 <col:14> 'std::chrono::duration<long, std::ratio<1, 1000000000> >' lvalue
| |     |   | |-MemberExpr 0xe756a8 <col:14> '<bound member function type>' .operator= 0xd32798
| |     |   | | `-MemberExpr 0xe75668 <col:14> 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >::duration':'std::chrono::duration<long, std::ratio<1, 1000000000> >' lvalue ->__d 0xe40d80
| |     |   | |   `-CXXThisExpr 0xe75658 <col:14> 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > *' this
| |     |   | `-ImplicitCastExpr 0xe758c8 <col:14> 'const std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >::duration':'const std::chrono::duration<long, std::ratio<1, 1000000000> >' xvalue <NoOp>
| |     |   |   `-MemberExpr 0xe75870 <col:14> 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >::duration':'std::chrono::duration<long, std::ratio<1, 1000000000> >' xvalue .__d 0xe40d80
| |     |   |     `-CXXStaticCastExpr 0xe75840 <col:14> 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >' xvalue static_cast<struct std::chrono::time_point<struct std::chrono::_V2::steady_clock, struct std::chrono::duration<long, struct std::ratio<1, 1000000000> > > &&> <NoOp>
| |     |   |       `-DeclRefExpr 0xe75810 <col:14> 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >' lvalue ParmVar 0xe41238 '' 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &&'
| |     |   `-ReturnStmt 0xe75908 <col:14>
| |     |     `-UnaryOperator 0xe758f0 <col:14> 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >' lvalue prefix '*' cannot overflow
| |     |       `-CXXThisExpr 0xe758e0 <col:14> 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > *' this
| |     |-CXXDestructorDecl 0xe412c0 <col:14> col:14 implicit referenced ~time_point 'void () noexcept' inline default trivial
| |     `-CXXMethodDecl 0xe75420 <col:14> col:14 implicit constexpr operator= 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &(const std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &)' inline default trivial noexcept-unevaluated 0xe75420
| |       `-ParmVarDecl 0xe75528 <col:14> col:14 'const std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &'
| |-ClassTemplateDecl 0xcee738 <line:70:3, line:81:5> line:71:12 __duration_common_type_wrapper
| | |-TemplateTypeParmDecl 0xcee4f8 <line:70:12, col:21> col:21 typename depth 0 index 0 _CT
| | |-TemplateTypeParmDecl 0xcee578 <col:26, col:35> col:35 typename depth 0 index 1 _Period1
| | |-TemplateTypeParmDecl 0xcee5f8 <col:45, col:54> col:54 typename depth 0 index 2 _Period2
| | |-CXXRecordDecl 0xcee6a8 <line:71:5, line:81:5> line:71:12 struct __duration_common_type_wrapper definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-CXXRecordDecl 0xcee9f0 <col:5, col:12> col:12 implicit struct __duration_common_type_wrapper
| | | |-AccessSpecDecl 0xceea80 <line:73:5, col:12> col:5 private
| | | |-TypedefDecl 0xceed68 <line:74:7, col:58> col:58 referenced __gcd_num '__static_gcd<_Period1::num, _Period2::num>'
| | | | `-TemplateSpecializationType 0xceec80 '__static_gcd<_Period1::num, _Period2::num>' dependent __static_gcd
| | | |   |-TemplateArgument expr
| | | |   | `-ImplicitCastExpr 0xceebe8 <col:28, col:38> 'intmax_t':'long' <Dependent>
| | | |   |   `-DependentScopeDeclRefExpr 0xceeb10 <col:28, col:38> '<dependent type>' lvalue
| | | |   `-TemplateArgument expr
| | | |     `-ImplicitCastExpr 0xceec00 <col:43, col:53> 'intmax_t':'long' <Dependent>
| | | |       `-DependentScopeDeclRefExpr 0xceebb0 <col:43, col:53> '<dependent type>' lvalue
| | | |-TypedefDecl 0xcef048 <line:75:7, col:58> col:58 referenced __gcd_den '__static_gcd<_Period1::den, _Period2::den>'
| | | | `-TemplateSpecializationType 0xceef60 '__static_gcd<_Period1::den, _Period2::den>' dependent __static_gcd
| | | |   |-TemplateArgument expr
| | | |   | `-ImplicitCastExpr 0xceeed0 <col:28, col:38> 'intmax_t':'long' <Dependent>
| | | |   |   `-DependentScopeDeclRefExpr 0xceee10 <col:28, col:38> '<dependent type>' lvalue
| | | |   `-TemplateArgument expr
| | | |     `-ImplicitCastExpr 0xceeee8 <col:43, col:53> 'intmax_t':'long' <Dependent>
| | | |       `-DependentScopeDeclRefExpr 0xceee98 <col:43, col:53> '<dependent type>' lvalue
| | | |-TypedefDecl 0xcef140 <line:76:7, col:34> col:34 referenced __cr 'typename _CT::type'
| | | | `-DependentNameType 0xcef0d0 'typename _CT::type' dependent
| | | |-TypedefDecl 0xcef618 <line:77:7, line:78:61> col:61 referenced __r 'ratio<__gcd_num::value, (_Period1::den / __gcd_den::value) * _Period2::den>'
| | | | `-TemplateSpecializationType 0xcef530 'ratio<__gcd_num::value, (_Period1::den / __gcd_den::value) * _Period2::den>' dependent ratio
| | | |   |-TemplateArgument expr
| | | |   | `-ImplicitCastExpr 0xcef468 <line:77:21, col:32> 'intmax_t':'long' <Dependent>
| | | |   |   `-DependentScopeDeclRefExpr 0xcef228 <col:21, col:32> '<dependent type>' lvalue
| | | |   `-TemplateArgument expr
| | | |     `-ImplicitCastExpr 0xcef480 <line:78:9, col:56> 'intmax_t':'long' <Dependent>
| | | |       `-BinaryOperator 0xcef448 <col:9, col:56> '<dependent type>' '*'
| | | |         |-ParenExpr 0xcef3b8 <col:9, col:42> '<dependent type>'
| | | |         | `-BinaryOperator 0xcef398 <col:10, col:37> '<dependent type>' '/'
| | | |         |   |-DependentScopeDeclRefExpr 0xcef2b0 <col:10, col:20> '<dependent type>' lvalue
| | | |         |   `-DependentScopeDeclRefExpr 0xcef360 <col:26, col:37> '<dependent type>' lvalue
| | | |         `-DependentScopeDeclRefExpr 0xcef410 <col:46, col:56> '<dependent type>' lvalue
| | | |-AccessSpecDecl 0xcef670 <line:79:5, col:11> col:5 public
| | | `-TypedefDecl 0xcf1210 <line:80:7, col:59> col:59 type '__success_type<chrono::duration<__cr, __r> >'
| | |   `-TemplateSpecializationType 0xcf1170 '__success_type<chrono::duration<__cr, __r> >' dependent __success_type
| | |     `-TemplateArgument type 'chrono::duration<__cr, __r>':'duration<std::__duration_common_type_wrapper::__cr, std::__duration_common_type_wrapper::__r>'
| | `-ClassTemplateSpecializationDecl 0xd5a1f0 <line:70:3, line:81:5> line:71:12 struct __duration_common_type_wrapper definition
| |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-TemplateArgument type 'std::__success_type<long>'
| |   |-TemplateArgument type 'std::ratio<1, 1000000000>'
| |   |-TemplateArgument type 'std::ratio<1, 1000000000>'
| |   |-CXXRecordDecl 0xd5a4b0 prev 0xd5a1f0 <col:5, col:12> col:12 implicit struct __duration_common_type_wrapper
| |   |-AccessSpecDecl 0xd5a540 <line:73:5, col:12> col:5 private
| |   |-TypedefDecl 0xd5a800 <line:74:7, col:58> col:58 __gcd_num '__static_gcd<ratio<1, 1000000000>::num, ratio<1, 1000000000>::num>':'std::__static_gcd<1, 1>'
| |   | `-TemplateSpecializationType 0xd5a760 '__static_gcd<ratio<1, 1000000000>::num, ratio<1, 1000000000>::num>' sugar __static_gcd
| |   |   |-TemplateArgument expr
| |   |   | `-ConstantExpr 0xd5a708 <col:28, col:38> 'intmax_t':'long' Int: 1
| |   |   |   `-ImplicitCastExpr 0xd5a6f0 <col:28, col:38> 'intmax_t':'long' <LValueToRValue>
| |   |   |     `-DeclRefExpr 0xd5a600 <col:28, col:38> 'const intmax_t':'const long' lvalue Var 0xd2f0a0 'num' 'const intmax_t':'const long' non_odr_use_constant
| |   |   |-TemplateArgument expr
| |   |   | `-ConstantExpr 0xd5a740 <col:43, col:53> 'intmax_t':'long' Int: 1
| |   |   |   `-ImplicitCastExpr 0xd5a728 <col:43, col:53> 'intmax_t':'long' <LValueToRValue>
| |   |   |     `-DeclRefExpr 0xd5a6c0 <col:43, col:53> 'const intmax_t':'const long' lvalue Var 0xd2f0a0 'num' 'const intmax_t':'const long' non_odr_use_constant
| |   |   `-RecordType 0xd47070 'std::__static_gcd<1, 1>'
| |   |     `-ClassTemplateSpecialization 0xd46f70 '__static_gcd'
| |   |-TypedefDecl 0xd5aa70 <line:75:7, col:58> col:58 __gcd_den '__static_gcd<ratio<1, 1000000000>::den, ratio<1, 1000000000>::den>':'std::__static_gcd<1000000000, 1000000000>'
| |   | `-TemplateSpecializationType 0xd5a9d0 '__static_gcd<ratio<1, 1000000000>::den, ratio<1, 1000000000>::den>' sugar __static_gcd
| |   |   |-TemplateArgument expr
| |   |   | `-ConstantExpr 0xd5a970 <col:28, col:38> 'intmax_t':'long' Int: 1000000000
| |   |   |   `-ImplicitCastExpr 0xd5a958 <col:28, col:38> 'intmax_t':'long' <LValueToRValue>
| |   |   |     `-DeclRefExpr 0xd5a8a8 <col:28, col:38> 'const intmax_t':'const long' lvalue Var 0xd2f328 'den' 'const intmax_t':'const long' non_odr_use_constant
| |   |   |-TemplateArgument expr
| |   |   | `-ConstantExpr 0xd5a9a8 <col:43, col:53> 'intmax_t':'long' Int: 1000000000
| |   |   |   `-ImplicitCastExpr 0xd5a990 <col:43, col:53> 'intmax_t':'long' <LValueToRValue>
| |   |   |     `-DeclRefExpr 0xd5a928 <col:43, col:53> 'const intmax_t':'const long' lvalue Var 0xd2f328 'den' 'const intmax_t':'const long' non_odr_use_constant
| |   |   `-RecordType 0xd47890 'std::__static_gcd<1000000000, 1000000000>'
| |   |     `-ClassTemplateSpecialization 0xd47790 '__static_gcd'
| |   |-TypedefDecl 0xd5ab80 <line:76:7, col:34> col:34 __cr 'typename __success_type<long>::type':'long'
| |   | `-ElaboratedType 0xd5ab30 'typename __success_type<long>::type' sugar
| |   |   `-TypedefType 0xd59990 'std::__success_type<long>::type' sugar
| |   |     |-Typedef 0xd59848 'type'
| |   |     `-SubstTemplateTypeParmType 0xd59810 'long' sugar
| |   |       |-TemplateTypeParmType 0xaddb60 '_Tp' dependent depth 0 index 0
| |   |       | `-TemplateTypeParm 0xaddb10 '_Tp'
| |   |       `-BuiltinType 0x7db3a0 'long'
| |   |-TypedefDecl 0xd5b000 <line:77:7, line:78:61> col:61 __r 'ratio<__gcd_num::value, (ratio<1, 1000000000>::den / __gcd_den::value) * ratio<1, 1000000000>::den>':'std::ratio<1, 1000000000>'
| |   | `-TemplateSpecializationType 0xd5af60 'ratio<__gcd_num::value, (ratio<1, 1000000000>::den / __gcd_den::value) * ratio<1, 1000000000>::den>' sugar ratio
| |   |   |-TemplateArgument expr
| |   |   | `-ConstantExpr 0xd5af18 <line:77:21, col:32> 'long':'long' Int: 1
| |   |   |   `-ImplicitCastExpr 0xd5af00 <col:21, col:32> 'long':'long' <LValueToRValue>
| |   |   |     `-DeclRefExpr 0xd5ac68 <col:21, col:32> 'const long':'const long' lvalue Var 0xd2bfd8 'value' 'const long':'const long' non_odr_use_constant
| |   |   |-TemplateArgument expr
| |   |   | `-ConstantExpr 0xd5af38 <line:78:9, col:56> 'long' Int: 1000000000
| |   |   |   `-BinaryOperator 0xd5aee0 <col:9, col:56> 'long' '*'
| |   |   |     |-ParenExpr 0xd5ae28 <col:9, col:42> 'long'
| |   |   |     | `-BinaryOperator 0xd5ae08 <col:10, col:37> 'long' '/'
| |   |   |     |   |-ImplicitCastExpr 0xd5ada8 <col:10, col:20> 'intmax_t':'long' <LValueToRValue>
| |   |   |     |   | `-DeclRefExpr 0xd5ad78 <col:10, col:20> 'const intmax_t':'const long' lvalue Var 0xd2f328 'den' 'const intmax_t':'const long' non_odr_use_constant
| |   |   |     |   `-ImplicitCastExpr 0xd5adf0 <col:26, col:37> 'long':'long' <LValueToRValue>
| |   |   |     |     `-DeclRefExpr 0xd5adc0 <col:26, col:37> 'const long':'const long' lvalue Var 0xd2eba8 'value' 'const long':'const long' non_odr_use_constant
| |   |   |     `-ImplicitCastExpr 0xd5aec8 <col:46, col:56> 'intmax_t':'long' <LValueToRValue>
| |   |   |       `-DeclRefExpr 0xd5ae98 <col:46, col:56> 'const intmax_t':'const long' lvalue Var 0xd2f328 'den' 'const intmax_t':'const long' non_odr_use_constant
| |   |   `-RecordType 0xc4c1d0 'std::ratio<1, 1000000000>'
| |   |     `-ClassTemplateSpecialization 0xc4c0d0 'ratio'
| |   |-AccessSpecDecl 0xd5b058 <line:79:5, col:11> col:5 public
| |   `-TypedefDecl 0xd5b340 <line:80:7, col:59> col:59 referenced type '__success_type<chrono::duration<__cr, __r> >':'std::__success_type<std::chrono::duration<long, std::ratio<1, 1000000000> > >'
| |     `-TemplateSpecializationType 0xd5b2d0 '__success_type<chrono::duration<__cr, __r> >' sugar __success_type
| |       |-TemplateArgument type 'chrono::duration<__cr, __r>':'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| |       `-RecordType 0xd5b2b0 'std::__success_type<std::chrono::duration<long, std::ratio<1, 1000000000> > >'
| |         `-ClassTemplateSpecialization 0xd5b1c8 '__success_type'
| |-ClassTemplatePartialSpecializationDecl 0xcf1550 <line:83:3, line:85:36> line:84:12 struct __duration_common_type_wrapper definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'std::__failure_type'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument type 'type-parameter-0-1'
| | |-TemplateTypeParmDecl 0xcf1280 <line:83:12, col:21> col:21 referenced typename depth 0 index 0 _Period1
| | |-TemplateTypeParmDecl 0xcf12f8 <col:31, col:40> col:40 referenced typename depth 0 index 1 _Period2
| | |-CXXRecordDecl 0xcf1828 <line:84:5, col:12> col:12 implicit struct __duration_common_type_wrapper
| | `-TypedefDecl 0xcf18c8 <line:85:7, col:30> col:30 type 'std::__failure_type'
| |   `-RecordType 0xade030 'std::__failure_type'
| |     `-CXXRecord 0xaddfa0 '__failure_type'
| |-ClassTemplatePartialSpecializationDecl 0xcf2000 parent 0xac6cd8 <line:87:3, line:92:7> line:88:12 struct common_type definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public '__duration_common_type_wrapper<typename __member_type_wrapper<common_type<_Rep1, _Rep2> >::type, _Period1, _Period2>::type'
| | |-TemplateArgument pack
| | | |-TemplateArgument type 'duration<type-parameter-0-0, type-parameter-0-1>'
| | | `-TemplateArgument type 'duration<type-parameter-0-2, type-parameter-0-3>'
| | |-TemplateTypeParmDecl 0xcf1938 <line:87:12, col:21> col:21 referenced typename depth 0 index 0 _Rep1
| | |-TemplateTypeParmDecl 0xcf19b8 <col:28, col:37> col:37 referenced typename depth 0 index 1 _Period1
| | |-TemplateTypeParmDecl 0xcf1a38 <col:47, col:56> col:56 referenced typename depth 0 index 2 _Rep2
| | |-TemplateTypeParmDecl 0xcf1ab8 <col:63, col:72> col:72 referenced typename depth 0 index 3 _Period2
| | `-CXXRecordDecl 0xcf2940 <line:88:5, col:12> col:12 implicit struct common_type
| |-ClassTemplateDecl 0xcf2ba0 <line:96:3, line:101:5> line:97:12 __timepoint_common_type_wrapper
| | |-TemplateTypeParmDecl 0xcf29e8 <line:96:12, col:21> col:21 typename depth 0 index 0 _CT
| | |-TemplateTypeParmDecl 0xcf2a68 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Clock
| | `-CXXRecordDecl 0xcf2b10 <line:97:5, line:101:5> line:97:12 struct __timepoint_common_type_wrapper definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial needs_implicit
| |   |-CXXRecordDecl 0xcf2e30 <col:5, col:12> col:12 implicit struct __timepoint_common_type_wrapper
| |   `-TypedefDecl 0xcf3220 <line:99:7, line:100:9> col:9 type '__success_type<chrono::time_point<_Clock, typename _CT::type> >'
| |     `-TemplateSpecializationType 0xcf3180 '__success_type<chrono::time_point<_Clock, typename _CT::type> >' dependent __success_type
| |       `-TemplateArgument type 'chrono::time_point<_Clock, typename _CT::type>':'time_point<_Clock, typename _CT::type>'
| |-ClassTemplatePartialSpecializationDecl 0xcf3478 <line:103:3, line:105:36> line:104:12 struct __timepoint_common_type_wrapper definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'std::__failure_type'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateTypeParmDecl 0xcf3290 <line:103:12, col:21> col:21 referenced typename depth 0 index 0 _Clock
| | |-CXXRecordDecl 0xcf36f8 <line:104:5, col:12> col:12 implicit struct __timepoint_common_type_wrapper
| | `-TypedefDecl 0xcf3798 <line:105:7, col:30> col:30 type 'std::__failure_type'
| |   `-RecordType 0xade030 'std::__failure_type'
| |     `-CXXRecord 0xaddfa0 '__failure_type'
| |-ClassTemplatePartialSpecializationDecl 0xcf3e50 parent 0xac6cd8 <line:107:3, line:112:7> line:108:12 struct common_type definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public '__timepoint_common_type_wrapper<typename __member_type_wrapper<common_type<_Duration1, _Duration2> >::type, _Clock>::type'
| | |-TemplateArgument pack
| | | |-TemplateArgument type 'time_point<type-parameter-0-0, type-parameter-0-1>'
| | | `-TemplateArgument type 'time_point<type-parameter-0-0, type-parameter-0-2>'
| | |-TemplateTypeParmDecl 0xcf3808 <line:107:12, col:21> col:21 referenced typename depth 0 index 0 _Clock
| | |-TemplateTypeParmDecl 0xcf3888 <col:29, col:38> col:38 referenced typename depth 0 index 1 _Duration1
| | |-TemplateTypeParmDecl 0xcf3908 <col:50, col:59> col:59 referenced typename depth 0 index 2 _Duration2
| | `-CXXRecordDecl 0xcf4740 <line:108:5, col:12> col:12 implicit struct common_type
| |-NamespaceDecl 0xcf47e8 prev 0xced9c0 <line:114:3, line:891:3> line:114:13 chrono
| | |-original Namespace 0xced9c0 'chrono'
| | |-ClassTemplateDecl 0xcf4be8 <line:117:5, line:130:7> line:119:14 __duration_cast_impl
| | | |-TemplateTypeParmDecl 0xcf4858 <line:117:14, col:23> col:23 referenced typename depth 0 index 0 _ToDur
| | | |-TemplateTypeParmDecl 0xcf48d8 <col:31, col:40> col:40 typename depth 0 index 1 _CF
| | | |-TemplateTypeParmDecl 0xcf4958 <col:45, col:54> col:54 referenced typename depth 0 index 2 _CR
| | | |-NonTypeTemplateParmDecl 0xcf49f8 <line:118:7, col:24> col:12 'bool' depth 0 index 3 _NumIsOne
| | | | `-TemplateArgument expr
| | | |   `-ConstantExpr 0xcf4a58 <col:24> 'bool' Int: 0
| | | |     `-CXXBoolLiteralExpr 0xcf49d8 <col:24> 'bool' false
| | | |-NonTypeTemplateParmDecl 0xcf4a98 <col:31, col:48> col:36 'bool' depth 0 index 4 _DenIsOne
| | | | `-TemplateArgument expr
| | | |   `-ConstantExpr 0xcf4af8 <col:48> 'bool' Int: 0
| | | |     `-CXXBoolLiteralExpr 0xcf4a78 <col:48> 'bool' false
| | | |-CXXRecordDecl 0xcf4b58 <line:119:7, line:130:7> line:119:14 struct __duration_cast_impl definition
| | | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | | `-Destructor simple irrelevant trivial needs_implicit
| | | | |-CXXRecordDecl 0xcf5c90 <col:7, col:14> col:14 implicit struct __duration_cast_impl
| | | | `-FunctionTemplateDecl 0xcf61c8 <line:121:2, line:129:4> line:123:4 __cast
| | | |   |-TemplateTypeParmDecl 0xcf5d20 <line:121:11, col:20> col:20 referenced typename depth 1 index 0 _Rep
| | | |   |-TemplateTypeParmDecl 0xcf5d98 <col:26, col:35> col:35 referenced typename depth 1 index 1 _Period
| | | |   `-CXXMethodDecl 0xcf6128 <line:122:4, line:129:4> line:123:4 constexpr __cast '_ToDur (const duration<_Rep, _Period> &)' static
| | | |     |-ParmVarDecl 0xcf6008 <col:11, col:42> col:42 referenced __d 'const duration<_Rep, _Period> &'
| | | |     `-CompoundStmt 0xcf66a8 <line:124:4, line:129:4>
| | | |       |-DeclStmt 0xcf6368 <line:125:6, col:45>
| | | |       | `-TypedefDecl 0xcf6310 <col:6, col:37> col:37 referenced __to_rep 'typename _ToDur::rep'
| | | |       |   `-DependentNameType 0xcf62a0 'typename _ToDur::rep' dependent
| | | |       `-ReturnStmt 0xcf6698 <line:126:6, line:128:37>
| | | |         `-CXXUnresolvedConstructExpr 0xcf6670 <line:126:13, line:128:37> '_ToDur' '_ToDur'
| | | |           `-CXXStaticCastExpr 0xcf6640 <line:126:20, line:128:36> '__to_rep':'typename _ToDur::rep' static_cast<__to_rep> <Dependent>
| | | |             `-BinaryOperator 0xcf6610 <line:126:42, line:128:35> '<dependent type>' '/'
| | | |               |-BinaryOperator 0xcf6540 <line:126:42, line:127:35> '<dependent type>' '*'
| | | |               | |-CXXStaticCastExpr 0xcf6448 <line:126:42, col:70> '_CR' static_cast<_CR> <Dependent>
| | | |               | | `-CallExpr 0xcf6418 <col:59, col:69> '<dependent type>'
| | | |               | |   `-CXXDependentScopeMemberExpr 0xcf63d0 <col:59, col:63> '<dependent type>' lvalue .count
| | | |               | |     `-DeclRefExpr 0xcf63b0 <col:59> 'const duration<_Rep, _Period>' lvalue ParmVar 0xcf6008 '__d' 'const duration<_Rep, _Period> &'
| | | |               | `-CXXStaticCastExpr 0xcf6510 <line:127:10, col:35> '_CR' static_cast<_CR> <Dependent>
| | | |               |   `-DependentScopeDeclRefExpr 0xcf64c8 <col:27, col:32> '<dependent type>' lvalue
| | | |               `-CXXStaticCastExpr 0xcf65e0 <line:128:10, col:35> '_CR' static_cast<_CR> <Dependent>
| | | |                 `-DependentScopeDeclRefExpr 0xcf6598 <col:27, col:32> '<dependent type>' lvalue
| | | |-ClassTemplateSpecializationDecl 0xd8e128 <line:144:5, line:155:7> line:145:14 struct __duration_cast_impl definition
| | | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | | `-Destructor simple irrelevant trivial needs_implicit
| | | | |-TemplateArgument type 'std::chrono::duration<long, std::ratio<1, 1> >'
| | | | |-TemplateArgument type 'std::ratio<1, 1000000000>'
| | | | |-TemplateArgument type 'long'
| | | | |-TemplateArgument integral 1
| | | | |-TemplateArgument integral 0
| | | | |-CXXRecordDecl 0xd8e6f0 prev 0xd8e128 <col:7, col:14> col:14 implicit struct __duration_cast_impl
| | | | `-FunctionTemplateDecl 0xd8eb28 <line:147:2, line:154:4> line:149:4 __cast
| | | |   |-TemplateTypeParmDecl 0xd8e780 <line:147:11, col:20> col:20 typename depth 0 index 0 _Rep
| | | |   |-TemplateTypeParmDecl 0xd8e7f8 <col:26, col:35> col:35 typename depth 0 index 1 _Period
| | | |   |-CXXMethodDecl 0xd8ea88 <line:148:4, line:154:4> line:149:4 constexpr __cast 'std::chrono::duration<long, std::ratio<1, 1> > (const duration<_Rep, _Period> &)' static
| | | |   | `-ParmVarDecl 0xd8e998 <col:11, col:42> col:42 __d 'const duration<_Rep, _Period> &'
| | | |   `-CXXMethodDecl 0xd8ef08 <line:148:4, line:154:4> line:149:4 used constexpr __cast 'std::chrono::duration<long, std::ratio<1, 1> > (const duration<long, std::ratio<1, 1000000000> > &)' static
| | | |     |-TemplateArgument type 'long'
| | | |     |-TemplateArgument type 'std::ratio<1, 1000000000>'
| | | |     |-ParmVarDecl 0xd8ee48 <col:11, col:42> col:42 used __d 'const duration<long, std::ratio<1, 1000000000> > &'
| | | |     `-CompoundStmt 0xd943c8 <line:150:4, line:154:4>
| | | |       |-DeclStmt 0xd8f1b8 <line:151:6, col:45>
| | | |       | `-TypedefDecl 0xd8f160 <col:6, col:37> col:37 __to_rep 'typename duration<long, ratio<1, 1> >::rep':'long'
| | | |       |   `-ElaboratedType 0xd8f110 'typename duration<long, ratio<1, 1> >::rep' sugar
| | | |       |     `-TypedefType 0xb8f460 'std::chrono::duration<long, std::ratio<1, 1> >::rep' sugar
| | | |       |       |-Typedef 0xb8e6a8 'rep'
| | | |       |       `-SubstTemplateTypeParmType 0xd2a3c0 'long' sugar
| | | |       |         |-TemplateTypeParmType 0xd011b0 '_Rep' dependent depth 0 index 0
| | | |       |         | `-TemplateTypeParm 0xd01158 '_Rep'
| | | |       |         `-BuiltinType 0x7db3a0 'long'
| | | |       `-ReturnStmt 0xd943b8 <line:152:6, line:153:67>
| | | |         `-ExprWithCleanups 0xd943a0 <line:152:13, line:153:67> 'std::chrono::duration<long, std::ratio<1, 1> >':'std::chrono::duration<long, std::ratio<1, 1> >'
| | | |           `-CXXConstructExpr 0xd94370 <line:152:13, line:153:67> 'std::chrono::duration<long, std::ratio<1, 1> >':'std::chrono::duration<long, std::ratio<1, 1> >' 'void (const std::chrono::duration<long, std::ratio<1, 1> > &) noexcept' elidable
| | | |             `-MaterializeTemporaryExpr 0xd94268 <line:152:13, line:153:67> 'const std::chrono::duration<long, std::ratio<1, 1> >':'const std::chrono::duration<long, std::ratio<1, 1> >' lvalue
| | | |               `-ImplicitCastExpr 0xd94250 <line:152:13, line:153:67> 'const std::chrono::duration<long, std::ratio<1, 1> >':'const std::chrono::duration<long, std::ratio<1, 1> >' <NoOp>
| | | |                 `-CXXFunctionalCastExpr 0xd8ff48 <line:152:13, line:153:67> 'std::chrono::duration<long, std::ratio<1, 1> >':'std::chrono::duration<long, std::ratio<1, 1> >' functional cast to struct std::chrono::duration<long, struct std::ratio<1, 1> > <ConstructorConversion>
| | | |                   `-CXXConstructExpr 0xd8ff18 <line:152:13, line:153:67> 'std::chrono::duration<long, std::ratio<1, 1> >':'std::chrono::duration<long, std::ratio<1, 1> >' 'void (const long &)'
| | | |                     `-MaterializeTemporaryExpr 0xd8fe38 <line:152:20, line:153:66> 'const long':'const long' lvalue
| | | |                       `-CXXStaticCastExpr 0xd8f3d0 <line:152:20, line:153:66> '__to_rep':'long' static_cast<__to_rep> <NoOp>
| | | |                         `-BinaryOperator 0xd8f3b0 <col:8, col:65> 'long' '/'
| | | |                           |-CXXStaticCastExpr 0xd8f290 <col:8, col:36> 'long':'long' static_cast<long> <NoOp>
| | | |                           | `-CXXMemberCallExpr 0xd8f270 <col:25, col:35> 'std::chrono::duration<long, std::ratio<1, 1000000000> >::rep':'long'
| | | |                           |   `-MemberExpr 0xd8f240 <col:25, col:29> '<bound member function type>' .count 0xd32898
| | | |                           |     `-DeclRefExpr 0xd8f220 <col:25> 'const duration<long, std::ratio<1, 1000000000> >':'const std::chrono::duration<long, std::ratio<1, 1000000000> >' lvalue ParmVar 0xd8ee48 '__d' 'const duration<long, std::ratio<1, 1000000000> > &'
| | | |                           `-CXXStaticCastExpr 0xd8f380 <col:40, col:65> 'long':'long' static_cast<long> <NoOp>
| | | |                             `-ImplicitCastExpr 0xd8f368 <col:57, col:62> 'intmax_t':'long' <LValueToRValue> part_of_explicit_cast
| | | |                               `-DeclRefExpr 0xd8f338 <col:57, col:62> 'const intmax_t':'const long' lvalue Var 0xd2f328 'den' 'const intmax_t':'const long' non_odr_use_constant
| | | |-ClassTemplateSpecializationDecl 0xdab428 <line:157:5, line:168:7> line:158:14 struct __duration_cast_impl definition
| | | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | | `-Destructor simple irrelevant trivial needs_implicit
| | | | |-TemplateArgument type 'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | | | |-TemplateArgument type 'std::ratio<1000000000, 1>'
| | | | |-TemplateArgument type 'long'
| | | | |-TemplateArgument integral 0
| | | | |-TemplateArgument integral 1
| | | | |-CXXRecordDecl 0xdab9f0 prev 0xdab428 <col:7, col:14> col:14 implicit struct __duration_cast_impl
| | | | `-FunctionTemplateDecl 0xdabe28 <line:160:2, line:167:4> line:162:4 __cast
| | | |   |-TemplateTypeParmDecl 0xdaba80 <line:160:11, col:20> col:20 typename depth 0 index 0 _Rep
| | | |   |-TemplateTypeParmDecl 0xdabaf8 <col:26, col:35> col:35 typename depth 0 index 1 _Period
| | | |   |-CXXMethodDecl 0xdabd88 <line:161:4, line:167:4> line:162:4 constexpr __cast 'std::chrono::duration<long, std::ratio<1, 1000000000> > (const duration<_Rep, _Period> &)' static
| | | |   | `-ParmVarDecl 0xdabc98 <col:11, col:42> col:42 __d 'const duration<_Rep, _Period> &'
| | | |   `-CXXMethodDecl 0xdac208 <line:161:4, line:167:4> line:162:4 used constexpr __cast 'std::chrono::duration<long, std::ratio<1, 1000000000> > (const duration<long, std::ratio<1, 1> > &)' static
| | | |     |-TemplateArgument type 'long'
| | | |     |-TemplateArgument type 'std::ratio<1, 1>'
| | | |     |-ParmVarDecl 0xdac148 <col:11, col:42> col:42 used __d 'const duration<long, std::ratio<1, 1> > &'
| | | |     `-CompoundStmt 0xdae698 <line:163:4, line:167:4>
| | | |       |-DeclStmt 0xdac4b8 <line:164:6, col:45>
| | | |       | `-TypedefDecl 0xdac460 <col:6, col:37> col:37 __to_rep 'typename duration<long, ratio<1, 1000000000> >::rep':'long'
| | | |       |   `-ElaboratedType 0xdac410 'typename duration<long, ratio<1, 1000000000> >::rep' sugar
| | | |       |     `-TypedefType 0xd2fc30 'std::chrono::duration<long, std::ratio<1, 1000000000> >::rep' sugar
| | | |       |       |-Typedef 0xd2a3f8 'rep'
| | | |       |       `-SubstTemplateTypeParmType 0xd2a3c0 'long' sugar
| | | |       |         |-TemplateTypeParmType 0xd011b0 '_Rep' dependent depth 0 index 0
| | | |       |         | `-TemplateTypeParm 0xd01158 '_Rep'
| | | |       |         `-BuiltinType 0x7db3a0 'long'
| | | |       `-ReturnStmt 0xdae688 <line:165:6, line:166:67>
| | | |         `-ExprWithCleanups 0xdae670 <line:165:13, line:166:67> 'std::chrono::duration<long, std::ratio<1, 1000000000> >':'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | | |           `-CXXConstructExpr 0xdae640 <line:165:13, line:166:67> 'std::chrono::duration<long, std::ratio<1, 1000000000> >':'std::chrono::duration<long, std::ratio<1, 1000000000> >' 'void (const std::chrono::duration<long, std::ratio<1, 1000000000> > &) noexcept' elidable
| | | |             `-MaterializeTemporaryExpr 0xdae628 <line:165:13, line:166:67> 'const std::chrono::duration<long, std::ratio<1, 1000000000> >':'const std::chrono::duration<long, std::ratio<1, 1000000000> >' lvalue
| | | |               `-ImplicitCastExpr 0xdae610 <line:165:13, line:166:67> 'const std::chrono::duration<long, std::ratio<1, 1000000000> >':'const std::chrono::duration<long, std::ratio<1, 1000000000> >' <NoOp>
| | | |                 `-CXXFunctionalCastExpr 0xdad880 <line:165:13, line:166:67> 'std::chrono::duration<long, std::ratio<1, 1000000000> >':'std::chrono::duration<long, std::ratio<1, 1000000000> >' functional cast to struct std::chrono::duration<long, struct std::ratio<1, 1000000000> > <ConstructorConversion>
| | | |                   `-CXXConstructExpr 0xdad850 <line:165:13, line:166:67> 'std::chrono::duration<long, std::ratio<1, 1000000000> >':'std::chrono::duration<long, std::ratio<1, 1000000000> >' 'void (const long &)'
| | | |                     `-MaterializeTemporaryExpr 0xdad838 <line:165:20, line:166:66> 'const long':'const long' lvalue
| | | |                       `-CXXStaticCastExpr 0xdac6d0 <line:165:20, line:166:66> '__to_rep':'long' static_cast<__to_rep> <NoOp>
| | | |                         `-BinaryOperator 0xdac6b0 <col:8, col:65> 'long' '*'
| | | |                           |-CXXStaticCastExpr 0xdac590 <col:8, col:36> 'long':'long' static_cast<long> <NoOp>
| | | |                           | `-CXXMemberCallExpr 0xdac570 <col:25, col:35> 'std::chrono::duration<long, std::ratio<1, 1> >::rep':'long'
| | | |                           |   `-MemberExpr 0xdac540 <col:25, col:29> '<bound member function type>' .count 0xb91e18
| | | |                           |     `-DeclRefExpr 0xdac520 <col:25> 'const duration<long, std::ratio<1, 1> >':'const std::chrono::duration<long, std::ratio<1, 1> >' lvalue ParmVar 0xdac148 '__d' 'const duration<long, std::ratio<1, 1> > &'
| | | |                           `-CXXStaticCastExpr 0xdac680 <col:40, col:65> 'long':'long' static_cast<long> <NoOp>
| | | |                             `-ImplicitCastExpr 0xdac668 <col:57, col:62> 'intmax_t':'long' <LValueToRValue> part_of_explicit_cast
| | | |                               `-DeclRefExpr 0xdac638 <col:57, col:62> 'const intmax_t':'const long' lvalue Var 0xd46830 'num' 'const intmax_t':'const long' non_odr_use_constant
| | | `-ClassTemplateSpecializationDecl 0xe60328 <line:144:5, line:155:7> line:145:14 struct __duration_cast_impl definition
| | |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |   | |-MoveConstructor exists simple trivial needs_implicit
| | |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |   | |-MoveAssignment exists simple trivial needs_implicit
| | |   | `-Destructor simple irrelevant trivial needs_implicit
| | |   |-TemplateArgument type 'std::chrono::duration<double, std::ratio<1, 1> >'
| | |   |-TemplateArgument type 'std::ratio<1, 1000000000>'
| | |   |-TemplateArgument type 'double'
| | |   |-TemplateArgument integral 1
| | |   |-TemplateArgument integral 0
| | |   |-CXXRecordDecl 0xe608c0 prev 0xe60328 <col:7, col:14> col:14 implicit struct __duration_cast_impl
| | |   `-FunctionTemplateDecl 0xe60cf8 <line:147:2, line:154:4> line:149:4 __cast
| | |     |-TemplateTypeParmDecl 0xe60950 <line:147:11, col:20> col:20 typename depth 0 index 0 _Rep
| | |     |-TemplateTypeParmDecl 0xe609c8 <col:26, col:35> col:35 typename depth 0 index 1 _Period
| | |     |-CXXMethodDecl 0xe60c58 <line:148:4, line:154:4> line:149:4 constexpr __cast 'std::chrono::duration<double, std::ratio<1, 1> > (const duration<_Rep, _Period> &)' static
| | |     | `-ParmVarDecl 0xe60b68 <col:11, col:42> col:42 __d 'const duration<_Rep, _Period> &'
| | |     `-CXXMethodDecl 0xe610d8 <line:148:4, line:154:4> line:149:4 used constexpr __cast 'std::chrono::duration<double, std::ratio<1, 1> > (const duration<long, std::ratio<1, 1000000000> > &)' static
| | |       |-TemplateArgument type 'long'
| | |       |-TemplateArgument type 'std::ratio<1, 1000000000>'
| | |       |-ParmVarDecl 0xe61018 <col:11, col:42> col:42 used __d 'const duration<long, std::ratio<1, 1000000000> > &'
| | |       `-CompoundStmt 0xe6be88 <line:150:4, line:154:4>
| | |         |-DeclStmt 0xe61308 <line:151:6, col:45>
| | |         | `-TypedefDecl 0xe612b0 <col:6, col:37> col:37 __to_rep 'typename duration<double, ratio<1, 1> >::rep':'double'
| | |         |   `-ElaboratedType 0xe61260 'typename duration<double, ratio<1, 1> >::rep' sugar
| | |         |     `-TypedefType 0xe504c0 'std::chrono::duration<double, std::ratio<1, 1> >::rep' sugar
| | |         |       |-Typedef 0xe4f928 'rep'
| | |         |       `-SubstTemplateTypeParmType 0xe4f8f0 'double' sugar
| | |         |         |-TemplateTypeParmType 0xd011b0 '_Rep' dependent depth 0 index 0
| | |         |         | `-TemplateTypeParm 0xd01158 '_Rep'
| | |         |         `-BuiltinType 0x7db4a0 'double'
| | |         `-ReturnStmt 0xe6be78 <line:152:6, line:153:67>
| | |           `-ExprWithCleanups 0xe6be60 <line:152:13, line:153:67> 'std::chrono::duration<double, std::ratio<1, 1> >':'std::chrono::duration<double, std::ratio<1, 1> >'
| | |             `-CXXConstructExpr 0xe6be30 <line:152:13, line:153:67> 'std::chrono::duration<double, std::ratio<1, 1> >':'std::chrono::duration<double, std::ratio<1, 1> >' 'void (const std::chrono::duration<double, std::ratio<1, 1> > &) noexcept' elidable
| | |               `-MaterializeTemporaryExpr 0xe6bd28 <line:152:13, line:153:67> 'const std::chrono::duration<double, std::ratio<1, 1> >':'const std::chrono::duration<double, std::ratio<1, 1> >' lvalue
| | |                 `-ImplicitCastExpr 0xe6bd10 <line:152:13, line:153:67> 'const std::chrono::duration<double, std::ratio<1, 1> >':'const std::chrono::duration<double, std::ratio<1, 1> >' <NoOp>
| | |                   `-CXXFunctionalCastExpr 0xe69ec8 <line:152:13, line:153:67> 'std::chrono::duration<double, std::ratio<1, 1> >':'std::chrono::duration<double, std::ratio<1, 1> >' functional cast to struct std::chrono::duration<double, struct std::ratio<1, 1> > <ConstructorConversion>
| | |                     `-CXXConstructExpr 0xe69e98 <line:152:13, line:153:67> 'std::chrono::duration<double, std::ratio<1, 1> >':'std::chrono::duration<double, std::ratio<1, 1> >' 'void (const double &)'
| | |                       `-MaterializeTemporaryExpr 0xe69db8 <line:152:20, line:153:66> 'const double':'const double' lvalue
| | |                         `-CXXStaticCastExpr 0xe61538 <line:152:20, line:153:66> '__to_rep':'double' static_cast<__to_rep> <NoOp>
| | |                           `-BinaryOperator 0xe61518 <col:8, col:65> 'double' '/'
| | |                             |-CXXStaticCastExpr 0xe613f8 <col:8, col:36> 'double':'double' static_cast<double> <NoOp>
| | |                             | `-ImplicitCastExpr 0xe613e0 <col:25, col:35> 'double':'double' <IntegralToFloating> part_of_explicit_cast
| | |                             |   `-CXXMemberCallExpr 0xe613c0 <col:25, col:35> 'std::chrono::duration<long, std::ratio<1, 1000000000> >::rep':'long'
| | |                             |     `-MemberExpr 0xe61390 <col:25, col:29> '<bound member function type>' .count 0xd32898
| | |                             |       `-DeclRefExpr 0xe61370 <col:25> 'const duration<long, std::ratio<1, 1000000000> >':'const std::chrono::duration<long, std::ratio<1, 1000000000> >' lvalue ParmVar 0xe61018 '__d' 'const duration<long, std::ratio<1, 1000000000> > &'
| | |                             `-CXXStaticCastExpr 0xe614e8 <col:40, col:65> 'double':'double' static_cast<double> <NoOp>
| | |                               `-ImplicitCastExpr 0xe614d0 <col:57, col:62> 'double':'double' <IntegralToFloating> part_of_explicit_cast
| | |                                 `-ImplicitCastExpr 0xe614b8 <col:57, col:62> 'intmax_t':'long' <LValueToRValue> part_of_explicit_cast
| | |                                   `-DeclRefExpr 0xe61488 <col:57, col:62> 'const intmax_t':'const long' lvalue Var 0xd2f328 'den' 'const intmax_t':'const long' non_odr_use_constant
| | |-ClassTemplatePartialSpecializationDecl 0xcf6b50 <line:132:5, line:142:7> line:133:14 struct __duration_cast_impl definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'type-parameter-0-0'
| | | |-TemplateArgument type 'type-parameter-0-1'
| | | |-TemplateArgument type 'type-parameter-0-2'
| | | |-TemplateArgument integral 1
| | | |-TemplateArgument integral 1
| | | |-TemplateTypeParmDecl 0xcf66c8 <line:132:14, col:23> col:23 referenced typename depth 0 index 0 _ToDur
| | | |-TemplateTypeParmDecl 0xcf6748 <col:31, col:40> col:40 referenced typename depth 0 index 1 _CF
| | | |-TemplateTypeParmDecl 0xcf67c8 <col:45, col:54> col:54 referenced typename depth 0 index 2 _CR
| | | |-CXXRecordDecl 0xcf6f18 <line:133:7, col:14> col:14 implicit struct __duration_cast_impl
| | | `-FunctionTemplateDecl 0xcf7398 <line:135:2, line:141:4> line:137:4 __cast
| | |   |-TemplateTypeParmDecl 0xcf6fa8 <line:135:11, col:20> col:20 referenced typename depth 1 index 0 _Rep
| | |   |-TemplateTypeParmDecl 0xcf7028 <col:26, col:35> col:35 referenced typename depth 1 index 1 _Period
| | |   `-CXXMethodDecl 0xcf72f8 <line:136:4, line:141:4> line:137:4 constexpr __cast '_ToDur (const duration<_Rep, _Period> &)' static
| | |     |-ParmVarDecl 0xcf7208 <col:11, col:42> col:42 referenced __d 'const duration<_Rep, _Period> &'
| | |     `-CompoundStmt 0xcf7650 <line:138:4, line:141:4>
| | |       |-DeclStmt 0xcf7508 <line:139:6, col:45>
| | |       | `-TypedefDecl 0xcf74b0 <col:6, col:37> col:37 referenced __to_rep 'typename _ToDur::rep'
| | |       |   `-DependentNameType 0xcf7440 'typename _ToDur::rep' dependent
| | |       `-ReturnStmt 0xcf7640 <line:140:6, col:54>
| | |         `-CXXUnresolvedConstructExpr 0xcf7618 <col:13, col:54> '_ToDur' '_ToDur'
| | |           `-CXXStaticCastExpr 0xcf75e8 <col:20, col:53> '__to_rep':'typename _ToDur::rep' static_cast<__to_rep> <Dependent>
| | |             `-CallExpr 0xcf75b8 <col:42, col:52> '<dependent type>'
| | |               `-CXXDependentScopeMemberExpr 0xcf7570 <col:42, col:46> '<dependent type>' lvalue .count
| | |                 `-DeclRefExpr 0xcf7550 <col:42> 'const duration<_Rep, _Period>' lvalue ParmVar 0xcf7208 '__d' 'const duration<_Rep, _Period> &'
| | |-ClassTemplatePartialSpecializationDecl 0xcf7af0 <line:144:5, line:155:7> line:145:14 struct __duration_cast_impl definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'type-parameter-0-0'
| | | |-TemplateArgument type 'type-parameter-0-1'
| | | |-TemplateArgument type 'type-parameter-0-2'
| | | |-TemplateArgument integral 1
| | | |-TemplateArgument integral 0
| | | |-TemplateTypeParmDecl 0xcf7670 <line:144:14, col:23> col:23 referenced typename depth 0 index 0 _ToDur
| | | |-TemplateTypeParmDecl 0xcf76e8 <col:31, col:40> col:40 referenced typename depth 0 index 1 _CF
| | | |-TemplateTypeParmDecl 0xcf7768 <col:45, col:54> col:54 referenced typename depth 0 index 2 _CR
| | | |-CXXRecordDecl 0xcf7eb8 <line:145:7, col:14> col:14 implicit struct __duration_cast_impl
| | | `-FunctionTemplateDecl 0xcf8338 <line:147:2, line:154:4> line:149:4 __cast
| | |   |-TemplateTypeParmDecl 0xcf7f48 <line:147:11, col:20> col:20 referenced typename depth 1 index 0 _Rep
| | |   |-TemplateTypeParmDecl 0xcf7fc8 <col:26, col:35> col:35 referenced typename depth 1 index 1 _Period
| | |   `-CXXMethodDecl 0xcf8298 <line:148:4, line:154:4> line:149:4 constexpr __cast '_ToDur (const duration<_Rep, _Period> &)' static
| | |     |-ParmVarDecl 0xcf81a8 <col:11, col:42> col:42 referenced __d 'const duration<_Rep, _Period> &'
| | |     `-CompoundStmt 0xcf8718 <line:150:4, line:154:4>
| | |       |-DeclStmt 0xcf84a8 <line:151:6, col:45>
| | |       | `-TypedefDecl 0xcf8450 <col:6, col:37> col:37 referenced __to_rep 'typename _ToDur::rep'
| | |       |   `-DependentNameType 0xcf83e0 'typename _ToDur::rep' dependent
| | |       `-ReturnStmt 0xcf8708 <line:152:6, line:153:67>
| | |         `-CXXUnresolvedConstructExpr 0xcf86e0 <line:152:13, line:153:67> '_ToDur' '_ToDur'
| | |           `-CXXStaticCastExpr 0xcf86b0 <line:152:20, line:153:66> '__to_rep':'typename _ToDur::rep' static_cast<__to_rep> <Dependent>
| | |             `-BinaryOperator 0xcf8680 <col:8, col:65> '<dependent type>' '/'
| | |               |-CXXStaticCastExpr 0xcf8588 <col:8, col:36> '_CR' static_cast<_CR> <Dependent>
| | |               | `-CallExpr 0xcf8558 <col:25, col:35> '<dependent type>'
| | |               |   `-CXXDependentScopeMemberExpr 0xcf8510 <col:25, col:29> '<dependent type>' lvalue .count
| | |               |     `-DeclRefExpr 0xcf84f0 <col:25> 'const duration<_Rep, _Period>' lvalue ParmVar 0xcf81a8 '__d' 'const duration<_Rep, _Period> &'
| | |               `-CXXStaticCastExpr 0xcf8650 <col:40, col:65> '_CR' static_cast<_CR> <Dependent>
| | |                 `-DependentScopeDeclRefExpr 0xcf8608 <col:57, col:62> '<dependent type>' lvalue
| | |-ClassTemplatePartialSpecializationDecl 0xcf8bc0 <line:157:5, line:168:7> line:158:14 struct __duration_cast_impl definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-TemplateArgument type 'type-parameter-0-0'
| | | |-TemplateArgument type 'type-parameter-0-1'
| | | |-TemplateArgument type 'type-parameter-0-2'
| | | |-TemplateArgument integral 0
| | | |-TemplateArgument integral 1
| | | |-TemplateTypeParmDecl 0xcf8738 <line:157:14, col:23> col:23 referenced typename depth 0 index 0 _ToDur
| | | |-TemplateTypeParmDecl 0xcf87b8 <col:31, col:40> col:40 referenced typename depth 0 index 1 _CF
| | | |-TemplateTypeParmDecl 0xcf8838 <col:45, col:54> col:54 referenced typename depth 0 index 2 _CR
| | | |-CXXRecordDecl 0xcf8f88 <line:158:7, col:14> col:14 implicit struct __duration_cast_impl
| | | `-FunctionTemplateDecl 0xcf9408 <line:160:2, line:167:4> line:162:4 __cast
| | |   |-TemplateTypeParmDecl 0xcf9018 <line:160:11, col:20> col:20 referenced typename depth 1 index 0 _Rep
| | |   |-TemplateTypeParmDecl 0xcf9098 <col:26, col:35> col:35 referenced typename depth 1 index 1 _Period
| | |   `-CXXMethodDecl 0xcf9368 <line:161:4, line:167:4> line:162:4 constexpr __cast '_ToDur (const duration<_Rep, _Period> &)' static
| | |     |-ParmVarDecl 0xcf9278 <col:11, col:42> col:42 referenced __d 'const duration<_Rep, _Period> &'
| | |     `-CompoundStmt 0xcf97e8 <line:163:4, line:167:4>
| | |       |-DeclStmt 0xcf9578 <line:164:6, col:45>
| | |       | `-TypedefDecl 0xcf9520 <col:6, col:37> col:37 referenced __to_rep 'typename _ToDur::rep'
| | |       |   `-DependentNameType 0xcf94b0 'typename _ToDur::rep' dependent
| | |       `-ReturnStmt 0xcf97d8 <line:165:6, line:166:67>
| | |         `-CXXUnresolvedConstructExpr 0xcf97b0 <line:165:13, line:166:67> '_ToDur' '_ToDur'
| | |           `-CXXStaticCastExpr 0xcf9780 <line:165:20, line:166:66> '__to_rep':'typename _ToDur::rep' static_cast<__to_rep> <Dependent>
| | |             `-BinaryOperator 0xcf9750 <col:8, col:65> '<dependent type>' '*'
| | |               |-CXXStaticCastExpr 0xcf9658 <col:8, col:36> '_CR' static_cast<_CR> <Dependent>
| | |               | `-CallExpr 0xcf9628 <col:25, col:35> '<dependent type>'
| | |               |   `-CXXDependentScopeMemberExpr 0xcf95e0 <col:25, col:29> '<dependent type>' lvalue .count
| | |               |     `-DeclRefExpr 0xcf95c0 <col:25> 'const duration<_Rep, _Period>' lvalue ParmVar 0xcf9278 '__d' 'const duration<_Rep, _Period> &'
| | |               `-CXXStaticCastExpr 0xcf9720 <col:40, col:65> '_CR' static_cast<_CR> <Dependent>
| | |                 `-DependentScopeDeclRefExpr 0xcf96d8 <col:57, col:62> '<dependent type>' lvalue
| | |-ClassTemplateDecl 0xcf9938 <line:170:5, line:173:9> line:171:14 __is_duration
| | | |-TemplateTypeParmDecl 0xcf9808 <line:170:14, col:23> col:23 typename depth 0 index 0 _Tp
| | | |-CXXRecordDecl 0xcf98a8 <line:171:7, line:173:9> line:171:14 struct __is_duration definition
| | | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | | `-Destructor simple irrelevant trivial needs_implicit
| | | | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | | | `-CXXRecordDecl 0xcfa7a0 <col:7, col:14> col:14 implicit struct __is_duration
| | | |-ClassTemplateSpecializationDecl 0xd2a4c8 <line:170:5, line:173:9> line:171:14 struct __is_duration definition
| | | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | | `-Destructor simple irrelevant trivial needs_implicit
| | | | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | | | |-TemplateArgument type 'long'
| | | | `-CXXRecordDecl 0xd2a730 prev 0xd2a4c8 <col:7, col:14> col:14 implicit struct __is_duration
| | | |-ClassTemplateSpecializationDecl 0xb8c7d8 <line:175:5, line:178:9> line:176:14 struct __is_duration definition
| | | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | | `-Destructor simple irrelevant trivial needs_implicit
| | | | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | | | |-TemplateArgument type 'std::chrono::duration<long, std::ratio<1, 1> >'
| | | | `-CXXRecordDecl 0xb8cba8 prev 0xb8c7d8 <col:7, col:14> col:14 implicit struct __is_duration
| | | |-ClassTemplateSpecializationDecl 0xda1938 <line:175:5, line:178:9> line:176:14 struct __is_duration definition
| | | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | | `-Destructor simple irrelevant trivial needs_implicit
| | | | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | | | |-TemplateArgument type 'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | | | `-CXXRecordDecl 0xda1cd8 prev 0xda1938 <col:7, col:14> col:14 implicit struct __is_duration
| | | |-ClassTemplateSpecializationDecl 0xdbfa18 <line:170:5, line:173:9> line:171:14 struct __is_duration definition
| | | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | | `-Destructor simple irrelevant trivial needs_implicit
| | | | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | | | |-TemplateArgument type 'long double'
| | | | `-CXXRecordDecl 0xdbfc80 prev 0xdbfa18 <col:7, col:14> col:14 implicit struct __is_duration
| | | |-ClassTemplateSpecializationDecl 0xe4f9f8 <line:170:5, line:173:9> line:171:14 struct __is_duration definition
| | | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | | `-Destructor simple irrelevant trivial needs_implicit
| | | | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | | | |-TemplateArgument type 'double'
| | | | `-CXXRecordDecl 0xe4fc60 prev 0xe4f9f8 <col:7, col:14> col:14 implicit struct __is_duration
| | | `-ClassTemplateSpecializationDecl 0xe57ad8 <line:175:5, line:178:9> line:176:14 struct __is_duration definition
| | |   |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |   | |-MoveConstructor exists simple trivial needs_implicit
| | |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |   | |-MoveAssignment exists simple trivial needs_implicit
| | |   | `-Destructor simple irrelevant trivial needs_implicit
| | |   |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |   |-TemplateArgument type 'std::chrono::duration<double, std::ratio<1, 1> >'
| | |   `-CXXRecordDecl 0xe57e78 prev 0xe57ad8 <col:7, col:14> col:14 implicit struct __is_duration
| | |-ClassTemplatePartialSpecializationDecl 0xcfab40 <line:175:5, line:178:9> line:176:14 struct __is_duration definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | | |-TemplateArgument type 'duration<type-parameter-0-0, type-parameter-0-1>'
| | | |-TemplateTypeParmDecl 0xcfa848 <line:175:14, col:23> col:23 referenced typename depth 0 index 0 _Rep
| | | |-TemplateTypeParmDecl 0xcfa8c8 <col:29, col:38> col:38 referenced typename depth 0 index 1 _Period
| | | `-CXXRecordDecl 0xcfae68 <line:176:7, col:14> col:14 implicit struct __is_duration
| | |-TypeAliasTemplateDecl 0xcfb340 <line:180:5, line:182:56> line:181:7 __enable_if_is_duration
| | | |-TemplateTypeParmDecl 0xcfaf10 <line:180:14, col:23> col:23 referenced typename depth 0 index 0 _Tp
| | | `-TypeAliasDecl 0xcfb2e0 <line:181:7, line:182:56> line:181:13 __enable_if_is_duration 'typename enable_if<__is_duration<_Tp>::value, _Tp>::type'
| | |   `-DependentNameType 0xcfb270 'typename enable_if<__is_duration<_Tp>::value, _Tp>::type' dependent
| | |-TypeAliasTemplateDecl 0xcfb7c0 <line:184:5, line:186:57> line:185:7 __disable_if_is_duration
| | | |-TemplateTypeParmDecl 0xcfb398 <line:184:14, col:23> col:23 referenced typename depth 0 index 0 _Tp
| | | `-TypeAliasDecl 0xcfb760 <line:185:7, line:186:57> line:185:13 __disable_if_is_duration 'typename enable_if<!__is_duration<_Tp>::value, _Tp>::type'
| | |   `-DependentNameType 0xcfb6f0 'typename enable_if<!__is_duration<_Tp>::value, _Tp>::type' dependent
| | |-FunctionTemplateDecl 0xcfc0b8 <line:189:5, line:201:7> line:191:7 duration_cast
| | | |-TemplateTypeParmDecl 0xcfb818 <line:189:14, col:23> col:23 referenced typename depth 0 index 0 _ToDur
| | | |-TemplateTypeParmDecl 0xcfb898 <col:31, col:40> col:40 referenced typename depth 0 index 1 _Rep
| | | |-TemplateTypeParmDecl 0xcfb918 <col:46, col:55> col:55 referenced typename depth 0 index 2 _Period
| | | |-FunctionDecl 0xcfc018 <line:190:7, line:201:7> line:191:7 constexpr duration_cast '__enable_if_is_duration<_ToDur> (const duration<_Rep, _Period> &)'
| | | | |-ParmVarDecl 0xcfbf08 <col:21, col:52> col:52 referenced __d 'const duration<_Rep, _Period> &'
| | | | `-CompoundStmt 0xcfd150 <line:192:7, line:201:7>
| | | |   |-DeclStmt 0xcfc248 <line:193:2, col:48>
| | | |   | `-TypedefDecl 0xcfc1f0 <col:2, col:37> col:37 referenced __to_period 'typename _ToDur::period'
| | | |   |   `-DependentNameType 0xcfc180 'typename _ToDur::period' dependent
| | | |   |-DeclStmt 0xcfc348 <line:194:2, col:42>
| | | |   | `-TypedefDecl 0xcfc2f0 <col:2, col:34> col:34 referenced __to_rep 'typename _ToDur::rep'
| | | |   |   `-DependentNameType 0xcfc280 'typename _ToDur::rep' dependent
| | | |   |-DeclStmt 0xcfc7c8 <line:195:2, col:51>
| | | |   | `-TypedefDecl 0xcfc770 <col:2, col:47> col:47 referenced __cf 'ratio_divide<_Period, __to_period>':'typename __ratio_divide<type-parameter-0-2, typename type-parameter-0-0::period>::type'
| | | |   |   `-TemplateSpecializationType 0xcfc680 'ratio_divide<_Period, __to_period>' sugar dependent alias ratio_divide
| | | |   |     |-TemplateArgument type '_Period'
| | | |   |     |-TemplateArgument type '__to_period':'typename _ToDur::period'
| | | |   |     |-DependentNameType 0xcfc630 'typename __ratio_divide<type-parameter-0-2, typename type-parameter-0-0::period>::type' dependent
| | | |   |     `-DependentNameType 0xcfc630 'typename __ratio_divide<type-parameter-0-2, typename type-parameter-0-0::period>::type' dependent
| | | |   |-DeclStmt 0xcfcb08 <line:196:2, line:197:15>
| | | |   | `-TypedefDecl 0xcfcab0 <line:196:2, line:197:11> col:11 referenced __cr 'typename common_type<__to_rep, _Rep, intmax_t>::type'
| | | |   |   `-DependentNameType 0xcfca40 'typename common_type<__to_rep, _Rep, intmax_t>::type' dependent
| | | |   |-DeclStmt 0xcfd038 <line:198:2, line:199:47>
| | | |   | `-TypedefDecl 0xcfcfe0 <line:198:2, line:199:43> col:43 referenced __dc '__duration_cast_impl<_ToDur, __cf, __cr, __cf::num == 1, __cf::den == 1>'
| | | |   |   `-TemplateSpecializationType 0xcfce20 '__duration_cast_impl<_ToDur, __cf, __cr, __cf::num == 1, __cf::den == 1>' dependent __duration_cast_impl
| | | |   |     |-TemplateArgument type '_ToDur'
| | | |   |     |-TemplateArgument type '__cf':'typename __ratio_divide<type-parameter-0-2, typename type-parameter-0-0::period>::type'
| | | |   |     |-TemplateArgument type '__cr':'typename common_type<__to_rep, _Rep, intmax_t>::type'
| | | |   |     |-TemplateArgument expr
| | | |   |     | `-ImplicitCastExpr 0xcfcd38 <col:11, col:24> 'bool' <Dependent>
| | | |   |     |   `-BinaryOperator 0xcfcc50 <col:11, col:24> '<dependent type>' '=='
| | | |   |     |     |-DependentScopeDeclRefExpr 0xcfcbf8 <col:11, col:17> '<dependent type>' lvalue
| | | |   |     |     `-IntegerLiteral 0xcfcc30 <col:24> 'int' 1
| | | |   |     `-TemplateArgument expr
| | | |   |       `-ImplicitCastExpr 0xcfcd50 <col:27, col:40> 'bool' <Dependent>
| | | |   |         `-BinaryOperator 0xcfcd18 <col:27, col:40> '<dependent type>' '=='
| | | |   |           |-DependentScopeDeclRefExpr 0xcfccc0 <col:27, col:33> '<dependent type>' lvalue
| | | |   |           `-IntegerLiteral 0xcfccf8 <col:40> 'int' 1
| | | |   `-ReturnStmt 0xcfd140 <line:200:2, col:25>
| | | |     `-CallExpr 0xcfd118 <col:9, col:25> '<dependent type>'
| | | |       |-DependentScopeDeclRefExpr 0xcfd0c0 <col:9, col:15> '<dependent type>' lvalue
| | | |       `-DeclRefExpr 0xcfd0f8 <col:22> 'const duration<_Rep, _Period>' lvalue ParmVar 0xcfbf08 '__d' 'const duration<_Rep, _Period> &'
| | | |-FunctionDecl 0xb8da08 <line:190:7, line:201:7> line:191:7 used constexpr duration_cast '__enable_if_is_duration<std::chrono::duration<long, std::ratio<1, 1> > > (const duration<long, std::ratio<1, 1000000000> > &)'
| | | | |-TemplateArgument type 'std::chrono::duration<long, std::ratio<1, 1> >'
| | | | |-TemplateArgument type 'long'
| | | | |-TemplateArgument type 'std::ratio<1, 1000000000>'
| | | | |-ParmVarDecl 0xb8d8f8 <col:21, col:52> col:52 used __d 'const duration<long, std::ratio<1, 1000000000> > &'
| | | | `-CompoundStmt 0xd95278 <line:192:7, line:201:7>
| | | |   |-DeclStmt 0xb93bb8 <line:193:2, col:48>
| | | |   | `-TypedefDecl 0xb93b60 <col:2, col:37> col:37 __to_period 'typename duration<long, ratio<1, 1> >::period':'std::ratio<1, 1>'
| | | |   |   `-ElaboratedType 0xb93b10 'typename duration<long, ratio<1, 1> >::period' sugar
| | | |   |     `-TypedefType 0xb93af0 'std::chrono::duration<long, std::ratio<1, 1> >::period' sugar
| | | |   |       |-Typedef 0xb8e710 'period'
| | | |   |       `-SubstTemplateTypeParmType 0xb8df60 'std::ratio<1, 1>' sugar
| | | |   |         |-TemplateTypeParmType 0xd01230 '_Period' dependent depth 0 index 1
| | | |   |         | `-TemplateTypeParm 0xd011d8 '_Period'
| | | |   |         `-RecordType 0xcedc30 'std::ratio<1, 1>'
| | | |   |           `-ClassTemplateSpecialization 0xcedb38 'ratio'
| | | |   |-DeclStmt 0xb93c98 <line:194:2, col:42>
| | | |   | `-TypedefDecl 0xb93c40 <col:2, col:34> col:34 __to_rep 'typename duration<long, ratio<1, 1> >::rep':'long'
| | | |   |   `-ElaboratedType 0xb93bf0 'typename duration<long, ratio<1, 1> >::rep' sugar
| | | |   |     `-TypedefType 0xb8f460 'std::chrono::duration<long, std::ratio<1, 1> >::rep' sugar
| | | |   |       |-Typedef 0xb8e6a8 'rep'
| | | |   |       `-SubstTemplateTypeParmType 0xd2a3c0 'long' sugar
| | | |   |         |-TemplateTypeParmType 0xd011b0 '_Rep' dependent depth 0 index 0
| | | |   |         | `-TemplateTypeParm 0xd01158 '_Rep'
| | | |   |         `-BuiltinType 0x7db3a0 'long'
| | | |   |-DeclStmt 0xb98780 <line:195:2, col:51>
| | | |   | `-TypedefDecl 0xb98728 <col:2, col:47> col:47 __cf 'ratio_divide<std::ratio<1, 1000000000>, __to_period>':'std::ratio<1, 1000000000>'
| | | |   |   `-TemplateSpecializationType 0xb98680 'ratio_divide<std::ratio<1, 1000000000>, __to_period>' sugar alias ratio_divide
| | | |   |     |-TemplateArgument type 'std::ratio<1, 1000000000>':'std::ratio<1, 1000000000>'
| | | |   |     |-TemplateArgument type '__to_period':'std::ratio<1, 1>'
| | | |   |     |-ElaboratedType 0xb98630 'typename __ratio_divide<ratio<1, 1000000000>, ratio<1, 1> >::type' sugar
| | | |   |     | `-TypedefType 0xb98380 'std::__ratio_divide<std::ratio<1, 1000000000>, std::ratio<1, 1> >::type' sugar
| | | |   |     |   |-Typedef 0xb982b0 'type'
| | | |   |     |   `-ElaboratedType 0xb98260 'typename __ratio_multiply<ratio<1, 1000000000>, ratio<ratio<1, 1>::den, ratio<1, 1>::num> >::type' sugar
| | | |   |     |     `-TypedefType 0xb97fb0 'std::__ratio_multiply<std::ratio<1, 1000000000>, std::ratio<1, 1> >::type' sugar
| | | |   |     |       |-Typedef 0xb97ee0 'type'
| | | |   |     |       `-TemplateSpecializationType 0xb97e40 'ratio<__safe_multiply<(ratio<1, 1000000000>::num / __gcd1), (ratio<1, 1>::num / __gcd2)>::value, __safe_multiply<(ratio<1, 1000000000>::den / __gcd2), (ratio<1, 1>::den / __gcd1)>::value>' sugar ratio
| | | |   |     |         |-TemplateArgument expr
| | | |   |     |         | `-ConstantExpr 0xb97de0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:294:9, line:295:47> 'intmax_t':'long' Int: 1
| | | |   |     |         |   `-ImplicitCastExpr 0xb97dc8 <line:294:9, line:295:47> 'intmax_t':'long' <LValueToRValue>
| | | |   |     |         |     `-DeclRefExpr 0xb95f58 <line:294:9, line:295:47> 'const intmax_t':'const long' lvalue Var 0xd4a040 'value' 'const intmax_t':'const long' non_odr_use_constant
| | | |   |     |         |-TemplateArgument expr
| | | |   |     |         | `-ConstantExpr 0xb97e18 <line:296:9, line:297:47> 'intmax_t':'long' Int: 1000000000
| | | |   |     |         |   `-ImplicitCastExpr 0xb97e00 <line:296:9, line:297:47> 'intmax_t':'long' <LValueToRValue>
| | | |   |     |         |     `-DeclRefExpr 0xb97d98 <line:296:9, line:297:47> 'const intmax_t':'const long' lvalue Var 0xb97be0 'value' 'const intmax_t':'const long' non_odr_use_constant
| | | |   |     |         `-RecordType 0xc4c1d0 'std::ratio<1, 1000000000>'
| | | |   |     |           `-ClassTemplateSpecialization 0xc4c0d0 'ratio'
| | | |   |     `-ElaboratedType 0xb98630 'typename __ratio_divide<ratio<1, 1000000000>, ratio<1, 1> >::type' sugar
| | | |   |       `-TypedefType 0xb98380 'std::__ratio_divide<std::ratio<1, 1000000000>, std::ratio<1, 1> >::type' sugar
| | | |   |         |-Typedef 0xb982b0 'type'
| | | |   |         `-ElaboratedType 0xb98260 'typename __ratio_multiply<ratio<1, 1000000000>, ratio<ratio<1, 1>::den, ratio<1, 1>::num> >::type' sugar
| | | |   |           `-TypedefType 0xb97fb0 'std::__ratio_multiply<std::ratio<1, 1000000000>, std::ratio<1, 1> >::type' sugar
| | | |   |             |-Typedef 0xb97ee0 'type'
| | | |   |             `-TemplateSpecializationType 0xb97e40 'ratio<__safe_multiply<(ratio<1, 1000000000>::num / __gcd1), (ratio<1, 1>::num / __gcd2)>::value, __safe_multiply<(ratio<1, 1000000000>::den / __gcd2), (ratio<1, 1>::den / __gcd1)>::value>' sugar ratio
| | | |   |               |-TemplateArgument expr
| | | |   |               | `-ConstantExpr 0xb97de0 <line:294:9, line:295:47> 'intmax_t':'long' Int: 1
| | | |   |               |   `-ImplicitCastExpr 0xb97dc8 <line:294:9, line:295:47> 'intmax_t':'long' <LValueToRValue>
| | | |   |               |     `-DeclRefExpr 0xb95f58 <line:294:9, line:295:47> 'const intmax_t':'const long' lvalue Var 0xd4a040 'value' 'const intmax_t':'const long' non_odr_use_constant
| | | |   |               |-TemplateArgument expr
| | | |   |               | `-ConstantExpr 0xb97e18 <line:296:9, line:297:47> 'intmax_t':'long' Int: 1000000000
| | | |   |               |   `-ImplicitCastExpr 0xb97e00 <line:296:9, line:297:47> 'intmax_t':'long' <LValueToRValue>
| | | |   |               |     `-DeclRefExpr 0xb97d98 <line:296:9, line:297:47> 'const intmax_t':'const long' lvalue Var 0xb97be0 'value' 'const intmax_t':'const long' non_odr_use_constant
| | | |   |               `-RecordType 0xc4c1d0 'std::ratio<1, 1000000000>'
| | | |   |                 `-ClassTemplateSpecialization 0xc4c0d0 'ratio'
| | | |   |-DeclStmt 0xd8dea8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/chrono:196:2, line:197:15>
| | | |   | `-TypedefDecl 0xd8de50 <line:196:2, line:197:11> col:11 __cr 'typename common_type<__to_rep, long, intmax_t>::type':'long'
| | | |   |   `-ElaboratedType 0xd8de00 'typename common_type<__to_rep, long, intmax_t>::type' sugar
| | | |   |     `-TypedefType 0xd59990 'std::__success_type<long>::type' sugar
| | | |   |       |-Typedef 0xd59848 'type'
| | | |   |       `-SubstTemplateTypeParmType 0xd59810 'long' sugar
| | | |   |         |-TemplateTypeParmType 0xaddb60 '_Tp' dependent depth 0 index 0
| | | |   |         | `-TemplateTypeParm 0xaddb10 '_Tp'
| | | |   |         `-BuiltinType 0x7db3a0 'long'
| | | |   |-DeclStmt 0xd8e418 <line:198:2, line:199:47>
| | | |   | `-TypedefDecl 0xd8e3c0 <line:198:2, line:199:43> col:43 __dc '__duration_cast_impl<std::chrono::duration<long, std::ratio<1, 1> >, __cf, __cr, __cf::num == 1, __cf::den == 1>':'std::chrono::__duration_cast_impl<std::chrono::duration<long, std::ratio<1, 1> >, std::ratio<1, 1000000000>, long, true, false>'
| | | |   |   `-TemplateSpecializationType 0xd8e290 '__duration_cast_impl<std::chrono::duration<long, std::ratio<1, 1> >, __cf, __cr, __cf::num == 1, __cf::den == 1>' sugar __duration_cast_impl
| | | |   |     |-TemplateArgument type 'std::chrono::duration<long, std::ratio<1, 1> >':'std::chrono::duration<long, std::ratio<1, 1> >'
| | | |   |     |-TemplateArgument type '__cf':'std::ratio<1, 1000000000>'
| | | |   |     |-TemplateArgument type '__cr':'long'
| | | |   |     |-TemplateArgument expr
| | | |   |     | `-ConstantExpr 0xd8e0e8 <col:11, col:24> 'bool' Int: 1
| | | |   |     |   `-BinaryOperator 0xd8dff8 <col:11, col:24> 'bool' '=='
| | | |   |     |     |-ImplicitCastExpr 0xd8dfc8 <col:11, col:17> 'intmax_t':'long' <LValueToRValue>
| | | |   |     |     | `-DeclRefExpr 0xd8df98 <col:11, col:17> 'const intmax_t':'const long' lvalue Var 0xd2f0a0 'num' 'const intmax_t':'const long' non_odr_use_constant
| | | |   |     |     `-ImplicitCastExpr 0xd8dfe0 <col:24> 'long' <IntegralCast>
| | | |   |     |       `-IntegerLiteral 0xcfcc30 <col:24> 'int' 1
| | | |   |     |-TemplateArgument expr
| | | |   |     | `-ConstantExpr 0xd8e108 <col:27, col:40> 'bool' Int: 0
| | | |   |     |   `-BinaryOperator 0xd8e0c8 <col:27, col:40> 'bool' '=='
| | | |   |     |     |-ImplicitCastExpr 0xd8e098 <col:27, col:33> 'intmax_t':'long' <LValueToRValue>
| | | |   |     |     | `-DeclRefExpr 0xd8e068 <col:27, col:33> 'const intmax_t':'const long' lvalue Var 0xd2f328 'den' 'const intmax_t':'const long' non_odr_use_constant
| | | |   |     |     `-ImplicitCastExpr 0xd8e0b0 <col:40> 'long' <IntegralCast>
| | | |   |     |       `-IntegerLiteral 0xcfccf8 <col:40> 'int' 1
| | | |   |     `-RecordType 0xd8e270 'std::chrono::__duration_cast_impl<std::chrono::duration<long, std::ratio<1, 1> >, std::ratio<1, 1000000000>, long, true, false>'
| | | |   |       `-ClassTemplateSpecialization 0xd8e128 '__duration_cast_impl'
| | | |   `-ReturnStmt 0xd95268 <line:200:2, col:25>
| | | |     `-ExprWithCleanups 0xd95250 <col:9, col:25> '__enable_if_is_duration<std::chrono::duration<long, std::ratio<1, 1> > >':'std::chrono::duration<long, std::ratio<1, 1> >'
| | | |       `-CXXConstructExpr 0xd95220 <col:9, col:25> '__enable_if_is_duration<std::chrono::duration<long, std::ratio<1, 1> > >':'std::chrono::duration<long, std::ratio<1, 1> >' 'void (const std::chrono::duration<long, std::ratio<1, 1> > &) noexcept' elidable
| | | |         `-MaterializeTemporaryExpr 0xd95208 <col:9, col:25> 'const std::chrono::duration<long, std::ratio<1, 1> >':'const std::chrono::duration<long, std::ratio<1, 1> >' lvalue
| | | |           `-ImplicitCastExpr 0xd951f0 <col:9, col:25> 'const std::chrono::duration<long, std::ratio<1, 1> >':'const std::chrono::duration<long, std::ratio<1, 1> >' <NoOp>
| | | |             `-CallExpr 0xd94460 <col:9, col:25> 'std::chrono::duration<long, std::ratio<1, 1> >':'std::chrono::duration<long, std::ratio<1, 1> >'
| | | |               |-ImplicitCastExpr 0xd94448 <col:9, col:15> 'std::chrono::duration<long, std::ratio<1, 1> > (*)(const duration<long, std::ratio<1, 1000000000> > &)' <FunctionToPointerDecay>
| | | |               | `-DeclRefExpr 0xd8f020 <col:9, col:15> 'std::chrono::duration<long, std::ratio<1, 1> > (const duration<long, std::ratio<1, 1000000000> > &)' lvalue CXXMethod 0xd8ef08 '__cast' 'std::chrono::duration<long, std::ratio<1, 1> > (const duration<long, std::ratio<1, 1000000000> > &)' (FunctionTemplate 0xd8eb28 '__cast')
| | | |               `-DeclRefExpr 0xd8ec68 <col:22> 'const duration<long, std::ratio<1, 1000000000> >':'const std::chrono::duration<long, std::ratio<1, 1000000000> >' lvalue ParmVar 0xb8d8f8 '__d' 'const duration<long, std::ratio<1, 1000000000> > &'
| | | |-FunctionDecl 0xda6ea8 <line:190:7, line:201:7> line:191:7 used constexpr duration_cast '__enable_if_is_duration<std::chrono::duration<long, std::ratio<1, 1000000000> > > (const duration<long, std::ratio<1, 1> > &)'
| | | | |-TemplateArgument type 'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | | | |-TemplateArgument type 'long'
| | | | |-TemplateArgument type 'std::ratio<1, 1>'
| | | | |-ParmVarDecl 0xda6d98 <col:21, col:52> col:52 used __d 'const duration<long, std::ratio<1, 1> > &'
| | | | `-CompoundStmt 0xdaf548 <line:192:7, line:201:7>
| | | |   |-DeclStmt 0xda7128 <line:193:2, col:48>
| | | |   | `-TypedefDecl 0xda70d0 <col:2, col:37> col:37 __to_period 'typename duration<long, ratio<1, 1000000000> >::period':'std::ratio<1, 1000000000>'
| | | |   |   `-ElaboratedType 0xda7080 'typename duration<long, ratio<1, 1000000000> >::period' sugar
| | | |   |     `-TypedefType 0xd34680 'std::chrono::duration<long, std::ratio<1, 1000000000> >::period' sugar
| | | |   |       |-Typedef 0xd2a460 'period'
| | | |   |       `-SubstTemplateTypeParmType 0xd29c50 'std::ratio<1, 1000000000>' sugar
| | | |   |         |-TemplateTypeParmType 0xd01230 '_Period' dependent depth 0 index 1
| | | |   |         | `-TemplateTypeParm 0xd011d8 '_Period'
| | | |   |         `-RecordType 0xc4c1d0 'std::ratio<1, 1000000000>'
| | | |   |           `-ClassTemplateSpecialization 0xc4c0d0 'ratio'
| | | |   |-DeclStmt 0xda7208 <line:194:2, col:42>
| | | |   | `-TypedefDecl 0xda71b0 <col:2, col:34> col:34 __to_rep 'typename duration<long, ratio<1, 1000000000> >::rep':'long'
| | | |   |   `-ElaboratedType 0xda7160 'typename duration<long, ratio<1, 1000000000> >::rep' sugar
| | | |   |     `-TypedefType 0xd2fc30 'std::chrono::duration<long, std::ratio<1, 1000000000> >::rep' sugar
| | | |   |       |-Typedef 0xd2a3f8 'rep'
| | | |   |       `-SubstTemplateTypeParmType 0xd2a3c0 'long' sugar
| | | |   |         |-TemplateTypeParmType 0xd011b0 '_Rep' dependent depth 0 index 0
| | | |   |         | `-TemplateTypeParm 0xd01158 '_Rep'
| | | |   |         `-BuiltinType 0x7db3a0 'long'
| | | |   |-DeclStmt 0xdaaf50 <line:195:2, col:51>
| | | |   | `-TypedefDecl 0xdaaef8 <col:2, col:47> col:47 __cf 'ratio_divide<std::ratio<1, 1>, __to_period>':'std::ratio<1000000000, 1>'
| | | |   |   `-TemplateSpecializationType 0xdaae50 'ratio_divide<std::ratio<1, 1>, __to_period>' sugar alias ratio_divide
| | | |   |     |-TemplateArgument type 'std::ratio<1, 1>':'std::ratio<1, 1>'
| | | |   |     |-TemplateArgument type '__to_period':'std::ratio<1, 1000000000>'
| | | |   |     |-ElaboratedType 0xdaae00 'typename __ratio_divide<ratio<1, 1>, ratio<1, 1000000000> >::type' sugar
| | | |   |     | `-TypedefType 0xdaab50 'std::__ratio_divide<std::ratio<1, 1>, std::ratio<1, 1000000000> >::type' sugar
| | | |   |     |   |-Typedef 0xdaaa80 'type'
| | | |   |     |   `-ElaboratedType 0xdaaa30 'typename __ratio_multiply<ratio<1, 1>, ratio<ratio<1, 1000000000>::den, ratio<1, 1000000000>::num> >::type' sugar
| | | |   |     |     `-TypedefType 0xdaa780 'std::__ratio_multiply<std::ratio<1, 1>, std::ratio<1000000000, 1> >::type' sugar
| | | |   |     |       |-Typedef 0xdaa6b0 'type'
| | | |   |     |       `-TemplateSpecializationType 0xdaa610 'ratio<__safe_multiply<(ratio<1, 1>::num / __gcd1), (ratio<1000000000, 1>::num / __gcd2)>::value, __safe_multiply<(ratio<1, 1>::den / __gcd2), (ratio<1000000000, 1>::den / __gcd1)>::value>' sugar ratio
| | | |   |     |         |-TemplateArgument expr
| | | |   |     |         | `-ConstantExpr 0xdaa5b0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:294:9, line:295:47> 'intmax_t':'long' Int: 1000000000
| | | |   |     |         |   `-ImplicitCastExpr 0xdaa598 <line:294:9, line:295:47> 'intmax_t':'long' <LValueToRValue>
| | | |   |     |         |     `-DeclRefExpr 0xdaa198 <line:294:9, line:295:47> 'const intmax_t':'const long' lvalue Var 0xda9fe0 'value' 'const intmax_t':'const long' non_odr_use_constant
| | | |   |     |         |-TemplateArgument expr
| | | |   |     |         | `-ConstantExpr 0xdaa5e8 <line:296:9, line:297:47> 'intmax_t':'long' Int: 1
| | | |   |     |         |   `-ImplicitCastExpr 0xdaa5d0 <line:296:9, line:297:47> 'intmax_t':'long' <LValueToRValue>
| | | |   |     |         |     `-DeclRefExpr 0xdaa568 <line:296:9, line:297:47> 'const intmax_t':'const long' lvalue Var 0xd4a040 'value' 'const intmax_t':'const long' non_odr_use_constant
| | | |   |     |         `-RecordType 0xc4dd60 'std::ratio<1000000000, 1>'
| | | |   |     |           `-ClassTemplateSpecialization 0xc4dc60 'ratio'
| | | |   |     `-ElaboratedType 0xdaae00 'typename __ratio_divide<ratio<1, 1>, ratio<1, 1000000000> >::type' sugar
| | | |   |       `-TypedefType 0xdaab50 'std::__ratio_divide<std::ratio<1, 1>, std::ratio<1, 1000000000> >::type' sugar
| | | |   |         |-Typedef 0xdaaa80 'type'
| | | |   |         `-ElaboratedType 0xdaaa30 'typename __ratio_multiply<ratio<1, 1>, ratio<ratio<1, 1000000000>::den, ratio<1, 1000000000>::num> >::type' sugar
| | | |   |           `-TypedefType 0xdaa780 'std::__ratio_multiply<std::ratio<1, 1>, std::ratio<1000000000, 1> >::type' sugar
| | | |   |             |-Typedef 0xdaa6b0 'type'
| | | |   |             `-TemplateSpecializationType 0xdaa610 'ratio<__safe_multiply<(ratio<1, 1>::num / __gcd1), (ratio<1000000000, 1>::num / __gcd2)>::value, __safe_multiply<(ratio<1, 1>::den / __gcd2), (ratio<1000000000, 1>::den / __gcd1)>::value>' sugar ratio
| | | |   |               |-TemplateArgument expr
| | | |   |               | `-ConstantExpr 0xdaa5b0 <line:294:9, line:295:47> 'intmax_t':'long' Int: 1000000000
| | | |   |               |   `-ImplicitCastExpr 0xdaa598 <line:294:9, line:295:47> 'intmax_t':'long' <LValueToRValue>
| | | |   |               |     `-DeclRefExpr 0xdaa198 <line:294:9, line:295:47> 'const intmax_t':'const long' lvalue Var 0xda9fe0 'value' 'const intmax_t':'const long' non_odr_use_constant
| | | |   |               |-TemplateArgument expr
| | | |   |               | `-ConstantExpr 0xdaa5e8 <line:296:9, line:297:47> 'intmax_t':'long' Int: 1
| | | |   |               |   `-ImplicitCastExpr 0xdaa5d0 <line:296:9, line:297:47> 'intmax_t':'long' <LValueToRValue>
| | | |   |               |     `-DeclRefExpr 0xdaa568 <line:296:9, line:297:47> 'const intmax_t':'const long' lvalue Var 0xd4a040 'value' 'const intmax_t':'const long' non_odr_use_constant
| | | |   |               `-RecordType 0xc4dd60 'std::ratio<1000000000, 1>'
| | | |   |                 `-ClassTemplateSpecialization 0xc4dc60 'ratio'
| | | |   |-DeclStmt 0xdab1a8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/chrono:196:2, line:197:15>
| | | |   | `-TypedefDecl 0xdab150 <line:196:2, line:197:11> col:11 __cr 'typename common_type<__to_rep, long, intmax_t>::type':'long'
| | | |   |   `-ElaboratedType 0xdab100 'typename common_type<__to_rep, long, intmax_t>::type' sugar
| | | |   |     `-TypedefType 0xd59990 'std::__success_type<long>::type' sugar
| | | |   |       |-Typedef 0xd59848 'type'
| | | |   |       `-SubstTemplateTypeParmType 0xd59810 'long' sugar
| | | |   |         |-TemplateTypeParmType 0xaddb60 '_Tp' dependent depth 0 index 0
| | | |   |         | `-TemplateTypeParm 0xaddb10 '_Tp'
| | | |   |         `-BuiltinType 0x7db3a0 'long'
| | | |   |-DeclStmt 0xdab718 <line:198:2, line:199:47>
| | | |   | `-TypedefDecl 0xdab6c0 <line:198:2, line:199:43> col:43 __dc '__duration_cast_impl<std::chrono::duration<long, std::ratio<1, 1000000000> >, __cf, __cr, __cf::num == 1, __cf::den == 1>':'std::chrono::__duration_cast_impl<std::chrono::duration<long, std::ratio<1, 1000000000> >, std::ratio<1000000000, 1>, long, false, true>'
| | | |   |   `-TemplateSpecializationType 0xdab590 '__duration_cast_impl<std::chrono::duration<long, std::ratio<1, 1000000000> >, __cf, __cr, __cf::num == 1, __cf::den == 1>' sugar __duration_cast_impl
| | | |   |     |-TemplateArgument type 'std::chrono::duration<long, std::ratio<1, 1000000000> >':'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | | |   |     |-TemplateArgument type '__cf':'std::ratio<1000000000, 1>'
| | | |   |     |-TemplateArgument type '__cr':'long'
| | | |   |     |-TemplateArgument expr
| | | |   |     | `-ConstantExpr 0xdab3e8 <col:11, col:24> 'bool' Int: 0
| | | |   |     |   `-BinaryOperator 0xdab2f8 <col:11, col:24> 'bool' '=='
| | | |   |     |     |-ImplicitCastExpr 0xdab2c8 <col:11, col:17> 'intmax_t':'long' <LValueToRValue>
| | | |   |     |     | `-DeclRefExpr 0xdab298 <col:11, col:17> 'const intmax_t':'const long' lvalue Var 0xd46830 'num' 'const intmax_t':'const long' non_odr_use_constant
| | | |   |     |     `-ImplicitCastExpr 0xdab2e0 <col:24> 'long' <IntegralCast>
| | | |   |     |       `-IntegerLiteral 0xcfcc30 <col:24> 'int' 1
| | | |   |     |-TemplateArgument expr
| | | |   |     | `-ConstantExpr 0xdab408 <col:27, col:40> 'bool' Int: 1
| | | |   |     |   `-BinaryOperator 0xdab3c8 <col:27, col:40> 'bool' '=='
| | | |   |     |     |-ImplicitCastExpr 0xdab398 <col:27, col:33> 'intmax_t':'long' <LValueToRValue>
| | | |   |     |     | `-DeclRefExpr 0xdab368 <col:27, col:33> 'const intmax_t':'const long' lvalue Var 0xd46ab8 'den' 'const intmax_t':'const long' non_odr_use_constant
| | | |   |     |     `-ImplicitCastExpr 0xdab3b0 <col:40> 'long' <IntegralCast>
| | | |   |     |       `-IntegerLiteral 0xcfccf8 <col:40> 'int' 1
| | | |   |     `-RecordType 0xdab570 'std::chrono::__duration_cast_impl<std::chrono::duration<long, std::ratio<1, 1000000000> >, std::ratio<1000000000, 1>, long, false, true>'
| | | |   |       `-ClassTemplateSpecialization 0xdab428 '__duration_cast_impl'
| | | |   `-ReturnStmt 0xdaf538 <line:200:2, col:25>
| | | |     `-ExprWithCleanups 0xdaf520 <col:9, col:25> '__enable_if_is_duration<std::chrono::duration<long, std::ratio<1, 1000000000> > >':'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | | |       `-CXXConstructExpr 0xdaf4f0 <col:9, col:25> '__enable_if_is_duration<std::chrono::duration<long, std::ratio<1, 1000000000> > >':'std::chrono::duration<long, std::ratio<1, 1000000000> >' 'void (const std::chrono::duration<long, std::ratio<1, 1000000000> > &) noexcept' elidable
| | | |         `-MaterializeTemporaryExpr 0xdaf4d8 <col:9, col:25> 'const std::chrono::duration<long, std::ratio<1, 1000000000> >':'const std::chrono::duration<long, std::ratio<1, 1000000000> >' lvalue
| | | |           `-ImplicitCastExpr 0xdaf4c0 <col:9, col:25> 'const std::chrono::duration<long, std::ratio<1, 1000000000> >':'const std::chrono::duration<long, std::ratio<1, 1000000000> >' <NoOp>
| | | |             `-CallExpr 0xdae730 <col:9, col:25> 'std::chrono::duration<long, std::ratio<1, 1000000000> >':'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | | |               |-ImplicitCastExpr 0xdae718 <col:9, col:15> 'std::chrono::duration<long, std::ratio<1, 1000000000> > (*)(const duration<long, std::ratio<1, 1> > &)' <FunctionToPointerDecay>
| | | |               | `-DeclRefExpr 0xdac320 <col:9, col:15> 'std::chrono::duration<long, std::ratio<1, 1000000000> > (const duration<long, std::ratio<1, 1> > &)' lvalue CXXMethod 0xdac208 '__cast' 'std::chrono::duration<long, std::ratio<1, 1000000000> > (const duration<long, std::ratio<1, 1> > &)' (FunctionTemplate 0xdabe28 '__cast')
| | | |               `-DeclRefExpr 0xdabf68 <col:22> 'const duration<long, std::ratio<1, 1> >':'const std::chrono::duration<long, std::ratio<1, 1> >' lvalue ParmVar 0xda6d98 '__d' 'const duration<long, std::ratio<1, 1> > &'
| | | `-FunctionDecl 0xe58bf8 <line:190:7, line:201:7> line:191:7 used constexpr duration_cast '__enable_if_is_duration<std::chrono::duration<double, std::ratio<1, 1> > > (const duration<long, std::ratio<1, 1000000000> > &)'
| | |   |-TemplateArgument type 'std::chrono::duration<double, std::ratio<1, 1> >'
| | |   |-TemplateArgument type 'long'
| | |   |-TemplateArgument type 'std::ratio<1, 1000000000>'
| | |   |-ParmVarDecl 0xe58ae8 <col:21, col:52> col:52 used __d 'const duration<long, std::ratio<1, 1000000000> > &'
| | |   `-CompoundStmt 0xe6cd38 <line:192:7, line:201:7>
| | |     |-DeclStmt 0xe58e98 <line:193:2, col:48>
| | |     | `-TypedefDecl 0xe58e40 <col:2, col:37> col:37 __to_period 'typename duration<double, ratio<1, 1> >::period':'std::ratio<1, 1>'
| | |     |   `-ElaboratedType 0xe58df0 'typename duration<double, ratio<1, 1> >::period' sugar
| | |     |     `-TypedefType 0xe58dd0 'std::chrono::duration<double, std::ratio<1, 1> >::period' sugar
| | |     |       |-Typedef 0xe4f990 'period'
| | |     |       `-SubstTemplateTypeParmType 0xb8df60 'std::ratio<1, 1>' sugar
| | |     |         |-TemplateTypeParmType 0xd01230 '_Period' dependent depth 0 index 1
| | |     |         | `-TemplateTypeParm 0xd011d8 '_Period'
| | |     |         `-RecordType 0xcedc30 'std::ratio<1, 1>'
| | |     |           `-ClassTemplateSpecialization 0xcedb38 'ratio'
| | |     |-DeclStmt 0xe58f78 <line:194:2, col:42>
| | |     | `-TypedefDecl 0xe58f20 <col:2, col:34> col:34 __to_rep 'typename duration<double, ratio<1, 1> >::rep':'double'
| | |     |   `-ElaboratedType 0xe58ed0 'typename duration<double, ratio<1, 1> >::rep' sugar
| | |     |     `-TypedefType 0xe504c0 'std::chrono::duration<double, std::ratio<1, 1> >::rep' sugar
| | |     |       |-Typedef 0xe4f928 'rep'
| | |     |       `-SubstTemplateTypeParmType 0xe4f8f0 'double' sugar
| | |     |         |-TemplateTypeParmType 0xd011b0 '_Rep' dependent depth 0 index 0
| | |     |         | `-TemplateTypeParm 0xd01158 '_Rep'
| | |     |         `-BuiltinType 0x7db4a0 'double'
| | |     |-DeclStmt 0xe592b0 <line:195:2, col:51>
| | |     | `-TypedefDecl 0xe59258 <col:2, col:47> col:47 __cf 'ratio_divide<std::ratio<1, 1000000000>, __to_period>':'std::ratio<1, 1000000000>'
| | |     |   `-TemplateSpecializationType 0xe591b0 'ratio_divide<std::ratio<1, 1000000000>, __to_period>' sugar alias ratio_divide
| | |     |     |-TemplateArgument type 'std::ratio<1, 1000000000>':'std::ratio<1, 1000000000>'
| | |     |     |-TemplateArgument type '__to_period':'std::ratio<1, 1>'
| | |     |     |-ElaboratedType 0xe59160 'typename __ratio_divide<ratio<1, 1000000000>, ratio<1, 1> >::type' sugar
| | |     |     | `-TypedefType 0xb98380 'std::__ratio_divide<std::ratio<1, 1000000000>, std::ratio<1, 1> >::type' sugar
| | |     |     |   |-Typedef 0xb982b0 'type'
| | |     |     |   `-ElaboratedType 0xb98260 'typename __ratio_multiply<ratio<1, 1000000000>, ratio<ratio<1, 1>::den, ratio<1, 1>::num> >::type' sugar
| | |     |     |     `-TypedefType 0xb97fb0 'std::__ratio_multiply<std::ratio<1, 1000000000>, std::ratio<1, 1> >::type' sugar
| | |     |     |       |-Typedef 0xb97ee0 'type'
| | |     |     |       `-TemplateSpecializationType 0xb97e40 'ratio<__safe_multiply<(ratio<1, 1000000000>::num / __gcd1), (ratio<1, 1>::num / __gcd2)>::value, __safe_multiply<(ratio<1, 1000000000>::den / __gcd2), (ratio<1, 1>::den / __gcd1)>::value>' sugar ratio
| | |     |     |         |-TemplateArgument expr
| | |     |     |         | `-ConstantExpr 0xb97de0 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ratio:294:9, line:295:47> 'intmax_t':'long' Int: 1
| | |     |     |         |   `-ImplicitCastExpr 0xb97dc8 <line:294:9, line:295:47> 'intmax_t':'long' <LValueToRValue>
| | |     |     |         |     `-DeclRefExpr 0xb95f58 <line:294:9, line:295:47> 'const intmax_t':'const long' lvalue Var 0xd4a040 'value' 'const intmax_t':'const long' non_odr_use_constant
| | |     |     |         |-TemplateArgument expr
| | |     |     |         | `-ConstantExpr 0xb97e18 <line:296:9, line:297:47> 'intmax_t':'long' Int: 1000000000
| | |     |     |         |   `-ImplicitCastExpr 0xb97e00 <line:296:9, line:297:47> 'intmax_t':'long' <LValueToRValue>
| | |     |     |         |     `-DeclRefExpr 0xb97d98 <line:296:9, line:297:47> 'const intmax_t':'const long' lvalue Var 0xb97be0 'value' 'const intmax_t':'const long' non_odr_use_constant
| | |     |     |         `-RecordType 0xc4c1d0 'std::ratio<1, 1000000000>'
| | |     |     |           `-ClassTemplateSpecialization 0xc4c0d0 'ratio'
| | |     |     `-ElaboratedType 0xe59160 'typename __ratio_divide<ratio<1, 1000000000>, ratio<1, 1> >::type' sugar
| | |     |       `-TypedefType 0xb98380 'std::__ratio_divide<std::ratio<1, 1000000000>, std::ratio<1, 1> >::type' sugar
| | |     |         |-Typedef 0xb982b0 'type'
| | |     |         `-ElaboratedType 0xb98260 'typename __ratio_multiply<ratio<1, 1000000000>, ratio<ratio<1, 1>::den, ratio<1, 1>::num> >::type' sugar
| | |     |           `-TypedefType 0xb97fb0 'std::__ratio_multiply<std::ratio<1, 1000000000>, std::ratio<1, 1> >::type' sugar
| | |     |             |-Typedef 0xb97ee0 'type'
| | |     |             `-TemplateSpecializationType 0xb97e40 'ratio<__safe_multiply<(ratio<1, 1000000000>::num / __gcd1), (ratio<1, 1>::num / __gcd2)>::value, __safe_multiply<(ratio<1, 1000000000>::den / __gcd2), (ratio<1, 1>::den / __gcd1)>::value>' sugar ratio
| | |     |               |-TemplateArgument expr
| | |     |               | `-ConstantExpr 0xb97de0 <line:294:9, line:295:47> 'intmax_t':'long' Int: 1
| | |     |               |   `-ImplicitCastExpr 0xb97dc8 <line:294:9, line:295:47> 'intmax_t':'long' <LValueToRValue>
| | |     |               |     `-DeclRefExpr 0xb95f58 <line:294:9, line:295:47> 'const intmax_t':'const long' lvalue Var 0xd4a040 'value' 'const intmax_t':'const long' non_odr_use_constant
| | |     |               |-TemplateArgument expr
| | |     |               | `-ConstantExpr 0xb97e18 <line:296:9, line:297:47> 'intmax_t':'long' Int: 1000000000
| | |     |               |   `-ImplicitCastExpr 0xb97e00 <line:296:9, line:297:47> 'intmax_t':'long' <LValueToRValue>
| | |     |               |     `-DeclRefExpr 0xb97d98 <line:296:9, line:297:47> 'const intmax_t':'const long' lvalue Var 0xb97be0 'value' 'const intmax_t':'const long' non_odr_use_constant
| | |     |               `-RecordType 0xc4c1d0 'std::ratio<1, 1000000000>'
| | |     |                 `-ClassTemplateSpecialization 0xc4c0d0 'ratio'
| | |     |-DeclStmt 0xe600a8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/chrono:196:2, line:197:15>
| | |     | `-TypedefDecl 0xe60050 <line:196:2, line:197:11> col:11 __cr 'typename common_type<__to_rep, long, intmax_t>::type':'double'
| | |     |   `-ElaboratedType 0xe60000 'typename common_type<__to_rep, long, intmax_t>::type' sugar
| | |     |     `-TypedefType 0xe5f220 'std::__success_type<double>::type' sugar
| | |     |       |-Typedef 0xe5f0d8 'type'
| | |     |       `-SubstTemplateTypeParmType 0xe5f0a0 'double' sugar
| | |     |         |-TemplateTypeParmType 0xaddb60 '_Tp' dependent depth 0 index 0
| | |     |         | `-TemplateTypeParm 0xaddb10 '_Tp'
| | |     |         `-BuiltinType 0x7db4a0 'double'
| | |     |-DeclStmt 0xe60618 <line:198:2, line:199:47>
| | |     | `-TypedefDecl 0xe605c0 <line:198:2, line:199:43> col:43 __dc '__duration_cast_impl<std::chrono::duration<double, std::ratio<1, 1> >, __cf, __cr, __cf::num == 1, __cf::den == 1>':'std::chrono::__duration_cast_impl<std::chrono::duration<double, std::ratio<1, 1> >, std::ratio<1, 1000000000>, double, true, false>'
| | |     |   `-TemplateSpecializationType 0xe60490 '__duration_cast_impl<std::chrono::duration<double, std::ratio<1, 1> >, __cf, __cr, __cf::num == 1, __cf::den == 1>' sugar __duration_cast_impl
| | |     |     |-TemplateArgument type 'std::chrono::duration<double, std::ratio<1, 1> >':'std::chrono::duration<double, std::ratio<1, 1> >'
| | |     |     |-TemplateArgument type '__cf':'std::ratio<1, 1000000000>'
| | |     |     |-TemplateArgument type '__cr':'double'
| | |     |     |-TemplateArgument expr
| | |     |     | `-ConstantExpr 0xe602e8 <col:11, col:24> 'bool' Int: 1
| | |     |     |   `-BinaryOperator 0xe601f8 <col:11, col:24> 'bool' '=='
| | |     |     |     |-ImplicitCastExpr 0xe601c8 <col:11, col:17> 'intmax_t':'long' <LValueToRValue>
| | |     |     |     | `-DeclRefExpr 0xe60198 <col:11, col:17> 'const intmax_t':'const long' lvalue Var 0xd2f0a0 'num' 'const intmax_t':'const long' non_odr_use_constant
| | |     |     |     `-ImplicitCastExpr 0xe601e0 <col:24> 'long' <IntegralCast>
| | |     |     |       `-IntegerLiteral 0xcfcc30 <col:24> 'int' 1
| | |     |     |-TemplateArgument expr
| | |     |     | `-ConstantExpr 0xe60308 <col:27, col:40> 'bool' Int: 0
| | |     |     |   `-BinaryOperator 0xe602c8 <col:27, col:40> 'bool' '=='
| | |     |     |     |-ImplicitCastExpr 0xe60298 <col:27, col:33> 'intmax_t':'long' <LValueToRValue>
| | |     |     |     | `-DeclRefExpr 0xe60268 <col:27, col:33> 'const intmax_t':'const long' lvalue Var 0xd2f328 'den' 'const intmax_t':'const long' non_odr_use_constant
| | |     |     |     `-ImplicitCastExpr 0xe602b0 <col:40> 'long' <IntegralCast>
| | |     |     |       `-IntegerLiteral 0xcfccf8 <col:40> 'int' 1
| | |     |     `-RecordType 0xe60470 'std::chrono::__duration_cast_impl<std::chrono::duration<double, std::ratio<1, 1> >, std::ratio<1, 1000000000>, double, true, false>'
| | |     |       `-ClassTemplateSpecialization 0xe60328 '__duration_cast_impl'
| | |     `-ReturnStmt 0xe6cd28 <line:200:2, col:25>
| | |       `-ExprWithCleanups 0xe6cd10 <col:9, col:25> '__enable_if_is_duration<std::chrono::duration<double, std::ratio<1, 1> > >':'std::chrono::duration<double, std::ratio<1, 1> >'
| | |         `-CXXConstructExpr 0xe6cce0 <col:9, col:25> '__enable_if_is_duration<std::chrono::duration<double, std::ratio<1, 1> > >':'std::chrono::duration<double, std::ratio<1, 1> >' 'void (const std::chrono::duration<double, std::ratio<1, 1> > &) noexcept' elidable
| | |           `-MaterializeTemporaryExpr 0xe6ccc8 <col:9, col:25> 'const std::chrono::duration<double, std::ratio<1, 1> >':'const std::chrono::duration<double, std::ratio<1, 1> >' lvalue
| | |             `-ImplicitCastExpr 0xe6ccb0 <col:9, col:25> 'const std::chrono::duration<double, std::ratio<1, 1> >':'const std::chrono::duration<double, std::ratio<1, 1> >' <NoOp>
| | |               `-CallExpr 0xe6bf20 <col:9, col:25> 'std::chrono::duration<double, std::ratio<1, 1> >':'std::chrono::duration<double, std::ratio<1, 1> >'
| | |                 |-ImplicitCastExpr 0xe6bf08 <col:9, col:15> 'std::chrono::duration<double, std::ratio<1, 1> > (*)(const duration<long, std::ratio<1, 1000000000> > &)' <FunctionToPointerDecay>
| | |                 | `-DeclRefExpr 0xe611f0 <col:9, col:15> 'std::chrono::duration<double, std::ratio<1, 1> > (const duration<long, std::ratio<1, 1000000000> > &)' lvalue CXXMethod 0xe610d8 '__cast' 'std::chrono::duration<double, std::ratio<1, 1> > (const duration<long, std::ratio<1, 1000000000> > &)' (FunctionTemplate 0xe60cf8 '__cast')
| | |                 `-DeclRefExpr 0xe60e38 <col:22> 'const duration<long, std::ratio<1, 1000000000> >':'const std::chrono::duration<long, std::ratio<1, 1000000000> >' lvalue ParmVar 0xe58ae8 '__d' 'const duration<long, std::ratio<1, 1000000000> > &'
| | |-ClassTemplateDecl 0xcfd2b8 <line:204:5, line:207:9> line:205:14 treat_as_floating_point
| | | |-TemplateTypeParmDecl 0xcfd190 <line:204:14, col:23> col:23 referenced typename depth 0 index 0 _Rep
| | | |-CXXRecordDecl 0xcfd228 <line:205:7, line:207:9> line:205:14 struct treat_as_floating_point definition
| | | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | | `-Destructor simple irrelevant trivial needs_implicit
| | | | |-public 'is_floating_point<_Rep>'
| | | | `-CXXRecordDecl 0xcfd5c0 <col:7, col:14> col:14 implicit struct treat_as_floating_point
| | | |-ClassTemplateSpecializationDecl 0xd2fde8 <line:204:5, line:207:9> line:205:14 struct treat_as_floating_point definition
| | | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | | `-Destructor simple irrelevant trivial needs_implicit
| | | | |-public 'is_floating_point<long>':'std::is_floating_point<long>'
| | | | |-TemplateArgument type 'long'
| | | | `-CXXRecordDecl 0xd43828 prev 0xd2fde8 <col:7, col:14> col:14 implicit struct treat_as_floating_point
| | | |-ClassTemplateSpecializationDecl 0xd5bad8 <line:204:5, line:207:9> line:205:14 struct treat_as_floating_point
| | | | `-TemplateArgument type 'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | | |-ClassTemplateSpecializationDecl 0xd97ce8 <line:204:5, line:207:9> line:205:14 struct treat_as_floating_point
| | | | `-TemplateArgument type 'std::chrono::duration<long, std::ratio<1, 1> >'
| | | |-ClassTemplateSpecializationDecl 0xdc22a8 <line:204:5, line:207:9> line:205:14 struct treat_as_floating_point definition
| | | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | | `-Destructor simple irrelevant trivial needs_implicit
| | | | |-public 'is_floating_point<long double>':'std::is_floating_point<long double>'
| | | | |-TemplateArgument type 'long double'
| | | | `-CXXRecordDecl 0xdcf518 prev 0xdc22a8 <col:7, col:14> col:14 implicit struct treat_as_floating_point
| | | |-ClassTemplateSpecializationDecl 0xe50678 <line:204:5, line:207:9> line:205:14 struct treat_as_floating_point definition
| | | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | | `-Destructor simple irrelevant trivial needs_implicit
| | | | |-public 'is_floating_point<double>':'std::is_floating_point<double>'
| | | | |-TemplateArgument type 'double'
| | | | `-CXXRecordDecl 0xe56b08 prev 0xe50678 <col:7, col:14> col:14 implicit struct treat_as_floating_point
| | | `-ClassTemplateSpecializationDecl 0xe6d2a8 <line:204:5, line:207:9> line:205:14 struct treat_as_floating_point
| | |   `-TemplateArgument type 'std::chrono::duration<double, std::ratio<1, 1> >'
| | |-ClassTemplateDecl 0xcfd798 <line:272:5, line:286:7> line:273:14 duration_values
| | | |-TemplateTypeParmDecl 0xcfd668 <line:272:14, col:23> col:23 referenced typename depth 0 index 0 _Rep
| | | |-CXXRecordDecl 0xcfd708 <line:273:7, line:286:7> line:273:14 struct duration_values definition
| | | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | | `-Destructor simple irrelevant trivial needs_implicit
| | | | |-CXXRecordDecl 0xcfd9f0 <col:7, col:14> col:14 implicit struct duration_values
| | | | |-CXXMethodDecl 0xcfdb00 <line:275:2, line:277:20> line:276:2 constexpr zero '_Rep () noexcept' static
| | | | | `-CompoundStmt 0xcfddb0 <line:277:2, col:20>
| | | | |   `-ReturnStmt 0xcfdda0 <col:4, col:17>
| | | | |     `-CXXUnresolvedConstructExpr 0xcfdd78 <col:11, col:17> '_Rep' '_Rep'
| | | | |       `-IntegerLiteral 0xcfdd58 <col:16> 'int' 0
| | | | |-CXXMethodDecl 0xcfdbc8 <line:279:2, line:281:40> line:280:2 constexpr max '_Rep () noexcept' static
| | | | | `-CompoundStmt 0xcfdef8 <line:281:2, col:40>
| | | | |   `-ReturnStmt 0xcfdee8 <col:4, col:37>
| | | | |     `-CallExpr 0xcfdec8 <col:11, col:37> '<dependent type>'
| | | | |       `-DependentScopeDeclRefExpr 0xcfde90 <col:11, col:33> '<dependent type>' lvalue
| | | | `-CXXMethodDecl 0xcfdc90 <line:283:2, line:285:43> line:284:2 constexpr min '_Rep () noexcept' static
| | | |   `-CompoundStmt 0xcfe038 <line:285:2, col:43>
| | | |     `-ReturnStmt 0xcfe028 <col:4, col:40>
| | | |       `-CallExpr 0xcfe008 <col:11, col:40> '<dependent type>'
| | | |         `-DependentScopeDeclRefExpr 0xcfdfd0 <col:11, col:33> '<dependent type>' lvalue
| | | `-ClassTemplateSpecializationDecl 0xd34b38 <line:272:5, line:286:7> line:273:14 struct duration_values definition
| | |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |   | |-MoveConstructor exists simple trivial needs_implicit
| | |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |   | |-MoveAssignment exists simple trivial needs_implicit
| | |   | `-Destructor simple irrelevant trivial needs_implicit
| | |   |-TemplateArgument type 'long'
| | |   |-CXXRecordDecl 0xd34d40 prev 0xd34b38 <col:7, col:14> col:14 implicit struct duration_values
| | |   |-CXXMethodDecl 0xd34e50 <line:275:2, line:277:20> line:276:2 used constexpr zero 'long () noexcept' static
| | |   | `-CompoundStmt 0xd4f438 <line:277:2, col:20>
| | |   |   `-ReturnStmt 0xd4f428 <col:4, col:17>
| | |   |     `-CXXFunctionalCastExpr 0xd4f400 <col:11, col:17> 'long':'long' functional cast to long <NoOp>
| | |   |       `-ImplicitCastExpr 0xd4f3e8 <col:16> 'long':'long' <IntegralCast> part_of_explicit_cast
| | |   |         `-IntegerLiteral 0xcfdd58 <col:16> 'int' 0
| | |   |-CXXMethodDecl 0xd35bf0 <line:279:2, line:281:40> line:280:2 constexpr max 'long () noexcept' static
| | |   `-CXXMethodDecl 0xd35cc8 <line:283:2, line:285:43> line:284:2 used constexpr min 'long () noexcept' static
| | |     `-CompoundStmt 0xd35ee0 <line:285:2, col:43>
| | |       `-ReturnStmt 0xd35ed0 <col:4, col:40>
| | |         `-CallExpr 0xd35eb0 <col:11, col:40> 'long'
| | |           `-ImplicitCastExpr 0xd35e98 <col:11, col:33> 'long (*)() noexcept' <FunctionToPointerDecay>
| | |             `-DeclRefExpr 0xd35e68 <col:11, col:33> 'long () noexcept' lvalue CXXMethod 0xc811e8 'lowest' 'long () noexcept'
| | |-ClassTemplateDecl 0xcfe178 <line:288:5, line:291:9> line:289:14 __is_ratio
| | | |-TemplateTypeParmDecl 0xcfe050 <line:288:14, col:23> col:23 typename depth 0 index 0 _Tp
| | | |-CXXRecordDecl 0xcfe0e8 <line:289:7, line:291:9> line:289:14 struct __is_ratio definition
| | | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | | `-Destructor simple irrelevant trivial needs_implicit
| | | | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | | | `-CXXRecordDecl 0xcfe448 <col:7, col:14> col:14 implicit struct __is_ratio
| | | |-ClassTemplateSpecializationDecl 0xd2a8d8 <line:293:5, line:296:9> line:294:14 struct __is_ratio definition
| | | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | | `-Destructor simple irrelevant trivial needs_implicit
| | | | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | | | |-TemplateArgument type 'std::ratio<1, 1000000000>'
| | | | `-CXXRecordDecl 0xd2ad48 prev 0xd2a8d8 <col:7, col:14> col:14 implicit struct __is_ratio
| | | |-ClassTemplateSpecializationDecl 0xb8e918 <line:293:5, line:296:9> line:294:14 struct __is_ratio definition
| | | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | | `-Destructor simple irrelevant trivial needs_implicit
| | | | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | | | |-TemplateArgument type 'std::ratio<1, 1>'
| | | | `-CXXRecordDecl 0xb8ed88 prev 0xb8e918 <col:7, col:14> col:14 implicit struct __is_ratio
| | | |-ClassTemplateSpecializationDecl 0xdbfe28 <line:293:5, line:296:9> line:294:14 struct __is_ratio definition
| | | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | | `-Destructor simple irrelevant trivial needs_implicit
| | | | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | | | |-TemplateArgument type 'std::ratio<3600, 1>'
| | | | `-CXXRecordDecl 0xdc0298 prev 0xdbfe28 <col:7, col:14> col:14 implicit struct __is_ratio
| | | |-ClassTemplateSpecializationDecl 0xde07d8 <line:293:5, line:296:9> line:294:14 struct __is_ratio definition
| | | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | | `-Destructor simple irrelevant trivial needs_implicit
| | | | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | | | |-TemplateArgument type 'std::ratio<60, 1>'
| | | | `-CXXRecordDecl 0xde0c48 prev 0xde07d8 <col:7, col:14> col:14 implicit struct __is_ratio
| | | |-ClassTemplateSpecializationDecl 0xe03b68 <line:293:5, line:296:9> line:294:14 struct __is_ratio definition
| | | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | | `-Destructor simple irrelevant trivial needs_implicit
| | | | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | | | |-TemplateArgument type 'std::ratio<1, 1000>'
| | | | `-CXXRecordDecl 0xe03fd8 prev 0xe03b68 <col:7, col:14> col:14 implicit struct __is_ratio
| | | `-ClassTemplateSpecializationDecl 0xe1abf8 <line:293:5, line:296:9> line:294:14 struct __is_ratio definition
| | |   |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |   | |-MoveConstructor exists simple trivial needs_implicit
| | |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |   | |-MoveAssignment exists simple trivial needs_implicit
| | |   | `-Destructor simple irrelevant trivial needs_implicit
| | |   |-public 'std::true_type':'std::integral_constant<bool, true>'
| | |   |-TemplateArgument type 'std::ratio<1, 1000000>'
| | |   `-CXXRecordDecl 0xe1b068 prev 0xe1abf8 <col:7, col:14> col:14 implicit struct __is_ratio
| | |-ClassTemplatePartialSpecializationDecl 0xd00de0 <line:293:5, line:296:9> line:294:14 struct __is_ratio definition
| | | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-public 'std::true_type':'std::integral_constant<bool, true>'
| | | |-TemplateArgument type 'ratio<_Num, _Den>'
| | | |-NonTypeTemplateParmDecl 0xcfe500 <line:293:14, col:23> col:23 referenced 'intmax_t':'long' depth 0 index 0 _Num
| | | |-NonTypeTemplateParmDecl 0xcfe570 <col:29, col:38> col:38 referenced 'intmax_t':'long' depth 0 index 1 _Den
| | | `-CXXRecordDecl 0xd010b0 <line:294:7, col:14> col:14 implicit struct __is_ratio
| | |-ClassTemplateDecl 0xd01310 prev 0xcede20 <line:299:5, line:444:7> line:300:14 duration
| | | |-TemplateTypeParmDecl 0xd01158 <line:299:14, col:23> col:23 referenced typename depth 0 index 0 _Rep
| | | |-TemplateTypeParmDecl 0xd011d8 <col:29, col:38> col:38 referenced typename depth 0 index 1 _Period
| | | | `-TemplateArgument type 'ratio<1>':'std::ratio<1, 1>'
| | | |   `-inherited from TemplateTypeParm 0xcedcf0 '_Period'
| | | |-CXXRecordDecl 0xd01280 prev 0xcedd90 <line:300:7, line:444:7> line:300:14 struct duration definition
| | | | |-DefinitionData standard_layout has_user_declared_ctor has_constexpr_non_copy_move_ctor
| | | | | |-DefaultConstructor exists constexpr
| | | | | |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| | | | | |-MoveConstructor
| | | | | |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| | | | | |-MoveAssignment
| | | | | `-Destructor irrelevant non_trivial user_declared
| | | | |-CXXRecordDecl 0xd013d0 <col:7, col:14> col:14 implicit referenced struct duration
| | | | |-AccessSpecDecl 0xd01460 <line:302:7, col:14> col:7 private
| | | | |-TypeAliasTemplateDecl 0xd01680 <line:303:2, line:304:52> col:4 __is_float
| | | | | |-TemplateTypeParmDecl 0xd01488 <line:303:11, col:20> col:20 referenced typename depth 1 index 0 _Rep2
| | | | | `-TypeAliasDecl 0xd01620 <line:304:4, col:52> col:10 __is_float 'treat_as_floating_point<_Rep2>'
| | | | |   `-TemplateSpecializationType 0xd01580 'treat_as_floating_point<_Rep2>' dependent treat_as_floating_point
| | | | |     `-TemplateArgument type '_Rep2'
| | | | |-TypeAliasTemplateDecl 0xd01eb8 <line:307:2, line:309:65> line:308:4 __is_harmonic
| | | | | |-TemplateTypeParmDecl 0xd016d8 <line:307:11, col:20> col:20 referenced typename depth 1 index 0 _Period2
| | | | | `-TypeAliasDecl 0xd01e58 <line:308:4, line:309:65> line:308:10 __is_harmonic '__bool_constant<ratio_divide<_Period2, _Period>::den == 1>':'integral_constant<bool, ratio_divide<_Period2, _Period>::den == 1>'
| | | | |   `-TemplateSpecializationType 0xd01db0 '__bool_constant<ratio_divide<_Period2, _Period>::den == 1>' sugar dependent alias __bool_constant
| | | | |     |-TemplateArgument expr
| | | | |     | `-ImplicitCastExpr 0xd01be8 <line:309:24, col:64> 'bool' <Dependent>
| | | | |     |   `-BinaryOperator 0xd01bc8 <col:24, col:64> '<dependent type>' '=='
| | | | |     |     |-DependentScopeDeclRefExpr 0xd01b70 <col:24, col:57> '<dependent type>' lvalue
| | | | |     |     `-IntegerLiteral 0xd01ba8 <col:64> 'int' 1
| | | | |     |-TemplateSpecializationType 0xd01d10 'integral_constant<bool, ratio_divide<_Period2, _Period>::den == 1>' dependent integral_constant
| | | | |     | |-TemplateArgument type 'bool'
| | | | |     | `-TemplateArgument expr
| | | | |     |   `-SubstNonTypeTemplateParmExpr 0xd01c58 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/type_traits:81:53> 'bool'
| | | | |     |     `-ImplicitCastExpr 0xd01be8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/chrono:309:24, col:64> 'bool' <Dependent>
| | | | |     |       `-BinaryOperator 0xd01bc8 <col:24, col:64> '<dependent type>' '=='
| | | | |     |         |-DependentScopeDeclRefExpr 0xd01b70 <col:24, col:57> '<dependent type>' lvalue
| | | | |     |         `-IntegerLiteral 0xd01ba8 <col:64> 'int' 1
| | | | |     `-TemplateSpecializationType 0xd01d10 'integral_constant<bool, ratio_divide<_Period2, _Period>::den == 1>' dependent integral_constant
| | | | |       |-TemplateArgument type 'bool'
| | | | |       `-TemplateArgument expr
| | | | |         `-SubstNonTypeTemplateParmExpr 0xd01c58 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/type_traits:81:53> 'bool'
| | | | |           `-ImplicitCastExpr 0xd01be8 </usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/chrono:309:24, col:64> 'bool' <Dependent>
| | | | |             `-BinaryOperator 0xd01bc8 <col:24, col:64> '<dependent type>' '=='
| | | | |               |-DependentScopeDeclRefExpr 0xd01b70 <col:24, col:57> '<dependent type>' lvalue
| | | | |               `-IntegerLiteral 0xd01ba8 <col:64> 'int' 1
| | | | |-AccessSpecDecl 0xd01f10 <line:311:7, col:13> col:7 public
| | | | |-TypedefDecl 0xd01f48 <line:313:2, col:20> col:20 referenced rep '_Rep'
| | | | | `-TemplateTypeParmType 0xd011b0 '_Rep' dependent depth 0 index 0
| | | | |   `-TemplateTypeParm 0xd01158 '_Rep'
| | | | |-TypedefDecl 0xd01fb0 <line:314:2, col:23> col:23 period '_Period'
| | | | | `-TemplateTypeParmType 0xd01230 '_Period' dependent depth 0 index 1
| | | | |   `-TemplateTypeParm 0xd011d8 '_Period'
| | | | |-StaticAssertDecl 0xd021c8 <line:316:2, col:71> col:2
| | | | | |-UnaryOperator 0xd02108 <col:16, col:38> '<dependent type>' prefix '!' cannot overflow
| | | | | | `-DependentScopeDeclRefExpr 0xd020d0 <col:17, col:38> '<dependent type>' lvalue
| | | | | `-StringLiteral 0xd02198 <col:45> 'const char [25]' lvalue "rep cannot be a duration"
| | | | |-StaticAssertDecl 0xd02408 <line:317:2, line:318:51> line:317:2
| | | | | |-DependentScopeDeclRefExpr 0xd02310 <col:16, col:37> '<dependent type>' lvalue
| | | | | `-StringLiteral 0xd023c8 <line:318:9> 'const char [41]' lvalue "period must be a specialization of ratio"
| | | | |-StaticAssertDecl 0xd025b8 <line:319:2, col:59> col:2
| | | | | |-BinaryOperator 0xd024f0 <col:16, col:31> '<dependent type>' '>'
| | | | | | |-DependentScopeDeclRefExpr 0xd02498 <col:16, col:25> '<dependent type>' lvalue
| | | | | | `-IntegerLiteral 0xd024d0 <col:31> 'int' 0
| | | | | `-StringLiteral 0xd02588 <col:34> 'const char [24]' lvalue "period must be positive"
| | | | |-CXXConstructorDecl 0xd02660 <line:322:2, col:31> col:12 constexpr duration<_Rep, _Period> 'void ()' default
| | | | |-CXXConstructorDecl 0xd02808 <line:324:2, col:36> col:2 duration<_Rep, _Period> 'void (const duration<_Rep, _Period> &)' default
| | | | | `-ParmVarDecl 0xd02748 <col:11, col:25> col:26 'const duration<_Rep, _Period> &'
| | | | |-FunctionTemplateDecl 0xd038c0 <line:328:2, line:332:37> line:331:23 duration<_Rep, _Period>
| | | | | |-TemplateTypeParmDecl 0xd028b8 <line:328:11, col:20> col:20 referenced typename depth 1 index 0 _Rep2
| | | | | |-TemplateTypeParmDecl 0xd03670 <col:27, <scratch space>:140:1> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/chrono:328:36 typename depth 1 index 1
| | | | | | `-TemplateArgument type '_Require<is_convertible<const _Rep2 &, std::chrono::duration::rep>, __or_<__is_float<std::chrono::duration::rep>, __not_<__is_float<_Rep2> > > >':'typename enable_if<__and_<is_convertible<const type-parameter-1-0 &, type-parameter-0-0>, __or_<treat_as_floating_point<type-parameter-0-0>, __not_<treat_as_floating_point<type-parameter-1-0> > > >::value>::type'
| | | | | `-CXXConstructorDecl 0xd03818 <line:331:4, line:332:37> line:331:23 constexpr duration<_Rep, _Period> 'void (const _Rep2 &)'
| | | | |   |-ParmVarDecl 0xd03720 <col:32, col:45> col:45 referenced __rep 'const _Rep2 &'
| | | | |   |-CXXCtorInitializer Field 0xd075b8 '__r' 'std::chrono::duration::rep':'_Rep'
| | | | |   | `-ParenListExpr 0xd07668 <line:332:9, col:33> 'NULL TYPE'
| | | | |   |   `-CXXStaticCastExpr 0xd07638 <col:10, col:32> 'std::chrono::duration::rep':'_Rep' static_cast<std::chrono::duration::rep> <Dependent>
| | | | |   |     `-DeclRefExpr 0xd07608 <col:27> 'const _Rep2' lvalue ParmVar 0xd03720 '__rep' 'const _Rep2 &'
| | | | |   `-CompoundStmt 0xd076b8 <col:35, col:37>
| | | | |-FunctionTemplateDecl 0xd057d0 <line:334:2, line:339:50> line:338:14 duration<_Rep, _Period>
| | | | | |-TemplateTypeParmDecl 0xd03920 <line:334:11, col:20> col:20 referenced typename depth 1 index 0 _Rep2
| | | | | |-TemplateTypeParmDecl 0xd03998 <col:27, col:36> col:36 referenced typename depth 1 index 1 _Period2
| | | | | |-TemplateTypeParmDecl 0xd04c98 <col:46, <scratch space>:145:1> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/chrono:334:55 typename depth 1 index 2
| | | | | | `-TemplateArgument type '_Require<__or_<__is_float<std::chrono::duration::rep>, __and_<__is_harmonic<_Period2>, __not_<__is_float<_Rep2> > > > >':'typename enable_if<__and_<__or_<treat_as_floating_point<type-parameter-0-0>, __and_<integral_constant<bool, ratio_divide<type-parameter-1-1, _Period>::den == 1>, __not_<treat_as_floating_point<type-parameter-1-0> > > > >::value>::type'
| | | | | `-CXXConstructorDecl 0xd05728 <line:338:4, line:339:50> line:338:14 constexpr duration<_Rep, _Period> 'void (const duration<_Rep2, _Period2> &)'
| | | | |   |-ParmVarDecl 0xd05638 <col:23, col:56> col:56 referenced __d 'const duration<_Rep2, _Period2> &'
| | | | |   |-CXXCtorInitializer Field 0xd075b8 '__r' 'std::chrono::duration::rep':'_Rep'
| | | | |   | `-ParenListExpr 0xd07810 <line:339:9, col:46> 'NULL TYPE'
| | | | |   |   `-CallExpr 0xd077f0 <col:10, col:45> '<dependent type>'
| | | | |   |     `-CXXDependentScopeMemberExpr 0xd077a8 <col:10, col:39> '<dependent type>' lvalue .count
| | | | |   |       `-CallExpr 0xd07780 <col:10, col:37> '<dependent type>'
| | | | |   |         |-UnresolvedLookupExpr 0xd076d8 <col:10, col:32> '<dependent type>' lvalue (ADL) = 'duration_cast' 0xcfc0b8
| | | | |   |         `-DeclRefExpr 0xd07760 <col:34> 'const duration<_Rep2, _Period2>' lvalue ParmVar 0xd05638 '__d' 'const duration<_Rep2, _Period2> &'
| | | | |   `-CompoundStmt 0xd07860 <col:48, col:50>
| | | | |-CXXDestructorDecl 0xd05878 <line:341:2, col:22> col:2 ~duration<_Rep, _Period> 'void ()' default
| | | | |-CXXMethodDecl 0xd05a28 <line:342:2, col:47> col:12 operator= 'duration<_Rep, _Period> &(const duration<_Rep, _Period> &)' default
| | | | | `-ParmVarDecl 0xd05938 <col:22, col:36> col:37 'const duration<_Rep, _Period> &'
| | | | |-CXXMethodDecl 0xd05b48 <line:345:2, line:347:16> line:346:2 constexpr count 'std::chrono::duration::rep () const'
| | | | | `-CompoundStmt 0xd078c0 <line:347:2, col:16>
| | | | |   `-ReturnStmt 0xd078b0 <col:4, col:11>
| | | | |     `-MemberExpr 0xd07880 <col:11> 'const std::chrono::duration::rep':'const _Rep' lvalue ->__r 0xd075b8
| | | | |       `-CXXThisExpr 0xd07870 <col:11> 'const duration<_Rep, _Period> *' implicit this
| | | | |-CXXMethodDecl 0xd05c38 <line:350:2, line:352:18> line:351:2 constexpr operator+ 'duration<_Rep, _Period> () const'
| | | | | `-CompoundStmt 0xd07910 <line:352:2, col:18>
| | | | |   `-ReturnStmt 0xd07900 <col:4, col:12>
| | | | |     `-UnaryOperator 0xd078e8 <col:11, col:12> '<dependent type>' prefix '*' cannot overflow
| | | | |       `-CXXThisExpr 0xd078d8 <col:12> 'const duration<_Rep, _Period> *' this
| | | | |-CXXMethodDecl 0xd05cf8 <line:354:2, line:356:27> line:355:2 constexpr operator- 'duration<_Rep, _Period> () const'
| | | | | `-CompoundStmt 0xd079c8 <line:356:2, col:27>
| | | | |   `-ReturnStmt 0xd079b8 <col:4, col:24>
| | | | |     `-CXXUnresolvedConstructExpr 0xd07990 <col:11, col:24> 'duration<_Rep, _Period>' 'duration<_Rep, _Period>'
| | | | |       `-UnaryOperator 0xd07978 <col:20, col:21> '<dependent type>' prefix '-' cannot overflow
| | | | |         `-MemberExpr 0xd07948 <col:21> 'const std::chrono::duration::rep':'const _Rep' lvalue ->__r 0xd075b8
| | | | |           `-CXXThisExpr 0xd07938 <col:21> 'const duration<_Rep, _Period> *' implicit this
| | | | |-CXXMethodDecl 0xd05de8 <line:358:23, line:363:2> line:359:2 operator++ 'duration<_Rep, _Period> &()'
| | | | | `-CompoundStmt 0xd07a70 <line:360:2, line:363:2>
| | | | |   |-UnaryOperator 0xd07a20 <line:361:4, col:6> '<dependent type>' prefix '++' cannot overflow
| | | | |   | `-MemberExpr 0xd079f0 <col:6> 'std::chrono::duration::rep':'_Rep' lvalue ->__r 0xd075b8
| | | | |   |   `-CXXThisExpr 0xd079e0 <col:6> 'duration<_Rep, _Period> *' implicit this
| | | | |   `-ReturnStmt 0xd07a60 <line:362:4, col:12>
| | | | |     `-UnaryOperator 0xd07a48 <col:11, col:12> '<dependent type>' prefix '*' cannot overflow
| | | | |       `-CXXThisExpr 0xd07a38 <col:12> 'duration<_Rep, _Period> *' this
| | | | |-CXXMethodDecl 0xd05f68 <line:365:23, line:367:28> line:366:2 operator++ 'duration<_Rep, _Period> (int)'
| | | | | |-ParmVarDecl 0xd05ea0 <col:13> col:16 'int'
| | | | | `-CompoundStmt 0xd07b50 <line:367:2, col:28>
| | | | |   `-ReturnStmt 0xd07b40 <col:4, col:25>
| | | | |     `-CXXUnresolvedConstructExpr 0xd07b18 <col:11, col:25> 'duration<_Rep, _Period>' 'duration<_Rep, _Period>'
| | | | |       `-UnaryOperator 0xd07b00 <col:20, col:23> '<dependent type>' postfix '++' cannot overflow
| | | | |         `-MemberExpr 0xd07ab0 <col:20> 'std::chrono::duration::rep':'_Rep' lvalue ->__r 0xd075b8
| | | | |           `-CXXThisExpr 0xd07aa0 <col:20> 'duration<_Rep, _Period> *' implicit this
| | | | |-CXXMethodDecl 0xd06030 <line:369:23, line:374:2> line:370:2 operator-- 'duration<_Rep, _Period> &()'
| | | | | `-CompoundStmt 0xd07bf8 <line:371:2, line:374:2>
| | | | |   |-UnaryOperator 0xd07ba8 <line:372:4, col:6> '<dependent type>' prefix '--' cannot overflow
| | | | |   | `-MemberExpr 0xd07b78 <col:6> 'std::chrono::duration::rep':'_Rep' lvalue ->__r 0xd075b8
| | | | |   |   `-CXXThisExpr 0xd07b68 <col:6> 'duration<_Rep, _Period> *' implicit this
| | | | |   `-ReturnStmt 0xd07be8 <line:373:4, col:12>
| | | | |     `-UnaryOperator 0xd07bd0 <col:11, col:12> '<dependent type>' prefix '*' cannot overflow
| | | | |       `-CXXThisExpr 0xd07bc0 <col:12> 'duration<_Rep, _Period> *' this
| | | | |-CXXMethodDecl 0xd06178 <line:376:23, line:378:28> line:377:2 operator-- 'duration<_Rep, _Period> (int)'
| | | | | |-ParmVarDecl 0xd060e8 <col:13> col:16 'int'
| | | | | `-CompoundStmt 0xd07cd8 <line:378:2, col:28>
| | | | |   `-ReturnStmt 0xd07cc8 <col:4, col:25>
| | | | |     `-CXXUnresolvedConstructExpr 0xd07ca0 <col:11, col:25> 'duration<_Rep, _Period>' 'duration<_Rep, _Period>'
| | | | |       `-UnaryOperator 0xd07c88 <col:20, col:23> '<dependent type>' postfix '--' cannot overflow
| | | | |         `-MemberExpr 0xd07c38 <col:20> 'std::chrono::duration::rep':'_Rep' lvalue ->__r 0xd075b8
| | | | |           `-CXXThisExpr 0xd07c28 <col:20> 'duration<_Rep, _Period> *' implicit this
| | | | |-CXXMethodDecl 0xd062c0 <line:380:23, line:385:2> line:381:2 operator+= 'duration<_Rep, _Period> &(const duration<_Rep, _Period> &)'
| | | | | |-ParmVarDecl 0xd06230 <col:13, col:29> col:29 referenced __d 'const duration<_Rep, _Period> &'
| | | | | `-CompoundStmt 0xd07e20 <line:382:2, line:385:2>
| | | | |   |-CompoundAssignOperator 0xd07db8 <line:383:4, col:21> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
| | | | |   | |-MemberExpr 0xd07d00 <col:4> 'std::chrono::duration::rep':'_Rep' lvalue ->__r 0xd075b8
| | | | |   | | `-CXXThisExpr 0xd07cf0 <col:4> 'duration<_Rep, _Period> *' implicit this
| | | | |   | `-CallExpr 0xd07d98 <col:11, col:21> '<dependent type>'
| | | | |   |   `-CXXDependentScopeMemberExpr 0xd07d50 <col:11, col:15> '<dependent type>' lvalue .count
| | | | |   |     `-DeclRefExpr 0xd07d30 <col:11> 'const duration<_Rep, _Period>' lvalue ParmVar 0xd06230 '__d' 'const duration<_Rep, _Period> &'
| | | | |   `-ReturnStmt 0xd07e10 <line:384:4, col:12>
| | | | |     `-UnaryOperator 0xd07df8 <col:11, col:12> '<dependent type>' prefix '*' cannot overflow
| | | | |       `-CXXThisExpr 0xd07de8 <col:12> 'duration<_Rep, _Period> *' this
| | | | |-CXXMethodDecl 0xd06408 <line:387:23, line:392:2> line:388:2 operator-= 'duration<_Rep, _Period> &(const duration<_Rep, _Period> &)'
| | | | | |-ParmVarDecl 0xd06378 <col:13, col:29> col:29 referenced __d 'const duration<_Rep, _Period> &'
| | | | | `-CompoundStmt 0xd07f70 <line:389:2, line:392:2>
| | | | |   |-CompoundAssignOperator 0xd07f08 <line:390:4, col:21> '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
| | | | |   | |-MemberExpr 0xd07e50 <col:4> 'std::chrono::duration::rep':'_Rep' lvalue ->__r 0xd075b8
| | | | |   | | `-CXXThisExpr 0xd07e40 <col:4> 'duration<_Rep, _Period> *' implicit this
| | | | |   | `-CallExpr 0xd07ee8 <col:11, col:21> '<dependent type>'
| | | | |   |   `-CXXDependentScopeMemberExpr 0xd07ea0 <col:11, col:15> '<dependent type>' lvalue .count
| | | | |   |     `-DeclRefExpr 0xd07e80 <col:11> 'const duration<_Rep, _Period>' lvalue ParmVar 0xd06378 '__d' 'const duration<_Rep, _Period> &'
| | | | |   `-ReturnStmt 0xd07f60 <line:391:4, col:12>
| | | | |     `-UnaryOperator 0xd07f48 <col:11, col:12> '<dependent type>' prefix '*' cannot overflow
| | | | |       `-CXXThisExpr 0xd07f38 <col:12> 'duration<_Rep, _Period> *' this
| | | | |-CXXMethodDecl 0xd065d8 <line:394:23, line:399:2> line:395:2 operator*= 'duration<_Rep, _Period> &(const std::chrono::duration::rep &)'
| | | | | |-ParmVarDecl 0xd064e8 <col:13, col:24> col:24 referenced __rhs 'const std::chrono::duration::rep &'
| | | | | `-CompoundStmt 0xd08058 <line:396:2, line:399:2>
| | | | |   |-CompoundAssignOperator 0xd07ff0 <line:397:4, col:11> '<dependent type>' lvalue '*=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
| | | | |   | |-MemberExpr 0xd07fa0 <col:4> 'std::chrono::duration::rep':'_Rep' lvalue ->__r 0xd075b8
| | | | |   | | `-CXXThisExpr 0xd07f90 <col:4> 'duration<_Rep, _Period> *' implicit this
| | | | |   | `-DeclRefExpr 0xd07fd0 <col:11> 'const std::chrono::duration::rep':'const _Rep' lvalue ParmVar 0xd064e8 '__rhs' 'const std::chrono::duration::rep &'
| | | | |   `-ReturnStmt 0xd08048 <line:398:4, col:12>
| | | | |     `-UnaryOperator 0xd08030 <col:11, col:12> '<dependent type>' prefix '*' cannot overflow
| | | | |       `-CXXThisExpr 0xd08020 <col:12> 'duration<_Rep, _Period> *' this
| | | | |-CXXMethodDecl 0xd06720 <line:401:23, line:406:2> line:402:2 operator/= 'duration<_Rep, _Period> &(const std::chrono::duration::rep &)'
| | | | | |-ParmVarDecl 0xd06690 <col:13, col:24> col:24 referenced __rhs 'const std::chrono::duration::rep &'
| | | | | `-CompoundStmt 0xd08140 <line:403:2, line:406:2>
| | | | |   |-CompoundAssignOperator 0xd080d8 <line:404:4, col:11> '<dependent type>' lvalue '/=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
| | | | |   | |-MemberExpr 0xd08088 <col:4> 'std::chrono::duration::rep':'_Rep' lvalue ->__r 0xd075b8
| | | | |   | | `-CXXThisExpr 0xd08078 <col:4> 'duration<_Rep, _Period> *' implicit this
| | | | |   | `-DeclRefExpr 0xd080b8 <col:11> 'const std::chrono::duration::rep':'const _Rep' lvalue ParmVar 0xd06690 '__rhs' 'const std::chrono::duration::rep &'
| | | | |   `-ReturnStmt 0xd08130 <line:405:4, col:12>
| | | | |     `-UnaryOperator 0xd08118 <col:11, col:12> '<dependent type>' prefix '*' cannot overflow
| | | | |       `-CXXThisExpr 0xd08108 <col:12> 'duration<_Rep, _Period> *' this
| | | | |-FunctionTemplateDecl 0xd06d48 <line:409:2, line:417:4> line:413:4 operator%=
| | | | | |-TemplateTypeParmDecl 0xd067d8 <line:409:11, col:28> col:20 referenced typename depth 1 index 0 _Rep2
| | | | | | `-TemplateArgument type 'std::chrono::duration::rep':'_Rep'
| | | | | `-CXXMethodDecl 0xd06ca8 <line:411:4, line:417:4> line:413:4 operator%= 'typename enable_if<!treat_as_floating_point<_Rep2>::value, duration<_Rep, _Period> &>::type (const std::chrono::duration::rep &)'
| | | | |   |-ParmVarDecl 0xd06ba0 <col:15, col:26> col:26 referenced __rhs 'const std::chrono::duration::rep &'
| | | | |   `-CompoundStmt 0xd08280 <line:414:4, line:417:4>
| | | | |     |-CompoundAssignOperator 0xd081c0 <line:415:6, col:13> '<dependent type>' lvalue '%=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
| | | | |     | |-MemberExpr 0xd08170 <col:6> 'std::chrono::duration::rep':'_Rep' lvalue ->__r 0xd075b8
| | | | |     | | `-CXXThisExpr 0xd08160 <col:6> 'duration<_Rep, _Period> *' implicit this
| | | | |     | `-DeclRefExpr 0xd081a0 <col:13> 'const std::chrono::duration::rep':'const _Rep' lvalue ParmVar 0xd06ba0 '__rhs' 'const std::chrono::duration::rep &'
| | | | |     `-ReturnStmt 0xd08270 <line:416:6, col:14>
| | | | |       `-UnaryOperator 0xd08258 <col:13, col:14> '<dependent type>' prefix '*' cannot overflow
| | | | |         `-CXXThisExpr 0xd08248 <col:14> 'duration<_Rep, _Period> *' this
| | | | |-FunctionTemplateDecl 0xd07268 <line:419:2, line:427:4> line:423:4 operator%=
| | | | | |-TemplateTypeParmDecl 0xd06db8 <line:419:11, col:28> col:20 referenced typename depth 1 index 0 _Rep2
| | | | | | `-TemplateArgument type 'std::chrono::duration::rep':'_Rep'
| | | | | `-CXXMethodDecl 0xd071c8 <line:421:4, line:427:4> line:423:4 operator%= 'typename enable_if<!treat_as_floating_point<_Rep2>::value, duration<_Rep, _Period> &>::type (const duration<_Rep, _Period> &)'
| | | | |   |-ParmVarDecl 0xd070c0 <col:15, col:31> col:31 referenced __d 'const duration<_Rep, _Period> &'
| | | | |   `-CompoundStmt 0xd08400 <line:424:4, line:427:4>
| | | | |     |-CompoundAssignOperator 0xd08368 <line:425:6, col:23> '<dependent type>' lvalue '%=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
| | | | |     | |-MemberExpr 0xd082b0 <col:6> 'std::chrono::duration::rep':'_Rep' lvalue ->__r 0xd075b8
| | | | |     | | `-CXXThisExpr 0xd082a0 <col:6> 'duration<_Rep, _Period> *' implicit this
| | | | |     | `-CallExpr 0xd08348 <col:13, col:23> '<dependent type>'
| | | | |     |   `-CXXDependentScopeMemberExpr 0xd08300 <col:13, col:17> '<dependent type>' lvalue .count
| | | | |     |     `-DeclRefExpr 0xd082e0 <col:13> 'const duration<_Rep, _Period>' lvalue ParmVar 0xd070c0 '__d' 'const duration<_Rep, _Period> &'
| | | | |     `-ReturnStmt 0xd083f0 <line:426:6, col:14>
| | | | |       `-UnaryOperator 0xd083d8 <col:13, col:14> '<dependent type>' prefix '*' cannot overflow
| | | | |         `-CXXThisExpr 0xd083c8 <col:14> 'duration<_Rep, _Period> *' this
| | | | |-CXXMethodDecl 0xd07350 <line:430:2, line:432:51> line:431:2 constexpr zero 'duration<_Rep, _Period> () noexcept' static
| | | | | `-CompoundStmt 0xd08580 <line:432:2, col:51>
| | | | |   `-ReturnStmt 0xd08570 <col:4, col:48>
| | | | |     `-CXXUnresolvedConstructExpr 0xd08548 <col:11, col:48> 'duration<_Rep, _Period>' 'duration<_Rep, _Period>'
| | | | |       `-CallExpr 0xd08528 <col:20, col:47> '<dependent type>'
| | | | |         `-DependentScopeDeclRefExpr 0xd084f0 <col:20, col:42> '<dependent type>' lvalue
| | | | |-CXXMethodDecl 0xd07418 <line:434:2, line:436:50> line:435:2 constexpr min 'duration<_Rep, _Period> () noexcept' static
| | | | | `-CompoundStmt 0xd08700 <line:436:2, col:50>
| | | | |   `-ReturnStmt 0xd086f0 <col:4, col:47>
| | | | |     `-CXXUnresolvedConstructExpr 0xd086c8 <col:11, col:47> 'duration<_Rep, _Period>' 'duration<_Rep, _Period>'
| | | | |       `-CallExpr 0xd086a8 <col:20, col:46> '<dependent type>'
| | | | |         `-DependentScopeDeclRefExpr 0xd08670 <col:20, col:42> '<dependent type>' lvalue
| | | | |-CXXMethodDecl 0xd074e0 <line:438:2, line:440:50> line:439:2 constexpr max 'duration<_Rep, _Period> () noexcept' static
| | | | | `-CompoundStmt 0xd08880 <line:440:2, col:50>
| | | | |   `-ReturnStmt 0xd08870 <col:4, col:47>
| | | | |     `-CXXUnresolvedConstructExpr 0xd08848 <col:11, col:47> 'duration<_Rep, _Period>' 'duration<_Rep, _Period>'
| | | | |       `-CallExpr 0xd08828 <col:20, col:46> '<dependent type>'
| | | | |         `-DependentScopeDeclRefExpr 0xd087f0 <col:20, col:42> '<dependent type>' lvalue
| | | | |-AccessSpecDecl 0xd07580 <line:442:7, col:14> col:7 private
| | | | `-FieldDecl 0xd075b8 <line:443:2, col:6> col:6 referenced __r 'std::chrono::duration::rep':'_Rep'
| | | |-ClassTemplateSpecialization 0xd1d000 'duration'
| | | |-ClassTemplateSpecialization 0xd1d2a0 'duration'
| | | |-ClassTemplateSpecialization 0xd1d540 'duration'
| | | |-ClassTemplateSpecialization 0xd1d7b0 'duration'
| | | |-ClassTemplateSpecialization 0xd1dc20 'duration'
| | | |-ClassTemplateSpecialization 0xd1e0e0 'duration'
| | | |-ClassTemplateSpecialization 0xdbe9e8 'duration'
| | | |-ClassTemplateSpecialization 0xddf638 'duration'
| | | |-ClassTemplateSpecialization 0xdf82b8 'duration'
| | | |-ClassTemplateSpecialization 0xe029c0 'duration'
| | | |-ClassTemplateSpecialization 0xe19a58 'duration'
| | | |-ClassTemplateSpecialization 0xe32118 'duration'
| | | `-ClassTemplateSpecialization 0xe443a0 'duration'
| | |-FunctionTemplateDecl 0xd093a8 <line:446:5, line:457:7> line:450:7 operator+
| | | |-TemplateTypeParmDecl 0xd08898 <line:446:14, col:23> col:23 referenced typename depth 0 index 0 _Rep1
| | | |-TemplateTypeParmDecl 0xd08918 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Period1
| | | |-TemplateTypeParmDecl 0xd08998 <line:447:7, col:16> col:16 referenced typename depth 0 index 2 _Rep2
| | | |-TemplateTypeParmDecl 0xd08a18 <col:23, col:32> col:32 referenced typename depth 0 index 3 _Period2
| | | `-FunctionDecl 0xd09308 <line:448:7, line:457:7> line:450:7 constexpr operator+ 'typename common_type<duration<_Rep1, _Period1>, duration<_Rep2, _Period2> >::type (const duration<_Rep1, _Period1> &, const duration<_Rep2, _Period2> &)'
| | |   |-ParmVarDecl 0xd09018 <col:17, col:50> col:50 referenced __lhs 'const duration<_Rep1, _Period1> &'
| | |   |-ParmVarDecl 0xd091e8 <line:451:3, col:36> col:36 referenced __rhs 'const duration<_Rep2, _Period2> &'
| | |   `-CompoundStmt 0xd0d1d8 <line:452:7, line:457:7>
| | |     |-DeclStmt 0xd0cb70 <line:453:2, col:44>
| | |     | `-TypedefDecl 0xd0cb18 <col:2, col:38> col:38 referenced __dur1 'duration<_Rep1, _Period1>'
| | |     |   `-TemplateSpecializationType 0xd09430 'duration<_Rep1, _Period1>' dependent duration
| | |     |     |-TemplateArgument type '_Rep1'
| | |     |     `-TemplateArgument type '_Period1'
| | |     |-DeclStmt 0xd0ccf0 <line:454:2, col:44>
| | |     | `-TypedefDecl 0xd0cc98 <col:2, col:38> col:38 referenced __dur2 'duration<_Rep2, _Period2>'
| | |     |   `-TemplateSpecializationType 0xd0cbb0 'duration<_Rep2, _Period2>' dependent duration
| | |     |     |-TemplateArgument type '_Rep2'
| | |     |     `-TemplateArgument type '_Period2'
| | |     |-DeclStmt 0xd0cf58 <line:455:2, col:56>
| | |     | `-TypedefDecl 0xd0cf00 <col:2, col:52> col:52 referenced __cd 'typename common_type<__dur1, __dur2>::type'
| | |     |   `-DependentNameType 0xd0ce90 'typename common_type<__dur1, __dur2>::type' dependent
| | |     `-ReturnStmt 0xd0d1c8 <line:456:2, col:55>
| | |       `-CXXUnresolvedConstructExpr 0xd0d1a0 <col:9, col:55> '__cd':'typename common_type<__dur1, __dur2>::type' '__cd':'typename common_type<__dur1, __dur2>::type'
| | |         `-CXXOperatorCallExpr 0xd0d168 <col:14, col:54> '<dependent type>'
| | |           |-UnresolvedLookupExpr 0xd0d120 <col:34> '<overloaded function type>' lvalue (ADL) = 'operator+' 0xd093a8
| | |           |-CallExpr 0xd0d040 <col:14, col:32> '<dependent type>'
| | |           | `-CXXDependentScopeMemberExpr 0xd0cff8 <col:14, col:26> '<dependent type>' lvalue .count
| | |           |   `-CXXUnresolvedConstructExpr 0xd0cfd0 <col:14, col:24> '__cd':'typename common_type<__dur1, __dur2>::type' '__cd':'typename common_type<__dur1, __dur2>::type'
| | |           |     `-DeclRefExpr 0xd0cfb0 <col:19> 'const duration<_Rep1, _Period1>' lvalue ParmVar 0xd09018 '__lhs' 'const duration<_Rep1, _Period1> &'
| | |           `-CallExpr 0xd0d100 <col:36, col:54> '<dependent type>'
| | |             `-CXXDependentScopeMemberExpr 0xd0d0b8 <col:36, col:48> '<dependent type>' lvalue .count
| | |               `-CXXUnresolvedConstructExpr 0xd0d090 <col:36, col:46> '__cd':'typename common_type<__dur1, __dur2>::type' '__cd':'typename common_type<__dur1, __dur2>::type'
| | |                 `-DeclRefExpr 0xd0d070 <col:41> 'const duration<_Rep2, _Period2>' lvalue ParmVar 0xd091e8 '__rhs' 'const duration<_Rep2, _Period2> &'
| | |-FunctionTemplateDecl 0xd0dc28 <line:459:5, line:470:7> line:463:7 operator-
| | | |-TemplateTypeParmDecl 0xd0d208 <line:459:14, col:23> col:23 referenced typename depth 0 index 0 _Rep1
| | | |-TemplateTypeParmDecl 0xd0d288 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Period1
| | | |-TemplateTypeParmDecl 0xd0d308 <line:460:7, col:16> col:16 referenced typename depth 0 index 2 _Rep2
| | | |-TemplateTypeParmDecl 0xd0d388 <col:23, col:32> col:32 referenced typename depth 0 index 3 _Period2
| | | |-FunctionDecl 0xd0db88 <line:461:7, line:470:7> line:463:7 constexpr operator- 'typename common_type<duration<_Rep1, _Period1>, duration<_Rep2, _Period2> >::type (const duration<_Rep1, _Period1> &, const duration<_Rep2, _Period2> &)'
| | | | |-ParmVarDecl 0xd0d908 <col:17, col:50> col:50 referenced __lhs 'const duration<_Rep1, _Period1> &'
| | | | |-ParmVarDecl 0xd0daa8 <line:464:3, col:36> col:36 referenced __rhs 'const duration<_Rep2, _Period2> &'
| | | | `-CompoundStmt 0xd0e458 <line:465:7, line:470:7>
| | | |   |-DeclStmt 0xd0ddf0 <line:466:2, col:44>
| | | |   | `-TypedefDecl 0xd0dd98 <col:2, col:38> col:38 referenced __dur1 'duration<_Rep1, _Period1>'
| | | |   |   `-TemplateSpecializationType 0xd0dcb0 'duration<_Rep1, _Period1>' dependent duration
| | | |   |     |-TemplateArgument type '_Rep1'
| | | |   |     `-TemplateArgument type '_Period1'
| | | |   |-DeclStmt 0xd0df70 <line:467:2, col:44>
| | | |   | `-TypedefDecl 0xd0df18 <col:2, col:38> col:38 referenced __dur2 'duration<_Rep2, _Period2>'
| | | |   |   `-TemplateSpecializationType 0xd0de30 'duration<_Rep2, _Period2>' dependent duration
| | | |   |     |-TemplateArgument type '_Rep2'
| | | |   |     `-TemplateArgument type '_Period2'
| | | |   |-DeclStmt 0xd0e1d8 <line:468:2, col:56>
| | | |   | `-TypedefDecl 0xd0e180 <col:2, col:52> col:52 referenced __cd 'typename common_type<__dur1, __dur2>::type'
| | | |   |   `-DependentNameType 0xd0e110 'typename common_type<__dur1, __dur2>::type' dependent
| | | |   `-ReturnStmt 0xd0e448 <line:469:2, col:55>
| | | |     `-CXXUnresolvedConstructExpr 0xd0e420 <col:9, col:55> '__cd':'typename common_type<__dur1, __dur2>::type' '__cd':'typename common_type<__dur1, __dur2>::type'
| | | |       `-CXXOperatorCallExpr 0xd0e3e8 <col:14, col:54> '<dependent type>'
| | | |         |-UnresolvedLookupExpr 0xd0e3a0 <col:34> '<overloaded function type>' lvalue (ADL) = 'operator-' 0xd0dc28
| | | |         |-CallExpr 0xd0e2c0 <col:14, col:32> '<dependent type>'
| | | |         | `-CXXDependentScopeMemberExpr 0xd0e278 <col:14, col:26> '<dependent type>' lvalue .count
| | | |         |   `-CXXUnresolvedConstructExpr 0xd0e250 <col:14, col:24> '__cd':'typename common_type<__dur1, __dur2>::type' '__cd':'typename common_type<__dur1, __dur2>::type'
| | | |         |     `-DeclRefExpr 0xd0e230 <col:19> 'const duration<_Rep1, _Period1>' lvalue ParmVar 0xd0d908 '__lhs' 'const duration<_Rep1, _Period1> &'
| | | |         `-CallExpr 0xd0e380 <col:36, col:54> '<dependent type>'
| | | |           `-CXXDependentScopeMemberExpr 0xd0e338 <col:36, col:48> '<dependent type>' lvalue .count
| | | |             `-CXXUnresolvedConstructExpr 0xd0e310 <col:36, col:46> '__cd':'typename common_type<__dur1, __dur2>::type' '__cd':'typename common_type<__dur1, __dur2>::type'
| | | |               `-DeclRefExpr 0xd0e2f0 <col:41> 'const duration<_Rep2, _Period2>' lvalue ParmVar 0xd0daa8 '__rhs' 'const duration<_Rep2, _Period2> &'
| | | `-FunctionDecl 0xe466d8 <line:461:7, line:470:7> line:463:7 used constexpr operator- 'typename common_type<duration<long, ratio<1, 1000000000> >, duration<long, ratio<1, 1000000000> > >::type (const duration<long, std::ratio<1, 1000000000> > &, const duration<long, std::ratio<1, 1000000000> > &)'
| | |   |-TemplateArgument type 'long'
| | |   |-TemplateArgument type 'std::ratio<1, 1000000000>'
| | |   |-TemplateArgument type 'long'
| | |   |-TemplateArgument type 'std::ratio<1, 1000000000>'
| | |   |-ParmVarDecl 0xe46458 <col:17, col:50> col:50 used __lhs 'const duration<long, std::ratio<1, 1000000000> > &'
| | |   |-ParmVarDecl 0xe465b8 <line:464:3, col:36> col:36 used __rhs 'const duration<long, std::ratio<1, 1000000000> > &'
| | |   `-CompoundStmt 0xe4ada8 <line:465:7, line:470:7>
| | |     |-DeclStmt 0xe469c8 <line:466:2, col:44>
| | |     | `-TypedefDecl 0xe46970 <col:2, col:38> col:38 __dur1 'duration<long, std::ratio<1, 1000000000> >':'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | |     |   `-TemplateSpecializationType 0xe468d0 'duration<long, std::ratio<1, 1000000000> >' sugar duration
| | |     |     |-TemplateArgument type 'long':'long'
| | |     |     |-TemplateArgument type 'std::ratio<1, 1000000000>':'std::ratio<1, 1000000000>'
| | |     |     `-RecordType 0xd1d100 'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | |     |       `-ClassTemplateSpecialization 0xd1d000 'duration'
| | |     |-DeclStmt 0xe46af8 <line:467:2, col:44>
| | |     | `-TypedefDecl 0xe46aa0 <col:2, col:38> col:38 __dur2 'duration<long, std::ratio<1, 1000000000> >':'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | |     |   `-TemplateSpecializationType 0xe46a00 'duration<long, std::ratio<1, 1000000000> >' sugar duration
| | |     |     |-TemplateArgument type 'long':'long'
| | |     |     |-TemplateArgument type 'std::ratio<1, 1000000000>':'std::ratio<1, 1000000000>'
| | |     |     `-RecordType 0xd1d100 'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | |     |       `-ClassTemplateSpecialization 0xd1d000 'duration'
| | |     |-DeclStmt 0xe46d18 <line:468:2, col:56>
| | |     | `-TypedefDecl 0xe46cc0 <col:2, col:52> col:52 __cd 'typename common_type<__dur1, __dur2>::type':'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | |     |   `-ElaboratedType 0xe46c70 'typename common_type<__dur1, __dur2>::type' sugar
| | |     |     `-TypedefType 0xd5b6a0 'std::__success_type<std::chrono::duration<long, std::ratio<1, 1000000000> > >::type' sugar
| | |     |       |-Typedef 0xd5b558 'type'
| | |     |       `-SubstTemplateTypeParmType 0xd5b520 'std::chrono::duration<long, std::ratio<1, 1000000000> >' sugar
| | |     |         |-TemplateTypeParmType 0xaddb60 '_Tp' dependent depth 0 index 0
| | |     |         | `-TemplateTypeParm 0xaddb10 '_Tp'
| | |     |         `-RecordType 0xd1d100 'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | |     |           `-ClassTemplateSpecialization 0xd1d000 'duration'
| | |     `-ReturnStmt 0xe4ad98 <line:469:2, col:55>
| | |       `-ExprWithCleanups 0xe4ad80 <col:9, col:55> 'typename common_type<duration<long, ratio<1, 1000000000> >, duration<long, ratio<1, 1000000000> > >::type':'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | |         `-CXXConstructExpr 0xe4ad50 <col:9, col:55> 'typename common_type<duration<long, ratio<1, 1000000000> >, duration<long, ratio<1, 1000000000> > >::type':'std::chrono::duration<long, std::ratio<1, 1000000000> >' 'void (const std::chrono::duration<long, std::ratio<1, 1000000000> > &) noexcept' elidable
| | |           `-MaterializeTemporaryExpr 0xe4ad38 <col:9, col:55> 'const __cd':'const std::chrono::duration<long, std::ratio<1, 1000000000> >' lvalue
| | |             `-ImplicitCastExpr 0xe4ad20 <col:9, col:55> 'const __cd':'const std::chrono::duration<long, std::ratio<1, 1000000000> >' <NoOp>
| | |               `-CXXFunctionalCastExpr 0xe49f90 <col:9, col:55> '__cd':'std::chrono::duration<long, std::ratio<1, 1000000000> >' functional cast to __cd <ConstructorConversion>
| | |                 `-CXXConstructExpr 0xe49f60 <col:9, col:55> '__cd':'std::chrono::duration<long, std::ratio<1, 1000000000> >' 'void (const long &)'
| | |                   `-MaterializeTemporaryExpr 0xe49f48 <col:14, col:54> 'const long':'const long' lvalue
| | |                     `-BinaryOperator 0xe49748 <col:14, col:54> 'long' '-'
| | |                       |-CXXMemberCallExpr 0xe48240 <col:14, col:32> 'std::chrono::duration<long, std::ratio<1, 1000000000> >::rep':'long'
| | |                       | `-MemberExpr 0xe48210 <col:14, col:26> '<bound member function type>' .count 0xd32898
| | |                       |   `-ImplicitCastExpr 0xe48260 <col:14, col:24> 'const std::chrono::duration<long, std::ratio<1, 1000000000> >' xvalue <NoOp>
| | |                       |     `-MaterializeTemporaryExpr 0xe481f8 <col:14, col:24> '__cd':'std::chrono::duration<long, std::ratio<1, 1000000000> >' xvalue
| | |                       |       `-CXXFunctionalCastExpr 0xe481d0 <col:14, col:24> '__cd':'std::chrono::duration<long, std::ratio<1, 1000000000> >' functional cast to __cd <ConstructorConversion>
| | |                       |         `-CXXConstructExpr 0xe481a0 <col:14, col:24> '__cd':'std::chrono::duration<long, std::ratio<1, 1000000000> >' 'void (const std::chrono::duration<long, std::ratio<1, 1000000000> > &) noexcept'
| | |                       |           `-DeclRefExpr 0xe46db8 <col:19> 'const duration<long, std::ratio<1, 1000000000> >':'const std::chrono::duration<long, std::ratio<1, 1000000000> >' lvalue ParmVar 0xe46458 '__lhs' 'const duration<long, std::ratio<1, 1000000000> > &'
| | |                       `-CXXMemberCallExpr 0xe49710 <col:36, col:54> 'std::chrono::duration<long, std::ratio<1, 1000000000> >::rep':'long'
| | |                         `-MemberExpr 0xe496e0 <col:36, col:48> '<bound member function type>' .count 0xd32898
| | |                           `-ImplicitCastExpr 0xe49730 <col:36, col:46> 'const std::chrono::duration<long, std::ratio<1, 1000000000> >' xvalue <NoOp>
| | |                             `-MaterializeTemporaryExpr 0xe496c8 <col:36, col:46> '__cd':'std::chrono::duration<long, std::ratio<1, 1000000000> >' xvalue
| | |                               `-CXXFunctionalCastExpr 0xe496a0 <col:36, col:46> '__cd':'std::chrono::duration<long, std::ratio<1, 1000000000> >' functional cast to __cd <ConstructorConversion>
| | |                                 `-CXXConstructExpr 0xe49670 <col:36, col:46> '__cd':'std::chrono::duration<long, std::ratio<1, 1000000000> >' 'void (const std::chrono::duration<long, std::ratio<1, 1000000000> > &) noexcept'
| | |                                   `-DeclRefExpr 0xe48288 <col:41> 'const duration<long, std::ratio<1, 1000000000> >':'const std::chrono::duration<long, std::ratio<1, 1000000000> >' lvalue ParmVar 0xe465b8 '__rhs' 'const duration<long, std::ratio<1, 1000000000> > &'
| | |-TypeAliasTemplateDecl 0xd0ecd0 <line:476:5, line:479:64> line:478:7 __common_rep_t
| | | |-TemplateTypeParmDecl 0xd0e488 <line:476:14, col:23> col:23 referenced typename depth 0 index 0 _Rep1
| | | |-TemplateTypeParmDecl 0xd0e508 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Rep2
| | | |-TemplateTypeParmDecl 0xd0e790 <line:477:7, col:60> col:16 referenced typename depth 0 index 2 _CRep
| | | | `-TemplateArgument type 'typename common_type<_Rep1, _Rep2>::type'
| | | `-TypeAliasDecl 0xd0ec70 <line:478:7, line:479:64> line:478:13 __common_rep_t 'typename enable_if<is_convertible<const _Rep2 &, _CRep>::value, _CRep>::type'
| | |   `-DependentNameType 0xd0ec00 'typename enable_if<is_convertible<const _Rep2 &, _CRep>::value, _CRep>::type' dependent
| | |-FunctionTemplateDecl 0xd0fba0 <line:481:5, line:488:7> line:483:7 operator*
| | | |-TemplateTypeParmDecl 0xd0ed28 <line:481:14, col:23> col:23 referenced typename depth 0 index 0 _Rep1
| | | |-TemplateTypeParmDecl 0xd0eda8 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Period
| | | |-TemplateTypeParmDecl 0xd0ee28 <col:48, col:57> col:57 referenced typename depth 0 index 2 _Rep2
| | | `-FunctionDecl 0xd0fb00 <line:482:7, line:488:7> line:483:7 constexpr operator* 'duration<__common_rep_t<_Rep1, _Rep2>, _Period> (const duration<_Rep1, _Period> &, const _Rep2 &)'
| | |   |-ParmVarDecl 0xd0f918 <col:17, col:49> col:49 referenced __d 'const duration<_Rep1, _Period> &'
| | |   |-ParmVarDecl 0xd0f9b8 <col:54, col:67> col:67 referenced __s 'const _Rep2 &'
| | |   `-CompoundStmt 0xd10158 <line:484:7, line:488:7>
| | |     |-DeclStmt 0xd0ff70 <line:485:2, line:486:8>
| | |     | `-TypedefDecl 0xd0ff18 <line:485:2, line:486:4> col:4 referenced __cd 'duration<typename common_type<_Rep1, _Rep2>::type, _Period>'
| | |     |   `-TemplateSpecializationType 0xd0fe30 'duration<typename common_type<_Rep1, _Rep2>::type, _Period>' dependent duration
| | |     |     |-TemplateArgument type 'typename common_type<_Rep1, _Rep2>::type'
| | |     |     `-TemplateArgument type '_Period'
| | |     `-ReturnStmt 0xd10148 <line:487:2, col:37>
| | |       `-CXXUnresolvedConstructExpr 0xd10120 <col:9, col:37> '__cd':'duration<typename common_type<_Rep1, _Rep2>::type, _Period>' '__cd':'duration<typename common_type<_Rep1, _Rep2>::type, _Period>'
| | |         `-CXXOperatorCallExpr 0xd100e8 <col:14, col:34> '<dependent type>'
| | |           |-UnresolvedLookupExpr 0xd100a0 <col:32> '<overloaded function type>' lvalue (ADL) = 'operator*' 0xd0fba0
| | |           |-CallExpr 0xd10060 <col:14, col:30> '<dependent type>'
| | |           | `-CXXDependentScopeMemberExpr 0xd10018 <col:14, col:24> '<dependent type>' lvalue .count
| | |           |   `-CXXUnresolvedConstructExpr 0xd0fff0 <col:14, col:22> '__cd':'duration<typename common_type<_Rep1, _Rep2>::type, _Period>' '__cd':'duration<typename common_type<_Rep1, _Rep2>::type, _Period>'
| | |           |     `-DeclRefExpr 0xd0ffd0 <col:19> 'const duration<_Rep1, _Period>' lvalue ParmVar 0xd0f918 '__d' 'const duration<_Rep1, _Period> &'
| | |           `-DeclRefExpr 0xd10080 <col:34> 'const _Rep2' lvalue ParmVar 0xd0f9b8 '__s' 'const _Rep2 &'
| | |-FunctionTemplateDecl 0xd13060 <line:490:5, line:493:27> line:492:7 operator*
| | | |-TemplateTypeParmDecl 0xd10178 <line:490:14, col:23> col:23 referenced typename depth 0 index 0 _Rep1
| | | |-TemplateTypeParmDecl 0xd101f8 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Rep2
| | | |-TemplateTypeParmDecl 0xd10278 <col:46, col:55> col:55 referenced typename depth 0 index 2 _Period
| | | `-FunctionDecl 0xd12fc0 <line:491:7, line:493:27> line:492:7 constexpr operator* 'duration<__common_rep_t<_Rep2, _Rep1>, _Period> (const _Rep1 &, const duration<_Rep2, _Period> &)'
| | |   |-ParmVarDecl 0xd12cd8 <col:17, col:30> col:30 referenced __s 'const _Rep1 &'
| | |   |-ParmVarDecl 0xd12e78 <col:35, col:67> col:67 referenced __d 'const duration<_Rep2, _Period> &'
| | |   `-CompoundStmt 0xd131a0 <line:493:7, col:27>
| | |     `-ReturnStmt 0xd13190 <col:9, col:22>
| | |       `-CXXOperatorCallExpr 0xd13158 <col:16, col:22> '<dependent type>'
| | |         |-UnresolvedLookupExpr 0xd13108 <col:20> '<overloaded function type>' lvalue (ADL) = 'operator*' 0xd13060 0xd0fba0
| | |         |-DeclRefExpr 0xd130c8 <col:16> 'const duration<_Rep2, _Period>' lvalue ParmVar 0xd12e78 '__d' 'const duration<_Rep2, _Period> &'
| | |         `-DeclRefExpr 0xd130e8 <col:22> 'const _Rep1' lvalue ParmVar 0xd12cd8 '__s' 'const _Rep1 &'
| | |-FunctionTemplateDecl 0xd144e0 <line:495:5, line:503:7> line:498:7 operator/
| | | |-TemplateTypeParmDecl 0xd131b8 <line:495:14, col:23> col:23 referenced typename depth 0 index 0 _Rep1
| | | |-TemplateTypeParmDecl 0xd13238 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Period
| | | |-TemplateTypeParmDecl 0xd132b8 <col:48, col:57> col:57 referenced typename depth 0 index 2 _Rep2
| | | `-FunctionDecl 0xd14440 <line:496:7, line:503:7> line:498:7 constexpr operator/ 'duration<__common_rep_t<_Rep1, __disable_if_is_duration<_Rep2> >, _Period> (const duration<_Rep1, _Period> &, const _Rep2 &)'
| | |   |-ParmVarDecl 0xd14258 <col:17, col:49> col:49 referenced __d 'const duration<_Rep1, _Period> &'
| | |   |-ParmVarDecl 0xd142f8 <col:54, col:67> col:67 referenced __s 'const _Rep2 &'
| | |   `-CompoundStmt 0xd14a38 <line:499:7, line:503:7>
| | |     |-DeclStmt 0xd14850 <line:500:2, line:501:8>
| | |     | `-TypedefDecl 0xd147f8 <line:500:2, line:501:4> col:4 referenced __cd 'duration<typename common_type<_Rep1, _Rep2>::type, _Period>'
| | |     |   `-TemplateSpecializationType 0xd14710 'duration<typename common_type<_Rep1, _Rep2>::type, _Period>' dependent duration
| | |     |     |-TemplateArgument type 'typename common_type<_Rep1, _Rep2>::type'
| | |     |     `-TemplateArgument type '_Period'
| | |     `-ReturnStmt 0xd14a28 <line:502:2, col:37>
| | |       `-CXXUnresolvedConstructExpr 0xd14a00 <col:9, col:37> '__cd':'duration<typename common_type<_Rep1, _Rep2>::type, _Period>' '__cd':'duration<typename common_type<_Rep1, _Rep2>::type, _Period>'
| | |         `-CXXOperatorCallExpr 0xd149c8 <col:14, col:34> '<dependent type>'
| | |           |-UnresolvedLookupExpr 0xd14980 <col:32> '<overloaded function type>' lvalue (ADL) = 'operator/' 0xd144e0
| | |           |-CallExpr 0xd14940 <col:14, col:30> '<dependent type>'
| | |           | `-CXXDependentScopeMemberExpr 0xd148f8 <col:14, col:24> '<dependent type>' lvalue .count
| | |           |   `-CXXUnresolvedConstructExpr 0xd148d0 <col:14, col:22> '__cd':'duration<typename common_type<_Rep1, _Rep2>::type, _Period>' '__cd':'duration<typename common_type<_Rep1, _Rep2>::type, _Period>'
| | |           |     `-DeclRefExpr 0xd148b0 <col:19> 'const duration<_Rep1, _Period>' lvalue ParmVar 0xd14258 '__d' 'const duration<_Rep1, _Period> &'
| | |           `-DeclRefExpr 0xd14960 <col:34> 'const _Rep2' lvalue ParmVar 0xd142f8 '__s' 'const _Rep2 &'
| | |-FunctionTemplateDecl 0xd152b8 <line:505:5, line:515:7> line:508:7 operator/
| | | |-TemplateTypeParmDecl 0xd14a58 <line:505:14, col:23> col:23 referenced typename depth 0 index 0 _Rep1
| | | |-TemplateTypeParmDecl 0xd14ad8 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Period1
| | | |-TemplateTypeParmDecl 0xd14b58 <line:506:7, col:16> col:16 referenced typename depth 0 index 2 _Rep2
| | | |-TemplateTypeParmDecl 0xd14bd8 <col:23, col:32> col:32 referenced typename depth 0 index 3 _Period2
| | | `-FunctionDecl 0xd15218 <line:507:7, line:515:7> line:508:7 constexpr operator/ 'typename common_type<_Rep1, _Rep2>::type (const duration<_Rep1, _Period1> &, const duration<_Rep2, _Period2> &)'
| | |   |-ParmVarDecl 0xd14f58 <col:17, col:50> col:50 referenced __lhs 'const duration<_Rep1, _Period1> &'
| | |   |-ParmVarDecl 0xd150f8 <line:509:3, col:36> col:36 referenced __rhs 'const duration<_Rep2, _Period2> &'
| | |   `-CompoundStmt 0xd15ab8 <line:510:7, line:515:7>
| | |     |-DeclStmt 0xd15480 <line:511:2, col:44>
| | |     | `-TypedefDecl 0xd15428 <col:2, col:38> col:38 referenced __dur1 'duration<_Rep1, _Period1>'
| | |     |   `-TemplateSpecializationType 0xd15340 'duration<_Rep1, _Period1>' dependent duration
| | |     |     |-TemplateArgument type '_Rep1'
| | |     |     `-TemplateArgument type '_Period1'
| | |     |-DeclStmt 0xd15600 <line:512:2, col:44>
| | |     | `-TypedefDecl 0xd155a8 <col:2, col:38> col:38 referenced __dur2 'duration<_Rep2, _Period2>'
| | |     |   `-TemplateSpecializationType 0xd154c0 'duration<_Rep2, _Period2>' dependent duration
| | |     |     |-TemplateArgument type '_Rep2'
| | |     |     `-TemplateArgument type '_Period2'
| | |     |-DeclStmt 0xd15868 <line:513:2, col:56>
| | |     | `-TypedefDecl 0xd15810 <col:2, col:52> col:52 referenced __cd 'typename common_type<__dur1, __dur2>::type'
| | |     |   `-DependentNameType 0xd157a0 'typename common_type<__dur1, __dur2>::type' dependent
| | |     `-ReturnStmt 0xd15aa8 <line:514:2, col:49>
| | |       `-CXXOperatorCallExpr 0xd15a70 <col:9, col:49> '<dependent type>'
| | |         |-UnresolvedLookupExpr 0xd15a20 <col:29> '<overloaded function type>' lvalue (ADL) = 'operator/' 0xd152b8 0xd144e0
| | |         |-CallExpr 0xd15940 <col:9, col:27> '<dependent type>'
| | |         | `-CXXDependentScopeMemberExpr 0xd158f8 <col:9, col:21> '<dependent type>' lvalue .count
| | |         |   `-CXXUnresolvedConstructExpr 0xd158d0 <col:9, col:19> '__cd':'typename common_type<__dur1, __dur2>::type' '__cd':'typename common_type<__dur1, __dur2>::type'
| | |         |     `-DeclRefExpr 0xd158b0 <col:14> 'const duration<_Rep1, _Period1>' lvalue ParmVar 0xd14f58 '__lhs' 'const duration<_Rep1, _Period1> &'
| | |         `-CallExpr 0xd15a00 <col:31, col:49> '<dependent type>'
| | |           `-CXXDependentScopeMemberExpr 0xd159b8 <col:31, col:43> '<dependent type>' lvalue .count
| | |             `-CXXUnresolvedConstructExpr 0xd15990 <col:31, col:41> '__cd':'typename common_type<__dur1, __dur2>::type' '__cd':'typename common_type<__dur1, __dur2>::type'
| | |               `-DeclRefExpr 0xd15970 <col:36> 'const duration<_Rep2, _Period2>' lvalue ParmVar 0xd150f8 '__rhs' 'const duration<_Rep2, _Period2> &'
| | |-FunctionTemplateDecl 0xd169f0 <line:518:5, line:526:7> line:521:7 operator%
| | | |-TemplateTypeParmDecl 0xd15ae8 <line:518:14, col:23> col:23 referenced typename depth 0 index 0 _Rep1
| | | |-TemplateTypeParmDecl 0xd15b68 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Period
| | | |-TemplateTypeParmDecl 0xd15be8 <col:48, col:57> col:57 referenced typename depth 0 index 2 _Rep2
| | | `-FunctionDecl 0xd16950 <line:519:7, line:526:7> line:521:7 constexpr operator% 'duration<__common_rep_t<_Rep1, __disable_if_is_duration<_Rep2> >, _Period> (const duration<_Rep1, _Period> &, const _Rep2 &)'
| | |   |-ParmVarDecl 0xd167a8 <col:17, col:49> col:49 referenced __d 'const duration<_Rep1, _Period> &'
| | |   |-ParmVarDecl 0xd16848 <col:54, col:67> col:67 referenced __s 'const _Rep2 &'
| | |   `-CompoundStmt 0xd16f78 <line:522:7, line:526:7>
| | |     |-DeclStmt 0xd16d90 <line:523:2, line:524:8>
| | |     | `-TypedefDecl 0xd16d38 <line:523:2, line:524:4> col:4 referenced __cd 'duration<typename common_type<_Rep1, _Rep2>::type, _Period>'
| | |     |   `-TemplateSpecializationType 0xd16c50 'duration<typename common_type<_Rep1, _Rep2>::type, _Period>' dependent duration
| | |     |     |-TemplateArgument type 'typename common_type<_Rep1, _Rep2>::type'
| | |     |     `-TemplateArgument type '_Period'
| | |     `-ReturnStmt 0xd16f68 <line:525:2, col:37>
| | |       `-CXXUnresolvedConstructExpr 0xd16f40 <col:9, col:37> '__cd':'duration<typename common_type<_Rep1, _Rep2>::type, _Period>' '__cd':'duration<typename common_type<_Rep1, _Rep2>::type, _Period>'
| | |         `-CXXOperatorCallExpr 0xd16f08 <col:14, col:34> '<dependent type>'
| | |           |-UnresolvedLookupExpr 0xd16ec0 <col:32> '<overloaded function type>' lvalue (ADL) = 'operator%' 0xd169f0
| | |           |-CallExpr 0xd16e80 <col:14, col:30> '<dependent type>'
| | |           | `-CXXDependentScopeMemberExpr 0xd16e38 <col:14, col:24> '<dependent type>' lvalue .count
| | |           |   `-CXXUnresolvedConstructExpr 0xd16e10 <col:14, col:22> '__cd':'duration<typename common_type<_Rep1, _Rep2>::type, _Period>' '__cd':'duration<typename common_type<_Rep1, _Rep2>::type, _Period>'
| | |           |     `-DeclRefExpr 0xd16df0 <col:19> 'const duration<_Rep1, _Period>' lvalue ParmVar 0xd167a8 '__d' 'const duration<_Rep1, _Period> &'
| | |           `-DeclRefExpr 0xd16ea0 <col:34> 'const _Rep2' lvalue ParmVar 0xd16848 '__s' 'const _Rep2 &'
| | |-FunctionTemplateDecl 0xd179b8 <line:528:5, line:539:7> line:532:7 operator%
| | | |-TemplateTypeParmDecl 0xd16f98 <line:528:14, col:23> col:23 referenced typename depth 0 index 0 _Rep1
| | | |-TemplateTypeParmDecl 0xd17018 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Period1
| | | |-TemplateTypeParmDecl 0xd17098 <line:529:7, col:16> col:16 referenced typename depth 0 index 2 _Rep2
| | | |-TemplateTypeParmDecl 0xd17118 <col:23, col:32> col:32 referenced typename depth 0 index 3 _Period2
| | | `-FunctionDecl 0xd17918 <line:530:7, line:539:7> line:532:7 constexpr operator% 'typename common_type<duration<_Rep1, _Period1>, duration<_Rep2, _Period2> >::type (const duration<_Rep1, _Period1> &, const duration<_Rep2, _Period2> &)'
| | |   |-ParmVarDecl 0xd17698 <col:17, col:50> col:50 referenced __lhs 'const duration<_Rep1, _Period1> &'
| | |   |-ParmVarDecl 0xd17838 <line:533:3, col:36> col:36 referenced __rhs 'const duration<_Rep2, _Period2> &'
| | |   `-CompoundStmt 0xd181f0 <line:534:7, line:539:7>
| | |     |-DeclStmt 0xd17b80 <line:535:2, col:44>
| | |     | `-TypedefDecl 0xd17b28 <col:2, col:38> col:38 referenced __dur1 'duration<_Rep1, _Period1>'
| | |     |   `-TemplateSpecializationType 0xd17a40 'duration<_Rep1, _Period1>' dependent duration
| | |     |     |-TemplateArgument type '_Rep1'
| | |     |     `-TemplateArgument type '_Period1'
| | |     |-DeclStmt 0xd17d00 <line:536:2, col:44>
| | |     | `-TypedefDecl 0xd17ca8 <col:2, col:38> col:38 referenced __dur2 'duration<_Rep2, _Period2>'
| | |     |   `-TemplateSpecializationType 0xd17bc0 'duration<_Rep2, _Period2>' dependent duration
| | |     |     |-TemplateArgument type '_Rep2'
| | |     |     `-TemplateArgument type '_Period2'
| | |     |-DeclStmt 0xd17f68 <line:537:2, col:56>
| | |     | `-TypedefDecl 0xd17f10 <col:2, col:52> col:52 referenced __cd 'typename common_type<__dur1, __dur2>::type'
| | |     |   `-DependentNameType 0xd17ea0 'typename common_type<__dur1, __dur2>::type' dependent
| | |     `-ReturnStmt 0xd181e0 <line:538:2, col:55>
| | |       `-CXXUnresolvedConstructExpr 0xd181b8 <col:9, col:55> '__cd':'typename common_type<__dur1, __dur2>::type' '__cd':'typename common_type<__dur1, __dur2>::type'
| | |         `-CXXOperatorCallExpr 0xd18180 <col:14, col:54> '<dependent type>'
| | |           |-UnresolvedLookupExpr 0xd18130 <col:34> '<overloaded function type>' lvalue (ADL) = 'operator%' 0xd179b8 0xd169f0
| | |           |-CallExpr 0xd18050 <col:14, col:32> '<dependent type>'
| | |           | `-CXXDependentScopeMemberExpr 0xd18008 <col:14, col:26> '<dependent type>' lvalue .count
| | |           |   `-CXXUnresolvedConstructExpr 0xd17fe0 <col:14, col:24> '__cd':'typename common_type<__dur1, __dur2>::type' '__cd':'typename common_type<__dur1, __dur2>::type'
| | |           |     `-DeclRefExpr 0xd17fc0 <col:19> 'const duration<_Rep1, _Period1>' lvalue ParmVar 0xd17698 '__lhs' 'const duration<_Rep1, _Period1> &'
| | |           `-CallExpr 0xd18110 <col:36, col:54> '<dependent type>'
| | |             `-CXXDependentScopeMemberExpr 0xd180c8 <col:36, col:48> '<dependent type>' lvalue .count
| | |               `-CXXUnresolvedConstructExpr 0xd180a0 <col:36, col:46> '__cd':'typename common_type<__dur1, __dur2>::type' '__cd':'typename common_type<__dur1, __dur2>::type'
| | |                 `-DeclRefExpr 0xd18080 <col:41> 'const duration<_Rep2, _Period2>' lvalue ParmVar 0xd17838 '__rhs' 'const duration<_Rep2, _Period2> &'
| | |-FunctionTemplateDecl 0xd188d8 <line:542:5, line:552:7> line:545:7 operator==
| | | |-TemplateTypeParmDecl 0xd18220 <line:542:14, col:23> col:23 referenced typename depth 0 index 0 _Rep1
| | | |-TemplateTypeParmDecl 0xd18298 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Period1
| | | |-TemplateTypeParmDecl 0xd18318 <line:543:7, col:16> col:16 referenced typename depth 0 index 2 _Rep2
| | | |-TemplateTypeParmDecl 0xd18398 <col:23, col:32> col:32 referenced typename depth 0 index 3 _Period2
| | | `-FunctionDecl 0xd18838 <line:544:7, line:552:7> line:545:7 constexpr operator== 'bool (const duration<_Rep1, _Period1> &, const duration<_Rep2, _Period2> &)'
| | |   |-ParmVarDecl 0xd18588 <col:18, col:51> col:51 referenced __lhs 'const duration<_Rep1, _Period1> &'
| | |   |-ParmVarDecl 0xd18728 <line:546:4, col:37> col:37 referenced __rhs 'const duration<_Rep2, _Period2> &'
| | |   `-CompoundStmt 0xd190d0 <line:547:7, line:552:7>
| | |     |-DeclStmt 0xd18aa0 <line:548:2, col:44>
| | |     | `-TypedefDecl 0xd18a48 <col:2, col:38> col:38 referenced __dur1 'duration<_Rep1, _Period1>'
| | |     |   `-TemplateSpecializationType 0xd18960 'duration<_Rep1, _Period1>' dependent duration
| | |     |     |-TemplateArgument type '_Rep1'
| | |     |     `-TemplateArgument type '_Period1'
| | |     |-DeclStmt 0xd18c20 <line:549:2, col:44>
| | |     | `-TypedefDecl 0xd18bc8 <col:2, col:38> col:38 referenced __dur2 'duration<_Rep2, _Period2>'
| | |     |   `-TemplateSpecializationType 0xd18ae0 'duration<_Rep2, _Period2>' dependent duration
| | |     |     |-TemplateArgument type '_Rep2'
| | |     |     `-TemplateArgument type '_Period2'
| | |     |-DeclStmt 0xd18e88 <line:550:2, col:56>
| | |     | `-TypedefDecl 0xd18e30 <col:2, col:52> col:52 referenced __ct 'typename common_type<__dur1, __dur2>::type'
| | |     |   `-DependentNameType 0xd18dc0 'typename common_type<__dur1, __dur2>::type' dependent
| | |     `-ReturnStmt 0xd190c0 <line:551:2, col:50>
| | |       `-CXXOperatorCallExpr 0xd19088 <col:9, col:50> '<dependent type>'
| | |         |-UnresolvedLookupExpr 0xd19040 <col:29> '<overloaded function type>' lvalue (ADL) = 'operator==' 0xd188d8
| | |         |-CallExpr 0xd18f60 <col:9, col:27> '<dependent type>'
| | |         | `-CXXDependentScopeMemberExpr 0xd18f18 <col:9, col:21> '<dependent type>' lvalue .count
| | |         |   `-CXXUnresolvedConstructExpr 0xd18ef0 <col:9, col:19> '__ct':'typename common_type<__dur1, __dur2>::type' '__ct':'typename common_type<__dur1, __dur2>::type'
| | |         |     `-DeclRefExpr 0xd18ed0 <col:14> 'const duration<_Rep1, _Period1>' lvalue ParmVar 0xd18588 '__lhs' 'const duration<_Rep1, _Period1> &'
| | |         `-CallExpr 0xd19020 <col:32, col:50> '<dependent type>'
| | |           `-CXXDependentScopeMemberExpr 0xd18fd8 <col:32, col:44> '<dependent type>' lvalue .count
| | |             `-CXXUnresolvedConstructExpr 0xd18fb0 <col:32, col:42> '__ct':'typename common_type<__dur1, __dur2>::type' '__ct':'typename common_type<__dur1, __dur2>::type'
| | |               `-DeclRefExpr 0xd18f90 <col:37> 'const duration<_Rep2, _Period2>' lvalue ParmVar 0xd18728 '__rhs' 'const duration<_Rep2, _Period2> &'
| | |-FunctionTemplateDecl 0xd19778 <line:554:5, line:564:7> line:557:7 operator<
| | | |-TemplateTypeParmDecl 0xd19100 <line:554:14, col:23> col:23 referenced typename depth 0 index 0 _Rep1
| | | |-TemplateTypeParmDecl 0xd19178 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Period1
| | | |-TemplateTypeParmDecl 0xd191f8 <line:555:7, col:16> col:16 referenced typename depth 0 index 2 _Rep2
| | | |-TemplateTypeParmDecl 0xd19278 <col:23, col:32> col:32 referenced typename depth 0 index 3 _Period2
| | | |-FunctionDecl 0xd196d8 <line:556:7, line:564:7> line:557:7 constexpr operator< 'bool (const duration<_Rep1, _Period1> &, const duration<_Rep2, _Period2> &)'
| | | | |-ParmVarDecl 0xd19468 <col:17, col:50> col:50 referenced __lhs 'const duration<_Rep1, _Period1> &'
| | | | |-ParmVarDecl 0xd19608 <line:558:3, col:36> col:36 referenced __rhs 'const duration<_Rep2, _Period2> &'
| | | | `-CompoundStmt 0xd19f70 <line:559:7, line:564:7>
| | | |   |-DeclStmt 0xd19940 <line:560:2, col:44>
| | | |   | `-TypedefDecl 0xd198e8 <col:2, col:38> col:38 referenced __dur1 'duration<_Rep1, _Period1>'
| | | |   |   `-TemplateSpecializationType 0xd19800 'duration<_Rep1, _Period1>' dependent duration
| | | |   |     |-TemplateArgument type '_Rep1'
| | | |   |     `-TemplateArgument type '_Period1'
| | | |   |-DeclStmt 0xd19ac0 <line:561:2, col:44>
| | | |   | `-TypedefDecl 0xd19a68 <col:2, col:38> col:38 referenced __dur2 'duration<_Rep2, _Period2>'
| | | |   |   `-TemplateSpecializationType 0xd19980 'duration<_Rep2, _Period2>' dependent duration
| | | |   |     |-TemplateArgument type '_Rep2'
| | | |   |     `-TemplateArgument type '_Period2'
| | | |   |-DeclStmt 0xd19d28 <line:562:2, col:56>
| | | |   | `-TypedefDecl 0xd19cd0 <col:2, col:52> col:52 referenced __ct 'typename common_type<__dur1, __dur2>::type'
| | | |   |   `-DependentNameType 0xd19c60 'typename common_type<__dur1, __dur2>::type' dependent
| | | |   `-ReturnStmt 0xd19f60 <line:563:2, col:49>
| | | |     `-CXXOperatorCallExpr 0xd19f28 <col:9, col:49> '<dependent type>'
| | | |       |-UnresolvedLookupExpr 0xd19ee0 <col:29> '<overloaded function type>' lvalue (ADL) = 'operator<' 0xd19778
| | | |       |-CallExpr 0xd19e00 <col:9, col:27> '<dependent type>'
| | | |       | `-CXXDependentScopeMemberExpr 0xd19db8 <col:9, col:21> '<dependent type>' lvalue .count
| | | |       |   `-CXXUnresolvedConstructExpr 0xd19d90 <col:9, col:19> '__ct':'typename common_type<__dur1, __dur2>::type' '__ct':'typename common_type<__dur1, __dur2>::type'
| | | |       |     `-DeclRefExpr 0xd19d70 <col:14> 'const duration<_Rep1, _Period1>' lvalue ParmVar 0xd19468 '__lhs' 'const duration<_Rep1, _Period1> &'
| | | |       `-CallExpr 0xd19ec0 <col:31, col:49> '<dependent type>'
| | | |         `-CXXDependentScopeMemberExpr 0xd19e78 <col:31, col:43> '<dependent type>' lvalue .count
| | | |           `-CXXUnresolvedConstructExpr 0xd19e50 <col:31, col:41> '__ct':'typename common_type<__dur1, __dur2>::type' '__ct':'typename common_type<__dur1, __dur2>::type'
| | | |             `-DeclRefExpr 0xd19e30 <col:36> 'const duration<_Rep2, _Period2>' lvalue ParmVar 0xd19608 '__rhs' 'const duration<_Rep2, _Period2> &'
| | | `-FunctionDecl 0xd510b8 <line:556:7, line:564:7> line:557:7 used constexpr operator< 'bool (const duration<long, std::ratio<1, 1000000000> > &, const duration<long, std::ratio<1, 1000000000> > &)'
| | |   |-TemplateArgument type 'long'
| | |   |-TemplateArgument type 'std::ratio<1, 1000000000>'
| | |   |-TemplateArgument type 'long'
| | |   |-TemplateArgument type 'std::ratio<1, 1000000000>'
| | |   |-ParmVarDecl 0xd50de8 <col:17, col:50> col:50 used __lhs 'const duration<long, std::ratio<1, 1000000000> > &'
| | |   |-ParmVarDecl 0xd50fa8 <line:558:3, col:36> col:36 used __rhs 'const duration<long, std::ratio<1, 1000000000> > &'
| | |   `-CompoundStmt 0xd67840 <line:559:7, line:564:7>
| | |     |-DeclStmt 0xd513a8 <line:560:2, col:44>
| | |     | `-TypedefDecl 0xd51350 <col:2, col:38> col:38 __dur1 'duration<long, std::ratio<1, 1000000000> >':'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | |     |   `-TemplateSpecializationType 0xd512b0 'duration<long, std::ratio<1, 1000000000> >' sugar duration
| | |     |     |-TemplateArgument type 'long':'long'
| | |     |     |-TemplateArgument type 'std::ratio<1, 1000000000>':'std::ratio<1, 1000000000>'
| | |     |     `-RecordType 0xd1d100 'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | |     |       `-ClassTemplateSpecialization 0xd1d000 'duration'
| | |     |-DeclStmt 0xd514d8 <line:561:2, col:44>
| | |     | `-TypedefDecl 0xd51480 <col:2, col:38> col:38 __dur2 'duration<long, std::ratio<1, 1000000000> >':'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | |     |   `-TemplateSpecializationType 0xd513e0 'duration<long, std::ratio<1, 1000000000> >' sugar duration
| | |     |     |-TemplateArgument type 'long':'long'
| | |     |     |-TemplateArgument type 'std::ratio<1, 1000000000>':'std::ratio<1, 1000000000>'
| | |     |     `-RecordType 0xd1d100 'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | |     |       `-ClassTemplateSpecialization 0xd1d000 'duration'
| | |     |-DeclStmt 0xd5b768 <line:562:2, col:56>
| | |     | `-TypedefDecl 0xd5b710 <col:2, col:52> col:52 __ct 'typename common_type<__dur1, __dur2>::type':'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | |     |   `-ElaboratedType 0xd5b6c0 'typename common_type<__dur1, __dur2>::type' sugar
| | |     |     `-TypedefType 0xd5b6a0 'std::__success_type<std::chrono::duration<long, std::ratio<1, 1000000000> > >::type' sugar
| | |     |       |-Typedef 0xd5b558 'type'
| | |     |       `-SubstTemplateTypeParmType 0xd5b520 'std::chrono::duration<long, std::ratio<1, 1000000000> >' sugar
| | |     |         |-TemplateTypeParmType 0xaddb60 '_Tp' dependent depth 0 index 0
| | |     |         | `-TemplateTypeParm 0xaddb10 '_Tp'
| | |     |         `-RecordType 0xd1d100 'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | |     |           `-ClassTemplateSpecialization 0xd1d000 'duration'
| | |     `-ReturnStmt 0xd67830 <line:563:2, col:49>
| | |       `-ExprWithCleanups 0xd67818 <col:9, col:49> 'bool'
| | |         `-BinaryOperator 0xd677f8 <col:9, col:49> 'bool' '<'
| | |           |-CXXMemberCallExpr 0xd662f8 <col:9, col:27> 'std::chrono::duration<long, std::ratio<1, 1000000000> >::rep':'long'
| | |           | `-MemberExpr 0xd661f0 <col:9, col:21> '<bound member function type>' .count 0xd32898
| | |           |   `-ImplicitCastExpr 0xd66318 <col:9, col:19> 'const std::chrono::duration<long, std::ratio<1, 1000000000> >' xvalue <NoOp>
| | |           |     `-MaterializeTemporaryExpr 0xd661d8 <col:9, col:19> '__ct':'std::chrono::duration<long, std::ratio<1, 1000000000> >' xvalue
| | |           |       `-CXXFunctionalCastExpr 0xd661b0 <col:9, col:19> '__ct':'std::chrono::duration<long, std::ratio<1, 1000000000> >' functional cast to __ct <ConstructorConversion>
| | |           |         `-CXXConstructExpr 0xd66180 <col:9, col:19> '__ct':'std::chrono::duration<long, std::ratio<1, 1000000000> >' 'void (const std::chrono::duration<long, std::ratio<1, 1000000000> > &) noexcept'
| | |           |           `-DeclRefExpr 0xd5b800 <col:14> 'const duration<long, std::ratio<1, 1000000000> >':'const std::chrono::duration<long, std::ratio<1, 1000000000> >' lvalue ParmVar 0xd50de8 '__lhs' 'const duration<long, std::ratio<1, 1000000000> > &'
| | |           `-CXXMemberCallExpr 0xd677c0 <col:31, col:49> 'std::chrono::duration<long, std::ratio<1, 1000000000> >::rep':'long'
| | |             `-MemberExpr 0xd67790 <col:31, col:43> '<bound member function type>' .count 0xd32898
| | |               `-ImplicitCastExpr 0xd677e0 <col:31, col:41> 'const std::chrono::duration<long, std::ratio<1, 1000000000> >' xvalue <NoOp>
| | |                 `-MaterializeTemporaryExpr 0xd67778 <col:31, col:41> '__ct':'std::chrono::duration<long, std::ratio<1, 1000000000> >' xvalue
| | |                   `-CXXFunctionalCastExpr 0xd67750 <col:31, col:41> '__ct':'std::chrono::duration<long, std::ratio<1, 1000000000> >' functional cast to __ct <ConstructorConversion>
| | |                     `-CXXConstructExpr 0xd67720 <col:31, col:41> '__ct':'std::chrono::duration<long, std::ratio<1, 1000000000> >' 'void (const std::chrono::duration<long, std::ratio<1, 1000000000> > &) noexcept'
| | |                       `-DeclRefExpr 0xd66340 <col:36> 'const duration<long, std::ratio<1, 1000000000> >':'const std::chrono::duration<long, std::ratio<1, 1000000000> >' lvalue ParmVar 0xd50fa8 '__rhs' 'const duration<long, std::ratio<1, 1000000000> > &'
| | |-FunctionTemplateDecl 0xd1a618 <line:566:5, line:571:35> line:569:7 operator!=
| | | |-TemplateTypeParmDecl 0xd19fa0 <line:566:14, col:23> col:23 referenced typename depth 0 index 0 _Rep1
| | | |-TemplateTypeParmDecl 0xd1a018 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Period1
| | | |-TemplateTypeParmDecl 0xd1a098 <line:567:7, col:16> col:16 referenced typename depth 0 index 2 _Rep2
| | | |-TemplateTypeParmDecl 0xd1a118 <col:23, col:32> col:32 referenced typename depth 0 index 3 _Period2
| | | `-FunctionDecl 0xd1a578 <line:568:7, line:571:35> line:569:7 constexpr operator!= 'bool (const duration<_Rep1, _Period1> &, const duration<_Rep2, _Period2> &)'
| | |   |-ParmVarDecl 0xd1a308 <col:18, col:51> col:51 referenced __lhs 'const duration<_Rep1, _Period1> &'
| | |   |-ParmVarDecl 0xd1a4a8 <line:570:4, col:37> col:37 referenced __rhs 'const duration<_Rep2, _Period2> &'
| | |   `-CompoundStmt 0xd1a788 <line:571:7, col:35>
| | |     `-ReturnStmt 0xd1a778 <col:9, col:32>
| | |       `-UnaryOperator 0xd1a760 <col:16, col:32> '<dependent type>' prefix '!' cannot overflow
| | |         `-ParenExpr 0xd1a740 <col:17, col:32> '<dependent type>'
| | |           `-CXXOperatorCallExpr 0xd1a708 <col:18, col:27> '<dependent type>'
| | |             |-UnresolvedLookupExpr 0xd1a6c0 <col:24> '<overloaded function type>' lvalue (ADL) = 'operator==' 0xd188d8
| | |             |-DeclRefExpr 0xd1a680 <col:18> 'const duration<_Rep1, _Period1>' lvalue ParmVar 0xd1a308 '__lhs' 'const duration<_Rep1, _Period1> &'
| | |             `-DeclRefExpr 0xd1a6a0 <col:27> 'const duration<_Rep2, _Period2>' lvalue ParmVar 0xd1a4a8 '__rhs' 'const duration<_Rep2, _Period2> &'
| | |-FunctionTemplateDecl 0xd1be48 <line:573:5, line:578:34> line:576:7 operator<=
| | | |-TemplateTypeParmDecl 0xd1a7a0 <line:573:14, col:23> col:23 referenced typename depth 0 index 0 _Rep1
| | | |-TemplateTypeParmDecl 0xd1a818 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Period1
| | | |-TemplateTypeParmDecl 0xd1a898 <line:574:7, col:16> col:16 referenced typename depth 0 index 2 _Rep2
| | | |-TemplateTypeParmDecl 0xd1a918 <col:23, col:32> col:32 referenced typename depth 0 index 3 _Period2
| | | `-FunctionDecl 0xd1bda8 <line:575:7, line:578:34> line:576:7 constexpr operator<= 'bool (const duration<_Rep1, _Period1> &, const duration<_Rep2, _Period2> &)'
| | |   |-ParmVarDecl 0xd1bb30 <col:18, col:51> col:51 referenced __lhs 'const duration<_Rep1, _Period1> &'
| | |   |-ParmVarDecl 0xd1bcd8 <line:577:4, col:37> col:37 referenced __rhs 'const duration<_Rep2, _Period2> &'
| | |   `-CompoundStmt 0xd1bfb8 <line:578:7, col:34>
| | |     `-ReturnStmt 0xd1bfa8 <col:9, col:31>
| | |       `-UnaryOperator 0xd1bf90 <col:16, col:31> '<dependent type>' prefix '!' cannot overflow
| | |         `-ParenExpr 0xd1bf70 <col:17, col:31> '<dependent type>'
| | |           `-CXXOperatorCallExpr 0xd1bf38 <col:18, col:26> '<dependent type>'
| | |             |-UnresolvedLookupExpr 0xd1bef0 <col:24> '<overloaded function type>' lvalue (ADL) = 'operator<' 0xd19778
| | |             |-DeclRefExpr 0xd1beb0 <col:18> 'const duration<_Rep2, _Period2>' lvalue ParmVar 0xd1bcd8 '__rhs' 'const duration<_Rep2, _Period2> &'
| | |             `-DeclRefExpr 0xd1bed0 <col:26> 'const duration<_Rep1, _Period1>' lvalue ParmVar 0xd1bb30 '__lhs' 'const duration<_Rep1, _Period1> &'
| | |-FunctionTemplateDecl 0xd1c648 <line:580:5, line:585:31> line:583:7 operator>
| | | |-TemplateTypeParmDecl 0xd1bfd0 <line:580:14, col:23> col:23 referenced typename depth 0 index 0 _Rep1
| | | |-TemplateTypeParmDecl 0xd1c048 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Period1
| | | |-TemplateTypeParmDecl 0xd1c0c8 <line:581:7, col:16> col:16 referenced typename depth 0 index 2 _Rep2
| | | |-TemplateTypeParmDecl 0xd1c148 <col:23, col:32> col:32 referenced typename depth 0 index 3 _Period2
| | | `-FunctionDecl 0xd1c5a8 <line:582:7, line:585:31> line:583:7 constexpr operator> 'bool (const duration<_Rep1, _Period1> &, const duration<_Rep2, _Period2> &)'
| | |   |-ParmVarDecl 0xd1c338 <col:17, col:50> col:50 referenced __lhs 'const duration<_Rep1, _Period1> &'
| | |   |-ParmVarDecl 0xd1c4d8 <line:584:3, col:36> col:36 referenced __rhs 'const duration<_Rep2, _Period2> &'
| | |   `-CompoundStmt 0xd1c780 <line:585:7, col:31>
| | |     `-ReturnStmt 0xd1c770 <col:9, col:24>
| | |       `-CXXOperatorCallExpr 0xd1c738 <col:16, col:24> '<dependent type>'
| | |         |-UnresolvedLookupExpr 0xd1c6f0 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator<' 0xd19778
| | |         |-DeclRefExpr 0xd1c6b0 <col:16> 'const duration<_Rep2, _Period2>' lvalue ParmVar 0xd1c4d8 '__rhs' 'const duration<_Rep2, _Period2> &'
| | |         `-DeclRefExpr 0xd1c6d0 <col:24> 'const duration<_Rep1, _Period1>' lvalue ParmVar 0xd1c338 '__lhs' 'const duration<_Rep1, _Period1> &'
| | |-FunctionTemplateDecl 0xd1ce18 <line:587:5, line:592:34> line:590:7 operator>=
| | | |-TemplateTypeParmDecl 0xd1c798 <line:587:14, col:23> col:23 referenced typename depth 0 index 0 _Rep1
| | | |-TemplateTypeParmDecl 0xd1c818 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Period1
| | | |-TemplateTypeParmDecl 0xd1c898 <line:588:7, col:16> col:16 referenced typename depth 0 index 2 _Rep2
| | | |-TemplateTypeParmDecl 0xd1c918 <col:23, col:32> col:32 referenced typename depth 0 index 3 _Period2
| | | `-FunctionDecl 0xd1cd78 <line:589:7, line:592:34> line:590:7 constexpr operator>= 'bool (const duration<_Rep1, _Period1> &, const duration<_Rep2, _Period2> &)'
| | |   |-ParmVarDecl 0xd1cb08 <col:18, col:51> col:51 referenced __lhs 'const duration<_Rep1, _Period1> &'
| | |   |-ParmVarDecl 0xd1cca8 <line:591:4, col:37> col:37 referenced __rhs 'const duration<_Rep2, _Period2> &'
| | |   `-CompoundStmt 0xd1cf88 <line:592:7, col:34>
| | |     `-ReturnStmt 0xd1cf78 <col:9, col:31>
| | |       `-UnaryOperator 0xd1cf60 <col:16, col:31> '<dependent type>' prefix '!' cannot overflow
| | |         `-ParenExpr 0xd1cf40 <col:17, col:31> '<dependent type>'
| | |           `-CXXOperatorCallExpr 0xd1cf08 <col:18, col:26> '<dependent type>'
| | |             |-UnresolvedLookupExpr 0xd1cec0 <col:24> '<overloaded function type>' lvalue (ADL) = 'operator<' 0xd19778
| | |             |-DeclRefExpr 0xd1ce80 <col:18> 'const duration<_Rep1, _Period1>' lvalue ParmVar 0xd1cb08 '__lhs' 'const duration<_Rep1, _Period1> &'
| | |             `-DeclRefExpr 0xd1cea0 <col:26> 'const duration<_Rep2, _Period2>' lvalue ParmVar 0xd1cca8 '__rhs' 'const duration<_Rep2, _Period2> &'
| | |-TypedefDecl 0xd1d208 <line:605:5, col:58> col:58 referenced nanoseconds 'duration<int64_t, std::nano>':'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | | `-TemplateSpecializationType 0xd1d120 'duration<int64_t, std::nano>' sugar duration
| | |   |-TemplateArgument type 'int64_t':'long'
| | |   |-TemplateArgument type 'std::nano':'std::ratio<1, 1000000000>'
| | |   `-RecordType 0xd1d100 'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | |     `-ClassTemplateSpecialization 0xd1d000 'duration'
| | |-TypedefDecl 0xd1d4a8 <line:608:5, col:59> col:59 referenced microseconds 'duration<int64_t, std::micro>':'std::chrono::duration<long, std::ratio<1, 1000000> >'
| | | `-TemplateSpecializationType 0xd1d3c0 'duration<int64_t, std::micro>' sugar duration
| | |   |-TemplateArgument type 'int64_t':'long'
| | |   |-TemplateArgument type 'std::micro':'std::ratio<1, 1000000>'
| | |   `-RecordType 0xd1d3a0 'std::chrono::duration<long, std::ratio<1, 1000000> >'
| | |     `-ClassTemplateSpecialization 0xd1d2a0 'duration'
| | |-TypedefDecl 0xd1d748 <line:611:5, col:59> col:59 referenced milliseconds 'duration<int64_t, std::milli>':'std::chrono::duration<long, std::ratio<1, 1000> >'
| | | `-TemplateSpecializationType 0xd1d660 'duration<int64_t, std::milli>' sugar duration
| | |   |-TemplateArgument type 'int64_t':'long'
| | |   |-TemplateArgument type 'std::milli':'std::ratio<1, 1000>'
| | |   `-RecordType 0xd1d640 'std::chrono::duration<long, std::ratio<1, 1000> >'
| | |     `-ClassTemplateSpecialization 0xd1d540 'duration'
| | |-TypedefDecl 0xd1d970 <line:614:5, col:53> col:53 referenced seconds 'duration<int64_t>':'std::chrono::duration<long, std::ratio<1, 1> >'
| | | `-TemplateSpecializationType 0xd1d8d0 'duration<int64_t>' sugar duration
| | |   |-TemplateArgument type 'int64_t':'long'
| | |   `-RecordType 0xd1d8b0 'std::chrono::duration<long, std::ratio<1, 1> >'
| | |     `-ClassTemplateSpecialization 0xd1d7b0 'duration'
| | |-TypedefDecl 0xd1de28 <line:617:5, col:61> col:61 referenced minutes 'duration<int64_t, ratio<60> >':'std::chrono::duration<long, std::ratio<60, 1> >'
| | | `-TemplateSpecializationType 0xd1dd40 'duration<int64_t, ratio<60> >' sugar duration
| | |   |-TemplateArgument type 'int64_t':'long'
| | |   |-TemplateArgument type 'ratio<60>':'std::ratio<60, 1>'
| | |   `-RecordType 0xd1dd20 'std::chrono::duration<long, std::ratio<60, 1> >'
| | |     `-ClassTemplateSpecialization 0xd1dc20 'duration'
| | |-TypedefDecl 0xd1e2e8 <line:620:5, col:61> col:61 referenced hours 'duration<int64_t, ratio<3600> >':'std::chrono::duration<long, std::ratio<3600, 1> >'
| | | `-TemplateSpecializationType 0xd1e200 'duration<int64_t, ratio<3600> >' sugar duration
| | |   |-TemplateArgument type 'int64_t':'long'
| | |   |-TemplateArgument type 'ratio<3600>':'std::ratio<3600, 1>'
| | |   `-RecordType 0xd1e1e0 'std::chrono::duration<long, std::ratio<3600, 1> >'
| | |     `-ClassTemplateSpecialization 0xd1e0e0 'duration'
| | |-ClassTemplateDecl 0xd1e4f0 prev 0xcee2d0 <line:625:5, line:678:7> line:626:14 time_point
| | | |-TemplateTypeParmDecl 0xd1e340 <line:625:14, col:23> col:23 referenced typename depth 0 index 0 _Clock
| | | |-TemplateTypeParmDecl 0xd1e3b8 <col:31, col:40> col:40 referenced typename depth 0 index 1 _Dur
| | | | `-TemplateArgument type 'typename _Clock::duration'
| | | |   `-inherited from TemplateTypeParm 0xcee1a0 '_Dur'
| | | |-CXXRecordDecl 0xd1e460 prev 0xcee240 <line:626:7, line:678:7> line:626:14 struct time_point definition
| | | | |-DefinitionData standard_layout trivially_copyable has_user_declared_ctor has_constexpr_non_copy_move_ctor can_const_default_init
| | | | | |-DefaultConstructor exists non_trivial user_provided constexpr
| | | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | | `-Destructor simple irrelevant trivial needs_implicit
| | | | |-CXXRecordDecl 0xd1e5b0 <col:7, col:14> col:14 implicit referenced struct time_point
| | | | |-TypedefDecl 0xd1e650 <line:628:2, col:24> col:24 referenced clock '_Clock'
| | | | | `-TemplateTypeParmType 0xd1e390 '_Clock' dependent depth 0 index 0
| | | | |   `-TemplateTypeParm 0xd1e340 '_Clock'
| | | | |-TypedefDecl 0xd1e6b8 <line:629:2, col:22> col:22 referenced duration '_Dur'
| | | | | `-TemplateTypeParmType 0xd1e410 '_Dur' dependent depth 0 index 1
| | | | |   `-TemplateTypeParm 0xd1e3b8 '_Dur'
| | | | |-TypedefDecl 0xd1e800 <line:630:2, col:38> col:38 rep 'typename duration::rep'
| | | | | `-DependentNameType 0xd1e790 'typename duration::rep' dependent
| | | | |-TypedefDecl 0xd1e910 <line:631:2, col:38> col:38 period 'typename duration::period'
| | | | | `-DependentNameType 0xd1e8a0 'typename duration::period' dependent
| | | | |-CXXConstructorDecl 0xd1e9d0 <line:633:2, line:634:4> line:633:12 constexpr time_point<_Clock, _Dur> 'void ()'
| | | | | |-CXXCtorInitializer Field 0xd1fe10 '__d' 'std::chrono::time_point::duration':'_Dur'
| | | | | | `-ParenListExpr 0xd1ff18 <col:30, col:47> 'NULL TYPE'
| | | | | |   `-CallExpr 0xd1fef8 <col:31, col:46> '<dependent type>'
| | | | | |     `-CXXDependentScopeMemberExpr 0xd1feb0 <col:31, col:41> '<dependent type>' lvalue ->zero
| | | | | `-CompoundStmt 0xd1ff68 <line:634:2, col:4>
| | | | |-CXXConstructorDecl 0xd1eba8 <line:636:2, line:638:4> line:636:21 constexpr time_point<_Clock, _Dur> 'void (const std::chrono::time_point::duration &)'
| | | | | |-ParmVarDecl 0xd1eab8 <col:32, col:48> col:48 referenced __dur 'const std::chrono::time_point::duration &'
| | | | | |-CXXCtorInitializer Field 0xd1fe10 '__d' 'std::chrono::time_point::duration':'_Dur'
| | | | | | `-ParenListExpr 0xd1ff98 <line:637:7, col:13> 'NULL TYPE'
| | | | | |   `-DeclRefExpr 0xd1ff78 <col:8> 'const std::chrono::time_point::duration':'const _Dur' lvalue ParmVar 0xd1eab8 '__dur' 'const std::chrono::time_point::duration &'
| | | | | `-CompoundStmt 0xd1ffe8 <line:638:2, col:4>
| | | | |-FunctionTemplateDecl 0xd1f6e0 <line:641:2, line:645:6> line:643:14 time_point<_Clock, _Dur>
| | | | | |-TemplateTypeParmDecl 0xd1ec58 <line:641:11, col:20> col:20 referenced typename depth 1 index 0 _Dur2
| | | | | |-TemplateTypeParmDecl 0xd1f2b8 <line:642:4, <scratch space>:154:1> /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/chrono:642:13 typename depth 1 index 1
| | | | | | `-TemplateArgument type '_Require<is_convertible<_Dur2, _Dur> >':'typename enable_if<__and_<is_convertible<type-parameter-1-0, type-parameter-0-1> >::value>::type'
| | | | | `-CXXConstructorDecl 0xd1f638 <line:643:4, line:645:6> line:643:14 constexpr time_point<_Clock, _Dur> 'void (const time_point<std::chrono::time_point::clock, _Dur2> &)'
| | | | |   |-ParmVarDecl 0xd1f548 <col:25, col:57> col:57 referenced __t 'const time_point<std::chrono::time_point::clock, _Dur2> &'
| | | | |   |-CXXCtorInitializer Field 0xd1fe10 '__d' 'std::chrono::time_point::duration':'_Dur'
| | | | |   | `-ParenListExpr 0xd20080 <line:644:9, col:32> 'NULL TYPE'
| | | | |   |   `-CallExpr 0xd20060 <col:10, col:31> '<dependent type>'
| | | | |   |     `-CXXDependentScopeMemberExpr 0xd20018 <col:10, col:14> '<dependent type>' lvalue .time_since_epoch
| | | | |   |       `-DeclRefExpr 0xd1fff8 <col:10> 'const time_point<std::chrono::time_point::clock, _Dur2>' lvalue ParmVar 0xd1f548 '__t' 'const time_point<std::chrono::time_point::clock, _Dur2> &'
| | | | |   `-CompoundStmt 0xd200d0 <line:645:4, col:6>
| | | | |-CXXMethodDecl 0xd1f7e8 <line:648:2, line:650:16> line:649:2 constexpr time_since_epoch 'std::chrono::time_point::duration () const'
| | | | | `-CompoundStmt 0xd20130 <line:650:2, col:16>
| | | | |   `-ReturnStmt 0xd20120 <col:4, col:11>
| | | | |     `-MemberExpr 0xd200f0 <col:11> 'const std::chrono::time_point::duration':'const _Dur' lvalue ->__d 0xd1fe10
| | | | |       `-CXXThisExpr 0xd200e0 <col:11> 'const time_point<_Clock, _Dur> *' implicit this
| | | | |-CXXMethodDecl 0xd1f9b8 <line:653:23, line:658:2> line:654:2 operator+= 'time_point<_Clock, _Dur> &(const std::chrono::time_point::duration &)'
| | | | | |-ParmVarDecl 0xd1f898 <col:13, col:29> col:29 referenced __dur 'const std::chrono::time_point::duration &'
| | | | | `-CompoundStmt 0xd20278 <line:655:2, line:658:2>
| | | | |   |-CompoundAssignOperator 0xd201a8 <line:656:4, col:11> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
| | | | |   | |-MemberExpr 0xd20158 <col:4> 'std::chrono::time_point::duration':'_Dur' lvalue ->__d 0xd1fe10
| | | | |   | | `-CXXThisExpr 0xd20148 <col:4> 'time_point<_Clock, _Dur> *' implicit this
| | | | |   | `-DeclRefExpr 0xd20188 <col:11> 'const std::chrono::time_point::duration':'const _Dur' lvalue ParmVar 0xd1f898 '__dur' 'const std::chrono::time_point::duration &'
| | | | |   `-ReturnStmt 0xd20268 <line:657:4, col:12>
| | | | |     `-CXXOperatorCallExpr 0xd20238 <col:11, col:12> '<dependent type>'
| | | | |       |-UnresolvedLookupExpr 0xd201e8 <col:11> '<overloaded function type>' lvalue (ADL) = 'operator*' 0xd13060 0xd0fba0
| | | | |       `-CXXThisExpr 0xd201d8 <col:12> 'time_point<_Clock, _Dur> *' this
| | | | |-CXXMethodDecl 0xd1fb40 <line:660:23, line:665:2> line:661:2 operator-= 'time_point<_Clock, _Dur> &(const std::chrono::time_point::duration &)'
| | | | | |-ParmVarDecl 0xd1fa70 <col:13, col:29> col:29 referenced __dur 'const std::chrono::time_point::duration &'
| | | | | `-CompoundStmt 0xd203c8 <line:662:2, line:665:2>
| | | | |   |-CompoundAssignOperator 0xd202f8 <line:663:4, col:11> '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
| | | | |   | |-MemberExpr 0xd202a8 <col:4> 'std::chrono::time_point::duration':'_Dur' lvalue ->__d 0xd1fe10
| | | | |   | | `-CXXThisExpr 0xd20298 <col:4> 'time_point<_Clock, _Dur> *' implicit this
| | | | |   | `-DeclRefExpr 0xd202d8 <col:11> 'const std::chrono::time_point::duration':'const _Dur' lvalue ParmVar 0xd1fa70 '__dur' 'const std::chrono::time_point::duration &'
| | | | |   `-ReturnStmt 0xd203b8 <line:664:4, col:12>
| | | | |     `-CXXOperatorCallExpr 0xd20388 <col:11, col:12> '<dependent type>'
| | | | |       |-UnresolvedLookupExpr 0xd20338 <col:11> '<overloaded function type>' lvalue (ADL) = 'operator*' 0xd13060 0xd0fba0
| | | | |       `-CXXThisExpr 0xd20328 <col:12> 'time_point<_Clock, _Dur> *' this
| | | | |-CXXMethodDecl 0xd1fc70 <line:668:2, line:670:40> line:669:2 constexpr min 'time_point<_Clock, _Dur> () noexcept' static
| | | | | `-CompoundStmt 0xd204c0 <line:670:2, col:40>
| | | | |   `-ReturnStmt 0xd204b0 <col:4, col:37>
| | | | |     `-CXXUnresolvedConstructExpr 0xd20488 <col:11, col:37> 'time_point<_Clock, _Dur>' 'time_point<_Clock, _Dur>'
| | | | |       `-CallExpr 0xd20468 <col:22, col:36> '<dependent type>'
| | | | |         `-DependentScopeDeclRefExpr 0xd20430 <col:22, col:32> '<dependent type>' lvalue
| | | | |-CXXMethodDecl 0xd1fd38 <line:672:2, line:674:40> line:673:2 constexpr max 'time_point<_Clock, _Dur> () noexcept' static
| | | | | `-CompoundStmt 0xd205b0 <line:674:2, col:40>
| | | | |   `-ReturnStmt 0xd205a0 <col:4, col:37>
| | | | |     `-CXXUnresolvedConstructExpr 0xd20578 <col:11, col:37> 'time_point<_Clock, _Dur>' 'time_point<_Clock, _Dur>'
| | | | |       `-CallExpr 0xd20558 <col:22, col:36> '<dependent type>'
| | | | |         `-DependentScopeDeclRefExpr 0xd20520 <col:22, col:32> '<dependent type>' lvalue
| | | | |-AccessSpecDecl 0xd1fdd8 <line:676:7, col:14> col:7 private
| | | | `-FieldDecl 0xd1fe10 <line:677:2, col:11> col:11 referenced __d 'std::chrono::time_point::duration':'_Dur'
| | | |-ClassTemplateSpecialization 0xd347b0 'time_point'
| | | |-ClassTemplateSpecialization 0xd95548 'time_point'
| | | `-ClassTemplateSpecialization 0xdbd838 'time_point'
| | |-FunctionTemplateDecl 0xd20f38 <line:681:5, line:688:7> line:684:7 time_point_cast
| | | |-TemplateTypeParmDecl 0xd205c8 <line:681:14, col:23> col:23 referenced typename depth 0 index 0 _ToDur
| | | |-TemplateTypeParmDecl 0xd20648 <col:31, col:40> col:40 referenced typename depth 0 index 1 _Clock
| | | |-TemplateTypeParmDecl 0xd206c8 <col:48, col:57> col:57 referenced typename depth 0 index 2 _Dur
| | | |-FunctionDecl 0xd20e98 <line:682:7, line:688:7> line:684:7 constexpr time_point_cast 'typename enable_if<__is_duration<_ToDur>::value, time_point<_Clock, _ToDur> >::type (const time_point<_Clock, _Dur> &)'
| | | | |-ParmVarDecl 0xd20d98 <col:23, col:55> col:55 referenced __t 'const time_point<_Clock, _Dur> &'
| | | | `-CompoundStmt 0xd212d0 <line:685:7, line:688:7>
| | | |   |-DeclStmt 0xd21100 <line:686:2, col:52>
| | | |   | `-TypedefDecl 0xd210a8 <col:2, col:40> col:40 referenced __time_point 'time_point<_Clock, _ToDur>'
| | | |   |   `-TemplateSpecializationType 0xd20fc0 'time_point<_Clock, _ToDur>' dependent time_point
| | | |   |     |-TemplateArgument type '_Clock'
| | | |   |     `-TemplateArgument type '_ToDur'
| | | |   `-ReturnStmt 0xd212c0 <line:687:2, col:67>
| | | |     `-CXXUnresolvedConstructExpr 0xd21298 <col:9, col:67> '__time_point':'time_point<_Clock, _ToDur>' '__time_point':'time_point<_Clock, _ToDur>'
| | | |       `-CallExpr 0xd21270 <col:22, col:66> '<dependent type>'
| | | |         |-UnresolvedLookupExpr 0xd21160 <col:22, col:42> '<dependent type>' lvalue (ADL) = 'duration_cast' 0xcfc0b8
| | | |         `-CallExpr 0xd21250 <col:44, col:65> '<dependent type>'
| | | |           `-CXXDependentScopeMemberExpr 0xd21208 <col:44, col:48> '<dependent type>' lvalue .time_since_epoch
| | | |             `-DeclRefExpr 0xd211e8 <col:44> 'const time_point<_Clock, _Dur>' lvalue ParmVar 0xd20d98 '__t' 'const time_point<_Clock, _Dur> &'
| | | `-FunctionDecl 0xda4d38 <line:682:7, line:688:7> line:684:7 used constexpr time_point_cast 'typename enable_if<__is_duration<duration<long, ratio<1, 1000000000> > >::value, time_point<system_clock, duration<long, ratio<1, 1000000000> > > >::type (const time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1> > > &)'
| | |   |-TemplateArgument type 'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | |   |-TemplateArgument type 'std::chrono::_V2::system_clock'
| | |   |-TemplateArgument type 'std::chrono::duration<long, std::ratio<1, 1> >'
| | |   |-ParmVarDecl 0xda4c38 <col:23, col:55> col:55 used __t 'const time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1> > > &'
| | |   `-CompoundStmt 0xdbcdd0 <line:685:7, line:688:7>
| | |     |-DeclStmt 0xda4fe8 <line:686:2, col:52>
| | |     | `-TypedefDecl 0xda4f90 <col:2, col:40> col:40 __time_point 'time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >':'std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >'
| | |     |   `-TemplateSpecializationType 0xda4ef0 'time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >' sugar time_point
| | |     |     |-TemplateArgument type 'std::chrono::_V2::system_clock':'std::chrono::_V2::system_clock'
| | |     |     |-TemplateArgument type 'std::chrono::duration<long, std::ratio<1, 1000000000> >':'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | |     |     `-RecordType 0xd348b0 'std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >'
| | |     |       `-ClassTemplateSpecialization 0xd347b0 'time_point'
| | |     `-ReturnStmt 0xdbcdc0 <line:687:2, col:67>
| | |       `-ExprWithCleanups 0xdbcda8 <col:9, col:67> 'typename enable_if<__is_duration<duration<long, ratio<1, 1000000000> > >::value, time_point<system_clock, duration<long, ratio<1, 1000000000> > > >::type':'std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >'
| | |         `-CXXConstructExpr 0xdbcd78 <col:9, col:67> 'typename enable_if<__is_duration<duration<long, ratio<1, 1000000000> > >::value, time_point<system_clock, duration<long, ratio<1, 1000000000> > > >::type':'std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >' 'void (std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &&) noexcept' elidable
| | |           `-MaterializeTemporaryExpr 0xdb8d18 <col:9, col:67> '__time_point':'std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >' xvalue
| | |             `-CXXFunctionalCastExpr 0xdb0b80 <col:9, col:67> '__time_point':'std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >' functional cast to __time_point <ConstructorConversion>
| | |               `-CXXConstructExpr 0xdb0b50 <col:9, col:67> '__time_point':'std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >' 'void (const std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >::duration &)'
| | |                 `-MaterializeTemporaryExpr 0xdaf6d0 <col:22, col:66> 'const __enable_if_is_duration<std::chrono::duration<long, std::ratio<1, 1000000000> > >':'const std::chrono::duration<long, std::ratio<1, 1000000000> >' lvalue
| | |                   `-ImplicitCastExpr 0xdaf6b8 <col:22, col:66> 'const __enable_if_is_duration<std::chrono::duration<long, std::ratio<1, 1000000000> > >':'const std::chrono::duration<long, std::ratio<1, 1000000000> >' <NoOp>
| | |                     `-CallExpr 0xdaf5d0 <col:22, col:66> '__enable_if_is_duration<std::chrono::duration<long, std::ratio<1, 1000000000> > >':'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | |                       |-ImplicitCastExpr 0xdaf5b8 <col:22, col:42> '__enable_if_is_duration<std::chrono::duration<long, std::ratio<1, 1000000000> > > (*)(const duration<long, std::ratio<1, 1> > &)' <FunctionToPointerDecay>
| | |                       | `-DeclRefExpr 0xda6fd8 <col:22, col:42> '__enable_if_is_duration<std::chrono::duration<long, std::ratio<1, 1000000000> > > (const duration<long, std::ratio<1, 1> > &)' lvalue Function 0xda6ea8 'duration_cast' '__enable_if_is_duration<std::chrono::duration<long, std::ratio<1, 1000000000> > > (const duration<long, std::ratio<1, 1> > &)' (FunctionTemplate 0xcfc0b8 'duration_cast')
| | |                       `-MaterializeTemporaryExpr 0xdaf610 <col:44, col:65> 'const std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1> > >::duration':'const std::chrono::duration<long, std::ratio<1, 1> >' lvalue
| | |                         `-ImplicitCastExpr 0xdaf5f8 <col:44, col:65> 'const std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1> > >::duration':'const std::chrono::duration<long, std::ratio<1, 1> >' <NoOp>
| | |                           `-CXXMemberCallExpr 0xda5f78 <col:44, col:65> 'std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1> > >::duration':'std::chrono::duration<long, std::ratio<1, 1> >'
| | |                             `-MemberExpr 0xda50e8 <col:44, col:48> '<bound member function type>' .time_since_epoch 0xd97378
| | |                               `-DeclRefExpr 0xda50c8 <col:44> 'const time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1> > >':'const std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1> > >' lvalue ParmVar 0xda4c38 '__t' 'const time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1> > > &'
| | |-FunctionTemplateDecl 0xd21e60 <line:721:5, line:732:7> line:725:7 operator+
| | | |-TemplateTypeParmDecl 0xd212f0 <line:721:14, col:23> col:23 referenced typename depth 0 index 0 _Clock
| | | |-TemplateTypeParmDecl 0xd21368 <col:31, col:40> col:40 referenced typename depth 0 index 1 _Dur1
| | | |-TemplateTypeParmDecl 0xd213e8 <line:722:7, col:16> col:16 referenced typename depth 0 index 2 _Rep2
| | | |-TemplateTypeParmDecl 0xd21468 <col:23, col:32> col:32 referenced typename depth 0 index 3 _Period2
| | | `-FunctionDecl 0xd21dc0 <line:723:7, line:732:7> line:725:7 constexpr operator+ 'time_point<_Clock, typename common_type<_Dur1, duration<_Rep2, _Period2> >::type> (const time_point<_Clock, _Dur1> &, const duration<_Rep2, _Period2> &)'
| | |   |-ParmVarDecl 0xd21ad8 <col:17, col:50> col:50 referenced __lhs 'const time_point<_Clock, _Dur1> &'
| | |   |-ParmVarDecl 0xd21c78 <line:726:3, col:36> col:36 referenced __rhs 'const duration<_Rep2, _Period2> &'
| | |   `-CompoundStmt 0xd225c8 <line:727:7, line:732:7>
| | |     |-DeclStmt 0xd22030 <line:728:2, col:44>
| | |     | `-TypedefDecl 0xd21fd8 <col:2, col:38> col:38 referenced __dur2 'duration<_Rep2, _Period2>'
| | |     |   `-TemplateSpecializationType 0xd21ef0 'duration<_Rep2, _Period2>' dependent duration
| | |     |     |-TemplateArgument type '_Rep2'
| | |     |     `-TemplateArgument type '_Period2'
| | |     |-DeclStmt 0xd22278 <line:729:2, col:55>
| | |     | `-TypedefDecl 0xd22220 <col:2, col:51> col:51 referenced __ct 'typename common_type<_Dur1, __dur2>::type'
| | |     |   `-DependentNameType 0xd221b0 'typename common_type<_Dur1, __dur2>::type' dependent
| | |     |-DeclStmt 0xd22410 <line:730:2, col:50>
| | |     | `-TypedefDecl 0xd223b8 <col:2, col:38> col:38 referenced __time_point 'time_point<_Clock, __ct>'
| | |     |   `-TemplateSpecializationType 0xd222d0 'time_point<_Clock, __ct>' dependent time_point
| | |     |     |-TemplateArgument type '_Clock'
| | |     |     `-TemplateArgument type '__ct':'typename common_type<_Dur1, __dur2>::type'
| | |     `-ReturnStmt 0xd225b8 <line:731:2, col:54>
| | |       `-CXXUnresolvedConstructExpr 0xd22590 <col:9, col:54> '__time_point':'time_point<_Clock, __ct>' '__time_point':'time_point<_Clock, __ct>'
| | |         `-CXXOperatorCallExpr 0xd22558 <col:22, col:49> '<dependent type>'
| | |           |-UnresolvedLookupExpr 0xd22508 <col:47> '<overloaded function type>' lvalue (ADL) = 'operator+' 0xd21e60 0xd093a8
| | |           |-CallExpr 0xd224c8 <col:22, col:45> '<dependent type>'
| | |           | `-CXXDependentScopeMemberExpr 0xd22480 <col:22, col:28> '<dependent type>' lvalue .time_since_epoch
| | |           |   `-DeclRefExpr 0xd22460 <col:22> 'const time_point<_Clock, _Dur1>' lvalue ParmVar 0xd21ad8 '__lhs' 'const time_point<_Clock, _Dur1> &'
| | |           `-DeclRefExpr 0xd224e8 <col:49> 'const duration<_Rep2, _Period2>' lvalue ParmVar 0xd21c78 '__rhs' 'const duration<_Rep2, _Period2> &'
| | |-FunctionTemplateDecl 0xd231d0 <line:734:5, line:745:7> line:738:7 operator+
| | | |-TemplateTypeParmDecl 0xd225f8 <line:734:14, col:23> col:23 referenced typename depth 0 index 0 _Rep1
| | | |-TemplateTypeParmDecl 0xd22678 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Period1
| | | |-TemplateTypeParmDecl 0xd226f8 <line:735:7, col:16> col:16 referenced typename depth 0 index 2 _Clock
| | | |-TemplateTypeParmDecl 0xd22778 <col:24, col:33> col:33 referenced typename depth 0 index 3 _Dur2
| | | `-FunctionDecl 0xd23130 <line:736:7, line:745:7> line:738:7 constexpr operator+ 'time_point<_Clock, typename common_type<duration<_Rep1, _Period1>, _Dur2>::type> (const duration<_Rep1, _Period1> &, const time_point<_Clock, _Dur2> &)'
| | |   |-ParmVarDecl 0xd22db8 <col:17, col:50> col:50 referenced __lhs 'const duration<_Rep1, _Period1> &'
| | |   |-ParmVarDecl 0xd22fe8 <line:739:3, col:36> col:36 referenced __rhs 'const time_point<_Clock, _Dur2> &'
| | |   `-CompoundStmt 0xd23940 <line:740:7, line:745:7>
| | |     |-DeclStmt 0xd233a0 <line:741:2, col:44>
| | |     | `-TypedefDecl 0xd23348 <col:2, col:38> col:38 referenced __dur1 'duration<_Rep1, _Period1>'
| | |     |   `-TemplateSpecializationType 0xd23260 'duration<_Rep1, _Period1>' dependent duration
| | |     |     |-TemplateArgument type '_Rep1'
| | |     |     `-TemplateArgument type '_Period1'
| | |     |-DeclStmt 0xd235e8 <line:742:2, col:55>
| | |     | `-TypedefDecl 0xd23590 <col:2, col:51> col:51 referenced __ct 'typename common_type<__dur1, _Dur2>::type'
| | |     |   `-DependentNameType 0xd23520 'typename common_type<__dur1, _Dur2>::type' dependent
| | |     |-DeclStmt 0xd23780 <line:743:2, col:50>
| | |     | `-TypedefDecl 0xd23728 <col:2, col:38> col:38 referenced __time_point 'time_point<_Clock, __ct>'
| | |     |   `-TemplateSpecializationType 0xd23640 'time_point<_Clock, __ct>' dependent time_point
| | |     |     |-TemplateArgument type '_Clock'
| | |     |     `-TemplateArgument type '__ct':'typename common_type<__dur1, _Dur2>::type'
| | |     `-ReturnStmt 0xd23930 <line:744:2, col:54>
| | |       `-CXXUnresolvedConstructExpr 0xd23908 <col:9, col:54> '__time_point':'time_point<_Clock, __ct>' '__time_point':'time_point<_Clock, __ct>'
| | |         `-CXXOperatorCallExpr 0xd238d0 <col:22, col:49> '<dependent type>'
| | |           |-UnresolvedLookupExpr 0xd23878 <col:47> '<overloaded function type>' lvalue (ADL) = 'operator+' 0xd231d0 0xd21e60 0xd093a8
| | |           |-CallExpr 0xd23838 <col:22, col:45> '<dependent type>'
| | |           | `-CXXDependentScopeMemberExpr 0xd237f0 <col:22, col:28> '<dependent type>' lvalue .time_since_epoch
| | |           |   `-DeclRefExpr 0xd237d0 <col:22> 'const time_point<_Clock, _Dur2>' lvalue ParmVar 0xd22fe8 '__rhs' 'const time_point<_Clock, _Dur2> &'
| | |           `-DeclRefExpr 0xd23858 <col:49> 'const duration<_Rep1, _Period1>' lvalue ParmVar 0xd22db8 '__lhs' 'const duration<_Rep1, _Period1> &'
| | |-FunctionTemplateDecl 0xd253a0 <line:747:5, line:758:7> line:751:7 operator-
| | | |-TemplateTypeParmDecl 0xd23970 <line:747:14, col:23> col:23 referenced typename depth 0 index 0 _Clock
| | | |-TemplateTypeParmDecl 0xd239e8 <col:31, col:40> col:40 referenced typename depth 0 index 1 _Dur1
| | | |-TemplateTypeParmDecl 0xd23a68 <line:748:7, col:16> col:16 referenced typename depth 0 index 2 _Rep2
| | | |-TemplateTypeParmDecl 0xd23ae8 <col:23, col:32> col:32 referenced typename depth 0 index 3 _Period2
| | | `-FunctionDecl 0xd25300 <line:749:7, line:758:7> line:751:7 constexpr operator- 'time_point<_Clock, typename common_type<_Dur1, duration<_Rep2, _Period2> >::type> (const time_point<_Clock, _Dur1> &, const duration<_Rep2, _Period2> &)'
| | |   |-ParmVarDecl 0xd25058 <col:17, col:50> col:50 referenced __lhs 'const time_point<_Clock, _Dur1> &'
| | |   |-ParmVarDecl 0xd251f8 <line:752:3, col:36> col:36 referenced __rhs 'const duration<_Rep2, _Period2> &'
| | |   `-CompoundStmt 0xd25b08 <line:753:7, line:758:7>
| | |     |-DeclStmt 0xd25570 <line:754:2, col:44>
| | |     | `-TypedefDecl 0xd25518 <col:2, col:38> col:38 referenced __dur2 'duration<_Rep2, _Period2>'
| | |     |   `-TemplateSpecializationType 0xd25430 'duration<_Rep2, _Period2>' dependent duration
| | |     |     |-TemplateArgument type '_Rep2'
| | |     |     `-TemplateArgument type '_Period2'
| | |     |-DeclStmt 0xd257b8 <line:755:2, col:55>
| | |     | `-TypedefDecl 0xd25760 <col:2, col:51> col:51 referenced __ct 'typename common_type<_Dur1, __dur2>::type'
| | |     |   `-DependentNameType 0xd256f0 'typename common_type<_Dur1, __dur2>::type' dependent
| | |     |-DeclStmt 0xd25950 <line:756:2, col:50>
| | |     | `-TypedefDecl 0xd258f8 <col:2, col:38> col:38 referenced __time_point 'time_point<_Clock, __ct>'
| | |     |   `-TemplateSpecializationType 0xd25810 'time_point<_Clock, __ct>' dependent time_point
| | |     |     |-TemplateArgument type '_Clock'
| | |     |     `-TemplateArgument type '__ct':'typename common_type<_Dur1, __dur2>::type'
| | |     `-ReturnStmt 0xd25af8 <line:757:2, col:53>
| | |       `-CXXUnresolvedConstructExpr 0xd25ad0 <col:9, col:53> '__time_point':'time_point<_Clock, __ct>' '__time_point':'time_point<_Clock, __ct>'
| | |         `-CXXOperatorCallExpr 0xd25a98 <col:22, col:48> '<dependent type>'
| | |           |-UnresolvedLookupExpr 0xd25a48 <col:47> '<overloaded function type>' lvalue (ADL) = 'operator-' 0xd253a0 0xd0dc28
| | |           |-CallExpr 0xd25a08 <col:22, col:45> '<dependent type>'
| | |           | `-CXXDependentScopeMemberExpr 0xd259c0 <col:22, col:28> '<dependent type>' lvalue .time_since_epoch
| | |           |   `-DeclRefExpr 0xd259a0 <col:22> 'const time_point<_Clock, _Dur1>' lvalue ParmVar 0xd25058 '__lhs' 'const time_point<_Clock, _Dur1> &'
| | |           `-DeclRefExpr 0xd25a28 <col:48> 'const duration<_Rep2, _Period2>' lvalue ParmVar 0xd251f8 '__rhs' 'const duration<_Rep2, _Period2> &'
| | |-FunctionTemplateDecl 0xd26398 <line:760:5, line:764:69> line:762:7 operator-
| | | |-TemplateTypeParmDecl 0xd25b38 <line:760:14, col:23> col:23 referenced typename depth 0 index 0 _Clock
| | | |-TemplateTypeParmDecl 0xd25bb8 <col:31, col:40> col:40 referenced typename depth 0 index 1 _Dur1
| | | |-TemplateTypeParmDecl 0xd25c38 <col:47, col:56> col:56 referenced typename depth 0 index 2 _Dur2
| | | |-FunctionDecl 0xd262f8 <line:761:7, line:764:69> line:762:7 constexpr operator- 'typename common_type<_Dur1, _Dur2>::type (const time_point<_Clock, _Dur1> &, const time_point<_Clock, _Dur2> &)'
| | | | |-ParmVarDecl 0xd26008 <col:17, col:50> col:50 referenced __lhs 'const time_point<_Clock, _Dur1> &'
| | | | |-ParmVarDecl 0xd261d8 <line:763:3, col:36> col:36 referenced __rhs 'const time_point<_Clock, _Dur2> &'
| | | | `-CompoundStmt 0xd265b0 <line:764:7, col:69>
| | | |   `-ReturnStmt 0xd265a0 <col:9, col:66>
| | | |     `-CXXOperatorCallExpr 0xd26568 <col:16, col:66> '<dependent type>'
| | | |       |-UnresolvedLookupExpr 0xd26510 <col:41> '<overloaded function type>' lvalue (ADL) = 'operator-' 0xd26398 0xd253a0 0xd0dc28
| | | |       |-CallExpr 0xd26468 <col:16, col:39> '<dependent type>'
| | | |       | `-CXXDependentScopeMemberExpr 0xd26420 <col:16, col:22> '<dependent type>' lvalue .time_since_epoch
| | | |       |   `-DeclRefExpr 0xd26400 <col:16> 'const time_point<_Clock, _Dur1>' lvalue ParmVar 0xd26008 '__lhs' 'const time_point<_Clock, _Dur1> &'
| | | |       `-CallExpr 0xd264f0 <col:43, col:66> '<dependent type>'
| | | |         `-CXXDependentScopeMemberExpr 0xd264a8 <col:43, col:49> '<dependent type>' lvalue .time_since_epoch
| | | |           `-DeclRefExpr 0xd26488 <col:43> 'const time_point<_Clock, _Dur2>' lvalue ParmVar 0xd261d8 '__rhs' 'const time_point<_Clock, _Dur2> &'
| | | `-FunctionDecl 0xe44d28 <line:761:7, line:764:69> line:762:7 used constexpr operator- 'typename common_type<duration<long, ratio<1, 1000000000> >, duration<long, ratio<1, 1000000000> > >::type (const time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &, const time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &)'
| | |   |-TemplateArgument type 'std::chrono::_V2::steady_clock'
| | |   |-TemplateArgument type 'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | |   |-TemplateArgument type 'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | |   |-ParmVarDecl 0xe44aa8 <col:17, col:50> col:50 used __lhs 'const time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &'
| | |   |-ParmVarDecl 0xe44c08 <line:763:3, col:36> col:36 used __rhs 'const time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &'
| | |   `-CompoundStmt 0xe4ee98 <line:764:7, col:69>
| | |     `-ReturnStmt 0xe4ee88 <col:9, col:66>
| | |       `-ExprWithCleanups 0xe4ee70 <col:16, col:66> 'typename common_type<duration<long, ratio<1, 1000000000> >, duration<long, ratio<1, 1000000000> > >::type':'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | |         `-CXXConstructExpr 0xe4ee40 <col:16, col:66> 'typename common_type<duration<long, ratio<1, 1000000000> >, duration<long, ratio<1, 1000000000> > >::type':'std::chrono::duration<long, std::ratio<1, 1000000000> >' 'void (const std::chrono::duration<long, std::ratio<1, 1000000000> > &) noexcept' elidable
| | |           `-MaterializeTemporaryExpr 0xe4ee28 <col:16, col:66> 'const typename common_type<duration<long, ratio<1, 1000000000> >, duration<long, ratio<1, 1000000000> > >::type':'const std::chrono::duration<long, std::ratio<1, 1000000000> >' lvalue
| | |             `-ImplicitCastExpr 0xe4ee10 <col:16, col:66> 'const typename common_type<duration<long, ratio<1, 1000000000> >, duration<long, ratio<1, 1000000000> > >::type':'const std::chrono::duration<long, std::ratio<1, 1000000000> >' <NoOp>
| | |               `-CXXOperatorCallExpr 0xe4ae50 <col:16, col:66> 'typename common_type<duration<long, ratio<1, 1000000000> >, duration<long, ratio<1, 1000000000> > >::type':'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | |                 |-ImplicitCastExpr 0xe4ae38 <col:41> 'typename common_type<duration<long, ratio<1, 1000000000> >, duration<long, ratio<1, 1000000000> > >::type (*)(const duration<long, std::ratio<1, 1000000000> > &, const duration<long, std::ratio<1, 1000000000> > &)' <FunctionToPointerDecay>
| | |                 | `-DeclRefExpr 0xe46888 <col:41> 'typename common_type<duration<long, ratio<1, 1000000000> >, duration<long, ratio<1, 1000000000> > >::type (const duration<long, std::ratio<1, 1000000000> > &, const duration<long, std::ratio<1, 1000000000> > &)' lvalue Function 0xe466d8 'operator-' 'typename common_type<duration<long, ratio<1, 1000000000> >, duration<long, ratio<1, 1000000000> > >::type (const duration<long, std::ratio<1, 1000000000> > &, const duration<long, std::ratio<1, 1000000000> > &)'
| | |                 |-MaterializeTemporaryExpr 0xe46840 <col:16, col:39> 'const std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >::duration':'const std::chrono::duration<long, std::ratio<1, 1000000000> >' lvalue
| | |                 | `-ImplicitCastExpr 0xe46828 <col:16, col:39> 'const std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >::duration':'const std::chrono::duration<long, std::ratio<1, 1000000000> >' <NoOp>
| | |                 |   `-CXXMemberCallExpr 0xe45db8 <col:16, col:39> 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >::duration':'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | |                 |     `-MemberExpr 0xe44f28 <col:16, col:22> '<bound member function type>' .time_since_epoch 0xe40778
| | |                 |       `-DeclRefExpr 0xe44f08 <col:16> 'const time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >':'const std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >' lvalue ParmVar 0xe44aa8 '__lhs' 'const time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &'
| | |                 `-MaterializeTemporaryExpr 0xe46870 <col:43, col:66> 'const std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >::duration':'const std::chrono::duration<long, std::ratio<1, 1000000000> >' lvalue
| | |                   `-ImplicitCastExpr 0xe46858 <col:43, col:66> 'const std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >::duration':'const std::chrono::duration<long, std::ratio<1, 1000000000> >' <NoOp>
| | |                     `-CXXMemberCallExpr 0xe45e28 <col:43, col:66> 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >::duration':'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| | |                       `-MemberExpr 0xe45df8 <col:43, col:49> '<bound member function type>' .time_since_epoch 0xe40778
| | |                         `-DeclRefExpr 0xe45dd8 <col:43> 'const time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >':'const std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >' lvalue ParmVar 0xe44c08 '__rhs' 'const time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &'
| | |-FunctionTemplateDecl 0xd26c08 <line:766:5, line:770:70> line:768:7 operator==
| | | |-TemplateTypeParmDecl 0xd265c8 <line:766:14, col:23> col:23 referenced typename depth 0 index 0 _Clock
| | | |-TemplateTypeParmDecl 0xd26648 <col:31, col:40> col:40 referenced typename depth 0 index 1 _Dur1
| | | |-TemplateTypeParmDecl 0xd266c8 <col:47, col:56> col:56 referenced typename depth 0 index 2 _Dur2
| | | `-FunctionDecl 0xd26b68 <line:767:7, line:770:70> line:768:7 constexpr operator== 'bool (const time_point<_Clock, _Dur1> &, const time_point<_Clock, _Dur2> &)'
| | |   |-ParmVarDecl 0xd268b8 <col:18, col:51> col:51 referenced __lhs 'const time_point<_Clock, _Dur1> &'
| | |   |-ParmVarDecl 0xd26a58 <line:769:4, col:37> col:37 referenced __rhs 'const time_point<_Clock, _Dur2> &'
| | |   `-CompoundStmt 0xd26e18 <line:770:7, col:70>
| | |     `-ReturnStmt 0xd26e08 <col:9, col:67>
| | |       `-CXXOperatorCallExpr 0xd26dd0 <col:16, col:67> '<dependent type>'
| | |         |-UnresolvedLookupExpr 0xd26d80 <col:41> '<overloaded function type>' lvalue (ADL) = 'operator==' 0xd26c08 0xd188d8
| | |         |-CallExpr 0xd26cd8 <col:16, col:39> '<dependent type>'
| | |         | `-CXXDependentScopeMemberExpr 0xd26c90 <col:16, col:22> '<dependent type>' lvalue .time_since_epoch
| | |         |   `-DeclRefExpr 0xd26c70 <col:16> 'const time_point<_Clock, _Dur1>' lvalue ParmVar 0xd268b8 '__lhs' 'const time_point<_Clock, _Dur1> &'
| | |         `-CallExpr 0xd26d60 <col:44, col:67> '<dependent type>'
| | |           `-CXXDependentScopeMemberExpr 0xd26d18 <col:44, col:50> '<dependent type>' lvalue .time_since_epoch
| | |             `-DeclRefExpr 0xd26cf8 <col:44> 'const time_point<_Clock, _Dur2>' lvalue ParmVar 0xd26a58 '__rhs' 'const time_point<_Clock, _Dur2> &'
| | |-FunctionTemplateDecl 0xd27428 <line:772:5, line:776:35> line:774:7 operator!=
| | | |-TemplateTypeParmDecl 0xd26e30 <line:772:14, col:23> col:23 referenced typename depth 0 index 0 _Clock
| | | |-TemplateTypeParmDecl 0xd26ea8 <col:31, col:40> col:40 referenced typename depth 0 index 1 _Dur1
| | | |-TemplateTypeParmDecl 0xd26f28 <col:47, col:56> col:56 referenced typename depth 0 index 2 _Dur2
| | | `-FunctionDecl 0xd27388 <line:773:7, line:776:35> line:774:7 constexpr operator!= 'bool (const time_point<_Clock, _Dur1> &, const time_point<_Clock, _Dur2> &)'
| | |   |-ParmVarDecl 0xd27118 <col:18, col:51> col:51 referenced __lhs 'const time_point<_Clock, _Dur1> &'
| | |   |-ParmVarDecl 0xd272b8 <line:775:4, col:37> col:37 referenced __rhs 'const time_point<_Clock, _Dur2> &'
| | |   `-CompoundStmt 0xd275a0 <line:776:7, col:35>
| | |     `-ReturnStmt 0xd27590 <col:9, col:32>
| | |       `-UnaryOperator 0xd27578 <col:16, col:32> '<dependent type>' prefix '!' cannot overflow
| | |         `-ParenExpr 0xd27558 <col:17, col:32> '<dependent type>'
| | |           `-CXXOperatorCallExpr 0xd27520 <col:18, col:27> '<dependent type>'
| | |             |-UnresolvedLookupExpr 0xd274d0 <col:24> '<overloaded function type>' lvalue (ADL) = 'operator==' 0xd26c08 0xd188d8
| | |             |-DeclRefExpr 0xd27490 <col:18> 'const time_point<_Clock, _Dur1>' lvalue ParmVar 0xd27118 '__lhs' 'const time_point<_Clock, _Dur1> &'
| | |             `-DeclRefExpr 0xd274b0 <col:27> 'const time_point<_Clock, _Dur2>' lvalue ParmVar 0xd272b8 '__rhs' 'const time_point<_Clock, _Dur2> &'
| | |-FunctionTemplateDecl 0xd27bb8 <line:778:5, line:782:70> line:780:7 operator<
| | | |-TemplateTypeParmDecl 0xd275b8 <line:778:14, col:23> col:23 referenced typename depth 0 index 0 _Clock
| | | |-TemplateTypeParmDecl 0xd27638 <col:31, col:40> col:40 referenced typename depth 0 index 1 _Dur1
| | | |-TemplateTypeParmDecl 0xd276b8 <col:47, col:56> col:56 referenced typename depth 0 index 2 _Dur2
| | | `-FunctionDecl 0xd27b18 <line:779:7, line:782:70> line:780:7 constexpr operator< 'bool (const time_point<_Clock, _Dur1> &, const time_point<_Clock, _Dur2> &)'
| | |   |-ParmVarDecl 0xd278a8 <col:17, col:50> col:50 referenced __lhs 'const time_point<_Clock, _Dur1> &'
| | |   |-ParmVarDecl 0xd27a48 <line:781:3, col:36> col:36 referenced __rhs 'const time_point<_Clock, _Dur2> &'
| | |   `-CompoundStmt 0xd27dc8 <line:782:7, col:70>
| | |     `-ReturnStmt 0xd27db8 <col:9, col:67>
| | |       `-CXXOperatorCallExpr 0xd27d80 <col:17, col:67> '<dependent type>'
| | |         |-UnresolvedLookupExpr 0xd27d30 <col:42> '<overloaded function type>' lvalue (ADL) = 'operator<' 0xd27bb8 0xd19778
| | |         |-CallExpr 0xd27c88 <col:17, col:40> '<dependent type>'
| | |         | `-CXXDependentScopeMemberExpr 0xd27c40 <col:17, col:23> '<dependent type>' lvalue .time_since_epoch
| | |         |   `-DeclRefExpr 0xd27c20 <col:17> 'const time_point<_Clock, _Dur1>' lvalue ParmVar 0xd278a8 '__lhs' 'const time_point<_Clock, _Dur1> &'
| | |         `-CallExpr 0xd27d10 <col:44, col:67> '<dependent type>'
| | |           `-CXXDependentScopeMemberExpr 0xd27cc8 <col:44, col:50> '<dependent type>' lvalue .time_since_epoch
| | |             `-DeclRefExpr 0xd27ca8 <col:44> 'const time_point<_Clock, _Dur2>' lvalue ParmVar 0xd27a48 '__rhs' 'const time_point<_Clock, _Dur2> &'
| | |-FunctionTemplateDecl 0xd283d8 <line:784:5, line:788:34> line:786:7 operator<=
| | | |-TemplateTypeParmDecl 0xd27de0 <line:784:14, col:23> col:23 referenced typename depth 0 index 0 _Clock
| | | |-TemplateTypeParmDecl 0xd27e58 <col:31, col:40> col:40 referenced typename depth 0 index 1 _Dur1
| | | |-TemplateTypeParmDecl 0xd27ed8 <col:47, col:56> col:56 referenced typename depth 0 index 2 _Dur2
| | | `-FunctionDecl 0xd28338 <line:785:7, line:788:34> line:786:7 constexpr operator<= 'bool (const time_point<_Clock, _Dur1> &, const time_point<_Clock, _Dur2> &)'
| | |   |-ParmVarDecl 0xd280c8 <col:18, col:51> col:51 referenced __lhs 'const time_point<_Clock, _Dur1> &'
| | |   |-ParmVarDecl 0xd28268 <line:787:4, col:37> col:37 referenced __rhs 'const time_point<_Clock, _Dur2> &'
| | |   `-CompoundStmt 0xd28550 <line:788:7, col:34>
| | |     `-ReturnStmt 0xd28540 <col:9, col:31>
| | |       `-UnaryOperator 0xd28528 <col:16, col:31> '<dependent type>' prefix '!' cannot overflow
| | |         `-ParenExpr 0xd28508 <col:17, col:31> '<dependent type>'
| | |           `-CXXOperatorCallExpr 0xd284d0 <col:18, col:26> '<dependent type>'
| | |             |-UnresolvedLookupExpr 0xd28480 <col:24> '<overloaded function type>' lvalue (ADL) = 'operator<' 0xd27bb8 0xd19778
| | |             |-DeclRefExpr 0xd28440 <col:18> 'const time_point<_Clock, _Dur2>' lvalue ParmVar 0xd28268 '__rhs' 'const time_point<_Clock, _Dur2> &'
| | |             `-DeclRefExpr 0xd28460 <col:26> 'const time_point<_Clock, _Dur1>' lvalue ParmVar 0xd280c8 '__lhs' 'const time_point<_Clock, _Dur1> &'
| | |-FunctionTemplateDecl 0xd28c10 <line:790:5, line:794:31> line:792:7 operator>
| | | |-TemplateTypeParmDecl 0xd28568 <line:790:14, col:23> col:23 referenced typename depth 0 index 0 _Clock
| | | |-TemplateTypeParmDecl 0xd285e8 <col:31, col:40> col:40 referenced typename depth 0 index 1 _Dur1
| | | |-TemplateTypeParmDecl 0xd28668 <col:47, col:56> col:56 referenced typename depth 0 index 2 _Dur2
| | | `-FunctionDecl 0xd28b70 <line:791:7, line:794:31> line:792:7 constexpr operator> 'bool (const time_point<_Clock, _Dur1> &, const time_point<_Clock, _Dur2> &)'
| | |   |-ParmVarDecl 0xd28858 <col:17, col:50> col:50 referenced __lhs 'const time_point<_Clock, _Dur1> &'
| | |   |-ParmVarDecl 0xd289f8 <line:793:3, col:36> col:36 referenced __rhs 'const time_point<_Clock, _Dur2> &'
| | |   `-CompoundStmt 0xd28d50 <line:794:7, col:31>
| | |     `-ReturnStmt 0xd28d40 <col:9, col:24>
| | |       `-CXXOperatorCallExpr 0xd28d08 <col:16, col:24> '<dependent type>'
| | |         |-UnresolvedLookupExpr 0xd28cb8 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator<' 0xd27bb8 0xd19778
| | |         |-DeclRefExpr 0xd28c78 <col:16> 'const time_point<_Clock, _Dur2>' lvalue ParmVar 0xd289f8 '__rhs' 'const time_point<_Clock, _Dur2> &'
| | |         `-DeclRefExpr 0xd28c98 <col:24> 'const time_point<_Clock, _Dur1>' lvalue ParmVar 0xd28858 '__lhs' 'const time_point<_Clock, _Dur1> &'
| | |-FunctionTemplateDecl 0xd29368 <line:796:5, line:800:34> line:798:7 operator>=
| | | |-TemplateTypeParmDecl 0xd28d68 <line:796:14, col:23> col:23 referenced typename depth 0 index 0 _Clock
| | | |-TemplateTypeParmDecl 0xd28de8 <col:31, col:40> col:40 referenced typename depth 0 index 1 _Dur1
| | | |-TemplateTypeParmDecl 0xd28e68 <col:47, col:56> col:56 referenced typename depth 0 index 2 _Dur2
| | | `-FunctionDecl 0xd292c8 <line:797:7, line:800:34> line:798:7 constexpr operator>= 'bool (const time_point<_Clock, _Dur1> &, const time_point<_Clock, _Dur2> &)'
| | |   |-ParmVarDecl 0xd29058 <col:18, col:51> col:51 referenced __lhs 'const time_point<_Clock, _Dur1> &'
| | |   |-ParmVarDecl 0xd291f8 <line:799:4, col:37> col:37 referenced __rhs 'const time_point<_Clock, _Dur2> &'
| | |   `-CompoundStmt 0xd294e0 <line:800:7, col:34>
| | |     `-ReturnStmt 0xd294d0 <col:9, col:31>
| | |       `-UnaryOperator 0xd294b8 <col:16, col:31> '<dependent type>' prefix '!' cannot overflow
| | |         `-ParenExpr 0xd29498 <col:17, col:31> '<dependent type>'
| | |           `-CXXOperatorCallExpr 0xd29460 <col:18, col:26> '<dependent type>'
| | |             |-UnresolvedLookupExpr 0xd29410 <col:24> '<overloaded function type>' lvalue (ADL) = 'operator<' 0xd27bb8 0xd19778
| | |             |-DeclRefExpr 0xd293d0 <col:18> 'const time_point<_Clock, _Dur1>' lvalue ParmVar 0xd29058 '__lhs' 'const time_point<_Clock, _Dur1> &'
| | |             `-DeclRefExpr 0xd293f0 <col:26> 'const time_point<_Clock, _Dur2>' lvalue ParmVar 0xd291f8 '__rhs' 'const time_point<_Clock, _Dur2> &'
| | `-NamespaceDecl 0xd294f8 <line:821:5, line:890:5> line:821:22 _V2 inline
| |   |-CXXRecordDecl 0xd29568 <line:828:5, line:859:5> line:828:12 referenced struct system_clock definition
| |   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | | |-MoveConstructor exists simple trivial needs_implicit
| |   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | | |-MoveAssignment exists simple trivial needs_implicit
| |   | | `-Destructor simple irrelevant trivial needs_implicit
| |   | |-CXXRecordDecl 0xd29688 <col:5, col:12> col:12 implicit referenced struct system_clock
| |   | |-TypedefDecl 0xd297d0 <line:830:7, col:43> col:43 referenced duration 'chrono::nanoseconds':'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| |   | | `-ElaboratedType 0xd29760 'chrono::nanoseconds' sugar
| |   | |   `-TypedefType 0xd29740 'std::chrono::nanoseconds' sugar
| |   | |     |-Typedef 0xd1d208 'nanoseconds'
| |   | |     `-TemplateSpecializationType 0xd1d120 'duration<int64_t, std::nano>' sugar duration
| |   | |       |-TemplateArgument type 'int64_t':'long'
| |   | |       |-TemplateArgument type 'std::nano':'std::ratio<1, 1000000000>'
| |   | |       `-RecordType 0xd1d100 'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| |   | |         `-ClassTemplateSpecialization 0xd1d000 'duration'
| |   | |-TypedefDecl 0xd34600 <line:831:7, col:37> col:37 rep 'duration::rep':'long'
| |   | | `-ElaboratedType 0xd34590 'duration::rep' sugar
| |   | |   `-TypedefType 0xd2fc30 'std::chrono::duration<long, std::ratio<1, 1000000000> >::rep' sugar
| |   | |     |-Typedef 0xd2a3f8 'rep'
| |   | |     `-SubstTemplateTypeParmType 0xd2a3c0 'long' sugar
| |   | |       |-TemplateTypeParmType 0xd011b0 '_Rep' dependent depth 0 index 0
| |   | |       | `-TemplateTypeParm 0xd01158 '_Rep'
| |   | |       `-BuiltinType 0x7db3a0 'long'
| |   | |-TypedefDecl 0xd34710 <line:832:7, col:37> col:37 period 'duration::period':'std::ratio<1, 1000000000>'
| |   | | `-ElaboratedType 0xd346a0 'duration::period' sugar
| |   | |   `-TypedefType 0xd34680 'std::chrono::duration<long, std::ratio<1, 1000000000> >::period' sugar
| |   | |     |-Typedef 0xd2a460 'period'
| |   | |     `-SubstTemplateTypeParmType 0xd29c50 'std::ratio<1, 1000000000>' sugar
| |   | |       |-TemplateTypeParmType 0xd01230 '_Period' dependent depth 0 index 1
| |   | |       | `-TemplateTypeParm 0xd011d8 '_Period'
| |   | |       `-RecordType 0xc4c1d0 'std::ratio<1, 1000000000>'
| |   | |         `-ClassTemplateSpecialization 0xc4c0d0 'ratio'
| |   | |-TypedefDecl 0xd34a10 <line:833:7, col:59> col:59 referenced time_point 'chrono::time_point<system_clock, duration>':'std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >'
| |   | | `-ElaboratedType 0xd34930 'chrono::time_point<system_clock, duration>' sugar
| |   | |   `-TemplateSpecializationType 0xd348d0 'time_point<std::chrono::_V2::system_clock, std::chrono::_V2::system_clock::duration>' sugar time_point
| |   | |     |-TemplateArgument type 'std::chrono::_V2::system_clock'
| |   | |     |-TemplateArgument type 'std::chrono::_V2::system_clock::duration':'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| |   | |     `-RecordType 0xd348b0 'std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >'
| |   | |       `-ClassTemplateSpecialization 0xd347b0 'time_point'
| |   | |-StaticAssertDecl 0xd67ad8 <line:835:7, line:837:65> line:835:7
| |   | | |-ExprWithCleanups 0xd679e8 <col:21, line:836:38> 'bool'
| |   | | | `-CXXOperatorCallExpr 0xd678e0 <line:835:21, line:836:38> 'bool'
| |   | | |   |-ImplicitCastExpr 0xd678c8 <col:7> 'bool (*)(const duration<long, std::ratio<1, 1000000000> > &, const duration<long, std::ratio<1, 1000000000> > &)' <FunctionToPointerDecay>
| |   | | |   | `-DeclRefExpr 0xd51268 <col:7> 'bool (const duration<long, std::ratio<1, 1000000000> > &, const duration<long, std::ratio<1, 1000000000> > &)' lvalue Function 0xd510b8 'operator<' 'bool (const duration<long, std::ratio<1, 1000000000> > &, const duration<long, std::ratio<1, 1000000000> > &)'
| |   | | |   |-MaterializeTemporaryExpr 0xd51220 <line:835:21, col:49> 'const std::chrono::duration<long, std::ratio<1, 1000000000> >' lvalue
| |   | | |   | `-ImplicitCastExpr 0xd51208 <col:21, col:49> 'const std::chrono::duration<long, std::ratio<1, 1000000000> >' <NoOp>
| |   | | |   |   `-CallExpr 0xd4f250 <col:21, col:49> 'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| |   | | |   |     `-ImplicitCastExpr 0xd4e828 <col:21, col:45> 'std::chrono::duration<long, std::ratio<1, 1000000000> > (*)() noexcept' <FunctionToPointerDecay>
| |   | | |   |       `-DeclRefExpr 0xd34ae8 <col:21, col:45> 'std::chrono::duration<long, std::ratio<1, 1000000000> > () noexcept' lvalue CXXMethod 0xd342c8 'min' 'std::chrono::duration<long, std::ratio<1, 1000000000> > () noexcept'
| |   | | |   `-MaterializeTemporaryExpr 0xd51250 <line:836:9, col:38> 'const std::chrono::duration<long, std::ratio<1, 1000000000> >' lvalue
| |   | | |     `-ImplicitCastExpr 0xd51238 <col:9, col:38> 'const std::chrono::duration<long, std::ratio<1, 1000000000> >' <NoOp>
| |   | | |       `-CallExpr 0xd50af8 <col:9, col:38> 'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| |   | | |         `-ImplicitCastExpr 0xd50ae0 <col:9, col:33> 'std::chrono::duration<long, std::ratio<1, 1000000000> > (*)() noexcept' <FunctionToPointerDecay>
| |   | | |           `-DeclRefExpr 0xd4f2c0 <col:9, col:33> 'std::chrono::duration<long, std::ratio<1, 1000000000> > () noexcept' lvalue CXXMethod 0xd341f0 'zero' 'std::chrono::duration<long, std::ratio<1, 1000000000> > () noexcept'
| |   | | `-StringLiteral 0xd67998 <line:837:7> 'const char [57]' lvalue "a clock's minimum duration cannot be less than its epoch"
| |   | |-VarDecl 0xd67b28 <line:839:7, col:41> col:29 is_steady 'const bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0xd67b90 <col:41> 'bool' false
| |   | |-CXXMethodDecl 0xd67cd0 <line:841:7, line:842:13> col:7 now 'std::chrono::_V2::system_clock::time_point () noexcept' static
| |   | |-CXXMethodDecl 0xd67f40 <line:845:7, line:850:7> line:846:7 to_time_t 'std::time_t (const std::chrono::_V2::system_clock::time_point &) noexcept' static
| |   | | |-ParmVarDecl 0xd67e38 <col:17, col:35> col:35 used __t 'const std::chrono::_V2::system_clock::time_point &'
| |   | | `-CompoundStmt 0xd95500 <line:847:7, line:850:7>
| |   | |   `-ReturnStmt 0xd954f0 <line:848:2, line:849:39>
| |   | |     `-ExprWithCleanups 0xd954d8 <line:848:9, line:849:39> 'std::time_t':'long'
| |   | |       `-CXXFunctionalCastExpr 0xd954b0 <line:848:9, line:849:39> 'std::time_t':'long' functional cast to std::time_t <NoOp>
| |   | |         `-CXXMemberCallExpr 0xd95478 <line:848:21, line:849:38> 'std::chrono::duration<long, std::ratio<1, 1> >::rep':'long'
| |   | |           `-MemberExpr 0xd95370 <line:848:21, line:849:32> '<bound member function type>' .count 0xb91e18
| |   | |             `-ImplicitCastExpr 0xd95498 <line:848:21, line:849:30> 'const std::chrono::duration<long, std::ratio<1, 1> >' xvalue <NoOp>
| |   | |               `-MaterializeTemporaryExpr 0xd95358 <line:848:21, line:849:30> '__enable_if_is_duration<std::chrono::duration<long, std::ratio<1, 1> > >':'std::chrono::duration<long, std::ratio<1, 1> >' xvalue
| |   | |                 `-CallExpr 0xd95300 <line:848:21, line:849:30> '__enable_if_is_duration<std::chrono::duration<long, std::ratio<1, 1> > >':'std::chrono::duration<long, std::ratio<1, 1> >'
| |   | |                   |-ImplicitCastExpr 0xd952e8 <line:848:21, col:50> '__enable_if_is_duration<std::chrono::duration<long, std::ratio<1, 1> > > (*)(const duration<long, std::ratio<1, 1000000000> > &)' <FunctionToPointerDecay>
| |   | |                   | `-DeclRefExpr 0xb8db38 <col:21, col:50> '__enable_if_is_duration<std::chrono::duration<long, std::ratio<1, 1> > > (const duration<long, std::ratio<1, 1000000000> > &)' lvalue Function 0xb8da08 'duration_cast' '__enable_if_is_duration<std::chrono::duration<long, std::ratio<1, 1> > > (const duration<long, std::ratio<1, 1000000000> > &)' (FunctionTemplate 0xcfc0b8 'duration_cast')
| |   | |                   `-MaterializeTemporaryExpr 0xd95340 <line:849:8, col:29> 'const std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >::duration':'const std::chrono::duration<long, std::ratio<1, 1000000000> >' lvalue
| |   | |                     `-ImplicitCastExpr 0xd95328 <col:8, col:29> 'const std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >::duration':'const std::chrono::duration<long, std::ratio<1, 1000000000> >' <NoOp>
| |   | |                       `-CXXMemberCallExpr 0xb8c658 <col:8, col:29> 'std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >::duration':'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| |   | |                         `-MemberExpr 0xd6ccd0 <col:8, col:12> '<bound member function type>' .time_since_epoch 0xd69938
| |   | |                           `-DeclRefExpr 0xd68360 <col:8> 'const std::chrono::_V2::system_clock::time_point':'const std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >' lvalue ParmVar 0xd67e38 '__t' 'const std::chrono::_V2::system_clock::time_point &'
| |   | `-CXXMethodDecl 0xd68130 <line:852:7, line:858:7> line:853:7 from_time_t 'std::chrono::_V2::system_clock::time_point (std::time_t) noexcept' static
| |   |   |-ParmVarDecl 0xd68038 <col:19, col:31> col:31 used __t 'std::time_t':'long'
| |   |   `-CompoundStmt 0xdbd378 <line:854:7, line:858:7>
| |   |     |-DeclStmt 0xd957f8 <line:855:2, col:58>
| |   |     | `-TypedefDecl 0xd957a0 <col:2, col:52> col:52 referenced __from 'chrono::time_point<system_clock, seconds>':'std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1> > >'
| |   |     |   `-ElaboratedType 0xd956c0 'chrono::time_point<system_clock, seconds>' sugar
| |   |     |     `-TemplateSpecializationType 0xd95660 'time_point<std::chrono::_V2::system_clock, std::chrono::seconds>' sugar time_point
| |   |     |       |-TemplateArgument type 'std::chrono::_V2::system_clock'
| |   |     |       |-TemplateArgument type 'std::chrono::seconds':'std::chrono::duration<long, std::ratio<1, 1> >'
| |   |     |       `-RecordType 0xd95640 'std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1> > >'
| |   |     |         `-ClassTemplateSpecialization 0xd95548 'time_point'
| |   |     `-ReturnStmt 0xdbd368 <line:856:2, line:857:38>
| |   |       `-ExprWithCleanups 0xdbd350 <line:856:9, line:857:38> 'std::chrono::_V2::system_clock::time_point':'std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >'
| |   |         `-CXXConstructExpr 0xdbd320 <line:856:9, line:857:38> 'std::chrono::_V2::system_clock::time_point':'std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >' 'void (std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &&) noexcept' elidable
| |   |           `-MaterializeTemporaryExpr 0xdbd308 <line:856:9, line:857:38> 'typename enable_if<__is_duration<duration<long, ratio<1, 1000000000> > >::value, time_point<system_clock, duration<long, ratio<1, 1000000000> > > >::type':'std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >' xvalue
| |   |             `-CallExpr 0xdbce60 <line:856:9, line:857:38> 'typename enable_if<__is_duration<duration<long, ratio<1, 1000000000> > >::value, time_point<system_clock, duration<long, ratio<1, 1000000000> > > >::type':'std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >'
| |   |               |-ImplicitCastExpr 0xdbce48 <line:856:9, col:47> 'typename enable_if<__is_duration<duration<long, ratio<1, 1000000000> > >::value, time_point<system_clock, duration<long, ratio<1, 1000000000> > > >::type (*)(const time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1> > > &)' <FunctionToPointerDecay>
| |   |               | `-DeclRefExpr 0xda4e68 <col:9, col:47> 'typename enable_if<__is_duration<duration<long, ratio<1, 1000000000> > >::value, time_point<system_clock, duration<long, ratio<1, 1000000000> > > >::type (const time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1> > > &)' lvalue Function 0xda4d38 'time_point_cast' 'typename enable_if<__is_duration<duration<long, ratio<1, 1000000000> > >::value, time_point<system_clock, duration<long, ratio<1, 1000000000> > > >::type (const time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1> > > &)' (FunctionTemplate 0xd20f38 'time_point_cast')
| |   |               `-MaterializeTemporaryExpr 0xdbcea0 <line:857:10, col:37> 'const __from':'const std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1> > >' lvalue
| |   |                 `-ImplicitCastExpr 0xdbce88 <col:10, col:37> 'const __from':'const std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1> > >' <NoOp>
| |   |                   `-CXXFunctionalCastExpr 0xda17d0 <col:10, col:37> '__from':'std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1> > >' functional cast to __from <ConstructorConversion>
| |   |                     `-CXXConstructExpr 0xda17a0 <col:10, col:37> '__from':'std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1> > >' 'void (const std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1, 1> > >::duration &)'
| |   |                       `-MaterializeTemporaryExpr 0xda0328 <col:17, col:36> 'const chrono::seconds':'const std::chrono::duration<long, std::ratio<1, 1> >' lvalue
| |   |                         `-ImplicitCastExpr 0xda0310 <col:17, col:36> 'const chrono::seconds':'const std::chrono::duration<long, std::ratio<1, 1> >' <NoOp>
| |   |                           `-CXXFunctionalCastExpr 0xd961f0 <col:17, col:36> 'chrono::seconds':'std::chrono::duration<long, std::ratio<1, 1> >' functional cast to chrono::seconds <ConstructorConversion>
| |   |                             `-CXXConstructExpr 0xd961c0 <col:17, col:36> 'chrono::seconds':'std::chrono::duration<long, std::ratio<1, 1> >' 'void (const long &)'
| |   |                               `-ImplicitCastExpr 0xd961a8 <col:33> 'const long':'const long' lvalue <NoOp>
| |   |                                 `-DeclRefExpr 0xd959a8 <col:33> 'std::time_t':'long' lvalue ParmVar 0xd68038 '__t' 'std::time_t':'long'
| |   |-CXXRecordDecl 0xdbd398 <line:867:5, line:878:5> line:867:12 struct steady_clock definition
| |   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | | |-MoveConstructor exists simple trivial needs_implicit
| |   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |   | | |-MoveAssignment exists simple trivial needs_implicit
| |   | | `-Destructor simple irrelevant trivial needs_implicit
| |   | |-CXXRecordDecl 0xdbd4b8 <col:5, col:12> col:12 implicit referenced struct steady_clock
| |   | |-TypedefDecl 0xdbd598 <line:869:7, col:39> col:39 referenced duration 'chrono::nanoseconds':'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| |   | | `-ElaboratedType 0xd29760 'chrono::nanoseconds' sugar
| |   | |   `-TypedefType 0xd29740 'std::chrono::nanoseconds' sugar
| |   | |     |-Typedef 0xd1d208 'nanoseconds'
| |   | |     `-TemplateSpecializationType 0xd1d120 'duration<int64_t, std::nano>' sugar duration
| |   | |       |-TemplateArgument type 'int64_t':'long'
| |   | |       |-TemplateArgument type 'std::nano':'std::ratio<1, 1000000000>'
| |   | |       `-RecordType 0xd1d100 'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| |   | |         `-ClassTemplateSpecialization 0xd1d000 'duration'
| |   | |-TypedefDecl 0xdbd6c0 <line:870:7, col:35> col:35 rep 'duration::rep':'long'
| |   | | `-ElaboratedType 0xdbd650 'duration::rep' sugar
| |   | |   `-TypedefType 0xd2fc30 'std::chrono::duration<long, std::ratio<1, 1000000000> >::rep' sugar
| |   | |     |-Typedef 0xd2a3f8 'rep'
| |   | |     `-SubstTemplateTypeParmType 0xd2a3c0 'long' sugar
| |   | |       |-TemplateTypeParmType 0xd011b0 '_Rep' dependent depth 0 index 0
| |   | |       | `-TemplateTypeParm 0xd01158 '_Rep'
| |   | |       `-BuiltinType 0x7db3a0 'long'
| |   | |-TypedefDecl 0xdbd7b0 <line:871:7, col:38> col:38 period 'duration::period':'std::ratio<1, 1000000000>'
| |   | | `-ElaboratedType 0xdbd740 'duration::period' sugar
| |   | |   `-TypedefType 0xd34680 'std::chrono::duration<long, std::ratio<1, 1000000000> >::period' sugar
| |   | |     |-Typedef 0xd2a460 'period'
| |   | |     `-SubstTemplateTypeParmType 0xd29c50 'std::ratio<1, 1000000000>' sugar
| |   | |       |-TemplateTypeParmType 0xd01230 '_Period' dependent depth 0 index 1
| |   | |       | `-TemplateTypeParm 0xd011d8 '_Period'
| |   | |       `-RecordType 0xc4c1d0 'std::ratio<1, 1000000000>'
| |   | |         `-ClassTemplateSpecialization 0xc4c0d0 'ratio'
| |   | |-TypedefDecl 0xdbda90 <line:872:7, col:59> col:59 referenced time_point 'chrono::time_point<steady_clock, duration>':'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >'
| |   | | `-ElaboratedType 0xdbd9b0 'chrono::time_point<steady_clock, duration>' sugar
| |   | |   `-TemplateSpecializationType 0xdbd950 'time_point<std::chrono::_V2::steady_clock, std::chrono::_V2::steady_clock::duration>' sugar time_point
| |   | |     |-TemplateArgument type 'std::chrono::_V2::steady_clock'
| |   | |     |-TemplateArgument type 'std::chrono::_V2::steady_clock::duration':'std::chrono::duration<long, std::ratio<1, 1000000000> >'
| |   | |     `-RecordType 0xdbd930 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >'
| |   | |       `-ClassTemplateSpecialization 0xdbd838 'time_point'
| |   | |-VarDecl 0xdbdaf8 <line:874:7, col:41> col:29 is_steady 'const bool' static constexpr cinit
| |   | | `-CXXBoolLiteralExpr 0xdbdb60 <col:41> 'bool' true
| |   | `-CXXMethodDecl 0xdbdca0 <line:876:7, line:877:13> col:7 used now 'std::chrono::_V2::steady_clock::time_point () noexcept' static
| |   `-TypeAliasDecl 0xdbdd68 <line:888:5, col:35> col:11 high_resolution_clock 'std::chrono::_V2::system_clock'
| |     `-RecordType 0xd29600 'std::chrono::_V2::system_clock'
| |       `-CXXRecord 0xd29568 'system_clock'
| |-NamespaceDecl 0xdbddc8 <line:897:3, line:969:3> line:897:20 literals inline
| | `-NamespaceDecl 0xdbde38 <line:899:3, line:968:3> line:899:20 chrono_literals inline
| |   |-FunctionTemplateDecl 0xdbe0a8 <line:903:5, line:911:7> line:904:22 __check_overflow
| |   | |-TemplateTypeParmDecl 0xdbdea8 <line:903:14, col:23> col:23 referenced typename depth 0 index 0 _Dur
| |   | |-NonTypeTemplateParmDecl 0xdbdf38 <col:29, col:37> col:37 referenced 'char' depth 0 index 1 ... _Digits
| |   | `-FunctionDecl 0xdbe008 <line:904:7, line:911:7> line:904:22 constexpr __check_overflow '_Dur ()'
| |   |   `-CompoundStmt 0xdbe7d8 <line:905:7, line:911:7>
| |   |     |-DeclStmt 0xdbe330 <line:906:2, col:50>
| |   |     | `-TypeAliasDecl 0xdbe2d0 <col:2, col:49> col:8 referenced _Val '__parse_int::_Parse_int<_Digits...>':'_Parse_int<_Digits...>'
| |   |     |   `-ElaboratedType 0xdbe220 '__parse_int::_Parse_int<_Digits...>' sugar dependent
| |   |     |     `-TemplateSpecializationType 0xdbe1e0 '_Parse_int<_Digits...>' dependent _Parse_int
| |   |     |       `-TemplateArgument expr
| |   |     |         `-PackExpansionExpr 0xdbe150 <col:39, col:46> 'char'
| |   |     |           `-DeclRefExpr 0xdbe100 <col:39> 'char' NonTypeTemplateParm 0xdbdf38 '_Digits' 'char'
| |   |     |-DeclStmt 0xdbe508 <line:907:2, col:53>
| |   |     | `-VarDecl 0xdbe3f0 <col:2, col:48> col:31 referenced __repval 'const typename _Dur::rep' constexpr cinit
| |   |     |   `-DependentScopeDeclRefExpr 0xdbe4d0 <col:42, col:48> '<dependent type>' lvalue
| |   |     |-DeclStmt 0xdbe758 <line:908:2, line:909:64>
| |   |     | `-StaticAssertDecl 0xdbe718 <line:908:2, line:909:63> line:908:2
| |   |     |   |-BinaryOperator 0xdbe630 <col:16, col:51> '<dependent type>' '&&'
| |   |     |   | |-BinaryOperator 0xdbe560 <col:16, col:28> '<dependent type>' '>='
| |   |     |   | | |-DeclRefExpr 0xdbe520 <col:16> 'const typename _Dur::rep' lvalue Var 0xdbe3f0 '__repval' 'const typename _Dur::rep'
| |   |     |   | | `-IntegerLiteral 0xdbe540 <col:28> 'int' 0
| |   |     |   | `-BinaryOperator 0xdbe610 <col:33, col:51> '<dependent type>' '=='
| |   |     |   |   |-DeclRefExpr 0xdbe580 <col:33> 'const typename _Dur::rep' lvalue Var 0xdbe3f0 '__repval' 'const typename _Dur::rep'
| |   |     |   |   `-DependentScopeDeclRefExpr 0xdbe5d8 <col:45, col:51> '<dependent type>' lvalue
| |   |     |   `-StringLiteral 0xdbe6c8 <line:909:9> 'const char [53]' lvalue "literal value cannot be represented by duration type"
| |   |     `-ReturnStmt 0xdbe7c8 <line:910:2, col:22>
| |   |       `-CXXUnresolvedConstructExpr 0xdbe7a0 <col:9, col:22> '_Dur' '_Dur'
| |   |         `-DeclRefExpr 0xdbe780 <col:14> 'const typename _Dur::rep' lvalue Var 0xdbe3f0 '__repval' 'const typename _Dur::rep'
| |   |-FunctionDecl 0xdbed60 <line:913:5, line:915:69> line:914:5 constexpr operator""h 'chrono::duration<long double, ratio<3600, 1> > (long double)'
| |   | |-ParmVarDecl 0xdbec00 <col:17, col:29> col:29 used __hours 'long double'
| |   | `-CompoundStmt 0xdd8c08 <line:915:5, col:69>
| |   |   `-ReturnStmt 0xdd8bf8 <col:7, col:66>
| |   |     `-ExprWithCleanups 0xdd8be0 <col:14, col:66> 'chrono::duration<long double, ratio<3600, 1> >':'std::chrono::duration<long double, std::ratio<3600, 1> >'
| |   |       `-CXXConstructExpr 0xdd8bb0 <col:14, col:66> 'chrono::duration<long double, ratio<3600, 1> >':'std::chrono::duration<long double, std::ratio<3600, 1> >' 'void (const std::chrono::duration<long double, std::ratio<3600, 1> > &) noexcept' elidable
| |   |         `-MaterializeTemporaryExpr 0xdd8aa8 <col:14, col:66> 'const chrono::duration<long double, ratio<3600, 1> >':'const std::chrono::duration<long double, std::ratio<3600, 1> >' lvalue
| |   |           `-ImplicitCastExpr 0xdd8a90 <col:14, col:66> 'const chrono::duration<long double, ratio<3600, 1> >':'const std::chrono::duration<long double, std::ratio<3600, 1> >' <NoOp>
| |   |             `-CXXTemporaryObjectExpr 0xdd0248 <col:14, col:66> 'chrono::duration<long double, ratio<3600, 1> >':'std::chrono::duration<long double, std::ratio<3600, 1> >' 'void (const long double &)' list
| |   |               `-ImplicitCastExpr 0xdd0168 <col:59> 'const long double':'const long double' lvalue <NoOp>
| |   |                 `-DeclRefExpr 0xdc68d8 <col:59> 'long double' lvalue ParmVar 0xdbec00 '__hours' 'long double'
| |   |-FunctionTemplateDecl 0xdd8e58 <line:917:5, line:920:63> line:919:7 operator""h
| |   | |-NonTypeTemplateParmDecl 0xdd8c30 <line:917:15, col:23> col:23 referenced 'char' depth 0 index 0 ... _Digits
| |   | `-FunctionDecl 0xdd8db8 <line:918:7, line:920:63> line:919:7 constexpr operator""h 'chrono::hours ()'
| |   |   `-CompoundStmt 0xddf458 <line:920:7, col:63>
| |   |     `-ReturnStmt 0xddf448 <col:9, col:60>
| |   |       `-CallExpr 0xddf428 <col:16, col:60> '<dependent type>'
| |   |         `-UnresolvedLookupExpr 0xddf370 <col:16, col:58> '<dependent type>' lvalue (ADL) = '__check_overflow' 0xdbe0a8
| |   |-FunctionDecl 0xddf9b0 <line:922:5, line:924:66> line:923:5 constexpr operator""min 'chrono::duration<long double, ratio<60, 1> > (long double)'
| |   | |-ParmVarDecl 0xddf850 <col:19, col:31> col:31 used __mins 'long double'
| |   | `-CompoundStmt 0xdf2598 <line:924:5, col:66>
| |   |   `-ReturnStmt 0xdf2588 <col:7, col:63>
| |   |     `-ExprWithCleanups 0xdf2570 <col:14, col:63> 'chrono::duration<long double, ratio<60, 1> >':'std::chrono::duration<long double, std::ratio<60, 1> >'
| |   |       `-CXXConstructExpr 0xdf2540 <col:14, col:63> 'chrono::duration<long double, ratio<60, 1> >':'std::chrono::duration<long double, std::ratio<60, 1> >' 'void (const std::chrono::duration<long double, std::ratio<60, 1> > &) noexcept' elidable
| |   |         `-MaterializeTemporaryExpr 0xdf2438 <col:14, col:63> 'const chrono::duration<long double, ratio<60, 1> >':'const std::chrono::duration<long double, std::ratio<60, 1> >' lvalue
| |   |           `-ImplicitCastExpr 0xdf2420 <col:14, col:63> 'const chrono::duration<long double, ratio<60, 1> >':'const std::chrono::duration<long double, std::ratio<60, 1> >' <NoOp>
| |   |             `-CXXTemporaryObjectExpr 0xde93b8 <col:14, col:63> 'chrono::duration<long double, ratio<60, 1> >':'std::chrono::duration<long double, std::ratio<60, 1> >' 'void (const long double &)' list
| |   |               `-ImplicitCastExpr 0xde92d8 <col:57> 'const long double':'const long double' lvalue <NoOp>
| |   |                 `-DeclRefExpr 0xde8838 <col:57> 'long double' lvalue ParmVar 0xddf850 '__mins' 'long double'
| |   |-FunctionTemplateDecl 0xdf27e8 <line:926:5, line:929:65> line:928:7 operator""min
| |   | |-NonTypeTemplateParmDecl 0xdf25c0 <line:926:15, col:23> col:23 referenced 'char' depth 0 index 0 ... _Digits
| |   | `-FunctionDecl 0xdf2748 <line:927:7, line:929:65> line:928:7 constexpr operator""min 'chrono::minutes ()'
| |   |   `-CompoundStmt 0xdf8278 <line:929:7, col:65>
| |   |     `-ReturnStmt 0xdf8268 <col:9, col:62>
| |   |       `-CallExpr 0xdf8248 <col:16, col:62> '<dependent type>'
| |   |         `-UnresolvedLookupExpr 0xdf8190 <col:16, col:60> '<dependent type>' lvalue (ADL) = '__check_overflow' 0xdbe0a8
| |   |-FunctionDecl 0xdf85d8 <line:931:5, line:933:53> line:932:5 constexpr operator""s 'chrono::duration<long double> (long double)'
| |   | |-ParmVarDecl 0xdf8498 <col:17, col:29> col:29 used __secs 'long double'
| |   | `-CompoundStmt 0xe025d8 <line:933:5, col:53>
| |   |   `-ReturnStmt 0xe025c8 <col:7, col:50>
| |   |     `-ExprWithCleanups 0xe025b0 <col:14, col:50> 'chrono::duration<long double>':'std::chrono::duration<long double, std::ratio<1, 1> >'
| |   |       `-CXXConstructExpr 0xe02580 <col:14, col:50> 'chrono::duration<long double>':'std::chrono::duration<long double, std::ratio<1, 1> >' 'void (const std::chrono::duration<long double, std::ratio<1, 1> > &) noexcept' elidable
| |   |         `-MaterializeTemporaryExpr 0xe02470 <col:14, col:50> 'const chrono::duration<long double>':'const std::chrono::duration<long double, std::ratio<1, 1> >' lvalue
| |   |           `-ImplicitCastExpr 0xe02458 <col:14, col:50> 'const chrono::duration<long double>':'const std::chrono::duration<long double, std::ratio<1, 1> >' <NoOp>
| |   |             `-CXXTemporaryObjectExpr 0xe00a08 <col:14, col:50> 'chrono::duration<long double>':'std::chrono::duration<long double, std::ratio<1, 1> >' 'void (const long double &)' list
| |   |               `-ImplicitCastExpr 0xe00928 <col:44> 'const long double':'const long double' lvalue <NoOp>
| |   |                 `-DeclRefExpr 0xdffe88 <col:44> 'long double' lvalue ParmVar 0xdf8498 '__secs' 'long double'
| |   |-FunctionTemplateDecl 0xe027a8 <line:935:5, line:938:65> line:937:7 operator""s
| |   | |-NonTypeTemplateParmDecl 0xe02600 <line:935:15, col:23> col:23 referenced 'char' depth 0 index 0 ... _Digits
| |   | `-FunctionDecl 0xe02708 <line:936:7, line:938:65> line:937:7 constexpr operator""s 'chrono::seconds ()'
| |   |   `-CompoundStmt 0xe02970 <line:938:7, col:65>
| |   |     `-ReturnStmt 0xe02960 <col:9, col:62>
| |   |       `-CallExpr 0xe02940 <col:16, col:62> '<dependent type>'
| |   |         `-UnresolvedLookupExpr 0xe02888 <col:16, col:60> '<dependent type>' lvalue (ADL) = '__check_overflow' 0xdbe0a8
| |   |-FunctionDecl 0xe02d40 <line:940:5, line:942:61> line:941:5 constexpr operator""ms 'chrono::duration<long double, milli> (long double)'
| |   | |-ParmVarDecl 0xe02be0 <col:18, col:30> col:30 used __msecs 'long double'
| |   | `-CompoundStmt 0xe12c48 <line:942:5, col:61>
| |   |   `-ReturnStmt 0xe12c38 <col:7, col:58>
| |   |     `-ExprWithCleanups 0xe12c20 <col:14, col:58> 'chrono::duration<long double, milli>':'std::chrono::duration<long double, std::ratio<1, 1000> >'
| |   |       `-CXXConstructExpr 0xe12bf0 <col:14, col:58> 'chrono::duration<long double, milli>':'std::chrono::duration<long double, std::ratio<1, 1000> >' 'void (const std::chrono::duration<long double, std::ratio<1, 1000> > &) noexcept' elidable
| |   |         `-MaterializeTemporaryExpr 0xe12ae8 <col:14, col:58> 'const chrono::duration<long double, milli>':'const std::chrono::duration<long double, std::ratio<1, 1000> >' lvalue
| |   |           `-ImplicitCastExpr 0xe12ad0 <col:14, col:58> 'const chrono::duration<long double, milli>':'const std::chrono::duration<long double, std::ratio<1, 1000> >' <NoOp>
| |   |             `-CXXTemporaryObjectExpr 0xe0ce18 <col:14, col:58> 'chrono::duration<long double, milli>':'std::chrono::duration<long double, std::ratio<1, 1000> >' 'void (const long double &)' list
| |   |               `-ImplicitCastExpr 0xe0cd38 <col:51> 'const long double':'const long double' lvalue <NoOp>
| |   |                 `-DeclRefExpr 0xe0c298 <col:51> 'long double' lvalue ParmVar 0xe02be0 '__msecs' 'long double'
| |   |-FunctionTemplateDecl 0xe12e98 <line:944:5, line:947:70> line:946:7 operator""ms
| |   | |-NonTypeTemplateParmDecl 0xe12c70 <line:944:15, col:23> col:23 referenced 'char' depth 0 index 0 ... _Digits
| |   | `-FunctionDecl 0xe12df8 <line:945:7, line:947:70> line:946:7 constexpr operator""ms 'chrono::milliseconds ()'
| |   |   `-CompoundStmt 0xe19a08 <line:947:7, col:70>
| |   |     `-ReturnStmt 0xe199f8 <col:9, col:67>
| |   |       `-CallExpr 0xe199d8 <col:16, col:67> '<dependent type>'
| |   |         `-UnresolvedLookupExpr 0xe19920 <col:16, col:65> '<dependent type>' lvalue (ADL) = '__check_overflow' 0xdbe0a8
| |   |-FunctionDecl 0xe19dd0 <line:949:5, line:951:61> line:950:5 constexpr operator""us 'chrono::duration<long double, micro> (long double)'
| |   | |-ParmVarDecl 0xe19c70 <col:18, col:30> col:30 used __usecs 'long double'
| |   | `-CompoundStmt 0xe2a838 <line:951:5, col:61>
| |   |   `-ReturnStmt 0xe2a828 <col:7, col:58>
| |   |     `-ExprWithCleanups 0xe2a810 <col:14, col:58> 'chrono::duration<long double, micro>':'std::chrono::duration<long double, std::ratio<1, 1000000> >'
| |   |       `-CXXConstructExpr 0xe2a7e0 <col:14, col:58> 'chrono::duration<long double, micro>':'std::chrono::duration<long double, std::ratio<1, 1000000> >' 'void (const std::chrono::duration<long double, std::ratio<1, 1000000> > &) noexcept' elidable
| |   |         `-MaterializeTemporaryExpr 0xe2a6d8 <col:14, col:58> 'const chrono::duration<long double, micro>':'const std::chrono::duration<long double, std::ratio<1, 1000000> >' lvalue
| |   |           `-ImplicitCastExpr 0xe2a6c0 <col:14, col:58> 'const chrono::duration<long double, micro>':'const std::chrono::duration<long double, std::ratio<1, 1000000> >' <NoOp>
| |   |             `-CXXTemporaryObjectExpr 0xe23c48 <col:14, col:58> 'chrono::duration<long double, micro>':'std::chrono::duration<long double, std::ratio<1, 1000000> >' 'void (const long double &)' list
| |   |               `-ImplicitCastExpr 0xe23b68 <col:51> 'const long double':'const long double' lvalue <NoOp>
| |   |                 `-DeclRefExpr 0xe230c8 <col:51> 'long double' lvalue ParmVar 0xe19c70 '__usecs' 'long double'
| |   |-FunctionTemplateDecl 0xe2aa88 <line:953:5, line:956:70> line:955:7 operator""us
| |   | |-NonTypeTemplateParmDecl 0xe2a860 <line:953:15, col:23> col:23 referenced 'char' depth 0 index 0 ... _Digits
| |   | `-FunctionDecl 0xe2a9e8 <line:954:7, line:956:70> line:955:7 constexpr operator""us 'chrono::microseconds ()'
| |   |   `-CompoundStmt 0xe320c8 <line:956:7, col:70>
| |   |     `-ReturnStmt 0xe320b8 <col:9, col:67>
| |   |       `-CallExpr 0xe32098 <col:16, col:67> '<dependent type>'
| |   |         `-UnresolvedLookupExpr 0xe31fe0 <col:16, col:65> '<dependent type>' lvalue (ADL) = '__check_overflow' 0xdbe0a8
| |   |-FunctionDecl 0xe32490 <line:958:5, line:960:60> line:959:5 constexpr operator""ns 'chrono::duration<long double, nano> (long double)'
| |   | |-ParmVarDecl 0xe32330 <col:18, col:30> col:30 used __nsecs 'long double'
| |   | `-CompoundStmt 0xe3b438 <line:960:5, col:60>
| |   |   `-ReturnStmt 0xe3b428 <col:7, col:57>
| |   |     `-ExprWithCleanups 0xe3b410 <col:14, col:57> 'chrono::duration<long double, nano>':'std::chrono::duration<long double, std::ratio<1, 1000000000> >'
| |   |       `-CXXConstructExpr 0xe3b3e0 <col:14, col:57> 'chrono::duration<long double, nano>':'std::chrono::duration<long double, std::ratio<1, 1000000000> >' 'void (const std::chrono::duration<long double, std::ratio<1, 1000000000> > &) noexcept' elidable
| |   |         `-MaterializeTemporaryExpr 0xe39618 <col:14, col:57> 'const chrono::duration<long double, nano>':'const std::chrono::duration<long double, std::ratio<1, 1000000000> >' lvalue
| |   |           `-ImplicitCastExpr 0xe39600 <col:14, col:57> 'const chrono::duration<long double, nano>':'const std::chrono::duration<long double, std::ratio<1, 1000000000> >' <NoOp>
| |   |             `-CXXTemporaryObjectExpr 0xe384e8 <col:14, col:57> 'chrono::duration<long double, nano>':'std::chrono::duration<long double, std::ratio<1, 1000000000> >' 'void (const long double &)' list
| |   |               `-ImplicitCastExpr 0xe38408 <col:50> 'const long double':'const long double' lvalue <NoOp>
| |   |                 `-DeclRefExpr 0xe37968 <col:50> 'long double' lvalue ParmVar 0xe32330 '__nsecs' 'long double'
| |   `-FunctionTemplateDecl 0xe3b608 <line:962:5, line:965:69> line:964:7 operator""ns
| |     |-NonTypeTemplateParmDecl 0xe3b460 <line:962:15, col:23> col:23 referenced 'char' depth 0 index 0 ... _Digits
| |     `-FunctionDecl 0xe3b568 <line:963:7, line:965:69> line:964:7 constexpr operator""ns 'chrono::nanoseconds ()'
| |       `-CompoundStmt 0xe3b7d0 <line:965:7, col:69>
| |         `-ReturnStmt 0xe3b7c0 <col:9, col:66>
| |           `-CallExpr 0xe3b7a0 <col:16, col:66> '<dependent type>'
| |             `-UnresolvedLookupExpr 0xe3b6e8 <col:16, col:64> '<dependent type>' lvalue (ADL) = '__check_overflow' 0xdbe0a8
| `-NamespaceDecl 0xe3b7e8 prev 0xcf47e8 <line:971:3, line:974:3> line:971:13 chrono
|   |-original Namespace 0xced9c0 'chrono'
|   `-UsingDirectiveDecl 0xe3b878 <line:973:5, col:31> col:31 Namespace 0xdbde38 'chrono_literals'
|-VarDecl 0xe3b920 <main.cxx:7:1, col:111> col:5 used neginf 'int [8]' cinit
| `-InitListExpr 0xe3bb08 <col:16, col:111> 'int [8]'
|   |-IntegerLiteral 0xe3b988 <col:17> 'int' 2139095040
|   |-IntegerLiteral 0xe3b9a8 <col:29> 'int' 2139095040
|   |-IntegerLiteral 0xe3b9c8 <col:41> 'int' 2139095040
|   |-IntegerLiteral 0xe3b9e8 <col:53> 'int' 2139095040
|   |-IntegerLiteral 0xe3ba08 <col:65> 'int' 2139095040
|   |-IntegerLiteral 0xe3ba28 <col:77> 'int' 2139095040
|   |-IntegerLiteral 0xe3ba48 <col:89> 'int' 2139095040
|   `-IntegerLiteral 0xe3ba68 <col:101> 'int' 2139095040
|-VarDecl 0xe3bc20 <line:8:1, col:111> col:5 used maxint 'int [8]' cinit
| `-InitListExpr 0xe3be08 <col:16, col:111> 'int [8]'
|   |-IntegerLiteral 0xe3bc88 <col:17> 'int' 2147483647
|   |-IntegerLiteral 0xe3bca8 <col:29> 'int' 2147483647
|   |-IntegerLiteral 0xe3bcc8 <col:41> 'int' 2147483647
|   |-IntegerLiteral 0xe3bce8 <col:53> 'int' 2147483647
|   |-IntegerLiteral 0xe3bd08 <col:65> 'int' 2147483647
|   |-IntegerLiteral 0xe3bd28 <col:77> 'int' 2147483647
|   |-IntegerLiteral 0xe3bd48 <col:89> 'int' 2147483647
|   `-IntegerLiteral 0xe3bd68 <col:101> 'int' 2147483647
|-FunctionDecl 0xe3c150 <line:10:1, line:30:1> line:10:7 used convF2I_avx 'float (float *, int *, int, int)'
| |-ParmVarDecl 0xe3bed8 <col:19, col:27> col:27 used inp 'float *'
| |-ParmVarDecl 0xe3bf58 <col:32, col:38> col:38 used out 'int *'
| |-ParmVarDecl 0xe3bfd8 <col:43, col:47> col:47 used length 'int'
| |-ParmVarDecl 0xe3c058 <col:55, col:59> col:59 used idx 'int'
| `-CompoundStmt 0xe3cb48 <col:64, line:30:1>
|   |-ForStmt 0xe3ca40 <line:11:3, line:28:3>
|   | |-DeclStmt 0xe3c2b0 <line:11:8, col:18>
|   | | `-VarDecl 0xe3c228 <col:8, col:16> col:12 used i 'int' cinit
|   | |   `-IntegerLiteral 0xe3c290 <col:16> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0xe3c338 <col:20, col:24> 'bool' '<'
|   | | |-ImplicitCastExpr 0xe3c308 <col:20> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0xe3c2c8 <col:20> 'int' lvalue Var 0xe3c228 'i' 'int'
|   | | `-ImplicitCastExpr 0xe3c320 <col:24> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0xe3c2e8 <col:24> 'int' lvalue ParmVar 0xe3bfd8 'length' 'int'
|   | |-CompoundAssignOperator 0xe3c398 <col:32, col:35> 'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | | |-DeclRefExpr 0xe3c358 <col:32> 'int' lvalue Var 0xe3c228 'i' 'int'
|   | | `-IntegerLiteral 0xe3c378 <col:35> 'int' 8
|   | `-CompoundStmt 0xe3ca28 <col:38, line:28:3>
|   |   `-GCCAsmStmt 0xe3c948 <line:12:5, line:27:5>
|   |     |-UnaryOperator 0xe3c728 <line:24:13, col:20> 'int' lvalue prefix '*' cannot overflow
|   |     | `-ParenExpr 0xe3c708 <col:14, col:20> 'int *'
|   |     |   `-BinaryOperator 0xe3c6e8 <col:15, col:19> 'int *' '+'
|   |     |     |-ImplicitCastExpr 0xe3c6b8 <col:15> 'int *' <LValueToRValue>
|   |     |     | `-DeclRefExpr 0xe3c678 <col:15> 'int *' lvalue ParmVar 0xe3bf58 'out' 'int *'
|   |     |     `-ImplicitCastExpr 0xe3c6d0 <col:19> 'int' <LValueToRValue>
|   |     |       `-DeclRefExpr 0xe3c698 <col:19> 'int' lvalue Var 0xe3c228 'i' 'int'
|   |     |-UnaryOperator 0xe3c810 <line:25:12, col:19> 'float' lvalue prefix '*' cannot overflow
|   |     | `-ParenExpr 0xe3c7f0 <col:13, col:19> 'float *'
|   |     |   `-BinaryOperator 0xe3c7d0 <col:14, col:18> 'float *' '+'
|   |     |     |-ImplicitCastExpr 0xe3c7a0 <col:14> 'float *' <LValueToRValue>
|   |     |     | `-DeclRefExpr 0xe3c760 <col:14> 'float *' lvalue ParmVar 0xe3bed8 'inp' 'float *'
|   |     |     `-ImplicitCastExpr 0xe3c7b8 <col:18> 'int' <LValueToRValue>
|   |     |       `-DeclRefExpr 0xe3c780 <col:18> 'int' lvalue Var 0xe3c228 'i' 'int'
|   |     |-DeclRefExpr 0xe3c848 <col:27> 'int [8]' lvalue Var 0xe3b920 'neginf' 'int [8]'
|   |     `-DeclRefExpr 0xe3c888 <col:40> 'int [8]' lvalue Var 0xe3bc20 'maxint' 'int [8]'
|   `-ReturnStmt 0xe3cb38 <line:29:3, col:17>
|     `-ImplicitCastExpr 0xe3cb20 <col:10, col:17> 'float' <IntegralToFloating>
|       `-ImplicitCastExpr 0xe3cb08 <col:10, col:17> 'int' <LValueToRValue>
|         `-ArraySubscriptExpr 0xe3cae8 <col:10, col:17> 'int' lvalue
|           |-ImplicitCastExpr 0xe3cab8 <col:10> 'int *' <LValueToRValue>
|           | `-DeclRefExpr 0xe3ca78 <col:10> 'int *' lvalue ParmVar 0xe3bf58 'out' 'int *'
|           `-ImplicitCastExpr 0xe3cad0 <col:14> 'int' <LValueToRValue>
|             `-DeclRefExpr 0xe3ca98 <col:14> 'int' lvalue ParmVar 0xe3c058 'idx' 'int'
|-FunctionDecl 0xe3cdb0 <line:32:1, line:53:1> line:32:7 used convF2I_avx512 'float (float *, int *, int, int)'
| |-ParmVarDecl 0xe3cb80 <col:22, col:30> col:30 used inp 'float *'
| |-ParmVarDecl 0xe3cc00 <col:35, col:41> col:41 used out 'int *'
| |-ParmVarDecl 0xe3cc80 <col:46, col:50> col:50 used length 'int'
| |-ParmVarDecl 0xe3cd00 <col:58, col:62> col:62 used idx 'int'
| `-CompoundStmt 0xe3d6d8 <col:67, line:53:1>
|   |-ForStmt 0xe3d5d0 <line:33:3, line:51:3>
|   | |-DeclStmt 0xe3cf10 <line:33:8, col:18>
|   | | `-VarDecl 0xe3ce88 <col:8, col:16> col:12 used i 'int' cinit
|   | |   `-IntegerLiteral 0xe3cef0 <col:16> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0xe3cf98 <col:20, col:24> 'bool' '<'
|   | | |-ImplicitCastExpr 0xe3cf68 <col:20> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0xe3cf28 <col:20> 'int' lvalue Var 0xe3ce88 'i' 'int'
|   | | `-ImplicitCastExpr 0xe3cf80 <col:24> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0xe3cf48 <col:24> 'int' lvalue ParmVar 0xe3cc80 'length' 'int'
|   | |-CompoundAssignOperator 0xe3cff8 <col:32, col:35> 'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | | |-DeclRefExpr 0xe3cfb8 <col:32> 'int' lvalue Var 0xe3ce88 'i' 'int'
|   | | `-IntegerLiteral 0xe3cfd8 <col:35> 'int' 8
|   | `-CompoundStmt 0xe3d5b8 <col:38, line:51:3>
|   |   `-GCCAsmStmt 0xe3d4e8 <line:34:5, line:50:5>
|   |     |-UnaryOperator 0xe3d2e8 <line:47:13, col:20> 'int' lvalue prefix '*' cannot overflow
|   |     | `-ParenExpr 0xe3d2c8 <col:14, col:20> 'int *'
|   |     |   `-BinaryOperator 0xe3d2a8 <col:15, col:19> 'int *' '+'
|   |     |     |-ImplicitCastExpr 0xe3d278 <col:15> 'int *' <LValueToRValue>
|   |     |     | `-DeclRefExpr 0xe3d238 <col:15> 'int *' lvalue ParmVar 0xe3cc00 'out' 'int *'
|   |     |     `-ImplicitCastExpr 0xe3d290 <col:19> 'int' <LValueToRValue>
|   |     |       `-DeclRefExpr 0xe3d258 <col:19> 'int' lvalue Var 0xe3ce88 'i' 'int'
|   |     |-UnaryOperator 0xe3d3d0 <line:48:12, col:19> 'float' lvalue prefix '*' cannot overflow
|   |     | `-ParenExpr 0xe3d3b0 <col:13, col:19> 'float *'
|   |     |   `-BinaryOperator 0xe3d390 <col:14, col:18> 'float *' '+'
|   |     |     |-ImplicitCastExpr 0xe3d360 <col:14> 'float *' <LValueToRValue>
|   |     |     | `-DeclRefExpr 0xe3d320 <col:14> 'float *' lvalue ParmVar 0xe3cb80 'inp' 'float *'
|   |     |     `-ImplicitCastExpr 0xe3d378 <col:18> 'int' <LValueToRValue>
|   |     |       `-DeclRefExpr 0xe3d340 <col:18> 'int' lvalue Var 0xe3ce88 'i' 'int'
|   |     `-DeclRefExpr 0xe3d408 <col:27> 'int [8]' lvalue Var 0xe3bc20 'maxint' 'int [8]'
|   `-ReturnStmt 0xe3d6c8 <line:52:3, col:17>
|     `-ImplicitCastExpr 0xe3d6b0 <col:10, col:17> 'float' <IntegralToFloating>
|       `-ImplicitCastExpr 0xe3d698 <col:10, col:17> 'int' <LValueToRValue>
|         `-ArraySubscriptExpr 0xe3d678 <col:10, col:17> 'int' lvalue
|           |-ImplicitCastExpr 0xe3d648 <col:10> 'int *' <LValueToRValue>
|           | `-DeclRefExpr 0xe3d608 <col:10> 'int *' lvalue ParmVar 0xe3cc00 'out' 'int *'
|           `-ImplicitCastExpr 0xe3d660 <col:14> 'int' <LValueToRValue>
|             `-DeclRefExpr 0xe3d628 <col:14> 'int' lvalue ParmVar 0xe3cd00 'idx' 'int'
|-FunctionDecl 0xe3d940 <line:55:1, line:60:1> line:55:7 used convF2I_scalar 'float (float *, int *, int, int)'
| |-ParmVarDecl 0xe3d710 <col:22, col:30> col:30 used inp 'float *'
| |-ParmVarDecl 0xe3d790 <col:35, col:41> col:41 used out 'int *'
| |-ParmVarDecl 0xe3d810 <col:46, col:50> col:50 used length 'int'
| |-ParmVarDecl 0xe3d890 <col:58, col:62> col:62 used idx 'int'
| `-CompoundStmt 0xe3de50 <col:67, line:60:1>
|   |-ForStmt 0xe3dd48 <line:56:3, line:58:3>
|   | |-DeclStmt 0xe3daa0 <line:56:7, col:17>
|   | | `-VarDecl 0xe3da18 <col:7, col:15> col:11 used i 'int' cinit
|   | |   `-IntegerLiteral 0xe3da80 <col:15> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0xe3db28 <col:19, col:23> 'bool' '<'
|   | | |-ImplicitCastExpr 0xe3daf8 <col:19> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0xe3dab8 <col:19> 'int' lvalue Var 0xe3da18 'i' 'int'
|   | | `-ImplicitCastExpr 0xe3db10 <col:23> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0xe3dad8 <col:23> 'int' lvalue ParmVar 0xe3d810 'length' 'int'
|   | |-UnaryOperator 0xe3db68 <col:32, col:33> 'int' postfix '++'
|   | | `-DeclRefExpr 0xe3db48 <col:32> 'int' lvalue Var 0xe3da18 'i' 'int'
|   | `-CompoundStmt 0xe3dd30 <col:37, line:58:3>
|   |   `-BinaryOperator 0xe3dd10 <line:57:7, col:27> 'int' lvalue '='
|   |     |-ArraySubscriptExpr 0xe3dbf0 <col:7, col:12> 'int' lvalue
|   |     | |-ImplicitCastExpr 0xe3dbc0 <col:7> 'int *' <LValueToRValue>
|   |     | | `-DeclRefExpr 0xe3db80 <col:7> 'int *' lvalue ParmVar 0xe3d790 'out' 'int *'
|   |     | `-ImplicitCastExpr 0xe3dbd8 <col:11> 'int' <LValueToRValue>
|   |     |   `-DeclRefExpr 0xe3dba0 <col:11> 'int' lvalue Var 0xe3da18 'i' 'int'
|   |     `-CStyleCastExpr 0xe3dce8 <col:17, col:27> 'int' <NoOp>
|   |       `-ImplicitCastExpr 0xe3dcd0 <col:22, col:27> 'int' <FloatingToIntegral> part_of_explicit_cast
|   |         `-ImplicitCastExpr 0xe3dcb8 <col:22, col:27> 'float' <LValueToRValue> part_of_explicit_cast
|   |           `-ArraySubscriptExpr 0xe3dc80 <col:22, col:27> 'float' lvalue
|   |             |-ImplicitCastExpr 0xe3dc50 <col:22> 'float *' <LValueToRValue>
|   |             | `-DeclRefExpr 0xe3dc10 <col:22> 'float *' lvalue ParmVar 0xe3d710 'inp' 'float *'
|   |             `-ImplicitCastExpr 0xe3dc68 <col:26> 'int' <LValueToRValue>
|   |               `-DeclRefExpr 0xe3dc30 <col:26> 'int' lvalue Var 0xe3da18 'i' 'int'
|   `-ReturnStmt 0xe3de40 <line:59:3, col:17>
|     `-ImplicitCastExpr 0xe3de28 <col:10, col:17> 'float' <IntegralToFloating>
|       `-ImplicitCastExpr 0xe3de10 <col:10, col:17> 'int' <LValueToRValue>
|         `-ArraySubscriptExpr 0xe3ddf0 <col:10, col:17> 'int' lvalue
|           |-ImplicitCastExpr 0xe3ddc0 <col:10> 'int *' <LValueToRValue>
|           | `-DeclRefExpr 0xe3dd80 <col:10> 'int *' lvalue ParmVar 0xe3d790 'out' 'int *'
|           `-ImplicitCastExpr 0xe3ddd8 <col:14> 'int' <LValueToRValue>
|             `-DeclRefExpr 0xe3dda0 <col:14> 'int' lvalue ParmVar 0xe3d890 'idx' 'int'
`-FunctionDecl 0xe3e090 <line:62:1, line:124:1> line:62:5 main 'int (int, char **)'
  |-ParmVarDecl 0xe3de88 <col:10, col:14> col:14 used argc 'int'
  |-ParmVarDecl 0xe3df70 <col:20, col:32> col:27 used argv 'char **':'char **'
  `-CompoundStmt 0xe7b4e8 <col:35, line:124:1>
    |-IfStmt 0xe3e368 <line:63:4, line:65:4>
    | |-BinaryOperator 0xe3e198 <line:63:8, col:15> 'bool' '<'
    | | |-ImplicitCastExpr 0xe3e180 <col:8> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0xe3e140 <col:8> 'int' lvalue ParmVar 0xe3de88 'argc' 'int'
    | | `-IntegerLiteral 0xe3e160 <col:15> 'int' 2
    | `-CompoundStmt 0xe3e350 <col:18, line:65:4>
    |   `-ReturnStmt 0xe3e340 <line:64:7, col:48>
    |     `-CallExpr 0xe3e2e0 <col:14, col:48> 'int'
    |       |-ImplicitCastExpr 0xe3e2c8 <col:14> 'int (*)(FILE *__restrict, const char *__restrict, ...)' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0xe3e248 <col:14> 'int (FILE *__restrict, const char *__restrict, ...)' lvalue Function 0xaad938 'fprintf' 'int (FILE *__restrict, const char *__restrict, ...)'
    |       |-ImplicitCastExpr 0xe3e310 </usr/include/stdio.h:143:16> 'FILE *' <LValueToRValue>
    |       | `-DeclRefExpr 0xe3e200 <col:16> 'FILE *' lvalue Var 0xaa6708 'stderr' 'FILE *'
    |       `-ImplicitCastExpr 0xe3e328 <main.cxx:64:30> 'const char *' <ArrayToPointerDecay>
    |         `-StringLiteral 0xe3e220 <col:30> 'const char [16]' lvalue "vlen expected!\n"
    |-DeclStmt 0xe3e5a8 <line:66:4, col:28>
    | `-VarDecl 0xe3e398 <col:4, col:27> col:8 used vlen 'int' cinit
    |   `-CallExpr 0xe3e550 <col:15, col:27> 'int'
    |     |-ImplicitCastExpr 0xe3e538 <col:15> 'int (*)(const char *) throw()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0xe3e4c0 <col:15> 'int (const char *) throw()' lvalue Function 0x9cde58 'atoi' 'int (const char *) throw()'
    |     `-ImplicitCastExpr 0xe3e590 <col:20, col:26> 'const char *' <NoOp>
    |       `-ImplicitCastExpr 0xe3e578 <col:20, col:26> 'char *' <LValueToRValue>
    |         `-ArraySubscriptExpr 0xe3e4a0 <col:20, col:26> 'char *' lvalue
    |           |-ImplicitCastExpr 0xe3e488 <col:20> 'char **':'char **' <LValueToRValue>
    |           | `-DeclRefExpr 0xe3e448 <col:20> 'char **':'char **' lvalue ParmVar 0xe3df70 'argv' 'char **':'char **'
    |           `-IntegerLiteral 0xe3e468 <col:25> 'int' 1
    |-ParenExpr 0xe3eaa0 </usr/include/assert.h:93:6, line:95:69> 'void'
    | `-ConditionalOperator 0xe3ea70 <line:93:7, line:95:68> 'void'
    |   |-CXXStaticCastExpr 0xe3e720 <line:93:7, col:31> 'bool' static_cast<_Bool> <NoOp>
    |   | `-BinaryOperator 0xe3e6f0 <main.cxx:67:11, col:35> 'bool' '=='
    |   |   |-ParenExpr 0xe3e6b0 <col:11, col:29> 'int'
    |   |   | `-BinaryOperator 0xe3e690 <col:12, col:28> 'int' '&'
    |   |   |   |-ImplicitCastExpr 0xe3e678 <col:12> 'int' <LValueToRValue>
    |   |   |   | `-DeclRefExpr 0xe3e5c0 <col:12> 'int' lvalue Var 0xe3e398 'vlen' 'int'
    |   |   |   `-ParenExpr 0xe3e658 <col:19, col:28> 'int'
    |   |   |     `-BinaryOperator 0xe3e638 <col:20, col:27> 'int' '-'
    |   |   |       |-ImplicitCastExpr 0xe3e620 <col:20> 'int' <LValueToRValue>
    |   |   |       | `-DeclRefExpr 0xe3e5e0 <col:20> 'int' lvalue Var 0xe3e398 'vlen' 'int'
    |   |   |       `-IntegerLiteral 0xe3e600 <col:27> 'int' 1
    |   |   `-IntegerLiteral 0xe3e6d0 <col:35> 'int' 0
    |   |-CXXFunctionalCastExpr 0xe3e780 </usr/include/assert.h:94:9, col:16> 'void' functional cast to void <ToVoid>
    |   | `-IntegerLiteral 0xe3e760 <col:15> 'int' 0
    |   `-CallExpr 0xe3e9d0 <line:95:9, col:68> 'void'
    |     |-ImplicitCastExpr 0xe3e9b8 <col:9> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0xe3e938 <col:9> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0xac6440 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
    |     |-ImplicitCastExpr 0xe3ea10 <<scratch space>:162:1> 'const char *' <ArrayToPointerDecay>
    |     | `-StringLiteral 0xe3e7f0 <col:1> 'const char [25]' lvalue "(vlen & (vlen - 1)) == 0"
    |     |-ImplicitCastExpr 0xe3ea28 <line:163:1> 'const char *' <ArrayToPointerDecay>
    |     | `-StringLiteral 0xe3e898 <col:1> 'const char [9]' lvalue "main.cxx"
    |     |-ImplicitCastExpr 0xe3ea40 <line:164:1> 'unsigned int' <IntegralCast>
    |     | `-IntegerLiteral 0xe3e8b8 <col:1> 'int' 67
    |     `-ImplicitCastExpr 0xe3ea58 </usr/include/assert.h:129:30, col:44> 'const char *' <ArrayToPointerDecay>
    |       `-UnaryOperator 0xe3e920 <col:30, col:44> 'const char [23]' lvalue prefix '__extension__' cannot overflow
    |         `-PredefinedExpr 0xe3e908 <col:44> 'const char [23]' lvalue __PRETTY_FUNCTION__
    |           `-StringLiteral 0xe3e8d8 <col:44> 'const char [23]' lvalue "int main(int, char **)"
    |-DeclStmt 0xe3eea8 <main.cxx:71:4, col:52>
    | `-VarDecl 0xe3eb10 <col:4, col:51> col:10 used vals 'float [8]' cinit
    |   `-InitListExpr 0xe3ecf8 <col:19, col:51> 'float [8]'
    |     |-ImplicitCastExpr 0xe3ed38 <col:20> 'float' <FloatingCast>
    |     | `-FloatingLiteral 0xe3eb78 <col:20> 'double' 0.000000e+00
    |     |-ImplicitCastExpr 0xe3ed58 <col:24> 'float' <FloatingCast>
    |     | `-FloatingLiteral 0xe3eb98 <col:24> 'double' 1.100000e+00
    |     |-ImplicitCastExpr 0xe3ed80 <col:28> 'float' <FloatingCast>
    |     | `-FloatingLiteral 0xe3ebb8 <col:28> 'double' 2.200000e+00
    |     |-ImplicitCastExpr 0xe3edb8 <col:32> 'float' <FloatingCast>
    |     | `-FloatingLiteral 0xe3ebd8 <col:32> 'double' 3.300000e+00
    |     |-ImplicitCastExpr 0xe3edd0 <col:36> 'float' <FloatingCast>
    |     | `-FloatingLiteral 0xe3ebf8 <col:36> 'double' 4.400000e+00
    |     |-ImplicitCastExpr 0xe3ee28 <col:40> 'float' <FloatingCast>
    |     | `-FloatingLiteral 0xe3ec18 <col:40> 'double' 5.500000e+00
    |     |-ImplicitCastExpr 0xe3ee40 <col:44> 'float' <FloatingCast>
    |     | `-FloatingLiteral 0xe3ec38 <col:44> 'double' 6.600000e+00
    |     `-ImplicitCastExpr 0xe3ee58 <col:48> 'float' <FloatingCast>
    |       `-FloatingLiteral 0xe3ec58 <col:48> 'double' 7.700000e+00
    |-DeclStmt 0xe3efd8 <line:73:4, col:17>
    | `-VarDecl 0xe3ef70 <col:4, col:16> col:8 used out 'int [vlen]'
    |-DeclStmt 0xe3f108 <line:74:4, col:19>
    | `-VarDecl 0xe3f0a0 <col:4, col:18> col:10 used inp 'float [vlen]'
    |-ForStmt 0xe3f450 <line:75:4, line:77:4>
    | |-DeclStmt 0xe3f1c0 <line:75:9, col:18>
    | | `-VarDecl 0xe3f138 <col:9, col:17> col:13 used i 'int' cinit
    | |   `-IntegerLiteral 0xe3f1a0 <col:17> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0xe3f248 <col:20, col:24> 'bool' '<'
    | | |-ImplicitCastExpr 0xe3f218 <col:20> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0xe3f1d8 <col:20> 'int' lvalue Var 0xe3f138 'i' 'int'
    | | `-ImplicitCastExpr 0xe3f230 <col:24> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0xe3f1f8 <col:24> 'int' lvalue Var 0xe3e398 'vlen' 'int'
    | |-UnaryOperator 0xe3f288 <col:30, col:31> 'int' postfix '++'
    | | `-DeclRefExpr 0xe3f268 <col:30> 'int' lvalue Var 0xe3f138 'i' 'int'
    | `-CompoundStmt 0xe3f438 <col:35, line:77:4>
    |   `-BinaryOperator 0xe3f418 <line:76:7, col:26> 'float' lvalue '='
    |     |-ArraySubscriptExpr 0xe3f310 <col:7, col:12> 'float' lvalue
    |     | |-ImplicitCastExpr 0xe3f2e0 <col:7> 'float *' <ArrayToPointerDecay>
    |     | | `-DeclRefExpr 0xe3f2a0 <col:7> 'float [vlen]' lvalue Var 0xe3f0a0 'inp' 'float [vlen]'
    |     | `-ImplicitCastExpr 0xe3f2f8 <col:11> 'int' <LValueToRValue>
    |     |   `-DeclRefExpr 0xe3f2c0 <col:11> 'int' lvalue Var 0xe3f138 'i' 'int'
    |     `-ImplicitCastExpr 0xe3f400 <col:16, col:26> 'float' <LValueToRValue>
    |       `-ArraySubscriptExpr 0xe3f3e0 <col:16, col:26> 'float' lvalue
    |         |-ImplicitCastExpr 0xe3f3c8 <col:16> 'float *' <ArrayToPointerDecay>
    |         | `-DeclRefExpr 0xe3f330 <col:16> 'float [8]' lvalue Var 0xe3eb10 'vals' 'float [8]'
    |         `-BinaryOperator 0xe3f3a8 <col:21, col:25> 'int' '&'
    |           |-ImplicitCastExpr 0xe3f390 <col:21> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0xe3f350 <col:21> 'int' lvalue Var 0xe3f138 'i' 'int'
    |           `-IntegerLiteral 0xe3f370 <col:25> 'int' 7
    |-DeclStmt 0xe3f528 <line:79:4, col:20>
    | `-VarDecl 0xe3f4a0 <col:4, col:16> col:10 used res 'float' cinit
    |   `-FloatingLiteral 0xe3f508 <col:16> 'float' 0.000000e+00
    |-DeclStmt 0xe43130 <line:80:4, col:49>
    | `-VarDecl 0xe3f578 <col:4, col:48> col:9 used start 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >':'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >' cinit
    |   `-ExprWithCleanups 0xe43118 <col:17, col:48> 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >':'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >'
    |     `-CXXConstructExpr 0xe430e8 <col:17, col:48> 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >':'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >' 'void (std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &&) noexcept' elidable
    |       `-MaterializeTemporaryExpr 0xe41ba8 <col:17, col:48> 'std::chrono::_V2::steady_clock::time_point':'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >' xvalue
    |         `-CallExpr 0xe3f710 <col:17, col:48> 'std::chrono::_V2::steady_clock::time_point':'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >'
    |           `-ImplicitCastExpr 0xe3f6f8 <col:17, col:44> 'std::chrono::_V2::steady_clock::time_point (*)() noexcept' <FunctionToPointerDecay>
    |             `-DeclRefExpr 0xe3f668 <col:17, col:44> 'std::chrono::_V2::steady_clock::time_point () noexcept' lvalue CXXMethod 0xdbdca0 'now' 'std::chrono::_V2::steady_clock::time_point () noexcept'
    |-ForStmt 0xe43c90 <line:81:4, line:83:4>
    | |-DeclStmt 0xe431e8 <line:81:9, col:18>
    | | `-VarDecl 0xe43160 <col:9, col:17> col:13 used i 'int' cinit
    | |   `-IntegerLiteral 0xe431c8 <col:17> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0xe43258 <col:20, col:24> 'bool' '<'
    | | |-ImplicitCastExpr 0xe43240 <col:20> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0xe43200 <col:20> 'int' lvalue Var 0xe43160 'i' 'int'
    | | `-IntegerLiteral 0xe43220 <col:24> 'int' 1000000
    | |-UnaryOperator 0xe43298 <col:33, col:34> 'int' postfix '++'
    | | `-DeclRefExpr 0xe43278 <col:33> 'int' lvalue Var 0xe43160 'i' 'int'
    | `-CompoundStmt 0xe43c78 <col:38, line:83:4>
    |   `-CompoundAssignOperator 0xe43c48 <line:82:7, col:54> 'float' lvalue '+=' ComputeLHSTy='float' ComputeResultTy='float'
    |     |-DeclRefExpr 0xe432b0 <col:7> 'float' lvalue Var 0xe3f4a0 'res' 'float'
    |     `-CallExpr 0xe43bc0 <col:14, col:54> 'float'
    |       |-ImplicitCastExpr 0xe43ba8 <col:14> 'float (*)(float *, int *, int, int)' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0xe43b60 <col:14> 'float (float *, int *, int, int)' lvalue Function 0xe3c150 'convF2I_avx' 'float (float *, int *, int, int)'
    |       |-ImplicitCastExpr 0xe43c00 <col:26> 'float *' <ArrayToPointerDecay>
    |       | `-DeclRefExpr 0xe43318 <col:26> 'float [vlen]' lvalue Var 0xe3f0a0 'inp' 'float [vlen]'
    |       |-ImplicitCastExpr 0xe43c18 <col:31> 'int *' <ArrayToPointerDecay>
    |       | `-DeclRefExpr 0xe43338 <col:31> 'int [vlen]' lvalue Var 0xe3ef70 'out' 'int [vlen]'
    |       |-ImplicitCastExpr 0xe43c30 <col:36> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0xe43358 <col:36> 'int' lvalue Var 0xe3e398 'vlen' 'int'
    |       `-BinaryOperator 0xe43b40 <col:42, col:53> 'int' '&'
    |         |-ImplicitCastExpr 0xe43b28 <col:42> 'int' <LValueToRValue>
    |         | `-DeclRefExpr 0xe43378 <col:42> 'int' lvalue Var 0xe43160 'i' 'int'
    |         `-ParenExpr 0xe43b08 <col:46, col:53> 'int'
    |           `-BinaryOperator 0xe43ae8 <col:47, col:52> 'int' '-'
    |             |-ImplicitCastExpr 0xe43ad0 <col:47> 'int' <LValueToRValue>
    |             | `-DeclRefExpr 0xe43a90 <col:47> 'int' lvalue Var 0xe3e398 'vlen' 'int'
    |             `-IntegerLiteral 0xe43ab0 <col:52> 'int' 1
    |-DeclStmt 0xe44358 <line:84:4, col:47>
    | `-VarDecl 0xe43d00 <col:4, col:46> col:9 used end 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >':'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >' cinit
    |   `-ExprWithCleanups 0xe44340 <col:15, col:46> 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >':'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >'
    |     `-CXXConstructExpr 0xe44310 <col:15, col:46> 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >':'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >' 'void (std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &&) noexcept' elidable
    |       `-MaterializeTemporaryExpr 0xe442f8 <col:15, col:46> 'std::chrono::_V2::steady_clock::time_point':'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >' xvalue
    |         `-CallExpr 0xe43e08 <col:15, col:46> 'std::chrono::_V2::steady_clock::time_point':'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >'
    |           `-ImplicitCastExpr 0xe43df0 <col:15, col:42> 'std::chrono::_V2::steady_clock::time_point (*)() noexcept' <FunctionToPointerDecay>
    |             `-DeclRefExpr 0xe43dc0 <col:15, col:42> 'std::chrono::_V2::steady_clock::time_point () noexcept' lvalue CXXMethod 0xdbdca0 'now' 'std::chrono::_V2::steady_clock::time_point () noexcept'
    |-DeclStmt 0xe749f8 <line:86:4, col:52>
    | `-VarDecl 0xe445c0 <col:4, col:47> col:34 used diff 'std::chrono::duration<double>':'std::chrono::duration<double, std::ratio<1, 1> >' cinit
    |   `-ExprWithCleanups 0xe749e0 <col:34, col:47> 'std::chrono::duration<double>':'std::chrono::duration<double, std::ratio<1, 1> >'
    |     `-CXXConstructExpr 0xe749b0 <col:34, col:47> 'std::chrono::duration<double>':'std::chrono::duration<double, std::ratio<1, 1> >' 'void (const std::chrono::duration<double, std::ratio<1, 1> > &) noexcept' elidable
    |       `-MaterializeTemporaryExpr 0xe74998 <col:41, col:47> 'const std::chrono::duration<double>':'const std::chrono::duration<double, std::ratio<1, 1> >' lvalue
    |         `-ImplicitCastExpr 0xe74980 <col:41, col:47> 'const std::chrono::duration<double>':'const std::chrono::duration<double, std::ratio<1, 1> >' <NoOp>
    |           `-ImplicitCastExpr 0xe6cfd8 <col:41, col:47> 'std::chrono::duration<double>':'std::chrono::duration<double, std::ratio<1, 1> >' <ConstructorConversion>
    |             `-CXXConstructExpr 0xe6cfa8 <col:41, col:47> 'std::chrono::duration<double>':'std::chrono::duration<double, std::ratio<1, 1> >' 'void (const duration<long, std::ratio<1, 1000000000> > &)'
    |               `-MaterializeTemporaryExpr 0xe57828 <col:41, col:47> 'const typename common_type<duration<long, ratio<1, 1000000000> >, duration<long, ratio<1, 1000000000> > >::type':'const std::chrono::duration<long, std::ratio<1, 1000000000> >' lvalue
    |                 `-ImplicitCastExpr 0xe57810 <col:41, col:47> 'const typename common_type<duration<long, ratio<1, 1000000000> >, duration<long, ratio<1, 1000000000> > >::type':'const std::chrono::duration<long, std::ratio<1, 1000000000> >' <NoOp>
    |                   `-CXXOperatorCallExpr 0xe4ef20 <col:41, col:47> 'typename common_type<duration<long, ratio<1, 1000000000> >, duration<long, ratio<1, 1000000000> > >::type':'std::chrono::duration<long, std::ratio<1, 1000000000> >' adl
    |                     |-ImplicitCastExpr 0xe4ef08 <col:45> 'typename common_type<duration<long, ratio<1, 1000000000> >, duration<long, ratio<1, 1000000000> > >::type (*)(const time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &, const time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &)' <FunctionToPointerDecay>
    |                     | `-DeclRefExpr 0xe44e90 <col:45> 'typename common_type<duration<long, ratio<1, 1000000000> >, duration<long, ratio<1, 1000000000> > >::type (const time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &, const time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &)' lvalue Function 0xe44d28 'operator-' 'typename common_type<duration<long, ratio<1, 1000000000> >, duration<long, ratio<1, 1000000000> > >::type (const time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &, const time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &)'
    |                     |-ImplicitCastExpr 0xe44e60 <col:41> 'const time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >':'const std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >' lvalue <NoOp>
    |                     | `-DeclRefExpr 0xe44628 <col:41> 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >':'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >' lvalue Var 0xe43d00 'end' 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >':'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >'
    |                     `-ImplicitCastExpr 0xe44e78 <col:47> 'const time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >':'const std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >' lvalue <NoOp>
    |                       `-DeclRefExpr 0xe44648 <col:47> 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >':'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >' lvalue Var 0xe3f578 'start' 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >':'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >'
    |-CallExpr 0xe74c10 <line:87:4, col:65> 'int'
    | |-ImplicitCastExpr 0xe74bf8 <col:4> 'int (*)(const char *__restrict, ...)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0xe74b78 <col:4> 'int (const char *__restrict, ...)' lvalue Function 0xaadbc8 'printf' 'int (const char *__restrict, ...)'
    | |-ImplicitCastExpr 0xe74c48 <col:11> 'const char *' <ArrayToPointerDecay>
    | | `-StringLiteral 0xe74a98 <col:11> 'const char [32]' lvalue "[VectorAVX Time] %lf  [Res] %f\n"
    | |-CXXMemberCallExpr 0xe74b20 <col:48, col:59> 'std::chrono::duration<double, std::ratio<1, 1> >::rep':'double'
    | | `-MemberExpr 0xe74af0 <col:48, col:53> '<bound member function type>' .count 0xe52b38
    | |   `-ImplicitCastExpr 0xe74b40 <col:48> 'const std::chrono::duration<double, std::ratio<1, 1> >' lvalue <NoOp>
    | |     `-DeclRefExpr 0xe74ad0 <col:48> 'std::chrono::duration<double>':'std::chrono::duration<double, std::ratio<1, 1> >' lvalue Var 0xe445c0 'diff' 'std::chrono::duration<double>':'std::chrono::duration<double, std::ratio<1, 1> >'
    | `-ImplicitCastExpr 0xe74c78 <col:62> 'double' <FloatingCast>
    |   `-ImplicitCastExpr 0xe74c60 <col:62> 'float' <LValueToRValue>
    |     `-DeclRefExpr 0xe74b58 <col:62> 'float' lvalue Var 0xe3f4a0 'res' 'float'
    |-CallExpr 0xe74d30 <line:88:4, col:15> 'int'
    | |-ImplicitCastExpr 0xe74d18 <col:4> 'int (*)(const char *__restrict, ...)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0xe74cf8 <col:4> 'int (const char *__restrict, ...)' lvalue Function 0xaadbc8 'printf' 'int (const char *__restrict, ...)'
    | `-ImplicitCastExpr 0xe74d58 <col:11> 'const char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0xe74cd8 <col:11> 'const char [2]' lvalue "\n"
    |-ForStmt 0xe751c8 <line:90:4, line:92:4>
    | |-DeclStmt 0xe74e10 <line:90:8, col:18>
    | | `-VarDecl 0xe74d88 <col:8, col:16> col:12 used i 'int' cinit
    | |   `-IntegerLiteral 0xe74df0 <col:16> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0xe74e80 <col:20, col:24> 'bool' '<'
    | | |-ImplicitCastExpr 0xe74e68 <col:20> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0xe74e28 <col:20> 'int' lvalue Var 0xe74d88 'i' 'int'
    | | `-IntegerLiteral 0xe74e48 <col:24> 'int' 8
    | |-UnaryOperator 0xe74ec0 <col:28, col:29> 'int' postfix '++'
    | | `-DeclRefExpr 0xe74ea0 <col:28> 'int' lvalue Var 0xe74d88 'i' 'int'
    | `-CompoundStmt 0xe751b0 <col:33, line:92:4>
    |   `-CallExpr 0xe75118 <line:91:7, col:43> 'int'
    |     |-ImplicitCastExpr 0xe75100 <col:7> 'int (*)(const char *__restrict, ...)' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0xe750e0 <col:7> 'int (const char *__restrict, ...)' lvalue Function 0xaadbc8 'printf' 'int (const char *__restrict, ...)'
    |     |-ImplicitCastExpr 0xe75150 <col:14> 'const char *' <ArrayToPointerDecay>
    |     | `-StringLiteral 0xe74f98 <col:14> 'const char [11]' lvalue "%f -> %d \n"
    |     |-ImplicitCastExpr 0xe75180 <col:29, col:34> 'double' <FloatingCast>
    |     | `-ImplicitCastExpr 0xe75168 <col:29, col:34> 'float' <LValueToRValue>
    |     |   `-ArraySubscriptExpr 0xe75030 <col:29, col:34> 'float' lvalue
    |     |     |-ImplicitCastExpr 0xe75000 <col:29> 'float *' <ArrayToPointerDecay>
    |     |     | `-DeclRefExpr 0xe74fc0 <col:29> 'float [vlen]' lvalue Var 0xe3f0a0 'inp' 'float [vlen]'
    |     |     `-ImplicitCastExpr 0xe75018 <col:33> 'int' <LValueToRValue>
    |     |       `-DeclRefExpr 0xe74fe0 <col:33> 'int' lvalue Var 0xe74d88 'i' 'int'
    |     `-ImplicitCastExpr 0xe75198 <col:37, col:42> 'int' <LValueToRValue>
    |       `-ArraySubscriptExpr 0xe750c0 <col:37, col:42> 'int' lvalue
    |         |-ImplicitCastExpr 0xe75090 <col:37> 'int *' <ArrayToPointerDecay>
    |         | `-DeclRefExpr 0xe75050 <col:37> 'int [vlen]' lvalue Var 0xe3ef70 'out' 'int [vlen]'
    |         `-ImplicitCastExpr 0xe750a8 <col:41> 'int' <LValueToRValue>
    |           `-DeclRefExpr 0xe75070 <col:41> 'int' lvalue Var 0xe74d88 'i' 'int'
    |-CallExpr 0xe752a0 <line:94:4, col:15> 'int'
    | |-ImplicitCastExpr 0xe75288 <col:4> 'int (*)(const char *__restrict, ...)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0xe75268 <col:4> 'int (const char *__restrict, ...)' lvalue Function 0xaadbc8 'printf' 'int (const char *__restrict, ...)'
    | `-ImplicitCastExpr 0xe752c8 <col:11> 'const char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0xe75248 <col:11> 'const char [2]' lvalue "\n"
    |-BinaryOperator 0xe75320 <line:95:4, col:10> 'float' lvalue '='
    | |-DeclRefExpr 0xe752e0 <col:4> 'float' lvalue Var 0xe3f4a0 'res' 'float'
    | `-FloatingLiteral 0xe75300 <col:10> 'float' 0.000000e+00
    |-ExprWithCleanups 0xe759e8 <line:96:4, col:43> 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >' lvalue
    | `-CXXOperatorCallExpr 0xe759b0 <col:4, col:43> 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >' lvalue
    |   |-ImplicitCastExpr 0xe75998 <col:10> 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &(*)(std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &&) noexcept' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0xe755b0 <col:10> 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &(std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &&) noexcept' lvalue CXXMethod 0xe41128 'operator=' 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &(std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &&) noexcept'
    |   |-DeclRefExpr 0xe75340 <col:4> 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >':'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >' lvalue Var 0xe3f578 'start' 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >':'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >'
    |   `-MaterializeTemporaryExpr 0xe75598 <col:12, col:43> 'std::chrono::_V2::steady_clock::time_point':'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >' xvalue
    |     `-CallExpr 0xe75400 <col:12, col:43> 'std::chrono::_V2::steady_clock::time_point':'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >'
    |       `-ImplicitCastExpr 0xe753e8 <col:12, col:39> 'std::chrono::_V2::steady_clock::time_point (*)() noexcept' <FunctionToPointerDecay>
    |         `-DeclRefExpr 0xe753b8 <col:12, col:39> 'std::chrono::_V2::steady_clock::time_point () noexcept' lvalue CXXMethod 0xdbdca0 'now' 'std::chrono::_V2::steady_clock::time_point () noexcept'
    |-ForStmt 0xe75e28 <line:97:4, line:99:4>
    | |-DeclStmt 0xe75aa0 <line:97:9, col:18>
    | | `-VarDecl 0xe75a18 <col:9, col:17> col:13 used i 'int' cinit
    | |   `-IntegerLiteral 0xe75a80 <col:17> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0xe75b10 <col:20, col:24> 'bool' '<'
    | | |-ImplicitCastExpr 0xe75af8 <col:20> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0xe75ab8 <col:20> 'int' lvalue Var 0xe75a18 'i' 'int'
    | | `-IntegerLiteral 0xe75ad8 <col:24> 'int' 1000000
    | |-UnaryOperator 0xe75b50 <col:33, col:34> 'int' postfix '++'
    | | `-DeclRefExpr 0xe75b30 <col:33> 'int' lvalue Var 0xe75a18 'i' 'int'
    | `-CompoundStmt 0xe75e10 <col:38, line:99:4>
    |   `-CompoundAssignOperator 0xe75de0 <line:98:7, col:57> 'float' lvalue '+=' ComputeLHSTy='float' ComputeResultTy='float'
    |     |-DeclRefExpr 0xe75b68 <col:7> 'float' lvalue Var 0xe3f4a0 'res' 'float'
    |     `-CallExpr 0xe75d58 <col:14, col:57> 'float'
    |       |-ImplicitCastExpr 0xe75d40 <col:14> 'float (*)(float *, int *, int, int)' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0xe75d20 <col:14> 'float (float *, int *, int, int)' lvalue Function 0xe3cdb0 'convF2I_avx512' 'float (float *, int *, int, int)'
    |       |-ImplicitCastExpr 0xe75d98 <col:29> 'float *' <ArrayToPointerDecay>
    |       | `-DeclRefExpr 0xe75bd0 <col:29> 'float [vlen]' lvalue Var 0xe3f0a0 'inp' 'float [vlen]'
    |       |-ImplicitCastExpr 0xe75db0 <col:34> 'int *' <ArrayToPointerDecay>
    |       | `-DeclRefExpr 0xe75bf0 <col:34> 'int [vlen]' lvalue Var 0xe3ef70 'out' 'int [vlen]'
    |       |-ImplicitCastExpr 0xe75dc8 <col:39> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0xe75c10 <col:39> 'int' lvalue Var 0xe3e398 'vlen' 'int'
    |       `-BinaryOperator 0xe75d00 <col:45, col:56> 'int' '&'
    |         |-ImplicitCastExpr 0xe75ce8 <col:45> 'int' <LValueToRValue>
    |         | `-DeclRefExpr 0xe75c30 <col:45> 'int' lvalue Var 0xe75a18 'i' 'int'
    |         `-ParenExpr 0xe75cc8 <col:49, col:56> 'int'
    |           `-BinaryOperator 0xe75ca8 <col:50, col:55> 'int' '-'
    |             |-ImplicitCastExpr 0xe75c90 <col:50> 'int' <LValueToRValue>
    |             | `-DeclRefExpr 0xe75c50 <col:50> 'int' lvalue Var 0xe3e398 'vlen' 'int'
    |             `-IntegerLiteral 0xe75c70 <col:55> 'int' 1
    |-ExprWithCleanups 0xe75fc8 <line:100:4, col:41> 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >' lvalue
    | `-CXXOperatorCallExpr 0xe75f90 <col:4, col:41> 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >' lvalue
    |   |-ImplicitCastExpr 0xe75f78 <col:8> 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &(*)(std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &&) noexcept' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0xe75f58 <col:8> 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &(std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &&) noexcept' lvalue CXXMethod 0xe41128 'operator=' 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &(std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &&) noexcept'
    |   |-DeclRefExpr 0xe75e60 <col:4> 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >':'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >' lvalue Var 0xe43d00 'end' 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >':'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >'
    |   `-MaterializeTemporaryExpr 0xe75f40 <col:10, col:41> 'std::chrono::_V2::steady_clock::time_point':'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >' xvalue
    |     `-CallExpr 0xe75f20 <col:10, col:41> 'std::chrono::_V2::steady_clock::time_point':'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >'
    |       `-ImplicitCastExpr 0xe75f08 <col:10, col:37> 'std::chrono::_V2::steady_clock::time_point (*)() noexcept' <FunctionToPointerDecay>
    |         `-DeclRefExpr 0xe75ed8 <col:10, col:37> 'std::chrono::_V2::steady_clock::time_point () noexcept' lvalue CXXMethod 0xdbdca0 'now' 'std::chrono::_V2::steady_clock::time_point () noexcept'
    |-ExprWithCleanups 0xe77f58 <line:101:4, col:17> 'std::chrono::duration<double, std::ratio<1, 1> >' lvalue
    | `-CXXOperatorCallExpr 0xe77f20 <col:4, col:17> 'std::chrono::duration<double, std::ratio<1, 1> >' lvalue
    |   |-ImplicitCastExpr 0xe77f08 <col:9> 'std::chrono::duration<double, std::ratio<1, 1> > &(*)(const std::chrono::duration<double, std::ratio<1, 1> > &) noexcept' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0xe77d38 <col:9> 'std::chrono::duration<double, std::ratio<1, 1> > &(const std::chrono::duration<double, std::ratio<1, 1> > &) noexcept' lvalue CXXMethod 0xe52a08 'operator=' 'std::chrono::duration<double, std::ratio<1, 1> > &(const std::chrono::duration<double, std::ratio<1, 1> > &) noexcept'
    |   |-DeclRefExpr 0xe75fe0 <col:4> 'std::chrono::duration<double>':'std::chrono::duration<double, std::ratio<1, 1> >' lvalue Var 0xe445c0 'diff' 'std::chrono::duration<double>':'std::chrono::duration<double, std::ratio<1, 1> >'
    |   `-MaterializeTemporaryExpr 0xe77d20 <col:11, col:17> 'const std::chrono::duration<double, std::ratio<1, 1> >' lvalue
    |     `-ImplicitCastExpr 0xe77d08 <col:11, col:17> 'const std::chrono::duration<double, std::ratio<1, 1> >' <NoOp>
    |       `-ImplicitCastExpr 0xe77cf0 <col:11, col:17> 'std::chrono::duration<double, std::ratio<1, 1> >' <ConstructorConversion>
    |         `-CXXConstructExpr 0xe77cc0 <col:11, col:17> 'std::chrono::duration<double, std::ratio<1, 1> >' 'void (const duration<long, std::ratio<1, 1000000000> > &)'
    |           `-MaterializeTemporaryExpr 0xe77ca8 <col:11, col:17> 'const typename common_type<duration<long, ratio<1, 1000000000> >, duration<long, ratio<1, 1000000000> > >::type':'const std::chrono::duration<long, std::ratio<1, 1000000000> >' lvalue
    |             `-ImplicitCastExpr 0xe77c90 <col:11, col:17> 'const typename common_type<duration<long, ratio<1, 1000000000> >, duration<long, ratio<1, 1000000000> > >::type':'const std::chrono::duration<long, std::ratio<1, 1000000000> >' <NoOp>
    |               `-CXXOperatorCallExpr 0xe76190 <col:11, col:17> 'typename common_type<duration<long, ratio<1, 1000000000> >, duration<long, ratio<1, 1000000000> > >::type':'std::chrono::duration<long, std::ratio<1, 1000000000> >' adl
    |                 |-ImplicitCastExpr 0xe76178 <col:15> 'typename common_type<duration<long, ratio<1, 1000000000> >, duration<long, ratio<1, 1000000000> > >::type (*)(const time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &, const time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &)' <FunctionToPointerDecay>
    |                 | `-DeclRefExpr 0xe76158 <col:15> 'typename common_type<duration<long, ratio<1, 1000000000> >, duration<long, ratio<1, 1000000000> > >::type (const time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &, const time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &)' lvalue Function 0xe44d28 'operator-' 'typename common_type<duration<long, ratio<1, 1000000000> >, duration<long, ratio<1, 1000000000> > >::type (const time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &, const time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &)'
    |                 |-ImplicitCastExpr 0xe76128 <col:11> 'const time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >':'const std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >' lvalue <NoOp>
    |                 | `-DeclRefExpr 0xe76000 <col:11> 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >':'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >' lvalue Var 0xe43d00 'end' 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >':'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >'
    |                 `-ImplicitCastExpr 0xe76140 <col:17> 'const time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >':'const std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >' lvalue <NoOp>
    |                   `-DeclRefExpr 0xe76020 <col:17> 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >':'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >' lvalue Var 0xe3f578 'start' 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >':'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >'
    |-CallExpr 0xe78158 <line:103:4, col:68> 'int'
    | |-ImplicitCastExpr 0xe78140 <col:4> 'int (*)(const char *__restrict, ...)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0xe78120 <col:4> 'int (const char *__restrict, ...)' lvalue Function 0xaadbc8 'printf' 'int (const char *__restrict, ...)'
    | |-ImplicitCastExpr 0xe78190 <col:11> 'const char *' <ArrayToPointerDecay>
    | | `-StringLiteral 0xe78038 <col:11> 'const char [35]' lvalue "[VectorAVX512 Time] %lf  [Res] %f\n"
    | |-CXXMemberCallExpr 0xe780c8 <col:51, col:62> 'std::chrono::duration<double, std::ratio<1, 1> >::rep':'double'
    | | `-MemberExpr 0xe78098 <col:51, col:56> '<bound member function type>' .count 0xe52b38
    | |   `-ImplicitCastExpr 0xe780e8 <col:51> 'const std::chrono::duration<double, std::ratio<1, 1> >' lvalue <NoOp>
    | |     `-DeclRefExpr 0xe78078 <col:51> 'std::chrono::duration<double>':'std::chrono::duration<double, std::ratio<1, 1> >' lvalue Var 0xe445c0 'diff' 'std::chrono::duration<double>':'std::chrono::duration<double, std::ratio<1, 1> >'
    | `-ImplicitCastExpr 0xe781c0 <col:65> 'double' <FloatingCast>
    |   `-ImplicitCastExpr 0xe781a8 <col:65> 'float' <LValueToRValue>
    |     `-DeclRefExpr 0xe78100 <col:65> 'float' lvalue Var 0xe3f4a0 'res' 'float'
    |-CallExpr 0xe78278 <line:104:4, col:15> 'int'
    | |-ImplicitCastExpr 0xe78260 <col:4> 'int (*)(const char *__restrict, ...)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0xe78240 <col:4> 'int (const char *__restrict, ...)' lvalue Function 0xaadbc8 'printf' 'int (const char *__restrict, ...)'
    | `-ImplicitCastExpr 0xe782a0 <col:11> 'const char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0xe78220 <col:11> 'const char [2]' lvalue "\n"
    |-ForStmt 0xe78698 <line:105:4, line:107:4>
    | |-DeclStmt 0xe78358 <line:105:8, col:18>
    | | `-VarDecl 0xe782d0 <col:8, col:16> col:12 used i 'int' cinit
    | |   `-IntegerLiteral 0xe78338 <col:16> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0xe783c8 <col:20, col:24> 'bool' '<'
    | | |-ImplicitCastExpr 0xe783b0 <col:20> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0xe78370 <col:20> 'int' lvalue Var 0xe782d0 'i' 'int'
    | | `-IntegerLiteral 0xe78390 <col:24> 'int' 8
    | |-UnaryOperator 0xe78408 <col:28, col:29> 'int' postfix '++'
    | | `-DeclRefExpr 0xe783e8 <col:28> 'int' lvalue Var 0xe782d0 'i' 'int'
    | `-CompoundStmt 0xe78680 <col:33, line:107:4>
    |   `-CallExpr 0xe785e8 <line:106:7, col:43> 'int'
    |     |-ImplicitCastExpr 0xe785d0 <col:7> 'int (*)(const char *__restrict, ...)' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0xe785b0 <col:7> 'int (const char *__restrict, ...)' lvalue Function 0xaadbc8 'printf' 'int (const char *__restrict, ...)'
    |     |-ImplicitCastExpr 0xe78620 <col:14> 'const char *' <ArrayToPointerDecay>
    |     | `-StringLiteral 0xe78468 <col:14> 'const char [11]' lvalue "%f -> %d \n"
    |     |-ImplicitCastExpr 0xe78650 <col:29, col:34> 'double' <FloatingCast>
    |     | `-ImplicitCastExpr 0xe78638 <col:29, col:34> 'float' <LValueToRValue>
    |     |   `-ArraySubscriptExpr 0xe78500 <col:29, col:34> 'float' lvalue
    |     |     |-ImplicitCastExpr 0xe784d0 <col:29> 'float *' <ArrayToPointerDecay>
    |     |     | `-DeclRefExpr 0xe78490 <col:29> 'float [vlen]' lvalue Var 0xe3f0a0 'inp' 'float [vlen]'
    |     |     `-ImplicitCastExpr 0xe784e8 <col:33> 'int' <LValueToRValue>
    |     |       `-DeclRefExpr 0xe784b0 <col:33> 'int' lvalue Var 0xe782d0 'i' 'int'
    |     `-ImplicitCastExpr 0xe78668 <col:37, col:42> 'int' <LValueToRValue>
    |       `-ArraySubscriptExpr 0xe78590 <col:37, col:42> 'int' lvalue
    |         |-ImplicitCastExpr 0xe78560 <col:37> 'int *' <ArrayToPointerDecay>
    |         | `-DeclRefExpr 0xe78520 <col:37> 'int [vlen]' lvalue Var 0xe3ef70 'out' 'int [vlen]'
    |         `-ImplicitCastExpr 0xe78578 <col:41> 'int' <LValueToRValue>
    |           `-DeclRefExpr 0xe78540 <col:41> 'int' lvalue Var 0xe782d0 'i' 'int'
    |-CallExpr 0xe78770 <line:109:4, col:15> 'int'
    | |-ImplicitCastExpr 0xe78758 <col:4> 'int (*)(const char *__restrict, ...)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0xe78738 <col:4> 'int (const char *__restrict, ...)' lvalue Function 0xaadbc8 'printf' 'int (const char *__restrict, ...)'
    | `-ImplicitCastExpr 0xe78798 <col:11> 'const char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0xe78718 <col:11> 'const char [2]' lvalue "\n"
    |-BinaryOperator 0xe787f0 <line:110:4, col:10> 'float' lvalue '='
    | |-DeclRefExpr 0xe787b0 <col:4> 'float' lvalue Var 0xe3f4a0 'res' 'float'
    | `-FloatingLiteral 0xe787d0 <col:10> 'float' 0.000000e+00
    |-ExprWithCleanups 0xe78990 <line:111:4, col:43> 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >' lvalue
    | `-CXXOperatorCallExpr 0xe78958 <col:4, col:43> 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >' lvalue
    |   |-ImplicitCastExpr 0xe78940 <col:10> 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &(*)(std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &&) noexcept' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0xe78920 <col:10> 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &(std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &&) noexcept' lvalue CXXMethod 0xe41128 'operator=' 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &(std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &&) noexcept'
    |   |-DeclRefExpr 0xe78810 <col:4> 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >':'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >' lvalue Var 0xe3f578 'start' 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >':'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >'
    |   `-MaterializeTemporaryExpr 0xe78908 <col:12, col:43> 'std::chrono::_V2::steady_clock::time_point':'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >' xvalue
    |     `-CallExpr 0xe788e8 <col:12, col:43> 'std::chrono::_V2::steady_clock::time_point':'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >'
    |       `-ImplicitCastExpr 0xe788d0 <col:12, col:39> 'std::chrono::_V2::steady_clock::time_point (*)() noexcept' <FunctionToPointerDecay>
    |         `-DeclRefExpr 0xe78888 <col:12, col:39> 'std::chrono::_V2::steady_clock::time_point () noexcept' lvalue CXXMethod 0xdbdca0 'now' 'std::chrono::_V2::steady_clock::time_point () noexcept'
    |-ForStmt 0xe78dd0 <line:112:4, line:114:4>
    | |-DeclStmt 0xe78a48 <line:112:9, col:18>
    | | `-VarDecl 0xe789c0 <col:9, col:17> col:13 used i 'int' cinit
    | |   `-IntegerLiteral 0xe78a28 <col:17> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0xe78ab8 <col:20, col:24> 'bool' '<'
    | | |-ImplicitCastExpr 0xe78aa0 <col:20> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0xe78a60 <col:20> 'int' lvalue Var 0xe789c0 'i' 'int'
    | | `-IntegerLiteral 0xe78a80 <col:24> 'int' 1000000
    | |-UnaryOperator 0xe78af8 <col:33, col:34> 'int' postfix '++'
    | | `-DeclRefExpr 0xe78ad8 <col:33> 'int' lvalue Var 0xe789c0 'i' 'int'
    | `-CompoundStmt 0xe78db8 <col:38, line:114:4>
    |   `-CompoundAssignOperator 0xe78d88 <line:113:7, col:57> 'float' lvalue '+=' ComputeLHSTy='float' ComputeResultTy='float'
    |     |-DeclRefExpr 0xe78b10 <col:7> 'float' lvalue Var 0xe3f4a0 'res' 'float'
    |     `-CallExpr 0xe78d00 <col:14, col:57> 'float'
    |       |-ImplicitCastExpr 0xe78ce8 <col:14> 'float (*)(float *, int *, int, int)' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0xe78cc8 <col:14> 'float (float *, int *, int, int)' lvalue Function 0xe3d940 'convF2I_scalar' 'float (float *, int *, int, int)'
    |       |-ImplicitCastExpr 0xe78d40 <col:29> 'float *' <ArrayToPointerDecay>
    |       | `-DeclRefExpr 0xe78b78 <col:29> 'float [vlen]' lvalue Var 0xe3f0a0 'inp' 'float [vlen]'
    |       |-ImplicitCastExpr 0xe78d58 <col:34> 'int *' <ArrayToPointerDecay>
    |       | `-DeclRefExpr 0xe78b98 <col:34> 'int [vlen]' lvalue Var 0xe3ef70 'out' 'int [vlen]'
    |       |-ImplicitCastExpr 0xe78d70 <col:39> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0xe78bb8 <col:39> 'int' lvalue Var 0xe3e398 'vlen' 'int'
    |       `-BinaryOperator 0xe78ca8 <col:45, col:56> 'int' '&'
    |         |-ImplicitCastExpr 0xe78c90 <col:45> 'int' <LValueToRValue>
    |         | `-DeclRefExpr 0xe78bd8 <col:45> 'int' lvalue Var 0xe789c0 'i' 'int'
    |         `-ParenExpr 0xe78c70 <col:49, col:56> 'int'
    |           `-BinaryOperator 0xe78c50 <col:50, col:55> 'int' '-'
    |             |-ImplicitCastExpr 0xe78c38 <col:50> 'int' <LValueToRValue>
    |             | `-DeclRefExpr 0xe78bf8 <col:50> 'int' lvalue Var 0xe3e398 'vlen' 'int'
    |             `-IntegerLiteral 0xe78c18 <col:55> 'int' 1
    |-ExprWithCleanups 0xe78f70 <line:115:4, col:41> 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >' lvalue
    | `-CXXOperatorCallExpr 0xe78f38 <col:4, col:41> 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >' lvalue
    |   |-ImplicitCastExpr 0xe78f20 <col:8> 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &(*)(std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &&) noexcept' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0xe78f00 <col:8> 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &(std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &&) noexcept' lvalue CXXMethod 0xe41128 'operator=' 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &(std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &&) noexcept'
    |   |-DeclRefExpr 0xe78e08 <col:4> 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >':'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >' lvalue Var 0xe43d00 'end' 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >':'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >'
    |   `-MaterializeTemporaryExpr 0xe78ee8 <col:10, col:41> 'std::chrono::_V2::steady_clock::time_point':'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >' xvalue
    |     `-CallExpr 0xe78ec8 <col:10, col:41> 'std::chrono::_V2::steady_clock::time_point':'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >'
    |       `-ImplicitCastExpr 0xe78eb0 <col:10, col:37> 'std::chrono::_V2::steady_clock::time_point (*)() noexcept' <FunctionToPointerDecay>
    |         `-DeclRefExpr 0xe78e80 <col:10, col:37> 'std::chrono::_V2::steady_clock::time_point () noexcept' lvalue CXXMethod 0xdbdca0 'now' 'std::chrono::_V2::steady_clock::time_point () noexcept'
    |-ExprWithCleanups 0xe7ad48 <line:116:4, col:17> 'std::chrono::duration<double, std::ratio<1, 1> >' lvalue
    | `-CXXOperatorCallExpr 0xe7ad10 <col:4, col:17> 'std::chrono::duration<double, std::ratio<1, 1> >' lvalue
    |   |-ImplicitCastExpr 0xe7acf8 <col:9> 'std::chrono::duration<double, std::ratio<1, 1> > &(*)(const std::chrono::duration<double, std::ratio<1, 1> > &) noexcept' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0xe7acd8 <col:9> 'std::chrono::duration<double, std::ratio<1, 1> > &(const std::chrono::duration<double, std::ratio<1, 1> > &) noexcept' lvalue CXXMethod 0xe52a08 'operator=' 'std::chrono::duration<double, std::ratio<1, 1> > &(const std::chrono::duration<double, std::ratio<1, 1> > &) noexcept'
    |   |-DeclRefExpr 0xe78f88 <col:4> 'std::chrono::duration<double>':'std::chrono::duration<double, std::ratio<1, 1> >' lvalue Var 0xe445c0 'diff' 'std::chrono::duration<double>':'std::chrono::duration<double, std::ratio<1, 1> >'
    |   `-MaterializeTemporaryExpr 0xe7acc0 <col:11, col:17> 'const std::chrono::duration<double, std::ratio<1, 1> >' lvalue
    |     `-ImplicitCastExpr 0xe7aca8 <col:11, col:17> 'const std::chrono::duration<double, std::ratio<1, 1> >' <NoOp>
    |       `-ImplicitCastExpr 0xe7ac90 <col:11, col:17> 'std::chrono::duration<double, std::ratio<1, 1> >' <ConstructorConversion>
    |         `-CXXConstructExpr 0xe7ac60 <col:11, col:17> 'std::chrono::duration<double, std::ratio<1, 1> >' 'void (const duration<long, std::ratio<1, 1000000000> > &)'
    |           `-MaterializeTemporaryExpr 0xe7ac48 <col:11, col:17> 'const typename common_type<duration<long, ratio<1, 1000000000> >, duration<long, ratio<1, 1000000000> > >::type':'const std::chrono::duration<long, std::ratio<1, 1000000000> >' lvalue
    |             `-ImplicitCastExpr 0xe7ac30 <col:11, col:17> 'const typename common_type<duration<long, ratio<1, 1000000000> >, duration<long, ratio<1, 1000000000> > >::type':'const std::chrono::duration<long, std::ratio<1, 1000000000> >' <NoOp>
    |               `-CXXOperatorCallExpr 0xe79138 <col:11, col:17> 'typename common_type<duration<long, ratio<1, 1000000000> >, duration<long, ratio<1, 1000000000> > >::type':'std::chrono::duration<long, std::ratio<1, 1000000000> >' adl
    |                 |-ImplicitCastExpr 0xe79120 <col:15> 'typename common_type<duration<long, ratio<1, 1000000000> >, duration<long, ratio<1, 1000000000> > >::type (*)(const time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &, const time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &)' <FunctionToPointerDecay>
    |                 | `-DeclRefExpr 0xe79100 <col:15> 'typename common_type<duration<long, ratio<1, 1000000000> >, duration<long, ratio<1, 1000000000> > >::type (const time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &, const time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &)' lvalue Function 0xe44d28 'operator-' 'typename common_type<duration<long, ratio<1, 1000000000> >, duration<long, ratio<1, 1000000000> > >::type (const time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &, const time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > > &)'
    |                 |-ImplicitCastExpr 0xe790d0 <col:11> 'const time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >':'const std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >' lvalue <NoOp>
    |                 | `-DeclRefExpr 0xe78fa8 <col:11> 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >':'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >' lvalue Var 0xe43d00 'end' 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >':'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >'
    |                 `-ImplicitCastExpr 0xe790e8 <col:17> 'const time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >':'const std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >' lvalue <NoOp>
    |                   `-DeclRefExpr 0xe78fc8 <col:17> 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >':'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >' lvalue Var 0xe3f578 'start' 'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >':'std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000> > >'
    |-CallExpr 0xe7af40 <line:118:4, col:62> 'int'
    | |-ImplicitCastExpr 0xe7af28 <col:4> 'int (*)(const char *__restrict, ...)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0xe7af08 <col:4> 'int (const char *__restrict, ...)' lvalue Function 0xaadbc8 'printf' 'int (const char *__restrict, ...)'
    | |-ImplicitCastExpr 0xe7af78 <col:11> 'const char *' <ArrayToPointerDecay>
    | | `-StringLiteral 0xe7ae28 <col:11> 'const char [29]' lvalue "[Scalar Time] %lf  [Res] %f\n"
    | |-CXXMemberCallExpr 0xe7aeb0 <col:45, col:56> 'std::chrono::duration<double, std::ratio<1, 1> >::rep':'double'
    | | `-MemberExpr 0xe7ae80 <col:45, col:50> '<bound member function type>' .count 0xe52b38
    | |   `-ImplicitCastExpr 0xe7aed0 <col:45> 'const std::chrono::duration<double, std::ratio<1, 1> >' lvalue <NoOp>
    | |     `-DeclRefExpr 0xe7ae60 <col:45> 'std::chrono::duration<double>':'std::chrono::duration<double, std::ratio<1, 1> >' lvalue Var 0xe445c0 'diff' 'std::chrono::duration<double>':'std::chrono::duration<double, std::ratio<1, 1> >'
    | `-ImplicitCastExpr 0xe7afa8 <col:59> 'double' <FloatingCast>
    |   `-ImplicitCastExpr 0xe7af90 <col:59> 'float' <LValueToRValue>
    |     `-DeclRefExpr 0xe7aee8 <col:59> 'float' lvalue Var 0xe3f4a0 'res' 'float'
    |-CallExpr 0xe7b060 <line:119:4, col:15> 'int'
    | |-ImplicitCastExpr 0xe7b048 <col:4> 'int (*)(const char *__restrict, ...)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0xe7b028 <col:4> 'int (const char *__restrict, ...)' lvalue Function 0xaadbc8 'printf' 'int (const char *__restrict, ...)'
    | `-ImplicitCastExpr 0xe7b088 <col:11> 'const char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0xe7b008 <col:11> 'const char [2]' lvalue "\n"
    |-ForStmt 0xe7b480 <line:120:4, line:122:4>
    | |-DeclStmt 0xe7b140 <line:120:8, col:18>
    | | `-VarDecl 0xe7b0b8 <col:8, col:16> col:12 used i 'int' cinit
    | |   `-IntegerLiteral 0xe7b120 <col:16> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0xe7b1b0 <col:20, col:24> 'bool' '<'
    | | |-ImplicitCastExpr 0xe7b198 <col:20> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0xe7b158 <col:20> 'int' lvalue Var 0xe7b0b8 'i' 'int'
    | | `-IntegerLiteral 0xe7b178 <col:24> 'int' 8
    | |-UnaryOperator 0xe7b1f0 <col:28, col:29> 'int' postfix '++'
    | | `-DeclRefExpr 0xe7b1d0 <col:28> 'int' lvalue Var 0xe7b0b8 'i' 'int'
    | `-CompoundStmt 0xe7b468 <col:33, line:122:4>
    |   `-CallExpr 0xe7b3d0 <line:121:7, col:43> 'int'
    |     |-ImplicitCastExpr 0xe7b3b8 <col:7> 'int (*)(const char *__restrict, ...)' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0xe7b398 <col:7> 'int (const char *__restrict, ...)' lvalue Function 0xaadbc8 'printf' 'int (const char *__restrict, ...)'
    |     |-ImplicitCastExpr 0xe7b408 <col:14> 'const char *' <ArrayToPointerDecay>
    |     | `-StringLiteral 0xe7b250 <col:14> 'const char [11]' lvalue "%f -> %d \n"
    |     |-ImplicitCastExpr 0xe7b438 <col:29, col:34> 'double' <FloatingCast>
    |     | `-ImplicitCastExpr 0xe7b420 <col:29, col:34> 'float' <LValueToRValue>
    |     |   `-ArraySubscriptExpr 0xe7b2e8 <col:29, col:34> 'float' lvalue
    |     |     |-ImplicitCastExpr 0xe7b2b8 <col:29> 'float *' <ArrayToPointerDecay>
    |     |     | `-DeclRefExpr 0xe7b278 <col:29> 'float [vlen]' lvalue Var 0xe3f0a0 'inp' 'float [vlen]'
    |     |     `-ImplicitCastExpr 0xe7b2d0 <col:33> 'int' <LValueToRValue>
    |     |       `-DeclRefExpr 0xe7b298 <col:33> 'int' lvalue Var 0xe7b0b8 'i' 'int'
    |     `-ImplicitCastExpr 0xe7b450 <col:37, col:42> 'int' <LValueToRValue>
    |       `-ArraySubscriptExpr 0xe7b378 <col:37, col:42> 'int' lvalue
    |         |-ImplicitCastExpr 0xe7b348 <col:37> 'int *' <ArrayToPointerDecay>
    |         | `-DeclRefExpr 0xe7b308 <col:37> 'int [vlen]' lvalue Var 0xe3ef70 'out' 'int [vlen]'
    |         `-ImplicitCastExpr 0xe7b360 <col:41> 'int' <LValueToRValue>
    |           `-DeclRefExpr 0xe7b328 <col:41> 'int' lvalue Var 0xe7b0b8 'i' 'int'
    `-ReturnStmt 0xe7b4d8 <line:123:4, col:11>
      `-IntegerLiteral 0xe7b4b8 <col:11> 'int' 0
 "/usr/bin/ld" -z relro --hash-style=gnu --build-id --eh-frame-hdr -m elf_x86_64 -dynamic-linker /lib64/ld-linux-x86-64.so.2 -o a.out /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crt1.o /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crti.o /usr/bin/../lib/gcc/x86_64-linux-gnu/9/crtbegin.o -L/usr/bin/../lib/gcc/x86_64-linux-gnu/9 -L/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu -L/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../lib64 -L/lib/x86_64-linux-gnu -L/lib/../lib64 -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib64 -L/usr/lib/x86_64-linux-gnu/../../lib64 -L/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../.. -L/usr/lib/llvm-10/bin/../lib -L/lib -L/usr/lib /tmp/main-2bb11f.o -lgcc --as-needed -lgcc_s --no-as-needed -lc -lgcc --as-needed -lgcc_s --no-as-needed /usr/bin/../lib/gcc/x86_64-linux-gnu/9/crtend.o /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crtn.o
/usr/bin/ld: /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crt1.o: in function `_start':
(.text+0x24): undefined reference to `main'
clang: error: linker command failed with exit code 1 (use -v to see invocation)
