CompileCommand: print vapi_compare.micro_scalar
OpenJDK 64-Bit Server VM warning: printing of assembly code is enabled; turning on DebugNonSafepoints to gain additional output
[Time] 643 ms  , Vector Mismatch Index = 6

============================= C2-compiled nmethod ==============================
----------------------- MetaData before Compile_id = 249 ------------------------
{method}
 - this oop:          0x00007f7893d3c9d0
 - method holder:     'vapi_compare'
 - constants:         0x00007f7893d3c0e8 constant pool [154]/operands[10] {0x00007f7893d3c0e8} for 'vapi_compare' cache=0x00007f7893d3b040
 - access:            0xc1000001  public 
 - name:              'micro_scalar'
 - signature:         '([B[BI)I'
 - max stack:         4
 - max locals:        5
 - size of params:    4
 - method size:       13
 - vtable index:      5
 - i2i entry:         0x00007f78f1010f80
 - adapters:          AHE@0x00007f78f4412a30: 0xbbba0000 i2c: 0x00007f78f1051760 c2i: 0x00007f78f105184c c2iUV: 0x00007f78f1051816 c2iNCI: 0x00007f78f1051889
 - compiled entry     0x00007f78f105184c
 - code size:         31
 - code start:        0x00007f7893d3c9a0
 - code end (excl):   0x00007f7893d3c9bf
 - method data:       0x00007f7893eac5c8
 - checked ex length: 0
 - linenumber start:  0x00007f7893d3c9bf
 - localvar length:   0

------------------------ OptoAssembly for Compile_id = 249 -----------------------
#
#  int ( vapi_compare:NotNull *, byte[int:>=0]:exact *, byte[int:>=0]:exact *, int )
#
#r018 rsi:rsi   : parm 0: vapi_compare:NotNull *
#r016 rdx:rdx   : parm 1: byte[int:>=0]:exact *
#r010 rcx:rcx   : parm 2: byte[int:>=0]:exact *
#r004 r8   : parm 3: int
# -- Old rsp -- Framesize: 64 --
#r583 rsp+60: in_preserve
#r582 rsp+56: return address
#r581 rsp+52: in_preserve
#r580 rsp+48: saved fp register
#r579 rsp+44: pad2, stack alignment
#r578 rsp+40: pad2, stack alignment
#r577 rsp+36: Fixed slot 1
#r576 rsp+32: Fixed slot 0
#r591 rsp+28: spill
#r590 rsp+24: spill
#r589 rsp+20: spill
#r588 rsp+16: spill
#r587 rsp+12: spill
#r586 rsp+ 8: spill
#r585 rsp+ 4: spill
#r584 rsp+ 0: spill
#
000     N295: #	out( B1 ) <- BLOCK HEAD IS JUNK  Freq: 1
000     movl    rscratch1, [j_rarg0 + oopDesc::klass_offset_in_bytes()]	# compressed klass
	decode_klass_not_null rscratch1, rscratch1
	cmpq    rax, rscratch1	 # Inline cache check
	jne     SharedRuntime::_ic_miss_stub
	nop	# nops to align entry point

        nop 	# 4 bytes pad for loops and calls

020     B1: #	out( B38 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
020     # stack bang (160 bytes)
	pushq   rbp	# Save rbp
	subq    rsp, #48	# Create frame

02c     testl   R8, R8
02f     jle     B38  P=0.000000 C=23931.000000

035     B2: #	out( B33 B3 ) <- in( B1 )  Freq: 1
035     movl    R10, [RDX + #12 (8-bit)]	# range
039     NullCheck RDX

039     B3: #	out( B33 B4 ) <- in( B2 )  Freq: 0.999999
039     testl   R10, R10	# unsigned
        nop 	# 4 bytes pad for loops and calls
040     jbe,u   B33  P=0.000001 C=-1.000000

046     B4: #	out( B33 B5 ) <- in( B3 )  Freq: 0.999997
046     movslq  R11, R10	# i2l
049     movslq  RBX, R8	# i2l
04c     decq    RBX	# long
04f     cmpq    RBX, R11	# unsigned
052     jnb,u   B33  P=0.000001 C=-1.000000

058     B5: #	out( B33 B6 ) <- in( B4 )  Freq: 0.999996
        nop 	# 8 bytes pad for loops and calls
060     movl    R9, [RCX + #12 (8-bit)]	# range
064     NullCheck RCX

064     B6: #	out( B33 B7 ) <- in( B5 )  Freq: 0.999995
064     testl   R9, R9	# unsigned
067     jbe,u   B33  P=0.000001 C=-1.000000

06d     B7: #	out( B33 B8 ) <- in( B6 )  Freq: 0.999994
06d     movslq  R11, R9	# i2l
070     cmpq    RBX, R11	# unsigned
073     jnb,u   B33  P=0.000001 C=-1.000000

079     B8: #	out( B32 B9 ) <- in( B7 )  Freq: 0.999993
079     movsbl  R11, [RCX + #16 (8-bit)]	# byte
07e     movsbl  RDI, [RDX + #16 (8-bit)]	# byte
082     xorl    R13, R13	# int
085     cmpl    RDI, R11
088     jne     B32  P=0.142869 C=23931.000000

08e     B9: #	out( B22 B10 ) <- in( B8 )  Freq: 0.857125
08e     movl    R11, R8	# spill
091     addl    R11, #-3	# int
095     movl    RAX, #1	# int
09a     movl    RDI, #-2147483648	# int
09f     cmpl    R8, R11
0a2     cmovll R11, RDI	# signed, int
0a6     cmpl    R11, #1
0aa     jle     B22  P=0.000001 C=-1.000000

0b0     B10: #	out( B34 B11 ) <- in( B9 )  Freq: 0.857124
0b0     cmpl    R9, #1	# unsigned
0b4     jbe,u   B34  P=0.000001 C=-1.000000

0ba     B11: #	out( B35 B12 ) <- in( B10 )  Freq: 0.857124
        nop 	# 6 bytes pad for loops and calls
0c0     cmpl    R10, #1	# unsigned
0c4     jbe,u   B35  P=0.000001 C=-1.000000

0ca     B12: #	out( B36 B13 ) <- in( B11 )  Freq: 0.857123
0ca     cmpl    R10, #4	# unsigned
0ce     jbe,u   B36  P=0.000001 C=-1.000000

0d4     B13: #	out( B37 B14 ) <- in( B12 )  Freq: 0.857122
0d4     cmpl    R9, #4	# unsigned
0d8     jbe,u   B37  P=0.000001 C=-1.000000

0de     B14: #	out( B15 ) <- in( B13 )  Freq: 0.857121
0de     movl    RDI, #4000	# int

0e3     B15: #	out( B16 ) <- in( B14 B21 ) Loop( B15-B21 ) Freq: 0.857121
0e3     movl    RBX, R11	# spill
0e6     subl    RBX, RAX	# int
0e8     cmpl    R11, RAX
0eb     cmovll RBX, R13	# signed, int
0ef     cmpl    RBX, #4000	# unsigned
0f5     cmovlnbe RBX, RDI	# unsigned, int
0f8     addl    RBX, RAX	# int
        nop 	# 6 bytes pad for loops and calls

100     B16: #	out( B29 B17 ) <- in( B15 B20 ) Loop( B16-B20 inner main of N123 strip mined) Freq: 1.86227
100     movslq  RSI, RAX	# i2l
103     movsbl  R10, [RDX + #16 + RSI]	# byte
109     movsbl  R9, [RCX + #16 + RSI]	# byte
10f     cmpl    R10, R9
112     jne     B29  P=0.142869 C=23931.000000

118     B17: #	out( B28 B18 ) <- in( B16 )  Freq: 1.59621
118     movsbl  R10, [RCX + #17 + RSI]	# byte
11e     movsbl  R9, [RDX + #17 + RSI]	# byte
124     cmpl    R9, R10
127     jne     B28  P=0.142869 C=23931.000000

12d     B18: #	out( B30 B19 ) <- in( B17 )  Freq: 1.36816
12d     movsbl  R10, [RCX + #18 + RSI]	# byte
133     movsbl  R9, [RDX + #18 + RSI]	# byte
139     cmpl    R9, R10
        nop 	# 4 bytes pad for loops and calls
140     jne     B30  P=0.142869 C=23931.000000

146     B19: #	out( B31 B20 ) <- in( B18 )  Freq: 1.1727
146     movsbl  R9, [RCX + #19 + RSI]	# byte
14c     movsbl  R10, [RDX + #19 + RSI]	# byte
152     cmpl    R10, R9
155     jne     B31  P=0.142869 C=23931.000000

15b     B20: #	out( B16 B21 ) <- in( B19 )  Freq: 1.00515
15b     addl    RAX, #4	# int
        nop 	# 2 bytes pad for loops and calls
160     cmpl    RAX, RBX
162     jl,s   B16	# loop end  P=1.000000 C=20512.000000

164     B21: #	out( B15 B22 ) <- in( B20 )  Freq: 4.79295e-07
164     # TLS is in R15
164     movq    R10, [R15 + #296 (32-bit)]	# ptr
16b     testl   rax, [R10]	# Safepoint: poll for GC        # vapi_compare::micro_scalar @ bci:26  L[0]=_ L[1]=RDX L[2]=RCX L[3]=R8 L[4]=RAX
        # OopMap {rcx=Oop rdx=Oop off=363/0x16b}
16e     cmpl    RAX, R11
171     jl     B15  P=1.000000 C=20512.000000

177     B22: #	out( B39 B23 ) <- in( B9 B21 )  Freq: 8.68507e-07
177     cmpl    RAX, R8
        nop 	# 6 bytes pad for loops and calls
180     jge     B39  P=0.000001 C=-1.000000

186     B23: #	out( B24 ) <- in( B22 )  Freq: 8.68506e-07
186     # castII of RAX
        nop 	# 2 bytes pad for loops and calls

188     B24: #	out( B29 B25 ) <- in( B23 B25 ) Loop( B24-B25 inner post of N202) Freq: 6.079e-06
188     movslq  R10, RAX	# i2l
18b     movsbl  R11, [RDX + #16 + R10]	# byte
191     movsbl  R9, [RCX + #16 + R10]	# byte
197     cmpl    R11, R9
19a     jne,s   B29  P=0.142869 C=23931.000000

19c     B25: #	out( B24 B26 ) <- in( B24 )  Freq: 5.2105e-06
19c     incl    RAX	# int
        nop 	# 2 bytes pad for loops and calls
1a0     cmpl    RAX, R8
1a3     jl,s   B24	# loop end  P=0.999999 C=20512.000000

1a5     B26: #	out( B27 ) <- in( B25 )  Freq: 5.27969e-12
1a5     movl    RBP, RAX	# spill

1a7     B27: #	out( N295 ) <- in( B26 B39 )  Freq: 6.15973e-12
1a7     movl    RSI, #-187	# int
1ac     movq    [rsp + #0], RDX	# spill
1b0     movq    [rsp + #8], RCX	# spill
1b5     movl    [rsp + #20], R8	# spill
        nop 	# 1 bytes pad for loops and calls
1bb     call,static  wrapper for: uncommon_trap(reason='unstable_if' action='reinterpret' debug_id='0')
        # vapi_compare::micro_scalar @ bci:6  L[0]=_ L[1]=rsp + #0 L[2]=rsp + #8 L[3]=rsp + #20 L[4]=RBP STK[0]=RBP STK[1]=rsp + #20
        # OopMap {[0]=Oop [8]=Oop off=448/0x1c0}
1c0     stop	# ShouldNotReachHere

1d4     B28: #	out( B29 ) <- in( B17 )  Freq: 0.228049
1d4     incl    RAX	# int

1d6     B29: #	out( N295 ) <- in( B24 B32 B16 B30 B28 B31 )  Freq: 0.99999
1d6     addq    rsp, 48	# Destroy frame
	popq    rbp
	movq    rscratch1, poll_offset[r15_thread] #polling_page_address
	testl   rax, [rscratch1]	# Safepoint: poll for GC

1e5     ret

1e6     B30: #	out( B29 ) <- in( B18 )  Freq: 0.195468
1e6     addl    RAX, #2	# int
1e9     jmp,s   B29

1eb     B31: #	out( B29 ) <- in( B19 )  Freq: 0.167542
1eb     addl    RAX, #3	# int
1ee     jmp,s   B29

1f0     B32: #	out( B29 ) <- in( B8 )  Freq: 0.142868
1f0     xorl    RAX, RAX	# int
1f2     jmp,s   B29

1f4     B33: #	out( N295 ) <- in( B5 B2 B3 B4 B6 B7 )  Freq: 6.0531e-06
1f4     movl    RSI, #-138	# int
1f9     movq    RBP, RDX	# spill
1fc     movq    [rsp + #0], RCX	# spill
200     movl    [rsp + #12], R8	# spill
        nop 	# 2 bytes pad for loops and calls
207     call,static  wrapper for: uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')
        # vapi_compare::micro_scalar @ bci:6  L[0]=_ L[1]=RBP L[2]=rsp + #0 L[3]=rsp + #12 L[4]=#0 STK[0]=#0 STK[1]=rsp + #12
        # OopMap {rbp=Oop [0]=Oop off=524/0x20c}
20c     stop	# ShouldNotReachHere

220     B34: #	out( N295 ) <- in( B10 )  Freq: 8.57124e-07
220     stop	# ShouldNotReachHere

234     B35: #	out( N295 ) <- in( B11 )  Freq: 8.57124e-07
234     stop	# ShouldNotReachHere

248     B36: #	out( N295 ) <- in( B12 )  Freq: 8.57123e-07
248     stop	# ShouldNotReachHere

25c     B37: #	out( N295 ) <- in( B13 )  Freq: 8.57122e-07
25c     stop	# ShouldNotReachHere

270     B38: #	out( N295 ) <- in( B1 )  Freq: 5e-07
270     movl    RSI, #-187	# int
275     movq    RBP, RDX	# spill
278     movq    [rsp + #0], RCX	# spill
27c     movl    [rsp + #12], R8	# spill
        nop 	# 2 bytes pad for loops and calls
283     call,static  wrapper for: uncommon_trap(reason='unstable_if' action='reinterpret' debug_id='0')
        # vapi_compare::micro_scalar @ bci:6  L[0]=_ L[1]=RBP L[2]=rsp + #0 L[3]=rsp + #12 L[4]=#0 STK[0]=#0 STK[1]=rsp + #12
        # OopMap {rbp=Oop [0]=Oop off=648/0x288}
288     stop	# ShouldNotReachHere

29c     B39: #	out( B27 ) <- in( B22 )  Freq: 8.8004e-13
29c     movl    RBP, RAX	# spill
        nop 	# 2 bytes pad for loops and calls
2a0     jmp     B27

--------------------------------------------------------------------------------
----------------------------------- Assembly -----------------------------------

Compiled method (c2)    2124  249             vapi_compare::micro_scalar (31 bytes)
 total in heap  [0x00007f78f11a7190,0x00007f78f11a7980] = 2032
 relocation     [0x00007f78f11a7308,0x00007f78f11a7370] = 104
 main code      [0x00007f78f11a7380,0x00007f78f11a7640] = 704
 stub code      [0x00007f78f11a7640,0x00007f78f11a7658] = 24
 oops           [0x00007f78f11a7658,0x00007f78f11a7660] = 8
 metadata       [0x00007f78f11a7660,0x00007f78f11a7668] = 8
 scopes data    [0x00007f78f11a7668,0x00007f78f11a76e0] = 120
 scopes pcs     [0x00007f78f11a76e0,0x00007f78f11a7960] = 640
 dependencies   [0x00007f78f11a7960,0x00007f78f11a7968] = 8
 nul chk table  [0x00007f78f11a7968,0x00007f78f11a7980] = 24

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00007f7893d3c9d0} 'micro_scalar' '([B[BI)I' in 'vapi_compare'
  # this:     rsi:rsi   = 'vapi_compare'
  # parm0:    rdx:rdx   = '[B'
  # parm1:    rcx:rcx   = '[B'
  # parm2:    r8        = int
  #           [sp+0x40]  (sp of caller)
 ;; N295: #	out( B1 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x00007f78f11a7380:   mov    0x8(%rsi),%r10d
  0x00007f78f11a7384:   movabs $0x800000000,%r11
  0x00007f78f11a738e:   add    %r11,%r10
  0x00007f78f11a7391:   cmp    %r10,%rax
  0x00007f78f11a7394:   jne    0x00007f78f1115c20           ;   {runtime_call ic_miss_stub}
  0x00007f78f11a739a:   nop
  0x00007f78f11a739b:   nop
  0x00007f78f11a739c:   nop
  0x00007f78f11a739d:   nop
  0x00007f78f11a739e:   nop
  0x00007f78f11a739f:   nop
[Verified Entry Point]
 ;; B1: #	out( B38 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x00007f78f11a73a0:   mov    %eax,-0x16000(%rsp)
  0x00007f78f11a73a7:   push   %rbp
  0x00007f78f11a73a8:   sub    $0x30,%rsp                   ;*synchronization entry
                                                            ; - vapi_compare::micro_scalar@-1 (line 35)
  0x00007f78f11a73ac:   test   %r8d,%r8d
  0x00007f78f11a73af:   jle    0x00007f78f11a75f0           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - vapi_compare::micro_scalar@6 (line 35)
 ;; B2: #	out( B33 B3 ) <- in( B1 )  Freq: 1
  0x00007f78f11a73b5:   mov    0xc(%rdx),%r10d              ; implicit exception: dispatches to 0x00007f78f11a7574
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - vapi_compare::micro_scalar@12 (line 36)
 ;; B3: #	out( B33 B4 ) <- in( B2 )  Freq: 0.999999
  0x00007f78f11a73b9:   test   %r10d,%r10d
  0x00007f78f11a73bc:   nop
  0x00007f78f11a73bd:   nop
  0x00007f78f11a73be:   nop
  0x00007f78f11a73bf:   nop
  0x00007f78f11a73c0:   jbe    0x00007f78f11a7574
 ;; B4: #	out( B33 B5 ) <- in( B3 )  Freq: 0.999997
  0x00007f78f11a73c6:   movslq %r10d,%r11
  0x00007f78f11a73c9:   movslq %r8d,%rbx
  0x00007f78f11a73cc:   dec    %rbx
  0x00007f78f11a73cf:   cmp    %r11,%rbx
  0x00007f78f11a73d2:   jae    0x00007f78f11a7574
 ;; B5: #	out( B33 B6 ) <- in( B4 )  Freq: 0.999996
  0x00007f78f11a73d8:   nop
  0x00007f78f11a73d9:   nop
  0x00007f78f11a73da:   nop
  0x00007f78f11a73db:   nop
  0x00007f78f11a73dc:   nop
  0x00007f78f11a73dd:   nop
  0x00007f78f11a73de:   nop
  0x00007f78f11a73df:   nop
  0x00007f78f11a73e0:   mov    0xc(%rcx),%r9d               ; implicit exception: dispatches to 0x00007f78f11a7574
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - vapi_compare::micro_scalar@16 (line 36)
 ;; B6: #	out( B33 B7 ) <- in( B5 )  Freq: 0.999995
  0x00007f78f11a73e4:   test   %r9d,%r9d
  0x00007f78f11a73e7:   jbe    0x00007f78f11a7574
 ;; B7: #	out( B33 B8 ) <- in( B6 )  Freq: 0.999994
  0x00007f78f11a73ed:   movslq %r9d,%r11
  0x00007f78f11a73f0:   cmp    %r11,%rbx
  0x00007f78f11a73f3:   jae    0x00007f78f11a7574
 ;; B8: #	out( B32 B9 ) <- in( B7 )  Freq: 0.999993
  0x00007f78f11a73f9:   movsbl 0x10(%rcx),%r11d
  0x00007f78f11a73fe:   movsbl 0x10(%rdx),%edi
  0x00007f78f11a7402:   xor    %r13d,%r13d
  0x00007f78f11a7405:   cmp    %r11d,%edi
  0x00007f78f11a7408:   jne    0x00007f78f11a7570           ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - vapi_compare::micro_scalar@17 (line 36)
 ;; B9: #	out( B22 B10 ) <- in( B8 )  Freq: 0.857125
  0x00007f78f11a740e:   mov    %r8d,%r11d
  0x00007f78f11a7411:   add    $0xfffffffd,%r11d
  0x00007f78f11a7415:   mov    $0x1,%eax
  0x00007f78f11a741a:   mov    $0x80000000,%edi
  0x00007f78f11a741f:   cmp    %r11d,%r8d
  0x00007f78f11a7422:   cmovl  %edi,%r11d
  0x00007f78f11a7426:   cmp    $0x1,%r11d
  0x00007f78f11a742a:   jle    0x00007f78f11a74f7
 ;; B10: #	out( B34 B11 ) <- in( B9 )  Freq: 0.857124
  0x00007f78f11a7430:   cmp    $0x1,%r9d
  0x00007f78f11a7434:   jbe    0x00007f78f11a75a0
 ;; B11: #	out( B35 B12 ) <- in( B10 )  Freq: 0.857124
  0x00007f78f11a743a:   nop
  0x00007f78f11a743b:   nop
  0x00007f78f11a743c:   nop
  0x00007f78f11a743d:   nop
  0x00007f78f11a743e:   nop
  0x00007f78f11a743f:   nop
  0x00007f78f11a7440:   cmp    $0x1,%r10d
  0x00007f78f11a7444:   jbe    0x00007f78f11a75b4
 ;; B12: #	out( B36 B13 ) <- in( B11 )  Freq: 0.857123
  0x00007f78f11a744a:   cmp    $0x4,%r10d
  0x00007f78f11a744e:   jbe    0x00007f78f11a75c8
 ;; B13: #	out( B37 B14 ) <- in( B12 )  Freq: 0.857122
  0x00007f78f11a7454:   cmp    $0x4,%r9d
  0x00007f78f11a7458:   jbe    0x00007f78f11a75dc
 ;; B14: #	out( B15 ) <- in( B13 )  Freq: 0.857121
  0x00007f78f11a745e:   mov    $0xfa0,%edi
 ;; B15: #	out( B16 ) <- in( B14 B21 ) Loop( B15-B21 ) Freq: 0.857121
  0x00007f78f11a7463:   mov    %r11d,%ebx
  0x00007f78f11a7466:   sub    %eax,%ebx
  0x00007f78f11a7468:   cmp    %eax,%r11d
  0x00007f78f11a746b:   cmovl  %r13d,%ebx
  0x00007f78f11a746f:   cmp    $0xfa0,%ebx
  0x00007f78f11a7475:   cmova  %edi,%ebx
  0x00007f78f11a7478:   add    %eax,%ebx
  0x00007f78f11a747a:   nop
  0x00007f78f11a747b:   nop
  0x00007f78f11a747c:   nop
  0x00007f78f11a747d:   nop
  0x00007f78f11a747e:   nop
  0x00007f78f11a747f:   nop                                 ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - vapi_compare::micro_scalar@9 (line 36)
 ;; B16: #	out( B29 B17 ) <- in( B15 B20 ) Loop( B16-B20 inner main of N123 strip mined) Freq: 1.86227
  0x00007f78f11a7480:   movslq %eax,%rsi                    ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - vapi_compare::micro_scalar@16 (line 36)
  0x00007f78f11a7483:   movsbl 0x10(%rdx,%rsi,1),%r10d      ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - vapi_compare::micro_scalar@12 (line 36)
  0x00007f78f11a7489:   movsbl 0x10(%rcx,%rsi,1),%r9d       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - vapi_compare::micro_scalar@16 (line 36)
  0x00007f78f11a748f:   cmp    %r9d,%r10d
  0x00007f78f11a7492:   jne    0x00007f78f11a7556           ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - vapi_compare::micro_scalar@17 (line 36)
 ;; B17: #	out( B28 B18 ) <- in( B16 )  Freq: 1.59621
  0x00007f78f11a7498:   movsbl 0x11(%rcx,%rsi,1),%r10d      ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - vapi_compare::micro_scalar@16 (line 36)
  0x00007f78f11a749e:   movsbl 0x11(%rdx,%rsi,1),%r9d       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - vapi_compare::micro_scalar@12 (line 36)
  0x00007f78f11a74a4:   cmp    %r10d,%r9d
  0x00007f78f11a74a7:   jne    0x00007f78f11a7554           ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - vapi_compare::micro_scalar@17 (line 36)
 ;; B18: #	out( B30 B19 ) <- in( B17 )  Freq: 1.36816
  0x00007f78f11a74ad:   movsbl 0x12(%rcx,%rsi,1),%r10d      ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - vapi_compare::micro_scalar@16 (line 36)
  0x00007f78f11a74b3:   movsbl 0x12(%rdx,%rsi,1),%r9d       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - vapi_compare::micro_scalar@12 (line 36)
  0x00007f78f11a74b9:   cmp    %r10d,%r9d
  0x00007f78f11a74bc:   nop
  0x00007f78f11a74bd:   nop
  0x00007f78f11a74be:   nop
  0x00007f78f11a74bf:   nop
  0x00007f78f11a74c0:   jne    0x00007f78f11a7566           ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - vapi_compare::micro_scalar@17 (line 36)
 ;; B19: #	out( B31 B20 ) <- in( B18 )  Freq: 1.1727
  0x00007f78f11a74c6:   movsbl 0x13(%rcx,%rsi,1),%r9d       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - vapi_compare::micro_scalar@16 (line 36)
  0x00007f78f11a74cc:   movsbl 0x13(%rdx,%rsi,1),%r10d      ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - vapi_compare::micro_scalar@12 (line 36)
  0x00007f78f11a74d2:   cmp    %r9d,%r10d
  0x00007f78f11a74d5:   jne    0x00007f78f11a756b           ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - vapi_compare::micro_scalar@17 (line 36)
 ;; B20: #	out( B16 B21 ) <- in( B19 )  Freq: 1.00515
  0x00007f78f11a74db:   add    $0x4,%eax                    ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - vapi_compare::micro_scalar@23 (line 35)
  0x00007f78f11a74de:   nop
  0x00007f78f11a74df:   nop
  0x00007f78f11a74e0:   cmp    %ebx,%eax
  0x00007f78f11a74e2:   jl     0x00007f78f11a7480           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - vapi_compare::micro_scalar@26 (line 35)
 ;; B21: #	out( B15 B22 ) <- in( B20 )  Freq: 4.79295e-07
  0x00007f78f11a74e4:   mov    0x128(%r15),%r10             ; ImmutableOopMap {rcx=Oop rdx=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) vapi_compare::micro_scalar@26 (line 35)
  0x00007f78f11a74eb:   test   %eax,(%r10)                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - vapi_compare::micro_scalar@26 (line 35)
                                                            ;   {poll}
  0x00007f78f11a74ee:   cmp    %r11d,%eax
  0x00007f78f11a74f1:   jl     0x00007f78f11a7463
 ;; B22: #	out( B39 B23 ) <- in( B9 B21 )  Freq: 8.68507e-07
  0x00007f78f11a74f7:   cmp    %r8d,%eax
  0x00007f78f11a74fa:   nop
  0x00007f78f11a74fb:   nop
  0x00007f78f11a74fc:   nop
  0x00007f78f11a74fd:   nop
  0x00007f78f11a74fe:   nop
  0x00007f78f11a74ff:   nop
  0x00007f78f11a7500:   jge    0x00007f78f11a761c
 ;; B23: #	out( B24 ) <- in( B22 )  Freq: 8.68506e-07
  0x00007f78f11a7506:   nop
  0x00007f78f11a7507:   nop                                 ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - vapi_compare::micro_scalar@9 (line 36)
 ;; B24: #	out( B29 B25 ) <- in( B23 B25 ) Loop( B24-B25 inner post of N202) Freq: 6.079e-06
  0x00007f78f11a7508:   movslq %eax,%r10                    ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - vapi_compare::micro_scalar@16 (line 36)
  0x00007f78f11a750b:   movsbl 0x10(%rdx,%r10,1),%r11d      ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - vapi_compare::micro_scalar@12 (line 36)
  0x00007f78f11a7511:   movsbl 0x10(%rcx,%r10,1),%r9d       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - vapi_compare::micro_scalar@16 (line 36)
  0x00007f78f11a7517:   cmp    %r9d,%r11d
  0x00007f78f11a751a:   jne    0x00007f78f11a7556           ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - vapi_compare::micro_scalar@17 (line 36)
 ;; B25: #	out( B24 B26 ) <- in( B24 )  Freq: 5.2105e-06
  0x00007f78f11a751c:   inc    %eax                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - vapi_compare::micro_scalar@23 (line 35)
  0x00007f78f11a751e:   nop
  0x00007f78f11a751f:   nop
  0x00007f78f11a7520:   cmp    %r8d,%eax
  0x00007f78f11a7523:   jl     0x00007f78f11a7508           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - vapi_compare::micro_scalar@6 (line 35)
 ;; B26: #	out( B27 ) <- in( B25 )  Freq: 5.27969e-12
  0x00007f78f11a7525:   mov    %eax,%ebp
 ;; B27: #	out( N295 ) <- in( B26 B39 )  Freq: 6.15973e-12
  0x00007f78f11a7527:   mov    $0xffffff45,%esi
  0x00007f78f11a752c:   mov    %rdx,(%rsp)
  0x00007f78f11a7530:   mov    %rcx,0x8(%rsp)
  0x00007f78f11a7535:   mov    %r8d,0x14(%rsp)
  0x00007f78f11a753a:   nop
  0x00007f78f11a753b:   callq  0x00007f78f1118bc0           ; ImmutableOopMap {[0]=Oop [8]=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) vapi_compare::micro_scalar@6 (line 35)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f78f11a7540:   movabs $0x7f78fd51ace0,%rdi         ;   {external_word}
  0x00007f78f11a754a:   and    $0xfffffffffffffff0,%rsp
  0x00007f78f11a754e:   callq  0x00007f78fcd00374           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f78f11a7553:   hlt                                 ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - vapi_compare::micro_scalar@6 (line 35)
 ;; B28: #	out( B29 ) <- in( B17 )  Freq: 0.228049
  0x00007f78f11a7554:   inc    %eax
 ;; B29: #	out( N295 ) <- in( B24 B32 B16 B30 B28 B31 )  Freq: 0.99999
  0x00007f78f11a7556:   add    $0x30,%rsp
  0x00007f78f11a755a:   pop    %rbp
  0x00007f78f11a755b:   mov    0x128(%r15),%r10
  0x00007f78f11a7562:   test   %eax,(%r10)                  ;   {poll_return}
  0x00007f78f11a7565:   retq   
 ;; B30: #	out( B29 ) <- in( B18 )  Freq: 0.195468
  0x00007f78f11a7566:   add    $0x2,%eax
  0x00007f78f11a7569:   jmp    0x00007f78f11a7556
 ;; B31: #	out( B29 ) <- in( B19 )  Freq: 0.167542
  0x00007f78f11a756b:   add    $0x3,%eax                    ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - vapi_compare::micro_scalar@23 (line 35)
  0x00007f78f11a756e:   jmp    0x00007f78f11a7556
 ;; B32: #	out( B29 ) <- in( B8 )  Freq: 0.142868
  0x00007f78f11a7570:   xor    %eax,%eax
  0x00007f78f11a7572:   jmp    0x00007f78f11a7556           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - vapi_compare::micro_scalar@6 (line 35)
 ;; B33: #	out( N295 ) <- in( B5 B2 B3 B4 B6 B7 )  Freq: 6.0531e-06
  0x00007f78f11a7574:   mov    $0xffffff76,%esi
  0x00007f78f11a7579:   mov    %rdx,%rbp
  0x00007f78f11a757c:   mov    %rcx,(%rsp)
  0x00007f78f11a7580:   mov    %r8d,0xc(%rsp)
  0x00007f78f11a7585:   nop
  0x00007f78f11a7586:   nop
  0x00007f78f11a7587:   callq  0x00007f78f1118bc0           ; ImmutableOopMap {rbp=Oop [0]=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) vapi_compare::micro_scalar@6 (line 35)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f78f11a758c:   movabs $0x7f78fd51ace0,%rdi         ;   {external_word}
  0x00007f78f11a7596:   and    $0xfffffffffffffff0,%rsp
  0x00007f78f11a759a:   callq  0x00007f78fcd00374           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f78f11a759f:   hlt                                 ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - vapi_compare::micro_scalar@6 (line 35)
 ;; B34: #	out( N295 ) <- in( B10 )  Freq: 8.57124e-07
  0x00007f78f11a75a0:   movabs $0x7f78fd67ff70,%rdi         ;   {external_word}
  0x00007f78f11a75aa:   and    $0xfffffffffffffff0,%rsp
  0x00007f78f11a75ae:   callq  0x00007f78fcd00374           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f78f11a75b3:   hlt    
 ;; B35: #	out( N295 ) <- in( B11 )  Freq: 8.57124e-07
  0x00007f78f11a75b4:   movabs $0x7f78fd67ff70,%rdi         ;   {external_word}
  0x00007f78f11a75be:   and    $0xfffffffffffffff0,%rsp
  0x00007f78f11a75c2:   callq  0x00007f78fcd00374           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f78f11a75c7:   hlt    
 ;; B36: #	out( N295 ) <- in( B12 )  Freq: 8.57123e-07
  0x00007f78f11a75c8:   movabs $0x7f78fd67ff70,%rdi         ;   {external_word}
  0x00007f78f11a75d2:   and    $0xfffffffffffffff0,%rsp
  0x00007f78f11a75d6:   callq  0x00007f78fcd00374           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f78f11a75db:   hlt    
 ;; B37: #	out( N295 ) <- in( B13 )  Freq: 8.57122e-07
  0x00007f78f11a75dc:   movabs $0x7f78fd67ff70,%rdi         ;   {external_word}
  0x00007f78f11a75e6:   and    $0xfffffffffffffff0,%rsp
  0x00007f78f11a75ea:   callq  0x00007f78fcd00374           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f78f11a75ef:   hlt    
 ;; B38: #	out( N295 ) <- in( B1 )  Freq: 5e-07
  0x00007f78f11a75f0:   mov    $0xffffff45,%esi
  0x00007f78f11a75f5:   mov    %rdx,%rbp
  0x00007f78f11a75f8:   mov    %rcx,(%rsp)
  0x00007f78f11a75fc:   mov    %r8d,0xc(%rsp)
  0x00007f78f11a7601:   nop
  0x00007f78f11a7602:   nop
  0x00007f78f11a7603:   callq  0x00007f78f1118bc0           ; ImmutableOopMap {rbp=Oop [0]=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) vapi_compare::micro_scalar@6 (line 35)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f78f11a7608:   movabs $0x7f78fd51ace0,%rdi         ;   {external_word}
  0x00007f78f11a7612:   and    $0xfffffffffffffff0,%rsp
  0x00007f78f11a7616:   callq  0x00007f78fcd00374           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f78f11a761b:   hlt                                 ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - vapi_compare::micro_scalar@6 (line 35)
 ;; B39: #	out( B27 ) <- in( B22 )  Freq: 8.8004e-13
  0x00007f78f11a761c:   mov    %eax,%ebp
  0x00007f78f11a761e:   nop
  0x00007f78f11a761f:   nop
  0x00007f78f11a7620:   jmpq   0x00007f78f11a7527
  0x00007f78f11a7625:   hlt    
  0x00007f78f11a7626:   hlt    
  0x00007f78f11a7627:   hlt    
  0x00007f78f11a7628:   hlt    
  0x00007f78f11a7629:   hlt    
  0x00007f78f11a762a:   hlt    
  0x00007f78f11a762b:   hlt    
  0x00007f78f11a762c:   hlt    
  0x00007f78f11a762d:   hlt    
  0x00007f78f11a762e:   hlt    
  0x00007f78f11a762f:   hlt    
  0x00007f78f11a7630:   hlt    
  0x00007f78f11a7631:   hlt    
  0x00007f78f11a7632:   hlt    
  0x00007f78f11a7633:   hlt    
  0x00007f78f11a7634:   hlt    
  0x00007f78f11a7635:   hlt    
  0x00007f78f11a7636:   hlt    
  0x00007f78f11a7637:   hlt    
  0x00007f78f11a7638:   hlt    
  0x00007f78f11a7639:   hlt    
  0x00007f78f11a763a:   hlt    
  0x00007f78f11a763b:   hlt    
  0x00007f78f11a763c:   hlt    
  0x00007f78f11a763d:   hlt    
  0x00007f78f11a763e:   hlt    
  0x00007f78f11a763f:   hlt    
[Exception Handler]
  0x00007f78f11a7640:   jmpq   0x00007f78f103b120           ;   {no_reloc}
[Deopt Handler Code]
  0x00007f78f11a7645:   callq  0x00007f78f11a764a
  0x00007f78f11a764a:   subq   $0x5,(%rsp)
  0x00007f78f11a764f:   jmpq   0x00007f78f11184e0           ;   {runtime_call DeoptimizationBlob}
  0x00007f78f11a7654:   hlt    
  0x00007f78f11a7655:   hlt    
  0x00007f78f11a7656:   hlt    
  0x00007f78f11a7657:   hlt    
--------------------------------------------------------------------------------
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Oops:
  0x00007f78f11a7658:   0x00000001010fda78 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x00000001010fda78}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Metadata:
  0x00007f78f11a7660:   0x00007f7893d3c9d0 {method} {0x00007f7893d3c9d0} 'micro_scalar' '([B[BI)I' in 'vapi_compare'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
pc-bytecode offsets:
PcDesc(pc=0x00007f78f11a737f offset=ffffffff bits=0):
PcDesc(pc=0x00007f78f11a73ac offset=2c bits=0):   vapi_compare::micro_scalar@-1 (line 35)
PcDesc(pc=0x00007f78f11a73b5 offset=35 bits=0):   vapi_compare::micro_scalar@6 (line 35)
PcDesc(pc=0x00007f78f11a73b9 offset=39 bits=0):   vapi_compare::micro_scalar@12 (line 36)
PcDesc(pc=0x00007f78f11a73e4 offset=64 bits=0):   vapi_compare::micro_scalar@16 (line 36)
PcDesc(pc=0x00007f78f11a740e offset=8e bits=0):   vapi_compare::micro_scalar@17 (line 36)
PcDesc(pc=0x00007f78f11a7480 offset=100 bits=0):   vapi_compare::micro_scalar@9 (line 36)
PcDesc(pc=0x00007f78f11a7483 offset=103 bits=0):   vapi_compare::micro_scalar@16 (line 36)
PcDesc(pc=0x00007f78f11a7489 offset=109 bits=0):   vapi_compare::micro_scalar@12 (line 36)
PcDesc(pc=0x00007f78f11a748f offset=10f bits=0):   vapi_compare::micro_scalar@16 (line 36)
PcDesc(pc=0x00007f78f11a7498 offset=118 bits=0):   vapi_compare::micro_scalar@17 (line 36)
PcDesc(pc=0x00007f78f11a749e offset=11e bits=0):   vapi_compare::micro_scalar@16 (line 36)
PcDesc(pc=0x00007f78f11a74a4 offset=124 bits=0):   vapi_compare::micro_scalar@12 (line 36)
PcDesc(pc=0x00007f78f11a74ad offset=12d bits=0):   vapi_compare::micro_scalar@17 (line 36)
PcDesc(pc=0x00007f78f11a74b3 offset=133 bits=0):   vapi_compare::micro_scalar@16 (line 36)
PcDesc(pc=0x00007f78f11a74b9 offset=139 bits=0):   vapi_compare::micro_scalar@12 (line 36)
PcDesc(pc=0x00007f78f11a74c6 offset=146 bits=0):   vapi_compare::micro_scalar@17 (line 36)
PcDesc(pc=0x00007f78f11a74cc offset=14c bits=0):   vapi_compare::micro_scalar@16 (line 36)
PcDesc(pc=0x00007f78f11a74d2 offset=152 bits=0):   vapi_compare::micro_scalar@12 (line 36)
PcDesc(pc=0x00007f78f11a74db offset=15b bits=0):   vapi_compare::micro_scalar@17 (line 36)
PcDesc(pc=0x00007f78f11a74de offset=15e bits=0):   vapi_compare::micro_scalar@23 (line 35)
PcDesc(pc=0x00007f78f11a74e4 offset=164 bits=0):   vapi_compare::micro_scalar@26 (line 35)
PcDesc(pc=0x00007f78f11a74eb offset=16b bits=1):   vapi_compare::micro_scalar@26 (line 35)  reexecute=true
   Locals
    - l0: empty
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],oop
    - l3: reg r8 [16],int
    - l4: reg rax [0],int
PcDesc(pc=0x00007f78f11a74ee offset=16e bits=0):   vapi_compare::micro_scalar@26 (line 35)
PcDesc(pc=0x00007f78f11a7508 offset=188 bits=0):   vapi_compare::micro_scalar@9 (line 36)
PcDesc(pc=0x00007f78f11a750b offset=18b bits=0):   vapi_compare::micro_scalar@16 (line 36)
PcDesc(pc=0x00007f78f11a7511 offset=191 bits=0):   vapi_compare::micro_scalar@12 (line 36)
PcDesc(pc=0x00007f78f11a7517 offset=197 bits=0):   vapi_compare::micro_scalar@16 (line 36)
PcDesc(pc=0x00007f78f11a751c offset=19c bits=0):   vapi_compare::micro_scalar@17 (line 36)
PcDesc(pc=0x00007f78f11a751e offset=19e bits=0):   vapi_compare::micro_scalar@23 (line 35)
PcDesc(pc=0x00007f78f11a7525 offset=1a5 bits=0):   vapi_compare::micro_scalar@6 (line 35)
PcDesc(pc=0x00007f78f11a7540 offset=1c0 bits=1):   vapi_compare::micro_scalar@6 (line 35)  reexecute=true
   Locals
    - l0: empty
    - l1: stack[0],oop
    - l2: stack[8],oop
    - l3: stack[20]
    - l4: reg rbp [10],int
   Expression stack
    - @0: reg rbp [10],int
    - @1: stack[20]
PcDesc(pc=0x00007f78f11a7554 offset=1d4 bits=0):   vapi_compare::micro_scalar@6 (line 35)
PcDesc(pc=0x00007f78f11a756e offset=1ee bits=0):   vapi_compare::micro_scalar@23 (line 35)
PcDesc(pc=0x00007f78f11a7574 offset=1f4 bits=0):   vapi_compare::micro_scalar@6 (line 35)
PcDesc(pc=0x00007f78f11a758c offset=20c bits=1):   vapi_compare::micro_scalar@6 (line 35)  reexecute=true
   Locals
    - l0: empty
    - l1: reg rbp [10],oop
    - l2: stack[0],oop
    - l3: stack[12]
    - l4: 0
   Expression stack
    - @0: 0
    - @1: stack[12]
PcDesc(pc=0x00007f78f11a75a0 offset=220 bits=0):   vapi_compare::micro_scalar@6 (line 35)
PcDesc(pc=0x00007f78f11a7608 offset=288 bits=1):   vapi_compare::micro_scalar@6 (line 35)  reexecute=true
   Locals
    - l0: empty
    - l1: reg rbp [10],oop
    - l2: stack[0],oop
    - l3: stack[12]
    - l4: 0
   Expression stack
    - @0: 0
    - @1: stack[12]
PcDesc(pc=0x00007f78f11a761c offset=29c bits=0):   vapi_compare::micro_scalar@6 (line 35)
PcDesc(pc=0x00007f78f11a7659 offset=2d9 bits=0):
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
oop maps:ImmutableOopMapSet contains 4 OopMaps

ImmutableOopMap {rcx=Oop rdx=Oop } pc offsets: 363 
ImmutableOopMap {[0]=Oop [8]=Oop } pc offsets: 448 
ImmutableOopMap {rbp=Oop [0]=Oop } pc offsets: 524 648 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
scopes:
ScopeDesc(pc=0x00007f78f11a73ac offset=2c):
   vapi_compare::micro_scalar@-1 (line 35)
ScopeDesc(pc=0x00007f78f11a73b5 offset=35):
   vapi_compare::micro_scalar@6 (line 35)
ScopeDesc(pc=0x00007f78f11a73b9 offset=39):
   vapi_compare::micro_scalar@12 (line 36)
ScopeDesc(pc=0x00007f78f11a73e4 offset=64):
   vapi_compare::micro_scalar@16 (line 36)
ScopeDesc(pc=0x00007f78f11a740e offset=8e):
   vapi_compare::micro_scalar@17 (line 36)
ScopeDesc(pc=0x00007f78f11a7480 offset=100):
   vapi_compare::micro_scalar@9 (line 36)
ScopeDesc(pc=0x00007f78f11a7483 offset=103):
   vapi_compare::micro_scalar@16 (line 36)
ScopeDesc(pc=0x00007f78f11a7489 offset=109):
   vapi_compare::micro_scalar@12 (line 36)
ScopeDesc(pc=0x00007f78f11a748f offset=10f):
   vapi_compare::micro_scalar@16 (line 36)
ScopeDesc(pc=0x00007f78f11a7498 offset=118):
   vapi_compare::micro_scalar@17 (line 36)
ScopeDesc(pc=0x00007f78f11a749e offset=11e):
   vapi_compare::micro_scalar@16 (line 36)
ScopeDesc(pc=0x00007f78f11a74a4 offset=124):
   vapi_compare::micro_scalar@12 (line 36)
ScopeDesc(pc=0x00007f78f11a74ad offset=12d):
   vapi_compare::micro_scalar@17 (line 36)
ScopeDesc(pc=0x00007f78f11a74b3 offset=133):
   vapi_compare::micro_scalar@16 (line 36)
ScopeDesc(pc=0x00007f78f11a74b9 offset=139):
   vapi_compare::micro_scalar@12 (line 36)
ScopeDesc(pc=0x00007f78f11a74c6 offset=146):
   vapi_compare::micro_scalar@17 (line 36)
ScopeDesc(pc=0x00007f78f11a74cc offset=14c):
   vapi_compare::micro_scalar@16 (line 36)
ScopeDesc(pc=0x00007f78f11a74d2 offset=152):
   vapi_compare::micro_scalar@12 (line 36)
ScopeDesc(pc=0x00007f78f11a74db offset=15b):
   vapi_compare::micro_scalar@17 (line 36)
ScopeDesc(pc=0x00007f78f11a74de offset=15e):
   vapi_compare::micro_scalar@23 (line 35)
ScopeDesc(pc=0x00007f78f11a74e4 offset=164):
   vapi_compare::micro_scalar@26 (line 35)
ScopeDesc(pc=0x00007f78f11a74eb offset=16b):
   vapi_compare::micro_scalar@26 (line 35)  reexecute=true
   Locals
    - l0: empty
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],oop
    - l3: reg r8 [16],int
    - l4: reg rax [0],int
ScopeDesc(pc=0x00007f78f11a74ee offset=16e):
   vapi_compare::micro_scalar@26 (line 35)
ScopeDesc(pc=0x00007f78f11a7508 offset=188):
   vapi_compare::micro_scalar@9 (line 36)
ScopeDesc(pc=0x00007f78f11a750b offset=18b):
   vapi_compare::micro_scalar@16 (line 36)
ScopeDesc(pc=0x00007f78f11a7511 offset=191):
   vapi_compare::micro_scalar@12 (line 36)
ScopeDesc(pc=0x00007f78f11a7517 offset=197):
   vapi_compare::micro_scalar@16 (line 36)
ScopeDesc(pc=0x00007f78f11a751c offset=19c):
   vapi_compare::micro_scalar@17 (line 36)
ScopeDesc(pc=0x00007f78f11a751e offset=19e):
   vapi_compare::micro_scalar@23 (line 35)
ScopeDesc(pc=0x00007f78f11a7525 offset=1a5):
   vapi_compare::micro_scalar@6 (line 35)
ScopeDesc(pc=0x00007f78f11a7540 offset=1c0):
   vapi_compare::micro_scalar@6 (line 35)  reexecute=true
   Locals
    - l0: empty
    - l1: stack[0],oop
    - l2: stack[8],oop
    - l3: stack[20]
    - l4: reg rbp [10],int
   Expression stack
    - @0: reg rbp [10],int
    - @1: stack[20]
ScopeDesc(pc=0x00007f78f11a7554 offset=1d4):
   vapi_compare::micro_scalar@6 (line 35)
ScopeDesc(pc=0x00007f78f11a756e offset=1ee):
   vapi_compare::micro_scalar@23 (line 35)
ScopeDesc(pc=0x00007f78f11a7574 offset=1f4):
   vapi_compare::micro_scalar@6 (line 35)
ScopeDesc(pc=0x00007f78f11a758c offset=20c):
   vapi_compare::micro_scalar@6 (line 35)  reexecute=true
   Locals
    - l0: empty
    - l1: reg rbp [10],oop
    - l2: stack[0],oop
    - l3: stack[12]
    - l4: 0
   Expression stack
    - @0: 0
    - @1: stack[12]
ScopeDesc(pc=0x00007f78f11a75a0 offset=220):
   vapi_compare::micro_scalar@6 (line 35)
ScopeDesc(pc=0x00007f78f11a7608 offset=288):
   vapi_compare::micro_scalar@6 (line 35)  reexecute=true
   Locals
    - l0: empty
    - l1: reg rbp [10],oop
    - l2: stack[0],oop
    - l3: stack[12]
    - l4: 0
   Expression stack
    - @0: 0
    - @1: stack[12]
ScopeDesc(pc=0x00007f78f11a761c offset=29c):
   vapi_compare::micro_scalar@6 (line 35)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
relocations:
         @0x00007f78f11a7308: 6014
relocInfo@0x00007f78f11a7308 [type=6(runtime_call) addr=0x00007f78f11a7394 offset=20] | [destination=0x00007f78f1115c20]
         @0x00007f78f11a730a: a157
relocInfo@0x00007f78f11a730a [type=10(poll) addr=0x00007f78f11a74eb offset=343]
         @0x00007f78f11a730c: 6450
relocInfo@0x00007f78f11a730c [type=6(runtime_call) addr=0x00007f78f11a753b offset=80 format=1] | [destination=0x00007f78f1118bc0]
         @0x00007f78f11a730e: f803fd51ace07f787005
relocInfo@0x00007f78f11a7316 [type=7(external_word) addr=0x00007f78f11a7540 offset=5 data={fd51ace07f78}] | [target=0x00007f78fd51ace0]
         @0x00007f78f11a7318: 640e
relocInfo@0x00007f78f11a7318 [type=6(runtime_call) addr=0x00007f78f11a754e offset=14 format=1] | [destination=0x00007f78fcd00374]
         @0x00007f78f11a731a: b014
relocInfo@0x00007f78f11a731a [type=11(poll_return) addr=0x00007f78f11a7562 offset=20]
         @0x00007f78f11a731c: 6425
relocInfo@0x00007f78f11a731c [type=6(runtime_call) addr=0x00007f78f11a7587 offset=37 format=1] | [destination=0x00007f78f1118bc0]
         @0x00007f78f11a731e: f803fd51ace07f787005
relocInfo@0x00007f78f11a7326 [type=7(external_word) addr=0x00007f78f11a758c offset=5 data={fd51ace07f78}] | [target=0x00007f78fd51ace0]
         @0x00007f78f11a7328: 640e
relocInfo@0x00007f78f11a7328 [type=6(runtime_call) addr=0x00007f78f11a759a offset=14 format=1] | [destination=0x00007f78fcd00374]
         @0x00007f78f11a732a: f803fd67ff707f787006
relocInfo@0x00007f78f11a7332 [type=7(external_word) addr=0x00007f78f11a75a0 offset=6 data={fd67ff707f78}] | [target=0x00007f78fd67ff70]
         @0x00007f78f11a7334: 640e
relocInfo@0x00007f78f11a7334 [type=6(runtime_call) addr=0x00007f78f11a75ae offset=14 format=1] | [destination=0x00007f78fcd00374]
         @0x00007f78f11a7336: f803fd67ff707f787006
relocInfo@0x00007f78f11a733e [type=7(external_word) addr=0x00007f78f11a75b4 offset=6 data={fd67ff707f78}] | [target=0x00007f78fd67ff70]
         @0x00007f78f11a7340: 640e
relocInfo@0x00007f78f11a7340 [type=6(runtime_call) addr=0x00007f78f11a75c2 offset=14 format=1] | [destination=0x00007f78fcd00374]
         @0x00007f78f11a7342: f803fd67ff707f787006
relocInfo@0x00007f78f11a734a [type=7(external_word) addr=0x00007f78f11a75c8 offset=6 data={fd67ff707f78}] | [target=0x00007f78fd67ff70]
         @0x00007f78f11a734c: 640e
relocInfo@0x00007f78f11a734c [type=6(runtime_call) addr=0x00007f78f11a75d6 offset=14 format=1] | [destination=0x00007f78fcd00374]
         @0x00007f78f11a734e: f803fd67ff707f787006
relocInfo@0x00007f78f11a7356 [type=7(external_word) addr=0x00007f78f11a75dc offset=6 data={fd67ff707f78}] | [target=0x00007f78fd67ff70]
         @0x00007f78f11a7358: 640e
relocInfo@0x00007f78f11a7358 [type=6(runtime_call) addr=0x00007f78f11a75ea offset=14 format=1] | [destination=0x00007f78fcd00374]
         @0x00007f78f11a735a: 6419
relocInfo@0x00007f78f11a735a [type=6(runtime_call) addr=0x00007f78f11a7603 offset=25 format=1] | [destination=0x00007f78f1118bc0]
         @0x00007f78f11a735c: f803fd51ace07f787005
relocInfo@0x00007f78f11a7364 [type=7(external_word) addr=0x00007f78f11a7608 offset=5 data={fd51ace07f78}] | [target=0x00007f78fd51ace0]
         @0x00007f78f11a7366: 640e
relocInfo@0x00007f78f11a7366 [type=6(runtime_call) addr=0x00007f78f11a7616 offset=14 format=1] | [destination=0x00007f78fcd00374]
         @0x00007f78f11a7368: 002a
relocInfo@0x00007f78f11a7368 [type=0(none) addr=0x00007f78f11a7640 offset=42]
         @0x00007f78f11a736a: 6400
relocInfo@0x00007f78f11a736a [type=6(runtime_call) addr=0x00007f78f11a7640 offset=0 format=1] | [destination=0x00007f78f103b120]
         @0x00007f78f11a736c: 640f
relocInfo@0x00007f78f11a736c [type=6(runtime_call) addr=0x00007f78f11a764f offset=15 format=1] | [destination=0x00007f78f11184e0]
         @0x00007f78f11a736e: 0000
relocInfo@0x00007f78f11a736e [type=0(none) addr=0x00007f78f11a764f offset=0]
         @0x00007f78f11a7370: 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Dependencies:
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ExceptionHandlerTable (size = 0 bytes)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ImplicitExceptionTable (size = 2 entries, 20 bytes):
{
   < 0x00007f78f11a73b5, 0x00007f78f11a7574 > < 0x00007f78f11a73e0, 0x00007f78f11a7574 > 
}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded oops:
#0: 0x0000000000000000 NULL-oop
#1: 0x00000001010fda78 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x00000001010fda78}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded metadata:
#0: 0x0000000000000000 NULL-oop
#1: 0x00007f7893d3c9d0 {method} {0x00007f7893d3c9d0} 'micro_scalar' '([B[BI)I' in 'vapi_compare'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
[Time] 106 ms  , Scalar Mismatch Index = 6
------------------------------------------------------------------------
vapi_compare::micro_scalar([B[BI)I
  interpreter_invocation_count:     4770 
  invocation_counter:               5000 
  backedge_counter:                 5006 
  mdo size: 584 bytes

0 iconst_0
1 istore #4
3 fast_iload #4
5 iload_3
6 if_icmpge 29
  0   bci: 6    BranchData          taken(0) displacement(88)
                                    not taken(30091)
9 aload_1
10 fast_iload #4
12 baload
13 aload_2
14 fast_iload #4
16 baload
17 if_icmpeq 23
  32  bci: 17   BranchData          taken(25792) displacement(32)
                                    not taken(4299)
20 fast_iload #4
22 ireturn
23 iinc #4 1
26 goto 3
  64  bci: 26   JumpData            taken(25792) displacement(-64)
29 iconst_m1
30 ireturn
------------------------------------------------------------------------
Total MDO size: 584 bytes
