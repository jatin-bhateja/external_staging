
a.out:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000318 <.interp>:
 318:	2f                   	(bad)  
 319:	6c                   	insb   (%dx),%es:(%rdi)
 31a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
 321:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 326:	78 2d                	js     355 <_init-0xcab>
 328:	78 38                	js     362 <_init-0xc9e>
 32a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
 330:	6f                   	outsl  %ds:(%rsi),(%dx)
 331:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.gnu.property:

0000000000000338 <.note.gnu.property>:
 338:	04 00                	add    $0x0,%al
 33a:	00 00                	add    %al,(%rax)
 33c:	10 00                	adc    %al,(%rax)
 33e:	00 00                	add    %al,(%rax)
 340:	05 00 00 00 47       	add    $0x47000000,%eax
 345:	4e 55                	rex.WRX push %rbp
 347:	00 02                	add    %al,(%rdx)
 349:	00 00                	add    %al,(%rax)
 34b:	c0 04 00 00          	rolb   $0x0,(%rax,%rax,1)
 34f:	00 03                	add    %al,(%rbx)
 351:	00 00                	add    %al,(%rax)
 353:	00 00                	add    %al,(%rax)
 355:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000000358 <.note.gnu.build-id>:
 358:	04 00                	add    $0x0,%al
 35a:	00 00                	add    %al,(%rax)
 35c:	14 00                	adc    $0x0,%al
 35e:	00 00                	add    %al,(%rax)
 360:	03 00                	add    (%rax),%eax
 362:	00 00                	add    %al,(%rax)
 364:	47                   	rex.RXB
 365:	4e 55                	rex.WRX push %rbp
 367:	00 ee                	add    %ch,%dh
 369:	4e                   	rex.WRX
 36a:	26 c8 38 b3 5f       	es enterq $0xb338,$0x5f
 36f:	85 a0 ba e3 84 f0    	test   %esp,-0xf7b1c46(%rax)
 375:	70 bd                	jo     334 <_init-0xccc>
 377:	28 03                	sub    %al,(%rbx)
 379:	aa                   	stos   %al,%es:(%rdi)
 37a:	91                   	xchg   %eax,%ecx
 37b:	f4                   	hlt    

Disassembly of section .note.ABI-tag:

000000000000037c <.note.ABI-tag>:
 37c:	04 00                	add    $0x0,%al
 37e:	00 00                	add    %al,(%rax)
 380:	10 00                	adc    %al,(%rax)
 382:	00 00                	add    %al,(%rax)
 384:	01 00                	add    %eax,(%rax)
 386:	00 00                	add    %al,(%rax)
 388:	47                   	rex.RXB
 389:	4e 55                	rex.WRX push %rbp
 38b:	00 00                	add    %al,(%rax)
 38d:	00 00                	add    %al,(%rax)
 38f:	00 03                	add    %al,(%rbx)
 391:	00 00                	add    %al,(%rax)
 393:	00 02                	add    %al,(%rdx)
 395:	00 00                	add    %al,(%rax)
 397:	00 00                	add    %al,(%rax)
 399:	00 00                	add    %al,(%rax)
	...

Disassembly of section .gnu.hash:

00000000000003a0 <.gnu.hash>:
 3a0:	02 00                	add    (%rax),%al
 3a2:	00 00                	add    %al,(%rax)
 3a4:	0b 00                	or     (%rax),%eax
 3a6:	00 00                	add    %al,(%rax)
 3a8:	01 00                	add    %eax,(%rax)
 3aa:	00 00                	add    %al,(%rax)
 3ac:	06                   	(bad)  
 3ad:	00 00                	add    %al,(%rax)
 3af:	00 00                	add    %al,(%rax)
 3b1:	00 81 00 00 00 00    	add    %al,0x0(%rcx)
 3b7:	00 0b                	add    %cl,(%rbx)
 3b9:	00 00                	add    %al,(%rax)
 3bb:	00 00                	add    %al,(%rax)
 3bd:	00 00                	add    %al,(%rax)
 3bf:	00 d1                	add    %dl,%cl
 3c1:	65 ce                	gs (bad) 
 3c3:	6d                   	insl   (%dx),%es:(%rdi)

Disassembly of section .dynsym:

00000000000003c8 <.dynsym>:
	...
 3e0:	95                   	xchg   %eax,%ebp
 3e1:	00 00                	add    %al,(%rax)
 3e3:	00 12                	add    %dl,(%rdx)
	...
 3f5:	00 00                	add    %al,(%rax)
 3f7:	00 9c 00 00 00 12 00 	add    %bl,0x120000(%rax,%rax,1)
	...
 40e:	00 00                	add    %al,(%rax)
 410:	84 00                	test   %al,(%rax)
 412:	00 00                	add    %al,(%rax)
 414:	12 00                	adc    (%rax),%al
	...
 426:	00 00                	add    %al,(%rax)
 428:	cb                   	lret   
 429:	00 00                	add    %al,(%rax)
 42b:	00 12                	add    %dl,(%rdx)
	...
 43d:	00 00                	add    %al,(%rax)
 43f:	00 55 00             	add    %dl,0x0(%rbp)
 442:	00 00                	add    %al,(%rax)
 444:	12 00                	adc    (%rax),%al
	...
 456:	00 00                	add    %al,(%rax)
 458:	a3 00 00 00 12 00 00 	movabs %eax,0x12000000
 45f:	00 00 
	...
 46d:	00 00                	add    %al,(%rax)
 46f:	00 1f                	add    %bl,(%rdi)
 471:	00 00                	add    %al,(%rax)
 473:	00 20                	add    %ah,(%rax)
	...
 485:	00 00                	add    %al,(%rax)
 487:	00 b9 00 00 00 12    	add    %bh,0x12000000(%rcx)
	...
 49d:	00 00                	add    %al,(%rax)
 49f:	00 10                	add    %dl,(%rax)
 4a1:	00 00                	add    %al,(%rax)
 4a3:	00 20                	add    %ah,(%rax)
	...
 4b5:	00 00                	add    %al,(%rax)
 4b7:	00 3b                	add    %bh,(%rbx)
 4b9:	00 00                	add    %al,(%rax)
 4bb:	00 20                	add    %ah,(%rax)
	...
 4cd:	00 00                	add    %al,(%rax)
 4cf:	00 aa 00 00 00 22    	add    %ch,0x22000000(%rdx)
	...

Disassembly of section .dynstr:

00000000000004e8 <.dynstr>:
 4e8:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
 4ec:	73 74                	jae    562 <_init-0xa9e>
 4ee:	64 63 2b             	movslq %fs:(%rbx),%ebp
 4f1:	2b 2e                	sub    (%rsi),%ebp
 4f3:	73 6f                	jae    564 <_init-0xa9c>
 4f5:	2e 36 00 5f 5f       	cs add %bl,%ss:0x5f(%rdi)
 4fa:	67 6d                	insl   (%dx),%es:(%edi)
 4fc:	6f                   	outsl  %ds:(%rsi),(%dx)
 4fd:	6e                   	outsb  %ds:(%rsi),(%dx)
 4fe:	5f                   	pop    %rdi
 4ff:	73 74                	jae    575 <_init-0xa8b>
 501:	61                   	(bad)  
 502:	72 74                	jb     578 <_init-0xa88>
 504:	5f                   	pop    %rdi
 505:	5f                   	pop    %rdi
 506:	00 5f 49             	add    %bl,0x49(%rdi)
 509:	54                   	push   %rsp
 50a:	4d 5f                	rex.WRB pop %r15
 50c:	64 65 72 65          	fs gs jb 575 <_init-0xa8b>
 510:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 517:	4d 
 518:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 51a:	6f                   	outsl  %ds:(%rsi),(%dx)
 51b:	6e                   	outsb  %ds:(%rsi),(%dx)
 51c:	65 54                	gs push %rsp
 51e:	61                   	(bad)  
 51f:	62                   	(bad)  
 520:	6c                   	insb   (%dx),%es:(%rdi)
 521:	65 00 5f 49          	add    %bl,%gs:0x49(%rdi)
 525:	54                   	push   %rsp
 526:	4d 5f                	rex.WRB pop %r15
 528:	72 65                	jb     58f <_init-0xa71>
 52a:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 531:	4d 
 532:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 534:	6f                   	outsl  %ds:(%rsi),(%dx)
 535:	6e                   	outsb  %ds:(%rsi),(%dx)
 536:	65 54                	gs push %rsp
 538:	61                   	(bad)  
 539:	62                   	(bad)  
 53a:	6c                   	insb   (%dx),%es:(%rdi)
 53b:	65 00 5f 5a          	add    %bl,%gs:0x5a(%rdi)
 53f:	4e 53                	rex.WRX push %rbx
 541:	74 36                	je     579 <_init-0xa87>
 543:	63 68 72             	movslq 0x72(%rax),%ebp
 546:	6f                   	outsl  %ds:(%rsi),(%dx)
 547:	6e                   	outsb  %ds:(%rsi),(%dx)
 548:	6f                   	outsl  %ds:(%rsi),(%dx)
 549:	33 5f 56             	xor    0x56(%rdi),%ebx
 54c:	32 31                	xor    (%rcx),%dh
 54e:	32 73 74             	xor    0x74(%rbx),%dh
 551:	65 61                	gs (bad) 
 553:	64 79 5f             	fs jns 5b5 <_init-0xa4b>
 556:	63 6c 6f 63          	movslq 0x63(%rdi,%rbp,2),%ebp
 55a:	6b 33 6e             	imul   $0x6e,(%rbx),%esi
 55d:	6f                   	outsl  %ds:(%rsi),(%dx)
 55e:	77 45                	ja     5a5 <_init-0xa5b>
 560:	76 00                	jbe    562 <_init-0xa9e>
 562:	6c                   	insb   (%dx),%es:(%rdi)
 563:	69 62 63 2e 73 6f 2e 	imul   $0x2e6f732e,0x63(%rdx),%esp
 56a:	36 00 5f 5f          	add    %bl,%ss:0x5f(%rdi)
 56e:	73 74                	jae    5e4 <_init-0xa1c>
 570:	61                   	(bad)  
 571:	63 6b 5f             	movslq 0x5f(%rbx),%ebp
 574:	63 68 6b             	movslq 0x6b(%rax),%ebp
 577:	5f                   	pop    %rdi
 578:	66 61                	data16 (bad) 
 57a:	69 6c 00 70 72 69 6e 	imul   $0x746e6972,0x70(%rax,%rax,1),%ebp
 581:	74 
 582:	66 00 6d 65          	data16 add %ch,0x65(%rbp)
 586:	6d                   	insl   (%dx),%es:(%rdi)
 587:	73 65                	jae    5ee <_init-0xa12>
 589:	74 00                	je     58b <_init-0xa75>
 58b:	6d                   	insl   (%dx),%es:(%rdi)
 58c:	61                   	(bad)  
 58d:	6c                   	insb   (%dx),%es:(%rdi)
 58e:	6c                   	insb   (%dx),%es:(%rdi)
 58f:	6f                   	outsl  %ds:(%rsi),(%dx)
 590:	63 00                	movslq (%rax),%eax
 592:	5f                   	pop    %rdi
 593:	5f                   	pop    %rdi
 594:	63 78 61             	movslq 0x61(%rax),%edi
 597:	5f                   	pop    %rdi
 598:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%rsi),%bp
 59e:	7a 65                	jp     605 <_init-0x9fb>
 5a0:	00 5f 5f             	add    %bl,0x5f(%rdi)
 5a3:	6c                   	insb   (%dx),%es:(%rdi)
 5a4:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
 5ab:	72 74                	jb     621 <_init-0x9df>
 5ad:	5f                   	pop    %rdi
 5ae:	6d                   	insl   (%dx),%es:(%rdi)
 5af:	61                   	(bad)  
 5b0:	69 6e 00 66 72 65 65 	imul   $0x65657266,0x0(%rsi),%ebp
 5b7:	00 47 4c             	add    %al,0x4c(%rdi)
 5ba:	49                   	rex.WB
 5bb:	42                   	rex.X
 5bc:	43 58                	rex.XB pop %r8
 5be:	58                   	pop    %rax
 5bf:	5f                   	pop    %rdi
 5c0:	33 2e                	xor    (%rsi),%ebp
 5c2:	34 2e                	xor    $0x2e,%al
 5c4:	31 39                	xor    %edi,(%rcx)
 5c6:	00 47 4c             	add    %al,0x4c(%rdi)
 5c9:	49                   	rex.WB
 5ca:	42                   	rex.X
 5cb:	43 5f                	rex.XB pop %r15
 5cd:	32 2e                	xor    (%rsi),%ch
 5cf:	34 00                	xor    $0x0,%al
 5d1:	47                   	rex.RXB
 5d2:	4c                   	rex.WR
 5d3:	49                   	rex.WB
 5d4:	42                   	rex.X
 5d5:	43 5f                	rex.XB pop %r15
 5d7:	32 2e                	xor    (%rsi),%ch
 5d9:	32 2e                	xor    (%rsi),%ch
 5db:	35                   	.byte 0x35
	...

Disassembly of section .gnu.version:

00000000000005de <.gnu.version>:
 5de:	00 00                	add    %al,(%rax)
 5e0:	02 00                	add    (%rax),%al
 5e2:	02 00                	add    (%rax),%al
 5e4:	03 00                	add    (%rax),%eax
 5e6:	02 00                	add    (%rax),%al
 5e8:	04 00                	add    $0x0,%al
 5ea:	02 00                	add    (%rax),%al
 5ec:	00 00                	add    %al,(%rax)
 5ee:	02 00                	add    (%rax),%al
 5f0:	00 00                	add    %al,(%rax)
 5f2:	00 00                	add    %al,(%rax)
 5f4:	02 00                	add    (%rax),%al

Disassembly of section .gnu.version_r:

00000000000005f8 <.gnu.version_r>:
 5f8:	01 00                	add    %eax,(%rax)
 5fa:	01 00                	add    %eax,(%rax)
 5fc:	01 00                	add    %eax,(%rax)
 5fe:	00 00                	add    %al,(%rax)
 600:	10 00                	adc    %al,(%rax)
 602:	00 00                	add    %al,(%rax)
 604:	20 00                	and    %al,(%rax)
 606:	00 00                	add    %al,(%rax)
 608:	69 f8 97 02 00 00    	imul   $0x297,%eax,%edi
 60e:	04 00                	add    $0x0,%al
 610:	d0 00                	rolb   (%rax)
 612:	00 00                	add    %al,(%rax)
 614:	00 00                	add    %al,(%rax)
 616:	00 00                	add    %al,(%rax)
 618:	01 00                	add    %eax,(%rax)
 61a:	02 00                	add    (%rax),%al
 61c:	7a 00                	jp     61e <_init-0x9e2>
 61e:	00 00                	add    %al,(%rax)
 620:	10 00                	adc    %al,(%rax)
 622:	00 00                	add    %al,(%rax)
 624:	00 00                	add    %al,(%rax)
 626:	00 00                	add    %al,(%rax)
 628:	14 69                	adc    $0x69,%al
 62a:	69 0d 00 00 03 00 df 	imul   $0xdf,0x30000(%rip),%ecx        # 30634 <_end+0x2c58c>
 631:	00 00 00 
 634:	10 00                	adc    %al,(%rax)
 636:	00 00                	add    %al,(%rax)
 638:	75 1a                	jne    654 <_init-0x9ac>
 63a:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
 640:	e9 00 00 00 00       	jmpq   645 <_init-0x9bb>
 645:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

0000000000000648 <.rela.dyn>:
 648:	80 3d 00 00 00 00 00 	cmpb   $0x0,0x0(%rip)        # 64f <_init-0x9b1>
 64f:	00 08                	add    %cl,(%rax)
 651:	00 00                	add    %al,(%rax)
 653:	00 00                	add    %al,(%rax)
 655:	00 00                	add    %al,(%rax)
 657:	00 e0                	add    %ah,%al
 659:	11 00                	adc    %eax,(%rax)
 65b:	00 00                	add    %al,(%rax)
 65d:	00 00                	add    %al,(%rax)
 65f:	00 88 3d 00 00 00    	add    %cl,0x3d(%rax)
 665:	00 00                	add    %al,(%rax)
 667:	00 08                	add    %cl,(%rax)
 669:	00 00                	add    %al,(%rax)
 66b:	00 00                	add    %al,(%rax)
 66d:	00 00                	add    %al,(%rax)
 66f:	00 a0 11 00 00 00    	add    %ah,0x11(%rax)
 675:	00 00                	add    %al,(%rax)
 677:	00 08                	add    %cl,(%rax)
 679:	40 00 00             	add    %al,(%rax)
 67c:	00 00                	add    %al,(%rax)
 67e:	00 00                	add    %al,(%rax)
 680:	08 00                	or     %al,(%rax)
 682:	00 00                	add    %al,(%rax)
 684:	00 00                	add    %al,(%rax)
 686:	00 00                	add    %al,(%rax)
 688:	08 40 00             	or     %al,0x0(%rax)
 68b:	00 00                	add    %al,(%rax)
 68d:	00 00                	add    %al,(%rax)
 68f:	00 d8                	add    %bl,%al
 691:	3f                   	(bad)  
 692:	00 00                	add    %al,(%rax)
 694:	00 00                	add    %al,(%rax)
 696:	00 00                	add    %al,(%rax)
 698:	06                   	(bad)  
 699:	00 00                	add    %al,(%rax)
 69b:	00 0b                	add    %cl,(%rbx)
	...
 6a5:	00 00                	add    %al,(%rax)
 6a7:	00 e0                	add    %ah,%al
 6a9:	3f                   	(bad)  
 6aa:	00 00                	add    %al,(%rax)
 6ac:	00 00                	add    %al,(%rax)
 6ae:	00 00                	add    %al,(%rax)
 6b0:	06                   	(bad)  
 6b1:	00 00                	add    %al,(%rax)
 6b3:	00 07                	add    %al,(%rdi)
	...
 6bd:	00 00                	add    %al,(%rax)
 6bf:	00 e8                	add    %ch,%al
 6c1:	3f                   	(bad)  
 6c2:	00 00                	add    %al,(%rax)
 6c4:	00 00                	add    %al,(%rax)
 6c6:	00 00                	add    %al,(%rax)
 6c8:	06                   	(bad)  
 6c9:	00 00                	add    %al,(%rax)
 6cb:	00 08                	add    %cl,(%rax)
	...
 6d5:	00 00                	add    %al,(%rax)
 6d7:	00 f0                	add    %dh,%al
 6d9:	3f                   	(bad)  
 6da:	00 00                	add    %al,(%rax)
 6dc:	00 00                	add    %al,(%rax)
 6de:	00 00                	add    %al,(%rax)
 6e0:	06                   	(bad)  
 6e1:	00 00                	add    %al,(%rax)
 6e3:	00 09                	add    %cl,(%rcx)
	...
 6ed:	00 00                	add    %al,(%rax)
 6ef:	00 f8                	add    %bh,%al
 6f1:	3f                   	(bad)  
 6f2:	00 00                	add    %al,(%rax)
 6f4:	00 00                	add    %al,(%rax)
 6f6:	00 00                	add    %al,(%rax)
 6f8:	06                   	(bad)  
 6f9:	00 00                	add    %al,(%rax)
 6fb:	00 0a                	add    %cl,(%rdx)
	...

Disassembly of section .rela.plt:

0000000000000708 <.rela.plt>:
 708:	a8 3f                	test   $0x3f,%al
 70a:	00 00                	add    %al,(%rax)
 70c:	00 00                	add    %al,(%rax)
 70e:	00 00                	add    %al,(%rax)
 710:	07                   	(bad)  
 711:	00 00                	add    %al,(%rax)
 713:	00 01                	add    %al,(%rcx)
	...
 71d:	00 00                	add    %al,(%rax)
 71f:	00 b0 3f 00 00 00    	add    %dh,0x3f(%rax)
 725:	00 00                	add    %al,(%rax)
 727:	00 07                	add    %al,(%rdi)
 729:	00 00                	add    %al,(%rax)
 72b:	00 02                	add    %al,(%rdx)
	...
 735:	00 00                	add    %al,(%rax)
 737:	00 b8 3f 00 00 00    	add    %bh,0x3f(%rax)
 73d:	00 00                	add    %al,(%rax)
 73f:	00 07                	add    %al,(%rdi)
 741:	00 00                	add    %al,(%rax)
 743:	00 03                	add    %al,(%rbx)
	...
 74d:	00 00                	add    %al,(%rax)
 74f:	00 c0                	add    %al,%al
 751:	3f                   	(bad)  
 752:	00 00                	add    %al,(%rax)
 754:	00 00                	add    %al,(%rax)
 756:	00 00                	add    %al,(%rax)
 758:	07                   	(bad)  
 759:	00 00                	add    %al,(%rax)
 75b:	00 04 00             	add    %al,(%rax,%rax,1)
	...
 766:	00 00                	add    %al,(%rax)
 768:	c8 3f 00 00          	enterq $0x3f,$0x0
 76c:	00 00                	add    %al,(%rax)
 76e:	00 00                	add    %al,(%rax)
 770:	07                   	(bad)  
 771:	00 00                	add    %al,(%rax)
 773:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 779 <_init-0x887>
 779:	00 00                	add    %al,(%rax)
 77b:	00 00                	add    %al,(%rax)
 77d:	00 00                	add    %al,(%rax)
 77f:	00 d0                	add    %dl,%al
 781:	3f                   	(bad)  
 782:	00 00                	add    %al,(%rax)
 784:	00 00                	add    %al,(%rax)
 786:	00 00                	add    %al,(%rax)
 788:	07                   	(bad)  
 789:	00 00                	add    %al,(%rax)
 78b:	00 06                	add    %al,(%rsi)
	...

Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 e1 2f 00 00 	mov    0x2fe1(%rip),%rax        # 3ff0 <__gmon_start__>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	callq  *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 72 2f 00 00    	pushq  0x2f72(%rip)        # 3f98 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 73 2f 00 00 	bnd jmpq *0x2f73(%rip)        # 3fa0 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	pushq  $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmpq 1020 <.plt>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	pushq  $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmpq 1020 <.plt>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	pushq  $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmpq 1020 <.plt>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	pushq  $0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmpq 1020 <.plt>
    106f:	90                   	nop
    1070:	f3 0f 1e fa          	endbr64 
    1074:	68 04 00 00 00       	pushq  $0x4
    1079:	f2 e9 a1 ff ff ff    	bnd jmpq 1020 <.plt>
    107f:	90                   	nop
    1080:	f3 0f 1e fa          	endbr64 
    1084:	68 05 00 00 00       	pushq  $0x5
    1089:	f2 e9 91 ff ff ff    	bnd jmpq 1020 <.plt>
    108f:	90                   	nop

Disassembly of section .plt.got:

0000000000001090 <__cxa_finalize@plt>:
    1090:	f3 0f 1e fa          	endbr64 
    1094:	f2 ff 25 3d 2f 00 00 	bnd jmpq *0x2f3d(%rip)        # 3fd8 <__cxa_finalize@GLIBC_2.2.5>
    109b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

00000000000010a0 <printf@plt>:
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	f2 ff 25 fd 2e 00 00 	bnd jmpq *0x2efd(%rip)        # 3fa8 <printf@GLIBC_2.2.5>
    10ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010b0 <memset@plt>:
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	f2 ff 25 f5 2e 00 00 	bnd jmpq *0x2ef5(%rip)        # 3fb0 <memset@GLIBC_2.2.5>
    10bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010c0 <__stack_chk_fail@plt>:
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	f2 ff 25 ed 2e 00 00 	bnd jmpq *0x2eed(%rip)        # 3fb8 <__stack_chk_fail@GLIBC_2.4>
    10cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010d0 <free@plt>:
    10d0:	f3 0f 1e fa          	endbr64 
    10d4:	f2 ff 25 e5 2e 00 00 	bnd jmpq *0x2ee5(%rip)        # 3fc0 <free@GLIBC_2.2.5>
    10db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010e0 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>:
    10e0:	f3 0f 1e fa          	endbr64 
    10e4:	f2 ff 25 dd 2e 00 00 	bnd jmpq *0x2edd(%rip)        # 3fc8 <_ZNSt6chrono3_V212steady_clock3nowEv@GLIBCXX_3.4.19>
    10eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010f0 <malloc@plt>:
    10f0:	f3 0f 1e fa          	endbr64 
    10f4:	f2 ff 25 d5 2e 00 00 	bnd jmpq *0x2ed5(%rip)        # 3fd0 <malloc@GLIBC_2.2.5>
    10fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

0000000000001100 <_start>:
    1100:	f3 0f 1e fa          	endbr64 
    1104:	31 ed                	xor    %ebp,%ebp
    1106:	49 89 d1             	mov    %rdx,%r9
    1109:	5e                   	pop    %rsi
    110a:	48 89 e2             	mov    %rsp,%rdx
    110d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1111:	50                   	push   %rax
    1112:	54                   	push   %rsp
    1113:	4c 8d 05 16 08 00 00 	lea    0x816(%rip),%r8        # 1930 <__libc_csu_fini>
    111a:	48 8d 0d 9f 07 00 00 	lea    0x79f(%rip),%rcx        # 18c0 <__libc_csu_init>
    1121:	48 8d 3d a3 02 00 00 	lea    0x2a3(%rip),%rdi        # 13cb <main>
    1128:	ff 15 ba 2e 00 00    	callq  *0x2eba(%rip)        # 3fe8 <__libc_start_main@GLIBC_2.2.5>
    112e:	f4                   	hlt    
    112f:	90                   	nop

0000000000001130 <deregister_tm_clones>:
    1130:	48 8d 3d 69 2f 00 00 	lea    0x2f69(%rip),%rdi        # 40a0 <__TMC_END__>
    1137:	48 8d 05 62 2f 00 00 	lea    0x2f62(%rip),%rax        # 40a0 <__TMC_END__>
    113e:	48 39 f8             	cmp    %rdi,%rax
    1141:	74 15                	je     1158 <deregister_tm_clones+0x28>
    1143:	48 8b 05 96 2e 00 00 	mov    0x2e96(%rip),%rax        # 3fe0 <_ITM_deregisterTMCloneTable>
    114a:	48 85 c0             	test   %rax,%rax
    114d:	74 09                	je     1158 <deregister_tm_clones+0x28>
    114f:	ff e0                	jmpq   *%rax
    1151:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1158:	c3                   	retq   
    1159:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001160 <register_tm_clones>:
    1160:	48 8d 3d 39 2f 00 00 	lea    0x2f39(%rip),%rdi        # 40a0 <__TMC_END__>
    1167:	48 8d 35 32 2f 00 00 	lea    0x2f32(%rip),%rsi        # 40a0 <__TMC_END__>
    116e:	48 29 fe             	sub    %rdi,%rsi
    1171:	48 89 f0             	mov    %rsi,%rax
    1174:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1178:	48 c1 f8 03          	sar    $0x3,%rax
    117c:	48 01 c6             	add    %rax,%rsi
    117f:	48 d1 fe             	sar    %rsi
    1182:	74 14                	je     1198 <register_tm_clones+0x38>
    1184:	48 8b 05 6d 2e 00 00 	mov    0x2e6d(%rip),%rax        # 3ff8 <_ITM_registerTMCloneTable>
    118b:	48 85 c0             	test   %rax,%rax
    118e:	74 08                	je     1198 <register_tm_clones+0x38>
    1190:	ff e0                	jmpq   *%rax
    1192:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1198:	c3                   	retq   
    1199:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000011a0 <__do_global_dtors_aux>:
    11a0:	f3 0f 1e fa          	endbr64 
    11a4:	80 3d f5 2e 00 00 00 	cmpb   $0x0,0x2ef5(%rip)        # 40a0 <__TMC_END__>
    11ab:	75 2b                	jne    11d8 <__do_global_dtors_aux+0x38>
    11ad:	55                   	push   %rbp
    11ae:	48 83 3d 22 2e 00 00 	cmpq   $0x0,0x2e22(%rip)        # 3fd8 <__cxa_finalize@GLIBC_2.2.5>
    11b5:	00 
    11b6:	48 89 e5             	mov    %rsp,%rbp
    11b9:	74 0c                	je     11c7 <__do_global_dtors_aux+0x27>
    11bb:	48 8b 3d 46 2e 00 00 	mov    0x2e46(%rip),%rdi        # 4008 <__dso_handle>
    11c2:	e8 c9 fe ff ff       	callq  1090 <__cxa_finalize@plt>
    11c7:	e8 64 ff ff ff       	callq  1130 <deregister_tm_clones>
    11cc:	c6 05 cd 2e 00 00 01 	movb   $0x1,0x2ecd(%rip)        # 40a0 <__TMC_END__>
    11d3:	5d                   	pop    %rbp
    11d4:	c3                   	retq   
    11d5:	0f 1f 00             	nopl   (%rax)
    11d8:	c3                   	retq   
    11d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000011e0 <frame_dummy>:
    11e0:	f3 0f 1e fa          	endbr64 
    11e4:	e9 77 ff ff ff       	jmpq   1160 <register_tm_clones>

00000000000011e9 <_Z18gather_byte_maskedPcPiii>:
    11e9:	f3 0f 1e fa          	endbr64 
    11ed:	55                   	push   %rbp
    11ee:	48 89 e5             	mov    %rsp,%rbp
    11f1:	41 54                	push   %r12
    11f3:	53                   	push   %rbx
    11f4:	48 83 ec 30          	sub    $0x30,%rsp
    11f8:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    11fc:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    1200:	89 55 cc             	mov    %edx,-0x34(%rbp)
    1203:	89 4d c8             	mov    %ecx,-0x38(%rbp)
    1206:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    120d:	00 
    120e:	8b 45 cc             	mov    -0x34(%rbp),%eax
    1211:	48 98                	cltq   
    1213:	48 89 c7             	mov    %rax,%rdi
    1216:	e8 d5 fe ff ff       	callq  10f0 <malloc@plt>
    121b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    121f:	8b 45 cc             	mov    -0x34(%rbp),%eax
    1222:	48 63 d0             	movslq %eax,%rdx
    1225:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1229:	be 00 00 00 00       	mov    $0x0,%esi
    122e:	48 89 c7             	mov    %rax,%rdi
    1231:	e8 7a fe ff ff       	callq  10b0 <memset@plt>
    1236:	4c 8b 45 d8          	mov    -0x28(%rbp),%r8
    123a:	4c 8b 4d e8          	mov    -0x18(%rbp),%r9
    123e:	4c 8b 55 d0          	mov    -0x30(%rbp),%r10
    1242:	44 8b 5d cc          	mov    -0x34(%rbp),%r11d
    1246:	44 8b 65 c8          	mov    -0x38(%rbp),%r12d
    124a:	4c 89 c6             	mov    %r8,%rsi
    124d:	4c 89 cf             	mov    %r9,%rdi
    1250:	4c 89 d3             	mov    %r10,%rbx
    1253:	44 89 d9             	mov    %r11d,%ecx
    1256:	48 31 d2             	xor    %rdx,%rdx

0000000000001259 <loop>:
    1259:	41 0f a3 d4          	bt     %edx,%r12d
    125d:	73 09                	jae    1268 <loop_incr>
    125f:	8b 04 93             	mov    (%rbx,%rdx,4),%eax
    1262:	8a 04 06             	mov    (%rsi,%rax,1),%al
    1265:	88 04 17             	mov    %al,(%rdi,%rdx,1)

0000000000001268 <loop_incr>:
    1268:	ff c2                	inc    %edx
    126a:	ff c9                	dec    %ecx
    126c:	75 eb                	jne    1259 <loop>
    126e:	62 f1 fe 48 6f 07    	vmovdqu64 (%rdi),%zmm0
    1274:	66 49 0f 7e c0       	movq   %xmm0,%r8
    1279:	4c 89 45 e0          	mov    %r8,-0x20(%rbp)
    127d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1281:	48 89 c7             	mov    %rax,%rdi
    1284:	e8 47 fe ff ff       	callq  10d0 <free@plt>
    1289:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    128d:	48 83 c4 30          	add    $0x30,%rsp
    1291:	5b                   	pop    %rbx
    1292:	41 5c                	pop    %r12
    1294:	5d                   	pop    %rbp
    1295:	c3                   	retq   

0000000000001296 <_Z28gather_move_byte_avx2_maskedPcPiii>:
    1296:	f3 0f 1e fa          	endbr64 
    129a:	55                   	push   %rbp
    129b:	48 89 e5             	mov    %rsp,%rbp
    129e:	41 56                	push   %r14
    12a0:	41 55                	push   %r13
    12a2:	41 54                	push   %r12
    12a4:	53                   	push   %rbx
    12a5:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    12a9:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    12ad:	89 55 bc             	mov    %edx,-0x44(%rbp)
    12b0:	89 4d b8             	mov    %ecx,-0x48(%rbp)
    12b3:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    12ba:	00 
    12bb:	4c 8b 45 c8          	mov    -0x38(%rbp),%r8
    12bf:	4c 8b 55 c0          	mov    -0x40(%rbp),%r10
    12c3:	4c 8d 2d 56 2d 00 00 	lea    0x2d56(%rip),%r13        # 4020 <perm_table>
    12ca:	4c 8d 35 8f 2d 00 00 	lea    0x2d8f(%rip),%r14        # 4060 <round_table>
    12d1:	8b 5d bc             	mov    -0x44(%rbp),%ebx
    12d4:	44 8b 65 b8          	mov    -0x48(%rbp),%r12d
    12d8:	4c 89 c6             	mov    %r8,%rsi
    12db:	4c 89 d7             	mov    %r10,%rdi
    12de:	4d 89 eb             	mov    %r13,%r11
    12e1:	4d 89 f1             	mov    %r14,%r9
    12e4:	89 d9                	mov    %ebx,%ecx
    12e6:	48 31 d2             	xor    %rdx,%rdx
    12e9:	62 f1 ed 48 ef d2    	vpxorq %zmm2,%zmm2,%zmm2
    12ef:	62 d1 fe 48 6f 0b    	vmovdqu64 (%r11),%zmm1
    12f5:	62 d1 fe 48 6f 21    	vmovdqu64 (%r9),%zmm4
    12fb:	62 f1 5d 48 fc e4    	vpaddb %zmm4,%zmm4,%zmm4

0000000000001301 <loop1>:
    1301:	62 f1 fd 48 ef c0    	vpxorq %zmm0,%zmm0,%zmm0
    1307:	41 0f a3 d4          	bt     %edx,%r12d
    130b:	73 09                	jae    1316 <loop_incr0>
    130d:	8b 07                	mov    (%rdi),%eax
    130f:	66 0f 3a 20 04 06 00 	pinsrb $0x0,(%rsi,%rax,1),%xmm0

0000000000001316 <loop_incr0>:
    1316:	ff c2                	inc    %edx
    1318:	41 0f a3 d4          	bt     %edx,%r12d
    131c:	73 0a                	jae    1328 <loop_incr1>
    131e:	8b 47 04             	mov    0x4(%rdi),%eax
    1321:	66 0f 3a 20 04 06 01 	pinsrb $0x1,(%rsi,%rax,1),%xmm0

0000000000001328 <loop_incr1>:
    1328:	ff c2                	inc    %edx
    132a:	41 0f a3 d4          	bt     %edx,%r12d
    132e:	73 0a                	jae    133a <loop_incr2>
    1330:	8b 47 08             	mov    0x8(%rdi),%eax
    1333:	66 0f 3a 20 04 06 02 	pinsrb $0x2,(%rsi,%rax,1),%xmm0

000000000000133a <loop_incr2>:
    133a:	ff c2                	inc    %edx
    133c:	41 0f a3 d4          	bt     %edx,%r12d
    1340:	73 0a                	jae    134c <loop_incr3>
    1342:	8b 47 0c             	mov    0xc(%rdi),%eax
    1345:	66 0f 3a 20 04 06 03 	pinsrb $0x3,(%rsi,%rax,1),%xmm0

000000000000134c <loop_incr3>:
    134c:	ff c2                	inc    %edx
    134e:	41 0f a3 d4          	bt     %edx,%r12d
    1352:	73 0a                	jae    135e <loop_incr4>
    1354:	8b 47 10             	mov    0x10(%rdi),%eax
    1357:	66 0f 3a 20 04 06 04 	pinsrb $0x4,(%rsi,%rax,1),%xmm0

000000000000135e <loop_incr4>:
    135e:	ff c2                	inc    %edx
    1360:	41 0f a3 d4          	bt     %edx,%r12d
    1364:	73 0a                	jae    1370 <loop_incr5>
    1366:	8b 47 14             	mov    0x14(%rdi),%eax
    1369:	66 0f 3a 20 04 06 05 	pinsrb $0x5,(%rsi,%rax,1),%xmm0

0000000000001370 <loop_incr5>:
    1370:	ff c2                	inc    %edx
    1372:	41 0f a3 d4          	bt     %edx,%r12d
    1376:	73 0a                	jae    1382 <loop_incr6>
    1378:	8b 47 18             	mov    0x18(%rdi),%eax
    137b:	66 0f 3a 20 04 06 06 	pinsrb $0x6,(%rsi,%rax,1),%xmm0

0000000000001382 <loop_incr6>:
    1382:	ff c2                	inc    %edx
    1384:	41 0f a3 d4          	bt     %edx,%r12d
    1388:	73 0a                	jae    1394 <loop_incr7>
    138a:	8b 47 1c             	mov    0x1c(%rdi),%eax
    138d:	66 0f 3a 20 04 06 07 	pinsrb $0x7,(%rsi,%rax,1),%xmm0

0000000000001394 <loop_incr7>:
    1394:	ff c2                	inc    %edx
    1396:	62 f2 75 48 36 c0    	vpermd %zmm0,%zmm1,%zmm0
    139c:	62 f1 75 48 fa cc    	vpsubd %zmm4,%zmm1,%zmm1
    13a2:	62 f1 ed 48 eb d0    	vporq  %zmm0,%zmm2,%zmm2
    13a8:	48 83 c7 20          	add    $0x20,%rdi
    13ac:	83 e9 04             	sub    $0x4,%ecx
    13af:	0f 85 4c ff ff ff    	jne    1301 <loop1>
    13b5:	66 49 0f 7e d0       	movq   %xmm2,%r8
    13ba:	4c 89 45 d8          	mov    %r8,-0x28(%rbp)
    13be:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    13c2:	5b                   	pop    %rbx
    13c3:	41 5c                	pop    %r12
    13c5:	41 5d                	pop    %r13
    13c7:	41 5e                	pop    %r14
    13c9:	5d                   	pop    %rbp
    13ca:	c3                   	retq   

00000000000013cb <main>:
    13cb:	f3 0f 1e fa          	endbr64 
    13cf:	55                   	push   %rbp
    13d0:	48 89 e5             	mov    %rsp,%rbp
    13d3:	48 83 ec 70          	sub    $0x70,%rsp
    13d7:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    13de:	00 00 
    13e0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    13e4:	31 c0                	xor    %eax,%eax
    13e6:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    13ed:	00 
    13ee:	bf 00 10 00 00       	mov    $0x1000,%edi
    13f3:	e8 f8 fc ff ff       	callq  10f0 <malloc@plt>
    13f8:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    13fc:	bf 00 01 00 00       	mov    $0x100,%edi
    1401:	e8 ea fc ff ff       	callq  10f0 <malloc@plt>
    1406:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    140a:	c7 45 b4 55 55 00 00 	movl   $0x5555,-0x4c(%rbp)
    1411:	c7 45 9c 00 00 00 00 	movl   $0x0,-0x64(%rbp)
    1418:	81 7d 9c ff 0f 00 00 	cmpl   $0xfff,-0x64(%rbp)
    141f:	7f 18                	jg     1439 <main+0x6e>
    1421:	8b 45 9c             	mov    -0x64(%rbp),%eax
    1424:	48 63 d0             	movslq %eax,%rdx
    1427:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    142b:	48 01 d0             	add    %rdx,%rax
    142e:	8b 55 9c             	mov    -0x64(%rbp),%edx
    1431:	88 10                	mov    %dl,(%rax)
    1433:	83 45 9c 01          	addl   $0x1,-0x64(%rbp)
    1437:	eb df                	jmp    1418 <main+0x4d>
    1439:	c7 45 a0 00 00 00 00 	movl   $0x0,-0x60(%rbp)
    1440:	83 7d a0 3f          	cmpl   $0x3f,-0x60(%rbp)
    1444:	7f 22                	jg     1468 <main+0x9d>
    1446:	8b 45 a0             	mov    -0x60(%rbp),%eax
    1449:	48 98                	cltq   
    144b:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    1452:	00 
    1453:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1457:	48 01 d0             	add    %rdx,%rax
    145a:	8b 55 a0             	mov    -0x60(%rbp),%edx
    145d:	c1 e2 06             	shl    $0x6,%edx
    1460:	89 10                	mov    %edx,(%rax)
    1462:	83 45 a0 01          	addl   $0x1,-0x60(%rbp)
    1466:	eb d8                	jmp    1440 <main+0x75>
    1468:	c7 45 a4 00 00 00 00 	movl   $0x0,-0x5c(%rbp)
    146f:	81 7d a4 7f 4a 5d 05 	cmpl   $0x55d4a7f,-0x5c(%rbp)
    1476:	7f 24                	jg     149c <main+0xd1>
    1478:	8b 55 b4             	mov    -0x4c(%rbp),%edx
    147b:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    147f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1483:	89 d1                	mov    %edx,%ecx
    1485:	ba 40 00 00 00       	mov    $0x40,%edx
    148a:	48 89 c7             	mov    %rax,%rdi
    148d:	e8 57 fd ff ff       	callq  11e9 <_Z18gather_byte_maskedPcPiii>
    1492:	48 01 45 e0          	add    %rax,-0x20(%rbp)
    1496:	83 45 a4 01          	addl   $0x1,-0x5c(%rbp)
    149a:	eb d3                	jmp    146f <main+0xa4>
    149c:	e8 3f fc ff ff       	callq  10e0 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
    14a1:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    14a5:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%rbp)
    14ac:	81 7d a8 7f 4a 5d 05 	cmpl   $0x55d4a7f,-0x58(%rbp)
    14b3:	7f 24                	jg     14d9 <main+0x10e>
    14b5:	8b 55 b4             	mov    -0x4c(%rbp),%edx
    14b8:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    14bc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    14c0:	89 d1                	mov    %edx,%ecx
    14c2:	ba 40 00 00 00       	mov    $0x40,%edx
    14c7:	48 89 c7             	mov    %rax,%rdi
    14ca:	e8 1a fd ff ff       	callq  11e9 <_Z18gather_byte_maskedPcPiii>
    14cf:	48 01 45 e0          	add    %rax,-0x20(%rbp)
    14d3:	83 45 a8 01          	addl   $0x1,-0x58(%rbp)
    14d7:	eb d3                	jmp    14ac <main+0xe1>
    14d9:	e8 02 fc ff ff       	callq  10e0 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
    14de:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    14e2:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
    14e6:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    14ea:	48 89 d6             	mov    %rdx,%rsi
    14ed:	48 89 c7             	mov    %rax,%rdi
    14f0:	e8 e4 01 00 00       	callq  16d9 <_ZNSt6chronomiINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE>
    14f5:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    14f9:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
    14fd:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    1501:	48 89 d6             	mov    %rdx,%rsi
    1504:	48 89 c7             	mov    %rax,%rdi
    1507:	e8 6a 01 00 00       	callq  1676 <_ZNSt6chrono8durationIdSt5ratioILl1ELl1EEEC1IlS1_ILl1ELl1000000000EEvEERKNS0_IT_T0_EE>
    150c:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    1510:	48 89 c7             	mov    %rax,%rdi
    1513:	e8 d4 02 00 00       	callq  17ec <_ZNKSt6chrono8durationIdSt5ratioILl1ELl1EEE5countEv>
    1518:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    151c:	48 89 c6             	mov    %rax,%rsi
    151f:	48 8d 3d e2 0a 00 00 	lea    0xae2(%rip),%rdi        # 2008 <_IO_stdin_used+0x8>
    1526:	b8 01 00 00 00       	mov    $0x1,%eax
    152b:	e8 70 fb ff ff       	callq  10a0 <printf@plt>
    1530:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    1537:	00 
    1538:	c7 45 ac 00 00 00 00 	movl   $0x0,-0x54(%rbp)
    153f:	81 7d ac 7f 4a 5d 05 	cmpl   $0x55d4a7f,-0x54(%rbp)
    1546:	7f 24                	jg     156c <main+0x1a1>
    1548:	8b 55 b4             	mov    -0x4c(%rbp),%edx
    154b:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    154f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1553:	89 d1                	mov    %edx,%ecx
    1555:	ba 20 00 00 00       	mov    $0x20,%edx
    155a:	48 89 c7             	mov    %rax,%rdi
    155d:	e8 34 fd ff ff       	callq  1296 <_Z28gather_move_byte_avx2_maskedPcPiii>
    1562:	48 01 45 e0          	add    %rax,-0x20(%rbp)
    1566:	83 45 ac 01          	addl   $0x1,-0x54(%rbp)
    156a:	eb d3                	jmp    153f <main+0x174>
    156c:	e8 6f fb ff ff       	callq  10e0 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
    1571:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    1575:	c7 45 b0 00 00 00 00 	movl   $0x0,-0x50(%rbp)
    157c:	81 7d b0 7f 4a 5d 05 	cmpl   $0x55d4a7f,-0x50(%rbp)
    1583:	7f 24                	jg     15a9 <main+0x1de>
    1585:	8b 55 b4             	mov    -0x4c(%rbp),%edx
    1588:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    158c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1590:	89 d1                	mov    %edx,%ecx
    1592:	ba 20 00 00 00       	mov    $0x20,%edx
    1597:	48 89 c7             	mov    %rax,%rdi
    159a:	e8 f7 fc ff ff       	callq  1296 <_Z28gather_move_byte_avx2_maskedPcPiii>
    159f:	48 01 45 e0          	add    %rax,-0x20(%rbp)
    15a3:	83 45 b0 01          	addl   $0x1,-0x50(%rbp)
    15a7:	eb d3                	jmp    157c <main+0x1b1>
    15a9:	e8 32 fb ff ff       	callq  10e0 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
    15ae:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    15b2:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
    15b6:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    15ba:	48 89 d6             	mov    %rdx,%rsi
    15bd:	48 89 c7             	mov    %rax,%rdi
    15c0:	e8 14 01 00 00       	callq  16d9 <_ZNSt6chronomiINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE>
    15c5:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    15c9:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    15cd:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    15d1:	48 89 d6             	mov    %rdx,%rsi
    15d4:	48 89 c7             	mov    %rax,%rdi
    15d7:	e8 9a 00 00 00       	callq  1676 <_ZNSt6chrono8durationIdSt5ratioILl1ELl1EEEC1IlS1_ILl1ELl1000000000EEvEERKNS0_IT_T0_EE>
    15dc:	f2 0f 10 45 d8       	movsd  -0x28(%rbp),%xmm0
    15e1:	f2 0f 11 45 c8       	movsd  %xmm0,-0x38(%rbp)
    15e6:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    15ea:	48 89 c7             	mov    %rax,%rdi
    15ed:	e8 fa 01 00 00       	callq  17ec <_ZNKSt6chrono8durationIdSt5ratioILl1ELl1EEE5countEv>
    15f2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    15f6:	48 89 c6             	mov    %rax,%rsi
    15f9:	48 8d 3d 08 0a 00 00 	lea    0xa08(%rip),%rdi        # 2008 <_IO_stdin_used+0x8>
    1600:	b8 01 00 00 00       	mov    $0x1,%eax
    1605:	e8 96 fa ff ff       	callq  10a0 <printf@plt>
    160a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    160e:	48 89 c7             	mov    %rax,%rdi
    1611:	e8 ba fa ff ff       	callq  10d0 <free@plt>
    1616:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    161a:	48 89 c7             	mov    %rax,%rdi
    161d:	e8 ae fa ff ff       	callq  10d0 <free@plt>
    1622:	b8 00 00 00 00       	mov    $0x0,%eax
    1627:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    162b:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    1632:	00 00 
    1634:	74 05                	je     163b <main+0x270>
    1636:	e8 85 fa ff ff       	callq  10c0 <__stack_chk_fail@plt>
    163b:	c9                   	leaveq 
    163c:	c3                   	retq   
    163d:	90                   	nop

000000000000163e <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>:
    163e:	f3 0f 1e fa          	endbr64 
    1642:	55                   	push   %rbp
    1643:	48 89 e5             	mov    %rsp,%rbp
    1646:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    164a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    164e:	48 8b 00             	mov    (%rax),%rax
    1651:	5d                   	pop    %rbp
    1652:	c3                   	retq   
    1653:	90                   	nop

0000000000001654 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC1IlvEERKT_>:
    1654:	f3 0f 1e fa          	endbr64 
    1658:	55                   	push   %rbp
    1659:	48 89 e5             	mov    %rsp,%rbp
    165c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1660:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    1664:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1668:	48 8b 10             	mov    (%rax),%rdx
    166b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    166f:	48 89 10             	mov    %rdx,(%rax)
    1672:	90                   	nop
    1673:	5d                   	pop    %rbp
    1674:	c3                   	retq   
    1675:	90                   	nop

0000000000001676 <_ZNSt6chrono8durationIdSt5ratioILl1ELl1EEEC1IlS1_ILl1ELl1000000000EEvEERKNS0_IT_T0_EE>:
    1676:	f3 0f 1e fa          	endbr64 
    167a:	55                   	push   %rbp
    167b:	48 89 e5             	mov    %rsp,%rbp
    167e:	48 83 ec 20          	sub    $0x20,%rsp
    1682:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1686:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    168a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1691:	00 00 
    1693:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1697:	31 c0                	xor    %eax,%eax
    1699:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    169d:	48 89 c7             	mov    %rax,%rdi
    16a0:	e8 5d 01 00 00       	callq  1802 <_ZNSt6chrono13duration_castINS_8durationIdSt5ratioILl1ELl1EEEElS2_ILl1ELl1000000000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE>
    16a5:	f2 0f 11 45 f0       	movsd  %xmm0,-0x10(%rbp)
    16aa:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    16ae:	48 89 c7             	mov    %rax,%rdi
    16b1:	e8 36 01 00 00       	callq  17ec <_ZNKSt6chrono8durationIdSt5ratioILl1ELl1EEE5countEv>
    16b6:	66 48 0f 7e c0       	movq   %xmm0,%rax
    16bb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    16bf:	48 89 02             	mov    %rax,(%rdx)
    16c2:	90                   	nop
    16c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    16c7:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    16ce:	00 00 
    16d0:	74 05                	je     16d7 <_ZNSt6chrono8durationIdSt5ratioILl1ELl1EEEC1IlS1_ILl1ELl1000000000EEvEERKNS0_IT_T0_EE+0x61>
    16d2:	e8 e9 f9 ff ff       	callq  10c0 <__stack_chk_fail@plt>
    16d7:	c9                   	leaveq 
    16d8:	c3                   	retq   

00000000000016d9 <_ZNSt6chronomiINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE>:
    16d9:	f3 0f 1e fa          	endbr64 
    16dd:	55                   	push   %rbp
    16de:	48 89 e5             	mov    %rsp,%rbp
    16e1:	48 83 ec 30          	sub    $0x30,%rsp
    16e5:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    16e9:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    16ed:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    16f4:	00 00 
    16f6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    16fa:	31 c0                	xor    %eax,%eax
    16fc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1700:	48 89 c7             	mov    %rax,%rdi
    1703:	e8 ce 00 00 00       	callq  17d6 <_ZNKSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv>
    1708:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    170c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1710:	48 89 c7             	mov    %rax,%rdi
    1713:	e8 be 00 00 00       	callq  17d6 <_ZNKSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv>
    1718:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    171c:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    1720:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    1724:	48 89 d6             	mov    %rdx,%rsi
    1727:	48 89 c7             	mov    %rax,%rdi
    172a:	e8 16 00 00 00       	callq  1745 <_ZNSt6chronomiIlSt5ratioILl1ELl1000000000EElS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_>
    172f:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    1733:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    173a:	00 00 
    173c:	74 05                	je     1743 <_ZNSt6chronomiINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE+0x6a>
    173e:	e8 7d f9 ff ff       	callq  10c0 <__stack_chk_fail@plt>
    1743:	c9                   	leaveq 
    1744:	c3                   	retq   

0000000000001745 <_ZNSt6chronomiIlSt5ratioILl1ELl1000000000EElS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_>:
    1745:	f3 0f 1e fa          	endbr64 
    1749:	55                   	push   %rbp
    174a:	48 89 e5             	mov    %rsp,%rbp
    174d:	53                   	push   %rbx
    174e:	48 83 ec 48          	sub    $0x48,%rsp
    1752:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    1756:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    175a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1761:	00 00 
    1763:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1767:	31 c0                	xor    %eax,%eax
    1769:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    176d:	48 8b 00             	mov    (%rax),%rax
    1770:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    1774:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    1778:	48 89 c7             	mov    %rax,%rdi
    177b:	e8 be fe ff ff       	callq  163e <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>
    1780:	48 89 c3             	mov    %rax,%rbx
    1783:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    1787:	48 8b 00             	mov    (%rax),%rax
    178a:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    178e:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    1792:	48 89 c7             	mov    %rax,%rdi
    1795:	e8 a4 fe ff ff       	callq  163e <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>
    179a:	48 29 c3             	sub    %rax,%rbx
    179d:	48 89 d8             	mov    %rbx,%rax
    17a0:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    17a4:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
    17a8:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    17ac:	48 89 d6             	mov    %rdx,%rsi
    17af:	48 89 c7             	mov    %rax,%rdi
    17b2:	e8 9d fe ff ff       	callq  1654 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC1IlvEERKT_>
    17b7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    17bb:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    17bf:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    17c6:	00 00 
    17c8:	74 05                	je     17cf <_ZNSt6chronomiIlSt5ratioILl1ELl1000000000EElS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_+0x8a>
    17ca:	e8 f1 f8 ff ff       	callq  10c0 <__stack_chk_fail@plt>
    17cf:	48 83 c4 48          	add    $0x48,%rsp
    17d3:	5b                   	pop    %rbx
    17d4:	5d                   	pop    %rbp
    17d5:	c3                   	retq   

00000000000017d6 <_ZNKSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv>:
    17d6:	f3 0f 1e fa          	endbr64 
    17da:	55                   	push   %rbp
    17db:	48 89 e5             	mov    %rsp,%rbp
    17de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    17e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    17e6:	48 8b 00             	mov    (%rax),%rax
    17e9:	5d                   	pop    %rbp
    17ea:	c3                   	retq   
    17eb:	90                   	nop

00000000000017ec <_ZNKSt6chrono8durationIdSt5ratioILl1ELl1EEE5countEv>:
    17ec:	f3 0f 1e fa          	endbr64 
    17f0:	55                   	push   %rbp
    17f1:	48 89 e5             	mov    %rsp,%rbp
    17f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    17f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    17fc:	f2 0f 10 00          	movsd  (%rax),%xmm0
    1800:	5d                   	pop    %rbp
    1801:	c3                   	retq   

0000000000001802 <_ZNSt6chrono13duration_castINS_8durationIdSt5ratioILl1ELl1EEEElS2_ILl1ELl1000000000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE>:
    1802:	f3 0f 1e fa          	endbr64 
    1806:	55                   	push   %rbp
    1807:	48 89 e5             	mov    %rsp,%rbp
    180a:	48 83 ec 10          	sub    $0x10,%rsp
    180e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1812:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1816:	48 89 c7             	mov    %rax,%rdi
    1819:	e8 02 00 00 00       	callq  1820 <_ZNSt6chrono20__duration_cast_implINS_8durationIdSt5ratioILl1ELl1EEEES2_ILl1ELl1000000000EEdLb1ELb0EE6__castIlS5_EES4_RKNS1_IT_T0_EE>
    181e:	c9                   	leaveq 
    181f:	c3                   	retq   

0000000000001820 <_ZNSt6chrono20__duration_cast_implINS_8durationIdSt5ratioILl1ELl1EEEES2_ILl1ELl1000000000EEdLb1ELb0EE6__castIlS5_EES4_RKNS1_IT_T0_EE>:
    1820:	f3 0f 1e fa          	endbr64 
    1824:	55                   	push   %rbp
    1825:	48 89 e5             	mov    %rsp,%rbp
    1828:	48 83 ec 30          	sub    $0x30,%rsp
    182c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    1830:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1837:	00 00 
    1839:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    183d:	31 c0                	xor    %eax,%eax
    183f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1843:	48 89 c7             	mov    %rax,%rdi
    1846:	e8 f3 fd ff ff       	callq  163e <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>
    184b:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    1850:	f2 0f 10 0d d0 07 00 	movsd  0x7d0(%rip),%xmm1        # 2028 <_IO_stdin_used+0x28>
    1857:	00 
    1858:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
    185c:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
    1861:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    1865:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    1869:	48 89 d6             	mov    %rdx,%rsi
    186c:	48 89 c7             	mov    %rax,%rdi
    186f:	e8 1c 00 00 00       	callq  1890 <_ZNSt6chrono8durationIdSt5ratioILl1ELl1EEEC1IdvEERKT_>
    1874:	f2 0f 10 45 f0       	movsd  -0x10(%rbp),%xmm0
    1879:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    187d:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    1884:	00 00 
    1886:	74 05                	je     188d <_ZNSt6chrono20__duration_cast_implINS_8durationIdSt5ratioILl1ELl1EEEES2_ILl1ELl1000000000EEdLb1ELb0EE6__castIlS5_EES4_RKNS1_IT_T0_EE+0x6d>
    1888:	e8 33 f8 ff ff       	callq  10c0 <__stack_chk_fail@plt>
    188d:	c9                   	leaveq 
    188e:	c3                   	retq   
    188f:	90                   	nop

0000000000001890 <_ZNSt6chrono8durationIdSt5ratioILl1ELl1EEEC1IdvEERKT_>:
    1890:	f3 0f 1e fa          	endbr64 
    1894:	55                   	push   %rbp
    1895:	48 89 e5             	mov    %rsp,%rbp
    1898:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    189c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    18a0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    18a4:	f2 0f 10 00          	movsd  (%rax),%xmm0
    18a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    18ac:	f2 0f 11 00          	movsd  %xmm0,(%rax)
    18b0:	90                   	nop
    18b1:	5d                   	pop    %rbp
    18b2:	c3                   	retq   
    18b3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    18ba:	00 00 00 
    18bd:	0f 1f 00             	nopl   (%rax)

00000000000018c0 <__libc_csu_init>:
    18c0:	f3 0f 1e fa          	endbr64 
    18c4:	41 57                	push   %r15
    18c6:	4c 8d 3d b3 24 00 00 	lea    0x24b3(%rip),%r15        # 3d80 <__frame_dummy_init_array_entry>
    18cd:	41 56                	push   %r14
    18cf:	49 89 d6             	mov    %rdx,%r14
    18d2:	41 55                	push   %r13
    18d4:	49 89 f5             	mov    %rsi,%r13
    18d7:	41 54                	push   %r12
    18d9:	41 89 fc             	mov    %edi,%r12d
    18dc:	55                   	push   %rbp
    18dd:	48 8d 2d a4 24 00 00 	lea    0x24a4(%rip),%rbp        # 3d88 <__do_global_dtors_aux_fini_array_entry>
    18e4:	53                   	push   %rbx
    18e5:	4c 29 fd             	sub    %r15,%rbp
    18e8:	48 83 ec 08          	sub    $0x8,%rsp
    18ec:	e8 0f f7 ff ff       	callq  1000 <_init>
    18f1:	48 c1 fd 03          	sar    $0x3,%rbp
    18f5:	74 1f                	je     1916 <__libc_csu_init+0x56>
    18f7:	31 db                	xor    %ebx,%ebx
    18f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1900:	4c 89 f2             	mov    %r14,%rdx
    1903:	4c 89 ee             	mov    %r13,%rsi
    1906:	44 89 e7             	mov    %r12d,%edi
    1909:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    190d:	48 83 c3 01          	add    $0x1,%rbx
    1911:	48 39 dd             	cmp    %rbx,%rbp
    1914:	75 ea                	jne    1900 <__libc_csu_init+0x40>
    1916:	48 83 c4 08          	add    $0x8,%rsp
    191a:	5b                   	pop    %rbx
    191b:	5d                   	pop    %rbp
    191c:	41 5c                	pop    %r12
    191e:	41 5d                	pop    %r13
    1920:	41 5e                	pop    %r14
    1922:	41 5f                	pop    %r15
    1924:	c3                   	retq   
    1925:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    192c:	00 00 00 00 

0000000000001930 <__libc_csu_fini>:
    1930:	f3 0f 1e fa          	endbr64 
    1934:	c3                   	retq   

Disassembly of section .fini:

0000000000001938 <_fini>:
    1938:	f3 0f 1e fa          	endbr64 
    193c:	48 83 ec 08          	sub    $0x8,%rsp
    1940:	48 83 c4 08          	add    $0x8,%rsp
    1944:	c3                   	retq   

Disassembly of section .rodata:

0000000000002000 <_IO_stdin_used>:
    2000:	01 00                	add    %eax,(%rax)
    2002:	02 00                	add    (%rax),%al
    2004:	00 00                	add    %al,(%rax)
    2006:	00 00                	add    %al,(%rax)
    2008:	5b                   	pop    %rbx
    2009:	74 69                	je     2074 <__GNU_EH_FRAME_HDR+0x44>
    200b:	6d                   	insl   (%dx),%es:(%rdi)
    200c:	65 5d                	gs pop %rbp
    200e:	20 25 6c 66 20 20    	and    %ah,0x2020666c(%rip)        # 20208680 <_end+0x202045d8>
    2014:	20 5b 72             	and    %bl,0x72(%rbx)
    2017:	65 73 5d             	gs jae 2077 <__GNU_EH_FRAME_HDR+0x47>
    201a:	20 20                	and    %ah,(%rax)
    201c:	25 6c 64 0a 00       	and    $0xa646c,%eax
	...
    2029:	00 00                	add    %al,(%rax)
    202b:	00 65 cd             	add    %ah,-0x33(%rbp)
    202e:	cd 41                	int    $0x41

Disassembly of section .eh_frame_hdr:

0000000000002030 <__GNU_EH_FRAME_HDR>:
    2030:	01 1b                	add    %ebx,(%rbx)
    2032:	03 3b                	add    (%rbx),%edi
    2034:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
    2035:	00 00                	add    %al,(%rax)
    2037:	00 13                	add    %dl,(%rbx)
    2039:	00 00                	add    %al,(%rax)
    203b:	00 f0                	add    %dh,%al
    203d:	ef                   	out    %eax,(%dx)
    203e:	ff                   	(bad)  
    203f:	ff                   	(bad)  
    2040:	d8 00                	fadds  (%rax)
    2042:	00 00                	add    %al,(%rax)
    2044:	60                   	(bad)  
    2045:	f0 ff                	lock (bad) 
    2047:	ff 00                	incl   (%rax)
    2049:	01 00                	add    %eax,(%rax)
    204b:	00 70 f0             	add    %dh,-0x10(%rax)
    204e:	ff                   	(bad)  
    204f:	ff 18                	lcall  *(%rax)
    2051:	01 00                	add    %eax,(%rax)
    2053:	00 d0                	add    %dl,%al
    2055:	f0 ff                	lock (bad) 
    2057:	ff c0                	inc    %eax
    2059:	00 00                	add    %al,(%rax)
    205b:	00 b9 f1 ff ff 70    	add    %bh,0x70fffff1(%rcx)
    2061:	01 00                	add    %eax,(%rax)
    2063:	00 66 f2             	add    %ah,-0xe(%rsi)
    2066:	ff                   	(bad)  
    2067:	ff 94 01 00 00 9b f3 	callq  *-0xc650000(%rcx,%rax,1)
    206e:	ff                   	(bad)  
    206f:	ff 60 02             	jmpq   *0x2(%rax)
    2072:	00 00                	add    %al,(%rax)
    2074:	0e                   	(bad)  
    2075:	f6 ff                	idiv   %bh
    2077:	ff 30                	pushq  (%rax)
    2079:	01 00                	add    %eax,(%rax)
    207b:	00 24 f6             	add    %ah,(%rsi,%rsi,8)
    207e:	ff                   	(bad)  
    207f:	ff 50 01             	callq  *0x1(%rax)
    2082:	00 00                	add    %al,(%rax)
    2084:	46 f6 ff             	rex.RX idiv %dil
    2087:	ff                   	(bad)  
    2088:	bc 01 00 00 a9       	mov    $0xa9000001,%esp
    208d:	f6 ff                	idiv   %bh
    208f:	ff                   	(bad)  
    2090:	dc 01                	faddl  (%rcx)
    2092:	00 00                	add    %al,(%rax)
    2094:	15 f7 ff ff fc       	adc    $0xfcfffff7,%eax
    2099:	01 00                	add    %eax,(%rax)
    209b:	00 a6 f7 ff ff 20    	add    %ah,0x20fffff7(%rsi)
    20a1:	02 00                	add    (%rax),%al
    20a3:	00 bc f7 ff ff 40 02 	add    %bh,0x240ffff(%rdi,%rsi,8)
    20aa:	00 00                	add    %al,(%rax)
    20ac:	d2 f7                	shl    %cl,%bh
    20ae:	ff                   	(bad)  
    20af:	ff 80 02 00 00 f0    	incl   -0xffffffe(%rax)
    20b5:	f7 ff                	idiv   %edi
    20b7:	ff a0 02 00 00 60    	jmpq   *0x60000002(%rax)
    20bd:	f8                   	clc    
    20be:	ff                   	(bad)  
    20bf:	ff c0                	inc    %eax
    20c1:	02 00                	add    (%rax),%al
    20c3:	00 90 f8 ff ff e0    	add    %dl,-0x1f000008(%rax)
    20c9:	02 00                	add    (%rax),%al
    20cb:	00 00                	add    %al,(%rax)
    20cd:	f9                   	stc    
    20ce:	ff                   	(bad)  
    20cf:	ff 28                	ljmp   *(%rax)
    20d1:	03 00                	add    (%rax),%eax
	...

Disassembly of section .eh_frame:

00000000000020d8 <__FRAME_END__-0x294>:
    20d8:	14 00                	adc    $0x0,%al
    20da:	00 00                	add    %al,(%rax)
    20dc:	00 00                	add    %al,(%rax)
    20de:	00 00                	add    %al,(%rax)
    20e0:	01 7a 52             	add    %edi,0x52(%rdx)
    20e3:	00 01                	add    %al,(%rcx)
    20e5:	78 10                	js     20f7 <__GNU_EH_FRAME_HDR+0xc7>
    20e7:	01 1b                	add    %ebx,(%rbx)
    20e9:	0c 07                	or     $0x7,%al
    20eb:	08 90 01 00 00 14    	or     %dl,0x14000001(%rax)
    20f1:	00 00                	add    %al,(%rax)
    20f3:	00 1c 00             	add    %bl,(%rax,%rax,1)
    20f6:	00 00                	add    %al,(%rax)
    20f8:	08 f0                	or     %dh,%al
    20fa:	ff                   	(bad)  
    20fb:	ff 2f                	ljmp   *(%rdi)
    20fd:	00 00                	add    %al,(%rax)
    20ff:	00 00                	add    %al,(%rax)
    2101:	44 07                	rex.R (bad) 
    2103:	10 00                	adc    %al,(%rax)
    2105:	00 00                	add    %al,(%rax)
    2107:	00 24 00             	add    %ah,(%rax,%rax,1)
    210a:	00 00                	add    %al,(%rax)
    210c:	34 00                	xor    $0x0,%al
    210e:	00 00                	add    %al,(%rax)
    2110:	10 ef                	adc    %ch,%bh
    2112:	ff                   	(bad)  
    2113:	ff 70 00             	pushq  0x0(%rax)
    2116:	00 00                	add    %al,(%rax)
    2118:	00 0e                	add    %cl,(%rsi)
    211a:	10 46 0e             	adc    %al,0xe(%rsi)
    211d:	18 4a 0f             	sbb    %cl,0xf(%rdx)
    2120:	0b 77 08             	or     0x8(%rdi),%esi
    2123:	80 00 3f             	addb   $0x3f,(%rax)
    2126:	1a 3a                	sbb    (%rdx),%bh
    2128:	2a 33                	sub    (%rbx),%dh
    212a:	24 22                	and    $0x22,%al
    212c:	00 00                	add    %al,(%rax)
    212e:	00 00                	add    %al,(%rax)
    2130:	14 00                	adc    $0x0,%al
    2132:	00 00                	add    %al,(%rax)
    2134:	5c                   	pop    %rsp
    2135:	00 00                	add    %al,(%rax)
    2137:	00 58 ef             	add    %bl,-0x11(%rax)
    213a:	ff                   	(bad)  
    213b:	ff 10                	callq  *(%rax)
	...
    2145:	00 00                	add    %al,(%rax)
    2147:	00 14 00             	add    %dl,(%rax,%rax,1)
    214a:	00 00                	add    %al,(%rax)
    214c:	74 00                	je     214e <__GNU_EH_FRAME_HDR+0x11e>
    214e:	00 00                	add    %al,(%rax)
    2150:	50                   	push   %rax
    2151:	ef                   	out    %eax,(%dx)
    2152:	ff                   	(bad)  
    2153:	ff 60 00             	jmpq   *0x0(%rax)
	...
    215e:	00 00                	add    %al,(%rax)
    2160:	1c 00                	sbb    $0x0,%al
    2162:	00 00                	add    %al,(%rax)
    2164:	8c 00                	mov    %es,(%rax)
    2166:	00 00                	add    %al,(%rax)
    2168:	d6                   	(bad)  
    2169:	f4                   	hlt    
    216a:	ff                   	(bad)  
    216b:	ff 15 00 00 00 00    	callq  *0x0(%rip)        # 2171 <__GNU_EH_FRAME_HDR+0x141>
    2171:	45 0e                	rex.RB (bad) 
    2173:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2179:	4c 0c 07             	rex.WR or $0x7,%al
    217c:	08 00                	or     %al,(%rax)
    217e:	00 00                	add    %al,(%rax)
    2180:	1c 00                	sbb    $0x0,%al
    2182:	00 00                	add    %al,(%rax)
    2184:	ac                   	lods   %ds:(%rsi),%al
    2185:	00 00                	add    %al,(%rax)
    2187:	00 cc                	add    %cl,%ah
    2189:	f4                   	hlt    
    218a:	ff                   	(bad)  
    218b:	ff 21                	jmpq   *(%rcx)
    218d:	00 00                	add    %al,(%rax)
    218f:	00 00                	add    %al,(%rax)
    2191:	45 0e                	rex.RB (bad) 
    2193:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2199:	58                   	pop    %rax
    219a:	0c 07                	or     $0x7,%al
    219c:	08 00                	or     %al,(%rax)
    219e:	00 00                	add    %al,(%rax)
    21a0:	20 00                	and    %al,(%rax)
    21a2:	00 00                	add    %al,(%rax)
    21a4:	cc                   	int3   
    21a5:	00 00                	add    %al,(%rax)
    21a7:	00 41 f0             	add    %al,-0x10(%rcx)
    21aa:	ff                   	(bad)  
    21ab:	ff ad 00 00 00 00    	ljmp   *0x0(%rbp)
    21b1:	45 0e                	rex.RB (bad) 
    21b3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    21b9:	47 8c 03             	rex.RXB mov %es,(%r11)
    21bc:	83 04 02 9d          	addl   $0xffffff9d,(%rdx,%rax,1)
    21c0:	0c 07                	or     $0x7,%al
    21c2:	08 00                	or     %al,(%rax)
    21c4:	24 00                	and    $0x0,%al
    21c6:	00 00                	add    %al,(%rax)
    21c8:	f0 00 00             	lock add %al,(%rax)
    21cb:	00 ca                	add    %cl,%dl
    21cd:	f0 ff                	lock (bad) 
    21cf:	ff 35 01 00 00 00    	pushq  0x1(%rip)        # 21d6 <__GNU_EH_FRAME_HDR+0x1a6>
    21d5:	45 0e                	rex.RB (bad) 
    21d7:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    21dd:	47 8e 03             	rex.RXB mov (%r11),%es
    21e0:	8d 04 8c             	lea    (%rsp,%rcx,4),%eax
    21e3:	05 83 06 03 25       	add    $0x25030683,%eax
    21e8:	01 0c 07             	add    %ecx,(%rdi,%rax,1)
    21eb:	08 1c 00             	or     %bl,(%rax,%rax,1)
    21ee:	00 00                	add    %al,(%rax)
    21f0:	18 01                	sbb    %al,(%rcx)
    21f2:	00 00                	add    %al,(%rax)
    21f4:	82                   	(bad)  
    21f5:	f4                   	hlt    
    21f6:	ff                   	(bad)  
    21f7:	ff 63 00             	jmpq   *0x0(%rbx)
    21fa:	00 00                	add    %al,(%rax)
    21fc:	00 45 0e             	add    %al,0xe(%rbp)
    21ff:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2205:	02 5a 0c             	add    0xc(%rdx),%bl
    2208:	07                   	(bad)  
    2209:	08 00                	or     %al,(%rax)
    220b:	00 1c 00             	add    %bl,(%rax,%rax,1)
    220e:	00 00                	add    %al,(%rax)
    2210:	38 01                	cmp    %al,(%rcx)
    2212:	00 00                	add    %al,(%rax)
    2214:	c5 f4 ff             	(bad)
    2217:	ff 6c 00 00          	ljmp   *0x0(%rax,%rax,1)
    221b:	00 00                	add    %al,(%rax)
    221d:	45 0e                	rex.RB (bad) 
    221f:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2225:	02 63 0c             	add    0xc(%rbx),%ah
    2228:	07                   	(bad)  
    2229:	08 00                	or     %al,(%rax)
    222b:	00 20                	add    %ah,(%rax)
    222d:	00 00                	add    %al,(%rax)
    222f:	00 58 01             	add    %bl,0x1(%rax)
    2232:	00 00                	add    %al,(%rax)
    2234:	11 f5                	adc    %esi,%ebp
    2236:	ff                   	(bad)  
    2237:	ff 91 00 00 00 00    	callq  *0x0(%rcx)
    223d:	45 0e                	rex.RB (bad) 
    223f:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2245:	45 83 03 02          	rex.RB addl $0x2,(%r11)
    2249:	83 0c 07 08          	orl    $0x8,(%rdi,%rax,1)
    224d:	00 00                	add    %al,(%rax)
    224f:	00 1c 00             	add    %bl,(%rax,%rax,1)
    2252:	00 00                	add    %al,(%rax)
    2254:	7c 01                	jl     2257 <__GNU_EH_FRAME_HDR+0x227>
    2256:	00 00                	add    %al,(%rax)
    2258:	7e f5                	jle    224f <__GNU_EH_FRAME_HDR+0x21f>
    225a:	ff                   	(bad)  
    225b:	ff 15 00 00 00 00    	callq  *0x0(%rip)        # 2261 <__GNU_EH_FRAME_HDR+0x231>
    2261:	45 0e                	rex.RB (bad) 
    2263:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2269:	4c 0c 07             	rex.WR or $0x7,%al
    226c:	08 00                	or     %al,(%rax)
    226e:	00 00                	add    %al,(%rax)
    2270:	1c 00                	sbb    $0x0,%al
    2272:	00 00                	add    %al,(%rax)
    2274:	9c                   	pushfq 
    2275:	01 00                	add    %eax,(%rax)
    2277:	00 74 f5 ff          	add    %dh,-0x1(%rbp,%rsi,8)
    227b:	ff 16                	callq  *(%rsi)
    227d:	00 00                	add    %al,(%rax)
    227f:	00 00                	add    %al,(%rax)
    2281:	45 0e                	rex.RB (bad) 
    2283:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2289:	4d 0c 07             	rex.WRB or $0x7,%al
    228c:	08 00                	or     %al,(%rax)
    228e:	00 00                	add    %al,(%rax)
    2290:	1c 00                	sbb    $0x0,%al
    2292:	00 00                	add    %al,(%rax)
    2294:	bc 01 00 00 33       	mov    $0x33000001,%esp
    2299:	f1                   	icebp  
    229a:	ff                   	(bad)  
    229b:	ff 72 02             	pushq  0x2(%rdx)
    229e:	00 00                	add    %al,(%rax)
    22a0:	00 45 0e             	add    %al,0xe(%rbp)
    22a3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    22a9:	03 69 02             	add    0x2(%rcx),%ebp
    22ac:	0c 07                	or     $0x7,%al
    22ae:	08 00                	or     %al,(%rax)
    22b0:	1c 00                	sbb    $0x0,%al
    22b2:	00 00                	add    %al,(%rax)
    22b4:	dc 01                	faddl  (%rcx)
    22b6:	00 00                	add    %al,(%rax)
    22b8:	4a f5                	rex.WX cmc 
    22ba:	ff                   	(bad)  
    22bb:	ff 1e                	lcall  *(%rsi)
    22bd:	00 00                	add    %al,(%rax)
    22bf:	00 00                	add    %al,(%rax)
    22c1:	45 0e                	rex.RB (bad) 
    22c3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    22c9:	55                   	push   %rbp
    22ca:	0c 07                	or     $0x7,%al
    22cc:	08 00                	or     %al,(%rax)
    22ce:	00 00                	add    %al,(%rax)
    22d0:	1c 00                	sbb    $0x0,%al
    22d2:	00 00                	add    %al,(%rax)
    22d4:	fc                   	cld    
    22d5:	01 00                	add    %eax,(%rax)
    22d7:	00 48 f5             	add    %cl,-0xb(%rax)
    22da:	ff                   	(bad)  
    22db:	ff 6f 00             	ljmp   *0x0(%rdi)
    22de:	00 00                	add    %al,(%rax)
    22e0:	00 45 0e             	add    %al,0xe(%rbp)
    22e3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    22e9:	02 66 0c             	add    0xc(%rsi),%ah
    22ec:	07                   	(bad)  
    22ed:	08 00                	or     %al,(%rax)
    22ef:	00 1c 00             	add    %bl,(%rax,%rax,1)
    22f2:	00 00                	add    %al,(%rax)
    22f4:	1c 02                	sbb    $0x2,%al
    22f6:	00 00                	add    %al,(%rax)
    22f8:	98                   	cwtl   
    22f9:	f5                   	cmc    
    22fa:	ff                   	(bad)  
    22fb:	ff 23                	jmpq   *(%rbx)
    22fd:	00 00                	add    %al,(%rax)
    22ff:	00 00                	add    %al,(%rax)
    2301:	45 0e                	rex.RB (bad) 
    2303:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2309:	5a                   	pop    %rdx
    230a:	0c 07                	or     $0x7,%al
    230c:	08 00                	or     %al,(%rax)
    230e:	00 00                	add    %al,(%rax)
    2310:	44 00 00             	add    %r8b,(%rax)
    2313:	00 3c 02             	add    %bh,(%rdx,%rax,1)
    2316:	00 00                	add    %al,(%rax)
    2318:	a8 f5                	test   $0xf5,%al
    231a:	ff                   	(bad)  
    231b:	ff 65 00             	jmpq   *0x0(%rbp)
    231e:	00 00                	add    %al,(%rax)
    2320:	00 46 0e             	add    %al,0xe(%rsi)
    2323:	10 8f 02 49 0e 18    	adc    %cl,0x180e4902(%rdi)
    2329:	8e 03                	mov    (%rbx),%es
    232b:	45 0e                	rex.RB (bad) 
    232d:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
    2333:	8c 05 44 0e 30 86    	mov    %es,-0x79cff1bc(%rip)        # ffffffff8630317d <_end+0xffffffff862ff0d5>
    2339:	06                   	(bad)  
    233a:	48 0e                	rex.W (bad) 
    233c:	38 83 07 47 0e 40    	cmp    %al,0x400e4707(%rbx)
    2342:	6e                   	outsb  %ds:(%rsi),(%dx)
    2343:	0e                   	(bad)  
    2344:	38 41 0e             	cmp    %al,0xe(%rcx)
    2347:	30 41 0e             	xor    %al,0xe(%rcx)
    234a:	28 42 0e             	sub    %al,0xe(%rdx)
    234d:	20 42 0e             	and    %al,0xe(%rdx)
    2350:	18 42 0e             	sbb    %al,0xe(%rdx)
    2353:	10 42 0e             	adc    %al,0xe(%rdx)
    2356:	08 00                	or     %al,(%rax)
    2358:	10 00                	adc    %al,(%rax)
    235a:	00 00                	add    %al,(%rax)
    235c:	84 02                	test   %al,(%rdx)
    235e:	00 00                	add    %al,(%rax)
    2360:	d0 f5                	shl    %ch
    2362:	ff                   	(bad)  
    2363:	ff 05 00 00 00 00    	incl   0x0(%rip)        # 2369 <__GNU_EH_FRAME_HDR+0x339>
    2369:	00 00                	add    %al,(%rax)
	...

000000000000236c <__FRAME_END__>:
    236c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000003d80 <__frame_dummy_init_array_entry>:
    3d80:	e0 11                	loopne 3d93 <_DYNAMIC+0x3>
    3d82:	00 00                	add    %al,(%rax)
    3d84:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

0000000000003d88 <__do_global_dtors_aux_fini_array_entry>:
    3d88:	a0                   	.byte 0xa0
    3d89:	11 00                	adc    %eax,(%rax)
    3d8b:	00 00                	add    %al,(%rax)
    3d8d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dynamic:

0000000000003d90 <_DYNAMIC>:
    3d90:	01 00                	add    %eax,(%rax)
    3d92:	00 00                	add    %al,(%rax)
    3d94:	00 00                	add    %al,(%rax)
    3d96:	00 00                	add    %al,(%rax)
    3d98:	01 00                	add    %eax,(%rax)
    3d9a:	00 00                	add    %al,(%rax)
    3d9c:	00 00                	add    %al,(%rax)
    3d9e:	00 00                	add    %al,(%rax)
    3da0:	01 00                	add    %eax,(%rax)
    3da2:	00 00                	add    %al,(%rax)
    3da4:	00 00                	add    %al,(%rax)
    3da6:	00 00                	add    %al,(%rax)
    3da8:	7a 00                	jp     3daa <_DYNAMIC+0x1a>
    3daa:	00 00                	add    %al,(%rax)
    3dac:	00 00                	add    %al,(%rax)
    3dae:	00 00                	add    %al,(%rax)
    3db0:	0c 00                	or     $0x0,%al
    3db2:	00 00                	add    %al,(%rax)
    3db4:	00 00                	add    %al,(%rax)
    3db6:	00 00                	add    %al,(%rax)
    3db8:	00 10                	add    %dl,(%rax)
    3dba:	00 00                	add    %al,(%rax)
    3dbc:	00 00                	add    %al,(%rax)
    3dbe:	00 00                	add    %al,(%rax)
    3dc0:	0d 00 00 00 00       	or     $0x0,%eax
    3dc5:	00 00                	add    %al,(%rax)
    3dc7:	00 38                	add    %bh,(%rax)
    3dc9:	19 00                	sbb    %eax,(%rax)
    3dcb:	00 00                	add    %al,(%rax)
    3dcd:	00 00                	add    %al,(%rax)
    3dcf:	00 19                	add    %bl,(%rcx)
    3dd1:	00 00                	add    %al,(%rax)
    3dd3:	00 00                	add    %al,(%rax)
    3dd5:	00 00                	add    %al,(%rax)
    3dd7:	00 80 3d 00 00 00    	add    %al,0x3d(%rax)
    3ddd:	00 00                	add    %al,(%rax)
    3ddf:	00 1b                	add    %bl,(%rbx)
    3de1:	00 00                	add    %al,(%rax)
    3de3:	00 00                	add    %al,(%rax)
    3de5:	00 00                	add    %al,(%rax)
    3de7:	00 08                	add    %cl,(%rax)
    3de9:	00 00                	add    %al,(%rax)
    3deb:	00 00                	add    %al,(%rax)
    3ded:	00 00                	add    %al,(%rax)
    3def:	00 1a                	add    %bl,(%rdx)
    3df1:	00 00                	add    %al,(%rax)
    3df3:	00 00                	add    %al,(%rax)
    3df5:	00 00                	add    %al,(%rax)
    3df7:	00 88 3d 00 00 00    	add    %cl,0x3d(%rax)
    3dfd:	00 00                	add    %al,(%rax)
    3dff:	00 1c 00             	add    %bl,(%rax,%rax,1)
    3e02:	00 00                	add    %al,(%rax)
    3e04:	00 00                	add    %al,(%rax)
    3e06:	00 00                	add    %al,(%rax)
    3e08:	08 00                	or     %al,(%rax)
    3e0a:	00 00                	add    %al,(%rax)
    3e0c:	00 00                	add    %al,(%rax)
    3e0e:	00 00                	add    %al,(%rax)
    3e10:	f5                   	cmc    
    3e11:	fe                   	(bad)  
    3e12:	ff 6f 00             	ljmp   *0x0(%rdi)
    3e15:	00 00                	add    %al,(%rax)
    3e17:	00 a0 03 00 00 00    	add    %ah,0x3(%rax)
    3e1d:	00 00                	add    %al,(%rax)
    3e1f:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 3e25 <_DYNAMIC+0x95>
    3e25:	00 00                	add    %al,(%rax)
    3e27:	00 e8                	add    %ch,%al
    3e29:	04 00                	add    $0x0,%al
    3e2b:	00 00                	add    %al,(%rax)
    3e2d:	00 00                	add    %al,(%rax)
    3e2f:	00 06                	add    %al,(%rsi)
    3e31:	00 00                	add    %al,(%rax)
    3e33:	00 00                	add    %al,(%rax)
    3e35:	00 00                	add    %al,(%rax)
    3e37:	00 c8                	add    %cl,%al
    3e39:	03 00                	add    (%rax),%eax
    3e3b:	00 00                	add    %al,(%rax)
    3e3d:	00 00                	add    %al,(%rax)
    3e3f:	00 0a                	add    %cl,(%rdx)
    3e41:	00 00                	add    %al,(%rax)
    3e43:	00 00                	add    %al,(%rax)
    3e45:	00 00                	add    %al,(%rax)
    3e47:	00 f5                	add    %dh,%ch
    3e49:	00 00                	add    %al,(%rax)
    3e4b:	00 00                	add    %al,(%rax)
    3e4d:	00 00                	add    %al,(%rax)
    3e4f:	00 0b                	add    %cl,(%rbx)
    3e51:	00 00                	add    %al,(%rax)
    3e53:	00 00                	add    %al,(%rax)
    3e55:	00 00                	add    %al,(%rax)
    3e57:	00 18                	add    %bl,(%rax)
    3e59:	00 00                	add    %al,(%rax)
    3e5b:	00 00                	add    %al,(%rax)
    3e5d:	00 00                	add    %al,(%rax)
    3e5f:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 3e65 <_DYNAMIC+0xd5>
	...
    3e6d:	00 00                	add    %al,(%rax)
    3e6f:	00 03                	add    %al,(%rbx)
    3e71:	00 00                	add    %al,(%rax)
    3e73:	00 00                	add    %al,(%rax)
    3e75:	00 00                	add    %al,(%rax)
    3e77:	00 90 3f 00 00 00    	add    %dl,0x3f(%rax)
    3e7d:	00 00                	add    %al,(%rax)
    3e7f:	00 02                	add    %al,(%rdx)
    3e81:	00 00                	add    %al,(%rax)
    3e83:	00 00                	add    %al,(%rax)
    3e85:	00 00                	add    %al,(%rax)
    3e87:	00 90 00 00 00 00    	add    %dl,0x0(%rax)
    3e8d:	00 00                	add    %al,(%rax)
    3e8f:	00 14 00             	add    %dl,(%rax,%rax,1)
    3e92:	00 00                	add    %al,(%rax)
    3e94:	00 00                	add    %al,(%rax)
    3e96:	00 00                	add    %al,(%rax)
    3e98:	07                   	(bad)  
    3e99:	00 00                	add    %al,(%rax)
    3e9b:	00 00                	add    %al,(%rax)
    3e9d:	00 00                	add    %al,(%rax)
    3e9f:	00 17                	add    %dl,(%rdi)
    3ea1:	00 00                	add    %al,(%rax)
    3ea3:	00 00                	add    %al,(%rax)
    3ea5:	00 00                	add    %al,(%rax)
    3ea7:	00 08                	add    %cl,(%rax)
    3ea9:	07                   	(bad)  
    3eaa:	00 00                	add    %al,(%rax)
    3eac:	00 00                	add    %al,(%rax)
    3eae:	00 00                	add    %al,(%rax)
    3eb0:	07                   	(bad)  
    3eb1:	00 00                	add    %al,(%rax)
    3eb3:	00 00                	add    %al,(%rax)
    3eb5:	00 00                	add    %al,(%rax)
    3eb7:	00 48 06             	add    %cl,0x6(%rax)
    3eba:	00 00                	add    %al,(%rax)
    3ebc:	00 00                	add    %al,(%rax)
    3ebe:	00 00                	add    %al,(%rax)
    3ec0:	08 00                	or     %al,(%rax)
    3ec2:	00 00                	add    %al,(%rax)
    3ec4:	00 00                	add    %al,(%rax)
    3ec6:	00 00                	add    %al,(%rax)
    3ec8:	c0 00 00             	rolb   $0x0,(%rax)
    3ecb:	00 00                	add    %al,(%rax)
    3ecd:	00 00                	add    %al,(%rax)
    3ecf:	00 09                	add    %cl,(%rcx)
    3ed1:	00 00                	add    %al,(%rax)
    3ed3:	00 00                	add    %al,(%rax)
    3ed5:	00 00                	add    %al,(%rax)
    3ed7:	00 18                	add    %bl,(%rax)
    3ed9:	00 00                	add    %al,(%rax)
    3edb:	00 00                	add    %al,(%rax)
    3edd:	00 00                	add    %al,(%rax)
    3edf:	00 1e                	add    %bl,(%rsi)
    3ee1:	00 00                	add    %al,(%rax)
    3ee3:	00 00                	add    %al,(%rax)
    3ee5:	00 00                	add    %al,(%rax)
    3ee7:	00 08                	add    %cl,(%rax)
    3ee9:	00 00                	add    %al,(%rax)
    3eeb:	00 00                	add    %al,(%rax)
    3eed:	00 00                	add    %al,(%rax)
    3eef:	00 fb                	add    %bh,%bl
    3ef1:	ff                   	(bad)  
    3ef2:	ff 6f 00             	ljmp   *0x0(%rdi)
    3ef5:	00 00                	add    %al,(%rax)
    3ef7:	00 01                	add    %al,(%rcx)
    3ef9:	00 00                	add    %al,(%rax)
    3efb:	08 00                	or     %al,(%rax)
    3efd:	00 00                	add    %al,(%rax)
    3eff:	00 fe                	add    %bh,%dh
    3f01:	ff                   	(bad)  
    3f02:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f05:	00 00                	add    %al,(%rax)
    3f07:	00 f8                	add    %bh,%al
    3f09:	05 00 00 00 00       	add    $0x0,%eax
    3f0e:	00 00                	add    %al,(%rax)
    3f10:	ff                   	(bad)  
    3f11:	ff                   	(bad)  
    3f12:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f15:	00 00                	add    %al,(%rax)
    3f17:	00 02                	add    %al,(%rdx)
    3f19:	00 00                	add    %al,(%rax)
    3f1b:	00 00                	add    %al,(%rax)
    3f1d:	00 00                	add    %al,(%rax)
    3f1f:	00 f0                	add    %dh,%al
    3f21:	ff                   	(bad)  
    3f22:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f25:	00 00                	add    %al,(%rax)
    3f27:	00 de                	add    %bl,%dh
    3f29:	05 00 00 00 00       	add    $0x0,%eax
    3f2e:	00 00                	add    %al,(%rax)
    3f30:	f9                   	stc    
    3f31:	ff                   	(bad)  
    3f32:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f35:	00 00                	add    %al,(%rax)
    3f37:	00 03                	add    %al,(%rbx)
	...

Disassembly of section .got:

0000000000003f90 <_GLOBAL_OFFSET_TABLE_>:
    3f90:	90                   	nop
    3f91:	3d 00 00 00 00       	cmp    $0x0,%eax
	...
    3fa6:	00 00                	add    %al,(%rax)
    3fa8:	30 10                	xor    %dl,(%rax)
    3faa:	00 00                	add    %al,(%rax)
    3fac:	00 00                	add    %al,(%rax)
    3fae:	00 00                	add    %al,(%rax)
    3fb0:	40 10 00             	adc    %al,(%rax)
    3fb3:	00 00                	add    %al,(%rax)
    3fb5:	00 00                	add    %al,(%rax)
    3fb7:	00 50 10             	add    %dl,0x10(%rax)
    3fba:	00 00                	add    %al,(%rax)
    3fbc:	00 00                	add    %al,(%rax)
    3fbe:	00 00                	add    %al,(%rax)
    3fc0:	60                   	(bad)  
    3fc1:	10 00                	adc    %al,(%rax)
    3fc3:	00 00                	add    %al,(%rax)
    3fc5:	00 00                	add    %al,(%rax)
    3fc7:	00 70 10             	add    %dh,0x10(%rax)
    3fca:	00 00                	add    %al,(%rax)
    3fcc:	00 00                	add    %al,(%rax)
    3fce:	00 00                	add    %al,(%rax)
    3fd0:	80 10 00             	adcb   $0x0,(%rax)
	...

Disassembly of section .data:

0000000000004000 <__data_start>:
	...

0000000000004008 <__dso_handle>:
    4008:	08 40 00             	or     %al,0x0(%rax)
	...

0000000000004020 <perm_table>:
    4020:	00 00                	add    %al,(%rax)
    4022:	00 00                	add    %al,(%rax)
    4024:	01 00                	add    %eax,(%rax)
    4026:	00 00                	add    %al,(%rax)
    4028:	02 00                	add    (%rax),%al
    402a:	00 00                	add    %al,(%rax)
    402c:	03 00                	add    (%rax),%eax
    402e:	00 00                	add    %al,(%rax)
    4030:	04 00                	add    $0x0,%al
    4032:	00 00                	add    %al,(%rax)
    4034:	05 00 00 00 06       	add    $0x6000000,%eax
    4039:	00 00                	add    %al,(%rax)
    403b:	00 07                	add    %al,(%rdi)
    403d:	00 00                	add    %al,(%rax)
    403f:	00 08                	add    %cl,(%rax)
    4041:	00 00                	add    %al,(%rax)
    4043:	00 09                	add    %cl,(%rcx)
    4045:	00 00                	add    %al,(%rax)
    4047:	00 0a                	add    %cl,(%rdx)
    4049:	00 00                	add    %al,(%rax)
    404b:	00 0b                	add    %cl,(%rbx)
    404d:	00 00                	add    %al,(%rax)
    404f:	00 0c 00             	add    %cl,(%rax,%rax,1)
    4052:	00 00                	add    %al,(%rax)
    4054:	0d 00 00 00 0e       	or     $0xe000000,%eax
    4059:	00 00                	add    %al,(%rax)
    405b:	00 0f                	add    %cl,(%rdi)
    405d:	00 00                	add    %al,(%rax)
	...

0000000000004060 <round_table>:
    4060:	01 00                	add    %eax,(%rax)
    4062:	00 00                	add    %al,(%rax)
    4064:	01 00                	add    %eax,(%rax)
    4066:	00 00                	add    %al,(%rax)
    4068:	01 00                	add    %eax,(%rax)
    406a:	00 00                	add    %al,(%rax)
    406c:	01 00                	add    %eax,(%rax)
    406e:	00 00                	add    %al,(%rax)
    4070:	01 00                	add    %eax,(%rax)
    4072:	00 00                	add    %al,(%rax)
    4074:	01 00                	add    %eax,(%rax)
    4076:	00 00                	add    %al,(%rax)
    4078:	01 00                	add    %eax,(%rax)
    407a:	00 00                	add    %al,(%rax)
    407c:	01 00                	add    %eax,(%rax)
    407e:	00 00                	add    %al,(%rax)
    4080:	01 00                	add    %eax,(%rax)
    4082:	00 00                	add    %al,(%rax)
    4084:	01 00                	add    %eax,(%rax)
    4086:	00 00                	add    %al,(%rax)
    4088:	01 00                	add    %eax,(%rax)
    408a:	00 00                	add    %al,(%rax)
    408c:	01 00                	add    %eax,(%rax)
    408e:	00 00                	add    %al,(%rax)
    4090:	01 00                	add    %eax,(%rax)
    4092:	00 00                	add    %al,(%rax)
    4094:	01 00                	add    %eax,(%rax)
    4096:	00 00                	add    %al,(%rax)
    4098:	01 00                	add    %eax,(%rax)
    409a:	00 00                	add    %al,(%rax)
    409c:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .bss:

00000000000040a0 <completed.8060>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <_init-0xf88>
   a:	74 75                	je     81 <_init-0xf7f>
   c:	20 39                	and    %bh,(%rcx)
   e:	2e 33 2e             	xor    %cs:(%rsi),%ebp
  11:	30 2d 31 37 75 62    	xor    %ch,0x62753731(%rip)        # 62753748 <_end+0x6274f6a0>
  17:	75 6e                	jne    87 <_init-0xf79>
  19:	74 75                	je     90 <_init-0xf70>
  1b:	31 7e 32             	xor    %edi,0x32(%rsi)
  1e:	30 2e                	xor    %ch,(%rsi)
  20:	30 34 29             	xor    %dh,(%rcx,%rbp,1)
  23:	20 39                	and    %bh,(%rcx)
  25:	2e 33 2e             	xor    %cs:(%rsi),%ebp
  28:	30 00                	xor    %al,(%rax)
