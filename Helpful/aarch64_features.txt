3.19.1.1 -march and -mcpu Feature Modifiers
Feature modifiers used with -march and -mcpu can be any of the following and their inverses nofeature:

‘crc’
Enable CRC extension. This is on by default for -march=armv8.1-a.

‘crypto’
Enable Crypto extension. This also enables Advanced SIMD and floating-point instructions.

‘fp’
Enable floating-point instructions. This is on by default for all possible values for options -march and -mcpu.

‘simd’
Enable Advanced SIMD instructions. This also enables floating-point instructions. This is on by default for all possible values for options -march and -mcpu.

‘sve’
Enable Scalable Vector Extension instructions. This also enables Advanced SIMD and floating-point instructions.

‘lse’
Enable Large System Extension instructions. This is on by default for -march=armv8.1-a.

‘rdma’
Enable Round Double Multiply Accumulate instructions. This is on by default for -march=armv8.1-a.

‘fp16’
Enable FP16 extension. This also enables floating-point instructions.

‘fp16fml’
Enable FP16 fmla extension. This also enables FP16 extensions and floating-point instructions. This option is enabled by default for -march=armv8.4-a. Use of this option with architectures prior to Armv8.2-A is not supported.

‘rcpc’
Enable the RCpc extension. This enables the use of the LDAPR instructions for load-acquire atomic semantics, and passes it on to the assembler, enabling inline asm statements to use instructions from the RCpc extension.

‘dotprod’
Enable the Dot Product extension. This also enables Advanced SIMD instructions.

‘aes’
Enable the Armv8-a aes and pmull crypto extension. This also enables Advanced SIMD instructions.

‘sha2’
Enable the Armv8-a sha2 crypto extension. This also enables Advanced SIMD instructions.

‘sha3’
Enable the sha512 and sha3 crypto extension. This also enables Advanced SIMD instructions. Use of this option with architectures prior to Armv8.2-A is not supported.

‘sm4’
Enable the sm3 and sm4 crypto extension. This also enables Advanced SIMD instructions. Use of this option with architectures prior to Armv8.2-A is not supported.

‘profile’
Enable the Statistical Profiling extension. This option is only to enable the extension at the assembler level and does not affect code generation.

‘rng’
Enable the Armv8.5-a Random Number instructions. This option is only to enable the extension at the assembler level and does not affect code generation.

‘memtag’
Enable the Armv8.5-a Memory Tagging Extensions. Use of this option with architectures prior to Armv8.5-A is not supported.

‘sb’
Enable the Armv8-a Speculation Barrier instruction. This option is only to enable the extension at the assembler level and does not affect code generation. This option is enabled by default for -march=armv8.5-a.

‘ssbs’
Enable the Armv8-a Speculative Store Bypass Safe instruction. This option is only to enable the extension at the assembler level and does not affect code generation. This option is enabled by default for -march=armv8.5-a.

‘predres’
Enable the Armv8-a Execution and Data Prediction Restriction instructions. This option is only to enable the extension at the assembler level and does not affect code generation. This option is enabled by default for -march=armv8.5-a.

‘sve2’
Enable the Armv8-a Scalable Vector Extension 2. This also enables SVE instructions.

‘sve2-bitperm’
Enable SVE2 bitperm instructions. This also enables SVE2 instructions.

‘sve2-sm4’
Enable SVE2 sm4 instructions. This also enables SVE2 instructions.

‘sve2-aes’
Enable SVE2 aes instructions. This also enables SVE2 instructions.

‘sve2-sha3’
Enable SVE2 sha3 instructions. This also enables SVE2 instructions.

‘tme’
Enable the Transactional Memory Extension.

‘i8mm’
Enable 8-bit Integer Matrix Multiply instructions. This also enables Advanced SIMD and floating-point instructions. This option is enabled by default for -march=armv8.6-a. Use of this option with architectures prior to Armv8.2-A is not supported.

‘f32mm’
Enable 32-bit Floating point Matrix Multiply instructions. This also enables SVE instructions. Use of this option with architectures prior to Armv8.2-A is not supported.

‘f64mm’
Enable 64-bit Floating point Matrix Multiply instructions. This also enables SVE instructions. Use of this option with architectures prior to Armv8.2-A is not supported.

‘bf16’
Enable brain half-precision floating-point instructions. This also enables Advanced SIMD and floating-point instructions. This option is enabled by default for -march=armv8.6-a. Use of this option with architectures prior to Armv8.2-A is not supported.

‘ls64’
Enable the 64-byte atomic load and store instructions for accelerators. This option is enabled by default for -march=armv8.7-a.

‘mops’
Enable the instructions to accelerate memory operations like memcpy, memmove, memset. This option is enabled by default for -march=armv8.8-a

‘flagm’
Enable the Flag Manipulation instructions Extension.

‘pauth’
Enable the Pointer Authentication Extension.

‘cssc’
Enable the Common Short Sequence Compression instructions.

Feature crypto implies aes, sha2, and simd, which implies fp. Conversely, nofp implies nosimd, which implies nocrypto, noaes and nosha2.
