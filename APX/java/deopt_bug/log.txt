CompileCommand: print test.micro bool print = true

============================= C2-compiled nmethod ==============================
#r032 rsi   : parm 0: int
#r034 rdx   : parm 1: int
#r036 rcx   : parm 2: int
#r038 r8   : parm 3: int
#r040 r9   : parm 4: int
#r042 rdi   : parm 5: int
#r625 rsp+36: parm 6: MyClass *
#r624 rsp+32: parm 6: MyClass *
# -- Old rsp -- Framesize: 32 --
#r623 rsp+28: in_preserve
#r622 rsp+24: return address
#r621 rsp+20: in_preserve
#r620 rsp+16: saved fp register
#r619 rsp+12: pad2, stack alignment
#r618 rsp+ 8: pad2, stack alignment
#r617 rsp+ 4: Fixed slot 1
#r616 rsp+ 0: Fixed slot 0
#
----------------------- MetaData before Compile_id = 6 ------------------------
{method}
 - this oop:          0x00007f80e4400508
 - method holder:     'test'
 - constants:         0x00007f80e4400060 constant pool [86]/operands[10] {0x00007f80e4400060} for 'test' cache=0x00007f80e4400860
 - access:            0x9  public static 
 - flags:             0x4080  queued_for_compilation has_loops_flag_init 
 - name:              'micro'
 - signature:         '(IIIIIILMyClass;)I'
 - max stack:         4
 - max locals:        8
 - size of params:    7
 - method size:       14
 - vtable index:      -2
 - i2i entry:         0x00007f8188497f60
 - adapters:          AHE@0x00007f81943a63e0: 0xaaaaaab i2c: 0x00007f81885cc900 c2i: 0x00007f81885cc9f9 c2iUV: 0x00007f81885cc9d8 c2iNCI: 0x00007f81885cca34
 - compiled entry     0x00007f81885cc9f9
 - code size:         47
 - code start:        0x00007f80e44004d0
 - code end (excl):   0x00007f80e44004ff
 - method data:       0x00007f80e44016a8
 - checked ex length: 0
 - linenumber start:  0x00007f80e44004ff
 - localvar length:   0

------------------------ OptoAssembly for Compile_id = 6 -----------------------
#
#  int ( int, int, int, int, int, int, MyClass * )
#
000     N1: #	out( B1 ) <- in( B5 B4 B3 )  Freq: 1

000     B1: #	out( B5 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
000     # stack bang (184 bytes)
	pushq   rbp	# Save rbp
	subq    rsp, #16	# Create frame

01a     movq    RDX, [rsp + #32]	# spill
        nop 	# 1 bytes pad for loops and calls
020     movl    RCX, [RDX + #12 (8-bit)]	# int ! Field: MyClass.field
023     NullCheck RDX

023     B2: #	out( B4 B3 ) <- in( B1 )  Freq: 0.999999
023     cmpl    RCX, #50000
029     jg,s   B4  P=0.000000 C=6784.000000

02b     B3: #	out( N1 ) <- in( B2 )  Freq: 0.999999
02b     leal    RDX, [RCX << #3]
032     leal RAX, [RDX + RCX << #1]	# int
035     addq    rsp, 16	# Destroy frame
	popq    rbp
	cmpq    rsp, poll_offset[r15_thread] 
	ja      #safepoint_stub	# Safepoint: poll for GC

044     ret

045     B4: #	out( N1 ) <- in( B2 )  Freq: 4.76837e-07
045     movl    RSI, #-179	# int
04a     movl    RBP, RCX	# spill
        nop 	# 3 bytes pad for loops and calls
04f     call,static  wrapper for: uncommon_trap(reason='unstable_if' action='reinterpret' debug_id='0')
        # test::micro @ bci:18 (line 30) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=#ScObj0 STK[0]=RBP STK[1]=#50000
        # ScObj0 MyClassWrapper={ [field :0]=rsp + #32 }
        # OopMap {[32]=Oop off=84/0x54}
05c     stop	# ShouldNotReachHere

070     B5: #	out( N1 ) <- in( B1 )  Freq: 1.01328e-06
070     movl    RSI, #-10	# int
        nop 	# 2 bytes pad for loops and calls
077     call,static  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # test::micro @ bci:13 (line 30) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=_ STK[0]=#null
        # OopMap {off=124/0x7c}
084     stop	# ShouldNotReachHere

--------------------------------------------------------------------------------
----------------------------------- Assembly -----------------------------------

Compiled method (c2) 420    6             test::micro (47 bytes)
 total in heap  [0x00007f81885cc588,0x00007f81885cc7b8] = 560
 relocation     [0x00007f81885cc670,0x00007f81885cc698] = 40
 main code      [0x00007f81885cc6a0,0x00007f81885cc758] = 184
 stub code      [0x00007f81885cc758,0x00007f81885cc770] = 24
 oops           [0x00007f81885cc770,0x00007f81885cc780] = 16
 metadata       [0x00007f81885cc780,0x00007f81885cc7b8] = 56
 immutable data [0x00007f80e0097550,0x00007f80e0097680] = 304
 dependencies   [0x00007f80e0097550,0x00007f80e0097568] = 24
 nul chk table  [0x00007f80e0097568,0x00007f80e0097578] = 16
 scopes pcs     [0x00007f80e0097578,0x00007f80e0097618] = 160
 scopes data    [0x00007f80e0097618,0x00007f80e0097680] = 104

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x00007f80e4400508} 'micro' '(IIIIIILMyClass;)I' in 'test'
  # parm0:    rsi       = int
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  # parm3:    r8        = int
  # parm4:    r9        = int
  # parm5:    rdi       = int
  # parm6:    [sp+0x20]   = 'MyClass'  (sp of caller)
 ;; N1: #	out( B1 ) <- in( B5 B4 B3 )  Freq: 1
 ;; B1: #	out( B5 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x00007f81885cc6a0:   mov    %eax,-0x18000(%rsp)
  0x00007f81885cc6a7:   push   %rbp
  0x00007f81885cc6a8:   sub    $0x10,%rsp
  0x00007f81885cc6ac:   cmpl   $0x0,0x20(%r15)
  0x00007f81885cc6b4:   jne    0x00007f81885cc74e           ;*synchronization entry
                                                            ; - test::micro@-1 (line 29)
  0x00007f81885cc6ba:   mov    0x20(%rsp),%rdx
  0x00007f81885cc6bf:   nop
  0x00007f81885cc6c0:   mov    0xc(%rdx),%ecx               ; implicit exception: dispatches to 0x00007f81885cc710
                                                            ;*getfield field {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::micro@13 (line 30)
 ;; B2: #	out( B4 B3 ) <- in( B1 )  Freq: 0.999999
  0x00007f81885cc6c3:   cmp    $0xc350,%ecx
  0x00007f81885cc6c9:   jg     0x00007f81885cc6e5           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::micro@18 (line 30)
 ;; B3: #	out( N1 ) <- in( B2 )  Freq: 0.999999
  0x00007f81885cc6cb:   lea    0x0(,%rcx,8),%edx
  0x00007f81885cc6d2:   lea    (%rdx,%rcx,2),%eax           ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MyClass::multAndGet@5 (line 7)
                                                            ; - MyClassWrapper::multAndGet@5 (line 20)
                                                            ; - test::micro@43 (line 35)
  0x00007f81885cc6d5:   add    $0x10,%rsp
  0x00007f81885cc6d9:   pop    %rbp
  0x00007f81885cc6da:   cmp    0x28(%r15),%rsp              ;   {poll_return}
  0x00007f81885cc6de:   ja     0x00007f81885cc738
  0x00007f81885cc6e4:   retq   
 ;; B4: #	out( N1 ) <- in( B2 )  Freq: 4.76837e-07
  0x00007f81885cc6e5:   mov    $0xffffff4d,%esi
  0x00007f81885cc6ea:   mov    %ecx,%ebp
  0x00007f81885cc6ec:   nop
  0x00007f81885cc6ed:   nop
  0x00007f81885cc6ee:   nop
  0x00007f81885cc6ef:   callq  0x00007f81885a1ae0           ; ImmutableOopMap {[32]=Oop }
                                                            ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) test::micro@18 (line 30)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f81885cc6f4:   nopl   0x16c(%rax,%rax,1)           ;   {post_call_nop}
  0x00007f81885cc6fc:   movabs $0x7f819c36dba8,%rdi         ;   {external_word}
  0x00007f81885cc706:   and    $0xfffffffffffffff0,%rsp
  0x00007f81885cc70a:   callq  0x00007f819b7dad42           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f81885cc70f:   hlt                                 ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::micro@18 (line 30)
 ;; B5: #	out( N1 ) <- in( B1 )  Freq: 1.01328e-06
  0x00007f81885cc710:   mov    $0xfffffff6,%esi
  0x00007f81885cc715:   nop
  0x00007f81885cc716:   nop
  0x00007f81885cc717:   callq  0x00007f81885a1ae0           ; ImmutableOopMap {}
                                                            ;*getfield field {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) test::micro@13 (line 30)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f81885cc71c:   nopl   0x1000194(%rax,%rax,1)       ;   {post_call_nop}
  0x00007f81885cc724:   movabs $0x7f819c36dba8,%rdi         ;   {external_word}
  0x00007f81885cc72e:   and    $0xfffffffffffffff0,%rsp
  0x00007f81885cc732:   callq  0x00007f819b7dad42           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f81885cc737:   hlt                                 ;*getfield field {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - test::micro@13 (line 30)
  0x00007f81885cc738:   movabs $0x7f81885cc6da,%r10         ;   {internal_word}
  0x00007f81885cc742:   mov    %r10,0x498(%r15)
  0x00007f81885cc749:   jmpq   0x00007f81885ab7e0           ;   {runtime_call SafepointBlob}
  0x00007f81885cc74e:   callq  Stub::method_entry_barrier   ;   {runtime_call StubRoutines (finalstubs)}
  0x00007f81885cc753:   jmpq   0x00007f81885cc6ba
[Exception Handler]
  0x00007f81885cc758:   jmpq   0x00007f81885abce0           ;   {no_reloc}
[Deopt Handler Code]
  0x00007f81885cc75d:   callq  0x00007f81885cc762
  0x00007f81885cc762:   subq   $0x5,(%rsp)
  0x00007f81885cc767:   jmpq   0x00007f81885a9ea0           ;   {runtime_call DeoptimizationBlob}
  0x00007f81885cc76c:   hlt    
  0x00007f81885cc76d:   hlt    
  0x00007f81885cc76e:   hlt    
  0x00007f81885cc76f:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Oops:
  0x00007f81885cc770:   0x000000011f0192b8 a 'java/lang/Class'{0x000000011f0192b8} = 'MyClassWrapper'
  0x00007f81885cc778:   0x00000007ff01ef90 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x00000007ff01ef90}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Metadata:
  0x00007f81885cc780:   0x00007f80e4400508 {method} {0x00007f80e4400508} 'micro' '(IIIIIILMyClass;)I' in 'test'
  0x00007f81885cc788:   0x00007f80e4401208 {method} {0x00007f80e4401208} 'multAndGet' '(I)I' in 'MyClassWrapper'
  0x00007f81885cc790:   0x00007f80e4400bc8 {method} {0x00007f80e4400bc8} 'multAndGet' '(I)I' in 'MyClass'
  0x00007f81885cc798:   0x00007f80e4401150 {method} {0x00007f80e4401150} '<init>' '(LMyClass;)V' in 'MyClassWrapper'
  0x00007f81885cc7a0:   0x00007f80fe5478c0 {method} {0x00007f80fe5478c0} '<init>' '()V' in 'java/lang/Object'
  0x00007f81885cc7a8:   0x00007f80ff000a18 'MyClass'
  0x00007f81885cc7b0:   0x00007f80ff000c38 'MyClassWrapper'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
pc-bytecode offsets:
PcDesc(pc=0x00007f81885cc69f offset=ffffffff bits=0):
PcDesc(pc=0x00007f81885cc6ba offset=1a bits=0):
   test::micro@-1 (line 29)
PcDesc(pc=0x00007f81885cc6c3 offset=23 bits=0):
   test::micro@13 (line 30)
PcDesc(pc=0x00007f81885cc6cb offset=2b bits=0):
   test::micro@18 (line 30)
PcDesc(pc=0x00007f81885cc6d5 offset=35 bits=0):
   MyClass::multAndGet@5 (line 7)
   MyClassWrapper::multAndGet@5 (line 20)
   test::micro@43 (line 35)
PcDesc(pc=0x00007f81885cc6f4 offset=54 bits=1):
   test::micro@18 (line 30)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: obj[29]
   Expression stack
    - @0: reg rbp [10],int
    - @1: 50000
   Objects
    - 0: R obj[29], MyClassWrapper
        Fields: stack[32],oop
PcDesc(pc=0x00007f81885cc710 offset=70 bits=0):
   test::micro@18 (line 30)
PcDesc(pc=0x00007f81885cc71c offset=7c bits=1):
   test::micro@13 (line 30)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
   Expression stack
    - @0: null
PcDesc(pc=0x00007f81885cc738 offset=98 bits=0):
   test::micro@13 (line 30)
PcDesc(pc=0x00007f81885cc771 offset=d1 bits=0):
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
oop maps:ImmutableOopMapSet contains 2 OopMaps

ImmutableOopMap {[32]=Oop } pc offsets: 84 
ImmutableOopMap {} pc offsets: 124 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
scopes:
ScopeDesc(pc=0x00007f81885cc6ba offset=1a):
   test::micro@-1 (line 29)
ScopeDesc(pc=0x00007f81885cc6c3 offset=23):
   test::micro@13 (line 30)
ScopeDesc(pc=0x00007f81885cc6cb offset=2b):
   test::micro@18 (line 30)
ScopeDesc(pc=0x00007f81885cc6d5 offset=35):
   MyClass::multAndGet@5 (line 7)
ScopeDesc(pc=0x00007f81885cc6d5 offset=35):
   MyClassWrapper::multAndGet@5 (line 20)
ScopeDesc(pc=0x00007f81885cc6d5 offset=35):
   test::micro@43 (line 35)
ScopeDesc(pc=0x00007f81885cc6f4 offset=54):
   test::micro@18 (line 30)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: obj[29]
   Expression stack
    - @0: reg rbp [10],int
    - @1: 50000
   Objects
    - 0: R obj[29], MyClassWrapper
        Fields: stack[32],oop
ScopeDesc(pc=0x00007f81885cc710 offset=70):
   test::micro@18 (line 30)
ScopeDesc(pc=0x00007f81885cc71c offset=7c):
   test::micro@13 (line 30)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
   Expression stack
    - @0: null
ScopeDesc(pc=0x00007f81885cc738 offset=98):
   test::micro@13 (line 30)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
relocations:
         @0x00007f81885cc670: 583a
relocInfo@0x00007f81885cc670 [type=11(poll_return) addr=0x00007f81885cc6da offset=58]
         @0x00007f81885cc672: 3115
relocInfo@0x00007f81885cc672 [type=6(runtime_call) addr=0x00007f81885cc6ef offset=21 format=1] | [destination=0x00007f81885a1ae0]
         @0x00007f81885cc674: 8005
relocInfo@0x00007f81885cc674 [type=16(post_call_nop) addr=0x00007f81885cc6f4 offset=5]
         @0x00007f81885cc676: 780d3808
relocInfo@0x00007f81885cc678 [type=7(external_word) addr=0x00007f81885cc6fc offset=8 data=13] | [target=0x00007f819c36dba8]
         @0x00007f81885cc67a: 310e
relocInfo@0x00007f81885cc67a [type=6(runtime_call) addr=0x00007f81885cc70a offset=14 format=1] | [destination=0x00007f819b7dad42]
         @0x00007f81885cc67c: 310d
relocInfo@0x00007f81885cc67c [type=6(runtime_call) addr=0x00007f81885cc717 offset=13 format=1] | [destination=0x00007f81885a1ae0]
         @0x00007f81885cc67e: 8005
relocInfo@0x00007f81885cc67e [type=16(post_call_nop) addr=0x00007f81885cc71c offset=5]
         @0x00007f81885cc680: 780d3808
relocInfo@0x00007f81885cc682 [type=7(external_word) addr=0x00007f81885cc724 offset=8 data=13] | [target=0x00007f819c36dba8]
         @0x00007f81885cc684: 310e
relocInfo@0x00007f81885cc684 [type=6(runtime_call) addr=0x00007f81885cc732 offset=14 format=1] | [destination=0x00007f819b7dad42]
         @0x00007f81885cc686: 785e4006
relocInfo@0x00007f81885cc688 [type=8(internal_word) addr=0x00007f81885cc738 offset=6 data=94] | [target=0x00007f81885cc6da]
         @0x00007f81885cc68a: 3111
relocInfo@0x00007f81885cc68a [type=6(runtime_call) addr=0x00007f81885cc749 offset=17 format=1] | [destination=0x00007f81885ab7e0]
         @0x00007f81885cc68c: 3105
relocInfo@0x00007f81885cc68c [type=6(runtime_call) addr=0x00007f81885cc74e offset=5 format=1] | [destination=0x00007f8188509100]
         @0x00007f81885cc68e: 000a
relocInfo@0x00007f81885cc68e [type=0(none) addr=0x00007f81885cc758 offset=10]
         @0x00007f81885cc690: 3100
relocInfo@0x00007f81885cc690 [type=6(runtime_call) addr=0x00007f81885cc758 offset=0 format=1] | [destination=0x00007f81885abce0]
         @0x00007f81885cc692: 310f
relocInfo@0x00007f81885cc692 [type=6(runtime_call) addr=0x00007f81885cc767 offset=15 format=1] | [destination=0x00007f81885a9ea0]
         @0x00007f81885cc694: 0000
relocInfo@0x00007f81885cc694 [type=0(none) addr=0x00007f81885cc767 offset=0]
         @0x00007f81885cc696: 0000
relocInfo@0x00007f81885cc696 [type=0(none) addr=0x00007f81885cc767 offset=0]
         @0x00007f81885cc698: 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Dependencies:
Dependency of type evol_method
  method  = *{method} {0x00007f80e4400508} 'micro' '(IIIIIILMyClass;)I' in 'test'
Dependency of type evol_method
  method  = {method} {0x00007f80e4401150} '<init>' '(LMyClass;)V' in 'MyClassWrapper'
Dependency of type evol_method
  method  = {method} {0x00007f80e4401208} 'multAndGet' '(I)I' in 'MyClassWrapper'
Dependency of type evol_method
  method  = {method} {0x00007f80fe5478c0} '<init>' '()V' in 'java/lang/Object'
Dependency of type evol_method
  method  = {method} {0x00007f80e4400bc8} 'multAndGet' '(I)I' in 'MyClass'
Dependency of type unique_concrete_method_4
  context = MyClass
  method  = {method} {0x00007f80e4400bc8} 'multAndGet' '(I)I' in 'MyClass'
  class   = MyClass
  method  = {method} {0x00007f80e4400bc8} 'multAndGet' '(I)I' in 'MyClass'
   [nmethod<=klass]MyClass
Dependency of type unique_concrete_method_4
  context = MyClassWrapper
  method  = {method} {0x00007f80e4401208} 'multAndGet' '(I)I' in 'MyClassWrapper'
  class   = MyClassWrapper
  method  = {method} {0x00007f80e4401208} 'multAndGet' '(I)I' in 'MyClassWrapper'
   [nmethod<=klass]MyClassWrapper
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ExceptionHandlerTable (size = 0 bytes)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ImplicitExceptionTable (size = 1 entries, 12 bytes):
{
   < 0x00007f81885cc6c0, 0x00007f81885cc710 > 
}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded oops:
#0: 0x0000000000000000 nullptr-oop
#1: 0x000000011f0192b8 a 'java/lang/Class'{0x000000011f0192b8} = 'MyClassWrapper'
#2: 0x00000007ff01ef90 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x00000007ff01ef90}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded metadata:
#0: 0x0000000000000000 nullptr-oop
#1: 0x00007f80e4400508 {method} {0x00007f80e4400508} 'micro' '(IIIIIILMyClass;)I' in 'test'
#2: 0x00007f80e4401208 {method} {0x00007f80e4401208} 'multAndGet' '(I)I' in 'MyClassWrapper'
#3: 0x00007f80e4400bc8 {method} {0x00007f80e4400bc8} 'multAndGet' '(I)I' in 'MyClass'
#4: 0x00007f80e4401150 {method} {0x00007f80e4401150} '<init>' '(LMyClass;)V' in 'MyClassWrapper'
#5: 0x00007f80fe5478c0 {method} {0x00007f80fe5478c0} '<init>' '()V' in 'java/lang/Object'
#6: 0x00007f80ff000a18 'MyClass'
#7: 0x00007f80ff000c38 'MyClassWrapper'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
------------------------------------------------------------------------
static test::micro(IIIIIILMyClass;)I
  interpreter_invocation_count:        6784
  invocation_counter:                  6784
  backedge_counter:                       0
  decompile_count:                        0
  mdo size: 640 bytes

   0 new 7 <MyClassWrapper>
   3 dup
   4 aload #6
   6 invokespecial 9 <MyClassWrapper.<init>(LMyClass;)V> 
  0    bci: 6    CounterData        count(5121)
   9 astore #7
  11 aload #6
  13 fast_igetfield 12 <MyClass.field:I> 
  16 ldc 50000
  18 if_icmple 39
  16   bci: 18   BranchData         trap(intrinsic_or_type_checked_inlining recompiled) taken(5121) displacement(112)
                                    not taken(1)
  21 new 19 <java/lang/RuntimeException>
  24 dup
  25 aload #7
  27 invokestatic 21 <java/lang/String.valueOf(Ljava/lang/Object;)Ljava/lang/String;> 
  48   bci: 27   CounterData        count(1)
  30 invokedynamic bsm=74 27 <makeConcatWithConstants(Ljava/lang/String;)Ljava/lang/String;>
  64   bci: 30   CounterData        count(1)
                argument types      0: stack(0) 'java/lang/String'
                return type         'java/lang/String'
  35 invokespecial 31 <java/lang/RuntimeException.<init>(Ljava/lang/String;)V> 
  112  bci: 35   CounterData        count(1)
  38 athrow
  39 aload #7
  41 bipush 10
  43 invokevirtual 34 <MyClassWrapper.multAndGet(I)I> 
  128  bci: 43   VirtualCallData    count(0) entries(1)
                                    'MyClassWrapper'(5121 1.00)
  46 ireturn
------------------------------------------------------------------------
Total MDO size: 640 bytes
