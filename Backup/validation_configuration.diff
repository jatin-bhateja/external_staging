diff --git a/configure b/configure
old mode 100644
new mode 100755
diff --git a/make/RunTests.gmk b/make/RunTests.gmk
index 3c0280353a9..3ca5ed1960d 100644
--- a/make/RunTests.gmk
+++ b/make/RunTests.gmk
@@ -1001,7 +1001,10 @@ define SetupRunJtregTestBody
 	$$(RM) -r $$($1_TEST_RESULTS_DIR)
 
   $1_COMMAND_LINE := \
-      $$(JTREG_JAVA) $$($1_JTREG_LAUNCHER_OPTIONS) \
+      $$(PRINTF) "\nRunning with SDE version 9.55.0-2025-05-05-lin\n"; \
+      $$(PRINTF) "\nJDK Under Test = $$(JDK_UNDER_TEST)\n\n"; \
+      $$(PRINTF) "\nLauncher JDK = $$(JTREG_JAVA)\n\n"; \
+      /home/jatinbha/softwares/sde-internal-conf-9.55.0-2025-05-05-lin/sde64 -follow_subprocess -dmr -ptr_raise -icount -- $$(JTREG_JAVA) $$($1_JTREG_LAUNCHER_OPTIONS) \
           -Dprogram=jtreg -jar $$(JT_HOME)/lib/jtreg.jar \
           $$($1_JTREG_BASIC_OPTIONS) \
           -testjdk:$$(JDK_UNDER_TEST) \
diff --git a/src/hotspot/cpu/x86/x86_64.ad b/src/hotspot/cpu/x86/x86_64.ad
index 2c44e7796c5..14ac0ea9e74 100644
--- a/src/hotspot/cpu/x86/x86_64.ad
+++ b/src/hotspot/cpu/x86/x86_64.ad
@@ -186,22 +186,7 @@ reg_def R31_H(SOC, SOC, Op_RegI, 31, r31->as_VMReg()->next());
 // which participate in fixed calling sequences should come last.
 // Registers which are used as pairs must fall on an even boundary.
 
-alloc_class chunk0(R10,         R10_H,
-                   R11,         R11_H,
-                   R8,          R8_H,
-                   R9,          R9_H,
-                   R12,         R12_H,
-                   RCX,         RCX_H,
-                   RBX,         RBX_H,
-                   RDI,         RDI_H,
-                   RDX,         RDX_H,
-                   RSI,         RSI_H,
-                   RAX,         RAX_H,
-                   RBP,         RBP_H,
-                   R13,         R13_H,
-                   R14,         R14_H,
-                   R15,         R15_H,
-                   R16,         R16_H,
+alloc_class chunk0(R16,         R16_H,
                    R17,         R17_H,
                    R18,         R18_H,
                    R19,         R19_H,
@@ -217,6 +202,21 @@ alloc_class chunk0(R10,         R10_H,
                    R29,         R29_H,
                    R30,         R30_H,
                    R31,         R31_H,
+                   RSI,         RSI_H,
+                   RDX,         RDX_H,
+                   RCX,         RCX_H,
+                   R8,          R8_H,
+                   R9,          R9_H,
+                   RDI,         RDI_H,
+                   R10,         R10_H,
+                   R11,         R11_H,
+                   R12,         R12_H,
+                   RBX,         RBX_H,
+                   RAX,         RAX_H,
+                   RBP,         RBP_H,
+                   R13,         R13_H,
+                   R14,         R14_H,
+                   R15,         R15_H,
                    RSP,         RSP_H);
 
 
