Dump of assembler code from 0x7fdab11a8ee0 to 0x7fdab11a9a98:
=> 0x00007fdab11a8ee0:	mov    %eax,-0x16000(%rsp)
   0x00007fdab11a8ee7:	push   %rbp
   0x00007fdab11a8ee8:	sub    $0x110,%rsp
   0x00007fdab11a8eef:	mov    %rcx,0x8(%rsp)
   0x00007fdab11a8ef4:	mov    %rdx,(%rsp)
   0x00007fdab11a8ef8:	mov    $0x10,%edx
   0x00007fdab11a8efd:	nop
   0x00007fdab11a8efe:	vzeroupper 
   0x00007fdab11a8f01:	movabs $0xffffffffffffffff,%rax
   0x00007fdab11a8f0b:	callq  0x7fdab1116920
   0x00007fdab11a8f10:	mov    0x8(%rax),%r11d
   0x00007fdab11a8f14:	nop
   0x00007fdab11a8f15:	nop
   0x00007fdab11a8f16:	nop
   0x00007fdab11a8f17:	nop
   0x00007fdab11a8f18:	nop
   0x00007fdab11a8f19:	nop
   0x00007fdab11a8f1a:	nop
   0x00007fdab11a8f1b:	nop
   0x00007fdab11a8f1c:	nop
   0x00007fdab11a8f1d:	nop
   0x00007fdab11a8f1e:	nop
   0x00007fdab11a8f1f:	nop
   0x00007fdab11a8f20:	cmp    $0x40c30,%r11d
   0x00007fdab11a8f27:	jne    0x7fdab11a99d8
   0x00007fdab11a8f2d:	mov    %rax,%rbp
   0x00007fdab11a8f30:	mov    (%rsp),%rsi
   0x00007fdab11a8f34:	mov    $0x10,%edx
   0x00007fdab11a8f39:	nop
   0x00007fdab11a8f3a:	vzeroupper 
   0x00007fdab11a8f3d:	movabs $0xffffffffffffffff,%rax
   0x00007fdab11a8f47:	callq  0x7fdab1116920
   0x00007fdab11a8f4c:	mov    0x8(%rax),%r11d
   0x00007fdab11a8f50:	cmp    $0x40c30,%r11d
   0x00007fdab11a8f57:	jne    0x7fdab11a99fc
   0x00007fdab11a8f5d:	mov    %rbp,(%rsp)
   0x00007fdab11a8f61:	mov    %rax,0x10(%rsp)
   0x00007fdab11a8f66:	mov    0x8(%rsp),%rsi
   0x00007fdab11a8f6b:	mov    $0x10,%edx
   0x00007fdab11a8f70:	nop
   0x00007fdab11a8f71:	nop
   0x00007fdab11a8f72:	vzeroupper 
   0x00007fdab11a8f75:	movabs $0xffffffffffffffff,%rax
   0x00007fdab11a8f7f:	callq  0x7fdab1116920
   0x00007fdab11a8f84:	mov    0x8(%rax),%r11d
   0x00007fdab11a8f88:	cmp    $0x40000,%r11d
   0x00007fdab11a8f8f:	jne    0x7fdab11a9a20
   0x00007fdab11a8f95:	mov    0xc(%rax),%r8d
   0x00007fdab11a8f99:	mov    %r8d,%ebp
   0x00007fdab11a8f9c:	add    $0xfffffff1,%ebp
   0x00007fdab11a8f9f:	nop
   0x00007fdab11a8fa0:	test   %ebp,%ebp
   0x00007fdab11a8fa2:	jl     0x7fdab11a9a44
   0x00007fdab11a8fa8:	cmp    $0xf,%r8d
   0x00007fdab11a8fac:	je     0x7fdab11a99a8
   0x00007fdab11a8fb2:	mov    0x140(%r15),%r11
   0x00007fdab11a8fb9:	mov    %r11,%r10
   0x00007fdab11a8fbc:	add    $0x20,%r10
   0x00007fdab11a8fc0:	cmp    0x150(%r15),%r10
   0x00007fdab11a8fc7:	jae    0x7fdab11a98bd
   0x00007fdab11a8fcd:	mov    %r10,0x140(%r15)
   0x00007fdab11a8fd4:	prefetchw 0xc0(%r10)
   0x00007fdab11a8fdc:	movq   $0x1,(%r11)
   0x00007fdab11a8fe3:	prefetchw 0x100(%r10)
   0x00007fdab11a8feb:	movl   $0x40000,0x8(%r11)
   0x00007fdab11a8ff3:	prefetchw 0x140(%r10)
   0x00007fdab11a8ffb:	movl   $0x10,0xc(%r11)
   0x00007fdab11a9003:	prefetchw 0x180(%r10)
   0x00007fdab11a900b:	mov    %r8d,0x8(%rsp)
   0x00007fdab11a9010:	vmovdqu 0x10(%rax),%xmm0
   0x00007fdab11a9015:	mov    %rax,0x18(%rsp)
   0x00007fdab11a901a:	vmovdqu %xmm0,0x10(%r11)
   0x00007fdab11a9020:	mov    %r11,0x20(%rsp)
   0x00007fdab11a9025:	mov    0x10(%rsp),%r10
   0x00007fdab11a902a:	mov    0xc(%r10),%ebp
   0x00007fdab11a902e:	mov    (%rsp),%r10
   0x00007fdab11a9032:	mov    0xc(%r10),%r8d
   0x00007fdab11a9036:	vpabsb %xmm0,%xmm2
   0x00007fdab11a903b:	mov    %r8d,%r10d
   0x00007fdab11a903e:	add    $0xfffffff1,%r10d
   0x00007fdab11a9042:	mov    %r10d,0x2c(%rsp)
   0x00007fdab11a9047:	mov    %r8d,0x28(%rsp)
   0x00007fdab11a904c:	movslq %r8d,%r10
   0x00007fdab11a904f:	mov    %ebp,0xc(%rsp)
   0x00007fdab11a9053:	movslq %ebp,%r11
   0x00007fdab11a9056:	mov    %r10,0x30(%rsp)
   0x00007fdab11a905b:	add    $0xfffffffffffffff1,%r10
   0x00007fdab11a905f:	mov    %r10,0x40(%rsp)
   0x00007fdab11a9064:	mov    %r11,0x38(%rsp)
   0x00007fdab11a9069:	add    $0xfffffffffffffff1,%r11
   0x00007fdab11a906d:	mov    %r11,0x48(%rsp)
   0x00007fdab11a9072:	mov    0x30(%rsp),%r10
   0x00007fdab11a9077:	add    $0xf,%r10
   0x00007fdab11a907b:	add    $0xfffffff1,%ebp
   0x00007fdab11a907e:	mov    %ebp,0x50(%rsp)
   0x00007fdab11a9082:	and    $0xfffffffffffffff0,%r10
   0x00007fdab11a9086:	mov    %r10d,%r10d
   0x00007fdab11a9089:	movslq %r10d,%r10
   0x00007fdab11a908c:	mov    %r10,%r11
   0x00007fdab11a908f:	add    $0xfffffffffffffff0,%r11
   0x00007fdab11a9093:	mov    %r11,0x58(%rsp)
   0x00007fdab11a9098:	dec    %r10
   0x00007fdab11a909b:	mov    %r10,0x60(%rsp)
   0x00007fdab11a90a0:	xor    %ebp,%ebp
   0x00007fdab11a90a2:	mov    %ebp,0x54(%rsp)
   0x00007fdab11a90a6:	jmp    0x7fdab11a90cc
   0x00007fdab11a90a8:	mov    0x128(%r15),%r10
   0x00007fdab11a90af:	mov    0x54(%rsp),%ebp
   0x00007fdab11a90b3:	inc    %ebp
   0x00007fdab11a90b5:	mov    %ebp,0x54(%rsp)
   0x00007fdab11a90b9:	test   %eax,(%r10)
   0x00007fdab11a90bc:	nop
   0x00007fdab11a90bd:	nop
   0x00007fdab11a90be:	nop
   0x00007fdab11a90bf:	nop
   0x00007fdab11a90c0:	cmp    $0x2710,%ebp
   0x00007fdab11a90c6:	jge    0x7fdab11a9557
   0x00007fdab11a90cc:	mov    0x28(%rsp),%ebp
   0x00007fdab11a90d0:	test   %ebp,%ebp
   0x00007fdab11a90d2:	jbe    0x7fdab11a90a8
   0x00007fdab11a90d4:	mov    0x2c(%rsp),%ebp
   0x00007fdab11a90d8:	test   %ebp,%ebp
   0x00007fdab11a90da:	nop
   0x00007fdab11a90db:	nop
   0x00007fdab11a90dc:	nop
   0x00007fdab11a90dd:	nop
   0x00007fdab11a90de:	nop
   0x00007fdab11a90df:	nop
   0x00007fdab11a90e0:	jl     0x7fdab11a98e7
   0x00007fdab11a90e6:	mov    0x28(%rsp),%ebp
   0x00007fdab11a90ea:	cmp    $0xf,%ebp
   0x00007fdab11a90ed:	je     0x7fdab11a98e7
   0x00007fdab11a90f3:	mov    0x58(%rsp),%r10
   0x00007fdab11a90f8:	nop
   0x00007fdab11a90f9:	nop
   0x00007fdab11a90fa:	nop
   0x00007fdab11a90fb:	nop
   0x00007fdab11a90fc:	nop
   0x00007fdab11a90fd:	nop
   0x00007fdab11a90fe:	nop
   0x00007fdab11a90ff:	nop
   0x00007fdab11a9100:	cmp    0x40(%rsp),%r10
   0x00007fdab11a9105:	jae    0x7fdab11a98e7
   0x00007fdab11a910b:	mov    0x50(%rsp),%ebp
   0x00007fdab11a910f:	test   %ebp,%ebp
   0x00007fdab11a9111:	jl     0x7fdab11a98e7
   0x00007fdab11a9117:	mov    0xc(%rsp),%ebp
   0x00007fdab11a911b:	nop
   0x00007fdab11a911c:	nop
   0x00007fdab11a911d:	nop
   0x00007fdab11a911e:	nop
   0x00007fdab11a911f:	nop
   0x00007fdab11a9120:	cmp    $0xf,%ebp
   0x00007fdab11a9123:	je     0x7fdab11a98e7
   0x00007fdab11a9129:	cmp    0x48(%rsp),%r10
   0x00007fdab11a912e:	jae    0x7fdab11a98e7
   0x00007fdab11a9134:	mov    0x8(%rsp),%ebp
   0x00007fdab11a9138:	cmp    $0xf,%ebp
   0x00007fdab11a913b:	nop
   0x00007fdab11a913c:	nop
   0x00007fdab11a913d:	nop
   0x00007fdab11a913e:	nop
   0x00007fdab11a913f:	nop
   0x00007fdab11a9140:	jbe    0x7fdab11a9928
   0x00007fdab11a9146:	cmp    0x30(%rsp),%r10
   0x00007fdab11a914b:	jae    0x7fdab11a9928
   0x00007fdab11a9151:	mov    0x28(%rsp),%ebp
   0x00007fdab11a9155:	cmp    $0xf,%ebp
   0x00007fdab11a9158:	jbe    0x7fdab11a9928
   0x00007fdab11a915e:	mov    0x60(%rsp),%r10
   0x00007fdab11a9163:	cmp    0x30(%rsp),%r10
   0x00007fdab11a9168:	jae    0x7fdab11a9928
   0x00007fdab11a916e:	mov    0xc(%rsp),%ebp
   0x00007fdab11a9172:	test   %ebp,%ebp
   0x00007fdab11a9174:	jbe    0x7fdab11a9928
   0x00007fdab11a917a:	mov    0x58(%rsp),%r10
   0x00007fdab11a917f:	nop
   0x00007fdab11a9180:	cmp    0x38(%rsp),%r10
   0x00007fdab11a9185:	jae    0x7fdab11a9928
   0x00007fdab11a918b:	cmp    $0xf,%ebp
   0x00007fdab11a918e:	jbe    0x7fdab11a9928
   0x00007fdab11a9194:	mov    0x60(%rsp),%r10
   0x00007fdab11a9199:	nop
   0x00007fdab11a919a:	nop
   0x00007fdab11a919b:	nop
   0x00007fdab11a919c:	nop
   0x00007fdab11a919d:	nop
   0x00007fdab11a919e:	nop
   0x00007fdab11a919f:	nop
   0x00007fdab11a91a0:	cmp    0x38(%rsp),%r10
   0x00007fdab11a91a5:	jae    0x7fdab11a9928
   0x00007fdab11a91ab:	mov    0x8(%rsp),%ebp
   0x00007fdab11a91af:	test   %ebp,%ebp
   0x00007fdab11a91b1:	jbe    0x7fdab11a9928
   0x00007fdab11a91b7:	mov    0x28(%rsp),%ebp
   0x00007fdab11a91bb:	nop
   0x00007fdab11a91bc:	nop
   0x00007fdab11a91bd:	nop
   0x00007fdab11a91be:	nop
   0x00007fdab11a91bf:	nop
   0x00007fdab11a91c0:	cmp    $0x7ffffff0,%ebp
   0x00007fdab11a91c6:	jg     0x7fdab11a9968
   0x00007fdab11a91cc:	xor    %ecx,%ecx
   0x00007fdab11a91ce:	jmp    0x7fdab11a91ea
   0x00007fdab11a91d0:	mov    0x128(%r15),%r10
   0x00007fdab11a91d7:	add    $0x10,%ecx
   0x00007fdab11a91da:	test   %eax,(%r10)
   0x00007fdab11a91dd:	nop
   0x00007fdab11a91de:	nop
   0x00007fdab11a91df:	nop
   0x00007fdab11a91e0:	cmp    0x28(%rsp),%ecx
   0x00007fdab11a91e4:	jge    0x7fdab11a90a8
   0x00007fdab11a91ea:	mov    0x140(%r15),%r8
   0x00007fdab11a91f1:	mov    %r8,%r11
   0x00007fdab11a91f4:	add    $0x20,%r11
   0x00007fdab11a91f8:	movslq %ecx,%rbp
   0x00007fdab11a91fb:	mov    (%rsp),%r10
   0x00007fdab11a91ff:	vmovdqu32 0x10(%r10,%rbp,4),%zmm1
   0x00007fdab11a920a:	mov    0x10(%rsp),%r10
   0x00007fdab11a920f:	vmovdqu32 0x10(%r10,%rbp,4),%zmm3
   0x00007fdab11a921a:	nop
   0x00007fdab11a921b:	nop
   0x00007fdab11a921c:	nop
   0x00007fdab11a921d:	nop
   0x00007fdab11a921e:	nop
   0x00007fdab11a921f:	nop
   0x00007fdab11a9220:	cmp    0x150(%r15),%r11
   0x00007fdab11a9227:	jae    0x7fdab11a9570
   0x00007fdab11a922d:	mov    %r11,0x140(%r15)
   0x00007fdab11a9234:	mov    %r8,%r10
   0x00007fdab11a9237:	add    $0x10,%r10
   0x00007fdab11a923b:	movq   $0x1,(%r8)
   0x00007fdab11a9242:	prefetchw 0xc0(%r11)
   0x00007fdab11a924a:	movl   $0x40000,0x8(%r8)
   0x00007fdab11a9252:	prefetchw 0x100(%r11)
   0x00007fdab11a925a:	movl   $0x10,0xc(%r8)
   0x00007fdab11a9262:	prefetchw 0x140(%r11)
   0x00007fdab11a926a:	prefetchw 0x180(%r11)
   0x00007fdab11a9272:	vpxor  %ymm0,%ymm0,%ymm0
   0x00007fdab11a9276:	vmovdqu64 %xmm0,(%r10)
   0x00007fdab11a927c:	mov    0x140(%r15),%rax
   0x00007fdab11a9283:	mov    %rax,%r10
   0x00007fdab11a9286:	add    $0x20,%r10
   0x00007fdab11a928a:	vpcmpnled %zmm3,%zmm1,%k7
   0x00007fdab11a9291:	vpxor  %xmm1,%xmm1,%xmm1
   0x00007fdab11a9295:	vmovdqu8 -0x1216bf(%rip),%xmm1{%k7}        # 0x7fdab1087be0
   0x00007fdab11a929f:	vmovdqu %xmm1,0x10(%r8)
   0x00007fdab11a92a5:	cmp    0x150(%r15),%r10
   0x00007fdab11a92ac:	jae    0x7fdab11a95c6
   0x00007fdab11a92b2:	mov    %r10,0x140(%r15)
   0x00007fdab11a92b9:	prefetchw 0xc0(%r10)
   0x00007fdab11a92c1:	movq   $0x1,(%rax)
   0x00007fdab11a92c8:	prefetchw 0x100(%r10)
   0x00007fdab11a92d0:	movl   $0x40000,0x8(%rax)
   0x00007fdab11a92d7:	prefetchw 0x140(%r10)
   0x00007fdab11a92df:	movl   $0x10,0xc(%rax)
   0x00007fdab11a92e6:	prefetchw 0x180(%r10)
   0x00007fdab11a92ee:	mov    %rax,%r11
   0x00007fdab11a92f1:	add    $0x10,%r11
   0x00007fdab11a92f5:	vpxor  %ymm0,%ymm0,%ymm0
   0x00007fdab11a92f9:	vmovdqu64 %xmm0,(%r11)
   0x00007fdab11a92ff:	mov    0x20(%rsp),%r10
   0x00007fdab11a9304:	vmovdqu 0x10(%r10),%xmm0
   0x00007fdab11a930a:	vpcmpeqb -0x121735(%rip),%xmm0,%k7        # 0x7fdab1087be0
   0x00007fdab11a9315:	vpcmpeqb -0x121740(%rip),%xmm1,%k6        # 0x7fdab1087be0
   0x00007fdab11a9320:	kandw  %k7,%k6,%k7
   0x00007fdab11a9324:	vpxor  %xmm1,%xmm1,%xmm1
   0x00007fdab11a9328:	vmovdqu8 -0x121752(%rip),%xmm1{%k7}        # 0x7fdab1087be0
   0x00007fdab11a9332:	vpxor  %xmm0,%xmm0,%xmm0
   0x00007fdab11a9336:	vmovdqu8 -0x121760(%rip),%xmm0{%k7}        # 0x7fdab1087be0
   0x00007fdab11a9340:	vmovdqu %xmm0,0x10(%rax)
   0x00007fdab11a9345:	mov    0xc(%rax),%edx
   0x00007fdab11a9348:	test   %edx,%edx
   0x00007fdab11a934a:	jbe    0x7fdab11a97b9
   0x00007fdab11a9350:	movzbl 0x10(%rax),%r10d
   0x00007fdab11a9355:	mov    0x18(%rsp),%r11
   0x00007fdab11a935a:	movzbl 0x10(%r11),%r8d
   0x00007fdab11a935f:	nop
   0x00007fdab11a9360:	test   %r8d,%r8d
   0x00007fdab11a9363:	je     0x7fdab11a9878
   0x00007fdab11a9369:	mov    0x10(%rsp),%r11
   0x00007fdab11a936e:	mov    0x10(%r11,%rbp,4),%ebx
   0x00007fdab11a9373:	mov    (%rsp),%r11
   0x00007fdab11a9377:	mov    0x10(%r11,%rbp,4),%r8d
   0x00007fdab11a937c:	nop
   0x00007fdab11a937d:	nop
   0x00007fdab11a937e:	nop
   0x00007fdab11a937f:	nop
   0x00007fdab11a9380:	cmp    %ebx,%r8d
   0x00007fdab11a9383:	jg     0x7fdab11a9885
   0x00007fdab11a9389:	test   %r10d,%r10d
   0x00007fdab11a938c:	jne    0x7fdab11a988d
   0x00007fdab11a9392:	mov    %edx,%edi
   0x00007fdab11a9394:	dec    %edi
   0x00007fdab11a9396:	mov    $0xf,%r10d
   0x00007fdab11a939c:	cmp    %r10d,%edi
   0x00007fdab11a939f:	mov    $0xf,%r11d
   0x00007fdab11a93a5:	cmovg  %r11d,%edi
   0x00007fdab11a93a9:	cmp    $0x1,%edi
   0x00007fdab11a93ac:	jle    0x7fdab11a9744
   0x00007fdab11a93b2:	mov    %rbp,%r8
   0x00007fdab11a93b5:	add    $0x1,%r8
   0x00007fdab11a93b9:	nop
   0x00007fdab11a93ba:	nop
   0x00007fdab11a93bb:	nop
   0x00007fdab11a93bc:	nop
   0x00007fdab11a93bd:	nop
   0x00007fdab11a93be:	nop
   0x00007fdab11a93bf:	nop
   0x00007fdab11a93c0:	cmp    0x38(%rsp),%r8
   0x00007fdab11a93c5:	jae    0x7fdab11a974f
   0x00007fdab11a93cb:	cmp    0x30(%rsp),%r8
   0x00007fdab11a93d0:	jae    0x7fdab11a9763
   0x00007fdab11a93d6:	mov    0x8(%rsp),%r11d
   0x00007fdab11a93db:	nop
   0x00007fdab11a93dc:	nop
   0x00007fdab11a93dd:	nop
   0x00007fdab11a93de:	nop
   0x00007fdab11a93df:	nop
   0x00007fdab11a93e0:	cmp    $0x1,%r11d
   0x00007fdab11a93e4:	jbe    0x7fdab11a9814
   0x00007fdab11a93ea:	cmp    $0x2,%r11d
   0x00007fdab11a93ee:	jbe    0x7fdab11a9828
   0x00007fdab11a93f4:	mov    %rbp,%r10
   0x00007fdab11a93f7:	add    $0x2,%r10
   0x00007fdab11a93fb:	nop
   0x00007fdab11a93fc:	nop
   0x00007fdab11a93fd:	nop
   0x00007fdab11a93fe:	nop
   0x00007fdab11a93ff:	nop
   0x00007fdab11a9400:	cmp    0x30(%rsp),%r10
   0x00007fdab11a9405:	jae    0x7fdab11a9777
   0x00007fdab11a940b:	cmp    0x38(%rsp),%r8
   0x00007fdab11a9410:	jae    0x7fdab11a978b
   0x00007fdab11a9416:	nop
   0x00007fdab11a9417:	nop
   0x00007fdab11a9418:	nop
   0x00007fdab11a9419:	nop
   0x00007fdab11a941a:	nop
   0x00007fdab11a941b:	nop
   0x00007fdab11a941c:	nop
   0x00007fdab11a941d:	nop
   0x00007fdab11a941e:	nop
   0x00007fdab11a941f:	nop
   0x00007fdab11a9420:	cmp    0x38(%rsp),%r10
   0x00007fdab11a9425:	jae    0x7fdab11a979f
   0x00007fdab11a942b:	cmp    $0x1,%edx
   0x00007fdab11a942e:	jbe    0x7fdab11a983c
   0x00007fdab11a9434:	cmp    $0x2,%edx
   0x00007fdab11a9437:	jbe    0x7fdab11a9850
   0x00007fdab11a943d:	movslq %edx,%r10
   0x00007fdab11a9440:	cmp    $0x2,%r10
   0x00007fdab11a9444:	jbe    0x7fdab11a9864
   0x00007fdab11a944a:	mov    $0x1,%r9d
   0x00007fdab11a9450:	movslq %r9d,%r11
   0x00007fdab11a9453:	mov    0x18(%rsp),%r10
   0x00007fdab11a9458:	movzbl 0x10(%r10,%r11,1),%r8d
   0x00007fdab11a945e:	movzbl 0x10(%rax,%r11,1),%r10d
   0x00007fdab11a9464:	test   %r8d,%r8d
   0x00007fdab11a9467:	je     0x7fdab11a9625
   0x00007fdab11a946d:	mov    %rbp,%rsi
   0x00007fdab11a9470:	add    %r11,%rsi
   0x00007fdab11a9473:	mov    0x10(%rsp),%r8
   0x00007fdab11a9478:	mov    0x10(%r8,%rsi,4),%ebx
   0x00007fdab11a947d:	mov    (%rsp),%r8
   0x00007fdab11a9481:	mov    0x10(%r8,%rsi,4),%r8d
   0x00007fdab11a9486:	cmp    %ebx,%r8d
   0x00007fdab11a9489:	jg     0x7fdab11a9684
   0x00007fdab11a948f:	test   %r10d,%r10d
   0x00007fdab11a9492:	jne    0x7fdab11a96e8
   0x00007fdab11a9498:	mov    0x18(%rsp),%r10
   0x00007fdab11a949d:	movzbl 0x11(%r10,%r11,1),%r8d
   0x00007fdab11a94a3:	movzbl 0x11(%rax,%r11,1),%r10d
   0x00007fdab11a94a9:	mov    %r9d,%r11d
   0x00007fdab11a94ac:	inc    %r11d
   0x00007fdab11a94af:	test   %r8d,%r8d
   0x00007fdab11a94b2:	je     0x7fdab11a9628
   0x00007fdab11a94b8:	mov    0x10(%rsp),%r8
   0x00007fdab11a94bd:	mov    0x14(%r8,%rsi,4),%ebx
   0x00007fdab11a94c2:	mov    (%rsp),%r8
   0x00007fdab11a94c6:	mov    0x14(%r8,%rsi,4),%r8d
   0x00007fdab11a94cb:	cmp    %ebx,%r8d
   0x00007fdab11a94ce:	jg     0x7fdab11a9687
   0x00007fdab11a94d4:	test   %r10d,%r10d
   0x00007fdab11a94d7:	jne    0x7fdab11a96eb
   0x00007fdab11a94dd:	add    $0x2,%r9d
   0x00007fdab11a94e1:	cmp    %edi,%r9d
   0x00007fdab11a94e4:	jl     0x7fdab11a9450
   0x00007fdab11a94ea:	cmp    $0x10,%r9d
   0x00007fdab11a94ee:	jge    0x7fdab11a91d0
   0x00007fdab11a94f4:	cmp    %edx,%r9d
   0x00007fdab11a94f7:	jae    0x7fdab11a97b3
   0x00007fdab11a94fd:	movslq %r9d,%r11
   0x00007fdab11a9500:	mov    0x18(%rsp),%r10
   0x00007fdab11a9505:	movzbl 0x10(%r10,%r11,1),%r8d
   0x00007fdab11a950b:	movzbl 0x10(%rax,%r11,1),%r10d
   0x00007fdab11a9511:	test   %r8d,%r8d
   0x00007fdab11a9514:	je     0x7fdab11a9895
   0x00007fdab11a951a:	mov    %rbp,%r8
   0x00007fdab11a951d:	add    %r11,%r8
   0x00007fdab11a9520:	mov    0x10(%rsp),%r11
   0x00007fdab11a9525:	mov    0x10(%r11,%r8,4),%ebx
   0x00007fdab11a952a:	mov    (%rsp),%r11
   0x00007fdab11a952e:	mov    0x10(%r11,%r8,4),%r8d
   0x00007fdab11a9533:	cmp    %ebx,%r8d
   0x00007fdab11a9536:	jg     0x7fdab11a98a5
   0x00007fdab11a953c:	nop
   0x00007fdab11a953d:	nop
   0x00007fdab11a953e:	nop
   0x00007fdab11a953f:	nop
   0x00007fdab11a9540:	test   %r10d,%r10d
   0x00007fdab11a9543:	jne    0x7fdab11a98b1
   0x00007fdab11a9549:	inc    %r9d
   0x00007fdab11a954c:	cmp    $0x10,%r9d
   0x00007fdab11a9550:	jl     0x7fdab11a94f4
   0x00007fdab11a9552:	jmpq   0x7fdab11a91d0
   0x00007fdab11a9557:	vzeroupper 
   0x00007fdab11a955a:	add    $0x110,%rsp
   0x00007fdab11a9561:	pop    %rbp
   0x00007fdab11a9562:	cmp    0x120(%r15),%rsp
   0x00007fdab11a9569:	ja     0x7fdab11a9b10
   0x00007fdab11a956f:	retq   
   0x00007fdab11a9570:	mov    %ecx,0x68(%rsp)
   0x00007fdab11a9574:	vmovdqu64 %zmm3,0xc0(%rsp)
   0x00007fdab11a957c:	vmovdqu64 %zmm1,0x80(%rsp)
   0x00007fdab11a9584:	vmovdqu %xmm2,0x70(%rsp)
   0x00007fdab11a958a:	movabs $0x800040000,%rsi
   0x00007fdab11a9594:	mov    $0x10,%edx
   0x00007fdab11a9599:	nop
   0x00007fdab11a959a:	nop
   0x00007fdab11a959b:	nop
   0x00007fdab11a959c:	vzeroupper 
   0x00007fdab11a959f:	callq  0x7fdab1058520
   0x00007fdab11a95a4:	mov    %rax,%r8
   0x00007fdab11a95a7:	vmovdqu 0x70(%rsp),%xmm2
   0x00007fdab11a95ad:	vmovdqu64 0x80(%rsp),%zmm1
   0x00007fdab11a95b5:	vmovdqu64 0xc0(%rsp),%zmm3
   0x00007fdab11a95bd:	mov    0x68(%rsp),%ecx
   0x00007fdab11a95c1:	jmpq   0x7fdab11a927c
   0x00007fdab11a95c6:	mov    %ecx,0x68(%rsp)
   0x00007fdab11a95ca:	vmovdqu %xmm1,0x80(%rsp)
   0x00007fdab11a95d3:	vmovdqu %xmm2,0x70(%rsp)
   0x00007fdab11a95d9:	movabs $0x800040000,%rsi
   0x00007fdab11a95e3:	vpxor  %xmm0,%xmm0,%xmm0
   0x00007fdab11a95e7:	vmovdqu8 -0x121a11(%rip),%xmm0{%k7}        # 0x7fdab1087be0
   0x00007fdab11a95f1:	mov    $0x10,%edx
   0x00007fdab11a95f6:	vmovdqu %xmm0,0x90(%rsp)
   0x00007fdab11a95ff:	nop
   0x00007fdab11a9600:	vzeroupper 
   0x00007fdab11a9603:	callq  0x7fdab1058520
   0x00007fdab11a9608:	vmovdqu 0x70(%rsp),%xmm2
   0x00007fdab11a960e:	vmovdqu 0x80(%rsp),%xmm1
   0x00007fdab11a9617:	mov    0x68(%rsp),%ecx
   0x00007fdab11a961b:	nop
   0x00007fdab11a961c:	nop
   0x00007fdab11a961d:	nop
   0x00007fdab11a961e:	nop
   0x00007fdab11a961f:	nop
   0x00007fdab11a9620:	jmpq   0x7fdab11a92ff
   0x00007fdab11a9625:	mov    %r9d,%r11d
   0x00007fdab11a9628:	vmovdqu %xmm2,%xmm0
   0x00007fdab11a962c:	mov    $0xffffff45,%esi
   0x00007fdab11a9631:	mov    (%rsp),%rbp
   0x00007fdab11a9635:	mov    0x10(%rsp),%r9
   0x00007fdab11a963a:	mov    %r9,(%rsp)
   0x00007fdab11a963e:	mov    0x18(%rsp),%r9
   0x00007fdab11a9643:	mov    %r9,0x8(%rsp)
   0x00007fdab11a9648:	mov    %ecx,0x14(%rsp)
   0x00007fdab11a964c:	mov    %r11d,0x18(%rsp)
   0x00007fdab11a9651:	mov    %r10d,0x1c(%rsp)
   0x00007fdab11a9656:	mov    %r8d,0x20(%rsp)
   0x00007fdab11a965b:	vmovdqu %xmm1,0x30(%rsp)
   0x00007fdab11a9661:	vmovdqu %xmm0,0x40(%rsp)
   0x00007fdab11a9667:	nop
   0x00007fdab11a9668:	vzeroupper 
   0x00007fdab11a966b:	callq  0x7fdab11199c0
   0x00007fdab11a9670:	movabs $0x7fdabbe701d0,%rdi
   0x00007fdab11a967a:	and    $0xfffffffffffffff0,%rsp
   0x00007fdab11a967e:	callq  0x7fdabb5effb4 <MacroAssembler::debug64(char*, long, long*)>
   0x00007fdab11a9683:	hlt    
   0x00007fdab11a9684:	mov    %r9d,%r11d
   0x00007fdab11a9687:	vmovdqu %xmm2,%xmm0
   0x00007fdab11a968b:	mov    $0xffffff45,%esi
   0x00007fdab11a9690:	mov    (%rsp),%rbp
   0x00007fdab11a9694:	mov    0x10(%rsp),%r9
   0x00007fdab11a9699:	mov    %r9,(%rsp)
   0x00007fdab11a969d:	mov    0x18(%rsp),%r9
   0x00007fdab11a96a2:	mov    %r9,0x8(%rsp)
   0x00007fdab11a96a7:	mov    %ecx,0x14(%rsp)
   0x00007fdab11a96ab:	mov    %r11d,0x18(%rsp)
   0x00007fdab11a96b0:	mov    %r10d,0x1c(%rsp)
   0x00007fdab11a96b5:	mov    %r8d,0x20(%rsp)
   0x00007fdab11a96ba:	mov    %ebx,0x24(%rsp)
   0x00007fdab11a96be:	vmovdqu %xmm1,0x30(%rsp)
   0x00007fdab11a96c4:	vmovdqu %xmm0,0x40(%rsp)
   0x00007fdab11a96ca:	nop
   0x00007fdab11a96cb:	nop
   0x00007fdab11a96cc:	vzeroupper 
   0x00007fdab11a96cf:	callq  0x7fdab11199c0
   0x00007fdab11a96d4:	movabs $0x7fdabbe701d0,%rdi
   0x00007fdab11a96de:	and    $0xfffffffffffffff0,%rsp
   0x00007fdab11a96e2:	callq  0x7fdabb5effb4 <MacroAssembler::debug64(char*, long, long*)>
   0x00007fdab11a96e7:	hlt    
   0x00007fdab11a96e8:	mov    %r9d,%r11d
   0x00007fdab11a96eb:	vmovdqu %xmm2,%xmm0
   0x00007fdab11a96ef:	mov    $0xffffff45,%esi
   0x00007fdab11a96f4:	mov    (%rsp),%rbp
   0x00007fdab11a96f8:	mov    0x10(%rsp),%r8
   0x00007fdab11a96fd:	mov    %r8,(%rsp)
   0x00007fdab11a9701:	mov    0x18(%rsp),%r8
   0x00007fdab11a9706:	mov    %r8,0x8(%rsp)
   0x00007fdab11a970b:	mov    %ecx,0x14(%rsp)
   0x00007fdab11a970f:	mov    %r11d,0x18(%rsp)
   0x00007fdab11a9714:	mov    %r10d,0x1c(%rsp)
   0x00007fdab11a9719:	vmovdqu %xmm1,0x20(%rsp)
   0x00007fdab11a971f:	vmovdqu %xmm0,0x30(%rsp)
   0x00007fdab11a9725:	nop
   0x00007fdab11a9726:	nop
   0x00007fdab11a9727:	nop
   0x00007fdab11a9728:	vzeroupper 
   0x00007fdab11a972b:	callq  0x7fdab11199c0
   0x00007fdab11a9730:	movabs $0x7fdabbe701d0,%rdi
   0x00007fdab11a973a:	and    $0xfffffffffffffff0,%rsp
   0x00007fdab11a973e:	callq  0x7fdabb5effb4 <MacroAssembler::debug64(char*, long, long*)>
   0x00007fdab11a9743:	hlt    
   0x00007fdab11a9744:	mov    $0x1,%r9d
   0x00007fdab11a974a:	jmpq   0x7fdab11a94ea
   0x00007fdab11a974f:	movabs $0x7fdabbff25b0,%rdi
   0x00007fdab11a9759:	and    $0xfffffffffffffff0,%rsp
   0x00007fdab11a975d:	callq  0x7fdabb5effb4 <MacroAssembler::debug64(char*, long, long*)>
   0x00007fdab11a9762:	hlt    
   0x00007fdab11a9763:	movabs $0x7fdabbff25b0,%rdi
   0x00007fdab11a976d:	and    $0xfffffffffffffff0,%rsp
   0x00007fdab11a9771:	callq  0x7fdabb5effb4 <MacroAssembler::debug64(char*, long, long*)>
   0x00007fdab11a9776:	hlt    
   0x00007fdab11a9777:	movabs $0x7fdabbff25b0,%rdi
   0x00007fdab11a9781:	and    $0xfffffffffffffff0,%rsp
   0x00007fdab11a9785:	callq  0x7fdabb5effb4 <MacroAssembler::debug64(char*, long, long*)>
   0x00007fdab11a978a:	hlt    
   0x00007fdab11a978b:	movabs $0x7fdabbff25b0,%rdi
   0x00007fdab11a9795:	and    $0xfffffffffffffff0,%rsp
   0x00007fdab11a9799:	callq  0x7fdabb5effb4 <MacroAssembler::debug64(char*, long, long*)>
   0x00007fdab11a979e:	hlt    
   0x00007fdab11a979f:	movabs $0x7fdabbff25b0,%rdi
   0x00007fdab11a97a9:	and    $0xfffffffffffffff0,%rsp
   0x00007fdab11a97ad:	callq  0x7fdabb5effb4 <MacroAssembler::debug64(char*, long, long*)>
   0x00007fdab11a97b2:	hlt    
   0x00007fdab11a97b3:	vmovdqu %xmm2,%xmm0
   0x00007fdab11a97b7:	jmp    0x7fdab11a97c0
   0x00007fdab11a97b9:	xor    %r9d,%r9d
   0x00007fdab11a97bc:	vmovdqu %xmm2,%xmm0
   0x00007fdab11a97c0:	mov    $0xffffffe4,%esi
   0x00007fdab11a97c5:	mov    (%rsp),%rbp
   0x00007fdab11a97c9:	mov    0x10(%rsp),%r10
   0x00007fdab11a97ce:	mov    %r10,(%rsp)
   0x00007fdab11a97d2:	mov    0x18(%rsp),%r10
   0x00007fdab11a97d7:	mov    %r10,0x8(%rsp)
   0x00007fdab11a97dc:	mov    %ecx,0x14(%rsp)
   0x00007fdab11a97e0:	mov    %rax,0x20(%rsp)
   0x00007fdab11a97e5:	mov    %r9d,0x1c(%rsp)
   0x00007fdab11a97ea:	vmovdqu %xmm1,0x30(%rsp)
   0x00007fdab11a97f0:	vmovdqu %xmm0,0x40(%rsp)
   0x00007fdab11a97f6:	nop
   0x00007fdab11a97f7:	nop
   0x00007fdab11a97f8:	vzeroupper 
   0x00007fdab11a97fb:	callq  0x7fdab11199c0
   0x00007fdab11a9800:	movabs $0x7fdabbe701d0,%rdi
   0x00007fdab11a980a:	and    $0xfffffffffffffff0,%rsp
   0x00007fdab11a980e:	callq  0x7fdabb5effb4 <MacroAssembler::debug64(char*, long, long*)>
   0x00007fdab11a9813:	hlt    
   0x00007fdab11a9814:	movabs $0x7fdabbff25b0,%rdi
   0x00007fdab11a981e:	and    $0xfffffffffffffff0,%rsp
   0x00007fdab11a9822:	callq  0x7fdabb5effb4 <MacroAssembler::debug64(char*, long, long*)>
   0x00007fdab11a9827:	hlt    
   0x00007fdab11a9828:	movabs $0x7fdabbff25b0,%rdi
   0x00007fdab11a9832:	and    $0xfffffffffffffff0,%rsp
   0x00007fdab11a9836:	callq  0x7fdabb5effb4 <MacroAssembler::debug64(char*, long, long*)>
   0x00007fdab11a983b:	hlt    
   0x00007fdab11a983c:	movabs $0x7fdabbff2ea0,%rdi
   0x00007fdab11a9846:	and    $0xfffffffffffffff0,%rsp
   0x00007fdab11a984a:	callq  0x7fdabb5effb4 <MacroAssembler::debug64(char*, long, long*)>
   0x00007fdab11a984f:	hlt    
   0x00007fdab11a9850:	movabs $0x7fdabbff2ea0,%rdi
   0x00007fdab11a985a:	and    $0xfffffffffffffff0,%rsp
   0x00007fdab11a985e:	callq  0x7fdabb5effb4 <MacroAssembler::debug64(char*, long, long*)>
   0x00007fdab11a9863:	hlt    
   0x00007fdab11a9864:	movabs $0x7fdabbff2ea0,%rdi
   0x00007fdab11a986e:	and    $0xfffffffffffffff0,%rsp
   0x00007fdab11a9872:	callq  0x7fdabb5effb4 <MacroAssembler::debug64(char*, long, long*)>
   0x00007fdab11a9877:	hlt    
   0x00007fdab11a9878:	xor    %r11d,%r11d
   0x00007fdab11a987b:	nop
   0x00007fdab11a987c:	nop
   0x00007fdab11a987d:	nop
   0x00007fdab11a987e:	nop
   0x00007fdab11a987f:	nop
   0x00007fdab11a9880:	jmpq   0x7fdab11a9628
   0x00007fdab11a9885:	xor    %r11d,%r11d
   0x00007fdab11a9888:	jmpq   0x7fdab11a9687
   0x00007fdab11a988d:	xor    %r11d,%r11d
   0x00007fdab11a9890:	jmpq   0x7fdab11a96eb
   0x00007fdab11a9895:	mov    %r9d,%r11d
   0x00007fdab11a9898:	vmovdqu %xmm2,%xmm0
   0x00007fdab11a989c:	nop
   0x00007fdab11a989d:	nop
   0x00007fdab11a989e:	nop
   0x00007fdab11a989f:	nop
   0x00007fdab11a98a0:	jmpq   0x7fdab11a962c
   0x00007fdab11a98a5:	mov    %r9d,%r11d
   0x00007fdab11a98a8:	vmovdqu %xmm2,%xmm0
   0x00007fdab11a98ac:	jmpq   0x7fdab11a968b
   0x00007fdab11a98b1:	mov    %r9d,%r11d
   0x00007fdab11a98b4:	vmovdqu %xmm2,%xmm0
   0x00007fdab11a98b8:	jmpq   0x7fdab11a96ef
   0x00007fdab11a98bd:	mov    %r8d,0x8(%rsp)
   0x00007fdab11a98c2:	mov    %rax,%rbp
   0x00007fdab11a98c5:	movabs $0x800040000,%rsi
   0x00007fdab11a98cf:	mov    $0x10,%edx
   0x00007fdab11a98d4:	vzeroupper 
   0x00007fdab11a98d7:	callq  0x7fdab1058520
   0x00007fdab11a98dc:	mov    %rax,%r11
   0x00007fdab11a98df:	mov    %rbp,%rax
   0x00007fdab11a98e2:	jmpq   0x7fdab11a9010
   0x00007fdab11a98e7:	mov    $0xffffff76,%esi
   0x00007fdab11a98ec:	mov    (%rsp),%rbp
   0x00007fdab11a98f0:	mov    0x10(%rsp),%r10
   0x00007fdab11a98f5:	mov    %r10,(%rsp)
   0x00007fdab11a98f9:	mov    0x28(%rsp),%r10d
   0x00007fdab11a98fe:	mov    %r10d,0x14(%rsp)
   0x00007fdab11a9903:	vmovdqu %xmm2,0x20(%rsp)
   0x00007fdab11a9909:	nop
   0x00007fdab11a990a:	nop
   0x00007fdab11a990b:	nop
   0x00007fdab11a990c:	vzeroupper 
   0x00007fdab11a990f:	callq  0x7fdab11199c0
   0x00007fdab11a9914:	movabs $0x7fdabbe701d0,%rdi
   0x00007fdab11a991e:	and    $0xfffffffffffffff0,%rsp
   0x00007fdab11a9922:	callq  0x7fdabb5effb4 <MacroAssembler::debug64(char*, long, long*)>
   0x00007fdab11a9927:	hlt    
   0x00007fdab11a9928:	mov    $0xffffffbe,%esi
   0x00007fdab11a992d:	mov    (%rsp),%rbp
   0x00007fdab11a9931:	mov    0x10(%rsp),%r10
   0x00007fdab11a9936:	mov    %r10,(%rsp)
   0x00007fdab11a993a:	mov    0x28(%rsp),%r11d
   0x00007fdab11a993f:	mov    %r11d,0x14(%rsp)
   0x00007fdab11a9944:	vmovdqu %xmm2,0x20(%rsp)
   0x00007fdab11a994a:	nop
   0x00007fdab11a994b:	nop
   0x00007fdab11a994c:	vzeroupper 
   0x00007fdab11a994f:	callq  0x7fdab11199c0
   0x00007fdab11a9954:	movabs $0x7fdabbe701d0,%rdi
   0x00007fdab11a995e:	and    $0xfffffffffffffff0,%rsp
   0x00007fdab11a9962:	callq  0x7fdabb5effb4 <MacroAssembler::debug64(char*, long, long*)>
   0x00007fdab11a9967:	hlt    
   0x00007fdab11a9968:	mov    $0xffffff6e,%esi
   0x00007fdab11a996d:	mov    (%rsp),%rbp
   0x00007fdab11a9971:	mov    0x10(%rsp),%r10
   0x00007fdab11a9976:	mov    %r10,(%rsp)
   0x00007fdab11a997a:	mov    0x28(%rsp),%r10d
   0x00007fdab11a997f:	mov    %r10d,0x14(%rsp)
   0x00007fdab11a9984:	vmovdqu %xmm2,0x20(%rsp)
   0x00007fdab11a998a:	nop
   0x00007fdab11a998b:	nop
   0x00007fdab11a998c:	vzeroupper 
   0x00007fdab11a998f:	callq  0x7fdab11199c0
   0x00007fdab11a9994:	movabs $0x7fdabbe701d0,%rdi
   0x00007fdab11a999e:	and    $0xfffffffffffffff0,%rsp
   0x00007fdab11a99a2:	callq  0x7fdabb5effb4 <MacroAssembler::debug64(char*, long, long*)>
   0x00007fdab11a99a7:	hlt    
   0x00007fdab11a99a8:	mov    $0xffffffe4,%esi
   0x00007fdab11a99ad:	mov    0x10(%rsp),%r10
   0x00007fdab11a99b2:	mov    %r10,0x8(%rsp)
   0x00007fdab11a99b7:	mov    %rax,0x18(%rsp)
   0x00007fdab11a99bc:	vzeroupper 
   0x00007fdab11a99bf:	callq  0x7fdab11199c0
   0x00007fdab11a99c4:	movabs $0x7fdabbe701d0,%rdi
   0x00007fdab11a99ce:	and    $0xfffffffffffffff0,%rsp
   0x00007fdab11a99d2:	callq  0x7fdabb5effb4 <MacroAssembler::debug64(char*, long, long*)>
   0x00007fdab11a99d7:	hlt    
   0x00007fdab11a99d8:	mov    $0xffffffde,%esi
   0x00007fdab11a99dd:	mov    %rax,%rbp
   0x00007fdab11a99e0:	vzeroupper 
   0x00007fdab11a99e3:	callq  0x7fdab11199c0
   0x00007fdab11a99e8:	movabs $0x7fdabbe701d0,%rdi
   0x00007fdab11a99f2:	and    $0xfffffffffffffff0,%rsp
   0x00007fdab11a99f6:	callq  0x7fdabb5effb4 <MacroAssembler::debug64(char*, long, long*)>
   0x00007fdab11a99fb:	hlt    
   0x00007fdab11a99fc:	mov    $0xffffffde,%esi
   0x00007fdab11a9a01:	mov    %rax,%rbp
   0x00007fdab11a9a04:	vzeroupper 
   0x00007fdab11a9a07:	callq  0x7fdab11199c0
   0x00007fdab11a9a0c:	movabs $0x7fdabbe701d0,%rdi
   0x00007fdab11a9a16:	and    $0xfffffffffffffff0,%rsp
   0x00007fdab11a9a1a:	callq  0x7fdabb5effb4 <MacroAssembler::debug64(char*, long, long*)>
   0x00007fdab11a9a1f:	hlt    
   0x00007fdab11a9a20:	mov    $0xffffffde,%esi
   0x00007fdab11a9a25:	mov    %rax,%rbp
   0x00007fdab11a9a28:	vzeroupper 
   0x00007fdab11a9a2b:	callq  0x7fdab11199c0
   0x00007fdab11a9a30:	movabs $0x7fdabbe701d0,%rdi
   0x00007fdab11a9a3a:	and    $0xfffffffffffffff0,%rsp
   0x00007fdab11a9a3e:	callq  0x7fdabb5effb4 <MacroAssembler::debug64(char*, long, long*)>
   0x00007fdab11a9a43:	hlt    
   0x00007fdab11a9a44:	mov    $0xffffffcc,%esi
   0x00007fdab11a9a49:	mov    0x10(%rsp),%r10
   0x00007fdab11a9a4e:	mov    %r10,0x8(%rsp)
   0x00007fdab11a9a53:	mov    %rax,0x18(%rsp)
   0x00007fdab11a9a58:	vzeroupper 
   0x00007fdab11a9a5b:	callq  0x7fdab11199c0
   0x00007fdab11a9a60:	movabs $0x7fdabbe701d0,%rdi
   0x00007fdab11a9a6a:	and    $0xfffffffffffffff0,%rsp
   0x00007fdab11a9a6e:	callq  0x7fdabb5effb4 <MacroAssembler::debug64(char*, long, long*)>
   0x00007fdab11a9a73:	hlt    
   0x00007fdab11a9a74:	mov    $0xfffffff4,%esi
   0x00007fdab11a9a79:	mov    (%rsp),%rbp
   0x00007fdab11a9a7d:	nop
   0x00007fdab11a9a7e:	nop
   0x00007fdab11a9a7f:	nop
   0x00007fdab11a9a80:	vzeroupper 
   0x00007fdab11a9a83:	callq  0x7fdab11199c0
   0x00007fdab11a9a88:	movabs $0x7fdabbe701d0,%rdi
   0x00007fdab11a9a92:	and    $0xfffffffffffffff0,%rsp
   0x00007fdab11a9a96:	callq  0x7fdabb5effb4 <MacroAssembler::debug64(char*, long, long*)>
End of assembler dump.
