Dump of assembler code from 0x7fed411a6a20 to 0x7fed411a75d8:
   0x00007fed411a6a20:	callq  0x7fed4b62991c <os::breakpoint()>
   0x00007fed411a6a25:	nop
   0x00007fed411a6a26:	nop
   0x00007fed411a6a27:	nop
   0x00007fed411a6a28:	nop
   0x00007fed411a6a29:	nop
   0x00007fed411a6a2a:	nop
   0x00007fed411a6a2b:	nop
   0x00007fed411a6a2c:	nop
   0x00007fed411a6a2d:	nop
   0x00007fed411a6a2e:	nop
   0x00007fed411a6a2f:	nop
   0x00007fed411a6a30:	mov    %eax,-0x16000(%rsp)
   0x00007fed411a6a37:	push   %rbp
   0x00007fed411a6a38:	sub    $0xd0,%rsp
   0x00007fed411a6a3f:	mov    0x48(%rsi),%rbx
   0x00007fed411a6a43:	mov    0x40(%rsi),%rbp
   0x00007fed411a6a47:	mov    0x20(%rsi),%r14d
   0x00007fed411a6a4b:	mov    0x38(%rsi),%r13
   0x00007fed411a6a4f:	mov    0x30(%rsi),%r10
   0x00007fed411a6a53:	mov    %r10,(%rsp)
   0x00007fed411a6a57:	mov    0x28(%rsi),%r11d
   0x00007fed411a6a5b:	mov    %r11d,0x18(%rsp)
   0x00007fed411a6a60:	mov    %rsi,%rdi
   0x00007fed411a6a63:	vzeroupper 
   0x00007fed411a6a66:	movabs $0x7fed4b7280d8,%r10
   0x00007fed411a6a70:	callq  *%r10
   0x00007fed411a6a73:	test   %rbx,%rbx
   0x00007fed411a6a76:	je     0x7fed411a7048
   0x00007fed411a6a7c:	mov    %rbx,%rdx
   0x00007fed411a6a7f:	mov    0x8(%rbx),%r10d
   0x00007fed411a6a83:	cmp    $0x40c30,%r10d
   0x00007fed411a6a8a:	jne    0x7fed411a72ed
   0x00007fed411a6a90:	mov    %rbx,%r10
   0x00007fed411a6a93:	mov    %rbp,%rbx
   0x00007fed411a6a96:	test   %rbp,%rbp
   0x00007fed411a6a99:	je     0x7fed411a7053
   0x00007fed411a6a9f:	mov    0x8(%rbp),%r8d
   0x00007fed411a6aa3:	cmp    $0x40c30,%r8d
   0x00007fed411a6aaa:	jne    0x7fed411a72f6
   0x00007fed411a6ab0:	mov    %rbp,%r9
   0x00007fed411a6ab3:	test   %r13,%r13
   0x00007fed411a6ab6:	je     0x7fed411a705b
   0x00007fed411a6abc:	mov    0x8(%r13),%r11d
   0x00007fed411a6ac0:	cmp    $0x40000,%r11d
   0x00007fed411a6ac7:	jne    0x7fed411a72fc
   0x00007fed411a6acd:	mov    %r13,%rcx
   0x00007fed411a6ad0:	mov    (%rsp),%r8
   0x00007fed411a6ad4:	test   %r8,%r8
   0x00007fed411a6ad7:	je     0x7fed411a7065
   0x00007fed411a6add:	mov    0x8(%r8),%edi
   0x00007fed411a6ae1:	movabs $0x8000ea328,%r11
   0x00007fed411a6aeb:	movabs $0x800000000,%rsi
   0x00007fed411a6af5:	add    %rdi,%rsi
   0x00007fed411a6af8:	mov    0x50(%rsi),%rdi
   0x00007fed411a6afc:	nop
   0x00007fed411a6afd:	nop
   0x00007fed411a6afe:	nop
   0x00007fed411a6aff:	nop
   0x00007fed411a6b00:	cmp    %r11,%rdi
   0x00007fed411a6b03:	jne    0x7fed411a7300
   0x00007fed411a6b09:	jmp    0x7fed411a6b33
   0x00007fed411a6b0b:	mov    0x128(%r15),%r10
   0x00007fed411a6b12:	mov    0x1c(%rsp),%r11d
   0x00007fed411a6b17:	add    $0x10,%r11d
   0x00007fed411a6b1b:	test   %eax,(%r10)
   0x00007fed411a6b1e:	mov    %r11d,%r14d
   0x00007fed411a6b21:	mov    0x10(%rsp),%r8
   0x00007fed411a6b26:	mov    0x20(%rsp),%r10
   0x00007fed411a6b2b:	mov    0x28(%rsp),%r9
   0x00007fed411a6b30:	mov    %rdi,%rcx
   0x00007fed411a6b33:	mov    0xc(%r10),%r11d
   0x00007fed411a6b37:	mov    %r14d,%ebx
   0x00007fed411a6b3a:	nop
   0x00007fed411a6b3b:	nop
   0x00007fed411a6b3c:	nop
   0x00007fed411a6b3d:	nop
   0x00007fed411a6b3e:	nop
   0x00007fed411a6b3f:	nop
   0x00007fed411a6b40:	cmp    %r11d,%r14d
   0x00007fed411a6b43:	jge    0x7fed411a6ecc
   0x00007fed411a6b49:	add    $0xfffffff1,%r11d
   0x00007fed411a6b4d:	test   %r11d,%r11d
   0x00007fed411a6b50:	jl     0x7fed411a714c
   0x00007fed411a6b56:	cmp    %r11d,%r14d
   0x00007fed411a6b59:	jae    0x7fed411a706d
   0x00007fed411a6b5f:	nop
   0x00007fed411a6b60:	mov    0xc(%r9),%r11d
   0x00007fed411a6b64:	add    $0xfffffff1,%r11d
   0x00007fed411a6b68:	vmovdqu32 0x10(%r10,%rbx,4),%zmm1
   0x00007fed411a6b73:	test   %r11d,%r11d
   0x00007fed411a6b76:	jl     0x7fed411a718c
   0x00007fed411a6b7c:	nop
   0x00007fed411a6b7d:	nop
   0x00007fed411a6b7e:	nop
   0x00007fed411a6b7f:	nop
   0x00007fed411a6b80:	cmp    %r11d,%ebx
   0x00007fed411a6b83:	jae    0x7fed411a70ac
   0x00007fed411a6b89:	vmovdqu32 0x10(%r9,%rbx,4),%zmm2
   0x00007fed411a6b94:	mov    0x140(%r15),%rax
   0x00007fed411a6b9b:	mov    %rax,%r11
   0x00007fed411a6b9e:	add    $0x20,%r11
   0x00007fed411a6ba2:	cmp    0x150(%r15),%r11
   0x00007fed411a6ba9:	jae    0x7fed411a6f0f
   0x00007fed411a6baf:	mov    %r11,0x140(%r15)
   0x00007fed411a6bb6:	prefetchw 0xc0(%r11)
   0x00007fed411a6bbe:	movq   $0x1,(%rax)
   0x00007fed411a6bc5:	prefetchw 0x100(%r11)
   0x00007fed411a6bcd:	movl   $0x40000,0x8(%rax)
   0x00007fed411a6bd4:	prefetchw 0x140(%r11)
   0x00007fed411a6bdc:	movl   $0x10,0xc(%rax)
   0x00007fed411a6be3:	prefetchw 0x180(%r11)
   0x00007fed411a6beb:	mov    %rax,%r11
   0x00007fed411a6bee:	add    $0x10,%r11
   0x00007fed411a6bf2:	vpxor  %ymm0,%ymm0,%ymm0
   0x00007fed411a6bf6:	vmovdqu64 %xmm0,(%r11)
   0x00007fed411a6bfc:	vpcmpnled %zmm2,%zmm1,%k7
   0x00007fed411a6c03:	vpxor  %xmm0,%xmm0,%xmm0
   0x00007fed411a6c07:	vmovdqu8 -0x11f031(%rip),%xmm0{%k7}        # 0x7fed41087be0
   0x00007fed411a6c11:	vpxor  %xmm1,%xmm1,%xmm1
   0x00007fed411a6c15:	vmovdqu8 -0x11f03f(%rip),%xmm1{%k7}        # 0x7fed41087be0
   0x00007fed411a6c1f:	vmovdqu %xmm1,0x10(%rax)
   0x00007fed411a6c24:	mov    0x8(%r8),%r11d
   0x00007fed411a6c28:	cmp    $0xed6f8,%r11d
   0x00007fed411a6c2f:	jne    0x7fed411a71d0
   0x00007fed411a6c35:	mov    %r8,%rbp
   0x00007fed411a6c38:	mov    0x140(%r15),%rax
   0x00007fed411a6c3f:	mov    %rax,%r11
   0x00007fed411a6c42:	add    $0x20,%r11
   0x00007fed411a6c46:	cmp    0x150(%r15),%r11
   0x00007fed411a6c4d:	jae    0x7fed411a6f76
   0x00007fed411a6c53:	mov    %rcx,0x30(%rsp)
   0x00007fed411a6c58:	mov    %r9,0x28(%rsp)
   0x00007fed411a6c5d:	mov    %r10,0x20(%rsp)
   0x00007fed411a6c62:	mov    %r8,0x10(%rsp)
   0x00007fed411a6c67:	mov    %ebx,0x1c(%rsp)
   0x00007fed411a6c6b:	mov    %r11,0x140(%r15)
   0x00007fed411a6c72:	prefetchw 0xc0(%r11)
   0x00007fed411a6c7a:	movq   $0x1,(%rax)
   0x00007fed411a6c81:	prefetchw 0x100(%r11)
   0x00007fed411a6c89:	movl   $0x40000,0x8(%rax)
   0x00007fed411a6c90:	prefetchw 0x140(%r11)
   0x00007fed411a6c98:	movl   $0x10,0xc(%rax)
   0x00007fed411a6c9f:	prefetchw 0x180(%r11)
   0x00007fed411a6ca7:	mov    %rax,%r10
   0x00007fed411a6caa:	add    $0x10,%r10
   0x00007fed411a6cae:	vpxor  %ymm0,%ymm0,%ymm0
   0x00007fed411a6cb2:	vmovdqu64 %xmm0,(%r10)
   0x00007fed411a6cb8:	mov    0xc(%rbp),%r10d
   0x00007fed411a6cbc:	vmovdqu 0x10(%r12,%r10,8),%xmm0
   0x00007fed411a6cc3:	vpcmpeqb -0x11f0ee(%rip),%xmm0,%k7        # 0x7fed41087be0
   0x00007fed411a6cce:	vpcmpeqb -0x11f0f9(%rip),%xmm1,%k6        # 0x7fed41087be0
   0x00007fed411a6cd9:	kandw  %k7,%k6,%k7
   0x00007fed411a6cdd:	vpxor  %xmm0,%xmm0,%xmm0
   0x00007fed411a6ce1:	vmovdqu8 -0x11f10b(%rip),%xmm0{%k7}        # 0x7fed41087be0
   0x00007fed411a6ceb:	vmovdqu %xmm0,0x10(%rax)
   0x00007fed411a6cf0:	vpxor  %xmm0,%xmm0,%xmm0
   0x00007fed411a6cf4:	vmovdqu8 -0x11f11e(%rip),%xmm0{%k7}        # 0x7fed41087be0
   0x00007fed411a6cfe:	mov    0x30(%rsp),%r10
   0x00007fed411a6d03:	mov    0xc(%r10),%r9d
   0x00007fed411a6d07:	test   %r9d,%r9d
   0x00007fed411a6d0a:	jbe    0x7fed411a71f4
   0x00007fed411a6d10:	cmp    $0xf,%r9d
   0x00007fed411a6d14:	jbe    0x7fed411a71f4
   0x00007fed411a6d1a:	mov    0xc(%rax),%ecx
   0x00007fed411a6d1d:	nop
   0x00007fed411a6d1e:	nop
   0x00007fed411a6d1f:	nop
   0x00007fed411a6d20:	test   %ecx,%ecx
   0x00007fed411a6d22:	jbe    0x7fed411a7102
   0x00007fed411a6d28:	mov    0x30(%rsp),%rdi
   0x00007fed411a6d2d:	movzbl 0x10(%rax),%r11d
   0x00007fed411a6d32:	movzbl 0x10(%r10),%r10d
   0x00007fed411a6d37:	test   %r10d,%r10d
   0x00007fed411a6d3a:	nop
   0x00007fed411a6d3b:	nop
   0x00007fed411a6d3c:	nop
   0x00007fed411a6d3d:	nop
   0x00007fed411a6d3e:	nop
   0x00007fed411a6d3f:	nop
   0x00007fed411a6d40:	jne    0x7fed411a72cc
   0x00007fed411a6d46:	test   %r11d,%r11d
   0x00007fed411a6d49:	jne    0x7fed411a72d3
   0x00007fed411a6d4f:	mov    %ecx,%r11d
   0x00007fed411a6d52:	dec    %r11d
   0x00007fed411a6d55:	mov    $0xf,%r10d
   0x00007fed411a6d5b:	cmp    %r10d,%r11d
   0x00007fed411a6d5e:	mov    $0xf,%r8d
   0x00007fed411a6d64:	cmovg  %r8d,%r11d
   0x00007fed411a6d68:	mov    %r11d,%r8d
   0x00007fed411a6d6b:	add    $0xfffffffe,%r8d
   0x00007fed411a6d6f:	cmp    %r8d,%r11d
   0x00007fed411a6d72:	mov    $0x80000000,%r10d
   0x00007fed411a6d78:	cmovl  %r10d,%r8d
   0x00007fed411a6d7c:	nop
   0x00007fed411a6d7d:	nop
   0x00007fed411a6d7e:	nop
   0x00007fed411a6d7f:	nop
   0x00007fed411a6d80:	cmp    $0x1,%r8d
   0x00007fed411a6d84:	jle    0x7fed411a70f0
   0x00007fed411a6d8a:	cmp    $0x1,%r9d
   0x00007fed411a6d8e:	jbe    0x7fed411a722c
   0x00007fed411a6d94:	cmp    $0x1,%ecx
   0x00007fed411a6d97:	jbe    0x7fed411a7240
   0x00007fed411a6d9d:	movslq %ecx,%r10
   0x00007fed411a6da0:	cmp    $0x2,%r10
   0x00007fed411a6da4:	jbe    0x7fed411a7254
   0x00007fed411a6daa:	cmp    $0x4,%r10
   0x00007fed411a6dae:	jbe    0x7fed411a7268
   0x00007fed411a6db4:	cmp    $0x3,%ecx
   0x00007fed411a6db7:	jbe    0x7fed411a727c
   0x00007fed411a6dbd:	nop
   0x00007fed411a6dbe:	nop
   0x00007fed411a6dbf:	nop
   0x00007fed411a6dc0:	cmp    $0x1,%ecx
   0x00007fed411a6dc3:	jbe    0x7fed411a7290
   0x00007fed411a6dc9:	cmp    $0x1,%r9d
   0x00007fed411a6dcd:	jbe    0x7fed411a72a4
   0x00007fed411a6dd3:	cmp    $0x4,%r9d
   0x00007fed411a6dd7:	jbe    0x7fed411a72b8
   0x00007fed411a6ddd:	mov    $0x1,%r9d
   0x00007fed411a6de3:	nop
   0x00007fed411a6de4:	nop
   0x00007fed411a6de5:	nop
   0x00007fed411a6de6:	nop
   0x00007fed411a6de7:	nop
   0x00007fed411a6de8:	nop
   0x00007fed411a6de9:	nop
   0x00007fed411a6dea:	nop
   0x00007fed411a6deb:	nop
   0x00007fed411a6dec:	nop
   0x00007fed411a6ded:	nop
   0x00007fed411a6dee:	nop
   0x00007fed411a6def:	nop
   0x00007fed411a6df0:	movslq %r9d,%rdx
   0x00007fed411a6df3:	movzbl 0x10(%rdi,%rdx,1),%r10d
   0x00007fed411a6df9:	movzbl 0x10(%rax,%rdx,1),%r11d
   0x00007fed411a6dff:	nop
   0x00007fed411a6e00:	test   %r10d,%r10d
   0x00007fed411a6e03:	jne    0x7fed411a6fbb
   0x00007fed411a6e09:	test   %r11d,%r11d
   0x00007fed411a6e0c:	jne    0x7fed411a7008
   0x00007fed411a6e12:	movzbl 0x11(%rdi,%rdx,1),%r10d
   0x00007fed411a6e18:	movzbl 0x11(%rax,%rdx,1),%r11d
   0x00007fed411a6e1e:	mov    %r9d,%ebx
   0x00007fed411a6e21:	inc    %ebx
   0x00007fed411a6e23:	test   %r10d,%r10d
   0x00007fed411a6e26:	jne    0x7fed411a6fbe
   0x00007fed411a6e2c:	test   %r11d,%r11d
   0x00007fed411a6e2f:	jne    0x7fed411a700b
   0x00007fed411a6e35:	movzbl 0x12(%rdi,%rdx,1),%r10d
   0x00007fed411a6e3b:	movzbl 0x12(%rax,%rdx,1),%r11d
   0x00007fed411a6e41:	mov    %r9d,%ebx
   0x00007fed411a6e44:	add    $0x2,%ebx
   0x00007fed411a6e47:	test   %r10d,%r10d
   0x00007fed411a6e4a:	jne    0x7fed411a6fbe
   0x00007fed411a6e50:	test   %r11d,%r11d
   0x00007fed411a6e53:	jne    0x7fed411a700b
   0x00007fed411a6e59:	movzbl 0x13(%rax,%rdx,1),%r11d
   0x00007fed411a6e5f:	movzbl 0x13(%rdi,%rdx,1),%r10d
   0x00007fed411a6e65:	mov    %r9d,%ebx
   0x00007fed411a6e68:	add    $0x3,%ebx
   0x00007fed411a6e6b:	test   %r10d,%r10d
   0x00007fed411a6e6e:	jne    0x7fed411a6fbe
   0x00007fed411a6e74:	test   %r11d,%r11d
   0x00007fed411a6e77:	jne    0x7fed411a700b
   0x00007fed411a6e7d:	add    $0x4,%r9d
   0x00007fed411a6e81:	cmp    %r8d,%r9d
   0x00007fed411a6e84:	jl     0x7fed411a6df0
   0x00007fed411a6e8a:	cmp    $0x10,%r9d
   0x00007fed411a6e8e:	jge    0x7fed411a6b0b
   0x00007fed411a6e94:	cmp    %ecx,%r9d
   0x00007fed411a6e97:	jae    0x7fed411a70fb
   0x00007fed411a6e9d:	movslq %r9d,%r11
   0x00007fed411a6ea0:	movzbl 0x10(%rdi,%r11,1),%r10d
   0x00007fed411a6ea6:	movzbl 0x10(%rax,%r11,1),%r11d
   0x00007fed411a6eac:	test   %r10d,%r10d
   0x00007fed411a6eaf:	jne    0x7fed411a72da
   0x00007fed411a6eb5:	test   %r11d,%r11d
   0x00007fed411a6eb8:	jne    0x7fed411a72e5
   0x00007fed411a6ebe:	inc    %r9d
   0x00007fed411a6ec1:	cmp    $0x10,%r9d
   0x00007fed411a6ec5:	jl     0x7fed411a6e94
   0x00007fed411a6ec7:	jmpq   0x7fed411a6b0b
   0x00007fed411a6ecc:	mov    0x128(%r15),%rbx
   0x00007fed411a6ed3:	mov    0x18(%rsp),%r11d
   0x00007fed411a6ed8:	inc    %r11d
   0x00007fed411a6edb:	test   %eax,(%rbx)
   0x00007fed411a6edd:	nop
   0x00007fed411a6ede:	nop
   0x00007fed411a6edf:	nop
   0x00007fed411a6ee0:	cmp    $0x2710,%r11d
   0x00007fed411a6ee7:	jge    0x7fed411a6ef6
   0x00007fed411a6ee9:	xor    %r14d,%r14d
   0x00007fed411a6eec:	mov    %r11d,0x18(%rsp)
   0x00007fed411a6ef1:	jmpq   0x7fed411a6b33
   0x00007fed411a6ef6:	vzeroupper 
   0x00007fed411a6ef9:	add    $0xd0,%rsp
   0x00007fed411a6f00:	pop    %rbp
   0x00007fed411a6f01:	cmp    0x120(%r15),%rsp
   0x00007fed411a6f08:	ja     0x7fed411a73f0
   0x00007fed411a6f0e:	retq   
   0x00007fed411a6f0f:	vmovdqu64 %zmm2,0x80(%rsp)
   0x00007fed411a6f17:	vmovdqu64 %zmm1,0x40(%rsp)
   0x00007fed411a6f1f:	mov    %rcx,0x20(%rsp)
   0x00007fed411a6f24:	mov    %r9,0x10(%rsp)
   0x00007fed411a6f29:	mov    %r10,0x8(%rsp)
   0x00007fed411a6f2e:	mov    %r8,(%rsp)
   0x00007fed411a6f32:	mov    %ebx,%ebp
   0x00007fed411a6f34:	movabs $0x800040000,%rsi
   0x00007fed411a6f3e:	mov    $0x10,%edx
   0x00007fed411a6f43:	nop
   0x00007fed411a6f44:	vzeroupper 
   0x00007fed411a6f47:	callq  0x7fed41058520
   0x00007fed411a6f4c:	mov    %ebp,%ebx
   0x00007fed411a6f4e:	mov    (%rsp),%r8
   0x00007fed411a6f52:	mov    0x8(%rsp),%r10
   0x00007fed411a6f57:	mov    0x10(%rsp),%r9
   0x00007fed411a6f5c:	mov    0x20(%rsp),%rcx
   0x00007fed411a6f61:	vmovdqu64 0x40(%rsp),%zmm1
   0x00007fed411a6f69:	vmovdqu64 0x80(%rsp),%zmm2
   0x00007fed411a6f71:	jmpq   0x7fed411a6bfc
   0x00007fed411a6f76:	vmovdqu %xmm1,0x40(%rsp)
   0x00007fed411a6f7c:	mov    %rcx,0x30(%rsp)
   0x00007fed411a6f81:	mov    %r9,0x28(%rsp)
   0x00007fed411a6f86:	mov    %r10,0x20(%rsp)
   0x00007fed411a6f8b:	mov    %r8,0x10(%rsp)
   0x00007fed411a6f90:	mov    %ebx,0x1c(%rsp)
   0x00007fed411a6f94:	movabs $0x800040000,%rsi
   0x00007fed411a6f9e:	vmovdqu %xmm0,(%rsp)
   0x00007fed411a6fa3:	mov    $0x10,%edx
   0x00007fed411a6fa8:	vzeroupper 
   0x00007fed411a6fab:	callq  0x7fed41058520
   0x00007fed411a6fb0:	vmovdqu 0x40(%rsp),%xmm1
   0x00007fed411a6fb6:	jmpq   0x7fed411a6cb8
   0x00007fed411a6fbb:	mov    %r9d,%ebx
   0x00007fed411a6fbe:	mov    $0xffffff45,%esi
   0x00007fed411a6fc3:	mov    0x20(%rsp),%rbp
   0x00007fed411a6fc8:	rex.W pushq 0x28(%rsp)
   0x00007fed411a6fcd:	rex.W popq (%rsp)
   0x00007fed411a6fd1:	mov    %rdi,0x8(%rsp)
   0x00007fed411a6fd6:	mov    %ebx,0x20(%rsp)
   0x00007fed411a6fda:	mov    %r11d,0x24(%rsp)
   0x00007fed411a6fdf:	mov    %r10d,0x28(%rsp)
   0x00007fed411a6fe4:	vmovdqu %xmm0,0x30(%rsp)
   0x00007fed411a6fea:	nop
   0x00007fed411a6feb:	nop
   0x00007fed411a6fec:	vzeroupper 
   0x00007fed411a6fef:	callq  0x7fed411199c0
   0x00007fed411a6ff4:	movabs $0x7fed4bd2b1d0,%rdi
   0x00007fed411a6ffe:	and    $0xfffffffffffffff0,%rsp
   0x00007fed411a7002:	callq  0x7fed4b4aafb4 <MacroAssembler::debug64(char*, long, long*)>
   0x00007fed411a7007:	hlt    
   0x00007fed411a7008:	mov    %r9d,%ebx
   0x00007fed411a700b:	mov    $0xffffff45,%esi
   0x00007fed411a7010:	mov    0x20(%rsp),%rbp
   0x00007fed411a7015:	mov    %rdi,0x8(%rsp)
   0x00007fed411a701a:	mov    %ebx,0x20(%rsp)
   0x00007fed411a701e:	mov    %r11d,0x24(%rsp)
   0x00007fed411a7023:	vmovdqu %xmm0,0x30(%rsp)
   0x00007fed411a7029:	nop
   0x00007fed411a702a:	nop
   0x00007fed411a702b:	nop
   0x00007fed411a702c:	vzeroupper 
   0x00007fed411a702f:	callq  0x7fed411199c0
   0x00007fed411a7034:	movabs $0x7fed4bd2b1d0,%rdi
   0x00007fed411a703e:	and    $0xfffffffffffffff0,%rsp
   0x00007fed411a7042:	callq  0x7fed4b4aafb4 <MacroAssembler::debug64(char*, long, long*)>
   0x00007fed411a7047:	hlt    
   0x00007fed411a7048:	xor    %r10d,%r10d
   0x00007fed411a704b:	mov    %rbx,%rdx
   0x00007fed411a704e:	jmpq   0x7fed411a6a93
   0x00007fed411a7053:	xor    %r9d,%r9d
   0x00007fed411a7056:	jmpq   0x7fed411a6ab3
   0x00007fed411a705b:	xor    %ecx,%ecx
   0x00007fed411a705d:	nop
   0x00007fed411a705e:	nop
   0x00007fed411a705f:	nop
   0x00007fed411a7060:	jmpq   0x7fed411a6ad0
   0x00007fed411a7065:	xor    %r8d,%r8d
   0x00007fed411a7068:	jmpq   0x7fed411a6b33
   0x00007fed411a706d:	mov    $0xffffffe4,%esi
   0x00007fed411a7072:	mov    %r9,(%rsp)
   0x00007fed411a7076:	mov    %rcx,0x8(%rsp)
   0x00007fed411a707b:	mov    %r8,0x10(%rsp)
   0x00007fed411a7080:	mov    %r10,0x20(%rsp)
   0x00007fed411a7085:	mov    %r14d,0x28(%rsp)
   0x00007fed411a708a:	mov    %r11d,0x2c(%rsp)
   0x00007fed411a708f:	nop
   0x00007fed411a7090:	vzeroupper 
   0x00007fed411a7093:	callq  0x7fed411199c0
   0x00007fed411a7098:	movabs $0x7fed4bd2b1d0,%rdi
   0x00007fed411a70a2:	and    $0xfffffffffffffff0,%rsp
   0x00007fed411a70a6:	callq  0x7fed4b4aafb4 <MacroAssembler::debug64(char*, long, long*)>
   0x00007fed411a70ab:	hlt    
   0x00007fed411a70ac:	mov    $0xffffffe4,%esi
   0x00007fed411a70b1:	mov    %r10,%rbp
   0x00007fed411a70b4:	mov    %rcx,0x8(%rsp)
   0x00007fed411a70b9:	mov    %r8,0x10(%rsp)
   0x00007fed411a70be:	mov    %r9,0x20(%rsp)
   0x00007fed411a70c3:	mov    %ebx,0x28(%rsp)
   0x00007fed411a70c7:	mov    %r11d,0x2c(%rsp)
   0x00007fed411a70cc:	vmovdqu64 %zmm1,0x40(%rsp)
   0x00007fed411a70d4:	vzeroupper 
   0x00007fed411a70d7:	callq  0x7fed411199c0
   0x00007fed411a70dc:	movabs $0x7fed4bd2b1d0,%rdi
   0x00007fed411a70e6:	and    $0xfffffffffffffff0,%rsp
   0x00007fed411a70ea:	callq  0x7fed4b4aafb4 <MacroAssembler::debug64(char*, long, long*)>
   0x00007fed411a70ef:	hlt    
   0x00007fed411a70f0:	mov    $0x1,%r9d
   0x00007fed411a70f6:	jmpq   0x7fed411a6e8a
   0x00007fed411a70fb:	mov    %rdi,%r10
   0x00007fed411a70fe:	nop
   0x00007fed411a70ff:	nop
   0x00007fed411a7100:	jmp    0x7fed411a7105
   0x00007fed411a7102:	xor    %r9d,%r9d
   0x00007fed411a7105:	mov    $0xffffffe4,%esi
   0x00007fed411a710a:	mov    0x20(%rsp),%rbp
   0x00007fed411a710f:	rex.W pushq 0x28(%rsp)
   0x00007fed411a7114:	rex.W popq (%rsp)
   0x00007fed411a7118:	mov    %r10,0x8(%rsp)
   0x00007fed411a711d:	mov    %rax,0x28(%rsp)
   0x00007fed411a7122:	mov    %r9d,0x24(%rsp)
   0x00007fed411a7127:	vmovdqu %xmm0,0x30(%rsp)
   0x00007fed411a712d:	nop
   0x00007fed411a712e:	nop
   0x00007fed411a712f:	nop
   0x00007fed411a7130:	vzeroupper 
   0x00007fed411a7133:	callq  0x7fed411199c0
   0x00007fed411a7138:	movabs $0x7fed4bd2b1d0,%rdi
   0x00007fed411a7142:	and    $0xfffffffffffffff0,%rsp
   0x00007fed411a7146:	callq  0x7fed4b4aafb4 <MacroAssembler::debug64(char*, long, long*)>
   0x00007fed411a714b:	hlt    
   0x00007fed411a714c:	mov    $0xffffffcc,%esi
   0x00007fed411a7151:	mov    %r9,(%rsp)
   0x00007fed411a7155:	mov    %rcx,0x8(%rsp)
   0x00007fed411a715a:	mov    %r8,0x10(%rsp)
   0x00007fed411a715f:	mov    %r10,0x20(%rsp)
   0x00007fed411a7164:	mov    %r14d,0x28(%rsp)
   0x00007fed411a7169:	mov    %r11d,0x2c(%rsp)
   0x00007fed411a716e:	nop
   0x00007fed411a716f:	nop
   0x00007fed411a7170:	vzeroupper 
   0x00007fed411a7173:	callq  0x7fed411199c0
   0x00007fed411a7178:	movabs $0x7fed4bd2b1d0,%rdi
   0x00007fed411a7182:	and    $0xfffffffffffffff0,%rsp
   0x00007fed411a7186:	callq  0x7fed4b4aafb4 <MacroAssembler::debug64(char*, long, long*)>
   0x00007fed411a718b:	hlt    
   0x00007fed411a718c:	mov    $0xffffffcc,%esi
   0x00007fed411a7191:	mov    %r10,%rbp
   0x00007fed411a7194:	mov    %rcx,0x8(%rsp)
   0x00007fed411a7199:	mov    %r8,0x10(%rsp)
   0x00007fed411a719e:	mov    %r9,0x20(%rsp)
   0x00007fed411a71a3:	mov    %ebx,0x28(%rsp)
   0x00007fed411a71a7:	mov    %r11d,0x2c(%rsp)
   0x00007fed411a71ac:	vmovdqu64 %zmm1,0x40(%rsp)
   0x00007fed411a71b4:	vzeroupper 
   0x00007fed411a71b7:	callq  0x7fed411199c0
   0x00007fed411a71bc:	movabs $0x7fed4bd2b1d0,%rdi
   0x00007fed411a71c6:	and    $0xfffffffffffffff0,%rsp
   0x00007fed411a71ca:	callq  0x7fed4b4aafb4 <MacroAssembler::debug64(char*, long, long*)>
   0x00007fed411a71cf:	hlt    
   0x00007fed411a71d0:	mov    $0xffffffde,%esi
   0x00007fed411a71d5:	mov    %r8,%rbp
   0x00007fed411a71d8:	vzeroupper 
   0x00007fed411a71db:	callq  0x7fed411199c0
   0x00007fed411a71e0:	movabs $0x7fed4bd2b1d0,%rdi
   0x00007fed411a71ea:	and    $0xfffffffffffffff0,%rsp
   0x00007fed411a71ee:	callq  0x7fed4b4aafb4 <MacroAssembler::debug64(char*, long, long*)>
   0x00007fed411a71f3:	hlt    
   0x00007fed411a71f4:	mov    $0xffffff76,%esi
   0x00007fed411a71f9:	mov    0x20(%rsp),%rbp
   0x00007fed411a71fe:	rex.W pushq 0x28(%rsp)
   0x00007fed411a7203:	rex.W popq (%rsp)
   0x00007fed411a7207:	vmovdqu %xmm0,0x20(%rsp)
   0x00007fed411a720d:	nop
   0x00007fed411a720e:	nop
   0x00007fed411a720f:	nop
   0x00007fed411a7210:	vzeroupper 
   0x00007fed411a7213:	callq  0x7fed411199c0
   0x00007fed411a7218:	movabs $0x7fed4bd2b1d0,%rdi
   0x00007fed411a7222:	and    $0xfffffffffffffff0,%rsp
   0x00007fed411a7226:	callq  0x7fed4b4aafb4 <MacroAssembler::debug64(char*, long, long*)>
   0x00007fed411a722b:	hlt    
   0x00007fed411a722c:	movabs $0x7fed4bead5b0,%rdi
   0x00007fed411a7236:	and    $0xfffffffffffffff0,%rsp
   0x00007fed411a723a:	callq  0x7fed4b4aafb4 <MacroAssembler::debug64(char*, long, long*)>
   0x00007fed411a723f:	hlt    
   0x00007fed411a7240:	movabs $0x7fed4beadea0,%rdi
   0x00007fed411a724a:	and    $0xfffffffffffffff0,%rsp
   0x00007fed411a724e:	callq  0x7fed4b4aafb4 <MacroAssembler::debug64(char*, long, long*)>
   0x00007fed411a7253:	hlt    
   0x00007fed411a7254:	movabs $0x7fed4beadea0,%rdi
   0x00007fed411a725e:	and    $0xfffffffffffffff0,%rsp
   0x00007fed411a7262:	callq  0x7fed4b4aafb4 <MacroAssembler::debug64(char*, long, long*)>
   0x00007fed411a7267:	hlt    
   0x00007fed411a7268:	movabs $0x7fed4bead5b0,%rdi
   0x00007fed411a7272:	and    $0xfffffffffffffff0,%rsp
   0x00007fed411a7276:	callq  0x7fed4b4aafb4 <MacroAssembler::debug64(char*, long, long*)>
   0x00007fed411a727b:	hlt    
   0x00007fed411a727c:	movabs $0x7fed4bead5b0,%rdi
   0x00007fed411a7286:	and    $0xfffffffffffffff0,%rsp
   0x00007fed411a728a:	callq  0x7fed4b4aafb4 <MacroAssembler::debug64(char*, long, long*)>
   0x00007fed411a728f:	hlt    
   0x00007fed411a7290:	movabs $0x7fed4bead5b0,%rdi
   0x00007fed411a729a:	and    $0xfffffffffffffff0,%rsp
   0x00007fed411a729e:	callq  0x7fed4b4aafb4 <MacroAssembler::debug64(char*, long, long*)>
   0x00007fed411a72a3:	hlt    
   0x00007fed411a72a4:	movabs $0x7fed4bead5b0,%rdi
   0x00007fed411a72ae:	and    $0xfffffffffffffff0,%rsp
   0x00007fed411a72b2:	callq  0x7fed4b4aafb4 <MacroAssembler::debug64(char*, long, long*)>
   0x00007fed411a72b7:	hlt    
   0x00007fed411a72b8:	movabs $0x7fed4bead5b0,%rdi
   0x00007fed411a72c2:	and    $0xfffffffffffffff0,%rsp
   0x00007fed411a72c6:	callq  0x7fed4b4aafb4 <MacroAssembler::debug64(char*, long, long*)>
   0x00007fed411a72cb:	hlt    
   0x00007fed411a72cc:	xor    %ebx,%ebx
   0x00007fed411a72ce:	jmpq   0x7fed411a6fbe
   0x00007fed411a72d3:	xor    %ebx,%ebx
   0x00007fed411a72d5:	jmpq   0x7fed411a700b
   0x00007fed411a72da:	mov    %r9d,%ebx
   0x00007fed411a72dd:	nop
   0x00007fed411a72de:	nop
   0x00007fed411a72df:	nop
   0x00007fed411a72e0:	jmpq   0x7fed411a6fbe
   0x00007fed411a72e5:	mov    %r9d,%ebx
   0x00007fed411a72e8:	jmpq   0x7fed411a700b
   0x00007fed411a72ed:	mov    %rbp,%rbx
   0x00007fed411a72f0:	mov    (%rsp),%r8
   0x00007fed411a72f4:	jmp    0x7fed411a7300
   0x00007fed411a72f6:	mov    (%rsp),%r8
   0x00007fed411a72fa:	jmp    0x7fed411a7300
   0x00007fed411a72fc:	mov    (%rsp),%r8
   0x00007fed411a7300:	mov    $0xffffff8d,%esi
   0x00007fed411a7305:	mov    %r8,%rbp
   0x00007fed411a7308:	mov    %rax,-0x8(%rsp)
   0x00007fed411a730d:	mov    0x18(%rsp),%eax
   0x00007fed411a7311:	mov    %eax,(%rsp)
   0x00007fed411a7314:	mov    -0x8(%rsp),%rax
   0x00007fed411a7319:	mov    %r14d,0x4(%rsp)
   0x00007fed411a731e:	mov    %rdx,0x8(%rsp)
   0x00007fed411a7323:	mov    %rbx,0x10(%rsp)
   0x00007fed411a7328:	mov    %r13,0x18(%rsp)
   0x00007fed411a732d:	nop
   0x00007fed411a732e:	nop
   0x00007fed411a732f:	nop
   0x00007fed411a7330:	vzeroupper 
   0x00007fed411a7333:	callq  0x7fed411199c0
   0x00007fed411a7338:	movabs $0x7fed4bd2b1d0,%rdi
   0x00007fed411a7342:	and    $0xfffffffffffffff0,%rsp
   0x00007fed411a7346:	callq  0x7fed4b4aafb4 <MacroAssembler::debug64(char*, long, long*)>
   0x00007fed411a734b:	hlt    
   0x00007fed411a734c:	mov    $0xfffffff6,%esi
   0x00007fed411a7351:	nop
   0x00007fed411a7352:	nop
   0x00007fed411a7353:	nop
   0x00007fed411a7354:	vzeroupper 
   0x00007fed411a7357:	callq  0x7fed411199c0
   0x00007fed411a735c:	movabs $0x7fed4bd2b1d0,%rdi
   0x00007fed411a7366:	and    $0xfffffffffffffff0,%rsp
   0x00007fed411a736a:	callq  0x7fed4b4aafb4 <MacroAssembler::debug64(char*, long, long*)>
   0x00007fed411a736f:	hlt    
   0x00007fed411a7370:	mov    $0xfffffff6,%esi
   0x00007fed411a7375:	nop
   0x00007fed411a7376:	nop
   0x00007fed411a7377:	nop
   0x00007fed411a7378:	vzeroupper 
   0x00007fed411a737b:	callq  0x7fed411199c0
   0x00007fed411a7380:	movabs $0x7fed4bd2b1d0,%rdi
   0x00007fed411a738a:	and    $0xfffffffffffffff0,%rsp
   0x00007fed411a738e:	callq  0x7fed4b4aafb4 <MacroAssembler::debug64(char*, long, long*)>
   0x00007fed411a7393:	hlt    
   0x00007fed411a7394:	mov    $0xffffff45,%esi
   0x00007fed411a7399:	mov    %r10,%rbp
   0x00007fed411a739c:	mov    %r9,(%rsp)
   0x00007fed411a73a0:	mov    %rcx,0x8(%rsp)
   0x00007fed411a73a5:	mov    %ebx,0x1c(%rsp)
   0x00007fed411a73a9:	mov    %r8,0x20(%rsp)
   0x00007fed411a73ae:	mov    %r8,0x28(%rsp)
   0x00007fed411a73b3:	vmovdqu %xmm0,0x40(%rsp)
   0x00007fed411a73b9:	nop
   0x00007fed411a73ba:	nop
   0x00007fed411a73bb:	nop
   0x00007fed411a73bc:	vzeroupper 
   0x00007fed411a73bf:	callq  0x7fed411199c0
   0x00007fed411a73c4:	movabs $0x7fed4bd2b1d0,%rdi
   0x00007fed411a73ce:	and    $0xfffffffffffffff0,%rsp
   0x00007fed411a73d2:	callq  0x7fed4b4aafb4 <MacroAssembler::debug64(char*, long, long*)>
   0x00007fed411a73d7:	hlt    
   0x00007fed411a73d8:	mov    %rax,%rsi
   0x00007fed411a73db:	jmp    0x7fed411a73e0
   0x00007fed411a73dd:	mov    %rax,%rsi
   0x00007fed411a73e0:	vzeroupper 
   0x00007fed411a73e3:	add    $0xd0,%rsp
   0x00007fed411a73ea:	pop    %rbp
   0x00007fed411a73eb:	jmpq   0x7fed410563a0
   0x00007fed411a73f0:	movabs $0x7fed411a6f01,%r10
   0x00007fed411a73fa:	mov    %r10,0x3d8(%r15)
   0x00007fed411a7401:	jmpq   0x7fed41118720
   0x00007fed411a7406:	hlt    
   0x00007fed411a7407:	hlt    
   0x00007fed411a7408:	hlt    
   0x00007fed411a7409:	hlt    
   0x00007fed411a740a:	hlt    
   0x00007fed411a740b:	hlt    
   0x00007fed411a740c:	hlt    
   0x00007fed411a740d:	hlt    
   0x00007fed411a740e:	hlt    
   0x00007fed411a740f:	hlt    
   0x00007fed411a7410:	hlt    
   0x00007fed411a7411:	hlt    
   0x00007fed411a7412:	hlt    
   0x00007fed411a7413:	hlt    
   0x00007fed411a7414:	hlt    
   0x00007fed411a7415:	hlt    
   0x00007fed411a7416:	hlt    
   0x00007fed411a7417:	hlt    
   0x00007fed411a7418:	hlt    
   0x00007fed411a7419:	hlt    
   0x00007fed411a741a:	hlt    
   0x00007fed411a741b:	hlt    
   0x00007fed411a741c:	hlt    
   0x00007fed411a741d:	hlt    
   0x00007fed411a741e:	hlt    
   0x00007fed411a741f:	hlt    
   0x00007fed411a7420:	jmpq   0x7fed4105c220
   0x00007fed411a7425:	callq  0x7fed411a742a
   0x00007fed411a742a:	subq   $0x5,(%rsp)
   0x00007fed411a742f:	jmpq   0x7fed41119ce0
   0x00007fed411a7434:	hlt    
   0x00007fed411a7435:	hlt    
   0x00007fed411a7436:	hlt    
   0x00007fed411a7437:	hlt    
   0x00007fed411a7438:	cmp    %cl,%cl
   0x00007fed411a743a:	movb   $0x1,(%rcx)
   0x00007fed411a743d:	add    %al,(%rax)
   0x00007fed411a743f:	add    %bl,%al
   0x00007fed411a7441:	leaveq 
   0x00007fed411a7442:	movb   $0x1,(%rcx)
   0x00007fed411a7445:	add    %al,(%rax)
   0x00007fed411a7447:	add    %ah,0x1010002(%rax)
   0x00007fed411a744d:	add    %al,(%rax)
   0x00007fed411a744f:	add    %dh,0x49(%rax)
   0x00007fed411a7452:	rex.WRXB add %r8b,(%r9)
   0x00007fed411a7455:	add    %al,(%rax)
   0x00007fed411a7457:	add    %dh,(%rax)
   0x00007fed411a7459:	callq  0x7fed411b74ad
   0x00007fed411a745e:	add    %al,(%rax)
   0x00007fed411a7460:	lock enterq $0x1c6,$0x1
   0x00007fed411a7465:	add    %al,(%rax)
   0x00007fed411a7467:	add    %dh,0x1010bb2(%rax)
   0x00007fed411a746d:	add    %al,(%rax)
   0x00007fed411a746f:	add    %dh,%al
   0x00007fed411a7471:	vpandn %xmm4,%xmm1,%xmm5
   0x00007fed411a7475:	jg     0x7fed411a7477
   0x00007fed411a7477:	add    %cl,(%rax)
   0x00007fed411a7479:	(bad)  
   0x00007fed411a747a:	(bad)  
   0x00007fed411a747b:	fsubrp %st,%st(4)
   0x00007fed411a747d:	jg     0x7fed411a747f
   0x00007fed411a747f:	add    %bh,(%rax)
   0x00007fed411a7481:	mov    (%rcx),%ebx
   0x00007fed411a7483:	fsubrp %st,%st(4)
   0x00007fed411a7485:	jg     0x7fed411a7487
   0x00007fed411a7487:	add    %al,0x3f(%rax)
   0x00007fed411a748a:	xchg   %eax,%esp
   0x00007fed411a748b:	fucomip %st(4),%st
   0x00007fed411a748d:	jg     0x7fed411a748f
   0x00007fed411a748f:	add    %dh,(%rax)
   0x00007fed411a7491:	or     $0x4,%al
   0x00007fed411a7493:	add    %cl,(%rax)
   0x00007fed411a7495:	add    %al,(%rax)
   0x00007fed411a7497:	add    %al,(%rax)
   0x00007fed411a7499:	add    %al,(%rax,%rax,1)
   0x00007fed411a749c:	or     %al,(%rax)
   0x00007fed411a749e:	add    %al,(%rax)
   0x00007fed411a74a0:	loopne 0x7fed411a7445
   0x00007fed411a74a2:	sti    
   0x00007fed411a74a3:	fucomip %st(4),%st
   0x00007fed411a74a5:	jg     0x7fed411a74a7
   0x00007fed411a74a7:	add    %ch,(%rax)
   0x00007fed411a74a9:	cmp    (%rcx),%bl
   0x00007fed411a74ab:	fsubrp %st,%st(4)
   0x00007fed411a74ad:	jg     0x7fed411a74af
   0x00007fed411a74af:	add    %ah,-0x1320044a(%rax)
   0x00007fed411a74b5:	jg     0x7fed411a74b7
   0x00007fed411a74b7:	add    %dh,(%rax)
   0x00007fed411a74b9:	xlat   %ds:(%rbx)
   0x00007fed411a74ba:	(bad)  
   0x00007fed411a74bb:	fsubrp %st,%st(4)
   0x00007fed411a74bd:	jg     0x7fed411a74bf
   0x00007fed411a74bf:	add    %cl,(%rax)
   0x00007fed411a74c1:	(bad)  
   0x00007fed411a74c2:	xchg   %eax,%esi
   0x00007fed411a74c3:	fucomip %st(4),%st
   0x00007fed411a74c5:	jg     0x7fed411a74c7
   0x00007fed411a74c7:	add    %cl,%al
   0x00007fed411a74c9:	jae    0x7fed411a74c6
   0x00007fed411a74cb:	fucomip %st(4),%st
   0x00007fed411a74cd:	jg     0x7fed411a74cf
   0x00007fed411a74cf:	add    %al,0x4b(%rax)
   0x00007fed411a74d2:	sbb    %ebx,%esi
   0x00007fed411a74d4:	in     (%dx),%al
   0x00007fed411a74d5:	jg     0x7fed411a74d7
   0x00007fed411a74d7:	add    %ch,(%rax)
   0x00007fed411a74d9:	sub    %bl,(%rcx)
   0x00007fed411a74db:	fsubrp %st,%st(4)
   0x00007fed411a74dd:	jg     0x7fed411a74df
   0x00007fed411a74df:	add    %ah,0x71(%rax)
   0x00007fed411a74e2:	sti    
   0x00007fed411a74e3:	fucomip %st(4),%st
   0x00007fed411a74e5:	jg     0x7fed411a74e7
   0x00007fed411a74e7:	add    %bh,%al
   0x00007fed411a74e9:	(bad)  
   0x00007fed411a74ea:	(bad)  
   0x00007fed411a74eb:	add    %cl,(%rax)
   0x00007fed411a74ed:	add    %al,(%rax)
   0x00007fed411a74ef:	add    %ch,-0x1321f491(%rax)
   0x00007fed411a74f5:	jg     0x7fed411a74f7
   0x00007fed411a74f7:	add    %ah,%al
   0x00007fed411a74f9:	outsb  %ds:(%rsi),(%dx)
   0x00007fed411a74fa:	or     %esi,%ebx
   0x00007fed411a74fc:	in     (%dx),%al
   0x00007fed411a74fd:	jg     0x7fed411a74ff
   0x00007fed411a74ff:	add    %bh,%al
   0x00007fed411a7501:	(bad)  
   0x00007fed411a7502:	xchg   %eax,%esp
   0x00007fed411a7503:	fucomip %st(4),%st
   0x00007fed411a7505:	jg     0x7fed411a7507
   0x00007fed411a7507:	add    %bl,-0x1321e663(%rax)
   0x00007fed411a750d:	jg     0x7fed411a750f
   0x00007fed411a750f:	add    %bl,(%rax)
   0x00007fed411a7511:	xchg   %eax,%edx
   0x00007fed411a7512:	sbb    %ebx,%esi
   0x00007fed411a7514:	in     (%dx),%al
   0x00007fed411a7515:	jg     0x7fed411a7517
   0x00007fed411a7517:	add    %al,(%rax)
   0x00007fed411a7519:	(bad)  
   0x00007fed411a751a:	xchg   %eax,%edx
   0x00007fed411a751b:	fucomip %st(4),%st
   0x00007fed411a751d:	jg     0x7fed411a751f
   0x00007fed411a751f:	add    %al,0x31(%rax)
   0x00007fed411a7522:	xchg   %eax,%esi
   0x00007fed411a7523:	fucomip %st(4),%st
   0x00007fed411a7525:	jg     0x7fed411a7527
   0x00007fed411a7527:	add    %dl,0x70(%rax)
   0x00007fed411a752a:	(bad)  
   0x00007fed411a752b:	add    %cl,(%rax)
   0x00007fed411a752d:	add    %al,(%rax)
   0x00007fed411a752f:	add    %bl,0xa(%rax)
   0x00007fed411a7532:	adc    $0xde,%al
   0x00007fed411a7534:	in     (%dx),%al
   0x00007fed411a7535:	jg     0x7fed411a7537
   0x00007fed411a7537:	add    %dh,0x8000ed0(%rax)
   0x00007fed411a753d:	add    %al,(%rax)
   0x00007fed411a753f:	add    %bh,-0x1321ef95(%rax)
   0x00007fed411a7545:	jg     0x7fed411a7547
   0x00007fed411a7547:	add    %bl,0x8000fe5(%rax)
   0x00007fed411a754d:	add    %al,(%rax)
   0x00007fed411a754f:	add    %al,0x21(%rax)
   0x00007fed411a7552:	and    %ebx,%esi
   0x00007fed411a7554:	in     (%dx),%al
   0x00007fed411a7555:	jg     0x7fed411a7557
   0x00007fed411a7557:	add    %bl,(%rax)
   0x00007fed411a7559:	and    (%rcx),%ah
   0x00007fed411a755b:	fsubrp %st,%st(4)
   0x00007fed411a755d:	jg     0x7fed411a755f
   0x00007fed411a755f:	add    %bh,%bh
   0x00007fed411a7561:	add    %al,(%rcx)
   0x00007fed411a7563:	push   %rdx
   0x00007fed411a7564:	add    %al,(%rax)
   0x00007fed411a7566:	add    %al,(%rax)
   0x00007fed411a7568:	add    %edx,0x7000000(%rdx)
   0x00007fed411a756e:	add    (%rdx),%al
   0x00007fed411a7570:	add    %al,(%rax)
   0x00007fed411a7572:	add    %cl,0x203(%rip)        # 0x7fed411a777b
   0x00007fed411a7578:	add    %dl,(%rbx)
   0x00007fed411a757a:	add    $0x0,%al
   0x00007fed411a757c:	add    %al,(%rax)
   0x00007fed411a757e:	add    %al,(%rax)
   0x00007fed411a7580:	add    %edi,0xd000000(%rdx)
   0x00007fed411a7586:	add    %al,(%rax)
   0x00007fed411a7588:	add    %al,(%rax)
   0x00007fed411a758a:	add    %al,(%rax)
   0x00007fed411a758c:	add    %al,%dl
   0x00007fed411a758e:	add    %eax,(%rax)
   0x00007fed411a7590:	retq   $0x2
   0x00007fed411a7593:	rolb   %cl,(%rax,%rax,1)
   0x00007fed411a7596:	(bad)  
   0x00007fed411a7597:	add    %al,%cl
   0x00007fed411a7599:	add    %al,(%rax)
   0x00007fed411a759b:	rorl   %cl,(%rax)
   0x00007fed411a759d:	add    %al,(%rax)
   0x00007fed411a759f:	add    %al,(%rax)
   0x00007fed411a75a1:	add    %al,(%rax)
   0x00007fed411a75a3:	add    %al,(%rax)
   0x00007fed411a75a5:	add    %al,(%rcx)
   0x00007fed411a75a7:	lret   $0x2500
   0x00007fed411a75aa:	add    %al,(%rax)
   0x00007fed411a75ac:	add    %al,(%rcx)
   0x00007fed411a75ae:	pop    %rdi
   0x00007fed411a75af:	add    %al,(%rax)
   0x00007fed411a75b1:	add    %cl,0x19(%rdi,%rax,1)
   0x00007fed411a75b5:	add    %al,(%rax)
   0x00007fed411a75b7:	add    %dl,0x8(%rdx)
   0x00007fed411a75ba:	add    $0x0,%al
   0x00007fed411a75bc:	add    %al,(%rax)
   0x00007fed411a75be:	pop    %rax
   0x00007fed411a75bf:	or     %ebx,(%rbx)
   0x00007fed411a75c1:	add    %al,(%rax)
   0x00007fed411a75c3:	add    %cl,0xa(%rdi,%rax,1)
   0x00007fed411a75c7:	add    %al,(%rax)
   0x00007fed411a75c9:	add    %ah,0x2c(%rdx,%rcx,1)
   0x00007fed411a75cd:	add    %al,(%rax)
   0x00007fed411a75cf:	add    %ch,0xb(%rdx)
   0x00007fed411a75d2:	add    $0x0,%al
   0x00007fed411a75d4:	add    %al,(%rax)
   0x00007fed411a75d6:	pop    %rax
   0x00007fed411a75d7:	or     %esp,(%rax)
End of assembler dump.
