
Patch moves the definition of two existing vector re-interpretation APIs viewAsIntegralLanes and viewAsFloatingPointLanes into concrete vector class.
Currently both these APIs typecast the result using abstract vector classes, this result in emission of checkcast bytecode.
While generating CheckCastPP IR node, compiler consults speculative type (populated using ReceiverTypeProfile information generated by full profiling mode of C1 compiler) and tries to cast the object using most granular instance type [1]. In non-tiered compilation mode compiler does not find profile information and hence casting is performed using abstract vector type, this inhabits de-virtulization of vector length and type accessors since receiver isan abstract vector node and finally lead to intrinsificaiton failure of subsequent vector operation.

By moving these routines to concrete vector classes we can typecast the results using concrete vector types which will ensure that inline expanders
constraints for constant vector length and vector types are met.

Kindly review and share your feedback.
